// Cell: bAC217_L6_MC_38015c3bc0_0_0
/*
{
  "id" : "bAC217_L6_MC_38015c3bc0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10769, -14.5581, -1.28568, 3.47159", "0.97266, -13.1566, -1.15776, 5.7463", "0.837634, -11.7551, -1.02984, 7.24579", "0.702608, -10.3536, -0.901916, 8.48761", "0.567581, -8.95209, -0.773994, 10.1714", "0.432555, -7.55059, -0.646072, 11.9512", "0.297528, -6.14909, -0.518149, 13.6591", "0.162502, -4.74759, -0.390227, 14.521", "0.0274756, -3.34609, -0.262305, 15.3268", "-0.107551, -1.94459, -0.134383, 15.6875", "-0.242577, -0.543095, -0.00646127, 15.6148", "-0.377604, 0.858404, 0.121461, 15.2713", "-0.51263, 2.2599, 0.249383, 14.3032", "-0.647656, 3.6614, 0.377305, 13.4674", "-0.782683, 5.0629, 0.505227, 12.0636", "-0.917709, 6.4644, 0.633149, 10.8584", "-1.05274, 7.8659, 0.761071, 9.75206", "-1.18776, 9.2674, 0.888993, 8.24243", "-1.32279, 10.6689, 1.01692, 6.68054", "-1.45781, 12.0704, 1.14484, 5.41959", "-1.59284, 13.4719, 1.27276, 3.12647" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.72433, 12.6215, 0.328394, 5.16", "-2.17433, 13.0007, 0.328394, 5.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000035582915904
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.404331, -15.6378, -11.2916, 4.64", "-0.404331, -15.6378, -11.2916, 4.64", "-1.87871, -19.0525, -12.0807, 3.24", "-2.69627, -20.946, -12.5182, 3.02", "-3.7073, -23.2876, -13.0593, 2.87", "-4.92637, -26.111, -13.7118, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000035582915904
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.59284, 13.4719, 1.27276, 0.69465", "-3.03134, 28.4028, 1.27276, 0.69465", "-4.46985, 43.3336, 1.27276, 0.69465" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-2.17433, 13.0007, 0.328394, 2.8", "-2.65917, 16.2159, 0.328394, 2.8", "-2.83626, 17.3919, 0.328394, 2.8", "-3.17767, 19.6591, 0.328394, 3.02", "-3.42358, 21.2922, 0.328394, 3.02", "-3.47126, 21.6088, 0.328394, 3.02", "-3.62123, 22.6047, 0.328394, 2.43", "-3.74211, 23.3909, 0.328394, 2.43" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.17433, 13.0007, 0.328394, 1.77", "-3.46166, 14.1931, 1.58772, 1.77", "-4.0941, 14.7652, 2.09461, 0.88", "-6.81308, 17.1612, 3.95877, 0.74", "-7.50317, 17.7909, 4.38499, 0.74", "-8.55227, 18.7803, 4.89861, 0.96", "-9.18228, 19.382, 5.12518, 0.66", "-9.72404, 19.8911, 5.16348, 0.74", "-10.1128, 20.2472, 5.05546, 0.81", "-10.6063, 20.6832, 4.72611, 0.81", "-11.5357, 21.4725, 3.99359, 0.81", "-12.0521, 21.9164, 3.52135, 0.96", "-12.6867, 22.5063, 2.84129, 0.96", "-12.8427, 22.675, 2.6436, 1.33", "-13.458, 23.476, 1.71417, 1.33", "-13.7439, 24.0093, 0.914268, 0.52", "-13.8823, 24.4004, 0.299352, 0.52", "-13.9921, 24.8579, -0.420662, 0.52", "-14.0741, 25.3403, -1.17105, 1.11", "-14.145, 25.8268, -1.92758, 1.4", "-14.5089, 28.3107, -5.75919, 0.52", "-14.5545, 28.5383, -6.13468, 0.66", "-14.6246, 28.7458, -6.49342, 0.81", "-14.7061, 28.8961, -6.75583, 0.81", "-15.1942, 29.4909, -7.77893, 0.81", "-15.4821, 29.7418, -8.15693, 1.11", "-16.2795, 30.2515, -8.67116, 1.11", "-16.8625, 30.6155, -9.04062, 0.44", "-17.1895, 30.8193, -9.24075, 0.44", "-17.8506, 31.2522, -9.62386, 0.52", "-18.1907, 31.5274, -9.89362, 0.37", "-18.3513, 31.7189, -10.1078, 0.37", "-18.5557, 32.0642, -10.4502, 0.37", "-18.6211, 32.1727, -10.5528, 0.52", "-18.7988, 32.4384, -10.7947, 0.81", "-19.9932, 34.0434, -12.1407, 0.52", "-20.1396, 34.2306, -12.2907, 0.52", "-20.9817, 35.2433, -13.0571, 0.37", "-21.5597, 35.8491, -13.4783, 0.29", "-22.098, 36.37, -13.8331, 0.29", "-22.5332, 36.7585, -14.0726, 0.29", "-22.8635, 37.0413, -14.2014, 0.29", "-23.0172, 37.1717, -14.2734, 0.29", "-23.5668, 37.6201, -14.776, 0.29", "-24.2042, 38.1349, -15.4977, 0.96", "-24.2515, 38.1696, -15.5535, 1.11", "-24.7112, 38.4694, -16.1193, 0.44", "-25.2474, 38.7743, -16.7618, 0.44", "-26.8319, 39.6122, -18.5871, 0.44", "-27.214, 39.8075, -19.009, 0.96", "-27.4175, 39.9008, -19.2379, 0.96", "-27.9944, 40.1045, -19.9001, 0.44", "-28.3322, 40.1891, -20.3596, 0.44", "-28.6069, 40.2482, -20.8149, 0.44", "-28.7452, 40.2669, -21.0946, 0.44", "-29.6807, 40.325, -23.2721, 0.59", "-29.9819, 40.3209, -24.0274, 0.59", "-30.9122, 40.2733, -26.4597, 0.59", "-31.4819, 40.2339, -28.0476, 0.59", "-32.2702, 40.1485, -30.2496, 0.88", "-32.6154, 40.0963, -31.2246, 0.59", "-32.992, 40.0333, -32.2251, 0.22", "-33.1239, 40.0146, -32.5602, 0.22", "-33.9928, 39.8927, -34.4137, 0.81", "-34.2801, 39.8712, -34.9296, 1.55", "-35.8746, 39.9149, -37.4015, 0.52", "-36.1922, 39.9384, -37.8685, 0.52", "-36.4234, 39.9561, -38.1857, 0.44", "-36.9748, 39.9868, -38.864, 0.37", "-37.5073, 40.0177, -39.4305, 0.37", "-37.6029, 40.0219, -39.5442, 0.59", "-38.2639, 39.9914, -40.354, 0.59", "-38.5317, 39.9487, -40.7242, 0.59", "-38.838, 39.8615, -41.1543, 0.59", "-40.1226, 39.3694, -42.9606, 0.59", "-40.8716, 39.0751, -44.0575, 0.96", "-41.2445, 38.9247, -44.62, 0.59", "-41.5079, 38.8028, -45.0786, 0.22", "-41.937, 38.5872, -45.8724, 0.22", "-42.2876, 38.4067, -46.6193, 0.29", "-42.987, 38.0392, -48.387, 0.81", "-43.0994, 37.9784, -48.6929, 1.4", "-43.9568, 37.4703, -51.311, 0.59", "-44.1096, 37.3607, -51.8675, 0.96", "-45.1252, 36.5082, -55.9515, 1.33", "-45.9902, 35.6478, -59.5402, 0.59", "-46.118, 35.4976, -60.0581, 0.44", "-46.2861, 35.2763, -60.7048, 0.44", "-46.9359, 34.2039, -63.18, 0.44", "-47.0953, 33.9053, -63.7735, 0.44", "-47.2509, 33.5902, -64.3265, 0.44", "-47.6868, 32.7938, -65.754, 0.44", "-47.9616, 32.3452, -66.7511, 0.44", "-48.6701, 31.268, -69.3726, 0.44", "-48.9496, 30.8476, -70.4637, 0.88", "-49.5707, 29.868, -73.5428, 0.59", "-49.6148, 29.7978, -73.7899, 0.59", "-50.2025, 28.8415, -77.5126, 0.22", "-50.2734, 28.7219, -77.99, 0.52", "-50.3187, 28.6423, -78.277, 0.52", "-51.218, 26.9882, -83.6685, 0.52", "-51.298, 26.8456, -84.0913, 0.88", "-51.926, 25.8046, -87.1051, 0.37", "-52.0192, 25.6591, -87.4914, 0.37", "-52.421, 25.0409, -89.0456, 0.44", "-53.309, 23.682, -92.0213, 0.52", "-53.8089, 22.8985, -93.19, 0.59", "-53.9922, 22.5944, -93.5822, 0.22", "-54.209, 22.2043, -93.9652, 0.22", "-54.4174, 21.7716, -94.3594, 0.22", "-54.6172, 21.2839, -94.7675, 0.22", "-54.9801, 20.3026, -95.2386, 0.22", "-55.1247, 19.8994, -95.4003, 0.66", "-55.2078, 19.6619, -95.4839, 0.66", "-55.6726, 18.4177, -95.8577, 0.66", "-56.0101, 17.5883, -96.0582, 0.29", "-56.2979, 16.9237, -96.1929, 0.29", "-56.7432, 15.9426, -96.3422, 0.29", "-57.0623, 15.2484, -96.4334, 1.25", "-57.7204, 13.8071, -96.6017, 0.37", "-58.127, 12.9283, -96.6763, 0.37", "-58.545, 11.9658, -96.8408, 0.37", "-58.8739, 11.1552, -97.0694, 0.37", "-59.1911, 10.293, -97.4078, 0.96", "-59.5037, 9.42594, -97.8587, 0.52", "-59.6077, 9.17202, -98.0305, 0.52", "-60.3048, 7.76609, -99.3224, 0.52", "-60.4279, 7.57832, -99.529, 0.52", "-60.7756, 7.17075, -100.055, 0.52", "-61.3759, 6.57501, -100.912, 0.52", "-62.167, 5.89272, -102.009, 0.52", "-63.193, 5.07049, -103.349, 0.52", "-63.7865, 4.62655, -104.122, 0.29", "-64.4189, 4.15371, -104.981, 0.44", "-64.8738, 3.80084, -105.649, 0.44", "-65.8156, 3.02054, -107.083, 0.07", "-66.1098, 2.75883, -107.555, 0.96", "-67.1546, 1.79188, -109.194, 0.29", "-67.5269, 1.42891, -109.809, 0.29", "-68.1205, 0.828258, -110.802, 0.74", "-68.4552, 0.459776, -111.33, 0.74", "-69.2305, -0.486197, -112.5, 0.07", "-69.4861, -0.815707, -112.994, 0.07", "-69.5477, -0.897055, -113.12, 0.74", "-70.0672, -1.53965, -114.282, 0.22", "-70.6112, -2.12121, -115.475, 0.29", "-70.9647, -2.45028, -116.258, 1.11", "-72.8344, -3.91507, -120.349, 0.15", "-73.0858, -4.08819, -120.917, 0.15", "-73.7001, -4.47927, -122.412, 0.15", "-74.162, -4.73476, -123.559, 0.15", "-74.5959, -4.94091, -124.671, 0.74", "-75.3628, -5.28234, -126.62, 0.44", "-75.9975, -5.54744, -128.137, 0.44", "-77.1849, -6.08233, -131.245, 0.44", "-77.3021, -6.15244, -131.59, 0.74" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-4.92637, -26.111, -13.7118, 1.47", "-5.24596, -27.9969, -14.5952, 1.47", "-5.24356, -29.4675, -15.3527, 1.47", "-5.02163, -30.8809, -16.2713, 1.25", "-4.67883, -32.3426, -17.2412, 1.4", "-4.39859, -33.1458, -17.9182, 1.4", "-3.97709, -34.1797, -18.8659, 1.18", "-3.40529, -35.1646, -19.8829, 1.18", "-2.49992, -36.3673, -21.3103, 1.18", "-1.97203, -36.9356, -22.074, 1.18", "-0.00370187, -38.7169, -24.8819, 1.62", "0.351189, -39.0161, -25.4378, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.92637, -26.111, -13.7118, 2.06", "-3.54242, -28.69, -14.1776, 2.06", "-2.73389, -30.1967, -14.4497, 1.99", "-2.21858, -31.157, -14.6232, 1.99", "-1.29998, -32.8688, -14.9324, 1.99", "-0.341163, -34.6555, -15.2551, 2.65", "0.165127, -35.599, -15.4256, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.46985, 43.3336, 1.27276, 0.332332", "-5.90835, 58.2645, 1.27276, 0.332332", "-7.34685, 73.1954, 1.27276, 0.332332" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-3.74211, 23.3909, 0.328394, 1.92", "-4.15982, 24.3497, -0.139089, 1.92", "-5.02404, 26.2869, -0.987671, 1.77", "-5.93703, 28.1489, -1.67825, 1.77", "-6.3924, 29.0732, -1.92505, 1.62", "-6.59744, 29.4867, -2.01258, 1.62", "-7.16458, 30.6306, -2.2547, 1.62", "-7.72935, 31.788, -2.43505, 1.62", "-8.61908, 33.5224, -2.49089, 1.84", "-9.42064, 34.9637, -2.46959, 1.84", "-9.58708, 35.2547, -2.44363, 1.84" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-3.74211, 23.3909, 0.328394, 1.92", "-3.91042, 24.1407, -0.0085088, 1.92", "-4.16732, 25.2252, -0.54835, 0.52", "-4.44321, 26.369, -1.18166, 0.52", "-4.63254, 27.3298, -1.72947, 0.52", "-4.76032, 28.2488, -2.24058, 0.52", "-4.83885, 29.2377, -2.7572, 0.52", "-4.81529, 30.185, -3.23758, 0.52", "-4.77303, 30.6528, -3.46108, 0.52", "-4.6393, 31.3732, -3.74, 0.59", "-4.47975, 32.1522, -3.95445, 0.59", "-4.32504, 32.9669, -4.16987, 0.59", "-4.23631, 33.7661, -4.43673, 0.59", "-4.28529, 34.3091, -4.67806, 0.59", "-4.52304, 35.0228, -5.07324, 0.66", "-4.92512, 35.7902, -5.56512, 0.66", "-5.37301, 36.4886, -6.05995, 0.88", "-6.0105, 37.3986, -6.75165, 0.81", "-6.52388, 38.1049, -7.31239, 0.66", "-6.92552, 38.742, -7.91511, 0.66", "-7.0917, 39.1523, -8.35844, 0.66", "-7.04315, 39.4861, -8.77702, 0.66", "-6.76897, 39.8145, -9.21137, 0.88", "-6.54486, 39.9836, -9.43555, 0.88", "-5.10368, 40.9413, -10.6609, 0.59", "-4.71588, 41.2094, -10.988, 0.59", "-4.13567, 41.6663, -11.4916, 0.59", "-3.59782, 42.1756, -11.9904, 0.59", "-3.09036, 42.7973, -12.5536, 0.59", "-2.90886, 43.0735, -12.7702, 0.59", "-2.48881, 43.8414, -13.2558, 0.81", "-2.23838, 44.3164, -13.5659, 0.81", "-1.93721, 44.8694, -13.9506, 0.74", "-1.25875, 45.9238, -14.8684, 0.88", "-0.932789, 46.0985, -15.2305, 0.88", "-0.586626, 46.1432, -15.558, 0.59", "-0.192093, 46.1494, -15.9154, 0.59", "0.434413, 46.1817, -16.5165, 0.59", "1.10002, 46.3063, -17.2804, 0.59", "2.72855, 46.7539, -19.2158, 0.59", "3.06805, 46.8593, -19.6274, 0.59", "3.81794, 47.122, -20.5766, 0.44", "4.46289, 47.3737, -21.3986, 0.44", "5.62032, 47.9145, -22.9578, 0.52", "6.14311, 48.1892, -23.6805, 0.52", "6.6327, 48.4308, -24.386, 0.52", "7.33503, 48.6947, -25.3318, 0.74", "7.97631, 48.874, -26.0931, 1.33", "9.21156, 49.195, -27.4659, 0.88", "9.49202, 49.2868, -27.7795, 0.88", "10.0502, 49.5532, -28.4788, 0.37", "10.7118, 49.971, -29.3326, 0.37", "11.1557, 50.2778, -29.8976, 0.37", "11.7814, 50.7294, -30.685, 0.66", "12.3648, 51.1352, -31.3762, 0.66", "13.057, 51.6283, -32.2309, 0.22", "13.7557, 52.1699, -33.125, 0.37", "14.309, 52.666, -34.0048, 0.52" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-3.74211, 23.3909, 0.328394, 0.52", "-1.66104, 25.5399, 2.12172, 0.52", "-0.721437, 26.5721, 2.81333, 1.62", "-0.235446, 27.1233, 3.13256, 1.55", "0.357832, 27.8093, 3.48114, 1.18", "0.92544, 28.4725, 3.79228, 1.18", "0.962897, 28.5164, 3.81134, 1.18", "1.41699, 29.0214, 4.03307, 1.18", "2.03206, 29.7712, 4.57122, 1.33", "2.36412, 30.1682, 4.9185, 1.69", "2.42613, 30.2391, 4.99514, 1.69", "2.64928, 30.4819, 5.30996, 1.69", "4.30394, 32.2159, 7.84867, 2.21", "4.49889, 32.4046, 8.19982, 2.21" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.351189, -39.0161, -25.4378, 1.03", "-0.277814, -39.8762, -26.096, 1.03", "-1.68671, -41.677, -27.2578, 0.66", "-2.55466, -42.7466, -27.9521, 0.66", "-3.10984, -43.3828, -28.4319, 0.96", "-3.72467, -44.0162, -28.9895, 0.96", "-4.42273, -44.6658, -29.6042, 0.96", "-5.15235, -45.2773, -30.2505, 1.11", "-6.25979, -46.1824, -31.1625, 0.88", "-7.28387, -47.105, -32.1411, 1.18", "-8.08335, -47.8654, -32.9365, 0.66", "-8.58672, -48.3627, -33.4524, 0.66", "-9.45531, -49.2475, -34.347, 0.66", "-10.022, -49.8338, -34.9111, 0.81", "-10.7181, -50.5417, -35.4725, 0.81", "-11.1648, -51.0098, -35.7867, 1.03", "-11.6926, -51.5623, -36.1387, 1.03", "-12.3474, -52.2078, -36.5502, 0.96", "-13.0119, -52.7944, -36.9176, 1.18", "-13.877, -53.5041, -37.3404, 1.18", "-14.9752, -54.3629, -37.8403, 1.33", "-15.9312, -55.0823, -38.2565, 1.33", "-17.0456, -55.9014, -38.7124, 1.25", "-17.9291, -56.5143, -39.053, 1.25", "-19.314, -57.3932, -39.5687, 1.25", "-20.4853, -58.0283, -39.9768, 1.25", "-21.209, -58.3634, -40.2192, 0.88", "-21.7702, -58.5963, -40.4047, 0.88", "-22.5872, -58.9124, -40.6735, 0.66", "-23.1794, -59.1532, -40.878, 0.66", "-24.0389, -59.5768, -41.2375, 0.88", "-24.7184, -59.9899, -41.5218, 0.88", "-25.3885, -60.4532, -41.7982, 0.88", "-26.0746, -60.9613, -42.063, 1.03", "-26.5819, -61.3509, -42.2374, 1.03", "-27.6943, -62.278, -42.6336, 0.96", "-28.7205, -63.1981, -42.9888, 0.96", "-29.5198, -63.9541, -43.3004, 1.03", "-29.849, -64.2828, -43.4518, 1.25", "-30.1446, -64.5833, -43.6283, 1.25", "-30.9972, -65.4531, -44.1449, 0.74", "-31.5261, -66.0291, -44.4988, 0.74", "-32.0606, -66.6954, -44.9756, 1.18", "-32.6793, -67.5357, -45.6519, 1.18", "-33.5822, -68.7715, -46.7392, 1.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.351189, -39.0161, -25.4378, 0.96", "1.25936, -40.5998, -25.7405, 0.96", "1.86636, -41.7215, -25.914, 0.59", "2.58206, -43.1179, -26.0949, 0.59", "3.2404, -44.5994, -26.2575, 0.81", "3.65315, -45.6648, -26.414, 0.88", "3.88881, -46.3531, -26.5761, 0.88", "4.01221, -46.9252, -26.6972, 0.37", "4.10819, -47.4816, -26.8216, 0.37", "4.25918, -48.3998, -27.1066, 0.37", "4.48829, -49.7282, -27.5726, 0.96", "4.75475, -51.2454, -28.1896, 0.96", "5.11338, -53.2129, -29.0315, 0.88", "5.28991, -54.1381, -29.4221, 0.88", "5.81507, -56.4696, -30.3503, 1.18", "5.94122, -56.9177, -30.5065, 0.29", "6.23033, -57.894, -30.7643, 0.37", "6.39924, -58.4704, -30.8894, 0.37", "6.61846, -59.3557, -31.1345, 0.37", "6.69267, -59.7881, -31.2394, 0.37", "6.78313, -60.6489, -31.4835, 0.37", "6.81023, -61.2037, -31.7051, 0.37", "6.81697, -61.8992, -32.0258, 0.52", "6.79917, -63.1052, -32.6901, 0.81", "6.72137, -64.3224, -33.4105, 0.96", "6.59179, -66.0214, -34.4115, 0.96", "6.53606, -66.9074, -34.9318, 0.59", "6.52992, -68.0421, -35.5402, 0.59", "6.66715, -69.5889, -36.2289, 0.88", "6.85231, -70.5721, -36.5529, 0.88", "7.13395, -71.6558, -36.8043, 0.59", "7.32362, -72.3082, -36.9065, 0.59", "7.8646, -74.0036, -37.2538, 0.59", "8.45074, -75.6531, -37.6264, 0.59", "8.79503, -76.5368, -37.8936, 0.59", "9.20312, -77.5817, -38.3453, 1.03", "9.41398, -78.1655, -38.6903, 1.03", "10.0749, -80.0622, -39.9904, 0.96", "10.4359, -81.0945, -40.8303, 0.96", "11.1283, -83.074, -42.5749, 0.96", "11.6443, -84.4941, -43.8529, 1.18", "12.4108, -86.4418, -45.6037, 1.18", "12.7188, -87.1522, -46.2058, 1.18", "13.4798, -88.7714, -47.5028, 0.52", "13.7511, -89.3223, -47.9184, 0.52", "14.106, -89.9526, -48.3385, 0.81", "15.0474, -91.3694, -49.2901, 0.81", "15.9969, -92.7439, -50.2366, 0.81", "17.0249, -94.2599, -51.3251, 1.11", "17.5665, -95.0802, -51.9447, 1.11", "18.5286, -96.6436, -53.2063, 1.11", "19.3803, -98.187, -54.4869, 0.81", "19.9868, -99.4921, -55.6059, 0.81", "20.156, -99.9532, -56.0001, 0.81", "20.5187, -101.14, -56.9778, 0.22", "20.6641, -101.755, -57.4947, 0.22", "20.7305, -102.464, -58.0353, 0.22", "20.7473, -103.977, -58.9799, 0.88", "20.783, -104.942, -59.5435, 2.5" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.165127, -35.599, -15.4256, 1.18", "-0.828725, -37.1549, -15.0602, 1.18", "-1.73365, -38.4886, -14.7277, 1.18", "-2.64993, -39.7237, -14.4362, 1.18", "-3.3636, -40.6024, -14.2402, 1.03", "-4.38975, -41.7694, -13.8491, 0.81", "-5.16799, -42.5911, -13.5134, 0.81", "-5.90055, -43.2342, -13.1074, 1.25", "-7.33958, -44.191, -12.1906, 1.11", "-8.24189, -44.6361, -11.5552, 1.4", "-10.3109, -45.2925, -10.1028, 0.96", "-10.7403, -45.3757, -9.83067, 0.96", "-11.6617, -45.4867, -9.29236, 0.81", "-12.7815, -45.5955, -8.64199, 0.88", "-13.2483, -45.6502, -8.39319, 1.18", "-14.2749, -45.843, -7.90869, 0.96", "-16.4636, -46.4625, -6.90467, 0.66", "-17.2694, -46.7607, -6.40215, 0.66", "-18.684, -47.4236, -5.37527, 0.96", "-19.5163, -47.8761, -4.70267, 0.96", "-20.4076, -48.4043, -3.92234, 1.11", "-21.7828, -49.294, -2.59393, 1.11", "-23.7043, -50.5713, -0.772867, 1.11", "-24.3081, -50.9824, -0.276736, 0.88", "-25.1626, -51.583, 0.294233, 0.81", "-26.0906, -52.2642, 0.803798, 0.81", "-27.7694, -53.536, 1.44207, 0.81", "-29.2934, -54.6397, 1.74699, 0.96", "-30.3925, -55.39, 1.81426, 0.96", "-31.0165, -55.7766, 1.82642, 0.96", "-31.7805, -56.2176, 1.80448, 0.74", "-32.3943, -56.5382, 1.72581, 0.74", "-33.3866, -56.9893, 1.46517, 0.74", "-34.3485, -57.3681, 1.18068, 0.59", "-35.2721, -57.6699, 0.879071, 0.59", "-36.4584, -58.0057, 0.4843, 0.59", "-37.6976, -58.3291, 0.0770692, 0.59", "-38.7194, -58.5886, -0.236831, 0.59", "-39.4941, -58.8058, -0.526239, 0.74", "-40.3737, -59.0608, -0.880149, 0.74", "-40.9689, -59.2552, -1.12581, 0.74", "-41.7447, -59.5467, -1.44559, 0.74", "-42.8089, -60.002, -1.87343, 0.74", "-44.8228, -60.945, -2.69346, 0.74", "-45.5264, -61.2793, -2.99568, 0.74", "-46.572, -61.7366, -3.45032, 0.74", "-47.3508, -62.0562, -3.76614, 0.74", "-48.5189, -62.56, -4.18393, 0.59", "-49.3701, -62.9167, -4.43251, 0.59", "-49.9187, -63.1312, -4.56167, 0.59", "-51.2618, -63.6218, -4.90577, 0.59", "-52.4637, -64.038, -5.21083, 0.52", "-53.6642, -64.4583, -5.50614, 0.52", "-54.7344, -64.8784, -5.74732, 0.81", "-55.8895, -65.3712, -5.9902, 1.18", "-57.002, -65.8546, -6.14438, 1.4", "-58.0895, -66.3115, -6.22357, 0.96", "-58.9674, -66.6451, -6.24576, 0.59", "-59.8367, -66.9385, -6.22313, 0.29", "-61.5174, -67.4947, -6.07996, 0.29", "-63.1973, -68.0086, -5.85463, 0.81", "-63.8113, -68.1866, -5.76648, 1.03", "-64.0897, -68.263, -5.72841, 1.03", "-64.8884, -68.4481, -5.63076, 0.66", "-65.5941, -68.5785, -5.59503, 0.52", "-66.521, -68.7089, -5.62682, 0.52", "-67.4055, -68.7987, -5.72683, 0.52", "-68.2643, -68.8613, -5.85655, 0.52", "-69.3501, -68.9395, -6.03895, 0.52", "-70.4581, -69.0452, -6.24154, 0.88", "-71.3668, -69.122, -6.41216, 1.03", "-72.0207, -69.1895, -6.52698, 1.03", "-73.8603, -69.4439, -6.87865, 0.44", "-74.8743, -69.6371, -7.10325, 0.44", "-75.3736, -69.7572, -7.22876, 0.44", "-76.2676, -69.9916, -7.45781, 0.44", "-77.9967, -70.4938, -7.92991, 0.44", "-79.5536, -70.9687, -8.36588, 0.44", "-81.0222, -71.4226, -8.75953, 0.44", "-82.0263, -71.7406, -9.01741, 1.11", "-82.9987, -72.0545, -9.24174, 1.11", "-83.483, -72.2259, -9.33933, 0.81", "-83.9621, -72.4033, -9.42269, 0.37", "-85.4056, -73.014, -9.58542, 0.37", "-86.4532, -73.5347, -9.66794, 0.37", "-87.2461, -73.9989, -9.72884, 0.88", "-87.6847, -74.2915, -9.76729, 0.88", "-88.6577, -74.9623, -9.90218, 0.37", "-89.5995, -75.6357, -10.0692, 0.37", "-90.7483, -76.4809, -10.3379, 0.37", "-91.1466, -76.763, -10.46, 0.81", "-91.7677, -77.1961, -10.6928, 0.88", "-93.3398, -78.2377, -11.3345, 0.37", "-93.8383, -78.5417, -11.5472, 0.59", "-94.7589, -79.0908, -11.9505, 1.03", "-95.6385, -79.6161, -12.2928, 1.18", "-96.3586, -80.0678, -12.5086, 0.66", "-97.0092, -80.5091, -12.6564, 0.66", "-97.7783, -81.0758, -12.8055, 0.44", "-99.219, -82.1646, -13.0612, 0.44", "-101.029, -83.5556, -13.3303, 0.44", "-103.031, -85.1199, -13.6039, 0.59", "-104.051, -85.9133, -13.7469, 0.59", "-105.338, -86.8937, -13.9399, 1.03", "-106.012, -87.3892, -14.0454, 1.55", "-106.75, -87.8971, -14.1696, 1.92", "-107.647, -88.4944, -14.3417, 0.37", "-108.241, -88.8978, -14.4518, 0.37", "-109.561, -89.8358, -14.6575, 0.37", "-110.058, -90.2146, -14.7127, 0.59", "-110.739, -90.7936, -14.7859, 0.59", "-111.352, -91.3605, -14.8652, 0.29", "-113.06, -93.0172, -15.0937, 0.29", "-113.488, -93.4472, -15.1566, 0.29", "-114.069, -94.0186, -15.2577, 1.33", "-114.713, -94.6209, -15.3747, 1.77", "-115.856, -95.6133, -15.5783, 0.37", "-117.085, -96.6024, -15.7833, 0.37", "-118.03, -97.2871, -15.9441, 0.44", "-119.706, -98.4746, -16.2124, 0.44", "-119.948, -98.6483, -16.2481, 1.03", "-120.512, -99.0437, -16.3157, 1.77", "-121.007, -99.3946, -16.3592, 1.92", "-121.819, -100.007, -16.4327, 0.44", "-122.585, -100.64, -16.4133, 0.37", "-122.95, -100.968, -16.3567, 0.37", "-123.749, -101.708, -16.1875, 0.37", "-124.64, -102.577, -15.9545, 1.92", "-125.058, -103.0, -15.8257, 2.14", "-126.336, -104.394, -15.3663, 0.29", "-126.94, -105.132, -15.0163, 0.29", "-127.136, -105.406, -14.868, 0.29", "-127.487, -106.012, -14.4856, 0.29", "-127.663, -106.349, -14.2545, 0.44", "-127.878, -106.762, -13.9747, 0.66", "-128.893, -108.729, -12.6942, 0.66", "-129.249, -109.405, -12.2473, 0.74", "-129.711, -110.216, -11.7303, 0.22", "-130.043, -110.775, -11.3993, 0.22", "-130.394, -111.353, -11.0773, 0.59", "-130.995, -112.329, -10.6099, 0.22", "-131.446, -113.083, -10.344, 0.22", "-131.829, -113.796, -10.1185, 1.11", "-132.151, -114.474, -9.90178, 1.84", "-132.762, -115.941, -9.2962, 0.37", "-133.062, -116.773, -8.90781, 0.37", "-133.272, -117.45, -8.57751, 0.37", "-133.533, -118.37, -8.09897, 0.37", "-133.839, -119.526, -7.45711, 0.96", "-134.201, -120.905, -6.65175, 0.29", "-134.41, -121.765, -6.14541, 0.29", "-134.555, -122.367, -5.73725, 0.29", "-134.637, -122.667, -5.50881, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.165127, -35.599, -15.4256, 2.06", "1.41176, -37.879, -14.6184, 2.06", "2.18305, -39.4648, -14.1357, 2.06", "2.87906, -40.994, -13.6994, 2.06", "4.40994, -44.3574, -12.7395, 1.84", "5.08773, -45.8465, -12.3146, 1.92", "5.97208, -47.7894, -11.7601, 2.06", "6.75981, -49.8333, -11.0053, 2.28", "6.82764, -50.0277, -10.9289, 2.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-9.58708, 35.2547, -2.44363, 0.66", "-8.16172, 35.7654, -7.22658, 0.66", "-7.90738, 35.8565, -8.08005, 0.96" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.58708, 35.2547, -2.44363, 1.84", "-9.86394, 35.4059, -2.43401, 1.84", "-11.0899, 36.0973, -2.40736, 1.47", "-12.1481, 36.6599, -2.33929, 1.47", "-12.7787, 36.9654, -2.23862, 1.47", "-13.6195, 37.3588, -2.06542, 1.47", "-14.5529, 37.7955, -1.87313, 1.4", "-16.0565, 38.4672, -1.54431, 1.4", "-17.2591, 38.9865, -1.24673, 1.4", "-18.828, 39.6439, -0.777482, 1.4", "-19.6999, 39.9985, -0.467042, 1.25" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "14.309, 52.666, -34.0048, 0.29", "15.3902, 52.8883, -34.4268, 0.29", "16.5341, 53.029, -34.8605, 0.29", "17.4878, 53.0855, -35.2418, 0.29", "18.3149, 53.0793, -35.571, 0.29", "19.3506, 52.9908, -35.985, 0.52", "19.9507, 52.8932, -36.2159, 0.52", "20.3441, 52.7536, -36.4022, 0.52", "20.8213, 52.4993, -36.6158, 0.22", "21.3009, 52.1988, -36.8077, 0.22", "21.8322, 51.8484, -37.0283, 0.22", "22.4741, 51.4958, -37.2511, 0.22", "23.4496, 51.0647, -37.5632, 0.66", "24.1785, 50.7977, -37.7679, 0.66", "24.9187, 50.5616, -37.9465, 0.37", "25.2931, 50.4491, -38.0358, 0.37", "26.662, 50.082, -38.3376, 0.22", "27.206, 49.9402, -38.465, 0.29", "27.709, 49.8157, -38.5899, 0.29", "27.9788, 49.7477, -38.6868, 0.29", "29.0573, 49.4478, -39.1686, 0.29", "29.4899, 49.2914, -39.3828, 0.29", "30.1422, 48.9636, -39.8075, 0.66", "30.9749, 48.4353, -40.5528, 1.77", "31.6508, 47.9493, -41.2578, 1.11", "31.9675, 47.7019, -41.6613, 0.44", "32.5326, 47.2188, -42.4612, 0.44", "33.2733, 46.5288, -43.5569, 1.33", "34.2785, 45.5418, -45.1122, 1.92", "34.7722, 45.0511, -45.8955, 0.44", "35.9194, 43.973, -47.6367, 0.44", "36.2955, 43.6551, -48.1694, 0.96", "36.5465, 43.4677, -48.4868, 1.11", "37.5212, 42.7957, -49.4304, 0.29", "37.8903, 42.5417, -49.6927, 0.29", "38.404, 42.1633, -49.9885, 0.29", "38.8879, 41.7873, -50.2033, 0.29", "39.3849, 41.3917, -50.4192, 0.29", "40.1021, 40.8101, -50.7249, 0.29", "41.1911, 39.9197, -51.1627, 1.18", "41.7374, 39.471, -51.3898, 1.4", "42.3406, 38.974, -51.6509, 0.44", "42.8965, 38.5158, -51.892, 0.44", "43.944, 37.6271, -52.3335, 0.44", "44.5669, 37.0792, -52.6025, 1.11", "45.3757, 36.3552, -52.9264, 1.55", "46.0175, 35.7499, -53.1838, 0.44", "46.528, 35.2342, -53.368, 0.44", "47.0437, 34.6379, -53.5591, 0.44", "47.614, 33.9116, -53.8356, 0.66", "47.8425, 33.6155, -53.9917, 0.96", "48.2663, 33.1024, -54.3215, 1.03", "48.6859, 32.6319, -54.6476, 0.22", "49.448, 31.832, -55.2461, 0.22", "50.5691, 30.7467, -56.0776, 0.37", "51.3726, 29.9913, -56.5979, 0.66", "52.053, 29.3512, -57.002, 0.44", "52.5879, 28.871, -57.2837, 0.44", "52.8743, 28.5912, -57.4007, 0.44", "53.2776, 28.1604, -57.4644, 1.03", "53.9213, 27.366, -57.4239, 1.18", "54.3291, 26.8469, -57.3639, 0.44", "54.5151, 26.6178, -57.3368, 0.44", "55.6967, 25.2558, -57.2259, 0.44", "56.4199, 24.4667, -57.2461, 0.44", "56.9731, 23.8863, -57.3175, 0.44", "57.9812, 22.8989, -57.583, 0.44", "58.6261, 22.3115, -57.808, 0.59", "59.3808, 21.6268, -58.1273, 1.11", "60.5418, 20.6112, -58.7011, 1.33", "61.0553, 20.1466, -58.9699, 1.33", "61.8683, 19.4008, -59.3485, 0.59", "62.4852, 18.8419, -59.6337, 0.59", "63.2464, 18.1891, -59.9522, 0.59", "64.7597, 16.9984, -60.4693, 0.37", "65.698, 16.3329, -60.7462, 0.37", "67.2115, 15.3381, -61.1651, 0.37", "68.2779, 14.6537, -61.4541, 0.44", "68.7737, 14.3523, -61.5934, 0.81", "69.4864, 13.9462, -61.8015, 1.03", "70.0375, 13.6284, -61.9637, 0.29", "71.2402, 12.8996, -62.3819, 0.29", "72.1607, 12.2786, -62.7558, 0.29", "73.2279, 11.4505, -63.2404, 0.29", "73.6426, 11.0794, -63.4693, 0.66", "74.0041, 10.706, -63.7585, 0.96", "74.593, 9.9124, -64.4304, 0.96", "74.9633, 9.25943, -65.0068, 0.37", "75.2784, 8.53451, -65.6341, 0.37", "75.4486, 8.03931, -66.0481, 0.37", "75.9129, 6.47335, -67.5163, 0.37", "76.3068, 5.07247, -68.8524, 0.37", "76.4911, 4.39912, -69.4903, 0.52", "76.8104, 3.26521, -70.5699, 0.29", "76.9116, 2.92899, -70.9098, 1.18", "77.6476, 0.620782, -73.3507, 0.37", "77.8961, -0.227768, -74.2434, 0.37", "78.0784, -0.906921, -75.0937, 0.44", "78.1432, -1.22082, -75.519, 0.44", "78.3558, -2.59279, -77.3886, 0.44", "78.3713, -2.79838, -77.657, 0.81", "78.3509, -3.26916, -78.242, 0.81", "78.1221, -4.70976, -80.2001, 0.29", "78.0485, -5.01085, -80.6047, 0.29", "77.9378, -5.43304, -81.1448, 0.29", "77.7805, -6.08348, -81.8826, 0.29", "77.558, -7.32215, -83.1845, 1.11", "77.4468, -8.17158, -84.0169, 0.29", "77.4001, -8.63579, -84.3986, 0.29", "77.3568, -9.48686, -85.1348, 0.29", "77.3522, -9.92801, -85.5087, 0.29", "77.4242, -10.7755, -86.1327, 0.29", "77.5425, -11.5672, -86.6153, 0.81", "77.6468, -12.1468, -86.9418, 0.81", "77.8826, -13.444, -87.6588, 0.96", "77.9433, -13.908, -87.8901, 0.29", "78.0643, -14.9432, -88.3424, 0.29", "78.1307, -15.6193, -88.5739, 0.52", "78.147, -16.0772, -88.6771, 0.52", "78.1453, -16.5307, -88.7441, 0.22", "78.0878, -17.4201, -88.7918, 0.22", "78.0185, -18.154, -88.8043, 0.22", "77.9662, -18.5403, -88.7878, 0.37", "77.8228, -19.5741, -88.6884, 0.37", "77.7641, -20.1334, -88.6266, 0.66", "77.6868, -20.7801, -88.5704, 0.66", "77.6169, -21.4069, -88.5352, 0.22", "77.5517, -22.0899, -88.5183, 0.22", "77.4913, -23.4706, -88.5185, 0.22", "77.4896, -24.8481, -88.5802, 0.22", "77.5181, -25.7939, -88.6794, 0.44", "77.5772, -26.5223, -88.7926, 0.44", "77.753, -27.6675, -89.0226, 0.44", "77.9779, -28.5909, -89.2515, 0.44", "78.304, -29.5307, -89.5591, 1.11", "78.6626, -30.3645, -89.8578, 0.44", "78.882, -30.7874, -90.0253, 0.44", "79.4475, -31.7627, -90.4541, 0.44", "79.7357, -32.2246, -90.6711, 0.44", "80.5288, -33.4577, -91.2599, 0.44", "81.332, -34.6495, -91.7978, 0.44", "82.1294, -35.8027, -92.3486, 0.44", "82.4976, -36.3124, -92.6057, 0.66", "82.7009, -36.5867, -92.7456, 0.66", "83.2151, -37.2909, -93.0621, 0.29", "83.7015, -37.9668, -93.3426, 0.29", "84.3623, -38.9523, -93.7224, 0.29", "85.0002, -39.999, -94.0917, 0.29", "85.2374, -40.3931, -94.2286, 0.29", "85.8972, -41.488, -94.6043, 0.29", "86.2169, -42.0482, -94.7822, 0.59", "86.6428, -42.8617, -95.0323, 0.59", "87.1352, -43.8664, -95.3073, 0.29", "87.4736, -44.5803, -95.5166, 0.29", "88.0896, -45.8729, -96.01, 0.29", "88.3534, -46.4123, -96.2501, 0.29", "88.6486, -47.0753, -96.5613, 0.59", "88.8957, -47.7068, -96.8586, 1.03", "89.0247, -48.0938, -97.0531, 1.03", "89.465, -49.7155, -97.9189, 0.37", "89.7057, -50.751, -98.4831, 0.37", "89.8483, -51.4323, -98.8805, 0.37", "89.9965, -52.2681, -99.3726, 0.37", "90.236, -53.624, -100.156, 0.29", "90.3493, -54.2332, -100.466, 0.29", "90.4281, -54.6253, -100.629, 0.29", "90.6612, -55.7583, -101.083, 0.37", "90.7708, -56.2534, -101.258, 0.37", "90.9693, -57.175, -101.527, 0.22", "91.3181, -58.677, -101.804, 0.22", "91.4074, -59.0242, -101.856, 0.66", "91.5479, -59.5231, -101.918, 0.74", "91.6752, -59.9339, -101.952, 0.22", "91.8478, -60.4526, -102.03, 0.22", "92.104, -61.2625, -102.195, 0.37", "92.2846, -61.7724, -102.337, 0.37", "92.7107, -62.8751, -102.724, 0.37", "93.019, -63.5896, -103.01, 0.37", "93.469, -64.5385, -103.428, 0.37", "93.6885, -64.9808, -103.619, 0.44", "93.9391, -65.4693, -103.814, 0.44", "94.2208, -65.996, -103.989, 0.44", "94.6565, -66.7843, -104.179, 0.44", "94.7422, -66.9358, -104.204, 0.59", "95.4723, -68.1874, -104.3, 0.44", "95.8623, -68.8821, -104.328, 0.44", "96.262, -69.6306, -104.275, 0.59", "96.4381, -69.9752, -104.225, 0.59", "96.7481, -70.608, -104.091, 0.37", "96.9393, -71.014, -103.983, 0.37", "97.293, -71.7667, -103.735, 0.37", "97.8425, -72.9915, -103.282, 0.52", "97.9375, -73.195, -103.203, 0.52", "98.2371, -73.7839, -102.969, 0.15", "98.5514, -74.3335, -102.754, 0.15", "98.7112, -74.5786, -102.669, 0.44", "98.9567, -74.9121, -102.606, 0.74", "99.4611, -75.578, -102.627, 0.15", "99.6476, -75.8143, -102.641, 0.15", "99.8694, -76.1056, -102.677, 0.15", "100.199, -76.5282, -102.736, 0.66", "100.798, -77.2611, -102.871, 0.29", "101.237, -77.7746, -103.006, 0.29", "101.684, -78.3154, -103.181, 0.29", "102.358, -79.1458, -103.46, 0.29", "102.913, -79.8275, -103.724, 0.29", "103.342, -80.3573, -103.95, 0.52", "103.715, -80.8031, -104.189, 0.29", "104.321, -81.5769, -104.673, 0.29", "104.754, -82.1292, -105.057, 0.29", "105.481, -83.0896, -105.752, 0.29", "105.841, -83.6144, -106.13, 0.29", "106.611, -84.783, -106.953, 0.29", "106.991, -85.3557, -107.365, 0.29", "107.268, -85.7603, -107.689, 0.29", "107.596, -86.2601, -108.12, 0.29", "107.75, -86.5182, -108.33, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "14.309, 52.666, -34.0048, 0.52", "15.2249, 52.6992, -34.0826, 0.52", "16.3794, 52.943, -34.2053, 0.52", "17.2249, 53.2812, -34.4102, 0.29", "17.9382, 53.7648, -34.6845, 0.29", "18.1891, 54.0346, -34.9154, 0.29", "18.4611, 54.4317, -35.2849, 0.59", "18.741, 55.1398, -35.9386, 0.59", "18.9892, 56.1156, -36.8142, 0.29", "19.0899, 56.6641, -37.3433, 0.29", "19.3676, 58.1981, -38.9314, 0.66", "19.453, 58.5926, -39.3451, 0.66", "19.5472, 58.943, -39.7089, 0.88", "19.6359, 59.1886, -39.9633, 0.88", "19.9479, 59.7952, -40.5163, 0.15", "20.2511, 60.2407, -40.9185, 0.15", "20.5093, 60.5361, -41.1194, 0.15", "20.8141, 60.7834, -41.4025, 0.15", "20.8141, 60.7834, -41.4025, 0.29", "21.5337, 61.1253, -42.1362, 0.29", "21.8309, 61.2778, -42.4329, 0.29", "22.2815, 61.5187, -42.8736, 0.29", "23.2157, 62.0847, -43.9672, 0.66", "23.5676, 62.327, -44.392, 0.66", "23.9831, 62.6372, -44.91, 0.29", "24.6214, 63.147, -45.703, 0.29", "24.9715, 63.4506, -46.1385, 0.29", "26.1269, 64.5182, -47.5423, 0.37", "26.5775, 64.9444, -48.0673, 1.33", "27.0423, 65.38, -48.607, 0.44", "27.2796, 65.5838, -48.8697, 0.44", "27.5606, 65.8055, -49.2449, 0.44", "27.7842, 65.9983, -49.5716, 0.44", "28.4342, 66.5903, -50.4888, 0.44", "28.701, 66.863, -50.9415, 0.44", "28.9463, 67.138, -51.4002, 0.44", "29.9415, 68.208, -53.2806, 0.74", "30.1723, 68.4357, -53.6907, 1.18", "30.3683, 68.6037, -53.994, 1.33", "30.9885, 69.0838, -54.8502, 0.52", "31.2428, 69.2686, -55.2187, 0.29", "31.7122, 69.583, -55.8635, 0.29", "32.0935, 69.8198, -56.3349, 0.81", "32.9389, 70.3228, -57.4378, 0.15", "33.5496, 70.7251, -58.2573, 0.81", "34.5874, 71.4969, -59.7527, 0.37", "34.7699, 71.6487, -60.0369, 0.37", "35.0989, 71.9584, -60.5758, 0.37", "35.6104, 72.4753, -61.467, 0.37", "36.0468, 72.963, -62.2361, 0.29", "36.7677, 73.8016, -63.3909, 0.29", "37.0249, 74.12, -63.7606, 1.03", "37.3347, 74.5367, -64.2618, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.49889, 32.4046, 8.19982, 1.11", "7.16163, 32.0891, 11.4924, 1.11", "8.08936, 32.0016, 12.448, 1.11", "8.17271, 32.0026, 12.5225, 1.11", "8.31835, 32.0257, 12.6489, 1.11", "8.88321, 32.1931, 13.1315, 1.25", "8.98698, 32.2345, 13.2169, 1.25", "9.63537, 32.7116, 13.5757, 1.03", "10.7941, 33.7438, 14.2795, 0.88", "11.4774, 34.3672, 14.6604, 0.81", "11.9654, 34.8384, 14.9193, 0.81", "12.294, 35.157, 15.083, 0.81", "12.7258, 35.548, 15.2541, 0.81", "13.2692, 35.9631, 15.3882, 0.88", "13.9353, 36.324, 15.5476, 0.96", "14.3392, 36.4699, 15.6743, 0.96", "14.8947, 36.622, 15.884, 0.96", "15.3566, 36.7377, 16.0779, 1.11", "16.1104, 36.9223, 16.4116, 1.11", "18.3091, 37.4605, 17.4382, 1.11", "19.0678, 37.6577, 17.8065, 1.11", "19.7744, 37.8697, 18.1404, 0.88", "20.4954, 38.1493, 18.4674, 0.88", "21.0645, 38.4153, 18.7343, 1.03", "21.1218, 38.4469, 18.76, 1.03", "21.7958, 38.8543, 18.9949, 1.03", "22.2568, 39.1366, 19.2858, 0.96", "22.9568, 39.5444, 19.8798, 0.96", "23.758, 39.9833, 20.6418, 1.33", "23.8114, 40.0113, 20.6948, 1.33", "24.1088, 40.1621, 20.9853, 1.33", "25.6114, 40.8796, 22.5496, 1.33", "26.0959, 41.0945, 23.0845, 0.81", "26.6279, 41.3141, 23.6824, 0.81", "26.8202, 41.3979, 23.8782, 1.11", "27.1231, 41.5383, 24.1807, 1.25" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.49889, 32.4046, 8.19982, 1.55", "5.50789, 33.7128, 9.50282, 1.55", "6.22076, 34.5041, 10.2283, 0.81", "6.31372, 34.602, 10.3103, 0.81", "6.78975, 35.1278, 10.7721, 0.81", "7.16768, 35.5741, 11.1559, 0.88", "7.71503, 36.3028, 11.7772, 0.88", "8.29523, 37.1878, 12.3884, 1.03", "8.49046, 37.5778, 12.6285, 0.88", "8.96789, 38.8605, 13.3735, 1.11", "9.06288, 39.2525, 13.5927, 0.96", "9.2018, 40.172, 14.0863, 0.66", "9.27302, 41.1053, 14.5276, 0.52", "9.27281, 41.7599, 14.7614, 0.66", "9.2442, 42.251, 14.9334, 0.66", "9.14193, 43.1541, 15.2122, 0.66", "9.13455, 43.2029, 15.2287, 0.66", "8.93535, 44.168, 15.5704, 0.37", "8.69644, 44.9496, 15.8722, 0.37", "8.25711, 45.9066, 16.2347, 0.37", "8.01095, 46.3049, 16.3699, 0.37", "7.97242, 46.3519, 16.3807, 0.37", "7.81199, 46.5342, 16.5337, 0.37", "7.4825, 46.8922, 17.0622, 0.88", "7.31941, 47.1226, 17.4738, 1.11", "7.3009, 47.1623, 17.5442, 1.11", "7.21701, 47.4917, 18.1285, 1.33", "7.02414, 49.1624, 21.1146, 0.88", "7.03257, 49.2862, 21.3223, 0.88", "7.08587, 49.5408, 21.7419, 0.59", "7.14728, 49.7465, 22.0353, 0.37", "7.29556, 50.1982, 22.5561, 0.29", "7.31888, 50.2658, 22.6161, 0.29", "7.55935, 51.2245, 23.0459, 0.29", "7.56927, 51.2996, 23.0824, 0.29", "7.59809, 52.1003, 23.4726, 0.29", "7.58626, 52.391, 23.6118, 0.29", "7.44679, 53.746, 24.198, 0.66", "7.41765, 54.0617, 24.3196, 0.88", "7.32091, 54.887, 24.6301, 0.44", "7.2768, 55.3074, 24.7835, 0.59", "7.24114, 55.7749, 24.9448, 0.59", "7.18997, 56.6565, 25.1662, 0.52", "7.1711, 57.1219, 25.1838, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-33.5822, -68.7715, -46.7392, 0.88", "-34.9069, -69.422, -47.0808, 0.88", "-35.3082, -69.6463, -47.1829, 0.88", "-36.5722, -70.423, -47.6086, 0.52", "-37.5, -71.0162, -47.9408, 0.52", "-38.5972, -71.6966, -48.374, 0.74", "-39.5029, -72.239, -48.7332, 0.74", "-40.2753, -72.683, -49.0899, 0.74", "-41.3185, -73.2791, -49.5681, 0.74", "-42.1068, -73.7481, -49.9151, 0.74", "-43.2375, -74.427, -50.4133, 0.74", "-44.0251, -74.8744, -50.7422, 0.88", "-44.8372, -75.3511, -51.1153, 0.66", "-45.3035, -75.6209, -51.3461, 0.59", "-45.9626, -76.0194, -51.6723, 0.59", "-46.7746, -76.5855, -52.1106, 0.59", "-47.2196, -76.9437, -52.3745, 0.59", "-48.0829, -77.6825, -52.8987, 0.88", "-49.2215, -78.6502, -53.5414, 0.88", "-49.605, -78.9636, -53.738, 0.88", "-50.3437, -79.5069, -54.0625, 0.88", "-51.3252, -80.1377, -54.3924, 1.03", "-52.4074, -80.7832, -54.7145, 0.88", "-53.1969, -81.2429, -54.9105, 0.88", "-53.9559, -81.7086, -55.0841, 0.88", "-54.6502, -82.1222, -55.2632, 0.59", "-55.2747, -82.4798, -55.5091, 0.59", "-56.3727, -83.1497, -56.0473, 0.66", "-56.9814, -83.5537, -56.4334, 1.18", "-57.7162, -84.08, -56.9687, 1.18", "-58.5899, -84.7368, -57.6471, 1.18", "-60.391, -86.1081, -59.0526, 1.18", "-60.7922, -86.3963, -59.3677, 1.18", "-61.7391, -87.0193, -60.0902, 0.52", "-62.3505, -87.3929, -60.5626, 0.59", "-62.7945, -87.6737, -60.9001, 0.66", "-63.286, -88.0231, -61.2371, 0.66", "-64.2568, -88.82, -61.8871, 0.74", "-64.6638, -89.1772, -62.1902, 0.81", "-64.8022, -89.3088, -62.3035, 0.81", "-65.4518, -89.919, -62.8481, 0.37", "-65.8596, -90.3125, -63.2042, 0.59", "-66.9526, -91.418, -64.2055, 1.18", "-67.2355, -91.7125, -64.4554, 1.18", "-67.7771, -92.2811, -64.9313, 0.29", "-68.3407, -92.8882, -65.4168, 0.29", "-68.9704, -93.5565, -65.9149, 0.44", "-69.8456, -94.4965, -66.5204, 0.88", "-70.2032, -94.9029, -66.7393, 1.4", "-70.8788, -95.7426, -67.1676, 1.47", "-71.354, -96.3926, -67.4795, 0.74", "-71.8556, -97.1239, -67.8251, 1.18", "-72.3992, -97.8505, -68.1577, 1.4", "-73.2394, -98.8435, -68.6028, 0.74", "-73.5828, -99.2194, -68.7729, 0.74", "-74.2186, -99.8836, -69.0527, 0.74", "-74.7813, -100.433, -69.2869, 0.74", "-75.4933, -101.093, -69.5671, 0.52", "-76.3369, -101.842, -69.8674, 0.37", "-77.0029, -102.413, -70.0933, 0.37", "-77.6994, -103.019, -70.3903, 0.37", "-78.3727, -103.626, -70.7174, 0.37", "-79.1023, -104.315, -71.1171, 0.37", "-79.9104, -105.124, -71.6264, 0.37", "-80.6995, -105.911, -72.199, 0.96", "-81.5494, -106.724, -72.8411, 0.52", "-81.9362, -107.094, -73.1328, 0.52", "-82.354, -107.502, -73.4192, 0.52", "-83.2235, -108.295, -73.9104, 0.52", "-84.1057, -109.024, -74.2999, 0.52", "-84.8087, -109.57, -74.5208, 0.52", "-85.4356, -110.046, -74.6694, 0.52", "-86.2462, -110.66, -74.8587, 0.29", "-87.1595, -111.339, -75.0507, 0.29", "-87.4742, -111.571, -75.1027, 0.59", "-88.0109, -111.963, -75.1842, 0.74", "-88.9302, -112.656, -75.2637, 0.74", "-89.8908, -113.395, -75.3957, 1.18", "-90.3728, -113.774, -75.5198, 1.55", "-90.8811, -114.174, -75.692, 1.55", "-91.6565, -114.781, -75.9865, 0.37", "-93.1124, -115.93, -76.6217, 0.37", "-94.6325, -117.193, -77.3201, 0.37", "-95.5169, -117.973, -77.7583, 0.37", "-96.1075, -118.501, -78.0702, 0.37", "-96.6436, -118.984, -78.3544, 0.37", "-97.1914, -119.493, -78.6382, 0.37", "-97.9015, -120.155, -79.045, 0.37", "-98.4256, -120.657, -79.2832, 0.37", "-99.0744, -121.304, -79.5718, 0.88", "-99.6134, -121.854, -79.8506, 0.88", "-100.046, -122.299, -80.0843, 0.44", "-100.93, -123.224, -80.611, 0.59", "-101.66, -124.025, -81.0938, 0.29", "-102.119, -124.543, -81.4107, 0.29", "-102.817, -125.344, -81.9363, 1.18", "-103.386, -125.991, -82.3824, 1.33", "-104.175, -126.892, -82.9824, 0.44", "-104.46, -127.213, -83.1823, 0.44", "-105.439, -128.336, -83.9428, 0.44", "-106.3, -129.262, -84.6221, 0.81", "-106.585, -129.547, -84.8371, 1.4", "-107.17, -130.094, -85.2323, 1.62", "-107.423, -130.309, -85.3725, 1.62", "-108.664, -131.301, -85.9384, 0.37", "-109.314, -131.796, -86.1613, 0.37", "-109.881, -132.2, -86.3213, 0.37", "-111.055, -132.959, -86.7396, 0.37", "-111.629, -133.293, -86.9498, 0.37", "-113.386, -134.251, -87.58, 0.37", "-114.221, -134.691, -87.8563, 0.37", "-115.119, -135.162, -88.1704, 0.66", "-116.97, -136.086, -88.863, 0.66", "-118.026, -136.561, -89.2832, 0.66", "-118.29, -136.666, -89.387, 0.66", "-119.352, -136.996, -89.7907, 0.29", "-119.932, -137.169, -89.9991, 0.29", "-120.819, -137.457, -90.2955, 0.44", "-121.735, -137.831, -90.5822, 0.44", "-122.356, -138.109, -90.8747, 0.44", "-122.829, -138.326, -91.1335, 0.66", "-123.729, -138.76, -91.7528, 0.81", "-124.64, -139.271, -92.4467, 0.29", "-125.397, -139.739, -93.0501, 0.29", "-126.731, -140.645, -94.1823, 0.52", "-127.291, -141.059, -94.6814, 0.81", "-128.302, -141.786, -95.5446, 0.81", "-129.027, -142.284, -96.1242, 0.81", "-129.512, -142.613, -96.4666, 0.81", "-130.15, -143.053, -96.8508, 0.29", "-130.427, -143.287, -96.9758, 0.29", "-131.156, -143.922, -97.3874, 0.29", "-131.567, -144.225, -97.6164, 0.29", "-132.024, -144.493, -97.9364, 0.29", "-132.298, -144.624, -98.136, 0.44", "-132.96, -144.895, -98.6016, 0.59", "-134.543, -145.476, -99.806, 0.66", "-135.314, -145.776, -100.437, 0.81", "-136.228, -146.145, -101.184, 0.81", "-136.746, -146.35, -101.571, 0.81", "-137.353, -146.604, -101.975, 0.81", "-138.271, -147.046, -102.484, 0.81", "-138.879, -147.411, -102.733, 0.81", "-139.339, -147.72, -102.919, 0.81", "-140.339, -148.421, -103.509, 0.37", "-140.694, -148.68, -103.779, 0.74", "-141.344, -149.141, -104.325, 0.29", "-141.899, -149.554, -104.785, 0.29", "-142.482, -149.99, -105.349, 0.66", "-144.267, -151.389, -107.232, 0.66", "-144.489, -151.567, -107.481, 0.66", "-144.962, -151.935, -107.988, 0.52", "-145.915, -152.647, -108.969, 0.52", "-147.18, -153.591, -110.155, 0.59", "-147.646, -153.951, -110.519, 0.81", "-148.595, -154.643, -111.073, 0.81", "-149.208, -155.051, -111.432, 0.81", "-150.055, -155.581, -111.918, 0.44", "-150.789, -155.974, -112.195, 0.44", "-151.525, -156.339, -112.25, 0.44", "-152.406, -156.742, -112.142, 0.44", "-153.836, -157.33, -111.74, 0.74", "-154.198, -157.462, -111.63, 0.74", "-157.644, -158.529, -110.573, 0.74", "-158.195, -158.676, -110.46, 0.74", "-159.811, -159.103, -110.345, 0.74", "-161.011, -159.492, -110.474, 0.59", "-162.166, -159.934, -110.785, 0.52", "-163.057, -160.342, -111.199, 0.52", "-164.347, -161.044, -112.12, 1.25", "-165.247, -161.582, -112.875, 0.66", "-166.269, -162.248, -113.906, 0.66", "-166.744, -162.592, -114.426, 1.03", "-167.695, -163.323, -115.518, 1.03", "-169.067, -164.477, -117.113, 1.03", "-170.098, -165.364, -118.203, 0.66", "-171.657, -166.729, -119.749, 0.74", "-172.289, -167.298, -120.347, 0.88", "-172.949, -167.96, -120.956, 0.52", "-173.686, -168.796, -121.582, 0.52", "-174.825, -170.223, -122.385, 0.52", "-175.617, -171.33, -122.85, 0.74", "-176.102, -172.047, -123.08, 0.74", "-177.078, -173.549, -123.523, 0.74", "-177.395, -174.059, -123.652, 1.03", "-177.999, -175.05, -123.889, 0.81", "-178.92, -176.665, -124.216, 0.81", "-179.767, -178.162, -124.449, 0.81", "-180.259, -179.04, -124.596, 0.52", "-180.545, -179.556, -124.689, 0.52", "-180.878, -180.222, -124.819, 0.52", "-181.202, -180.955, -124.99, 0.52", "-181.557, -181.743, -125.202, 0.52", "-182.256, -183.136, -125.595, 0.59", "-182.568, -183.694, -125.76, 0.88", "-183.291, -185.026, -126.135, 0.52", "-183.854, -186.288, -126.424, 0.52", "-184.075, -186.891, -126.54, 0.81", "-184.275, -187.489, -126.631, 1.11", "-184.67, -188.839, -126.772, 0.74", "-185.036, -190.128, -126.888, 0.74", "-185.723, -192.625, -127.225, 0.74", "-186.099, -193.977, -127.434, 0.74", "-186.466, -195.151, -127.649, 0.88", "-186.819, -196.135, -127.865, 0.88", "-187.311, -197.268, -128.157, 0.74", "-188.488, -199.395, -128.779, 0.37", "-189.242, -200.531, -129.199, 0.37", "-189.971, -201.637, -129.634, 0.37", "-190.233, -202.067, -129.815, 0.37", "-190.621, -202.717, -130.096, 0.37", "-191.039, -203.48, -130.408, 0.37", "-191.709, -204.788, -130.891, 0.37", "-192.258, -206.032, -131.361, 0.44", "-192.659, -206.992, -131.696, 0.44", "-192.902, -207.582, -131.874, 1.25", "-193.169, -208.205, -132.042, 1.25", "-193.659, -209.31, -132.286, 0.44", "-194.363, -210.716, -132.501, 0.44", "-195.011, -211.882, -132.655, 0.44", "-195.473, -212.699, -132.729, 0.44", "-195.882, -213.426, -132.776, 0.81", "-196.069, -213.755, -132.785, 1.11", "-196.492, -214.518, -132.77, 0.66", "-196.838, -215.188, -132.753, 0.44", "-197.108, -215.807, -132.737, 0.44", "-197.401, -216.59, -132.716, 0.44", "-197.711, -217.432, -132.699, 0.44", "-197.809, -217.681, -132.696, 0.88", "-198.018, -218.213, -132.691, 0.88", "-198.241, -218.724, -132.688, 0.37", "-198.743, -219.78, -132.688, 0.37", "-199.758, -221.772, -132.688, 0.37", "-200.454, -223.08, -132.688, 0.37", "-200.824, -223.758, -132.688, 0.37", "-201.616, -225.107, -132.688, 0.37", "-202.165, -226.003, -132.688, 0.96", "-202.479, -226.513, -132.688, 1.4", "-202.892, -227.233, -132.688, 0.37", "-203.394, -228.072, -132.747, 0.37", "-203.991, -229.065, -132.87, 0.37", "-204.671, -230.224, -133.062, 0.37", "-205.471, -231.56, -133.321, 0.59", "-205.768, -232.047, -133.424, 0.74", "-206.895, -233.879, -133.841, 0.44", "-207.326, -234.596, -134.024, 0.44", "-207.955, -235.641, -134.324, 0.44", "-208.277, -236.144, -134.49, 0.96", "-208.552, -236.546, -134.621, 1.18", "-208.89, -237.028, -134.769, 1.18", "-209.855, -238.358, -135.119, 0.44", "-211.836, -240.894, -135.786, 0.44", "-212.45, -241.663, -135.982, 0.44", "-213.736, -243.276, -136.357, 0.44", "-213.946, -243.532, -136.408, 0.44", "-215.206, -245.032, -136.636, 0.44", "-215.881, -245.802, -136.716, 0.44", "-216.433, -246.426, -136.735, 0.59", "-217.166, -247.286, -136.734, 0.37", "-218.322, -248.747, -136.72, 0.37", "-219.209, -249.946, -136.7, 0.37", "-220.923, -252.532, -136.645, 0.37", "-221.81, -253.976, -136.61, 0.66", "-222.339, -254.906, -136.585, 0.66", "-222.86, -255.953, -136.555, 0.81", "-223.392, -257.28, -136.514, 0.81", "-223.847, -258.722, -136.565, 0.81", "-224.057, -259.597, -136.68, 0.59", "-224.454, -261.159, -137.056, 0.59", "-224.709, -262.026, -137.32, 0.59", "-224.94, -262.688, -137.559, 0.59", "-225.869, -264.887, -138.48, 0.59", "-226.48, -266.032, -139.024, 0.59", "-227.147, -267.002, -139.517, 0.59", "-227.843, -267.748, -139.902, 0.59", "-228.527, -268.35, -140.173, 0.59", "-229.125, -268.779, -140.314, 0.59", "-229.68, -269.09, -140.342, 0.59", "-230.527, -269.489, -140.342, 0.44", "-231.608, -269.925, -140.342, 0.44", "-232.187, -270.154, -140.3, 0.74", "-232.747, -270.389, -140.225, 0.29", "-233.673, -270.805, -140.069, 0.29", "-234.238, -271.074, -139.937, 0.59", "-234.919, -271.433, -139.748, 0.96", "-236.201, -272.185, -139.359, 0.44", "-237.574, -273.058, -138.931, 0.44", "-239.121, -274.132, -138.452, 0.44", "-240.118, -274.858, -138.168, 0.44", "-240.888, -275.431, -137.991, 0.44", "-241.576, -275.944, -137.842, 0.88", "-242.079, -276.323, -137.768, 0.88", "-242.9, -276.989, -137.663, 0.44", "-244.071, -277.971, -137.557, 0.44", "-245.685, -279.342, -137.453, 0.44", "-246.504, -280.043, -137.392, 0.44", "-247.447, -280.856, -137.316, 0.44", "-248.004, -281.335, -137.215, 0.59", "-248.767, -282.029, -137.003, 0.74", "-249.489, -282.651, -136.749, 0.74", "-250.212, -283.183, -136.467, 0.44", "-251.258, -283.78, -135.842, 0.44", "-252.771, -284.453, -134.347, 0.44", "-253.299, -284.656, -133.693, 0.44", "-253.874, -284.847, -132.845, 0.44", "-254.338, -284.984, -132.107, 0.66", "-256.149, -285.472, -128.907, 0.66", "-257.19, -285.754, -126.821, 0.66", "-257.461, -285.832, -126.236, 0.66", "-258.097, -286.013, -124.757, 0.88", "-258.661, -286.264, -123.249, 0.88" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-33.5822, -68.7715, -46.7392, 0.59", "-34.2048, -68.6191, -47.3513, 0.59", "-34.7165, -68.4652, -47.9842, 0.59", "-35.8471, -68.1636, -49.3857, 0.59", "-36.2714, -68.0715, -49.9175, 0.59", "-36.9553, -67.9157, -50.7071, 0.59", "-37.2745, -67.8436, -51.0508, 0.59", "-38.3144, -67.6736, -52.2329, 0.59", "-38.7706, -67.6114, -52.7431, 0.59", "-39.5006, -67.5192, -53.5231, 0.59", "-40.2276, -67.4603, -54.2924, 0.59", "-40.4806, -67.4564, -54.5492, 0.59", "-41.3834, -67.5549, -55.4982, 0.59", "-41.9314, -67.6505, -56.0467, 0.59", "-42.6379, -67.787, -56.7777, 0.59", "-43.0817, -67.8977, -57.2531, 0.59", "-43.6946, -68.1024, -57.9613, 0.59", "-44.5787, -68.4153, -58.9773, 0.59", "-45.0062, -68.5748, -59.4178, 0.59", "-45.3534, -68.729, -59.7657, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "20.783, -104.942, -59.5435, 0.81", "21.9466, -106.111, -61.1106, 0.81", "22.5015, -106.591, -61.6409, 0.37", "22.9395, -106.93, -61.9337, 0.37", "23.4768, -107.331, -62.2284, 1.11", "25.4488, -108.762, -63.1619, 1.55", "26.268, -109.328, -63.4945, 1.18", "27.6739, -110.173, -63.8247, 0.37", "29.1492, -110.989, -64.0616, 0.37", "29.5665, -111.202, -64.111, 0.37", "29.9726, -111.402, -64.134, 1.03", "30.9293, -111.803, -64.1175, 1.47", "32.1381, -112.22, -64.1919, 1.84", "32.4367, -112.302, -64.2303, 1.99", "33.5194, -112.54, -64.3969, 0.52", "35.6691, -112.953, -64.7424, 0.52", "37.3981, -113.237, -65.0651, 0.52", "38.838, -113.43, -65.3538, 0.66", "39.7371, -113.517, -65.5364, 0.88", "40.8385, -113.594, -65.7588, 1.18", "42.2029, -113.656, -66.0534, 1.92", "43.6207, -113.693, -66.4305, 0.59", "44.6382, -113.741, -66.7255, 0.44", "45.5852, -113.775, -67.0001, 0.44", "46.6973, -113.79, -67.3515, 0.44", "47.7445, -113.791, -67.6972, 0.44", "49.0392, -113.795, -68.114, 0.96", "49.5485, -113.809, -68.2614, 1.03", "50.682, -113.876, -68.5703, 0.37", "51.7997, -113.974, -68.8291, 0.37", "52.5247, -114.049, -68.9823, 1.03", "53.5147, -114.163, -69.1568, 1.03", "54.5147, -114.285, -69.3525, 0.37", "55.082, -114.366, -69.4871, 0.37", "55.9673, -114.51, -69.742, 0.37", "57.1526, -114.708, -70.1133, 0.88", "58.1728, -114.856, -70.48, 0.52", "59.5495, -115.048, -71.0146, 0.52", "60.383, -115.177, -71.3431, 1.11", "61.3028, -115.34, -71.6901, 0.44", "62.8035, -115.623, -72.215, 0.44", "63.9923, -115.846, -72.5742, 0.44", "64.4142, -115.921, -72.6924, 0.44", "65.2766, -116.054, -72.888, 0.44", "66.38, -116.175, -73.1126, 0.44", "66.9789, -116.226, -73.2067, 0.44", "67.9009, -116.274, -73.3494, 0.44", "68.5791, -116.311, -73.4553, 0.44", "69.2481, -116.332, -73.6181, 0.96", "69.7156, -116.339, -73.7604, 1.33", "70.2805, -116.37, -73.9584, 1.33", "71.5473, -116.545, -74.4217, 0.52", "72.5954, -116.772, -74.8, 0.29", "73.8759, -117.091, -75.3807, 0.29", "74.2946, -117.205, -75.5931, 0.29", "74.8445, -117.364, -75.8746, 0.59", "75.8793, -117.667, -76.3761, 0.59", "76.7834, -117.958, -76.7639, 0.59", "78.5919, -118.608, -77.5238, 1.03", "79.129, -118.814, -77.7425, 1.03", "79.7957, -119.052, -78.0141, 0.37", "80.7596, -119.351, -78.3918, 0.37", "81.4166, -119.519, -78.6595, 0.37", "82.5113, -119.775, -79.0994, 0.37", "82.9522, -119.884, -79.2454, 0.37", "83.5165, -120.003, -79.4798, 0.37", "83.8747, -120.07, -79.6458, 0.74", "85.0908, -120.247, -80.2476, 0.29", "86.0777, -120.372, -80.7511, 0.29", "87.1332, -120.535, -81.2513, 0.29", "88.1889, -120.734, -81.7312, 0.74", "88.7585, -120.859, -81.9803, 0.96", "89.8288, -121.132, -82.4064, 1.11", "90.8288, -121.399, -82.7483, 0.44", "92.2072, -121.748, -83.1737, 0.44", "92.9887, -121.947, -83.3943, 0.44", "94.2979, -122.284, -83.6954, 0.44", "95.218, -122.516, -83.8826, 0.44", "95.947, -122.686, -83.9988, 0.44", "96.5235, -122.794, -84.0727, 0.44", "97.9531, -122.985, -84.2414, 0.44", "98.8719, -123.095, -84.3259, 0.59", "99.2656, -123.135, -84.3484, 0.59", "99.8873, -123.203, -84.3759, 0.59", "100.937, -123.351, -84.419, 0.59", "101.797, -123.484, -84.4474, 0.59", "102.696, -123.617, -84.4644, 0.66", "103.356, -123.713, -84.4603, 0.81", "104.502, -123.904, -84.4285, 0.81", "105.466, -124.109, -84.3835, 0.37", "106.106, -124.28, -84.3433, 0.37", "106.636, -124.448, -84.3216, 0.37", "107.551, -124.773, -84.3029, 0.37", "108.382, -125.091, -84.3374, 0.37", "109.466, -125.538, -84.4353, 0.88", "110.162, -125.83, -84.5236, 1.18", "111.64, -126.436, -84.7686, 0.37", "112.584, -126.809, -84.9568, 0.37", "113.709, -127.199, -85.2711, 0.66", "114.144, -127.33, -85.4062, 0.44", "114.809, -127.504, -85.6303, 0.44", "115.238, -127.606, -85.7731, 0.44", "116.044, -127.783, -86.018, 0.44", "117.504, -128.108, -86.4086, 1.11", "118.349, -128.321, -86.639, 1.4", "119.16, -128.546, -86.8807, 0.81", "119.859, -128.757, -87.1185, 0.59", "120.643, -129.037, -87.4326, 0.59", "121.545, -129.435, -87.8646, 0.59", "122.535, -129.992, -88.6075, 0.59", "122.922, -130.257, -88.999, 0.59", "123.477, -130.743, -89.6661, 0.74", "124.162, -131.515, -90.677, 0.88", "124.574, -132.1, -91.3867, 1.03", "125.659, -134.033, -93.4437, 0.81", "125.945, -134.634, -93.9802, 0.81", "126.439, -135.745, -94.8205, 0.81", "126.925, -136.819, -95.5268, 1.4", "127.213, -137.403, -95.8609, 1.77", "127.747, -138.39, -96.3208, 1.25", "128.218, -139.141, -96.6119, 0.96", "128.925, -140.068, -97.1487, 0.66", "129.865, -141.049, -97.9861, 0.22", "130.039, -141.203, -98.1603, 0.22", "130.378, -141.486, -98.5327, 0.96", "131.261, -142.221, -99.5196, 1.55", "132.574, -143.349, -100.983, 1.84", "133.631, -144.305, -102.052, 0.88", "134.398, -145.016, -102.687, 0.88", "135.198, -145.755, -103.254, 0.88", "136.161, -146.633, -103.787, 0.37", "136.599, -147.022, -103.937, 0.37", "138.04, -148.206, -104.043, 0.37", "138.892, -148.819, -103.978, 0.37", "139.526, -149.219, -103.892, 0.37", "140.499, -149.76, -103.753, 0.66", "141.44, -150.242, -103.618, 0.66", "143.266, -151.163, -103.333, 0.37", "144.608, -151.825, -103.107, 0.37", "145.865, -152.46, -102.92, 0.37", "146.506, -152.795, -102.84, 0.59", "147.088, -153.115, -102.799, 0.81", "147.808, -153.534, -102.824, 1.11", "148.45, -153.929, -102.926, 0.59", "149.546, -154.643, -103.138, 0.59", "150.443, -155.26, -103.327, 0.59", "151.233, -155.816, -103.49, 0.59", "152.233, -156.551, -103.682, 0.52", "153.421, -157.453, -103.881, 0.52", "154.113, -157.995, -103.979, 0.52", "155.55, -159.116, -104.207, 0.52", "156.582, -159.93, -104.394, 0.52", "157.616, -160.762, -104.589, 0.52", "158.893, -161.858, -104.93, 0.81", "159.268, -162.203, -105.067, 0.96", "160.412, -163.321, -105.578, 0.59", "160.981, -163.914, -105.86, 0.81", "161.678, -164.657, -106.204, 0.81", "163.379, -166.426, -106.973, 0.52", "164.351, -167.41, -107.332, 0.52", "164.794, -167.837, -107.452, 0.52", "166.22, -169.121, -107.676, 0.52", "167.428, -170.12, -107.792, 0.52", "168.417, -170.908, -107.816, 0.52", "169.279, -171.562, -107.76, 0.44", "170.059, -172.163, -107.708, 0.44", "171.086, -173.02, -107.64, 0.74", "171.42, -173.341, -107.609, 0.74", "172.402, -174.489, -107.496, 0.74", "172.791, -175.023, -107.446, 0.74", "173.719, -176.448, -107.316, 0.74", "174.301, -177.4, -107.215, 0.74", "174.858, -178.315, -107.107, 0.74", "175.433, -179.171, -106.997, 0.74", "175.984, -179.888, -106.898, 0.44", "176.409, -180.362, -106.834, 0.52", "177.035, -180.903, -106.767, 0.52", "177.467, -181.2, -106.746, 0.29", "178.352, -181.723, -106.746, 0.29", "178.95, -182.037, -106.754, 0.37", "180.074, -182.573, -106.784, 0.37", "180.866, -182.934, -106.767, 0.66", "181.832, -183.382, -106.661, 0.37", "182.616, -183.757, -106.521, 0.37", "183.029, -183.967, -106.41, 0.52", "183.563, -184.26, -106.201, 0.66", "184.859, -185.033, -105.58, 0.29", "185.956, -185.737, -105.003, 0.29", "186.521, -186.112, -104.7, 0.29", "187.688, -186.942, -104.09, 0.29", "188.581, -187.656, -103.552, 0.37", "189.329, -188.331, -103.062, 0.37", "189.779, -188.793, -102.718, 0.37", "190.371, -189.49, -102.204, 0.59", "190.716, -189.935, -101.855, 0.59", "192.036, -191.798, -100.398, 0.59", "192.306, -192.219, -100.072, 0.59", "193.012, -193.441, -99.1369, 0.37", "193.825, -194.848, -98.0302, 0.37", "194.563, -196.164, -96.994, 0.37", "194.825, -196.625, -96.6421, 0.37", "195.681, -198.083, -95.6479, 0.37", "196.443, -199.326, -94.7871, 0.37", "197.235, -200.601, -93.9449, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.783, -104.942, -59.5435, 0.88", "19.6154, -106.092, -60.2925, 0.88", "19.0859, -106.619, -60.5858, 0.74", "18.3176, -107.402, -60.9831, 0.74", "17.0674, -108.696, -61.5795, 0.74", "15.8233, -110.012, -62.1593, 0.52", "14.4079, -111.538, -62.8017, 0.52", "13.3057, -112.823, -63.3569, 0.52", "12.4254, -113.917, -63.8231, 0.37", "11.7525, -114.847, -64.2156, 0.37", "11.1512, -115.77, -64.5703, 1.47", "10.8334, -116.325, -64.7744, 1.47", "9.98379, -118.062, -65.4801, 0.37", "9.59615, -118.967, -65.8507, 0.37", "8.94938, -120.701, -66.5805, 0.37", "8.66788, -121.528, -66.9312, 0.37", "8.47245, -122.087, -67.1569, 1.11", "8.1705, -122.901, -67.4719, 0.44", "7.80762, -123.767, -67.759, 0.44", "7.0761, -125.3, -68.2448, 0.44", "6.81802, -125.745, -68.3648, 0.44", "6.34306, -126.494, -68.5521, 0.44", "5.88253, -127.214, -68.7058, 0.96", "5.24842, -128.139, -68.8744, 0.96", "4.59403, -129.02, -69.0039, 0.37", "3.85755, -129.923, -69.1987, 0.37", "3.37357, -130.491, -69.3662, 0.37", "2.85522, -131.065, -69.5686, 1.03", "1.49803, -132.406, -70.2345, 0.37", "0.623248, -133.195, -70.7289, 0.37", "-1.06542, -134.683, -71.8648, 0.74", "-1.79026, -135.318, -72.3798, 1.25", "-2.41105, -135.875, -72.84, 0.81", "-3.74986, -137.151, -73.9307, 0.81", "-4.08656, -137.511, -74.2287, 0.81", "-5.16114, -138.757, -75.1502, 0.15", "-6.26949, -140.158, -76.0098, 0.15", "-7.22007, -141.419, -76.7254, 0.29", "-8.05087, -142.548, -77.2858, 1.62", "-8.7078, -143.41, -77.633, 0.52", "-9.82546, -144.767, -78.133, 0.44", "-10.342, -145.35, -78.3203, 0.44", "-10.7003, -145.737, -78.4375, 0.44", "-11.8902, -146.904, -78.6844, 0.44", "-12.7115, -147.64, -78.7702, 0.59", "-13.239, -148.081, -78.8248, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.82764, -50.0277, -10.9289, 0.74", "7.30185, -52.4506, -10.6939, 0.74", "7.52733, -53.5152, -10.6211, 0.74", "7.76762, -54.382, -10.5775, 0.88", "8.27218, -55.8893, -10.5296, 0.88", "8.88336, -57.5239, -10.4957, 1.03", "9.53443, -59.1159, -10.4364, 1.03", "10.0214, -60.3399, -10.4251, 1.03", "10.7944, -62.2815, -10.2835, 0.81", "11.3216, -63.5501, -10.0533, 0.81", "11.724, -64.5057, -9.74934, 1.03", "12.3188, -65.964, -9.10428, 1.18", "12.6811, -66.9283, -8.5537, 1.18", "13.1937, -68.5993, -7.47009, 1.18", "13.5752, -70.2498, -6.25998, 1.03", "13.7888, -71.3687, -5.43808, 0.88", "13.9717, -72.3798, -4.72355, 0.88", "14.1568, -73.3508, -4.07102, 0.88", "14.3574, -74.2013, -3.5456, 0.88", "14.7543, -75.749, -2.7674, 0.96", "15.0769, -77.0712, -2.19463, 0.96", "15.4219, -78.6544, -1.6009, 0.96", "15.7172, -80.3071, -1.07348, 0.96", "15.9046, -81.3506, -0.830621, 0.96", "16.1566, -82.6321, -0.613678, 0.96", "16.4186, -83.6673, -0.496222, 0.96", "16.8647, -85.0742, -0.22531, 0.96", "17.2319, -86.0498, 0.0959727, 0.96", "17.9525, -87.8912, 0.910475, 0.96", "18.3014, -88.8552, 1.437, 0.96", "18.8624, -90.5563, 2.50324, 0.96", "19.718, -93.2079, 4.309, 0.96", "20.3673, -95.2465, 5.78044, 0.81", "20.6358, -96.1617, 6.46852, 0.66", "20.8703, -97.2273, 7.28665, 0.66", "20.9753, -98.0136, 7.82568, 0.66", "20.9808, -98.6261, 8.13042, 0.66", "20.9631, -99.5726, 8.35273, 0.74", "21.0015, -100.673, 8.52423, 1.03", "21.0559, -101.069, 8.59902, 1.03", "21.2654, -102.008, 8.78807, 0.81", "21.4455, -102.738, 8.9376, 0.81", "21.6554, -103.647, 9.12483, 0.59", "21.9291, -104.911, 9.37369, 0.59", "22.0755, -105.591, 9.48924, 0.59", "22.353, -106.638, 9.68101, 0.88", "22.4066, -106.789, 9.71322, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.82764, -50.0277, -10.9289, 2.28", "7.2644, -52.7532, -11.4923, 2.28", "7.51877, -54.3405, -11.8205, 2.14", "7.8181, -56.2083, -12.2067, 2.14", "8.13375, -58.178, -12.6139, 2.14", "8.51052, -60.5291, -13.0999, 2.36", "8.63591, -61.3115, -13.2617, 2.87" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-19.6999, 39.9985, -0.467042, 0.59", "-20.847, 40.3806, -1.40308, 0.59", "-21.3395, 40.5669, -1.7557, 0.59", "-22.3488, 40.9392, -2.63975, 0.37", "-22.774, 41.0987, -3.02429, 0.37", "-23.7887, 41.4938, -3.9287, 0.59", "-24.374, 41.7209, -4.45419, 0.59", "-25.229, 42.1184, -5.21633, 0.59", "-26.8885, 42.8822, -6.62264, 0.59", "-27.5405, 43.1567, -7.11547, 0.74", "-27.9472, 43.3101, -7.39188, 0.74", "-29.0593, 43.6833, -8.0238, 0.74", "-29.5745, 43.8539, -8.28555, 0.74", "-30.5526, 44.2289, -8.66422, 0.29", "-31.1962, 44.5011, -8.82535, 0.52", "-31.6178, 44.6924, -8.92298, 1.03", "-32.0504, 44.9013, -9.01287, 1.03", "-33.3999, 45.5754, -9.2333, 0.29", "-33.8476, 45.822, -9.33287, 0.66", "-34.4613, 46.209, -9.4984, 0.52", "-35.1797, 46.6954, -9.70366, 0.52", "-35.6663, 47.0414, -9.88202, 0.22", "-36.2307, 47.449, -10.1198, 0.22", "-37.0715, 48.0367, -10.4962, 0.22", "-37.638, 48.4043, -10.7913, 0.22", "-38.0522, 48.6698, -11.0312, 0.22", "-39.1634, 49.3923, -11.7164, 0.52", "-39.4901, 49.6179, -11.9255, 1.18", "-39.8733, 49.8924, -12.1656, 1.18", "-40.8306, 50.5219, -12.7293, 0.37", "-41.0644, 50.671, -12.8676, 0.37", "-41.7544, 51.0886, -13.2406, 0.37", "-42.5085, 51.4944, -13.5599, 0.37", "-42.8314, 51.6373, -13.6814, 0.88", "-43.49, 51.8731, -13.8779, 0.59", "-43.9154, 51.9905, -13.9745, 0.59", "-44.3631, 52.094, -14.1182, 0.29", "-44.9948, 52.2081, -14.3818, 0.29", "-45.602, 52.326, -14.6634, 0.29", "-46.2592, 52.5126, -15.0038, 0.29", "-46.9246, 52.7781, -15.4134, 0.59", "-48.1045, 53.3546, -16.258, 0.81", "-48.6737, 53.6656, -16.7061, 0.22", "-49.1023, 53.921, -17.0896, 0.22", "-49.6075, 54.2213, -17.5442, 0.22", "-50.2827, 54.6315, -18.1813, 0.29", "-50.4444, 54.7266, -18.3626, 0.52", "-50.8113, 54.9074, -18.7717, 0.52", "-51.2932, 55.0987, -19.3321, 0.52", "-51.9154, 55.2948, -20.0437, 0.52", "-52.6334, 55.4667, -20.8168, 0.52", "-54.1754, 55.8397, -22.4503, 0.52", "-54.7123, 55.9692, -22.9943, 1.18", "-55.4873, 56.1437, -23.6873, 1.92", "-55.9753, 56.2346, -24.0441, 1.92", "-57.0018, 56.3826, -24.732, 0.37", "-57.6173, 56.4393, -25.0524, 0.22", "-58.4314, 56.5034, -25.4553, 0.22", "-59.5725, 56.5984, -26.0733, 0.22", "-60.3212, 56.6652, -26.4715, 0.22", "-61.2622, 56.7502, -26.9648, 0.81", "-62.2083, 56.8422, -27.4153, 0.81", "-63.9684, 57.0235, -28.1765, 0.66", "-64.8742, 57.1338, -28.5258, 0.66", "-65.4824, 57.2145, -28.7081, 0.37", "-66.2109, 57.3227, -28.8778, 0.37", "-67.1538, 57.4685, -29.0133, 0.29", "-67.7548, 57.5542, -29.0682, 0.44", "-68.6405, 57.6723, -29.0854, 0.44", "-69.5829, 57.7877, -29.1304, 0.44", "-70.6716, 57.9165, -29.2093, 1.25", "-71.2675, 57.9954, -29.2611, 1.25", "-71.9336, 58.0863, -29.3591, 0.29", "-73.0603, 58.261, -29.6608, 0.29", "-73.6305, 58.363, -29.8687, 1.4", "-74.3056, 58.4797, -30.1429, 1.99", "-74.719, 58.5572, -30.3099, 1.99", "-76.1799, 58.866, -31.0037, 0.44", "-77.6081, 59.2038, -31.7446, 0.59", "-77.6081, 59.2038, -31.7446, 0.59", "-78.4051, 59.3795, -32.1507, 0.29", "-79.4783, 59.6308, -32.5976, 0.29", "-80.5433, 59.8815, -32.9022, 0.74", "-81.2119, 60.0367, -33.0015, 1.03", "-81.6901, 60.1297, -33.03, 1.03", "-82.4112, 60.2455, -33.0621, 0.22", "-83.95, 60.4432, -33.1623, 0.22", "-84.8209, 60.5579, -33.2247, 0.22", "-85.5598, 60.6559, -33.2744, 0.29", "-86.6009, 60.7796, -33.3689, 1.84", "-87.6244, 60.8685, -33.5284, 1.84", "-88.9433, 60.9368, -33.8073, 0.29", "-90.7942, 60.9412, -34.2794, 0.29", "-91.4252, 60.9307, -34.4645, 0.29", "-92.1283, 60.9138, -34.7048, 1.11", "-93.5954, 60.8722, -35.2503, 0.29", "-94.4374, 60.8466, -35.615, 0.29", "-95.2201, 60.8308, -35.974, 0.37", "-95.8637, 60.844, -36.3089, 0.37", "-96.7219, 60.9453, -36.7515, 0.37", "-98.3658, 61.2912, -37.5958, 0.37", "-99.6637, 61.6533, -38.2487, 1.69", "-100.373, 61.8692, -38.6064, 1.69", "-101.67, 62.3006, -39.2544, 0.37", "-102.785, 62.6912, -39.797, 0.37", "-104.033, 63.1269, -40.4012, 0.37", "-104.89, 63.4317, -40.8232, 0.37", "-105.611, 63.6715, -41.163, 0.37", "-106.38, 63.9023, -41.5295, 0.37", "-106.907, 64.0493, -41.79, 1.03", "-107.973, 64.3347, -42.3672, 0.44", "-109.33, 64.6844, -43.1495, 0.44", "-110.011, 64.8525, -43.5537, 0.59", "-110.528, 64.9869, -43.8946, 0.59", "-111.471, 65.2223, -44.5333, 1.03", "-112.325, 65.42, -45.1739, 1.03", "-113.056, 65.5722, -45.7717, 0.37", "-113.721, 65.6731, -46.3433, 0.37", "-114.843, 65.7948, -47.3052, 0.37", "-115.267, 65.828, -47.6862, 0.37", "-116.412, 65.9145, -48.6918, 1.33", "-117.344, 66.0179, -49.5319, 0.37", "-117.777, 66.0959, -49.9335, 0.37", "-118.012, 66.1578, -50.149, 0.37", "-118.886, 66.4326, -50.9221, 0.37", "-119.472, 66.6718, -51.427, 0.37", "-120.321, 67.0795, -52.1851, 0.37", "-121.05, 67.4776, -52.8583, 0.37", "-121.71, 67.8734, -53.4774, 0.88", "-122.754, 68.5208, -54.3634, 0.22", "-123.296, 68.8473, -54.7614, 0.22", "-124.443, 69.5319, -55.5128, 0.74", "-125.017, 69.8877, -55.8306, 0.74", "-125.433, 70.1571, -56.0221, 0.22", "-126.762, 71.0957, -56.5442, 0.22", "-127.367, 71.5698, -56.7327, 0.22", "-127.82, 71.9415, -56.8604, 0.22", "-128.366, 72.4189, -56.9787, 0.66", "-128.842, 72.8552, -57.1021, 0.66", "-129.027, 73.0388, -57.1656, 0.66", "-129.724, 73.79, -57.4459, 0.29", "-130.015, 74.1131, -57.5597, 0.29", "-130.376, 74.5193, -57.6936, 0.66", "-130.642, 74.8044, -57.7801, 0.66", "-131.139, 75.3157, -57.9245, 0.22", "-132.234, 76.3939, -58.1795, 0.22", "-132.574, 76.7279, -58.2383, 0.22", "-132.769, 76.922, -58.2794, 0.59", "-133.389, 77.529, -58.4171, 0.37", "-133.918, 78.0355, -58.558, 0.37", "-134.515, 78.5906, -58.7462, 0.37", "-134.749, 78.7974, -58.8496, 1.11", "-136.393, 80.1, -59.6404, 0.29", "-136.834, 80.4212, -59.8558, 0.29", "-137.546, 80.9293, -60.2333, 0.29", "-138.163, 81.3466, -60.5663, 1.18", "-139.171, 81.9752, -61.106, 0.29", "-139.97, 82.4506, -61.5557, 0.29", "-140.609, 82.815, -61.9227, 0.29", "-141.121, 83.1416, -62.2429, 0.29", "-141.751, 83.6015, -62.6626, 0.37", "-141.951, 83.7718, -62.8449, 0.37", "-142.676, 84.4794, -63.6728, 0.37", "-143.04, 84.8717, -64.1218, 0.37", "-143.631, 85.5172, -64.8417, 0.44", "-144.004, 85.9102, -65.2728, 0.44", "-145.185, 87.1162, -66.5706, 0.81", "-145.495, 87.415, -66.8677, 0.81", "-146.707, 88.4251, -67.7672, 0.29", "-147.181, 88.7623, -68.0382, 0.66", "-147.83, 89.1525, -68.302, 1.11", "-148.247, 89.3788, -68.4225, 1.11", "-148.909, 89.7152, -68.5639, 0.29", "-149.924, 90.1792, -68.8561, 0.29", "-150.83, 90.5246, -69.2017, 0.29", "-151.809, 90.8693, -69.602, 0.44", "-152.387, 91.0529, -69.8746, 0.44", "-153.153, 91.2751, -70.2887, 0.52", "-154.618, 91.6753, -71.1523, 0.22", "-155.804, 92.0016, -71.9201, 0.22", "-156.817, 92.286, -72.6105, 0.22", "-158.027, 92.684, -73.4161, 0.22", "-158.605, 92.91, -73.7962, 0.96", "-159.116, 93.1631, -74.1336, 0.96", "-160.194, 93.9421, -74.9514, 0.29", "-160.76, 94.5174, -75.4502, 0.29", "-161.552, 95.5834, -76.28, 0.29", "-161.666, 95.7727, -76.404, 0.52", "-162.095, 96.6217, -76.9129, 0.52", "-162.621, 97.9183, -77.7232, 0.22", "-162.853, 98.6183, -78.1463, 0.22", "-163.043, 99.2877, -78.6026, 0.22", "-163.239, 100.001, -79.1411, 0.22", "-163.38, 100.463, -79.5337, 0.22", "-163.759, 101.571, -80.5605, 0.52", "-164.019, 102.206, -81.194, 0.52", "-164.484, 103.149, -82.2481, 0.52", "-164.685, 103.483, -82.6494, 0.52", "-165.413, 104.479, -83.886, 0.52", "-166.232, 105.401, -85.0193, 0.15", "-166.657, 105.814, -85.4844, 0.15", "-167.425, 106.493, -86.2111, 0.15", "-167.974, 106.942, -86.6425, 0.37", "-168.573, 107.436, -87.0985, 0.37", "-168.849, 107.676, -87.3006, 0.37", "-169.207, 108.037, -87.6092, 0.59", "-169.436, 108.333, -87.86, 0.59", "-169.731, 108.824, -88.2364, 1.11", "-170.137, 109.637, -88.8815, 1.11", "-170.534, 110.508, -89.5706, 0.37", "-170.75, 111.011, -89.9756, 0.37", "-170.889, 111.337, -90.2425, 0.37", "-171.096, 111.804, -90.6069, 0.37", "-171.453, 112.5, -91.0719, 0.37", "-171.987, 113.442, -91.5938, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-19.6999, 39.9985, -0.467042, 1.18", "-20.1195, 40.8933, -0.119486, 1.18", "-20.7033, 42.0463, 0.361971, 1.11", "-21.1596, 42.9122, 0.725085, 1.11", "-21.6028, 43.7532, 1.07779, 1.18", "-22.0729, 44.6455, 1.45197, 1.18", "-22.8232, 46.0693, 2.0491, 1.18", "-23.1518, 46.7057, 2.33467, 1.18", "-23.3686, 47.1026, 2.51812, 1.18" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "27.1231, 41.5383, 24.1807, 0.74", "27.855, 41.5347, 24.1807, 0.74", "28.1476, 41.5244, 24.1812, 0.66", "30.0923, 41.3338, 24.1859, 0.22", "30.6736, 41.2362, 24.1876, 0.29", "31.1897, 41.1219, 24.1893, 0.29", "31.2761, 41.0981, 24.1896, 0.29", "31.942, 40.8266, 24.2393, 0.29", "32.4135, 40.4654, 24.3267, 0.29", "32.6644, 40.0952, 24.4302, 0.37", "32.864, 39.82, 24.5139, 0.37", "33.0402, 39.6545, 24.6013, 0.66", "33.8178, 39.2541, 25.0052, 0.66", "34.2652, 39.1908, 25.2727, 0.44", "34.623, 39.1986, 25.4927, 0.29", "35.3029, 39.2828, 25.903, 0.29", "36.5022, 39.5263, 26.603, 0.29", "36.5788, 39.5485, 26.646, 0.29", "37.405, 39.8671, 27.1001, 0.29", "37.4711, 39.8946, 27.1377, 0.29", "38.0615, 40.1263, 27.4757, 0.29", "38.7439, 40.312, 27.8515, 0.66", "39.0915, 40.346, 28.0084, 0.74", "39.7471, 40.3607, 28.2654, 0.74", "40.0728, 40.3428, 28.3614, 0.66", "40.3598, 40.3102, 28.4323, 0.52", "41.2529, 40.1392, 28.6003, 0.44", "41.7019, 40.0311, 28.6613, 0.59", "42.0569, 39.9437, 28.696, 0.52", "42.7878, 39.7711, 28.8041, 0.29", "43.436, 39.6565, 28.946, 0.22", "43.9461, 39.5942, 29.0821, 0.29", "44.5218, 39.552, 29.2466, 0.29", "45.3483, 39.4945, 29.5119, 0.37", "46.5209, 39.3944, 29.9422, 0.29", "47.114, 39.335, 30.2043, 0.37", "47.3059, 39.3174, 30.3073, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "27.1231, 41.5383, 24.1807, 0.66", "27.9072, 42.2404, 24.2002, 0.66", "28.378, 42.6583, 24.2434, 0.66", "28.8569, 43.0546, 24.3004, 1.18", "29.2121, 43.3248, 24.3394, 1.18", "30.5749, 44.2933, 24.4739, 0.81", "31.1437, 44.6852, 24.5192, 0.81", "31.6469, 44.9973, 24.5604, 0.96", "32.2189, 45.3462, 24.611, 0.96", "32.6919, 45.6409, 24.6526, 0.96", "33.3012, 46.0051, 24.7019, 0.96", "33.8747, 46.3731, 24.7436, 0.88", "34.4177, 46.752, 24.8381, 0.88", "34.8244, 47.0612, 24.9061, 0.96", "35.5056, 47.6419, 25.0606, 1.03", "35.8571, 47.9735, 25.1716, 1.03", "36.1619, 48.2866, 25.3007, 0.88", "37.1681, 49.4105, 25.8917, 0.88" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "7.1711, 57.1219, 25.1838, 0.66", "7.8331, 58.9901, 28.3447, 0.66", "8.00125, 59.4795, 29.0568, 0.74", "8.08586, 59.7519, 29.3805, 0.74", "8.1326, 59.9336, 29.5444, 0.74", "8.26112, 60.7251, 29.9597, 0.74", "8.27565, 61.1303, 30.2871, 0.74", "8.2455, 61.2245, 30.3589, 0.74", "8.01984, 61.5646, 30.9142, 0.74", "7.71061, 61.919, 31.7232, 0.74", "7.57925, 62.0473, 32.0832, 0.74", "6.62125, 62.8558, 34.8572, 0.59", "6.21817, 63.1387, 36.1413, 0.52" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.1711, 57.1219, 25.1838, 1.18", "8.02426, 58.2182, 25.5101, 1.18", "8.77076, 59.3816, 25.5392, 0.44", "9.18358, 60.0666, 25.4438, 0.15", "9.58326, 60.8257, 25.28, 0.07", "9.84533, 61.4297, 25.1275, 0.07", "10.2047, 62.2579, 24.9183, 0.07", "10.5226, 63.2066, 24.5142, 0.07", "10.6691, 63.7498, 24.2107, 0.22", "10.7761, 64.2847, 23.9023, 0.22", "10.8594, 64.8472, 23.5676, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-258.661, -286.264, -123.249, 0.29", "-259.359, -287.567, -122.985, 0.29", "-259.717, -288.123, -122.881, 0.29", "-260.348, -289.04, -122.725, 0.29", "-261.29, -290.205, -122.474, 0.44", "-262.18, -291.228, -122.247, 0.44", "-263.019, -292.131, -121.985, 0.44", "-263.919, -292.984, -121.68, 0.44", "-264.407, -293.41, -121.51, 0.44", "-266.264, -294.868, -120.884, 0.44", "-267.486, -295.786, -120.495, 0.44", "-269.198, -297.035, -119.837, 0.52", "-269.37, -297.162, -119.762, 0.74", "-269.789, -297.488, -119.57, 0.74", "-271.196, -298.614, -118.845, 0.37", "-271.754, -299.135, -118.539, 0.37", "-272.904, -300.297, -117.899, 0.74", "-273.339, -300.767, -117.674, 0.74", "-274.484, -301.982, -117.115, 0.44", "-275.717, -303.287, -116.557, 0.74", "-277.13, -304.807, -115.963, 0.29", "-277.58, -305.242, -115.823, 0.74", "-278.05, -305.656, -115.734, 0.74", "-279.199, -306.599, -115.57, 0.44", "-279.979, -307.209, -115.505, 0.74", "-280.278, -307.432, -115.508, 0.74", "-281.628, -308.357, -115.525, 0.52", "-282.624, -309.059, -115.54, 0.44", "-283.135, -309.439, -115.55, 0.88", "-283.365, -309.622, -115.555, 0.88", "-285.497, -311.261, -115.617, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-258.661, -286.264, -123.249, 0.44", "-259.992, -284.823, -122.809, 0.44", "-260.278, -284.555, -122.595, 0.44", "-261.342, -283.719, -121.507, 0.44", "-261.83, -283.362, -120.991, 0.44", "-262.216, -283.084, -120.526, 0.44", "-262.688, -282.744, -119.958, 0.44", "-264.686, -281.368, -117.412, 0.44", "-265.651, -280.766, -116.053, 0.44", "-266.073, -280.549, -115.38, 0.59", "-267.171, -280.015, -113.452, 0.59" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "197.235, -200.601, -93.9449, 0.37", "198.627, -201.904, -93.3716, 0.37", "199.736, -202.903, -92.9897, 0.37", "200.572, -203.626, -92.7495, 0.37", "201.678, -204.568, -92.4779, 0.37", "202.99, -205.667, -92.1976, 0.37", "203.745, -206.288, -92.055, 0.37", "204.522, -206.88, -91.9602, 0.37", "205.461, -207.591, -91.9123, 0.37", "206.308, -208.244, -91.8777, 0.37", "207.01, -208.798, -91.8621, 0.37", "207.654, -209.306, -91.8754, 0.37", "208.385, -209.883, -91.8864, 0.37", "209.027, -210.396, -91.8864, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "197.235, -200.601, -93.9449, 0.37", "197.976, -199.666, -93.5061, 0.37", "198.427, -199.036, -93.2326, 0.37", "199.413, -197.361, -92.6025, 0.37", "199.736, -196.651, -92.3662, 0.37", "199.98, -196.018, -92.1767, 0.37", "200.312, -195.057, -91.8945, 0.37", "200.637, -193.885, -91.5538, 0.37", "200.939, -192.587, -91.1742, 0.37", "201.233, -191.121, -90.7507, 0.37", "201.427, -190.183, -90.453, 0.37", "201.745, -188.69, -89.9239, 0.52", "202.049, -187.465, -89.4566, 0.29", "202.486, -186.038, -88.8567, 0.29", "202.728, -185.398, -88.5607, 0.29", "202.969, -184.82, -88.2858, 0.52", "203.359, -183.915, -87.8545, 0.22", "203.797, -182.931, -87.3952, 0.22", "204.367, -181.698, -86.8365, 0.22", "204.666, -181.077, -86.5689, 0.22", "204.941, -180.493, -86.3274, 0.22", "205.37, -179.539, -85.9316, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.239, -148.081, -78.8248, 0.44", "-14.6041, -148.976, -80.1521, 0.44", "-15.3054, -149.475, -80.8079, 0.44", "-16.1078, -150.121, -81.5062, 0.59", "-17.3364, -151.196, -82.6293, 0.15", "-17.8516, -151.662, -83.0927, 0.59", "-18.6898, -152.444, -83.8609, 0.66", "-19.6095, -153.324, -84.6735, 0.29", "-20.4273, -154.172, -85.4433, 0.29", "-21.269, -155.141, -86.232, 0.59", "-21.7323, -155.749, -86.6754, 1.4", "-22.5869, -157.002, -87.5897, 1.18", "-23.2068, -158.054, -88.2993, 0.52", "-23.4139, -158.457, -88.5724, 0.37", "-23.7889, -159.256, -89.1089, 0.37", "-24.1183, -160.031, -89.5895, 0.37", "-24.7878, -161.909, -90.7163, 0.37", "-25.0505, -162.753, -91.187, 0.37", "-25.3856, -163.914, -91.8176, 0.52", "-25.5319, -164.416, -92.0914, 0.66", "-25.7596, -165.22, -92.6254, 0.29", "-26.1898, -166.63, -93.6427, 0.29", "-26.5649, -167.975, -94.7203, 0.29", "-26.6512, -168.29, -95.0083, 0.44", "-26.8368, -169.006, -95.6964, 0.44", "-27.4989, -171.541, -98.4412, 0.52", "-27.6143, -171.964, -98.9542, 0.74", "-27.9413, -173.062, -100.435, 0.81", "-28.2616, -174.183, -101.96, 0.81", "-28.314, -174.39, -102.254, 0.81", "-28.4875, -175.27, -103.504, 0.81", "-28.6205, -176.1, -104.575, 0.81", "-28.6431, -176.34, -104.848, 0.44", "-28.7246, -177.262, -105.794, 0.44", "-28.9992, -179.579, -108.447, 0.44", "-29.0538, -179.915, -108.852, 1.11", "-29.1764, -180.404, -109.511, 0.37", "-29.4969, -181.428, -111.031, 0.37", "-29.8104, -182.21, -112.343, 0.52", "-30.6056, -183.679, -114.998, 0.52", "-30.8442, -184.044, -115.622, 0.52", "-31.5237, -185.0, -117.205, 0.52", "-31.7882, -185.359, -117.767, 0.52", "-32.5364, -186.349, -119.121, 0.52", "-32.9492, -186.979, -119.728, 0.29", "-33.5068, -187.894, -120.36, 0.29", "-34.0362, -188.748, -120.878, 0.29", "-34.8149, -189.991, -121.472, 0.29", "-35.2773, -190.679, -121.837, 0.29", "-35.5814, -191.124, -122.071, 0.74", "-36.1603, -191.956, -122.545, 0.37", "-36.5501, -192.497, -122.867, 0.37", "-36.9137, -193.011, -123.184, 0.74", "-38.0003, -194.656, -124.187, 0.22", "-38.407, -195.337, -124.597, 0.29", "-38.8961, -196.268, -125.045, 0.29", "-38.9924, -196.475, -125.115, 0.52", "-39.3083, -197.221, -125.33, 0.52", "-39.6064, -198.052, -125.47, 0.52", "-39.8056, -198.736, -125.416, 0.52", "-40.1292, -200.417, -125.196, 0.52", "-40.1583, -200.779, -125.116, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-13.239, -148.081, -78.8248, 0.59", "-15.0804, -147.268, -81.8153, 0.59", "-15.6577, -147.112, -82.7349, 0.59", "-15.9982, -147.069, -83.293, 0.59", "-16.7961, -146.969, -84.6007, 0.44", "-17.2672, -146.909, -85.3727, 0.44", "-17.941, -146.824, -86.477, 0.44", "-18.4245, -146.878, -87.0987, 0.44", "-19.2725, -147.157, -88.3763, 0.44" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "22.4066, -106.789, 9.71322, 0.74", "23.2234, -108.461, 9.84462, 0.74", "23.5399, -109.111, 9.82761, 0.74", "24.1739, -110.335, 9.73931, 0.74", "24.6286, -111.14, 9.63091, 0.74", "25.2266, -112.108, 9.4705, 0.74", "25.7917, -112.972, 9.31296, 0.74", "26.4429, -113.919, 9.05126, 0.96", "26.9816, -114.651, 8.84551, 0.96", "27.7637, -115.582, 8.55992, 0.74", "28.3555, -116.217, 8.36769, 0.74", "28.5177, -116.379, 8.31554, 0.74", "29.2665, -117.058, 8.05504, 0.74", "30.0388, -117.71, 7.79104, 0.74", "31.1941, -118.66, 7.38927, 0.59", "31.8114, -119.159, 7.1888, 0.59", "32.4041, -119.619, 6.99241, 0.66", "33.4581, -120.402, 6.66074, 0.66", "34.0159, -120.789, 6.49822, 0.66", "35.1269, -121.538, 6.19582, 0.66", "35.8948, -122.054, 6.01606, 0.66", "37.0621, -122.845, 5.77667, 0.59", "37.938, -123.447, 5.63849, 0.88", "38.5446, -123.872, 5.56686, 0.81", "39.274, -124.386, 5.48743, 0.52", "39.8151, -124.788, 5.42536, 0.52", "40.5344, -125.358, 5.34686, 0.74", "41.299, -126.013, 5.27675, 1.03", "42.299, -126.879, 5.14081, 0.66", "42.9577, -127.44, 5.0364, 0.52", "44.3748, -128.605, 4.79792, 0.52", "45.0569, -129.141, 4.66332, 0.66", "45.58, -129.527, 4.551, 0.66", "47.0573, -130.545, 4.2232, 0.66", "47.9744, -131.134, 4.01898, 1.11", "48.3685, -131.369, 3.93965, 1.11", "49.2461, -131.856, 3.79939, 0.59", "50.3104, -132.423, 3.66677, 0.59", "51.0995, -132.828, 3.59166, 0.59", "51.4984, -133.034, 3.56977, 0.74", "52.4307, -133.513, 3.5199, 0.74", "53.6768, -134.157, 3.41665, 0.44", "54.8199, -134.742, 3.29894, 0.44", "55.6036, -135.142, 3.19505, 1.11", "56.1282, -135.414, 3.11365, 1.33", "56.7088, -135.714, 3.01276, 1.33", "57.8425, -136.296, 2.77932, 0.52", "58.4061, -136.598, 2.63632, 0.44", "58.8375, -136.861, 2.50578, 0.44", "59.3233, -137.186, 2.35185, 0.44" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.4066, -106.789, 9.71322, 0.59", "22.2024, -108.65, 10.1096, 0.59", "22.1948, -109.778, 10.2686, 0.59", "22.2068, -110.908, 10.3887, 0.59", "22.1983, -111.368, 10.429, 0.59", "22.095, -113.26, 10.5719, 0.59", "22.0062, -114.266, 10.6377, 0.74", "21.9914, -114.895, 10.6147, 0.66", "22.013, -115.439, 10.592, 0.29", "22.0456, -116.121, 10.5787, 0.29", "22.0326, -116.565, 10.5859, 0.29", "21.9462, -117.084, 10.6184, 0.29", "21.8159, -117.816, 10.6916, 0.29", "21.7802, -118.289, 10.7492, 0.29", "21.8131, -119.021, 10.8328, 0.29", "21.9466, -120.076, 10.9468, 0.37", "22.0337, -120.655, 11.01, 0.37", "22.1439, -121.358, 11.086, 0.37", "22.2858, -122.388, 11.1909, 0.37", "22.4257, -123.402, 11.2742, 0.37", "22.5355, -123.971, 11.2946, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.63591, -61.3115, -13.2617, 1.33", "8.23923, -63.4648, -12.9126, 1.33", "7.97252, -64.7974, -12.7182, 1.33", "7.58234, -66.6881, -12.4691, 1.18", "7.44943, -67.4501, -12.3784, 1.33", "7.32306, -68.4719, -12.2689, 1.25", "7.22321, -69.8254, -12.1731, 1.25", "7.20867, -70.8312, -12.109, 1.18", "7.20847, -71.6315, -12.1258, 0.96", "7.20201, -72.6724, -12.2408, 1.11", "7.1523, -73.8188, -12.3862, 1.11", "7.07836, -75.0477, -12.5748, 1.03", "7.02111, -76.1525, -12.7772, 1.03", "6.97394, -77.1806, -12.9839, 1.25", "6.93231, -78.2892, -13.2051, 1.33", "6.8973, -79.5472, -13.452, 1.33", "6.89465, -80.9338, -13.7057, 1.33", "6.93528, -82.4306, -13.9207, 1.33", "7.03469, -84.1251, -14.1574, 1.18", "7.13905, -85.5528, -14.3642, 1.18", "7.25537, -87.0437, -14.6174, 1.18", "7.34313, -88.2947, -14.8445, 1.18", "7.37999, -89.5104, -15.0693, 1.18", "7.35057, -90.9118, -15.282, 1.11", "7.25422, -92.2639, -15.4545, 1.11", "7.0848, -93.6699, -15.5975, 1.11", "6.89255, -94.8763, -15.6747, 1.25", "6.70197, -95.9724, -15.7089, 1.18", "6.45284, -97.6185, -15.7038, 0.88", "6.39137, -98.1371, -15.6699, 0.88", "6.26504, -99.4, -15.5611, 1.18", "6.15334, -100.384, -15.4821, 1.25", "6.0066, -101.585, -15.4638, 1.25", "5.84724, -102.923, -15.532, 1.25", "5.7068, -104.167, -15.6786, 1.03", "5.58233, -105.206, -15.8698, 1.03", "5.38044, -106.498, -16.1738, 1.03", "5.18543, -107.622, -16.4726, 1.18", "4.98639, -108.701, -16.7838, 1.18", "4.73767, -109.934, -17.1437, 1.18", "4.38119, -111.622, -17.6346, 0.96", "4.04668, -113.227, -18.0879, 0.88", "3.84805, -114.278, -18.3819, 0.88", "3.6198, -115.494, -18.6946, 0.88", "3.4037, -116.585, -18.9792, 0.88", "3.15778, -117.734, -19.2604, 0.96", "2.99123, -118.525, -19.3873, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.63591, -61.3115, -13.2617, 1.03", "10.1811, -62.4371, -13.5934, 1.03", "10.9465, -62.9811, -13.7326, 1.03", "11.9744, -63.6881, -13.891, 1.03", "14.1607, -65.1352, -14.1731, 1.03", "15.9606, -66.2938, -14.3754, 1.03", "17.7845, -67.4681, -14.5804, 1.03", "19.2397, -68.3744, -14.7246, 1.03", "20.5606, -69.1696, -14.8414, 1.03", "22.4251, -70.2542, -14.9595, 1.18", "23.4679, -70.8411, -14.9609, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-23.3686, 47.1026, 2.51812, 0.88", "-23.9785, 47.3803, 2.53774, 0.88", "-24.9234, 47.8105, 2.56814, 1.4", "-24.9234, 47.8105, 2.56814, 1.4" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-23.3686, 47.1026, 2.51812, 1.25", "-23.6971, 47.5388, 2.51812, 1.25", "-24.1856, 48.2529, 2.51812, 1.4", "-24.2846, 48.4123, 2.51937, 1.4", "-24.9137, 49.5556, 2.49466, 0.88", "-25.1302, 50.0063, 2.47842, 0.88", "-25.2316, 50.2559, 2.46759, 0.88", "-25.4249, 50.9782, 2.43009, 0.81", "-25.4978, 51.4849, 2.38461, 0.81", "-25.5578, 52.17, 2.30252, 0.81", "-25.5785, 52.6156, 2.21554, 0.81", "-25.6116, 53.128, 2.09104, 0.74", "-25.6508, 53.4845, 2.02146, 0.74", "-25.7941, 54.173, 1.94862, 0.74", "-25.9628, 54.6684, 2.01552, 0.74", "-26.2213, 55.2952, 2.22083, 0.74", "-26.4009, 55.7106, 2.41438, 0.74", "-26.8349, 56.718, 2.96019, 0.74", "-27.0646, 57.2669, 3.31355, 0.88", "-27.4683, 58.2461, 4.00927, 0.96", "-27.7894, 59.0432, 4.60757, 0.96", "-28.0086, 59.5908, 5.02633, 0.81", "-28.177, 60.0087, 5.32663, 0.81", "-28.5435, 60.8424, 5.83721, 0.81", "-28.7536, 61.2498, 6.09173, 0.74", "-29.0821, 61.799, 6.42505, 0.66", "-29.2754, 62.0895, 6.57758, 0.52", "-29.4375, 62.332, 6.66826, 0.52", "-29.743, 62.8107, 6.96131, 0.96", "-30.2989, 63.763, 7.69492, 0.81", "-30.5369, 64.2201, 8.10469, 0.81", "-30.9819, 65.1987, 9.01435, 0.96", "-31.0684, 65.4139, 9.21674, 0.96", "-31.8905, 67.7621, 11.4036, 0.81", "-31.9699, 68.0131, 11.6435, 0.44", "-32.0961, 68.4157, 12.0076, 0.44", "-32.2317, 68.8143, 12.3709, 0.44", "-32.343, 69.1264, 12.6744, 0.44", "-32.4839, 69.4685, 12.9166, 0.74", "-32.513, 69.5315, 12.9331, 0.74", "-32.7753, 70.003, 13.2476, 0.74", "-32.9899, 70.3224, 13.5514, 0.74", "-33.6643, 71.1726, 14.5743, 0.59", "-33.9139, 71.4398, 14.9315, 0.52", "-34.2125, 71.7228, 15.2766, 0.52", "-35.5476, 72.8957, 16.6336, 0.52", "-35.881, 73.1654, 16.9372, 0.59", "-36.3062, 73.4912, 17.2613, 0.74", "-36.7781, 73.8294, 17.5202, 0.52", "-38.1788, 74.7732, 18.1501, 0.52", "-38.3463, 74.877, 18.197, 0.74", "-38.5464, 74.9942, 18.2226, 1.03", "-39.0285, 75.2833, 18.3292, 1.03", "-39.0285, 75.2833, 18.3292, 1.25", "-39.1541, 75.3669, 18.3857, 1.25", "-39.5664, 75.629, 18.6235, 0.96", "-40.4816, 76.1871, 19.1142, 0.59", "-41.0441, 76.4965, 19.372, 0.29", "-41.2387, 76.5911, 19.447, 0.37", "-41.6765, 76.7755, 19.5831, 0.59", "-41.8989, 76.8557, 19.6326, 0.59", "-42.465, 77.0279, 19.6878, 0.59", "-42.9563, 77.1693, 19.6592, 0.59", "-43.1925, 77.244, 19.6417, 0.52", "-43.6033, 77.4238, 19.6262, 0.37", "-43.8568, 77.596, 19.6306, 0.29", "-44.1021, 77.8466, 19.9151, 0.29", "-44.223, 77.981, 20.1716, 0.29", "-44.352, 78.1034, 20.4808, 0.88", "-44.5148, 78.2317, 20.8988, 0.81", "-44.6531, 78.3169, 21.2465, 0.81", "-45.9535, 78.8637, 24.2636, 0.81", "-46.1157, 78.906, 24.6001, 0.81", "-46.3717, 78.9507, 25.0551, 0.81", "-46.4605, 78.9615, 25.1897, 0.81", "-46.7789, 78.9939, 25.6061, 0.52", "-47.0042, 79.078, 25.9686, 0.52", "-47.1757, 79.2778, 26.2821, 0.52", "-47.3377, 79.5477, 26.6876, 0.52", "-47.4148, 79.7142, 26.9286, 0.66", "-47.4959, 79.9216, 27.2167, 0.88", "-48.0634, 81.5166, 29.5309, 0.88", "-48.1334, 81.7237, 29.8444, 0.59", "-48.2094, 81.9299, 30.1705, 0.44", "-48.279, 82.0864, 30.4264, 0.44", "-48.3909, 82.2795, 30.719, 0.52", "-48.8282, 82.9075, 31.4225, 0.59", "-48.8507, 82.9401, 31.4362, 0.59", "-49.0125, 83.1994, 31.5351, 0.74", "-49.1068, 83.3778, 31.5892, 0.88", "-49.3338, 83.8539, 31.7261, 0.59", "-49.5791, 84.4064, 31.8651, 0.44", "-49.8237, 84.9719, 31.966, 0.44", "-49.8632, 85.0517, 31.9878, 0.44", "-50.1157, 85.4823, 32.1382, 0.44", "-50.5013, 86.084, 32.3757, 0.44", "-50.547, 86.1479, 32.4044, 0.44", "-50.8379, 86.5454, 32.5852, 0.44", "-51.3325, 87.2565, 32.877, 0.44", "-51.6319, 87.7591, 33.0371, 0.44", "-51.9257, 88.3313, 33.1669, 0.44", "-51.9525, 88.3867, 33.1744, 0.44", "-52.3095, 89.1427, 33.2416, 0.88", "-52.5389, 89.6577, 33.2803, 1.25", "-52.8933, 90.4635, 33.3174, 1.25", "-53.2636, 91.2171, 33.3647, 1.25", "-53.5106, 91.6211, 33.3965, 0.96", "-53.8071, 92.0715, 33.4358, 0.52", "-54.1291, 92.4757, 33.4812, 0.37", "-54.4312, 92.7809, 33.5326, 0.22", "-54.7949, 93.0226, 33.6107, 0.07", "-55.1489, 93.1737, 33.7135, 0.07" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "37.1681, 49.4105, 25.8917, 0.66", "38.8134, 50.3632, 22.7521, 0.66", "39.0469, 50.5034, 22.3586, 0.66", "39.2828, 50.6514, 22.0269, 0.66", "39.3439, 50.6944, 21.9402, 0.66", "39.9763, 51.1895, 21.0391, 0.66", "40.1439, 51.3324, 20.8062, 0.66", "40.5614, 51.7302, 20.3745, 0.66", "41.0352, 52.228, 19.9615, 0.66", "42.0503, 53.3899, 19.3196, 0.66", "42.2802, 53.6711, 19.2809, 0.66", "42.6781, 54.192, 19.421, 0.66", "43.0078, 54.624, 19.6718, 0.66", "44.467, 56.5784, 21.0807, 0.66", "44.5533, 56.7002, 21.1757, 1.18", "44.9659, 57.3212, 21.67, 1.99", "45.2171, 57.7219, 21.9581, 1.99", "45.7206, 58.6374, 22.5019, 1.84", "46.0461, 59.3377, 22.7542, 1.25", "46.3453, 60.0249, 22.8166, 0.66", "46.611, 60.6317, 22.8598, 0.66", "46.6568, 60.7227, 22.864, 0.66", "46.9348, 61.1668, 22.8703, 0.66", "47.4279, 61.7636, 22.8507, 0.66", "48.0848, 62.3364, 22.8635, 0.37", "48.5215, 62.6232, 22.8814, 0.22", "49.359, 63.1106, 22.9288, 0.22", "49.8651, 63.4051, 22.9645, 0.22", "50.3259, 63.6736, 23.0039, 0.37", "50.7444, 63.9457, 23.0496, 0.29", "50.9473, 64.191, 23.0859, 0.59", "51.081, 64.8753, 23.1653, 0.52", "51.0585, 65.4233, 23.2169, 0.37", "50.996, 65.95, 23.3374, 0.29", "50.9248, 66.3801, 23.4767, 0.37", "50.872, 66.7296, 23.6161, 0.52", "50.8672, 66.785, 23.6417, 0.52", "50.8772, 67.0487, 23.7971, 0.52", "51.0538, 68.2456, 24.5671, 0.52", "51.0714, 68.3155, 24.6222, 0.52", "51.2072, 68.7598, 25.0008, 0.44", "51.2318, 68.8348, 25.0674, 0.44", "51.3548, 69.1915, 25.3756, 0.44", "51.4794, 69.5237, 25.6363, 0.44", "51.8444, 70.4509, 26.031, 0.37" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "37.1681, 49.4105, 25.8917, 0.74", "37.671, 50.2651, 25.6978, 0.74", "38.0455, 50.779, 25.5036, 0.52", "38.0778, 50.8171, 25.4904, 0.52", "38.3866, 51.146, 25.3914, 0.52", "38.8341, 51.6057, 25.264, 0.59", "39.6552, 52.4133, 25.0633, 0.66", "39.9563, 52.6527, 25.0026, 0.59", "40.4716, 53.047, 24.9021, 0.59", "40.8354, 53.3369, 24.8448, 0.44", "40.8919, 53.3835, 24.8393, 0.44", "41.3061, 53.7702, 24.8292, 0.44", "41.6832, 54.1418, 24.8609, 0.44", "41.9794, 54.4667, 24.9041, 0.52", "42.0579, 54.5589, 24.9202, 0.52", "42.3905, 54.9589, 25.018, 0.52", "42.7106, 55.3426, 25.1306, 0.52", "42.7595, 55.405, 25.1507, 0.52", "43.4002, 56.2532, 25.3452, 0.74", "43.7901, 56.7613, 25.5105, 0.74", "43.8369, 56.8209, 25.5258, 0.74", "44.2147, 57.3108, 25.6185, 0.74", "44.62, 57.8288, 25.7071, 0.74", "45.1403, 58.5053, 25.7717, 0.74", "46.0084, 59.6509, 25.6914, 0.74", "46.6577, 60.5456, 25.594, 0.74", "46.9587, 60.9596, 25.5458, 0.74" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-285.497, -311.261, -115.617, 0.74", "-287.286, -312.541, -116.032, 0.74", "-288.091, -313.218, -116.197, 0.74", "-288.898, -313.979, -116.31, 0.74", "-289.233, -314.323, -116.343, 0.59", "-289.798, -314.926, -116.364, 0.59", "-290.287, -315.417, -116.284, 0.59", "-290.789, -315.902, -116.091, 0.37", "-292.253, -317.184, -115.443, 0.37", "-293.304, -317.949, -114.834, 0.37", "-293.934, -318.33, -114.451, 0.37", "-296.179, -319.396, -112.971, 0.37", "-297.081, -319.756, -112.354, 0.37", "-298.196, -320.141, -111.577, 0.37", "-300.659, -320.795, -109.741, 0.37", "-301.913, -321.024, -108.834, 0.37", "-304.091, -321.292, -107.344, 0.37", "-304.727, -321.332, -106.887, 0.37", "-305.549, -321.353, -106.265, 0.37", "-307.552, -321.304, -104.693, 0.37", "-308.927, -321.185, -103.671, 0.37", "-309.255, -321.122, -103.396, 0.37", "-311.192, -320.508, -101.707, 0.37" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-285.497, -311.261, -115.617, 0.22", "-285.127, -312.894, -115.478, 0.22", "-284.905, -314.157, -115.362, 0.22", "-284.8, -315.141, -115.276, 0.22", "-284.76, -315.969, -115.208, 0.22", "-284.695, -317.3, -115.098, 0.29", "-284.671, -317.807, -115.056, 0.66", "-284.687, -318.497, -114.987, 0.37", "-284.856, -319.947, -114.826, 0.37", "-284.961, -320.499, -114.765, 0.59" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "59.3233, -137.186, 2.35185, 0.52", "60.3857, -137.592, 2.36752, 0.52", "61.2134, -137.938, 2.41609, 0.52", "62.0171, -138.304, 2.47877, 0.52", "64.1458, -139.311, 2.70721, 0.52", "65.4243, -139.916, 2.86359, 0.52", "66.7361, -140.539, 3.03307, 0.52", "67.7357, -141.044, 3.17176, 0.52", "68.8589, -141.629, 3.33688, 0.52", "69.4965, -141.973, 3.43402, 0.66", "70.0007, -142.259, 3.51085, 0.66", "70.8366, -142.745, 3.61393, 0.66", "71.4828, -143.112, 3.69809, 0.66", "72.4686, -143.632, 3.86873, 0.37", "73.1203, -144.0, 4.01489, 0.37", "73.8625, -144.466, 4.20192, 0.37", "74.7655, -145.055, 4.45927, 0.37", "76.0602, -145.911, 4.88752, 0.37", "77.3117, -146.749, 5.3681, 0.52", "78.325, -147.429, 5.81839, 0.52", "78.9652, -147.87, 6.14065, 0.52" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "59.3233, -137.186, 2.35185, 0.59", "60.1913, -138.006, 2.25589, 0.59", "60.7425, -138.527, 2.19495, 0.59", "61.3959, -139.144, 2.12272, 0.59", "62.5111, -140.198, 1.99943, 0.59", "63.1121, -140.765, 1.93299, 0.59", "63.5152, -141.146, 1.88843, 0.59" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.99123, -118.525, -19.3873, 0.88", "3.26028, -119.442, -19.3047, 0.88", "3.50782, -120.32, -19.3381, 0.59", "3.7185, -121.12, -19.3776, 0.66", "3.94204, -121.947, -19.498, 0.66", "4.18889, -122.831, -19.665, 0.88", "4.42085, -123.658, -19.8065, 0.88", "4.7846, -125.046, -20.0479, 0.96", "5.06731, -126.165, -20.2401, 0.88", "5.43234, -127.738, -20.4912, 1.18", "5.60013, -128.569, -20.6069, 0.96", "5.79224, -129.684, -20.7614, 0.96", "5.91115, -130.602, -20.8507, 0.96", "5.9719, -131.41, -20.8925, 0.96", "5.99602, -132.422, -20.9453, 0.96", "5.97276, -133.493, -20.973, 0.96", "5.90158, -134.655, -20.9784, 0.96", "5.80961, -135.769, -20.9718, 0.96", "5.71786, -137.221, -20.9142, 0.96", "5.65417, -138.378, -20.8459, 1.18", "5.64109, -138.685, -20.8228, 1.18", "5.59804, -140.327, -20.6791, 0.66", "5.59227, -141.076, -20.6048, 0.66", "5.60952, -142.953, -20.4964, 0.66", "5.64349, -144.503, -20.4995, 1.11", "5.69724, -145.713, -20.5692, 0.81", "5.77647, -146.95, -20.7072, 0.81", "5.82743, -147.623, -20.8248, 0.81", "5.91184, -148.869, -21.0636, 0.81", "5.95646, -149.963, -21.2895, 0.81", "6.01007, -150.686, -21.4363, 0.81", "6.13396, -151.689, -21.6273, 0.81", "6.32189, -152.73, -21.7899, 0.81", "6.4238, -153.21, -21.8366, 0.52", "6.61384, -154.025, -21.8571, 0.52", "6.82672, -154.915, -21.8571, 0.52", "6.99993, -155.605, -21.8571, 0.81", "7.24707, -156.476, -21.8595, 1.03", "7.57887, -157.618, -21.865, 1.03", "7.89003, -158.756, -21.8696, 0.81", "8.17456, -159.939, -21.8732, 0.81", "8.32756, -160.835, -21.8774, 0.81", "8.4061, -161.47, -21.864, 0.81", "8.46907, -162.449, -21.8207, 0.44", "8.48336, -162.826, -21.7977, 0.44", "8.50379, -163.767, -21.7335, 0.59", "8.50543, -164.799, -21.6293, 0.59", "8.48745, -165.951, -21.4918, 0.66", "8.45268, -167.416, -21.3539, 0.74", "8.44294, -169.229, -21.2568, 0.74", "8.48355, -170.827, -21.2295, 0.96", "8.54187, -171.943, -21.2496, 0.88", "8.61244, -172.718, -21.3027, 1.03", "8.80689, -174.193, -21.4905, 0.96", "9.02725, -175.388, -21.6907, 0.96", "9.2299, -176.318, -21.8838, 0.96", "9.4578, -177.226, -22.0958, 0.96", "9.71217, -178.188, -22.3235, 0.74", "9.87828, -178.789, -22.4331, 0.74", "10.0639, -179.398, -22.4918, 0.52", "10.251, -180.009, -22.5269, 0.52", "10.4257, -180.586, -22.5511, 0.52", "10.6242, -181.275, -22.5652, 0.52", "10.7703, -181.858, -22.5624, 0.52", "10.9638, -182.822, -22.5525, 0.52", "11.068, -183.461, -22.5432, 0.52", "11.2014, -184.382, -22.6173, 0.52", "11.3302, -185.208, -22.745, 0.81", "11.4357, -185.853, -22.8794, 0.81", "11.6139, -186.909, -23.1353, 0.52", "11.7129, -187.461, -23.2805, 0.52", "12.0965, -189.233, -23.7414, 0.81", "12.3207, -189.978, -23.9036, 1.18", "12.6193, -190.809, -24.0676, 0.88", "12.8779, -191.476, -24.183, 0.74", "13.1628, -192.21, -24.2862, 0.59", "13.6298, -193.518, -24.4309, 0.59", "14.3263, -195.704, -24.5818, 0.59", "14.8129, -197.462, -24.6838, 0.59", "15.0127, -198.283, -24.7252, 0.59", "15.2556, -199.519, -24.7779, 0.81", "15.4548, -200.829, -24.8322, 0.81", "15.7447, -203.465, -24.9323, 0.81", "15.8128, -204.67, -24.9676, 0.81", "15.83, -205.11, -24.9714, 0.81", "15.8825, -206.243, -25.0067, 0.66", "15.9573, -207.392, -25.0677, 0.66", "15.9951, -207.829, -25.1007, 0.81", "16.1083, -208.822, -25.2249, 0.74", "16.2408, -209.537, -25.3354, 0.74", "16.5311, -210.73, -25.5115, 0.52", "16.6979, -211.29, -25.5874, 0.52", "16.8876, -211.895, -25.6536, 0.74", "17.0102, -212.422, -25.697, 0.88", "17.1671, -213.358, -25.7493, 1.03", "17.2987, -214.242, -25.7742, 0.74", "17.4048, -214.933, -25.7742, 0.59", "17.5324, -215.72, -25.7559, 0.37", "17.8921, -217.83, -25.631, 0.37", "18.0282, -218.625, -25.5624, 0.37", "18.2404, -219.921, -25.4149, 0.37", "18.398, -220.948, -25.28, 0.37", "18.5429, -221.963, -25.1371, 0.44", "18.6781, -222.934, -24.9976, 0.74", "18.762, -223.455, -24.9233, 0.74", "19.0241, -225.147, -24.7146, 0.74", "19.2085, -226.341, -24.5961, 0.74", "19.391, -227.325, -24.4968, 0.74", "19.6552, -228.517, -24.3769, 0.74", "19.8892, -229.431, -24.2782, 0.74", "20.3076, -230.862, -24.0808, 0.74", "20.6517, -231.893, -23.9195, 0.74", "21.1797, -233.284, -23.6659, 0.74", "21.579, -234.249, -23.4605, 0.74", "21.9034, -235.001, -23.27, 1.03", "22.2477, -235.833, -23.0229, 1.03" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.99123, -118.525, -19.3873, 0.88", "1.50112, -119.001, -19.7807, 0.88", "0.298283, -119.536, -20.0958, 0.52", "-1.33073, -120.414, -20.4567, 0.52", "-2.0763, -120.908, -20.5951, 0.81", "-2.65739, -121.329, -20.6962, 0.96", "-3.22209, -121.73, -20.8226, 0.81", "-3.89157, -122.277, -21.0186, 0.52", "-4.42108, -122.735, -21.167, 0.59", "-5.1757, -123.404, -21.4055, 0.59", "-5.81996, -123.929, -21.5953, 0.74", "-7.07658, -124.836, -21.9773, 0.81", "-7.66394, -125.218, -22.1678, 0.81", "-8.34046, -125.647, -22.3948, 0.52", "-9.33217, -126.193, -22.6962, 0.52", "-10.0148, -126.547, -22.8693, 1.11", "-10.3749, -126.748, -22.9388, 0.96", "-11.102, -127.19, -23.0433, 0.44", "-11.9021, -127.691, -23.1719, 0.37", "-13.6348, -128.799, -23.4508, 0.37", "-14.7024, -129.506, -23.6414, 0.37", "-15.4778, -130.05, -23.7802, 0.74", "-16.2744, -130.612, -23.9139, 0.96", "-16.8712, -131.032, -24.0089, 0.96", "-17.8775, -131.763, -24.2073, 0.52", "-18.598, -132.355, -24.3757, 0.52", "-19.3522, -132.911, -24.5532, 0.66", "-20.028, -133.382, -24.7222, 0.66", "-20.7006, -133.86, -24.8916, 0.52", "-21.4637, -134.432, -25.0833, 0.66", "-21.9836, -134.842, -25.2223, 0.66", "-23.5608, -136.181, -25.7307, 0.81", "-24.1918, -136.768, -25.966, 0.59", "-24.7085, -137.291, -26.1792, 0.59", "-25.1065, -137.687, -26.34, 0.59", "-25.517, -138.074, -26.4954, 0.59", "-26.3752, -138.891, -26.8414, 0.74", "-26.807, -139.372, -27.0518, 0.52", "-27.2863, -139.935, -27.2883, 0.52", "-27.832, -140.615, -27.5605, 0.37", "-28.112, -140.997, -27.7092, 0.37", "-28.368, -141.383, -27.8434, 0.37", "-28.909, -142.197, -28.0662, 0.59", "-29.3916, -142.945, -28.2649, 0.96", "-29.6418, -143.333, -28.3581, 1.03", "-30.1317, -144.029, -28.5684, 0.88", "-30.3399, -144.268, -28.6536, 0.66", "-31.0844, -144.952, -28.941, 0.44", "-31.5501, -145.31, -29.1031, 0.59", "-32.033, -145.667, -29.2983, 0.88", "-32.8462, -146.282, -29.6428, 0.52", "-33.3903, -146.725, -29.9171, 0.52", "-34.3924, -147.568, -30.4885, 0.52", "-34.8263, -147.952, -30.7755, 0.88", "-35.6712, -148.781, -31.4422, 0.52", "-36.1099, -149.268, -31.8342, 0.52", "-36.7669, -150.087, -32.4517, 0.52", "-37.1392, -150.592, -32.8506, 0.52", "-37.562, -151.203, -33.3177, 0.52", "-38.1913, -152.134, -33.9809, 0.59", "-38.4298, -152.484, -34.2051, 0.59", "-38.8212, -153.057, -34.5375, 0.59", "-39.2788, -153.757, -34.8618, 0.74", "-39.792, -154.635, -35.2732, 0.74", "-40.2215, -155.457, -35.6324, 0.52", "-40.6284, -156.372, -36.073, 0.66", "-40.8067, -156.877, -36.3459, 0.66", "-41.0611, -157.738, -36.8448, 0.66", "-41.3398, -158.973, -37.6179, 0.52", "-41.459, -159.672, -38.0909, 0.52", "-41.6168, -160.93, -38.9365, 0.74", "-41.6535, -161.208, -39.1166, 0.74", "-41.8182, -161.988, -39.6253, 0.74", "-42.086, -162.857, -40.1259, 0.74", "-42.2949, -163.402, -40.3554, 0.74", "-42.4652, -163.819, -40.5183, 0.52", "-42.7196, -164.498, -40.7397, 0.52", "-43.0964, -165.57, -41.0802, 0.52", "-43.4478, -166.609, -41.4011, 0.88", "-43.7023, -167.309, -41.5856, 0.88", "-44.1236, -168.504, -41.8747, 0.88", "-44.3121, -169.015, -41.9683, 1.03", "-44.6169, -169.815, -42.0528, 0.52", "-44.9601, -170.622, -42.0631, 0.52", "-45.3676, -171.428, -42.0305, 0.52", "-45.7321, -172.072, -41.9716, 0.66", "-46.2781, -172.965, -41.804, 0.88", "-46.6757, -173.58, -41.6671, 0.88", "-47.2246, -174.433, -41.4596, 1.03", "-47.6007, -174.997, -41.3269, 0.66", "-48.1445, -175.766, -41.1953, 0.66", "-48.8229, -176.708, -41.086, 0.81", "-49.0881, -177.084, -41.071, 0.81", "-49.618, -177.907, -41.0736, 0.81", "-50.5729, -179.512, -41.1372, 0.66", "-51.2244, -180.686, -41.2208, 0.66", "-51.8786, -181.947, -41.373, 0.66", "-52.2644, -182.747, -41.4835, 0.52", "-52.7856, -183.954, -41.6527, 0.52", "-53.0988, -184.782, -41.8049, 0.59", "-53.3374, -185.549, -41.9831, 0.59", "-53.5916, -186.492, -42.2243, 0.81", "-53.8728, -187.514, -42.5205, 0.88", "-54.1228, -188.286, -42.7539, 1.03", "-54.6833, -189.718, -43.2428, 1.11", "-55.09, -190.674, -43.5778, 0.81", "-55.32, -191.167, -43.7352, 0.81", "-55.6072, -191.711, -43.8706, 0.37", "-55.9835, -192.355, -44.0179, 0.44", "-56.2614, -192.807, -44.0751, 0.81", "-56.6446, -193.432, -44.1537, 0.81", "-57.0067, -194.032, -44.2634, 0.44", "-57.5317, -194.986, -44.4835, 0.44", "-57.9737, -195.896, -44.7185, 0.66", "-58.3541, -196.695, -44.9378, 1.18", "-58.9656, -197.935, -45.3386, 0.52", "-59.3279, -198.639, -45.5935, 0.44", "-59.5646, -199.073, -45.7631, 0.44", "-59.7765, -199.464, -45.9044, 0.44", "-60.3938, -200.575, -46.231, 0.44", "-60.6262, -201.084, -46.4396, 0.66", "-60.8492, -201.742, -46.7352, 0.66", "-60.9687, -202.202, -46.966, 0.88", "-61.1258, -202.901, -47.3397, 0.88", "-61.176, -203.17, -47.4862, 0.88", "-61.5333, -205.684, -48.818, 0.66", "-61.6346, -206.266, -49.0975, 0.81", "-61.8826, -207.409, -49.63, 0.88", "-62.0468, -208.013, -49.8764, 0.96", "-62.1892, -208.422, -50.0006, 0.96", "-62.4545, -209.037, -50.093, 0.44", "-62.9631, -209.948, -50.0655, 0.44", "-63.2168, -210.368, -50.0424, 0.44", "-63.8136, -211.347, -49.9686, 0.44", "-64.2217, -212.015, -49.9123, 0.66", "-64.8054, -212.963, -49.8456, 0.81", "-65.178, -213.515, -49.8166, 0.81", "-65.989, -214.581, -49.7775, 0.81", "-66.5926, -215.288, -49.7628, 0.66", "-67.5388, -216.332, -49.7605, 0.66", "-68.955, -217.843, -49.733, 0.66", "-69.9706, -218.927, -49.6831, 0.52", "-70.9334, -219.972, -49.6089, 0.52", "-71.4685, -220.551, -49.5525, 0.52", "-72.1419, -221.308, -49.464, 1.92", "-73.0852, -222.479, -49.3058, 0.52", "-73.4083, -222.955, -49.2695, 0.52", "-73.802, -223.674, -49.2656, 0.52", "-74.0322, -224.145, -49.2958, 0.59", "-74.309, -224.637, -49.3488, 0.44", "-74.9112, -225.592, -49.4854, 0.44", "-75.6771, -226.792, -49.7398, 0.44", "-76.2002, -227.577, -49.9135, 0.59", "-76.7779, -228.433, -50.1071, 0.59", "-77.7125, -229.796, -50.4107, 0.37", "-78.3068, -230.653, -50.5875, 0.37", "-78.8517, -231.452, -50.7269, 0.59", "-79.2718, -232.061, -50.7753, 0.74" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.4679, -70.8411, -14.9609, 0.07", "25.452, -73.3031, -5.59334, 0.07", "25.5209, -73.3861, -5.34594, 0.52", "25.8831, -73.819, -4.33239, 0.37", "26.3181, -74.3342, -3.35095, 0.37", "26.6502, -74.7243, -2.7315, 0.22", "27.0338, -75.1733, -2.12674, 0.22", "27.8549, -76.0733, -1.92715, 0.44", "28.4936, -76.7674, -1.76968, 0.44", "28.9057, -77.2399, -1.66687, 0.52", "29.2985, -77.7146, -1.56807, 0.52", "29.7467, -78.2566, -1.46725, 0.52", "30.2719, -78.8782, -1.32703, 0.52", "30.9618, -79.7106, -1.11741, 0.52", "31.7235, -80.6326, -0.834087, 0.52", "32.2287, -81.2595, -0.609688, 0.52", "32.6407, -81.8255, -0.392218, 0.66", "33.3488, -82.9305, 0.0861483, 0.52", "33.7172, -83.5699, 0.393809, 0.52", "33.8659, -83.8375, 0.537571, 0.52", "34.2407, -84.4927, 0.894504, 0.29", "34.7454, -85.3416, 1.31622, 0.29", "35.1506, -86.0214, 1.65159, 0.29", "35.4747, -86.5752, 1.88651, 0.29", "35.9238, -87.325, 2.23319, 0.29", "36.4229, -88.0993, 2.63409, 0.29", "36.7601, -88.5508, 2.87411, 0.29", "37.7198, -89.6758, 3.47476, 0.44", "38.4466, -90.4929, 3.87816, 0.44", "39.0067, -91.1198, 4.20648, 0.52", "39.6312, -91.8189, 4.57747, 0.52", "40.6386, -92.9824, 5.18222, 0.52", "41.1406, -93.5795, 5.4622, 0.52", "41.5586, -94.0784, 5.64972, 0.52", "42.1563, -94.8267, 5.88541, 0.66", "42.4039, -95.1693, 5.96205, 0.66", "42.843, -95.8457, 6.07524, 0.37", "43.1992, -96.4175, 6.20463, 0.37", "43.5634, -96.9677, 6.33799, 0.37", "43.8355, -97.358, 6.42948, 0.37", "44.4401, -98.2489, 6.61208, 0.44", "44.9629, -99.1181, 6.82309, 0.59", "45.6849, -100.506, 7.1876, 0.59", "46.1301, -101.56, 7.4637, 0.88", "46.4683, -102.541, 7.70953, 0.74", "46.7344, -103.502, 7.93234, 0.74", "47.0173, -105.06, 8.28688, 0.74", "47.1157, -105.855, 8.46105, 0.74", "47.2177, -106.886, 8.65776, 0.44", "47.3072, -107.738, 8.85708, 0.44", "47.426, -108.466, 9.04905, 0.44", "47.7691, -109.831, 9.41751, 0.59", "48.143, -110.967, 9.71665, 0.59", "48.536, -111.972, 9.99201, 0.59", "48.9992, -113.007, 10.2899, 0.96", "49.4432, -113.9, 10.5404, 0.29", "50.2928, -115.387, 10.9217, 0.29", "50.4761, -115.668, 10.9694, 0.29", "50.8544, -116.224, 11.0588, 0.52", "51.3245, -116.919, 11.1472, 0.22", "51.8233, -117.643, 11.1942, 0.22", "52.1952, -118.189, 11.2241, 0.44", "52.8094, -118.998, 11.2537, 0.66", "53.533, -119.92, 11.3587, 0.66", "54.0926, -120.609, 11.4769, 0.66", "54.7113, -121.333, 11.6334, 0.59", "55.3839, -122.153, 11.8393, 0.59", "56.2267, -123.241, 12.1345, 0.59", "57.1311, -124.464, 12.4627, 0.59", "57.443, -124.887, 12.5482, 0.59", "57.8809, -125.47, 12.6521, 0.44", "58.5009, -126.383, 12.7733, 0.44", "58.8826, -126.966, 12.8217, 0.44", "59.2622, -127.567, 12.837, 0.44", "59.6303, -128.137, 12.8183, 0.44", "60.1605, -128.96, 12.8096, 0.44", "60.6033, -129.629, 12.815, 0.44", "61.346, -130.718, 12.8411, 0.52", "61.7012, -131.25, 12.848, 0.52", "62.669, -132.716, 12.8593, 0.52", "63.4614, -133.892, 12.8543, 0.52", "64.2306, -134.971, 12.8385, 0.52", "64.8938, -135.823, 12.8171, 0.52", "66.4112, -137.642, 12.7198, 0.37", "67.3204, -138.644, 12.6514, 0.37", "68.55, -139.871, 12.5359, 0.37", "69.3787, -140.636, 12.4479, 0.37", "70.2762, -141.427, 12.3441, 0.37", "71.3509, -142.357, 12.2494, 0.37", "72.3293, -143.193, 12.2006, 0.37", "73.13, -143.908, 12.1849, 0.59", "73.6314, -144.376, 12.2036, 0.59", "74.0137, -144.739, 12.2655, 0.88", "75.0066, -145.61, 12.5238, 0.44", "75.6641, -146.118, 12.7633, 0.44", "76.6674, -146.865, 13.1732, 0.44", "77.4181, -147.398, 13.5069, 0.44", "78.8403, -148.346, 14.1462, 0.44", "79.9008, -148.986, 14.6083, 0.44", "81.2712, -149.699, 15.1506, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "23.4679, -70.8411, -14.9609, 1.18", "23.7606, -71.0208, -15.011, 1.18", "24.5783, -71.5176, -15.1261, 1.18", "25.8347, -72.283, -15.3467, 0.66", "26.3606, -72.6234, -15.4429, 0.66", "27.427, -73.3443, -15.6659, 0.66", "28.7021, -74.236, -15.9426, 0.66", "29.9444, -75.1314, -16.2164, 0.66", "30.9663, -75.8825, -16.4674, 0.66", "32.101, -76.7177, -16.7542, 0.66", "33.1422, -77.4565, -17.0198, 0.74", "34.0202, -78.0536, -17.2435, 0.88", "34.9934, -78.6989, -17.4907, 0.88", "35.9734, -79.329, -17.7194, 0.66", "36.9052, -79.8936, -17.895, 0.66", "37.6147, -80.2976, -18.0114, 0.66", "38.5904, -80.8565, -18.1301, 0.96", "39.4398, -81.3563, -18.2428, 1.47", "39.9988, -81.6977, -18.34, 1.99", "40.5202, -82.0228, -18.4495, 1.92", "41.2912, -82.4727, -18.6481, 1.25", "42.2187, -82.9561, -18.9047, 1.03", "43.4608, -83.5478, -19.293, 1.03", "44.6847, -84.1007, -19.7057, 0.88", "45.3962, -84.4281, -19.9688, 1.03", "46.3904, -84.8794, -20.3749, 0.74", "47.3788, -85.326, -20.7971, 0.74", "48.2834, -85.7351, -21.1955, 1.18", "48.978, -86.0385, -21.4794, 1.18", "50.4627, -86.7152, -22.0725, 0.81", "51.8653, -87.4159, -22.6545, 0.81", "52.3511, -87.6824, -22.8607, 0.81", "53.4664, -88.315, -23.2649, 0.52", "54.7174, -89.0208, -23.6174, 0.52", "56.1242, -89.7926, -23.9731, 0.52", "57.1297, -90.3283, -24.1719, 0.59", "57.994, -90.8075, -24.3044, 0.74", "59.436, -91.6321, -24.5544, 1.18", "60.1243, -92.0397, -24.6888, 1.18", "61.4343, -92.8136, -24.9754, 0.66", "62.4765, -93.3807, -25.1979, 0.88", "64.0727, -94.1865, -25.5466, 0.66", "65.6028, -94.9215, -25.8956, 0.96", "66.7329, -95.4574, -26.1874, 1.11", "67.8542, -95.9864, -26.4493, 1.11", "68.9162, -96.4979, -26.6812, 0.88", "69.8518, -96.9562, -26.8888, 0.96", "70.7756, -97.4033, -27.0623, 1.18", "71.9896, -97.994, -27.2387, 0.88", "73.1077, -98.5426, -27.3853, 0.88", "74.7512, -99.3772, -27.5954, 0.88", "76.3272, -100.212, -27.7839, 0.74", "78.1541, -101.226, -27.9657, 0.74", "78.701, -101.547, -28.0056, 0.74", "79.447, -102.012, -28.0262, 0.74", "80.3987, -102.636, -28.0185, 0.59", "81.2353, -103.22, -27.9711, 0.52", "82.2655, -103.997, -27.9085, 0.52", "82.8257, -104.457, -27.8763, 0.52", "83.8951, -105.361, -27.8089, 0.52", "84.4731, -105.847, -27.7476, 0.52", "85.1789, -106.415, -27.6478, 0.52", "85.604, -106.734, -27.5781, 0.96", "86.1622, -107.127, -27.4811, 1.33", "87.0745, -107.731, -27.2755, 1.62", "88.1127, -108.414, -27.0068, 0.66", "88.4117, -108.614, -26.944, 0.66", "89.2564, -109.174, -26.7198, 0.44", "90.0594, -109.707, -26.4873, 0.44", "91.5593, -110.707, -26.0668, 0.44", "92.0763, -111.063, -25.9343, 0.44", "93.328, -111.965, -25.707, 1.03", "94.8966, -113.185, -25.4925, 0.74", "95.8252, -113.932, -25.4352, 0.74", "96.9486, -114.857, -25.4542, 0.59", "97.8812, -115.663, -25.5523, 0.59", "98.8999, -116.576, -25.6898, 0.96", "99.8, -117.435, -25.8429, 0.96", "100.587, -118.23, -26.0447, 0.52", "101.1, -118.761, -26.1925, 0.52", "101.827, -119.507, -26.4255, 0.52", "102.619, -120.311, -26.681, 0.52", "103.415, -121.089, -26.937, 0.74", "104.198, -121.848, -27.2415, 0.74", "105.158, -122.789, -27.6518, 0.74", "105.921, -123.533, -28.0427, 0.37", "106.926, -124.497, -28.6773, 0.37", "107.423, -124.992, -29.0349, 0.37", "108.109, -125.685, -29.5345, 0.66", "108.577, -126.173, -29.8712, 0.66", "109.187, -126.819, -30.2815, 0.59", "109.996, -127.676, -30.8168, 0.59", "110.806, -128.504, -31.3308, 0.37", "111.759, -129.463, -31.8897, 0.37", "113.137, -130.783, -32.604, 0.37", "113.382, -131.012, -32.7314, 0.37", "113.611, -131.21, -32.846, 0.37", "114.076, -131.588, -33.1069, 0.37", "115.248, -132.498, -33.8476, 0.37", "115.833, -132.961, -34.23, 0.44", "116.76, -133.731, -34.8518, 0.52", "117.954, -134.776, -35.6691, 0.52", "118.983, -135.688, -36.3523, 1.03", "119.451, -136.128, -36.647, 1.47", "120.282, -136.968, -37.1429, 1.92", "121.435, -138.225, -37.8048, 0.59", "122.033, -138.912, -38.1068, 0.44", "122.62, -139.636, -38.3591, 0.44", "123.704, -141.023, -38.7436, 0.44", "124.559, -142.121, -39.0212, 1.33", "124.929, -142.635, -39.1214, 1.47", "125.423, -143.398, -39.1864, 0.37", "126.145, -144.617, -39.2277, 0.37", "126.486, -145.244, -39.2266, 0.37", "126.696, -145.643, -39.2119, 0.37", "127.608, -147.445, -39.1272, 0.37", "128.414, -149.073, -39.0712, 0.37", "128.726, -149.724, -39.0813, 0.59", "129.403, -151.175, -39.1287, 0.59", "129.926, -152.301, -39.1817, 0.59", "130.375, -153.234, -39.2564, 0.59", "130.799, -154.03, -39.3724, 0.88", "131.479, -155.311, -39.6269, 0.88", "132.233, -156.796, -40.0078, 0.59", "132.736, -157.82, -40.3003, 0.59", "133.158, -158.738, -40.5615, 0.59", "133.714, -160.018, -40.898, 1.18", "133.965, -160.642, -41.0563, 1.99", "134.798, -162.937, -41.6008, 0.59", "135.308, -164.524, -41.9952, 0.59", "135.58, -165.59, -42.1879, 0.96", "135.802, -166.774, -42.3141, 1.33", "135.986, -168.141, -42.2917, 0.37", "136.074, -168.831, -42.1883, 0.37", "136.214, -169.96, -41.8103, 0.37", "136.435, -171.535, -41.1472, 0.81", "136.556, -172.175, -40.8185, 0.81", "136.998, -173.934, -39.8011, 0.81", "137.426, -175.369, -38.939, 0.44", "137.943, -176.842, -38.0626, 0.44", "138.378, -177.955, -37.4186, 0.44", "138.98, -179.394, -36.6589, 0.59", "139.282, -180.16, -36.3023, 0.59", "139.705, -181.353, -35.8315, 0.59", "139.935, -182.106, -35.5625, 0.74", "140.041, -182.508, -35.4089, 0.74", "140.171, -183.002, -35.2059, 0.37", "140.438, -184.084, -34.7866, 0.37", "140.736, -185.197, -34.3009, 0.37", "141.123, -186.355, -33.7615, 0.37", "141.62, -187.673, -33.1085, 0.37", "142.127, -188.879, -32.5049, 0.37", "142.611, -190.013, -31.968, 0.37", "143.122, -191.156, -31.4742, 0.96", "143.436, -191.926, -31.1618, 0.96", "143.751, -192.717, -30.8549, 0.96", "144.143, -193.652, -30.5032, 0.44", "144.614, -194.827, -30.0342, 0.44", "145.214, -196.357, -29.4215, 0.44", "145.984, -198.359, -28.6575, 0.44", "146.611, -200.011, -28.0474, 0.44", "147.39, -202.098, -27.3383, 0.44", "147.739, -203.015, -27.0334, 0.44", "147.915, -203.45, -26.9017, 0.44", "148.238, -204.312, -26.6956, 0.44", "148.568, -205.296, -26.5651, 0.44", "148.915, -206.586, -26.4491, 0.44", "149.017, -207.077, -26.4279, 0.44", "149.274, -208.441, -26.3812, 0.44", "149.41, -209.281, -26.3521, 0.44", "149.759, -211.559, -26.2726, 0.44", "150.154, -213.705, -26.21, 0.44", "150.392, -214.819, -26.184, 0.44", "150.731, -216.286, -26.1582, 0.44", "151.076, -217.668, -26.1419, 0.66", "151.617, -219.552, -26.1484, 0.15", "152.132, -221.091, -26.1967, 0.29", "152.659, -222.529, -26.33, 0.29", "152.98, -223.307, -26.4329, 0.29", "153.292, -224.04, -26.5563, 0.44", "153.727, -225.105, -26.7766, 0.44", "154.29, -226.6, -27.1247, 0.44", "154.834, -228.174, -27.5028, 0.44", "155.2, -229.162, -27.7579, 0.44", "155.497, -229.887, -27.9145, 0.44", "156.178, -231.397, -28.166, 0.59", "156.647, -232.337, -28.2475, 0.59", "156.938, -232.901, -28.2479, 0.59", "157.672, -234.313, -28.1727, 0.59", "158.538, -236.047, -28.0593, 0.37", "159.102, -237.105, -28.0276, 0.37", "159.564, -237.911, -28.0295, 0.74", "160.208, -239.012, -28.0875, 0.74", "160.771, -240.019, -28.1929, 0.44", "161.073, -240.614, -28.2893, 0.44", "161.866, -242.13, -28.6531, 0.59", "162.424, -243.158, -28.9018, 0.59", "162.61, -243.473, -28.9747, 0.59", "163.217, -244.323, -29.1338, 0.37", "163.935, -245.19, -29.2384, 0.37", "165.156, -246.511, -29.431, 0.37", "165.859, -247.224, -29.5312, 0.37", "166.628, -247.95, -29.6789, 0.37", "167.461, -248.687, -29.8909, 0.37", "168.299, -249.359, -30.1362, 0.37", "169.793, -250.54, -30.6204, 0.44", "170.461, -251.115, -30.8596, 0.59", "171.384, -251.981, -31.2055, 0.59", "172.129, -252.814, -31.5095, 0.59", "172.843, -253.75, -31.8025, 0.52", "173.509, -254.813, -32.059, 0.52", "174.058, -255.856, -32.2201, 0.52", "174.242, -256.276, -32.2744, 0.52", "174.739, -257.536, -32.4944, 0.52", "175.119, -258.523, -32.7029, 0.52", "175.578, -259.72, -33.0173, 0.52", "175.904, -260.537, -33.2645, 0.52", "176.088, -260.987, -33.4263, 0.52", "176.779, -262.863, -34.148, 0.52", "177.314, -264.671, -34.945, 0.52", "177.456, -265.477, -35.3194, 0.52", "177.493, -265.953, -35.555, 0.52", "177.458, -266.936, -35.9609, 0.52", "177.329, -267.99, -36.2592, 0.52", "177.103, -269.169, -36.4278, 0.37", "176.794, -270.506, -36.5749, 0.37", "176.524, -271.822, -36.6594, 0.59", "176.206, -273.778, -36.6894, 0.59", "176.026, -275.3, -36.6318, 0.59", "175.955, -276.344, -36.5391, 0.59", "175.92, -277.116, -36.4295, 0.29", "175.891, -278.263, -36.2979, 0.29", "175.871, -279.34, -36.2205, 0.29", "175.864, -279.947, -36.22, 0.52", "175.859, -280.685, -36.2044, 0.52", "175.899, -281.417, -36.1395, 0.52", "176.051, -282.577, -35.915, 0.52", "176.252, -283.611, -35.656, 0.52", "176.444, -284.41, -35.4356, 0.52", "176.826, -285.807, -35.0433, 0.52", "177.39, -287.624, -34.5698, 0.52", "177.926, -289.153, -34.1666, 0.52", "178.158, -289.745, -34.0113, 0.52", "178.424, -290.378, -33.8693, 0.52", "178.756, -291.155, -33.7838, 0.52", "179.211, -292.184, -33.8255, 0.52", "179.592, -293.042, -33.9843, 0.52", "180.05, -294.013, -34.2464, 0.52", "180.861, -295.614, -34.7848, 0.52", "181.663, -297.091, -35.3516, 0.52", "182.368, -298.397, -35.8886, 0.52", "182.773, -299.162, -36.2364, 0.52", "182.998, -299.596, -36.4457, 0.52", "183.658, -300.912, -37.0671, 0.52", "184.025, -301.64, -37.3921, 0.52", "184.586, -302.76, -37.7636, 0.52", "185.206, -304.05, -38.0915, 0.52", "185.565, -304.927, -38.286, 0.52", "185.878, -305.851, -38.4697, 0.52", "185.984, -306.216, -38.5366, 0.74", "186.155, -306.849, -38.6642, 0.74", "186.334, -307.504, -38.8124, 0.74", "186.797, -309.359, -39.2247, 0.37", "187.073, -310.541, -39.5571, 0.44", "187.293, -311.517, -39.8546, 0.44", "187.413, -312.026, -39.9755, 0.66", "187.622, -312.904, -40.1307, 0.66", "187.893, -314.087, -40.2815, 0.66", "188.234, -315.595, -40.3808, 0.44", "188.505, -317.129, -40.3835, 0.44", "188.756, -319.143, -40.2955, 0.44", "188.834, -320.073, -40.2605, 0.52", "188.823, -321.032, -40.2375, 0.59", "188.721, -321.836, -40.2387, 0.59", "188.556, -322.599, -40.2872, 0.59", "188.219, -323.841, -40.5268, 0.59", "187.872, -325.08, -40.8897, 0.59", "187.419, -326.874, -41.5496, 0.59", "187.262, -327.659, -41.8661, 0.59", "187.087, -329.288, -42.566, 0.59", "187.058, -330.438, -43.08, 0.59", "187.112, -331.265, -43.4341, 0.59", "187.417, -332.828, -44.017, 0.44", "187.852, -334.057, -44.4164, 0.44", "188.562, -335.604, -44.8103, 0.44", "188.775, -335.995, -44.8696, 0.74", "189.281, -336.809, -44.9299, 0.74", "189.886, -337.714, -44.9369, 0.74", "190.397, -338.468, -44.886, 0.52", "191.018, -339.415, -44.8141, 0.44", "191.639, -340.495, -44.7332, 0.44", "192.002, -341.171, -44.7018, 0.44", "192.467, -342.13, -44.6868, 0.44", "192.809, -342.933, -44.6897, 0.74", "193.031, -343.564, -44.7035, 0.37", "193.361, -344.771, -44.7279, 0.37", "193.57, -345.74, -44.7631, 0.37", "193.685, -346.309, -44.7911, 0.37", "193.913, -347.354, -44.8835, 0.37", "194.265, -348.724, -45.0276, 0.37", "194.523, -349.617, -45.1276, 0.37", "194.868, -350.688, -45.2816, 0.37", "195.14, -351.57, -45.4163, 0.37", "195.352, -352.349, -45.5485, 0.37", "195.525, -353.151, -45.7148, 0.37", "195.803, -354.37, -45.9875, 0.37", "196.182, -356.14, -46.4057, 0.37", "196.394, -357.359, -46.6809, 0.37", "196.5, -358.195, -46.8636, 0.37", "196.651, -359.867, -47.1948, 0.37", "196.744, -361.913, -47.622, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-24.9234, 47.8105, 2.56814, 1.4", "-25.8434, 48.2308, 2.56814, 1.4" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "78.9652, -147.87, 6.14065, 0.44", "79.6678, -148.931, 6.24409, 0.44", "80.3774, -149.909, 6.32493, 0.44", "81.0113, -150.735, 6.38208, 0.44", "81.8187, -151.779, 6.44064, 0.44", "82.5829, -152.714, 6.48451, 0.44", "83.12, -153.328, 6.5094, 0.44", "83.7406, -153.967, 6.51138, 0.44", "84.5107, -154.719, 6.51138, 0.44", "85.5298, -155.657, 6.51138, 0.44", "86.5401, -156.52, 6.51138, 0.44", "87.4153, -157.241, 6.51138, 0.44", "87.718, -157.494, 6.51138, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "78.9652, -147.87, 6.14065, 0.59", "80.0393, -149.554, 6.34818, 0.59", "80.4301, -150.189, 6.48188, 0.59", "81.0, -151.137, 6.70595, 0.59", "81.3856, -151.762, 6.85744, 0.59", "82.0056, -152.807, 7.10406, 0.44", "82.4648, -153.613, 7.28544, 0.44", "83.1983, -155.084, 7.57259, 0.44", "83.4764, -155.661, 7.69916, 0.44", "83.8109, -156.336, 7.86742, 0.44", "84.1205, -156.919, 8.03007, 0.44", "84.4575, -157.488, 8.21037, 0.44", "85.3676, -159.036, 8.6585, 0.44", "85.5414, -159.376, 8.7174, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "22.2477, -235.833, -23.0229, 0.37", "22.1093, -236.901, -23.192, 0.37", "22.0753, -237.539, -23.2789, 0.52", "22.0668, -238.594, -23.4068, 0.52", "22.0718, -239.696, -23.5245, 0.52", "22.0562, -240.59, -23.5946, 0.52", "22.0033, -241.607, -23.6553, 0.52", "21.9563, -242.495, -23.6783, 0.52", "21.9153, -243.02, -23.6803, 0.52", "21.8421, -243.865, -23.6854, 0.66", "21.7382, -244.885, -23.7217, 0.66", "21.6407, -245.645, -23.7827, 0.66", "21.5081, -246.462, -23.8777, 0.52", "21.3484, -247.255, -23.9929, 0.52", "21.0888, -248.363, -24.2212, 0.52", "20.8177, -249.568, -24.5083, 0.52", "20.7217, -250.092, -24.6368, 0.52", "20.6034, -250.885, -24.8159, 0.52", "20.5198, -251.521, -24.9503, 0.52", "20.3953, -252.899, -25.1899, 0.52", "20.3335, -254.286, -25.4026, 0.52", "20.341, -255.71, -25.6434, 0.52", "20.3826, -256.538, -25.813, 0.52", "20.4924, -257.712, -26.0764, 0.59", "20.7011, -259.456, -26.487, 0.59", "20.8421, -260.632, -26.7664, 0.74", "20.9152, -261.368, -26.9604, 0.96", "20.9575, -262.084, -27.1525, 0.96", "20.9768, -263.271, -27.469, 0.59", "20.9345, -264.338, -27.722, 0.37", "20.8471, -265.156, -27.8522, 0.37", "20.7057, -266.053, -27.9187, 0.37", "20.5843, -266.722, -27.9312, 0.37", "20.3054, -268.267, -27.9109, 0.37", "20.0252, -269.708, -27.8748, 0.52", "19.6996, -271.326, -27.8065, 0.81", "19.3924, -272.825, -27.7236, 0.81", "19.2545, -273.445, -27.6768, 1.11", "19.0766, -274.301, -27.5829, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "22.2477, -235.833, -23.0229, 0.81", "23.0438, -236.047, -22.7976, 0.81", "23.6633, -236.212, -22.6286, 0.81", "25.4903, -236.672, -21.9973, 0.81", "26.6993, -236.979, -21.5251, 0.52", "27.8357, -237.272, -21.0697, 0.44", "29.2342, -237.642, -20.5072, 0.44", "29.955, -237.835, -20.2023, 0.44", "31.6318, -238.317, -19.4331, 0.44", "32.8846, -238.72, -18.7989, 0.44", "33.5911, -238.959, -18.4338, 0.44", "33.8993, -239.077, -18.2792, 0.44", "34.813, -239.481, -17.771, 0.37", "36.0062, -240.043, -17.1039, 0.37", "36.9692, -240.524, -16.601, 0.37", "38.1346, -241.098, -15.9573, 0.37", "38.983, -241.535, -15.4833, 0.37", "40.2204, -242.2, -14.7788, 0.37", "40.7548, -242.488, -14.487, 0.37", "41.3777, -242.833, -14.1691, 0.37", "42.3407, -243.377, -13.6953, 0.37", "43.4312, -244.008, -13.1705, 0.37", "44.9231, -244.853, -12.4554, 0.37", "45.7324, -245.323, -12.1071, 0.37", "46.4687, -245.772, -11.7733, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-79.2718, -232.061, -50.7753, 0.66", "-79.9688, -232.537, -50.8713, 0.66", "-80.8215, -233.192, -51.0209, 0.66", "-81.5204, -233.774, -51.1081, 0.66", "-82.1657, -234.396, -51.1698, 1.03", "-82.6573, -234.938, -51.2129, 1.11", "-83.1821, -235.574, -51.2555, 0.81", "-83.7503, -236.361, -51.277, 0.44", "-84.2238, -237.162, -51.2922, 0.44", "-84.6412, -238.032, -51.3064, 0.44", "-84.9789, -238.967, -51.3166, 0.88", "-85.1268, -239.539, -51.3022, 0.59", "-85.2796, -240.313, -51.2698, 0.44", "-85.3917, -240.998, -51.2333, 0.44", "-85.4779, -241.643, -51.2066, 0.29", "-85.596, -242.553, -51.1431, 0.29", "-85.7558, -244.041, -51.0096, 0.37", "-85.8523, -245.02, -50.9505, 0.22", "-85.9371, -245.788, -50.9226, 0.37", "-86.1086, -246.914, -50.9197, 0.52", "-86.304, -247.864, -50.947, 0.22", "-86.5191, -248.652, -51.0026, 0.37", "-86.9134, -249.817, -51.15, 0.74", "-87.2151, -250.557, -51.2607, 0.59", "-87.5286, -251.169, -51.3643, 0.66", "-87.8581, -251.67, -51.4694, 0.66", "-88.1244, -251.997, -51.5452, 0.37", "-88.7199, -252.576, -51.6669, 0.37", "-89.2857, -253.041, -51.7345, 0.81", "-89.704, -253.363, -51.7778, 0.59", "-90.125, -253.693, -51.8373, 0.29", "-90.6022, -254.109, -51.9299, 0.29", "-91.1284, -254.608, -52.0584, 0.29", "-91.6562, -255.152, -52.1787, 0.29", "-91.9662, -255.48, -52.239, 0.66", "-92.6639, -256.212, -52.3422, 0.81", "-93.4503, -257.01, -52.4202, 0.81", "-94.0525, -257.602, -52.4629, 0.44", "-94.7201, -258.233, -52.4884, 0.37", "-95.2265, -258.698, -52.4871, 0.37", "-95.7412, -259.168, -52.4616, 0.59", "-96.0993, -259.511, -52.421, 0.52", "-96.5244, -259.934, -52.3788, 0.29", "-96.7611, -260.205, -52.3616, 0.59", "-97.3639, -261.018, -52.3547, 0.81", "-97.6626, -261.486, -52.3527, 0.29", "-98.0231, -262.134, -52.3264, 0.29", "-98.3684, -262.829, -52.2774, 0.29", "-98.7241, -263.581, -52.2058, 0.29", "-98.8627, -263.877, -52.1729, 0.74", "-99.0481, -264.281, -52.1212, 0.74", "-99.3909, -265.101, -52.037, 0.29", "-99.581, -265.683, -51.995, 0.44", "-99.7664, -266.414, -51.9626, 0.81", "-99.9616, -267.276, -51.946, 0.96", "-100.021, -267.535, -51.9539, 0.96", "-100.212, -268.615, -52.0228, 0.37", "-100.364, -269.765, -52.1835, 0.37", "-100.423, -270.439, -52.2995, 0.52", "-100.465, -271.275, -52.459, 0.52", "-100.532, -273.111, -52.8251, 0.37", "-100.595, -274.891, -53.2029, 0.37", "-100.609, -276.322, -53.5156, 0.37", "-100.598, -277.019, -53.673, 0.52", "-100.549, -277.756, -53.8426, 0.96", "-100.439, -278.637, -54.0276, 0.59", "-100.307, -279.387, -54.1573, 0.59", "-100.144, -280.415, -54.2925, 0.66", "-100.028, -281.139, -54.3419, 0.66", "-99.9422, -281.716, -54.3757, 0.59", "-99.7445, -283.103, -54.4389, 0.22", "-99.7077, -283.574, -54.4519, 0.52", "-99.7197, -284.223, -54.4246, 0.96", "-99.8126, -284.955, -54.361, 1.25", "-99.9972, -285.741, -54.2646, 0.52", "-100.175, -286.313, -54.2113, 0.44", "-100.596, -287.485, -54.1436, 0.44", "-100.964, -288.6, -54.1188, 0.44", "-101.16, -289.305, -54.154, 0.44", "-101.327, -290.098, -54.2702, 0.44", "-101.497, -291.336, -54.5582, 0.74", "-101.537, -291.751, -54.6805, 0.74", "-101.596, -292.806, -55.0497, 0.74", "-101.654, -293.744, -55.4083, 0.59", "-101.692, -294.448, -55.6337, 0.44", "-101.73, -295.19, -55.8144, 0.44", "-101.813, -296.162, -55.9612, 0.44", "-101.879, -297.123, -56.0576, 0.88", "-101.939, -297.837, -56.0896, 0.88", "-102.043, -298.781, -56.0787, 0.52", "-102.108, -299.368, -56.0585, 0.29", "-102.174, -300.022, -56.0364, 0.29", "-102.302, -301.556, -55.9865, 0.29", "-102.417, -302.618, -55.9649, 0.37", "-102.488, -303.222, -55.9679, 0.37", "-102.597, -304.06, -55.9945, 0.37", "-102.692, -304.899, -56.0236, 0.37", "-102.756, -305.591, -56.0486, 0.66", "-102.805, -306.597, -56.084, 0.81", "-102.789, -307.511, -56.113, 1.03", "-102.763, -308.148, -56.13, 1.11", "-102.703, -309.366, -56.1513, 0.37", "-102.673, -310.281, -56.1606, 0.37", "-102.654, -311.403, -56.1626, 0.29", "-102.646, -312.041, -56.1579, 0.29", "-102.668, -312.893, -56.1694, 0.29", "-102.738, -313.909, -56.197, 0.29", "-102.863, -314.875, -56.235, 0.29", "-103.082, -316.09, -56.2941, 0.29", "-103.262, -316.877, -56.3391, 0.44", "-103.56, -318.03, -56.4157, 0.59", "-103.777, -318.744, -56.4678, 0.59", "-104.097, -319.606, -56.5557, 0.29", "-104.272, -320.099, -56.612, 0.29", "-104.356, -320.358, -56.6498, 0.29", "-104.531, -320.987, -56.7622, 0.59", "-104.821, -322.135, -56.9797, 0.59", "-105.107, -323.309, -57.2557, 0.74", "-105.439, -324.718, -57.6175, 0.44", "-105.665, -325.737, -57.881, 0.74", "-105.848, -326.613, -58.1183, 0.37", "-106.078, -327.82, -58.4478, 0.37", "-106.231, -328.628, -58.6397, 1.11", "-106.435, -329.587, -58.8185, 1.11", "-106.69, -330.496, -58.9461, 0.81", "-106.87, -331.115, -58.9899, 0.37", "-107.128, -332.097, -59.0271, 0.22", "-107.362, -333.145, -59.0491, 0.22", "-107.432, -333.448, -59.0486, 0.37", "-107.697, -334.455, -59.0528, 0.37", "-107.987, -335.42, -59.0603, 0.37", "-108.226, -336.118, -59.0738, 0.81", "-108.491, -336.807, -59.1062, 0.37", "-108.838, -337.622, -59.1811, 0.37", "-109.447, -338.948, -59.3162, 0.37", "-109.904, -339.872, -59.4163, 0.37", "-110.61, -341.11, -59.5566, 0.37", "-110.993, -341.72, -59.6362, 0.37", "-111.525, -342.518, -59.764, 0.22", "-111.836, -342.978, -59.8508, 0.37", "-112.05, -343.279, -59.9151, 0.37", "-112.437, -343.817, -60.0332, 0.37", "-112.994, -344.606, -60.1895, 0.37", "-113.243, -344.947, -60.2485, 0.37", "-113.916, -345.85, -60.3689, 0.37", "-114.345, -346.376, -60.435, 0.37", "-115.251, -347.467, -60.5751, 0.59", "-115.775, -348.092, -60.6488, 0.59", "-116.19, -348.581, -60.6987, 0.81", "-116.808, -349.325, -60.7772, 0.37", "-117.679, -350.435, -60.8803, 0.37", "-118.719, -351.926, -60.9909, 0.37", "-119.435, -353.084, -61.052, 0.52", "-119.841, -353.868, -61.0971, 0.52", "-119.951, -354.141, -61.1128, 0.52", "-120.16, -354.875, -61.15, 0.59", "-120.287, -355.754, -61.2033, 0.29", "-120.324, -356.445, -61.2546, 0.29", "-120.327, -357.573, -61.3711, 0.29", "-120.331, -358.304, -61.4594, 0.44", "-120.329, -359.059, -61.5596, 0.59", "-120.317, -360.029, -61.7836, 0.29", "-120.319, -360.972, -62.0658, 0.29", "-120.323, -361.464, -62.234, 0.44", "-120.329, -361.879, -62.4072, 0.44", "-120.341, -362.466, -62.6844, 0.44", "-120.367, -364.123, -63.513, 0.52", "-120.376, -364.787, -63.8411, 0.52", "-120.369, -365.649, -64.2517, 0.52", "-120.358, -366.985, -64.794, 0.29", "-120.344, -367.549, -64.9627, 0.29", "-120.322, -368.027, -65.0431, 0.52", "-120.296, -368.517, -65.0544, 0.59", "-120.257, -369.31, -65.0334, 0.59", "-120.224, -370.457, -64.9462, 0.88", "-120.217, -371.305, -64.8504, 0.29", "-120.215, -372.226, -64.7454, 0.29", "-120.218, -373.493, -64.6047, 0.29", "-120.222, -374.233, -64.5297, 0.44", "-120.242, -375.079, -64.4531, 0.44", "-120.267, -376.06, -64.3888, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-79.2718, -232.061, -50.7753, 0.29", "-77.6854, -232.589, -50.8304, 0.29", "-76.7092, -232.905, -50.8593, 0.29", "-74.2383, -233.79, -50.9211, 0.29", "-72.5808, -234.445, -50.956, 0.29", "-71.4411, -234.95, -50.9765, 0.29", "-70.6046, -235.35, -51.0022, 0.29", "-70.1186, -235.605, -51.0143, 0.29", "-68.6544, -236.456, -51.0699, 0.29", "-67.4849, -237.229, -51.1313, 0.29", "-66.285, -238.102, -51.2172, 0.29", "-64.7443, -239.274, -51.3405, 0.29", "-63.5151, -240.231, -51.4487, 0.29", "-63.0474, -240.597, -51.4941, 0.29", "-62.3244, -241.141, -51.5747, 0.44", "-61.6437, -241.647, -51.6599, 0.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-25.8434, 48.2308, 2.56814, 1.03", "-26.0803, 48.3911, 2.63159, 1.03", "-26.7518, 48.9161, 2.73406, 0.81", "-27.4166, 49.4836, 2.78737, 0.81", "-27.9781, 49.9796, 2.80982, 0.81", "-28.4003, 50.3495, 2.81673, 0.88", "-28.9666, 50.8257, 2.81903, 0.88", "-29.6732, 51.4075, 2.83358, 0.88", "-30.3358, 51.9503, 2.85923, 0.74", "-30.9098, 52.3786, 2.93468, 0.74", "-31.6315, 52.8418, 3.1049, 1.03", "-32.0625, 53.0824, 3.24365, 1.03", "-32.9051, 53.4759, 3.64827, 1.03", "-33.295, 53.6365, 3.82552, 1.03", "-34.5346, 54.0992, 4.33232, 1.03", "-35.1952, 54.3395, 4.61743, 0.88", "-35.6787, 54.5139, 4.82309, 0.88", "-36.9521, 54.9843, 5.3385, 0.88", "-40.5502, 56.3664, 6.6663, 0.66", "-41.392, 56.6955, 6.9349, 0.66", "-42.6804, 57.226, 7.26439, 0.59", "-43.4232, 57.5446, 7.43329, 0.59", "-43.8981, 57.7578, 7.51893, 0.59", "-44.4888, 58.0561, 7.56788, 0.59", "-45.3966, 58.6469, 7.52137, 0.74", "-45.802, 58.9615, 7.43276, 0.74", "-45.9982, 59.1348, 7.35908, 0.74", "-46.358, 59.4962, 7.21491, 0.74", "-46.5102, 59.6638, 7.15926, 0.88", "-47.232, 60.5442, 6.95531, 0.81", "-47.6808, 61.1487, 6.86546, 0.81", "-48.0574, 61.6714, 6.81813, 0.81", "-48.35, 62.0766, 6.80189, 0.88", "-48.8352, 62.7489, 6.8087, 0.96", "-49.5219, 63.6836, 6.86268, 0.96", "-49.8936, 64.1813, 6.91852, 0.88", "-50.4216, 64.8657, 6.99798, 0.88", "-50.7054, 65.2187, 7.03835, 0.96", "-51.3556, 66.0088, 7.10288, 0.96", "-51.8313, 66.562, 7.15353, 0.96", "-52.2098, 66.9917, 7.19669, 0.81", "-52.5808, 67.4123, 7.23673, 0.74", "-52.9555, 67.8449, 7.28549, 0.74", "-53.3844, 68.3845, 7.39843, 0.74", "-53.9585, 69.1781, 7.62604, 0.74", "-54.385, 69.8151, 7.86461, 0.74", "-54.7335, 70.3527, 8.10122, 0.74", "-55.1871, 71.0596, 8.44837, 0.74", "-55.7438, 71.9423, 8.91369, 0.74", "-56.0872, 72.4558, 9.23494, 0.52", "-56.5862, 73.1453, 9.68911, 0.59", "-56.7478, 73.348, 9.83624, 0.74", "-56.9438, 73.5753, 9.98498, 0.74", "-57.1724, 73.8135, 10.1077, 0.74", "-58.1348, 74.7508, 10.4497, 0.81", "-58.5312, 75.1556, 10.5501, 1.4", "-58.799, 75.4582, 10.5855, 1.4", "-59.4536, 76.2871, 10.6054, 0.88", "-59.7263, 76.6658, 10.5841, 0.59", "-60.0393, 77.1339, 10.5221, 0.52", "-60.3385, 77.6424, 10.3926, 0.52", "-60.4957, 77.9209, 10.3208, 0.52", "-60.7859, 78.4269, 10.1995, 0.52", "-61.0129, 78.827, 10.148, 0.52" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.0766, -274.301, -27.5829, 0.37", "18.6084, -274.913, -27.3217, 0.37", "17.8927, -275.857, -26.9212, 0.37", "17.5707, -276.3, -26.7543, 0.37", "16.6293, -277.647, -26.3224, 0.37", "16.2826, -278.146, -26.1791, 0.37", "15.8741, -278.734, -26.0318, 0.37", "15.7122, -278.966, -25.9813, 0.37", "15.0549, -279.947, -25.8206, 0.37", "14.443, -280.878, -25.726, 0.37", "14.1801, -281.274, -25.7211, 0.37", "13.5409, -282.195, -25.7269, 0.37", "13.0353, -282.875, -25.7446, 0.37", "12.4209, -283.67, -25.7689, 0.37", "12.0855, -284.089, -25.7831, 0.37", "11.2378, -285.141, -25.7686, 0.52", "10.8684, -285.612, -25.7455, 0.52", "10.1842, -286.533, -25.6713, 0.52", "9.59677, -287.297, -25.5905, 0.52", "8.94488, -288.103, -25.4901, 0.52", "8.256, -288.92, -25.4154, 0.66", "7.98099, -289.264, -25.3973, 0.66", "7.08439, -290.36, -25.402, 0.37", "6.27139, -291.338, -25.4488, 0.37", "5.64855, -292.107, -25.4962, 0.37", "4.98788, -292.978, -25.5471, 1.03", "4.24059, -294.032, -25.6099, 0.44", "2.78703, -296.236, -25.6737, 0.44", "2.22481, -297.194, -25.6713, 0.44", "1.76417, -298.137, -25.637, 0.44", "1.38055, -299.067, -25.5691, 0.52", "1.27283, -299.406, -25.5324, 0.66", "1.14316, -299.922, -25.5078, 0.66", "1.03611, -300.587, -25.5277, 0.37", "0.91671, -301.356, -25.608, 0.37", "0.680396, -302.76, -25.8463, 0.37", "0.453746, -304.15, -26.1328, 0.37", "0.23535, -305.53, -26.4629, 0.37", "0.141018, -306.177, -26.6257, 0.37", "0.0040396, -307.14, -26.8825, 0.37", "-0.0818, -307.63, -27.0086, 0.37", "-0.235177, -308.335, -27.1807, 0.37", "-0.437193, -309.138, -27.3449, 0.59", "-0.761668, -310.363, -27.5136, 0.59", "-0.896344, -310.834, -27.5724, 0.59", "-1.35551, -312.323, -27.7642, 0.59", "-1.67343, -313.311, -27.8849, 0.37", "-1.87769, -313.917, -27.9508, 0.37", "-2.16734, -314.792, -28.022, 0.37", "-2.56275, -316.024, -28.1021, 0.37", "-2.93815, -317.256, -28.1601, 0.52", "-3.19516, -318.151, -28.2034, 0.52", "-3.42753, -318.931, -28.2385, 0.37", "-4.08544, -320.947, -28.3395, 0.37", "-4.4618, -321.999, -28.3957, 0.88", "-4.77815, -322.788, -28.4307, 1.03", "-5.00432, -323.293, -28.4443, 1.03", "-5.35597, -324.002, -28.5006, 0.44", "-5.78588, -324.797, -28.5818, 0.44", "-6.26836, -325.542, -28.6935, 0.44", "-6.61175, -326.016, -28.7849, 0.44", "-6.93147, -326.432, -28.8694, 0.44", "-7.71017, -327.454, -29.0583, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "19.0766, -274.301, -27.5829, 0.52", "19.9641, -274.782, -27.2642, 0.52", "20.7219, -275.183, -26.999, 0.37", "22.1757, -275.966, -26.5538, 0.59", "23.0572, -276.469, -26.3133, 0.59", "24.0597, -277.077, -26.0642, 0.52", "24.5011, -277.359, -25.9624, 0.52", "25.4273, -278.017, -25.7722, 0.37", "26.7036, -279.025, -25.5614, 0.37", "27.6124, -279.851, -25.4726, 0.37", "28.2179, -280.466, -25.4169, 0.37", "28.6639, -280.968, -25.3829, 0.37", "29.3368, -281.797, -25.3484, 0.37", "29.6537, -282.232, -25.3185, 0.37", "30.3363, -283.321, -25.2189, 0.37", "30.8828, -284.314, -25.1155, 0.37", "31.4759, -285.531, -24.9993, 0.37", "32.061, -286.896, -24.8816, 0.37", "32.5746, -288.303, -24.7753, 0.37", "32.9496, -289.518, -24.6971, 0.37", "33.1271, -290.339, -24.6561, 0.37", "33.2415, -291.128, -24.6327, 0.37", "33.3085, -291.762, -24.6309, 0.44", "33.3893, -292.484, -24.6554, 0.44", "33.5111, -293.215, -24.7128, 0.44", "33.6788, -293.907, -24.7445, 0.44", "34.0172, -294.853, -24.7675, 0.44", "34.367, -295.554, -24.7675, 0.52", "34.6387, -296.004, -24.7675, 0.52", "34.9065, -296.397, -24.7675, 0.52", "35.4024, -297.098, -24.7675, 0.52", "36.2751, -298.324, -24.7675, 0.52", "37.0314, -299.46, -24.7675, 0.66", "37.2056, -299.728, -24.7611, 0.37", "37.4324, -300.095, -24.7446, 0.37", "37.7767, -300.714, -24.7109, 0.37", "38.0808, -301.333, -24.673, 0.37", "38.458, -302.209, -24.6169, 0.52", "38.6485, -302.678, -24.5892, 0.52", "38.9754, -303.492, -24.5775, 0.52", "39.3731, -304.445, -24.608, 0.44", "39.6946, -305.173, -24.6725, 0.44", "40.0197, -305.962, -24.7776, 0.88", "40.4023, -306.903, -24.9378, 0.88", "40.9115, -308.239, -25.1612, 0.88", "41.2824, -309.268, -25.3083, 0.88", "41.4717, -309.82, -25.3687, 0.66", "41.76, -310.702, -25.4527, 0.52", "42.0371, -311.58, -25.5165, 0.52", "42.4332, -312.781, -25.5919, 0.37", "42.7776, -313.899, -25.6381, 0.37", "43.0361, -314.776, -25.6739, 0.66", "43.1567, -315.171, -25.691, 0.66", "43.3929, -315.883, -25.7397, 0.66", "43.688, -316.801, -25.7933, 0.44", "44.2041, -318.234, -25.8692, 0.37", "44.388, -318.743, -25.8906, 0.37", "44.5777, -319.284, -25.9041, 0.37", "44.8146, -319.952, -25.9108, 0.37", "45.1307, -320.812, -25.9154, 0.37", "45.4209, -321.643, -25.9098, 0.37", "45.7761, -322.727, -25.9333, 0.59", "45.851, -323.015, -25.9479, 0.59", "46.0006, -323.675, -26.0083, 0.29", "46.1109, -324.124, -26.0637, 0.29", "46.3512, -325.035, -26.1874, 0.29", "46.4811, -325.509, -26.2311, 0.52", "46.7453, -326.319, -26.2737, 0.52", "46.9371, -326.863, -26.2963, 0.44", "47.2558, -327.823, -26.324, 0.37", "47.7185, -329.347, -26.3636, 0.37", "48.0262, -330.414, -26.3698, 0.37", "48.195, -331.062, -26.3628, 0.37", "48.3991, -331.835, -26.342, 0.37", "48.5938, -332.637, -26.2957, 0.37", "48.7861, -333.441, -26.2354, 0.37", "49.1784, -334.954, -26.0999, 0.37", "49.2894, -335.359, -26.0614, 0.37", "49.7882, -337.008, -25.9107, 0.37", "50.1649, -338.073, -25.8202, 0.37", "50.5631, -339.061, -25.6883, 0.37", "50.7438, -339.497, -25.6145, 0.52", "51.0208, -340.232, -25.4726, 0.52", "51.3058, -341.143, -25.2518, 0.37", "51.5228, -342.041, -25.0006, 0.37", "51.8366, -343.563, -24.5649, 0.37", "51.9544, -344.258, -24.3685, 0.66", "52.0725, -345.028, -24.1608, 0.66", "52.2468, -346.094, -23.8989, 0.66", "52.4058, -347.014, -23.7022, 0.52", "52.5845, -347.927, -23.5492, 0.52", "52.9623, -349.649, -23.3743, 0.52", "53.0693, -350.122, -23.3428, 0.37", "53.3177, -351.28, -23.3157, 0.37", "53.4124, -351.79, -23.3366, 0.52", "53.4557, -352.063, -23.3226, 0.52", "53.5753, -352.99, -23.183, 0.59", "53.6608, -353.906, -22.9602, 0.88", "53.7176, -354.766, -22.6842, 0.88", "53.7217, -355.474, -22.4351, 0.88", "53.6534, -357.969, -21.5328, 0.59", "53.6146, -358.534, -21.3177, 0.52", "53.5233, -359.654, -20.8498, 0.52", "53.4411, -360.988, -20.2727, 0.44", "53.3696, -362.229, -19.7183, 0.44", "53.3381, -362.911, -19.4265, 0.44", "53.2724, -364.37, -18.9167, 0.44", "53.2435, -365.286, -18.5813, 0.44", "53.2322, -366.118, -18.2085, 0.44", "53.2694, -367.157, -17.7057, 0.59", "53.3086, -367.719, -17.429, 0.59", "53.377, -368.441, -17.1021, 0.59", "53.4735, -369.516, -16.6856, 0.59", "53.5528, -371.081, -16.1857, 0.59", "53.5758, -372.18, -15.8987, 0.59", "53.5926, -373.083, -15.7387, 0.59", "53.5932, -374.021, -15.6146, 0.74", "53.614, -375.428, -15.495, 0.44", "53.6617, -376.625, -15.4558, 0.44", "53.7424, -378.017, -15.4496, 0.44", "53.8409, -379.215, -15.4527, 0.44", "53.9594, -380.255, -15.4627, 0.44", "54.1096, -381.428, -15.4832, 0.59", "54.3243, -382.632, -15.5148, 0.59", "54.5969, -383.834, -15.561, 0.59", "54.8228, -384.69, -15.5994, 0.59", "55.0744, -385.694, -15.6433, 0.59", "55.2483, -386.539, -15.7109, 0.52", "55.4426, -387.877, -15.8593, 0.52", "55.5377, -388.816, -15.9476, 0.52", "55.5913, -389.727, -16.0161, 0.37", "55.6331, -390.926, -16.0801, 0.37", "55.6802, -392.446, -16.1674, 0.37", "55.6935, -392.822, -16.188, 0.37", "55.7388, -394.153, -16.2919, 0.37", "55.8067, -395.188, -16.3623, 0.37", "55.9451, -396.455, -16.4597, 0.37", "56.0791, -397.304, -16.5299, 0.37", "56.2157, -398.285, -16.63, 0.37", "56.2959, -399.267, -16.7543, 0.37", "56.3538, -400.285, -16.9355, 0.37", "56.39, -401.074, -17.0686, 0.37", "56.3971, -401.619, -17.1609, 0.37", "56.3834, -403.1, -17.4187, 0.37", "56.3889, -404.533, -17.6806, 0.37", "56.4147, -406.462, -18.0454, 0.37", "56.446, -407.354, -18.2455, 0.37", "56.6179, -410.225, -18.9876, 0.37", "56.7698, -411.795, -19.4264, 0.37", "56.9056, -412.793, -19.7354, 0.37", "57.1237, -414.15, -20.1936, 0.37", "57.385, -415.745, -20.7428, 0.37", "57.6386, -416.891, -21.1431, 0.59", "57.8236, -417.675, -21.4229, 0.81", "58.0409, -418.624, -21.77, 0.96", "58.2223, -419.518, -22.0682, 0.96", "58.4305, -420.59, -22.3772, 0.44", "58.7398, -422.407, -22.8473, 0.44", "59.191, -425.37, -23.55, 0.44", "59.4092, -426.938, -23.9025, 0.44", "59.6093, -428.498, -24.2175, 0.44", "59.8092, -430.311, -24.6127, 0.44", "59.8972, -431.259, -24.8204, 0.74", "59.9426, -431.949, -24.9668, 0.81", "60.0323, -433.148, -25.1851, 0.52", "60.1182, -434.496, -25.4565, 0.37", "60.2465, -436.311, -25.8663, 0.37", "60.4151, -437.81, -26.2687, 0.37", "60.6995, -439.624, -26.7863, 0.37", "60.8203, -440.307, -26.9929, 0.37", "61.1378, -441.996, -27.5574, 0.37", "61.3626, -443.172, -27.9639, 0.37", "61.6376, -444.832, -28.5571, 0.37", "61.7215, -445.667, -28.8846, 0.37", "61.7565, -446.711, -29.2779, 0.37", "61.7441, -447.483, -29.577, 0.59", "61.6455, -448.534, -29.9513, 0.59", "61.4959, -449.574, -30.3329, 0.59", "61.2657, -450.756, -30.7372, 0.59", "60.9518, -452.332, -31.2935, 0.59", "60.621, -454.127, -31.9311, 0.59", "60.4345, -455.275, -32.3182, 0.59", "60.229, -456.819, -32.8524, 0.59", "60.0869, -458.084, -33.2695, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-120.267, -376.06, -64.3888, 0.44", "-120.377, -376.587, -64.6348, 0.44", "-120.53, -377.345, -65.1168, 0.44", "-120.668, -378.195, -65.681, 0.44", "-120.768, -378.938, -66.0974, 0.44", "-120.937, -380.086, -66.6244, 0.52", "-121.109, -381.048, -67.0332, 0.52", "-121.49, -382.752, -67.6711, 0.74", "-121.674, -383.443, -67.9276, 0.81", "-122.089, -384.869, -68.4202, 1.11", "-122.443, -386.009, -68.8653, 0.59", "-122.874, -387.287, -69.3657, 0.44", "-123.33, -388.566, -69.8848, 0.44", "-123.876, -390.015, -70.4498, 0.44", "-124.108, -390.593, -70.6972, 0.44", "-124.744, -392.148, -71.4073, 0.44", "-125.111, -393.074, -71.7851, 0.74", "-125.303, -393.556, -71.9414, 1.03", "-125.588, -394.224, -72.1167, 0.59", "-126.046, -395.241, -72.2811, 0.37", "-126.48, -396.188, -72.38, 0.37", "-127.007, -397.296, -72.4093, 0.37", "-127.302, -397.907, -72.4231, 0.52", "-127.582, -398.444, -72.4391, 0.52", "-127.773, -398.79, -72.4511, 0.52", "-128.38, -399.824, -72.5442, 0.52", "-129.288, -401.176, -72.734, 0.52", "-129.595, -401.615, -72.8014, 0.52", "-130.39, -402.713, -73.0004, 0.29", "-130.659, -403.069, -73.0784, 0.29", "-131.478, -404.04, -73.3529, 0.66", "-132.115, -404.627, -73.5986, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-120.267, -376.06, -64.3888, 0.29", "-118.25, -374.173, -65.1558, 0.29", "-117.55, -373.54, -65.372, 0.29", "-116.746, -372.813, -65.6206, 0.29", "-115.932, -372.078, -65.872, 0.29", "-115.444, -371.636, -66.0229, 0.29", "-114.868, -371.116, -66.2007, 0.29", "-114.33, -370.665, -66.2007, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-61.0129, 78.827, 10.148, 0.59", "-62.356, 79.4922, 7.81588, 0.59", "-62.6977, 79.6775, 7.40292, 0.59", "-63.7202, 80.3144, 6.55835, 0.81", "-64.1257, 80.5929, 6.28438, 0.66", "-64.8678, 81.1662, 5.7933, 0.52", "-65.4242, 81.6416, 5.39599, 0.52", "-66.2932, 82.5113, 4.92726, 0.52", "-66.9758, 83.287, 4.54887, 0.52", "-67.4833, 83.9089, 4.27547, 0.52", "-68.0146, 84.5519, 3.98272, 0.52", "-68.8671, 85.5869, 3.51438, 0.52", "-69.1469, 85.9317, 3.34412, 0.52", "-69.4597, 86.3594, 3.08609, 0.74", "-69.9722, 87.0444, 2.62757, 0.22", "-70.4752, 87.7, 2.20451, 0.22", "-70.7982, 88.0855, 1.9706, 0.22", "-70.836, 88.13, 1.94455, 0.59", "-71.6899, 89.1588, 1.20126, 0.52", "-71.9698, 89.5443, 0.841933, 0.52", "-72.0721, 89.7905, 0.55149, 0.52" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-61.0129, 78.827, 10.148, 0.52", "-61.3749, 79.2365, 11.0054, 0.52", "-62.6009, 80.4887, 13.349, 0.74", "-62.6345, 80.521, 13.4017, 1.03", "-62.7974, 80.6755, 13.6181, 0.96", "-63.6817, 81.5133, 14.6382, 0.74", "-64.0582, 81.8682, 15.0225, 0.74", "-64.4734, 82.2439, 15.3947, 0.74", "-65.2553, 82.9578, 15.826, 0.74", "-65.7753, 83.4208, 16.0896, 0.74", "-66.1961, 83.7768, 16.2716, 0.74", "-67.0642, 84.5026, 16.4844, 0.96" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.71017, -327.454, -29.0583, 0.44", "-8.22353, -328.791, -27.0244, 0.44", "-8.40163, -329.255, -26.3187, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.71017, -327.454, -29.0583, 0.44", "-8.42413, -327.709, -29.0583, 0.44", "-9.4522, -328.227, -29.0583, 0.44", "-10.335, -328.672, -29.0583, 0.44", "-11.2317, -329.124, -29.0583, 0.44", "-12.4218, -329.724, -29.0583, 0.44", "-13.2687, -330.151, -29.0583, 0.44", "-13.6703, -330.446, -29.0583, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "60.0869, -458.084, -33.2695, 0.37", "60.2262, -459.283, -33.3782, 0.37", "60.3947, -460.808, -33.6056, 0.37", "60.4552, -462.272, -33.8553, 0.37", "60.4276, -463.959, -34.145, 0.37", "60.3834, -464.849, -34.3157, 0.59", "60.3356, -465.522, -34.446, 0.59", "60.2083, -466.693, -34.6734, 0.59", "59.9103, -468.575, -35.0469, 0.59", "59.6821, -469.842, -35.2927, 0.88", "59.5572, -470.789, -35.4865, 0.81", "59.3103, -472.364, -35.7761, 0.44", "59.0974, -473.559, -35.9725, 0.44", "58.9242, -474.437, -36.0853, 0.44", "58.8085, -474.963, -36.1373, 0.74", "58.1584, -476.815, -36.2061, 0.29", "57.2454, -478.76, -36.1689, 0.29", "56.7685, -479.533, -36.1375, 0.29", "56.459, -479.983, -36.1132, 0.59", "55.7046, -481.101, -36.0209, 0.29", "54.7236, -482.606, -35.8673, 0.22", "54.295, -483.243, -35.7884, 1.11", "53.7923, -484.139, -35.697, 0.52", "53.2919, -485.054, -35.6071, 0.52", "52.8771, -485.876, -35.5398, 0.52", "52.5768, -486.52, -35.5185, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "60.0869, -458.084, -33.2695, 0.37", "59.144, -457.31, -33.3559, 0.37", "57.6639, -456.332, -33.4673, 0.37", "56.9778, -455.976, -33.5121, 0.37", "55.392, -455.375, -33.6043, 0.37", "54.1876, -455.018, -33.6719, 0.37", "53.2615, -454.679, -33.6971, 0.37", "52.3293, -454.056, -33.4929, 0.37", "52.7674, -454.864, -33.7997, 0.37", "53.073, -455.828, -34.1601, 0.37", "53.5588, -457.5, -34.7816, 0.37", "54.6499, -460.109, -35.8169, 0.37", "55.0432, -460.732, -36.1088, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-132.115, -404.627, -73.5986, 0.37", "-132.575, -405.087, -73.7477, 0.37", "-133.212, -405.772, -73.9815, 0.37", "-133.608, -406.24, -74.1326, 0.37", "-134.321, -407.137, -74.3988, 0.37", "-135.106, -408.154, -74.6679, 0.66", "-135.726, -408.965, -74.8627, 0.66", "-136.16, -409.59, -74.9978, 0.66", "-136.534, -410.174, -75.164, 0.66", "-136.889, -410.788, -75.3543, 0.66", "-137.388, -411.701, -75.6414, 0.66", "-137.935, -412.635, -75.9497, 0.66", "-138.466, -413.504, -76.2684, 0.96", "-139.466, -415.025, -76.8461, 0.37", "-140.113, -415.956, -77.208, 0.37", "-140.586, -416.604, -77.4581, 0.37", "-140.987, -417.145, -77.6532, 0.29", "-141.601, -417.963, -77.903, 0.29", "-142.119, -418.666, -78.0371, 0.29", "-142.59, -419.415, -78.0625, 0.29", "-142.86, -419.918, -78.0609, 0.29", "-143.155, -420.565, -78.0368, 0.29", "-143.352, -421.052, -77.9648, 0.66", "-143.703, -421.989, -77.7663, 0.29", "-144.022, -422.88, -77.5368, 0.29", "-144.324, -423.63, -77.3289, 0.29", "-144.723, -424.548, -77.0421, 0.29", "-145.405, -425.995, -76.5543, 0.29", "-145.76, -426.691, -76.3199, 0.74", "-145.935, -427.011, -76.2174, 0.81", "-146.476, -427.96, -75.9217, 0.44", "-146.941, -428.768, -75.696, 0.44", "-147.172, -429.192, -75.6039, 0.59", "-147.653, -430.1, -75.4853, 0.59", "-147.97, -430.702, -75.41, 0.81", "-148.259, -431.226, -75.3493, 0.44", "-148.87, -432.198, -75.2508, 0.44", "-149.308, -432.73, -75.2198, 0.44", "-149.686, -433.094, -75.2001, 0.66", "-150.201, -433.524, -75.1799, 0.66", "-150.839, -434.018, -75.1704, 0.44", "-151.672, -434.668, -75.1766, 0.44", "-152.611, -435.423, -75.2039, 0.44", "-153.461, -436.162, -75.2329, 0.44", "-153.881, -436.562, -75.2718, 0.44", "-154.368, -437.075, -75.3383, 0.52", "-155.142, -437.968, -75.4693, 0.52", "-155.924, -438.942, -75.6171, 0.52", "-156.406, -439.548, -75.7117, 0.52", "-157.709, -441.128, -75.9456, 0.29", "-158.461, -441.956, -76.0574, 0.29", "-159.11, -442.608, -76.1778, 0.44", "-159.754, -443.201, -76.3121, 0.44", "-160.822, -444.121, -76.5439, 0.44", "-162.265, -445.301, -76.7998, 0.44", "-163.491, -446.286, -76.9649, 0.44", "-164.799, -447.32, -77.0757, 0.44", "-165.936, -448.18, -77.1142, 0.44", "-166.448, -448.542, -77.1099, 0.59", "-168.271, -449.755, -77.0188, 0.37", "-169.227, -450.357, -76.9317, 0.37", "-170.594, -451.224, -76.7477, 0.37", "-172.429, -452.397, -76.419, 0.37", "-173.178, -452.893, -76.2914, 0.52", "-173.858, -453.379, -76.188, 0.74", "-174.344, -453.78, -76.1185, 0.52", "-174.954, -454.417, -76.0167, 0.37", "-175.445, -455.165, -75.9247, 0.37", "-175.711, -455.847, -75.8245, 0.37", "-175.92, -456.52, -75.7526, 0.37", "-176.212, -457.714, -75.6659, 0.37", "-176.39, -458.478, -75.6338, 0.37", "-176.55, -459.143, -75.6246, 0.66", "-176.882, -460.367, -75.6979, 0.66", "-177.193, -461.331, -75.8184, 0.52", "-177.529, -462.277, -75.9928, 0.52", "-177.823, -463.096, -76.2024, 0.44", "-178.011, -463.652, -76.3471, 0.52", "-178.333, -464.734, -76.6098, 0.37", "-178.411, -465.028, -76.672, 0.37", "-178.623, -465.823, -76.7999, 0.37", "-178.82, -466.511, -76.898, 0.37", "-179.13, -467.616, -77.0246, 0.37", "-179.41, -468.593, -77.049, 0.37", "-179.624, -469.291, -76.9989, 0.37", "-179.817, -469.857, -76.9186, 0.37", "-180.06, -470.484, -76.7888, 0.37", "-180.236, -470.872, -76.685, 0.74", "-180.763, -471.912, -76.3709, 0.59", "-181.116, -472.524, -76.1345, 0.37", "-181.657, -473.382, -75.7754, 0.29", "-182.165, -474.133, -75.4387, 0.29", "-182.49, -474.576, -75.2377, 0.29", "-183.204, -475.51, -74.8373, 0.29", "-183.977, -476.423, -74.4839, 0.29", "-184.758, -477.268, -74.1645, 0.29", "-185.496, -477.997, -73.9112, 0.52", "-185.947, -478.414, -73.7777, 0.52", "-186.348, -478.765, -73.6894, 0.52", "-187.086, -479.331, -73.598, 0.52", "-187.669, -479.768, -73.5867, 0.52", "-188.167, -480.092, -73.5934, 0.29", "-188.68, -480.381, -73.6167, 0.29", "-189.628, -480.792, -73.6532, 0.29", "-190.147, -480.996, -73.6714, 0.29", "-190.778, -481.229, -73.6894, 0.29", "-191.722, -481.515, -73.7031, 0.22", "-192.493, -481.69, -73.7152, 0.22", "-193.59, -481.855, -73.7335, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-132.115, -404.627, -73.5986, 0.37", "-133.025, -404.172, -73.5884, 0.37", "-134.165, -403.447, -73.4909, 0.37", "-135.593, -402.44, -73.3286, 0.15", "-136.212, -401.941, -73.2982, 0.15", "-137.599, -400.774, -73.2839, 0.15", "-138.381, -400.112, -73.2906, 0.15", "-139.398, -399.248, -73.2873, 0.15", "-140.402, -398.355, -73.2572, 0.15", "-141.854, -396.937, -73.262, 0.15", "-143.231, -395.576, -73.3452, 0.15", "-144.088, -394.756, -73.4878, 0.15", "-144.483, -394.414, -73.5716, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-72.0721, 89.7905, 0.55149, 0.59", "-71.8676, 89.9755, 0.774597, 0.59", "-70.9053, 90.7365, 1.59545, 0.29", "-70.6011, 90.9368, 1.78547, 0.29", "-70.1557, 91.2304, 2.02347, 0.15", "-69.4242, 91.7008, 2.37797, 0.07", "-68.9245, 91.9934, 2.59801, 0.07", "-68.3651, 92.2755, 2.78217, 0.07", "-67.474, 92.6693, 2.99044, 0.07", "-66.04, 93.2475, 3.36162, 0.07", "-65.7011, 93.3778, 3.45308, 0.07", "-65.0633, 93.6151, 3.61846, 0.07", "-64.3704, 93.8861, 3.82761, 0.07", "-64.1255, 93.9907, 3.90833, 0.37", "-63.2271, 94.3642, 4.19971, 0.15", "-62.7549, 94.5435, 4.33741, 0.15", "-62.2173, 94.7987, 4.50107, 0.15", "-61.7495, 95.0536, 4.65056, 0.15", "-61.1881, 95.3748, 4.82901, 0.15", "-60.4759, 95.7641, 5.02291, 0.15", "-60.1889, 95.9049, 5.06966, 0.15", "-59.5072, 96.1859, 5.18233, 0.15" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-72.0721, 89.7905, 0.55149, 0.37", "-72.6798, 89.9041, 0.391933, 0.37", "-73.1116, 89.9871, 0.312824, 0.37", "-73.6924, 90.1099, 0.232675, 0.44", "-74.0738, 90.1976, 0.00421548, 0.66", "-74.4546, 90.2852, -0.223854, 0.66", "-75.0253, 90.4164, -0.565673, 0.52", "-75.7928, 90.5935, -1.08599, 0.29", "-76.2266, 90.6969, -1.4479, 0.37", "-78.5789, 91.297, -3.92792, 0.37" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-67.0642, 84.5026, 16.4844, 0.96", "-67.7116, 84.7218, 16.5797, 0.66", "-68.1606, 84.8695, 16.6498, 0.66", "-68.6777, 85.0291, 16.7294, 0.59", "-69.3821, 85.2272, 16.8508, 0.52", "-71.3019, 85.7107, 17.1886, 0.52", "-72.17, 85.9063, 17.3368, 0.59", "-72.5667, 85.9933, 17.4142, 0.81", "-73.0849, 86.0346, 17.5199, 0.52", "-73.669, 86.0026, 17.6479, 0.52", "-74.4348, 85.8547, 17.7779, 0.52", "-75.2218, 85.5946, 17.8651, 0.52", "-76.102, 85.2716, 17.9116, 0.52", "-78.152, 84.5292, 17.9005, 0.52", "-78.7701, 84.314, 17.864, 0.52", "-79.9079, 83.9554, 17.728, 0.59", "-80.5818, 83.781, 17.6087, 0.74", "-80.8131, 83.7446, 17.5526, 0.88", "-81.6525, 83.7679, 17.2941, 0.88", "-81.9838, 83.8686, 17.1893, 0.74", "-82.4274, 84.0678, 17.0797, 0.59", "-82.9819, 84.3561, 16.9857, 0.37", "-83.3851, 84.5786, 16.9578, 0.29", "-83.9434, 84.878, 16.9403, 0.37", "-84.6588, 85.2418, 16.9489, 0.52", "-86.216, 85.9698, 17.0735, 0.52", "-86.7528, 86.1865, 17.151, 0.59", "-88.0095, 86.583, 17.4072, 0.66", "-88.981, 86.7963, 17.6468, 0.66", "-89.4032, 86.8446, 17.7683, 0.66", "-90.4108, 86.87, 18.1232, 0.66", "-91.0693, 86.843, 18.3558, 0.66", "-91.6295, 86.8441, 18.5179, 0.66", "-91.9602, 86.8596, 18.596, 0.66", "-92.4639, 86.8898, 18.7299, 0.66", "-93.4401, 86.9313, 18.9461, 0.66", "-94.2179, 86.9628, 19.0978, 0.66", "-95.1055, 86.9956, 19.2771, 0.66", "-95.8673, 87.0139, 19.4259, 0.66", "-96.8067, 87.0321, 19.5865, 0.59", "-98.0385, 87.0229, 19.7151, 0.59", "-98.9009, 86.9929, 19.7544, 0.66", "-99.8792, 86.9386, 19.7849, 0.66", "-100.206, 86.918, 19.7859, 0.66", "-101.852, 86.832, 19.7034, 0.66", "-102.945, 86.8266, 19.5865, 0.96", "-103.192, 86.8406, 19.5408, 0.96" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-67.0642, 84.5026, 16.4844, 0.52", "-67.2379, 85.6091, 16.4863, 0.52", "-67.4594, 86.8572, 16.438, 0.37", "-67.5866, 87.3966, 16.4076, 0.37", "-67.8931, 88.3917, 16.3831, 0.29", "-68.1047, 88.9675, 16.3818, 0.52", "-68.3127, 89.4776, 16.3796, 0.52", "-68.861, 90.5378, 16.3549, 0.29", "-69.3155, 91.3031, 16.3259, 0.22", "-69.8457, 92.0563, 16.264, 0.22", "-70.2929, 92.5762, 16.1972, 0.22", "-70.5501, 92.853, 16.1523, 0.37", "-71.0012, 93.3255, 16.0667, 0.59", "-71.3419, 93.6964, 15.999, 0.44", "-71.7154, 94.165, 15.9118, 0.29", "-72.0705, 94.67, 15.8216, 0.29", "-72.4393, 95.2078, 15.7551, 0.29", "-72.917, 95.9113, 15.7116, 0.29", "-73.189, 96.2944, 15.7066, 0.29", "-73.708, 96.9413, 15.7827, 0.22", "-74.076, 97.3594, 15.8886, 0.15", "-74.4415, 97.7286, 16.0082, 0.59", "-74.6218, 97.8902, 16.0825, 0.59", "-75.3314, 98.4787, 16.3761, 0.15", "-76.4085, 99.3311, 16.7999, 0.29", "-76.7986, 99.6268, 16.9323, 0.44", "-77.8533, 100.424, 17.2506, 0.29", "-78.5793, 100.99, 17.4455, 0.37", "-79.5421, 101.753, 17.6688, 0.15", "-80.0313, 102.148, 17.7597, 0.15", "-80.8705, 102.832, 17.8953, 0.15", "-81.1113, 103.023, 17.9443, 0.29", "-81.8401, 103.583, 18.1183, 0.29", "-82.7751, 104.27, 18.3407, 0.29", "-83.0916, 104.496, 18.4326, 0.52", "-83.935, 105.094, 18.6979, 0.37", "-84.7243, 105.682, 18.9612, 0.29", "-85.2788, 106.099, 19.1454, 0.22", "-85.8032, 106.493, 19.3112, 0.22", "-86.0863, 106.712, 19.393, 0.22", "-86.4689, 107.01, 19.4863, 0.22", "-87.0516, 107.486, 19.5419, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.40163, -329.255, -26.3187, 0.44", "-8.45146, -329.941, -26.4057, 0.44", "-8.48859, -330.984, -26.5178, 0.44", "-8.52814, -332.047, -26.5519, 0.59", "-8.59192, -332.936, -26.541, 0.81", "-8.66077, -333.598, -26.5173, 0.81", "-8.79308, -334.521, -26.4708, 0.37", "-8.96811, -335.314, -26.4048, 0.37", "-9.2756, -336.338, -26.2866, 0.59", "-9.62496, -337.222, -26.115, 0.74", "-9.76548, -337.524, -26.05, 0.52", "-10.076, -338.12, -25.9192, 0.37", "-10.5057, -338.878, -25.7381, 0.37", "-11.1755, -340.029, -25.4743, 0.37", "-11.7857, -341.113, -25.2508, 0.29", "-12.4127, -342.315, -25.0039, 0.29", "-12.6383, -342.766, -24.9147, 0.88", "-13.1587, -343.818, -24.7217, 0.44", "-13.7328, -344.956, -24.5442, 0.44", "-13.9686, -345.417, -24.4903, 0.44", "-14.4521, -346.341, -24.431, 0.44", "-14.7501, -346.875, -24.4056, 0.44", "-15.35, -347.919, -24.4044, 0.44", "-16.0446, -349.065, -24.46, 0.44", "-16.5021, -349.773, -24.5072, 0.44", "-17.0132, -350.538, -24.5422, 0.44", "-17.6526, -351.476, -24.5641, 0.44", "-18.1051, -352.174, -24.5276, 0.37", "-18.7726, -353.279, -24.4745, 0.37", "-19.1344, -353.947, -24.3975, 0.59", "-19.6565, -355.013, -24.2231, 0.59", "-20.3882, -356.62, -23.9642, 0.59", "-20.9509, -357.917, -23.7566, 0.59", "-21.6175, -359.584, -23.5082, 0.44", "-22.2928, -361.621, -23.2914, 0.44", "-22.396, -361.999, -23.2601, 0.44", "-22.7135, -363.605, -23.1858, 0.66", "-22.7929, -364.28, -23.1641, 0.66", "-22.8815, -365.714, -23.1452, 0.59", "-22.8644, -367.106, -23.0833, 0.59", "-22.7821, -368.002, -23.0739, 0.59", "-22.6186, -369.135, -23.0356, 0.59", "-22.3702, -370.403, -22.9595, 0.44", "-22.1858, -371.338, -22.9112, 0.44", "-22.0047, -372.34, -22.8718, 0.44", "-21.8256, -373.712, -22.8232, 0.44", "-21.8025, -374.184, -22.811, 0.74", "-21.8647, -375.537, -22.7633, 0.37", "-21.9505, -376.292, -22.7319, 0.37", "-22.1148, -377.345, -22.6836, 0.37", "-22.4109, -379.01, -22.6035, 0.29", "-22.5983, -380.207, -22.5456, 0.29", "-22.6717, -381.174, -22.5113, 0.29", "-22.629, -382.641, -22.483, 0.29", "-22.5669, -383.088, -22.482, 0.66", "-22.3272, -383.966, -22.4961, 0.66", "-21.8967, -384.995, -22.5386, 0.29", "-21.2082, -386.273, -22.5997, 0.29", "-20.422, -387.533, -22.6651, 0.29", "-19.8097, -388.445, -22.7134, 0.29", "-19.0715, -389.487, -22.7978, 0.29", "-18.3848, -390.383, -22.8906, 0.29", "-17.8716, -391.006, -22.9993, 0.44", "-17.1778, -391.79, -23.1812, 0.44", "-16.3507, -392.651, -23.4262, 0.44", "-15.462, -393.546, -23.7074, 0.44", "-14.4282, -394.621, -24.0228, 0.44", "-13.3011, -395.858, -24.339, 0.44", "-12.7969, -396.476, -24.4813, 0.44", "-12.0831, -397.422, -24.671, 0.44", "-11.6877, -398.017, -24.762, 0.44", "-10.9733, -399.338, -24.9075, 0.44", "-10.5854, -400.27, -25.0271, 0.44", "-10.105, -401.607, -25.2185, 0.29", "-9.89661, -402.266, -25.3464, 0.96", "-9.66204, -403.121, -25.5646, 0.44", "-9.35192, -404.421, -25.9654, 0.44", "-8.94762, -406.035, -26.8008, 0.44", "-8.76793, -406.623, -27.2122, 0.66", "-8.6536, -406.902, -27.4774, 0.66", "-8.32107, -407.488, -28.2781, 0.44", "-8.1254, -407.725, -28.7665, 0.44", "-7.02749, -408.784, -31.4957, 0.44", "-6.83538, -408.934, -31.9723, 0.44", "-6.29815, -409.333, -33.3477, 0.44", "-5.60622, -409.754, -35.0871, 0.44", "-4.79291, -410.121, -37.0925, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.40163, -329.255, -26.3187, 0.44", "-9.43602, -329.387, -26.3187, 0.44", "-10.8381, -329.566, -26.3187, 0.44", "-11.583, -329.661, -26.3187, 0.44", "-12.6394, -329.795, -26.3187, 0.44", "-13.3048, -329.88, -26.3187, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "52.5768, -486.52, -35.5185, 0.44", "52.9423, -488.41, -35.828, 0.44", "53.0464, -489.052, -35.9414, 0.44", "53.24, -490.497, -36.2273, 0.44", "53.4947, -492.379, -36.6121, 0.44", "53.6361, -493.431, -36.8365, 0.44", "53.8232, -494.832, -37.1354, 0.44", "54.0387, -496.455, -37.503, 0.44", "54.1474, -497.24, -37.6947, 0.44", "54.2645, -497.986, -37.8976, 0.66", "54.4098, -498.821, -38.13, 0.29", "54.8386, -501.137, -38.6684, 0.29", "54.9625, -501.78, -38.7944, 0.29", "55.2335, -503.102, -38.9779, 0.29", "55.3583, -503.896, -39.0461, 0.37", "55.4204, -504.693, -39.0849, 0.66", "55.397, -506.092, -39.0823, 0.22", "55.2052, -507.074, -39.0272, 0.22", "54.8313, -508.105, -38.8986, 0.22", "54.2467, -509.382, -38.6844, 0.22", "53.9138, -509.989, -38.5709, 0.22", "53.4565, -510.675, -38.4592, 0.22", "52.5467, -511.766, -38.3554, 0.22", "51.7497, -512.513, -38.2566, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "52.5768, -486.52, -35.5185, 0.44", "51.8862, -487.581, -35.565, 0.44", "50.8446, -489.118, -35.6913, 0.44", "50.0146, -490.33, -35.9208, 0.44", "48.9405, -491.793, -36.3395, 0.44", "48.1453, -492.876, -36.6495, 0.44", "47.308, -494.016, -36.9759, 0.44", "46.5542, -495.0, -37.3275, 0.44", "45.4039, -496.386, -37.9979, 0.44", "44.652, -497.217, -38.5516, 0.44" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-103.192, 86.8406, 19.5408, 0.59", "-104.167, 87.0828, 19.2644, 0.59", "-104.714, 87.2243, 19.1144, 0.59", "-105.464, 87.4095, 18.9332, 0.52", "-106.805, 87.7264, 18.6486, 0.52", "-108.174, 88.0149, 18.3853, 0.52", "-109.633, 88.2797, 18.1315, 0.52", "-109.974, 88.3365, 18.0873, 0.52", "-111.097, 88.5489, 17.9203, 0.52", "-112.045, 88.7572, 17.7699, 0.52", "-112.616, 88.871, 17.68, 0.52", "-113.407, 89.028, 17.5416, 0.59", "-113.577, 89.0619, 17.5124, 0.59", "-115.322, 89.3565, 17.1858, 0.44", "-115.989, 89.4462, 17.0462, 0.44", "-116.434, 89.464, 16.9551, 0.66", "-117.094, 89.4094, 16.8724, 0.66", "-117.77, 89.254, 16.8508, 0.66", "-118.454, 88.9853, 16.8904, 0.81", "-118.786, 88.7935, 16.9307, 0.96", "-119.487, 88.3243, 17.0207, 0.96", "-120.341, 87.7026, 17.1336, 0.81", "-120.69, 87.4236, 17.1793, 0.81", "-121.882, 86.2847, 17.3301, 0.29", "-122.86, 85.1821, 17.504, 0.22", "-123.177, 84.7823, 17.5711, 0.52", "-123.584, 84.201, 17.6678, 0.52", "-123.888, 83.7072, 17.7428, 0.52", "-124.647, 82.3538, 17.9741, 0.29", "-125.166, 81.3383, 18.1593, 0.29", "-125.537, 80.6655, 18.2866, 0.29", "-125.692, 80.4326, 18.3273, 0.29", "-125.978, 80.0976, 18.364, 0.52", "-126.213, 79.9055, 18.3611, 0.52", "-126.875, 79.548, 18.2768, 0.52", "-127.256, 79.3827, 18.1983, 0.52", "-127.758, 79.1956, 18.0985, 0.52", "-128.381, 78.9503, 17.9875, 0.52", "-129.01, 78.6872, 17.9079, 0.44", "-129.652, 78.4105, 17.9113, 0.52", "-130.138, 78.2034, 17.968, 0.52", "-130.599, 78.0187, 18.0522, 0.29", "-131.431, 77.706, 18.2931, 0.29", "-132.321, 77.3848, 18.5613, 0.52", "-133.464, 76.9474, 18.8859, 0.37", "-133.922, 76.7596, 19.002, 0.29", "-134.919, 76.3391, 19.2284, 0.29", "-135.939, 75.9137, 19.4343, 0.37", "-139.136, 74.6508, 19.9818, 0.29", "-140.25, 74.2112, 20.1252, 0.66", "-141.094, 73.8774, 20.1913, 0.59", "-141.309, 73.7866, 20.2044, 0.59", "-141.827, 73.5461, 20.2213, 0.44", "-142.409, 73.2728, 20.2344, 0.59", "-142.963, 73.0353, 20.2809, 0.44", "-143.815, 72.7273, 20.3321, 0.44", "-144.93, 72.3462, 20.3471, 0.37", "-145.385, 72.2005, 20.3151, 0.37", "-146.502, 71.875, 20.1604, 0.52", "-147.473, 71.6122, 19.9822, 0.52", "-148.581, 71.3289, 19.7673, 0.52", "-149.698, 71.0631, 19.5389, 0.52", "-150.727, 70.849, 19.3085, 0.44", "-151.495, 70.6894, 19.1274, 0.44", "-152.461, 70.4434, 18.8724, 0.44", "-153.369, 70.1436, 18.6697, 0.59", "-153.76, 69.9778, 18.6125, 0.59", "-154.2, 69.7388, 18.563, 0.74", "-154.581, 69.4759, 18.5312, 0.88", "-155.359, 68.8325, 18.431, 0.37", "-155.961, 68.2432, 18.3293, 0.29", "-156.397, 67.771, 18.246, 0.74", "-156.81, 67.2799, 18.1759, 0.74", "-157.169, 66.824, 18.1275, 0.74", "-157.569, 66.3026, 18.0817, 0.66", "-158.2, 65.4639, 18.0308, 0.66", "-158.581, 64.9311, 18.0079, 0.66", "-158.864, 64.5078, 17.9959, 0.74", "-159.146, 64.0815, 17.9902, 0.44", "-159.468, 63.612, 18.0061, 0.44", "-159.924, 63.0105, 18.0561, 0.44", "-160.477, 62.3596, 18.1442, 0.44", "-160.897, 61.9269, 18.2183, 0.44", "-161.443, 61.4292, 18.3163, 0.44", "-162.363, 60.6438, 18.4982, 0.44", "-162.9, 60.1963, 18.6175, 0.44", "-163.674, 59.5706, 18.7973, 0.44", "-164.404, 58.9657, 18.9709, 0.59", "-164.809, 58.6047, 19.0721, 0.88", "-165.416, 58.0144, 19.222, 0.44", "-165.973, 57.4176, 19.3477, 0.44", "-166.38, 56.9391, 19.4427, 0.44", "-166.66, 56.5777, 19.5033, 0.44", "-166.981, 56.1063, 19.5811, 0.44", "-167.29, 55.6326, 19.6493, 0.44", "-167.591, 55.2194, 19.6783, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-103.192, 86.8406, 19.5408, 0.52", "-103.513, 86.6206, 20.066, 0.52", "-104.524, 86.2102, 21.3395, 0.37", "-106.479, 85.7156, 23.212, 0.37", "-106.835, 85.6377, 23.5008, 0.37", "-107.574, 85.4637, 24.0272, 0.37", "-108.179, 85.2997, 24.4521, 0.22", "-109.093, 85.1301, 25.0373, 0.22", "-109.834, 85.0518, 25.4368, 0.22", "-111.051, 84.856, 25.8092, 0.37", "-111.77, 84.7356, 26.0427, 0.37", "-112.446, 84.5871, 26.2836, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_0", "dend_53", "dend_52", "dend_36", "dend_1", "dend_66", "dend_63", "dend_54", "dend_44", "dend_37", "dend_35", "dend_2", "dend_82", "dend_67", "dend_65", "dend_64", "dend_58", "dend_55", "dend_46", "dend_45", "dend_41", "dend_38", "dend_28", "dend_3", "dend_81", "dend_68", "dend_62", "dend_59", "dend_57", "dend_56", "dend_48", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_7", "dend_4", "dend_70", "dend_69", "dend_61", "dend_60", "dend_50", "dend_49", "dend_32", "dend_31", "dend_15", "dend_8", "dend_6", "dend_5", "dend_71", "dend_34", "dend_33", "dend_17", "dend_16", "dend_10", "dend_9", "dend_72", "dend_23", "dend_18", "dend_12", "dend_11", "dend_78", "dend_73", "dend_25", "dend_24", "dend_20", "dend_19", "dend_14", "dend_13", "dend_80", "dend_79", "dend_75", "dend_74", "dend_27", "dend_26", "dend_22", "dend_21", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_0", "dend_53", "dend_52", "dend_36", "dend_1", "dend_66", "dend_63", "dend_54", "dend_44", "dend_37", "dend_35", "dend_2", "dend_82", "dend_67", "dend_65", "dend_64", "dend_58", "dend_55", "dend_46", "dend_45", "dend_41", "dend_38", "dend_28", "dend_3", "dend_81", "dend_68", "dend_62", "dend_59", "dend_57", "dend_56", "dend_48", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_7", "dend_4", "dend_70", "dend_69", "dend_61", "dend_60", "dend_50", "dend_49", "dend_32", "dend_31", "dend_15", "dend_8", "dend_6", "dend_5", "dend_71", "dend_34", "dend_33", "dend_17", "dend_16", "dend_10", "dend_9", "dend_72", "dend_23", "dend_18", "dend_12", "dend_11", "dend_78", "dend_73", "dend_25", "dend_24", "dend_20", "dend_19", "dend_14", "dend_13", "dend_80", "dend_79", "dend_75", "dend_74", "dend_27", "dend_26", "dend_22", "dend_21", "dend_77", "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_82", "dend_82", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_71", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_MC_38015c3bc0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_36, id: dend_36, parent: dend_0
create dend_36
public dend_36
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_53
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_1
create dend_35
public dend_35
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_66
create dend_82
public dend_82
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_2
create dend_28
public dend_28
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_81, id: dend_81, parent: dend_67
create dend_81
public dend_81
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_78, id: dend_78, parent: dend_72
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_83
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_82, dend_82, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_71, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.45000035582915904)
    connect dend_0(0), soma_0(0.45000035582915904)
    connect axon_0(0), soma_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_36(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_53(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_81(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_78(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10769, -14.5581, -1.28568, 3.47159 ) }
    soma_0 { pt3dadd( 0.97266, -13.1566, -1.15776, 5.7463 ) }
    soma_0 { pt3dadd( 0.837634, -11.7551, -1.02984, 7.24579 ) }
    soma_0 { pt3dadd( 0.702608, -10.3536, -0.901916, 8.48761 ) }
    soma_0 { pt3dadd( 0.567581, -8.95209, -0.773994, 10.1714 ) }
    soma_0 { pt3dadd( 0.432555, -7.55059, -0.646072, 11.9512 ) }
    soma_0 { pt3dadd( 0.297528, -6.14909, -0.518149, 13.6591 ) }
    soma_0 { pt3dadd( 0.162502, -4.74759, -0.390227, 14.521 ) }
    soma_0 { pt3dadd( 0.0274756, -3.34609, -0.262305, 15.3268 ) }
    soma_0 { pt3dadd( -0.107551, -1.94459, -0.134383, 15.6875 ) }
    soma_0 { pt3dadd( -0.242577, -0.543095, -0.00646127, 15.6148 ) }
    soma_0 { pt3dadd( -0.377604, 0.858404, 0.121461, 15.2713 ) }
    soma_0 { pt3dadd( -0.51263, 2.2599, 0.249383, 14.3032 ) }
    soma_0 { pt3dadd( -0.647656, 3.6614, 0.377305, 13.4674 ) }
    soma_0 { pt3dadd( -0.782683, 5.0629, 0.505227, 12.0636 ) }
    soma_0 { pt3dadd( -0.917709, 6.4644, 0.633149, 10.8584 ) }
    soma_0 { pt3dadd( -1.05274, 7.8659, 0.761071, 9.75206 ) }
    soma_0 { pt3dadd( -1.18776, 9.2674, 0.888993, 8.24243 ) }
    soma_0 { pt3dadd( -1.32279, 10.6689, 1.01692, 6.68054 ) }
    soma_0 { pt3dadd( -1.45781, 12.0704, 1.14484, 5.41959 ) }
    soma_0 { pt3dadd( -1.59284, 13.4719, 1.27276, 3.12647 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.72433, 12.6215, 0.328394, 5.16 ) }
    dend_51 { pt3dadd( -2.17433, 13.0007, 0.328394, 5.16 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.404331, -15.6378, -11.2916, 4.64 ) }
    dend_0 { pt3dadd( -0.404331, -15.6378, -11.2916, 4.64 ) }
    dend_0 { pt3dadd( -1.87871, -19.0525, -12.0807, 3.24 ) }
    dend_0 { pt3dadd( -2.69627, -20.946, -12.5182, 3.02 ) }
    dend_0 { pt3dadd( -3.7073, -23.2876, -13.0593, 2.87 ) }
    dend_0 { pt3dadd( -4.92637, -26.111, -13.7118, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.59284, 13.4719, 1.27276, 0.69465 ) }
    axon_0 { pt3dadd( -3.03134, 28.4028, 1.27276, 0.69465 ) }
    axon_0 { pt3dadd( -4.46985, 43.3336, 1.27276, 0.69465 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -2.17433, 13.0007, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -2.65917, 16.2159, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -2.83626, 17.3919, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -3.17767, 19.6591, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.42358, 21.2922, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.47126, 21.6088, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.62123, 22.6047, 0.328394, 2.43 ) }
    dend_53 { pt3dadd( -3.74211, 23.3909, 0.328394, 2.43 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 40/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.17433, 13.0007, 0.328394, 1.77 ) }
    dend_52 { pt3dadd( -3.46166, 14.1931, 1.58772, 1.77 ) }
    dend_52 { pt3dadd( -4.0941, 14.7652, 2.09461, 0.88 ) }
    dend_52 { pt3dadd( -6.81308, 17.1612, 3.95877, 0.74 ) }
    dend_52 { pt3dadd( -7.50317, 17.7909, 4.38499, 0.74 ) }
    dend_52 { pt3dadd( -8.55227, 18.7803, 4.89861, 0.96 ) }
    dend_52 { pt3dadd( -9.18228, 19.382, 5.12518, 0.66 ) }
    dend_52 { pt3dadd( -9.72404, 19.8911, 5.16348, 0.74 ) }
    dend_52 { pt3dadd( -10.1128, 20.2472, 5.05546, 0.81 ) }
    dend_52 { pt3dadd( -10.6063, 20.6832, 4.72611, 0.81 ) }
    dend_52 { pt3dadd( -11.5357, 21.4725, 3.99359, 0.81 ) }
    dend_52 { pt3dadd( -12.0521, 21.9164, 3.52135, 0.96 ) }
    dend_52 { pt3dadd( -12.6867, 22.5063, 2.84129, 0.96 ) }
    dend_52 { pt3dadd( -12.8427, 22.675, 2.6436, 1.33 ) }
    dend_52 { pt3dadd( -13.458, 23.476, 1.71417, 1.33 ) }
    dend_52 { pt3dadd( -13.7439, 24.0093, 0.914268, 0.52 ) }
    dend_52 { pt3dadd( -13.8823, 24.4004, 0.299352, 0.52 ) }
    dend_52 { pt3dadd( -13.9921, 24.8579, -0.420662, 0.52 ) }
    dend_52 { pt3dadd( -14.0741, 25.3403, -1.17105, 1.11 ) }
    dend_52 { pt3dadd( -14.145, 25.8268, -1.92758, 1.4 ) }
    dend_52 { pt3dadd( -14.5089, 28.3107, -5.75919, 0.52 ) }
    dend_52 { pt3dadd( -14.5545, 28.5383, -6.13468, 0.66 ) }
    dend_52 { pt3dadd( -14.6246, 28.7458, -6.49342, 0.81 ) }
    dend_52 { pt3dadd( -14.7061, 28.8961, -6.75583, 0.81 ) }
    dend_52 { pt3dadd( -15.1942, 29.4909, -7.77893, 0.81 ) }
    dend_52 { pt3dadd( -15.4821, 29.7418, -8.15693, 1.11 ) }
    dend_52 { pt3dadd( -16.2795, 30.2515, -8.67116, 1.11 ) }
    dend_52 { pt3dadd( -16.8625, 30.6155, -9.04062, 0.44 ) }
    dend_52 { pt3dadd( -17.1895, 30.8193, -9.24075, 0.44 ) }
    dend_52 { pt3dadd( -17.8506, 31.2522, -9.62386, 0.52 ) }
    dend_52 { pt3dadd( -18.1907, 31.5274, -9.89362, 0.37 ) }
    dend_52 { pt3dadd( -18.3513, 31.7189, -10.1078, 0.37 ) }
    dend_52 { pt3dadd( -18.5557, 32.0642, -10.4502, 0.37 ) }
    dend_52 { pt3dadd( -18.6211, 32.1727, -10.5528, 0.52 ) }
    dend_52 { pt3dadd( -18.7988, 32.4384, -10.7947, 0.81 ) }
    dend_52 { pt3dadd( -19.9932, 34.0434, -12.1407, 0.52 ) }
    dend_52 { pt3dadd( -20.1396, 34.2306, -12.2907, 0.52 ) }
    dend_52 { pt3dadd( -20.9817, 35.2433, -13.0571, 0.37 ) }
    dend_52 { pt3dadd( -21.5597, 35.8491, -13.4783, 0.29 ) }
    dend_52 { pt3dadd( -22.098, 36.37, -13.8331, 0.29 ) }
    dend_52 { pt3dadd( -22.5332, 36.7585, -14.0726, 0.29 ) }
    dend_52 { pt3dadd( -22.8635, 37.0413, -14.2014, 0.29 ) }
    dend_52 { pt3dadd( -23.0172, 37.1717, -14.2734, 0.29 ) }
    dend_52 { pt3dadd( -23.5668, 37.6201, -14.776, 0.29 ) }
    dend_52 { pt3dadd( -24.2042, 38.1349, -15.4977, 0.96 ) }
    dend_52 { pt3dadd( -24.2515, 38.1696, -15.5535, 1.11 ) }
    dend_52 { pt3dadd( -24.7112, 38.4694, -16.1193, 0.44 ) }
    dend_52 { pt3dadd( -25.2474, 38.7743, -16.7618, 0.44 ) }
    dend_52 { pt3dadd( -26.8319, 39.6122, -18.5871, 0.44 ) }
    dend_52 { pt3dadd( -27.214, 39.8075, -19.009, 0.96 ) }
    dend_52 { pt3dadd( -27.4175, 39.9008, -19.2379, 0.96 ) }
    dend_52 { pt3dadd( -27.9944, 40.1045, -19.9001, 0.44 ) }
    dend_52 { pt3dadd( -28.3322, 40.1891, -20.3596, 0.44 ) }
    dend_52 { pt3dadd( -28.6069, 40.2482, -20.8149, 0.44 ) }
    dend_52 { pt3dadd( -28.7452, 40.2669, -21.0946, 0.44 ) }
    dend_52 { pt3dadd( -29.6807, 40.325, -23.2721, 0.59 ) }
    dend_52 { pt3dadd( -29.9819, 40.3209, -24.0274, 0.59 ) }
    dend_52 { pt3dadd( -30.9122, 40.2733, -26.4597, 0.59 ) }
    dend_52 { pt3dadd( -31.4819, 40.2339, -28.0476, 0.59 ) }
    dend_52 { pt3dadd( -32.2702, 40.1485, -30.2496, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_52 { pt3dadd( -32.6154, 40.0963, -31.2246, 0.59 ) }
    dend_52 { pt3dadd( -32.992, 40.0333, -32.2251, 0.22 ) }
    dend_52 { pt3dadd( -33.1239, 40.0146, -32.5602, 0.22 ) }
    dend_52 { pt3dadd( -33.9928, 39.8927, -34.4137, 0.81 ) }
    dend_52 { pt3dadd( -34.2801, 39.8712, -34.9296, 1.55 ) }
    dend_52 { pt3dadd( -35.8746, 39.9149, -37.4015, 0.52 ) }
    dend_52 { pt3dadd( -36.1922, 39.9384, -37.8685, 0.52 ) }
    dend_52 { pt3dadd( -36.4234, 39.9561, -38.1857, 0.44 ) }
    dend_52 { pt3dadd( -36.9748, 39.9868, -38.864, 0.37 ) }
    dend_52 { pt3dadd( -37.5073, 40.0177, -39.4305, 0.37 ) }
    dend_52 { pt3dadd( -37.6029, 40.0219, -39.5442, 0.59 ) }
    dend_52 { pt3dadd( -38.2639, 39.9914, -40.354, 0.59 ) }
    dend_52 { pt3dadd( -38.5317, 39.9487, -40.7242, 0.59 ) }
    dend_52 { pt3dadd( -38.838, 39.8615, -41.1543, 0.59 ) }
    dend_52 { pt3dadd( -40.1226, 39.3694, -42.9606, 0.59 ) }
    dend_52 { pt3dadd( -40.8716, 39.0751, -44.0575, 0.96 ) }
    dend_52 { pt3dadd( -41.2445, 38.9247, -44.62, 0.59 ) }
    dend_52 { pt3dadd( -41.5079, 38.8028, -45.0786, 0.22 ) }
    dend_52 { pt3dadd( -41.937, 38.5872, -45.8724, 0.22 ) }
    dend_52 { pt3dadd( -42.2876, 38.4067, -46.6193, 0.29 ) }
    dend_52 { pt3dadd( -42.987, 38.0392, -48.387, 0.81 ) }
    dend_52 { pt3dadd( -43.0994, 37.9784, -48.6929, 1.4 ) }
    dend_52 { pt3dadd( -43.9568, 37.4703, -51.311, 0.59 ) }
    dend_52 { pt3dadd( -44.1096, 37.3607, -51.8675, 0.96 ) }
    dend_52 { pt3dadd( -45.1252, 36.5082, -55.9515, 1.33 ) }
    dend_52 { pt3dadd( -45.9902, 35.6478, -59.5402, 0.59 ) }
    dend_52 { pt3dadd( -46.118, 35.4976, -60.0581, 0.44 ) }
    dend_52 { pt3dadd( -46.2861, 35.2763, -60.7048, 0.44 ) }
    dend_52 { pt3dadd( -46.9359, 34.2039, -63.18, 0.44 ) }
    dend_52 { pt3dadd( -47.0953, 33.9053, -63.7735, 0.44 ) }
    dend_52 { pt3dadd( -47.2509, 33.5902, -64.3265, 0.44 ) }
    dend_52 { pt3dadd( -47.6868, 32.7938, -65.754, 0.44 ) }
    dend_52 { pt3dadd( -47.9616, 32.3452, -66.7511, 0.44 ) }
    dend_52 { pt3dadd( -48.6701, 31.268, -69.3726, 0.44 ) }
    dend_52 { pt3dadd( -48.9496, 30.8476, -70.4637, 0.88 ) }
    dend_52 { pt3dadd( -49.5707, 29.868, -73.5428, 0.59 ) }
    dend_52 { pt3dadd( -49.6148, 29.7978, -73.7899, 0.59 ) }
    dend_52 { pt3dadd( -50.2025, 28.8415, -77.5126, 0.22 ) }
    dend_52 { pt3dadd( -50.2734, 28.7219, -77.99, 0.52 ) }
    dend_52 { pt3dadd( -50.3187, 28.6423, -78.277, 0.52 ) }
    dend_52 { pt3dadd( -51.218, 26.9882, -83.6685, 0.52 ) }
    dend_52 { pt3dadd( -51.298, 26.8456, -84.0913, 0.88 ) }
    dend_52 { pt3dadd( -51.926, 25.8046, -87.1051, 0.37 ) }
    dend_52 { pt3dadd( -52.0192, 25.6591, -87.4914, 0.37 ) }
    dend_52 { pt3dadd( -52.421, 25.0409, -89.0456, 0.44 ) }
    dend_52 { pt3dadd( -53.309, 23.682, -92.0213, 0.52 ) }
    dend_52 { pt3dadd( -53.8089, 22.8985, -93.19, 0.59 ) }
    dend_52 { pt3dadd( -53.9922, 22.5944, -93.5822, 0.22 ) }
    dend_52 { pt3dadd( -54.209, 22.2043, -93.9652, 0.22 ) }
    dend_52 { pt3dadd( -54.4174, 21.7716, -94.3594, 0.22 ) }
    dend_52 { pt3dadd( -54.6172, 21.2839, -94.7675, 0.22 ) }
    dend_52 { pt3dadd( -54.9801, 20.3026, -95.2386, 0.22 ) }
    dend_52 { pt3dadd( -55.1247, 19.8994, -95.4003, 0.66 ) }
    dend_52 { pt3dadd( -55.2078, 19.6619, -95.4839, 0.66 ) }
    dend_52 { pt3dadd( -55.6726, 18.4177, -95.8577, 0.66 ) }
    dend_52 { pt3dadd( -56.0101, 17.5883, -96.0582, 0.29 ) }
    dend_52 { pt3dadd( -56.2979, 16.9237, -96.1929, 0.29 ) }
    dend_52 { pt3dadd( -56.7432, 15.9426, -96.3422, 0.29 ) }
    dend_52 { pt3dadd( -57.0623, 15.2484, -96.4334, 1.25 ) }
    dend_52 { pt3dadd( -57.7204, 13.8071, -96.6017, 0.37 ) }
    dend_52 { pt3dadd( -58.127, 12.9283, -96.6763, 0.37 ) }
    dend_52 { pt3dadd( -58.545, 11.9658, -96.8408, 0.37 ) }
    dend_52 { pt3dadd( -58.8739, 11.1552, -97.0694, 0.37 ) }
    dend_52 { pt3dadd( -59.1911, 10.293, -97.4078, 0.96 ) }
    dend_52 { pt3dadd( -59.5037, 9.42594, -97.8587, 0.52 ) }
    dend_52 { pt3dadd( -59.6077, 9.17202, -98.0305, 0.52 ) }
    dend_52 { pt3dadd( -60.3048, 7.76609, -99.3224, 0.52 ) }
    dend_52 { pt3dadd( -60.4279, 7.57832, -99.529, 0.52 ) }
    dend_52 { pt3dadd( -60.7756, 7.17075, -100.055, 0.52 ) }
    dend_52 { pt3dadd( -61.3759, 6.57501, -100.912, 0.52 ) }
    dend_52 { pt3dadd( -62.167, 5.89272, -102.009, 0.52 ) }
    dend_52 { pt3dadd( -63.193, 5.07049, -103.349, 0.52 ) }
    dend_52 { pt3dadd( -63.7865, 4.62655, -104.122, 0.29 ) }
    dend_52 { pt3dadd( -64.4189, 4.15371, -104.981, 0.44 ) }
    dend_52 { pt3dadd( -64.8738, 3.80084, -105.649, 0.44 ) }
    dend_52 { pt3dadd( -65.8156, 3.02054, -107.083, 0.07 ) }
    dend_52 { pt3dadd( -66.1098, 2.75883, -107.555, 0.96 ) }
    dend_52 { pt3dadd( -67.1546, 1.79188, -109.194, 0.29 ) }
    dend_52 { pt3dadd( -67.5269, 1.42891, -109.809, 0.29 ) }
    dend_52 { pt3dadd( -68.1205, 0.828258, -110.802, 0.74 ) }
    dend_52 { pt3dadd( -68.4552, 0.459776, -111.33, 0.74 ) }
    dend_52 { pt3dadd( -69.2305, -0.486197, -112.5, 0.07 ) }
    dend_52 { pt3dadd( -69.4861, -0.815707, -112.994, 0.07 ) }
    dend_52 { pt3dadd( -69.5477, -0.897055, -113.12, 0.74 ) }
    dend_52 { pt3dadd( -70.0672, -1.53965, -114.282, 0.22 ) }
    dend_52 { pt3dadd( -70.6112, -2.12121, -115.475, 0.29 ) }
    dend_52 { pt3dadd( -70.9647, -2.45028, -116.258, 1.11 ) }
    dend_52 { pt3dadd( -72.8344, -3.91507, -120.349, 0.15 ) }
    dend_52 { pt3dadd( -73.0858, -4.08819, -120.917, 0.15 ) }
    dend_52 { pt3dadd( -73.7001, -4.47927, -122.412, 0.15 ) }
    dend_52 { pt3dadd( -74.162, -4.73476, -123.559, 0.15 ) }
    dend_52 { pt3dadd( -74.5959, -4.94091, -124.671, 0.74 ) }
    dend_52 { pt3dadd( -75.3628, -5.28234, -126.62, 0.44 ) }
    dend_52 { pt3dadd( -75.9975, -5.54744, -128.137, 0.44 ) }
    dend_52 { pt3dadd( -77.1849, -6.08233, -131.245, 0.44 ) }
    dend_52 { pt3dadd( -77.3021, -6.15244, -131.59, 0.74 ) }
    // Section: dend_36, id: dend_36, parent: dend_0 (entry count 96/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -4.92637, -26.111, -13.7118, 1.47 ) }
    dend_36 { pt3dadd( -5.24596, -27.9969, -14.5952, 1.47 ) }
    dend_36 { pt3dadd( -5.24356, -29.4675, -15.3527, 1.47 ) }
    dend_36 { pt3dadd( -5.02163, -30.8809, -16.2713, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -4.67883, -32.3426, -17.2412, 1.4 ) }
    dend_36 { pt3dadd( -4.39859, -33.1458, -17.9182, 1.4 ) }
    dend_36 { pt3dadd( -3.97709, -34.1797, -18.8659, 1.18 ) }
    dend_36 { pt3dadd( -3.40529, -35.1646, -19.8829, 1.18 ) }
    dend_36 { pt3dadd( -2.49992, -36.3673, -21.3103, 1.18 ) }
    dend_36 { pt3dadd( -1.97203, -36.9356, -22.074, 1.18 ) }
    dend_36 { pt3dadd( -0.00370187, -38.7169, -24.8819, 1.62 ) }
    dend_36 { pt3dadd( 0.351189, -39.0161, -25.4378, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 8/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.92637, -26.111, -13.7118, 2.06 ) }
    dend_1 { pt3dadd( -3.54242, -28.69, -14.1776, 2.06 ) }
    dend_1 { pt3dadd( -2.73389, -30.1967, -14.4497, 1.99 ) }
    dend_1 { pt3dadd( -2.21858, -31.157, -14.6232, 1.99 ) }
    dend_1 { pt3dadd( -1.29998, -32.8688, -14.9324, 1.99 ) }
    dend_1 { pt3dadd( -0.341163, -34.6555, -15.2551, 2.65 ) }
    dend_1 { pt3dadd( 0.165127, -35.599, -15.4256, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 15/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.46985, 43.3336, 1.27276, 0.332332 ) }
    axon_1 { pt3dadd( -5.90835, 58.2645, 1.27276, 0.332332 ) }
    axon_1 { pt3dadd( -7.34685, 73.1954, 1.27276, 0.332332 ) }
    // Section: dend_66, id: dend_66, parent: dend_53 (entry count 18/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -3.74211, 23.3909, 0.328394, 1.92 ) }
    dend_66 { pt3dadd( -4.15982, 24.3497, -0.139089, 1.92 ) }
    dend_66 { pt3dadd( -5.02404, 26.2869, -0.987671, 1.77 ) }
    dend_66 { pt3dadd( -5.93703, 28.1489, -1.67825, 1.77 ) }
    dend_66 { pt3dadd( -6.3924, 29.0732, -1.92505, 1.62 ) }
    dend_66 { pt3dadd( -6.59744, 29.4867, -2.01258, 1.62 ) }
    dend_66 { pt3dadd( -7.16458, 30.6306, -2.2547, 1.62 ) }
    dend_66 { pt3dadd( -7.72935, 31.788, -2.43505, 1.62 ) }
    dend_66 { pt3dadd( -8.61908, 33.5224, -2.49089, 1.84 ) }
    dend_66 { pt3dadd( -9.42064, 34.9637, -2.46959, 1.84 ) }
    dend_66 { pt3dadd( -9.58708, 35.2547, -2.44363, 1.84 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 29/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -3.74211, 23.3909, 0.328394, 1.92 ) }
    dend_63 { pt3dadd( -3.91042, 24.1407, -0.0085088, 1.92 ) }
    dend_63 { pt3dadd( -4.16732, 25.2252, -0.54835, 0.52 ) }
    dend_63 { pt3dadd( -4.44321, 26.369, -1.18166, 0.52 ) }
    dend_63 { pt3dadd( -4.63254, 27.3298, -1.72947, 0.52 ) }
    dend_63 { pt3dadd( -4.76032, 28.2488, -2.24058, 0.52 ) }
    dend_63 { pt3dadd( -4.83885, 29.2377, -2.7572, 0.52 ) }
    dend_63 { pt3dadd( -4.81529, 30.185, -3.23758, 0.52 ) }
    dend_63 { pt3dadd( -4.77303, 30.6528, -3.46108, 0.52 ) }
    dend_63 { pt3dadd( -4.6393, 31.3732, -3.74, 0.59 ) }
    dend_63 { pt3dadd( -4.47975, 32.1522, -3.95445, 0.59 ) }
    dend_63 { pt3dadd( -4.32504, 32.9669, -4.16987, 0.59 ) }
    dend_63 { pt3dadd( -4.23631, 33.7661, -4.43673, 0.59 ) }
    dend_63 { pt3dadd( -4.28529, 34.3091, -4.67806, 0.59 ) }
    dend_63 { pt3dadd( -4.52304, 35.0228, -5.07324, 0.66 ) }
    dend_63 { pt3dadd( -4.92512, 35.7902, -5.56512, 0.66 ) }
    dend_63 { pt3dadd( -5.37301, 36.4886, -6.05995, 0.88 ) }
    dend_63 { pt3dadd( -6.0105, 37.3986, -6.75165, 0.81 ) }
    dend_63 { pt3dadd( -6.52388, 38.1049, -7.31239, 0.66 ) }
    dend_63 { pt3dadd( -6.92552, 38.742, -7.91511, 0.66 ) }
    dend_63 { pt3dadd( -7.0917, 39.1523, -8.35844, 0.66 ) }
    dend_63 { pt3dadd( -7.04315, 39.4861, -8.77702, 0.66 ) }
    dend_63 { pt3dadd( -6.76897, 39.8145, -9.21137, 0.88 ) }
    dend_63 { pt3dadd( -6.54486, 39.9836, -9.43555, 0.88 ) }
    dend_63 { pt3dadd( -5.10368, 40.9413, -10.6609, 0.59 ) }
    dend_63 { pt3dadd( -4.71588, 41.2094, -10.988, 0.59 ) }
    dend_63 { pt3dadd( -4.13567, 41.6663, -11.4916, 0.59 ) }
    dend_63 { pt3dadd( -3.59782, 42.1756, -11.9904, 0.59 ) }
    dend_63 { pt3dadd( -3.09036, 42.7973, -12.5536, 0.59 ) }
    dend_63 { pt3dadd( -2.90886, 43.0735, -12.7702, 0.59 ) }
    dend_63 { pt3dadd( -2.48881, 43.8414, -13.2558, 0.81 ) }
    dend_63 { pt3dadd( -2.23838, 44.3164, -13.5659, 0.81 ) }
    dend_63 { pt3dadd( -1.93721, 44.8694, -13.9506, 0.74 ) }
    dend_63 { pt3dadd( -1.25875, 45.9238, -14.8684, 0.88 ) }
    dend_63 { pt3dadd( -0.932789, 46.0985, -15.2305, 0.88 ) }
    dend_63 { pt3dadd( -0.586626, 46.1432, -15.558, 0.59 ) }
    dend_63 { pt3dadd( -0.192093, 46.1494, -15.9154, 0.59 ) }
    dend_63 { pt3dadd( 0.434413, 46.1817, -16.5165, 0.59 ) }
    dend_63 { pt3dadd( 1.10002, 46.3063, -17.2804, 0.59 ) }
    dend_63 { pt3dadd( 2.72855, 46.7539, -19.2158, 0.59 ) }
    dend_63 { pt3dadd( 3.06805, 46.8593, -19.6274, 0.59 ) }
    dend_63 { pt3dadd( 3.81794, 47.122, -20.5766, 0.44 ) }
    dend_63 { pt3dadd( 4.46289, 47.3737, -21.3986, 0.44 ) }
    dend_63 { pt3dadd( 5.62032, 47.9145, -22.9578, 0.52 ) }
    dend_63 { pt3dadd( 6.14311, 48.1892, -23.6805, 0.52 ) }
    dend_63 { pt3dadd( 6.6327, 48.4308, -24.386, 0.52 ) }
    dend_63 { pt3dadd( 7.33503, 48.6947, -25.3318, 0.74 ) }
    dend_63 { pt3dadd( 7.97631, 48.874, -26.0931, 1.33 ) }
    dend_63 { pt3dadd( 9.21156, 49.195, -27.4659, 0.88 ) }
    dend_63 { pt3dadd( 9.49202, 49.2868, -27.7795, 0.88 ) }
    dend_63 { pt3dadd( 10.0502, 49.5532, -28.4788, 0.37 ) }
    dend_63 { pt3dadd( 10.7118, 49.971, -29.3326, 0.37 ) }
    dend_63 { pt3dadd( 11.1557, 50.2778, -29.8976, 0.37 ) }
    dend_63 { pt3dadd( 11.7814, 50.7294, -30.685, 0.66 ) }
    dend_63 { pt3dadd( 12.3648, 51.1352, -31.3762, 0.66 ) }
    dend_63 { pt3dadd( 13.057, 51.6283, -32.2309, 0.22 ) }
    dend_63 { pt3dadd( 13.7557, 52.1699, -33.125, 0.37 ) }
    dend_63 { pt3dadd( 14.309, 52.666, -34.0048, 0.52 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -3.74211, 23.3909, 0.328394, 0.52 ) }
    dend_54 { pt3dadd( -1.66104, 25.5399, 2.12172, 0.52 ) }
    dend_54 { pt3dadd( -0.721437, 26.5721, 2.81333, 1.62 ) }
    dend_54 { pt3dadd( -0.235446, 27.1233, 3.13256, 1.55 ) }
    dend_54 { pt3dadd( 0.357832, 27.8093, 3.48114, 1.18 ) }
    dend_54 { pt3dadd( 0.92544, 28.4725, 3.79228, 1.18 ) }
    dend_54 { pt3dadd( 0.962897, 28.5164, 3.81134, 1.18 ) }
    dend_54 { pt3dadd( 1.41699, 29.0214, 4.03307, 1.18 ) }
    dend_54 { pt3dadd( 2.03206, 29.7712, 4.57122, 1.33 ) }
    dend_54 { pt3dadd( 2.36412, 30.1682, 4.9185, 1.69 ) }
    dend_54 { pt3dadd( 2.42613, 30.2391, 4.99514, 1.69 ) }
    dend_54 { pt3dadd( 2.64928, 30.4819, 5.30996, 1.69 ) }
    dend_54 { pt3dadd( 4.30394, 32.2159, 7.84867, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( 4.49889, 32.4046, 8.19982, 2.21 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 1/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.351189, -39.0161, -25.4378, 1.03 ) }
    dend_44 { pt3dadd( -0.277814, -39.8762, -26.096, 1.03 ) }
    dend_44 { pt3dadd( -1.68671, -41.677, -27.2578, 0.66 ) }
    dend_44 { pt3dadd( -2.55466, -42.7466, -27.9521, 0.66 ) }
    dend_44 { pt3dadd( -3.10984, -43.3828, -28.4319, 0.96 ) }
    dend_44 { pt3dadd( -3.72467, -44.0162, -28.9895, 0.96 ) }
    dend_44 { pt3dadd( -4.42273, -44.6658, -29.6042, 0.96 ) }
    dend_44 { pt3dadd( -5.15235, -45.2773, -30.2505, 1.11 ) }
    dend_44 { pt3dadd( -6.25979, -46.1824, -31.1625, 0.88 ) }
    dend_44 { pt3dadd( -7.28387, -47.105, -32.1411, 1.18 ) }
    dend_44 { pt3dadd( -8.08335, -47.8654, -32.9365, 0.66 ) }
    dend_44 { pt3dadd( -8.58672, -48.3627, -33.4524, 0.66 ) }
    dend_44 { pt3dadd( -9.45531, -49.2475, -34.347, 0.66 ) }
    dend_44 { pt3dadd( -10.022, -49.8338, -34.9111, 0.81 ) }
    dend_44 { pt3dadd( -10.7181, -50.5417, -35.4725, 0.81 ) }
    dend_44 { pt3dadd( -11.1648, -51.0098, -35.7867, 1.03 ) }
    dend_44 { pt3dadd( -11.6926, -51.5623, -36.1387, 1.03 ) }
    dend_44 { pt3dadd( -12.3474, -52.2078, -36.5502, 0.96 ) }
    dend_44 { pt3dadd( -13.0119, -52.7944, -36.9176, 1.18 ) }
    dend_44 { pt3dadd( -13.877, -53.5041, -37.3404, 1.18 ) }
    dend_44 { pt3dadd( -14.9752, -54.3629, -37.8403, 1.33 ) }
    dend_44 { pt3dadd( -15.9312, -55.0823, -38.2565, 1.33 ) }
    dend_44 { pt3dadd( -17.0456, -55.9014, -38.7124, 1.25 ) }
    dend_44 { pt3dadd( -17.9291, -56.5143, -39.053, 1.25 ) }
    dend_44 { pt3dadd( -19.314, -57.3932, -39.5687, 1.25 ) }
    dend_44 { pt3dadd( -20.4853, -58.0283, -39.9768, 1.25 ) }
    dend_44 { pt3dadd( -21.209, -58.3634, -40.2192, 0.88 ) }
    dend_44 { pt3dadd( -21.7702, -58.5963, -40.4047, 0.88 ) }
    dend_44 { pt3dadd( -22.5872, -58.9124, -40.6735, 0.66 ) }
    dend_44 { pt3dadd( -23.1794, -59.1532, -40.878, 0.66 ) }
    dend_44 { pt3dadd( -24.0389, -59.5768, -41.2375, 0.88 ) }
    dend_44 { pt3dadd( -24.7184, -59.9899, -41.5218, 0.88 ) }
    dend_44 { pt3dadd( -25.3885, -60.4532, -41.7982, 0.88 ) }
    dend_44 { pt3dadd( -26.0746, -60.9613, -42.063, 1.03 ) }
    dend_44 { pt3dadd( -26.5819, -61.3509, -42.2374, 1.03 ) }
    dend_44 { pt3dadd( -27.6943, -62.278, -42.6336, 0.96 ) }
    dend_44 { pt3dadd( -28.7205, -63.1981, -42.9888, 0.96 ) }
    dend_44 { pt3dadd( -29.5198, -63.9541, -43.3004, 1.03 ) }
    dend_44 { pt3dadd( -29.849, -64.2828, -43.4518, 1.25 ) }
    dend_44 { pt3dadd( -30.1446, -64.5833, -43.6283, 1.25 ) }
    dend_44 { pt3dadd( -30.9972, -65.4531, -44.1449, 0.74 ) }
    dend_44 { pt3dadd( -31.5261, -66.0291, -44.4988, 0.74 ) }
    dend_44 { pt3dadd( -32.0606, -66.6954, -44.9756, 1.18 ) }
    dend_44 { pt3dadd( -32.6793, -67.5357, -45.6519, 1.18 ) }
    dend_44 { pt3dadd( -33.5822, -68.7715, -46.7392, 1.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.351189, -39.0161, -25.4378, 0.96 ) }
    dend_37 { pt3dadd( 1.25936, -40.5998, -25.7405, 0.96 ) }
    dend_37 { pt3dadd( 1.86636, -41.7215, -25.914, 0.59 ) }
    dend_37 { pt3dadd( 2.58206, -43.1179, -26.0949, 0.59 ) }
    dend_37 { pt3dadd( 3.2404, -44.5994, -26.2575, 0.81 ) }
    dend_37 { pt3dadd( 3.65315, -45.6648, -26.414, 0.88 ) }
    dend_37 { pt3dadd( 3.88881, -46.3531, -26.5761, 0.88 ) }
    dend_37 { pt3dadd( 4.01221, -46.9252, -26.6972, 0.37 ) }
    dend_37 { pt3dadd( 4.10819, -47.4816, -26.8216, 0.37 ) }
    dend_37 { pt3dadd( 4.25918, -48.3998, -27.1066, 0.37 ) }
    dend_37 { pt3dadd( 4.48829, -49.7282, -27.5726, 0.96 ) }
    dend_37 { pt3dadd( 4.75475, -51.2454, -28.1896, 0.96 ) }
    dend_37 { pt3dadd( 5.11338, -53.2129, -29.0315, 0.88 ) }
    dend_37 { pt3dadd( 5.28991, -54.1381, -29.4221, 0.88 ) }
    dend_37 { pt3dadd( 5.81507, -56.4696, -30.3503, 1.18 ) }
    dend_37 { pt3dadd( 5.94122, -56.9177, -30.5065, 0.29 ) }
    dend_37 { pt3dadd( 6.23033, -57.894, -30.7643, 0.37 ) }
    dend_37 { pt3dadd( 6.39924, -58.4704, -30.8894, 0.37 ) }
    dend_37 { pt3dadd( 6.61846, -59.3557, -31.1345, 0.37 ) }
    dend_37 { pt3dadd( 6.69267, -59.7881, -31.2394, 0.37 ) }
    dend_37 { pt3dadd( 6.78313, -60.6489, -31.4835, 0.37 ) }
    dend_37 { pt3dadd( 6.81023, -61.2037, -31.7051, 0.37 ) }
    dend_37 { pt3dadd( 6.81697, -61.8992, -32.0258, 0.52 ) }
    dend_37 { pt3dadd( 6.79917, -63.1052, -32.6901, 0.81 ) }
    dend_37 { pt3dadd( 6.72137, -64.3224, -33.4105, 0.96 ) }
    dend_37 { pt3dadd( 6.59179, -66.0214, -34.4115, 0.96 ) }
    dend_37 { pt3dadd( 6.53606, -66.9074, -34.9318, 0.59 ) }
    dend_37 { pt3dadd( 6.52992, -68.0421, -35.5402, 0.59 ) }
    dend_37 { pt3dadd( 6.66715, -69.5889, -36.2289, 0.88 ) }
    dend_37 { pt3dadd( 6.85231, -70.5721, -36.5529, 0.88 ) }
    dend_37 { pt3dadd( 7.13395, -71.6558, -36.8043, 0.59 ) }
    dend_37 { pt3dadd( 7.32362, -72.3082, -36.9065, 0.59 ) }
    dend_37 { pt3dadd( 7.8646, -74.0036, -37.2538, 0.59 ) }
    dend_37 { pt3dadd( 8.45074, -75.6531, -37.6264, 0.59 ) }
    dend_37 { pt3dadd( 8.79503, -76.5368, -37.8936, 0.59 ) }
    dend_37 { pt3dadd( 9.20312, -77.5817, -38.3453, 1.03 ) }
    dend_37 { pt3dadd( 9.41398, -78.1655, -38.6903, 1.03 ) }
    dend_37 { pt3dadd( 10.0749, -80.0622, -39.9904, 0.96 ) }
    dend_37 { pt3dadd( 10.4359, -81.0945, -40.8303, 0.96 ) }
    dend_37 { pt3dadd( 11.1283, -83.074, -42.5749, 0.96 ) }
    dend_37 { pt3dadd( 11.6443, -84.4941, -43.8529, 1.18 ) }
    dend_37 { pt3dadd( 12.4108, -86.4418, -45.6037, 1.18 ) }
    dend_37 { pt3dadd( 12.7188, -87.1522, -46.2058, 1.18 ) }
    dend_37 { pt3dadd( 13.4798, -88.7714, -47.5028, 0.52 ) }
    dend_37 { pt3dadd( 13.7511, -89.3223, -47.9184, 0.52 ) }
    dend_37 { pt3dadd( 14.106, -89.9526, -48.3385, 0.81 ) }
    dend_37 { pt3dadd( 15.0474, -91.3694, -49.2901, 0.81 ) }
    dend_37 { pt3dadd( 15.9969, -92.7439, -50.2366, 0.81 ) }
    dend_37 { pt3dadd( 17.0249, -94.2599, -51.3251, 1.11 ) }
    dend_37 { pt3dadd( 17.5665, -95.0802, -51.9447, 1.11 ) }
    dend_37 { pt3dadd( 18.5286, -96.6436, -53.2063, 1.11 ) }
    dend_37 { pt3dadd( 19.3803, -98.187, -54.4869, 0.81 ) }
    dend_37 { pt3dadd( 19.9868, -99.4921, -55.6059, 0.81 ) }
    dend_37 { pt3dadd( 20.156, -99.9532, -56.0001, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( 20.5187, -101.14, -56.9778, 0.22 ) }
    dend_37 { pt3dadd( 20.6641, -101.755, -57.4947, 0.22 ) }
    dend_37 { pt3dadd( 20.7305, -102.464, -58.0353, 0.22 ) }
    dend_37 { pt3dadd( 20.7473, -103.977, -58.9799, 0.88 ) }
    dend_37 { pt3dadd( 20.783, -104.942, -59.5435, 2.5 ) }
    // Section: dend_35, id: dend_35, parent: dend_1 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.165127, -35.599, -15.4256, 1.18 ) }
    dend_35 { pt3dadd( -0.828725, -37.1549, -15.0602, 1.18 ) }
    dend_35 { pt3dadd( -1.73365, -38.4886, -14.7277, 1.18 ) }
    dend_35 { pt3dadd( -2.64993, -39.7237, -14.4362, 1.18 ) }
    dend_35 { pt3dadd( -3.3636, -40.6024, -14.2402, 1.03 ) }
    dend_35 { pt3dadd( -4.38975, -41.7694, -13.8491, 0.81 ) }
    dend_35 { pt3dadd( -5.16799, -42.5911, -13.5134, 0.81 ) }
    dend_35 { pt3dadd( -5.90055, -43.2342, -13.1074, 1.25 ) }
    dend_35 { pt3dadd( -7.33958, -44.191, -12.1906, 1.11 ) }
    dend_35 { pt3dadd( -8.24189, -44.6361, -11.5552, 1.4 ) }
    dend_35 { pt3dadd( -10.3109, -45.2925, -10.1028, 0.96 ) }
    dend_35 { pt3dadd( -10.7403, -45.3757, -9.83067, 0.96 ) }
    dend_35 { pt3dadd( -11.6617, -45.4867, -9.29236, 0.81 ) }
    dend_35 { pt3dadd( -12.7815, -45.5955, -8.64199, 0.88 ) }
    dend_35 { pt3dadd( -13.2483, -45.6502, -8.39319, 1.18 ) }
    dend_35 { pt3dadd( -14.2749, -45.843, -7.90869, 0.96 ) }
    dend_35 { pt3dadd( -16.4636, -46.4625, -6.90467, 0.66 ) }
    dend_35 { pt3dadd( -17.2694, -46.7607, -6.40215, 0.66 ) }
    dend_35 { pt3dadd( -18.684, -47.4236, -5.37527, 0.96 ) }
    dend_35 { pt3dadd( -19.5163, -47.8761, -4.70267, 0.96 ) }
    dend_35 { pt3dadd( -20.4076, -48.4043, -3.92234, 1.11 ) }
    dend_35 { pt3dadd( -21.7828, -49.294, -2.59393, 1.11 ) }
    dend_35 { pt3dadd( -23.7043, -50.5713, -0.772867, 1.11 ) }
    dend_35 { pt3dadd( -24.3081, -50.9824, -0.276736, 0.88 ) }
    dend_35 { pt3dadd( -25.1626, -51.583, 0.294233, 0.81 ) }
    dend_35 { pt3dadd( -26.0906, -52.2642, 0.803798, 0.81 ) }
    dend_35 { pt3dadd( -27.7694, -53.536, 1.44207, 0.81 ) }
    dend_35 { pt3dadd( -29.2934, -54.6397, 1.74699, 0.96 ) }
    dend_35 { pt3dadd( -30.3925, -55.39, 1.81426, 0.96 ) }
    dend_35 { pt3dadd( -31.0165, -55.7766, 1.82642, 0.96 ) }
    dend_35 { pt3dadd( -31.7805, -56.2176, 1.80448, 0.74 ) }
    dend_35 { pt3dadd( -32.3943, -56.5382, 1.72581, 0.74 ) }
    dend_35 { pt3dadd( -33.3866, -56.9893, 1.46517, 0.74 ) }
    dend_35 { pt3dadd( -34.3485, -57.3681, 1.18068, 0.59 ) }
    dend_35 { pt3dadd( -35.2721, -57.6699, 0.879071, 0.59 ) }
    dend_35 { pt3dadd( -36.4584, -58.0057, 0.4843, 0.59 ) }
    dend_35 { pt3dadd( -37.6976, -58.3291, 0.0770692, 0.59 ) }
    dend_35 { pt3dadd( -38.7194, -58.5886, -0.236831, 0.59 ) }
    dend_35 { pt3dadd( -39.4941, -58.8058, -0.526239, 0.74 ) }
    dend_35 { pt3dadd( -40.3737, -59.0608, -0.880149, 0.74 ) }
    dend_35 { pt3dadd( -40.9689, -59.2552, -1.12581, 0.74 ) }
    dend_35 { pt3dadd( -41.7447, -59.5467, -1.44559, 0.74 ) }
    dend_35 { pt3dadd( -42.8089, -60.002, -1.87343, 0.74 ) }
    dend_35 { pt3dadd( -44.8228, -60.945, -2.69346, 0.74 ) }
    dend_35 { pt3dadd( -45.5264, -61.2793, -2.99568, 0.74 ) }
    dend_35 { pt3dadd( -46.572, -61.7366, -3.45032, 0.74 ) }
    dend_35 { pt3dadd( -47.3508, -62.0562, -3.76614, 0.74 ) }
    dend_35 { pt3dadd( -48.5189, -62.56, -4.18393, 0.59 ) }
    dend_35 { pt3dadd( -49.3701, -62.9167, -4.43251, 0.59 ) }
    dend_35 { pt3dadd( -49.9187, -63.1312, -4.56167, 0.59 ) }
    dend_35 { pt3dadd( -51.2618, -63.6218, -4.90577, 0.59 ) }
    dend_35 { pt3dadd( -52.4637, -64.038, -5.21083, 0.52 ) }
    dend_35 { pt3dadd( -53.6642, -64.4583, -5.50614, 0.52 ) }
    dend_35 { pt3dadd( -54.7344, -64.8784, -5.74732, 0.81 ) }
    dend_35 { pt3dadd( -55.8895, -65.3712, -5.9902, 1.18 ) }
    dend_35 { pt3dadd( -57.002, -65.8546, -6.14438, 1.4 ) }
    dend_35 { pt3dadd( -58.0895, -66.3115, -6.22357, 0.96 ) }
    dend_35 { pt3dadd( -58.9674, -66.6451, -6.24576, 0.59 ) }
    dend_35 { pt3dadd( -59.8367, -66.9385, -6.22313, 0.29 ) }
    dend_35 { pt3dadd( -61.5174, -67.4947, -6.07996, 0.29 ) }
    dend_35 { pt3dadd( -63.1973, -68.0086, -5.85463, 0.81 ) }
    dend_35 { pt3dadd( -63.8113, -68.1866, -5.76648, 1.03 ) }
    dend_35 { pt3dadd( -64.0897, -68.263, -5.72841, 1.03 ) }
    dend_35 { pt3dadd( -64.8884, -68.4481, -5.63076, 0.66 ) }
    dend_35 { pt3dadd( -65.5941, -68.5785, -5.59503, 0.52 ) }
    dend_35 { pt3dadd( -66.521, -68.7089, -5.62682, 0.52 ) }
    dend_35 { pt3dadd( -67.4055, -68.7987, -5.72683, 0.52 ) }
    dend_35 { pt3dadd( -68.2643, -68.8613, -5.85655, 0.52 ) }
    dend_35 { pt3dadd( -69.3501, -68.9395, -6.03895, 0.52 ) }
    dend_35 { pt3dadd( -70.4581, -69.0452, -6.24154, 0.88 ) }
    dend_35 { pt3dadd( -71.3668, -69.122, -6.41216, 1.03 ) }
    dend_35 { pt3dadd( -72.0207, -69.1895, -6.52698, 1.03 ) }
    dend_35 { pt3dadd( -73.8603, -69.4439, -6.87865, 0.44 ) }
    dend_35 { pt3dadd( -74.8743, -69.6371, -7.10325, 0.44 ) }
    dend_35 { pt3dadd( -75.3736, -69.7572, -7.22876, 0.44 ) }
    dend_35 { pt3dadd( -76.2676, -69.9916, -7.45781, 0.44 ) }
    dend_35 { pt3dadd( -77.9967, -70.4938, -7.92991, 0.44 ) }
    dend_35 { pt3dadd( -79.5536, -70.9687, -8.36588, 0.44 ) }
    dend_35 { pt3dadd( -81.0222, -71.4226, -8.75953, 0.44 ) }
    dend_35 { pt3dadd( -82.0263, -71.7406, -9.01741, 1.11 ) }
    dend_35 { pt3dadd( -82.9987, -72.0545, -9.24174, 1.11 ) }
    dend_35 { pt3dadd( -83.483, -72.2259, -9.33933, 0.81 ) }
    dend_35 { pt3dadd( -83.9621, -72.4033, -9.42269, 0.37 ) }
    dend_35 { pt3dadd( -85.4056, -73.014, -9.58542, 0.37 ) }
    dend_35 { pt3dadd( -86.4532, -73.5347, -9.66794, 0.37 ) }
    dend_35 { pt3dadd( -87.2461, -73.9989, -9.72884, 0.88 ) }
    dend_35 { pt3dadd( -87.6847, -74.2915, -9.76729, 0.88 ) }
    dend_35 { pt3dadd( -88.6577, -74.9623, -9.90218, 0.37 ) }
    dend_35 { pt3dadd( -89.5995, -75.6357, -10.0692, 0.37 ) }
    dend_35 { pt3dadd( -90.7483, -76.4809, -10.3379, 0.37 ) }
    dend_35 { pt3dadd( -91.1466, -76.763, -10.46, 0.81 ) }
    dend_35 { pt3dadd( -91.7677, -77.1961, -10.6928, 0.88 ) }
    dend_35 { pt3dadd( -93.3398, -78.2377, -11.3345, 0.37 ) }
    dend_35 { pt3dadd( -93.8383, -78.5417, -11.5472, 0.59 ) }
    dend_35 { pt3dadd( -94.7589, -79.0908, -11.9505, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( -95.6385, -79.6161, -12.2928, 1.18 ) }
    dend_35 { pt3dadd( -96.3586, -80.0678, -12.5086, 0.66 ) }
    dend_35 { pt3dadd( -97.0092, -80.5091, -12.6564, 0.66 ) }
    dend_35 { pt3dadd( -97.7783, -81.0758, -12.8055, 0.44 ) }
    dend_35 { pt3dadd( -99.219, -82.1646, -13.0612, 0.44 ) }
    dend_35 { pt3dadd( -101.029, -83.5556, -13.3303, 0.44 ) }
    dend_35 { pt3dadd( -103.031, -85.1199, -13.6039, 0.59 ) }
    dend_35 { pt3dadd( -104.051, -85.9133, -13.7469, 0.59 ) }
    dend_35 { pt3dadd( -105.338, -86.8937, -13.9399, 1.03 ) }
    dend_35 { pt3dadd( -106.012, -87.3892, -14.0454, 1.55 ) }
    dend_35 { pt3dadd( -106.75, -87.8971, -14.1696, 1.92 ) }
    dend_35 { pt3dadd( -107.647, -88.4944, -14.3417, 0.37 ) }
    dend_35 { pt3dadd( -108.241, -88.8978, -14.4518, 0.37 ) }
    dend_35 { pt3dadd( -109.561, -89.8358, -14.6575, 0.37 ) }
    dend_35 { pt3dadd( -110.058, -90.2146, -14.7127, 0.59 ) }
    dend_35 { pt3dadd( -110.739, -90.7936, -14.7859, 0.59 ) }
    dend_35 { pt3dadd( -111.352, -91.3605, -14.8652, 0.29 ) }
    dend_35 { pt3dadd( -113.06, -93.0172, -15.0937, 0.29 ) }
    dend_35 { pt3dadd( -113.488, -93.4472, -15.1566, 0.29 ) }
    dend_35 { pt3dadd( -114.069, -94.0186, -15.2577, 1.33 ) }
    dend_35 { pt3dadd( -114.713, -94.6209, -15.3747, 1.77 ) }
    dend_35 { pt3dadd( -115.856, -95.6133, -15.5783, 0.37 ) }
    dend_35 { pt3dadd( -117.085, -96.6024, -15.7833, 0.37 ) }
    dend_35 { pt3dadd( -118.03, -97.2871, -15.9441, 0.44 ) }
    dend_35 { pt3dadd( -119.706, -98.4746, -16.2124, 0.44 ) }
    dend_35 { pt3dadd( -119.948, -98.6483, -16.2481, 1.03 ) }
    dend_35 { pt3dadd( -120.512, -99.0437, -16.3157, 1.77 ) }
    dend_35 { pt3dadd( -121.007, -99.3946, -16.3592, 1.92 ) }
    dend_35 { pt3dadd( -121.819, -100.007, -16.4327, 0.44 ) }
    dend_35 { pt3dadd( -122.585, -100.64, -16.4133, 0.37 ) }
    dend_35 { pt3dadd( -122.95, -100.968, -16.3567, 0.37 ) }
    dend_35 { pt3dadd( -123.749, -101.708, -16.1875, 0.37 ) }
    dend_35 { pt3dadd( -124.64, -102.577, -15.9545, 1.92 ) }
    dend_35 { pt3dadd( -125.058, -103.0, -15.8257, 2.14 ) }
    dend_35 { pt3dadd( -126.336, -104.394, -15.3663, 0.29 ) }
    dend_35 { pt3dadd( -126.94, -105.132, -15.0163, 0.29 ) }
    dend_35 { pt3dadd( -127.136, -105.406, -14.868, 0.29 ) }
    dend_35 { pt3dadd( -127.487, -106.012, -14.4856, 0.29 ) }
    dend_35 { pt3dadd( -127.663, -106.349, -14.2545, 0.44 ) }
    dend_35 { pt3dadd( -127.878, -106.762, -13.9747, 0.66 ) }
    dend_35 { pt3dadd( -128.893, -108.729, -12.6942, 0.66 ) }
    dend_35 { pt3dadd( -129.249, -109.405, -12.2473, 0.74 ) }
    dend_35 { pt3dadd( -129.711, -110.216, -11.7303, 0.22 ) }
    dend_35 { pt3dadd( -130.043, -110.775, -11.3993, 0.22 ) }
    dend_35 { pt3dadd( -130.394, -111.353, -11.0773, 0.59 ) }
    dend_35 { pt3dadd( -130.995, -112.329, -10.6099, 0.22 ) }
    dend_35 { pt3dadd( -131.446, -113.083, -10.344, 0.22 ) }
    dend_35 { pt3dadd( -131.829, -113.796, -10.1185, 1.11 ) }
    dend_35 { pt3dadd( -132.151, -114.474, -9.90178, 1.84 ) }
    dend_35 { pt3dadd( -132.762, -115.941, -9.2962, 0.37 ) }
    dend_35 { pt3dadd( -133.062, -116.773, -8.90781, 0.37 ) }
    dend_35 { pt3dadd( -133.272, -117.45, -8.57751, 0.37 ) }
    dend_35 { pt3dadd( -133.533, -118.37, -8.09897, 0.37 ) }
    dend_35 { pt3dadd( -133.839, -119.526, -7.45711, 0.96 ) }
    dend_35 { pt3dadd( -134.201, -120.905, -6.65175, 0.29 ) }
    dend_35 { pt3dadd( -134.41, -121.765, -6.14541, 0.29 ) }
    dend_35 { pt3dadd( -134.555, -122.367, -5.73725, 0.29 ) }
    dend_35 { pt3dadd( -134.637, -122.667, -5.50881, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 58/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.165127, -35.599, -15.4256, 2.06 ) }
    dend_2 { pt3dadd( 1.41176, -37.879, -14.6184, 2.06 ) }
    dend_2 { pt3dadd( 2.18305, -39.4648, -14.1357, 2.06 ) }
    dend_2 { pt3dadd( 2.87906, -40.994, -13.6994, 2.06 ) }
    dend_2 { pt3dadd( 4.40994, -44.3574, -12.7395, 1.84 ) }
    dend_2 { pt3dadd( 5.08773, -45.8465, -12.3146, 1.92 ) }
    dend_2 { pt3dadd( 5.97208, -47.7894, -11.7601, 2.06 ) }
    dend_2 { pt3dadd( 6.75981, -49.8333, -11.0053, 2.28 ) }
    dend_2 { pt3dadd( 6.82764, -50.0277, -10.9289, 2.28 ) }
    // Section: dend_82, id: dend_82, parent: dend_66 (entry count 67/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -9.58708, 35.2547, -2.44363, 0.66 ) }
    dend_82 { pt3dadd( -8.16172, 35.7654, -7.22658, 0.66 ) }
    dend_82 { pt3dadd( -7.90738, 35.8565, -8.08005, 0.96 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 70/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.58708, 35.2547, -2.44363, 1.84 ) }
    dend_67 { pt3dadd( -9.86394, 35.4059, -2.43401, 1.84 ) }
    dend_67 { pt3dadd( -11.0899, 36.0973, -2.40736, 1.47 ) }
    dend_67 { pt3dadd( -12.1481, 36.6599, -2.33929, 1.47 ) }
    dend_67 { pt3dadd( -12.7787, 36.9654, -2.23862, 1.47 ) }
    dend_67 { pt3dadd( -13.6195, 37.3588, -2.06542, 1.47 ) }
    dend_67 { pt3dadd( -14.5529, 37.7955, -1.87313, 1.4 ) }
    dend_67 { pt3dadd( -16.0565, 38.4672, -1.54431, 1.4 ) }
    dend_67 { pt3dadd( -17.2591, 38.9865, -1.24673, 1.4 ) }
    dend_67 { pt3dadd( -18.828, 39.6439, -0.777482, 1.4 ) }
    dend_67 { pt3dadd( -19.6999, 39.9985, -0.467042, 1.25 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 81/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 14.309, 52.666, -34.0048, 0.29 ) }
    dend_65 { pt3dadd( 15.3902, 52.8883, -34.4268, 0.29 ) }
    dend_65 { pt3dadd( 16.5341, 53.029, -34.8605, 0.29 ) }
    dend_65 { pt3dadd( 17.4878, 53.0855, -35.2418, 0.29 ) }
    dend_65 { pt3dadd( 18.3149, 53.0793, -35.571, 0.29 ) }
    dend_65 { pt3dadd( 19.3506, 52.9908, -35.985, 0.52 ) }
    dend_65 { pt3dadd( 19.9507, 52.8932, -36.2159, 0.52 ) }
    dend_65 { pt3dadd( 20.3441, 52.7536, -36.4022, 0.52 ) }
    dend_65 { pt3dadd( 20.8213, 52.4993, -36.6158, 0.22 ) }
    dend_65 { pt3dadd( 21.3009, 52.1988, -36.8077, 0.22 ) }
    dend_65 { pt3dadd( 21.8322, 51.8484, -37.0283, 0.22 ) }
    dend_65 { pt3dadd( 22.4741, 51.4958, -37.2511, 0.22 ) }
    dend_65 { pt3dadd( 23.4496, 51.0647, -37.5632, 0.66 ) }
    dend_65 { pt3dadd( 24.1785, 50.7977, -37.7679, 0.66 ) }
    dend_65 { pt3dadd( 24.9187, 50.5616, -37.9465, 0.37 ) }
    dend_65 { pt3dadd( 25.2931, 50.4491, -38.0358, 0.37 ) }
    dend_65 { pt3dadd( 26.662, 50.082, -38.3376, 0.22 ) }
    dend_65 { pt3dadd( 27.206, 49.9402, -38.465, 0.29 ) }
    dend_65 { pt3dadd( 27.709, 49.8157, -38.5899, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_65 { pt3dadd( 27.9788, 49.7477, -38.6868, 0.29 ) }
    dend_65 { pt3dadd( 29.0573, 49.4478, -39.1686, 0.29 ) }
    dend_65 { pt3dadd( 29.4899, 49.2914, -39.3828, 0.29 ) }
    dend_65 { pt3dadd( 30.1422, 48.9636, -39.8075, 0.66 ) }
    dend_65 { pt3dadd( 30.9749, 48.4353, -40.5528, 1.77 ) }
    dend_65 { pt3dadd( 31.6508, 47.9493, -41.2578, 1.11 ) }
    dend_65 { pt3dadd( 31.9675, 47.7019, -41.6613, 0.44 ) }
    dend_65 { pt3dadd( 32.5326, 47.2188, -42.4612, 0.44 ) }
    dend_65 { pt3dadd( 33.2733, 46.5288, -43.5569, 1.33 ) }
    dend_65 { pt3dadd( 34.2785, 45.5418, -45.1122, 1.92 ) }
    dend_65 { pt3dadd( 34.7722, 45.0511, -45.8955, 0.44 ) }
    dend_65 { pt3dadd( 35.9194, 43.973, -47.6367, 0.44 ) }
    dend_65 { pt3dadd( 36.2955, 43.6551, -48.1694, 0.96 ) }
    dend_65 { pt3dadd( 36.5465, 43.4677, -48.4868, 1.11 ) }
    dend_65 { pt3dadd( 37.5212, 42.7957, -49.4304, 0.29 ) }
    dend_65 { pt3dadd( 37.8903, 42.5417, -49.6927, 0.29 ) }
    dend_65 { pt3dadd( 38.404, 42.1633, -49.9885, 0.29 ) }
    dend_65 { pt3dadd( 38.8879, 41.7873, -50.2033, 0.29 ) }
    dend_65 { pt3dadd( 39.3849, 41.3917, -50.4192, 0.29 ) }
    dend_65 { pt3dadd( 40.1021, 40.8101, -50.7249, 0.29 ) }
    dend_65 { pt3dadd( 41.1911, 39.9197, -51.1627, 1.18 ) }
    dend_65 { pt3dadd( 41.7374, 39.471, -51.3898, 1.4 ) }
    dend_65 { pt3dadd( 42.3406, 38.974, -51.6509, 0.44 ) }
    dend_65 { pt3dadd( 42.8965, 38.5158, -51.892, 0.44 ) }
    dend_65 { pt3dadd( 43.944, 37.6271, -52.3335, 0.44 ) }
    dend_65 { pt3dadd( 44.5669, 37.0792, -52.6025, 1.11 ) }
    dend_65 { pt3dadd( 45.3757, 36.3552, -52.9264, 1.55 ) }
    dend_65 { pt3dadd( 46.0175, 35.7499, -53.1838, 0.44 ) }
    dend_65 { pt3dadd( 46.528, 35.2342, -53.368, 0.44 ) }
    dend_65 { pt3dadd( 47.0437, 34.6379, -53.5591, 0.44 ) }
    dend_65 { pt3dadd( 47.614, 33.9116, -53.8356, 0.66 ) }
    dend_65 { pt3dadd( 47.8425, 33.6155, -53.9917, 0.96 ) }
    dend_65 { pt3dadd( 48.2663, 33.1024, -54.3215, 1.03 ) }
    dend_65 { pt3dadd( 48.6859, 32.6319, -54.6476, 0.22 ) }
    dend_65 { pt3dadd( 49.448, 31.832, -55.2461, 0.22 ) }
    dend_65 { pt3dadd( 50.5691, 30.7467, -56.0776, 0.37 ) }
    dend_65 { pt3dadd( 51.3726, 29.9913, -56.5979, 0.66 ) }
    dend_65 { pt3dadd( 52.053, 29.3512, -57.002, 0.44 ) }
    dend_65 { pt3dadd( 52.5879, 28.871, -57.2837, 0.44 ) }
    dend_65 { pt3dadd( 52.8743, 28.5912, -57.4007, 0.44 ) }
    dend_65 { pt3dadd( 53.2776, 28.1604, -57.4644, 1.03 ) }
    dend_65 { pt3dadd( 53.9213, 27.366, -57.4239, 1.18 ) }
    dend_65 { pt3dadd( 54.3291, 26.8469, -57.3639, 0.44 ) }
    dend_65 { pt3dadd( 54.5151, 26.6178, -57.3368, 0.44 ) }
    dend_65 { pt3dadd( 55.6967, 25.2558, -57.2259, 0.44 ) }
    dend_65 { pt3dadd( 56.4199, 24.4667, -57.2461, 0.44 ) }
    dend_65 { pt3dadd( 56.9731, 23.8863, -57.3175, 0.44 ) }
    dend_65 { pt3dadd( 57.9812, 22.8989, -57.583, 0.44 ) }
    dend_65 { pt3dadd( 58.6261, 22.3115, -57.808, 0.59 ) }
    dend_65 { pt3dadd( 59.3808, 21.6268, -58.1273, 1.11 ) }
    dend_65 { pt3dadd( 60.5418, 20.6112, -58.7011, 1.33 ) }
    dend_65 { pt3dadd( 61.0553, 20.1466, -58.9699, 1.33 ) }
    dend_65 { pt3dadd( 61.8683, 19.4008, -59.3485, 0.59 ) }
    dend_65 { pt3dadd( 62.4852, 18.8419, -59.6337, 0.59 ) }
    dend_65 { pt3dadd( 63.2464, 18.1891, -59.9522, 0.59 ) }
    dend_65 { pt3dadd( 64.7597, 16.9984, -60.4693, 0.37 ) }
    dend_65 { pt3dadd( 65.698, 16.3329, -60.7462, 0.37 ) }
    dend_65 { pt3dadd( 67.2115, 15.3381, -61.1651, 0.37 ) }
    dend_65 { pt3dadd( 68.2779, 14.6537, -61.4541, 0.44 ) }
    dend_65 { pt3dadd( 68.7737, 14.3523, -61.5934, 0.81 ) }
    dend_65 { pt3dadd( 69.4864, 13.9462, -61.8015, 1.03 ) }
    dend_65 { pt3dadd( 70.0375, 13.6284, -61.9637, 0.29 ) }
    dend_65 { pt3dadd( 71.2402, 12.8996, -62.3819, 0.29 ) }
    dend_65 { pt3dadd( 72.1607, 12.2786, -62.7558, 0.29 ) }
    dend_65 { pt3dadd( 73.2279, 11.4505, -63.2404, 0.29 ) }
    dend_65 { pt3dadd( 73.6426, 11.0794, -63.4693, 0.66 ) }
    dend_65 { pt3dadd( 74.0041, 10.706, -63.7585, 0.96 ) }
    dend_65 { pt3dadd( 74.593, 9.9124, -64.4304, 0.96 ) }
    dend_65 { pt3dadd( 74.9633, 9.25943, -65.0068, 0.37 ) }
    dend_65 { pt3dadd( 75.2784, 8.53451, -65.6341, 0.37 ) }
    dend_65 { pt3dadd( 75.4486, 8.03931, -66.0481, 0.37 ) }
    dend_65 { pt3dadd( 75.9129, 6.47335, -67.5163, 0.37 ) }
    dend_65 { pt3dadd( 76.3068, 5.07247, -68.8524, 0.37 ) }
    dend_65 { pt3dadd( 76.4911, 4.39912, -69.4903, 0.52 ) }
    dend_65 { pt3dadd( 76.8104, 3.26521, -70.5699, 0.29 ) }
    dend_65 { pt3dadd( 76.9116, 2.92899, -70.9098, 1.18 ) }
    dend_65 { pt3dadd( 77.6476, 0.620782, -73.3507, 0.37 ) }
    dend_65 { pt3dadd( 77.8961, -0.227768, -74.2434, 0.37 ) }
    dend_65 { pt3dadd( 78.0784, -0.906921, -75.0937, 0.44 ) }
    dend_65 { pt3dadd( 78.1432, -1.22082, -75.519, 0.44 ) }
    dend_65 { pt3dadd( 78.3558, -2.59279, -77.3886, 0.44 ) }
    dend_65 { pt3dadd( 78.3713, -2.79838, -77.657, 0.81 ) }
    dend_65 { pt3dadd( 78.3509, -3.26916, -78.242, 0.81 ) }
    dend_65 { pt3dadd( 78.1221, -4.70976, -80.2001, 0.29 ) }
    dend_65 { pt3dadd( 78.0485, -5.01085, -80.6047, 0.29 ) }
    dend_65 { pt3dadd( 77.9378, -5.43304, -81.1448, 0.29 ) }
    dend_65 { pt3dadd( 77.7805, -6.08348, -81.8826, 0.29 ) }
    dend_65 { pt3dadd( 77.558, -7.32215, -83.1845, 1.11 ) }
    dend_65 { pt3dadd( 77.4468, -8.17158, -84.0169, 0.29 ) }
    dend_65 { pt3dadd( 77.4001, -8.63579, -84.3986, 0.29 ) }
    dend_65 { pt3dadd( 77.3568, -9.48686, -85.1348, 0.29 ) }
    dend_65 { pt3dadd( 77.3522, -9.92801, -85.5087, 0.29 ) }
    dend_65 { pt3dadd( 77.4242, -10.7755, -86.1327, 0.29 ) }
    dend_65 { pt3dadd( 77.5425, -11.5672, -86.6153, 0.81 ) }
    dend_65 { pt3dadd( 77.6468, -12.1468, -86.9418, 0.81 ) }
    dend_65 { pt3dadd( 77.8826, -13.444, -87.6588, 0.96 ) }
    dend_65 { pt3dadd( 77.9433, -13.908, -87.8901, 0.29 ) }
    dend_65 { pt3dadd( 78.0643, -14.9432, -88.3424, 0.29 ) }
    dend_65 { pt3dadd( 78.1307, -15.6193, -88.5739, 0.52 ) }
    dend_65 { pt3dadd( 78.147, -16.0772, -88.6771, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_65 { pt3dadd( 78.1453, -16.5307, -88.7441, 0.22 ) }
    dend_65 { pt3dadd( 78.0878, -17.4201, -88.7918, 0.22 ) }
    dend_65 { pt3dadd( 78.0185, -18.154, -88.8043, 0.22 ) }
    dend_65 { pt3dadd( 77.9662, -18.5403, -88.7878, 0.37 ) }
    dend_65 { pt3dadd( 77.8228, -19.5741, -88.6884, 0.37 ) }
    dend_65 { pt3dadd( 77.7641, -20.1334, -88.6266, 0.66 ) }
    dend_65 { pt3dadd( 77.6868, -20.7801, -88.5704, 0.66 ) }
    dend_65 { pt3dadd( 77.6169, -21.4069, -88.5352, 0.22 ) }
    dend_65 { pt3dadd( 77.5517, -22.0899, -88.5183, 0.22 ) }
    dend_65 { pt3dadd( 77.4913, -23.4706, -88.5185, 0.22 ) }
    dend_65 { pt3dadd( 77.4896, -24.8481, -88.5802, 0.22 ) }
    dend_65 { pt3dadd( 77.5181, -25.7939, -88.6794, 0.44 ) }
    dend_65 { pt3dadd( 77.5772, -26.5223, -88.7926, 0.44 ) }
    dend_65 { pt3dadd( 77.753, -27.6675, -89.0226, 0.44 ) }
    dend_65 { pt3dadd( 77.9779, -28.5909, -89.2515, 0.44 ) }
    dend_65 { pt3dadd( 78.304, -29.5307, -89.5591, 1.11 ) }
    dend_65 { pt3dadd( 78.6626, -30.3645, -89.8578, 0.44 ) }
    dend_65 { pt3dadd( 78.882, -30.7874, -90.0253, 0.44 ) }
    dend_65 { pt3dadd( 79.4475, -31.7627, -90.4541, 0.44 ) }
    dend_65 { pt3dadd( 79.7357, -32.2246, -90.6711, 0.44 ) }
    dend_65 { pt3dadd( 80.5288, -33.4577, -91.2599, 0.44 ) }
    dend_65 { pt3dadd( 81.332, -34.6495, -91.7978, 0.44 ) }
    dend_65 { pt3dadd( 82.1294, -35.8027, -92.3486, 0.44 ) }
    dend_65 { pt3dadd( 82.4976, -36.3124, -92.6057, 0.66 ) }
    dend_65 { pt3dadd( 82.7009, -36.5867, -92.7456, 0.66 ) }
    dend_65 { pt3dadd( 83.2151, -37.2909, -93.0621, 0.29 ) }
    dend_65 { pt3dadd( 83.7015, -37.9668, -93.3426, 0.29 ) }
    dend_65 { pt3dadd( 84.3623, -38.9523, -93.7224, 0.29 ) }
    dend_65 { pt3dadd( 85.0002, -39.999, -94.0917, 0.29 ) }
    dend_65 { pt3dadd( 85.2374, -40.3931, -94.2286, 0.29 ) }
    dend_65 { pt3dadd( 85.8972, -41.488, -94.6043, 0.29 ) }
    dend_65 { pt3dadd( 86.2169, -42.0482, -94.7822, 0.59 ) }
    dend_65 { pt3dadd( 86.6428, -42.8617, -95.0323, 0.59 ) }
    dend_65 { pt3dadd( 87.1352, -43.8664, -95.3073, 0.29 ) }
    dend_65 { pt3dadd( 87.4736, -44.5803, -95.5166, 0.29 ) }
    dend_65 { pt3dadd( 88.0896, -45.8729, -96.01, 0.29 ) }
    dend_65 { pt3dadd( 88.3534, -46.4123, -96.2501, 0.29 ) }
    dend_65 { pt3dadd( 88.6486, -47.0753, -96.5613, 0.59 ) }
    dend_65 { pt3dadd( 88.8957, -47.7068, -96.8586, 1.03 ) }
    dend_65 { pt3dadd( 89.0247, -48.0938, -97.0531, 1.03 ) }
    dend_65 { pt3dadd( 89.465, -49.7155, -97.9189, 0.37 ) }
    dend_65 { pt3dadd( 89.7057, -50.751, -98.4831, 0.37 ) }
    dend_65 { pt3dadd( 89.8483, -51.4323, -98.8805, 0.37 ) }
    dend_65 { pt3dadd( 89.9965, -52.2681, -99.3726, 0.37 ) }
    dend_65 { pt3dadd( 90.236, -53.624, -100.156, 0.29 ) }
    dend_65 { pt3dadd( 90.3493, -54.2332, -100.466, 0.29 ) }
    dend_65 { pt3dadd( 90.4281, -54.6253, -100.629, 0.29 ) }
    dend_65 { pt3dadd( 90.6612, -55.7583, -101.083, 0.37 ) }
    dend_65 { pt3dadd( 90.7708, -56.2534, -101.258, 0.37 ) }
    dend_65 { pt3dadd( 90.9693, -57.175, -101.527, 0.22 ) }
    dend_65 { pt3dadd( 91.3181, -58.677, -101.804, 0.22 ) }
    dend_65 { pt3dadd( 91.4074, -59.0242, -101.856, 0.66 ) }
    dend_65 { pt3dadd( 91.5479, -59.5231, -101.918, 0.74 ) }
    dend_65 { pt3dadd( 91.6752, -59.9339, -101.952, 0.22 ) }
    dend_65 { pt3dadd( 91.8478, -60.4526, -102.03, 0.22 ) }
    dend_65 { pt3dadd( 92.104, -61.2625, -102.195, 0.37 ) }
    dend_65 { pt3dadd( 92.2846, -61.7724, -102.337, 0.37 ) }
    dend_65 { pt3dadd( 92.7107, -62.8751, -102.724, 0.37 ) }
    dend_65 { pt3dadd( 93.019, -63.5896, -103.01, 0.37 ) }
    dend_65 { pt3dadd( 93.469, -64.5385, -103.428, 0.37 ) }
    dend_65 { pt3dadd( 93.6885, -64.9808, -103.619, 0.44 ) }
    dend_65 { pt3dadd( 93.9391, -65.4693, -103.814, 0.44 ) }
    dend_65 { pt3dadd( 94.2208, -65.996, -103.989, 0.44 ) }
    dend_65 { pt3dadd( 94.6565, -66.7843, -104.179, 0.44 ) }
    dend_65 { pt3dadd( 94.7422, -66.9358, -104.204, 0.59 ) }
    dend_65 { pt3dadd( 95.4723, -68.1874, -104.3, 0.44 ) }
    dend_65 { pt3dadd( 95.8623, -68.8821, -104.328, 0.44 ) }
    dend_65 { pt3dadd( 96.262, -69.6306, -104.275, 0.59 ) }
    dend_65 { pt3dadd( 96.4381, -69.9752, -104.225, 0.59 ) }
    dend_65 { pt3dadd( 96.7481, -70.608, -104.091, 0.37 ) }
    dend_65 { pt3dadd( 96.9393, -71.014, -103.983, 0.37 ) }
    dend_65 { pt3dadd( 97.293, -71.7667, -103.735, 0.37 ) }
    dend_65 { pt3dadd( 97.8425, -72.9915, -103.282, 0.52 ) }
    dend_65 { pt3dadd( 97.9375, -73.195, -103.203, 0.52 ) }
    dend_65 { pt3dadd( 98.2371, -73.7839, -102.969, 0.15 ) }
    dend_65 { pt3dadd( 98.5514, -74.3335, -102.754, 0.15 ) }
    dend_65 { pt3dadd( 98.7112, -74.5786, -102.669, 0.44 ) }
    dend_65 { pt3dadd( 98.9567, -74.9121, -102.606, 0.74 ) }
    dend_65 { pt3dadd( 99.4611, -75.578, -102.627, 0.15 ) }
    dend_65 { pt3dadd( 99.6476, -75.8143, -102.641, 0.15 ) }
    dend_65 { pt3dadd( 99.8694, -76.1056, -102.677, 0.15 ) }
    dend_65 { pt3dadd( 100.199, -76.5282, -102.736, 0.66 ) }
    dend_65 { pt3dadd( 100.798, -77.2611, -102.871, 0.29 ) }
    dend_65 { pt3dadd( 101.237, -77.7746, -103.006, 0.29 ) }
    dend_65 { pt3dadd( 101.684, -78.3154, -103.181, 0.29 ) }
    dend_65 { pt3dadd( 102.358, -79.1458, -103.46, 0.29 ) }
    dend_65 { pt3dadd( 102.913, -79.8275, -103.724, 0.29 ) }
    dend_65 { pt3dadd( 103.342, -80.3573, -103.95, 0.52 ) }
    dend_65 { pt3dadd( 103.715, -80.8031, -104.189, 0.29 ) }
    dend_65 { pt3dadd( 104.321, -81.5769, -104.673, 0.29 ) }
    dend_65 { pt3dadd( 104.754, -82.1292, -105.057, 0.29 ) }
    dend_65 { pt3dadd( 105.481, -83.0896, -105.752, 0.29 ) }
    dend_65 { pt3dadd( 105.841, -83.6144, -106.13, 0.29 ) }
    dend_65 { pt3dadd( 106.611, -84.783, -106.953, 0.29 ) }
    dend_65 { pt3dadd( 106.991, -85.3557, -107.365, 0.29 ) }
    dend_65 { pt3dadd( 107.268, -85.7603, -107.689, 0.29 ) }
    dend_65 { pt3dadd( 107.596, -86.2601, -108.12, 0.29 ) }
    dend_65 { pt3dadd( 107.75, -86.5182, -108.33, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 14.309, 52.666, -34.0048, 0.52 ) }
    dend_64 { pt3dadd( 15.2249, 52.6992, -34.0826, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_64 { pt3dadd( 16.3794, 52.943, -34.2053, 0.52 ) }
    dend_64 { pt3dadd( 17.2249, 53.2812, -34.4102, 0.29 ) }
    dend_64 { pt3dadd( 17.9382, 53.7648, -34.6845, 0.29 ) }
    dend_64 { pt3dadd( 18.1891, 54.0346, -34.9154, 0.29 ) }
    dend_64 { pt3dadd( 18.4611, 54.4317, -35.2849, 0.59 ) }
    dend_64 { pt3dadd( 18.741, 55.1398, -35.9386, 0.59 ) }
    dend_64 { pt3dadd( 18.9892, 56.1156, -36.8142, 0.29 ) }
    dend_64 { pt3dadd( 19.0899, 56.6641, -37.3433, 0.29 ) }
    dend_64 { pt3dadd( 19.3676, 58.1981, -38.9314, 0.66 ) }
    dend_64 { pt3dadd( 19.453, 58.5926, -39.3451, 0.66 ) }
    dend_64 { pt3dadd( 19.5472, 58.943, -39.7089, 0.88 ) }
    dend_64 { pt3dadd( 19.6359, 59.1886, -39.9633, 0.88 ) }
    dend_64 { pt3dadd( 19.9479, 59.7952, -40.5163, 0.15 ) }
    dend_64 { pt3dadd( 20.2511, 60.2407, -40.9185, 0.15 ) }
    dend_64 { pt3dadd( 20.5093, 60.5361, -41.1194, 0.15 ) }
    dend_64 { pt3dadd( 20.8141, 60.7834, -41.4025, 0.15 ) }
    dend_64 { pt3dadd( 20.8141, 60.7834, -41.4025, 0.29 ) }
    dend_64 { pt3dadd( 21.5337, 61.1253, -42.1362, 0.29 ) }
    dend_64 { pt3dadd( 21.8309, 61.2778, -42.4329, 0.29 ) }
    dend_64 { pt3dadd( 22.2815, 61.5187, -42.8736, 0.29 ) }
    dend_64 { pt3dadd( 23.2157, 62.0847, -43.9672, 0.66 ) }
    dend_64 { pt3dadd( 23.5676, 62.327, -44.392, 0.66 ) }
    dend_64 { pt3dadd( 23.9831, 62.6372, -44.91, 0.29 ) }
    dend_64 { pt3dadd( 24.6214, 63.147, -45.703, 0.29 ) }
    dend_64 { pt3dadd( 24.9715, 63.4506, -46.1385, 0.29 ) }
    dend_64 { pt3dadd( 26.1269, 64.5182, -47.5423, 0.37 ) }
    dend_64 { pt3dadd( 26.5775, 64.9444, -48.0673, 1.33 ) }
    dend_64 { pt3dadd( 27.0423, 65.38, -48.607, 0.44 ) }
    dend_64 { pt3dadd( 27.2796, 65.5838, -48.8697, 0.44 ) }
    dend_64 { pt3dadd( 27.5606, 65.8055, -49.2449, 0.44 ) }
    dend_64 { pt3dadd( 27.7842, 65.9983, -49.5716, 0.44 ) }
    dend_64 { pt3dadd( 28.4342, 66.5903, -50.4888, 0.44 ) }
    dend_64 { pt3dadd( 28.701, 66.863, -50.9415, 0.44 ) }
    dend_64 { pt3dadd( 28.9463, 67.138, -51.4002, 0.44 ) }
    dend_64 { pt3dadd( 29.9415, 68.208, -53.2806, 0.74 ) }
    dend_64 { pt3dadd( 30.1723, 68.4357, -53.6907, 1.18 ) }
    dend_64 { pt3dadd( 30.3683, 68.6037, -53.994, 1.33 ) }
    dend_64 { pt3dadd( 30.9885, 69.0838, -54.8502, 0.52 ) }
    dend_64 { pt3dadd( 31.2428, 69.2686, -55.2187, 0.29 ) }
    dend_64 { pt3dadd( 31.7122, 69.583, -55.8635, 0.29 ) }
    dend_64 { pt3dadd( 32.0935, 69.8198, -56.3349, 0.81 ) }
    dend_64 { pt3dadd( 32.9389, 70.3228, -57.4378, 0.15 ) }
    dend_64 { pt3dadd( 33.5496, 70.7251, -58.2573, 0.81 ) }
    dend_64 { pt3dadd( 34.5874, 71.4969, -59.7527, 0.37 ) }
    dend_64 { pt3dadd( 34.7699, 71.6487, -60.0369, 0.37 ) }
    dend_64 { pt3dadd( 35.0989, 71.9584, -60.5758, 0.37 ) }
    dend_64 { pt3dadd( 35.6104, 72.4753, -61.467, 0.37 ) }
    dend_64 { pt3dadd( 36.0468, 72.963, -62.2361, 0.29 ) }
    dend_64 { pt3dadd( 36.7677, 73.8016, -63.3909, 0.29 ) }
    dend_64 { pt3dadd( 37.0249, 74.12, -63.7606, 1.03 ) }
    dend_64 { pt3dadd( 37.3347, 74.5367, -64.2618, 1.33 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 51/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.49889, 32.4046, 8.19982, 1.11 ) }
    dend_58 { pt3dadd( 7.16163, 32.0891, 11.4924, 1.11 ) }
    dend_58 { pt3dadd( 8.08936, 32.0016, 12.448, 1.11 ) }
    dend_58 { pt3dadd( 8.17271, 32.0026, 12.5225, 1.11 ) }
    dend_58 { pt3dadd( 8.31835, 32.0257, 12.6489, 1.11 ) }
    dend_58 { pt3dadd( 8.88321, 32.1931, 13.1315, 1.25 ) }
    dend_58 { pt3dadd( 8.98698, 32.2345, 13.2169, 1.25 ) }
    dend_58 { pt3dadd( 9.63537, 32.7116, 13.5757, 1.03 ) }
    dend_58 { pt3dadd( 10.7941, 33.7438, 14.2795, 0.88 ) }
    dend_58 { pt3dadd( 11.4774, 34.3672, 14.6604, 0.81 ) }
    dend_58 { pt3dadd( 11.9654, 34.8384, 14.9193, 0.81 ) }
    dend_58 { pt3dadd( 12.294, 35.157, 15.083, 0.81 ) }
    dend_58 { pt3dadd( 12.7258, 35.548, 15.2541, 0.81 ) }
    dend_58 { pt3dadd( 13.2692, 35.9631, 15.3882, 0.88 ) }
    dend_58 { pt3dadd( 13.9353, 36.324, 15.5476, 0.96 ) }
    dend_58 { pt3dadd( 14.3392, 36.4699, 15.6743, 0.96 ) }
    dend_58 { pt3dadd( 14.8947, 36.622, 15.884, 0.96 ) }
    dend_58 { pt3dadd( 15.3566, 36.7377, 16.0779, 1.11 ) }
    dend_58 { pt3dadd( 16.1104, 36.9223, 16.4116, 1.11 ) }
    dend_58 { pt3dadd( 18.3091, 37.4605, 17.4382, 1.11 ) }
    dend_58 { pt3dadd( 19.0678, 37.6577, 17.8065, 1.11 ) }
    dend_58 { pt3dadd( 19.7744, 37.8697, 18.1404, 0.88 ) }
    dend_58 { pt3dadd( 20.4954, 38.1493, 18.4674, 0.88 ) }
    dend_58 { pt3dadd( 21.0645, 38.4153, 18.7343, 1.03 ) }
    dend_58 { pt3dadd( 21.1218, 38.4469, 18.76, 1.03 ) }
    dend_58 { pt3dadd( 21.7958, 38.8543, 18.9949, 1.03 ) }
    dend_58 { pt3dadd( 22.2568, 39.1366, 19.2858, 0.96 ) }
    dend_58 { pt3dadd( 22.9568, 39.5444, 19.8798, 0.96 ) }
    dend_58 { pt3dadd( 23.758, 39.9833, 20.6418, 1.33 ) }
    dend_58 { pt3dadd( 23.8114, 40.0113, 20.6948, 1.33 ) }
    dend_58 { pt3dadd( 24.1088, 40.1621, 20.9853, 1.33 ) }
    dend_58 { pt3dadd( 25.6114, 40.8796, 22.5496, 1.33 ) }
    dend_58 { pt3dadd( 26.0959, 41.0945, 23.0845, 0.81 ) }
    dend_58 { pt3dadd( 26.6279, 41.3141, 23.6824, 0.81 ) }
    dend_58 { pt3dadd( 26.8202, 41.3979, 23.8782, 1.11 ) }
    dend_58 { pt3dadd( 27.1231, 41.5383, 24.1807, 1.25 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 87/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.49889, 32.4046, 8.19982, 1.55 ) }
    dend_55 { pt3dadd( 5.50789, 33.7128, 9.50282, 1.55 ) }
    dend_55 { pt3dadd( 6.22076, 34.5041, 10.2283, 0.81 ) }
    dend_55 { pt3dadd( 6.31372, 34.602, 10.3103, 0.81 ) }
    dend_55 { pt3dadd( 6.78975, 35.1278, 10.7721, 0.81 ) }
    dend_55 { pt3dadd( 7.16768, 35.5741, 11.1559, 0.88 ) }
    dend_55 { pt3dadd( 7.71503, 36.3028, 11.7772, 0.88 ) }
    dend_55 { pt3dadd( 8.29523, 37.1878, 12.3884, 1.03 ) }
    dend_55 { pt3dadd( 8.49046, 37.5778, 12.6285, 0.88 ) }
    dend_55 { pt3dadd( 8.96789, 38.8605, 13.3735, 1.11 ) }
    dend_55 { pt3dadd( 9.06288, 39.2525, 13.5927, 0.96 ) }
    dend_55 { pt3dadd( 9.2018, 40.172, 14.0863, 0.66 ) }
    dend_55 { pt3dadd( 9.27302, 41.1053, 14.5276, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 9.27281, 41.7599, 14.7614, 0.66 ) }
    dend_55 { pt3dadd( 9.2442, 42.251, 14.9334, 0.66 ) }
    dend_55 { pt3dadd( 9.14193, 43.1541, 15.2122, 0.66 ) }
    dend_55 { pt3dadd( 9.13455, 43.2029, 15.2287, 0.66 ) }
    dend_55 { pt3dadd( 8.93535, 44.168, 15.5704, 0.37 ) }
    dend_55 { pt3dadd( 8.69644, 44.9496, 15.8722, 0.37 ) }
    dend_55 { pt3dadd( 8.25711, 45.9066, 16.2347, 0.37 ) }
    dend_55 { pt3dadd( 8.01095, 46.3049, 16.3699, 0.37 ) }
    dend_55 { pt3dadd( 7.97242, 46.3519, 16.3807, 0.37 ) }
    dend_55 { pt3dadd( 7.81199, 46.5342, 16.5337, 0.37 ) }
    dend_55 { pt3dadd( 7.4825, 46.8922, 17.0622, 0.88 ) }
    dend_55 { pt3dadd( 7.31941, 47.1226, 17.4738, 1.11 ) }
    dend_55 { pt3dadd( 7.3009, 47.1623, 17.5442, 1.11 ) }
    dend_55 { pt3dadd( 7.21701, 47.4917, 18.1285, 1.33 ) }
    dend_55 { pt3dadd( 7.02414, 49.1624, 21.1146, 0.88 ) }
    dend_55 { pt3dadd( 7.03257, 49.2862, 21.3223, 0.88 ) }
    dend_55 { pt3dadd( 7.08587, 49.5408, 21.7419, 0.59 ) }
    dend_55 { pt3dadd( 7.14728, 49.7465, 22.0353, 0.37 ) }
    dend_55 { pt3dadd( 7.29556, 50.1982, 22.5561, 0.29 ) }
    dend_55 { pt3dadd( 7.31888, 50.2658, 22.6161, 0.29 ) }
    dend_55 { pt3dadd( 7.55935, 51.2245, 23.0459, 0.29 ) }
    dend_55 { pt3dadd( 7.56927, 51.2996, 23.0824, 0.29 ) }
    dend_55 { pt3dadd( 7.59809, 52.1003, 23.4726, 0.29 ) }
    dend_55 { pt3dadd( 7.58626, 52.391, 23.6118, 0.29 ) }
    dend_55 { pt3dadd( 7.44679, 53.746, 24.198, 0.66 ) }
    dend_55 { pt3dadd( 7.41765, 54.0617, 24.3196, 0.88 ) }
    dend_55 { pt3dadd( 7.32091, 54.887, 24.6301, 0.44 ) }
    dend_55 { pt3dadd( 7.2768, 55.3074, 24.7835, 0.59 ) }
    dend_55 { pt3dadd( 7.24114, 55.7749, 24.9448, 0.59 ) }
    dend_55 { pt3dadd( 7.18997, 56.6565, 25.1662, 0.52 ) }
    dend_55 { pt3dadd( 7.1711, 57.1219, 25.1838, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -33.5822, -68.7715, -46.7392, 0.88 ) }
    dend_46 { pt3dadd( -34.9069, -69.422, -47.0808, 0.88 ) }
    dend_46 { pt3dadd( -35.3082, -69.6463, -47.1829, 0.88 ) }
    dend_46 { pt3dadd( -36.5722, -70.423, -47.6086, 0.52 ) }
    dend_46 { pt3dadd( -37.5, -71.0162, -47.9408, 0.52 ) }
    dend_46 { pt3dadd( -38.5972, -71.6966, -48.374, 0.74 ) }
    dend_46 { pt3dadd( -39.5029, -72.239, -48.7332, 0.74 ) }
    dend_46 { pt3dadd( -40.2753, -72.683, -49.0899, 0.74 ) }
    dend_46 { pt3dadd( -41.3185, -73.2791, -49.5681, 0.74 ) }
    dend_46 { pt3dadd( -42.1068, -73.7481, -49.9151, 0.74 ) }
    dend_46 { pt3dadd( -43.2375, -74.427, -50.4133, 0.74 ) }
    dend_46 { pt3dadd( -44.0251, -74.8744, -50.7422, 0.88 ) }
    dend_46 { pt3dadd( -44.8372, -75.3511, -51.1153, 0.66 ) }
    dend_46 { pt3dadd( -45.3035, -75.6209, -51.3461, 0.59 ) }
    dend_46 { pt3dadd( -45.9626, -76.0194, -51.6723, 0.59 ) }
    dend_46 { pt3dadd( -46.7746, -76.5855, -52.1106, 0.59 ) }
    dend_46 { pt3dadd( -47.2196, -76.9437, -52.3745, 0.59 ) }
    dend_46 { pt3dadd( -48.0829, -77.6825, -52.8987, 0.88 ) }
    dend_46 { pt3dadd( -49.2215, -78.6502, -53.5414, 0.88 ) }
    dend_46 { pt3dadd( -49.605, -78.9636, -53.738, 0.88 ) }
    dend_46 { pt3dadd( -50.3437, -79.5069, -54.0625, 0.88 ) }
    dend_46 { pt3dadd( -51.3252, -80.1377, -54.3924, 1.03 ) }
    dend_46 { pt3dadd( -52.4074, -80.7832, -54.7145, 0.88 ) }
    dend_46 { pt3dadd( -53.1969, -81.2429, -54.9105, 0.88 ) }
    dend_46 { pt3dadd( -53.9559, -81.7086, -55.0841, 0.88 ) }
    dend_46 { pt3dadd( -54.6502, -82.1222, -55.2632, 0.59 ) }
    dend_46 { pt3dadd( -55.2747, -82.4798, -55.5091, 0.59 ) }
    dend_46 { pt3dadd( -56.3727, -83.1497, -56.0473, 0.66 ) }
    dend_46 { pt3dadd( -56.9814, -83.5537, -56.4334, 1.18 ) }
    dend_46 { pt3dadd( -57.7162, -84.08, -56.9687, 1.18 ) }
    dend_46 { pt3dadd( -58.5899, -84.7368, -57.6471, 1.18 ) }
    dend_46 { pt3dadd( -60.391, -86.1081, -59.0526, 1.18 ) }
    dend_46 { pt3dadd( -60.7922, -86.3963, -59.3677, 1.18 ) }
    dend_46 { pt3dadd( -61.7391, -87.0193, -60.0902, 0.52 ) }
    dend_46 { pt3dadd( -62.3505, -87.3929, -60.5626, 0.59 ) }
    dend_46 { pt3dadd( -62.7945, -87.6737, -60.9001, 0.66 ) }
    dend_46 { pt3dadd( -63.286, -88.0231, -61.2371, 0.66 ) }
    dend_46 { pt3dadd( -64.2568, -88.82, -61.8871, 0.74 ) }
    dend_46 { pt3dadd( -64.6638, -89.1772, -62.1902, 0.81 ) }
    dend_46 { pt3dadd( -64.8022, -89.3088, -62.3035, 0.81 ) }
    dend_46 { pt3dadd( -65.4518, -89.919, -62.8481, 0.37 ) }
    dend_46 { pt3dadd( -65.8596, -90.3125, -63.2042, 0.59 ) }
    dend_46 { pt3dadd( -66.9526, -91.418, -64.2055, 1.18 ) }
    dend_46 { pt3dadd( -67.2355, -91.7125, -64.4554, 1.18 ) }
    dend_46 { pt3dadd( -67.7771, -92.2811, -64.9313, 0.29 ) }
    dend_46 { pt3dadd( -68.3407, -92.8882, -65.4168, 0.29 ) }
    dend_46 { pt3dadd( -68.9704, -93.5565, -65.9149, 0.44 ) }
    dend_46 { pt3dadd( -69.8456, -94.4965, -66.5204, 0.88 ) }
    dend_46 { pt3dadd( -70.2032, -94.9029, -66.7393, 1.4 ) }
    dend_46 { pt3dadd( -70.8788, -95.7426, -67.1676, 1.47 ) }
    dend_46 { pt3dadd( -71.354, -96.3926, -67.4795, 0.74 ) }
    dend_46 { pt3dadd( -71.8556, -97.1239, -67.8251, 1.18 ) }
    dend_46 { pt3dadd( -72.3992, -97.8505, -68.1577, 1.4 ) }
    dend_46 { pt3dadd( -73.2394, -98.8435, -68.6028, 0.74 ) }
    dend_46 { pt3dadd( -73.5828, -99.2194, -68.7729, 0.74 ) }
    dend_46 { pt3dadd( -74.2186, -99.8836, -69.0527, 0.74 ) }
    dend_46 { pt3dadd( -74.7813, -100.433, -69.2869, 0.74 ) }
    dend_46 { pt3dadd( -75.4933, -101.093, -69.5671, 0.52 ) }
    dend_46 { pt3dadd( -76.3369, -101.842, -69.8674, 0.37 ) }
    dend_46 { pt3dadd( -77.0029, -102.413, -70.0933, 0.37 ) }
    dend_46 { pt3dadd( -77.6994, -103.019, -70.3903, 0.37 ) }
    dend_46 { pt3dadd( -78.3727, -103.626, -70.7174, 0.37 ) }
    dend_46 { pt3dadd( -79.1023, -104.315, -71.1171, 0.37 ) }
    dend_46 { pt3dadd( -79.9104, -105.124, -71.6264, 0.37 ) }
    dend_46 { pt3dadd( -80.6995, -105.911, -72.199, 0.96 ) }
    dend_46 { pt3dadd( -81.5494, -106.724, -72.8411, 0.52 ) }
    dend_46 { pt3dadd( -81.9362, -107.094, -73.1328, 0.52 ) }
    dend_46 { pt3dadd( -82.354, -107.502, -73.4192, 0.52 ) }
    dend_46 { pt3dadd( -83.2235, -108.295, -73.9104, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( -84.1057, -109.024, -74.2999, 0.52 ) }
    dend_46 { pt3dadd( -84.8087, -109.57, -74.5208, 0.52 ) }
    dend_46 { pt3dadd( -85.4356, -110.046, -74.6694, 0.52 ) }
    dend_46 { pt3dadd( -86.2462, -110.66, -74.8587, 0.29 ) }
    dend_46 { pt3dadd( -87.1595, -111.339, -75.0507, 0.29 ) }
    dend_46 { pt3dadd( -87.4742, -111.571, -75.1027, 0.59 ) }
    dend_46 { pt3dadd( -88.0109, -111.963, -75.1842, 0.74 ) }
    dend_46 { pt3dadd( -88.9302, -112.656, -75.2637, 0.74 ) }
    dend_46 { pt3dadd( -89.8908, -113.395, -75.3957, 1.18 ) }
    dend_46 { pt3dadd( -90.3728, -113.774, -75.5198, 1.55 ) }
    dend_46 { pt3dadd( -90.8811, -114.174, -75.692, 1.55 ) }
    dend_46 { pt3dadd( -91.6565, -114.781, -75.9865, 0.37 ) }
    dend_46 { pt3dadd( -93.1124, -115.93, -76.6217, 0.37 ) }
    dend_46 { pt3dadd( -94.6325, -117.193, -77.3201, 0.37 ) }
    dend_46 { pt3dadd( -95.5169, -117.973, -77.7583, 0.37 ) }
    dend_46 { pt3dadd( -96.1075, -118.501, -78.0702, 0.37 ) }
    dend_46 { pt3dadd( -96.6436, -118.984, -78.3544, 0.37 ) }
    dend_46 { pt3dadd( -97.1914, -119.493, -78.6382, 0.37 ) }
    dend_46 { pt3dadd( -97.9015, -120.155, -79.045, 0.37 ) }
    dend_46 { pt3dadd( -98.4256, -120.657, -79.2832, 0.37 ) }
    dend_46 { pt3dadd( -99.0744, -121.304, -79.5718, 0.88 ) }
    dend_46 { pt3dadd( -99.6134, -121.854, -79.8506, 0.88 ) }
    dend_46 { pt3dadd( -100.046, -122.299, -80.0843, 0.44 ) }
    dend_46 { pt3dadd( -100.93, -123.224, -80.611, 0.59 ) }
    dend_46 { pt3dadd( -101.66, -124.025, -81.0938, 0.29 ) }
    dend_46 { pt3dadd( -102.119, -124.543, -81.4107, 0.29 ) }
    dend_46 { pt3dadd( -102.817, -125.344, -81.9363, 1.18 ) }
    dend_46 { pt3dadd( -103.386, -125.991, -82.3824, 1.33 ) }
    dend_46 { pt3dadd( -104.175, -126.892, -82.9824, 0.44 ) }
    dend_46 { pt3dadd( -104.46, -127.213, -83.1823, 0.44 ) }
    dend_46 { pt3dadd( -105.439, -128.336, -83.9428, 0.44 ) }
    dend_46 { pt3dadd( -106.3, -129.262, -84.6221, 0.81 ) }
    dend_46 { pt3dadd( -106.585, -129.547, -84.8371, 1.4 ) }
    dend_46 { pt3dadd( -107.17, -130.094, -85.2323, 1.62 ) }
    dend_46 { pt3dadd( -107.423, -130.309, -85.3725, 1.62 ) }
    dend_46 { pt3dadd( -108.664, -131.301, -85.9384, 0.37 ) }
    dend_46 { pt3dadd( -109.314, -131.796, -86.1613, 0.37 ) }
    dend_46 { pt3dadd( -109.881, -132.2, -86.3213, 0.37 ) }
    dend_46 { pt3dadd( -111.055, -132.959, -86.7396, 0.37 ) }
    dend_46 { pt3dadd( -111.629, -133.293, -86.9498, 0.37 ) }
    dend_46 { pt3dadd( -113.386, -134.251, -87.58, 0.37 ) }
    dend_46 { pt3dadd( -114.221, -134.691, -87.8563, 0.37 ) }
    dend_46 { pt3dadd( -115.119, -135.162, -88.1704, 0.66 ) }
    dend_46 { pt3dadd( -116.97, -136.086, -88.863, 0.66 ) }
    dend_46 { pt3dadd( -118.026, -136.561, -89.2832, 0.66 ) }
    dend_46 { pt3dadd( -118.29, -136.666, -89.387, 0.66 ) }
    dend_46 { pt3dadd( -119.352, -136.996, -89.7907, 0.29 ) }
    dend_46 { pt3dadd( -119.932, -137.169, -89.9991, 0.29 ) }
    dend_46 { pt3dadd( -120.819, -137.457, -90.2955, 0.44 ) }
    dend_46 { pt3dadd( -121.735, -137.831, -90.5822, 0.44 ) }
    dend_46 { pt3dadd( -122.356, -138.109, -90.8747, 0.44 ) }
    dend_46 { pt3dadd( -122.829, -138.326, -91.1335, 0.66 ) }
    dend_46 { pt3dadd( -123.729, -138.76, -91.7528, 0.81 ) }
    dend_46 { pt3dadd( -124.64, -139.271, -92.4467, 0.29 ) }
    dend_46 { pt3dadd( -125.397, -139.739, -93.0501, 0.29 ) }
    dend_46 { pt3dadd( -126.731, -140.645, -94.1823, 0.52 ) }
    dend_46 { pt3dadd( -127.291, -141.059, -94.6814, 0.81 ) }
    dend_46 { pt3dadd( -128.302, -141.786, -95.5446, 0.81 ) }
    dend_46 { pt3dadd( -129.027, -142.284, -96.1242, 0.81 ) }
    dend_46 { pt3dadd( -129.512, -142.613, -96.4666, 0.81 ) }
    dend_46 { pt3dadd( -130.15, -143.053, -96.8508, 0.29 ) }
    dend_46 { pt3dadd( -130.427, -143.287, -96.9758, 0.29 ) }
    dend_46 { pt3dadd( -131.156, -143.922, -97.3874, 0.29 ) }
    dend_46 { pt3dadd( -131.567, -144.225, -97.6164, 0.29 ) }
    dend_46 { pt3dadd( -132.024, -144.493, -97.9364, 0.29 ) }
    dend_46 { pt3dadd( -132.298, -144.624, -98.136, 0.44 ) }
    dend_46 { pt3dadd( -132.96, -144.895, -98.6016, 0.59 ) }
    dend_46 { pt3dadd( -134.543, -145.476, -99.806, 0.66 ) }
    dend_46 { pt3dadd( -135.314, -145.776, -100.437, 0.81 ) }
    dend_46 { pt3dadd( -136.228, -146.145, -101.184, 0.81 ) }
    dend_46 { pt3dadd( -136.746, -146.35, -101.571, 0.81 ) }
    dend_46 { pt3dadd( -137.353, -146.604, -101.975, 0.81 ) }
    dend_46 { pt3dadd( -138.271, -147.046, -102.484, 0.81 ) }
    dend_46 { pt3dadd( -138.879, -147.411, -102.733, 0.81 ) }
    dend_46 { pt3dadd( -139.339, -147.72, -102.919, 0.81 ) }
    dend_46 { pt3dadd( -140.339, -148.421, -103.509, 0.37 ) }
    dend_46 { pt3dadd( -140.694, -148.68, -103.779, 0.74 ) }
    dend_46 { pt3dadd( -141.344, -149.141, -104.325, 0.29 ) }
    dend_46 { pt3dadd( -141.899, -149.554, -104.785, 0.29 ) }
    dend_46 { pt3dadd( -142.482, -149.99, -105.349, 0.66 ) }
    dend_46 { pt3dadd( -144.267, -151.389, -107.232, 0.66 ) }
    dend_46 { pt3dadd( -144.489, -151.567, -107.481, 0.66 ) }
    dend_46 { pt3dadd( -144.962, -151.935, -107.988, 0.52 ) }
    dend_46 { pt3dadd( -145.915, -152.647, -108.969, 0.52 ) }
    dend_46 { pt3dadd( -147.18, -153.591, -110.155, 0.59 ) }
    dend_46 { pt3dadd( -147.646, -153.951, -110.519, 0.81 ) }
    dend_46 { pt3dadd( -148.595, -154.643, -111.073, 0.81 ) }
    dend_46 { pt3dadd( -149.208, -155.051, -111.432, 0.81 ) }
    dend_46 { pt3dadd( -150.055, -155.581, -111.918, 0.44 ) }
    dend_46 { pt3dadd( -150.789, -155.974, -112.195, 0.44 ) }
    dend_46 { pt3dadd( -151.525, -156.339, -112.25, 0.44 ) }
    dend_46 { pt3dadd( -152.406, -156.742, -112.142, 0.44 ) }
    dend_46 { pt3dadd( -153.836, -157.33, -111.74, 0.74 ) }
    dend_46 { pt3dadd( -154.198, -157.462, -111.63, 0.74 ) }
    dend_46 { pt3dadd( -157.644, -158.529, -110.573, 0.74 ) }
    dend_46 { pt3dadd( -158.195, -158.676, -110.46, 0.74 ) }
    dend_46 { pt3dadd( -159.811, -159.103, -110.345, 0.74 ) }
    dend_46 { pt3dadd( -161.011, -159.492, -110.474, 0.59 ) }
    dend_46 { pt3dadd( -162.166, -159.934, -110.785, 0.52 ) }
    dend_46 { pt3dadd( -163.057, -160.342, -111.199, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_46 { pt3dadd( -164.347, -161.044, -112.12, 1.25 ) }
    dend_46 { pt3dadd( -165.247, -161.582, -112.875, 0.66 ) }
    dend_46 { pt3dadd( -166.269, -162.248, -113.906, 0.66 ) }
    dend_46 { pt3dadd( -166.744, -162.592, -114.426, 1.03 ) }
    dend_46 { pt3dadd( -167.695, -163.323, -115.518, 1.03 ) }
    dend_46 { pt3dadd( -169.067, -164.477, -117.113, 1.03 ) }
    dend_46 { pt3dadd( -170.098, -165.364, -118.203, 0.66 ) }
    dend_46 { pt3dadd( -171.657, -166.729, -119.749, 0.74 ) }
    dend_46 { pt3dadd( -172.289, -167.298, -120.347, 0.88 ) }
    dend_46 { pt3dadd( -172.949, -167.96, -120.956, 0.52 ) }
    dend_46 { pt3dadd( -173.686, -168.796, -121.582, 0.52 ) }
    dend_46 { pt3dadd( -174.825, -170.223, -122.385, 0.52 ) }
    dend_46 { pt3dadd( -175.617, -171.33, -122.85, 0.74 ) }
    dend_46 { pt3dadd( -176.102, -172.047, -123.08, 0.74 ) }
    dend_46 { pt3dadd( -177.078, -173.549, -123.523, 0.74 ) }
    dend_46 { pt3dadd( -177.395, -174.059, -123.652, 1.03 ) }
    dend_46 { pt3dadd( -177.999, -175.05, -123.889, 0.81 ) }
    dend_46 { pt3dadd( -178.92, -176.665, -124.216, 0.81 ) }
    dend_46 { pt3dadd( -179.767, -178.162, -124.449, 0.81 ) }
    dend_46 { pt3dadd( -180.259, -179.04, -124.596, 0.52 ) }
    dend_46 { pt3dadd( -180.545, -179.556, -124.689, 0.52 ) }
    dend_46 { pt3dadd( -180.878, -180.222, -124.819, 0.52 ) }
    dend_46 { pt3dadd( -181.202, -180.955, -124.99, 0.52 ) }
    dend_46 { pt3dadd( -181.557, -181.743, -125.202, 0.52 ) }
    dend_46 { pt3dadd( -182.256, -183.136, -125.595, 0.59 ) }
    dend_46 { pt3dadd( -182.568, -183.694, -125.76, 0.88 ) }
    dend_46 { pt3dadd( -183.291, -185.026, -126.135, 0.52 ) }
    dend_46 { pt3dadd( -183.854, -186.288, -126.424, 0.52 ) }
    dend_46 { pt3dadd( -184.075, -186.891, -126.54, 0.81 ) }
    dend_46 { pt3dadd( -184.275, -187.489, -126.631, 1.11 ) }
    dend_46 { pt3dadd( -184.67, -188.839, -126.772, 0.74 ) }
    dend_46 { pt3dadd( -185.036, -190.128, -126.888, 0.74 ) }
    dend_46 { pt3dadd( -185.723, -192.625, -127.225, 0.74 ) }
    dend_46 { pt3dadd( -186.099, -193.977, -127.434, 0.74 ) }
    dend_46 { pt3dadd( -186.466, -195.151, -127.649, 0.88 ) }
    dend_46 { pt3dadd( -186.819, -196.135, -127.865, 0.88 ) }
    dend_46 { pt3dadd( -187.311, -197.268, -128.157, 0.74 ) }
    dend_46 { pt3dadd( -188.488, -199.395, -128.779, 0.37 ) }
    dend_46 { pt3dadd( -189.242, -200.531, -129.199, 0.37 ) }
    dend_46 { pt3dadd( -189.971, -201.637, -129.634, 0.37 ) }
    dend_46 { pt3dadd( -190.233, -202.067, -129.815, 0.37 ) }
    dend_46 { pt3dadd( -190.621, -202.717, -130.096, 0.37 ) }
    dend_46 { pt3dadd( -191.039, -203.48, -130.408, 0.37 ) }
    dend_46 { pt3dadd( -191.709, -204.788, -130.891, 0.37 ) }
    dend_46 { pt3dadd( -192.258, -206.032, -131.361, 0.44 ) }
    dend_46 { pt3dadd( -192.659, -206.992, -131.696, 0.44 ) }
    dend_46 { pt3dadd( -192.902, -207.582, -131.874, 1.25 ) }
    dend_46 { pt3dadd( -193.169, -208.205, -132.042, 1.25 ) }
    dend_46 { pt3dadd( -193.659, -209.31, -132.286, 0.44 ) }
    dend_46 { pt3dadd( -194.363, -210.716, -132.501, 0.44 ) }
    dend_46 { pt3dadd( -195.011, -211.882, -132.655, 0.44 ) }
    dend_46 { pt3dadd( -195.473, -212.699, -132.729, 0.44 ) }
    dend_46 { pt3dadd( -195.882, -213.426, -132.776, 0.81 ) }
    dend_46 { pt3dadd( -196.069, -213.755, -132.785, 1.11 ) }
    dend_46 { pt3dadd( -196.492, -214.518, -132.77, 0.66 ) }
    dend_46 { pt3dadd( -196.838, -215.188, -132.753, 0.44 ) }
    dend_46 { pt3dadd( -197.108, -215.807, -132.737, 0.44 ) }
    dend_46 { pt3dadd( -197.401, -216.59, -132.716, 0.44 ) }
    dend_46 { pt3dadd( -197.711, -217.432, -132.699, 0.44 ) }
    dend_46 { pt3dadd( -197.809, -217.681, -132.696, 0.88 ) }
    dend_46 { pt3dadd( -198.018, -218.213, -132.691, 0.88 ) }
    dend_46 { pt3dadd( -198.241, -218.724, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -198.743, -219.78, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -199.758, -221.772, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -200.454, -223.08, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -200.824, -223.758, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -201.616, -225.107, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -202.165, -226.003, -132.688, 0.96 ) }
    dend_46 { pt3dadd( -202.479, -226.513, -132.688, 1.4 ) }
    dend_46 { pt3dadd( -202.892, -227.233, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -203.394, -228.072, -132.747, 0.37 ) }
    dend_46 { pt3dadd( -203.991, -229.065, -132.87, 0.37 ) }
    dend_46 { pt3dadd( -204.671, -230.224, -133.062, 0.37 ) }
    dend_46 { pt3dadd( -205.471, -231.56, -133.321, 0.59 ) }
    dend_46 { pt3dadd( -205.768, -232.047, -133.424, 0.74 ) }
    dend_46 { pt3dadd( -206.895, -233.879, -133.841, 0.44 ) }
    dend_46 { pt3dadd( -207.326, -234.596, -134.024, 0.44 ) }
    dend_46 { pt3dadd( -207.955, -235.641, -134.324, 0.44 ) }
    dend_46 { pt3dadd( -208.277, -236.144, -134.49, 0.96 ) }
    dend_46 { pt3dadd( -208.552, -236.546, -134.621, 1.18 ) }
    dend_46 { pt3dadd( -208.89, -237.028, -134.769, 1.18 ) }
    dend_46 { pt3dadd( -209.855, -238.358, -135.119, 0.44 ) }
    dend_46 { pt3dadd( -211.836, -240.894, -135.786, 0.44 ) }
    dend_46 { pt3dadd( -212.45, -241.663, -135.982, 0.44 ) }
    dend_46 { pt3dadd( -213.736, -243.276, -136.357, 0.44 ) }
    dend_46 { pt3dadd( -213.946, -243.532, -136.408, 0.44 ) }
    dend_46 { pt3dadd( -215.206, -245.032, -136.636, 0.44 ) }
    dend_46 { pt3dadd( -215.881, -245.802, -136.716, 0.44 ) }
    dend_46 { pt3dadd( -216.433, -246.426, -136.735, 0.59 ) }
    dend_46 { pt3dadd( -217.166, -247.286, -136.734, 0.37 ) }
    dend_46 { pt3dadd( -218.322, -248.747, -136.72, 0.37 ) }
    dend_46 { pt3dadd( -219.209, -249.946, -136.7, 0.37 ) }
    dend_46 { pt3dadd( -220.923, -252.532, -136.645, 0.37 ) }
    dend_46 { pt3dadd( -221.81, -253.976, -136.61, 0.66 ) }
    dend_46 { pt3dadd( -222.339, -254.906, -136.585, 0.66 ) }
    dend_46 { pt3dadd( -222.86, -255.953, -136.555, 0.81 ) }
    dend_46 { pt3dadd( -223.392, -257.28, -136.514, 0.81 ) }
    dend_46 { pt3dadd( -223.847, -258.722, -136.565, 0.81 ) }
    dend_46 { pt3dadd( -224.057, -259.597, -136.68, 0.59 ) }
    dend_46 { pt3dadd( -224.454, -261.159, -137.056, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_46 { pt3dadd( -224.709, -262.026, -137.32, 0.59 ) }
    dend_46 { pt3dadd( -224.94, -262.688, -137.559, 0.59 ) }
    dend_46 { pt3dadd( -225.869, -264.887, -138.48, 0.59 ) }
    dend_46 { pt3dadd( -226.48, -266.032, -139.024, 0.59 ) }
    dend_46 { pt3dadd( -227.147, -267.002, -139.517, 0.59 ) }
    dend_46 { pt3dadd( -227.843, -267.748, -139.902, 0.59 ) }
    dend_46 { pt3dadd( -228.527, -268.35, -140.173, 0.59 ) }
    dend_46 { pt3dadd( -229.125, -268.779, -140.314, 0.59 ) }
    dend_46 { pt3dadd( -229.68, -269.09, -140.342, 0.59 ) }
    dend_46 { pt3dadd( -230.527, -269.489, -140.342, 0.44 ) }
    dend_46 { pt3dadd( -231.608, -269.925, -140.342, 0.44 ) }
    dend_46 { pt3dadd( -232.187, -270.154, -140.3, 0.74 ) }
    dend_46 { pt3dadd( -232.747, -270.389, -140.225, 0.29 ) }
    dend_46 { pt3dadd( -233.673, -270.805, -140.069, 0.29 ) }
    dend_46 { pt3dadd( -234.238, -271.074, -139.937, 0.59 ) }
    dend_46 { pt3dadd( -234.919, -271.433, -139.748, 0.96 ) }
    dend_46 { pt3dadd( -236.201, -272.185, -139.359, 0.44 ) }
    dend_46 { pt3dadd( -237.574, -273.058, -138.931, 0.44 ) }
    dend_46 { pt3dadd( -239.121, -274.132, -138.452, 0.44 ) }
    dend_46 { pt3dadd( -240.118, -274.858, -138.168, 0.44 ) }
    dend_46 { pt3dadd( -240.888, -275.431, -137.991, 0.44 ) }
    dend_46 { pt3dadd( -241.576, -275.944, -137.842, 0.88 ) }
    dend_46 { pt3dadd( -242.079, -276.323, -137.768, 0.88 ) }
    dend_46 { pt3dadd( -242.9, -276.989, -137.663, 0.44 ) }
    dend_46 { pt3dadd( -244.071, -277.971, -137.557, 0.44 ) }
    dend_46 { pt3dadd( -245.685, -279.342, -137.453, 0.44 ) }
    dend_46 { pt3dadd( -246.504, -280.043, -137.392, 0.44 ) }
    dend_46 { pt3dadd( -247.447, -280.856, -137.316, 0.44 ) }
    dend_46 { pt3dadd( -248.004, -281.335, -137.215, 0.59 ) }
    dend_46 { pt3dadd( -248.767, -282.029, -137.003, 0.74 ) }
    dend_46 { pt3dadd( -249.489, -282.651, -136.749, 0.74 ) }
    dend_46 { pt3dadd( -250.212, -283.183, -136.467, 0.44 ) }
    dend_46 { pt3dadd( -251.258, -283.78, -135.842, 0.44 ) }
    dend_46 { pt3dadd( -252.771, -284.453, -134.347, 0.44 ) }
    dend_46 { pt3dadd( -253.299, -284.656, -133.693, 0.44 ) }
    dend_46 { pt3dadd( -253.874, -284.847, -132.845, 0.44 ) }
    dend_46 { pt3dadd( -254.338, -284.984, -132.107, 0.66 ) }
    dend_46 { pt3dadd( -256.149, -285.472, -128.907, 0.66 ) }
    dend_46 { pt3dadd( -257.19, -285.754, -126.821, 0.66 ) }
    dend_46 { pt3dadd( -257.461, -285.832, -126.236, 0.66 ) }
    dend_46 { pt3dadd( -258.097, -286.013, -124.757, 0.88 ) }
    dend_46 { pt3dadd( -258.661, -286.264, -123.249, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -33.5822, -68.7715, -46.7392, 0.59 ) }
    dend_45 { pt3dadd( -34.2048, -68.6191, -47.3513, 0.59 ) }
    dend_45 { pt3dadd( -34.7165, -68.4652, -47.9842, 0.59 ) }
    dend_45 { pt3dadd( -35.8471, -68.1636, -49.3857, 0.59 ) }
    dend_45 { pt3dadd( -36.2714, -68.0715, -49.9175, 0.59 ) }
    dend_45 { pt3dadd( -36.9553, -67.9157, -50.7071, 0.59 ) }
    dend_45 { pt3dadd( -37.2745, -67.8436, -51.0508, 0.59 ) }
    dend_45 { pt3dadd( -38.3144, -67.6736, -52.2329, 0.59 ) }
    dend_45 { pt3dadd( -38.7706, -67.6114, -52.7431, 0.59 ) }
    dend_45 { pt3dadd( -39.5006, -67.5192, -53.5231, 0.59 ) }
    dend_45 { pt3dadd( -40.2276, -67.4603, -54.2924, 0.59 ) }
    dend_45 { pt3dadd( -40.4806, -67.4564, -54.5492, 0.59 ) }
    dend_45 { pt3dadd( -41.3834, -67.5549, -55.4982, 0.59 ) }
    dend_45 { pt3dadd( -41.9314, -67.6505, -56.0467, 0.59 ) }
    dend_45 { pt3dadd( -42.6379, -67.787, -56.7777, 0.59 ) }
    dend_45 { pt3dadd( -43.0817, -67.8977, -57.2531, 0.59 ) }
    dend_45 { pt3dadd( -43.6946, -68.1024, -57.9613, 0.59 ) }
    dend_45 { pt3dadd( -44.5787, -68.4153, -58.9773, 0.59 ) }
    dend_45 { pt3dadd( -45.0062, -68.5748, -59.4178, 0.59 ) }
    dend_45 { pt3dadd( -45.3534, -68.729, -59.7657, 0.59 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 62/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 20.783, -104.942, -59.5435, 0.81 ) }
    dend_41 { pt3dadd( 21.9466, -106.111, -61.1106, 0.81 ) }
    dend_41 { pt3dadd( 22.5015, -106.591, -61.6409, 0.37 ) }
    dend_41 { pt3dadd( 22.9395, -106.93, -61.9337, 0.37 ) }
    dend_41 { pt3dadd( 23.4768, -107.331, -62.2284, 1.11 ) }
    dend_41 { pt3dadd( 25.4488, -108.762, -63.1619, 1.55 ) }
    dend_41 { pt3dadd( 26.268, -109.328, -63.4945, 1.18 ) }
    dend_41 { pt3dadd( 27.6739, -110.173, -63.8247, 0.37 ) }
    dend_41 { pt3dadd( 29.1492, -110.989, -64.0616, 0.37 ) }
    dend_41 { pt3dadd( 29.5665, -111.202, -64.111, 0.37 ) }
    dend_41 { pt3dadd( 29.9726, -111.402, -64.134, 1.03 ) }
    dend_41 { pt3dadd( 30.9293, -111.803, -64.1175, 1.47 ) }
    dend_41 { pt3dadd( 32.1381, -112.22, -64.1919, 1.84 ) }
    dend_41 { pt3dadd( 32.4367, -112.302, -64.2303, 1.99 ) }
    dend_41 { pt3dadd( 33.5194, -112.54, -64.3969, 0.52 ) }
    dend_41 { pt3dadd( 35.6691, -112.953, -64.7424, 0.52 ) }
    dend_41 { pt3dadd( 37.3981, -113.237, -65.0651, 0.52 ) }
    dend_41 { pt3dadd( 38.838, -113.43, -65.3538, 0.66 ) }
    dend_41 { pt3dadd( 39.7371, -113.517, -65.5364, 0.88 ) }
    dend_41 { pt3dadd( 40.8385, -113.594, -65.7588, 1.18 ) }
    dend_41 { pt3dadd( 42.2029, -113.656, -66.0534, 1.92 ) }
    dend_41 { pt3dadd( 43.6207, -113.693, -66.4305, 0.59 ) }
    dend_41 { pt3dadd( 44.6382, -113.741, -66.7255, 0.44 ) }
    dend_41 { pt3dadd( 45.5852, -113.775, -67.0001, 0.44 ) }
    dend_41 { pt3dadd( 46.6973, -113.79, -67.3515, 0.44 ) }
    dend_41 { pt3dadd( 47.7445, -113.791, -67.6972, 0.44 ) }
    dend_41 { pt3dadd( 49.0392, -113.795, -68.114, 0.96 ) }
    dend_41 { pt3dadd( 49.5485, -113.809, -68.2614, 1.03 ) }
    dend_41 { pt3dadd( 50.682, -113.876, -68.5703, 0.37 ) }
    dend_41 { pt3dadd( 51.7997, -113.974, -68.8291, 0.37 ) }
    dend_41 { pt3dadd( 52.5247, -114.049, -68.9823, 1.03 ) }
    dend_41 { pt3dadd( 53.5147, -114.163, -69.1568, 1.03 ) }
    dend_41 { pt3dadd( 54.5147, -114.285, -69.3525, 0.37 ) }
    dend_41 { pt3dadd( 55.082, -114.366, -69.4871, 0.37 ) }
    dend_41 { pt3dadd( 55.9673, -114.51, -69.742, 0.37 ) }
    dend_41 { pt3dadd( 57.1526, -114.708, -70.1133, 0.88 ) }
    dend_41 { pt3dadd( 58.1728, -114.856, -70.48, 0.52 ) }
    dend_41 { pt3dadd( 59.5495, -115.048, -71.0146, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_41 { pt3dadd( 60.383, -115.177, -71.3431, 1.11 ) }
    dend_41 { pt3dadd( 61.3028, -115.34, -71.6901, 0.44 ) }
    dend_41 { pt3dadd( 62.8035, -115.623, -72.215, 0.44 ) }
    dend_41 { pt3dadd( 63.9923, -115.846, -72.5742, 0.44 ) }
    dend_41 { pt3dadd( 64.4142, -115.921, -72.6924, 0.44 ) }
    dend_41 { pt3dadd( 65.2766, -116.054, -72.888, 0.44 ) }
    dend_41 { pt3dadd( 66.38, -116.175, -73.1126, 0.44 ) }
    dend_41 { pt3dadd( 66.9789, -116.226, -73.2067, 0.44 ) }
    dend_41 { pt3dadd( 67.9009, -116.274, -73.3494, 0.44 ) }
    dend_41 { pt3dadd( 68.5791, -116.311, -73.4553, 0.44 ) }
    dend_41 { pt3dadd( 69.2481, -116.332, -73.6181, 0.96 ) }
    dend_41 { pt3dadd( 69.7156, -116.339, -73.7604, 1.33 ) }
    dend_41 { pt3dadd( 70.2805, -116.37, -73.9584, 1.33 ) }
    dend_41 { pt3dadd( 71.5473, -116.545, -74.4217, 0.52 ) }
    dend_41 { pt3dadd( 72.5954, -116.772, -74.8, 0.29 ) }
    dend_41 { pt3dadd( 73.8759, -117.091, -75.3807, 0.29 ) }
    dend_41 { pt3dadd( 74.2946, -117.205, -75.5931, 0.29 ) }
    dend_41 { pt3dadd( 74.8445, -117.364, -75.8746, 0.59 ) }
    dend_41 { pt3dadd( 75.8793, -117.667, -76.3761, 0.59 ) }
    dend_41 { pt3dadd( 76.7834, -117.958, -76.7639, 0.59 ) }
    dend_41 { pt3dadd( 78.5919, -118.608, -77.5238, 1.03 ) }
    dend_41 { pt3dadd( 79.129, -118.814, -77.7425, 1.03 ) }
    dend_41 { pt3dadd( 79.7957, -119.052, -78.0141, 0.37 ) }
    dend_41 { pt3dadd( 80.7596, -119.351, -78.3918, 0.37 ) }
    dend_41 { pt3dadd( 81.4166, -119.519, -78.6595, 0.37 ) }
    dend_41 { pt3dadd( 82.5113, -119.775, -79.0994, 0.37 ) }
    dend_41 { pt3dadd( 82.9522, -119.884, -79.2454, 0.37 ) }
    dend_41 { pt3dadd( 83.5165, -120.003, -79.4798, 0.37 ) }
    dend_41 { pt3dadd( 83.8747, -120.07, -79.6458, 0.74 ) }
    dend_41 { pt3dadd( 85.0908, -120.247, -80.2476, 0.29 ) }
    dend_41 { pt3dadd( 86.0777, -120.372, -80.7511, 0.29 ) }
    dend_41 { pt3dadd( 87.1332, -120.535, -81.2513, 0.29 ) }
    dend_41 { pt3dadd( 88.1889, -120.734, -81.7312, 0.74 ) }
    dend_41 { pt3dadd( 88.7585, -120.859, -81.9803, 0.96 ) }
    dend_41 { pt3dadd( 89.8288, -121.132, -82.4064, 1.11 ) }
    dend_41 { pt3dadd( 90.8288, -121.399, -82.7483, 0.44 ) }
    dend_41 { pt3dadd( 92.2072, -121.748, -83.1737, 0.44 ) }
    dend_41 { pt3dadd( 92.9887, -121.947, -83.3943, 0.44 ) }
    dend_41 { pt3dadd( 94.2979, -122.284, -83.6954, 0.44 ) }
    dend_41 { pt3dadd( 95.218, -122.516, -83.8826, 0.44 ) }
    dend_41 { pt3dadd( 95.947, -122.686, -83.9988, 0.44 ) }
    dend_41 { pt3dadd( 96.5235, -122.794, -84.0727, 0.44 ) }
    dend_41 { pt3dadd( 97.9531, -122.985, -84.2414, 0.44 ) }
    dend_41 { pt3dadd( 98.8719, -123.095, -84.3259, 0.59 ) }
    dend_41 { pt3dadd( 99.2656, -123.135, -84.3484, 0.59 ) }
    dend_41 { pt3dadd( 99.8873, -123.203, -84.3759, 0.59 ) }
    dend_41 { pt3dadd( 100.937, -123.351, -84.419, 0.59 ) }
    dend_41 { pt3dadd( 101.797, -123.484, -84.4474, 0.59 ) }
    dend_41 { pt3dadd( 102.696, -123.617, -84.4644, 0.66 ) }
    dend_41 { pt3dadd( 103.356, -123.713, -84.4603, 0.81 ) }
    dend_41 { pt3dadd( 104.502, -123.904, -84.4285, 0.81 ) }
    dend_41 { pt3dadd( 105.466, -124.109, -84.3835, 0.37 ) }
    dend_41 { pt3dadd( 106.106, -124.28, -84.3433, 0.37 ) }
    dend_41 { pt3dadd( 106.636, -124.448, -84.3216, 0.37 ) }
    dend_41 { pt3dadd( 107.551, -124.773, -84.3029, 0.37 ) }
    dend_41 { pt3dadd( 108.382, -125.091, -84.3374, 0.37 ) }
    dend_41 { pt3dadd( 109.466, -125.538, -84.4353, 0.88 ) }
    dend_41 { pt3dadd( 110.162, -125.83, -84.5236, 1.18 ) }
    dend_41 { pt3dadd( 111.64, -126.436, -84.7686, 0.37 ) }
    dend_41 { pt3dadd( 112.584, -126.809, -84.9568, 0.37 ) }
    dend_41 { pt3dadd( 113.709, -127.199, -85.2711, 0.66 ) }
    dend_41 { pt3dadd( 114.144, -127.33, -85.4062, 0.44 ) }
    dend_41 { pt3dadd( 114.809, -127.504, -85.6303, 0.44 ) }
    dend_41 { pt3dadd( 115.238, -127.606, -85.7731, 0.44 ) }
    dend_41 { pt3dadd( 116.044, -127.783, -86.018, 0.44 ) }
    dend_41 { pt3dadd( 117.504, -128.108, -86.4086, 1.11 ) }
    dend_41 { pt3dadd( 118.349, -128.321, -86.639, 1.4 ) }
    dend_41 { pt3dadd( 119.16, -128.546, -86.8807, 0.81 ) }
    dend_41 { pt3dadd( 119.859, -128.757, -87.1185, 0.59 ) }
    dend_41 { pt3dadd( 120.643, -129.037, -87.4326, 0.59 ) }
    dend_41 { pt3dadd( 121.545, -129.435, -87.8646, 0.59 ) }
    dend_41 { pt3dadd( 122.535, -129.992, -88.6075, 0.59 ) }
    dend_41 { pt3dadd( 122.922, -130.257, -88.999, 0.59 ) }
    dend_41 { pt3dadd( 123.477, -130.743, -89.6661, 0.74 ) }
    dend_41 { pt3dadd( 124.162, -131.515, -90.677, 0.88 ) }
    dend_41 { pt3dadd( 124.574, -132.1, -91.3867, 1.03 ) }
    dend_41 { pt3dadd( 125.659, -134.033, -93.4437, 0.81 ) }
    dend_41 { pt3dadd( 125.945, -134.634, -93.9802, 0.81 ) }
    dend_41 { pt3dadd( 126.439, -135.745, -94.8205, 0.81 ) }
    dend_41 { pt3dadd( 126.925, -136.819, -95.5268, 1.4 ) }
    dend_41 { pt3dadd( 127.213, -137.403, -95.8609, 1.77 ) }
    dend_41 { pt3dadd( 127.747, -138.39, -96.3208, 1.25 ) }
    dend_41 { pt3dadd( 128.218, -139.141, -96.6119, 0.96 ) }
    dend_41 { pt3dadd( 128.925, -140.068, -97.1487, 0.66 ) }
    dend_41 { pt3dadd( 129.865, -141.049, -97.9861, 0.22 ) }
    dend_41 { pt3dadd( 130.039, -141.203, -98.1603, 0.22 ) }
    dend_41 { pt3dadd( 130.378, -141.486, -98.5327, 0.96 ) }
    dend_41 { pt3dadd( 131.261, -142.221, -99.5196, 1.55 ) }
    dend_41 { pt3dadd( 132.574, -143.349, -100.983, 1.84 ) }
    dend_41 { pt3dadd( 133.631, -144.305, -102.052, 0.88 ) }
    dend_41 { pt3dadd( 134.398, -145.016, -102.687, 0.88 ) }
    dend_41 { pt3dadd( 135.198, -145.755, -103.254, 0.88 ) }
    dend_41 { pt3dadd( 136.161, -146.633, -103.787, 0.37 ) }
    dend_41 { pt3dadd( 136.599, -147.022, -103.937, 0.37 ) }
    dend_41 { pt3dadd( 138.04, -148.206, -104.043, 0.37 ) }
    dend_41 { pt3dadd( 138.892, -148.819, -103.978, 0.37 ) }
    dend_41 { pt3dadd( 139.526, -149.219, -103.892, 0.37 ) }
    dend_41 { pt3dadd( 140.499, -149.76, -103.753, 0.66 ) }
    dend_41 { pt3dadd( 141.44, -150.242, -103.618, 0.66 ) }
    dend_41 { pt3dadd( 143.266, -151.163, -103.333, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_41 { pt3dadd( 144.608, -151.825, -103.107, 0.37 ) }
    dend_41 { pt3dadd( 145.865, -152.46, -102.92, 0.37 ) }
    dend_41 { pt3dadd( 146.506, -152.795, -102.84, 0.59 ) }
    dend_41 { pt3dadd( 147.088, -153.115, -102.799, 0.81 ) }
    dend_41 { pt3dadd( 147.808, -153.534, -102.824, 1.11 ) }
    dend_41 { pt3dadd( 148.45, -153.929, -102.926, 0.59 ) }
    dend_41 { pt3dadd( 149.546, -154.643, -103.138, 0.59 ) }
    dend_41 { pt3dadd( 150.443, -155.26, -103.327, 0.59 ) }
    dend_41 { pt3dadd( 151.233, -155.816, -103.49, 0.59 ) }
    dend_41 { pt3dadd( 152.233, -156.551, -103.682, 0.52 ) }
    dend_41 { pt3dadd( 153.421, -157.453, -103.881, 0.52 ) }
    dend_41 { pt3dadd( 154.113, -157.995, -103.979, 0.52 ) }
    dend_41 { pt3dadd( 155.55, -159.116, -104.207, 0.52 ) }
    dend_41 { pt3dadd( 156.582, -159.93, -104.394, 0.52 ) }
    dend_41 { pt3dadd( 157.616, -160.762, -104.589, 0.52 ) }
    dend_41 { pt3dadd( 158.893, -161.858, -104.93, 0.81 ) }
    dend_41 { pt3dadd( 159.268, -162.203, -105.067, 0.96 ) }
    dend_41 { pt3dadd( 160.412, -163.321, -105.578, 0.59 ) }
    dend_41 { pt3dadd( 160.981, -163.914, -105.86, 0.81 ) }
    dend_41 { pt3dadd( 161.678, -164.657, -106.204, 0.81 ) }
    dend_41 { pt3dadd( 163.379, -166.426, -106.973, 0.52 ) }
    dend_41 { pt3dadd( 164.351, -167.41, -107.332, 0.52 ) }
    dend_41 { pt3dadd( 164.794, -167.837, -107.452, 0.52 ) }
    dend_41 { pt3dadd( 166.22, -169.121, -107.676, 0.52 ) }
    dend_41 { pt3dadd( 167.428, -170.12, -107.792, 0.52 ) }
    dend_41 { pt3dadd( 168.417, -170.908, -107.816, 0.52 ) }
    dend_41 { pt3dadd( 169.279, -171.562, -107.76, 0.44 ) }
    dend_41 { pt3dadd( 170.059, -172.163, -107.708, 0.44 ) }
    dend_41 { pt3dadd( 171.086, -173.02, -107.64, 0.74 ) }
    dend_41 { pt3dadd( 171.42, -173.341, -107.609, 0.74 ) }
    dend_41 { pt3dadd( 172.402, -174.489, -107.496, 0.74 ) }
    dend_41 { pt3dadd( 172.791, -175.023, -107.446, 0.74 ) }
    dend_41 { pt3dadd( 173.719, -176.448, -107.316, 0.74 ) }
    dend_41 { pt3dadd( 174.301, -177.4, -107.215, 0.74 ) }
    dend_41 { pt3dadd( 174.858, -178.315, -107.107, 0.74 ) }
    dend_41 { pt3dadd( 175.433, -179.171, -106.997, 0.74 ) }
    dend_41 { pt3dadd( 175.984, -179.888, -106.898, 0.44 ) }
    dend_41 { pt3dadd( 176.409, -180.362, -106.834, 0.52 ) }
    dend_41 { pt3dadd( 177.035, -180.903, -106.767, 0.52 ) }
    dend_41 { pt3dadd( 177.467, -181.2, -106.746, 0.29 ) }
    dend_41 { pt3dadd( 178.352, -181.723, -106.746, 0.29 ) }
    dend_41 { pt3dadd( 178.95, -182.037, -106.754, 0.37 ) }
    dend_41 { pt3dadd( 180.074, -182.573, -106.784, 0.37 ) }
    dend_41 { pt3dadd( 180.866, -182.934, -106.767, 0.66 ) }
    dend_41 { pt3dadd( 181.832, -183.382, -106.661, 0.37 ) }
    dend_41 { pt3dadd( 182.616, -183.757, -106.521, 0.37 ) }
    dend_41 { pt3dadd( 183.029, -183.967, -106.41, 0.52 ) }
    dend_41 { pt3dadd( 183.563, -184.26, -106.201, 0.66 ) }
    dend_41 { pt3dadd( 184.859, -185.033, -105.58, 0.29 ) }
    dend_41 { pt3dadd( 185.956, -185.737, -105.003, 0.29 ) }
    dend_41 { pt3dadd( 186.521, -186.112, -104.7, 0.29 ) }
    dend_41 { pt3dadd( 187.688, -186.942, -104.09, 0.29 ) }
    dend_41 { pt3dadd( 188.581, -187.656, -103.552, 0.37 ) }
    dend_41 { pt3dadd( 189.329, -188.331, -103.062, 0.37 ) }
    dend_41 { pt3dadd( 189.779, -188.793, -102.718, 0.37 ) }
    dend_41 { pt3dadd( 190.371, -189.49, -102.204, 0.59 ) }
    dend_41 { pt3dadd( 190.716, -189.935, -101.855, 0.59 ) }
    dend_41 { pt3dadd( 192.036, -191.798, -100.398, 0.59 ) }
    dend_41 { pt3dadd( 192.306, -192.219, -100.072, 0.59 ) }
    dend_41 { pt3dadd( 193.012, -193.441, -99.1369, 0.37 ) }
    dend_41 { pt3dadd( 193.825, -194.848, -98.0302, 0.37 ) }
    dend_41 { pt3dadd( 194.563, -196.164, -96.994, 0.37 ) }
    dend_41 { pt3dadd( 194.825, -196.625, -96.6421, 0.37 ) }
    dend_41 { pt3dadd( 195.681, -198.083, -95.6479, 0.37 ) }
    dend_41 { pt3dadd( 196.443, -199.326, -94.7871, 0.37 ) }
    dend_41 { pt3dadd( 197.235, -200.601, -93.9449, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.783, -104.942, -59.5435, 0.88 ) }
    dend_38 { pt3dadd( 19.6154, -106.092, -60.2925, 0.88 ) }
    dend_38 { pt3dadd( 19.0859, -106.619, -60.5858, 0.74 ) }
    dend_38 { pt3dadd( 18.3176, -107.402, -60.9831, 0.74 ) }
    dend_38 { pt3dadd( 17.0674, -108.696, -61.5795, 0.74 ) }
    dend_38 { pt3dadd( 15.8233, -110.012, -62.1593, 0.52 ) }
    dend_38 { pt3dadd( 14.4079, -111.538, -62.8017, 0.52 ) }
    dend_38 { pt3dadd( 13.3057, -112.823, -63.3569, 0.52 ) }
    dend_38 { pt3dadd( 12.4254, -113.917, -63.8231, 0.37 ) }
    dend_38 { pt3dadd( 11.7525, -114.847, -64.2156, 0.37 ) }
    dend_38 { pt3dadd( 11.1512, -115.77, -64.5703, 1.47 ) }
    dend_38 { pt3dadd( 10.8334, -116.325, -64.7744, 1.47 ) }
    dend_38 { pt3dadd( 9.98379, -118.062, -65.4801, 0.37 ) }
    dend_38 { pt3dadd( 9.59615, -118.967, -65.8507, 0.37 ) }
    dend_38 { pt3dadd( 8.94938, -120.701, -66.5805, 0.37 ) }
    dend_38 { pt3dadd( 8.66788, -121.528, -66.9312, 0.37 ) }
    dend_38 { pt3dadd( 8.47245, -122.087, -67.1569, 1.11 ) }
    dend_38 { pt3dadd( 8.1705, -122.901, -67.4719, 0.44 ) }
    dend_38 { pt3dadd( 7.80762, -123.767, -67.759, 0.44 ) }
    dend_38 { pt3dadd( 7.0761, -125.3, -68.2448, 0.44 ) }
    dend_38 { pt3dadd( 6.81802, -125.745, -68.3648, 0.44 ) }
    dend_38 { pt3dadd( 6.34306, -126.494, -68.5521, 0.44 ) }
    dend_38 { pt3dadd( 5.88253, -127.214, -68.7058, 0.96 ) }
    dend_38 { pt3dadd( 5.24842, -128.139, -68.8744, 0.96 ) }
    dend_38 { pt3dadd( 4.59403, -129.02, -69.0039, 0.37 ) }
    dend_38 { pt3dadd( 3.85755, -129.923, -69.1987, 0.37 ) }
    dend_38 { pt3dadd( 3.37357, -130.491, -69.3662, 0.37 ) }
    dend_38 { pt3dadd( 2.85522, -131.065, -69.5686, 1.03 ) }
    dend_38 { pt3dadd( 1.49803, -132.406, -70.2345, 0.37 ) }
    dend_38 { pt3dadd( 0.623248, -133.195, -70.7289, 0.37 ) }
    dend_38 { pt3dadd( -1.06542, -134.683, -71.8648, 0.74 ) }
    dend_38 { pt3dadd( -1.79026, -135.318, -72.3798, 1.25 ) }
    dend_38 { pt3dadd( -2.41105, -135.875, -72.84, 0.81 ) }
    dend_38 { pt3dadd( -3.74986, -137.151, -73.9307, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_38 { pt3dadd( -4.08656, -137.511, -74.2287, 0.81 ) }
    dend_38 { pt3dadd( -5.16114, -138.757, -75.1502, 0.15 ) }
    dend_38 { pt3dadd( -6.26949, -140.158, -76.0098, 0.15 ) }
    dend_38 { pt3dadd( -7.22007, -141.419, -76.7254, 0.29 ) }
    dend_38 { pt3dadd( -8.05087, -142.548, -77.2858, 1.62 ) }
    dend_38 { pt3dadd( -8.7078, -143.41, -77.633, 0.52 ) }
    dend_38 { pt3dadd( -9.82546, -144.767, -78.133, 0.44 ) }
    dend_38 { pt3dadd( -10.342, -145.35, -78.3203, 0.44 ) }
    dend_38 { pt3dadd( -10.7003, -145.737, -78.4375, 0.44 ) }
    dend_38 { pt3dadd( -11.8902, -146.904, -78.6844, 0.44 ) }
    dend_38 { pt3dadd( -12.7115, -147.64, -78.7702, 0.59 ) }
    dend_38 { pt3dadd( -13.239, -148.081, -78.8248, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_2 (entry count 12/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.82764, -50.0277, -10.9289, 0.74 ) }
    dend_28 { pt3dadd( 7.30185, -52.4506, -10.6939, 0.74 ) }
    dend_28 { pt3dadd( 7.52733, -53.5152, -10.6211, 0.74 ) }
    dend_28 { pt3dadd( 7.76762, -54.382, -10.5775, 0.88 ) }
    dend_28 { pt3dadd( 8.27218, -55.8893, -10.5296, 0.88 ) }
    dend_28 { pt3dadd( 8.88336, -57.5239, -10.4957, 1.03 ) }
    dend_28 { pt3dadd( 9.53443, -59.1159, -10.4364, 1.03 ) }
    dend_28 { pt3dadd( 10.0214, -60.3399, -10.4251, 1.03 ) }
    dend_28 { pt3dadd( 10.7944, -62.2815, -10.2835, 0.81 ) }
    dend_28 { pt3dadd( 11.3216, -63.5501, -10.0533, 0.81 ) }
    dend_28 { pt3dadd( 11.724, -64.5057, -9.74934, 1.03 ) }
    dend_28 { pt3dadd( 12.3188, -65.964, -9.10428, 1.18 ) }
    dend_28 { pt3dadd( 12.6811, -66.9283, -8.5537, 1.18 ) }
    dend_28 { pt3dadd( 13.1937, -68.5993, -7.47009, 1.18 ) }
    dend_28 { pt3dadd( 13.5752, -70.2498, -6.25998, 1.03 ) }
    dend_28 { pt3dadd( 13.7888, -71.3687, -5.43808, 0.88 ) }
    dend_28 { pt3dadd( 13.9717, -72.3798, -4.72355, 0.88 ) }
    dend_28 { pt3dadd( 14.1568, -73.3508, -4.07102, 0.88 ) }
    dend_28 { pt3dadd( 14.3574, -74.2013, -3.5456, 0.88 ) }
    dend_28 { pt3dadd( 14.7543, -75.749, -2.7674, 0.96 ) }
    dend_28 { pt3dadd( 15.0769, -77.0712, -2.19463, 0.96 ) }
    dend_28 { pt3dadd( 15.4219, -78.6544, -1.6009, 0.96 ) }
    dend_28 { pt3dadd( 15.7172, -80.3071, -1.07348, 0.96 ) }
    dend_28 { pt3dadd( 15.9046, -81.3506, -0.830621, 0.96 ) }
    dend_28 { pt3dadd( 16.1566, -82.6321, -0.613678, 0.96 ) }
    dend_28 { pt3dadd( 16.4186, -83.6673, -0.496222, 0.96 ) }
    dend_28 { pt3dadd( 16.8647, -85.0742, -0.22531, 0.96 ) }
    dend_28 { pt3dadd( 17.2319, -86.0498, 0.0959727, 0.96 ) }
    dend_28 { pt3dadd( 17.9525, -87.8912, 0.910475, 0.96 ) }
    dend_28 { pt3dadd( 18.3014, -88.8552, 1.437, 0.96 ) }
    dend_28 { pt3dadd( 18.8624, -90.5563, 2.50324, 0.96 ) }
    dend_28 { pt3dadd( 19.718, -93.2079, 4.309, 0.96 ) }
    dend_28 { pt3dadd( 20.3673, -95.2465, 5.78044, 0.81 ) }
    dend_28 { pt3dadd( 20.6358, -96.1617, 6.46852, 0.66 ) }
    dend_28 { pt3dadd( 20.8703, -97.2273, 7.28665, 0.66 ) }
    dend_28 { pt3dadd( 20.9753, -98.0136, 7.82568, 0.66 ) }
    dend_28 { pt3dadd( 20.9808, -98.6261, 8.13042, 0.66 ) }
    dend_28 { pt3dadd( 20.9631, -99.5726, 8.35273, 0.74 ) }
    dend_28 { pt3dadd( 21.0015, -100.673, 8.52423, 1.03 ) }
    dend_28 { pt3dadd( 21.0559, -101.069, 8.59902, 1.03 ) }
    dend_28 { pt3dadd( 21.2654, -102.008, 8.78807, 0.81 ) }
    dend_28 { pt3dadd( 21.4455, -102.738, 8.9376, 0.81 ) }
    dend_28 { pt3dadd( 21.6554, -103.647, 9.12483, 0.59 ) }
    dend_28 { pt3dadd( 21.9291, -104.911, 9.37369, 0.59 ) }
    dend_28 { pt3dadd( 22.0755, -105.591, 9.48924, 0.59 ) }
    dend_28 { pt3dadd( 22.353, -106.638, 9.68101, 0.88 ) }
    dend_28 { pt3dadd( 22.4066, -106.789, 9.71322, 1.03 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.82764, -50.0277, -10.9289, 2.28 ) }
    dend_3 { pt3dadd( 7.2644, -52.7532, -11.4923, 2.28 ) }
    dend_3 { pt3dadd( 7.51877, -54.3405, -11.8205, 2.14 ) }
    dend_3 { pt3dadd( 7.8181, -56.2083, -12.2067, 2.14 ) }
    dend_3 { pt3dadd( 8.13375, -58.178, -12.6139, 2.14 ) }
    dend_3 { pt3dadd( 8.51052, -60.5291, -13.0999, 2.36 ) }
    dend_3 { pt3dadd( 8.63591, -61.3115, -13.2617, 2.87 ) }
    // Section: dend_81, id: dend_81, parent: dend_67 (entry count 66/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -19.6999, 39.9985, -0.467042, 0.59 ) }
    dend_81 { pt3dadd( -20.847, 40.3806, -1.40308, 0.59 ) }
    dend_81 { pt3dadd( -21.3395, 40.5669, -1.7557, 0.59 ) }
    dend_81 { pt3dadd( -22.3488, 40.9392, -2.63975, 0.37 ) }
    dend_81 { pt3dadd( -22.774, 41.0987, -3.02429, 0.37 ) }
    dend_81 { pt3dadd( -23.7887, 41.4938, -3.9287, 0.59 ) }
    dend_81 { pt3dadd( -24.374, 41.7209, -4.45419, 0.59 ) }
    dend_81 { pt3dadd( -25.229, 42.1184, -5.21633, 0.59 ) }
    dend_81 { pt3dadd( -26.8885, 42.8822, -6.62264, 0.59 ) }
    dend_81 { pt3dadd( -27.5405, 43.1567, -7.11547, 0.74 ) }
    dend_81 { pt3dadd( -27.9472, 43.3101, -7.39188, 0.74 ) }
    dend_81 { pt3dadd( -29.0593, 43.6833, -8.0238, 0.74 ) }
    dend_81 { pt3dadd( -29.5745, 43.8539, -8.28555, 0.74 ) }
    dend_81 { pt3dadd( -30.5526, 44.2289, -8.66422, 0.29 ) }
    dend_81 { pt3dadd( -31.1962, 44.5011, -8.82535, 0.52 ) }
    dend_81 { pt3dadd( -31.6178, 44.6924, -8.92298, 1.03 ) }
    dend_81 { pt3dadd( -32.0504, 44.9013, -9.01287, 1.03 ) }
    dend_81 { pt3dadd( -33.3999, 45.5754, -9.2333, 0.29 ) }
    dend_81 { pt3dadd( -33.8476, 45.822, -9.33287, 0.66 ) }
    dend_81 { pt3dadd( -34.4613, 46.209, -9.4984, 0.52 ) }
    dend_81 { pt3dadd( -35.1797, 46.6954, -9.70366, 0.52 ) }
    dend_81 { pt3dadd( -35.6663, 47.0414, -9.88202, 0.22 ) }
    dend_81 { pt3dadd( -36.2307, 47.449, -10.1198, 0.22 ) }
    dend_81 { pt3dadd( -37.0715, 48.0367, -10.4962, 0.22 ) }
    dend_81 { pt3dadd( -37.638, 48.4043, -10.7913, 0.22 ) }
    dend_81 { pt3dadd( -38.0522, 48.6698, -11.0312, 0.22 ) }
    dend_81 { pt3dadd( -39.1634, 49.3923, -11.7164, 0.52 ) }
    dend_81 { pt3dadd( -39.4901, 49.6179, -11.9255, 1.18 ) }
    dend_81 { pt3dadd( -39.8733, 49.8924, -12.1656, 1.18 ) }
    dend_81 { pt3dadd( -40.8306, 50.5219, -12.7293, 0.37 ) }
    dend_81 { pt3dadd( -41.0644, 50.671, -12.8676, 0.37 ) }
    dend_81 { pt3dadd( -41.7544, 51.0886, -13.2406, 0.37 ) }
    dend_81 { pt3dadd( -42.5085, 51.4944, -13.5599, 0.37 ) }
    dend_81 { pt3dadd( -42.8314, 51.6373, -13.6814, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_81 { pt3dadd( -43.49, 51.8731, -13.8779, 0.59 ) }
    dend_81 { pt3dadd( -43.9154, 51.9905, -13.9745, 0.59 ) }
    dend_81 { pt3dadd( -44.3631, 52.094, -14.1182, 0.29 ) }
    dend_81 { pt3dadd( -44.9948, 52.2081, -14.3818, 0.29 ) }
    dend_81 { pt3dadd( -45.602, 52.326, -14.6634, 0.29 ) }
    dend_81 { pt3dadd( -46.2592, 52.5126, -15.0038, 0.29 ) }
    dend_81 { pt3dadd( -46.9246, 52.7781, -15.4134, 0.59 ) }
    dend_81 { pt3dadd( -48.1045, 53.3546, -16.258, 0.81 ) }
    dend_81 { pt3dadd( -48.6737, 53.6656, -16.7061, 0.22 ) }
    dend_81 { pt3dadd( -49.1023, 53.921, -17.0896, 0.22 ) }
    dend_81 { pt3dadd( -49.6075, 54.2213, -17.5442, 0.22 ) }
    dend_81 { pt3dadd( -50.2827, 54.6315, -18.1813, 0.29 ) }
    dend_81 { pt3dadd( -50.4444, 54.7266, -18.3626, 0.52 ) }
    dend_81 { pt3dadd( -50.8113, 54.9074, -18.7717, 0.52 ) }
    dend_81 { pt3dadd( -51.2932, 55.0987, -19.3321, 0.52 ) }
    dend_81 { pt3dadd( -51.9154, 55.2948, -20.0437, 0.52 ) }
    dend_81 { pt3dadd( -52.6334, 55.4667, -20.8168, 0.52 ) }
    dend_81 { pt3dadd( -54.1754, 55.8397, -22.4503, 0.52 ) }
    dend_81 { pt3dadd( -54.7123, 55.9692, -22.9943, 1.18 ) }
    dend_81 { pt3dadd( -55.4873, 56.1437, -23.6873, 1.92 ) }
    dend_81 { pt3dadd( -55.9753, 56.2346, -24.0441, 1.92 ) }
    dend_81 { pt3dadd( -57.0018, 56.3826, -24.732, 0.37 ) }
    dend_81 { pt3dadd( -57.6173, 56.4393, -25.0524, 0.22 ) }
    dend_81 { pt3dadd( -58.4314, 56.5034, -25.4553, 0.22 ) }
    dend_81 { pt3dadd( -59.5725, 56.5984, -26.0733, 0.22 ) }
    dend_81 { pt3dadd( -60.3212, 56.6652, -26.4715, 0.22 ) }
    dend_81 { pt3dadd( -61.2622, 56.7502, -26.9648, 0.81 ) }
    dend_81 { pt3dadd( -62.2083, 56.8422, -27.4153, 0.81 ) }
    dend_81 { pt3dadd( -63.9684, 57.0235, -28.1765, 0.66 ) }
    dend_81 { pt3dadd( -64.8742, 57.1338, -28.5258, 0.66 ) }
    dend_81 { pt3dadd( -65.4824, 57.2145, -28.7081, 0.37 ) }
    dend_81 { pt3dadd( -66.2109, 57.3227, -28.8778, 0.37 ) }
    dend_81 { pt3dadd( -67.1538, 57.4685, -29.0133, 0.29 ) }
    dend_81 { pt3dadd( -67.7548, 57.5542, -29.0682, 0.44 ) }
    dend_81 { pt3dadd( -68.6405, 57.6723, -29.0854, 0.44 ) }
    dend_81 { pt3dadd( -69.5829, 57.7877, -29.1304, 0.44 ) }
    dend_81 { pt3dadd( -70.6716, 57.9165, -29.2093, 1.25 ) }
    dend_81 { pt3dadd( -71.2675, 57.9954, -29.2611, 1.25 ) }
    dend_81 { pt3dadd( -71.9336, 58.0863, -29.3591, 0.29 ) }
    dend_81 { pt3dadd( -73.0603, 58.261, -29.6608, 0.29 ) }
    dend_81 { pt3dadd( -73.6305, 58.363, -29.8687, 1.4 ) }
    dend_81 { pt3dadd( -74.3056, 58.4797, -30.1429, 1.99 ) }
    dend_81 { pt3dadd( -74.719, 58.5572, -30.3099, 1.99 ) }
    dend_81 { pt3dadd( -76.1799, 58.866, -31.0037, 0.44 ) }
    dend_81 { pt3dadd( -77.6081, 59.2038, -31.7446, 0.59 ) }
    dend_81 { pt3dadd( -77.6081, 59.2038, -31.7446, 0.59 ) }
    dend_81 { pt3dadd( -78.4051, 59.3795, -32.1507, 0.29 ) }
    dend_81 { pt3dadd( -79.4783, 59.6308, -32.5976, 0.29 ) }
    dend_81 { pt3dadd( -80.5433, 59.8815, -32.9022, 0.74 ) }
    dend_81 { pt3dadd( -81.2119, 60.0367, -33.0015, 1.03 ) }
    dend_81 { pt3dadd( -81.6901, 60.1297, -33.03, 1.03 ) }
    dend_81 { pt3dadd( -82.4112, 60.2455, -33.0621, 0.22 ) }
    dend_81 { pt3dadd( -83.95, 60.4432, -33.1623, 0.22 ) }
    dend_81 { pt3dadd( -84.8209, 60.5579, -33.2247, 0.22 ) }
    dend_81 { pt3dadd( -85.5598, 60.6559, -33.2744, 0.29 ) }
    dend_81 { pt3dadd( -86.6009, 60.7796, -33.3689, 1.84 ) }
    dend_81 { pt3dadd( -87.6244, 60.8685, -33.5284, 1.84 ) }
    dend_81 { pt3dadd( -88.9433, 60.9368, -33.8073, 0.29 ) }
    dend_81 { pt3dadd( -90.7942, 60.9412, -34.2794, 0.29 ) }
    dend_81 { pt3dadd( -91.4252, 60.9307, -34.4645, 0.29 ) }
    dend_81 { pt3dadd( -92.1283, 60.9138, -34.7048, 1.11 ) }
    dend_81 { pt3dadd( -93.5954, 60.8722, -35.2503, 0.29 ) }
    dend_81 { pt3dadd( -94.4374, 60.8466, -35.615, 0.29 ) }
    dend_81 { pt3dadd( -95.2201, 60.8308, -35.974, 0.37 ) }
    dend_81 { pt3dadd( -95.8637, 60.844, -36.3089, 0.37 ) }
    dend_81 { pt3dadd( -96.7219, 60.9453, -36.7515, 0.37 ) }
    dend_81 { pt3dadd( -98.3658, 61.2912, -37.5958, 0.37 ) }
    dend_81 { pt3dadd( -99.6637, 61.6533, -38.2487, 1.69 ) }
    dend_81 { pt3dadd( -100.373, 61.8692, -38.6064, 1.69 ) }
    dend_81 { pt3dadd( -101.67, 62.3006, -39.2544, 0.37 ) }
    dend_81 { pt3dadd( -102.785, 62.6912, -39.797, 0.37 ) }
    dend_81 { pt3dadd( -104.033, 63.1269, -40.4012, 0.37 ) }
    dend_81 { pt3dadd( -104.89, 63.4317, -40.8232, 0.37 ) }
    dend_81 { pt3dadd( -105.611, 63.6715, -41.163, 0.37 ) }
    dend_81 { pt3dadd( -106.38, 63.9023, -41.5295, 0.37 ) }
    dend_81 { pt3dadd( -106.907, 64.0493, -41.79, 1.03 ) }
    dend_81 { pt3dadd( -107.973, 64.3347, -42.3672, 0.44 ) }
    dend_81 { pt3dadd( -109.33, 64.6844, -43.1495, 0.44 ) }
    dend_81 { pt3dadd( -110.011, 64.8525, -43.5537, 0.59 ) }
    dend_81 { pt3dadd( -110.528, 64.9869, -43.8946, 0.59 ) }
    dend_81 { pt3dadd( -111.471, 65.2223, -44.5333, 1.03 ) }
    dend_81 { pt3dadd( -112.325, 65.42, -45.1739, 1.03 ) }
    dend_81 { pt3dadd( -113.056, 65.5722, -45.7717, 0.37 ) }
    dend_81 { pt3dadd( -113.721, 65.6731, -46.3433, 0.37 ) }
    dend_81 { pt3dadd( -114.843, 65.7948, -47.3052, 0.37 ) }
    dend_81 { pt3dadd( -115.267, 65.828, -47.6862, 0.37 ) }
    dend_81 { pt3dadd( -116.412, 65.9145, -48.6918, 1.33 ) }
    dend_81 { pt3dadd( -117.344, 66.0179, -49.5319, 0.37 ) }
    dend_81 { pt3dadd( -117.777, 66.0959, -49.9335, 0.37 ) }
    dend_81 { pt3dadd( -118.012, 66.1578, -50.149, 0.37 ) }
    dend_81 { pt3dadd( -118.886, 66.4326, -50.9221, 0.37 ) }
    dend_81 { pt3dadd( -119.472, 66.6718, -51.427, 0.37 ) }
    dend_81 { pt3dadd( -120.321, 67.0795, -52.1851, 0.37 ) }
    dend_81 { pt3dadd( -121.05, 67.4776, -52.8583, 0.37 ) }
    dend_81 { pt3dadd( -121.71, 67.8734, -53.4774, 0.88 ) }
    dend_81 { pt3dadd( -122.754, 68.5208, -54.3634, 0.22 ) }
    dend_81 { pt3dadd( -123.296, 68.8473, -54.7614, 0.22 ) }
    dend_81 { pt3dadd( -124.443, 69.5319, -55.5128, 0.74 ) }
    dend_81 { pt3dadd( -125.017, 69.8877, -55.8306, 0.74 ) }
    dend_81 { pt3dadd( -125.433, 70.1571, -56.0221, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_81 { pt3dadd( -126.762, 71.0957, -56.5442, 0.22 ) }
    dend_81 { pt3dadd( -127.367, 71.5698, -56.7327, 0.22 ) }
    dend_81 { pt3dadd( -127.82, 71.9415, -56.8604, 0.22 ) }
    dend_81 { pt3dadd( -128.366, 72.4189, -56.9787, 0.66 ) }
    dend_81 { pt3dadd( -128.842, 72.8552, -57.1021, 0.66 ) }
    dend_81 { pt3dadd( -129.027, 73.0388, -57.1656, 0.66 ) }
    dend_81 { pt3dadd( -129.724, 73.79, -57.4459, 0.29 ) }
    dend_81 { pt3dadd( -130.015, 74.1131, -57.5597, 0.29 ) }
    dend_81 { pt3dadd( -130.376, 74.5193, -57.6936, 0.66 ) }
    dend_81 { pt3dadd( -130.642, 74.8044, -57.7801, 0.66 ) }
    dend_81 { pt3dadd( -131.139, 75.3157, -57.9245, 0.22 ) }
    dend_81 { pt3dadd( -132.234, 76.3939, -58.1795, 0.22 ) }
    dend_81 { pt3dadd( -132.574, 76.7279, -58.2383, 0.22 ) }
    dend_81 { pt3dadd( -132.769, 76.922, -58.2794, 0.59 ) }
    dend_81 { pt3dadd( -133.389, 77.529, -58.4171, 0.37 ) }
    dend_81 { pt3dadd( -133.918, 78.0355, -58.558, 0.37 ) }
    dend_81 { pt3dadd( -134.515, 78.5906, -58.7462, 0.37 ) }
    dend_81 { pt3dadd( -134.749, 78.7974, -58.8496, 1.11 ) }
    dend_81 { pt3dadd( -136.393, 80.1, -59.6404, 0.29 ) }
    dend_81 { pt3dadd( -136.834, 80.4212, -59.8558, 0.29 ) }
    dend_81 { pt3dadd( -137.546, 80.9293, -60.2333, 0.29 ) }
    dend_81 { pt3dadd( -138.163, 81.3466, -60.5663, 1.18 ) }
    dend_81 { pt3dadd( -139.171, 81.9752, -61.106, 0.29 ) }
    dend_81 { pt3dadd( -139.97, 82.4506, -61.5557, 0.29 ) }
    dend_81 { pt3dadd( -140.609, 82.815, -61.9227, 0.29 ) }
    dend_81 { pt3dadd( -141.121, 83.1416, -62.2429, 0.29 ) }
    dend_81 { pt3dadd( -141.751, 83.6015, -62.6626, 0.37 ) }
    dend_81 { pt3dadd( -141.951, 83.7718, -62.8449, 0.37 ) }
    dend_81 { pt3dadd( -142.676, 84.4794, -63.6728, 0.37 ) }
    dend_81 { pt3dadd( -143.04, 84.8717, -64.1218, 0.37 ) }
    dend_81 { pt3dadd( -143.631, 85.5172, -64.8417, 0.44 ) }
    dend_81 { pt3dadd( -144.004, 85.9102, -65.2728, 0.44 ) }
    dend_81 { pt3dadd( -145.185, 87.1162, -66.5706, 0.81 ) }
    dend_81 { pt3dadd( -145.495, 87.415, -66.8677, 0.81 ) }
    dend_81 { pt3dadd( -146.707, 88.4251, -67.7672, 0.29 ) }
    dend_81 { pt3dadd( -147.181, 88.7623, -68.0382, 0.66 ) }
    dend_81 { pt3dadd( -147.83, 89.1525, -68.302, 1.11 ) }
    dend_81 { pt3dadd( -148.247, 89.3788, -68.4225, 1.11 ) }
    dend_81 { pt3dadd( -148.909, 89.7152, -68.5639, 0.29 ) }
    dend_81 { pt3dadd( -149.924, 90.1792, -68.8561, 0.29 ) }
    dend_81 { pt3dadd( -150.83, 90.5246, -69.2017, 0.29 ) }
    dend_81 { pt3dadd( -151.809, 90.8693, -69.602, 0.44 ) }
    dend_81 { pt3dadd( -152.387, 91.0529, -69.8746, 0.44 ) }
    dend_81 { pt3dadd( -153.153, 91.2751, -70.2887, 0.52 ) }
    dend_81 { pt3dadd( -154.618, 91.6753, -71.1523, 0.22 ) }
    dend_81 { pt3dadd( -155.804, 92.0016, -71.9201, 0.22 ) }
    dend_81 { pt3dadd( -156.817, 92.286, -72.6105, 0.22 ) }
    dend_81 { pt3dadd( -158.027, 92.684, -73.4161, 0.22 ) }
    dend_81 { pt3dadd( -158.605, 92.91, -73.7962, 0.96 ) }
    dend_81 { pt3dadd( -159.116, 93.1631, -74.1336, 0.96 ) }
    dend_81 { pt3dadd( -160.194, 93.9421, -74.9514, 0.29 ) }
    dend_81 { pt3dadd( -160.76, 94.5174, -75.4502, 0.29 ) }
    dend_81 { pt3dadd( -161.552, 95.5834, -76.28, 0.29 ) }
    dend_81 { pt3dadd( -161.666, 95.7727, -76.404, 0.52 ) }
    dend_81 { pt3dadd( -162.095, 96.6217, -76.9129, 0.52 ) }
    dend_81 { pt3dadd( -162.621, 97.9183, -77.7232, 0.22 ) }
    dend_81 { pt3dadd( -162.853, 98.6183, -78.1463, 0.22 ) }
    dend_81 { pt3dadd( -163.043, 99.2877, -78.6026, 0.22 ) }
    dend_81 { pt3dadd( -163.239, 100.001, -79.1411, 0.22 ) }
    dend_81 { pt3dadd( -163.38, 100.463, -79.5337, 0.22 ) }
    dend_81 { pt3dadd( -163.759, 101.571, -80.5605, 0.52 ) }
    dend_81 { pt3dadd( -164.019, 102.206, -81.194, 0.52 ) }
    dend_81 { pt3dadd( -164.484, 103.149, -82.2481, 0.52 ) }
    dend_81 { pt3dadd( -164.685, 103.483, -82.6494, 0.52 ) }
    dend_81 { pt3dadd( -165.413, 104.479, -83.886, 0.52 ) }
    dend_81 { pt3dadd( -166.232, 105.401, -85.0193, 0.15 ) }
    dend_81 { pt3dadd( -166.657, 105.814, -85.4844, 0.15 ) }
    dend_81 { pt3dadd( -167.425, 106.493, -86.2111, 0.15 ) }
    dend_81 { pt3dadd( -167.974, 106.942, -86.6425, 0.37 ) }
    dend_81 { pt3dadd( -168.573, 107.436, -87.0985, 0.37 ) }
    dend_81 { pt3dadd( -168.849, 107.676, -87.3006, 0.37 ) }
    dend_81 { pt3dadd( -169.207, 108.037, -87.6092, 0.59 ) }
    dend_81 { pt3dadd( -169.436, 108.333, -87.86, 0.59 ) }
    dend_81 { pt3dadd( -169.731, 108.824, -88.2364, 1.11 ) }
    dend_81 { pt3dadd( -170.137, 109.637, -88.8815, 1.11 ) }
    dend_81 { pt3dadd( -170.534, 110.508, -89.5706, 0.37 ) }
    dend_81 { pt3dadd( -170.75, 111.011, -89.9756, 0.37 ) }
    dend_81 { pt3dadd( -170.889, 111.337, -90.2425, 0.37 ) }
    dend_81 { pt3dadd( -171.096, 111.804, -90.6069, 0.37 ) }
    dend_81 { pt3dadd( -171.453, 112.5, -91.0719, 0.37 ) }
    dend_81 { pt3dadd( -171.987, 113.442, -91.5938, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 81/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -19.6999, 39.9985, -0.467042, 1.18 ) }
    dend_68 { pt3dadd( -20.1195, 40.8933, -0.119486, 1.18 ) }
    dend_68 { pt3dadd( -20.7033, 42.0463, 0.361971, 1.11 ) }
    dend_68 { pt3dadd( -21.1596, 42.9122, 0.725085, 1.11 ) }
    dend_68 { pt3dadd( -21.6028, 43.7532, 1.07779, 1.18 ) }
    dend_68 { pt3dadd( -22.0729, 44.6455, 1.45197, 1.18 ) }
    dend_68 { pt3dadd( -22.8232, 46.0693, 2.0491, 1.18 ) }
    dend_68 { pt3dadd( -23.1518, 46.7057, 2.33467, 1.18 ) }
    dend_68 { pt3dadd( -23.3686, 47.1026, 2.51812, 1.18 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 90/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 27.1231, 41.5383, 24.1807, 0.74 ) }
    dend_62 { pt3dadd( 27.855, 41.5347, 24.1807, 0.74 ) }
    dend_62 { pt3dadd( 28.1476, 41.5244, 24.1812, 0.66 ) }
    dend_62 { pt3dadd( 30.0923, 41.3338, 24.1859, 0.22 ) }
    dend_62 { pt3dadd( 30.6736, 41.2362, 24.1876, 0.29 ) }
    dend_62 { pt3dadd( 31.1897, 41.1219, 24.1893, 0.29 ) }
    dend_62 { pt3dadd( 31.2761, 41.0981, 24.1896, 0.29 ) }
    dend_62 { pt3dadd( 31.942, 40.8266, 24.2393, 0.29 ) }
    dend_62 { pt3dadd( 32.4135, 40.4654, 24.3267, 0.29 ) }
    dend_62 { pt3dadd( 32.6644, 40.0952, 24.4302, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 32.864, 39.82, 24.5139, 0.37 ) }
    dend_62 { pt3dadd( 33.0402, 39.6545, 24.6013, 0.66 ) }
    dend_62 { pt3dadd( 33.8178, 39.2541, 25.0052, 0.66 ) }
    dend_62 { pt3dadd( 34.2652, 39.1908, 25.2727, 0.44 ) }
    dend_62 { pt3dadd( 34.623, 39.1986, 25.4927, 0.29 ) }
    dend_62 { pt3dadd( 35.3029, 39.2828, 25.903, 0.29 ) }
    dend_62 { pt3dadd( 36.5022, 39.5263, 26.603, 0.29 ) }
    dend_62 { pt3dadd( 36.5788, 39.5485, 26.646, 0.29 ) }
    dend_62 { pt3dadd( 37.405, 39.8671, 27.1001, 0.29 ) }
    dend_62 { pt3dadd( 37.4711, 39.8946, 27.1377, 0.29 ) }
    dend_62 { pt3dadd( 38.0615, 40.1263, 27.4757, 0.29 ) }
    dend_62 { pt3dadd( 38.7439, 40.312, 27.8515, 0.66 ) }
    dend_62 { pt3dadd( 39.0915, 40.346, 28.0084, 0.74 ) }
    dend_62 { pt3dadd( 39.7471, 40.3607, 28.2654, 0.74 ) }
    dend_62 { pt3dadd( 40.0728, 40.3428, 28.3614, 0.66 ) }
    dend_62 { pt3dadd( 40.3598, 40.3102, 28.4323, 0.52 ) }
    dend_62 { pt3dadd( 41.2529, 40.1392, 28.6003, 0.44 ) }
    dend_62 { pt3dadd( 41.7019, 40.0311, 28.6613, 0.59 ) }
    dend_62 { pt3dadd( 42.0569, 39.9437, 28.696, 0.52 ) }
    dend_62 { pt3dadd( 42.7878, 39.7711, 28.8041, 0.29 ) }
    dend_62 { pt3dadd( 43.436, 39.6565, 28.946, 0.22 ) }
    dend_62 { pt3dadd( 43.9461, 39.5942, 29.0821, 0.29 ) }
    dend_62 { pt3dadd( 44.5218, 39.552, 29.2466, 0.29 ) }
    dend_62 { pt3dadd( 45.3483, 39.4945, 29.5119, 0.37 ) }
    dend_62 { pt3dadd( 46.5209, 39.3944, 29.9422, 0.29 ) }
    dend_62 { pt3dadd( 47.114, 39.335, 30.2043, 0.37 ) }
    dend_62 { pt3dadd( 47.3059, 39.3174, 30.3073, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 27/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 27.1231, 41.5383, 24.1807, 0.66 ) }
    dend_59 { pt3dadd( 27.9072, 42.2404, 24.2002, 0.66 ) }
    dend_59 { pt3dadd( 28.378, 42.6583, 24.2434, 0.66 ) }
    dend_59 { pt3dadd( 28.8569, 43.0546, 24.3004, 1.18 ) }
    dend_59 { pt3dadd( 29.2121, 43.3248, 24.3394, 1.18 ) }
    dend_59 { pt3dadd( 30.5749, 44.2933, 24.4739, 0.81 ) }
    dend_59 { pt3dadd( 31.1437, 44.6852, 24.5192, 0.81 ) }
    dend_59 { pt3dadd( 31.6469, 44.9973, 24.5604, 0.96 ) }
    dend_59 { pt3dadd( 32.2189, 45.3462, 24.611, 0.96 ) }
    dend_59 { pt3dadd( 32.6919, 45.6409, 24.6526, 0.96 ) }
    dend_59 { pt3dadd( 33.3012, 46.0051, 24.7019, 0.96 ) }
    dend_59 { pt3dadd( 33.8747, 46.3731, 24.7436, 0.88 ) }
    dend_59 { pt3dadd( 34.4177, 46.752, 24.8381, 0.88 ) }
    dend_59 { pt3dadd( 34.8244, 47.0612, 24.9061, 0.96 ) }
    dend_59 { pt3dadd( 35.5056, 47.6419, 25.0606, 1.03 ) }
    dend_59 { pt3dadd( 35.8571, 47.9735, 25.1716, 1.03 ) }
    dend_59 { pt3dadd( 36.1619, 48.2866, 25.3007, 0.88 ) }
    dend_59 { pt3dadd( 37.1681, 49.4105, 25.8917, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 45/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 7.1711, 57.1219, 25.1838, 0.66 ) }
    dend_57 { pt3dadd( 7.8331, 58.9901, 28.3447, 0.66 ) }
    dend_57 { pt3dadd( 8.00125, 59.4795, 29.0568, 0.74 ) }
    dend_57 { pt3dadd( 8.08586, 59.7519, 29.3805, 0.74 ) }
    dend_57 { pt3dadd( 8.1326, 59.9336, 29.5444, 0.74 ) }
    dend_57 { pt3dadd( 8.26112, 60.7251, 29.9597, 0.74 ) }
    dend_57 { pt3dadd( 8.27565, 61.1303, 30.2871, 0.74 ) }
    dend_57 { pt3dadd( 8.2455, 61.2245, 30.3589, 0.74 ) }
    dend_57 { pt3dadd( 8.01984, 61.5646, 30.9142, 0.74 ) }
    dend_57 { pt3dadd( 7.71061, 61.919, 31.7232, 0.74 ) }
    dend_57 { pt3dadd( 7.57925, 62.0473, 32.0832, 0.74 ) }
    dend_57 { pt3dadd( 6.62125, 62.8558, 34.8572, 0.59 ) }
    dend_57 { pt3dadd( 6.21817, 63.1387, 36.1413, 0.52 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 58/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.1711, 57.1219, 25.1838, 1.18 ) }
    dend_56 { pt3dadd( 8.02426, 58.2182, 25.5101, 1.18 ) }
    dend_56 { pt3dadd( 8.77076, 59.3816, 25.5392, 0.44 ) }
    dend_56 { pt3dadd( 9.18358, 60.0666, 25.4438, 0.15 ) }
    dend_56 { pt3dadd( 9.58326, 60.8257, 25.28, 0.07 ) }
    dend_56 { pt3dadd( 9.84533, 61.4297, 25.1275, 0.07 ) }
    dend_56 { pt3dadd( 10.2047, 62.2579, 24.9183, 0.07 ) }
    dend_56 { pt3dadd( 10.5226, 63.2066, 24.5142, 0.07 ) }
    dend_56 { pt3dadd( 10.6691, 63.7498, 24.2107, 0.22 ) }
    dend_56 { pt3dadd( 10.7761, 64.2847, 23.9023, 0.22 ) }
    dend_56 { pt3dadd( 10.8594, 64.8472, 23.5676, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -258.661, -286.264, -123.249, 0.29 ) }
    dend_48 { pt3dadd( -259.359, -287.567, -122.985, 0.29 ) }
    dend_48 { pt3dadd( -259.717, -288.123, -122.881, 0.29 ) }
    dend_48 { pt3dadd( -260.348, -289.04, -122.725, 0.29 ) }
    dend_48 { pt3dadd( -261.29, -290.205, -122.474, 0.44 ) }
    dend_48 { pt3dadd( -262.18, -291.228, -122.247, 0.44 ) }
    dend_48 { pt3dadd( -263.019, -292.131, -121.985, 0.44 ) }
    dend_48 { pt3dadd( -263.919, -292.984, -121.68, 0.44 ) }
    dend_48 { pt3dadd( -264.407, -293.41, -121.51, 0.44 ) }
    dend_48 { pt3dadd( -266.264, -294.868, -120.884, 0.44 ) }
    dend_48 { pt3dadd( -267.486, -295.786, -120.495, 0.44 ) }
    dend_48 { pt3dadd( -269.198, -297.035, -119.837, 0.52 ) }
    dend_48 { pt3dadd( -269.37, -297.162, -119.762, 0.74 ) }
    dend_48 { pt3dadd( -269.789, -297.488, -119.57, 0.74 ) }
    dend_48 { pt3dadd( -271.196, -298.614, -118.845, 0.37 ) }
    dend_48 { pt3dadd( -271.754, -299.135, -118.539, 0.37 ) }
    dend_48 { pt3dadd( -272.904, -300.297, -117.899, 0.74 ) }
    dend_48 { pt3dadd( -273.339, -300.767, -117.674, 0.74 ) }
    dend_48 { pt3dadd( -274.484, -301.982, -117.115, 0.44 ) }
    dend_48 { pt3dadd( -275.717, -303.287, -116.557, 0.74 ) }
    dend_48 { pt3dadd( -277.13, -304.807, -115.963, 0.29 ) }
    dend_48 { pt3dadd( -277.58, -305.242, -115.823, 0.74 ) }
    dend_48 { pt3dadd( -278.05, -305.656, -115.734, 0.74 ) }
    dend_48 { pt3dadd( -279.199, -306.599, -115.57, 0.44 ) }
    dend_48 { pt3dadd( -279.979, -307.209, -115.505, 0.74 ) }
    dend_48 { pt3dadd( -280.278, -307.432, -115.508, 0.74 ) }
    dend_48 { pt3dadd( -281.628, -308.357, -115.525, 0.52 ) }
    dend_48 { pt3dadd( -282.624, -309.059, -115.54, 0.44 ) }
    dend_48 { pt3dadd( -283.135, -309.439, -115.55, 0.88 ) }
    dend_48 { pt3dadd( -283.365, -309.622, -115.555, 0.88 ) }
    dend_48 { pt3dadd( -285.497, -311.261, -115.617, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 0/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -258.661, -286.264, -123.249, 0.44 ) }
    dend_47 { pt3dadd( -259.992, -284.823, -122.809, 0.44 ) }
    dend_47 { pt3dadd( -260.278, -284.555, -122.595, 0.44 ) }
    dend_47 { pt3dadd( -261.342, -283.719, -121.507, 0.44 ) }
    dend_47 { pt3dadd( -261.83, -283.362, -120.991, 0.44 ) }
    dend_47 { pt3dadd( -262.216, -283.084, -120.526, 0.44 ) }
    dend_47 { pt3dadd( -262.688, -282.744, -119.958, 0.44 ) }
    dend_47 { pt3dadd( -264.686, -281.368, -117.412, 0.44 ) }
    dend_47 { pt3dadd( -265.651, -280.766, -116.053, 0.44 ) }
    dend_47 { pt3dadd( -266.073, -280.549, -115.38, 0.59 ) }
    dend_47 { pt3dadd( -267.171, -280.015, -113.452, 0.59 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 197.235, -200.601, -93.9449, 0.37 ) }
    dend_43 { pt3dadd( 198.627, -201.904, -93.3716, 0.37 ) }
    dend_43 { pt3dadd( 199.736, -202.903, -92.9897, 0.37 ) }
    dend_43 { pt3dadd( 200.572, -203.626, -92.7495, 0.37 ) }
    dend_43 { pt3dadd( 201.678, -204.568, -92.4779, 0.37 ) }
    dend_43 { pt3dadd( 202.99, -205.667, -92.1976, 0.37 ) }
    dend_43 { pt3dadd( 203.745, -206.288, -92.055, 0.37 ) }
    dend_43 { pt3dadd( 204.522, -206.88, -91.9602, 0.37 ) }
    dend_43 { pt3dadd( 205.461, -207.591, -91.9123, 0.37 ) }
    dend_43 { pt3dadd( 206.308, -208.244, -91.8777, 0.37 ) }
    dend_43 { pt3dadd( 207.01, -208.798, -91.8621, 0.37 ) }
    dend_43 { pt3dadd( 207.654, -209.306, -91.8754, 0.37 ) }
    dend_43 { pt3dadd( 208.385, -209.883, -91.8864, 0.37 ) }
    dend_43 { pt3dadd( 209.027, -210.396, -91.8864, 0.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 197.235, -200.601, -93.9449, 0.37 ) }
    dend_42 { pt3dadd( 197.976, -199.666, -93.5061, 0.37 ) }
    dend_42 { pt3dadd( 198.427, -199.036, -93.2326, 0.37 ) }
    dend_42 { pt3dadd( 199.413, -197.361, -92.6025, 0.37 ) }
    dend_42 { pt3dadd( 199.736, -196.651, -92.3662, 0.37 ) }
    dend_42 { pt3dadd( 199.98, -196.018, -92.1767, 0.37 ) }
    dend_42 { pt3dadd( 200.312, -195.057, -91.8945, 0.37 ) }
    dend_42 { pt3dadd( 200.637, -193.885, -91.5538, 0.37 ) }
    dend_42 { pt3dadd( 200.939, -192.587, -91.1742, 0.37 ) }
    dend_42 { pt3dadd( 201.233, -191.121, -90.7507, 0.37 ) }
    dend_42 { pt3dadd( 201.427, -190.183, -90.453, 0.37 ) }
    dend_42 { pt3dadd( 201.745, -188.69, -89.9239, 0.52 ) }
    dend_42 { pt3dadd( 202.049, -187.465, -89.4566, 0.29 ) }
    dend_42 { pt3dadd( 202.486, -186.038, -88.8567, 0.29 ) }
    dend_42 { pt3dadd( 202.728, -185.398, -88.5607, 0.29 ) }
    dend_42 { pt3dadd( 202.969, -184.82, -88.2858, 0.52 ) }
    dend_42 { pt3dadd( 203.359, -183.915, -87.8545, 0.22 ) }
    dend_42 { pt3dadd( 203.797, -182.931, -87.3952, 0.22 ) }
    dend_42 { pt3dadd( 204.367, -181.698, -86.8365, 0.22 ) }
    dend_42 { pt3dadd( 204.666, -181.077, -86.5689, 0.22 ) }
    dend_42 { pt3dadd( 204.941, -180.493, -86.3274, 0.22 ) }
    dend_42 { pt3dadd( 205.37, -179.539, -85.9316, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 47/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.239, -148.081, -78.8248, 0.44 ) }
    dend_40 { pt3dadd( -14.6041, -148.976, -80.1521, 0.44 ) }
    dend_40 { pt3dadd( -15.3054, -149.475, -80.8079, 0.44 ) }
    dend_40 { pt3dadd( -16.1078, -150.121, -81.5062, 0.59 ) }
    dend_40 { pt3dadd( -17.3364, -151.196, -82.6293, 0.15 ) }
    dend_40 { pt3dadd( -17.8516, -151.662, -83.0927, 0.59 ) }
    dend_40 { pt3dadd( -18.6898, -152.444, -83.8609, 0.66 ) }
    dend_40 { pt3dadd( -19.6095, -153.324, -84.6735, 0.29 ) }
    dend_40 { pt3dadd( -20.4273, -154.172, -85.4433, 0.29 ) }
    dend_40 { pt3dadd( -21.269, -155.141, -86.232, 0.59 ) }
    dend_40 { pt3dadd( -21.7323, -155.749, -86.6754, 1.4 ) }
    dend_40 { pt3dadd( -22.5869, -157.002, -87.5897, 1.18 ) }
    dend_40 { pt3dadd( -23.2068, -158.054, -88.2993, 0.52 ) }
    dend_40 { pt3dadd( -23.4139, -158.457, -88.5724, 0.37 ) }
    dend_40 { pt3dadd( -23.7889, -159.256, -89.1089, 0.37 ) }
    dend_40 { pt3dadd( -24.1183, -160.031, -89.5895, 0.37 ) }
    dend_40 { pt3dadd( -24.7878, -161.909, -90.7163, 0.37 ) }
    dend_40 { pt3dadd( -25.0505, -162.753, -91.187, 0.37 ) }
    dend_40 { pt3dadd( -25.3856, -163.914, -91.8176, 0.52 ) }
    dend_40 { pt3dadd( -25.5319, -164.416, -92.0914, 0.66 ) }
    dend_40 { pt3dadd( -25.7596, -165.22, -92.6254, 0.29 ) }
    dend_40 { pt3dadd( -26.1898, -166.63, -93.6427, 0.29 ) }
    dend_40 { pt3dadd( -26.5649, -167.975, -94.7203, 0.29 ) }
    dend_40 { pt3dadd( -26.6512, -168.29, -95.0083, 0.44 ) }
    dend_40 { pt3dadd( -26.8368, -169.006, -95.6964, 0.44 ) }
    dend_40 { pt3dadd( -27.4989, -171.541, -98.4412, 0.52 ) }
    dend_40 { pt3dadd( -27.6143, -171.964, -98.9542, 0.74 ) }
    dend_40 { pt3dadd( -27.9413, -173.062, -100.435, 0.81 ) }
    dend_40 { pt3dadd( -28.2616, -174.183, -101.96, 0.81 ) }
    dend_40 { pt3dadd( -28.314, -174.39, -102.254, 0.81 ) }
    dend_40 { pt3dadd( -28.4875, -175.27, -103.504, 0.81 ) }
    dend_40 { pt3dadd( -28.6205, -176.1, -104.575, 0.81 ) }
    dend_40 { pt3dadd( -28.6431, -176.34, -104.848, 0.44 ) }
    dend_40 { pt3dadd( -28.7246, -177.262, -105.794, 0.44 ) }
    dend_40 { pt3dadd( -28.9992, -179.579, -108.447, 0.44 ) }
    dend_40 { pt3dadd( -29.0538, -179.915, -108.852, 1.11 ) }
    dend_40 { pt3dadd( -29.1764, -180.404, -109.511, 0.37 ) }
    dend_40 { pt3dadd( -29.4969, -181.428, -111.031, 0.37 ) }
    dend_40 { pt3dadd( -29.8104, -182.21, -112.343, 0.52 ) }
    dend_40 { pt3dadd( -30.6056, -183.679, -114.998, 0.52 ) }
    dend_40 { pt3dadd( -30.8442, -184.044, -115.622, 0.52 ) }
    dend_40 { pt3dadd( -31.5237, -185.0, -117.205, 0.52 ) }
    dend_40 { pt3dadd( -31.7882, -185.359, -117.767, 0.52 ) }
    dend_40 { pt3dadd( -32.5364, -186.349, -119.121, 0.52 ) }
    dend_40 { pt3dadd( -32.9492, -186.979, -119.728, 0.29 ) }
    dend_40 { pt3dadd( -33.5068, -187.894, -120.36, 0.29 ) }
    dend_40 { pt3dadd( -34.0362, -188.748, -120.878, 0.29 ) }
    dend_40 { pt3dadd( -34.8149, -189.991, -121.472, 0.29 ) }
    dend_40 { pt3dadd( -35.2773, -190.679, -121.837, 0.29 ) }
    dend_40 { pt3dadd( -35.5814, -191.124, -122.071, 0.74 ) }
    dend_40 { pt3dadd( -36.1603, -191.956, -122.545, 0.37 ) }
    dend_40 { pt3dadd( -36.5501, -192.497, -122.867, 0.37 ) }
    dend_40 { pt3dadd( -36.9137, -193.011, -123.184, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_40 { pt3dadd( -38.0003, -194.656, -124.187, 0.22 ) }
    dend_40 { pt3dadd( -38.407, -195.337, -124.597, 0.29 ) }
    dend_40 { pt3dadd( -38.8961, -196.268, -125.045, 0.29 ) }
    dend_40 { pt3dadd( -38.9924, -196.475, -125.115, 0.52 ) }
    dend_40 { pt3dadd( -39.3083, -197.221, -125.33, 0.52 ) }
    dend_40 { pt3dadd( -39.6064, -198.052, -125.47, 0.52 ) }
    dend_40 { pt3dadd( -39.8056, -198.736, -125.416, 0.52 ) }
    dend_40 { pt3dadd( -40.1292, -200.417, -125.196, 0.52 ) }
    dend_40 { pt3dadd( -40.1583, -200.779, -125.116, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -13.239, -148.081, -78.8248, 0.59 ) }
    dend_39 { pt3dadd( -15.0804, -147.268, -81.8153, 0.59 ) }
    dend_39 { pt3dadd( -15.6577, -147.112, -82.7349, 0.59 ) }
    dend_39 { pt3dadd( -15.9982, -147.069, -83.293, 0.59 ) }
    dend_39 { pt3dadd( -16.7961, -146.969, -84.6007, 0.44 ) }
    dend_39 { pt3dadd( -17.2672, -146.909, -85.3727, 0.44 ) }
    dend_39 { pt3dadd( -17.941, -146.824, -86.477, 0.44 ) }
    dend_39 { pt3dadd( -18.4245, -146.878, -87.0987, 0.44 ) }
    dend_39 { pt3dadd( -19.2725, -147.157, -88.3763, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 22.4066, -106.789, 9.71322, 0.74 ) }
    dend_30 { pt3dadd( 23.2234, -108.461, 9.84462, 0.74 ) }
    dend_30 { pt3dadd( 23.5399, -109.111, 9.82761, 0.74 ) }
    dend_30 { pt3dadd( 24.1739, -110.335, 9.73931, 0.74 ) }
    dend_30 { pt3dadd( 24.6286, -111.14, 9.63091, 0.74 ) }
    dend_30 { pt3dadd( 25.2266, -112.108, 9.4705, 0.74 ) }
    dend_30 { pt3dadd( 25.7917, -112.972, 9.31296, 0.74 ) }
    dend_30 { pt3dadd( 26.4429, -113.919, 9.05126, 0.96 ) }
    dend_30 { pt3dadd( 26.9816, -114.651, 8.84551, 0.96 ) }
    dend_30 { pt3dadd( 27.7637, -115.582, 8.55992, 0.74 ) }
    dend_30 { pt3dadd( 28.3555, -116.217, 8.36769, 0.74 ) }
    dend_30 { pt3dadd( 28.5177, -116.379, 8.31554, 0.74 ) }
    dend_30 { pt3dadd( 29.2665, -117.058, 8.05504, 0.74 ) }
    dend_30 { pt3dadd( 30.0388, -117.71, 7.79104, 0.74 ) }
    dend_30 { pt3dadd( 31.1941, -118.66, 7.38927, 0.59 ) }
    dend_30 { pt3dadd( 31.8114, -119.159, 7.1888, 0.59 ) }
    dend_30 { pt3dadd( 32.4041, -119.619, 6.99241, 0.66 ) }
    dend_30 { pt3dadd( 33.4581, -120.402, 6.66074, 0.66 ) }
    dend_30 { pt3dadd( 34.0159, -120.789, 6.49822, 0.66 ) }
    dend_30 { pt3dadd( 35.1269, -121.538, 6.19582, 0.66 ) }
    dend_30 { pt3dadd( 35.8948, -122.054, 6.01606, 0.66 ) }
    dend_30 { pt3dadd( 37.0621, -122.845, 5.77667, 0.59 ) }
    dend_30 { pt3dadd( 37.938, -123.447, 5.63849, 0.88 ) }
    dend_30 { pt3dadd( 38.5446, -123.872, 5.56686, 0.81 ) }
    dend_30 { pt3dadd( 39.274, -124.386, 5.48743, 0.52 ) }
    dend_30 { pt3dadd( 39.8151, -124.788, 5.42536, 0.52 ) }
    dend_30 { pt3dadd( 40.5344, -125.358, 5.34686, 0.74 ) }
    dend_30 { pt3dadd( 41.299, -126.013, 5.27675, 1.03 ) }
    dend_30 { pt3dadd( 42.299, -126.879, 5.14081, 0.66 ) }
    dend_30 { pt3dadd( 42.9577, -127.44, 5.0364, 0.52 ) }
    dend_30 { pt3dadd( 44.3748, -128.605, 4.79792, 0.52 ) }
    dend_30 { pt3dadd( 45.0569, -129.141, 4.66332, 0.66 ) }
    dend_30 { pt3dadd( 45.58, -129.527, 4.551, 0.66 ) }
    dend_30 { pt3dadd( 47.0573, -130.545, 4.2232, 0.66 ) }
    dend_30 { pt3dadd( 47.9744, -131.134, 4.01898, 1.11 ) }
    dend_30 { pt3dadd( 48.3685, -131.369, 3.93965, 1.11 ) }
    dend_30 { pt3dadd( 49.2461, -131.856, 3.79939, 0.59 ) }
    dend_30 { pt3dadd( 50.3104, -132.423, 3.66677, 0.59 ) }
    dend_30 { pt3dadd( 51.0995, -132.828, 3.59166, 0.59 ) }
    dend_30 { pt3dadd( 51.4984, -133.034, 3.56977, 0.74 ) }
    dend_30 { pt3dadd( 52.4307, -133.513, 3.5199, 0.74 ) }
    dend_30 { pt3dadd( 53.6768, -134.157, 3.41665, 0.44 ) }
    dend_30 { pt3dadd( 54.8199, -134.742, 3.29894, 0.44 ) }
    dend_30 { pt3dadd( 55.6036, -135.142, 3.19505, 1.11 ) }
    dend_30 { pt3dadd( 56.1282, -135.414, 3.11365, 1.33 ) }
    dend_30 { pt3dadd( 56.7088, -135.714, 3.01276, 1.33 ) }
    dend_30 { pt3dadd( 57.8425, -136.296, 2.77932, 0.52 ) }
    dend_30 { pt3dadd( 58.4061, -136.598, 2.63632, 0.44 ) }
    dend_30 { pt3dadd( 58.8375, -136.861, 2.50578, 0.44 ) }
    dend_30 { pt3dadd( 59.3233, -137.186, 2.35185, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.4066, -106.789, 9.71322, 0.59 ) }
    dend_29 { pt3dadd( 22.2024, -108.65, 10.1096, 0.59 ) }
    dend_29 { pt3dadd( 22.1948, -109.778, 10.2686, 0.59 ) }
    dend_29 { pt3dadd( 22.2068, -110.908, 10.3887, 0.59 ) }
    dend_29 { pt3dadd( 22.1983, -111.368, 10.429, 0.59 ) }
    dend_29 { pt3dadd( 22.095, -113.26, 10.5719, 0.59 ) }
    dend_29 { pt3dadd( 22.0062, -114.266, 10.6377, 0.74 ) }
    dend_29 { pt3dadd( 21.9914, -114.895, 10.6147, 0.66 ) }
    dend_29 { pt3dadd( 22.013, -115.439, 10.592, 0.29 ) }
    dend_29 { pt3dadd( 22.0456, -116.121, 10.5787, 0.29 ) }
    dend_29 { pt3dadd( 22.0326, -116.565, 10.5859, 0.29 ) }
    dend_29 { pt3dadd( 21.9462, -117.084, 10.6184, 0.29 ) }
    dend_29 { pt3dadd( 21.8159, -117.816, 10.6916, 0.29 ) }
    dend_29 { pt3dadd( 21.7802, -118.289, 10.7492, 0.29 ) }
    dend_29 { pt3dadd( 21.8131, -119.021, 10.8328, 0.29 ) }
    dend_29 { pt3dadd( 21.9466, -120.076, 10.9468, 0.37 ) }
    dend_29 { pt3dadd( 22.0337, -120.655, 11.01, 0.37 ) }
    dend_29 { pt3dadd( 22.1439, -121.358, 11.086, 0.37 ) }
    dend_29 { pt3dadd( 22.2858, -122.388, 11.1909, 0.37 ) }
    dend_29 { pt3dadd( 22.4257, -123.402, 11.2742, 0.37 ) }
    dend_29 { pt3dadd( 22.5355, -123.971, 11.2946, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.63591, -61.3115, -13.2617, 1.33 ) }
    dend_7 { pt3dadd( 8.23923, -63.4648, -12.9126, 1.33 ) }
    dend_7 { pt3dadd( 7.97252, -64.7974, -12.7182, 1.33 ) }
    dend_7 { pt3dadd( 7.58234, -66.6881, -12.4691, 1.18 ) }
    dend_7 { pt3dadd( 7.44943, -67.4501, -12.3784, 1.33 ) }
    dend_7 { pt3dadd( 7.32306, -68.4719, -12.2689, 1.25 ) }
    dend_7 { pt3dadd( 7.22321, -69.8254, -12.1731, 1.25 ) }
    dend_7 { pt3dadd( 7.20867, -70.8312, -12.109, 1.18 ) }
    dend_7 { pt3dadd( 7.20847, -71.6315, -12.1258, 0.96 ) }
    dend_7 { pt3dadd( 7.20201, -72.6724, -12.2408, 1.11 ) }
    dend_7 { pt3dadd( 7.1523, -73.8188, -12.3862, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( 7.07836, -75.0477, -12.5748, 1.03 ) }
    dend_7 { pt3dadd( 7.02111, -76.1525, -12.7772, 1.03 ) }
    dend_7 { pt3dadd( 6.97394, -77.1806, -12.9839, 1.25 ) }
    dend_7 { pt3dadd( 6.93231, -78.2892, -13.2051, 1.33 ) }
    dend_7 { pt3dadd( 6.8973, -79.5472, -13.452, 1.33 ) }
    dend_7 { pt3dadd( 6.89465, -80.9338, -13.7057, 1.33 ) }
    dend_7 { pt3dadd( 6.93528, -82.4306, -13.9207, 1.33 ) }
    dend_7 { pt3dadd( 7.03469, -84.1251, -14.1574, 1.18 ) }
    dend_7 { pt3dadd( 7.13905, -85.5528, -14.3642, 1.18 ) }
    dend_7 { pt3dadd( 7.25537, -87.0437, -14.6174, 1.18 ) }
    dend_7 { pt3dadd( 7.34313, -88.2947, -14.8445, 1.18 ) }
    dend_7 { pt3dadd( 7.37999, -89.5104, -15.0693, 1.18 ) }
    dend_7 { pt3dadd( 7.35057, -90.9118, -15.282, 1.11 ) }
    dend_7 { pt3dadd( 7.25422, -92.2639, -15.4545, 1.11 ) }
    dend_7 { pt3dadd( 7.0848, -93.6699, -15.5975, 1.11 ) }
    dend_7 { pt3dadd( 6.89255, -94.8763, -15.6747, 1.25 ) }
    dend_7 { pt3dadd( 6.70197, -95.9724, -15.7089, 1.18 ) }
    dend_7 { pt3dadd( 6.45284, -97.6185, -15.7038, 0.88 ) }
    dend_7 { pt3dadd( 6.39137, -98.1371, -15.6699, 0.88 ) }
    dend_7 { pt3dadd( 6.26504, -99.4, -15.5611, 1.18 ) }
    dend_7 { pt3dadd( 6.15334, -100.384, -15.4821, 1.25 ) }
    dend_7 { pt3dadd( 6.0066, -101.585, -15.4638, 1.25 ) }
    dend_7 { pt3dadd( 5.84724, -102.923, -15.532, 1.25 ) }
    dend_7 { pt3dadd( 5.7068, -104.167, -15.6786, 1.03 ) }
    dend_7 { pt3dadd( 5.58233, -105.206, -15.8698, 1.03 ) }
    dend_7 { pt3dadd( 5.38044, -106.498, -16.1738, 1.03 ) }
    dend_7 { pt3dadd( 5.18543, -107.622, -16.4726, 1.18 ) }
    dend_7 { pt3dadd( 4.98639, -108.701, -16.7838, 1.18 ) }
    dend_7 { pt3dadd( 4.73767, -109.934, -17.1437, 1.18 ) }
    dend_7 { pt3dadd( 4.38119, -111.622, -17.6346, 0.96 ) }
    dend_7 { pt3dadd( 4.04668, -113.227, -18.0879, 0.88 ) }
    dend_7 { pt3dadd( 3.84805, -114.278, -18.3819, 0.88 ) }
    dend_7 { pt3dadd( 3.6198, -115.494, -18.6946, 0.88 ) }
    dend_7 { pt3dadd( 3.4037, -116.585, -18.9792, 0.88 ) }
    dend_7 { pt3dadd( 3.15778, -117.734, -19.2604, 0.96 ) }
    dend_7 { pt3dadd( 2.99123, -118.525, -19.3873, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.63591, -61.3115, -13.2617, 1.03 ) }
    dend_4 { pt3dadd( 10.1811, -62.4371, -13.5934, 1.03 ) }
    dend_4 { pt3dadd( 10.9465, -62.9811, -13.7326, 1.03 ) }
    dend_4 { pt3dadd( 11.9744, -63.6881, -13.891, 1.03 ) }
    dend_4 { pt3dadd( 14.1607, -65.1352, -14.1731, 1.03 ) }
    dend_4 { pt3dadd( 15.9606, -66.2938, -14.3754, 1.03 ) }
    dend_4 { pt3dadd( 17.7845, -67.4681, -14.5804, 1.03 ) }
    dend_4 { pt3dadd( 19.2397, -68.3744, -14.7246, 1.03 ) }
    dend_4 { pt3dadd( 20.5606, -69.1696, -14.8414, 1.03 ) }
    dend_4 { pt3dadd( 22.4251, -70.2542, -14.9595, 1.18 ) }
    dend_4 { pt3dadd( 23.4679, -70.8411, -14.9609, 1.18 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 47/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -23.3686, 47.1026, 2.51812, 0.88 ) }
    dend_70 { pt3dadd( -23.9785, 47.3803, 2.53774, 0.88 ) }
    dend_70 { pt3dadd( -24.9234, 47.8105, 2.56814, 1.4 ) }
    dend_70 { pt3dadd( -24.9234, 47.8105, 2.56814, 1.4 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 51/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -23.3686, 47.1026, 2.51812, 1.25 ) }
    dend_69 { pt3dadd( -23.6971, 47.5388, 2.51812, 1.25 ) }
    dend_69 { pt3dadd( -24.1856, 48.2529, 2.51812, 1.4 ) }
    dend_69 { pt3dadd( -24.2846, 48.4123, 2.51937, 1.4 ) }
    dend_69 { pt3dadd( -24.9137, 49.5556, 2.49466, 0.88 ) }
    dend_69 { pt3dadd( -25.1302, 50.0063, 2.47842, 0.88 ) }
    dend_69 { pt3dadd( -25.2316, 50.2559, 2.46759, 0.88 ) }
    dend_69 { pt3dadd( -25.4249, 50.9782, 2.43009, 0.81 ) }
    dend_69 { pt3dadd( -25.4978, 51.4849, 2.38461, 0.81 ) }
    dend_69 { pt3dadd( -25.5578, 52.17, 2.30252, 0.81 ) }
    dend_69 { pt3dadd( -25.5785, 52.6156, 2.21554, 0.81 ) }
    dend_69 { pt3dadd( -25.6116, 53.128, 2.09104, 0.74 ) }
    dend_69 { pt3dadd( -25.6508, 53.4845, 2.02146, 0.74 ) }
    dend_69 { pt3dadd( -25.7941, 54.173, 1.94862, 0.74 ) }
    dend_69 { pt3dadd( -25.9628, 54.6684, 2.01552, 0.74 ) }
    dend_69 { pt3dadd( -26.2213, 55.2952, 2.22083, 0.74 ) }
    dend_69 { pt3dadd( -26.4009, 55.7106, 2.41438, 0.74 ) }
    dend_69 { pt3dadd( -26.8349, 56.718, 2.96019, 0.74 ) }
    dend_69 { pt3dadd( -27.0646, 57.2669, 3.31355, 0.88 ) }
    dend_69 { pt3dadd( -27.4683, 58.2461, 4.00927, 0.96 ) }
    dend_69 { pt3dadd( -27.7894, 59.0432, 4.60757, 0.96 ) }
    dend_69 { pt3dadd( -28.0086, 59.5908, 5.02633, 0.81 ) }
    dend_69 { pt3dadd( -28.177, 60.0087, 5.32663, 0.81 ) }
    dend_69 { pt3dadd( -28.5435, 60.8424, 5.83721, 0.81 ) }
    dend_69 { pt3dadd( -28.7536, 61.2498, 6.09173, 0.74 ) }
    dend_69 { pt3dadd( -29.0821, 61.799, 6.42505, 0.66 ) }
    dend_69 { pt3dadd( -29.2754, 62.0895, 6.57758, 0.52 ) }
    dend_69 { pt3dadd( -29.4375, 62.332, 6.66826, 0.52 ) }
    dend_69 { pt3dadd( -29.743, 62.8107, 6.96131, 0.96 ) }
    dend_69 { pt3dadd( -30.2989, 63.763, 7.69492, 0.81 ) }
    dend_69 { pt3dadd( -30.5369, 64.2201, 8.10469, 0.81 ) }
    dend_69 { pt3dadd( -30.9819, 65.1987, 9.01435, 0.96 ) }
    dend_69 { pt3dadd( -31.0684, 65.4139, 9.21674, 0.96 ) }
    dend_69 { pt3dadd( -31.8905, 67.7621, 11.4036, 0.81 ) }
    dend_69 { pt3dadd( -31.9699, 68.0131, 11.6435, 0.44 ) }
    dend_69 { pt3dadd( -32.0961, 68.4157, 12.0076, 0.44 ) }
    dend_69 { pt3dadd( -32.2317, 68.8143, 12.3709, 0.44 ) }
    dend_69 { pt3dadd( -32.343, 69.1264, 12.6744, 0.44 ) }
    dend_69 { pt3dadd( -32.4839, 69.4685, 12.9166, 0.74 ) }
    dend_69 { pt3dadd( -32.513, 69.5315, 12.9331, 0.74 ) }
    dend_69 { pt3dadd( -32.7753, 70.003, 13.2476, 0.74 ) }
    dend_69 { pt3dadd( -32.9899, 70.3224, 13.5514, 0.74 ) }
    dend_69 { pt3dadd( -33.6643, 71.1726, 14.5743, 0.59 ) }
    dend_69 { pt3dadd( -33.9139, 71.4398, 14.9315, 0.52 ) }
    dend_69 { pt3dadd( -34.2125, 71.7228, 15.2766, 0.52 ) }
    dend_69 { pt3dadd( -35.5476, 72.8957, 16.6336, 0.52 ) }
    dend_69 { pt3dadd( -35.881, 73.1654, 16.9372, 0.59 ) }
    dend_69 { pt3dadd( -36.3062, 73.4912, 17.2613, 0.74 ) }
    dend_69 { pt3dadd( -36.7781, 73.8294, 17.5202, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_69 { pt3dadd( -38.1788, 74.7732, 18.1501, 0.52 ) }
    dend_69 { pt3dadd( -38.3463, 74.877, 18.197, 0.74 ) }
    dend_69 { pt3dadd( -38.5464, 74.9942, 18.2226, 1.03 ) }
    dend_69 { pt3dadd( -39.0285, 75.2833, 18.3292, 1.03 ) }
    dend_69 { pt3dadd( -39.0285, 75.2833, 18.3292, 1.25 ) }
    dend_69 { pt3dadd( -39.1541, 75.3669, 18.3857, 1.25 ) }
    dend_69 { pt3dadd( -39.5664, 75.629, 18.6235, 0.96 ) }
    dend_69 { pt3dadd( -40.4816, 76.1871, 19.1142, 0.59 ) }
    dend_69 { pt3dadd( -41.0441, 76.4965, 19.372, 0.29 ) }
    dend_69 { pt3dadd( -41.2387, 76.5911, 19.447, 0.37 ) }
    dend_69 { pt3dadd( -41.6765, 76.7755, 19.5831, 0.59 ) }
    dend_69 { pt3dadd( -41.8989, 76.8557, 19.6326, 0.59 ) }
    dend_69 { pt3dadd( -42.465, 77.0279, 19.6878, 0.59 ) }
    dend_69 { pt3dadd( -42.9563, 77.1693, 19.6592, 0.59 ) }
    dend_69 { pt3dadd( -43.1925, 77.244, 19.6417, 0.52 ) }
    dend_69 { pt3dadd( -43.6033, 77.4238, 19.6262, 0.37 ) }
    dend_69 { pt3dadd( -43.8568, 77.596, 19.6306, 0.29 ) }
    dend_69 { pt3dadd( -44.1021, 77.8466, 19.9151, 0.29 ) }
    dend_69 { pt3dadd( -44.223, 77.981, 20.1716, 0.29 ) }
    dend_69 { pt3dadd( -44.352, 78.1034, 20.4808, 0.88 ) }
    dend_69 { pt3dadd( -44.5148, 78.2317, 20.8988, 0.81 ) }
    dend_69 { pt3dadd( -44.6531, 78.3169, 21.2465, 0.81 ) }
    dend_69 { pt3dadd( -45.9535, 78.8637, 24.2636, 0.81 ) }
    dend_69 { pt3dadd( -46.1157, 78.906, 24.6001, 0.81 ) }
    dend_69 { pt3dadd( -46.3717, 78.9507, 25.0551, 0.81 ) }
    dend_69 { pt3dadd( -46.4605, 78.9615, 25.1897, 0.81 ) }
    dend_69 { pt3dadd( -46.7789, 78.9939, 25.6061, 0.52 ) }
    dend_69 { pt3dadd( -47.0042, 79.078, 25.9686, 0.52 ) }
    dend_69 { pt3dadd( -47.1757, 79.2778, 26.2821, 0.52 ) }
    dend_69 { pt3dadd( -47.3377, 79.5477, 26.6876, 0.52 ) }
    dend_69 { pt3dadd( -47.4148, 79.7142, 26.9286, 0.66 ) }
    dend_69 { pt3dadd( -47.4959, 79.9216, 27.2167, 0.88 ) }
    dend_69 { pt3dadd( -48.0634, 81.5166, 29.5309, 0.88 ) }
    dend_69 { pt3dadd( -48.1334, 81.7237, 29.8444, 0.59 ) }
    dend_69 { pt3dadd( -48.2094, 81.9299, 30.1705, 0.44 ) }
    dend_69 { pt3dadd( -48.279, 82.0864, 30.4264, 0.44 ) }
    dend_69 { pt3dadd( -48.3909, 82.2795, 30.719, 0.52 ) }
    dend_69 { pt3dadd( -48.8282, 82.9075, 31.4225, 0.59 ) }
    dend_69 { pt3dadd( -48.8507, 82.9401, 31.4362, 0.59 ) }
    dend_69 { pt3dadd( -49.0125, 83.1994, 31.5351, 0.74 ) }
    dend_69 { pt3dadd( -49.1068, 83.3778, 31.5892, 0.88 ) }
    dend_69 { pt3dadd( -49.3338, 83.8539, 31.7261, 0.59 ) }
    dend_69 { pt3dadd( -49.5791, 84.4064, 31.8651, 0.44 ) }
    dend_69 { pt3dadd( -49.8237, 84.9719, 31.966, 0.44 ) }
    dend_69 { pt3dadd( -49.8632, 85.0517, 31.9878, 0.44 ) }
    dend_69 { pt3dadd( -50.1157, 85.4823, 32.1382, 0.44 ) }
    dend_69 { pt3dadd( -50.5013, 86.084, 32.3757, 0.44 ) }
    dend_69 { pt3dadd( -50.547, 86.1479, 32.4044, 0.44 ) }
    dend_69 { pt3dadd( -50.8379, 86.5454, 32.5852, 0.44 ) }
    dend_69 { pt3dadd( -51.3325, 87.2565, 32.877, 0.44 ) }
    dend_69 { pt3dadd( -51.6319, 87.7591, 33.0371, 0.44 ) }
    dend_69 { pt3dadd( -51.9257, 88.3313, 33.1669, 0.44 ) }
    dend_69 { pt3dadd( -51.9525, 88.3867, 33.1744, 0.44 ) }
    dend_69 { pt3dadd( -52.3095, 89.1427, 33.2416, 0.88 ) }
    dend_69 { pt3dadd( -52.5389, 89.6577, 33.2803, 1.25 ) }
    dend_69 { pt3dadd( -52.8933, 90.4635, 33.3174, 1.25 ) }
    dend_69 { pt3dadd( -53.2636, 91.2171, 33.3647, 1.25 ) }
    dend_69 { pt3dadd( -53.5106, 91.6211, 33.3965, 0.96 ) }
    dend_69 { pt3dadd( -53.8071, 92.0715, 33.4358, 0.52 ) }
    dend_69 { pt3dadd( -54.1291, 92.4757, 33.4812, 0.37 ) }
    dend_69 { pt3dadd( -54.4312, 92.7809, 33.5326, 0.22 ) }
    dend_69 { pt3dadd( -54.7949, 93.0226, 33.6107, 0.07 ) }
    dend_69 { pt3dadd( -55.1489, 93.1737, 33.7135, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 63/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 37.1681, 49.4105, 25.8917, 0.66 ) }
    dend_61 { pt3dadd( 38.8134, 50.3632, 22.7521, 0.66 ) }
    dend_61 { pt3dadd( 39.0469, 50.5034, 22.3586, 0.66 ) }
    dend_61 { pt3dadd( 39.2828, 50.6514, 22.0269, 0.66 ) }
    dend_61 { pt3dadd( 39.3439, 50.6944, 21.9402, 0.66 ) }
    dend_61 { pt3dadd( 39.9763, 51.1895, 21.0391, 0.66 ) }
    dend_61 { pt3dadd( 40.1439, 51.3324, 20.8062, 0.66 ) }
    dend_61 { pt3dadd( 40.5614, 51.7302, 20.3745, 0.66 ) }
    dend_61 { pt3dadd( 41.0352, 52.228, 19.9615, 0.66 ) }
    dend_61 { pt3dadd( 42.0503, 53.3899, 19.3196, 0.66 ) }
    dend_61 { pt3dadd( 42.2802, 53.6711, 19.2809, 0.66 ) }
    dend_61 { pt3dadd( 42.6781, 54.192, 19.421, 0.66 ) }
    dend_61 { pt3dadd( 43.0078, 54.624, 19.6718, 0.66 ) }
    dend_61 { pt3dadd( 44.467, 56.5784, 21.0807, 0.66 ) }
    dend_61 { pt3dadd( 44.5533, 56.7002, 21.1757, 1.18 ) }
    dend_61 { pt3dadd( 44.9659, 57.3212, 21.67, 1.99 ) }
    dend_61 { pt3dadd( 45.2171, 57.7219, 21.9581, 1.99 ) }
    dend_61 { pt3dadd( 45.7206, 58.6374, 22.5019, 1.84 ) }
    dend_61 { pt3dadd( 46.0461, 59.3377, 22.7542, 1.25 ) }
    dend_61 { pt3dadd( 46.3453, 60.0249, 22.8166, 0.66 ) }
    dend_61 { pt3dadd( 46.611, 60.6317, 22.8598, 0.66 ) }
    dend_61 { pt3dadd( 46.6568, 60.7227, 22.864, 0.66 ) }
    dend_61 { pt3dadd( 46.9348, 61.1668, 22.8703, 0.66 ) }
    dend_61 { pt3dadd( 47.4279, 61.7636, 22.8507, 0.66 ) }
    dend_61 { pt3dadd( 48.0848, 62.3364, 22.8635, 0.37 ) }
    dend_61 { pt3dadd( 48.5215, 62.6232, 22.8814, 0.22 ) }
    dend_61 { pt3dadd( 49.359, 63.1106, 22.9288, 0.22 ) }
    dend_61 { pt3dadd( 49.8651, 63.4051, 22.9645, 0.22 ) }
    dend_61 { pt3dadd( 50.3259, 63.6736, 23.0039, 0.37 ) }
    dend_61 { pt3dadd( 50.7444, 63.9457, 23.0496, 0.29 ) }
    dend_61 { pt3dadd( 50.9473, 64.191, 23.0859, 0.59 ) }
    dend_61 { pt3dadd( 51.081, 64.8753, 23.1653, 0.52 ) }
    dend_61 { pt3dadd( 51.0585, 65.4233, 23.2169, 0.37 ) }
    dend_61 { pt3dadd( 50.996, 65.95, 23.3374, 0.29 ) }
    dend_61 { pt3dadd( 50.9248, 66.3801, 23.4767, 0.37 ) }
    dend_61 { pt3dadd( 50.872, 66.7296, 23.6161, 0.52 ) }
    dend_61 { pt3dadd( 50.8672, 66.785, 23.6417, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_61 { pt3dadd( 50.8772, 67.0487, 23.7971, 0.52 ) }
    dend_61 { pt3dadd( 51.0538, 68.2456, 24.5671, 0.52 ) }
    dend_61 { pt3dadd( 51.0714, 68.3155, 24.6222, 0.52 ) }
    dend_61 { pt3dadd( 51.2072, 68.7598, 25.0008, 0.44 ) }
    dend_61 { pt3dadd( 51.2318, 68.8348, 25.0674, 0.44 ) }
    dend_61 { pt3dadd( 51.3548, 69.1915, 25.3756, 0.44 ) }
    dend_61 { pt3dadd( 51.4794, 69.5237, 25.6363, 0.44 ) }
    dend_61 { pt3dadd( 51.8444, 70.4509, 26.031, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 8/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 37.1681, 49.4105, 25.8917, 0.74 ) }
    dend_60 { pt3dadd( 37.671, 50.2651, 25.6978, 0.74 ) }
    dend_60 { pt3dadd( 38.0455, 50.779, 25.5036, 0.52 ) }
    dend_60 { pt3dadd( 38.0778, 50.8171, 25.4904, 0.52 ) }
    dend_60 { pt3dadd( 38.3866, 51.146, 25.3914, 0.52 ) }
    dend_60 { pt3dadd( 38.8341, 51.6057, 25.264, 0.59 ) }
    dend_60 { pt3dadd( 39.6552, 52.4133, 25.0633, 0.66 ) }
    dend_60 { pt3dadd( 39.9563, 52.6527, 25.0026, 0.59 ) }
    dend_60 { pt3dadd( 40.4716, 53.047, 24.9021, 0.59 ) }
    dend_60 { pt3dadd( 40.8354, 53.3369, 24.8448, 0.44 ) }
    dend_60 { pt3dadd( 40.8919, 53.3835, 24.8393, 0.44 ) }
    dend_60 { pt3dadd( 41.3061, 53.7702, 24.8292, 0.44 ) }
    dend_60 { pt3dadd( 41.6832, 54.1418, 24.8609, 0.44 ) }
    dend_60 { pt3dadd( 41.9794, 54.4667, 24.9041, 0.52 ) }
    dend_60 { pt3dadd( 42.0579, 54.5589, 24.9202, 0.52 ) }
    dend_60 { pt3dadd( 42.3905, 54.9589, 25.018, 0.52 ) }
    dend_60 { pt3dadd( 42.7106, 55.3426, 25.1306, 0.52 ) }
    dend_60 { pt3dadd( 42.7595, 55.405, 25.1507, 0.52 ) }
    dend_60 { pt3dadd( 43.4002, 56.2532, 25.3452, 0.74 ) }
    dend_60 { pt3dadd( 43.7901, 56.7613, 25.5105, 0.74 ) }
    dend_60 { pt3dadd( 43.8369, 56.8209, 25.5258, 0.74 ) }
    dend_60 { pt3dadd( 44.2147, 57.3108, 25.6185, 0.74 ) }
    dend_60 { pt3dadd( 44.62, 57.8288, 25.7071, 0.74 ) }
    dend_60 { pt3dadd( 45.1403, 58.5053, 25.7717, 0.74 ) }
    dend_60 { pt3dadd( 46.0084, 59.6509, 25.6914, 0.74 ) }
    dend_60 { pt3dadd( 46.6577, 60.5456, 25.594, 0.74 ) }
    dend_60 { pt3dadd( 46.9587, 60.9596, 25.5458, 0.74 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 35/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -285.497, -311.261, -115.617, 0.74 ) }
    dend_50 { pt3dadd( -287.286, -312.541, -116.032, 0.74 ) }
    dend_50 { pt3dadd( -288.091, -313.218, -116.197, 0.74 ) }
    dend_50 { pt3dadd( -288.898, -313.979, -116.31, 0.74 ) }
    dend_50 { pt3dadd( -289.233, -314.323, -116.343, 0.59 ) }
    dend_50 { pt3dadd( -289.798, -314.926, -116.364, 0.59 ) }
    dend_50 { pt3dadd( -290.287, -315.417, -116.284, 0.59 ) }
    dend_50 { pt3dadd( -290.789, -315.902, -116.091, 0.37 ) }
    dend_50 { pt3dadd( -292.253, -317.184, -115.443, 0.37 ) }
    dend_50 { pt3dadd( -293.304, -317.949, -114.834, 0.37 ) }
    dend_50 { pt3dadd( -293.934, -318.33, -114.451, 0.37 ) }
    dend_50 { pt3dadd( -296.179, -319.396, -112.971, 0.37 ) }
    dend_50 { pt3dadd( -297.081, -319.756, -112.354, 0.37 ) }
    dend_50 { pt3dadd( -298.196, -320.141, -111.577, 0.37 ) }
    dend_50 { pt3dadd( -300.659, -320.795, -109.741, 0.37 ) }
    dend_50 { pt3dadd( -301.913, -321.024, -108.834, 0.37 ) }
    dend_50 { pt3dadd( -304.091, -321.292, -107.344, 0.37 ) }
    dend_50 { pt3dadd( -304.727, -321.332, -106.887, 0.37 ) }
    dend_50 { pt3dadd( -305.549, -321.353, -106.265, 0.37 ) }
    dend_50 { pt3dadd( -307.552, -321.304, -104.693, 0.37 ) }
    dend_50 { pt3dadd( -308.927, -321.185, -103.671, 0.37 ) }
    dend_50 { pt3dadd( -309.255, -321.122, -103.396, 0.37 ) }
    dend_50 { pt3dadd( -311.192, -320.508, -101.707, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 58/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -285.497, -311.261, -115.617, 0.22 ) }
    dend_49 { pt3dadd( -285.127, -312.894, -115.478, 0.22 ) }
    dend_49 { pt3dadd( -284.905, -314.157, -115.362, 0.22 ) }
    dend_49 { pt3dadd( -284.8, -315.141, -115.276, 0.22 ) }
    dend_49 { pt3dadd( -284.76, -315.969, -115.208, 0.22 ) }
    dend_49 { pt3dadd( -284.695, -317.3, -115.098, 0.29 ) }
    dend_49 { pt3dadd( -284.671, -317.807, -115.056, 0.66 ) }
    dend_49 { pt3dadd( -284.687, -318.497, -114.987, 0.37 ) }
    dend_49 { pt3dadd( -284.856, -319.947, -114.826, 0.37 ) }
    dend_49 { pt3dadd( -284.961, -320.499, -114.765, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 68/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 59.3233, -137.186, 2.35185, 0.52 ) }
    dend_32 { pt3dadd( 60.3857, -137.592, 2.36752, 0.52 ) }
    dend_32 { pt3dadd( 61.2134, -137.938, 2.41609, 0.52 ) }
    dend_32 { pt3dadd( 62.0171, -138.304, 2.47877, 0.52 ) }
    dend_32 { pt3dadd( 64.1458, -139.311, 2.70721, 0.52 ) }
    dend_32 { pt3dadd( 65.4243, -139.916, 2.86359, 0.52 ) }
    dend_32 { pt3dadd( 66.7361, -140.539, 3.03307, 0.52 ) }
    dend_32 { pt3dadd( 67.7357, -141.044, 3.17176, 0.52 ) }
    dend_32 { pt3dadd( 68.8589, -141.629, 3.33688, 0.52 ) }
    dend_32 { pt3dadd( 69.4965, -141.973, 3.43402, 0.66 ) }
    dend_32 { pt3dadd( 70.0007, -142.259, 3.51085, 0.66 ) }
    dend_32 { pt3dadd( 70.8366, -142.745, 3.61393, 0.66 ) }
    dend_32 { pt3dadd( 71.4828, -143.112, 3.69809, 0.66 ) }
    dend_32 { pt3dadd( 72.4686, -143.632, 3.86873, 0.37 ) }
    dend_32 { pt3dadd( 73.1203, -144.0, 4.01489, 0.37 ) }
    dend_32 { pt3dadd( 73.8625, -144.466, 4.20192, 0.37 ) }
    dend_32 { pt3dadd( 74.7655, -145.055, 4.45927, 0.37 ) }
    dend_32 { pt3dadd( 76.0602, -145.911, 4.88752, 0.37 ) }
    dend_32 { pt3dadd( 77.3117, -146.749, 5.3681, 0.52 ) }
    dend_32 { pt3dadd( 78.325, -147.429, 5.81839, 0.52 ) }
    dend_32 { pt3dadd( 78.9652, -147.87, 6.14065, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 59.3233, -137.186, 2.35185, 0.59 ) }
    dend_31 { pt3dadd( 60.1913, -138.006, 2.25589, 0.59 ) }
    dend_31 { pt3dadd( 60.7425, -138.527, 2.19495, 0.59 ) }
    dend_31 { pt3dadd( 61.3959, -139.144, 2.12272, 0.59 ) }
    dend_31 { pt3dadd( 62.5111, -140.198, 1.99943, 0.59 ) }
    dend_31 { pt3dadd( 63.1121, -140.765, 1.93299, 0.59 ) }
    dend_31 { pt3dadd( 63.5152, -141.146, 1.88843, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.99123, -118.525, -19.3873, 0.88 ) }
    dend_15 { pt3dadd( 3.26028, -119.442, -19.3047, 0.88 ) }
    dend_15 { pt3dadd( 3.50782, -120.32, -19.3381, 0.59 ) }
    dend_15 { pt3dadd( 3.7185, -121.12, -19.3776, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( 3.94204, -121.947, -19.498, 0.66 ) }
    dend_15 { pt3dadd( 4.18889, -122.831, -19.665, 0.88 ) }
    dend_15 { pt3dadd( 4.42085, -123.658, -19.8065, 0.88 ) }
    dend_15 { pt3dadd( 4.7846, -125.046, -20.0479, 0.96 ) }
    dend_15 { pt3dadd( 5.06731, -126.165, -20.2401, 0.88 ) }
    dend_15 { pt3dadd( 5.43234, -127.738, -20.4912, 1.18 ) }
    dend_15 { pt3dadd( 5.60013, -128.569, -20.6069, 0.96 ) }
    dend_15 { pt3dadd( 5.79224, -129.684, -20.7614, 0.96 ) }
    dend_15 { pt3dadd( 5.91115, -130.602, -20.8507, 0.96 ) }
    dend_15 { pt3dadd( 5.9719, -131.41, -20.8925, 0.96 ) }
    dend_15 { pt3dadd( 5.99602, -132.422, -20.9453, 0.96 ) }
    dend_15 { pt3dadd( 5.97276, -133.493, -20.973, 0.96 ) }
    dend_15 { pt3dadd( 5.90158, -134.655, -20.9784, 0.96 ) }
    dend_15 { pt3dadd( 5.80961, -135.769, -20.9718, 0.96 ) }
    dend_15 { pt3dadd( 5.71786, -137.221, -20.9142, 0.96 ) }
    dend_15 { pt3dadd( 5.65417, -138.378, -20.8459, 1.18 ) }
    dend_15 { pt3dadd( 5.64109, -138.685, -20.8228, 1.18 ) }
    dend_15 { pt3dadd( 5.59804, -140.327, -20.6791, 0.66 ) }
    dend_15 { pt3dadd( 5.59227, -141.076, -20.6048, 0.66 ) }
    dend_15 { pt3dadd( 5.60952, -142.953, -20.4964, 0.66 ) }
    dend_15 { pt3dadd( 5.64349, -144.503, -20.4995, 1.11 ) }
    dend_15 { pt3dadd( 5.69724, -145.713, -20.5692, 0.81 ) }
    dend_15 { pt3dadd( 5.77647, -146.95, -20.7072, 0.81 ) }
    dend_15 { pt3dadd( 5.82743, -147.623, -20.8248, 0.81 ) }
    dend_15 { pt3dadd( 5.91184, -148.869, -21.0636, 0.81 ) }
    dend_15 { pt3dadd( 5.95646, -149.963, -21.2895, 0.81 ) }
    dend_15 { pt3dadd( 6.01007, -150.686, -21.4363, 0.81 ) }
    dend_15 { pt3dadd( 6.13396, -151.689, -21.6273, 0.81 ) }
    dend_15 { pt3dadd( 6.32189, -152.73, -21.7899, 0.81 ) }
    dend_15 { pt3dadd( 6.4238, -153.21, -21.8366, 0.52 ) }
    dend_15 { pt3dadd( 6.61384, -154.025, -21.8571, 0.52 ) }
    dend_15 { pt3dadd( 6.82672, -154.915, -21.8571, 0.52 ) }
    dend_15 { pt3dadd( 6.99993, -155.605, -21.8571, 0.81 ) }
    dend_15 { pt3dadd( 7.24707, -156.476, -21.8595, 1.03 ) }
    dend_15 { pt3dadd( 7.57887, -157.618, -21.865, 1.03 ) }
    dend_15 { pt3dadd( 7.89003, -158.756, -21.8696, 0.81 ) }
    dend_15 { pt3dadd( 8.17456, -159.939, -21.8732, 0.81 ) }
    dend_15 { pt3dadd( 8.32756, -160.835, -21.8774, 0.81 ) }
    dend_15 { pt3dadd( 8.4061, -161.47, -21.864, 0.81 ) }
    dend_15 { pt3dadd( 8.46907, -162.449, -21.8207, 0.44 ) }
    dend_15 { pt3dadd( 8.48336, -162.826, -21.7977, 0.44 ) }
    dend_15 { pt3dadd( 8.50379, -163.767, -21.7335, 0.59 ) }
    dend_15 { pt3dadd( 8.50543, -164.799, -21.6293, 0.59 ) }
    dend_15 { pt3dadd( 8.48745, -165.951, -21.4918, 0.66 ) }
    dend_15 { pt3dadd( 8.45268, -167.416, -21.3539, 0.74 ) }
    dend_15 { pt3dadd( 8.44294, -169.229, -21.2568, 0.74 ) }
    dend_15 { pt3dadd( 8.48355, -170.827, -21.2295, 0.96 ) }
    dend_15 { pt3dadd( 8.54187, -171.943, -21.2496, 0.88 ) }
    dend_15 { pt3dadd( 8.61244, -172.718, -21.3027, 1.03 ) }
    dend_15 { pt3dadd( 8.80689, -174.193, -21.4905, 0.96 ) }
    dend_15 { pt3dadd( 9.02725, -175.388, -21.6907, 0.96 ) }
    dend_15 { pt3dadd( 9.2299, -176.318, -21.8838, 0.96 ) }
    dend_15 { pt3dadd( 9.4578, -177.226, -22.0958, 0.96 ) }
    dend_15 { pt3dadd( 9.71217, -178.188, -22.3235, 0.74 ) }
    dend_15 { pt3dadd( 9.87828, -178.789, -22.4331, 0.74 ) }
    dend_15 { pt3dadd( 10.0639, -179.398, -22.4918, 0.52 ) }
    dend_15 { pt3dadd( 10.251, -180.009, -22.5269, 0.52 ) }
    dend_15 { pt3dadd( 10.4257, -180.586, -22.5511, 0.52 ) }
    dend_15 { pt3dadd( 10.6242, -181.275, -22.5652, 0.52 ) }
    dend_15 { pt3dadd( 10.7703, -181.858, -22.5624, 0.52 ) }
    dend_15 { pt3dadd( 10.9638, -182.822, -22.5525, 0.52 ) }
    dend_15 { pt3dadd( 11.068, -183.461, -22.5432, 0.52 ) }
    dend_15 { pt3dadd( 11.2014, -184.382, -22.6173, 0.52 ) }
    dend_15 { pt3dadd( 11.3302, -185.208, -22.745, 0.81 ) }
    dend_15 { pt3dadd( 11.4357, -185.853, -22.8794, 0.81 ) }
    dend_15 { pt3dadd( 11.6139, -186.909, -23.1353, 0.52 ) }
    dend_15 { pt3dadd( 11.7129, -187.461, -23.2805, 0.52 ) }
    dend_15 { pt3dadd( 12.0965, -189.233, -23.7414, 0.81 ) }
    dend_15 { pt3dadd( 12.3207, -189.978, -23.9036, 1.18 ) }
    dend_15 { pt3dadd( 12.6193, -190.809, -24.0676, 0.88 ) }
    dend_15 { pt3dadd( 12.8779, -191.476, -24.183, 0.74 ) }
    dend_15 { pt3dadd( 13.1628, -192.21, -24.2862, 0.59 ) }
    dend_15 { pt3dadd( 13.6298, -193.518, -24.4309, 0.59 ) }
    dend_15 { pt3dadd( 14.3263, -195.704, -24.5818, 0.59 ) }
    dend_15 { pt3dadd( 14.8129, -197.462, -24.6838, 0.59 ) }
    dend_15 { pt3dadd( 15.0127, -198.283, -24.7252, 0.59 ) }
    dend_15 { pt3dadd( 15.2556, -199.519, -24.7779, 0.81 ) }
    dend_15 { pt3dadd( 15.4548, -200.829, -24.8322, 0.81 ) }
    dend_15 { pt3dadd( 15.7447, -203.465, -24.9323, 0.81 ) }
    dend_15 { pt3dadd( 15.8128, -204.67, -24.9676, 0.81 ) }
    dend_15 { pt3dadd( 15.83, -205.11, -24.9714, 0.81 ) }
    dend_15 { pt3dadd( 15.8825, -206.243, -25.0067, 0.66 ) }
    dend_15 { pt3dadd( 15.9573, -207.392, -25.0677, 0.66 ) }
    dend_15 { pt3dadd( 15.9951, -207.829, -25.1007, 0.81 ) }
    dend_15 { pt3dadd( 16.1083, -208.822, -25.2249, 0.74 ) }
    dend_15 { pt3dadd( 16.2408, -209.537, -25.3354, 0.74 ) }
    dend_15 { pt3dadd( 16.5311, -210.73, -25.5115, 0.52 ) }
    dend_15 { pt3dadd( 16.6979, -211.29, -25.5874, 0.52 ) }
    dend_15 { pt3dadd( 16.8876, -211.895, -25.6536, 0.74 ) }
    dend_15 { pt3dadd( 17.0102, -212.422, -25.697, 0.88 ) }
    dend_15 { pt3dadd( 17.1671, -213.358, -25.7493, 1.03 ) }
    dend_15 { pt3dadd( 17.2987, -214.242, -25.7742, 0.74 ) }
    dend_15 { pt3dadd( 17.4048, -214.933, -25.7742, 0.59 ) }
    dend_15 { pt3dadd( 17.5324, -215.72, -25.7559, 0.37 ) }
    dend_15 { pt3dadd( 17.8921, -217.83, -25.631, 0.37 ) }
    dend_15 { pt3dadd( 18.0282, -218.625, -25.5624, 0.37 ) }
    dend_15 { pt3dadd( 18.2404, -219.921, -25.4149, 0.37 ) }
    dend_15 { pt3dadd( 18.398, -220.948, -25.28, 0.37 ) }
    dend_15 { pt3dadd( 18.5429, -221.963, -25.1371, 0.44 ) }
    dend_15 { pt3dadd( 18.6781, -222.934, -24.9976, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 18.762, -223.455, -24.9233, 0.74 ) }
    dend_15 { pt3dadd( 19.0241, -225.147, -24.7146, 0.74 ) }
    dend_15 { pt3dadd( 19.2085, -226.341, -24.5961, 0.74 ) }
    dend_15 { pt3dadd( 19.391, -227.325, -24.4968, 0.74 ) }
    dend_15 { pt3dadd( 19.6552, -228.517, -24.3769, 0.74 ) }
    dend_15 { pt3dadd( 19.8892, -229.431, -24.2782, 0.74 ) }
    dend_15 { pt3dadd( 20.3076, -230.862, -24.0808, 0.74 ) }
    dend_15 { pt3dadd( 20.6517, -231.893, -23.9195, 0.74 ) }
    dend_15 { pt3dadd( 21.1797, -233.284, -23.6659, 0.74 ) }
    dend_15 { pt3dadd( 21.579, -234.249, -23.4605, 0.74 ) }
    dend_15 { pt3dadd( 21.9034, -235.001, -23.27, 1.03 ) }
    dend_15 { pt3dadd( 22.2477, -235.833, -23.0229, 1.03 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.99123, -118.525, -19.3873, 0.88 ) }
    dend_8 { pt3dadd( 1.50112, -119.001, -19.7807, 0.88 ) }
    dend_8 { pt3dadd( 0.298283, -119.536, -20.0958, 0.52 ) }
    dend_8 { pt3dadd( -1.33073, -120.414, -20.4567, 0.52 ) }
    dend_8 { pt3dadd( -2.0763, -120.908, -20.5951, 0.81 ) }
    dend_8 { pt3dadd( -2.65739, -121.329, -20.6962, 0.96 ) }
    dend_8 { pt3dadd( -3.22209, -121.73, -20.8226, 0.81 ) }
    dend_8 { pt3dadd( -3.89157, -122.277, -21.0186, 0.52 ) }
    dend_8 { pt3dadd( -4.42108, -122.735, -21.167, 0.59 ) }
    dend_8 { pt3dadd( -5.1757, -123.404, -21.4055, 0.59 ) }
    dend_8 { pt3dadd( -5.81996, -123.929, -21.5953, 0.74 ) }
    dend_8 { pt3dadd( -7.07658, -124.836, -21.9773, 0.81 ) }
    dend_8 { pt3dadd( -7.66394, -125.218, -22.1678, 0.81 ) }
    dend_8 { pt3dadd( -8.34046, -125.647, -22.3948, 0.52 ) }
    dend_8 { pt3dadd( -9.33217, -126.193, -22.6962, 0.52 ) }
    dend_8 { pt3dadd( -10.0148, -126.547, -22.8693, 1.11 ) }
    dend_8 { pt3dadd( -10.3749, -126.748, -22.9388, 0.96 ) }
    dend_8 { pt3dadd( -11.102, -127.19, -23.0433, 0.44 ) }
    dend_8 { pt3dadd( -11.9021, -127.691, -23.1719, 0.37 ) }
    dend_8 { pt3dadd( -13.6348, -128.799, -23.4508, 0.37 ) }
    dend_8 { pt3dadd( -14.7024, -129.506, -23.6414, 0.37 ) }
    dend_8 { pt3dadd( -15.4778, -130.05, -23.7802, 0.74 ) }
    dend_8 { pt3dadd( -16.2744, -130.612, -23.9139, 0.96 ) }
    dend_8 { pt3dadd( -16.8712, -131.032, -24.0089, 0.96 ) }
    dend_8 { pt3dadd( -17.8775, -131.763, -24.2073, 0.52 ) }
    dend_8 { pt3dadd( -18.598, -132.355, -24.3757, 0.52 ) }
    dend_8 { pt3dadd( -19.3522, -132.911, -24.5532, 0.66 ) }
    dend_8 { pt3dadd( -20.028, -133.382, -24.7222, 0.66 ) }
    dend_8 { pt3dadd( -20.7006, -133.86, -24.8916, 0.52 ) }
    dend_8 { pt3dadd( -21.4637, -134.432, -25.0833, 0.66 ) }
    dend_8 { pt3dadd( -21.9836, -134.842, -25.2223, 0.66 ) }
    dend_8 { pt3dadd( -23.5608, -136.181, -25.7307, 0.81 ) }
    dend_8 { pt3dadd( -24.1918, -136.768, -25.966, 0.59 ) }
    dend_8 { pt3dadd( -24.7085, -137.291, -26.1792, 0.59 ) }
    dend_8 { pt3dadd( -25.1065, -137.687, -26.34, 0.59 ) }
    dend_8 { pt3dadd( -25.517, -138.074, -26.4954, 0.59 ) }
    dend_8 { pt3dadd( -26.3752, -138.891, -26.8414, 0.74 ) }
    dend_8 { pt3dadd( -26.807, -139.372, -27.0518, 0.52 ) }
    dend_8 { pt3dadd( -27.2863, -139.935, -27.2883, 0.52 ) }
    dend_8 { pt3dadd( -27.832, -140.615, -27.5605, 0.37 ) }
    dend_8 { pt3dadd( -28.112, -140.997, -27.7092, 0.37 ) }
    dend_8 { pt3dadd( -28.368, -141.383, -27.8434, 0.37 ) }
    dend_8 { pt3dadd( -28.909, -142.197, -28.0662, 0.59 ) }
    dend_8 { pt3dadd( -29.3916, -142.945, -28.2649, 0.96 ) }
    dend_8 { pt3dadd( -29.6418, -143.333, -28.3581, 1.03 ) }
    dend_8 { pt3dadd( -30.1317, -144.029, -28.5684, 0.88 ) }
    dend_8 { pt3dadd( -30.3399, -144.268, -28.6536, 0.66 ) }
    dend_8 { pt3dadd( -31.0844, -144.952, -28.941, 0.44 ) }
    dend_8 { pt3dadd( -31.5501, -145.31, -29.1031, 0.59 ) }
    dend_8 { pt3dadd( -32.033, -145.667, -29.2983, 0.88 ) }
    dend_8 { pt3dadd( -32.8462, -146.282, -29.6428, 0.52 ) }
    dend_8 { pt3dadd( -33.3903, -146.725, -29.9171, 0.52 ) }
    dend_8 { pt3dadd( -34.3924, -147.568, -30.4885, 0.52 ) }
    dend_8 { pt3dadd( -34.8263, -147.952, -30.7755, 0.88 ) }
    dend_8 { pt3dadd( -35.6712, -148.781, -31.4422, 0.52 ) }
    dend_8 { pt3dadd( -36.1099, -149.268, -31.8342, 0.52 ) }
    dend_8 { pt3dadd( -36.7669, -150.087, -32.4517, 0.52 ) }
    dend_8 { pt3dadd( -37.1392, -150.592, -32.8506, 0.52 ) }
    dend_8 { pt3dadd( -37.562, -151.203, -33.3177, 0.52 ) }
    dend_8 { pt3dadd( -38.1913, -152.134, -33.9809, 0.59 ) }
    dend_8 { pt3dadd( -38.4298, -152.484, -34.2051, 0.59 ) }
    dend_8 { pt3dadd( -38.8212, -153.057, -34.5375, 0.59 ) }
    dend_8 { pt3dadd( -39.2788, -153.757, -34.8618, 0.74 ) }
    dend_8 { pt3dadd( -39.792, -154.635, -35.2732, 0.74 ) }
    dend_8 { pt3dadd( -40.2215, -155.457, -35.6324, 0.52 ) }
    dend_8 { pt3dadd( -40.6284, -156.372, -36.073, 0.66 ) }
    dend_8 { pt3dadd( -40.8067, -156.877, -36.3459, 0.66 ) }
    dend_8 { pt3dadd( -41.0611, -157.738, -36.8448, 0.66 ) }
    dend_8 { pt3dadd( -41.3398, -158.973, -37.6179, 0.52 ) }
    dend_8 { pt3dadd( -41.459, -159.672, -38.0909, 0.52 ) }
    dend_8 { pt3dadd( -41.6168, -160.93, -38.9365, 0.74 ) }
    dend_8 { pt3dadd( -41.6535, -161.208, -39.1166, 0.74 ) }
    dend_8 { pt3dadd( -41.8182, -161.988, -39.6253, 0.74 ) }
    dend_8 { pt3dadd( -42.086, -162.857, -40.1259, 0.74 ) }
    dend_8 { pt3dadd( -42.2949, -163.402, -40.3554, 0.74 ) }
    dend_8 { pt3dadd( -42.4652, -163.819, -40.5183, 0.52 ) }
    dend_8 { pt3dadd( -42.7196, -164.498, -40.7397, 0.52 ) }
    dend_8 { pt3dadd( -43.0964, -165.57, -41.0802, 0.52 ) }
    dend_8 { pt3dadd( -43.4478, -166.609, -41.4011, 0.88 ) }
    dend_8 { pt3dadd( -43.7023, -167.309, -41.5856, 0.88 ) }
    dend_8 { pt3dadd( -44.1236, -168.504, -41.8747, 0.88 ) }
    dend_8 { pt3dadd( -44.3121, -169.015, -41.9683, 1.03 ) }
    dend_8 { pt3dadd( -44.6169, -169.815, -42.0528, 0.52 ) }
    dend_8 { pt3dadd( -44.9601, -170.622, -42.0631, 0.52 ) }
    dend_8 { pt3dadd( -45.3676, -171.428, -42.0305, 0.52 ) }
    dend_8 { pt3dadd( -45.7321, -172.072, -41.9716, 0.66 ) }
    dend_8 { pt3dadd( -46.2781, -172.965, -41.804, 0.88 ) }
    dend_8 { pt3dadd( -46.6757, -173.58, -41.6671, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_8 { pt3dadd( -47.2246, -174.433, -41.4596, 1.03 ) }
    dend_8 { pt3dadd( -47.6007, -174.997, -41.3269, 0.66 ) }
    dend_8 { pt3dadd( -48.1445, -175.766, -41.1953, 0.66 ) }
    dend_8 { pt3dadd( -48.8229, -176.708, -41.086, 0.81 ) }
    dend_8 { pt3dadd( -49.0881, -177.084, -41.071, 0.81 ) }
    dend_8 { pt3dadd( -49.618, -177.907, -41.0736, 0.81 ) }
    dend_8 { pt3dadd( -50.5729, -179.512, -41.1372, 0.66 ) }
    dend_8 { pt3dadd( -51.2244, -180.686, -41.2208, 0.66 ) }
    dend_8 { pt3dadd( -51.8786, -181.947, -41.373, 0.66 ) }
    dend_8 { pt3dadd( -52.2644, -182.747, -41.4835, 0.52 ) }
    dend_8 { pt3dadd( -52.7856, -183.954, -41.6527, 0.52 ) }
    dend_8 { pt3dadd( -53.0988, -184.782, -41.8049, 0.59 ) }
    dend_8 { pt3dadd( -53.3374, -185.549, -41.9831, 0.59 ) }
    dend_8 { pt3dadd( -53.5916, -186.492, -42.2243, 0.81 ) }
    dend_8 { pt3dadd( -53.8728, -187.514, -42.5205, 0.88 ) }
    dend_8 { pt3dadd( -54.1228, -188.286, -42.7539, 1.03 ) }
    dend_8 { pt3dadd( -54.6833, -189.718, -43.2428, 1.11 ) }
    dend_8 { pt3dadd( -55.09, -190.674, -43.5778, 0.81 ) }
    dend_8 { pt3dadd( -55.32, -191.167, -43.7352, 0.81 ) }
    dend_8 { pt3dadd( -55.6072, -191.711, -43.8706, 0.37 ) }
    dend_8 { pt3dadd( -55.9835, -192.355, -44.0179, 0.44 ) }
    dend_8 { pt3dadd( -56.2614, -192.807, -44.0751, 0.81 ) }
    dend_8 { pt3dadd( -56.6446, -193.432, -44.1537, 0.81 ) }
    dend_8 { pt3dadd( -57.0067, -194.032, -44.2634, 0.44 ) }
    dend_8 { pt3dadd( -57.5317, -194.986, -44.4835, 0.44 ) }
    dend_8 { pt3dadd( -57.9737, -195.896, -44.7185, 0.66 ) }
    dend_8 { pt3dadd( -58.3541, -196.695, -44.9378, 1.18 ) }
    dend_8 { pt3dadd( -58.9656, -197.935, -45.3386, 0.52 ) }
    dend_8 { pt3dadd( -59.3279, -198.639, -45.5935, 0.44 ) }
    dend_8 { pt3dadd( -59.5646, -199.073, -45.7631, 0.44 ) }
    dend_8 { pt3dadd( -59.7765, -199.464, -45.9044, 0.44 ) }
    dend_8 { pt3dadd( -60.3938, -200.575, -46.231, 0.44 ) }
    dend_8 { pt3dadd( -60.6262, -201.084, -46.4396, 0.66 ) }
    dend_8 { pt3dadd( -60.8492, -201.742, -46.7352, 0.66 ) }
    dend_8 { pt3dadd( -60.9687, -202.202, -46.966, 0.88 ) }
    dend_8 { pt3dadd( -61.1258, -202.901, -47.3397, 0.88 ) }
    dend_8 { pt3dadd( -61.176, -203.17, -47.4862, 0.88 ) }
    dend_8 { pt3dadd( -61.5333, -205.684, -48.818, 0.66 ) }
    dend_8 { pt3dadd( -61.6346, -206.266, -49.0975, 0.81 ) }
    dend_8 { pt3dadd( -61.8826, -207.409, -49.63, 0.88 ) }
    dend_8 { pt3dadd( -62.0468, -208.013, -49.8764, 0.96 ) }
    dend_8 { pt3dadd( -62.1892, -208.422, -50.0006, 0.96 ) }
    dend_8 { pt3dadd( -62.4545, -209.037, -50.093, 0.44 ) }
    dend_8 { pt3dadd( -62.9631, -209.948, -50.0655, 0.44 ) }
    dend_8 { pt3dadd( -63.2168, -210.368, -50.0424, 0.44 ) }
    dend_8 { pt3dadd( -63.8136, -211.347, -49.9686, 0.44 ) }
    dend_8 { pt3dadd( -64.2217, -212.015, -49.9123, 0.66 ) }
    dend_8 { pt3dadd( -64.8054, -212.963, -49.8456, 0.81 ) }
    dend_8 { pt3dadd( -65.178, -213.515, -49.8166, 0.81 ) }
    dend_8 { pt3dadd( -65.989, -214.581, -49.7775, 0.81 ) }
    dend_8 { pt3dadd( -66.5926, -215.288, -49.7628, 0.66 ) }
    dend_8 { pt3dadd( -67.5388, -216.332, -49.7605, 0.66 ) }
    dend_8 { pt3dadd( -68.955, -217.843, -49.733, 0.66 ) }
    dend_8 { pt3dadd( -69.9706, -218.927, -49.6831, 0.52 ) }
    dend_8 { pt3dadd( -70.9334, -219.972, -49.6089, 0.52 ) }
    dend_8 { pt3dadd( -71.4685, -220.551, -49.5525, 0.52 ) }
    dend_8 { pt3dadd( -72.1419, -221.308, -49.464, 1.92 ) }
    dend_8 { pt3dadd( -73.0852, -222.479, -49.3058, 0.52 ) }
    dend_8 { pt3dadd( -73.4083, -222.955, -49.2695, 0.52 ) }
    dend_8 { pt3dadd( -73.802, -223.674, -49.2656, 0.52 ) }
    dend_8 { pt3dadd( -74.0322, -224.145, -49.2958, 0.59 ) }
    dend_8 { pt3dadd( -74.309, -224.637, -49.3488, 0.44 ) }
    dend_8 { pt3dadd( -74.9112, -225.592, -49.4854, 0.44 ) }
    dend_8 { pt3dadd( -75.6771, -226.792, -49.7398, 0.44 ) }
    dend_8 { pt3dadd( -76.2002, -227.577, -49.9135, 0.59 ) }
    dend_8 { pt3dadd( -76.7779, -228.433, -50.1071, 0.59 ) }
    dend_8 { pt3dadd( -77.7125, -229.796, -50.4107, 0.37 ) }
    dend_8 { pt3dadd( -78.3068, -230.653, -50.5875, 0.37 ) }
    dend_8 { pt3dadd( -78.8517, -231.452, -50.7269, 0.59 ) }
    dend_8 { pt3dadd( -79.2718, -232.061, -50.7753, 0.74 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 70/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.4679, -70.8411, -14.9609, 0.07 ) }
    dend_6 { pt3dadd( 25.452, -73.3031, -5.59334, 0.07 ) }
    dend_6 { pt3dadd( 25.5209, -73.3861, -5.34594, 0.52 ) }
    dend_6 { pt3dadd( 25.8831, -73.819, -4.33239, 0.37 ) }
    dend_6 { pt3dadd( 26.3181, -74.3342, -3.35095, 0.37 ) }
    dend_6 { pt3dadd( 26.6502, -74.7243, -2.7315, 0.22 ) }
    dend_6 { pt3dadd( 27.0338, -75.1733, -2.12674, 0.22 ) }
    dend_6 { pt3dadd( 27.8549, -76.0733, -1.92715, 0.44 ) }
    dend_6 { pt3dadd( 28.4936, -76.7674, -1.76968, 0.44 ) }
    dend_6 { pt3dadd( 28.9057, -77.2399, -1.66687, 0.52 ) }
    dend_6 { pt3dadd( 29.2985, -77.7146, -1.56807, 0.52 ) }
    dend_6 { pt3dadd( 29.7467, -78.2566, -1.46725, 0.52 ) }
    dend_6 { pt3dadd( 30.2719, -78.8782, -1.32703, 0.52 ) }
    dend_6 { pt3dadd( 30.9618, -79.7106, -1.11741, 0.52 ) }
    dend_6 { pt3dadd( 31.7235, -80.6326, -0.834087, 0.52 ) }
    dend_6 { pt3dadd( 32.2287, -81.2595, -0.609688, 0.52 ) }
    dend_6 { pt3dadd( 32.6407, -81.8255, -0.392218, 0.66 ) }
    dend_6 { pt3dadd( 33.3488, -82.9305, 0.0861483, 0.52 ) }
    dend_6 { pt3dadd( 33.7172, -83.5699, 0.393809, 0.52 ) }
    dend_6 { pt3dadd( 33.8659, -83.8375, 0.537571, 0.52 ) }
    dend_6 { pt3dadd( 34.2407, -84.4927, 0.894504, 0.29 ) }
    dend_6 { pt3dadd( 34.7454, -85.3416, 1.31622, 0.29 ) }
    dend_6 { pt3dadd( 35.1506, -86.0214, 1.65159, 0.29 ) }
    dend_6 { pt3dadd( 35.4747, -86.5752, 1.88651, 0.29 ) }
    dend_6 { pt3dadd( 35.9238, -87.325, 2.23319, 0.29 ) }
    dend_6 { pt3dadd( 36.4229, -88.0993, 2.63409, 0.29 ) }
    dend_6 { pt3dadd( 36.7601, -88.5508, 2.87411, 0.29 ) }
    dend_6 { pt3dadd( 37.7198, -89.6758, 3.47476, 0.44 ) }
    dend_6 { pt3dadd( 38.4466, -90.4929, 3.87816, 0.44 ) }
    dend_6 { pt3dadd( 39.0067, -91.1198, 4.20648, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_6 { pt3dadd( 39.6312, -91.8189, 4.57747, 0.52 ) }
    dend_6 { pt3dadd( 40.6386, -92.9824, 5.18222, 0.52 ) }
    dend_6 { pt3dadd( 41.1406, -93.5795, 5.4622, 0.52 ) }
    dend_6 { pt3dadd( 41.5586, -94.0784, 5.64972, 0.52 ) }
    dend_6 { pt3dadd( 42.1563, -94.8267, 5.88541, 0.66 ) }
    dend_6 { pt3dadd( 42.4039, -95.1693, 5.96205, 0.66 ) }
    dend_6 { pt3dadd( 42.843, -95.8457, 6.07524, 0.37 ) }
    dend_6 { pt3dadd( 43.1992, -96.4175, 6.20463, 0.37 ) }
    dend_6 { pt3dadd( 43.5634, -96.9677, 6.33799, 0.37 ) }
    dend_6 { pt3dadd( 43.8355, -97.358, 6.42948, 0.37 ) }
    dend_6 { pt3dadd( 44.4401, -98.2489, 6.61208, 0.44 ) }
    dend_6 { pt3dadd( 44.9629, -99.1181, 6.82309, 0.59 ) }
    dend_6 { pt3dadd( 45.6849, -100.506, 7.1876, 0.59 ) }
    dend_6 { pt3dadd( 46.1301, -101.56, 7.4637, 0.88 ) }
    dend_6 { pt3dadd( 46.4683, -102.541, 7.70953, 0.74 ) }
    dend_6 { pt3dadd( 46.7344, -103.502, 7.93234, 0.74 ) }
    dend_6 { pt3dadd( 47.0173, -105.06, 8.28688, 0.74 ) }
    dend_6 { pt3dadd( 47.1157, -105.855, 8.46105, 0.74 ) }
    dend_6 { pt3dadd( 47.2177, -106.886, 8.65776, 0.44 ) }
    dend_6 { pt3dadd( 47.3072, -107.738, 8.85708, 0.44 ) }
    dend_6 { pt3dadd( 47.426, -108.466, 9.04905, 0.44 ) }
    dend_6 { pt3dadd( 47.7691, -109.831, 9.41751, 0.59 ) }
    dend_6 { pt3dadd( 48.143, -110.967, 9.71665, 0.59 ) }
    dend_6 { pt3dadd( 48.536, -111.972, 9.99201, 0.59 ) }
    dend_6 { pt3dadd( 48.9992, -113.007, 10.2899, 0.96 ) }
    dend_6 { pt3dadd( 49.4432, -113.9, 10.5404, 0.29 ) }
    dend_6 { pt3dadd( 50.2928, -115.387, 10.9217, 0.29 ) }
    dend_6 { pt3dadd( 50.4761, -115.668, 10.9694, 0.29 ) }
    dend_6 { pt3dadd( 50.8544, -116.224, 11.0588, 0.52 ) }
    dend_6 { pt3dadd( 51.3245, -116.919, 11.1472, 0.22 ) }
    dend_6 { pt3dadd( 51.8233, -117.643, 11.1942, 0.22 ) }
    dend_6 { pt3dadd( 52.1952, -118.189, 11.2241, 0.44 ) }
    dend_6 { pt3dadd( 52.8094, -118.998, 11.2537, 0.66 ) }
    dend_6 { pt3dadd( 53.533, -119.92, 11.3587, 0.66 ) }
    dend_6 { pt3dadd( 54.0926, -120.609, 11.4769, 0.66 ) }
    dend_6 { pt3dadd( 54.7113, -121.333, 11.6334, 0.59 ) }
    dend_6 { pt3dadd( 55.3839, -122.153, 11.8393, 0.59 ) }
    dend_6 { pt3dadd( 56.2267, -123.241, 12.1345, 0.59 ) }
    dend_6 { pt3dadd( 57.1311, -124.464, 12.4627, 0.59 ) }
    dend_6 { pt3dadd( 57.443, -124.887, 12.5482, 0.59 ) }
    dend_6 { pt3dadd( 57.8809, -125.47, 12.6521, 0.44 ) }
    dend_6 { pt3dadd( 58.5009, -126.383, 12.7733, 0.44 ) }
    dend_6 { pt3dadd( 58.8826, -126.966, 12.8217, 0.44 ) }
    dend_6 { pt3dadd( 59.2622, -127.567, 12.837, 0.44 ) }
    dend_6 { pt3dadd( 59.6303, -128.137, 12.8183, 0.44 ) }
    dend_6 { pt3dadd( 60.1605, -128.96, 12.8096, 0.44 ) }
    dend_6 { pt3dadd( 60.6033, -129.629, 12.815, 0.44 ) }
    dend_6 { pt3dadd( 61.346, -130.718, 12.8411, 0.52 ) }
    dend_6 { pt3dadd( 61.7012, -131.25, 12.848, 0.52 ) }
    dend_6 { pt3dadd( 62.669, -132.716, 12.8593, 0.52 ) }
    dend_6 { pt3dadd( 63.4614, -133.892, 12.8543, 0.52 ) }
    dend_6 { pt3dadd( 64.2306, -134.971, 12.8385, 0.52 ) }
    dend_6 { pt3dadd( 64.8938, -135.823, 12.8171, 0.52 ) }
    dend_6 { pt3dadd( 66.4112, -137.642, 12.7198, 0.37 ) }
    dend_6 { pt3dadd( 67.3204, -138.644, 12.6514, 0.37 ) }
    dend_6 { pt3dadd( 68.55, -139.871, 12.5359, 0.37 ) }
    dend_6 { pt3dadd( 69.3787, -140.636, 12.4479, 0.37 ) }
    dend_6 { pt3dadd( 70.2762, -141.427, 12.3441, 0.37 ) }
    dend_6 { pt3dadd( 71.3509, -142.357, 12.2494, 0.37 ) }
    dend_6 { pt3dadd( 72.3293, -143.193, 12.2006, 0.37 ) }
    dend_6 { pt3dadd( 73.13, -143.908, 12.1849, 0.59 ) }
    dend_6 { pt3dadd( 73.6314, -144.376, 12.2036, 0.59 ) }
    dend_6 { pt3dadd( 74.0137, -144.739, 12.2655, 0.88 ) }
    dend_6 { pt3dadd( 75.0066, -145.61, 12.5238, 0.44 ) }
    dend_6 { pt3dadd( 75.6641, -146.118, 12.7633, 0.44 ) }
    dend_6 { pt3dadd( 76.6674, -146.865, 13.1732, 0.44 ) }
    dend_6 { pt3dadd( 77.4181, -147.398, 13.5069, 0.44 ) }
    dend_6 { pt3dadd( 78.8403, -148.346, 14.1462, 0.44 ) }
    dend_6 { pt3dadd( 79.9008, -148.986, 14.6083, 0.44 ) }
    dend_6 { pt3dadd( 81.2712, -149.699, 15.1506, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 70/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 23.4679, -70.8411, -14.9609, 1.18 ) }
    dend_5 { pt3dadd( 23.7606, -71.0208, -15.011, 1.18 ) }
    dend_5 { pt3dadd( 24.5783, -71.5176, -15.1261, 1.18 ) }
    dend_5 { pt3dadd( 25.8347, -72.283, -15.3467, 0.66 ) }
    dend_5 { pt3dadd( 26.3606, -72.6234, -15.4429, 0.66 ) }
    dend_5 { pt3dadd( 27.427, -73.3443, -15.6659, 0.66 ) }
    dend_5 { pt3dadd( 28.7021, -74.236, -15.9426, 0.66 ) }
    dend_5 { pt3dadd( 29.9444, -75.1314, -16.2164, 0.66 ) }
    dend_5 { pt3dadd( 30.9663, -75.8825, -16.4674, 0.66 ) }
    dend_5 { pt3dadd( 32.101, -76.7177, -16.7542, 0.66 ) }
    dend_5 { pt3dadd( 33.1422, -77.4565, -17.0198, 0.74 ) }
    dend_5 { pt3dadd( 34.0202, -78.0536, -17.2435, 0.88 ) }
    dend_5 { pt3dadd( 34.9934, -78.6989, -17.4907, 0.88 ) }
    dend_5 { pt3dadd( 35.9734, -79.329, -17.7194, 0.66 ) }
    dend_5 { pt3dadd( 36.9052, -79.8936, -17.895, 0.66 ) }
    dend_5 { pt3dadd( 37.6147, -80.2976, -18.0114, 0.66 ) }
    dend_5 { pt3dadd( 38.5904, -80.8565, -18.1301, 0.96 ) }
    dend_5 { pt3dadd( 39.4398, -81.3563, -18.2428, 1.47 ) }
    dend_5 { pt3dadd( 39.9988, -81.6977, -18.34, 1.99 ) }
    dend_5 { pt3dadd( 40.5202, -82.0228, -18.4495, 1.92 ) }
    dend_5 { pt3dadd( 41.2912, -82.4727, -18.6481, 1.25 ) }
    dend_5 { pt3dadd( 42.2187, -82.9561, -18.9047, 1.03 ) }
    dend_5 { pt3dadd( 43.4608, -83.5478, -19.293, 1.03 ) }
    dend_5 { pt3dadd( 44.6847, -84.1007, -19.7057, 0.88 ) }
    dend_5 { pt3dadd( 45.3962, -84.4281, -19.9688, 1.03 ) }
    dend_5 { pt3dadd( 46.3904, -84.8794, -20.3749, 0.74 ) }
    dend_5 { pt3dadd( 47.3788, -85.326, -20.7971, 0.74 ) }
    dend_5 { pt3dadd( 48.2834, -85.7351, -21.1955, 1.18 ) }
    dend_5 { pt3dadd( 48.978, -86.0385, -21.4794, 1.18 ) }
    dend_5 { pt3dadd( 50.4627, -86.7152, -22.0725, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( 51.8653, -87.4159, -22.6545, 0.81 ) }
    dend_5 { pt3dadd( 52.3511, -87.6824, -22.8607, 0.81 ) }
    dend_5 { pt3dadd( 53.4664, -88.315, -23.2649, 0.52 ) }
    dend_5 { pt3dadd( 54.7174, -89.0208, -23.6174, 0.52 ) }
    dend_5 { pt3dadd( 56.1242, -89.7926, -23.9731, 0.52 ) }
    dend_5 { pt3dadd( 57.1297, -90.3283, -24.1719, 0.59 ) }
    dend_5 { pt3dadd( 57.994, -90.8075, -24.3044, 0.74 ) }
    dend_5 { pt3dadd( 59.436, -91.6321, -24.5544, 1.18 ) }
    dend_5 { pt3dadd( 60.1243, -92.0397, -24.6888, 1.18 ) }
    dend_5 { pt3dadd( 61.4343, -92.8136, -24.9754, 0.66 ) }
    dend_5 { pt3dadd( 62.4765, -93.3807, -25.1979, 0.88 ) }
    dend_5 { pt3dadd( 64.0727, -94.1865, -25.5466, 0.66 ) }
    dend_5 { pt3dadd( 65.6028, -94.9215, -25.8956, 0.96 ) }
    dend_5 { pt3dadd( 66.7329, -95.4574, -26.1874, 1.11 ) }
    dend_5 { pt3dadd( 67.8542, -95.9864, -26.4493, 1.11 ) }
    dend_5 { pt3dadd( 68.9162, -96.4979, -26.6812, 0.88 ) }
    dend_5 { pt3dadd( 69.8518, -96.9562, -26.8888, 0.96 ) }
    dend_5 { pt3dadd( 70.7756, -97.4033, -27.0623, 1.18 ) }
    dend_5 { pt3dadd( 71.9896, -97.994, -27.2387, 0.88 ) }
    dend_5 { pt3dadd( 73.1077, -98.5426, -27.3853, 0.88 ) }
    dend_5 { pt3dadd( 74.7512, -99.3772, -27.5954, 0.88 ) }
    dend_5 { pt3dadd( 76.3272, -100.212, -27.7839, 0.74 ) }
    dend_5 { pt3dadd( 78.1541, -101.226, -27.9657, 0.74 ) }
    dend_5 { pt3dadd( 78.701, -101.547, -28.0056, 0.74 ) }
    dend_5 { pt3dadd( 79.447, -102.012, -28.0262, 0.74 ) }
    dend_5 { pt3dadd( 80.3987, -102.636, -28.0185, 0.59 ) }
    dend_5 { pt3dadd( 81.2353, -103.22, -27.9711, 0.52 ) }
    dend_5 { pt3dadd( 82.2655, -103.997, -27.9085, 0.52 ) }
    dend_5 { pt3dadd( 82.8257, -104.457, -27.8763, 0.52 ) }
    dend_5 { pt3dadd( 83.8951, -105.361, -27.8089, 0.52 ) }
    dend_5 { pt3dadd( 84.4731, -105.847, -27.7476, 0.52 ) }
    dend_5 { pt3dadd( 85.1789, -106.415, -27.6478, 0.52 ) }
    dend_5 { pt3dadd( 85.604, -106.734, -27.5781, 0.96 ) }
    dend_5 { pt3dadd( 86.1622, -107.127, -27.4811, 1.33 ) }
    dend_5 { pt3dadd( 87.0745, -107.731, -27.2755, 1.62 ) }
    dend_5 { pt3dadd( 88.1127, -108.414, -27.0068, 0.66 ) }
    dend_5 { pt3dadd( 88.4117, -108.614, -26.944, 0.66 ) }
    dend_5 { pt3dadd( 89.2564, -109.174, -26.7198, 0.44 ) }
    dend_5 { pt3dadd( 90.0594, -109.707, -26.4873, 0.44 ) }
    dend_5 { pt3dadd( 91.5593, -110.707, -26.0668, 0.44 ) }
    dend_5 { pt3dadd( 92.0763, -111.063, -25.9343, 0.44 ) }
    dend_5 { pt3dadd( 93.328, -111.965, -25.707, 1.03 ) }
    dend_5 { pt3dadd( 94.8966, -113.185, -25.4925, 0.74 ) }
    dend_5 { pt3dadd( 95.8252, -113.932, -25.4352, 0.74 ) }
    dend_5 { pt3dadd( 96.9486, -114.857, -25.4542, 0.59 ) }
    dend_5 { pt3dadd( 97.8812, -115.663, -25.5523, 0.59 ) }
    dend_5 { pt3dadd( 98.8999, -116.576, -25.6898, 0.96 ) }
    dend_5 { pt3dadd( 99.8, -117.435, -25.8429, 0.96 ) }
    dend_5 { pt3dadd( 100.587, -118.23, -26.0447, 0.52 ) }
    dend_5 { pt3dadd( 101.1, -118.761, -26.1925, 0.52 ) }
    dend_5 { pt3dadd( 101.827, -119.507, -26.4255, 0.52 ) }
    dend_5 { pt3dadd( 102.619, -120.311, -26.681, 0.52 ) }
    dend_5 { pt3dadd( 103.415, -121.089, -26.937, 0.74 ) }
    dend_5 { pt3dadd( 104.198, -121.848, -27.2415, 0.74 ) }
    dend_5 { pt3dadd( 105.158, -122.789, -27.6518, 0.74 ) }
    dend_5 { pt3dadd( 105.921, -123.533, -28.0427, 0.37 ) }
    dend_5 { pt3dadd( 106.926, -124.497, -28.6773, 0.37 ) }
    dend_5 { pt3dadd( 107.423, -124.992, -29.0349, 0.37 ) }
    dend_5 { pt3dadd( 108.109, -125.685, -29.5345, 0.66 ) }
    dend_5 { pt3dadd( 108.577, -126.173, -29.8712, 0.66 ) }
    dend_5 { pt3dadd( 109.187, -126.819, -30.2815, 0.59 ) }
    dend_5 { pt3dadd( 109.996, -127.676, -30.8168, 0.59 ) }
    dend_5 { pt3dadd( 110.806, -128.504, -31.3308, 0.37 ) }
    dend_5 { pt3dadd( 111.759, -129.463, -31.8897, 0.37 ) }
    dend_5 { pt3dadd( 113.137, -130.783, -32.604, 0.37 ) }
    dend_5 { pt3dadd( 113.382, -131.012, -32.7314, 0.37 ) }
    dend_5 { pt3dadd( 113.611, -131.21, -32.846, 0.37 ) }
    dend_5 { pt3dadd( 114.076, -131.588, -33.1069, 0.37 ) }
    dend_5 { pt3dadd( 115.248, -132.498, -33.8476, 0.37 ) }
    dend_5 { pt3dadd( 115.833, -132.961, -34.23, 0.44 ) }
    dend_5 { pt3dadd( 116.76, -133.731, -34.8518, 0.52 ) }
    dend_5 { pt3dadd( 117.954, -134.776, -35.6691, 0.52 ) }
    dend_5 { pt3dadd( 118.983, -135.688, -36.3523, 1.03 ) }
    dend_5 { pt3dadd( 119.451, -136.128, -36.647, 1.47 ) }
    dend_5 { pt3dadd( 120.282, -136.968, -37.1429, 1.92 ) }
    dend_5 { pt3dadd( 121.435, -138.225, -37.8048, 0.59 ) }
    dend_5 { pt3dadd( 122.033, -138.912, -38.1068, 0.44 ) }
    dend_5 { pt3dadd( 122.62, -139.636, -38.3591, 0.44 ) }
    dend_5 { pt3dadd( 123.704, -141.023, -38.7436, 0.44 ) }
    dend_5 { pt3dadd( 124.559, -142.121, -39.0212, 1.33 ) }
    dend_5 { pt3dadd( 124.929, -142.635, -39.1214, 1.47 ) }
    dend_5 { pt3dadd( 125.423, -143.398, -39.1864, 0.37 ) }
    dend_5 { pt3dadd( 126.145, -144.617, -39.2277, 0.37 ) }
    dend_5 { pt3dadd( 126.486, -145.244, -39.2266, 0.37 ) }
    dend_5 { pt3dadd( 126.696, -145.643, -39.2119, 0.37 ) }
    dend_5 { pt3dadd( 127.608, -147.445, -39.1272, 0.37 ) }
    dend_5 { pt3dadd( 128.414, -149.073, -39.0712, 0.37 ) }
    dend_5 { pt3dadd( 128.726, -149.724, -39.0813, 0.59 ) }
    dend_5 { pt3dadd( 129.403, -151.175, -39.1287, 0.59 ) }
    dend_5 { pt3dadd( 129.926, -152.301, -39.1817, 0.59 ) }
    dend_5 { pt3dadd( 130.375, -153.234, -39.2564, 0.59 ) }
    dend_5 { pt3dadd( 130.799, -154.03, -39.3724, 0.88 ) }
    dend_5 { pt3dadd( 131.479, -155.311, -39.6269, 0.88 ) }
    dend_5 { pt3dadd( 132.233, -156.796, -40.0078, 0.59 ) }
    dend_5 { pt3dadd( 132.736, -157.82, -40.3003, 0.59 ) }
    dend_5 { pt3dadd( 133.158, -158.738, -40.5615, 0.59 ) }
    dend_5 { pt3dadd( 133.714, -160.018, -40.898, 1.18 ) }
    dend_5 { pt3dadd( 133.965, -160.642, -41.0563, 1.99 ) }
    dend_5 { pt3dadd( 134.798, -162.937, -41.6008, 0.59 ) }
    dend_5 { pt3dadd( 135.308, -164.524, -41.9952, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( 135.58, -165.59, -42.1879, 0.96 ) }
    dend_5 { pt3dadd( 135.802, -166.774, -42.3141, 1.33 ) }
    dend_5 { pt3dadd( 135.986, -168.141, -42.2917, 0.37 ) }
    dend_5 { pt3dadd( 136.074, -168.831, -42.1883, 0.37 ) }
    dend_5 { pt3dadd( 136.214, -169.96, -41.8103, 0.37 ) }
    dend_5 { pt3dadd( 136.435, -171.535, -41.1472, 0.81 ) }
    dend_5 { pt3dadd( 136.556, -172.175, -40.8185, 0.81 ) }
    dend_5 { pt3dadd( 136.998, -173.934, -39.8011, 0.81 ) }
    dend_5 { pt3dadd( 137.426, -175.369, -38.939, 0.44 ) }
    dend_5 { pt3dadd( 137.943, -176.842, -38.0626, 0.44 ) }
    dend_5 { pt3dadd( 138.378, -177.955, -37.4186, 0.44 ) }
    dend_5 { pt3dadd( 138.98, -179.394, -36.6589, 0.59 ) }
    dend_5 { pt3dadd( 139.282, -180.16, -36.3023, 0.59 ) }
    dend_5 { pt3dadd( 139.705, -181.353, -35.8315, 0.59 ) }
    dend_5 { pt3dadd( 139.935, -182.106, -35.5625, 0.74 ) }
    dend_5 { pt3dadd( 140.041, -182.508, -35.4089, 0.74 ) }
    dend_5 { pt3dadd( 140.171, -183.002, -35.2059, 0.37 ) }
    dend_5 { pt3dadd( 140.438, -184.084, -34.7866, 0.37 ) }
    dend_5 { pt3dadd( 140.736, -185.197, -34.3009, 0.37 ) }
    dend_5 { pt3dadd( 141.123, -186.355, -33.7615, 0.37 ) }
    dend_5 { pt3dadd( 141.62, -187.673, -33.1085, 0.37 ) }
    dend_5 { pt3dadd( 142.127, -188.879, -32.5049, 0.37 ) }
    dend_5 { pt3dadd( 142.611, -190.013, -31.968, 0.37 ) }
    dend_5 { pt3dadd( 143.122, -191.156, -31.4742, 0.96 ) }
    dend_5 { pt3dadd( 143.436, -191.926, -31.1618, 0.96 ) }
    dend_5 { pt3dadd( 143.751, -192.717, -30.8549, 0.96 ) }
    dend_5 { pt3dadd( 144.143, -193.652, -30.5032, 0.44 ) }
    dend_5 { pt3dadd( 144.614, -194.827, -30.0342, 0.44 ) }
    dend_5 { pt3dadd( 145.214, -196.357, -29.4215, 0.44 ) }
    dend_5 { pt3dadd( 145.984, -198.359, -28.6575, 0.44 ) }
    dend_5 { pt3dadd( 146.611, -200.011, -28.0474, 0.44 ) }
    dend_5 { pt3dadd( 147.39, -202.098, -27.3383, 0.44 ) }
    dend_5 { pt3dadd( 147.739, -203.015, -27.0334, 0.44 ) }
    dend_5 { pt3dadd( 147.915, -203.45, -26.9017, 0.44 ) }
    dend_5 { pt3dadd( 148.238, -204.312, -26.6956, 0.44 ) }
    dend_5 { pt3dadd( 148.568, -205.296, -26.5651, 0.44 ) }
    dend_5 { pt3dadd( 148.915, -206.586, -26.4491, 0.44 ) }
    dend_5 { pt3dadd( 149.017, -207.077, -26.4279, 0.44 ) }
    dend_5 { pt3dadd( 149.274, -208.441, -26.3812, 0.44 ) }
    dend_5 { pt3dadd( 149.41, -209.281, -26.3521, 0.44 ) }
    dend_5 { pt3dadd( 149.759, -211.559, -26.2726, 0.44 ) }
    dend_5 { pt3dadd( 150.154, -213.705, -26.21, 0.44 ) }
    dend_5 { pt3dadd( 150.392, -214.819, -26.184, 0.44 ) }
    dend_5 { pt3dadd( 150.731, -216.286, -26.1582, 0.44 ) }
    dend_5 { pt3dadd( 151.076, -217.668, -26.1419, 0.66 ) }
    dend_5 { pt3dadd( 151.617, -219.552, -26.1484, 0.15 ) }
    dend_5 { pt3dadd( 152.132, -221.091, -26.1967, 0.29 ) }
    dend_5 { pt3dadd( 152.659, -222.529, -26.33, 0.29 ) }
    dend_5 { pt3dadd( 152.98, -223.307, -26.4329, 0.29 ) }
    dend_5 { pt3dadd( 153.292, -224.04, -26.5563, 0.44 ) }
    dend_5 { pt3dadd( 153.727, -225.105, -26.7766, 0.44 ) }
    dend_5 { pt3dadd( 154.29, -226.6, -27.1247, 0.44 ) }
    dend_5 { pt3dadd( 154.834, -228.174, -27.5028, 0.44 ) }
    dend_5 { pt3dadd( 155.2, -229.162, -27.7579, 0.44 ) }
    dend_5 { pt3dadd( 155.497, -229.887, -27.9145, 0.44 ) }
    dend_5 { pt3dadd( 156.178, -231.397, -28.166, 0.59 ) }
    dend_5 { pt3dadd( 156.647, -232.337, -28.2475, 0.59 ) }
    dend_5 { pt3dadd( 156.938, -232.901, -28.2479, 0.59 ) }
    dend_5 { pt3dadd( 157.672, -234.313, -28.1727, 0.59 ) }
    dend_5 { pt3dadd( 158.538, -236.047, -28.0593, 0.37 ) }
    dend_5 { pt3dadd( 159.102, -237.105, -28.0276, 0.37 ) }
    dend_5 { pt3dadd( 159.564, -237.911, -28.0295, 0.74 ) }
    dend_5 { pt3dadd( 160.208, -239.012, -28.0875, 0.74 ) }
    dend_5 { pt3dadd( 160.771, -240.019, -28.1929, 0.44 ) }
    dend_5 { pt3dadd( 161.073, -240.614, -28.2893, 0.44 ) }
    dend_5 { pt3dadd( 161.866, -242.13, -28.6531, 0.59 ) }
    dend_5 { pt3dadd( 162.424, -243.158, -28.9018, 0.59 ) }
    dend_5 { pt3dadd( 162.61, -243.473, -28.9747, 0.59 ) }
    dend_5 { pt3dadd( 163.217, -244.323, -29.1338, 0.37 ) }
    dend_5 { pt3dadd( 163.935, -245.19, -29.2384, 0.37 ) }
    dend_5 { pt3dadd( 165.156, -246.511, -29.431, 0.37 ) }
    dend_5 { pt3dadd( 165.859, -247.224, -29.5312, 0.37 ) }
    dend_5 { pt3dadd( 166.628, -247.95, -29.6789, 0.37 ) }
    dend_5 { pt3dadd( 167.461, -248.687, -29.8909, 0.37 ) }
    dend_5 { pt3dadd( 168.299, -249.359, -30.1362, 0.37 ) }
    dend_5 { pt3dadd( 169.793, -250.54, -30.6204, 0.44 ) }
    dend_5 { pt3dadd( 170.461, -251.115, -30.8596, 0.59 ) }
    dend_5 { pt3dadd( 171.384, -251.981, -31.2055, 0.59 ) }
    dend_5 { pt3dadd( 172.129, -252.814, -31.5095, 0.59 ) }
    dend_5 { pt3dadd( 172.843, -253.75, -31.8025, 0.52 ) }
    dend_5 { pt3dadd( 173.509, -254.813, -32.059, 0.52 ) }
    dend_5 { pt3dadd( 174.058, -255.856, -32.2201, 0.52 ) }
    dend_5 { pt3dadd( 174.242, -256.276, -32.2744, 0.52 ) }
    dend_5 { pt3dadd( 174.739, -257.536, -32.4944, 0.52 ) }
    dend_5 { pt3dadd( 175.119, -258.523, -32.7029, 0.52 ) }
    dend_5 { pt3dadd( 175.578, -259.72, -33.0173, 0.52 ) }
    dend_5 { pt3dadd( 175.904, -260.537, -33.2645, 0.52 ) }
    dend_5 { pt3dadd( 176.088, -260.987, -33.4263, 0.52 ) }
    dend_5 { pt3dadd( 176.779, -262.863, -34.148, 0.52 ) }
    dend_5 { pt3dadd( 177.314, -264.671, -34.945, 0.52 ) }
    dend_5 { pt3dadd( 177.456, -265.477, -35.3194, 0.52 ) }
    dend_5 { pt3dadd( 177.493, -265.953, -35.555, 0.52 ) }
    dend_5 { pt3dadd( 177.458, -266.936, -35.9609, 0.52 ) }
    dend_5 { pt3dadd( 177.329, -267.99, -36.2592, 0.52 ) }
    dend_5 { pt3dadd( 177.103, -269.169, -36.4278, 0.37 ) }
    dend_5 { pt3dadd( 176.794, -270.506, -36.5749, 0.37 ) }
    dend_5 { pt3dadd( 176.524, -271.822, -36.6594, 0.59 ) }
    dend_5 { pt3dadd( 176.206, -273.778, -36.6894, 0.59 ) }
    dend_5 { pt3dadd( 176.026, -275.3, -36.6318, 0.59 ) }
    dend_5 { pt3dadd( 175.955, -276.344, -36.5391, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_5 { pt3dadd( 175.92, -277.116, -36.4295, 0.29 ) }
    dend_5 { pt3dadd( 175.891, -278.263, -36.2979, 0.29 ) }
    dend_5 { pt3dadd( 175.871, -279.34, -36.2205, 0.29 ) }
    dend_5 { pt3dadd( 175.864, -279.947, -36.22, 0.52 ) }
    dend_5 { pt3dadd( 175.859, -280.685, -36.2044, 0.52 ) }
    dend_5 { pt3dadd( 175.899, -281.417, -36.1395, 0.52 ) }
    dend_5 { pt3dadd( 176.051, -282.577, -35.915, 0.52 ) }
    dend_5 { pt3dadd( 176.252, -283.611, -35.656, 0.52 ) }
    dend_5 { pt3dadd( 176.444, -284.41, -35.4356, 0.52 ) }
    dend_5 { pt3dadd( 176.826, -285.807, -35.0433, 0.52 ) }
    dend_5 { pt3dadd( 177.39, -287.624, -34.5698, 0.52 ) }
    dend_5 { pt3dadd( 177.926, -289.153, -34.1666, 0.52 ) }
    dend_5 { pt3dadd( 178.158, -289.745, -34.0113, 0.52 ) }
    dend_5 { pt3dadd( 178.424, -290.378, -33.8693, 0.52 ) }
    dend_5 { pt3dadd( 178.756, -291.155, -33.7838, 0.52 ) }
    dend_5 { pt3dadd( 179.211, -292.184, -33.8255, 0.52 ) }
    dend_5 { pt3dadd( 179.592, -293.042, -33.9843, 0.52 ) }
    dend_5 { pt3dadd( 180.05, -294.013, -34.2464, 0.52 ) }
    dend_5 { pt3dadd( 180.861, -295.614, -34.7848, 0.52 ) }
    dend_5 { pt3dadd( 181.663, -297.091, -35.3516, 0.52 ) }
    dend_5 { pt3dadd( 182.368, -298.397, -35.8886, 0.52 ) }
    dend_5 { pt3dadd( 182.773, -299.162, -36.2364, 0.52 ) }
    dend_5 { pt3dadd( 182.998, -299.596, -36.4457, 0.52 ) }
    dend_5 { pt3dadd( 183.658, -300.912, -37.0671, 0.52 ) }
    dend_5 { pt3dadd( 184.025, -301.64, -37.3921, 0.52 ) }
    dend_5 { pt3dadd( 184.586, -302.76, -37.7636, 0.52 ) }
    dend_5 { pt3dadd( 185.206, -304.05, -38.0915, 0.52 ) }
    dend_5 { pt3dadd( 185.565, -304.927, -38.286, 0.52 ) }
    dend_5 { pt3dadd( 185.878, -305.851, -38.4697, 0.52 ) }
    dend_5 { pt3dadd( 185.984, -306.216, -38.5366, 0.74 ) }
    dend_5 { pt3dadd( 186.155, -306.849, -38.6642, 0.74 ) }
    dend_5 { pt3dadd( 186.334, -307.504, -38.8124, 0.74 ) }
    dend_5 { pt3dadd( 186.797, -309.359, -39.2247, 0.37 ) }
    dend_5 { pt3dadd( 187.073, -310.541, -39.5571, 0.44 ) }
    dend_5 { pt3dadd( 187.293, -311.517, -39.8546, 0.44 ) }
    dend_5 { pt3dadd( 187.413, -312.026, -39.9755, 0.66 ) }
    dend_5 { pt3dadd( 187.622, -312.904, -40.1307, 0.66 ) }
    dend_5 { pt3dadd( 187.893, -314.087, -40.2815, 0.66 ) }
    dend_5 { pt3dadd( 188.234, -315.595, -40.3808, 0.44 ) }
    dend_5 { pt3dadd( 188.505, -317.129, -40.3835, 0.44 ) }
    dend_5 { pt3dadd( 188.756, -319.143, -40.2955, 0.44 ) }
    dend_5 { pt3dadd( 188.834, -320.073, -40.2605, 0.52 ) }
    dend_5 { pt3dadd( 188.823, -321.032, -40.2375, 0.59 ) }
    dend_5 { pt3dadd( 188.721, -321.836, -40.2387, 0.59 ) }
    dend_5 { pt3dadd( 188.556, -322.599, -40.2872, 0.59 ) }
    dend_5 { pt3dadd( 188.219, -323.841, -40.5268, 0.59 ) }
    dend_5 { pt3dadd( 187.872, -325.08, -40.8897, 0.59 ) }
    dend_5 { pt3dadd( 187.419, -326.874, -41.5496, 0.59 ) }
    dend_5 { pt3dadd( 187.262, -327.659, -41.8661, 0.59 ) }
    dend_5 { pt3dadd( 187.087, -329.288, -42.566, 0.59 ) }
    dend_5 { pt3dadd( 187.058, -330.438, -43.08, 0.59 ) }
    dend_5 { pt3dadd( 187.112, -331.265, -43.4341, 0.59 ) }
    dend_5 { pt3dadd( 187.417, -332.828, -44.017, 0.44 ) }
    dend_5 { pt3dadd( 187.852, -334.057, -44.4164, 0.44 ) }
    dend_5 { pt3dadd( 188.562, -335.604, -44.8103, 0.44 ) }
    dend_5 { pt3dadd( 188.775, -335.995, -44.8696, 0.74 ) }
    dend_5 { pt3dadd( 189.281, -336.809, -44.9299, 0.74 ) }
    dend_5 { pt3dadd( 189.886, -337.714, -44.9369, 0.74 ) }
    dend_5 { pt3dadd( 190.397, -338.468, -44.886, 0.52 ) }
    dend_5 { pt3dadd( 191.018, -339.415, -44.8141, 0.44 ) }
    dend_5 { pt3dadd( 191.639, -340.495, -44.7332, 0.44 ) }
    dend_5 { pt3dadd( 192.002, -341.171, -44.7018, 0.44 ) }
    dend_5 { pt3dadd( 192.467, -342.13, -44.6868, 0.44 ) }
    dend_5 { pt3dadd( 192.809, -342.933, -44.6897, 0.74 ) }
    dend_5 { pt3dadd( 193.031, -343.564, -44.7035, 0.37 ) }
    dend_5 { pt3dadd( 193.361, -344.771, -44.7279, 0.37 ) }
    dend_5 { pt3dadd( 193.57, -345.74, -44.7631, 0.37 ) }
    dend_5 { pt3dadd( 193.685, -346.309, -44.7911, 0.37 ) }
    dend_5 { pt3dadd( 193.913, -347.354, -44.8835, 0.37 ) }
    dend_5 { pt3dadd( 194.265, -348.724, -45.0276, 0.37 ) }
    dend_5 { pt3dadd( 194.523, -349.617, -45.1276, 0.37 ) }
    dend_5 { pt3dadd( 194.868, -350.688, -45.2816, 0.37 ) }
    dend_5 { pt3dadd( 195.14, -351.57, -45.4163, 0.37 ) }
    dend_5 { pt3dadd( 195.352, -352.349, -45.5485, 0.37 ) }
    dend_5 { pt3dadd( 195.525, -353.151, -45.7148, 0.37 ) }
    dend_5 { pt3dadd( 195.803, -354.37, -45.9875, 0.37 ) }
    dend_5 { pt3dadd( 196.182, -356.14, -46.4057, 0.37 ) }
    dend_5 { pt3dadd( 196.394, -357.359, -46.6809, 0.37 ) }
    dend_5 { pt3dadd( 196.5, -358.195, -46.8636, 0.37 ) }
    dend_5 { pt3dadd( 196.651, -359.867, -47.1948, 0.37 ) }
    dend_5 { pt3dadd( 196.744, -361.913, -47.622, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 81/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -24.9234, 47.8105, 2.56814, 1.4 ) }
    dend_71 { pt3dadd( -25.8434, 48.2308, 2.56814, 1.4 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 78.9652, -147.87, 6.14065, 0.44 ) }
    dend_34 { pt3dadd( 79.6678, -148.931, 6.24409, 0.44 ) }
    dend_34 { pt3dadd( 80.3774, -149.909, 6.32493, 0.44 ) }
    dend_34 { pt3dadd( 81.0113, -150.735, 6.38208, 0.44 ) }
    dend_34 { pt3dadd( 81.8187, -151.779, 6.44064, 0.44 ) }
    dend_34 { pt3dadd( 82.5829, -152.714, 6.48451, 0.44 ) }
    dend_34 { pt3dadd( 83.12, -153.328, 6.5094, 0.44 ) }
    dend_34 { pt3dadd( 83.7406, -153.967, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 84.5107, -154.719, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 85.5298, -155.657, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 86.5401, -156.52, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 87.4153, -157.241, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 87.718, -157.494, 6.51138, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 96/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 78.9652, -147.87, 6.14065, 0.59 ) }
    dend_33 { pt3dadd( 80.0393, -149.554, 6.34818, 0.59 ) }
    dend_33 { pt3dadd( 80.4301, -150.189, 6.48188, 0.59 ) }
    dend_33 { pt3dadd( 81.0, -151.137, 6.70595, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_33 { pt3dadd( 81.3856, -151.762, 6.85744, 0.59 ) }
    dend_33 { pt3dadd( 82.0056, -152.807, 7.10406, 0.44 ) }
    dend_33 { pt3dadd( 82.4648, -153.613, 7.28544, 0.44 ) }
    dend_33 { pt3dadd( 83.1983, -155.084, 7.57259, 0.44 ) }
    dend_33 { pt3dadd( 83.4764, -155.661, 7.69916, 0.44 ) }
    dend_33 { pt3dadd( 83.8109, -156.336, 7.86742, 0.44 ) }
    dend_33 { pt3dadd( 84.1205, -156.919, 8.03007, 0.44 ) }
    dend_33 { pt3dadd( 84.4575, -157.488, 8.21037, 0.44 ) }
    dend_33 { pt3dadd( 85.3676, -159.036, 8.6585, 0.44 ) }
    dend_33 { pt3dadd( 85.5414, -159.376, 8.7174, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 10/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 22.2477, -235.833, -23.0229, 0.37 ) }
    dend_17 { pt3dadd( 22.1093, -236.901, -23.192, 0.37 ) }
    dend_17 { pt3dadd( 22.0753, -237.539, -23.2789, 0.52 ) }
    dend_17 { pt3dadd( 22.0668, -238.594, -23.4068, 0.52 ) }
    dend_17 { pt3dadd( 22.0718, -239.696, -23.5245, 0.52 ) }
    dend_17 { pt3dadd( 22.0562, -240.59, -23.5946, 0.52 ) }
    dend_17 { pt3dadd( 22.0033, -241.607, -23.6553, 0.52 ) }
    dend_17 { pt3dadd( 21.9563, -242.495, -23.6783, 0.52 ) }
    dend_17 { pt3dadd( 21.9153, -243.02, -23.6803, 0.52 ) }
    dend_17 { pt3dadd( 21.8421, -243.865, -23.6854, 0.66 ) }
    dend_17 { pt3dadd( 21.7382, -244.885, -23.7217, 0.66 ) }
    dend_17 { pt3dadd( 21.6407, -245.645, -23.7827, 0.66 ) }
    dend_17 { pt3dadd( 21.5081, -246.462, -23.8777, 0.52 ) }
    dend_17 { pt3dadd( 21.3484, -247.255, -23.9929, 0.52 ) }
    dend_17 { pt3dadd( 21.0888, -248.363, -24.2212, 0.52 ) }
    dend_17 { pt3dadd( 20.8177, -249.568, -24.5083, 0.52 ) }
    dend_17 { pt3dadd( 20.7217, -250.092, -24.6368, 0.52 ) }
    dend_17 { pt3dadd( 20.6034, -250.885, -24.8159, 0.52 ) }
    dend_17 { pt3dadd( 20.5198, -251.521, -24.9503, 0.52 ) }
    dend_17 { pt3dadd( 20.3953, -252.899, -25.1899, 0.52 ) }
    dend_17 { pt3dadd( 20.3335, -254.286, -25.4026, 0.52 ) }
    dend_17 { pt3dadd( 20.341, -255.71, -25.6434, 0.52 ) }
    dend_17 { pt3dadd( 20.3826, -256.538, -25.813, 0.52 ) }
    dend_17 { pt3dadd( 20.4924, -257.712, -26.0764, 0.59 ) }
    dend_17 { pt3dadd( 20.7011, -259.456, -26.487, 0.59 ) }
    dend_17 { pt3dadd( 20.8421, -260.632, -26.7664, 0.74 ) }
    dend_17 { pt3dadd( 20.9152, -261.368, -26.9604, 0.96 ) }
    dend_17 { pt3dadd( 20.9575, -262.084, -27.1525, 0.96 ) }
    dend_17 { pt3dadd( 20.9768, -263.271, -27.469, 0.59 ) }
    dend_17 { pt3dadd( 20.9345, -264.338, -27.722, 0.37 ) }
    dend_17 { pt3dadd( 20.8471, -265.156, -27.8522, 0.37 ) }
    dend_17 { pt3dadd( 20.7057, -266.053, -27.9187, 0.37 ) }
    dend_17 { pt3dadd( 20.5843, -266.722, -27.9312, 0.37 ) }
    dend_17 { pt3dadd( 20.3054, -268.267, -27.9109, 0.37 ) }
    dend_17 { pt3dadd( 20.0252, -269.708, -27.8748, 0.52 ) }
    dend_17 { pt3dadd( 19.6996, -271.326, -27.8065, 0.81 ) }
    dend_17 { pt3dadd( 19.3924, -272.825, -27.7236, 0.81 ) }
    dend_17 { pt3dadd( 19.2545, -273.445, -27.6768, 1.11 ) }
    dend_17 { pt3dadd( 19.0766, -274.301, -27.5829, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 49/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 22.2477, -235.833, -23.0229, 0.81 ) }
    dend_16 { pt3dadd( 23.0438, -236.047, -22.7976, 0.81 ) }
    dend_16 { pt3dadd( 23.6633, -236.212, -22.6286, 0.81 ) }
    dend_16 { pt3dadd( 25.4903, -236.672, -21.9973, 0.81 ) }
    dend_16 { pt3dadd( 26.6993, -236.979, -21.5251, 0.52 ) }
    dend_16 { pt3dadd( 27.8357, -237.272, -21.0697, 0.44 ) }
    dend_16 { pt3dadd( 29.2342, -237.642, -20.5072, 0.44 ) }
    dend_16 { pt3dadd( 29.955, -237.835, -20.2023, 0.44 ) }
    dend_16 { pt3dadd( 31.6318, -238.317, -19.4331, 0.44 ) }
    dend_16 { pt3dadd( 32.8846, -238.72, -18.7989, 0.44 ) }
    dend_16 { pt3dadd( 33.5911, -238.959, -18.4338, 0.44 ) }
    dend_16 { pt3dadd( 33.8993, -239.077, -18.2792, 0.44 ) }
    dend_16 { pt3dadd( 34.813, -239.481, -17.771, 0.37 ) }
    dend_16 { pt3dadd( 36.0062, -240.043, -17.1039, 0.37 ) }
    dend_16 { pt3dadd( 36.9692, -240.524, -16.601, 0.37 ) }
    dend_16 { pt3dadd( 38.1346, -241.098, -15.9573, 0.37 ) }
    dend_16 { pt3dadd( 38.983, -241.535, -15.4833, 0.37 ) }
    dend_16 { pt3dadd( 40.2204, -242.2, -14.7788, 0.37 ) }
    dend_16 { pt3dadd( 40.7548, -242.488, -14.487, 0.37 ) }
    dend_16 { pt3dadd( 41.3777, -242.833, -14.1691, 0.37 ) }
    dend_16 { pt3dadd( 42.3407, -243.377, -13.6953, 0.37 ) }
    dend_16 { pt3dadd( 43.4312, -244.008, -13.1705, 0.37 ) }
    dend_16 { pt3dadd( 44.9231, -244.853, -12.4554, 0.37 ) }
    dend_16 { pt3dadd( 45.7324, -245.323, -12.1071, 0.37 ) }
    dend_16 { pt3dadd( 46.4687, -245.772, -11.7733, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -79.2718, -232.061, -50.7753, 0.66 ) }
    dend_10 { pt3dadd( -79.9688, -232.537, -50.8713, 0.66 ) }
    dend_10 { pt3dadd( -80.8215, -233.192, -51.0209, 0.66 ) }
    dend_10 { pt3dadd( -81.5204, -233.774, -51.1081, 0.66 ) }
    dend_10 { pt3dadd( -82.1657, -234.396, -51.1698, 1.03 ) }
    dend_10 { pt3dadd( -82.6573, -234.938, -51.2129, 1.11 ) }
    dend_10 { pt3dadd( -83.1821, -235.574, -51.2555, 0.81 ) }
    dend_10 { pt3dadd( -83.7503, -236.361, -51.277, 0.44 ) }
    dend_10 { pt3dadd( -84.2238, -237.162, -51.2922, 0.44 ) }
    dend_10 { pt3dadd( -84.6412, -238.032, -51.3064, 0.44 ) }
    dend_10 { pt3dadd( -84.9789, -238.967, -51.3166, 0.88 ) }
    dend_10 { pt3dadd( -85.1268, -239.539, -51.3022, 0.59 ) }
    dend_10 { pt3dadd( -85.2796, -240.313, -51.2698, 0.44 ) }
    dend_10 { pt3dadd( -85.3917, -240.998, -51.2333, 0.44 ) }
    dend_10 { pt3dadd( -85.4779, -241.643, -51.2066, 0.29 ) }
    dend_10 { pt3dadd( -85.596, -242.553, -51.1431, 0.29 ) }
    dend_10 { pt3dadd( -85.7558, -244.041, -51.0096, 0.37 ) }
    dend_10 { pt3dadd( -85.8523, -245.02, -50.9505, 0.22 ) }
    dend_10 { pt3dadd( -85.9371, -245.788, -50.9226, 0.37 ) }
    dend_10 { pt3dadd( -86.1086, -246.914, -50.9197, 0.52 ) }
    dend_10 { pt3dadd( -86.304, -247.864, -50.947, 0.22 ) }
    dend_10 { pt3dadd( -86.5191, -248.652, -51.0026, 0.37 ) }
    dend_10 { pt3dadd( -86.9134, -249.817, -51.15, 0.74 ) }
    dend_10 { pt3dadd( -87.2151, -250.557, -51.2607, 0.59 ) }
    dend_10 { pt3dadd( -87.5286, -251.169, -51.3643, 0.66 ) }
    dend_10 { pt3dadd( -87.8581, -251.67, -51.4694, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( -88.1244, -251.997, -51.5452, 0.37 ) }
    dend_10 { pt3dadd( -88.7199, -252.576, -51.6669, 0.37 ) }
    dend_10 { pt3dadd( -89.2857, -253.041, -51.7345, 0.81 ) }
    dend_10 { pt3dadd( -89.704, -253.363, -51.7778, 0.59 ) }
    dend_10 { pt3dadd( -90.125, -253.693, -51.8373, 0.29 ) }
    dend_10 { pt3dadd( -90.6022, -254.109, -51.9299, 0.29 ) }
    dend_10 { pt3dadd( -91.1284, -254.608, -52.0584, 0.29 ) }
    dend_10 { pt3dadd( -91.6562, -255.152, -52.1787, 0.29 ) }
    dend_10 { pt3dadd( -91.9662, -255.48, -52.239, 0.66 ) }
    dend_10 { pt3dadd( -92.6639, -256.212, -52.3422, 0.81 ) }
    dend_10 { pt3dadd( -93.4503, -257.01, -52.4202, 0.81 ) }
    dend_10 { pt3dadd( -94.0525, -257.602, -52.4629, 0.44 ) }
    dend_10 { pt3dadd( -94.7201, -258.233, -52.4884, 0.37 ) }
    dend_10 { pt3dadd( -95.2265, -258.698, -52.4871, 0.37 ) }
    dend_10 { pt3dadd( -95.7412, -259.168, -52.4616, 0.59 ) }
    dend_10 { pt3dadd( -96.0993, -259.511, -52.421, 0.52 ) }
    dend_10 { pt3dadd( -96.5244, -259.934, -52.3788, 0.29 ) }
    dend_10 { pt3dadd( -96.7611, -260.205, -52.3616, 0.59 ) }
    dend_10 { pt3dadd( -97.3639, -261.018, -52.3547, 0.81 ) }
    dend_10 { pt3dadd( -97.6626, -261.486, -52.3527, 0.29 ) }
    dend_10 { pt3dadd( -98.0231, -262.134, -52.3264, 0.29 ) }
    dend_10 { pt3dadd( -98.3684, -262.829, -52.2774, 0.29 ) }
    dend_10 { pt3dadd( -98.7241, -263.581, -52.2058, 0.29 ) }
    dend_10 { pt3dadd( -98.8627, -263.877, -52.1729, 0.74 ) }
    dend_10 { pt3dadd( -99.0481, -264.281, -52.1212, 0.74 ) }
    dend_10 { pt3dadd( -99.3909, -265.101, -52.037, 0.29 ) }
    dend_10 { pt3dadd( -99.581, -265.683, -51.995, 0.44 ) }
    dend_10 { pt3dadd( -99.7664, -266.414, -51.9626, 0.81 ) }
    dend_10 { pt3dadd( -99.9616, -267.276, -51.946, 0.96 ) }
    dend_10 { pt3dadd( -100.021, -267.535, -51.9539, 0.96 ) }
    dend_10 { pt3dadd( -100.212, -268.615, -52.0228, 0.37 ) }
    dend_10 { pt3dadd( -100.364, -269.765, -52.1835, 0.37 ) }
    dend_10 { pt3dadd( -100.423, -270.439, -52.2995, 0.52 ) }
    dend_10 { pt3dadd( -100.465, -271.275, -52.459, 0.52 ) }
    dend_10 { pt3dadd( -100.532, -273.111, -52.8251, 0.37 ) }
    dend_10 { pt3dadd( -100.595, -274.891, -53.2029, 0.37 ) }
    dend_10 { pt3dadd( -100.609, -276.322, -53.5156, 0.37 ) }
    dend_10 { pt3dadd( -100.598, -277.019, -53.673, 0.52 ) }
    dend_10 { pt3dadd( -100.549, -277.756, -53.8426, 0.96 ) }
    dend_10 { pt3dadd( -100.439, -278.637, -54.0276, 0.59 ) }
    dend_10 { pt3dadd( -100.307, -279.387, -54.1573, 0.59 ) }
    dend_10 { pt3dadd( -100.144, -280.415, -54.2925, 0.66 ) }
    dend_10 { pt3dadd( -100.028, -281.139, -54.3419, 0.66 ) }
    dend_10 { pt3dadd( -99.9422, -281.716, -54.3757, 0.59 ) }
    dend_10 { pt3dadd( -99.7445, -283.103, -54.4389, 0.22 ) }
    dend_10 { pt3dadd( -99.7077, -283.574, -54.4519, 0.52 ) }
    dend_10 { pt3dadd( -99.7197, -284.223, -54.4246, 0.96 ) }
    dend_10 { pt3dadd( -99.8126, -284.955, -54.361, 1.25 ) }
    dend_10 { pt3dadd( -99.9972, -285.741, -54.2646, 0.52 ) }
    dend_10 { pt3dadd( -100.175, -286.313, -54.2113, 0.44 ) }
    dend_10 { pt3dadd( -100.596, -287.485, -54.1436, 0.44 ) }
    dend_10 { pt3dadd( -100.964, -288.6, -54.1188, 0.44 ) }
    dend_10 { pt3dadd( -101.16, -289.305, -54.154, 0.44 ) }
    dend_10 { pt3dadd( -101.327, -290.098, -54.2702, 0.44 ) }
    dend_10 { pt3dadd( -101.497, -291.336, -54.5582, 0.74 ) }
    dend_10 { pt3dadd( -101.537, -291.751, -54.6805, 0.74 ) }
    dend_10 { pt3dadd( -101.596, -292.806, -55.0497, 0.74 ) }
    dend_10 { pt3dadd( -101.654, -293.744, -55.4083, 0.59 ) }
    dend_10 { pt3dadd( -101.692, -294.448, -55.6337, 0.44 ) }
    dend_10 { pt3dadd( -101.73, -295.19, -55.8144, 0.44 ) }
    dend_10 { pt3dadd( -101.813, -296.162, -55.9612, 0.44 ) }
    dend_10 { pt3dadd( -101.879, -297.123, -56.0576, 0.88 ) }
    dend_10 { pt3dadd( -101.939, -297.837, -56.0896, 0.88 ) }
    dend_10 { pt3dadd( -102.043, -298.781, -56.0787, 0.52 ) }
    dend_10 { pt3dadd( -102.108, -299.368, -56.0585, 0.29 ) }
    dend_10 { pt3dadd( -102.174, -300.022, -56.0364, 0.29 ) }
    dend_10 { pt3dadd( -102.302, -301.556, -55.9865, 0.29 ) }
    dend_10 { pt3dadd( -102.417, -302.618, -55.9649, 0.37 ) }
    dend_10 { pt3dadd( -102.488, -303.222, -55.9679, 0.37 ) }
    dend_10 { pt3dadd( -102.597, -304.06, -55.9945, 0.37 ) }
    dend_10 { pt3dadd( -102.692, -304.899, -56.0236, 0.37 ) }
    dend_10 { pt3dadd( -102.756, -305.591, -56.0486, 0.66 ) }
    dend_10 { pt3dadd( -102.805, -306.597, -56.084, 0.81 ) }
    dend_10 { pt3dadd( -102.789, -307.511, -56.113, 1.03 ) }
    dend_10 { pt3dadd( -102.763, -308.148, -56.13, 1.11 ) }
    dend_10 { pt3dadd( -102.703, -309.366, -56.1513, 0.37 ) }
    dend_10 { pt3dadd( -102.673, -310.281, -56.1606, 0.37 ) }
    dend_10 { pt3dadd( -102.654, -311.403, -56.1626, 0.29 ) }
    dend_10 { pt3dadd( -102.646, -312.041, -56.1579, 0.29 ) }
    dend_10 { pt3dadd( -102.668, -312.893, -56.1694, 0.29 ) }
    dend_10 { pt3dadd( -102.738, -313.909, -56.197, 0.29 ) }
    dend_10 { pt3dadd( -102.863, -314.875, -56.235, 0.29 ) }
    dend_10 { pt3dadd( -103.082, -316.09, -56.2941, 0.29 ) }
    dend_10 { pt3dadd( -103.262, -316.877, -56.3391, 0.44 ) }
    dend_10 { pt3dadd( -103.56, -318.03, -56.4157, 0.59 ) }
    dend_10 { pt3dadd( -103.777, -318.744, -56.4678, 0.59 ) }
    dend_10 { pt3dadd( -104.097, -319.606, -56.5557, 0.29 ) }
    dend_10 { pt3dadd( -104.272, -320.099, -56.612, 0.29 ) }
    dend_10 { pt3dadd( -104.356, -320.358, -56.6498, 0.29 ) }
    dend_10 { pt3dadd( -104.531, -320.987, -56.7622, 0.59 ) }
    dend_10 { pt3dadd( -104.821, -322.135, -56.9797, 0.59 ) }
    dend_10 { pt3dadd( -105.107, -323.309, -57.2557, 0.74 ) }
    dend_10 { pt3dadd( -105.439, -324.718, -57.6175, 0.44 ) }
    dend_10 { pt3dadd( -105.665, -325.737, -57.881, 0.74 ) }
    dend_10 { pt3dadd( -105.848, -326.613, -58.1183, 0.37 ) }
    dend_10 { pt3dadd( -106.078, -327.82, -58.4478, 0.37 ) }
    dend_10 { pt3dadd( -106.231, -328.628, -58.6397, 1.11 ) }
    dend_10 { pt3dadd( -106.435, -329.587, -58.8185, 1.11 ) }
    dend_10 { pt3dadd( -106.69, -330.496, -58.9461, 0.81 ) }
    dend_10 { pt3dadd( -106.87, -331.115, -58.9899, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_10 { pt3dadd( -107.128, -332.097, -59.0271, 0.22 ) }
    dend_10 { pt3dadd( -107.362, -333.145, -59.0491, 0.22 ) }
    dend_10 { pt3dadd( -107.432, -333.448, -59.0486, 0.37 ) }
    dend_10 { pt3dadd( -107.697, -334.455, -59.0528, 0.37 ) }
    dend_10 { pt3dadd( -107.987, -335.42, -59.0603, 0.37 ) }
    dend_10 { pt3dadd( -108.226, -336.118, -59.0738, 0.81 ) }
    dend_10 { pt3dadd( -108.491, -336.807, -59.1062, 0.37 ) }
    dend_10 { pt3dadd( -108.838, -337.622, -59.1811, 0.37 ) }
    dend_10 { pt3dadd( -109.447, -338.948, -59.3162, 0.37 ) }
    dend_10 { pt3dadd( -109.904, -339.872, -59.4163, 0.37 ) }
    dend_10 { pt3dadd( -110.61, -341.11, -59.5566, 0.37 ) }
    dend_10 { pt3dadd( -110.993, -341.72, -59.6362, 0.37 ) }
    dend_10 { pt3dadd( -111.525, -342.518, -59.764, 0.22 ) }
    dend_10 { pt3dadd( -111.836, -342.978, -59.8508, 0.37 ) }
    dend_10 { pt3dadd( -112.05, -343.279, -59.9151, 0.37 ) }
    dend_10 { pt3dadd( -112.437, -343.817, -60.0332, 0.37 ) }
    dend_10 { pt3dadd( -112.994, -344.606, -60.1895, 0.37 ) }
    dend_10 { pt3dadd( -113.243, -344.947, -60.2485, 0.37 ) }
    dend_10 { pt3dadd( -113.916, -345.85, -60.3689, 0.37 ) }
    dend_10 { pt3dadd( -114.345, -346.376, -60.435, 0.37 ) }
    dend_10 { pt3dadd( -115.251, -347.467, -60.5751, 0.59 ) }
    dend_10 { pt3dadd( -115.775, -348.092, -60.6488, 0.59 ) }
    dend_10 { pt3dadd( -116.19, -348.581, -60.6987, 0.81 ) }
    dend_10 { pt3dadd( -116.808, -349.325, -60.7772, 0.37 ) }
    dend_10 { pt3dadd( -117.679, -350.435, -60.8803, 0.37 ) }
    dend_10 { pt3dadd( -118.719, -351.926, -60.9909, 0.37 ) }
    dend_10 { pt3dadd( -119.435, -353.084, -61.052, 0.52 ) }
    dend_10 { pt3dadd( -119.841, -353.868, -61.0971, 0.52 ) }
    dend_10 { pt3dadd( -119.951, -354.141, -61.1128, 0.52 ) }
    dend_10 { pt3dadd( -120.16, -354.875, -61.15, 0.59 ) }
    dend_10 { pt3dadd( -120.287, -355.754, -61.2033, 0.29 ) }
    dend_10 { pt3dadd( -120.324, -356.445, -61.2546, 0.29 ) }
    dend_10 { pt3dadd( -120.327, -357.573, -61.3711, 0.29 ) }
    dend_10 { pt3dadd( -120.331, -358.304, -61.4594, 0.44 ) }
    dend_10 { pt3dadd( -120.329, -359.059, -61.5596, 0.59 ) }
    dend_10 { pt3dadd( -120.317, -360.029, -61.7836, 0.29 ) }
    dend_10 { pt3dadd( -120.319, -360.972, -62.0658, 0.29 ) }
    dend_10 { pt3dadd( -120.323, -361.464, -62.234, 0.44 ) }
    dend_10 { pt3dadd( -120.329, -361.879, -62.4072, 0.44 ) }
    dend_10 { pt3dadd( -120.341, -362.466, -62.6844, 0.44 ) }
    dend_10 { pt3dadd( -120.367, -364.123, -63.513, 0.52 ) }
    dend_10 { pt3dadd( -120.376, -364.787, -63.8411, 0.52 ) }
    dend_10 { pt3dadd( -120.369, -365.649, -64.2517, 0.52 ) }
    dend_10 { pt3dadd( -120.358, -366.985, -64.794, 0.29 ) }
    dend_10 { pt3dadd( -120.344, -367.549, -64.9627, 0.29 ) }
    dend_10 { pt3dadd( -120.322, -368.027, -65.0431, 0.52 ) }
    dend_10 { pt3dadd( -120.296, -368.517, -65.0544, 0.59 ) }
    dend_10 { pt3dadd( -120.257, -369.31, -65.0334, 0.59 ) }
    dend_10 { pt3dadd( -120.224, -370.457, -64.9462, 0.88 ) }
    dend_10 { pt3dadd( -120.217, -371.305, -64.8504, 0.29 ) }
    dend_10 { pt3dadd( -120.215, -372.226, -64.7454, 0.29 ) }
    dend_10 { pt3dadd( -120.218, -373.493, -64.6047, 0.29 ) }
    dend_10 { pt3dadd( -120.222, -374.233, -64.5297, 0.44 ) }
    dend_10 { pt3dadd( -120.242, -375.079, -64.4531, 0.44 ) }
    dend_10 { pt3dadd( -120.267, -376.06, -64.3888, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 55/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -79.2718, -232.061, -50.7753, 0.29 ) }
    dend_9 { pt3dadd( -77.6854, -232.589, -50.8304, 0.29 ) }
    dend_9 { pt3dadd( -76.7092, -232.905, -50.8593, 0.29 ) }
    dend_9 { pt3dadd( -74.2383, -233.79, -50.9211, 0.29 ) }
    dend_9 { pt3dadd( -72.5808, -234.445, -50.956, 0.29 ) }
    dend_9 { pt3dadd( -71.4411, -234.95, -50.9765, 0.29 ) }
    dend_9 { pt3dadd( -70.6046, -235.35, -51.0022, 0.29 ) }
    dend_9 { pt3dadd( -70.1186, -235.605, -51.0143, 0.29 ) }
    dend_9 { pt3dadd( -68.6544, -236.456, -51.0699, 0.29 ) }
    dend_9 { pt3dadd( -67.4849, -237.229, -51.1313, 0.29 ) }
    dend_9 { pt3dadd( -66.285, -238.102, -51.2172, 0.29 ) }
    dend_9 { pt3dadd( -64.7443, -239.274, -51.3405, 0.29 ) }
    dend_9 { pt3dadd( -63.5151, -240.231, -51.4487, 0.29 ) }
    dend_9 { pt3dadd( -63.0474, -240.597, -51.4941, 0.29 ) }
    dend_9 { pt3dadd( -62.3244, -241.141, -51.5747, 0.44 ) }
    dend_9 { pt3dadd( -61.6437, -241.647, -51.6599, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 71/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -25.8434, 48.2308, 2.56814, 1.03 ) }
    dend_72 { pt3dadd( -26.0803, 48.3911, 2.63159, 1.03 ) }
    dend_72 { pt3dadd( -26.7518, 48.9161, 2.73406, 0.81 ) }
    dend_72 { pt3dadd( -27.4166, 49.4836, 2.78737, 0.81 ) }
    dend_72 { pt3dadd( -27.9781, 49.9796, 2.80982, 0.81 ) }
    dend_72 { pt3dadd( -28.4003, 50.3495, 2.81673, 0.88 ) }
    dend_72 { pt3dadd( -28.9666, 50.8257, 2.81903, 0.88 ) }
    dend_72 { pt3dadd( -29.6732, 51.4075, 2.83358, 0.88 ) }
    dend_72 { pt3dadd( -30.3358, 51.9503, 2.85923, 0.74 ) }
    dend_72 { pt3dadd( -30.9098, 52.3786, 2.93468, 0.74 ) }
    dend_72 { pt3dadd( -31.6315, 52.8418, 3.1049, 1.03 ) }
    dend_72 { pt3dadd( -32.0625, 53.0824, 3.24365, 1.03 ) }
    dend_72 { pt3dadd( -32.9051, 53.4759, 3.64827, 1.03 ) }
    dend_72 { pt3dadd( -33.295, 53.6365, 3.82552, 1.03 ) }
    dend_72 { pt3dadd( -34.5346, 54.0992, 4.33232, 1.03 ) }
    dend_72 { pt3dadd( -35.1952, 54.3395, 4.61743, 0.88 ) }
    dend_72 { pt3dadd( -35.6787, 54.5139, 4.82309, 0.88 ) }
    dend_72 { pt3dadd( -36.9521, 54.9843, 5.3385, 0.88 ) }
    dend_72 { pt3dadd( -40.5502, 56.3664, 6.6663, 0.66 ) }
    dend_72 { pt3dadd( -41.392, 56.6955, 6.9349, 0.66 ) }
    dend_72 { pt3dadd( -42.6804, 57.226, 7.26439, 0.59 ) }
    dend_72 { pt3dadd( -43.4232, 57.5446, 7.43329, 0.59 ) }
    dend_72 { pt3dadd( -43.8981, 57.7578, 7.51893, 0.59 ) }
    dend_72 { pt3dadd( -44.4888, 58.0561, 7.56788, 0.59 ) }
    dend_72 { pt3dadd( -45.3966, 58.6469, 7.52137, 0.74 ) }
    dend_72 { pt3dadd( -45.802, 58.9615, 7.43276, 0.74 ) }
    dend_72 { pt3dadd( -45.9982, 59.1348, 7.35908, 0.74 ) }
    dend_72 { pt3dadd( -46.358, 59.4962, 7.21491, 0.74 ) }
    dend_72 { pt3dadd( -46.5102, 59.6638, 7.15926, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_72 { pt3dadd( -47.232, 60.5442, 6.95531, 0.81 ) }
    dend_72 { pt3dadd( -47.6808, 61.1487, 6.86546, 0.81 ) }
    dend_72 { pt3dadd( -48.0574, 61.6714, 6.81813, 0.81 ) }
    dend_72 { pt3dadd( -48.35, 62.0766, 6.80189, 0.88 ) }
    dend_72 { pt3dadd( -48.8352, 62.7489, 6.8087, 0.96 ) }
    dend_72 { pt3dadd( -49.5219, 63.6836, 6.86268, 0.96 ) }
    dend_72 { pt3dadd( -49.8936, 64.1813, 6.91852, 0.88 ) }
    dend_72 { pt3dadd( -50.4216, 64.8657, 6.99798, 0.88 ) }
    dend_72 { pt3dadd( -50.7054, 65.2187, 7.03835, 0.96 ) }
    dend_72 { pt3dadd( -51.3556, 66.0088, 7.10288, 0.96 ) }
    dend_72 { pt3dadd( -51.8313, 66.562, 7.15353, 0.96 ) }
    dend_72 { pt3dadd( -52.2098, 66.9917, 7.19669, 0.81 ) }
    dend_72 { pt3dadd( -52.5808, 67.4123, 7.23673, 0.74 ) }
    dend_72 { pt3dadd( -52.9555, 67.8449, 7.28549, 0.74 ) }
    dend_72 { pt3dadd( -53.3844, 68.3845, 7.39843, 0.74 ) }
    dend_72 { pt3dadd( -53.9585, 69.1781, 7.62604, 0.74 ) }
    dend_72 { pt3dadd( -54.385, 69.8151, 7.86461, 0.74 ) }
    dend_72 { pt3dadd( -54.7335, 70.3527, 8.10122, 0.74 ) }
    dend_72 { pt3dadd( -55.1871, 71.0596, 8.44837, 0.74 ) }
    dend_72 { pt3dadd( -55.7438, 71.9423, 8.91369, 0.74 ) }
    dend_72 { pt3dadd( -56.0872, 72.4558, 9.23494, 0.52 ) }
    dend_72 { pt3dadd( -56.5862, 73.1453, 9.68911, 0.59 ) }
    dend_72 { pt3dadd( -56.7478, 73.348, 9.83624, 0.74 ) }
    dend_72 { pt3dadd( -56.9438, 73.5753, 9.98498, 0.74 ) }
    dend_72 { pt3dadd( -57.1724, 73.8135, 10.1077, 0.74 ) }
    dend_72 { pt3dadd( -58.1348, 74.7508, 10.4497, 0.81 ) }
    dend_72 { pt3dadd( -58.5312, 75.1556, 10.5501, 1.4 ) }
    dend_72 { pt3dadd( -58.799, 75.4582, 10.5855, 1.4 ) }
    dend_72 { pt3dadd( -59.4536, 76.2871, 10.6054, 0.88 ) }
    dend_72 { pt3dadd( -59.7263, 76.6658, 10.5841, 0.59 ) }
    dend_72 { pt3dadd( -60.0393, 77.1339, 10.5221, 0.52 ) }
    dend_72 { pt3dadd( -60.3385, 77.6424, 10.3926, 0.52 ) }
    dend_72 { pt3dadd( -60.4957, 77.9209, 10.3208, 0.52 ) }
    dend_72 { pt3dadd( -60.7859, 78.4269, 10.1995, 0.52 ) }
    dend_72 { pt3dadd( -61.0129, 78.827, 10.148, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.0766, -274.301, -27.5829, 0.37 ) }
    dend_23 { pt3dadd( 18.6084, -274.913, -27.3217, 0.37 ) }
    dend_23 { pt3dadd( 17.8927, -275.857, -26.9212, 0.37 ) }
    dend_23 { pt3dadd( 17.5707, -276.3, -26.7543, 0.37 ) }
    dend_23 { pt3dadd( 16.6293, -277.647, -26.3224, 0.37 ) }
    dend_23 { pt3dadd( 16.2826, -278.146, -26.1791, 0.37 ) }
    dend_23 { pt3dadd( 15.8741, -278.734, -26.0318, 0.37 ) }
    dend_23 { pt3dadd( 15.7122, -278.966, -25.9813, 0.37 ) }
    dend_23 { pt3dadd( 15.0549, -279.947, -25.8206, 0.37 ) }
    dend_23 { pt3dadd( 14.443, -280.878, -25.726, 0.37 ) }
    dend_23 { pt3dadd( 14.1801, -281.274, -25.7211, 0.37 ) }
    dend_23 { pt3dadd( 13.5409, -282.195, -25.7269, 0.37 ) }
    dend_23 { pt3dadd( 13.0353, -282.875, -25.7446, 0.37 ) }
    dend_23 { pt3dadd( 12.4209, -283.67, -25.7689, 0.37 ) }
    dend_23 { pt3dadd( 12.0855, -284.089, -25.7831, 0.37 ) }
    dend_23 { pt3dadd( 11.2378, -285.141, -25.7686, 0.52 ) }
    dend_23 { pt3dadd( 10.8684, -285.612, -25.7455, 0.52 ) }
    dend_23 { pt3dadd( 10.1842, -286.533, -25.6713, 0.52 ) }
    dend_23 { pt3dadd( 9.59677, -287.297, -25.5905, 0.52 ) }
    dend_23 { pt3dadd( 8.94488, -288.103, -25.4901, 0.52 ) }
    dend_23 { pt3dadd( 8.256, -288.92, -25.4154, 0.66 ) }
    dend_23 { pt3dadd( 7.98099, -289.264, -25.3973, 0.66 ) }
    dend_23 { pt3dadd( 7.08439, -290.36, -25.402, 0.37 ) }
    dend_23 { pt3dadd( 6.27139, -291.338, -25.4488, 0.37 ) }
    dend_23 { pt3dadd( 5.64855, -292.107, -25.4962, 0.37 ) }
    dend_23 { pt3dadd( 4.98788, -292.978, -25.5471, 1.03 ) }
    dend_23 { pt3dadd( 4.24059, -294.032, -25.6099, 0.44 ) }
    dend_23 { pt3dadd( 2.78703, -296.236, -25.6737, 0.44 ) }
    dend_23 { pt3dadd( 2.22481, -297.194, -25.6713, 0.44 ) }
    dend_23 { pt3dadd( 1.76417, -298.137, -25.637, 0.44 ) }
    dend_23 { pt3dadd( 1.38055, -299.067, -25.5691, 0.52 ) }
    dend_23 { pt3dadd( 1.27283, -299.406, -25.5324, 0.66 ) }
    dend_23 { pt3dadd( 1.14316, -299.922, -25.5078, 0.66 ) }
    dend_23 { pt3dadd( 1.03611, -300.587, -25.5277, 0.37 ) }
    dend_23 { pt3dadd( 0.91671, -301.356, -25.608, 0.37 ) }
    dend_23 { pt3dadd( 0.680396, -302.76, -25.8463, 0.37 ) }
    dend_23 { pt3dadd( 0.453746, -304.15, -26.1328, 0.37 ) }
    dend_23 { pt3dadd( 0.23535, -305.53, -26.4629, 0.37 ) }
    dend_23 { pt3dadd( 0.141018, -306.177, -26.6257, 0.37 ) }
    dend_23 { pt3dadd( 0.0040396, -307.14, -26.8825, 0.37 ) }
    dend_23 { pt3dadd( -0.0818, -307.63, -27.0086, 0.37 ) }
    dend_23 { pt3dadd( -0.235177, -308.335, -27.1807, 0.37 ) }
    dend_23 { pt3dadd( -0.437193, -309.138, -27.3449, 0.59 ) }
    dend_23 { pt3dadd( -0.761668, -310.363, -27.5136, 0.59 ) }
    dend_23 { pt3dadd( -0.896344, -310.834, -27.5724, 0.59 ) }
    dend_23 { pt3dadd( -1.35551, -312.323, -27.7642, 0.59 ) }
    dend_23 { pt3dadd( -1.67343, -313.311, -27.8849, 0.37 ) }
    dend_23 { pt3dadd( -1.87769, -313.917, -27.9508, 0.37 ) }
    dend_23 { pt3dadd( -2.16734, -314.792, -28.022, 0.37 ) }
    dend_23 { pt3dadd( -2.56275, -316.024, -28.1021, 0.37 ) }
    dend_23 { pt3dadd( -2.93815, -317.256, -28.1601, 0.52 ) }
    dend_23 { pt3dadd( -3.19516, -318.151, -28.2034, 0.52 ) }
    dend_23 { pt3dadd( -3.42753, -318.931, -28.2385, 0.37 ) }
    dend_23 { pt3dadd( -4.08544, -320.947, -28.3395, 0.37 ) }
    dend_23 { pt3dadd( -4.4618, -321.999, -28.3957, 0.88 ) }
    dend_23 { pt3dadd( -4.77815, -322.788, -28.4307, 1.03 ) }
    dend_23 { pt3dadd( -5.00432, -323.293, -28.4443, 1.03 ) }
    dend_23 { pt3dadd( -5.35597, -324.002, -28.5006, 0.44 ) }
    dend_23 { pt3dadd( -5.78588, -324.797, -28.5818, 0.44 ) }
    dend_23 { pt3dadd( -6.26836, -325.542, -28.6935, 0.44 ) }
    dend_23 { pt3dadd( -6.61175, -326.016, -28.7849, 0.44 ) }
    dend_23 { pt3dadd( -6.93147, -326.432, -28.8694, 0.44 ) }
    dend_23 { pt3dadd( -7.71017, -327.454, -29.0583, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 19.0766, -274.301, -27.5829, 0.52 ) }
    dend_18 { pt3dadd( 19.9641, -274.782, -27.2642, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_18 { pt3dadd( 20.7219, -275.183, -26.999, 0.37 ) }
    dend_18 { pt3dadd( 22.1757, -275.966, -26.5538, 0.59 ) }
    dend_18 { pt3dadd( 23.0572, -276.469, -26.3133, 0.59 ) }
    dend_18 { pt3dadd( 24.0597, -277.077, -26.0642, 0.52 ) }
    dend_18 { pt3dadd( 24.5011, -277.359, -25.9624, 0.52 ) }
    dend_18 { pt3dadd( 25.4273, -278.017, -25.7722, 0.37 ) }
    dend_18 { pt3dadd( 26.7036, -279.025, -25.5614, 0.37 ) }
    dend_18 { pt3dadd( 27.6124, -279.851, -25.4726, 0.37 ) }
    dend_18 { pt3dadd( 28.2179, -280.466, -25.4169, 0.37 ) }
    dend_18 { pt3dadd( 28.6639, -280.968, -25.3829, 0.37 ) }
    dend_18 { pt3dadd( 29.3368, -281.797, -25.3484, 0.37 ) }
    dend_18 { pt3dadd( 29.6537, -282.232, -25.3185, 0.37 ) }
    dend_18 { pt3dadd( 30.3363, -283.321, -25.2189, 0.37 ) }
    dend_18 { pt3dadd( 30.8828, -284.314, -25.1155, 0.37 ) }
    dend_18 { pt3dadd( 31.4759, -285.531, -24.9993, 0.37 ) }
    dend_18 { pt3dadd( 32.061, -286.896, -24.8816, 0.37 ) }
    dend_18 { pt3dadd( 32.5746, -288.303, -24.7753, 0.37 ) }
    dend_18 { pt3dadd( 32.9496, -289.518, -24.6971, 0.37 ) }
    dend_18 { pt3dadd( 33.1271, -290.339, -24.6561, 0.37 ) }
    dend_18 { pt3dadd( 33.2415, -291.128, -24.6327, 0.37 ) }
    dend_18 { pt3dadd( 33.3085, -291.762, -24.6309, 0.44 ) }
    dend_18 { pt3dadd( 33.3893, -292.484, -24.6554, 0.44 ) }
    dend_18 { pt3dadd( 33.5111, -293.215, -24.7128, 0.44 ) }
    dend_18 { pt3dadd( 33.6788, -293.907, -24.7445, 0.44 ) }
    dend_18 { pt3dadd( 34.0172, -294.853, -24.7675, 0.44 ) }
    dend_18 { pt3dadd( 34.367, -295.554, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 34.6387, -296.004, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 34.9065, -296.397, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 35.4024, -297.098, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 36.2751, -298.324, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 37.0314, -299.46, -24.7675, 0.66 ) }
    dend_18 { pt3dadd( 37.2056, -299.728, -24.7611, 0.37 ) }
    dend_18 { pt3dadd( 37.4324, -300.095, -24.7446, 0.37 ) }
    dend_18 { pt3dadd( 37.7767, -300.714, -24.7109, 0.37 ) }
    dend_18 { pt3dadd( 38.0808, -301.333, -24.673, 0.37 ) }
    dend_18 { pt3dadd( 38.458, -302.209, -24.6169, 0.52 ) }
    dend_18 { pt3dadd( 38.6485, -302.678, -24.5892, 0.52 ) }
    dend_18 { pt3dadd( 38.9754, -303.492, -24.5775, 0.52 ) }
    dend_18 { pt3dadd( 39.3731, -304.445, -24.608, 0.44 ) }
    dend_18 { pt3dadd( 39.6946, -305.173, -24.6725, 0.44 ) }
    dend_18 { pt3dadd( 40.0197, -305.962, -24.7776, 0.88 ) }
    dend_18 { pt3dadd( 40.4023, -306.903, -24.9378, 0.88 ) }
    dend_18 { pt3dadd( 40.9115, -308.239, -25.1612, 0.88 ) }
    dend_18 { pt3dadd( 41.2824, -309.268, -25.3083, 0.88 ) }
    dend_18 { pt3dadd( 41.4717, -309.82, -25.3687, 0.66 ) }
    dend_18 { pt3dadd( 41.76, -310.702, -25.4527, 0.52 ) }
    dend_18 { pt3dadd( 42.0371, -311.58, -25.5165, 0.52 ) }
    dend_18 { pt3dadd( 42.4332, -312.781, -25.5919, 0.37 ) }
    dend_18 { pt3dadd( 42.7776, -313.899, -25.6381, 0.37 ) }
    dend_18 { pt3dadd( 43.0361, -314.776, -25.6739, 0.66 ) }
    dend_18 { pt3dadd( 43.1567, -315.171, -25.691, 0.66 ) }
    dend_18 { pt3dadd( 43.3929, -315.883, -25.7397, 0.66 ) }
    dend_18 { pt3dadd( 43.688, -316.801, -25.7933, 0.44 ) }
    dend_18 { pt3dadd( 44.2041, -318.234, -25.8692, 0.37 ) }
    dend_18 { pt3dadd( 44.388, -318.743, -25.8906, 0.37 ) }
    dend_18 { pt3dadd( 44.5777, -319.284, -25.9041, 0.37 ) }
    dend_18 { pt3dadd( 44.8146, -319.952, -25.9108, 0.37 ) }
    dend_18 { pt3dadd( 45.1307, -320.812, -25.9154, 0.37 ) }
    dend_18 { pt3dadd( 45.4209, -321.643, -25.9098, 0.37 ) }
    dend_18 { pt3dadd( 45.7761, -322.727, -25.9333, 0.59 ) }
    dend_18 { pt3dadd( 45.851, -323.015, -25.9479, 0.59 ) }
    dend_18 { pt3dadd( 46.0006, -323.675, -26.0083, 0.29 ) }
    dend_18 { pt3dadd( 46.1109, -324.124, -26.0637, 0.29 ) }
    dend_18 { pt3dadd( 46.3512, -325.035, -26.1874, 0.29 ) }
    dend_18 { pt3dadd( 46.4811, -325.509, -26.2311, 0.52 ) }
    dend_18 { pt3dadd( 46.7453, -326.319, -26.2737, 0.52 ) }
    dend_18 { pt3dadd( 46.9371, -326.863, -26.2963, 0.44 ) }
    dend_18 { pt3dadd( 47.2558, -327.823, -26.324, 0.37 ) }
    dend_18 { pt3dadd( 47.7185, -329.347, -26.3636, 0.37 ) }
    dend_18 { pt3dadd( 48.0262, -330.414, -26.3698, 0.37 ) }
    dend_18 { pt3dadd( 48.195, -331.062, -26.3628, 0.37 ) }
    dend_18 { pt3dadd( 48.3991, -331.835, -26.342, 0.37 ) }
    dend_18 { pt3dadd( 48.5938, -332.637, -26.2957, 0.37 ) }
    dend_18 { pt3dadd( 48.7861, -333.441, -26.2354, 0.37 ) }
    dend_18 { pt3dadd( 49.1784, -334.954, -26.0999, 0.37 ) }
    dend_18 { pt3dadd( 49.2894, -335.359, -26.0614, 0.37 ) }
    dend_18 { pt3dadd( 49.7882, -337.008, -25.9107, 0.37 ) }
    dend_18 { pt3dadd( 50.1649, -338.073, -25.8202, 0.37 ) }
    dend_18 { pt3dadd( 50.5631, -339.061, -25.6883, 0.37 ) }
    dend_18 { pt3dadd( 50.7438, -339.497, -25.6145, 0.52 ) }
    dend_18 { pt3dadd( 51.0208, -340.232, -25.4726, 0.52 ) }
    dend_18 { pt3dadd( 51.3058, -341.143, -25.2518, 0.37 ) }
    dend_18 { pt3dadd( 51.5228, -342.041, -25.0006, 0.37 ) }
    dend_18 { pt3dadd( 51.8366, -343.563, -24.5649, 0.37 ) }
    dend_18 { pt3dadd( 51.9544, -344.258, -24.3685, 0.66 ) }
    dend_18 { pt3dadd( 52.0725, -345.028, -24.1608, 0.66 ) }
    dend_18 { pt3dadd( 52.2468, -346.094, -23.8989, 0.66 ) }
    dend_18 { pt3dadd( 52.4058, -347.014, -23.7022, 0.52 ) }
    dend_18 { pt3dadd( 52.5845, -347.927, -23.5492, 0.52 ) }
    dend_18 { pt3dadd( 52.9623, -349.649, -23.3743, 0.52 ) }
    dend_18 { pt3dadd( 53.0693, -350.122, -23.3428, 0.37 ) }
    dend_18 { pt3dadd( 53.3177, -351.28, -23.3157, 0.37 ) }
    dend_18 { pt3dadd( 53.4124, -351.79, -23.3366, 0.52 ) }
    dend_18 { pt3dadd( 53.4557, -352.063, -23.3226, 0.52 ) }
    dend_18 { pt3dadd( 53.5753, -352.99, -23.183, 0.59 ) }
    dend_18 { pt3dadd( 53.6608, -353.906, -22.9602, 0.88 ) }
    dend_18 { pt3dadd( 53.7176, -354.766, -22.6842, 0.88 ) }
    dend_18 { pt3dadd( 53.7217, -355.474, -22.4351, 0.88 ) }
    dend_18 { pt3dadd( 53.6534, -357.969, -21.5328, 0.59 ) }
    dend_18 { pt3dadd( 53.6146, -358.534, -21.3177, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_18 { pt3dadd( 53.5233, -359.654, -20.8498, 0.52 ) }
    dend_18 { pt3dadd( 53.4411, -360.988, -20.2727, 0.44 ) }
    dend_18 { pt3dadd( 53.3696, -362.229, -19.7183, 0.44 ) }
    dend_18 { pt3dadd( 53.3381, -362.911, -19.4265, 0.44 ) }
    dend_18 { pt3dadd( 53.2724, -364.37, -18.9167, 0.44 ) }
    dend_18 { pt3dadd( 53.2435, -365.286, -18.5813, 0.44 ) }
    dend_18 { pt3dadd( 53.2322, -366.118, -18.2085, 0.44 ) }
    dend_18 { pt3dadd( 53.2694, -367.157, -17.7057, 0.59 ) }
    dend_18 { pt3dadd( 53.3086, -367.719, -17.429, 0.59 ) }
    dend_18 { pt3dadd( 53.377, -368.441, -17.1021, 0.59 ) }
    dend_18 { pt3dadd( 53.4735, -369.516, -16.6856, 0.59 ) }
    dend_18 { pt3dadd( 53.5528, -371.081, -16.1857, 0.59 ) }
    dend_18 { pt3dadd( 53.5758, -372.18, -15.8987, 0.59 ) }
    dend_18 { pt3dadd( 53.5926, -373.083, -15.7387, 0.59 ) }
    dend_18 { pt3dadd( 53.5932, -374.021, -15.6146, 0.74 ) }
    dend_18 { pt3dadd( 53.614, -375.428, -15.495, 0.44 ) }
    dend_18 { pt3dadd( 53.6617, -376.625, -15.4558, 0.44 ) }
    dend_18 { pt3dadd( 53.7424, -378.017, -15.4496, 0.44 ) }
    dend_18 { pt3dadd( 53.8409, -379.215, -15.4527, 0.44 ) }
    dend_18 { pt3dadd( 53.9594, -380.255, -15.4627, 0.44 ) }
    dend_18 { pt3dadd( 54.1096, -381.428, -15.4832, 0.59 ) }
    dend_18 { pt3dadd( 54.3243, -382.632, -15.5148, 0.59 ) }
    dend_18 { pt3dadd( 54.5969, -383.834, -15.561, 0.59 ) }
    dend_18 { pt3dadd( 54.8228, -384.69, -15.5994, 0.59 ) }
    dend_18 { pt3dadd( 55.0744, -385.694, -15.6433, 0.59 ) }
    dend_18 { pt3dadd( 55.2483, -386.539, -15.7109, 0.52 ) }
    dend_18 { pt3dadd( 55.4426, -387.877, -15.8593, 0.52 ) }
    dend_18 { pt3dadd( 55.5377, -388.816, -15.9476, 0.52 ) }
    dend_18 { pt3dadd( 55.5913, -389.727, -16.0161, 0.37 ) }
    dend_18 { pt3dadd( 55.6331, -390.926, -16.0801, 0.37 ) }
    dend_18 { pt3dadd( 55.6802, -392.446, -16.1674, 0.37 ) }
    dend_18 { pt3dadd( 55.6935, -392.822, -16.188, 0.37 ) }
    dend_18 { pt3dadd( 55.7388, -394.153, -16.2919, 0.37 ) }
    dend_18 { pt3dadd( 55.8067, -395.188, -16.3623, 0.37 ) }
    dend_18 { pt3dadd( 55.9451, -396.455, -16.4597, 0.37 ) }
    dend_18 { pt3dadd( 56.0791, -397.304, -16.5299, 0.37 ) }
    dend_18 { pt3dadd( 56.2157, -398.285, -16.63, 0.37 ) }
    dend_18 { pt3dadd( 56.2959, -399.267, -16.7543, 0.37 ) }
    dend_18 { pt3dadd( 56.3538, -400.285, -16.9355, 0.37 ) }
    dend_18 { pt3dadd( 56.39, -401.074, -17.0686, 0.37 ) }
    dend_18 { pt3dadd( 56.3971, -401.619, -17.1609, 0.37 ) }
    dend_18 { pt3dadd( 56.3834, -403.1, -17.4187, 0.37 ) }
    dend_18 { pt3dadd( 56.3889, -404.533, -17.6806, 0.37 ) }
    dend_18 { pt3dadd( 56.4147, -406.462, -18.0454, 0.37 ) }
    dend_18 { pt3dadd( 56.446, -407.354, -18.2455, 0.37 ) }
    dend_18 { pt3dadd( 56.6179, -410.225, -18.9876, 0.37 ) }
    dend_18 { pt3dadd( 56.7698, -411.795, -19.4264, 0.37 ) }
    dend_18 { pt3dadd( 56.9056, -412.793, -19.7354, 0.37 ) }
    dend_18 { pt3dadd( 57.1237, -414.15, -20.1936, 0.37 ) }
    dend_18 { pt3dadd( 57.385, -415.745, -20.7428, 0.37 ) }
    dend_18 { pt3dadd( 57.6386, -416.891, -21.1431, 0.59 ) }
    dend_18 { pt3dadd( 57.8236, -417.675, -21.4229, 0.81 ) }
    dend_18 { pt3dadd( 58.0409, -418.624, -21.77, 0.96 ) }
    dend_18 { pt3dadd( 58.2223, -419.518, -22.0682, 0.96 ) }
    dend_18 { pt3dadd( 58.4305, -420.59, -22.3772, 0.44 ) }
    dend_18 { pt3dadd( 58.7398, -422.407, -22.8473, 0.44 ) }
    dend_18 { pt3dadd( 59.191, -425.37, -23.55, 0.44 ) }
    dend_18 { pt3dadd( 59.4092, -426.938, -23.9025, 0.44 ) }
    dend_18 { pt3dadd( 59.6093, -428.498, -24.2175, 0.44 ) }
    dend_18 { pt3dadd( 59.8092, -430.311, -24.6127, 0.44 ) }
    dend_18 { pt3dadd( 59.8972, -431.259, -24.8204, 0.74 ) }
    dend_18 { pt3dadd( 59.9426, -431.949, -24.9668, 0.81 ) }
    dend_18 { pt3dadd( 60.0323, -433.148, -25.1851, 0.52 ) }
    dend_18 { pt3dadd( 60.1182, -434.496, -25.4565, 0.37 ) }
    dend_18 { pt3dadd( 60.2465, -436.311, -25.8663, 0.37 ) }
    dend_18 { pt3dadd( 60.4151, -437.81, -26.2687, 0.37 ) }
    dend_18 { pt3dadd( 60.6995, -439.624, -26.7863, 0.37 ) }
    dend_18 { pt3dadd( 60.8203, -440.307, -26.9929, 0.37 ) }
    dend_18 { pt3dadd( 61.1378, -441.996, -27.5574, 0.37 ) }
    dend_18 { pt3dadd( 61.3626, -443.172, -27.9639, 0.37 ) }
    dend_18 { pt3dadd( 61.6376, -444.832, -28.5571, 0.37 ) }
    dend_18 { pt3dadd( 61.7215, -445.667, -28.8846, 0.37 ) }
    dend_18 { pt3dadd( 61.7565, -446.711, -29.2779, 0.37 ) }
    dend_18 { pt3dadd( 61.7441, -447.483, -29.577, 0.59 ) }
    dend_18 { pt3dadd( 61.6455, -448.534, -29.9513, 0.59 ) }
    dend_18 { pt3dadd( 61.4959, -449.574, -30.3329, 0.59 ) }
    dend_18 { pt3dadd( 61.2657, -450.756, -30.7372, 0.59 ) }
    dend_18 { pt3dadd( 60.9518, -452.332, -31.2935, 0.59 ) }
    dend_18 { pt3dadd( 60.621, -454.127, -31.9311, 0.59 ) }
    dend_18 { pt3dadd( 60.4345, -455.275, -32.3182, 0.59 ) }
    dend_18 { pt3dadd( 60.229, -456.819, -32.8524, 0.59 ) }
    dend_18 { pt3dadd( 60.0869, -458.084, -33.2695, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -120.267, -376.06, -64.3888, 0.44 ) }
    dend_12 { pt3dadd( -120.377, -376.587, -64.6348, 0.44 ) }
    dend_12 { pt3dadd( -120.53, -377.345, -65.1168, 0.44 ) }
    dend_12 { pt3dadd( -120.668, -378.195, -65.681, 0.44 ) }
    dend_12 { pt3dadd( -120.768, -378.938, -66.0974, 0.44 ) }
    dend_12 { pt3dadd( -120.937, -380.086, -66.6244, 0.52 ) }
    dend_12 { pt3dadd( -121.109, -381.048, -67.0332, 0.52 ) }
    dend_12 { pt3dadd( -121.49, -382.752, -67.6711, 0.74 ) }
    dend_12 { pt3dadd( -121.674, -383.443, -67.9276, 0.81 ) }
    dend_12 { pt3dadd( -122.089, -384.869, -68.4202, 1.11 ) }
    dend_12 { pt3dadd( -122.443, -386.009, -68.8653, 0.59 ) }
    dend_12 { pt3dadd( -122.874, -387.287, -69.3657, 0.44 ) }
    dend_12 { pt3dadd( -123.33, -388.566, -69.8848, 0.44 ) }
    dend_12 { pt3dadd( -123.876, -390.015, -70.4498, 0.44 ) }
    dend_12 { pt3dadd( -124.108, -390.593, -70.6972, 0.44 ) }
    dend_12 { pt3dadd( -124.744, -392.148, -71.4073, 0.44 ) }
    dend_12 { pt3dadd( -125.111, -393.074, -71.7851, 0.74 ) }
    dend_12 { pt3dadd( -125.303, -393.556, -71.9414, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_12 { pt3dadd( -125.588, -394.224, -72.1167, 0.59 ) }
    dend_12 { pt3dadd( -126.046, -395.241, -72.2811, 0.37 ) }
    dend_12 { pt3dadd( -126.48, -396.188, -72.38, 0.37 ) }
    dend_12 { pt3dadd( -127.007, -397.296, -72.4093, 0.37 ) }
    dend_12 { pt3dadd( -127.302, -397.907, -72.4231, 0.52 ) }
    dend_12 { pt3dadd( -127.582, -398.444, -72.4391, 0.52 ) }
    dend_12 { pt3dadd( -127.773, -398.79, -72.4511, 0.52 ) }
    dend_12 { pt3dadd( -128.38, -399.824, -72.5442, 0.52 ) }
    dend_12 { pt3dadd( -129.288, -401.176, -72.734, 0.52 ) }
    dend_12 { pt3dadd( -129.595, -401.615, -72.8014, 0.52 ) }
    dend_12 { pt3dadd( -130.39, -402.713, -73.0004, 0.29 ) }
    dend_12 { pt3dadd( -130.659, -403.069, -73.0784, 0.29 ) }
    dend_12 { pt3dadd( -131.478, -404.04, -73.3529, 0.66 ) }
    dend_12 { pt3dadd( -132.115, -404.627, -73.5986, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -120.267, -376.06, -64.3888, 0.29 ) }
    dend_11 { pt3dadd( -118.25, -374.173, -65.1558, 0.29 ) }
    dend_11 { pt3dadd( -117.55, -373.54, -65.372, 0.29 ) }
    dend_11 { pt3dadd( -116.746, -372.813, -65.6206, 0.29 ) }
    dend_11 { pt3dadd( -115.932, -372.078, -65.872, 0.29 ) }
    dend_11 { pt3dadd( -115.444, -371.636, -66.0229, 0.29 ) }
    dend_11 { pt3dadd( -114.868, -371.116, -66.2007, 0.29 ) }
    dend_11 { pt3dadd( -114.33, -370.665, -66.2007, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_72 (entry count 22/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -61.0129, 78.827, 10.148, 0.59 ) }
    dend_78 { pt3dadd( -62.356, 79.4922, 7.81588, 0.59 ) }
    dend_78 { pt3dadd( -62.6977, 79.6775, 7.40292, 0.59 ) }
    dend_78 { pt3dadd( -63.7202, 80.3144, 6.55835, 0.81 ) }
    dend_78 { pt3dadd( -64.1257, 80.5929, 6.28438, 0.66 ) }
    dend_78 { pt3dadd( -64.8678, 81.1662, 5.7933, 0.52 ) }
    dend_78 { pt3dadd( -65.4242, 81.6416, 5.39599, 0.52 ) }
    dend_78 { pt3dadd( -66.2932, 82.5113, 4.92726, 0.52 ) }
    dend_78 { pt3dadd( -66.9758, 83.287, 4.54887, 0.52 ) }
    dend_78 { pt3dadd( -67.4833, 83.9089, 4.27547, 0.52 ) }
    dend_78 { pt3dadd( -68.0146, 84.5519, 3.98272, 0.52 ) }
    dend_78 { pt3dadd( -68.8671, 85.5869, 3.51438, 0.52 ) }
    dend_78 { pt3dadd( -69.1469, 85.9317, 3.34412, 0.52 ) }
    dend_78 { pt3dadd( -69.4597, 86.3594, 3.08609, 0.74 ) }
    dend_78 { pt3dadd( -69.9722, 87.0444, 2.62757, 0.22 ) }
    dend_78 { pt3dadd( -70.4752, 87.7, 2.20451, 0.22 ) }
    dend_78 { pt3dadd( -70.7982, 88.0855, 1.9706, 0.22 ) }
    dend_78 { pt3dadd( -70.836, 88.13, 1.94455, 0.59 ) }
    dend_78 { pt3dadd( -71.6899, 89.1588, 1.20126, 0.52 ) }
    dend_78 { pt3dadd( -71.9698, 89.5443, 0.841933, 0.52 ) }
    dend_78 { pt3dadd( -72.0721, 89.7905, 0.55149, 0.52 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 43/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -61.0129, 78.827, 10.148, 0.52 ) }
    dend_73 { pt3dadd( -61.3749, 79.2365, 11.0054, 0.52 ) }
    dend_73 { pt3dadd( -62.6009, 80.4887, 13.349, 0.74 ) }
    dend_73 { pt3dadd( -62.6345, 80.521, 13.4017, 1.03 ) }
    dend_73 { pt3dadd( -62.7974, 80.6755, 13.6181, 0.96 ) }
    dend_73 { pt3dadd( -63.6817, 81.5133, 14.6382, 0.74 ) }
    dend_73 { pt3dadd( -64.0582, 81.8682, 15.0225, 0.74 ) }
    dend_73 { pt3dadd( -64.4734, 82.2439, 15.3947, 0.74 ) }
    dend_73 { pt3dadd( -65.2553, 82.9578, 15.826, 0.74 ) }
    dend_73 { pt3dadd( -65.7753, 83.4208, 16.0896, 0.74 ) }
    dend_73 { pt3dadd( -66.1961, 83.7768, 16.2716, 0.74 ) }
    dend_73 { pt3dadd( -67.0642, 84.5026, 16.4844, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 55/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.71017, -327.454, -29.0583, 0.44 ) }
    dend_25 { pt3dadd( -8.22353, -328.791, -27.0244, 0.44 ) }
    dend_25 { pt3dadd( -8.40163, -329.255, -26.3187, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.71017, -327.454, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -8.42413, -327.709, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -9.4522, -328.227, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -10.335, -328.672, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -11.2317, -329.124, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -12.4218, -329.724, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -13.2687, -330.151, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -13.6703, -330.446, -29.0583, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 60.0869, -458.084, -33.2695, 0.37 ) }
    dend_20 { pt3dadd( 60.2262, -459.283, -33.3782, 0.37 ) }
    dend_20 { pt3dadd( 60.3947, -460.808, -33.6056, 0.37 ) }
    dend_20 { pt3dadd( 60.4552, -462.272, -33.8553, 0.37 ) }
    dend_20 { pt3dadd( 60.4276, -463.959, -34.145, 0.37 ) }
    dend_20 { pt3dadd( 60.3834, -464.849, -34.3157, 0.59 ) }
    dend_20 { pt3dadd( 60.3356, -465.522, -34.446, 0.59 ) }
    dend_20 { pt3dadd( 60.2083, -466.693, -34.6734, 0.59 ) }
    dend_20 { pt3dadd( 59.9103, -468.575, -35.0469, 0.59 ) }
    dend_20 { pt3dadd( 59.6821, -469.842, -35.2927, 0.88 ) }
    dend_20 { pt3dadd( 59.5572, -470.789, -35.4865, 0.81 ) }
    dend_20 { pt3dadd( 59.3103, -472.364, -35.7761, 0.44 ) }
    dend_20 { pt3dadd( 59.0974, -473.559, -35.9725, 0.44 ) }
    dend_20 { pt3dadd( 58.9242, -474.437, -36.0853, 0.44 ) }
    dend_20 { pt3dadd( 58.8085, -474.963, -36.1373, 0.74 ) }
    dend_20 { pt3dadd( 58.1584, -476.815, -36.2061, 0.29 ) }
    dend_20 { pt3dadd( 57.2454, -478.76, -36.1689, 0.29 ) }
    dend_20 { pt3dadd( 56.7685, -479.533, -36.1375, 0.29 ) }
    dend_20 { pt3dadd( 56.459, -479.983, -36.1132, 0.59 ) }
    dend_20 { pt3dadd( 55.7046, -481.101, -36.0209, 0.29 ) }
    dend_20 { pt3dadd( 54.7236, -482.606, -35.8673, 0.22 ) }
    dend_20 { pt3dadd( 54.295, -483.243, -35.7884, 1.11 ) }
    dend_20 { pt3dadd( 53.7923, -484.139, -35.697, 0.52 ) }
    dend_20 { pt3dadd( 53.2919, -485.054, -35.6071, 0.52 ) }
    dend_20 { pt3dadd( 52.8771, -485.876, -35.5398, 0.52 ) }
    dend_20 { pt3dadd( 52.5768, -486.52, -35.5185, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 92/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 60.0869, -458.084, -33.2695, 0.37 ) }
    dend_19 { pt3dadd( 59.144, -457.31, -33.3559, 0.37 ) }
    dend_19 { pt3dadd( 57.6639, -456.332, -33.4673, 0.37 ) }
    dend_19 { pt3dadd( 56.9778, -455.976, -33.5121, 0.37 ) }
    dend_19 { pt3dadd( 55.392, -455.375, -33.6043, 0.37 ) }
    dend_19 { pt3dadd( 54.1876, -455.018, -33.6719, 0.37 ) }
    dend_19 { pt3dadd( 53.2615, -454.679, -33.6971, 0.37 ) }
    dend_19 { pt3dadd( 52.3293, -454.056, -33.4929, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_19 { pt3dadd( 52.7674, -454.864, -33.7997, 0.37 ) }
    dend_19 { pt3dadd( 53.073, -455.828, -34.1601, 0.37 ) }
    dend_19 { pt3dadd( 53.5588, -457.5, -34.7816, 0.37 ) }
    dend_19 { pt3dadd( 54.6499, -460.109, -35.8169, 0.37 ) }
    dend_19 { pt3dadd( 55.0432, -460.732, -36.1088, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 5/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -132.115, -404.627, -73.5986, 0.37 ) }
    dend_14 { pt3dadd( -132.575, -405.087, -73.7477, 0.37 ) }
    dend_14 { pt3dadd( -133.212, -405.772, -73.9815, 0.37 ) }
    dend_14 { pt3dadd( -133.608, -406.24, -74.1326, 0.37 ) }
    dend_14 { pt3dadd( -134.321, -407.137, -74.3988, 0.37 ) }
    dend_14 { pt3dadd( -135.106, -408.154, -74.6679, 0.66 ) }
    dend_14 { pt3dadd( -135.726, -408.965, -74.8627, 0.66 ) }
    dend_14 { pt3dadd( -136.16, -409.59, -74.9978, 0.66 ) }
    dend_14 { pt3dadd( -136.534, -410.174, -75.164, 0.66 ) }
    dend_14 { pt3dadd( -136.889, -410.788, -75.3543, 0.66 ) }
    dend_14 { pt3dadd( -137.388, -411.701, -75.6414, 0.66 ) }
    dend_14 { pt3dadd( -137.935, -412.635, -75.9497, 0.66 ) }
    dend_14 { pt3dadd( -138.466, -413.504, -76.2684, 0.96 ) }
    dend_14 { pt3dadd( -139.466, -415.025, -76.8461, 0.37 ) }
    dend_14 { pt3dadd( -140.113, -415.956, -77.208, 0.37 ) }
    dend_14 { pt3dadd( -140.586, -416.604, -77.4581, 0.37 ) }
    dend_14 { pt3dadd( -140.987, -417.145, -77.6532, 0.29 ) }
    dend_14 { pt3dadd( -141.601, -417.963, -77.903, 0.29 ) }
    dend_14 { pt3dadd( -142.119, -418.666, -78.0371, 0.29 ) }
    dend_14 { pt3dadd( -142.59, -419.415, -78.0625, 0.29 ) }
    dend_14 { pt3dadd( -142.86, -419.918, -78.0609, 0.29 ) }
    dend_14 { pt3dadd( -143.155, -420.565, -78.0368, 0.29 ) }
    dend_14 { pt3dadd( -143.352, -421.052, -77.9648, 0.66 ) }
    dend_14 { pt3dadd( -143.703, -421.989, -77.7663, 0.29 ) }
    dend_14 { pt3dadd( -144.022, -422.88, -77.5368, 0.29 ) }
    dend_14 { pt3dadd( -144.324, -423.63, -77.3289, 0.29 ) }
    dend_14 { pt3dadd( -144.723, -424.548, -77.0421, 0.29 ) }
    dend_14 { pt3dadd( -145.405, -425.995, -76.5543, 0.29 ) }
    dend_14 { pt3dadd( -145.76, -426.691, -76.3199, 0.74 ) }
    dend_14 { pt3dadd( -145.935, -427.011, -76.2174, 0.81 ) }
    dend_14 { pt3dadd( -146.476, -427.96, -75.9217, 0.44 ) }
    dend_14 { pt3dadd( -146.941, -428.768, -75.696, 0.44 ) }
    dend_14 { pt3dadd( -147.172, -429.192, -75.6039, 0.59 ) }
    dend_14 { pt3dadd( -147.653, -430.1, -75.4853, 0.59 ) }
    dend_14 { pt3dadd( -147.97, -430.702, -75.41, 0.81 ) }
    dend_14 { pt3dadd( -148.259, -431.226, -75.3493, 0.44 ) }
    dend_14 { pt3dadd( -148.87, -432.198, -75.2508, 0.44 ) }
    dend_14 { pt3dadd( -149.308, -432.73, -75.2198, 0.44 ) }
    dend_14 { pt3dadd( -149.686, -433.094, -75.2001, 0.66 ) }
    dend_14 { pt3dadd( -150.201, -433.524, -75.1799, 0.66 ) }
    dend_14 { pt3dadd( -150.839, -434.018, -75.1704, 0.44 ) }
    dend_14 { pt3dadd( -151.672, -434.668, -75.1766, 0.44 ) }
    dend_14 { pt3dadd( -152.611, -435.423, -75.2039, 0.44 ) }
    dend_14 { pt3dadd( -153.461, -436.162, -75.2329, 0.44 ) }
    dend_14 { pt3dadd( -153.881, -436.562, -75.2718, 0.44 ) }
    dend_14 { pt3dadd( -154.368, -437.075, -75.3383, 0.52 ) }
    dend_14 { pt3dadd( -155.142, -437.968, -75.4693, 0.52 ) }
    dend_14 { pt3dadd( -155.924, -438.942, -75.6171, 0.52 ) }
    dend_14 { pt3dadd( -156.406, -439.548, -75.7117, 0.52 ) }
    dend_14 { pt3dadd( -157.709, -441.128, -75.9456, 0.29 ) }
    dend_14 { pt3dadd( -158.461, -441.956, -76.0574, 0.29 ) }
    dend_14 { pt3dadd( -159.11, -442.608, -76.1778, 0.44 ) }
    dend_14 { pt3dadd( -159.754, -443.201, -76.3121, 0.44 ) }
    dend_14 { pt3dadd( -160.822, -444.121, -76.5439, 0.44 ) }
    dend_14 { pt3dadd( -162.265, -445.301, -76.7998, 0.44 ) }
    dend_14 { pt3dadd( -163.491, -446.286, -76.9649, 0.44 ) }
    dend_14 { pt3dadd( -164.799, -447.32, -77.0757, 0.44 ) }
    dend_14 { pt3dadd( -165.936, -448.18, -77.1142, 0.44 ) }
    dend_14 { pt3dadd( -166.448, -448.542, -77.1099, 0.59 ) }
    dend_14 { pt3dadd( -168.271, -449.755, -77.0188, 0.37 ) }
    dend_14 { pt3dadd( -169.227, -450.357, -76.9317, 0.37 ) }
    dend_14 { pt3dadd( -170.594, -451.224, -76.7477, 0.37 ) }
    dend_14 { pt3dadd( -172.429, -452.397, -76.419, 0.37 ) }
    dend_14 { pt3dadd( -173.178, -452.893, -76.2914, 0.52 ) }
    dend_14 { pt3dadd( -173.858, -453.379, -76.188, 0.74 ) }
    dend_14 { pt3dadd( -174.344, -453.78, -76.1185, 0.52 ) }
    dend_14 { pt3dadd( -174.954, -454.417, -76.0167, 0.37 ) }
    dend_14 { pt3dadd( -175.445, -455.165, -75.9247, 0.37 ) }
    dend_14 { pt3dadd( -175.711, -455.847, -75.8245, 0.37 ) }
    dend_14 { pt3dadd( -175.92, -456.52, -75.7526, 0.37 ) }
    dend_14 { pt3dadd( -176.212, -457.714, -75.6659, 0.37 ) }
    dend_14 { pt3dadd( -176.39, -458.478, -75.6338, 0.37 ) }
    dend_14 { pt3dadd( -176.55, -459.143, -75.6246, 0.66 ) }
    dend_14 { pt3dadd( -176.882, -460.367, -75.6979, 0.66 ) }
    dend_14 { pt3dadd( -177.193, -461.331, -75.8184, 0.52 ) }
    dend_14 { pt3dadd( -177.529, -462.277, -75.9928, 0.52 ) }
    dend_14 { pt3dadd( -177.823, -463.096, -76.2024, 0.44 ) }
    dend_14 { pt3dadd( -178.011, -463.652, -76.3471, 0.52 ) }
    dend_14 { pt3dadd( -178.333, -464.734, -76.6098, 0.37 ) }
    dend_14 { pt3dadd( -178.411, -465.028, -76.672, 0.37 ) }
    dend_14 { pt3dadd( -178.623, -465.823, -76.7999, 0.37 ) }
    dend_14 { pt3dadd( -178.82, -466.511, -76.898, 0.37 ) }
    dend_14 { pt3dadd( -179.13, -467.616, -77.0246, 0.37 ) }
    dend_14 { pt3dadd( -179.41, -468.593, -77.049, 0.37 ) }
    dend_14 { pt3dadd( -179.624, -469.291, -76.9989, 0.37 ) }
    dend_14 { pt3dadd( -179.817, -469.857, -76.9186, 0.37 ) }
    dend_14 { pt3dadd( -180.06, -470.484, -76.7888, 0.37 ) }
    dend_14 { pt3dadd( -180.236, -470.872, -76.685, 0.74 ) }
    dend_14 { pt3dadd( -180.763, -471.912, -76.3709, 0.59 ) }
    dend_14 { pt3dadd( -181.116, -472.524, -76.1345, 0.37 ) }
    dend_14 { pt3dadd( -181.657, -473.382, -75.7754, 0.29 ) }
    dend_14 { pt3dadd( -182.165, -474.133, -75.4387, 0.29 ) }
    dend_14 { pt3dadd( -182.49, -474.576, -75.2377, 0.29 ) }
    dend_14 { pt3dadd( -183.204, -475.51, -74.8373, 0.29 ) }
    dend_14 { pt3dadd( -183.977, -476.423, -74.4839, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_14 { pt3dadd( -184.758, -477.268, -74.1645, 0.29 ) }
    dend_14 { pt3dadd( -185.496, -477.997, -73.9112, 0.52 ) }
    dend_14 { pt3dadd( -185.947, -478.414, -73.7777, 0.52 ) }
    dend_14 { pt3dadd( -186.348, -478.765, -73.6894, 0.52 ) }
    dend_14 { pt3dadd( -187.086, -479.331, -73.598, 0.52 ) }
    dend_14 { pt3dadd( -187.669, -479.768, -73.5867, 0.52 ) }
    dend_14 { pt3dadd( -188.167, -480.092, -73.5934, 0.29 ) }
    dend_14 { pt3dadd( -188.68, -480.381, -73.6167, 0.29 ) }
    dend_14 { pt3dadd( -189.628, -480.792, -73.6532, 0.29 ) }
    dend_14 { pt3dadd( -190.147, -480.996, -73.6714, 0.29 ) }
    dend_14 { pt3dadd( -190.778, -481.229, -73.6894, 0.29 ) }
    dend_14 { pt3dadd( -191.722, -481.515, -73.7031, 0.22 ) }
    dend_14 { pt3dadd( -192.493, -481.69, -73.7152, 0.22 ) }
    dend_14 { pt3dadd( -193.59, -481.855, -73.7335, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 14/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -132.115, -404.627, -73.5986, 0.37 ) }
    dend_13 { pt3dadd( -133.025, -404.172, -73.5884, 0.37 ) }
    dend_13 { pt3dadd( -134.165, -403.447, -73.4909, 0.37 ) }
    dend_13 { pt3dadd( -135.593, -402.44, -73.3286, 0.15 ) }
    dend_13 { pt3dadd( -136.212, -401.941, -73.2982, 0.15 ) }
    dend_13 { pt3dadd( -137.599, -400.774, -73.2839, 0.15 ) }
    dend_13 { pt3dadd( -138.381, -400.112, -73.2906, 0.15 ) }
    dend_13 { pt3dadd( -139.398, -399.248, -73.2873, 0.15 ) }
    dend_13 { pt3dadd( -140.402, -398.355, -73.2572, 0.15 ) }
    dend_13 { pt3dadd( -141.854, -396.937, -73.262, 0.15 ) }
    dend_13 { pt3dadd( -143.231, -395.576, -73.3452, 0.15 ) }
    dend_13 { pt3dadd( -144.088, -394.756, -73.4878, 0.15 ) }
    dend_13 { pt3dadd( -144.483, -394.414, -73.5716, 0.15 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 27/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -72.0721, 89.7905, 0.55149, 0.59 ) }
    dend_80 { pt3dadd( -71.8676, 89.9755, 0.774597, 0.59 ) }
    dend_80 { pt3dadd( -70.9053, 90.7365, 1.59545, 0.29 ) }
    dend_80 { pt3dadd( -70.6011, 90.9368, 1.78547, 0.29 ) }
    dend_80 { pt3dadd( -70.1557, 91.2304, 2.02347, 0.15 ) }
    dend_80 { pt3dadd( -69.4242, 91.7008, 2.37797, 0.07 ) }
    dend_80 { pt3dadd( -68.9245, 91.9934, 2.59801, 0.07 ) }
    dend_80 { pt3dadd( -68.3651, 92.2755, 2.78217, 0.07 ) }
    dend_80 { pt3dadd( -67.474, 92.6693, 2.99044, 0.07 ) }
    dend_80 { pt3dadd( -66.04, 93.2475, 3.36162, 0.07 ) }
    dend_80 { pt3dadd( -65.7011, 93.3778, 3.45308, 0.07 ) }
    dend_80 { pt3dadd( -65.0633, 93.6151, 3.61846, 0.07 ) }
    dend_80 { pt3dadd( -64.3704, 93.8861, 3.82761, 0.07 ) }
    dend_80 { pt3dadd( -64.1255, 93.9907, 3.90833, 0.37 ) }
    dend_80 { pt3dadd( -63.2271, 94.3642, 4.19971, 0.15 ) }
    dend_80 { pt3dadd( -62.7549, 94.5435, 4.33741, 0.15 ) }
    dend_80 { pt3dadd( -62.2173, 94.7987, 4.50107, 0.15 ) }
    dend_80 { pt3dadd( -61.7495, 95.0536, 4.65056, 0.15 ) }
    dend_80 { pt3dadd( -61.1881, 95.3748, 4.82901, 0.15 ) }
    dend_80 { pt3dadd( -60.4759, 95.7641, 5.02291, 0.15 ) }
    dend_80 { pt3dadd( -60.1889, 95.9049, 5.06966, 0.15 ) }
    dend_80 { pt3dadd( -59.5072, 96.1859, 5.18233, 0.15 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 49/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -72.0721, 89.7905, 0.55149, 0.37 ) }
    dend_79 { pt3dadd( -72.6798, 89.9041, 0.391933, 0.37 ) }
    dend_79 { pt3dadd( -73.1116, 89.9871, 0.312824, 0.37 ) }
    dend_79 { pt3dadd( -73.6924, 90.1099, 0.232675, 0.44 ) }
    dend_79 { pt3dadd( -74.0738, 90.1976, 0.00421548, 0.66 ) }
    dend_79 { pt3dadd( -74.4546, 90.2852, -0.223854, 0.66 ) }
    dend_79 { pt3dadd( -75.0253, 90.4164, -0.565673, 0.52 ) }
    dend_79 { pt3dadd( -75.7928, 90.5935, -1.08599, 0.29 ) }
    dend_79 { pt3dadd( -76.2266, 90.6969, -1.4479, 0.37 ) }
    dend_79 { pt3dadd( -78.5789, 91.297, -3.92792, 0.37 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 59/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -67.0642, 84.5026, 16.4844, 0.96 ) }
    dend_75 { pt3dadd( -67.7116, 84.7218, 16.5797, 0.66 ) }
    dend_75 { pt3dadd( -68.1606, 84.8695, 16.6498, 0.66 ) }
    dend_75 { pt3dadd( -68.6777, 85.0291, 16.7294, 0.59 ) }
    dend_75 { pt3dadd( -69.3821, 85.2272, 16.8508, 0.52 ) }
    dend_75 { pt3dadd( -71.3019, 85.7107, 17.1886, 0.52 ) }
    dend_75 { pt3dadd( -72.17, 85.9063, 17.3368, 0.59 ) }
    dend_75 { pt3dadd( -72.5667, 85.9933, 17.4142, 0.81 ) }
    dend_75 { pt3dadd( -73.0849, 86.0346, 17.5199, 0.52 ) }
    dend_75 { pt3dadd( -73.669, 86.0026, 17.6479, 0.52 ) }
    dend_75 { pt3dadd( -74.4348, 85.8547, 17.7779, 0.52 ) }
    dend_75 { pt3dadd( -75.2218, 85.5946, 17.8651, 0.52 ) }
    dend_75 { pt3dadd( -76.102, 85.2716, 17.9116, 0.52 ) }
    dend_75 { pt3dadd( -78.152, 84.5292, 17.9005, 0.52 ) }
    dend_75 { pt3dadd( -78.7701, 84.314, 17.864, 0.52 ) }
    dend_75 { pt3dadd( -79.9079, 83.9554, 17.728, 0.59 ) }
    dend_75 { pt3dadd( -80.5818, 83.781, 17.6087, 0.74 ) }
    dend_75 { pt3dadd( -80.8131, 83.7446, 17.5526, 0.88 ) }
    dend_75 { pt3dadd( -81.6525, 83.7679, 17.2941, 0.88 ) }
    dend_75 { pt3dadd( -81.9838, 83.8686, 17.1893, 0.74 ) }
    dend_75 { pt3dadd( -82.4274, 84.0678, 17.0797, 0.59 ) }
    dend_75 { pt3dadd( -82.9819, 84.3561, 16.9857, 0.37 ) }
    dend_75 { pt3dadd( -83.3851, 84.5786, 16.9578, 0.29 ) }
    dend_75 { pt3dadd( -83.9434, 84.878, 16.9403, 0.37 ) }
    dend_75 { pt3dadd( -84.6588, 85.2418, 16.9489, 0.52 ) }
    dend_75 { pt3dadd( -86.216, 85.9698, 17.0735, 0.52 ) }
    dend_75 { pt3dadd( -86.7528, 86.1865, 17.151, 0.59 ) }
    dend_75 { pt3dadd( -88.0095, 86.583, 17.4072, 0.66 ) }
    dend_75 { pt3dadd( -88.981, 86.7963, 17.6468, 0.66 ) }
    dend_75 { pt3dadd( -89.4032, 86.8446, 17.7683, 0.66 ) }
    dend_75 { pt3dadd( -90.4108, 86.87, 18.1232, 0.66 ) }
    dend_75 { pt3dadd( -91.0693, 86.843, 18.3558, 0.66 ) }
    dend_75 { pt3dadd( -91.6295, 86.8441, 18.5179, 0.66 ) }
    dend_75 { pt3dadd( -91.9602, 86.8596, 18.596, 0.66 ) }
    dend_75 { pt3dadd( -92.4639, 86.8898, 18.7299, 0.66 ) }
    dend_75 { pt3dadd( -93.4401, 86.9313, 18.9461, 0.66 ) }
    dend_75 { pt3dadd( -94.2179, 86.9628, 19.0978, 0.66 ) }
    dend_75 { pt3dadd( -95.1055, 86.9956, 19.2771, 0.66 ) }
    dend_75 { pt3dadd( -95.8673, 87.0139, 19.4259, 0.66 ) }
    dend_75 { pt3dadd( -96.8067, 87.0321, 19.5865, 0.59 ) }
    dend_75 { pt3dadd( -98.0385, 87.0229, 19.7151, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_75 { pt3dadd( -98.9009, 86.9929, 19.7544, 0.66 ) }
    dend_75 { pt3dadd( -99.8792, 86.9386, 19.7849, 0.66 ) }
    dend_75 { pt3dadd( -100.206, 86.918, 19.7859, 0.66 ) }
    dend_75 { pt3dadd( -101.852, 86.832, 19.7034, 0.66 ) }
    dend_75 { pt3dadd( -102.945, 86.8266, 19.5865, 0.96 ) }
    dend_75 { pt3dadd( -103.192, 86.8406, 19.5408, 0.96 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 6/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -67.0642, 84.5026, 16.4844, 0.52 ) }
    dend_74 { pt3dadd( -67.2379, 85.6091, 16.4863, 0.52 ) }
    dend_74 { pt3dadd( -67.4594, 86.8572, 16.438, 0.37 ) }
    dend_74 { pt3dadd( -67.5866, 87.3966, 16.4076, 0.37 ) }
    dend_74 { pt3dadd( -67.8931, 88.3917, 16.3831, 0.29 ) }
    dend_74 { pt3dadd( -68.1047, 88.9675, 16.3818, 0.52 ) }
    dend_74 { pt3dadd( -68.3127, 89.4776, 16.3796, 0.52 ) }
    dend_74 { pt3dadd( -68.861, 90.5378, 16.3549, 0.29 ) }
    dend_74 { pt3dadd( -69.3155, 91.3031, 16.3259, 0.22 ) }
    dend_74 { pt3dadd( -69.8457, 92.0563, 16.264, 0.22 ) }
    dend_74 { pt3dadd( -70.2929, 92.5762, 16.1972, 0.22 ) }
    dend_74 { pt3dadd( -70.5501, 92.853, 16.1523, 0.37 ) }
    dend_74 { pt3dadd( -71.0012, 93.3255, 16.0667, 0.59 ) }
    dend_74 { pt3dadd( -71.3419, 93.6964, 15.999, 0.44 ) }
    dend_74 { pt3dadd( -71.7154, 94.165, 15.9118, 0.29 ) }
    dend_74 { pt3dadd( -72.0705, 94.67, 15.8216, 0.29 ) }
    dend_74 { pt3dadd( -72.4393, 95.2078, 15.7551, 0.29 ) }
    dend_74 { pt3dadd( -72.917, 95.9113, 15.7116, 0.29 ) }
    dend_74 { pt3dadd( -73.189, 96.2944, 15.7066, 0.29 ) }
    dend_74 { pt3dadd( -73.708, 96.9413, 15.7827, 0.22 ) }
    dend_74 { pt3dadd( -74.076, 97.3594, 15.8886, 0.15 ) }
    dend_74 { pt3dadd( -74.4415, 97.7286, 16.0082, 0.59 ) }
    dend_74 { pt3dadd( -74.6218, 97.8902, 16.0825, 0.59 ) }
    dend_74 { pt3dadd( -75.3314, 98.4787, 16.3761, 0.15 ) }
    dend_74 { pt3dadd( -76.4085, 99.3311, 16.7999, 0.29 ) }
    dend_74 { pt3dadd( -76.7986, 99.6268, 16.9323, 0.44 ) }
    dend_74 { pt3dadd( -77.8533, 100.424, 17.2506, 0.29 ) }
    dend_74 { pt3dadd( -78.5793, 100.99, 17.4455, 0.37 ) }
    dend_74 { pt3dadd( -79.5421, 101.753, 17.6688, 0.15 ) }
    dend_74 { pt3dadd( -80.0313, 102.148, 17.7597, 0.15 ) }
    dend_74 { pt3dadd( -80.8705, 102.832, 17.8953, 0.15 ) }
    dend_74 { pt3dadd( -81.1113, 103.023, 17.9443, 0.29 ) }
    dend_74 { pt3dadd( -81.8401, 103.583, 18.1183, 0.29 ) }
    dend_74 { pt3dadd( -82.7751, 104.27, 18.3407, 0.29 ) }
    dend_74 { pt3dadd( -83.0916, 104.496, 18.4326, 0.52 ) }
    dend_74 { pt3dadd( -83.935, 105.094, 18.6979, 0.37 ) }
    dend_74 { pt3dadd( -84.7243, 105.682, 18.9612, 0.29 ) }
    dend_74 { pt3dadd( -85.2788, 106.099, 19.1454, 0.22 ) }
    dend_74 { pt3dadd( -85.8032, 106.493, 19.3112, 0.22 ) }
    dend_74 { pt3dadd( -86.0863, 106.712, 19.393, 0.22 ) }
    dend_74 { pt3dadd( -86.4689, 107.01, 19.4863, 0.22 ) }
    dend_74 { pt3dadd( -87.0516, 107.486, 19.5419, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 48/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.40163, -329.255, -26.3187, 0.44 ) }
    dend_27 { pt3dadd( -8.45146, -329.941, -26.4057, 0.44 ) }
    dend_27 { pt3dadd( -8.48859, -330.984, -26.5178, 0.44 ) }
    dend_27 { pt3dadd( -8.52814, -332.047, -26.5519, 0.59 ) }
    dend_27 { pt3dadd( -8.59192, -332.936, -26.541, 0.81 ) }
    dend_27 { pt3dadd( -8.66077, -333.598, -26.5173, 0.81 ) }
    dend_27 { pt3dadd( -8.79308, -334.521, -26.4708, 0.37 ) }
    dend_27 { pt3dadd( -8.96811, -335.314, -26.4048, 0.37 ) }
    dend_27 { pt3dadd( -9.2756, -336.338, -26.2866, 0.59 ) }
    dend_27 { pt3dadd( -9.62496, -337.222, -26.115, 0.74 ) }
    dend_27 { pt3dadd( -9.76548, -337.524, -26.05, 0.52 ) }
    dend_27 { pt3dadd( -10.076, -338.12, -25.9192, 0.37 ) }
    dend_27 { pt3dadd( -10.5057, -338.878, -25.7381, 0.37 ) }
    dend_27 { pt3dadd( -11.1755, -340.029, -25.4743, 0.37 ) }
    dend_27 { pt3dadd( -11.7857, -341.113, -25.2508, 0.29 ) }
    dend_27 { pt3dadd( -12.4127, -342.315, -25.0039, 0.29 ) }
    dend_27 { pt3dadd( -12.6383, -342.766, -24.9147, 0.88 ) }
    dend_27 { pt3dadd( -13.1587, -343.818, -24.7217, 0.44 ) }
    dend_27 { pt3dadd( -13.7328, -344.956, -24.5442, 0.44 ) }
    dend_27 { pt3dadd( -13.9686, -345.417, -24.4903, 0.44 ) }
    dend_27 { pt3dadd( -14.4521, -346.341, -24.431, 0.44 ) }
    dend_27 { pt3dadd( -14.7501, -346.875, -24.4056, 0.44 ) }
    dend_27 { pt3dadd( -15.35, -347.919, -24.4044, 0.44 ) }
    dend_27 { pt3dadd( -16.0446, -349.065, -24.46, 0.44 ) }
    dend_27 { pt3dadd( -16.5021, -349.773, -24.5072, 0.44 ) }
    dend_27 { pt3dadd( -17.0132, -350.538, -24.5422, 0.44 ) }
    dend_27 { pt3dadd( -17.6526, -351.476, -24.5641, 0.44 ) }
    dend_27 { pt3dadd( -18.1051, -352.174, -24.5276, 0.37 ) }
    dend_27 { pt3dadd( -18.7726, -353.279, -24.4745, 0.37 ) }
    dend_27 { pt3dadd( -19.1344, -353.947, -24.3975, 0.59 ) }
    dend_27 { pt3dadd( -19.6565, -355.013, -24.2231, 0.59 ) }
    dend_27 { pt3dadd( -20.3882, -356.62, -23.9642, 0.59 ) }
    dend_27 { pt3dadd( -20.9509, -357.917, -23.7566, 0.59 ) }
    dend_27 { pt3dadd( -21.6175, -359.584, -23.5082, 0.44 ) }
    dend_27 { pt3dadd( -22.2928, -361.621, -23.2914, 0.44 ) }
    dend_27 { pt3dadd( -22.396, -361.999, -23.2601, 0.44 ) }
    dend_27 { pt3dadd( -22.7135, -363.605, -23.1858, 0.66 ) }
    dend_27 { pt3dadd( -22.7929, -364.28, -23.1641, 0.66 ) }
    dend_27 { pt3dadd( -22.8815, -365.714, -23.1452, 0.59 ) }
    dend_27 { pt3dadd( -22.8644, -367.106, -23.0833, 0.59 ) }
    dend_27 { pt3dadd( -22.7821, -368.002, -23.0739, 0.59 ) }
    dend_27 { pt3dadd( -22.6186, -369.135, -23.0356, 0.59 ) }
    dend_27 { pt3dadd( -22.3702, -370.403, -22.9595, 0.44 ) }
    dend_27 { pt3dadd( -22.1858, -371.338, -22.9112, 0.44 ) }
    dend_27 { pt3dadd( -22.0047, -372.34, -22.8718, 0.44 ) }
    dend_27 { pt3dadd( -21.8256, -373.712, -22.8232, 0.44 ) }
    dend_27 { pt3dadd( -21.8025, -374.184, -22.811, 0.74 ) }
    dend_27 { pt3dadd( -21.8647, -375.537, -22.7633, 0.37 ) }
    dend_27 { pt3dadd( -21.9505, -376.292, -22.7319, 0.37 ) }
    dend_27 { pt3dadd( -22.1148, -377.345, -22.6836, 0.37 ) }
    dend_27 { pt3dadd( -22.4109, -379.01, -22.6035, 0.29 ) }
    dend_27 { pt3dadd( -22.5983, -380.207, -22.5456, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_27 { pt3dadd( -22.6717, -381.174, -22.5113, 0.29 ) }
    dend_27 { pt3dadd( -22.629, -382.641, -22.483, 0.29 ) }
    dend_27 { pt3dadd( -22.5669, -383.088, -22.482, 0.66 ) }
    dend_27 { pt3dadd( -22.3272, -383.966, -22.4961, 0.66 ) }
    dend_27 { pt3dadd( -21.8967, -384.995, -22.5386, 0.29 ) }
    dend_27 { pt3dadd( -21.2082, -386.273, -22.5997, 0.29 ) }
    dend_27 { pt3dadd( -20.422, -387.533, -22.6651, 0.29 ) }
    dend_27 { pt3dadd( -19.8097, -388.445, -22.7134, 0.29 ) }
    dend_27 { pt3dadd( -19.0715, -389.487, -22.7978, 0.29 ) }
    dend_27 { pt3dadd( -18.3848, -390.383, -22.8906, 0.29 ) }
    dend_27 { pt3dadd( -17.8716, -391.006, -22.9993, 0.44 ) }
    dend_27 { pt3dadd( -17.1778, -391.79, -23.1812, 0.44 ) }
    dend_27 { pt3dadd( -16.3507, -392.651, -23.4262, 0.44 ) }
    dend_27 { pt3dadd( -15.462, -393.546, -23.7074, 0.44 ) }
    dend_27 { pt3dadd( -14.4282, -394.621, -24.0228, 0.44 ) }
    dend_27 { pt3dadd( -13.3011, -395.858, -24.339, 0.44 ) }
    dend_27 { pt3dadd( -12.7969, -396.476, -24.4813, 0.44 ) }
    dend_27 { pt3dadd( -12.0831, -397.422, -24.671, 0.44 ) }
    dend_27 { pt3dadd( -11.6877, -398.017, -24.762, 0.44 ) }
    dend_27 { pt3dadd( -10.9733, -399.338, -24.9075, 0.44 ) }
    dend_27 { pt3dadd( -10.5854, -400.27, -25.0271, 0.44 ) }
    dend_27 { pt3dadd( -10.105, -401.607, -25.2185, 0.29 ) }
    dend_27 { pt3dadd( -9.89661, -402.266, -25.3464, 0.96 ) }
    dend_27 { pt3dadd( -9.66204, -403.121, -25.5646, 0.44 ) }
    dend_27 { pt3dadd( -9.35192, -404.421, -25.9654, 0.44 ) }
    dend_27 { pt3dadd( -8.94762, -406.035, -26.8008, 0.44 ) }
    dend_27 { pt3dadd( -8.76793, -406.623, -27.2122, 0.66 ) }
    dend_27 { pt3dadd( -8.6536, -406.902, -27.4774, 0.66 ) }
    dend_27 { pt3dadd( -8.32107, -407.488, -28.2781, 0.44 ) }
    dend_27 { pt3dadd( -8.1254, -407.725, -28.7665, 0.44 ) }
    dend_27 { pt3dadd( -7.02749, -408.784, -31.4957, 0.44 ) }
    dend_27 { pt3dadd( -6.83538, -408.934, -31.9723, 0.44 ) }
    dend_27 { pt3dadd( -6.29815, -409.333, -33.3477, 0.44 ) }
    dend_27 { pt3dadd( -5.60622, -409.754, -35.0871, 0.44 ) }
    dend_27 { pt3dadd( -4.79291, -410.121, -37.0925, 0.44 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 35/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.40163, -329.255, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -9.43602, -329.387, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -10.8381, -329.566, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -11.583, -329.661, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -12.6394, -329.795, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -13.3048, -329.88, -26.3187, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 52.5768, -486.52, -35.5185, 0.44 ) }
    dend_22 { pt3dadd( 52.9423, -488.41, -35.828, 0.44 ) }
    dend_22 { pt3dadd( 53.0464, -489.052, -35.9414, 0.44 ) }
    dend_22 { pt3dadd( 53.24, -490.497, -36.2273, 0.44 ) }
    dend_22 { pt3dadd( 53.4947, -492.379, -36.6121, 0.44 ) }
    dend_22 { pt3dadd( 53.6361, -493.431, -36.8365, 0.44 ) }
    dend_22 { pt3dadd( 53.8232, -494.832, -37.1354, 0.44 ) }
    dend_22 { pt3dadd( 54.0387, -496.455, -37.503, 0.44 ) }
    dend_22 { pt3dadd( 54.1474, -497.24, -37.6947, 0.44 ) }
    dend_22 { pt3dadd( 54.2645, -497.986, -37.8976, 0.66 ) }
    dend_22 { pt3dadd( 54.4098, -498.821, -38.13, 0.29 ) }
    dend_22 { pt3dadd( 54.8386, -501.137, -38.6684, 0.29 ) }
    dend_22 { pt3dadd( 54.9625, -501.78, -38.7944, 0.29 ) }
    dend_22 { pt3dadd( 55.2335, -503.102, -38.9779, 0.29 ) }
    dend_22 { pt3dadd( 55.3583, -503.896, -39.0461, 0.37 ) }
    dend_22 { pt3dadd( 55.4204, -504.693, -39.0849, 0.66 ) }
    dend_22 { pt3dadd( 55.397, -506.092, -39.0823, 0.22 ) }
    dend_22 { pt3dadd( 55.2052, -507.074, -39.0272, 0.22 ) }
    dend_22 { pt3dadd( 54.8313, -508.105, -38.8986, 0.22 ) }
    dend_22 { pt3dadd( 54.2467, -509.382, -38.6844, 0.22 ) }
    dend_22 { pt3dadd( 53.9138, -509.989, -38.5709, 0.22 ) }
    dend_22 { pt3dadd( 53.4565, -510.675, -38.4592, 0.22 ) }
    dend_22 { pt3dadd( 52.5467, -511.766, -38.3554, 0.22 ) }
    dend_22 { pt3dadd( 51.7497, -512.513, -38.2566, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 52.5768, -486.52, -35.5185, 0.44 ) }
    dend_21 { pt3dadd( 51.8862, -487.581, -35.565, 0.44 ) }
    dend_21 { pt3dadd( 50.8446, -489.118, -35.6913, 0.44 ) }
    dend_21 { pt3dadd( 50.0146, -490.33, -35.9208, 0.44 ) }
    dend_21 { pt3dadd( 48.9405, -491.793, -36.3395, 0.44 ) }
    dend_21 { pt3dadd( 48.1453, -492.876, -36.6495, 0.44 ) }
    dend_21 { pt3dadd( 47.308, -494.016, -36.9759, 0.44 ) }
    dend_21 { pt3dadd( 46.5542, -495.0, -37.3275, 0.44 ) }
    dend_21 { pt3dadd( 45.4039, -496.386, -37.9979, 0.44 ) }
    dend_21 { pt3dadd( 44.652, -497.217, -38.5516, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 75/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -103.192, 86.8406, 19.5408, 0.59 ) }
    dend_77 { pt3dadd( -104.167, 87.0828, 19.2644, 0.59 ) }
    dend_77 { pt3dadd( -104.714, 87.2243, 19.1144, 0.59 ) }
    dend_77 { pt3dadd( -105.464, 87.4095, 18.9332, 0.52 ) }
    dend_77 { pt3dadd( -106.805, 87.7264, 18.6486, 0.52 ) }
    dend_77 { pt3dadd( -108.174, 88.0149, 18.3853, 0.52 ) }
    dend_77 { pt3dadd( -109.633, 88.2797, 18.1315, 0.52 ) }
    dend_77 { pt3dadd( -109.974, 88.3365, 18.0873, 0.52 ) }
    dend_77 { pt3dadd( -111.097, 88.5489, 17.9203, 0.52 ) }
    dend_77 { pt3dadd( -112.045, 88.7572, 17.7699, 0.52 ) }
    dend_77 { pt3dadd( -112.616, 88.871, 17.68, 0.52 ) }
    dend_77 { pt3dadd( -113.407, 89.028, 17.5416, 0.59 ) }
    dend_77 { pt3dadd( -113.577, 89.0619, 17.5124, 0.59 ) }
    dend_77 { pt3dadd( -115.322, 89.3565, 17.1858, 0.44 ) }
    dend_77 { pt3dadd( -115.989, 89.4462, 17.0462, 0.44 ) }
    dend_77 { pt3dadd( -116.434, 89.464, 16.9551, 0.66 ) }
    dend_77 { pt3dadd( -117.094, 89.4094, 16.8724, 0.66 ) }
    dend_77 { pt3dadd( -117.77, 89.254, 16.8508, 0.66 ) }
    dend_77 { pt3dadd( -118.454, 88.9853, 16.8904, 0.81 ) }
    dend_77 { pt3dadd( -118.786, 88.7935, 16.9307, 0.96 ) }
    dend_77 { pt3dadd( -119.487, 88.3243, 17.0207, 0.96 ) }
    dend_77 { pt3dadd( -120.341, 87.7026, 17.1336, 0.81 ) }
    dend_77 { pt3dadd( -120.69, 87.4236, 17.1793, 0.81 ) }
    dend_77 { pt3dadd( -121.882, 86.2847, 17.3301, 0.29 ) }
    dend_77 { pt3dadd( -122.86, 85.1821, 17.504, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_77 { pt3dadd( -123.177, 84.7823, 17.5711, 0.52 ) }
    dend_77 { pt3dadd( -123.584, 84.201, 17.6678, 0.52 ) }
    dend_77 { pt3dadd( -123.888, 83.7072, 17.7428, 0.52 ) }
    dend_77 { pt3dadd( -124.647, 82.3538, 17.9741, 0.29 ) }
    dend_77 { pt3dadd( -125.166, 81.3383, 18.1593, 0.29 ) }
    dend_77 { pt3dadd( -125.537, 80.6655, 18.2866, 0.29 ) }
    dend_77 { pt3dadd( -125.692, 80.4326, 18.3273, 0.29 ) }
    dend_77 { pt3dadd( -125.978, 80.0976, 18.364, 0.52 ) }
    dend_77 { pt3dadd( -126.213, 79.9055, 18.3611, 0.52 ) }
    dend_77 { pt3dadd( -126.875, 79.548, 18.2768, 0.52 ) }
    dend_77 { pt3dadd( -127.256, 79.3827, 18.1983, 0.52 ) }
    dend_77 { pt3dadd( -127.758, 79.1956, 18.0985, 0.52 ) }
    dend_77 { pt3dadd( -128.381, 78.9503, 17.9875, 0.52 ) }
    dend_77 { pt3dadd( -129.01, 78.6872, 17.9079, 0.44 ) }
    dend_77 { pt3dadd( -129.652, 78.4105, 17.9113, 0.52 ) }
    dend_77 { pt3dadd( -130.138, 78.2034, 17.968, 0.52 ) }
    dend_77 { pt3dadd( -130.599, 78.0187, 18.0522, 0.29 ) }
    dend_77 { pt3dadd( -131.431, 77.706, 18.2931, 0.29 ) }
    dend_77 { pt3dadd( -132.321, 77.3848, 18.5613, 0.52 ) }
    dend_77 { pt3dadd( -133.464, 76.9474, 18.8859, 0.37 ) }
    dend_77 { pt3dadd( -133.922, 76.7596, 19.002, 0.29 ) }
    dend_77 { pt3dadd( -134.919, 76.3391, 19.2284, 0.29 ) }
    dend_77 { pt3dadd( -135.939, 75.9137, 19.4343, 0.37 ) }
    dend_77 { pt3dadd( -139.136, 74.6508, 19.9818, 0.29 ) }
    dend_77 { pt3dadd( -140.25, 74.2112, 20.1252, 0.66 ) }
    dend_77 { pt3dadd( -141.094, 73.8774, 20.1913, 0.59 ) }
    dend_77 { pt3dadd( -141.309, 73.7866, 20.2044, 0.59 ) }
    dend_77 { pt3dadd( -141.827, 73.5461, 20.2213, 0.44 ) }
    dend_77 { pt3dadd( -142.409, 73.2728, 20.2344, 0.59 ) }
    dend_77 { pt3dadd( -142.963, 73.0353, 20.2809, 0.44 ) }
    dend_77 { pt3dadd( -143.815, 72.7273, 20.3321, 0.44 ) }
    dend_77 { pt3dadd( -144.93, 72.3462, 20.3471, 0.37 ) }
    dend_77 { pt3dadd( -145.385, 72.2005, 20.3151, 0.37 ) }
    dend_77 { pt3dadd( -146.502, 71.875, 20.1604, 0.52 ) }
    dend_77 { pt3dadd( -147.473, 71.6122, 19.9822, 0.52 ) }
    dend_77 { pt3dadd( -148.581, 71.3289, 19.7673, 0.52 ) }
    dend_77 { pt3dadd( -149.698, 71.0631, 19.5389, 0.52 ) }
    dend_77 { pt3dadd( -150.727, 70.849, 19.3085, 0.44 ) }
    dend_77 { pt3dadd( -151.495, 70.6894, 19.1274, 0.44 ) }
    dend_77 { pt3dadd( -152.461, 70.4434, 18.8724, 0.44 ) }
    dend_77 { pt3dadd( -153.369, 70.1436, 18.6697, 0.59 ) }
    dend_77 { pt3dadd( -153.76, 69.9778, 18.6125, 0.59 ) }
    dend_77 { pt3dadd( -154.2, 69.7388, 18.563, 0.74 ) }
    dend_77 { pt3dadd( -154.581, 69.4759, 18.5312, 0.88 ) }
    dend_77 { pt3dadd( -155.359, 68.8325, 18.431, 0.37 ) }
    dend_77 { pt3dadd( -155.961, 68.2432, 18.3293, 0.29 ) }
    dend_77 { pt3dadd( -156.397, 67.771, 18.246, 0.74 ) }
    dend_77 { pt3dadd( -156.81, 67.2799, 18.1759, 0.74 ) }
    dend_77 { pt3dadd( -157.169, 66.824, 18.1275, 0.74 ) }
    dend_77 { pt3dadd( -157.569, 66.3026, 18.0817, 0.66 ) }
    dend_77 { pt3dadd( -158.2, 65.4639, 18.0308, 0.66 ) }
    dend_77 { pt3dadd( -158.581, 64.9311, 18.0079, 0.66 ) }
    dend_77 { pt3dadd( -158.864, 64.5078, 17.9959, 0.74 ) }
    dend_77 { pt3dadd( -159.146, 64.0815, 17.9902, 0.44 ) }
    dend_77 { pt3dadd( -159.468, 63.612, 18.0061, 0.44 ) }
    dend_77 { pt3dadd( -159.924, 63.0105, 18.0561, 0.44 ) }
    dend_77 { pt3dadd( -160.477, 62.3596, 18.1442, 0.44 ) }
    dend_77 { pt3dadd( -160.897, 61.9269, 18.2183, 0.44 ) }
    dend_77 { pt3dadd( -161.443, 61.4292, 18.3163, 0.44 ) }
    dend_77 { pt3dadd( -162.363, 60.6438, 18.4982, 0.44 ) }
    dend_77 { pt3dadd( -162.9, 60.1963, 18.6175, 0.44 ) }
    dend_77 { pt3dadd( -163.674, 59.5706, 18.7973, 0.44 ) }
    dend_77 { pt3dadd( -164.404, 58.9657, 18.9709, 0.59 ) }
    dend_77 { pt3dadd( -164.809, 58.6047, 19.0721, 0.88 ) }
    dend_77 { pt3dadd( -165.416, 58.0144, 19.222, 0.44 ) }
    dend_77 { pt3dadd( -165.973, 57.4176, 19.3477, 0.44 ) }
    dend_77 { pt3dadd( -166.38, 56.9391, 19.4427, 0.44 ) }
    dend_77 { pt3dadd( -166.66, 56.5777, 19.5033, 0.44 ) }
    dend_77 { pt3dadd( -166.981, 56.1063, 19.5811, 0.44 ) }
    dend_77 { pt3dadd( -167.29, 55.6326, 19.6493, 0.44 ) }
    dend_77 { pt3dadd( -167.591, 55.2194, 19.6783, 0.44 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 71/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -103.192, 86.8406, 19.5408, 0.52 ) }
    dend_76 { pt3dadd( -103.513, 86.6206, 20.066, 0.52 ) }
    dend_76 { pt3dadd( -104.524, 86.2102, 21.3395, 0.37 ) }
    dend_76 { pt3dadd( -106.479, 85.7156, 23.212, 0.37 ) }
    dend_76 { pt3dadd( -106.835, 85.6377, 23.5008, 0.37 ) }
    dend_76 { pt3dadd( -107.574, 85.4637, 24.0272, 0.37 ) }
    dend_76 { pt3dadd( -108.179, 85.2997, 24.4521, 0.22 ) }
    dend_76 { pt3dadd( -109.093, 85.1301, 25.0373, 0.22 ) }
    dend_76 { pt3dadd( -109.834, 85.0518, 25.4368, 0.22 ) }
    dend_76 { pt3dadd( -111.051, 84.856, 25.8092, 0.37 ) }
    dend_76 { pt3dadd( -111.77, 84.7356, 26.0427, 0.37 ) }
    dend_76 { pt3dadd( -112.446, 84.5871, 26.2836, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_52 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_63 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_37 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_35 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_65 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_64 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_46 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_41 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_28 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_81 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_40 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_69 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_8 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_10 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_72 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_23 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_14 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_27 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_77 OneSecGrp_SectionRef_85.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_66 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_54 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_82 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_36 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_67 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_68 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_70 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_71 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_56 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_59 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_62 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_60 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_45 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_61 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_73 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_78 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_79 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_80 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_74 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_75 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_76 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_31 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_34 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_33 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_17 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_9 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_25 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_24 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_26 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_47 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_12 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_13 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_19 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_20 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_50 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_21 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_22 OneSecGrp_SectionRef_83.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_82, dend_82, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_71, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_68 all.append()
    dend_68 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_71 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_52 nseg = 9
    dend_63 nseg = 3
    dend_44 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 9
    dend_65 nseg = 11
    dend_64 nseg = 3
    dend_46 nseg = 17
    dend_41 nseg = 11
    dend_38 nseg = 3
    dend_28 nseg = 3
    dend_81 nseg = 11
    dend_40 nseg = 3
    dend_30 nseg = 3
    dend_7 nseg = 3
    dend_69 nseg = 3
    dend_15 nseg = 7
    dend_8 nseg = 7
    dend_6 nseg = 5
    dend_5 nseg = 19
    dend_10 nseg = 7
    dend_72 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 9
    dend_14 nseg = 5
    dend_27 nseg = 5
    dend_77 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_MC_38015c3bc0_0_0


