// Cell: dSTUT214_L5_LBC_a7bdd51160_0_0
/*
{
  "id" : "dSTUT214_L5_LBC_a7bdd51160_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.29271, -11.6867, 4.83325, 4.84982", "1.10949, -10.459, 4.33282, 5.97061", "0.926272, -9.23135, 3.83238, 8.0692", "0.743056, -8.00367, 3.33195, 9.40358", "0.559839, -6.77598, 2.83151, 10.6995", "0.376623, -5.5483, 2.33108, 11.9706", "0.193406, -4.32062, 1.83064, 13.8162", "0.0101893, -3.09294, 1.3302, 15.6871", "-0.173027, -1.86526, 0.82977, 15.9633", "-0.356244, -0.637576, 0.329335, 16.579", "-0.539461, 0.590106, -0.171101, 17.1395", "-0.722677, 1.81779, -0.671536, 17.1456", "-0.905894, 3.04547, -1.17197, 17.1167", "-1.08911, 4.27315, -1.67241, 16.9505", "-1.27233, 5.50083, -2.17284, 16.6868", "-1.45554, 6.72851, -2.67328, 16.2042", "-1.63876, 7.9562, -3.17371, 15.3999", "-1.82198, 9.18388, -3.67415, 12.8578", "-2.00519, 10.4116, -4.17458, 8.89972", "-2.18841, 11.6392, -4.67502, 6.31689", "-2.37163, 12.8669, -5.17545, 3.58193" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-0.157219, 9.00178, -10.0838, 1.68", "1.37171, 10.1057, -10.0838, 1.68", "3.37397, 11.5514, -10.0838, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-6.15722, 10.4252, -7.69378, 1.44", "-6.86025, 10.4169, -7.90842, 1.44", "-8.23684, 10.3616, -8.5509, 1.44", "-10.249, 10.2697, -9.54676, 1.44", "-11.7369, 10.2217, -10.2647, 1.44", "-13.437, 10.1762, -11.1285, 1.44", "-16.5003, 10.0952, -12.6942, 1.08", "-19.4258, 9.99564, -14.2288, 1.08", "-21.4305, 9.90844, -15.3065, 1.08", "-23.6867, 9.78944, -16.534, 1.08", "-26.101, 9.64704, -17.8098, 0.96", "-27.2967, 9.57314, -18.4085, 0.96", "-28.6746, 9.48564, -18.9864, 1.44", "-29.4677, 9.42324, -19.2764, 1.44", "-30.093, 9.37024, -19.5253, 0.84", "-31.068, 9.28654, -19.9116, 0.72", "-33.2368, 9.12256, -20.7172, 1.32", "-34.576, 9.02368, -21.2131, 1.32", "-36.7432, 8.89717, -22.0814, 0.72", "-39.0123, 8.8161, -23.0419, 0.72", "-40.8088, 8.78414, -23.8279, 0.72", "-42.708, 8.78142, -24.6596, 1.08", "-45.0256, 8.77348, -25.6721, 0.6", "-47.1013, 8.73884, -26.6057, 0.6", "-49.0745, 8.68615, -27.5529, 0.6", "-50.331, 8.66289, -28.1502, 0.6", "-51.7397, 8.68366, -28.894, 0.6", "-52.6256, 8.7332, -29.3891, 0.6", "-53.5989, 8.85607, -29.9305, 1.2", "-55.1063, 9.15811, -30.6788, 1.2", "-56.554, 9.65844, -31.3406, 0.6", "-58.1154, 10.4222, -32.0417, 0.96", "-58.8277, 10.9093, -32.3445, 0.48", "-60.2402, 12.0781, -32.8846, 0.24", "-61.1914, 13.0072, -33.2063, 1.2", "-62.5866, 14.5662, -33.7556, 0.84", "-63.4427, 15.6314, -34.1561, 0.48", "-65.1609, 17.8324, -35.102, 0.36", "-65.7641, 18.5789, -35.4804, 1.44", "-66.6095, 19.5625, -36.0631, 0.72", "-68.5793, 21.6332, -37.5068, 0.48", "-69.532, 22.5168, -38.2105, 0.12", "-70.6918, 23.4763, -39.0611, 0.12", "-72.352, 24.6751, -40.3714, 0.12", "-72.8156, 24.9856, -40.7376, 0.6", "-73.8106, 25.6029, -41.5421, 0.84", "-74.5585, 26.055, -42.1257, 0.12", "-75.3376, 26.5223, -42.8686, 0.12", "-76.2158, 27.0789, -43.791, 0.84", "-76.6122, 27.3407, -44.2447, 1.2", "-77.7637, 28.0744, -45.5488, 0.84", "-78.6507, 28.6225, -46.5005, 0.84", "-80.2632, 29.5675, -48.0578, 0.48", "-81.0838, 30.0204, -48.7351, 0.24", "-81.7976, 30.3979, -49.2456, 0.84", "-82.8399, 30.9284, -49.9282, 0.6", "-83.5447, 31.2775, -50.3093, 0.12", "-84.6606, 31.8598, -50.926, 0.12", "-85.0855, 32.0928, -51.1579, 0.72", "-85.4676, 32.3053, -51.3861, 0.72", "-86.6434, 32.9767, -52.0814, 0.12", "-87.2965, 33.3665, -52.4541, 0.12", "-88.5202, 34.0962, -53.1247, 1.2", "-89.3165, 34.6025, -53.5786, 0.84", "-89.6923, 34.847, -53.776, 0.12", "-90.9001, 35.6159, -54.3187, 0.12", "-91.1272, 35.7638, -54.4061, 1.08", "-92.3139, 36.5452, -54.9168, 0.36", "-93.6222, 37.4052, -55.5737, 0.36", "-94.6098, 38.0625, -56.1407, 0.36", "-95.7595, 38.8121, -56.8383, 0.84", "-96.8108, 39.4595, -57.5282, 0.36", "-98.2728, 40.3083, -58.5115, 0.24", "-99.598, 41.0416, -59.4105, 0.24", "-101.003, 41.8004, -60.3344, 0.6", "-101.691, 42.1745, -60.7957, 0.6", "-103.443, 43.1221, -61.9161, 0.12", "-103.878, 43.3547, -62.1647, 0.6", "-104.824, 43.8898, -62.6037, 0.12", "-105.504, 44.3085, -62.883, 0.12", "-105.83, 44.5338, -63.0192, 0.84", "-106.631, 45.1605, -63.2828, 0.84", "-107.584, 45.9699, -63.5028, 0.12", "-108.152, 46.4623, -63.6148, 0.84", "-108.605, 46.8659, -63.6902, 1.08", "-109.242, 47.4458, -63.7743, 0.36", "-111.251, 49.3556, -63.9983, 0.12", "-111.633, 49.7382, -64.0227, 0.6", "-112.117, 50.2779, -64.0254, 0.6", "-112.537, 50.7786, -64.0212, 0.12", "-113.562, 52.1165, -63.9903, 0.12", "-113.745, 52.3736, -63.9703, 0.72", "-114.313, 53.217, -63.8703, 0.24", "-116.205, 55.9877, -63.4991, 0.12", "-116.572, 56.5165, -63.4253, 0.84", "-117.021, 57.1484, -63.3369, 0.24", "-118.466, 59.1591, -63.057, 0.24", "-118.911, 59.7743, -62.9782, 0.72", "-119.613, 60.7366, -62.8692, 0.12", "-120.93, 62.556, -62.6756, 0.12", "-121.548, 63.4395, -62.5862, 0.96", "-121.908, 63.9485, -62.544, 0.12", "-122.819, 65.2496, -62.4754, 0.12", "-123.208, 65.728, -62.4566, 0.72", "-123.917, 66.5266, -62.4318, 0.12", "-125.039, 67.6981, -62.4078, 0.12", "-125.833, 68.4759, -62.4021, 0.96", "-126.749, 69.3399, -62.4051, 0.12", "-130.837, 73.0379, -62.4593, 0.12", "-131.495, 73.6218, -62.4673, 1.32", "-132.154, 74.1893, -62.5088, 0.12", "-133.764, 75.5715, -62.6906, 0.12", "-134.414, 76.1491, -62.7857, 0.12", "-134.928, 76.6313, -62.8843, 0.84", "-135.357, 77.1489, -62.9983, 0.12", "-136.817, 79.1702, -63.4133, 0.12", "-137.057, 79.5621, -63.4862, 0.72", "-137.424, 80.2898, -63.6024, 0.72", "-137.786, 81.1379, -63.6999, 0.12", "-138.713, 83.728, -63.8854, 0.12", "-138.794, 83.9899, -63.8805, 0.48", "-138.909, 84.4491, -63.8154, 0.96", "-139.07, 85.1274, -63.6975, 0.12", "-139.419, 86.7222, -63.3716, 0.12", "-139.475, 86.954, -63.311, 0.72", "-139.784, 88.1123, -62.9496, 0.12", "-140.149, 89.2978, -62.5772, 0.12", "-140.416, 89.9009, -62.3939, 0.6", "-140.597, 90.2274, -62.2984, 0.12", "-141.806, 91.9769, -61.8304, 0.12", "-142.041, 92.2722, -61.7704, 0.84", "-142.664, 92.9519, -61.6865, 0.12", "-144.278, 94.4965, -61.5398, 0.12", "-144.463, 94.6626, -61.5195, 0.6", "-144.995, 95.1311, -61.4553, 0.12", "-145.86, 95.8987, -61.3535, 0.12", "-146.301, 96.3627, -61.2729, 0.6", "-146.586, 96.7433, -61.1932, 0.12", "-147.24, 97.9252, -60.7797, 0.12", "-147.395, 98.2523, -60.6416, 0.36", "-147.602, 98.7889, -60.3892, 0.12", "-147.952, 100.003, -59.8222, 0.12", "-148.086, 100.549, -59.5708, 0.48", "-148.512, 102.363, -58.7825, 0.12", "-148.663, 102.995, -58.5472, 0.48", "-148.813, 103.59, -58.3344, 0.12", "-149.238, 105.193, -57.7842, 0.12", "-149.49, 105.97, -57.5624, 0.48", "-149.731, 106.594, -57.4304, 0.12", "-150.404, 108.049, -57.2728, 0.12", "-150.482, 108.181, -57.269, 0.6", "-150.63, 108.377, -57.2805, 0.12", "-152.122, 109.933, -57.5445, 0.12", "-152.419, 110.178, -57.6144, 0.48", "-153.235, 110.738, -57.8099, 0.12", "-154.538, 111.475, -58.1385, 0.12", "-155.024, 111.736, -58.2635, 0.6", "-155.691, 112.068, -58.44, 0.24", "-157.729, 112.909, -59.001, 0.12", "-158.572, 113.245, -59.2211, 0.48", "-159.487, 113.573, -59.428, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-8.14722, 7.12978, -9.06378, 1.92", "-9.59967, 7.63289, -9.16322, 1.92", "-12.7487, 8.7237, -9.37881, 1.68", "-14.723, 9.40754, -9.51398, 1.68", "-17.3052, 10.302, -9.69076, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.74278, -4.06322, 3.55622, 2.4", "8.17352, -5.70915, 3.55622, 2.4", "8.84772, -8.28543, 3.55622, 2.4", "9.28826, -9.96883, 3.55622, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.17722, 9.29424, 8.44622, 1.44", "-3.63251, 10.9446, 12.1166, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.34278, 8.11453, 5.94622, 1.8", "1.39463, 8.7993, 6.22707, 1.8", "1.36094, 10.0361, 6.66774, 1.56", "1.22452, 11.837, 7.30734, 1.56", "1.00479, 13.9838, 8.12192, 1.44", "0.928478, 14.625, 8.36297, 1.44", "0.740242, 16.2065, 8.95755, 1.32", "0.268212, 19.4229, 10.1912, 1.2", "0.0561082, 20.5919, 10.6425, 1.2", "-0.232457, 21.8729, 11.0988, 1.2", "-0.613286, 23.2844, 11.6027, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.91278, 6.87628, 0.266218, 2.4", "8.64228, 7.87243, 0.266218, 2.4", "11.8312, 9.70914, 0.266218, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.167218, -12.7895, 3.95622, 3.0", "-0.053829, -13.5855, 3.95622, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.37163, 12.8669, -5.17545, 0.849002", "-4.58569, 27.7026, -5.17545, 0.849002", "-6.79974, 42.5383, -5.17545, 0.849002" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "3.37397, 11.5514, -10.0838, 0.96", "2.69598, 12.2795, -12.2495, 0.96", "2.34336, 12.6534, -13.2683, 0.96", "1.42099, 14.1581, -17.0964, 0.96", "0.953804, 15.1222, -19.4004, 1.44", "0.365394, 16.4697, -22.5603, 1.44", "0.0758776, 17.2023, -24.2181, 0.96", "-0.144993, 17.8691, -25.7411, 0.96", "-0.476025, 19.5713, -29.3631, 0.96", "-0.489077, 20.1057, -30.2866, 0.48", "-0.388167, 20.7313, -31.3119, 0.24", "-0.240327, 21.4134, -32.3266, 0.36", "-0.034044, 22.1646, -33.4311, 0.96", "0.133058, 22.5017, -34.1299, 0.96", "0.359035, 22.9728, -35.2203, 0.36", "0.797099, 23.4343, -36.6595, 0.36", "1.10464, 23.7006, -37.5365, 1.08", "1.48492, 24.0077, -38.525, 1.08", "3.6599, 25.7884, -43.9424, 0.36", "4.26332, 26.2925, -45.3422, 1.08", "6.16149, 28.4374, -49.1949, 0.36", "6.6785, 29.1778, -50.1143, 0.36", "7.27564, 30.2129, -51.1034, 1.32", "7.5044, 30.7338, -51.4844, 1.32", "8.01327, 32.6663, -52.4492, 0.36", "9.06893, 38.3162, -54.8758, 0.24", "9.40445, 41.5411, -56.0139, 0.72", "9.42817, 42.4173, -56.318, 0.96", "9.32131, 44.4201, -57.0049, 0.24", "8.93804, 48.0527, -58.3488, 0.12", "8.76478, 48.9973, -58.7186, 0.72", "8.38155, 50.4455, -59.3632, 0.12", "7.26031, 54.2091, -60.9898, 0.12", "6.9672, 55.2693, -61.4775, 0.48", "6.35455, 57.6335, -62.6411, 0.12", "6.26692, 58.0235, -62.8751, 0.12", "6.1035, 59.0155, -63.4805, 1.08", "5.99171, 59.9194, -64.0277, 0.12", "5.85329, 62.2902, -65.4429, 0.12", "5.79187, 63.2723, -65.9761, 0.72", "5.65436, 65.5091, -67.2072, 0.12", "5.55639, 68.4523, -68.9369, 0.12", "5.52595, 69.5792, -69.6045, 0.96", "5.49322, 70.971, -70.4235, 0.12", "5.44101, 72.875, -71.5077, 0.12", "5.40579, 75.0948, -72.7646, 0.84", "5.37783, 75.7559, -73.1228, 0.12", "5.29762, 78.6893, -74.7926, 0.12", "5.28445, 79.1578, -75.0381, 0.96", "5.22776, 80.3263, -75.5881, 0.12", "5.08304, 82.8391, -76.6719, 0.12", "5.03818, 83.9596, -77.1555, 0.84", "5.02574, 85.0021, -77.6422, 0.12", "5.12217, 87.5146, -79.0463, 0.12", "5.14459, 88.4181, -79.5717, 0.96", "5.16294, 89.5196, -80.2203, 0.12", "5.16531, 93.4924, -82.5042, 0.12", "5.16028, 94.6013, -83.1731, 0.72", "5.08534, 97.0685, -84.7178, 0.12", "4.97291, 100.29, -86.9303, 0.12", "4.94521, 100.618, -87.1321, 0.84", "4.77797, 101.768, -87.7553, 0.72", "4.00389, 105.353, -89.3008, 0.12", "3.81056, 106.51, -89.9017, 0.6", "3.45591, 109.21, -91.4568, 0.12", "3.20456, 112.95, -94.0646, 0.12", "3.17939, 113.778, -94.6925, 0.6", "3.15875, 114.942, -95.535, 0.12", "3.14886, 120.909, -99.661, 0.12", "3.16708, 122.539, -100.721, 0.12", "3.2091, 123.305, -101.244, 0.84", "3.28118, 124.099, -101.829, 0.24", "3.56675, 128.633, -104.865, 0.12", "3.56785, 129.084, -105.126, 0.6", "3.47344, 130.308, -105.672, 0.12", "3.18248, 134.202, -107.512, 0.12", "3.01701, 135.819, -108.311, 0.48", "2.8502, 136.781, -108.811, 0.12", "2.58877, 138.118, -109.59, 0.12", "2.40721, 138.916, -110.043, 0.6", "2.18273, 139.819, -110.536, 0.12", "1.73249, 141.686, -111.365, 0.12", "1.24949, 144.141, -112.42, 0.12", "0.903777, 146.414, -113.344, 0.36", "0.781162, 147.538, -113.811, 0.6", "0.570241, 150.22, -114.93, 0.12", "0.374105, 154.471, -116.666, 0.12", "0.352145, 155.678, -117.125, 0.84", "0.351439, 156.543, -117.418, 0.12", "0.277252, 158.984, -118.16, 0.12", "0.269777, 159.602, -118.366, 0.96", "0.260253, 160.472, -118.682, 0.24", "0.21978, 163.202, -119.851, 0.24", "0.186485, 164.084, -120.281, 0.72", "0.140871, 164.783, -120.639, 0.12", "0.036136, 166.918, -121.837, 0.12", "0.0265236, 167.252, -122.04, 0.96", "0.0133183, 168.688, -122.942, 0.12", "0.036104, 170.574, -124.132, 0.12", "0.111421, 171.774, -125.001, 0.24", "0.285801, 174.063, -126.753, 0.12", "0.36337, 175.424, -127.832, 0.12", "0.390857, 176.403, -128.686, 0.72", "0.370752, 177.297, -129.531, 0.12", "0.0277164, 181.373, -133.865, 0.12", "-0.109891, 182.192, -134.843, 0.6", "-0.316113, 182.908, -135.781, 0.12", "-1.04962, 184.811, -138.412, 0.12", "-1.43149, 185.587, -139.51, 0.6", "-2.47181, 187.291, -141.952, 0.12", "-2.87914, 187.863, -142.692, 0.6", "-3.31132, 188.508, -143.501, 0.12", "-4.1448, 189.733, -144.979, 0.12", "-4.50713, 190.158, -145.48, 0.48", "-5.82817, 191.531, -147.128, 0.12", "-6.62135, 192.244, -147.965, 0.12", "-7.22252, 192.752, -148.614, 0.96", "-8.2221, 193.515, -149.602, 0.12", "-10.25, 194.956, -151.492, 0.12", "-10.828, 195.351, -151.991, 0.72", "-11.5522, 195.806, -152.55, 0.12", "-13.4045, 196.937, -153.945, 0.12", "-16.97, 199.151, -156.541, 0.12", "-17.3596, 199.4, -156.812, 0.84", "-18.2675, 199.989, -157.411, 0.12", "-20.3772, 201.321, -158.855, 0.12", "-20.7146, 201.525, -159.095, 0.72", "-22.912, 202.757, -160.678, 0.12", "-24.2397, 203.5, -161.824, 0.12", "-25.1798, 204.038, -162.724, 0.6", "-26.7948, 205.18, -164.972, 0.12", "-27.2425, 205.585, -165.799, 0.12", "-27.5893, 205.934, -166.551, 0.6", "-28.3179, 206.872, -168.76, 0.12", "-28.4799, 207.138, -169.433, 0.48", "-29.2757, 208.943, -174.143, 0.12", "-29.4463, 209.692, -175.962, 0.12" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "3.37397, 11.5514, -10.0838, 1.08", "5.79767, 13.016, -10.4143, 1.08", "8.46815, 14.8676, -10.9838, 1.08", "11.4242, 17.2381, -11.7882, 1.08", "13.2208, 18.8125, -12.3265, 1.08", "15.9397, 21.2451, -13.1721, 0.84", "19.5256, 24.5344, -14.4604, 0.84", "20.4696, 25.5906, -14.9193, 0.84", "21.4543, 26.9189, -15.5445, 1.2", "21.9621, 27.7493, -16.0278, 1.2", "23.0484, 29.9912, -17.4438, 0.48", "23.8374, 31.9868, -18.6953, 0.48", "24.2264, 33.1152, -19.279, 1.32", "24.7109, 34.3572, -19.9086, 1.32", "26.05, 37.4909, -21.4431, 0.6", "26.8032, 39.5369, -22.4319, 0.6", "27.476, 41.8911, -23.4758, 0.48", "27.5894, 42.2715, -23.6153, 0.48", "28.3315, 44.251, -24.2837, 1.2", "28.9745, 45.4969, -24.5573, 1.2" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-17.3052, 10.302, -9.69076, 1.56", "-18.6762, 11.4199, -12.3325, 1.56", "-20.1058, 12.4745, -14.6071, 1.56", "-20.6689, 12.9132, -15.4261, 1.32", "-21.4357, 13.5164, -16.4763, 1.32", "-22.3973, 14.227, -17.7795, 1.32", "-23.5506, 14.9968, -19.2981, 1.32", "-24.7081, 15.5994, -20.5892, 1.08", "-25.825, 16.1012, -21.8235, 1.08", "-26.3688, 16.3162, -22.4853, 1.08", "-27.5537, 16.7414, -24.0012, 1.08", "-28.0814, 16.9269, -24.7759, 1.08", "-29.2055, 17.2967, -26.4581, 1.08", "-30.0154, 17.5525, -27.6923, 1.08", "-30.8266, 17.8183, -28.9555, 1.08", "-31.1315, 17.9395, -29.4311, 1.08", "-32.6127, 18.6239, -31.6635, 1.08", "-33.8907, 19.295, -33.5121, 1.08", "-34.754, 19.7853, -34.7114, 1.08", "-36.4427, 20.7933, -37.031, 1.08", "-37.1099, 21.2268, -37.9385, 1.08", "-37.854, 21.7505, -38.9457, 1.08", "-38.7218, 22.3768, -39.9912, 1.08", "-39.8668, 23.2051, -41.2893, 0.36", "-40.8661, 23.9184, -42.2731, 1.08", "-41.5522, 24.3812, -42.869, 1.08", "-43.5511, 25.6119, -44.501, 0.24", "-44.9359, 26.4055, -45.5887, 0.72", "-46.5308, 27.2258, -46.7458, 0.12", "-48.1261, 27.9669, -47.7922, 0.12", "-49.9583, 28.7036, -48.9253, 0.12", "-51.2935, 29.1738, -49.7219, 0.48", "-51.5944, 29.2629, -49.8861, 1.32", "-52.4707, 29.5081, -50.4107, 1.32", "-53.3901, 29.7649, -50.9836, 1.32", "-55.3702, 30.3333, -52.2643, 0.96", "-55.9459, 30.5341, -52.5899, 0.96", "-57.0235, 30.9326, -53.2253, 0.48", "-58.746, 31.5907, -54.2394, 0.48", "-59.6618, 31.9567, -54.7777, 1.2", "-60.5029, 32.326, -55.292, 0.36", "-62.4634, 33.3097, -56.6316, 0.36", "-64.4185, 34.3608, -58.0968, 0.36", "-64.9105, 34.6508, -58.4929, 1.08", "-65.7007, 35.1724, -59.1366, 0.48", "-67.4112, 36.4452, -60.5993, 0.36", "-68.8286, 37.6786, -61.9782, 0.36", "-69.3343, 38.2058, -62.5226, 1.2", "-69.8788, 38.8802, -63.0963, 1.2", "-70.6413, 39.9463, -63.8952, 1.2", "-71.0494, 40.5482, -64.3395, 0.96", "-71.8981, 41.8245, -65.2266, 0.24", "-72.5163, 42.7287, -65.8502, 0.24", "-72.96, 43.3276, -66.2943, 1.2", "-73.696, 44.2914, -67.0333, 0.12", "-75.2641, 46.3641, -68.6242, 0.12", "-75.5357, 46.7369, -68.8913, 0.12", "-75.8884, 47.2401, -69.2493, 0.84", "-76.5562, 48.1852, -69.9582, 0.12", "-77.2396, 49.0974, -70.6252, 0.12", "-77.8676, 49.8369, -71.2362, 0.12", "-78.144, 50.159, -71.4767, 0.96", "-79.307, 51.3787, -72.4056, 0.12", "-79.9106, 51.9321, -72.8886, 0.12", "-80.8298, 52.6403, -73.57, 1.32", "-82.9687, 54.0645, -75.0585, 0.36", "-84.4037, 55.0158, -76.0699, 0.36", "-85.3644, 55.7044, -76.7765, 1.2", "-86.8209, 56.89, -77.9837, 0.36", "-87.4498, 57.5213, -78.6339, 0.36", "-87.7696, 57.9274, -79.0409, 0.36", "-88.4092, 58.9335, -79.9436, 0.36", "-88.6992, 59.4815, -80.5291, 1.32", "-89.2827, 60.9377, -82.0116, 0.36", "-89.4978, 61.5082, -82.5571, 0.36", "-89.6012, 61.7179, -82.7817, 0.36", "-89.9198, 62.2141, -83.3226, 1.08", "-90.7479, 63.173, -84.3982, 0.24", "-91.5363, 63.9378, -85.2594, 0.24", "-92.347, 64.6775, -86.0813, 1.2", "-93.5209, 65.7048, -87.2981, 0.36", "-94.3093, 66.3898, -88.1301, 0.36", "-95.1043, 67.0766, -88.9752, 1.32", "-95.5135, 67.3974, -89.351, 1.32" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-17.3052, 10.302, -9.69076, 1.08", "-19.6609, 11.2284, -9.96578, 1.08", "-21.2878, 11.8156, -10.1199, 1.08", "-23.8173, 12.7435, -10.3211, 1.08", "-26.246, 13.5864, -10.4839, 1.08", "-34.4344, 16.278, -11.0022, 1.08", "-40.749, 18.3536, -11.4019, 1.08", "-46.1172, 20.115, -11.7488, 1.08", "-51.1135, 21.7247, -12.0675, 1.08", "-54.39, 22.7591, -12.2652, 1.08", "-62.1562, 25.0555, -12.6344, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "9.28826, -9.96883, 3.55622, 1.68", "12.4561, -10.141, 5.93387, 1.68", "16.2417, -10.1049, 8.5842, 0.96", "21.3206, -10.0067, 12.1838, 0.96", "24.1626, -10.0833, 14.2039, 0.96", "29.7043, -10.3067, 18.2889, 0.96", "33.2468, -10.4553, 20.957, 0.96", "35.8557, -10.5487, 22.8101, 0.96", "41.577, -10.7124, 27.0028, 0.84", "45.53, -10.7759, 30.0221, 0.84", "49.034, -10.7547, 32.9102, 0.84", "52.496, -10.6521, 35.7998, 0.84", "56.3494, -10.6375, 38.999, 0.6", "59.9299, -10.6368, 41.826, 0.6", "61.4728, -10.5439, 42.9786, 0.96", "63.3287, -10.3274, 44.3232, 0.48", "65.534, -10.1352, 45.7957, 0.12", "68.6604, -9.94905, 47.8433, 0.24", "72.5393, -9.91375, 50.3539, 0.24", "81.6975, -11.419, 58.1879, 0.24", "91.812, -12.6775, 64.7927, 0.24", "102.98, -11.3625, 69.377, 0.24", "113.667, -11.8797, 75.1274, 0.24", "122.676, -11.502, 83.2639, 0.24", "131.278, -12.5452, 91.7774, 0.24", "140.55, -12.1712, 99.6132, 0.24", "149.776, -9.85577, 107.141, 0.24", "158.361, -5.90761, 114.708, 0.24", "166.277, -4.60963, 123.816, 0.24", "175.936, -5.09976, 131.166, 0.24", "184.689, -7.19975, 139.317, 0.24", "191.195, -8.98862, 149.416, 0.24", "198.386, -11.9814, 158.726, 0.24", "205.654, -13.8498, 168.276, 0.24", "212.189, -17.165, 177.95, 0.24", "217.766, -22.4094, 187.334, 0.24", "222.708, -27.4562, 197.178, 0.24", "228.052, -30.7668, 207.561, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "9.28826, -9.96883, 3.55622, 1.92", "10.7133, -13.3603, 4.64452, 1.92", "12.2803, -17.0893, 5.84118, 1.32", "13.6733, -20.4046, 6.90504, 1.44", "14.5729, -22.5454, 7.59202, 1.44", "15.1817, -23.9943, 8.05697, 1.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-3.63251, 10.9446, 12.1166, 0.96", "-3.76105, 12.316, 13.7516, 0.96", "-4.1946, 13.6188, 15.4243, 0.6", "-4.52618, 14.5172, 16.5923, 0.6", "-4.9818, 15.8237, 18.2945, 0.6", "-5.2344, 16.6879, 19.4895, 0.6", "-5.56543, 17.8216, 21.0254, 0.6", "-6.03023, 18.7243, 22.2583, 0.6", "-6.34024, 19.1989, 22.9011, 0.6", "-6.56382, 19.5618, 23.3418, 0.6", "-7.26178, 21.0396, 24.8255, 0.6", "-7.56957, 22.1021, 25.7899, 0.6", "-7.79561, 23.4068, 26.7708, 0.6", "-7.98901, 24.755, 27.6056, 0.6", "-8.20724, 26.0526, 28.3736, 0.12", "-8.4231, 27.3345, 29.0765, 0.12", "-8.5837, 28.6241, 29.6765, 0.12", "-8.60125, 30.2783, 30.4518, 0.12", "-8.389, 32.2812, 31.298, 0.12", "-11.3149, 37.0581, 35.8579, 0.12" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.63251, 10.9446, 12.1166, 1.08", "-5.07328, 9.67674, 13.053, 1.08", "-7.78972, 7.07798, 14.8227, 0.84", "-10.1311, 4.72083, 16.3001, 0.84", "-12.242, 2.76395, 17.6664, 0.84", "-16.1555, -0.551686, 20.2717, 0.84", "-18.3806, -2.26558, 21.6967, 0.84", "-20.891, -4.09721, 23.1624, 0.84", "-22.1322, -4.9817, 23.8116, 0.84", "-24.8077, -6.87722, 25.1543, 0.84", "-26.3462, -8.10757, 26.0779, 0.84", "-29.1978, -10.7071, 27.9118, 0.84", "-32.701, -13.7064, 29.9171, 0.84", "-35.0892, -15.494, 31.1466, 0.84", "-37.8436, -17.2897, 32.5856, 0.84", "-41.2437, -19.2194, 34.3974, 0.84", "-44.1727, -20.3693, 36.0639, 0.84", "-47.564, -20.7888, 38.2713, 0.24", "-51.4928, -20.1436, 40.9434, 0.36", "-54.7956, -18.8025, 43.2373, 0.12", "-57.1093, -17.2004, 44.9707, 0.12", "-59.3095, -14.9186, 46.6887, 0.12", "-60.4732, -12.9909, 47.9835, 0.12", "-70.6375, -17.4432, 55.732, 0.12", "-80.8137, -22.1058, 63.3335, 0.12", "-89.4316, -28.7759, 71.279, 0.12", "-97.9144, -34.8297, 79.8637, 0.12", "-106.934, -39.4405, 88.8363, 0.12", "-114.913, -46.0835, 97.445, 0.12", "-122.321, -54.5578, 104.779, 0.12", "-131.247, -63.0644, 110.107, 0.12", "-138.869, -73.6957, 112.785, 0.12", "-145.551, -84.8385, 115.771, 0.12", "-153.057, -94.8264, 120.557, 0.12", "-161.018, -104.107, 126.053, 0.12", "-169.521, -112.015, 132.842, 0.12", "-177.481, -121.377, 138.193, 0.12", "-185.755, -131.003, 142.464, 0.12", "-194.634, -139.763, 147.427, 0.12", "-202.614, -147.727, 154.762, 0.12", "-211.311, -155.713, 161.2, 0.12" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.613286, 23.2844, 11.6027, 0.72", "-0.715385, 19.2423, 10.4693, 0.72", "-0.884652, 15.2096, 9.12185, 0.72", "-1.03853, 12.6556, 8.13593, 0.72", "-1.23842, 9.40994, 6.86685, 0.72", "-1.36889, 5.90245, 5.45144, 0.72", "-1.49058, 2.63092, 4.13124, 0.72", "-1.62078, 0.206078, 2.94668, 0.72", "-1.83439, -3.74568, 0.884614, 0.72", "-2.05593, -7.2563, -0.861152, 0.72", "-2.37077, -10.8016, -2.60414, 0.72", "-5.06559, -19.17, -7.67675, 0.72" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.613286, 23.2844, 11.6027, 1.2", "-0.1179, 27.2166, 13.1025, 1.2", "0.282503, 30.9894, 14.3387, 1.08", "0.742517, 35.4722, 15.5941, 1.08", "1.07665, 39.0187, 16.4091, 1.08", "1.24856, 41.2421, 16.8779, 1.08", "1.3508, 43.2854, 17.2941, 0.84", "1.43195, 45.7099, 17.6438, 0.84", "1.43509, 48.4842, 17.9297, 0.84", "1.30352, 52.7083, 18.314, 0.84", "1.13547, 55.7205, 18.6595, 0.84", "0.866715, 58.5987, 19.0286, 0.84", "0.654889, 60.4728, 19.2799, 0.72", "0.272291, 63.581, 19.7217, 0.72", "-0.087857, 66.0376, 20.0858, 0.72", "-0.673203, 69.7093, 20.6306, 0.72", "-1.29437, 73.7314, 21.1389, 0.72", "-1.68087, 76.306, 21.4472, 0.72", "-0.548934, 86.7192, 21.1902, 0.72", "1.50659, 96.9429, 20.0845, 0.72", "5.49081, 106.365, 17.6137, 0.72", "9.45356, 115.9, 15.6033, 0.72", "12.3632, 125.892, 14.2308, 0.72", "16.0993, 135.588, 12.6428, 0.72", "19.7241, 145.357, 11.2796, 0.72", "24.8645, 154.543, 11.6686, 0.72", "30.64, 163.367, 11.9559, 0.72", "35.9351, 172.458, 12.5613, 0.72", "39.5536, 182.309, 13.0093, 0.72", "41.704, 192.504, 11.8078, 0.72", "42.6093, 202.94, 11.9374, 0.72", "44.6547, 213.178, 12.9097, 0.72", "44.7137, 223.483, 14.8402, 0.72", "46.3158, 233.033, 18.948, 0.72", "48.4619, 241.926, 24.2003, 0.72" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.8312, 9.70914, 0.266218, 1.32", "12.065, 11.6866, 0.0592561, 1.32", "12.2955, 15.8773, -0.114781, 1.32", "12.3867, 17.9174, -0.110883, 1.32", "12.4192, 18.8213, -0.0154929, 1.32", "12.4782, 21.2093, 0.372652, 1.32", "12.5532, 24.0016, 0.908766, 1.2", "12.5759, 26.1688, 1.50315, 1.2", "12.5691, 28.9869, 2.44869, 1.2", "12.6475, 32.5442, 3.65116, 1.2", "12.797, 35.0163, 4.47005, 0.96", "13.1206, 38.9862, 5.74582, 0.96", "13.3119, 41.1974, 6.43107, 0.72", "13.7161, 46.3873, 7.95531, 0.72", "13.8889, 48.8912, 8.62166, 1.08", "14.0365, 51.1957, 9.12319, 0.48", "14.1723, 54.1159, 9.73282, 0.12", "14.193, 55.1985, 9.97196, 0.72", "14.1931, 56.0243, 10.1519, 1.08", "14.1711, 57.0243, 10.3981, 0.48", "14.0854, 58.3621, 10.7662, 0.48", "13.8982, 60.5711, 11.4436, 1.08", "13.7995, 63.2488, 12.3477, 0.36", "13.7536, 66.0034, 13.3299, 0.36" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.8312, 9.70914, 0.266218, 1.32", "13.0715, 9.10894, 0.12235, 1.32", "15.869, 7.84513, -0.295266, 1.08", "21.2061, 5.52542, -1.38076, 0.84", "26.3758, 3.42746, -2.5702, 0.6", "29.1068, 2.39118, -3.26387, 0.6", "33.3206, 0.760451, -4.35767, 0.6", "37.9947, -1.05243, -5.69989, 0.6", "43.3281, -3.06102, -7.42263, 0.6", "47.2913, -4.43086, -8.76183, 0.6", "53.913, -6.57323, -10.9912, 0.6", "56.9146, -7.49433, -11.9526, 0.6", "63.4031, -9.37837, -13.8462, 0.6", "69.4745, -11.1396, -15.7487, 0.6", "73.3043, -12.1368, -16.9274, 0.12", "74.46, -12.408, -17.2922, 0.12", "75.6297, -12.6117, -17.7063, 0.36", "75.9112, -12.6446, -17.8143, 0.84", "79.0911, -12.897, -19.078, 0.12", "81.5265, -13.1297, -20.1356, 0.12", "82.7893, -13.2741, -20.7461, 1.2", "86.1327, -13.6795, -22.3713, 0.12", "90.1031, -14.1888, -24.2444, 0.12", "91.1582, -14.328, -24.7231, 0.84", "91.7858, -14.4151, -24.9824, 0.12", "95.6733, -14.9597, -26.6605, 0.12", "95.8116, -14.9763, -26.7249, 0.72", "96.5144, -15.0441, -27.052, 0.12", "99.5756, -15.2254, -28.6171, 0.12", "100.567, -15.2705, -29.1239, 1.56", "103.792, -15.3648, -30.7132, 0.12", "107.99, -15.488, -32.5724, 0.12", "108.62, -15.5031, -32.8359, 0.84", "109.774, -15.5173, -33.2822, 0.84", "110.372, -15.5091, -33.5362, 0.84", "111.381, -15.4674, -34.0035, 0.12", "113.539, -15.3363, -35.0075, 0.12", "114.572, -15.2574, -35.4484, 0.72", "115.521, -15.2188, -35.8375, 0.12", "120.224, -15.1763, -37.6277, 0.12", "121.106, -15.1704, -37.9242, 0.72", "122.6, -15.1773, -38.3216, 0.12", "124.886, -15.3483, -38.9855, 0.12", "127.234, -15.6774, -39.6443, 0.12", "129.41, -16.0991, -40.3101, 0.84", "131.624, -16.6435, -40.9787, 0.12", "135.566, -17.7777, -42.3244, 0.12", "140.791, -19.5811, -44.5507, 0.6", "142.453, -20.2611, -45.4245, 0.12", "146.62, -22.1067, -48.1114, 0.12", "147.915, -22.7133, -49.0654, 0.84", "149.32, -23.4295, -50.2111, 0.12", "152.369, -25.0682, -53.015, 0.12", "154.082, -25.9517, -54.6348, 0.72", "156.559, -27.2829, -57.3104, 0.12", "157.267, -27.6975, -58.2121, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.053829, -13.5855, 3.95622, 0.96", "-1.47212, -14.9727, 6.2218, 0.96", "-2.61576, -16.4988, 8.68754, 0.96", "-3.65791, -18.1589, 11.2388, 0.96", "-4.66117, -19.7541, 13.5598, 0.96", "-4.97796, -20.2083, 14.1729, 1.08", "-6.34217, -21.8354, 16.2484, 1.08", "-7.38811, -23.0504, 17.741, 0.84", "-7.95434, -23.7159, 18.5106, 0.84", "-8.89101, -24.797, 19.7329, 0.84", "-10.4985, -26.5772, 21.5477, 0.84", "-12.1718, -28.6616, 23.6202, 0.84", "-12.6697, -29.461, 24.357, 0.84", "-13.3251, -31.0415, 25.8182, 0.84", "-13.5483, -32.5799, 27.3208, 0.84", "-13.3017, -34.5369, 29.2399, 0.84", "-12.5219, -36.5786, 31.3558, 0.84", "-11.1714, -38.6595, 33.7734, 0.84", "-10.3956, -39.4742, 34.8949, 0.6", "-8.48871, -41.0856, 37.2782, 0.48", "-6.28608, -42.1671, 39.5215, 0.12", "-4.04278, -42.411, 41.4315, 0.12", "-1.93331, -41.8037, 42.7908, 0.12", "-0.507552, -40.9704, 43.5116, 0.12", "-2.10848, -46.653, 50.9661, 0.12", "-5.0753, -51.8175, 58.4013, 0.12", "-7.11547, -56.4994, 66.4565, 0.12", "-9.2021, -60.6426, 74.8047, 0.12", "-12.4958, -62.9407, 83.5055, 0.12", "-16.6736, -65.7504, 91.6524, 0.12", "-21.5358, -67.2666, 99.7797, 0.12", "-26.5504, -68.5095, 107.863, 0.12", "-29.9534, -71.8379, 116.163, 0.12", "-34.2458, -73.4444, 124.587, 0.12", "-37.9464, -73.1888, 133.437, 0.12", "-41.8442, -74.5879, 142.088, 0.12", "-46.6598, -78.1661, 149.538, 0.12", "-51.7259, -81.3806, 156.996, 0.12", "-57.5465, -84.9246, 163.711, 0.12", "-64.8836, -87.455, 169.333, 0.12", "-73.3256, -88.6489, 173.733, 0.12", "-81.3686, -90.2264, 178.716, 0.12", "-90.3802, -89.8344, 181.984, 0.12", "-99.1573, -90.0388, 185.857, 0.12", "-107.567, -89.7942, 190.471, 0.12", "-116.705, -91.0841, 193.092, 0.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.053829, -13.5855, 3.95622, 2.16", "0.328959, -18.5934, 5.02387, 2.16", "0.706626, -23.5344, 6.07723, 2.04", "1.01386, -27.5538, 6.93414, 2.04", "1.19187, -29.8826, 7.43063, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.79974, 42.5383, -5.17545, 0.24", "-9.0138, 57.374, -5.17545, 0.24", "-11.2279, 72.2097, -5.17545, 0.24" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "28.9745, 45.4969, -24.5573, 0.6", "29.9531, 45.9954, -24.9645, 0.6", "31.0891, 46.6286, -25.3923, 0.6", "32.2149, 47.2673, -25.7589, 1.32", "33.294, 47.7893, -26.1803, 0.48", "37.4899, 49.6936, -27.8654, 0.48", "38.8373, 50.2909, -28.4001, 0.48", "40.171, 50.8632, -29.012, 1.08", "41.2403, 51.3305, -29.5526, 0.48", "44.94, 53.0155, -31.575, 0.12", "45.8248, 53.4087, -32.1808, 0.72", "46.4097, 53.6615, -32.625, 0.12", "48.6847, 54.5512, -34.6021, 0.12", "49.4755, 54.8803, -35.3558, 1.2", "50.8481, 55.5559, -36.769, 0.12", "53.5418, 57.0948, -39.6785, 0.12", "54.4032, 57.6343, -40.6657, 1.08", "55.7931, 58.6004, -42.3675, 0.12", "57.3423, 59.7642, -44.3888, 0.12", "58.1249, 60.3704, -45.403, 0.84", "59.9529, 61.8271, -47.6457, 0.12", "60.8886, 62.6194, -48.7013, 0.24", "61.5838, 63.2036, -49.499, 0.72", "63.9815, 65.0811, -52.0737, 0.12", "64.9688, 65.726, -53.0841, 0.72", "65.5192, 66.0394, -53.62, 0.12", "66.455, 66.5036, -54.6052, 0.12", "67.7681, 67.0244, -56.1151, 1.08", "69.4562, 67.6792, -58.1153, 0.12", "70.902, 68.2257, -59.9293, 0.12", "71.1146, 68.3106, -60.201, 1.2", "73.8159, 69.4768, -63.6243, 0.12", "77.1876, 71.0764, -67.7432, 0.12", "77.9171, 71.4393, -68.562, 1.2", "78.9454, 71.9829, -69.5894, 0.12", "80.6806, 72.9816, -71.0447, 0.12", "81.3391, 73.4086, -71.5027, 0.96", "82.2537, 74.1195, -71.9271, 0.12", "83.3724, 75.1506, -72.2816, 0.12", "84.3033, 75.9669, -72.5776, 0.72", "84.9593, 76.5368, -72.8003, 0.12", "86.4098, 77.7435, -73.3373, 0.12", "86.8483, 78.0828, -73.5045, 0.48", "87.6143, 78.6388, -73.8091, 0.12", "90.8877, 80.3868, -75.225, 0.12", "91.9701, 80.7878, -75.7109, 1.44", "93.3076, 81.1018, -76.2936, 0.12", "94.5017, 81.2235, -76.7743, 0.24", "95.3761, 81.2298, -77.1136, 0.72", "99.8006, 80.9105, -78.9837, 0.12", "100.706, 80.7745, -79.3761, 0.96", "101.451, 80.6752, -79.7217, 0.84", "102.257, 80.5879, -80.1634, 0.24", "102.971, 80.575, -80.5878, 0.24", "105.465, 80.9753, -82.3394, 0.12", "105.951, 81.188, -82.7591, 0.84", "107.745, 82.1992, -84.5344, 0.12", "108.567, 82.7577, -85.4318, 0.12", "109.211, 83.2859, -86.1825, 0.6", "110.675, 84.6689, -87.9601, 0.12", "111.787, 85.9217, -89.2707, 0.84", "112.464, 86.7823, -90.0576, 0.12", "112.87, 87.406, -90.5151, 0.24", "113.304, 88.1117, -90.9173, 0.72", "114.062, 89.2796, -91.3729, 0.12", "114.995, 90.6215, -91.6701, 0.12", "115.244, 90.9505, -91.7093, 0.72", "116.006, 91.8463, -91.7874, 0.48", "117.667, 93.5865, -91.8992, 0.12", "120.785, 96.5281, -91.9834, 0.12", "121.606, 97.2218, -91.9701, 1.2", "122.977, 98.3322, -91.966, 0.12", "124.711, 99.744, -91.9696, 0.12", "126.019, 100.809, -91.9681, 0.12", "127.092, 101.733, -91.9808, 0.84", "128.295, 102.848, -91.9991, 0.24", "132.51, 107.237, -92.1033, 0.24", "133.204, 108.074, -92.149, 0.84", "133.811, 108.952, -92.1816, 0.12", "134.867, 110.76, -92.2437, 0.12", "135.118, 111.282, -92.2586, 0.48", "135.675, 112.73, -92.2894, 0.12", "137.295, 117.885, -92.2986, 0.12", "137.993, 120.304, -92.3452, 0.84", "138.497, 122.176, -92.4039, 0.12", "139.129, 124.661, -92.5047, 0.12", "139.419, 125.898, -92.564, 0.72", "139.645, 127.0, -92.6233, 0.12", "139.896, 128.918, -92.7495, 0.12", "139.99, 129.469, -92.8142, 0.72", "140.212, 130.711, -92.9673, 0.12", "140.446, 131.727, -93.1287, 0.12", "140.801, 133.038, -93.3604, 0.36", "141.194, 134.315, -93.5907, 0.12", "141.285, 134.548, -93.6282, 0.6", "141.793, 135.707, -93.825, 0.12", "142.728, 137.599, -94.1386, 0.12", "143.094, 138.304, -94.3144, 1.2", "143.663, 139.404, -94.6375, 0.12", "145.473, 142.909, -95.7296, 0.12", "145.869, 143.724, -95.9903, 0.84", "146.298, 144.651, -96.2875, 0.12", "147.81, 148.066, -97.5584, 0.12", "148.378, 149.487, -98.1966, 0.48", "148.607, 150.164, -98.553, 0.12", "148.784, 150.839, -98.9524, 0.12", "148.9, 151.45, -99.3219, 0.6", "149.159, 153.865, -100.792, 0.12", "149.216, 155.261, -101.573, 0.12", "149.203, 156.06, -101.999, 0.84", "149.137, 157.403, -102.647, 0.12", "148.999, 159.923, -103.696, 0.12", "148.968, 160.53, -103.9, 0.96", "148.936, 161.508, -104.173, 0.12", "148.989, 164.121, -104.926, 0.12", "149.038, 164.952, -105.128, 1.08", "149.151, 166.11, -105.338, 0.36", "149.283, 167.14, -105.441, 0.36", "149.509, 168.934, -105.577, 0.72", "149.602, 169.8, -105.63, 0.12", "149.744, 171.545, -105.708, 0.12", "149.774, 172.473, -105.808, 0.48", "149.764, 173.267, -105.928, 0.12", "149.67, 175.501, -106.322, 0.12", "149.657, 176.063, -106.45, 0.84", "149.65, 177.461, -106.917, 0.12", "149.696, 180.016, -107.996, 0.12", "149.718, 180.753, -108.334, 0.96", "149.765, 181.597, -108.747, 0.24", "149.922, 183.846, -109.918, 0.12", "149.957, 184.665, -110.427, 0.72", "149.969, 185.336, -110.905, 0.12", "149.914, 186.324, -111.672, 0.12", "149.874, 186.53, -111.848, 0.96", "149.681, 187.134, -112.518, 0.12", "148.767, 189.054, -114.994, 0.12", "148.621, 189.321, -115.35, 0.96", "148.292, 189.85, -116.031, 0.12", "147.597, 190.875, -117.259, 0.12", "146.087, 192.955, -119.165, 1.2", "145.543, 193.674, -119.671, 0.12", "144.716, 194.832, -120.352, 0.12", "143.896, 196.132, -121.069, 0.84", "143.468, 196.907, -121.457, 0.12", "141.995, 200.03, -122.787, 0.12", "141.6, 200.974, -123.106, 0.84", "140.918, 203.084, -123.858, 0.12", "140.564, 204.614, -124.449, 0.12", "140.538, 204.841, -124.541, 0.48", "140.526, 205.56, -124.792, 0.12", "140.713, 206.927, -125.185, 0.12", "140.779, 207.37, -125.276, 0.48", "140.822, 207.869, -125.306, 0.12", "140.872, 209.292, -125.414, 0.12", "140.887, 210.214, -125.489, 0.6" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "28.9745, 45.4969, -24.5573, 0.48", "29.6297, 44.1986, -24.6654, 0.48", "30.3492, 42.7727, -24.7841, 0.12", "31.1577, 41.1706, -24.9175, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-95.5135, 67.3974, -89.351, 0.36", "-91.5703, 68.1182, -92.6929, 0.36", "-90.0853, 68.3121, -93.8975, 0.12", "-89.1422, 68.3829, -94.6949, 0.84", "-86.5192, 68.4815, -96.8528, 0.12", "-85.6207, 68.4981, -97.7038, 0.12", "-84.9071, 68.4912, -98.407, 0.12", "-84.4039, 68.4231, -98.9261, 0.6", "-83.1877, 68.1442, -100.749, 0.6", "-82.2358, 67.8428, -102.467, 0.6", "-80.6195, 67.0562, -106.064, 0.12", "-80.233, 66.8494, -106.955, 0.12", "-79.705, 66.5864, -108.084, 0.84", "-77.0792, 65.2539, -113.81, 0.12", "-76.7339, 65.0632, -114.577, 0.6", "-74.9876, 63.9931, -118.623, 0.36", "-72.9526, 62.7457, -123.028, 0.36", "-71.9608, 62.1836, -125.152, 0.36" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-95.5135, 67.3974, -89.351, 0.48", "-97.5525, 67.6898, -90.608, 0.48", "-100.039, 68.0907, -92.0853, 0.48", "-101.171, 68.2697, -92.7184, 1.2", "-103.018, 68.5881, -93.6456, 0.24", "-104.085, 68.808, -94.1396, 0.24", "-106.353, 69.3154, -95.1125, 0.24", "-107.013, 69.5237, -95.3823, 0.96", "-107.86, 69.8268, -95.6783, 0.36", "-109.573, 70.5485, -96.2686, 0.36", "-110.835, 71.2644, -96.7403, 0.84", "-111.485, 71.7161, -97.0062, 0.24", "-113.921, 73.7634, -98.1487, 0.24", "-114.076, 73.9175, -98.2447, 0.72", "-114.762, 74.7223, -98.7585, 0.72", "-116.627, 77.3194, -100.393, 0.24", "-117.024, 77.9335, -100.762, 1.44", "-117.969, 79.5678, -101.674, 1.44", "-119.163, 81.8279, -102.798, 0.48", "-119.62, 82.695, -103.194, 0.96", "-120.273, 83.7591, -103.776, 0.36", "-120.894, 84.525, -104.218, 0.36", "-121.477, 85.0002, -104.605, 0.36", "-122.285, 85.4365, -105.173, 0.6", "-123.204, 85.7428, -105.827, 0.24", "-126.926, 86.4261, -108.325, 0.24", "-128.564, 86.5742, -109.371, 1.32", "-131.676, 86.6409, -111.221, 0.84", "-133.663, 86.6447, -112.316, 0.12", "-134.895, 86.6666, -112.937, 0.24", "-138.251, 86.9082, -114.388, 0.24", "-139.159, 87.0583, -114.687, 1.08", "-140.83, 87.5118, -115.186, 0.36", "-143.624, 88.5837, -115.752, 0.36", "-145.202, 89.3097, -116.016, 1.32", "-146.987, 90.2691, -116.466, 0.36", "-147.997, 90.901, -116.868, 0.6", "-148.987, 91.4997, -117.358, 0.6", "-149.448, 91.7776, -117.613, 0.6", "-150.528, 92.325, -118.28, 0.36", "-153.103, 93.3468, -119.954, 0.36", "-154.569, 93.8508, -121.119, 0.36", "-155.553, 94.1801, -121.948, 0.96", "-157.77, 95.0267, -123.798, 0.96", "-159.384, 95.7772, -125.225, 0.36", "-160.108, 96.1825, -125.867, 0.36", "-162.97, 98.0926, -128.31, 0.96", "-163.743, 98.6378, -128.997, 0.24", "-165.137, 99.619, -130.386, 0.12", "-166.731, 100.671, -132.084, 0.6", "-167.422, 101.136, -132.782, 0.6", "-168.231, 101.707, -133.566, 0.24", "-168.406, 101.818, -133.696, 0.48", "-169.908, 102.616, -134.923, 0.36", "-170.36, 102.744, -135.305, 1.2", "-170.78, 102.771, -135.542, 1.2" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-62.1562, 25.0555, -12.6344, 0.6", "-67.2955, 26.3776, -14.7928, 0.6", "-69.539, 26.9636, -15.63, 0.6", "-71.3718, 27.4615, -16.2205, 0.6", "-77.3061, 29.1345, -17.9483, 0.6", "-80.3223, 30.021, -18.7486, 0.6", "-83.272, 30.8851, -19.5276, 1.56", "-84.5591, 31.2452, -19.784, 0.36", "-87.5616, 32.0781, -20.3753, 0.36", "-88.5732, 32.3603, -20.6004, 0.72", "-89.9105, 32.7557, -20.9461, 0.96", "-93.3051, 33.7593, -22.1091, 0.12", "-95.2272, 34.3417, -22.8277, 0.12", "-96.1114, 34.6159, -23.1481, 0.48", "-98.7501, 35.4771, -24.0592, 0.36", "-102.127, 36.6111, -25.1057, 0.12", "-105.642, 37.8359, -26.0347, 1.2", "-108.676, 38.9632, -26.6443, 0.36", "-111.605, 40.0789, -27.0996, 0.12", "-113.178, 40.6405, -27.2611, 0.84", "-114.703, 41.15, -27.3077, 0.12", "-116.957, 41.8535, -27.3031, 0.12", "-118.729, 42.3947, -27.3928, 1.2", "-120.787, 42.9737, -27.5958, 0.36", "-123.129, 43.5892, -27.8975, 0.36", "-126.871, 44.4909, -28.4433, 0.36", "-128.448, 44.877, -28.6831, 1.08", "-131.951, 45.7463, -29.227, 0.12", "-137.221, 47.0874, -30.0447, 0.24", "-138.627, 47.4962, -30.2398, 1.56", "-141.143, 48.3428, -30.5625, 0.36", "-143.588, 49.2453, -30.8322, 0.36", "-144.943, 49.8366, -30.927, 0.72", "-146.111, 50.4173, -30.9877, 0.12", "-150.003, 52.6856, -31.443, 0.36", "-151.994, 53.8849, -31.7799, 0.96", "-153.554, 54.8042, -32.1213, 0.24", "-156.771, 56.5046, -32.9731, 0.24", "-159.313, 57.679, -33.7358, 0.72", "-161.545, 58.4447, -34.4731, 0.12", "-163.156, 58.7251, -35.0555, 0.12", "-164.844, 58.767, -35.6237, 0.6", "-166.352, 58.4683, -36.0761, 0.6", "-167.211, 58.1616, -36.3333, 0.12", "-169.658, 57.1209, -36.983, 0.12", "-170.715, 56.6584, -37.2745, 0.6", "-172.535, 55.9357, -37.8137, 0.12", "-177.463, 54.2964, -39.2961, 0.12", "-179.861, 53.6794, -40.0055, 0.84", "-181.235, 53.4738, -40.3881, 0.12", "-183.993, 53.4052, -41.1002, 0.12", "-186.325, 53.7028, -41.6174, 0.12", "-187.913, 54.3187, -41.9255, 0.84", "-189.303, 55.2453, -42.1297, 0.36", "-191.94, 57.3696, -42.387, 0.12", "-192.508, 57.8839, -42.4302, 0.72", "-193.738, 59.0603, -42.4927, 0.12", "-196.467, 61.6194, -42.6653, 0.12", "-197.878, 62.8608, -42.7917, 0.96", "-199.151, 63.8063, -42.9252, 0.12", "-201.86, 65.515, -43.37, 0.12", "-203.301, 66.3247, -43.6459, 0.84", "-204.948, 67.1438, -43.9676, 0.12", "-207.086, 68.1375, -44.4737, 0.12", "-210.496, 69.7345, -45.452, 0.12", "-213.172, 70.9944, -46.2564, 0.84", "-214.139, 71.4545, -46.6015, 0.36", "-216.482, 72.5953, -47.4799, 0.12", "-219.248, 73.8788, -48.5609, 0.96", "-221.359, 74.8051, -49.3842, 0.12", "-225.235, 76.408, -50.8778, 0.12", "-228.282, 77.5336, -51.96, 1.08", "-230.225, 78.1776, -52.6417, 0.12", "-235.089, 79.54, -54.2833, 0.12", "-236.358, 79.8074, -54.6418, 0.96", "-237.661, 80.0049, -54.9918, 0.12", "-238.573, 80.083, -55.2016, 0.12", "-239.659, 80.128, -55.3631, 0.72", "-241.086, 80.1956, -55.701, 0.12", "-244.065, 80.4083, -56.5159, 0.12", "-245.355, 80.5596, -56.924, 0.12", "-247.11, 80.8413, -57.5033, 0.96", "-248.504, 81.122, -58.0341, 0.12", "-253.555, 82.3493, -60.1323, 0.12", "-255.108, 82.8132, -60.8712, 0.84", "-256.431, 83.2866, -61.5446, 0.12", "-258.734, 84.163, -62.705, 0.12", "-261.019, 85.102, -63.7539, 1.2", "-262.108, 85.5664, -64.1882, 0.24", "-266.6, 87.412, -65.5535, 0.12", "-267.865, 87.9144, -65.9347, 0.84", "-268.93, 88.3498, -66.3096, 0.12", "-271.587, 89.4506, -67.2573, 0.12", "-272.275, 89.7369, -67.4874, 0.12", "-273.964, 90.4407, -68.0373, 0.96", "-275.875, 91.2273, -68.6234, 0.12", "-283.283, 94.1248, -70.9204, 0.12", "-285.496, 94.9472, -71.6622, 1.08", "-286.347, 95.2257, -71.9564, 0.24", "-288.705, 95.9193, -72.748, 0.12", "-289.706, 96.18, -73.0708, 1.08", "-291.593, 96.5708, -73.6122, 0.12", "-297.4, 97.2661, -74.9635, 0.12", "-299.928, 97.5149, -75.6047, 0.12", "-301.48, 97.6339, -76.0226, 0.6", "-302.414, 97.6862, -76.2933, 0.12", "-304.253, 97.7847, -76.8378, 0.12", "-305.481, 97.8218, -77.1917, 0.96" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-62.1562, 25.0555, -12.6344, 0.12", "-65.9727, 27.5131, -11.6768, 0.12", "-67.7784, 28.5684, -11.1476, 0.6", "-70.2293, 29.9312, -10.3956, 0.12", "-73.3587, 31.6045, -9.23786, 0.12", "-75.0291, 32.4613, -8.57519, 0.96", "-76.1576, 33.0244, -8.11634, 0.12", "-78.7973, 34.1871, -6.92525, 0.12", "-79.9462, 34.6195, -6.43443, 0.84", "-82.6235, 35.4973, -5.37559, 0.12", "-84.0604, 35.9054, -4.85269, 0.12", "-85.118, 36.1662, -4.49337, 1.44", "-86.8343, 36.5457, -3.98385, 0.12", "-89.9061, 37.1736, -3.28753, 0.12", "-90.3514, 37.2507, -3.21218, 0.84", "-92.138, 37.5344, -3.02509, 0.12", "-94.4348, 37.8924, -2.78484, 0.12", "-94.9406, 37.9712, -2.69638, 1.08", "-95.9328, 38.1543, -2.45956, 0.12", "-98.6486, 38.7799, -1.68175, 0.12", "-98.9091, 38.8504, -1.60421, 1.2", "-100.121, 39.2403, -1.25075, 1.2", "-103.067, 40.3366, -0.285996, 0.12", "-104.434, 40.9019, 0.166686, 0.12", "-105.384, 41.3471, 0.486221, 0.6", "-105.772, 41.5424, 0.612801, 0.12", "-107.034, 42.2018, 0.95304, 0.12", "-108.125, 42.8107, 1.15435, 0.6", "-109.269, 43.4227, 1.30196, 0.12", "-110.162, 43.832, 1.45636, 0.6", "-110.653, 43.9991, 1.53779, 0.12", "-111.605, 44.2376, 1.68541, 0.12", "-112.895, 44.4396, 1.8694, 0.96", "-115.675, 44.4148, 2.12407, 0.48", "-118.167, 44.0754, 2.24493, 0.12", "-121.107, 43.3886, 2.16761, 0.12", "-121.963, 43.1042, 2.08318, 0.72", "-123.031, 42.6097, 1.88911, 0.12", "-126.427, 40.5776, 0.980539, 0.12", "-127.264, 39.9716, 0.676589, 1.08", "-128.646, 38.8122, 0.116049, 0.12", "-130.134, 37.5074, -0.509259, 0.12", "-131.892, 36.0001, -1.23016, 0.12", "-132.886, 35.1572, -1.6205, 0.96", "-133.643, 34.5167, -1.89781, 0.12", "-134.693, 33.6227, -2.2332, 0.12", "-135.68, 32.7798, -2.47721, 0.72", "-135.87, 32.6239, -2.53957, 0.12", "-137.384, 31.4706, -3.06578, 0.12", "-137.903, 31.0885, -3.25647, 0.6", "-138.496, 30.6395, -3.48154, 0.6", "-138.707, 30.4761, -3.56289, 0.12", "-140.374, 29.1717, -4.18857, 0.12", "-141.918, 27.9955, -4.75886, 0.84", "-142.398, 27.6373, -4.93319, 0.12", "-143.787, 26.6035, -5.40564, 0.12", "-144.28, 26.2501, -5.5484, 0.96", "-144.915, 25.7696, -5.68346, 0.96" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "15.1817, -23.9943, 8.05697, 1.08", "15.913, -25.9702, 8.11253, 1.08", "16.5953, -27.8302, 8.14052, 0.96", "17.4381, -30.131, 8.14023, 0.96", "18.0263, -31.8804, 8.1003, 0.96", "18.6077, -33.7279, 8.02942, 0.96", "18.9505, -34.8532, 8.03318, 0.96", "19.4958, -36.6847, 8.15259, 1.56", "19.9828, -38.397, 8.32508, 1.08", "20.8203, -41.4198, 8.68136, 0.96", "21.2746, -42.9591, 8.91127, 0.96", "22.1392, -45.492, 9.37746, 0.96", "23.1856, -48.3175, 10.0684, 1.32", "23.8417, -50.0435, 10.5664, 0.96", "24.4974, -51.7375, 11.154, 0.72", "25.3142, -53.7438, 11.9462, 0.84", "26.0671, -55.7325, 12.6683, 0.6", "26.8795, -58.1295, 13.4012, 0.6", "27.158, -58.9879, 13.6549, 1.32", "27.6394, -60.4601, 14.0523, 0.96", "27.8249, -61.0213, 14.1679, 0.96", "28.9586, -64.22, 14.6236, 0.84", "29.39, -65.2739, 14.7608, 0.72", "30.1649, -67.0314, 14.9059, 0.72", "31.351, -69.5732, 15.0835, 1.08", "32.5704, -71.916, 15.2116, 1.08", "33.5196, -73.6351, 15.3537, 0.72", "34.67, -75.6761, 15.5587, 0.72", "36.9017, -79.7966, 15.9599, 0.84", "38.0872, -82.1121, 16.1796, 0.84", "39.8363, -85.5285, 16.4879, 0.84", "40.7613, -87.2834, 16.6221, 0.6", "41.4247, -88.5314, 16.7209, 0.6", "42.3144, -90.1306, 16.854, 0.6", "43.5384, -92.1714, 17.09, 0.96", "45.017, -94.7883, 17.3378, 0.96", "46.1521, -97.0304, 17.4438, 0.96", "47.0879, -98.95, 17.4704, 0.72", "47.8657, -100.645, 17.4679, 0.96", "48.4297, -102.019, 17.4402, 0.96", "50.336, -107.321, 17.2223, 0.72", "51.983, -112.687, 16.8698, 0.72", "52.3466, -114.067, 16.7414, 0.72", "52.9703, -116.675, 16.4251, 0.36", "53.3077, -118.27, 16.2547, 0.12", "53.5911, -119.611, 16.1399, 0.84", "53.9273, -121.095, 16.0673, 0.48", "54.6616, -123.592, 16.0757, 0.12", "55.1632, -124.913, 16.1328, 0.72", "55.903, -126.461, 16.2667, 0.12", "56.502, -127.57, 16.3891, 0.12", "57.3116, -129.006, 16.5527, 0.48", "57.972, -130.123, 16.673, 0.24", "58.6135, -131.145, 16.7791, 0.12", "58.9021, -131.644, 16.8002, 0.96", "59.246, -132.3, 16.757, 0.12", "59.7609, -133.546, 16.648, 0.12", "60.0272, -134.347, 16.5652, 0.72", "61.8005, -141.561, 15.2881, 0.72", "62.3689, -148.66, 12.8165, 0.72", "63.9905, -155.171, 9.34056, 0.72", "65.2869, -161.866, 6.0999, 0.72" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "15.1817, -23.9943, 8.05697, 0.84", "16.4341, -27.3371, 10.6849, 0.84", "16.9043, -28.9648, 11.9162, 0.84", "17.3187, -31.3646, 13.6156, 0.84", "17.4969, -32.944, 14.6915, 1.08", "17.5815, -34.5287, 15.7786, 0.72", "17.6238, -35.591, 16.4512, 0.72", "17.5914, -38.3309, 17.9206, 0.72", "17.699, -40.5006, 18.9334, 0.96", "17.8838, -42.1037, 19.6269, 0.96", "18.5224, -45.4951, 21.0245, 0.84", "19.3724, -48.8281, 22.3624, 0.72", "19.7752, -50.059, 22.8117, 0.72", "21.3848, -53.8369, 23.9476, 0.72", "22.5478, -56.0753, 24.5267, 0.72", "23.0694, -56.9389, 24.703, 1.2", "23.73, -57.7894, 24.8609, 0.48", "25.227, -59.4023, 25.2259, 0.48", "26.7554, -60.9975, 25.6025, 0.48", "28.0082, -62.3917, 25.9062, 0.48", "28.9629, -63.4739, 26.101, 0.48", "31.4568, -66.1821, 26.6376, 0.48", "32.1446, -66.877, 26.7933, 0.48", "33.6082, -68.2375, 27.1513, 0.12", "35.1954, -69.8248, 27.6378, 0.12", "35.5322, -70.2539, 27.7681, 0.12", "39.0405, -77.2219, 29.5206, 0.12", "42.7571, -84.2162, 30.6127, 0.12", "46.5423, -91.0252, 32.4449, 0.12", "49.8271, -98.2549, 33.2759, 0.12", "53.4953, -105.354, 33.1686, 0.12", "56.2276, -112.844, 33.1797, 0.12", "58.023, -120.503, 31.9399, 0.12", "61.569, -127.512, 30.4419, 0.12", "64.0504, -134.92, 28.8266, 0.12", "67.3462, -141.881, 26.6657, 0.12", "70.0793, -149.214, 25.0977, 0.12", "73.6387, -156.365, 24.9579, 0.12", "77.6256, -163.283, 24.447, 0.12", "82.1396, -169.838, 25.3897, 0.12" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-11.3149, 37.0581, 35.8579, 0.12", "-13.1294, 43.7948, 41.9649, 0.12", "-13.6696, 49.501, 49.3132, 0.12", "-14.0322, 54.7759, 57.0038, 0.12", "-12.7502, 59.1082, 65.2066, 0.12", "-11.1331, 61.8838, 74.0272, 0.12", "-8.53879, 66.5306, 81.7342, 0.12", "-6.4257, 71.255, 89.5356, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-11.3149, 37.0581, 35.8579, 0.24", "-14.2929, 45.3524, 43.4402, 0.12", "-17.5582, 54.3324, 50.0077, 0.12", "-21.7616, 63.7552, 55.2159, 0.12", "-27.5153, 72.6097, 59.8973, 0.12", "-32.4507, 82.5018, 63.1354, 0.12", "-37.5028, 91.2973, 68.6975, 0.12", "-41.2733, 99.1299, 76.4224, 0.12", "-46.4171, 104.82, 85.2276, 0.12", "-52.5174, 108.673, 94.4552, 0.12", "-57.6885, 114.201, 103.353, 0.12", "-63.2028, 120.705, 111.287, 0.12", "-68.8221, 127.883, 118.495, 0.12", "-75.5614, 135.901, 123.403, 0.12", "-84.4859, 141.764, 127.962, 0.12", "-94.0972, 147.317, 131.358, 0.12", "-104.505, 151.716, 134.134, 0.12", "-114.731, 156.443, 137.011, 0.12", "-124.668, 161.001, 141.001, 0.12", "-134.439, 166.388, 144.216, 0.12", "-144.008, 169.719, 150.034, 0.12", "-153.177, 174.412, 155.47, 0.12", "-161.624, 180.772, 160.245, 0.12", "-171.077, 186.837, 163.108, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-211.311, -155.713, 161.2, 0.12", "-219.283, -162.031, 166.844, 0.12", "-227.591, -166.436, 173.771, 0.12", "-236.641, -171.717, 178.882, 0.12", "-246.407, -175.391, 184.153, 0.12", "-255.66, -177.39, 191.053, 0.12", "-264.039, -180.361, 198.665, 0.12", "-272.507, -181.63, 206.668, 0.12", "-282.043, -180.999, 213.457, 0.12", "-290.417, -178.826, 221.353, 0.12", "-298.677, -174.367, 228.305, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-211.311, -155.713, 161.2, 0.24", "-217.784, -160.726, 165.64, 0.12", "-223.055, -166.512, 170.664, 0.12", "-227.419, -173.021, 175.637, 0.12", "-230.071, -179.984, 181.169, 0.12", "-231.928, -187.434, 186.356, 0.12", "-232.616, -195.15, 191.432, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.06559, -19.17, -7.67675, 0.12", "-5.85044, -26.7535, -11.371, 0.12", "-6.06031, -33.2886, -16.823, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.06559, -19.17, -7.67675, 0.12", "-5.74367, -25.8458, -11.057, 0.12", "-5.03603, -32.828, -13.6848, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.7536, 66.0034, 13.3299, 0.96", "13.924, 69.2018, 13.4521, 0.96", "14.0525, 71.3204, 13.6106, 0.24", "14.1432, 72.6423, 13.7347, 0.12", "14.2238, 73.9445, 13.8727, 1.32", "14.318, 75.8664, 14.0871, 0.12", "14.351, 76.987, 14.2339, 0.12", "14.3703, 78.4903, 14.5177, 0.6", "14.3502, 79.596, 14.7248, 0.12", "14.253, 81.3227, 15.0298, 0.12", "14.1275, 82.7528, 15.2616, 1.2", "13.9654, 84.2637, 15.4876, 0.12", "13.6216, 87.5774, 15.9485, 0.12", "13.427, 89.3964, 16.1935, 1.2", "13.2142, 91.2774, 16.4366, 0.12", "13.0389, 92.9924, 16.646, 0.12", "12.9885, 93.7066, 16.7259, 0.84", "12.9701, 94.4235, 16.7935, 0.24", "12.9859, 95.9332, 16.941, 0.12", "12.9988, 96.7259, 17.0181, 1.08", "13.0128, 98.0571, 17.1454, 0.12", "12.9877, 99.417, 17.2746, 0.12", "12.9558, 100.28, 17.3538, 1.2", "12.9027, 101.37, 17.4538, 0.12", "12.6973, 104.82, 17.7646, 0.12", "12.6668, 105.275, 17.8049, 1.08", "12.5093, 106.584, 17.9115, 0.12", "12.2549, 107.982, 18.0189, 0.12" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.7536, 66.0034, 13.3299, 0.12", "14.3632, 67.1937, 15.2949, 0.12", "14.5666, 67.6677, 16.0404, 0.96", "15.8406, 71.132, 21.1367, 0.12", "16.5092, 73.2, 24.014, 0.12", "16.7403, 74.0729, 25.1239, 1.32", "16.9336, 75.0458, 26.2481, 0.12", "17.1145, 77.1092, 28.345, 0.12", "17.0788, 77.9892, 29.0756, 1.44", "16.9555, 78.6663, 29.4497, 0.24", "16.5185, 80.5277, 30.3108, 0.24", "16.1861, 82.1241, 30.9817, 0.24", "16.0092, 83.033, 31.3153, 1.56", "15.5704, 85.8108, 32.149, 0.12", "15.3914, 87.1476, 32.5314, 0.96", "15.2819, 88.2215, 32.9197, 0.12", "15.0419, 90.9983, 34.1175, 0.12", "14.9788, 91.9093, 34.5463, 0.96", "14.9279, 92.6001, 34.8837, 0.12", "14.7391, 94.7041, 35.94, 0.12", "14.3706, 97.9008, 37.6484, 0.96", "14.0709, 99.829, 38.7122, 0.12", "13.7929, 101.388, 39.4918, 0.12", "13.6516, 102.166, 39.8052, 0.84", "13.5953, 102.398, 39.8939, 0.12", "13.1771, 103.777, 40.3411, 0.12", "12.749, 104.935, 40.5867, 0.84", "11.7836, 107.044, 41.1329, 0.12", "11.05, 108.149, 41.5088, 1.08", "8.90537, 109.986, 42.4758, 0.12", "7.93488, 110.132, 42.8164, 0.12", "7.55124, 110.039, 42.9215, 0.84", "7.29389, 109.934, 42.9885, 0.12", "6.02745, 109.253, 43.3041, 0.12", "4.44643, 108.204, 43.5548, 0.12", "3.92323, 107.821, 43.5261, 0.6", "3.38861, 107.445, 43.5022, 0.12", "0.987131, 116.118, 49.198, 0.12", "-1.08389, 123.733, 56.4058, 0.12" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "157.267, -27.6975, -58.2121, 0.24", "162.818, -25.5185, -60.7406, 0.24", "163.994, -25.0372, -61.2573, 0.96", "165.225, -24.5051, -61.8193, 0.96", "168.245, -23.1642, -63.1911, 0.12", "169.46, -22.6207, -63.7085, 0.48", "174.371, -20.4278, -65.7213, 0.12", "175.982, -19.6525, -66.334, 0.12", "177.522, -18.9669, -66.9634, 0.48", "178.334, -18.6499, -67.2984, 0.12", "181.674, -17.5355, -68.6299, 0.12", "182.814, -17.2534, -69.1435, 0.48", "183.436, -17.1966, -69.4826, 0.12", "187.344, -17.092, -71.8918, 0.12", "188.213, -17.1176, -72.5665, 0.72", "188.975, -17.1608, -73.2793, 0.12", "191.772, -17.3166, -76.1704, 0.12", "194.683, -17.3587, -79.1705, 0.12", "195.181, -17.3335, -79.6797, 0.84", "198.898, -16.9044, -83.382, 0.12", "201.363, -16.5079, -85.7649, 0.12", "203.075, -16.1554, -87.2791, 0.12", "204.793, -15.7497, -88.5103, 0.12", "206.964, -15.3162, -89.8505, 0.72", "208.059, -15.1875, -90.4511, 0.12", "208.584, -15.1723, -90.6801, 0.12", "210.342, -15.259, -91.4643, 0.12", "214.574, -15.7267, -93.6193, 0.12", "217.746, -16.1588, -95.2971, 0.12", "218.601, -16.2862, -95.7741, 0.48", "220.395, -16.5194, -96.8476, 0.12", "223.029, -16.8179, -98.5333, 0.48", "226.133, -17.0963, -100.593, 0.12", "227.472, -17.2438, -101.625, 0.24", "229.951, -17.5815, -103.703, 0.24", "230.692, -17.7629, -104.411, 0.6", "232.57, -18.5636, -106.431, 0.24", "233.527, -19.2992, -107.568, 0.12", "236.648, -22.7695, -111.632, 0.12", "237.317, -23.8179, -112.597, 0.48", "238.258, -25.7493, -114.0, 0.12", "238.92, -27.3704, -114.978, 0.36", "239.78, -29.9048, -116.16, 0.12", "240.62, -32.3729, -117.047, 0.12", "241.677, -35.169, -117.679, 0.12", "242.134, -36.1374, -117.818, 0.72", "242.709, -37.1747, -117.859, 0.12", "244.265, -39.8172, -117.716, 0.12", "245.425, -41.6741, -117.431, 0.84", "246.256, -42.9831, -117.139, 0.12", "248.503, -46.2027, -116.339, 0.12", "250.327, -48.8891, -115.66, 0.12", "250.636, -49.3774, -115.483, 0.48", "251.079, -50.1527, -115.145, 0.12", "251.891, -51.7299, -114.413, 0.12", "252.165, -52.292, -114.14, 0.36", "252.743, -53.5193, -113.553, 0.12", "255.282, -58.4418, -110.895, 0.12", "255.93, -59.5031, -110.246, 0.84", "256.396, -60.1574, -109.815, 0.12", "258.063, -62.2776, -108.397, 0.12", "258.885, -63.2053, -107.855, 0.84", "259.579, -63.8774, -107.529, 0.12", "263.041, -66.8624, -106.426, 0.12", "264.093, -67.7294, -106.104, 0.72", "265.468, -68.8477, -105.724, 0.12", "267.984, -70.7921, -105.24, 1.32", "268.796, -71.4406, -105.12, 0.48" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "157.267, -27.6975, -58.2121, 0.12", "161.102, -23.9512, -57.4426, 0.12", "169.697, -15.7849, -55.7326, 0.12", "176.364, -9.78369, -54.4907, 0.12", "182.864, -4.20453, -53.3604, 0.12", "185.126, -2.34819, -52.9408, 0.48", "186.542, -1.2417, -52.7441, 0.12", "187.596, -0.530343, -52.6349, 0.12", "191.743, 1.49324, -52.5985, 0.12", "193.845, 2.3182, -52.747, 0.84", "197.453, 3.34187, -53.5341, 0.12", "204.099, 5.12573, -55.2667, 0.12", "205.592, 5.49959, -55.7298, 0.48", "207.52, 5.91072, -56.493, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.19187, -29.8826, 7.43063, 1.44", "2.11998, -34.0002, 4.95324, 1.44", "2.52025, -36.5126, 3.56458, 1.44", "3.01207, -40.4517, 1.56228, 1.44", "3.24501, -42.2716, 0.724603, 1.44", "3.78042, -45.5852, -0.912402, 1.44", "4.34254, -48.9178, -2.64128, 1.44", "4.66313, -51.4715, -4.01893, 1.2", "4.92848, -53.0472, -4.79641, 1.2", "5.3572, -54.9521, -5.61853, 1.2", "6.44113, -59.1614, -7.22185, 1.2", "7.99012, -64.698, -9.23608, 1.2", "8.7317, -67.1338, -10.1167, 1.2", "10.5264, -72.8088, -12.2253, 1.2", "11.7771, -76.7912, -13.6664, 1.2", "12.6512, -79.7855, -14.6363, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.19187, -29.8826, 7.43063, 0.96", "0.640118, -33.9895, 9.04919, 0.96", "0.199771, -37.1583, 10.419, 1.08", "-0.356898, -41.1366, 12.3017, 1.32", "-0.528665, -42.4683, 12.9345, 1.32", "-0.892839, -45.6322, 14.3778, 1.32", "-1.27417, -49.6916, 16.1557, 1.32", "-1.38215, -51.8239, 17.02, 1.32", "-1.42013, -54.5372, 18.2234, 1.32", "-1.41581, -56.5726, 19.1053, 1.32", "-1.35167, -58.9769, 20.0739, 1.32", "-1.23566, -60.6167, 20.6057, 1.32", "-0.907429, -63.8001, 21.3624, 1.2", "-0.631476, -66.1803, 21.9313, 1.2", "-0.256858, -69.0167, 22.5103, 1.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-170.78, 102.771, -135.542, 0.12", "-170.95, 104.175, -136.151, 0.12", "-171.154, 105.861, -136.884, 0.12", "-171.555, 109.169, -138.321, 0.12", "-171.753, 110.809, -139.033, 0.36" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-170.78, 102.771, -135.542, 0.24", "-172.01, 101.24, -135.966, 0.24", "-172.525, 100.6, -136.143, 0.12", "-172.817, 100.236, -136.244, 0.6", "-173.309, 99.623, -136.414, 0.12", "-173.858, 98.9405, -136.603, 0.12", "-174.814, 97.7509, -136.933, 0.36" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-305.481, 97.8218, -77.1917, 0.12", "-309.496, 96.0191, -79.0235, 0.12", "-312.794, 94.5385, -80.5279, 0.12", "-316.951, 92.6719, -82.4246, 0.12", "-321.027, 90.8421, -84.284, 0.12" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-305.481, 97.8218, -77.1917, 0.12", "-306.367, 98.3833, -77.1239, 0.12", "-308.495, 99.822, -77.007, 0.12", "-309.015, 100.196, -76.9889, 0.6", "-309.743, 100.753, -76.977, 0.12", "-310.65, 101.468, -76.9752, 0.12", "-311.406, 102.08, -76.9833, 0.6", "-311.838, 102.46, -76.9651, 0.12", "-312.391, 102.982, -76.9193, 0.12", "-312.999, 103.512, -76.8315, 0.6", "-313.564, 103.978, -76.7263, 0.12", "-314.212, 104.462, -76.5905, 0.12", "-315.779, 105.616, -76.104, 0.72", "-316.157, 105.894, -75.9663, 0.12", "-317.605, 106.974, -75.322, 0.12", "-317.926, 107.213, -75.1875, 0.6", "-318.491, 107.652, -74.9654, 0.6", "-320.676, 109.409, -74.4472, 0.12", "-321.046, 109.716, -74.4229, 0.48", "-322.26, 110.716, -74.4509, 0.12", "-323.677, 111.739, -74.6701, 0.84", "-324.116, 111.975, -74.7753, 0.12", "-326.548, 112.876, -75.5745, 0.12", "-327.098, 112.955, -75.8507, 0.96", "-327.682, 112.941, -76.1487, 0.24", "-329.426, 112.647, -77.0242, 0.12", "-330.804, 112.294, -77.6375, 0.12", "-331.295, 112.124, -77.8454, 0.84", "-333.361, 111.131, -78.6307, 0.12", "-334.848, 110.347, -79.2498, 0.12", "-335.306, 110.091, -79.4653, 0.6" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-298.677, -174.367, 228.305, 0.12", "-308.18, -174.559, 232.242, 0.12", "-317.772, -176.259, 235.491, 0.12", "-326.277, -179.593, 240.148, 0.12", "-335.585, -183.111, 242.518, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-298.677, -174.367, 228.305, 0.24", "-307.343, -176.346, 236.306, 0.12", "-315.772, -180.045, 243.908, 0.12", "-324.232, -183.85, 251.419, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.06031, -33.2886, -16.823, 0.12", "-6.50858, -40.1427, -24.0123, 0.12", "-6.28714, -46.7796, -31.4176, 0.12", "-7.16031, -52.6994, -39.3995, 0.12", "-8.0223, -59.7745, -46.3251, 0.12", "-7.8425, -65.8326, -54.2363, 0.12", "-6.81136, -73.1258, -60.879, 0.12", "-6.90315, -81.3335, -66.3979, 0.12", "-7.2266, -89.784, -71.5129, 0.12", "-8.65013, -97.52, -77.5543, 0.12", "-11.5627, -104.601, -83.9112, 0.12", "-13.3528, -112.11, -90.1551, 0.12", "-16.0143, -120.309, -95.0463, 0.12", "-16.8583, -128.619, -100.346, 0.12", "-17.2891, -136.695, -106.054, 0.12", "-15.9133, -145.118, -111.017, 0.12", "-13.7036, -153.128, -116.369, 0.12", "-10.0701, -161.107, -120.92, 0.12", "-4.63159, -168.09, -125.375, 0.12", "1.00432, -174.83, -129.976, 0.12", "6.91849, -182.094, -133.173, 0.12", "10.9738, -190.244, -136.988, 0.12", "15.7817, -197.116, -142.276, 0.12", "20.1253, -203.548, -148.475, 0.12", "22.7509, -210.41, -155.15, 0.12", "25.3877, -218.067, -160.836, 0.12", "28.9103, -225.919, -165.696, 0.12", "31.9775, -234.226, -170.05, 0.12", "34.3027, -242.955, -173.99, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-6.06031, -33.2886, -16.823, 0.24", "-6.59279, -42.9206, -23.7704, 0.12", "-6.71008, -51.696, -31.8168, 0.12", "-4.08791, -61.3547, -38.1669, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-5.03603, -32.828, -13.6848, 0.12", "-3.83399, -41.4591, -18.6729, 0.12", "-4.00141, -50.3927, -23.2079, 0.12", "-3.50798, -60.0874, -25.5097, 0.12", "-3.18813, -69.9581, -26.8076, 0.12", "-2.43045, -79.8626, -26.24, 0.12", "-2.65316, -89.6627, -24.5797, 0.12", "-2.2039, -99.0233, -21.2153, 0.12", "-1.1727, -107.912, -16.8047, 0.12", "0.116462, -117.473, -14.3406, 0.12", "0.158598, -127.086, -11.7819, 0.12", "2.54528, -136.685, -10.5377, 0.12", "4.47736, -146.329, -8.95108, 0.12", "6.49317, -155.664, -6.08833, 0.12", "8.54494, -164.671, -2.31094, 0.12", "9.77772, -173.726, 1.68027, 0.12", "12.597, -182.89, 4.45943, 0.12", "15.4807, -192.238, 6.43327, 0.12", "18.9009, -201.56, 7.51575, 0.12", "21.1914, -211.038, 9.58919, 0.12", "23.2755, -220.2, 12.94, 0.12", "25.3777, -229.159, 16.8084, 0.12", "28.5105, -238.237, 19.5555, 0.12", "32.3103, -246.856, 22.9396, 0.12", "37.8257, -253.983, 27.4322, 0.12", "42.5665, -262.49, 29.8023, 0.12", "46.7284, -271.047, 32.9263, 0.12", "51.131, -279.924, 34.3576, 0.12", "56.533, -288.381, 33.9537, 0.12", "61.6019, -297.033, 33.6308, 0.12", "68.6101, -304.151, 32.1268, 0.12", "76.3272, -309.921, 28.9541, 0.12", "84.8271, -314.929, 26.5246, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.03603, -32.828, -13.6848, 0.24", "-5.47232, -42.9455, -15.7503, 0.12", "-5.64049, -52.7851, -18.9462, 0.12", "-7.33957, -62.0187, -23.3742, 0.12", "-8.16759, -70.5218, -29.3189, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.2549, 107.982, 18.0189, 0.12", "10.9016, 112.601, 18.1879, 0.12", "10.4325, 114.202, 18.2465, 0.48", "10.2046, 114.98, 18.275, 0.12", "8.15756, 121.967, 18.5306, 0.12", "7.88853, 122.885, 18.5642, 0.72", "7.59996, 123.87, 18.6003, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.2549, 107.982, 18.0189, 0.24", "13.2074, 109.892, 18.4861, 0.24", "13.5766, 110.685, 18.6753, 0.36", "15.1213, 113.942, 19.4822, 0.12", "16.4651, 116.606, 19.9016, 0.12", "16.9758, 117.596, 20.0125, 0.6", "17.2063, 118.038, 20.0521, 0.12", "19.1394, 121.768, 20.2934, 0.12", "20.5432, 124.45, 20.3935, 0.12", "22.2174, 127.796, 20.3786, 0.96", "22.5385, 128.456, 20.3767, 0.36", "23.6387, 130.857, 20.4171, 0.36", "24.2964, 132.443, 20.4814, 1.08", "24.4847, 132.897, 20.4605, 1.32", "25.1586, 134.581, 20.3361, 0.12", "26.6852, 138.376, 20.1104, 0.12", "27.1712, 139.529, 19.9992, 1.32", "27.9372, 141.333, 19.7661, 0.12", "30.1974, 146.341, 19.105, 0.12", "31.8269, 149.548, 18.5637, 0.12", "32.0846, 150.005, 18.4655, 0.6", "32.5271, 150.753, 18.2714, 0.6", "33.1108, 151.584, 18.0144, 0.12", "34.2525, 152.978, 17.5977, 0.12", "36.785, 155.785, 16.9272, 0.12", "37.7329, 156.703, 16.6474, 1.32", "38.8512, 157.668, 16.1494, 0.12", "42.7138, 160.713, 14.1294, 0.12", "43.9875, 161.654, 13.2707, 0.12", "44.6067, 162.106, 12.7715, 0.96", "44.9764, 162.366, 12.4492, 0.12", "49.3079, 165.46, 8.40119, 0.12", "49.8975, 165.931, 7.77474, 1.08", "52.2983, 168.559, 4.98168, 0.12", "52.5716, 168.936, 4.66273, 1.08", "52.9294, 169.539, 4.29688, 1.08", "53.7679, 171.394, 3.71196, 0.24", "54.1974, 172.667, 3.65296, 0.12", "55.5108, 176.859, 3.80817, 0.12", "55.8353, 177.976, 3.94911, 0.48", "56.1927, 179.174, 4.10826, 0.12", "56.9659, 181.758, 4.47268, 0.12", "57.2711, 182.7, 4.63436, 0.6", "57.5133, 183.355, 4.75941, 0.12", "58.1194, 184.836, 5.04326, 0.12", "58.4721, 185.635, 5.20167, 0.6", "58.825, 186.354, 5.36966, 0.12", "61.1971, 190.455, 6.34509, 0.12", "62.553, 192.526, 6.86999, 0.12", "62.9845, 193.086, 6.97423, 1.08", "63.654, 193.816, 7.08809, 1.08", "66.5539, 196.511, 7.45579, 0.12", "70.646, 199.684, 7.85863, 0.12", "72.9268, 201.193, 8.0243, 0.12", "76.9863, 203.706, 8.44396, 0.12", "78.9958, 205.005, 8.68313, 1.2", "80.5451, 206.031, 8.88784, 0.12", "83.9455, 208.171, 9.31764, 0.12", "84.9814, 208.815, 9.51764, 0.48", "87.1669, 210.399, 10.1527, 0.12", "89.8507, 212.972, 11.5972, 0.12", "90.7596, 214.139, 12.1264, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "12.6512, -79.7855, -14.6363, 0.12", "15.4591, -82.6439, -16.5408, 0.12", "16.3681, -83.3804, -16.9538, 1.2", "16.8854, -83.6969, -17.1097, 1.2", "17.6458, -84.1058, -17.3327, 0.12", "20.2889, -85.3974, -18.0525, 0.12", "21.9426, -86.1808, -18.4712, 1.32", "24.347, -87.1747, -18.895, 0.12", "27.359, -88.3899, -19.4031, 0.12", "30.1213, -89.5, -19.7998, 0.96", "32.0303, -90.2906, -20.0765, 0.12", "33.6423, -90.9873, -20.2949, 0.12", "35.2197, -91.7485, -20.5172, 0.6", "36.196, -92.2836, -20.6551, 0.12", "39.961, -94.579, -21.1426, 0.12", "42.0543, -95.9501, -21.3389, 1.44", "43.2605, -96.8019, -21.4536, 0.12", "45.4838, -98.4336, -21.6421, 0.12", "46.27, -99.0582, -21.6957, 0.6", "46.9801, -99.662, -21.7623, 0.12", "49.2611, -101.834, -22.0166, 0.12", "49.9138, -102.49, -22.0832, 0.6", "50.5619, -103.166, -22.1721, 0.12", "51.8562, -104.574, -22.3922, 0.12", "53.5091, -106.546, -22.6894, 1.08", "54.1657, -107.39, -22.8775, 0.12", "55.6413, -109.427, -23.4411, 0.12", "56.0383, -109.999, -23.6031, 0.48", "56.6031, -110.846, -23.8227, 0.12", "58.3886, -113.582, -24.439, 0.12", "59.8835, -115.859, -24.9983, 0.96", "60.5207, -116.774, -25.2658, 0.12", "61.9641, -118.672, -25.8994, 0.12", "63.9322, -121.138, -26.758, 0.12", "64.328, -121.602, -26.917, 0.96", "66.2953, -123.674, -27.5954, 0.12", "68.0325, -125.48, -28.0603, 0.12", "68.7166, -126.154, -28.2427, 0.6", "69.2899, -126.726, -28.3862, 0.12", "71.0602, -128.51, -28.8043, 0.12", "71.7708, -129.281, -28.9361, 0.6", "72.1071, -129.707, -28.9616, 0.6", "72.2745, -129.938, -28.9796, 0.12", "73.6899, -132.047, -29.1564, 0.12", "74.5436, -133.261, -29.3666, 0.48", "74.865, -133.701, -29.4744, 0.48", "76.2002, -135.511, -29.9776, 0.12", "76.674, -136.134, -30.151, 0.48", "77.1871, -136.817, -30.3321, 0.12", "79.2054, -139.489, -31.0017, 0.12", "79.4485, -139.842, -31.068, 0.36", "79.8992, -140.653, -31.1719, 0.12", "80.9829, -142.975, -31.3763, 0.12", "81.3093, -144.014, -31.5186, 0.48", "81.4475, -144.737, -31.6339, 0.12", "81.5969, -147.226, -32.0405, 0.12", "81.4858, -151.689, -32.8878, 0.12", "81.3996, -152.343, -33.0626, 0.12", "80.4031, -156.579, -34.5239, 0.12", "80.1248, -157.469, -34.8883, 1.08", "79.7781, -158.315, -35.2906, 0.12", "79.2783, -159.303, -36.097, 0.12", "78.4263, -160.918, -37.9206, 0.72", "78.262, -161.297, -38.3788, 0.12", "78.1313, -161.765, -39.0275, 0.12", "78.0225, -162.272, -39.7566, 0.96", "77.3747, -166.242, -45.5718, 0.12", "77.3019, -166.805, -46.3768, 0.12", "77.2837, -167.075, -46.7185, 0.6", "77.1684, -169.019, -49.0486, 0.12", "77.1308, -170.09, -50.2199, 0.12", "77.1279, -170.324, -50.4372, 0.36", "77.1081, -171.19, -50.9206, 0.12", "77.0159, -173.975, -52.2283, 0.12", "76.9825, -174.861, -52.5561, 1.08", "76.9034, -175.652, -52.8162, 1.08", "76.8435, -176.056, -52.9649, 0.12", "76.4806, -177.9, -53.661, 0.12", "76.19, -179.041, -54.238, 0.6", "76.0658, -179.383, -54.4434, 0.6", "75.0244, -181.907, -56.317, 0.12", "74.6475, -182.75, -57.1976, 0.48", "74.5129, -183.053, -57.585, 0.48", "73.6743, -185.019, -60.2838, 0.12", "73.4454, -185.603, -61.1813, 0.12", "73.1629, -186.575, -62.4252, 0.48", "72.6828, -188.987, -65.0575, 0.12", "72.5195, -189.953, -66.0009, 0.12", "72.246, -192.072, -67.7226, 0.72", "71.8663, -196.063, -70.3236, 0.12", "71.5623, -200.047, -72.6371, 0.12", "71.5029, -200.85, -73.0621, 0.48", "71.4663, -201.362, -73.3042, 0.12", "71.2088, -204.882, -75.022, 0.12", "71.1498, -205.738, -75.4495, 0.48", "71.1081, -206.549, -75.7675, 0.12", "70.9907, -208.952, -76.8334, 0.12", "71.0031, -209.715, -77.1579, 0.36", "71.1099, -210.692, -77.549, 0.12", "71.4226, -212.07, -78.1441, 0.12", "71.607, -212.535, -78.3543, 0.48", "71.8572, -212.983, -78.5749, 0.12", "73.6207, -215.304, -79.8685, 0.12", "74.2062, -215.961, -80.3405, 0.48", "75.6621, -217.381, -81.5232, 0.12", "78.4153, -219.663, -83.6072, 0.12", "79.4118, -220.366, -84.2887, 0.36", "80.8502, -221.232, -85.2256, 0.36", "82.2912, -221.933, -86.0219, 0.12", "83.5703, -222.46, -86.5704, 0.12", "85.9483, -223.293, -87.3695, 0.12", "88.9811, -224.215, -88.3272, 0.12", "90.7924, -224.768, -88.8172, 0.36", "93.6918, -225.636, -89.4629, 0.12", "97.5813, -226.7, -90.1548, 0.12", "97.9745, -226.796, -90.2244, 0.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "12.6512, -79.7855, -14.6363, 0.96", "11.3578, -84.5142, -17.6779, 0.96", "10.8476, -86.8944, -19.1456, 0.96", "10.5468, -89.2079, -20.6239, 1.56", "10.375, -92.2528, -22.5701, 0.96", "10.3925, -94.92, -24.1934, 0.96", "10.4852, -96.044, -24.8475, 0.96", "10.8437, -97.3651, -25.5499, 0.96", "11.6894, -99.5389, -26.7128, 0.48", "12.0871, -100.485, -27.184, 0.48", "12.9309, -102.532, -28.0359, 0.96", "13.9351, -105.246, -29.0163, 0.96", "14.7595, -107.838, -30.0236, 0.96", "15.3502, -110.376, -31.0336, 0.36", "15.6162, -112.15, -31.7407, 0.36", "15.74, -113.383, -32.2544, 0.36", "15.8307, -115.018, -32.95, 0.84", "15.8288, -117.07, -33.7462, 0.12", "15.8081, -118.905, -34.4675, 0.12", "15.7644, -121.066, -35.3016, 1.32", "15.7114, -122.916, -36.0109, 1.32", "15.6626, -123.815, -36.3364, 0.12", "15.5556, -125.308, -36.8893, 0.12", "15.3574, -128.291, -37.8921, 1.2", "15.2676, -129.949, -38.4491, 0.48", "15.1051, -132.057, -39.1919, 0.12", "14.9795, -133.55, -39.7615, 1.32", "14.7644, -135.709, -40.5884, 0.12", "14.524, -137.63, -41.3077, 0.12", "14.4151, -138.637, -41.719, 1.68", "14.1759, -141.464, -43.0153, 0.12", "14.0545, -144.728, -44.6363, 0.36", "14.0127, -146.099, -45.334, 1.2", "13.9583, -147.533, -46.0424, 0.48", "13.9062, -150.77, -48.0075, 0.24", "13.911, -151.419, -48.4444, 0.72", "13.983, -154.309, -50.4756, 0.12", "14.0161, -155.693, -51.4645, 0.12", "14.0709, -157.176, -52.4385, 0.96", "14.3181, -161.513, -54.6773, 0.12", "14.3883, -162.865, -55.195, 0.12", "14.5475, -164.896, -55.8452, 1.44", "14.6986, -166.384, -56.211, 0.48", "15.108, -168.835, -56.7521, 0.12", "16.0566, -173.238, -57.5141, 0.12", "16.3107, -174.258, -57.6573, 1.32", "16.5043, -174.924, -57.7863, 0.84", "16.6388, -175.362, -57.9155, 0.84", "17.7634, -179.143, -59.3688, 0.12", "18.1043, -180.448, -59.9699, 1.08", "18.4992, -182.519, -61.1074, 1.08", "18.818, -184.919, -62.4543, 0.12", "19.0273, -187.535, -63.9153, 0.12", "19.0327, -188.648, -64.489, 1.44", "18.861, -190.568, -65.3629, 0.12", "18.4584, -193.878, -66.7376, 0.12", "18.3259, -194.818, -67.0661, 0.6", "18.2644, -195.325, -67.214, 0.12", "18.0585, -198.512, -68.0155, 0.12", "18.0361, -199.823, -68.3529, 1.2", "18.065, -201.031, -68.6583, 1.2", "18.1009, -201.537, -68.7624, 0.12", "18.2745, -203.371, -69.1517, 0.12", "18.6514, -206.522, -69.8107, 0.84", "18.8238, -207.553, -70.0162, 0.84", "18.9416, -208.321, -70.1475, 0.12", "19.2973, -211.345, -70.5793, 0.12", "19.387, -212.256, -70.6719, 1.08", "19.4802, -213.875, -70.7592, 1.08", "19.4954, -214.937, -70.7613, 0.12", "19.561, -217.503, -71.0204, 0.12", "19.6171, -218.808, -71.2399, 0.6", "19.7003, -220.477, -71.6121, 0.12", "19.6992, -223.225, -72.2908, 0.12", "19.6227, -225.0, -72.7583, 1.56", "19.3786, -229.334, -74.1184, 0.12", "19.2781, -230.963, -74.6797, 0.12", "19.1663, -232.723, -75.2854, 0.12", "18.8188, -237.91, -77.0293, 0.12", "18.7274, -239.322, -77.475, 1.32", "18.5541, -241.995, -78.1944, 0.48", "18.4059, -244.091, -78.5956, 0.12", "18.2741, -247.195, -79.1546, 0.12", "18.2869, -248.373, -79.3332, 0.84", "18.379, -249.277, -79.4371, 0.84", "18.6081, -251.1, -79.5717, 0.12", "18.9309, -253.33, -79.7004, 0.12", "19.0785, -254.103, -79.7785, 0.48", "19.288, -255.032, -79.9145, 0.12", "19.8781, -257.37, -80.3271, 0.12", "20.2355, -258.611, -80.5692, 0.84", "20.8394, -260.376, -81.0882, 0.84", "21.2586, -261.382, -81.4005, 0.12", "21.5782, -262.091, -81.6012, 0.12", "21.6981, -262.349, -81.6662, 0.12", "22.4216, -263.908, -82.1208, 0.96", "23.4471, -266.214, -82.8363, 0.48", "25.124, -270.316, -84.0578, 0.12", "25.6277, -271.679, -84.4791, 0.6", "25.9437, -272.614, -84.8086, 0.6", "26.7614, -275.431, -85.8476, 0.12", "27.1036, -276.849, -86.4671, 0.12", "27.3825, -278.292, -87.1177, 0.6", "27.5475, -279.5, -87.6875, 0.6", "28.0072, -283.517, -89.501, 0.12", "28.1423, -285.039, -90.0793, 0.96", "28.4598, -289.058, -91.2313, 0.12", "28.6138, -291.24, -91.7601, 0.12", "28.8601, -295.006, -92.4687, 0.12", "28.8898, -295.476, -92.5228, 1.08", "29.0155, -298.101, -92.516, 0.12", "29.1643, -300.639, -92.3487, 0.12", "29.281, -301.82, -92.2181, 0.96", "29.4936, -302.868, -92.1376, 0.96", "29.5917, -303.279, -92.1257, 0.12", "30.4294, -306.986, -92.1732, 0.12", "30.7165, -308.27, -92.3237, 1.56", "31.2962, -311.373, -92.8709, 0.12", "31.927, -315.38, -93.7354, 0.12", "32.4195, -319.074, -94.7838, 0.12", "32.5868, -320.621, -95.316, 0.96", "32.8191, -323.814, -96.6582, 0.6", "32.9189, -326.236, -97.8965, 0.12", "32.8933, -326.97, -98.3229, 0.12", "32.8363, -328.976, -99.8028, 0.72", "32.858, -329.913, -100.541, 0.72", "32.8903, -330.376, -100.935, 0.72", "32.9061, -333.151, -103.335, 0.12", "32.8241, -335.307, -105.332, 0.12", "32.4506, -338.219, -108.061, 1.08", "32.227, -339.351, -109.208, 1.08", "31.2366, -342.712, -112.894, 0.12", "30.3514, -344.93, -115.454, 0.12", "30.0045, -345.551, -116.182, 0.96", "29.0041, -347.05, -117.93, 0.96", "27.1909, -349.457, -120.376, 0.12", "25.9773, -351.015, -121.789, 0.12", "25.6102, -351.478, -122.1, 0.48", "24.499, -353.105, -123.113, 0.12", "23.7589, -354.221, -123.741, 0.12", "23.3019, -354.975, -124.054, 0.12", "22.3565, -356.398, -124.346, 0.12", "21.2564, -358.23, -124.685, 0.48" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.256858, -69.0167, 22.5103, 0.12", "0.797933, -71.0981, 24.7559, 0.12", "1.20291, -71.6743, 25.6904, 0.96", "1.97367, -72.5415, 27.7143, 0.24", "2.4714, -72.7873, 29.006, 0.24", "2.91876, -72.7163, 30.0286, 0.72", "3.24806, -72.484, 30.5696, 0.12", "5.02882, -70.4108, 32.4421, 0.12", "6.11098, -69.0801, 33.5417, 0.12", "7.40498, -67.3489, 34.7173, 0.12", "7.9833, -66.5025, 35.2323, 0.12", "9.28532, -64.5545, 36.298, 0.12", "9.91296, -63.6774, 36.7235, 0.12", "11.8199, -61.6306, 37.4099, 0.12", "15.3521, -57.4133, 43.2093, 0.12", "17.9598, -52.7835, 49.1646, 0.12", "21.5354, -47.4617, 53.8814, 0.12", "25.3575, -42.8444, 59.153, 0.12", "29.2471, -38.1941, 64.344, 0.12", "33.9754, -33.524, 68.7635, 0.12", "38.4884, -28.8181, 73.3642, 0.12", "43.8495, -24.7936, 77.7287, 0.12", "49.7906, -21.1426, 81.667, 0.12", "56.3655, -17.8748, 84.8864, 0.12", "63.3443, -15.9051, 88.3543, 0.12", "70.6718, -13.4056, 90.4883, 0.12", "78.1046, -10.5858, 91.5897, 0.12", "85.3558, -8.1723, 94.0615, 0.12", "92.0141, -5.05162, 97.2629, 0.12", "98.4266, -2.10729, 101.081, 0.12", "105.453, 0.235375, 104.191, 0.12", "112.893, 2.10325, 106.595, 0.12", "119.678, 3.96011, 110.488, 0.12", "125.752, 6.30663, 115.191, 0.12", "130.816, 9.80374, 120.321, 0.12", "136.076, 12.4498, 125.778, 0.12", "142.314, 14.6922, 130.318, 0.12", "147.974, 16.9559, 135.55, 0.12", "154.46, 17.8858, 140.222, 0.12", "161.367, 19.6428, 143.944, 0.12", "168.806, 21.9662, 145.892, 0.12", "176.361, 24.5666, 146.688, 0.12", "184.325, 25.6156, 146.225, 0.12", "192.19, 27.2367, 146.664, 0.12", "200.215, 27.7811, 146.923, 0.12", "208.185, 28.8801, 147.038, 0.12", "216.119, 30.1891, 147.268, 0.12", "223.998, 30.9565, 148.717, 0.12", "231.784, 32.1533, 150.351, 0.12", "239.39, 32.4722, 152.962, 0.12" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.256858, -69.0167, 22.5103, 0.12", "-1.76259, -71.7255, 23.294, 0.12", "-2.67411, -73.3652, 23.7684, 0.12", "-3.24223, -74.3873, 24.0641, 0.12", "-6.51882, -82.1271, 27.9757, 0.12", "-8.64614, -89.4056, 33.3422, 0.12", "-11.9643, -95.2359, 39.8449, 0.12", "-14.5134, -101.449, 46.3216, 0.12", "-16.3133, -108.412, 52.2214, 0.12", "-19.9183, -115.286, 57.3546, 0.12", "-24.2435, -121.556, 62.7395, 0.12", "-27.5164, -128.71, 67.689, 0.12", "-29.2049, -136.528, 72.3702, 0.12", "-30.8769, -144.928, 75.8378, 0.12", "-31.2648, -153.348, 79.6246, 0.12", "-31.694, -161.584, 83.8094, 0.12", "-31.6613, -170.199, 87.1215, 0.12", "-30.908, -178.898, 90.1022, 0.12", "-29.7493, -187.216, 93.9667, 0.12", "-29.1302, -195.824, 97.2428, 0.12", "-27.6798, -204.547, 99.8698, 0.12", "-27.8049, -213.031, 103.519, 0.12", "-29.2496, -221.751, 106.16, 0.12", "-30.4297, -230.649, 108.252, 0.12", "-32.27, -239.643, 109.015, 0.12" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-8.16759, -70.5218, -29.3189, 0.12", "-6.34703, -78.4208, -37.7979, 0.12", "-5.16931, -87.7199, -44.7662, 0.12", "-2.67035, -94.8776, -53.7474, 0.12", "2.0259, -101.486, -62.2724, 0.12", "7.55479, -105.733, -71.8245, 0.12", "13.6355, -109.808, -81.1154, 0.12", "19.972, -114.632, -89.8374, 0.12", "27.3832, -119.914, -97.3426, 0.12", "32.8205, -125.994, -105.84, 0.12", "38.9552, -131.425, -114.325, 0.12", "44.6881, -136.21, -123.478, 0.12", "50.5779, -143.447, -130.603, 0.12", "58.8336, -149.274, -136.657, 0.12", "67.5699, -155.476, -141.526, 0.12", "76.117, -161.625, -146.784, 0.12", "85.5288, -166.889, -151.56, 0.12", "95.2101, -173.069, -154.124, 0.12", "105.806, -177.986, -155.815, 0.12", "115.25, -184.323, -158.818, 0.12" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.16759, -70.5218, -29.3189, 0.24", "-11.0856, -80.816, -30.4999, 0.12", "-14.5544, -90.6996, -33.071, 0.12", "-19.4981, -99.9658, -35.6584, 0.12", "-23.1923, -109.906, -37.6141, 0.12", "-25.2439, -120.406, -38.692, 0.12", "-28.3391, -130.272, -41.7603, 0.12", "-30.0502, -140.497, -44.6593, 0.12", "-31.9924, -150.927, -46.43, 0.12", "-33.1153, -161.039, -49.96, 0.12", "-33.2883, -171.431, -52.7215, 0.12", "-33.3098, -181.334, -56.9724, 0.12", "-34.366, -191.627, -59.9263, 0.12", "-36.1522, -202.131, -61.3654, 0.12", "-39.2835, -212.047, -64.2203, 0.12", "-42.8936, -221.895, -66.7418, 0.12", "-47.4241, -231.605, -68.0578, 0.12", "-52.1267, -241.314, -67.6257, 0.12" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "7.59996, 123.87, 18.6003, 0.12", "7.91706, 128.682, 19.7489, 0.12", "7.95094, 130.461, 20.084, 1.08", "7.95315, 131.631, 20.2781, 0.12", "7.92488, 136.482, 21.0182, 0.12", "7.91723, 138.048, 21.2381, 0.48", "7.88817, 138.814, 21.3044, 0.12", "7.57045, 142.263, 21.2979, 0.12", "7.43894, 143.164, 21.2742, 0.84", "7.28666, 143.918, 21.2498, 0.12", "6.51598, 147.188, 21.1522, 0.12", "5.35294, 152.038, 21.0567, 0.12", "4.74267, 154.626, 21.0312, 0.12", "4.17637, 157.336, 21.0203, 0.84", "3.8109, 159.24, 21.0186, 0.12", "3.06401, 163.565, 21.045, 0.12", "2.9496, 164.291, 21.0585, 0.6", "2.8325, 165.442, 21.1189, 0.12", "2.46827, 171.697, 21.3713, 0.12", "2.4606, 172.6, 21.364, 0.72", "2.45323, 173.118, 21.3568, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "7.59996, 123.87, 18.6003, 0.12", "5.04571, 126.375, 19.7391, 0.12", "4.22928, 127.175, 20.1031, 0.48", "0.818884, 130.519, 21.6236, 0.12", "0.00245499, 131.32, 21.9876, 0.48", "-7.58083, 139.489, 25.5839, 0.48", "-14.7714, 147.604, 30.0089, 0.48", "-22.1237, 155.79, 34.0167, 0.48", "-29.664, 163.389, 38.8064, 0.48", "-36.3222, 171.349, 44.2375, 0.48", "-43.3594, 178.688, 50.093, 0.48", "-49.1406, 187.062, 55.8562, 0.48", "-53.8841, 194.486, 63.5872, 0.48", "-56.4707, 202.303, 71.9002, 0.48", "-58.34, 207.917, 82.0694, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.2564, -358.23, -124.685, 0.12", "21.2587, -359.318, -125.753, 0.12", "21.3563, -360.983, -127.532, 0.48", "21.4268, -361.863, -128.5, 0.12", "21.4906, -362.551, -129.25, 0.12", "21.6091, -363.83, -130.646, 0.96", "21.8021, -365.913, -132.917, 0.12", "22.0143, -366.901, -133.982, 0.12", "22.0143, -366.901, -133.982, 0.48", "22.1171, -367.238, -134.376, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.2564, -358.23, -124.685, 0.12", "21.1295, -360.055, -126.88, 0.12", "21.0851, -360.694, -127.649, 0.12" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "115.25, -184.323, -158.818, 0.12", "121.167, -189.768, -164.759, 0.12", "126.714, -195.862, -170.383, 0.12", "131.409, -202.248, -176.433, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "115.25, -184.323, -158.818, 0.24", "120.447, -189.144, -164.872, 0.12", "124.198, -192.946, -172.555, 0.12", "127.104, -197.583, -180.123, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-52.1267, -241.314, -67.6257, 0.12", "-55.4088, -252.288, -70.2666, 0.12", "-60.1488, -262.76, -72.8396, 0.12", "-64.2851, -273.64, -74.5155, 0.12", "-67.8772, -284.378, -77.7139, 0.12", "-70.1724, -295.436, -80.9546, 0.12", "-72.0308, -306.692, -83.7206, 0.12", "-75.4434, -316.972, -88.3721, 0.12", "-79.2584, -326.847, -93.5988, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-52.1267, -241.314, -67.6257, 0.24", "-54.0047, -249.388, -69.2347, 0.12", "-56.3767, -257.481, -69.4436, 0.12", "-57.9037, -265.747, -68.8644, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.45323, 173.118, 21.3568, 0.12", "1.39172, 176.756, 23.5647, 0.12", "0.565545, 180.028, 25.4895, 0.12", "0.173175, 181.582, 26.4037, 0.48", "-0.095461, 182.646, 27.0296, 0.12", "-1.25822, 187.252, 29.7386, 0.12", "-1.645, 188.783, 30.6397, 0.48", "-2.01675, 190.189, 31.5983, 0.12", "-4.48836, 196.891, 37.3113, 0.12", "-6.07404, 202.443, 44.4491, 0.12", "-7.90458, 208.517, 51.0635, 0.12", "-11.2051, 214.373, 57.3138, 0.12", "-12.8915, 220.826, 63.5803, 0.12", "-14.5022, 228.136, 68.791, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.45323, 173.118, 21.3568, 0.12", "1.48664, 176.617, 20.7172, 0.12", "1.24195, 177.503, 20.5553, 0.84", "1.08823, 178.06, 20.4536, 0.12", "-1.28647, 184.927, 17.6483, 0.12", "-4.8092, 191.566, 15.5609, 0.12", "-8.56596, 198.084, 13.4815, 0.12", "-11.9033, 205.049, 12.5189, 0.12", "-15.2235, 212.066, 12.9655, 0.12", "-18.9001, 218.79, 14.3497, 0.12", "-20.9273, 226.204, 15.3612, 0.12", "-23.9733, 233.177, 16.951, 0.12", "-28.7643, 239.295, 17.7956, 0.12", "-33.5562, 245.285, 19.3141, 0.12", "-38.5926, 251.221, 20.0992, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-58.34, 207.917, 82.0694, 0.12", "-68.5203, 210.864, 84.4992, 0.12", "-79.1224, 212.658, 86.1753, 0.12", "-89.2225, 214.667, 89.6862, 0.12", "-98.9903, 218.187, 92.8872, 0.12", "-109.455, 220.345, 94.9393, 0.12", "-119.555, 223.686, 97.1686, 0.12", "-130.081, 225.444, 99.3003, 0.12", "-140.261, 229.241, 99.472, 0.12", "-149.363, 234.663, 97.1598, 0.12", "-157.908, 240.844, 94.7134, 0.12", "-167.36, 245.882, 92.9772, 0.12", "-176.829, 250.892, 91.2545, 0.12" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-58.34, 207.917, 82.0694, 0.12", "-57.2911, 216.672, 86.6431, 0.12", "-55.106, 224.889, 91.816, 0.12", "-54.0257, 233.304, 97.0088, 0.12", "-53.0975, 242.742, 99.8689, 0.12", "-53.2593, 251.767, 103.993, 0.12", "-53.3395, 260.192, 109.285, 0.12", "-54.4491, 268.392, 114.83, 0.12", "-55.8163, 277.592, 118.284, 0.12", "-57.1774, 287.336, 119.406, 0.12" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "22.1171, -367.238, -134.376, 0.12", "22.3988, -368.299, -135.863, 0.12", "22.5256, -368.935, -137.136, 0.96", "22.5698, -370.042, -140.026, 0.12", "22.4988, -370.637, -141.883, 0.12", "22.3997, -370.934, -143.318, 0.96", "22.3121, -371.048, -144.129, 0.96", "21.719, -371.124, -147.57, 0.12", "21.3782, -370.998, -149.095, 0.12", "21.264, -370.916, -149.52, 0.84", "20.0869, -369.979, -153.108, 0.12", "19.6924, -369.693, -154.131, 0.12", "19.5292, -369.589, -154.519, 0.72", "19.1739, -369.432, -155.278, 0.72", "18.7634, -369.221, -156.235, 0.12", "18.1515, -368.834, -157.572, 0.12", "18.0522, -368.744, -157.843, 0.6", "17.8934, -368.516, -158.665, 0.6", "17.912, -368.118, -161.508, 0.12", "18.0876, -368.022, -163.215, 0.12", "18.1318, -368.012, -163.561, 0.84", "18.5457, -368.039, -166.504, 0.12", "18.7523, -368.126, -167.805, 0.72", "19.861, -369.025, -174.33, 0.12", "20.4789, -369.84, -177.988, 0.12", "20.5993, -370.073, -178.817, 0.72", "20.7022, -370.414, -179.966, 0.72", "20.885, -371.434, -183.042, 0.12", "20.9044, -371.845, -184.253, 0.48", "20.8733, -372.129, -184.832, 0.12", "20.6418, -373.193, -186.907, 0.12", "20.3946, -374.38, -189.656, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.1171, -367.238, -134.376, 0.12", "21.8196, -368.876, -135.466, 0.12", "21.4324, -371.381, -137.189, 0.48", "20.9372, -375.09, -139.69, 0.12", "20.8552, -375.687, -140.084, 0.48", "20.4761, -378.06, -141.629, 0.12", "19.9849, -380.835, -143.641, 0.12", "19.7002, -382.434, -144.93, 0.48", "19.5634, -383.092, -145.507, 0.24", "19.3578, -383.856, -146.125, 0.24", "19.0587, -384.802, -146.885, 0.6", "17.7625, -388.033, -149.369, 0.12", "17.0549, -389.585, -150.804, 0.12", "16.8324, -390.017, -151.233, 0.6", "16.5364, -390.561, -151.811, 0.6", "16.2201, -391.137, -152.511, 0.12", "15.6857, -391.942, -153.651, 0.12", "14.4585, -393.075, -156.284, 0.12", "14.3969, -393.122, -156.428, 0.72", "14.1347, -393.299, -157.093, 0.72", "13.1353, -393.843, -159.808, 0.12", "12.6072, -394.047, -161.342, 0.12", "11.3712, -394.296, -165.1, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-79.2584, -326.847, -93.5988, 0.12", "-81.608, -334.322, -95.7011, 0.12", "-85.2438, -341.472, -97.0515, 0.12", "-89.4541, -348.443, -96.742, 0.12", "-93.3077, -355.478, -95.308, 0.12", "-96.2799, -362.726, -93.1005, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-79.2584, -326.847, -93.5988, 0.24", "-82.3885, -336.628, -96.5213, 0.12", "-84.0444, -346.833, -99.0895, 0.12", "-87.098, -356.561, -102.264, 0.12", "-92.3094, -365.579, -104.792, 0.12", "-97.146, -374.751, -107.47, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-176.829, 250.892, 91.2545, 0.12", "-183.231, 252.767, 93.0522, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-176.829, 250.892, 91.2545, 0.24", "-185.459, 254.453, 91.0217, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_72", "dend_61", "dend_56", "dend_47", "dend_30", "dend_13", "dend_0", "dend_77", "dend_74", "dend_67", "dend_62", "dend_60", "dend_57", "dend_53", "dend_48", "dend_32", "dend_31", "dend_17", "dend_14", "dend_12", "dend_1", "dend_76", "dend_75", "dend_71", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_50", "dend_49", "dend_44", "dend_33", "dend_19", "dend_18", "dend_16", "dend_15", "dend_5", "dend_2", "dend_70", "dend_69", "dend_66", "dend_65", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_34", "dend_21", "dend_20", "dend_11", "dend_6", "dend_4", "dend_3", "dend_40", "dend_35", "dend_27", "dend_22", "dend_8", "dend_7", "dend_42", "dend_41", "dend_37", "dend_36", "dend_29", "dend_28", "dend_24", "dend_23", "dend_10", "dend_9", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_72", "dend_61", "dend_56", "dend_47", "dend_30", "dend_13", "dend_0", "dend_77", "dend_74", "dend_67", "dend_62", "dend_60", "dend_57", "dend_53", "dend_48", "dend_32", "dend_31", "dend_17", "dend_14", "dend_12", "dend_1", "dend_76", "dend_75", "dend_71", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_50", "dend_49", "dend_44", "dend_33", "dend_19", "dend_18", "dend_16", "dend_15", "dend_5", "dend_2", "dend_70", "dend_69", "dend_66", "dend_65", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_34", "dend_21", "dend_20", "dend_11", "dend_6", "dend_4", "dend_3", "dend_40", "dend_35", "dend_27", "dend_22", "dend_8", "dend_7", "dend_42", "dend_41", "dend_37", "dend_36", "dend_29", "dend_28", "dend_24", "dend_23", "dend_10", "dend_9", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_47", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_13", "dend_0", "axon_0", "axon_0", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_33", "dend_33", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_LBC_a7bdd51160_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: soma_0
create dend_72
public dend_72
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_61
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_32
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.4500001421830143)
    connect dend_72(0), soma_0(0.4500001421830143)
    connect dend_61(0), soma_0(0.4500001421830143)
    connect dend_56(0), soma_0(0.4500001421830143)
    connect dend_47(0), soma_0(0.4500001421830143)
    connect dend_30(0), soma_0(0.4500001421830143)
    connect dend_13(0), soma_0(0.4500001421830143)
    connect dend_0(0), soma_0(0.4500001421830143)
    connect axon_0(0), soma_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.29271, -11.6867, 4.83325, 4.84982 ) }
    soma_0 { pt3dadd( 1.10949, -10.459, 4.33282, 5.97061 ) }
    soma_0 { pt3dadd( 0.926272, -9.23135, 3.83238, 8.0692 ) }
    soma_0 { pt3dadd( 0.743056, -8.00367, 3.33195, 9.40358 ) }
    soma_0 { pt3dadd( 0.559839, -6.77598, 2.83151, 10.6995 ) }
    soma_0 { pt3dadd( 0.376623, -5.5483, 2.33108, 11.9706 ) }
    soma_0 { pt3dadd( 0.193406, -4.32062, 1.83064, 13.8162 ) }
    soma_0 { pt3dadd( 0.0101893, -3.09294, 1.3302, 15.6871 ) }
    soma_0 { pt3dadd( -0.173027, -1.86526, 0.82977, 15.9633 ) }
    soma_0 { pt3dadd( -0.356244, -0.637576, 0.329335, 16.579 ) }
    soma_0 { pt3dadd( -0.539461, 0.590106, -0.171101, 17.1395 ) }
    soma_0 { pt3dadd( -0.722677, 1.81779, -0.671536, 17.1456 ) }
    soma_0 { pt3dadd( -0.905894, 3.04547, -1.17197, 17.1167 ) }
    soma_0 { pt3dadd( -1.08911, 4.27315, -1.67241, 16.9505 ) }
    soma_0 { pt3dadd( -1.27233, 5.50083, -2.17284, 16.6868 ) }
    soma_0 { pt3dadd( -1.45554, 6.72851, -2.67328, 16.2042 ) }
    soma_0 { pt3dadd( -1.63876, 7.9562, -3.17371, 15.3999 ) }
    soma_0 { pt3dadd( -1.82198, 9.18388, -3.67415, 12.8578 ) }
    soma_0 { pt3dadd( -2.00519, 10.4116, -4.17458, 8.89972 ) }
    soma_0 { pt3dadd( -2.18841, 11.6392, -4.67502, 6.31689 ) }
    soma_0 { pt3dadd( -2.37163, 12.8669, -5.17545, 3.58193 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -0.157219, 9.00178, -10.0838, 1.68 ) }
    dend_73 { pt3dadd( 1.37171, 10.1057, -10.0838, 1.68 ) }
    dend_73 { pt3dadd( 3.37397, 11.5514, -10.0838, 1.68 ) }
    // Section: dend_72, id: dend_72, parent: soma_0 (entry count 24/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -6.15722, 10.4252, -7.69378, 1.44 ) }
    dend_72 { pt3dadd( -6.86025, 10.4169, -7.90842, 1.44 ) }
    dend_72 { pt3dadd( -8.23684, 10.3616, -8.5509, 1.44 ) }
    dend_72 { pt3dadd( -10.249, 10.2697, -9.54676, 1.44 ) }
    dend_72 { pt3dadd( -11.7369, 10.2217, -10.2647, 1.44 ) }
    dend_72 { pt3dadd( -13.437, 10.1762, -11.1285, 1.44 ) }
    dend_72 { pt3dadd( -16.5003, 10.0952, -12.6942, 1.08 ) }
    dend_72 { pt3dadd( -19.4258, 9.99564, -14.2288, 1.08 ) }
    dend_72 { pt3dadd( -21.4305, 9.90844, -15.3065, 1.08 ) }
    dend_72 { pt3dadd( -23.6867, 9.78944, -16.534, 1.08 ) }
    dend_72 { pt3dadd( -26.101, 9.64704, -17.8098, 0.96 ) }
    dend_72 { pt3dadd( -27.2967, 9.57314, -18.4085, 0.96 ) }
    dend_72 { pt3dadd( -28.6746, 9.48564, -18.9864, 1.44 ) }
    dend_72 { pt3dadd( -29.4677, 9.42324, -19.2764, 1.44 ) }
    dend_72 { pt3dadd( -30.093, 9.37024, -19.5253, 0.84 ) }
    dend_72 { pt3dadd( -31.068, 9.28654, -19.9116, 0.72 ) }
    dend_72 { pt3dadd( -33.2368, 9.12256, -20.7172, 1.32 ) }
    dend_72 { pt3dadd( -34.576, 9.02368, -21.2131, 1.32 ) }
    dend_72 { pt3dadd( -36.7432, 8.89717, -22.0814, 0.72 ) }
    dend_72 { pt3dadd( -39.0123, 8.8161, -23.0419, 0.72 ) }
    dend_72 { pt3dadd( -40.8088, 8.78414, -23.8279, 0.72 ) }
    dend_72 { pt3dadd( -42.708, 8.78142, -24.6596, 1.08 ) }
    dend_72 { pt3dadd( -45.0256, 8.77348, -25.6721, 0.6 ) }
    dend_72 { pt3dadd( -47.1013, 8.73884, -26.6057, 0.6 ) }
    dend_72 { pt3dadd( -49.0745, 8.68615, -27.5529, 0.6 ) }
    dend_72 { pt3dadd( -50.331, 8.66289, -28.1502, 0.6 ) }
    dend_72 { pt3dadd( -51.7397, 8.68366, -28.894, 0.6 ) }
    dend_72 { pt3dadd( -52.6256, 8.7332, -29.3891, 0.6 ) }
    dend_72 { pt3dadd( -53.5989, 8.85607, -29.9305, 1.2 ) }
    dend_72 { pt3dadd( -55.1063, 9.15811, -30.6788, 1.2 ) }
    dend_72 { pt3dadd( -56.554, 9.65844, -31.3406, 0.6 ) }
    dend_72 { pt3dadd( -58.1154, 10.4222, -32.0417, 0.96 ) }
    dend_72 { pt3dadd( -58.8277, 10.9093, -32.3445, 0.48 ) }
    dend_72 { pt3dadd( -60.2402, 12.0781, -32.8846, 0.24 ) }
    dend_72 { pt3dadd( -61.1914, 13.0072, -33.2063, 1.2 ) }
    dend_72 { pt3dadd( -62.5866, 14.5662, -33.7556, 0.84 ) }
    dend_72 { pt3dadd( -63.4427, 15.6314, -34.1561, 0.48 ) }
    dend_72 { pt3dadd( -65.1609, 17.8324, -35.102, 0.36 ) }
    dend_72 { pt3dadd( -65.7641, 18.5789, -35.4804, 1.44 ) }
    dend_72 { pt3dadd( -66.6095, 19.5625, -36.0631, 0.72 ) }
    dend_72 { pt3dadd( -68.5793, 21.6332, -37.5068, 0.48 ) }
    dend_72 { pt3dadd( -69.532, 22.5168, -38.2105, 0.12 ) }
    dend_72 { pt3dadd( -70.6918, 23.4763, -39.0611, 0.12 ) }
    dend_72 { pt3dadd( -72.352, 24.6751, -40.3714, 0.12 ) }
    dend_72 { pt3dadd( -72.8156, 24.9856, -40.7376, 0.6 ) }
    dend_72 { pt3dadd( -73.8106, 25.6029, -41.5421, 0.84 ) }
    dend_72 { pt3dadd( -74.5585, 26.055, -42.1257, 0.12 ) }
    dend_72 { pt3dadd( -75.3376, 26.5223, -42.8686, 0.12 ) }
    dend_72 { pt3dadd( -76.2158, 27.0789, -43.791, 0.84 ) }
    dend_72 { pt3dadd( -76.6122, 27.3407, -44.2447, 1.2 ) }
    dend_72 { pt3dadd( -77.7637, 28.0744, -45.5488, 0.84 ) }
    dend_72 { pt3dadd( -78.6507, 28.6225, -46.5005, 0.84 ) }
    dend_72 { pt3dadd( -80.2632, 29.5675, -48.0578, 0.48 ) }
    dend_72 { pt3dadd( -81.0838, 30.0204, -48.7351, 0.24 ) }
    dend_72 { pt3dadd( -81.7976, 30.3979, -49.2456, 0.84 ) }
    dend_72 { pt3dadd( -82.8399, 30.9284, -49.9282, 0.6 ) }
    dend_72 { pt3dadd( -83.5447, 31.2775, -50.3093, 0.12 ) }
    dend_72 { pt3dadd( -84.6606, 31.8598, -50.926, 0.12 ) }
    dend_72 { pt3dadd( -85.0855, 32.0928, -51.1579, 0.72 ) }
    dend_72 { pt3dadd( -85.4676, 32.3053, -51.3861, 0.72 ) }
    dend_72 { pt3dadd( -86.6434, 32.9767, -52.0814, 0.12 ) }
    dend_72 { pt3dadd( -87.2965, 33.3665, -52.4541, 0.12 ) }
    dend_72 { pt3dadd( -88.5202, 34.0962, -53.1247, 1.2 ) }
    dend_72 { pt3dadd( -89.3165, 34.6025, -53.5786, 0.84 ) }
    dend_72 { pt3dadd( -89.6923, 34.847, -53.776, 0.12 ) }
    dend_72 { pt3dadd( -90.9001, 35.6159, -54.3187, 0.12 ) }
    dend_72 { pt3dadd( -91.1272, 35.7638, -54.4061, 1.08 ) }
    dend_72 { pt3dadd( -92.3139, 36.5452, -54.9168, 0.36 ) }
    dend_72 { pt3dadd( -93.6222, 37.4052, -55.5737, 0.36 ) }
    dend_72 { pt3dadd( -94.6098, 38.0625, -56.1407, 0.36 ) }
    dend_72 { pt3dadd( -95.7595, 38.8121, -56.8383, 0.84 ) }
    dend_72 { pt3dadd( -96.8108, 39.4595, -57.5282, 0.36 ) }
    dend_72 { pt3dadd( -98.2728, 40.3083, -58.5115, 0.24 ) }
    dend_72 { pt3dadd( -99.598, 41.0416, -59.4105, 0.24 ) }
    dend_72 { pt3dadd( -101.003, 41.8004, -60.3344, 0.6 ) }
    dend_72 { pt3dadd( -101.691, 42.1745, -60.7957, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_72 { pt3dadd( -103.443, 43.1221, -61.9161, 0.12 ) }
    dend_72 { pt3dadd( -103.878, 43.3547, -62.1647, 0.6 ) }
    dend_72 { pt3dadd( -104.824, 43.8898, -62.6037, 0.12 ) }
    dend_72 { pt3dadd( -105.504, 44.3085, -62.883, 0.12 ) }
    dend_72 { pt3dadd( -105.83, 44.5338, -63.0192, 0.84 ) }
    dend_72 { pt3dadd( -106.631, 45.1605, -63.2828, 0.84 ) }
    dend_72 { pt3dadd( -107.584, 45.9699, -63.5028, 0.12 ) }
    dend_72 { pt3dadd( -108.152, 46.4623, -63.6148, 0.84 ) }
    dend_72 { pt3dadd( -108.605, 46.8659, -63.6902, 1.08 ) }
    dend_72 { pt3dadd( -109.242, 47.4458, -63.7743, 0.36 ) }
    dend_72 { pt3dadd( -111.251, 49.3556, -63.9983, 0.12 ) }
    dend_72 { pt3dadd( -111.633, 49.7382, -64.0227, 0.6 ) }
    dend_72 { pt3dadd( -112.117, 50.2779, -64.0254, 0.6 ) }
    dend_72 { pt3dadd( -112.537, 50.7786, -64.0212, 0.12 ) }
    dend_72 { pt3dadd( -113.562, 52.1165, -63.9903, 0.12 ) }
    dend_72 { pt3dadd( -113.745, 52.3736, -63.9703, 0.72 ) }
    dend_72 { pt3dadd( -114.313, 53.217, -63.8703, 0.24 ) }
    dend_72 { pt3dadd( -116.205, 55.9877, -63.4991, 0.12 ) }
    dend_72 { pt3dadd( -116.572, 56.5165, -63.4253, 0.84 ) }
    dend_72 { pt3dadd( -117.021, 57.1484, -63.3369, 0.24 ) }
    dend_72 { pt3dadd( -118.466, 59.1591, -63.057, 0.24 ) }
    dend_72 { pt3dadd( -118.911, 59.7743, -62.9782, 0.72 ) }
    dend_72 { pt3dadd( -119.613, 60.7366, -62.8692, 0.12 ) }
    dend_72 { pt3dadd( -120.93, 62.556, -62.6756, 0.12 ) }
    dend_72 { pt3dadd( -121.548, 63.4395, -62.5862, 0.96 ) }
    dend_72 { pt3dadd( -121.908, 63.9485, -62.544, 0.12 ) }
    dend_72 { pt3dadd( -122.819, 65.2496, -62.4754, 0.12 ) }
    dend_72 { pt3dadd( -123.208, 65.728, -62.4566, 0.72 ) }
    dend_72 { pt3dadd( -123.917, 66.5266, -62.4318, 0.12 ) }
    dend_72 { pt3dadd( -125.039, 67.6981, -62.4078, 0.12 ) }
    dend_72 { pt3dadd( -125.833, 68.4759, -62.4021, 0.96 ) }
    dend_72 { pt3dadd( -126.749, 69.3399, -62.4051, 0.12 ) }
    dend_72 { pt3dadd( -130.837, 73.0379, -62.4593, 0.12 ) }
    dend_72 { pt3dadd( -131.495, 73.6218, -62.4673, 1.32 ) }
    dend_72 { pt3dadd( -132.154, 74.1893, -62.5088, 0.12 ) }
    dend_72 { pt3dadd( -133.764, 75.5715, -62.6906, 0.12 ) }
    dend_72 { pt3dadd( -134.414, 76.1491, -62.7857, 0.12 ) }
    dend_72 { pt3dadd( -134.928, 76.6313, -62.8843, 0.84 ) }
    dend_72 { pt3dadd( -135.357, 77.1489, -62.9983, 0.12 ) }
    dend_72 { pt3dadd( -136.817, 79.1702, -63.4133, 0.12 ) }
    dend_72 { pt3dadd( -137.057, 79.5621, -63.4862, 0.72 ) }
    dend_72 { pt3dadd( -137.424, 80.2898, -63.6024, 0.72 ) }
    dend_72 { pt3dadd( -137.786, 81.1379, -63.6999, 0.12 ) }
    dend_72 { pt3dadd( -138.713, 83.728, -63.8854, 0.12 ) }
    dend_72 { pt3dadd( -138.794, 83.9899, -63.8805, 0.48 ) }
    dend_72 { pt3dadd( -138.909, 84.4491, -63.8154, 0.96 ) }
    dend_72 { pt3dadd( -139.07, 85.1274, -63.6975, 0.12 ) }
    dend_72 { pt3dadd( -139.419, 86.7222, -63.3716, 0.12 ) }
    dend_72 { pt3dadd( -139.475, 86.954, -63.311, 0.72 ) }
    dend_72 { pt3dadd( -139.784, 88.1123, -62.9496, 0.12 ) }
    dend_72 { pt3dadd( -140.149, 89.2978, -62.5772, 0.12 ) }
    dend_72 { pt3dadd( -140.416, 89.9009, -62.3939, 0.6 ) }
    dend_72 { pt3dadd( -140.597, 90.2274, -62.2984, 0.12 ) }
    dend_72 { pt3dadd( -141.806, 91.9769, -61.8304, 0.12 ) }
    dend_72 { pt3dadd( -142.041, 92.2722, -61.7704, 0.84 ) }
    dend_72 { pt3dadd( -142.664, 92.9519, -61.6865, 0.12 ) }
    dend_72 { pt3dadd( -144.278, 94.4965, -61.5398, 0.12 ) }
    dend_72 { pt3dadd( -144.463, 94.6626, -61.5195, 0.6 ) }
    dend_72 { pt3dadd( -144.995, 95.1311, -61.4553, 0.12 ) }
    dend_72 { pt3dadd( -145.86, 95.8987, -61.3535, 0.12 ) }
    dend_72 { pt3dadd( -146.301, 96.3627, -61.2729, 0.6 ) }
    dend_72 { pt3dadd( -146.586, 96.7433, -61.1932, 0.12 ) }
    dend_72 { pt3dadd( -147.24, 97.9252, -60.7797, 0.12 ) }
    dend_72 { pt3dadd( -147.395, 98.2523, -60.6416, 0.36 ) }
    dend_72 { pt3dadd( -147.602, 98.7889, -60.3892, 0.12 ) }
    dend_72 { pt3dadd( -147.952, 100.003, -59.8222, 0.12 ) }
    dend_72 { pt3dadd( -148.086, 100.549, -59.5708, 0.48 ) }
    dend_72 { pt3dadd( -148.512, 102.363, -58.7825, 0.12 ) }
    dend_72 { pt3dadd( -148.663, 102.995, -58.5472, 0.48 ) }
    dend_72 { pt3dadd( -148.813, 103.59, -58.3344, 0.12 ) }
    dend_72 { pt3dadd( -149.238, 105.193, -57.7842, 0.12 ) }
    dend_72 { pt3dadd( -149.49, 105.97, -57.5624, 0.48 ) }
    dend_72 { pt3dadd( -149.731, 106.594, -57.4304, 0.12 ) }
    dend_72 { pt3dadd( -150.404, 108.049, -57.2728, 0.12 ) }
    dend_72 { pt3dadd( -150.482, 108.181, -57.269, 0.6 ) }
    dend_72 { pt3dadd( -150.63, 108.377, -57.2805, 0.12 ) }
    dend_72 { pt3dadd( -152.122, 109.933, -57.5445, 0.12 ) }
    dend_72 { pt3dadd( -152.419, 110.178, -57.6144, 0.48 ) }
    dend_72 { pt3dadd( -153.235, 110.738, -57.8099, 0.12 ) }
    dend_72 { pt3dadd( -154.538, 111.475, -58.1385, 0.12 ) }
    dend_72 { pt3dadd( -155.024, 111.736, -58.2635, 0.6 ) }
    dend_72 { pt3dadd( -155.691, 112.068, -58.44, 0.24 ) }
    dend_72 { pt3dadd( -157.729, 112.909, -59.001, 0.12 ) }
    dend_72 { pt3dadd( -158.572, 113.245, -59.2211, 0.48 ) }
    dend_72 { pt3dadd( -159.487, 113.573, -59.428, 0.12 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 85/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -8.14722, 7.12978, -9.06378, 1.92 ) }
    dend_61 { pt3dadd( -9.59967, 7.63289, -9.16322, 1.92 ) }
    dend_61 { pt3dadd( -12.7487, 8.7237, -9.37881, 1.68 ) }
    dend_61 { pt3dadd( -14.723, 9.40754, -9.51398, 1.68 ) }
    dend_61 { pt3dadd( -17.3052, 10.302, -9.69076, 1.68 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 90/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.74278, -4.06322, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 8.17352, -5.70915, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 8.84772, -8.28543, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 9.28826, -9.96883, 3.55622, 2.4 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.17722, 9.29424, 8.44622, 1.44 ) }
    dend_47 { pt3dadd( -3.63251, 10.9446, 12.1166, 1.44 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.34278, 8.11453, 5.94622, 1.8 ) }
    dend_30 { pt3dadd( 1.39463, 8.7993, 6.22707, 1.8 ) }
    dend_30 { pt3dadd( 1.36094, 10.0361, 6.66774, 1.56 ) }
    dend_30 { pt3dadd( 1.22452, 11.837, 7.30734, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 1.00479, 13.9838, 8.12192, 1.44 ) }
    dend_30 { pt3dadd( 0.928478, 14.625, 8.36297, 1.44 ) }
    dend_30 { pt3dadd( 0.740242, 16.2065, 8.95755, 1.32 ) }
    dend_30 { pt3dadd( 0.268212, 19.4229, 10.1912, 1.2 ) }
    dend_30 { pt3dadd( 0.0561082, 20.5919, 10.6425, 1.2 ) }
    dend_30 { pt3dadd( -0.232457, 21.8729, 11.0988, 1.2 ) }
    dend_30 { pt3dadd( -0.613286, 23.2844, 11.6027, 1.2 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 7/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.91278, 6.87628, 0.266218, 2.4 ) }
    dend_13 { pt3dadd( 8.64228, 7.87243, 0.266218, 2.4 ) }
    dend_13 { pt3dadd( 11.8312, 9.70914, 0.266218, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.167218, -12.7895, 3.95622, 3.0 ) }
    dend_0 { pt3dadd( -0.053829, -13.5855, 3.95622, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.37163, 12.8669, -5.17545, 0.849002 ) }
    axon_0 { pt3dadd( -4.58569, 27.7026, -5.17545, 0.849002 ) }
    axon_0 { pt3dadd( -6.79974, 42.5383, -5.17545, 0.849002 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 3.37397, 11.5514, -10.0838, 0.96 ) }
    dend_77 { pt3dadd( 2.69598, 12.2795, -12.2495, 0.96 ) }
    dend_77 { pt3dadd( 2.34336, 12.6534, -13.2683, 0.96 ) }
    dend_77 { pt3dadd( 1.42099, 14.1581, -17.0964, 0.96 ) }
    dend_77 { pt3dadd( 0.953804, 15.1222, -19.4004, 1.44 ) }
    dend_77 { pt3dadd( 0.365394, 16.4697, -22.5603, 1.44 ) }
    dend_77 { pt3dadd( 0.0758776, 17.2023, -24.2181, 0.96 ) }
    dend_77 { pt3dadd( -0.144993, 17.8691, -25.7411, 0.96 ) }
    dend_77 { pt3dadd( -0.476025, 19.5713, -29.3631, 0.96 ) }
    dend_77 { pt3dadd( -0.489077, 20.1057, -30.2866, 0.48 ) }
    dend_77 { pt3dadd( -0.388167, 20.7313, -31.3119, 0.24 ) }
    dend_77 { pt3dadd( -0.240327, 21.4134, -32.3266, 0.36 ) }
    dend_77 { pt3dadd( -0.034044, 22.1646, -33.4311, 0.96 ) }
    dend_77 { pt3dadd( 0.133058, 22.5017, -34.1299, 0.96 ) }
    dend_77 { pt3dadd( 0.359035, 22.9728, -35.2203, 0.36 ) }
    dend_77 { pt3dadd( 0.797099, 23.4343, -36.6595, 0.36 ) }
    dend_77 { pt3dadd( 1.10464, 23.7006, -37.5365, 1.08 ) }
    dend_77 { pt3dadd( 1.48492, 24.0077, -38.525, 1.08 ) }
    dend_77 { pt3dadd( 3.6599, 25.7884, -43.9424, 0.36 ) }
    dend_77 { pt3dadd( 4.26332, 26.2925, -45.3422, 1.08 ) }
    dend_77 { pt3dadd( 6.16149, 28.4374, -49.1949, 0.36 ) }
    dend_77 { pt3dadd( 6.6785, 29.1778, -50.1143, 0.36 ) }
    dend_77 { pt3dadd( 7.27564, 30.2129, -51.1034, 1.32 ) }
    dend_77 { pt3dadd( 7.5044, 30.7338, -51.4844, 1.32 ) }
    dend_77 { pt3dadd( 8.01327, 32.6663, -52.4492, 0.36 ) }
    dend_77 { pt3dadd( 9.06893, 38.3162, -54.8758, 0.24 ) }
    dend_77 { pt3dadd( 9.40445, 41.5411, -56.0139, 0.72 ) }
    dend_77 { pt3dadd( 9.42817, 42.4173, -56.318, 0.96 ) }
    dend_77 { pt3dadd( 9.32131, 44.4201, -57.0049, 0.24 ) }
    dend_77 { pt3dadd( 8.93804, 48.0527, -58.3488, 0.12 ) }
    dend_77 { pt3dadd( 8.76478, 48.9973, -58.7186, 0.72 ) }
    dend_77 { pt3dadd( 8.38155, 50.4455, -59.3632, 0.12 ) }
    dend_77 { pt3dadd( 7.26031, 54.2091, -60.9898, 0.12 ) }
    dend_77 { pt3dadd( 6.9672, 55.2693, -61.4775, 0.48 ) }
    dend_77 { pt3dadd( 6.35455, 57.6335, -62.6411, 0.12 ) }
    dend_77 { pt3dadd( 6.26692, 58.0235, -62.8751, 0.12 ) }
    dend_77 { pt3dadd( 6.1035, 59.0155, -63.4805, 1.08 ) }
    dend_77 { pt3dadd( 5.99171, 59.9194, -64.0277, 0.12 ) }
    dend_77 { pt3dadd( 5.85329, 62.2902, -65.4429, 0.12 ) }
    dend_77 { pt3dadd( 5.79187, 63.2723, -65.9761, 0.72 ) }
    dend_77 { pt3dadd( 5.65436, 65.5091, -67.2072, 0.12 ) }
    dend_77 { pt3dadd( 5.55639, 68.4523, -68.9369, 0.12 ) }
    dend_77 { pt3dadd( 5.52595, 69.5792, -69.6045, 0.96 ) }
    dend_77 { pt3dadd( 5.49322, 70.971, -70.4235, 0.12 ) }
    dend_77 { pt3dadd( 5.44101, 72.875, -71.5077, 0.12 ) }
    dend_77 { pt3dadd( 5.40579, 75.0948, -72.7646, 0.84 ) }
    dend_77 { pt3dadd( 5.37783, 75.7559, -73.1228, 0.12 ) }
    dend_77 { pt3dadd( 5.29762, 78.6893, -74.7926, 0.12 ) }
    dend_77 { pt3dadd( 5.28445, 79.1578, -75.0381, 0.96 ) }
    dend_77 { pt3dadd( 5.22776, 80.3263, -75.5881, 0.12 ) }
    dend_77 { pt3dadd( 5.08304, 82.8391, -76.6719, 0.12 ) }
    dend_77 { pt3dadd( 5.03818, 83.9596, -77.1555, 0.84 ) }
    dend_77 { pt3dadd( 5.02574, 85.0021, -77.6422, 0.12 ) }
    dend_77 { pt3dadd( 5.12217, 87.5146, -79.0463, 0.12 ) }
    dend_77 { pt3dadd( 5.14459, 88.4181, -79.5717, 0.96 ) }
    dend_77 { pt3dadd( 5.16294, 89.5196, -80.2203, 0.12 ) }
    dend_77 { pt3dadd( 5.16531, 93.4924, -82.5042, 0.12 ) }
    dend_77 { pt3dadd( 5.16028, 94.6013, -83.1731, 0.72 ) }
    dend_77 { pt3dadd( 5.08534, 97.0685, -84.7178, 0.12 ) }
    dend_77 { pt3dadd( 4.97291, 100.29, -86.9303, 0.12 ) }
    dend_77 { pt3dadd( 4.94521, 100.618, -87.1321, 0.84 ) }
    dend_77 { pt3dadd( 4.77797, 101.768, -87.7553, 0.72 ) }
    dend_77 { pt3dadd( 4.00389, 105.353, -89.3008, 0.12 ) }
    dend_77 { pt3dadd( 3.81056, 106.51, -89.9017, 0.6 ) }
    dend_77 { pt3dadd( 3.45591, 109.21, -91.4568, 0.12 ) }
    dend_77 { pt3dadd( 3.20456, 112.95, -94.0646, 0.12 ) }
    dend_77 { pt3dadd( 3.17939, 113.778, -94.6925, 0.6 ) }
    dend_77 { pt3dadd( 3.15875, 114.942, -95.535, 0.12 ) }
    dend_77 { pt3dadd( 3.14886, 120.909, -99.661, 0.12 ) }
    dend_77 { pt3dadd( 3.16708, 122.539, -100.721, 0.12 ) }
    dend_77 { pt3dadd( 3.2091, 123.305, -101.244, 0.84 ) }
    dend_77 { pt3dadd( 3.28118, 124.099, -101.829, 0.24 ) }
    dend_77 { pt3dadd( 3.56675, 128.633, -104.865, 0.12 ) }
    dend_77 { pt3dadd( 3.56785, 129.084, -105.126, 0.6 ) }
    dend_77 { pt3dadd( 3.47344, 130.308, -105.672, 0.12 ) }
    dend_77 { pt3dadd( 3.18248, 134.202, -107.512, 0.12 ) }
    dend_77 { pt3dadd( 3.01701, 135.819, -108.311, 0.48 ) }
    dend_77 { pt3dadd( 2.8502, 136.781, -108.811, 0.12 ) }
    dend_77 { pt3dadd( 2.58877, 138.118, -109.59, 0.12 ) }
    dend_77 { pt3dadd( 2.40721, 138.916, -110.043, 0.6 ) }
    dend_77 { pt3dadd( 2.18273, 139.819, -110.536, 0.12 ) }
    dend_77 { pt3dadd( 1.73249, 141.686, -111.365, 0.12 ) }
    dend_77 { pt3dadd( 1.24949, 144.141, -112.42, 0.12 ) }
    dend_77 { pt3dadd( 0.903777, 146.414, -113.344, 0.36 ) }
    dend_77 { pt3dadd( 0.781162, 147.538, -113.811, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_77 { pt3dadd( 0.570241, 150.22, -114.93, 0.12 ) }
    dend_77 { pt3dadd( 0.374105, 154.471, -116.666, 0.12 ) }
    dend_77 { pt3dadd( 0.352145, 155.678, -117.125, 0.84 ) }
    dend_77 { pt3dadd( 0.351439, 156.543, -117.418, 0.12 ) }
    dend_77 { pt3dadd( 0.277252, 158.984, -118.16, 0.12 ) }
    dend_77 { pt3dadd( 0.269777, 159.602, -118.366, 0.96 ) }
    dend_77 { pt3dadd( 0.260253, 160.472, -118.682, 0.24 ) }
    dend_77 { pt3dadd( 0.21978, 163.202, -119.851, 0.24 ) }
    dend_77 { pt3dadd( 0.186485, 164.084, -120.281, 0.72 ) }
    dend_77 { pt3dadd( 0.140871, 164.783, -120.639, 0.12 ) }
    dend_77 { pt3dadd( 0.036136, 166.918, -121.837, 0.12 ) }
    dend_77 { pt3dadd( 0.0265236, 167.252, -122.04, 0.96 ) }
    dend_77 { pt3dadd( 0.0133183, 168.688, -122.942, 0.12 ) }
    dend_77 { pt3dadd( 0.036104, 170.574, -124.132, 0.12 ) }
    dend_77 { pt3dadd( 0.111421, 171.774, -125.001, 0.24 ) }
    dend_77 { pt3dadd( 0.285801, 174.063, -126.753, 0.12 ) }
    dend_77 { pt3dadd( 0.36337, 175.424, -127.832, 0.12 ) }
    dend_77 { pt3dadd( 0.390857, 176.403, -128.686, 0.72 ) }
    dend_77 { pt3dadd( 0.370752, 177.297, -129.531, 0.12 ) }
    dend_77 { pt3dadd( 0.0277164, 181.373, -133.865, 0.12 ) }
    dend_77 { pt3dadd( -0.109891, 182.192, -134.843, 0.6 ) }
    dend_77 { pt3dadd( -0.316113, 182.908, -135.781, 0.12 ) }
    dend_77 { pt3dadd( -1.04962, 184.811, -138.412, 0.12 ) }
    dend_77 { pt3dadd( -1.43149, 185.587, -139.51, 0.6 ) }
    dend_77 { pt3dadd( -2.47181, 187.291, -141.952, 0.12 ) }
    dend_77 { pt3dadd( -2.87914, 187.863, -142.692, 0.6 ) }
    dend_77 { pt3dadd( -3.31132, 188.508, -143.501, 0.12 ) }
    dend_77 { pt3dadd( -4.1448, 189.733, -144.979, 0.12 ) }
    dend_77 { pt3dadd( -4.50713, 190.158, -145.48, 0.48 ) }
    dend_77 { pt3dadd( -5.82817, 191.531, -147.128, 0.12 ) }
    dend_77 { pt3dadd( -6.62135, 192.244, -147.965, 0.12 ) }
    dend_77 { pt3dadd( -7.22252, 192.752, -148.614, 0.96 ) }
    dend_77 { pt3dadd( -8.2221, 193.515, -149.602, 0.12 ) }
    dend_77 { pt3dadd( -10.25, 194.956, -151.492, 0.12 ) }
    dend_77 { pt3dadd( -10.828, 195.351, -151.991, 0.72 ) }
    dend_77 { pt3dadd( -11.5522, 195.806, -152.55, 0.12 ) }
    dend_77 { pt3dadd( -13.4045, 196.937, -153.945, 0.12 ) }
    dend_77 { pt3dadd( -16.97, 199.151, -156.541, 0.12 ) }
    dend_77 { pt3dadd( -17.3596, 199.4, -156.812, 0.84 ) }
    dend_77 { pt3dadd( -18.2675, 199.989, -157.411, 0.12 ) }
    dend_77 { pt3dadd( -20.3772, 201.321, -158.855, 0.12 ) }
    dend_77 { pt3dadd( -20.7146, 201.525, -159.095, 0.72 ) }
    dend_77 { pt3dadd( -22.912, 202.757, -160.678, 0.12 ) }
    dend_77 { pt3dadd( -24.2397, 203.5, -161.824, 0.12 ) }
    dend_77 { pt3dadd( -25.1798, 204.038, -162.724, 0.6 ) }
    dend_77 { pt3dadd( -26.7948, 205.18, -164.972, 0.12 ) }
    dend_77 { pt3dadd( -27.2425, 205.585, -165.799, 0.12 ) }
    dend_77 { pt3dadd( -27.5893, 205.934, -166.551, 0.6 ) }
    dend_77 { pt3dadd( -28.3179, 206.872, -168.76, 0.12 ) }
    dend_77 { pt3dadd( -28.4799, 207.138, -169.433, 0.48 ) }
    dend_77 { pt3dadd( -29.2757, 208.943, -174.143, 0.12 ) }
    dend_77 { pt3dadd( -29.4463, 209.692, -175.962, 0.12 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 52/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 3.37397, 11.5514, -10.0838, 1.08 ) }
    dend_74 { pt3dadd( 5.79767, 13.016, -10.4143, 1.08 ) }
    dend_74 { pt3dadd( 8.46815, 14.8676, -10.9838, 1.08 ) }
    dend_74 { pt3dadd( 11.4242, 17.2381, -11.7882, 1.08 ) }
    dend_74 { pt3dadd( 13.2208, 18.8125, -12.3265, 1.08 ) }
    dend_74 { pt3dadd( 15.9397, 21.2451, -13.1721, 0.84 ) }
    dend_74 { pt3dadd( 19.5256, 24.5344, -14.4604, 0.84 ) }
    dend_74 { pt3dadd( 20.4696, 25.5906, -14.9193, 0.84 ) }
    dend_74 { pt3dadd( 21.4543, 26.9189, -15.5445, 1.2 ) }
    dend_74 { pt3dadd( 21.9621, 27.7493, -16.0278, 1.2 ) }
    dend_74 { pt3dadd( 23.0484, 29.9912, -17.4438, 0.48 ) }
    dend_74 { pt3dadd( 23.8374, 31.9868, -18.6953, 0.48 ) }
    dend_74 { pt3dadd( 24.2264, 33.1152, -19.279, 1.32 ) }
    dend_74 { pt3dadd( 24.7109, 34.3572, -19.9086, 1.32 ) }
    dend_74 { pt3dadd( 26.05, 37.4909, -21.4431, 0.6 ) }
    dend_74 { pt3dadd( 26.8032, 39.5369, -22.4319, 0.6 ) }
    dend_74 { pt3dadd( 27.476, 41.8911, -23.4758, 0.48 ) }
    dend_74 { pt3dadd( 27.5894, 42.2715, -23.6153, 0.48 ) }
    dend_74 { pt3dadd( 28.3315, 44.251, -24.2837, 1.2 ) }
    dend_74 { pt3dadd( 28.9745, 45.4969, -24.5573, 1.2 ) }
    // Section: dend_67, id: dend_67, parent: dend_61 (entry count 72/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -17.3052, 10.302, -9.69076, 1.56 ) }
    dend_67 { pt3dadd( -18.6762, 11.4199, -12.3325, 1.56 ) }
    dend_67 { pt3dadd( -20.1058, 12.4745, -14.6071, 1.56 ) }
    dend_67 { pt3dadd( -20.6689, 12.9132, -15.4261, 1.32 ) }
    dend_67 { pt3dadd( -21.4357, 13.5164, -16.4763, 1.32 ) }
    dend_67 { pt3dadd( -22.3973, 14.227, -17.7795, 1.32 ) }
    dend_67 { pt3dadd( -23.5506, 14.9968, -19.2981, 1.32 ) }
    dend_67 { pt3dadd( -24.7081, 15.5994, -20.5892, 1.08 ) }
    dend_67 { pt3dadd( -25.825, 16.1012, -21.8235, 1.08 ) }
    dend_67 { pt3dadd( -26.3688, 16.3162, -22.4853, 1.08 ) }
    dend_67 { pt3dadd( -27.5537, 16.7414, -24.0012, 1.08 ) }
    dend_67 { pt3dadd( -28.0814, 16.9269, -24.7759, 1.08 ) }
    dend_67 { pt3dadd( -29.2055, 17.2967, -26.4581, 1.08 ) }
    dend_67 { pt3dadd( -30.0154, 17.5525, -27.6923, 1.08 ) }
    dend_67 { pt3dadd( -30.8266, 17.8183, -28.9555, 1.08 ) }
    dend_67 { pt3dadd( -31.1315, 17.9395, -29.4311, 1.08 ) }
    dend_67 { pt3dadd( -32.6127, 18.6239, -31.6635, 1.08 ) }
    dend_67 { pt3dadd( -33.8907, 19.295, -33.5121, 1.08 ) }
    dend_67 { pt3dadd( -34.754, 19.7853, -34.7114, 1.08 ) }
    dend_67 { pt3dadd( -36.4427, 20.7933, -37.031, 1.08 ) }
    dend_67 { pt3dadd( -37.1099, 21.2268, -37.9385, 1.08 ) }
    dend_67 { pt3dadd( -37.854, 21.7505, -38.9457, 1.08 ) }
    dend_67 { pt3dadd( -38.7218, 22.3768, -39.9912, 1.08 ) }
    dend_67 { pt3dadd( -39.8668, 23.2051, -41.2893, 0.36 ) }
    dend_67 { pt3dadd( -40.8661, 23.9184, -42.2731, 1.08 ) }
    dend_67 { pt3dadd( -41.5522, 24.3812, -42.869, 1.08 ) }
    dend_67 { pt3dadd( -43.5511, 25.6119, -44.501, 0.24 ) }
    dend_67 { pt3dadd( -44.9359, 26.4055, -45.5887, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_67 { pt3dadd( -46.5308, 27.2258, -46.7458, 0.12 ) }
    dend_67 { pt3dadd( -48.1261, 27.9669, -47.7922, 0.12 ) }
    dend_67 { pt3dadd( -49.9583, 28.7036, -48.9253, 0.12 ) }
    dend_67 { pt3dadd( -51.2935, 29.1738, -49.7219, 0.48 ) }
    dend_67 { pt3dadd( -51.5944, 29.2629, -49.8861, 1.32 ) }
    dend_67 { pt3dadd( -52.4707, 29.5081, -50.4107, 1.32 ) }
    dend_67 { pt3dadd( -53.3901, 29.7649, -50.9836, 1.32 ) }
    dend_67 { pt3dadd( -55.3702, 30.3333, -52.2643, 0.96 ) }
    dend_67 { pt3dadd( -55.9459, 30.5341, -52.5899, 0.96 ) }
    dend_67 { pt3dadd( -57.0235, 30.9326, -53.2253, 0.48 ) }
    dend_67 { pt3dadd( -58.746, 31.5907, -54.2394, 0.48 ) }
    dend_67 { pt3dadd( -59.6618, 31.9567, -54.7777, 1.2 ) }
    dend_67 { pt3dadd( -60.5029, 32.326, -55.292, 0.36 ) }
    dend_67 { pt3dadd( -62.4634, 33.3097, -56.6316, 0.36 ) }
    dend_67 { pt3dadd( -64.4185, 34.3608, -58.0968, 0.36 ) }
    dend_67 { pt3dadd( -64.9105, 34.6508, -58.4929, 1.08 ) }
    dend_67 { pt3dadd( -65.7007, 35.1724, -59.1366, 0.48 ) }
    dend_67 { pt3dadd( -67.4112, 36.4452, -60.5993, 0.36 ) }
    dend_67 { pt3dadd( -68.8286, 37.6786, -61.9782, 0.36 ) }
    dend_67 { pt3dadd( -69.3343, 38.2058, -62.5226, 1.2 ) }
    dend_67 { pt3dadd( -69.8788, 38.8802, -63.0963, 1.2 ) }
    dend_67 { pt3dadd( -70.6413, 39.9463, -63.8952, 1.2 ) }
    dend_67 { pt3dadd( -71.0494, 40.5482, -64.3395, 0.96 ) }
    dend_67 { pt3dadd( -71.8981, 41.8245, -65.2266, 0.24 ) }
    dend_67 { pt3dadd( -72.5163, 42.7287, -65.8502, 0.24 ) }
    dend_67 { pt3dadd( -72.96, 43.3276, -66.2943, 1.2 ) }
    dend_67 { pt3dadd( -73.696, 44.2914, -67.0333, 0.12 ) }
    dend_67 { pt3dadd( -75.2641, 46.3641, -68.6242, 0.12 ) }
    dend_67 { pt3dadd( -75.5357, 46.7369, -68.8913, 0.12 ) }
    dend_67 { pt3dadd( -75.8884, 47.2401, -69.2493, 0.84 ) }
    dend_67 { pt3dadd( -76.5562, 48.1852, -69.9582, 0.12 ) }
    dend_67 { pt3dadd( -77.2396, 49.0974, -70.6252, 0.12 ) }
    dend_67 { pt3dadd( -77.8676, 49.8369, -71.2362, 0.12 ) }
    dend_67 { pt3dadd( -78.144, 50.159, -71.4767, 0.96 ) }
    dend_67 { pt3dadd( -79.307, 51.3787, -72.4056, 0.12 ) }
    dend_67 { pt3dadd( -79.9106, 51.9321, -72.8886, 0.12 ) }
    dend_67 { pt3dadd( -80.8298, 52.6403, -73.57, 1.32 ) }
    dend_67 { pt3dadd( -82.9687, 54.0645, -75.0585, 0.36 ) }
    dend_67 { pt3dadd( -84.4037, 55.0158, -76.0699, 0.36 ) }
    dend_67 { pt3dadd( -85.3644, 55.7044, -76.7765, 1.2 ) }
    dend_67 { pt3dadd( -86.8209, 56.89, -77.9837, 0.36 ) }
    dend_67 { pt3dadd( -87.4498, 57.5213, -78.6339, 0.36 ) }
    dend_67 { pt3dadd( -87.7696, 57.9274, -79.0409, 0.36 ) }
    dend_67 { pt3dadd( -88.4092, 58.9335, -79.9436, 0.36 ) }
    dend_67 { pt3dadd( -88.6992, 59.4815, -80.5291, 1.32 ) }
    dend_67 { pt3dadd( -89.2827, 60.9377, -82.0116, 0.36 ) }
    dend_67 { pt3dadd( -89.4978, 61.5082, -82.5571, 0.36 ) }
    dend_67 { pt3dadd( -89.6012, 61.7179, -82.7817, 0.36 ) }
    dend_67 { pt3dadd( -89.9198, 62.2141, -83.3226, 1.08 ) }
    dend_67 { pt3dadd( -90.7479, 63.173, -84.3982, 0.24 ) }
    dend_67 { pt3dadd( -91.5363, 63.9378, -85.2594, 0.24 ) }
    dend_67 { pt3dadd( -92.347, 64.6775, -86.0813, 1.2 ) }
    dend_67 { pt3dadd( -93.5209, 65.7048, -87.2981, 0.36 ) }
    dend_67 { pt3dadd( -94.3093, 66.3898, -88.1301, 0.36 ) }
    dend_67 { pt3dadd( -95.1043, 67.0766, -88.9752, 1.32 ) }
    dend_67 { pt3dadd( -95.5135, 67.3974, -89.351, 1.32 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 56/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -17.3052, 10.302, -9.69076, 1.08 ) }
    dend_62 { pt3dadd( -19.6609, 11.2284, -9.96578, 1.08 ) }
    dend_62 { pt3dadd( -21.2878, 11.8156, -10.1199, 1.08 ) }
    dend_62 { pt3dadd( -23.8173, 12.7435, -10.3211, 1.08 ) }
    dend_62 { pt3dadd( -26.246, 13.5864, -10.4839, 1.08 ) }
    dend_62 { pt3dadd( -34.4344, 16.278, -11.0022, 1.08 ) }
    dend_62 { pt3dadd( -40.749, 18.3536, -11.4019, 1.08 ) }
    dend_62 { pt3dadd( -46.1172, 20.115, -11.7488, 1.08 ) }
    dend_62 { pt3dadd( -51.1135, 21.7247, -12.0675, 1.08 ) }
    dend_62 { pt3dadd( -54.39, 22.7591, -12.2652, 1.08 ) }
    dend_62 { pt3dadd( -62.1562, 25.0555, -12.6344, 1.08 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 67/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 9.28826, -9.96883, 3.55622, 1.68 ) }
    dend_60 { pt3dadd( 12.4561, -10.141, 5.93387, 1.68 ) }
    dend_60 { pt3dadd( 16.2417, -10.1049, 8.5842, 0.96 ) }
    dend_60 { pt3dadd( 21.3206, -10.0067, 12.1838, 0.96 ) }
    dend_60 { pt3dadd( 24.1626, -10.0833, 14.2039, 0.96 ) }
    dend_60 { pt3dadd( 29.7043, -10.3067, 18.2889, 0.96 ) }
    dend_60 { pt3dadd( 33.2468, -10.4553, 20.957, 0.96 ) }
    dend_60 { pt3dadd( 35.8557, -10.5487, 22.8101, 0.96 ) }
    dend_60 { pt3dadd( 41.577, -10.7124, 27.0028, 0.84 ) }
    dend_60 { pt3dadd( 45.53, -10.7759, 30.0221, 0.84 ) }
    dend_60 { pt3dadd( 49.034, -10.7547, 32.9102, 0.84 ) }
    dend_60 { pt3dadd( 52.496, -10.6521, 35.7998, 0.84 ) }
    dend_60 { pt3dadd( 56.3494, -10.6375, 38.999, 0.6 ) }
    dend_60 { pt3dadd( 59.9299, -10.6368, 41.826, 0.6 ) }
    dend_60 { pt3dadd( 61.4728, -10.5439, 42.9786, 0.96 ) }
    dend_60 { pt3dadd( 63.3287, -10.3274, 44.3232, 0.48 ) }
    dend_60 { pt3dadd( 65.534, -10.1352, 45.7957, 0.12 ) }
    dend_60 { pt3dadd( 68.6604, -9.94905, 47.8433, 0.24 ) }
    dend_60 { pt3dadd( 72.5393, -9.91375, 50.3539, 0.24 ) }
    dend_60 { pt3dadd( 81.6975, -11.419, 58.1879, 0.24 ) }
    dend_60 { pt3dadd( 91.812, -12.6775, 64.7927, 0.24 ) }
    dend_60 { pt3dadd( 102.98, -11.3625, 69.377, 0.24 ) }
    dend_60 { pt3dadd( 113.667, -11.8797, 75.1274, 0.24 ) }
    dend_60 { pt3dadd( 122.676, -11.502, 83.2639, 0.24 ) }
    dend_60 { pt3dadd( 131.278, -12.5452, 91.7774, 0.24 ) }
    dend_60 { pt3dadd( 140.55, -12.1712, 99.6132, 0.24 ) }
    dend_60 { pt3dadd( 149.776, -9.85577, 107.141, 0.24 ) }
    dend_60 { pt3dadd( 158.361, -5.90761, 114.708, 0.24 ) }
    dend_60 { pt3dadd( 166.277, -4.60963, 123.816, 0.24 ) }
    dend_60 { pt3dadd( 175.936, -5.09976, 131.166, 0.24 ) }
    dend_60 { pt3dadd( 184.689, -7.19975, 139.317, 0.24 ) }
    dend_60 { pt3dadd( 191.195, -8.98862, 149.416, 0.24 ) }
    dend_60 { pt3dadd( 198.386, -11.9814, 158.726, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 205.654, -13.8498, 168.276, 0.24 ) }
    dend_60 { pt3dadd( 212.189, -17.165, 177.95, 0.24 ) }
    dend_60 { pt3dadd( 217.766, -22.4094, 187.334, 0.24 ) }
    dend_60 { pt3dadd( 222.708, -27.4562, 197.178, 0.24 ) }
    dend_60 { pt3dadd( 228.052, -30.7668, 207.561, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 9.28826, -9.96883, 3.55622, 1.92 ) }
    dend_57 { pt3dadd( 10.7133, -13.3603, 4.64452, 1.92 ) }
    dend_57 { pt3dadd( 12.2803, -17.0893, 5.84118, 1.32 ) }
    dend_57 { pt3dadd( 13.6733, -20.4046, 6.90504, 1.44 ) }
    dend_57 { pt3dadd( 14.5729, -22.5454, 7.59202, 1.44 ) }
    dend_57 { pt3dadd( 15.1817, -23.9943, 8.05697, 1.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 11/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -3.63251, 10.9446, 12.1166, 0.96 ) }
    dend_53 { pt3dadd( -3.76105, 12.316, 13.7516, 0.96 ) }
    dend_53 { pt3dadd( -4.1946, 13.6188, 15.4243, 0.6 ) }
    dend_53 { pt3dadd( -4.52618, 14.5172, 16.5923, 0.6 ) }
    dend_53 { pt3dadd( -4.9818, 15.8237, 18.2945, 0.6 ) }
    dend_53 { pt3dadd( -5.2344, 16.6879, 19.4895, 0.6 ) }
    dend_53 { pt3dadd( -5.56543, 17.8216, 21.0254, 0.6 ) }
    dend_53 { pt3dadd( -6.03023, 18.7243, 22.2583, 0.6 ) }
    dend_53 { pt3dadd( -6.34024, 19.1989, 22.9011, 0.6 ) }
    dend_53 { pt3dadd( -6.56382, 19.5618, 23.3418, 0.6 ) }
    dend_53 { pt3dadd( -7.26178, 21.0396, 24.8255, 0.6 ) }
    dend_53 { pt3dadd( -7.56957, 22.1021, 25.7899, 0.6 ) }
    dend_53 { pt3dadd( -7.79561, 23.4068, 26.7708, 0.6 ) }
    dend_53 { pt3dadd( -7.98901, 24.755, 27.6056, 0.6 ) }
    dend_53 { pt3dadd( -8.20724, 26.0526, 28.3736, 0.12 ) }
    dend_53 { pt3dadd( -8.4231, 27.3345, 29.0765, 0.12 ) }
    dend_53 { pt3dadd( -8.5837, 28.6241, 29.6765, 0.12 ) }
    dend_53 { pt3dadd( -8.60125, 30.2783, 30.4518, 0.12 ) }
    dend_53 { pt3dadd( -8.389, 32.2812, 31.298, 0.12 ) }
    dend_53 { pt3dadd( -11.3149, 37.0581, 35.8579, 0.12 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 31/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.63251, 10.9446, 12.1166, 1.08 ) }
    dend_48 { pt3dadd( -5.07328, 9.67674, 13.053, 1.08 ) }
    dend_48 { pt3dadd( -7.78972, 7.07798, 14.8227, 0.84 ) }
    dend_48 { pt3dadd( -10.1311, 4.72083, 16.3001, 0.84 ) }
    dend_48 { pt3dadd( -12.242, 2.76395, 17.6664, 0.84 ) }
    dend_48 { pt3dadd( -16.1555, -0.551686, 20.2717, 0.84 ) }
    dend_48 { pt3dadd( -18.3806, -2.26558, 21.6967, 0.84 ) }
    dend_48 { pt3dadd( -20.891, -4.09721, 23.1624, 0.84 ) }
    dend_48 { pt3dadd( -22.1322, -4.9817, 23.8116, 0.84 ) }
    dend_48 { pt3dadd( -24.8077, -6.87722, 25.1543, 0.84 ) }
    dend_48 { pt3dadd( -26.3462, -8.10757, 26.0779, 0.84 ) }
    dend_48 { pt3dadd( -29.1978, -10.7071, 27.9118, 0.84 ) }
    dend_48 { pt3dadd( -32.701, -13.7064, 29.9171, 0.84 ) }
    dend_48 { pt3dadd( -35.0892, -15.494, 31.1466, 0.84 ) }
    dend_48 { pt3dadd( -37.8436, -17.2897, 32.5856, 0.84 ) }
    dend_48 { pt3dadd( -41.2437, -19.2194, 34.3974, 0.84 ) }
    dend_48 { pt3dadd( -44.1727, -20.3693, 36.0639, 0.84 ) }
    dend_48 { pt3dadd( -47.564, -20.7888, 38.2713, 0.24 ) }
    dend_48 { pt3dadd( -51.4928, -20.1436, 40.9434, 0.36 ) }
    dend_48 { pt3dadd( -54.7956, -18.8025, 43.2373, 0.12 ) }
    dend_48 { pt3dadd( -57.1093, -17.2004, 44.9707, 0.12 ) }
    dend_48 { pt3dadd( -59.3095, -14.9186, 46.6887, 0.12 ) }
    dend_48 { pt3dadd( -60.4732, -12.9909, 47.9835, 0.12 ) }
    dend_48 { pt3dadd( -70.6375, -17.4432, 55.732, 0.12 ) }
    dend_48 { pt3dadd( -80.8137, -22.1058, 63.3335, 0.12 ) }
    dend_48 { pt3dadd( -89.4316, -28.7759, 71.279, 0.12 ) }
    dend_48 { pt3dadd( -97.9144, -34.8297, 79.8637, 0.12 ) }
    dend_48 { pt3dadd( -106.934, -39.4405, 88.8363, 0.12 ) }
    dend_48 { pt3dadd( -114.913, -46.0835, 97.445, 0.12 ) }
    dend_48 { pt3dadd( -122.321, -54.5578, 104.779, 0.12 ) }
    dend_48 { pt3dadd( -131.247, -63.0644, 110.107, 0.12 ) }
    dend_48 { pt3dadd( -138.869, -73.6957, 112.785, 0.12 ) }
    dend_48 { pt3dadd( -145.551, -84.8385, 115.771, 0.12 ) }
    dend_48 { pt3dadd( -153.057, -94.8264, 120.557, 0.12 ) }
    dend_48 { pt3dadd( -161.018, -104.107, 126.053, 0.12 ) }
    dend_48 { pt3dadd( -169.521, -112.015, 132.842, 0.12 ) }
    dend_48 { pt3dadd( -177.481, -121.377, 138.193, 0.12 ) }
    dend_48 { pt3dadd( -185.755, -131.003, 142.464, 0.12 ) }
    dend_48 { pt3dadd( -194.634, -139.763, 147.427, 0.12 ) }
    dend_48 { pt3dadd( -202.614, -147.727, 154.762, 0.12 ) }
    dend_48 { pt3dadd( -211.311, -155.713, 161.2, 0.12 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.613286, 23.2844, 11.6027, 0.72 ) }
    dend_32 { pt3dadd( -0.715385, 19.2423, 10.4693, 0.72 ) }
    dend_32 { pt3dadd( -0.884652, 15.2096, 9.12185, 0.72 ) }
    dend_32 { pt3dadd( -1.03853, 12.6556, 8.13593, 0.72 ) }
    dend_32 { pt3dadd( -1.23842, 9.40994, 6.86685, 0.72 ) }
    dend_32 { pt3dadd( -1.36889, 5.90245, 5.45144, 0.72 ) }
    dend_32 { pt3dadd( -1.49058, 2.63092, 4.13124, 0.72 ) }
    dend_32 { pt3dadd( -1.62078, 0.206078, 2.94668, 0.72 ) }
    dend_32 { pt3dadd( -1.83439, -3.74568, 0.884614, 0.72 ) }
    dend_32 { pt3dadd( -2.05593, -7.2563, -0.861152, 0.72 ) }
    dend_32 { pt3dadd( -2.37077, -10.8016, -2.60414, 0.72 ) }
    dend_32 { pt3dadd( -5.06559, -19.17, -7.67675, 0.72 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.613286, 23.2844, 11.6027, 1.2 ) }
    dend_31 { pt3dadd( -0.1179, 27.2166, 13.1025, 1.2 ) }
    dend_31 { pt3dadd( 0.282503, 30.9894, 14.3387, 1.08 ) }
    dend_31 { pt3dadd( 0.742517, 35.4722, 15.5941, 1.08 ) }
    dend_31 { pt3dadd( 1.07665, 39.0187, 16.4091, 1.08 ) }
    dend_31 { pt3dadd( 1.24856, 41.2421, 16.8779, 1.08 ) }
    dend_31 { pt3dadd( 1.3508, 43.2854, 17.2941, 0.84 ) }
    dend_31 { pt3dadd( 1.43195, 45.7099, 17.6438, 0.84 ) }
    dend_31 { pt3dadd( 1.43509, 48.4842, 17.9297, 0.84 ) }
    dend_31 { pt3dadd( 1.30352, 52.7083, 18.314, 0.84 ) }
    dend_31 { pt3dadd( 1.13547, 55.7205, 18.6595, 0.84 ) }
    dend_31 { pt3dadd( 0.866715, 58.5987, 19.0286, 0.84 ) }
    dend_31 { pt3dadd( 0.654889, 60.4728, 19.2799, 0.72 ) }
    dend_31 { pt3dadd( 0.272291, 63.581, 19.7217, 0.72 ) }
    dend_31 { pt3dadd( -0.087857, 66.0376, 20.0858, 0.72 ) }
    dend_31 { pt3dadd( -0.673203, 69.7093, 20.6306, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( -1.29437, 73.7314, 21.1389, 0.72 ) }
    dend_31 { pt3dadd( -1.68087, 76.306, 21.4472, 0.72 ) }
    dend_31 { pt3dadd( -0.548934, 86.7192, 21.1902, 0.72 ) }
    dend_31 { pt3dadd( 1.50659, 96.9429, 20.0845, 0.72 ) }
    dend_31 { pt3dadd( 5.49081, 106.365, 17.6137, 0.72 ) }
    dend_31 { pt3dadd( 9.45356, 115.9, 15.6033, 0.72 ) }
    dend_31 { pt3dadd( 12.3632, 125.892, 14.2308, 0.72 ) }
    dend_31 { pt3dadd( 16.0993, 135.588, 12.6428, 0.72 ) }
    dend_31 { pt3dadd( 19.7241, 145.357, 11.2796, 0.72 ) }
    dend_31 { pt3dadd( 24.8645, 154.543, 11.6686, 0.72 ) }
    dend_31 { pt3dadd( 30.64, 163.367, 11.9559, 0.72 ) }
    dend_31 { pt3dadd( 35.9351, 172.458, 12.5613, 0.72 ) }
    dend_31 { pt3dadd( 39.5536, 182.309, 13.0093, 0.72 ) }
    dend_31 { pt3dadd( 41.704, 192.504, 11.8078, 0.72 ) }
    dend_31 { pt3dadd( 42.6093, 202.94, 11.9374, 0.72 ) }
    dend_31 { pt3dadd( 44.6547, 213.178, 12.9097, 0.72 ) }
    dend_31 { pt3dadd( 44.7137, 223.483, 14.8402, 0.72 ) }
    dend_31 { pt3dadd( 46.3158, 233.033, 18.948, 0.72 ) }
    dend_31 { pt3dadd( 48.4619, 241.926, 24.2003, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.8312, 9.70914, 0.266218, 1.32 ) }
    dend_17 { pt3dadd( 12.065, 11.6866, 0.0592561, 1.32 ) }
    dend_17 { pt3dadd( 12.2955, 15.8773, -0.114781, 1.32 ) }
    dend_17 { pt3dadd( 12.3867, 17.9174, -0.110883, 1.32 ) }
    dend_17 { pt3dadd( 12.4192, 18.8213, -0.0154929, 1.32 ) }
    dend_17 { pt3dadd( 12.4782, 21.2093, 0.372652, 1.32 ) }
    dend_17 { pt3dadd( 12.5532, 24.0016, 0.908766, 1.2 ) }
    dend_17 { pt3dadd( 12.5759, 26.1688, 1.50315, 1.2 ) }
    dend_17 { pt3dadd( 12.5691, 28.9869, 2.44869, 1.2 ) }
    dend_17 { pt3dadd( 12.6475, 32.5442, 3.65116, 1.2 ) }
    dend_17 { pt3dadd( 12.797, 35.0163, 4.47005, 0.96 ) }
    dend_17 { pt3dadd( 13.1206, 38.9862, 5.74582, 0.96 ) }
    dend_17 { pt3dadd( 13.3119, 41.1974, 6.43107, 0.72 ) }
    dend_17 { pt3dadd( 13.7161, 46.3873, 7.95531, 0.72 ) }
    dend_17 { pt3dadd( 13.8889, 48.8912, 8.62166, 1.08 ) }
    dend_17 { pt3dadd( 14.0365, 51.1957, 9.12319, 0.48 ) }
    dend_17 { pt3dadd( 14.1723, 54.1159, 9.73282, 0.12 ) }
    dend_17 { pt3dadd( 14.193, 55.1985, 9.97196, 0.72 ) }
    dend_17 { pt3dadd( 14.1931, 56.0243, 10.1519, 1.08 ) }
    dend_17 { pt3dadd( 14.1711, 57.0243, 10.3981, 0.48 ) }
    dend_17 { pt3dadd( 14.0854, 58.3621, 10.7662, 0.48 ) }
    dend_17 { pt3dadd( 13.8982, 60.5711, 11.4436, 1.08 ) }
    dend_17 { pt3dadd( 13.7995, 63.2488, 12.3477, 0.36 ) }
    dend_17 { pt3dadd( 13.7536, 66.0034, 13.3299, 0.36 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.8312, 9.70914, 0.266218, 1.32 ) }
    dend_14 { pt3dadd( 13.0715, 9.10894, 0.12235, 1.32 ) }
    dend_14 { pt3dadd( 15.869, 7.84513, -0.295266, 1.08 ) }
    dend_14 { pt3dadd( 21.2061, 5.52542, -1.38076, 0.84 ) }
    dend_14 { pt3dadd( 26.3758, 3.42746, -2.5702, 0.6 ) }
    dend_14 { pt3dadd( 29.1068, 2.39118, -3.26387, 0.6 ) }
    dend_14 { pt3dadd( 33.3206, 0.760451, -4.35767, 0.6 ) }
    dend_14 { pt3dadd( 37.9947, -1.05243, -5.69989, 0.6 ) }
    dend_14 { pt3dadd( 43.3281, -3.06102, -7.42263, 0.6 ) }
    dend_14 { pt3dadd( 47.2913, -4.43086, -8.76183, 0.6 ) }
    dend_14 { pt3dadd( 53.913, -6.57323, -10.9912, 0.6 ) }
    dend_14 { pt3dadd( 56.9146, -7.49433, -11.9526, 0.6 ) }
    dend_14 { pt3dadd( 63.4031, -9.37837, -13.8462, 0.6 ) }
    dend_14 { pt3dadd( 69.4745, -11.1396, -15.7487, 0.6 ) }
    dend_14 { pt3dadd( 73.3043, -12.1368, -16.9274, 0.12 ) }
    dend_14 { pt3dadd( 74.46, -12.408, -17.2922, 0.12 ) }
    dend_14 { pt3dadd( 75.6297, -12.6117, -17.7063, 0.36 ) }
    dend_14 { pt3dadd( 75.9112, -12.6446, -17.8143, 0.84 ) }
    dend_14 { pt3dadd( 79.0911, -12.897, -19.078, 0.12 ) }
    dend_14 { pt3dadd( 81.5265, -13.1297, -20.1356, 0.12 ) }
    dend_14 { pt3dadd( 82.7893, -13.2741, -20.7461, 1.2 ) }
    dend_14 { pt3dadd( 86.1327, -13.6795, -22.3713, 0.12 ) }
    dend_14 { pt3dadd( 90.1031, -14.1888, -24.2444, 0.12 ) }
    dend_14 { pt3dadd( 91.1582, -14.328, -24.7231, 0.84 ) }
    dend_14 { pt3dadd( 91.7858, -14.4151, -24.9824, 0.12 ) }
    dend_14 { pt3dadd( 95.6733, -14.9597, -26.6605, 0.12 ) }
    dend_14 { pt3dadd( 95.8116, -14.9763, -26.7249, 0.72 ) }
    dend_14 { pt3dadd( 96.5144, -15.0441, -27.052, 0.12 ) }
    dend_14 { pt3dadd( 99.5756, -15.2254, -28.6171, 0.12 ) }
    dend_14 { pt3dadd( 100.567, -15.2705, -29.1239, 1.56 ) }
    dend_14 { pt3dadd( 103.792, -15.3648, -30.7132, 0.12 ) }
    dend_14 { pt3dadd( 107.99, -15.488, -32.5724, 0.12 ) }
    dend_14 { pt3dadd( 108.62, -15.5031, -32.8359, 0.84 ) }
    dend_14 { pt3dadd( 109.774, -15.5173, -33.2822, 0.84 ) }
    dend_14 { pt3dadd( 110.372, -15.5091, -33.5362, 0.84 ) }
    dend_14 { pt3dadd( 111.381, -15.4674, -34.0035, 0.12 ) }
    dend_14 { pt3dadd( 113.539, -15.3363, -35.0075, 0.12 ) }
    dend_14 { pt3dadd( 114.572, -15.2574, -35.4484, 0.72 ) }
    dend_14 { pt3dadd( 115.521, -15.2188, -35.8375, 0.12 ) }
    dend_14 { pt3dadd( 120.224, -15.1763, -37.6277, 0.12 ) }
    dend_14 { pt3dadd( 121.106, -15.1704, -37.9242, 0.72 ) }
    dend_14 { pt3dadd( 122.6, -15.1773, -38.3216, 0.12 ) }
    dend_14 { pt3dadd( 124.886, -15.3483, -38.9855, 0.12 ) }
    dend_14 { pt3dadd( 127.234, -15.6774, -39.6443, 0.12 ) }
    dend_14 { pt3dadd( 129.41, -16.0991, -40.3101, 0.84 ) }
    dend_14 { pt3dadd( 131.624, -16.6435, -40.9787, 0.12 ) }
    dend_14 { pt3dadd( 135.566, -17.7777, -42.3244, 0.12 ) }
    dend_14 { pt3dadd( 140.791, -19.5811, -44.5507, 0.6 ) }
    dend_14 { pt3dadd( 142.453, -20.2611, -45.4245, 0.12 ) }
    dend_14 { pt3dadd( 146.62, -22.1067, -48.1114, 0.12 ) }
    dend_14 { pt3dadd( 147.915, -22.7133, -49.0654, 0.84 ) }
    dend_14 { pt3dadd( 149.32, -23.4295, -50.2111, 0.12 ) }
    dend_14 { pt3dadd( 152.369, -25.0682, -53.015, 0.12 ) }
    dend_14 { pt3dadd( 154.082, -25.9517, -54.6348, 0.72 ) }
    dend_14 { pt3dadd( 156.559, -27.2829, -57.3104, 0.12 ) }
    dend_14 { pt3dadd( 157.267, -27.6975, -58.2121, 0.48 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.053829, -13.5855, 3.95622, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -1.47212, -14.9727, 6.2218, 0.96 ) }
    dend_12 { pt3dadd( -2.61576, -16.4988, 8.68754, 0.96 ) }
    dend_12 { pt3dadd( -3.65791, -18.1589, 11.2388, 0.96 ) }
    dend_12 { pt3dadd( -4.66117, -19.7541, 13.5598, 0.96 ) }
    dend_12 { pt3dadd( -4.97796, -20.2083, 14.1729, 1.08 ) }
    dend_12 { pt3dadd( -6.34217, -21.8354, 16.2484, 1.08 ) }
    dend_12 { pt3dadd( -7.38811, -23.0504, 17.741, 0.84 ) }
    dend_12 { pt3dadd( -7.95434, -23.7159, 18.5106, 0.84 ) }
    dend_12 { pt3dadd( -8.89101, -24.797, 19.7329, 0.84 ) }
    dend_12 { pt3dadd( -10.4985, -26.5772, 21.5477, 0.84 ) }
    dend_12 { pt3dadd( -12.1718, -28.6616, 23.6202, 0.84 ) }
    dend_12 { pt3dadd( -12.6697, -29.461, 24.357, 0.84 ) }
    dend_12 { pt3dadd( -13.3251, -31.0415, 25.8182, 0.84 ) }
    dend_12 { pt3dadd( -13.5483, -32.5799, 27.3208, 0.84 ) }
    dend_12 { pt3dadd( -13.3017, -34.5369, 29.2399, 0.84 ) }
    dend_12 { pt3dadd( -12.5219, -36.5786, 31.3558, 0.84 ) }
    dend_12 { pt3dadd( -11.1714, -38.6595, 33.7734, 0.84 ) }
    dend_12 { pt3dadd( -10.3956, -39.4742, 34.8949, 0.6 ) }
    dend_12 { pt3dadd( -8.48871, -41.0856, 37.2782, 0.48 ) }
    dend_12 { pt3dadd( -6.28608, -42.1671, 39.5215, 0.12 ) }
    dend_12 { pt3dadd( -4.04278, -42.411, 41.4315, 0.12 ) }
    dend_12 { pt3dadd( -1.93331, -41.8037, 42.7908, 0.12 ) }
    dend_12 { pt3dadd( -0.507552, -40.9704, 43.5116, 0.12 ) }
    dend_12 { pt3dadd( -2.10848, -46.653, 50.9661, 0.12 ) }
    dend_12 { pt3dadd( -5.0753, -51.8175, 58.4013, 0.12 ) }
    dend_12 { pt3dadd( -7.11547, -56.4994, 66.4565, 0.12 ) }
    dend_12 { pt3dadd( -9.2021, -60.6426, 74.8047, 0.12 ) }
    dend_12 { pt3dadd( -12.4958, -62.9407, 83.5055, 0.12 ) }
    dend_12 { pt3dadd( -16.6736, -65.7504, 91.6524, 0.12 ) }
    dend_12 { pt3dadd( -21.5358, -67.2666, 99.7797, 0.12 ) }
    dend_12 { pt3dadd( -26.5504, -68.5095, 107.863, 0.12 ) }
    dend_12 { pt3dadd( -29.9534, -71.8379, 116.163, 0.12 ) }
    dend_12 { pt3dadd( -34.2458, -73.4444, 124.587, 0.12 ) }
    dend_12 { pt3dadd( -37.9464, -73.1888, 133.437, 0.12 ) }
    dend_12 { pt3dadd( -41.8442, -74.5879, 142.088, 0.12 ) }
    dend_12 { pt3dadd( -46.6598, -78.1661, 149.538, 0.12 ) }
    dend_12 { pt3dadd( -51.7259, -81.3806, 156.996, 0.12 ) }
    dend_12 { pt3dadd( -57.5465, -84.9246, 163.711, 0.12 ) }
    dend_12 { pt3dadd( -64.8836, -87.455, 169.333, 0.12 ) }
    dend_12 { pt3dadd( -73.3256, -88.6489, 173.733, 0.12 ) }
    dend_12 { pt3dadd( -81.3686, -90.2264, 178.716, 0.12 ) }
    dend_12 { pt3dadd( -90.3802, -89.8344, 181.984, 0.12 ) }
    dend_12 { pt3dadd( -99.1573, -90.0388, 185.857, 0.12 ) }
    dend_12 { pt3dadd( -107.567, -89.7942, 190.471, 0.12 ) }
    dend_12 { pt3dadd( -116.705, -91.0841, 193.092, 0.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.053829, -13.5855, 3.95622, 2.16 ) }
    dend_1 { pt3dadd( 0.328959, -18.5934, 5.02387, 2.16 ) }
    dend_1 { pt3dadd( 0.706626, -23.5344, 6.07723, 2.04 ) }
    dend_1 { pt3dadd( 1.01386, -27.5538, 6.93414, 2.04 ) }
    dend_1 { pt3dadd( 1.19187, -29.8826, 7.43063, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.79974, 42.5383, -5.17545, 0.24 ) }
    axon_1 { pt3dadd( -9.0138, 57.374, -5.17545, 0.24 ) }
    axon_1 { pt3dadd( -11.2279, 72.2097, -5.17545, 0.24 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 53/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 28.9745, 45.4969, -24.5573, 0.6 ) }
    dend_76 { pt3dadd( 29.9531, 45.9954, -24.9645, 0.6 ) }
    dend_76 { pt3dadd( 31.0891, 46.6286, -25.3923, 0.6 ) }
    dend_76 { pt3dadd( 32.2149, 47.2673, -25.7589, 1.32 ) }
    dend_76 { pt3dadd( 33.294, 47.7893, -26.1803, 0.48 ) }
    dend_76 { pt3dadd( 37.4899, 49.6936, -27.8654, 0.48 ) }
    dend_76 { pt3dadd( 38.8373, 50.2909, -28.4001, 0.48 ) }
    dend_76 { pt3dadd( 40.171, 50.8632, -29.012, 1.08 ) }
    dend_76 { pt3dadd( 41.2403, 51.3305, -29.5526, 0.48 ) }
    dend_76 { pt3dadd( 44.94, 53.0155, -31.575, 0.12 ) }
    dend_76 { pt3dadd( 45.8248, 53.4087, -32.1808, 0.72 ) }
    dend_76 { pt3dadd( 46.4097, 53.6615, -32.625, 0.12 ) }
    dend_76 { pt3dadd( 48.6847, 54.5512, -34.6021, 0.12 ) }
    dend_76 { pt3dadd( 49.4755, 54.8803, -35.3558, 1.2 ) }
    dend_76 { pt3dadd( 50.8481, 55.5559, -36.769, 0.12 ) }
    dend_76 { pt3dadd( 53.5418, 57.0948, -39.6785, 0.12 ) }
    dend_76 { pt3dadd( 54.4032, 57.6343, -40.6657, 1.08 ) }
    dend_76 { pt3dadd( 55.7931, 58.6004, -42.3675, 0.12 ) }
    dend_76 { pt3dadd( 57.3423, 59.7642, -44.3888, 0.12 ) }
    dend_76 { pt3dadd( 58.1249, 60.3704, -45.403, 0.84 ) }
    dend_76 { pt3dadd( 59.9529, 61.8271, -47.6457, 0.12 ) }
    dend_76 { pt3dadd( 60.8886, 62.6194, -48.7013, 0.24 ) }
    dend_76 { pt3dadd( 61.5838, 63.2036, -49.499, 0.72 ) }
    dend_76 { pt3dadd( 63.9815, 65.0811, -52.0737, 0.12 ) }
    dend_76 { pt3dadd( 64.9688, 65.726, -53.0841, 0.72 ) }
    dend_76 { pt3dadd( 65.5192, 66.0394, -53.62, 0.12 ) }
    dend_76 { pt3dadd( 66.455, 66.5036, -54.6052, 0.12 ) }
    dend_76 { pt3dadd( 67.7681, 67.0244, -56.1151, 1.08 ) }
    dend_76 { pt3dadd( 69.4562, 67.6792, -58.1153, 0.12 ) }
    dend_76 { pt3dadd( 70.902, 68.2257, -59.9293, 0.12 ) }
    dend_76 { pt3dadd( 71.1146, 68.3106, -60.201, 1.2 ) }
    dend_76 { pt3dadd( 73.8159, 69.4768, -63.6243, 0.12 ) }
    dend_76 { pt3dadd( 77.1876, 71.0764, -67.7432, 0.12 ) }
    dend_76 { pt3dadd( 77.9171, 71.4393, -68.562, 1.2 ) }
    dend_76 { pt3dadd( 78.9454, 71.9829, -69.5894, 0.12 ) }
    dend_76 { pt3dadd( 80.6806, 72.9816, -71.0447, 0.12 ) }
    dend_76 { pt3dadd( 81.3391, 73.4086, -71.5027, 0.96 ) }
    dend_76 { pt3dadd( 82.2537, 74.1195, -71.9271, 0.12 ) }
    dend_76 { pt3dadd( 83.3724, 75.1506, -72.2816, 0.12 ) }
    dend_76 { pt3dadd( 84.3033, 75.9669, -72.5776, 0.72 ) }
    dend_76 { pt3dadd( 84.9593, 76.5368, -72.8003, 0.12 ) }
    dend_76 { pt3dadd( 86.4098, 77.7435, -73.3373, 0.12 ) }
    dend_76 { pt3dadd( 86.8483, 78.0828, -73.5045, 0.48 ) }
    dend_76 { pt3dadd( 87.6143, 78.6388, -73.8091, 0.12 ) }
    dend_76 { pt3dadd( 90.8877, 80.3868, -75.225, 0.12 ) }
    dend_76 { pt3dadd( 91.9701, 80.7878, -75.7109, 1.44 ) }
    dend_76 { pt3dadd( 93.3076, 81.1018, -76.2936, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_76 { pt3dadd( 94.5017, 81.2235, -76.7743, 0.24 ) }
    dend_76 { pt3dadd( 95.3761, 81.2298, -77.1136, 0.72 ) }
    dend_76 { pt3dadd( 99.8006, 80.9105, -78.9837, 0.12 ) }
    dend_76 { pt3dadd( 100.706, 80.7745, -79.3761, 0.96 ) }
    dend_76 { pt3dadd( 101.451, 80.6752, -79.7217, 0.84 ) }
    dend_76 { pt3dadd( 102.257, 80.5879, -80.1634, 0.24 ) }
    dend_76 { pt3dadd( 102.971, 80.575, -80.5878, 0.24 ) }
    dend_76 { pt3dadd( 105.465, 80.9753, -82.3394, 0.12 ) }
    dend_76 { pt3dadd( 105.951, 81.188, -82.7591, 0.84 ) }
    dend_76 { pt3dadd( 107.745, 82.1992, -84.5344, 0.12 ) }
    dend_76 { pt3dadd( 108.567, 82.7577, -85.4318, 0.12 ) }
    dend_76 { pt3dadd( 109.211, 83.2859, -86.1825, 0.6 ) }
    dend_76 { pt3dadd( 110.675, 84.6689, -87.9601, 0.12 ) }
    dend_76 { pt3dadd( 111.787, 85.9217, -89.2707, 0.84 ) }
    dend_76 { pt3dadd( 112.464, 86.7823, -90.0576, 0.12 ) }
    dend_76 { pt3dadd( 112.87, 87.406, -90.5151, 0.24 ) }
    dend_76 { pt3dadd( 113.304, 88.1117, -90.9173, 0.72 ) }
    dend_76 { pt3dadd( 114.062, 89.2796, -91.3729, 0.12 ) }
    dend_76 { pt3dadd( 114.995, 90.6215, -91.6701, 0.12 ) }
    dend_76 { pt3dadd( 115.244, 90.9505, -91.7093, 0.72 ) }
    dend_76 { pt3dadd( 116.006, 91.8463, -91.7874, 0.48 ) }
    dend_76 { pt3dadd( 117.667, 93.5865, -91.8992, 0.12 ) }
    dend_76 { pt3dadd( 120.785, 96.5281, -91.9834, 0.12 ) }
    dend_76 { pt3dadd( 121.606, 97.2218, -91.9701, 1.2 ) }
    dend_76 { pt3dadd( 122.977, 98.3322, -91.966, 0.12 ) }
    dend_76 { pt3dadd( 124.711, 99.744, -91.9696, 0.12 ) }
    dend_76 { pt3dadd( 126.019, 100.809, -91.9681, 0.12 ) }
    dend_76 { pt3dadd( 127.092, 101.733, -91.9808, 0.84 ) }
    dend_76 { pt3dadd( 128.295, 102.848, -91.9991, 0.24 ) }
    dend_76 { pt3dadd( 132.51, 107.237, -92.1033, 0.24 ) }
    dend_76 { pt3dadd( 133.204, 108.074, -92.149, 0.84 ) }
    dend_76 { pt3dadd( 133.811, 108.952, -92.1816, 0.12 ) }
    dend_76 { pt3dadd( 134.867, 110.76, -92.2437, 0.12 ) }
    dend_76 { pt3dadd( 135.118, 111.282, -92.2586, 0.48 ) }
    dend_76 { pt3dadd( 135.675, 112.73, -92.2894, 0.12 ) }
    dend_76 { pt3dadd( 137.295, 117.885, -92.2986, 0.12 ) }
    dend_76 { pt3dadd( 137.993, 120.304, -92.3452, 0.84 ) }
    dend_76 { pt3dadd( 138.497, 122.176, -92.4039, 0.12 ) }
    dend_76 { pt3dadd( 139.129, 124.661, -92.5047, 0.12 ) }
    dend_76 { pt3dadd( 139.419, 125.898, -92.564, 0.72 ) }
    dend_76 { pt3dadd( 139.645, 127.0, -92.6233, 0.12 ) }
    dend_76 { pt3dadd( 139.896, 128.918, -92.7495, 0.12 ) }
    dend_76 { pt3dadd( 139.99, 129.469, -92.8142, 0.72 ) }
    dend_76 { pt3dadd( 140.212, 130.711, -92.9673, 0.12 ) }
    dend_76 { pt3dadd( 140.446, 131.727, -93.1287, 0.12 ) }
    dend_76 { pt3dadd( 140.801, 133.038, -93.3604, 0.36 ) }
    dend_76 { pt3dadd( 141.194, 134.315, -93.5907, 0.12 ) }
    dend_76 { pt3dadd( 141.285, 134.548, -93.6282, 0.6 ) }
    dend_76 { pt3dadd( 141.793, 135.707, -93.825, 0.12 ) }
    dend_76 { pt3dadd( 142.728, 137.599, -94.1386, 0.12 ) }
    dend_76 { pt3dadd( 143.094, 138.304, -94.3144, 1.2 ) }
    dend_76 { pt3dadd( 143.663, 139.404, -94.6375, 0.12 ) }
    dend_76 { pt3dadd( 145.473, 142.909, -95.7296, 0.12 ) }
    dend_76 { pt3dadd( 145.869, 143.724, -95.9903, 0.84 ) }
    dend_76 { pt3dadd( 146.298, 144.651, -96.2875, 0.12 ) }
    dend_76 { pt3dadd( 147.81, 148.066, -97.5584, 0.12 ) }
    dend_76 { pt3dadd( 148.378, 149.487, -98.1966, 0.48 ) }
    dend_76 { pt3dadd( 148.607, 150.164, -98.553, 0.12 ) }
    dend_76 { pt3dadd( 148.784, 150.839, -98.9524, 0.12 ) }
    dend_76 { pt3dadd( 148.9, 151.45, -99.3219, 0.6 ) }
    dend_76 { pt3dadd( 149.159, 153.865, -100.792, 0.12 ) }
    dend_76 { pt3dadd( 149.216, 155.261, -101.573, 0.12 ) }
    dend_76 { pt3dadd( 149.203, 156.06, -101.999, 0.84 ) }
    dend_76 { pt3dadd( 149.137, 157.403, -102.647, 0.12 ) }
    dend_76 { pt3dadd( 148.999, 159.923, -103.696, 0.12 ) }
    dend_76 { pt3dadd( 148.968, 160.53, -103.9, 0.96 ) }
    dend_76 { pt3dadd( 148.936, 161.508, -104.173, 0.12 ) }
    dend_76 { pt3dadd( 148.989, 164.121, -104.926, 0.12 ) }
    dend_76 { pt3dadd( 149.038, 164.952, -105.128, 1.08 ) }
    dend_76 { pt3dadd( 149.151, 166.11, -105.338, 0.36 ) }
    dend_76 { pt3dadd( 149.283, 167.14, -105.441, 0.36 ) }
    dend_76 { pt3dadd( 149.509, 168.934, -105.577, 0.72 ) }
    dend_76 { pt3dadd( 149.602, 169.8, -105.63, 0.12 ) }
    dend_76 { pt3dadd( 149.744, 171.545, -105.708, 0.12 ) }
    dend_76 { pt3dadd( 149.774, 172.473, -105.808, 0.48 ) }
    dend_76 { pt3dadd( 149.764, 173.267, -105.928, 0.12 ) }
    dend_76 { pt3dadd( 149.67, 175.501, -106.322, 0.12 ) }
    dend_76 { pt3dadd( 149.657, 176.063, -106.45, 0.84 ) }
    dend_76 { pt3dadd( 149.65, 177.461, -106.917, 0.12 ) }
    dend_76 { pt3dadd( 149.696, 180.016, -107.996, 0.12 ) }
    dend_76 { pt3dadd( 149.718, 180.753, -108.334, 0.96 ) }
    dend_76 { pt3dadd( 149.765, 181.597, -108.747, 0.24 ) }
    dend_76 { pt3dadd( 149.922, 183.846, -109.918, 0.12 ) }
    dend_76 { pt3dadd( 149.957, 184.665, -110.427, 0.72 ) }
    dend_76 { pt3dadd( 149.969, 185.336, -110.905, 0.12 ) }
    dend_76 { pt3dadd( 149.914, 186.324, -111.672, 0.12 ) }
    dend_76 { pt3dadd( 149.874, 186.53, -111.848, 0.96 ) }
    dend_76 { pt3dadd( 149.681, 187.134, -112.518, 0.12 ) }
    dend_76 { pt3dadd( 148.767, 189.054, -114.994, 0.12 ) }
    dend_76 { pt3dadd( 148.621, 189.321, -115.35, 0.96 ) }
    dend_76 { pt3dadd( 148.292, 189.85, -116.031, 0.12 ) }
    dend_76 { pt3dadd( 147.597, 190.875, -117.259, 0.12 ) }
    dend_76 { pt3dadd( 146.087, 192.955, -119.165, 1.2 ) }
    dend_76 { pt3dadd( 145.543, 193.674, -119.671, 0.12 ) }
    dend_76 { pt3dadd( 144.716, 194.832, -120.352, 0.12 ) }
    dend_76 { pt3dadd( 143.896, 196.132, -121.069, 0.84 ) }
    dend_76 { pt3dadd( 143.468, 196.907, -121.457, 0.12 ) }
    dend_76 { pt3dadd( 141.995, 200.03, -122.787, 0.12 ) }
    dend_76 { pt3dadd( 141.6, 200.974, -123.106, 0.84 ) }
    dend_76 { pt3dadd( 140.918, 203.084, -123.858, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_76 { pt3dadd( 140.564, 204.614, -124.449, 0.12 ) }
    dend_76 { pt3dadd( 140.538, 204.841, -124.541, 0.48 ) }
    dend_76 { pt3dadd( 140.526, 205.56, -124.792, 0.12 ) }
    dend_76 { pt3dadd( 140.713, 206.927, -125.185, 0.12 ) }
    dend_76 { pt3dadd( 140.779, 207.37, -125.276, 0.48 ) }
    dend_76 { pt3dadd( 140.822, 207.869, -125.306, 0.12 ) }
    dend_76 { pt3dadd( 140.872, 209.292, -125.414, 0.12 ) }
    dend_76 { pt3dadd( 140.887, 210.214, -125.489, 0.6 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 8/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 28.9745, 45.4969, -24.5573, 0.48 ) }
    dend_75 { pt3dadd( 29.6297, 44.1986, -24.6654, 0.48 ) }
    dend_75 { pt3dadd( 30.3492, 42.7727, -24.7841, 0.12 ) }
    dend_75 { pt3dadd( 31.1577, 41.1706, -24.9175, 0.96 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 12/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -95.5135, 67.3974, -89.351, 0.36 ) }
    dend_71 { pt3dadd( -91.5703, 68.1182, -92.6929, 0.36 ) }
    dend_71 { pt3dadd( -90.0853, 68.3121, -93.8975, 0.12 ) }
    dend_71 { pt3dadd( -89.1422, 68.3829, -94.6949, 0.84 ) }
    dend_71 { pt3dadd( -86.5192, 68.4815, -96.8528, 0.12 ) }
    dend_71 { pt3dadd( -85.6207, 68.4981, -97.7038, 0.12 ) }
    dend_71 { pt3dadd( -84.9071, 68.4912, -98.407, 0.12 ) }
    dend_71 { pt3dadd( -84.4039, 68.4231, -98.9261, 0.6 ) }
    dend_71 { pt3dadd( -83.1877, 68.1442, -100.749, 0.6 ) }
    dend_71 { pt3dadd( -82.2358, 67.8428, -102.467, 0.6 ) }
    dend_71 { pt3dadd( -80.6195, 67.0562, -106.064, 0.12 ) }
    dend_71 { pt3dadd( -80.233, 66.8494, -106.955, 0.12 ) }
    dend_71 { pt3dadd( -79.705, 66.5864, -108.084, 0.84 ) }
    dend_71 { pt3dadd( -77.0792, 65.2539, -113.81, 0.12 ) }
    dend_71 { pt3dadd( -76.7339, 65.0632, -114.577, 0.6 ) }
    dend_71 { pt3dadd( -74.9876, 63.9931, -118.623, 0.36 ) }
    dend_71 { pt3dadd( -72.9526, 62.7457, -123.028, 0.36 ) }
    dend_71 { pt3dadd( -71.9608, 62.1836, -125.152, 0.36 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 30/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -95.5135, 67.3974, -89.351, 0.48 ) }
    dend_68 { pt3dadd( -97.5525, 67.6898, -90.608, 0.48 ) }
    dend_68 { pt3dadd( -100.039, 68.0907, -92.0853, 0.48 ) }
    dend_68 { pt3dadd( -101.171, 68.2697, -92.7184, 1.2 ) }
    dend_68 { pt3dadd( -103.018, 68.5881, -93.6456, 0.24 ) }
    dend_68 { pt3dadd( -104.085, 68.808, -94.1396, 0.24 ) }
    dend_68 { pt3dadd( -106.353, 69.3154, -95.1125, 0.24 ) }
    dend_68 { pt3dadd( -107.013, 69.5237, -95.3823, 0.96 ) }
    dend_68 { pt3dadd( -107.86, 69.8268, -95.6783, 0.36 ) }
    dend_68 { pt3dadd( -109.573, 70.5485, -96.2686, 0.36 ) }
    dend_68 { pt3dadd( -110.835, 71.2644, -96.7403, 0.84 ) }
    dend_68 { pt3dadd( -111.485, 71.7161, -97.0062, 0.24 ) }
    dend_68 { pt3dadd( -113.921, 73.7634, -98.1487, 0.24 ) }
    dend_68 { pt3dadd( -114.076, 73.9175, -98.2447, 0.72 ) }
    dend_68 { pt3dadd( -114.762, 74.7223, -98.7585, 0.72 ) }
    dend_68 { pt3dadd( -116.627, 77.3194, -100.393, 0.24 ) }
    dend_68 { pt3dadd( -117.024, 77.9335, -100.762, 1.44 ) }
    dend_68 { pt3dadd( -117.969, 79.5678, -101.674, 1.44 ) }
    dend_68 { pt3dadd( -119.163, 81.8279, -102.798, 0.48 ) }
    dend_68 { pt3dadd( -119.62, 82.695, -103.194, 0.96 ) }
    dend_68 { pt3dadd( -120.273, 83.7591, -103.776, 0.36 ) }
    dend_68 { pt3dadd( -120.894, 84.525, -104.218, 0.36 ) }
    dend_68 { pt3dadd( -121.477, 85.0002, -104.605, 0.36 ) }
    dend_68 { pt3dadd( -122.285, 85.4365, -105.173, 0.6 ) }
    dend_68 { pt3dadd( -123.204, 85.7428, -105.827, 0.24 ) }
    dend_68 { pt3dadd( -126.926, 86.4261, -108.325, 0.24 ) }
    dend_68 { pt3dadd( -128.564, 86.5742, -109.371, 1.32 ) }
    dend_68 { pt3dadd( -131.676, 86.6409, -111.221, 0.84 ) }
    dend_68 { pt3dadd( -133.663, 86.6447, -112.316, 0.12 ) }
    dend_68 { pt3dadd( -134.895, 86.6666, -112.937, 0.24 ) }
    dend_68 { pt3dadd( -138.251, 86.9082, -114.388, 0.24 ) }
    dend_68 { pt3dadd( -139.159, 87.0583, -114.687, 1.08 ) }
    dend_68 { pt3dadd( -140.83, 87.5118, -115.186, 0.36 ) }
    dend_68 { pt3dadd( -143.624, 88.5837, -115.752, 0.36 ) }
    dend_68 { pt3dadd( -145.202, 89.3097, -116.016, 1.32 ) }
    dend_68 { pt3dadd( -146.987, 90.2691, -116.466, 0.36 ) }
    dend_68 { pt3dadd( -147.997, 90.901, -116.868, 0.6 ) }
    dend_68 { pt3dadd( -148.987, 91.4997, -117.358, 0.6 ) }
    dend_68 { pt3dadd( -149.448, 91.7776, -117.613, 0.6 ) }
    dend_68 { pt3dadd( -150.528, 92.325, -118.28, 0.36 ) }
    dend_68 { pt3dadd( -153.103, 93.3468, -119.954, 0.36 ) }
    dend_68 { pt3dadd( -154.569, 93.8508, -121.119, 0.36 ) }
    dend_68 { pt3dadd( -155.553, 94.1801, -121.948, 0.96 ) }
    dend_68 { pt3dadd( -157.77, 95.0267, -123.798, 0.96 ) }
    dend_68 { pt3dadd( -159.384, 95.7772, -125.225, 0.36 ) }
    dend_68 { pt3dadd( -160.108, 96.1825, -125.867, 0.36 ) }
    dend_68 { pt3dadd( -162.97, 98.0926, -128.31, 0.96 ) }
    dend_68 { pt3dadd( -163.743, 98.6378, -128.997, 0.24 ) }
    dend_68 { pt3dadd( -165.137, 99.619, -130.386, 0.12 ) }
    dend_68 { pt3dadd( -166.731, 100.671, -132.084, 0.6 ) }
    dend_68 { pt3dadd( -167.422, 101.136, -132.782, 0.6 ) }
    dend_68 { pt3dadd( -168.231, 101.707, -133.566, 0.24 ) }
    dend_68 { pt3dadd( -168.406, 101.818, -133.696, 0.48 ) }
    dend_68 { pt3dadd( -169.908, 102.616, -134.923, 0.36 ) }
    dend_68 { pt3dadd( -170.36, 102.744, -135.305, 1.2 ) }
    dend_68 { pt3dadd( -170.78, 102.771, -135.542, 1.2 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -62.1562, 25.0555, -12.6344, 0.6 ) }
    dend_64 { pt3dadd( -67.2955, 26.3776, -14.7928, 0.6 ) }
    dend_64 { pt3dadd( -69.539, 26.9636, -15.63, 0.6 ) }
    dend_64 { pt3dadd( -71.3718, 27.4615, -16.2205, 0.6 ) }
    dend_64 { pt3dadd( -77.3061, 29.1345, -17.9483, 0.6 ) }
    dend_64 { pt3dadd( -80.3223, 30.021, -18.7486, 0.6 ) }
    dend_64 { pt3dadd( -83.272, 30.8851, -19.5276, 1.56 ) }
    dend_64 { pt3dadd( -84.5591, 31.2452, -19.784, 0.36 ) }
    dend_64 { pt3dadd( -87.5616, 32.0781, -20.3753, 0.36 ) }
    dend_64 { pt3dadd( -88.5732, 32.3603, -20.6004, 0.72 ) }
    dend_64 { pt3dadd( -89.9105, 32.7557, -20.9461, 0.96 ) }
    dend_64 { pt3dadd( -93.3051, 33.7593, -22.1091, 0.12 ) }
    dend_64 { pt3dadd( -95.2272, 34.3417, -22.8277, 0.12 ) }
    dend_64 { pt3dadd( -96.1114, 34.6159, -23.1481, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_64 { pt3dadd( -98.7501, 35.4771, -24.0592, 0.36 ) }
    dend_64 { pt3dadd( -102.127, 36.6111, -25.1057, 0.12 ) }
    dend_64 { pt3dadd( -105.642, 37.8359, -26.0347, 1.2 ) }
    dend_64 { pt3dadd( -108.676, 38.9632, -26.6443, 0.36 ) }
    dend_64 { pt3dadd( -111.605, 40.0789, -27.0996, 0.12 ) }
    dend_64 { pt3dadd( -113.178, 40.6405, -27.2611, 0.84 ) }
    dend_64 { pt3dadd( -114.703, 41.15, -27.3077, 0.12 ) }
    dend_64 { pt3dadd( -116.957, 41.8535, -27.3031, 0.12 ) }
    dend_64 { pt3dadd( -118.729, 42.3947, -27.3928, 1.2 ) }
    dend_64 { pt3dadd( -120.787, 42.9737, -27.5958, 0.36 ) }
    dend_64 { pt3dadd( -123.129, 43.5892, -27.8975, 0.36 ) }
    dend_64 { pt3dadd( -126.871, 44.4909, -28.4433, 0.36 ) }
    dend_64 { pt3dadd( -128.448, 44.877, -28.6831, 1.08 ) }
    dend_64 { pt3dadd( -131.951, 45.7463, -29.227, 0.12 ) }
    dend_64 { pt3dadd( -137.221, 47.0874, -30.0447, 0.24 ) }
    dend_64 { pt3dadd( -138.627, 47.4962, -30.2398, 1.56 ) }
    dend_64 { pt3dadd( -141.143, 48.3428, -30.5625, 0.36 ) }
    dend_64 { pt3dadd( -143.588, 49.2453, -30.8322, 0.36 ) }
    dend_64 { pt3dadd( -144.943, 49.8366, -30.927, 0.72 ) }
    dend_64 { pt3dadd( -146.111, 50.4173, -30.9877, 0.12 ) }
    dend_64 { pt3dadd( -150.003, 52.6856, -31.443, 0.36 ) }
    dend_64 { pt3dadd( -151.994, 53.8849, -31.7799, 0.96 ) }
    dend_64 { pt3dadd( -153.554, 54.8042, -32.1213, 0.24 ) }
    dend_64 { pt3dadd( -156.771, 56.5046, -32.9731, 0.24 ) }
    dend_64 { pt3dadd( -159.313, 57.679, -33.7358, 0.72 ) }
    dend_64 { pt3dadd( -161.545, 58.4447, -34.4731, 0.12 ) }
    dend_64 { pt3dadd( -163.156, 58.7251, -35.0555, 0.12 ) }
    dend_64 { pt3dadd( -164.844, 58.767, -35.6237, 0.6 ) }
    dend_64 { pt3dadd( -166.352, 58.4683, -36.0761, 0.6 ) }
    dend_64 { pt3dadd( -167.211, 58.1616, -36.3333, 0.12 ) }
    dend_64 { pt3dadd( -169.658, 57.1209, -36.983, 0.12 ) }
    dend_64 { pt3dadd( -170.715, 56.6584, -37.2745, 0.6 ) }
    dend_64 { pt3dadd( -172.535, 55.9357, -37.8137, 0.12 ) }
    dend_64 { pt3dadd( -177.463, 54.2964, -39.2961, 0.12 ) }
    dend_64 { pt3dadd( -179.861, 53.6794, -40.0055, 0.84 ) }
    dend_64 { pt3dadd( -181.235, 53.4738, -40.3881, 0.12 ) }
    dend_64 { pt3dadd( -183.993, 53.4052, -41.1002, 0.12 ) }
    dend_64 { pt3dadd( -186.325, 53.7028, -41.6174, 0.12 ) }
    dend_64 { pt3dadd( -187.913, 54.3187, -41.9255, 0.84 ) }
    dend_64 { pt3dadd( -189.303, 55.2453, -42.1297, 0.36 ) }
    dend_64 { pt3dadd( -191.94, 57.3696, -42.387, 0.12 ) }
    dend_64 { pt3dadd( -192.508, 57.8839, -42.4302, 0.72 ) }
    dend_64 { pt3dadd( -193.738, 59.0603, -42.4927, 0.12 ) }
    dend_64 { pt3dadd( -196.467, 61.6194, -42.6653, 0.12 ) }
    dend_64 { pt3dadd( -197.878, 62.8608, -42.7917, 0.96 ) }
    dend_64 { pt3dadd( -199.151, 63.8063, -42.9252, 0.12 ) }
    dend_64 { pt3dadd( -201.86, 65.515, -43.37, 0.12 ) }
    dend_64 { pt3dadd( -203.301, 66.3247, -43.6459, 0.84 ) }
    dend_64 { pt3dadd( -204.948, 67.1438, -43.9676, 0.12 ) }
    dend_64 { pt3dadd( -207.086, 68.1375, -44.4737, 0.12 ) }
    dend_64 { pt3dadd( -210.496, 69.7345, -45.452, 0.12 ) }
    dend_64 { pt3dadd( -213.172, 70.9944, -46.2564, 0.84 ) }
    dend_64 { pt3dadd( -214.139, 71.4545, -46.6015, 0.36 ) }
    dend_64 { pt3dadd( -216.482, 72.5953, -47.4799, 0.12 ) }
    dend_64 { pt3dadd( -219.248, 73.8788, -48.5609, 0.96 ) }
    dend_64 { pt3dadd( -221.359, 74.8051, -49.3842, 0.12 ) }
    dend_64 { pt3dadd( -225.235, 76.408, -50.8778, 0.12 ) }
    dend_64 { pt3dadd( -228.282, 77.5336, -51.96, 1.08 ) }
    dend_64 { pt3dadd( -230.225, 78.1776, -52.6417, 0.12 ) }
    dend_64 { pt3dadd( -235.089, 79.54, -54.2833, 0.12 ) }
    dend_64 { pt3dadd( -236.358, 79.8074, -54.6418, 0.96 ) }
    dend_64 { pt3dadd( -237.661, 80.0049, -54.9918, 0.12 ) }
    dend_64 { pt3dadd( -238.573, 80.083, -55.2016, 0.12 ) }
    dend_64 { pt3dadd( -239.659, 80.128, -55.3631, 0.72 ) }
    dend_64 { pt3dadd( -241.086, 80.1956, -55.701, 0.12 ) }
    dend_64 { pt3dadd( -244.065, 80.4083, -56.5159, 0.12 ) }
    dend_64 { pt3dadd( -245.355, 80.5596, -56.924, 0.12 ) }
    dend_64 { pt3dadd( -247.11, 80.8413, -57.5033, 0.96 ) }
    dend_64 { pt3dadd( -248.504, 81.122, -58.0341, 0.12 ) }
    dend_64 { pt3dadd( -253.555, 82.3493, -60.1323, 0.12 ) }
    dend_64 { pt3dadd( -255.108, 82.8132, -60.8712, 0.84 ) }
    dend_64 { pt3dadd( -256.431, 83.2866, -61.5446, 0.12 ) }
    dend_64 { pt3dadd( -258.734, 84.163, -62.705, 0.12 ) }
    dend_64 { pt3dadd( -261.019, 85.102, -63.7539, 1.2 ) }
    dend_64 { pt3dadd( -262.108, 85.5664, -64.1882, 0.24 ) }
    dend_64 { pt3dadd( -266.6, 87.412, -65.5535, 0.12 ) }
    dend_64 { pt3dadd( -267.865, 87.9144, -65.9347, 0.84 ) }
    dend_64 { pt3dadd( -268.93, 88.3498, -66.3096, 0.12 ) }
    dend_64 { pt3dadd( -271.587, 89.4506, -67.2573, 0.12 ) }
    dend_64 { pt3dadd( -272.275, 89.7369, -67.4874, 0.12 ) }
    dend_64 { pt3dadd( -273.964, 90.4407, -68.0373, 0.96 ) }
    dend_64 { pt3dadd( -275.875, 91.2273, -68.6234, 0.12 ) }
    dend_64 { pt3dadd( -283.283, 94.1248, -70.9204, 0.12 ) }
    dend_64 { pt3dadd( -285.496, 94.9472, -71.6622, 1.08 ) }
    dend_64 { pt3dadd( -286.347, 95.2257, -71.9564, 0.24 ) }
    dend_64 { pt3dadd( -288.705, 95.9193, -72.748, 0.12 ) }
    dend_64 { pt3dadd( -289.706, 96.18, -73.0708, 1.08 ) }
    dend_64 { pt3dadd( -291.593, 96.5708, -73.6122, 0.12 ) }
    dend_64 { pt3dadd( -297.4, 97.2661, -74.9635, 0.12 ) }
    dend_64 { pt3dadd( -299.928, 97.5149, -75.6047, 0.12 ) }
    dend_64 { pt3dadd( -301.48, 97.6339, -76.0226, 0.6 ) }
    dend_64 { pt3dadd( -302.414, 97.6862, -76.2933, 0.12 ) }
    dend_64 { pt3dadd( -304.253, 97.7847, -76.8378, 0.12 ) }
    dend_64 { pt3dadd( -305.481, 97.8218, -77.1917, 0.96 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 94/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -62.1562, 25.0555, -12.6344, 0.12 ) }
    dend_63 { pt3dadd( -65.9727, 27.5131, -11.6768, 0.12 ) }
    dend_63 { pt3dadd( -67.7784, 28.5684, -11.1476, 0.6 ) }
    dend_63 { pt3dadd( -70.2293, 29.9312, -10.3956, 0.12 ) }
    dend_63 { pt3dadd( -73.3587, 31.6045, -9.23786, 0.12 ) }
    dend_63 { pt3dadd( -75.0291, 32.4613, -8.57519, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_63 { pt3dadd( -76.1576, 33.0244, -8.11634, 0.12 ) }
    dend_63 { pt3dadd( -78.7973, 34.1871, -6.92525, 0.12 ) }
    dend_63 { pt3dadd( -79.9462, 34.6195, -6.43443, 0.84 ) }
    dend_63 { pt3dadd( -82.6235, 35.4973, -5.37559, 0.12 ) }
    dend_63 { pt3dadd( -84.0604, 35.9054, -4.85269, 0.12 ) }
    dend_63 { pt3dadd( -85.118, 36.1662, -4.49337, 1.44 ) }
    dend_63 { pt3dadd( -86.8343, 36.5457, -3.98385, 0.12 ) }
    dend_63 { pt3dadd( -89.9061, 37.1736, -3.28753, 0.12 ) }
    dend_63 { pt3dadd( -90.3514, 37.2507, -3.21218, 0.84 ) }
    dend_63 { pt3dadd( -92.138, 37.5344, -3.02509, 0.12 ) }
    dend_63 { pt3dadd( -94.4348, 37.8924, -2.78484, 0.12 ) }
    dend_63 { pt3dadd( -94.9406, 37.9712, -2.69638, 1.08 ) }
    dend_63 { pt3dadd( -95.9328, 38.1543, -2.45956, 0.12 ) }
    dend_63 { pt3dadd( -98.6486, 38.7799, -1.68175, 0.12 ) }
    dend_63 { pt3dadd( -98.9091, 38.8504, -1.60421, 1.2 ) }
    dend_63 { pt3dadd( -100.121, 39.2403, -1.25075, 1.2 ) }
    dend_63 { pt3dadd( -103.067, 40.3366, -0.285996, 0.12 ) }
    dend_63 { pt3dadd( -104.434, 40.9019, 0.166686, 0.12 ) }
    dend_63 { pt3dadd( -105.384, 41.3471, 0.486221, 0.6 ) }
    dend_63 { pt3dadd( -105.772, 41.5424, 0.612801, 0.12 ) }
    dend_63 { pt3dadd( -107.034, 42.2018, 0.95304, 0.12 ) }
    dend_63 { pt3dadd( -108.125, 42.8107, 1.15435, 0.6 ) }
    dend_63 { pt3dadd( -109.269, 43.4227, 1.30196, 0.12 ) }
    dend_63 { pt3dadd( -110.162, 43.832, 1.45636, 0.6 ) }
    dend_63 { pt3dadd( -110.653, 43.9991, 1.53779, 0.12 ) }
    dend_63 { pt3dadd( -111.605, 44.2376, 1.68541, 0.12 ) }
    dend_63 { pt3dadd( -112.895, 44.4396, 1.8694, 0.96 ) }
    dend_63 { pt3dadd( -115.675, 44.4148, 2.12407, 0.48 ) }
    dend_63 { pt3dadd( -118.167, 44.0754, 2.24493, 0.12 ) }
    dend_63 { pt3dadd( -121.107, 43.3886, 2.16761, 0.12 ) }
    dend_63 { pt3dadd( -121.963, 43.1042, 2.08318, 0.72 ) }
    dend_63 { pt3dadd( -123.031, 42.6097, 1.88911, 0.12 ) }
    dend_63 { pt3dadd( -126.427, 40.5776, 0.980539, 0.12 ) }
    dend_63 { pt3dadd( -127.264, 39.9716, 0.676589, 1.08 ) }
    dend_63 { pt3dadd( -128.646, 38.8122, 0.116049, 0.12 ) }
    dend_63 { pt3dadd( -130.134, 37.5074, -0.509259, 0.12 ) }
    dend_63 { pt3dadd( -131.892, 36.0001, -1.23016, 0.12 ) }
    dend_63 { pt3dadd( -132.886, 35.1572, -1.6205, 0.96 ) }
    dend_63 { pt3dadd( -133.643, 34.5167, -1.89781, 0.12 ) }
    dend_63 { pt3dadd( -134.693, 33.6227, -2.2332, 0.12 ) }
    dend_63 { pt3dadd( -135.68, 32.7798, -2.47721, 0.72 ) }
    dend_63 { pt3dadd( -135.87, 32.6239, -2.53957, 0.12 ) }
    dend_63 { pt3dadd( -137.384, 31.4706, -3.06578, 0.12 ) }
    dend_63 { pt3dadd( -137.903, 31.0885, -3.25647, 0.6 ) }
    dend_63 { pt3dadd( -138.496, 30.6395, -3.48154, 0.6 ) }
    dend_63 { pt3dadd( -138.707, 30.4761, -3.56289, 0.12 ) }
    dend_63 { pt3dadd( -140.374, 29.1717, -4.18857, 0.12 ) }
    dend_63 { pt3dadd( -141.918, 27.9955, -4.75886, 0.84 ) }
    dend_63 { pt3dadd( -142.398, 27.6373, -4.93319, 0.12 ) }
    dend_63 { pt3dadd( -143.787, 26.6035, -5.40564, 0.12 ) }
    dend_63 { pt3dadd( -144.28, 26.2501, -5.5484, 0.96 ) }
    dend_63 { pt3dadd( -144.915, 25.7696, -5.68346, 0.96 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 52/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 15.1817, -23.9943, 8.05697, 1.08 ) }
    dend_59 { pt3dadd( 15.913, -25.9702, 8.11253, 1.08 ) }
    dend_59 { pt3dadd( 16.5953, -27.8302, 8.14052, 0.96 ) }
    dend_59 { pt3dadd( 17.4381, -30.131, 8.14023, 0.96 ) }
    dend_59 { pt3dadd( 18.0263, -31.8804, 8.1003, 0.96 ) }
    dend_59 { pt3dadd( 18.6077, -33.7279, 8.02942, 0.96 ) }
    dend_59 { pt3dadd( 18.9505, -34.8532, 8.03318, 0.96 ) }
    dend_59 { pt3dadd( 19.4958, -36.6847, 8.15259, 1.56 ) }
    dend_59 { pt3dadd( 19.9828, -38.397, 8.32508, 1.08 ) }
    dend_59 { pt3dadd( 20.8203, -41.4198, 8.68136, 0.96 ) }
    dend_59 { pt3dadd( 21.2746, -42.9591, 8.91127, 0.96 ) }
    dend_59 { pt3dadd( 22.1392, -45.492, 9.37746, 0.96 ) }
    dend_59 { pt3dadd( 23.1856, -48.3175, 10.0684, 1.32 ) }
    dend_59 { pt3dadd( 23.8417, -50.0435, 10.5664, 0.96 ) }
    dend_59 { pt3dadd( 24.4974, -51.7375, 11.154, 0.72 ) }
    dend_59 { pt3dadd( 25.3142, -53.7438, 11.9462, 0.84 ) }
    dend_59 { pt3dadd( 26.0671, -55.7325, 12.6683, 0.6 ) }
    dend_59 { pt3dadd( 26.8795, -58.1295, 13.4012, 0.6 ) }
    dend_59 { pt3dadd( 27.158, -58.9879, 13.6549, 1.32 ) }
    dend_59 { pt3dadd( 27.6394, -60.4601, 14.0523, 0.96 ) }
    dend_59 { pt3dadd( 27.8249, -61.0213, 14.1679, 0.96 ) }
    dend_59 { pt3dadd( 28.9586, -64.22, 14.6236, 0.84 ) }
    dend_59 { pt3dadd( 29.39, -65.2739, 14.7608, 0.72 ) }
    dend_59 { pt3dadd( 30.1649, -67.0314, 14.9059, 0.72 ) }
    dend_59 { pt3dadd( 31.351, -69.5732, 15.0835, 1.08 ) }
    dend_59 { pt3dadd( 32.5704, -71.916, 15.2116, 1.08 ) }
    dend_59 { pt3dadd( 33.5196, -73.6351, 15.3537, 0.72 ) }
    dend_59 { pt3dadd( 34.67, -75.6761, 15.5587, 0.72 ) }
    dend_59 { pt3dadd( 36.9017, -79.7966, 15.9599, 0.84 ) }
    dend_59 { pt3dadd( 38.0872, -82.1121, 16.1796, 0.84 ) }
    dend_59 { pt3dadd( 39.8363, -85.5285, 16.4879, 0.84 ) }
    dend_59 { pt3dadd( 40.7613, -87.2834, 16.6221, 0.6 ) }
    dend_59 { pt3dadd( 41.4247, -88.5314, 16.7209, 0.6 ) }
    dend_59 { pt3dadd( 42.3144, -90.1306, 16.854, 0.6 ) }
    dend_59 { pt3dadd( 43.5384, -92.1714, 17.09, 0.96 ) }
    dend_59 { pt3dadd( 45.017, -94.7883, 17.3378, 0.96 ) }
    dend_59 { pt3dadd( 46.1521, -97.0304, 17.4438, 0.96 ) }
    dend_59 { pt3dadd( 47.0879, -98.95, 17.4704, 0.72 ) }
    dend_59 { pt3dadd( 47.8657, -100.645, 17.4679, 0.96 ) }
    dend_59 { pt3dadd( 48.4297, -102.019, 17.4402, 0.96 ) }
    dend_59 { pt3dadd( 50.336, -107.321, 17.2223, 0.72 ) }
    dend_59 { pt3dadd( 51.983, -112.687, 16.8698, 0.72 ) }
    dend_59 { pt3dadd( 52.3466, -114.067, 16.7414, 0.72 ) }
    dend_59 { pt3dadd( 52.9703, -116.675, 16.4251, 0.36 ) }
    dend_59 { pt3dadd( 53.3077, -118.27, 16.2547, 0.12 ) }
    dend_59 { pt3dadd( 53.5911, -119.611, 16.1399, 0.84 ) }
    dend_59 { pt3dadd( 53.9273, -121.095, 16.0673, 0.48 ) }
    dend_59 { pt3dadd( 54.6616, -123.592, 16.0757, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_59 { pt3dadd( 55.1632, -124.913, 16.1328, 0.72 ) }
    dend_59 { pt3dadd( 55.903, -126.461, 16.2667, 0.12 ) }
    dend_59 { pt3dadd( 56.502, -127.57, 16.3891, 0.12 ) }
    dend_59 { pt3dadd( 57.3116, -129.006, 16.5527, 0.48 ) }
    dend_59 { pt3dadd( 57.972, -130.123, 16.673, 0.24 ) }
    dend_59 { pt3dadd( 58.6135, -131.145, 16.7791, 0.12 ) }
    dend_59 { pt3dadd( 58.9021, -131.644, 16.8002, 0.96 ) }
    dend_59 { pt3dadd( 59.246, -132.3, 16.757, 0.12 ) }
    dend_59 { pt3dadd( 59.7609, -133.546, 16.648, 0.12 ) }
    dend_59 { pt3dadd( 60.0272, -134.347, 16.5652, 0.72 ) }
    dend_59 { pt3dadd( 61.8005, -141.561, 15.2881, 0.72 ) }
    dend_59 { pt3dadd( 62.3689, -148.66, 12.8165, 0.72 ) }
    dend_59 { pt3dadd( 63.9905, -155.171, 9.34056, 0.72 ) }
    dend_59 { pt3dadd( 65.2869, -161.866, 6.0999, 0.72 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 14/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 15.1817, -23.9943, 8.05697, 0.84 ) }
    dend_58 { pt3dadd( 16.4341, -27.3371, 10.6849, 0.84 ) }
    dend_58 { pt3dadd( 16.9043, -28.9648, 11.9162, 0.84 ) }
    dend_58 { pt3dadd( 17.3187, -31.3646, 13.6156, 0.84 ) }
    dend_58 { pt3dadd( 17.4969, -32.944, 14.6915, 1.08 ) }
    dend_58 { pt3dadd( 17.5815, -34.5287, 15.7786, 0.72 ) }
    dend_58 { pt3dadd( 17.6238, -35.591, 16.4512, 0.72 ) }
    dend_58 { pt3dadd( 17.5914, -38.3309, 17.9206, 0.72 ) }
    dend_58 { pt3dadd( 17.699, -40.5006, 18.9334, 0.96 ) }
    dend_58 { pt3dadd( 17.8838, -42.1037, 19.6269, 0.96 ) }
    dend_58 { pt3dadd( 18.5224, -45.4951, 21.0245, 0.84 ) }
    dend_58 { pt3dadd( 19.3724, -48.8281, 22.3624, 0.72 ) }
    dend_58 { pt3dadd( 19.7752, -50.059, 22.8117, 0.72 ) }
    dend_58 { pt3dadd( 21.3848, -53.8369, 23.9476, 0.72 ) }
    dend_58 { pt3dadd( 22.5478, -56.0753, 24.5267, 0.72 ) }
    dend_58 { pt3dadd( 23.0694, -56.9389, 24.703, 1.2 ) }
    dend_58 { pt3dadd( 23.73, -57.7894, 24.8609, 0.48 ) }
    dend_58 { pt3dadd( 25.227, -59.4023, 25.2259, 0.48 ) }
    dend_58 { pt3dadd( 26.7554, -60.9975, 25.6025, 0.48 ) }
    dend_58 { pt3dadd( 28.0082, -62.3917, 25.9062, 0.48 ) }
    dend_58 { pt3dadd( 28.9629, -63.4739, 26.101, 0.48 ) }
    dend_58 { pt3dadd( 31.4568, -66.1821, 26.6376, 0.48 ) }
    dend_58 { pt3dadd( 32.1446, -66.877, 26.7933, 0.48 ) }
    dend_58 { pt3dadd( 33.6082, -68.2375, 27.1513, 0.12 ) }
    dend_58 { pt3dadd( 35.1954, -69.8248, 27.6378, 0.12 ) }
    dend_58 { pt3dadd( 35.5322, -70.2539, 27.7681, 0.12 ) }
    dend_58 { pt3dadd( 39.0405, -77.2219, 29.5206, 0.12 ) }
    dend_58 { pt3dadd( 42.7571, -84.2162, 30.6127, 0.12 ) }
    dend_58 { pt3dadd( 46.5423, -91.0252, 32.4449, 0.12 ) }
    dend_58 { pt3dadd( 49.8271, -98.2549, 33.2759, 0.12 ) }
    dend_58 { pt3dadd( 53.4953, -105.354, 33.1686, 0.12 ) }
    dend_58 { pt3dadd( 56.2276, -112.844, 33.1797, 0.12 ) }
    dend_58 { pt3dadd( 58.023, -120.503, 31.9399, 0.12 ) }
    dend_58 { pt3dadd( 61.569, -127.512, 30.4419, 0.12 ) }
    dend_58 { pt3dadd( 64.0504, -134.92, 28.8266, 0.12 ) }
    dend_58 { pt3dadd( 67.3462, -141.881, 26.6657, 0.12 ) }
    dend_58 { pt3dadd( 70.0793, -149.214, 25.0977, 0.12 ) }
    dend_58 { pt3dadd( 73.6387, -156.365, 24.9579, 0.12 ) }
    dend_58 { pt3dadd( 77.6256, -163.283, 24.447, 0.12 ) }
    dend_58 { pt3dadd( 82.1396, -169.838, 25.3897, 0.12 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 54/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -11.3149, 37.0581, 35.8579, 0.12 ) }
    dend_55 { pt3dadd( -13.1294, 43.7948, 41.9649, 0.12 ) }
    dend_55 { pt3dadd( -13.6696, 49.501, 49.3132, 0.12 ) }
    dend_55 { pt3dadd( -14.0322, 54.7759, 57.0038, 0.12 ) }
    dend_55 { pt3dadd( -12.7502, 59.1082, 65.2066, 0.12 ) }
    dend_55 { pt3dadd( -11.1331, 61.8838, 74.0272, 0.12 ) }
    dend_55 { pt3dadd( -8.53879, 66.5306, 81.7342, 0.12 ) }
    dend_55 { pt3dadd( -6.4257, 71.255, 89.5356, 0.12 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 62/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -11.3149, 37.0581, 35.8579, 0.24 ) }
    dend_54 { pt3dadd( -14.2929, 45.3524, 43.4402, 0.12 ) }
    dend_54 { pt3dadd( -17.5582, 54.3324, 50.0077, 0.12 ) }
    dend_54 { pt3dadd( -21.7616, 63.7552, 55.2159, 0.12 ) }
    dend_54 { pt3dadd( -27.5153, 72.6097, 59.8973, 0.12 ) }
    dend_54 { pt3dadd( -32.4507, 82.5018, 63.1354, 0.12 ) }
    dend_54 { pt3dadd( -37.5028, 91.2973, 68.6975, 0.12 ) }
    dend_54 { pt3dadd( -41.2733, 99.1299, 76.4224, 0.12 ) }
    dend_54 { pt3dadd( -46.4171, 104.82, 85.2276, 0.12 ) }
    dend_54 { pt3dadd( -52.5174, 108.673, 94.4552, 0.12 ) }
    dend_54 { pt3dadd( -57.6885, 114.201, 103.353, 0.12 ) }
    dend_54 { pt3dadd( -63.2028, 120.705, 111.287, 0.12 ) }
    dend_54 { pt3dadd( -68.8221, 127.883, 118.495, 0.12 ) }
    dend_54 { pt3dadd( -75.5614, 135.901, 123.403, 0.12 ) }
    dend_54 { pt3dadd( -84.4859, 141.764, 127.962, 0.12 ) }
    dend_54 { pt3dadd( -94.0972, 147.317, 131.358, 0.12 ) }
    dend_54 { pt3dadd( -104.505, 151.716, 134.134, 0.12 ) }
    dend_54 { pt3dadd( -114.731, 156.443, 137.011, 0.12 ) }
    dend_54 { pt3dadd( -124.668, 161.001, 141.001, 0.12 ) }
    dend_54 { pt3dadd( -134.439, 166.388, 144.216, 0.12 ) }
    dend_54 { pt3dadd( -144.008, 169.719, 150.034, 0.12 ) }
    dend_54 { pt3dadd( -153.177, 174.412, 155.47, 0.12 ) }
    dend_54 { pt3dadd( -161.624, 180.772, 160.245, 0.12 ) }
    dend_54 { pt3dadd( -171.077, 186.837, 163.108, 0.12 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 86/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -211.311, -155.713, 161.2, 0.12 ) }
    dend_50 { pt3dadd( -219.283, -162.031, 166.844, 0.12 ) }
    dend_50 { pt3dadd( -227.591, -166.436, 173.771, 0.12 ) }
    dend_50 { pt3dadd( -236.641, -171.717, 178.882, 0.12 ) }
    dend_50 { pt3dadd( -246.407, -175.391, 184.153, 0.12 ) }
    dend_50 { pt3dadd( -255.66, -177.39, 191.053, 0.12 ) }
    dend_50 { pt3dadd( -264.039, -180.361, 198.665, 0.12 ) }
    dend_50 { pt3dadd( -272.507, -181.63, 206.668, 0.12 ) }
    dend_50 { pt3dadd( -282.043, -180.999, 213.457, 0.12 ) }
    dend_50 { pt3dadd( -290.417, -178.826, 221.353, 0.12 ) }
    dend_50 { pt3dadd( -298.677, -174.367, 228.305, 0.12 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 97/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -211.311, -155.713, 161.2, 0.24 ) }
    dend_49 { pt3dadd( -217.784, -160.726, 165.64, 0.12 ) }
    dend_49 { pt3dadd( -223.055, -166.512, 170.664, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( -227.419, -173.021, 175.637, 0.12 ) }
    dend_49 { pt3dadd( -230.071, -179.984, 181.169, 0.12 ) }
    dend_49 { pt3dadd( -231.928, -187.434, 186.356, 0.12 ) }
    dend_49 { pt3dadd( -232.616, -195.15, 191.432, 0.12 ) }
    // Section: dend_44, id: dend_44, parent: dend_32 (entry count 4/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.06559, -19.17, -7.67675, 0.12 ) }
    dend_44 { pt3dadd( -5.85044, -26.7535, -11.371, 0.12 ) }
    dend_44 { pt3dadd( -6.06031, -33.2886, -16.823, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 7/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.06559, -19.17, -7.67675, 0.12 ) }
    dend_33 { pt3dadd( -5.74367, -25.8458, -11.057, 0.12 ) }
    dend_33 { pt3dadd( -5.03603, -32.828, -13.6848, 0.12 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.7536, 66.0034, 13.3299, 0.96 ) }
    dend_19 { pt3dadd( 13.924, 69.2018, 13.4521, 0.96 ) }
    dend_19 { pt3dadd( 14.0525, 71.3204, 13.6106, 0.24 ) }
    dend_19 { pt3dadd( 14.1432, 72.6423, 13.7347, 0.12 ) }
    dend_19 { pt3dadd( 14.2238, 73.9445, 13.8727, 1.32 ) }
    dend_19 { pt3dadd( 14.318, 75.8664, 14.0871, 0.12 ) }
    dend_19 { pt3dadd( 14.351, 76.987, 14.2339, 0.12 ) }
    dend_19 { pt3dadd( 14.3703, 78.4903, 14.5177, 0.6 ) }
    dend_19 { pt3dadd( 14.3502, 79.596, 14.7248, 0.12 ) }
    dend_19 { pt3dadd( 14.253, 81.3227, 15.0298, 0.12 ) }
    dend_19 { pt3dadd( 14.1275, 82.7528, 15.2616, 1.2 ) }
    dend_19 { pt3dadd( 13.9654, 84.2637, 15.4876, 0.12 ) }
    dend_19 { pt3dadd( 13.6216, 87.5774, 15.9485, 0.12 ) }
    dend_19 { pt3dadd( 13.427, 89.3964, 16.1935, 1.2 ) }
    dend_19 { pt3dadd( 13.2142, 91.2774, 16.4366, 0.12 ) }
    dend_19 { pt3dadd( 13.0389, 92.9924, 16.646, 0.12 ) }
    dend_19 { pt3dadd( 12.9885, 93.7066, 16.7259, 0.84 ) }
    dend_19 { pt3dadd( 12.9701, 94.4235, 16.7935, 0.24 ) }
    dend_19 { pt3dadd( 12.9859, 95.9332, 16.941, 0.12 ) }
    dend_19 { pt3dadd( 12.9988, 96.7259, 17.0181, 1.08 ) }
    dend_19 { pt3dadd( 13.0128, 98.0571, 17.1454, 0.12 ) }
    dend_19 { pt3dadd( 12.9877, 99.417, 17.2746, 0.12 ) }
    dend_19 { pt3dadd( 12.9558, 100.28, 17.3538, 1.2 ) }
    dend_19 { pt3dadd( 12.9027, 101.37, 17.4538, 0.12 ) }
    dend_19 { pt3dadd( 12.6973, 104.82, 17.7646, 0.12 ) }
    dend_19 { pt3dadd( 12.6668, 105.275, 17.8049, 1.08 ) }
    dend_19 { pt3dadd( 12.5093, 106.584, 17.9115, 0.12 ) }
    dend_19 { pt3dadd( 12.2549, 107.982, 18.0189, 0.12 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.7536, 66.0034, 13.3299, 0.12 ) }
    dend_18 { pt3dadd( 14.3632, 67.1937, 15.2949, 0.12 ) }
    dend_18 { pt3dadd( 14.5666, 67.6677, 16.0404, 0.96 ) }
    dend_18 { pt3dadd( 15.8406, 71.132, 21.1367, 0.12 ) }
    dend_18 { pt3dadd( 16.5092, 73.2, 24.014, 0.12 ) }
    dend_18 { pt3dadd( 16.7403, 74.0729, 25.1239, 1.32 ) }
    dend_18 { pt3dadd( 16.9336, 75.0458, 26.2481, 0.12 ) }
    dend_18 { pt3dadd( 17.1145, 77.1092, 28.345, 0.12 ) }
    dend_18 { pt3dadd( 17.0788, 77.9892, 29.0756, 1.44 ) }
    dend_18 { pt3dadd( 16.9555, 78.6663, 29.4497, 0.24 ) }
    dend_18 { pt3dadd( 16.5185, 80.5277, 30.3108, 0.24 ) }
    dend_18 { pt3dadd( 16.1861, 82.1241, 30.9817, 0.24 ) }
    dend_18 { pt3dadd( 16.0092, 83.033, 31.3153, 1.56 ) }
    dend_18 { pt3dadd( 15.5704, 85.8108, 32.149, 0.12 ) }
    dend_18 { pt3dadd( 15.3914, 87.1476, 32.5314, 0.96 ) }
    dend_18 { pt3dadd( 15.2819, 88.2215, 32.9197, 0.12 ) }
    dend_18 { pt3dadd( 15.0419, 90.9983, 34.1175, 0.12 ) }
    dend_18 { pt3dadd( 14.9788, 91.9093, 34.5463, 0.96 ) }
    dend_18 { pt3dadd( 14.9279, 92.6001, 34.8837, 0.12 ) }
    dend_18 { pt3dadd( 14.7391, 94.7041, 35.94, 0.12 ) }
    dend_18 { pt3dadd( 14.3706, 97.9008, 37.6484, 0.96 ) }
    dend_18 { pt3dadd( 14.0709, 99.829, 38.7122, 0.12 ) }
    dend_18 { pt3dadd( 13.7929, 101.388, 39.4918, 0.12 ) }
    dend_18 { pt3dadd( 13.6516, 102.166, 39.8052, 0.84 ) }
    dend_18 { pt3dadd( 13.5953, 102.398, 39.8939, 0.12 ) }
    dend_18 { pt3dadd( 13.1771, 103.777, 40.3411, 0.12 ) }
    dend_18 { pt3dadd( 12.749, 104.935, 40.5867, 0.84 ) }
    dend_18 { pt3dadd( 11.7836, 107.044, 41.1329, 0.12 ) }
    dend_18 { pt3dadd( 11.05, 108.149, 41.5088, 1.08 ) }
    dend_18 { pt3dadd( 8.90537, 109.986, 42.4758, 0.12 ) }
    dend_18 { pt3dadd( 7.93488, 110.132, 42.8164, 0.12 ) }
    dend_18 { pt3dadd( 7.55124, 110.039, 42.9215, 0.84 ) }
    dend_18 { pt3dadd( 7.29389, 109.934, 42.9885, 0.12 ) }
    dend_18 { pt3dadd( 6.02745, 109.253, 43.3041, 0.12 ) }
    dend_18 { pt3dadd( 4.44643, 108.204, 43.5548, 0.12 ) }
    dend_18 { pt3dadd( 3.92323, 107.821, 43.5261, 0.6 ) }
    dend_18 { pt3dadd( 3.38861, 107.445, 43.5022, 0.12 ) }
    dend_18 { pt3dadd( 0.987131, 116.118, 49.198, 0.12 ) }
    dend_18 { pt3dadd( -1.08389, 123.733, 56.4058, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 77/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 157.267, -27.6975, -58.2121, 0.24 ) }
    dend_16 { pt3dadd( 162.818, -25.5185, -60.7406, 0.24 ) }
    dend_16 { pt3dadd( 163.994, -25.0372, -61.2573, 0.96 ) }
    dend_16 { pt3dadd( 165.225, -24.5051, -61.8193, 0.96 ) }
    dend_16 { pt3dadd( 168.245, -23.1642, -63.1911, 0.12 ) }
    dend_16 { pt3dadd( 169.46, -22.6207, -63.7085, 0.48 ) }
    dend_16 { pt3dadd( 174.371, -20.4278, -65.7213, 0.12 ) }
    dend_16 { pt3dadd( 175.982, -19.6525, -66.334, 0.12 ) }
    dend_16 { pt3dadd( 177.522, -18.9669, -66.9634, 0.48 ) }
    dend_16 { pt3dadd( 178.334, -18.6499, -67.2984, 0.12 ) }
    dend_16 { pt3dadd( 181.674, -17.5355, -68.6299, 0.12 ) }
    dend_16 { pt3dadd( 182.814, -17.2534, -69.1435, 0.48 ) }
    dend_16 { pt3dadd( 183.436, -17.1966, -69.4826, 0.12 ) }
    dend_16 { pt3dadd( 187.344, -17.092, -71.8918, 0.12 ) }
    dend_16 { pt3dadd( 188.213, -17.1176, -72.5665, 0.72 ) }
    dend_16 { pt3dadd( 188.975, -17.1608, -73.2793, 0.12 ) }
    dend_16 { pt3dadd( 191.772, -17.3166, -76.1704, 0.12 ) }
    dend_16 { pt3dadd( 194.683, -17.3587, -79.1705, 0.12 ) }
    dend_16 { pt3dadd( 195.181, -17.3335, -79.6797, 0.84 ) }
    dend_16 { pt3dadd( 198.898, -16.9044, -83.382, 0.12 ) }
    dend_16 { pt3dadd( 201.363, -16.5079, -85.7649, 0.12 ) }
    dend_16 { pt3dadd( 203.075, -16.1554, -87.2791, 0.12 ) }
    dend_16 { pt3dadd( 204.793, -15.7497, -88.5103, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_16 { pt3dadd( 206.964, -15.3162, -89.8505, 0.72 ) }
    dend_16 { pt3dadd( 208.059, -15.1875, -90.4511, 0.12 ) }
    dend_16 { pt3dadd( 208.584, -15.1723, -90.6801, 0.12 ) }
    dend_16 { pt3dadd( 210.342, -15.259, -91.4643, 0.12 ) }
    dend_16 { pt3dadd( 214.574, -15.7267, -93.6193, 0.12 ) }
    dend_16 { pt3dadd( 217.746, -16.1588, -95.2971, 0.12 ) }
    dend_16 { pt3dadd( 218.601, -16.2862, -95.7741, 0.48 ) }
    dend_16 { pt3dadd( 220.395, -16.5194, -96.8476, 0.12 ) }
    dend_16 { pt3dadd( 223.029, -16.8179, -98.5333, 0.48 ) }
    dend_16 { pt3dadd( 226.133, -17.0963, -100.593, 0.12 ) }
    dend_16 { pt3dadd( 227.472, -17.2438, -101.625, 0.24 ) }
    dend_16 { pt3dadd( 229.951, -17.5815, -103.703, 0.24 ) }
    dend_16 { pt3dadd( 230.692, -17.7629, -104.411, 0.6 ) }
    dend_16 { pt3dadd( 232.57, -18.5636, -106.431, 0.24 ) }
    dend_16 { pt3dadd( 233.527, -19.2992, -107.568, 0.12 ) }
    dend_16 { pt3dadd( 236.648, -22.7695, -111.632, 0.12 ) }
    dend_16 { pt3dadd( 237.317, -23.8179, -112.597, 0.48 ) }
    dend_16 { pt3dadd( 238.258, -25.7493, -114.0, 0.12 ) }
    dend_16 { pt3dadd( 238.92, -27.3704, -114.978, 0.36 ) }
    dend_16 { pt3dadd( 239.78, -29.9048, -116.16, 0.12 ) }
    dend_16 { pt3dadd( 240.62, -32.3729, -117.047, 0.12 ) }
    dend_16 { pt3dadd( 241.677, -35.169, -117.679, 0.12 ) }
    dend_16 { pt3dadd( 242.134, -36.1374, -117.818, 0.72 ) }
    dend_16 { pt3dadd( 242.709, -37.1747, -117.859, 0.12 ) }
    dend_16 { pt3dadd( 244.265, -39.8172, -117.716, 0.12 ) }
    dend_16 { pt3dadd( 245.425, -41.6741, -117.431, 0.84 ) }
    dend_16 { pt3dadd( 246.256, -42.9831, -117.139, 0.12 ) }
    dend_16 { pt3dadd( 248.503, -46.2027, -116.339, 0.12 ) }
    dend_16 { pt3dadd( 250.327, -48.8891, -115.66, 0.12 ) }
    dend_16 { pt3dadd( 250.636, -49.3774, -115.483, 0.48 ) }
    dend_16 { pt3dadd( 251.079, -50.1527, -115.145, 0.12 ) }
    dend_16 { pt3dadd( 251.891, -51.7299, -114.413, 0.12 ) }
    dend_16 { pt3dadd( 252.165, -52.292, -114.14, 0.36 ) }
    dend_16 { pt3dadd( 252.743, -53.5193, -113.553, 0.12 ) }
    dend_16 { pt3dadd( 255.282, -58.4418, -110.895, 0.12 ) }
    dend_16 { pt3dadd( 255.93, -59.5031, -110.246, 0.84 ) }
    dend_16 { pt3dadd( 256.396, -60.1574, -109.815, 0.12 ) }
    dend_16 { pt3dadd( 258.063, -62.2776, -108.397, 0.12 ) }
    dend_16 { pt3dadd( 258.885, -63.2053, -107.855, 0.84 ) }
    dend_16 { pt3dadd( 259.579, -63.8774, -107.529, 0.12 ) }
    dend_16 { pt3dadd( 263.041, -66.8624, -106.426, 0.12 ) }
    dend_16 { pt3dadd( 264.093, -67.7294, -106.104, 0.72 ) }
    dend_16 { pt3dadd( 265.468, -68.8477, -105.724, 0.12 ) }
    dend_16 { pt3dadd( 267.984, -70.7921, -105.24, 1.32 ) }
    dend_16 { pt3dadd( 268.796, -71.4406, -105.12, 0.48 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 157.267, -27.6975, -58.2121, 0.12 ) }
    dend_15 { pt3dadd( 161.102, -23.9512, -57.4426, 0.12 ) }
    dend_15 { pt3dadd( 169.697, -15.7849, -55.7326, 0.12 ) }
    dend_15 { pt3dadd( 176.364, -9.78369, -54.4907, 0.12 ) }
    dend_15 { pt3dadd( 182.864, -4.20453, -53.3604, 0.12 ) }
    dend_15 { pt3dadd( 185.126, -2.34819, -52.9408, 0.48 ) }
    dend_15 { pt3dadd( 186.542, -1.2417, -52.7441, 0.12 ) }
    dend_15 { pt3dadd( 187.596, -0.530343, -52.6349, 0.12 ) }
    dend_15 { pt3dadd( 191.743, 1.49324, -52.5985, 0.12 ) }
    dend_15 { pt3dadd( 193.845, 2.3182, -52.747, 0.84 ) }
    dend_15 { pt3dadd( 197.453, 3.34187, -53.5341, 0.12 ) }
    dend_15 { pt3dadd( 204.099, 5.12573, -55.2667, 0.12 ) }
    dend_15 { pt3dadd( 205.592, 5.49959, -55.7298, 0.48 ) }
    dend_15 { pt3dadd( 207.52, 5.91072, -56.493, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 59/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.19187, -29.8826, 7.43063, 1.44 ) }
    dend_5 { pt3dadd( 2.11998, -34.0002, 4.95324, 1.44 ) }
    dend_5 { pt3dadd( 2.52025, -36.5126, 3.56458, 1.44 ) }
    dend_5 { pt3dadd( 3.01207, -40.4517, 1.56228, 1.44 ) }
    dend_5 { pt3dadd( 3.24501, -42.2716, 0.724603, 1.44 ) }
    dend_5 { pt3dadd( 3.78042, -45.5852, -0.912402, 1.44 ) }
    dend_5 { pt3dadd( 4.34254, -48.9178, -2.64128, 1.44 ) }
    dend_5 { pt3dadd( 4.66313, -51.4715, -4.01893, 1.2 ) }
    dend_5 { pt3dadd( 4.92848, -53.0472, -4.79641, 1.2 ) }
    dend_5 { pt3dadd( 5.3572, -54.9521, -5.61853, 1.2 ) }
    dend_5 { pt3dadd( 6.44113, -59.1614, -7.22185, 1.2 ) }
    dend_5 { pt3dadd( 7.99012, -64.698, -9.23608, 1.2 ) }
    dend_5 { pt3dadd( 8.7317, -67.1338, -10.1167, 1.2 ) }
    dend_5 { pt3dadd( 10.5264, -72.8088, -12.2253, 1.2 ) }
    dend_5 { pt3dadd( 11.7771, -76.7912, -13.6664, 1.2 ) }
    dend_5 { pt3dadd( 12.6512, -79.7855, -14.6363, 1.8 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 75/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.19187, -29.8826, 7.43063, 0.96 ) }
    dend_2 { pt3dadd( 0.640118, -33.9895, 9.04919, 0.96 ) }
    dend_2 { pt3dadd( 0.199771, -37.1583, 10.419, 1.08 ) }
    dend_2 { pt3dadd( -0.356898, -41.1366, 12.3017, 1.32 ) }
    dend_2 { pt3dadd( -0.528665, -42.4683, 12.9345, 1.32 ) }
    dend_2 { pt3dadd( -0.892839, -45.6322, 14.3778, 1.32 ) }
    dend_2 { pt3dadd( -1.27417, -49.6916, 16.1557, 1.32 ) }
    dend_2 { pt3dadd( -1.38215, -51.8239, 17.02, 1.32 ) }
    dend_2 { pt3dadd( -1.42013, -54.5372, 18.2234, 1.32 ) }
    dend_2 { pt3dadd( -1.41581, -56.5726, 19.1053, 1.32 ) }
    dend_2 { pt3dadd( -1.35167, -58.9769, 20.0739, 1.32 ) }
    dend_2 { pt3dadd( -1.23566, -60.6167, 20.6057, 1.32 ) }
    dend_2 { pt3dadd( -0.907429, -63.8001, 21.3624, 1.2 ) }
    dend_2 { pt3dadd( -0.631476, -66.1803, 21.9313, 1.2 ) }
    dend_2 { pt3dadd( -0.256858, -69.0167, 22.5103, 1.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 90/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -170.78, 102.771, -135.542, 0.12 ) }
    dend_70 { pt3dadd( -170.95, 104.175, -136.151, 0.12 ) }
    dend_70 { pt3dadd( -171.154, 105.861, -136.884, 0.12 ) }
    dend_70 { pt3dadd( -171.555, 109.169, -138.321, 0.12 ) }
    dend_70 { pt3dadd( -171.753, 110.809, -139.033, 0.36 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 95/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -170.78, 102.771, -135.542, 0.24 ) }
    dend_69 { pt3dadd( -172.01, 101.24, -135.966, 0.24 ) }
    dend_69 { pt3dadd( -172.525, 100.6, -136.143, 0.12 ) }
    dend_69 { pt3dadd( -172.817, 100.236, -136.244, 0.6 ) }
    dend_69 { pt3dadd( -173.309, 99.623, -136.414, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_69 { pt3dadd( -173.858, 98.9405, -136.603, 0.12 ) }
    dend_69 { pt3dadd( -174.814, 97.7509, -136.933, 0.36 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 2/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -305.481, 97.8218, -77.1917, 0.12 ) }
    dend_66 { pt3dadd( -309.496, 96.0191, -79.0235, 0.12 ) }
    dend_66 { pt3dadd( -312.794, 94.5385, -80.5279, 0.12 ) }
    dend_66 { pt3dadd( -316.951, 92.6719, -82.4246, 0.12 ) }
    dend_66 { pt3dadd( -321.027, 90.8421, -84.284, 0.12 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 7/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -305.481, 97.8218, -77.1917, 0.12 ) }
    dend_65 { pt3dadd( -306.367, 98.3833, -77.1239, 0.12 ) }
    dend_65 { pt3dadd( -308.495, 99.822, -77.007, 0.12 ) }
    dend_65 { pt3dadd( -309.015, 100.196, -76.9889, 0.6 ) }
    dend_65 { pt3dadd( -309.743, 100.753, -76.977, 0.12 ) }
    dend_65 { pt3dadd( -310.65, 101.468, -76.9752, 0.12 ) }
    dend_65 { pt3dadd( -311.406, 102.08, -76.9833, 0.6 ) }
    dend_65 { pt3dadd( -311.838, 102.46, -76.9651, 0.12 ) }
    dend_65 { pt3dadd( -312.391, 102.982, -76.9193, 0.12 ) }
    dend_65 { pt3dadd( -312.999, 103.512, -76.8315, 0.6 ) }
    dend_65 { pt3dadd( -313.564, 103.978, -76.7263, 0.12 ) }
    dend_65 { pt3dadd( -314.212, 104.462, -76.5905, 0.12 ) }
    dend_65 { pt3dadd( -315.779, 105.616, -76.104, 0.72 ) }
    dend_65 { pt3dadd( -316.157, 105.894, -75.9663, 0.12 ) }
    dend_65 { pt3dadd( -317.605, 106.974, -75.322, 0.12 ) }
    dend_65 { pt3dadd( -317.926, 107.213, -75.1875, 0.6 ) }
    dend_65 { pt3dadd( -318.491, 107.652, -74.9654, 0.6 ) }
    dend_65 { pt3dadd( -320.676, 109.409, -74.4472, 0.12 ) }
    dend_65 { pt3dadd( -321.046, 109.716, -74.4229, 0.48 ) }
    dend_65 { pt3dadd( -322.26, 110.716, -74.4509, 0.12 ) }
    dend_65 { pt3dadd( -323.677, 111.739, -74.6701, 0.84 ) }
    dend_65 { pt3dadd( -324.116, 111.975, -74.7753, 0.12 ) }
    dend_65 { pt3dadd( -326.548, 112.876, -75.5745, 0.12 ) }
    dend_65 { pt3dadd( -327.098, 112.955, -75.8507, 0.96 ) }
    dend_65 { pt3dadd( -327.682, 112.941, -76.1487, 0.24 ) }
    dend_65 { pt3dadd( -329.426, 112.647, -77.0242, 0.12 ) }
    dend_65 { pt3dadd( -330.804, 112.294, -77.6375, 0.12 ) }
    dend_65 { pt3dadd( -331.295, 112.124, -77.8454, 0.84 ) }
    dend_65 { pt3dadd( -333.361, 111.131, -78.6307, 0.12 ) }
    dend_65 { pt3dadd( -334.848, 110.347, -79.2498, 0.12 ) }
    dend_65 { pt3dadd( -335.306, 110.091, -79.4653, 0.6 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 38/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -298.677, -174.367, 228.305, 0.12 ) }
    dend_52 { pt3dadd( -308.18, -174.559, 232.242, 0.12 ) }
    dend_52 { pt3dadd( -317.772, -176.259, 235.491, 0.12 ) }
    dend_52 { pt3dadd( -326.277, -179.593, 240.148, 0.12 ) }
    dend_52 { pt3dadd( -335.585, -183.111, 242.518, 0.12 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -298.677, -174.367, 228.305, 0.24 ) }
    dend_51 { pt3dadd( -307.343, -176.346, 236.306, 0.12 ) }
    dend_51 { pt3dadd( -315.772, -180.045, 243.908, 0.12 ) }
    dend_51 { pt3dadd( -324.232, -183.85, 251.419, 0.12 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.06031, -33.2886, -16.823, 0.12 ) }
    dend_46 { pt3dadd( -6.50858, -40.1427, -24.0123, 0.12 ) }
    dend_46 { pt3dadd( -6.28714, -46.7796, -31.4176, 0.12 ) }
    dend_46 { pt3dadd( -7.16031, -52.6994, -39.3995, 0.12 ) }
    dend_46 { pt3dadd( -8.0223, -59.7745, -46.3251, 0.12 ) }
    dend_46 { pt3dadd( -7.8425, -65.8326, -54.2363, 0.12 ) }
    dend_46 { pt3dadd( -6.81136, -73.1258, -60.879, 0.12 ) }
    dend_46 { pt3dadd( -6.90315, -81.3335, -66.3979, 0.12 ) }
    dend_46 { pt3dadd( -7.2266, -89.784, -71.5129, 0.12 ) }
    dend_46 { pt3dadd( -8.65013, -97.52, -77.5543, 0.12 ) }
    dend_46 { pt3dadd( -11.5627, -104.601, -83.9112, 0.12 ) }
    dend_46 { pt3dadd( -13.3528, -112.11, -90.1551, 0.12 ) }
    dend_46 { pt3dadd( -16.0143, -120.309, -95.0463, 0.12 ) }
    dend_46 { pt3dadd( -16.8583, -128.619, -100.346, 0.12 ) }
    dend_46 { pt3dadd( -17.2891, -136.695, -106.054, 0.12 ) }
    dend_46 { pt3dadd( -15.9133, -145.118, -111.017, 0.12 ) }
    dend_46 { pt3dadd( -13.7036, -153.128, -116.369, 0.12 ) }
    dend_46 { pt3dadd( -10.0701, -161.107, -120.92, 0.12 ) }
    dend_46 { pt3dadd( -4.63159, -168.09, -125.375, 0.12 ) }
    dend_46 { pt3dadd( 1.00432, -174.83, -129.976, 0.12 ) }
    dend_46 { pt3dadd( 6.91849, -182.094, -133.173, 0.12 ) }
    dend_46 { pt3dadd( 10.9738, -190.244, -136.988, 0.12 ) }
    dend_46 { pt3dadd( 15.7817, -197.116, -142.276, 0.12 ) }
    dend_46 { pt3dadd( 20.1253, -203.548, -148.475, 0.12 ) }
    dend_46 { pt3dadd( 22.7509, -210.41, -155.15, 0.12 ) }
    dend_46 { pt3dadd( 25.3877, -218.067, -160.836, 0.12 ) }
    dend_46 { pt3dadd( 28.9103, -225.919, -165.696, 0.12 ) }
    dend_46 { pt3dadd( 31.9775, -234.226, -170.05, 0.12 ) }
    dend_46 { pt3dadd( 34.3027, -242.955, -173.99, 0.12 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 76/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -6.06031, -33.2886, -16.823, 0.24 ) }
    dend_45 { pt3dadd( -6.59279, -42.9206, -23.7704, 0.12 ) }
    dend_45 { pt3dadd( -6.71008, -51.696, -31.8168, 0.12 ) }
    dend_45 { pt3dadd( -4.08791, -61.3547, -38.1669, 0.12 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 80/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -5.03603, -32.828, -13.6848, 0.12 ) }
    dend_43 { pt3dadd( -3.83399, -41.4591, -18.6729, 0.12 ) }
    dend_43 { pt3dadd( -4.00141, -50.3927, -23.2079, 0.12 ) }
    dend_43 { pt3dadd( -3.50798, -60.0874, -25.5097, 0.12 ) }
    dend_43 { pt3dadd( -3.18813, -69.9581, -26.8076, 0.12 ) }
    dend_43 { pt3dadd( -2.43045, -79.8626, -26.24, 0.12 ) }
    dend_43 { pt3dadd( -2.65316, -89.6627, -24.5797, 0.12 ) }
    dend_43 { pt3dadd( -2.2039, -99.0233, -21.2153, 0.12 ) }
    dend_43 { pt3dadd( -1.1727, -107.912, -16.8047, 0.12 ) }
    dend_43 { pt3dadd( 0.116462, -117.473, -14.3406, 0.12 ) }
    dend_43 { pt3dadd( 0.158598, -127.086, -11.7819, 0.12 ) }
    dend_43 { pt3dadd( 2.54528, -136.685, -10.5377, 0.12 ) }
    dend_43 { pt3dadd( 4.47736, -146.329, -8.95108, 0.12 ) }
    dend_43 { pt3dadd( 6.49317, -155.664, -6.08833, 0.12 ) }
    dend_43 { pt3dadd( 8.54494, -164.671, -2.31094, 0.12 ) }
    dend_43 { pt3dadd( 9.77772, -173.726, 1.68027, 0.12 ) }
    dend_43 { pt3dadd( 12.597, -182.89, 4.45943, 0.12 ) }
    dend_43 { pt3dadd( 15.4807, -192.238, 6.43327, 0.12 ) }
    dend_43 { pt3dadd( 18.9009, -201.56, 7.51575, 0.12 ) }
    dend_43 { pt3dadd( 21.1914, -211.038, 9.58919, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_43 { pt3dadd( 23.2755, -220.2, 12.94, 0.12 ) }
    dend_43 { pt3dadd( 25.3777, -229.159, 16.8084, 0.12 ) }
    dend_43 { pt3dadd( 28.5105, -238.237, 19.5555, 0.12 ) }
    dend_43 { pt3dadd( 32.3103, -246.856, 22.9396, 0.12 ) }
    dend_43 { pt3dadd( 37.8257, -253.983, 27.4322, 0.12 ) }
    dend_43 { pt3dadd( 42.5665, -262.49, 29.8023, 0.12 ) }
    dend_43 { pt3dadd( 46.7284, -271.047, 32.9263, 0.12 ) }
    dend_43 { pt3dadd( 51.131, -279.924, 34.3576, 0.12 ) }
    dend_43 { pt3dadd( 56.533, -288.381, 33.9537, 0.12 ) }
    dend_43 { pt3dadd( 61.6019, -297.033, 33.6308, 0.12 ) }
    dend_43 { pt3dadd( 68.6101, -304.151, 32.1268, 0.12 ) }
    dend_43 { pt3dadd( 76.3272, -309.921, 28.9541, 0.12 ) }
    dend_43 { pt3dadd( 84.8271, -314.929, 26.5246, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.03603, -32.828, -13.6848, 0.24 ) }
    dend_34 { pt3dadd( -5.47232, -42.9455, -15.7503, 0.12 ) }
    dend_34 { pt3dadd( -5.64049, -52.7851, -18.9462, 0.12 ) }
    dend_34 { pt3dadd( -7.33957, -62.0187, -23.3742, 0.12 ) }
    dend_34 { pt3dadd( -8.16759, -70.5218, -29.3189, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.2549, 107.982, 18.0189, 0.12 ) }
    dend_21 { pt3dadd( 10.9016, 112.601, 18.1879, 0.12 ) }
    dend_21 { pt3dadd( 10.4325, 114.202, 18.2465, 0.48 ) }
    dend_21 { pt3dadd( 10.2046, 114.98, 18.275, 0.12 ) }
    dend_21 { pt3dadd( 8.15756, 121.967, 18.5306, 0.12 ) }
    dend_21 { pt3dadd( 7.88853, 122.885, 18.5642, 0.72 ) }
    dend_21 { pt3dadd( 7.59996, 123.87, 18.6003, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.2549, 107.982, 18.0189, 0.24 ) }
    dend_20 { pt3dadd( 13.2074, 109.892, 18.4861, 0.24 ) }
    dend_20 { pt3dadd( 13.5766, 110.685, 18.6753, 0.36 ) }
    dend_20 { pt3dadd( 15.1213, 113.942, 19.4822, 0.12 ) }
    dend_20 { pt3dadd( 16.4651, 116.606, 19.9016, 0.12 ) }
    dend_20 { pt3dadd( 16.9758, 117.596, 20.0125, 0.6 ) }
    dend_20 { pt3dadd( 17.2063, 118.038, 20.0521, 0.12 ) }
    dend_20 { pt3dadd( 19.1394, 121.768, 20.2934, 0.12 ) }
    dend_20 { pt3dadd( 20.5432, 124.45, 20.3935, 0.12 ) }
    dend_20 { pt3dadd( 22.2174, 127.796, 20.3786, 0.96 ) }
    dend_20 { pt3dadd( 22.5385, 128.456, 20.3767, 0.36 ) }
    dend_20 { pt3dadd( 23.6387, 130.857, 20.4171, 0.36 ) }
    dend_20 { pt3dadd( 24.2964, 132.443, 20.4814, 1.08 ) }
    dend_20 { pt3dadd( 24.4847, 132.897, 20.4605, 1.32 ) }
    dend_20 { pt3dadd( 25.1586, 134.581, 20.3361, 0.12 ) }
    dend_20 { pt3dadd( 26.6852, 138.376, 20.1104, 0.12 ) }
    dend_20 { pt3dadd( 27.1712, 139.529, 19.9992, 1.32 ) }
    dend_20 { pt3dadd( 27.9372, 141.333, 19.7661, 0.12 ) }
    dend_20 { pt3dadd( 30.1974, 146.341, 19.105, 0.12 ) }
    dend_20 { pt3dadd( 31.8269, 149.548, 18.5637, 0.12 ) }
    dend_20 { pt3dadd( 32.0846, 150.005, 18.4655, 0.6 ) }
    dend_20 { pt3dadd( 32.5271, 150.753, 18.2714, 0.6 ) }
    dend_20 { pt3dadd( 33.1108, 151.584, 18.0144, 0.12 ) }
    dend_20 { pt3dadd( 34.2525, 152.978, 17.5977, 0.12 ) }
    dend_20 { pt3dadd( 36.785, 155.785, 16.9272, 0.12 ) }
    dend_20 { pt3dadd( 37.7329, 156.703, 16.6474, 1.32 ) }
    dend_20 { pt3dadd( 38.8512, 157.668, 16.1494, 0.12 ) }
    dend_20 { pt3dadd( 42.7138, 160.713, 14.1294, 0.12 ) }
    dend_20 { pt3dadd( 43.9875, 161.654, 13.2707, 0.12 ) }
    dend_20 { pt3dadd( 44.6067, 162.106, 12.7715, 0.96 ) }
    dend_20 { pt3dadd( 44.9764, 162.366, 12.4492, 0.12 ) }
    dend_20 { pt3dadd( 49.3079, 165.46, 8.40119, 0.12 ) }
    dend_20 { pt3dadd( 49.8975, 165.931, 7.77474, 1.08 ) }
    dend_20 { pt3dadd( 52.2983, 168.559, 4.98168, 0.12 ) }
    dend_20 { pt3dadd( 52.5716, 168.936, 4.66273, 1.08 ) }
    dend_20 { pt3dadd( 52.9294, 169.539, 4.29688, 1.08 ) }
    dend_20 { pt3dadd( 53.7679, 171.394, 3.71196, 0.24 ) }
    dend_20 { pt3dadd( 54.1974, 172.667, 3.65296, 0.12 ) }
    dend_20 { pt3dadd( 55.5108, 176.859, 3.80817, 0.12 ) }
    dend_20 { pt3dadd( 55.8353, 177.976, 3.94911, 0.48 ) }
    dend_20 { pt3dadd( 56.1927, 179.174, 4.10826, 0.12 ) }
    dend_20 { pt3dadd( 56.9659, 181.758, 4.47268, 0.12 ) }
    dend_20 { pt3dadd( 57.2711, 182.7, 4.63436, 0.6 ) }
    dend_20 { pt3dadd( 57.5133, 183.355, 4.75941, 0.12 ) }
    dend_20 { pt3dadd( 58.1194, 184.836, 5.04326, 0.12 ) }
    dend_20 { pt3dadd( 58.4721, 185.635, 5.20167, 0.6 ) }
    dend_20 { pt3dadd( 58.825, 186.354, 5.36966, 0.12 ) }
    dend_20 { pt3dadd( 61.1971, 190.455, 6.34509, 0.12 ) }
    dend_20 { pt3dadd( 62.553, 192.526, 6.86999, 0.12 ) }
    dend_20 { pt3dadd( 62.9845, 193.086, 6.97423, 1.08 ) }
    dend_20 { pt3dadd( 63.654, 193.816, 7.08809, 1.08 ) }
    dend_20 { pt3dadd( 66.5539, 196.511, 7.45579, 0.12 ) }
    dend_20 { pt3dadd( 70.646, 199.684, 7.85863, 0.12 ) }
    dend_20 { pt3dadd( 72.9268, 201.193, 8.0243, 0.12 ) }
    dend_20 { pt3dadd( 76.9863, 203.706, 8.44396, 0.12 ) }
    dend_20 { pt3dadd( 78.9958, 205.005, 8.68313, 1.2 ) }
    dend_20 { pt3dadd( 80.5451, 206.031, 8.88784, 0.12 ) }
    dend_20 { pt3dadd( 83.9455, 208.171, 9.31764, 0.12 ) }
    dend_20 { pt3dadd( 84.9814, 208.815, 9.51764, 0.48 ) }
    dend_20 { pt3dadd( 87.1669, 210.399, 10.1527, 0.12 ) }
    dend_20 { pt3dadd( 89.8507, 212.972, 11.5972, 0.12 ) }
    dend_20 { pt3dadd( 90.7596, 214.139, 12.1264, 0.12 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 12.6512, -79.7855, -14.6363, 0.12 ) }
    dend_11 { pt3dadd( 15.4591, -82.6439, -16.5408, 0.12 ) }
    dend_11 { pt3dadd( 16.3681, -83.3804, -16.9538, 1.2 ) }
    dend_11 { pt3dadd( 16.8854, -83.6969, -17.1097, 1.2 ) }
    dend_11 { pt3dadd( 17.6458, -84.1058, -17.3327, 0.12 ) }
    dend_11 { pt3dadd( 20.2889, -85.3974, -18.0525, 0.12 ) }
    dend_11 { pt3dadd( 21.9426, -86.1808, -18.4712, 1.32 ) }
    dend_11 { pt3dadd( 24.347, -87.1747, -18.895, 0.12 ) }
    dend_11 { pt3dadd( 27.359, -88.3899, -19.4031, 0.12 ) }
    dend_11 { pt3dadd( 30.1213, -89.5, -19.7998, 0.96 ) }
    dend_11 { pt3dadd( 32.0303, -90.2906, -20.0765, 0.12 ) }
    dend_11 { pt3dadd( 33.6423, -90.9873, -20.2949, 0.12 ) }
    dend_11 { pt3dadd( 35.2197, -91.7485, -20.5172, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_11 { pt3dadd( 36.196, -92.2836, -20.6551, 0.12 ) }
    dend_11 { pt3dadd( 39.961, -94.579, -21.1426, 0.12 ) }
    dend_11 { pt3dadd( 42.0543, -95.9501, -21.3389, 1.44 ) }
    dend_11 { pt3dadd( 43.2605, -96.8019, -21.4536, 0.12 ) }
    dend_11 { pt3dadd( 45.4838, -98.4336, -21.6421, 0.12 ) }
    dend_11 { pt3dadd( 46.27, -99.0582, -21.6957, 0.6 ) }
    dend_11 { pt3dadd( 46.9801, -99.662, -21.7623, 0.12 ) }
    dend_11 { pt3dadd( 49.2611, -101.834, -22.0166, 0.12 ) }
    dend_11 { pt3dadd( 49.9138, -102.49, -22.0832, 0.6 ) }
    dend_11 { pt3dadd( 50.5619, -103.166, -22.1721, 0.12 ) }
    dend_11 { pt3dadd( 51.8562, -104.574, -22.3922, 0.12 ) }
    dend_11 { pt3dadd( 53.5091, -106.546, -22.6894, 1.08 ) }
    dend_11 { pt3dadd( 54.1657, -107.39, -22.8775, 0.12 ) }
    dend_11 { pt3dadd( 55.6413, -109.427, -23.4411, 0.12 ) }
    dend_11 { pt3dadd( 56.0383, -109.999, -23.6031, 0.48 ) }
    dend_11 { pt3dadd( 56.6031, -110.846, -23.8227, 0.12 ) }
    dend_11 { pt3dadd( 58.3886, -113.582, -24.439, 0.12 ) }
    dend_11 { pt3dadd( 59.8835, -115.859, -24.9983, 0.96 ) }
    dend_11 { pt3dadd( 60.5207, -116.774, -25.2658, 0.12 ) }
    dend_11 { pt3dadd( 61.9641, -118.672, -25.8994, 0.12 ) }
    dend_11 { pt3dadd( 63.9322, -121.138, -26.758, 0.12 ) }
    dend_11 { pt3dadd( 64.328, -121.602, -26.917, 0.96 ) }
    dend_11 { pt3dadd( 66.2953, -123.674, -27.5954, 0.12 ) }
    dend_11 { pt3dadd( 68.0325, -125.48, -28.0603, 0.12 ) }
    dend_11 { pt3dadd( 68.7166, -126.154, -28.2427, 0.6 ) }
    dend_11 { pt3dadd( 69.2899, -126.726, -28.3862, 0.12 ) }
    dend_11 { pt3dadd( 71.0602, -128.51, -28.8043, 0.12 ) }
    dend_11 { pt3dadd( 71.7708, -129.281, -28.9361, 0.6 ) }
    dend_11 { pt3dadd( 72.1071, -129.707, -28.9616, 0.6 ) }
    dend_11 { pt3dadd( 72.2745, -129.938, -28.9796, 0.12 ) }
    dend_11 { pt3dadd( 73.6899, -132.047, -29.1564, 0.12 ) }
    dend_11 { pt3dadd( 74.5436, -133.261, -29.3666, 0.48 ) }
    dend_11 { pt3dadd( 74.865, -133.701, -29.4744, 0.48 ) }
    dend_11 { pt3dadd( 76.2002, -135.511, -29.9776, 0.12 ) }
    dend_11 { pt3dadd( 76.674, -136.134, -30.151, 0.48 ) }
    dend_11 { pt3dadd( 77.1871, -136.817, -30.3321, 0.12 ) }
    dend_11 { pt3dadd( 79.2054, -139.489, -31.0017, 0.12 ) }
    dend_11 { pt3dadd( 79.4485, -139.842, -31.068, 0.36 ) }
    dend_11 { pt3dadd( 79.8992, -140.653, -31.1719, 0.12 ) }
    dend_11 { pt3dadd( 80.9829, -142.975, -31.3763, 0.12 ) }
    dend_11 { pt3dadd( 81.3093, -144.014, -31.5186, 0.48 ) }
    dend_11 { pt3dadd( 81.4475, -144.737, -31.6339, 0.12 ) }
    dend_11 { pt3dadd( 81.5969, -147.226, -32.0405, 0.12 ) }
    dend_11 { pt3dadd( 81.4858, -151.689, -32.8878, 0.12 ) }
    dend_11 { pt3dadd( 81.3996, -152.343, -33.0626, 0.12 ) }
    dend_11 { pt3dadd( 80.4031, -156.579, -34.5239, 0.12 ) }
    dend_11 { pt3dadd( 80.1248, -157.469, -34.8883, 1.08 ) }
    dend_11 { pt3dadd( 79.7781, -158.315, -35.2906, 0.12 ) }
    dend_11 { pt3dadd( 79.2783, -159.303, -36.097, 0.12 ) }
    dend_11 { pt3dadd( 78.4263, -160.918, -37.9206, 0.72 ) }
    dend_11 { pt3dadd( 78.262, -161.297, -38.3788, 0.12 ) }
    dend_11 { pt3dadd( 78.1313, -161.765, -39.0275, 0.12 ) }
    dend_11 { pt3dadd( 78.0225, -162.272, -39.7566, 0.96 ) }
    dend_11 { pt3dadd( 77.3747, -166.242, -45.5718, 0.12 ) }
    dend_11 { pt3dadd( 77.3019, -166.805, -46.3768, 0.12 ) }
    dend_11 { pt3dadd( 77.2837, -167.075, -46.7185, 0.6 ) }
    dend_11 { pt3dadd( 77.1684, -169.019, -49.0486, 0.12 ) }
    dend_11 { pt3dadd( 77.1308, -170.09, -50.2199, 0.12 ) }
    dend_11 { pt3dadd( 77.1279, -170.324, -50.4372, 0.36 ) }
    dend_11 { pt3dadd( 77.1081, -171.19, -50.9206, 0.12 ) }
    dend_11 { pt3dadd( 77.0159, -173.975, -52.2283, 0.12 ) }
    dend_11 { pt3dadd( 76.9825, -174.861, -52.5561, 1.08 ) }
    dend_11 { pt3dadd( 76.9034, -175.652, -52.8162, 1.08 ) }
    dend_11 { pt3dadd( 76.8435, -176.056, -52.9649, 0.12 ) }
    dend_11 { pt3dadd( 76.4806, -177.9, -53.661, 0.12 ) }
    dend_11 { pt3dadd( 76.19, -179.041, -54.238, 0.6 ) }
    dend_11 { pt3dadd( 76.0658, -179.383, -54.4434, 0.6 ) }
    dend_11 { pt3dadd( 75.0244, -181.907, -56.317, 0.12 ) }
    dend_11 { pt3dadd( 74.6475, -182.75, -57.1976, 0.48 ) }
    dend_11 { pt3dadd( 74.5129, -183.053, -57.585, 0.48 ) }
    dend_11 { pt3dadd( 73.6743, -185.019, -60.2838, 0.12 ) }
    dend_11 { pt3dadd( 73.4454, -185.603, -61.1813, 0.12 ) }
    dend_11 { pt3dadd( 73.1629, -186.575, -62.4252, 0.48 ) }
    dend_11 { pt3dadd( 72.6828, -188.987, -65.0575, 0.12 ) }
    dend_11 { pt3dadd( 72.5195, -189.953, -66.0009, 0.12 ) }
    dend_11 { pt3dadd( 72.246, -192.072, -67.7226, 0.72 ) }
    dend_11 { pt3dadd( 71.8663, -196.063, -70.3236, 0.12 ) }
    dend_11 { pt3dadd( 71.5623, -200.047, -72.6371, 0.12 ) }
    dend_11 { pt3dadd( 71.5029, -200.85, -73.0621, 0.48 ) }
    dend_11 { pt3dadd( 71.4663, -201.362, -73.3042, 0.12 ) }
    dend_11 { pt3dadd( 71.2088, -204.882, -75.022, 0.12 ) }
    dend_11 { pt3dadd( 71.1498, -205.738, -75.4495, 0.48 ) }
    dend_11 { pt3dadd( 71.1081, -206.549, -75.7675, 0.12 ) }
    dend_11 { pt3dadd( 70.9907, -208.952, -76.8334, 0.12 ) }
    dend_11 { pt3dadd( 71.0031, -209.715, -77.1579, 0.36 ) }
    dend_11 { pt3dadd( 71.1099, -210.692, -77.549, 0.12 ) }
    dend_11 { pt3dadd( 71.4226, -212.07, -78.1441, 0.12 ) }
    dend_11 { pt3dadd( 71.607, -212.535, -78.3543, 0.48 ) }
    dend_11 { pt3dadd( 71.8572, -212.983, -78.5749, 0.12 ) }
    dend_11 { pt3dadd( 73.6207, -215.304, -79.8685, 0.12 ) }
    dend_11 { pt3dadd( 74.2062, -215.961, -80.3405, 0.48 ) }
    dend_11 { pt3dadd( 75.6621, -217.381, -81.5232, 0.12 ) }
    dend_11 { pt3dadd( 78.4153, -219.663, -83.6072, 0.12 ) }
    dend_11 { pt3dadd( 79.4118, -220.366, -84.2887, 0.36 ) }
    dend_11 { pt3dadd( 80.8502, -221.232, -85.2256, 0.36 ) }
    dend_11 { pt3dadd( 82.2912, -221.933, -86.0219, 0.12 ) }
    dend_11 { pt3dadd( 83.5703, -222.46, -86.5704, 0.12 ) }
    dend_11 { pt3dadd( 85.9483, -223.293, -87.3695, 0.12 ) }
    dend_11 { pt3dadd( 88.9811, -224.215, -88.3272, 0.12 ) }
    dend_11 { pt3dadd( 90.7924, -224.768, -88.8172, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_11 { pt3dadd( 93.6918, -225.636, -89.4629, 0.12 ) }
    dend_11 { pt3dadd( 97.5813, -226.7, -90.1548, 0.12 ) }
    dend_11 { pt3dadd( 97.9745, -226.796, -90.2244, 0.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 3/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 12.6512, -79.7855, -14.6363, 0.96 ) }
    dend_6 { pt3dadd( 11.3578, -84.5142, -17.6779, 0.96 ) }
    dend_6 { pt3dadd( 10.8476, -86.8944, -19.1456, 0.96 ) }
    dend_6 { pt3dadd( 10.5468, -89.2079, -20.6239, 1.56 ) }
    dend_6 { pt3dadd( 10.375, -92.2528, -22.5701, 0.96 ) }
    dend_6 { pt3dadd( 10.3925, -94.92, -24.1934, 0.96 ) }
    dend_6 { pt3dadd( 10.4852, -96.044, -24.8475, 0.96 ) }
    dend_6 { pt3dadd( 10.8437, -97.3651, -25.5499, 0.96 ) }
    dend_6 { pt3dadd( 11.6894, -99.5389, -26.7128, 0.48 ) }
    dend_6 { pt3dadd( 12.0871, -100.485, -27.184, 0.48 ) }
    dend_6 { pt3dadd( 12.9309, -102.532, -28.0359, 0.96 ) }
    dend_6 { pt3dadd( 13.9351, -105.246, -29.0163, 0.96 ) }
    dend_6 { pt3dadd( 14.7595, -107.838, -30.0236, 0.96 ) }
    dend_6 { pt3dadd( 15.3502, -110.376, -31.0336, 0.36 ) }
    dend_6 { pt3dadd( 15.6162, -112.15, -31.7407, 0.36 ) }
    dend_6 { pt3dadd( 15.74, -113.383, -32.2544, 0.36 ) }
    dend_6 { pt3dadd( 15.8307, -115.018, -32.95, 0.84 ) }
    dend_6 { pt3dadd( 15.8288, -117.07, -33.7462, 0.12 ) }
    dend_6 { pt3dadd( 15.8081, -118.905, -34.4675, 0.12 ) }
    dend_6 { pt3dadd( 15.7644, -121.066, -35.3016, 1.32 ) }
    dend_6 { pt3dadd( 15.7114, -122.916, -36.0109, 1.32 ) }
    dend_6 { pt3dadd( 15.6626, -123.815, -36.3364, 0.12 ) }
    dend_6 { pt3dadd( 15.5556, -125.308, -36.8893, 0.12 ) }
    dend_6 { pt3dadd( 15.3574, -128.291, -37.8921, 1.2 ) }
    dend_6 { pt3dadd( 15.2676, -129.949, -38.4491, 0.48 ) }
    dend_6 { pt3dadd( 15.1051, -132.057, -39.1919, 0.12 ) }
    dend_6 { pt3dadd( 14.9795, -133.55, -39.7615, 1.32 ) }
    dend_6 { pt3dadd( 14.7644, -135.709, -40.5884, 0.12 ) }
    dend_6 { pt3dadd( 14.524, -137.63, -41.3077, 0.12 ) }
    dend_6 { pt3dadd( 14.4151, -138.637, -41.719, 1.68 ) }
    dend_6 { pt3dadd( 14.1759, -141.464, -43.0153, 0.12 ) }
    dend_6 { pt3dadd( 14.0545, -144.728, -44.6363, 0.36 ) }
    dend_6 { pt3dadd( 14.0127, -146.099, -45.334, 1.2 ) }
    dend_6 { pt3dadd( 13.9583, -147.533, -46.0424, 0.48 ) }
    dend_6 { pt3dadd( 13.9062, -150.77, -48.0075, 0.24 ) }
    dend_6 { pt3dadd( 13.911, -151.419, -48.4444, 0.72 ) }
    dend_6 { pt3dadd( 13.983, -154.309, -50.4756, 0.12 ) }
    dend_6 { pt3dadd( 14.0161, -155.693, -51.4645, 0.12 ) }
    dend_6 { pt3dadd( 14.0709, -157.176, -52.4385, 0.96 ) }
    dend_6 { pt3dadd( 14.3181, -161.513, -54.6773, 0.12 ) }
    dend_6 { pt3dadd( 14.3883, -162.865, -55.195, 0.12 ) }
    dend_6 { pt3dadd( 14.5475, -164.896, -55.8452, 1.44 ) }
    dend_6 { pt3dadd( 14.6986, -166.384, -56.211, 0.48 ) }
    dend_6 { pt3dadd( 15.108, -168.835, -56.7521, 0.12 ) }
    dend_6 { pt3dadd( 16.0566, -173.238, -57.5141, 0.12 ) }
    dend_6 { pt3dadd( 16.3107, -174.258, -57.6573, 1.32 ) }
    dend_6 { pt3dadd( 16.5043, -174.924, -57.7863, 0.84 ) }
    dend_6 { pt3dadd( 16.6388, -175.362, -57.9155, 0.84 ) }
    dend_6 { pt3dadd( 17.7634, -179.143, -59.3688, 0.12 ) }
    dend_6 { pt3dadd( 18.1043, -180.448, -59.9699, 1.08 ) }
    dend_6 { pt3dadd( 18.4992, -182.519, -61.1074, 1.08 ) }
    dend_6 { pt3dadd( 18.818, -184.919, -62.4543, 0.12 ) }
    dend_6 { pt3dadd( 19.0273, -187.535, -63.9153, 0.12 ) }
    dend_6 { pt3dadd( 19.0327, -188.648, -64.489, 1.44 ) }
    dend_6 { pt3dadd( 18.861, -190.568, -65.3629, 0.12 ) }
    dend_6 { pt3dadd( 18.4584, -193.878, -66.7376, 0.12 ) }
    dend_6 { pt3dadd( 18.3259, -194.818, -67.0661, 0.6 ) }
    dend_6 { pt3dadd( 18.2644, -195.325, -67.214, 0.12 ) }
    dend_6 { pt3dadd( 18.0585, -198.512, -68.0155, 0.12 ) }
    dend_6 { pt3dadd( 18.0361, -199.823, -68.3529, 1.2 ) }
    dend_6 { pt3dadd( 18.065, -201.031, -68.6583, 1.2 ) }
    dend_6 { pt3dadd( 18.1009, -201.537, -68.7624, 0.12 ) }
    dend_6 { pt3dadd( 18.2745, -203.371, -69.1517, 0.12 ) }
    dend_6 { pt3dadd( 18.6514, -206.522, -69.8107, 0.84 ) }
    dend_6 { pt3dadd( 18.8238, -207.553, -70.0162, 0.84 ) }
    dend_6 { pt3dadd( 18.9416, -208.321, -70.1475, 0.12 ) }
    dend_6 { pt3dadd( 19.2973, -211.345, -70.5793, 0.12 ) }
    dend_6 { pt3dadd( 19.387, -212.256, -70.6719, 1.08 ) }
    dend_6 { pt3dadd( 19.4802, -213.875, -70.7592, 1.08 ) }
    dend_6 { pt3dadd( 19.4954, -214.937, -70.7613, 0.12 ) }
    dend_6 { pt3dadd( 19.561, -217.503, -71.0204, 0.12 ) }
    dend_6 { pt3dadd( 19.6171, -218.808, -71.2399, 0.6 ) }
    dend_6 { pt3dadd( 19.7003, -220.477, -71.6121, 0.12 ) }
    dend_6 { pt3dadd( 19.6992, -223.225, -72.2908, 0.12 ) }
    dend_6 { pt3dadd( 19.6227, -225.0, -72.7583, 1.56 ) }
    dend_6 { pt3dadd( 19.3786, -229.334, -74.1184, 0.12 ) }
    dend_6 { pt3dadd( 19.2781, -230.963, -74.6797, 0.12 ) }
    dend_6 { pt3dadd( 19.1663, -232.723, -75.2854, 0.12 ) }
    dend_6 { pt3dadd( 18.8188, -237.91, -77.0293, 0.12 ) }
    dend_6 { pt3dadd( 18.7274, -239.322, -77.475, 1.32 ) }
    dend_6 { pt3dadd( 18.5541, -241.995, -78.1944, 0.48 ) }
    dend_6 { pt3dadd( 18.4059, -244.091, -78.5956, 0.12 ) }
    dend_6 { pt3dadd( 18.2741, -247.195, -79.1546, 0.12 ) }
    dend_6 { pt3dadd( 18.2869, -248.373, -79.3332, 0.84 ) }
    dend_6 { pt3dadd( 18.379, -249.277, -79.4371, 0.84 ) }
    dend_6 { pt3dadd( 18.6081, -251.1, -79.5717, 0.12 ) }
    dend_6 { pt3dadd( 18.9309, -253.33, -79.7004, 0.12 ) }
    dend_6 { pt3dadd( 19.0785, -254.103, -79.7785, 0.48 ) }
    dend_6 { pt3dadd( 19.288, -255.032, -79.9145, 0.12 ) }
    dend_6 { pt3dadd( 19.8781, -257.37, -80.3271, 0.12 ) }
    dend_6 { pt3dadd( 20.2355, -258.611, -80.5692, 0.84 ) }
    dend_6 { pt3dadd( 20.8394, -260.376, -81.0882, 0.84 ) }
    dend_6 { pt3dadd( 21.2586, -261.382, -81.4005, 0.12 ) }
    dend_6 { pt3dadd( 21.5782, -262.091, -81.6012, 0.12 ) }
    dend_6 { pt3dadd( 21.6981, -262.349, -81.6662, 0.12 ) }
    dend_6 { pt3dadd( 22.4216, -263.908, -82.1208, 0.96 ) }
    dend_6 { pt3dadd( 23.4471, -266.214, -82.8363, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( 25.124, -270.316, -84.0578, 0.12 ) }
    dend_6 { pt3dadd( 25.6277, -271.679, -84.4791, 0.6 ) }
    dend_6 { pt3dadd( 25.9437, -272.614, -84.8086, 0.6 ) }
    dend_6 { pt3dadd( 26.7614, -275.431, -85.8476, 0.12 ) }
    dend_6 { pt3dadd( 27.1036, -276.849, -86.4671, 0.12 ) }
    dend_6 { pt3dadd( 27.3825, -278.292, -87.1177, 0.6 ) }
    dend_6 { pt3dadd( 27.5475, -279.5, -87.6875, 0.6 ) }
    dend_6 { pt3dadd( 28.0072, -283.517, -89.501, 0.12 ) }
    dend_6 { pt3dadd( 28.1423, -285.039, -90.0793, 0.96 ) }
    dend_6 { pt3dadd( 28.4598, -289.058, -91.2313, 0.12 ) }
    dend_6 { pt3dadd( 28.6138, -291.24, -91.7601, 0.12 ) }
    dend_6 { pt3dadd( 28.8601, -295.006, -92.4687, 0.12 ) }
    dend_6 { pt3dadd( 28.8898, -295.476, -92.5228, 1.08 ) }
    dend_6 { pt3dadd( 29.0155, -298.101, -92.516, 0.12 ) }
    dend_6 { pt3dadd( 29.1643, -300.639, -92.3487, 0.12 ) }
    dend_6 { pt3dadd( 29.281, -301.82, -92.2181, 0.96 ) }
    dend_6 { pt3dadd( 29.4936, -302.868, -92.1376, 0.96 ) }
    dend_6 { pt3dadd( 29.5917, -303.279, -92.1257, 0.12 ) }
    dend_6 { pt3dadd( 30.4294, -306.986, -92.1732, 0.12 ) }
    dend_6 { pt3dadd( 30.7165, -308.27, -92.3237, 1.56 ) }
    dend_6 { pt3dadd( 31.2962, -311.373, -92.8709, 0.12 ) }
    dend_6 { pt3dadd( 31.927, -315.38, -93.7354, 0.12 ) }
    dend_6 { pt3dadd( 32.4195, -319.074, -94.7838, 0.12 ) }
    dend_6 { pt3dadd( 32.5868, -320.621, -95.316, 0.96 ) }
    dend_6 { pt3dadd( 32.8191, -323.814, -96.6582, 0.6 ) }
    dend_6 { pt3dadd( 32.9189, -326.236, -97.8965, 0.12 ) }
    dend_6 { pt3dadd( 32.8933, -326.97, -98.3229, 0.12 ) }
    dend_6 { pt3dadd( 32.8363, -328.976, -99.8028, 0.72 ) }
    dend_6 { pt3dadd( 32.858, -329.913, -100.541, 0.72 ) }
    dend_6 { pt3dadd( 32.8903, -330.376, -100.935, 0.72 ) }
    dend_6 { pt3dadd( 32.9061, -333.151, -103.335, 0.12 ) }
    dend_6 { pt3dadd( 32.8241, -335.307, -105.332, 0.12 ) }
    dend_6 { pt3dadd( 32.4506, -338.219, -108.061, 1.08 ) }
    dend_6 { pt3dadd( 32.227, -339.351, -109.208, 1.08 ) }
    dend_6 { pt3dadd( 31.2366, -342.712, -112.894, 0.12 ) }
    dend_6 { pt3dadd( 30.3514, -344.93, -115.454, 0.12 ) }
    dend_6 { pt3dadd( 30.0045, -345.551, -116.182, 0.96 ) }
    dend_6 { pt3dadd( 29.0041, -347.05, -117.93, 0.96 ) }
    dend_6 { pt3dadd( 27.1909, -349.457, -120.376, 0.12 ) }
    dend_6 { pt3dadd( 25.9773, -351.015, -121.789, 0.12 ) }
    dend_6 { pt3dadd( 25.6102, -351.478, -122.1, 0.48 ) }
    dend_6 { pt3dadd( 24.499, -353.105, -123.113, 0.12 ) }
    dend_6 { pt3dadd( 23.7589, -354.221, -123.741, 0.12 ) }
    dend_6 { pt3dadd( 23.3019, -354.975, -124.054, 0.12 ) }
    dend_6 { pt3dadd( 22.3565, -356.398, -124.346, 0.12 ) }
    dend_6 { pt3dadd( 21.2564, -358.23, -124.685, 0.48 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 46/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.256858, -69.0167, 22.5103, 0.12 ) }
    dend_4 { pt3dadd( 0.797933, -71.0981, 24.7559, 0.12 ) }
    dend_4 { pt3dadd( 1.20291, -71.6743, 25.6904, 0.96 ) }
    dend_4 { pt3dadd( 1.97367, -72.5415, 27.7143, 0.24 ) }
    dend_4 { pt3dadd( 2.4714, -72.7873, 29.006, 0.24 ) }
    dend_4 { pt3dadd( 2.91876, -72.7163, 30.0286, 0.72 ) }
    dend_4 { pt3dadd( 3.24806, -72.484, 30.5696, 0.12 ) }
    dend_4 { pt3dadd( 5.02882, -70.4108, 32.4421, 0.12 ) }
    dend_4 { pt3dadd( 6.11098, -69.0801, 33.5417, 0.12 ) }
    dend_4 { pt3dadd( 7.40498, -67.3489, 34.7173, 0.12 ) }
    dend_4 { pt3dadd( 7.9833, -66.5025, 35.2323, 0.12 ) }
    dend_4 { pt3dadd( 9.28532, -64.5545, 36.298, 0.12 ) }
    dend_4 { pt3dadd( 9.91296, -63.6774, 36.7235, 0.12 ) }
    dend_4 { pt3dadd( 11.8199, -61.6306, 37.4099, 0.12 ) }
    dend_4 { pt3dadd( 15.3521, -57.4133, 43.2093, 0.12 ) }
    dend_4 { pt3dadd( 17.9598, -52.7835, 49.1646, 0.12 ) }
    dend_4 { pt3dadd( 21.5354, -47.4617, 53.8814, 0.12 ) }
    dend_4 { pt3dadd( 25.3575, -42.8444, 59.153, 0.12 ) }
    dend_4 { pt3dadd( 29.2471, -38.1941, 64.344, 0.12 ) }
    dend_4 { pt3dadd( 33.9754, -33.524, 68.7635, 0.12 ) }
    dend_4 { pt3dadd( 38.4884, -28.8181, 73.3642, 0.12 ) }
    dend_4 { pt3dadd( 43.8495, -24.7936, 77.7287, 0.12 ) }
    dend_4 { pt3dadd( 49.7906, -21.1426, 81.667, 0.12 ) }
    dend_4 { pt3dadd( 56.3655, -17.8748, 84.8864, 0.12 ) }
    dend_4 { pt3dadd( 63.3443, -15.9051, 88.3543, 0.12 ) }
    dend_4 { pt3dadd( 70.6718, -13.4056, 90.4883, 0.12 ) }
    dend_4 { pt3dadd( 78.1046, -10.5858, 91.5897, 0.12 ) }
    dend_4 { pt3dadd( 85.3558, -8.1723, 94.0615, 0.12 ) }
    dend_4 { pt3dadd( 92.0141, -5.05162, 97.2629, 0.12 ) }
    dend_4 { pt3dadd( 98.4266, -2.10729, 101.081, 0.12 ) }
    dend_4 { pt3dadd( 105.453, 0.235375, 104.191, 0.12 ) }
    dend_4 { pt3dadd( 112.893, 2.10325, 106.595, 0.12 ) }
    dend_4 { pt3dadd( 119.678, 3.96011, 110.488, 0.12 ) }
    dend_4 { pt3dadd( 125.752, 6.30663, 115.191, 0.12 ) }
    dend_4 { pt3dadd( 130.816, 9.80374, 120.321, 0.12 ) }
    dend_4 { pt3dadd( 136.076, 12.4498, 125.778, 0.12 ) }
    dend_4 { pt3dadd( 142.314, 14.6922, 130.318, 0.12 ) }
    dend_4 { pt3dadd( 147.974, 16.9559, 135.55, 0.12 ) }
    dend_4 { pt3dadd( 154.46, 17.8858, 140.222, 0.12 ) }
    dend_4 { pt3dadd( 161.367, 19.6428, 143.944, 0.12 ) }
    dend_4 { pt3dadd( 168.806, 21.9662, 145.892, 0.12 ) }
    dend_4 { pt3dadd( 176.361, 24.5666, 146.688, 0.12 ) }
    dend_4 { pt3dadd( 184.325, 25.6156, 146.225, 0.12 ) }
    dend_4 { pt3dadd( 192.19, 27.2367, 146.664, 0.12 ) }
    dend_4 { pt3dadd( 200.215, 27.7811, 146.923, 0.12 ) }
    dend_4 { pt3dadd( 208.185, 28.8801, 147.038, 0.12 ) }
    dend_4 { pt3dadd( 216.119, 30.1891, 147.268, 0.12 ) }
    dend_4 { pt3dadd( 223.998, 30.9565, 148.717, 0.12 ) }
    dend_4 { pt3dadd( 231.784, 32.1533, 150.351, 0.12 ) }
    dend_4 { pt3dadd( 239.39, 32.4722, 152.962, 0.12 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 96/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.256858, -69.0167, 22.5103, 0.12 ) }
    dend_3 { pt3dadd( -1.76259, -71.7255, 23.294, 0.12 ) }
    dend_3 { pt3dadd( -2.67411, -73.3652, 23.7684, 0.12 ) }
    dend_3 { pt3dadd( -3.24223, -74.3873, 24.0641, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_3 { pt3dadd( -6.51882, -82.1271, 27.9757, 0.12 ) }
    dend_3 { pt3dadd( -8.64614, -89.4056, 33.3422, 0.12 ) }
    dend_3 { pt3dadd( -11.9643, -95.2359, 39.8449, 0.12 ) }
    dend_3 { pt3dadd( -14.5134, -101.449, 46.3216, 0.12 ) }
    dend_3 { pt3dadd( -16.3133, -108.412, 52.2214, 0.12 ) }
    dend_3 { pt3dadd( -19.9183, -115.286, 57.3546, 0.12 ) }
    dend_3 { pt3dadd( -24.2435, -121.556, 62.7395, 0.12 ) }
    dend_3 { pt3dadd( -27.5164, -128.71, 67.689, 0.12 ) }
    dend_3 { pt3dadd( -29.2049, -136.528, 72.3702, 0.12 ) }
    dend_3 { pt3dadd( -30.8769, -144.928, 75.8378, 0.12 ) }
    dend_3 { pt3dadd( -31.2648, -153.348, 79.6246, 0.12 ) }
    dend_3 { pt3dadd( -31.694, -161.584, 83.8094, 0.12 ) }
    dend_3 { pt3dadd( -31.6613, -170.199, 87.1215, 0.12 ) }
    dend_3 { pt3dadd( -30.908, -178.898, 90.1022, 0.12 ) }
    dend_3 { pt3dadd( -29.7493, -187.216, 93.9667, 0.12 ) }
    dend_3 { pt3dadd( -29.1302, -195.824, 97.2428, 0.12 ) }
    dend_3 { pt3dadd( -27.6798, -204.547, 99.8698, 0.12 ) }
    dend_3 { pt3dadd( -27.8049, -213.031, 103.519, 0.12 ) }
    dend_3 { pt3dadd( -29.2496, -221.751, 106.16, 0.12 ) }
    dend_3 { pt3dadd( -30.4297, -230.649, 108.252, 0.12 ) }
    dend_3 { pt3dadd( -32.27, -239.643, 109.015, 0.12 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -8.16759, -70.5218, -29.3189, 0.12 ) }
    dend_40 { pt3dadd( -6.34703, -78.4208, -37.7979, 0.12 ) }
    dend_40 { pt3dadd( -5.16931, -87.7199, -44.7662, 0.12 ) }
    dend_40 { pt3dadd( -2.67035, -94.8776, -53.7474, 0.12 ) }
    dend_40 { pt3dadd( 2.0259, -101.486, -62.2724, 0.12 ) }
    dend_40 { pt3dadd( 7.55479, -105.733, -71.8245, 0.12 ) }
    dend_40 { pt3dadd( 13.6355, -109.808, -81.1154, 0.12 ) }
    dend_40 { pt3dadd( 19.972, -114.632, -89.8374, 0.12 ) }
    dend_40 { pt3dadd( 27.3832, -119.914, -97.3426, 0.12 ) }
    dend_40 { pt3dadd( 32.8205, -125.994, -105.84, 0.12 ) }
    dend_40 { pt3dadd( 38.9552, -131.425, -114.325, 0.12 ) }
    dend_40 { pt3dadd( 44.6881, -136.21, -123.478, 0.12 ) }
    dend_40 { pt3dadd( 50.5779, -143.447, -130.603, 0.12 ) }
    dend_40 { pt3dadd( 58.8336, -149.274, -136.657, 0.12 ) }
    dend_40 { pt3dadd( 67.5699, -155.476, -141.526, 0.12 ) }
    dend_40 { pt3dadd( 76.117, -161.625, -146.784, 0.12 ) }
    dend_40 { pt3dadd( 85.5288, -166.889, -151.56, 0.12 ) }
    dend_40 { pt3dadd( 95.2101, -173.069, -154.124, 0.12 ) }
    dend_40 { pt3dadd( 105.806, -177.986, -155.815, 0.12 ) }
    dend_40 { pt3dadd( 115.25, -184.323, -158.818, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 41/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.16759, -70.5218, -29.3189, 0.24 ) }
    dend_35 { pt3dadd( -11.0856, -80.816, -30.4999, 0.12 ) }
    dend_35 { pt3dadd( -14.5544, -90.6996, -33.071, 0.12 ) }
    dend_35 { pt3dadd( -19.4981, -99.9658, -35.6584, 0.12 ) }
    dend_35 { pt3dadd( -23.1923, -109.906, -37.6141, 0.12 ) }
    dend_35 { pt3dadd( -25.2439, -120.406, -38.692, 0.12 ) }
    dend_35 { pt3dadd( -28.3391, -130.272, -41.7603, 0.12 ) }
    dend_35 { pt3dadd( -30.0502, -140.497, -44.6593, 0.12 ) }
    dend_35 { pt3dadd( -31.9924, -150.927, -46.43, 0.12 ) }
    dend_35 { pt3dadd( -33.1153, -161.039, -49.96, 0.12 ) }
    dend_35 { pt3dadd( -33.2883, -171.431, -52.7215, 0.12 ) }
    dend_35 { pt3dadd( -33.3098, -181.334, -56.9724, 0.12 ) }
    dend_35 { pt3dadd( -34.366, -191.627, -59.9263, 0.12 ) }
    dend_35 { pt3dadd( -36.1522, -202.131, -61.3654, 0.12 ) }
    dend_35 { pt3dadd( -39.2835, -212.047, -64.2203, 0.12 ) }
    dend_35 { pt3dadd( -42.8936, -221.895, -66.7418, 0.12 ) }
    dend_35 { pt3dadd( -47.4241, -231.605, -68.0578, 0.12 ) }
    dend_35 { pt3dadd( -52.1267, -241.314, -67.6257, 0.12 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 7.59996, 123.87, 18.6003, 0.12 ) }
    dend_27 { pt3dadd( 7.91706, 128.682, 19.7489, 0.12 ) }
    dend_27 { pt3dadd( 7.95094, 130.461, 20.084, 1.08 ) }
    dend_27 { pt3dadd( 7.95315, 131.631, 20.2781, 0.12 ) }
    dend_27 { pt3dadd( 7.92488, 136.482, 21.0182, 0.12 ) }
    dend_27 { pt3dadd( 7.91723, 138.048, 21.2381, 0.48 ) }
    dend_27 { pt3dadd( 7.88817, 138.814, 21.3044, 0.12 ) }
    dend_27 { pt3dadd( 7.57045, 142.263, 21.2979, 0.12 ) }
    dend_27 { pt3dadd( 7.43894, 143.164, 21.2742, 0.84 ) }
    dend_27 { pt3dadd( 7.28666, 143.918, 21.2498, 0.12 ) }
    dend_27 { pt3dadd( 6.51598, 147.188, 21.1522, 0.12 ) }
    dend_27 { pt3dadd( 5.35294, 152.038, 21.0567, 0.12 ) }
    dend_27 { pt3dadd( 4.74267, 154.626, 21.0312, 0.12 ) }
    dend_27 { pt3dadd( 4.17637, 157.336, 21.0203, 0.84 ) }
    dend_27 { pt3dadd( 3.8109, 159.24, 21.0186, 0.12 ) }
    dend_27 { pt3dadd( 3.06401, 163.565, 21.045, 0.12 ) }
    dend_27 { pt3dadd( 2.9496, 164.291, 21.0585, 0.6 ) }
    dend_27 { pt3dadd( 2.8325, 165.442, 21.1189, 0.12 ) }
    dend_27 { pt3dadd( 2.46827, 171.697, 21.3713, 0.12 ) }
    dend_27 { pt3dadd( 2.4606, 172.6, 21.364, 0.72 ) }
    dend_27 { pt3dadd( 2.45323, 173.118, 21.3568, 0.12 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 80/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 7.59996, 123.87, 18.6003, 0.12 ) }
    dend_22 { pt3dadd( 5.04571, 126.375, 19.7391, 0.12 ) }
    dend_22 { pt3dadd( 4.22928, 127.175, 20.1031, 0.48 ) }
    dend_22 { pt3dadd( 0.818884, 130.519, 21.6236, 0.12 ) }
    dend_22 { pt3dadd( 0.00245499, 131.32, 21.9876, 0.48 ) }
    dend_22 { pt3dadd( -7.58083, 139.489, 25.5839, 0.48 ) }
    dend_22 { pt3dadd( -14.7714, 147.604, 30.0089, 0.48 ) }
    dend_22 { pt3dadd( -22.1237, 155.79, 34.0167, 0.48 ) }
    dend_22 { pt3dadd( -29.664, 163.389, 38.8064, 0.48 ) }
    dend_22 { pt3dadd( -36.3222, 171.349, 44.2375, 0.48 ) }
    dend_22 { pt3dadd( -43.3594, 178.688, 50.093, 0.48 ) }
    dend_22 { pt3dadd( -49.1406, 187.062, 55.8562, 0.48 ) }
    dend_22 { pt3dadd( -53.8841, 194.486, 63.5872, 0.48 ) }
    dend_22 { pt3dadd( -56.4707, 202.303, 71.9002, 0.48 ) }
    dend_22 { pt3dadd( -58.34, 207.917, 82.0694, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.2564, -358.23, -124.685, 0.12 ) }
    dend_8 { pt3dadd( 21.2587, -359.318, -125.753, 0.12 ) }
    dend_8 { pt3dadd( 21.3563, -360.983, -127.532, 0.48 ) }
    dend_8 { pt3dadd( 21.4268, -361.863, -128.5, 0.12 ) }
    dend_8 { pt3dadd( 21.4906, -362.551, -129.25, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_8 { pt3dadd( 21.6091, -363.83, -130.646, 0.96 ) }
    dend_8 { pt3dadd( 21.8021, -365.913, -132.917, 0.12 ) }
    dend_8 { pt3dadd( 22.0143, -366.901, -133.982, 0.12 ) }
    dend_8 { pt3dadd( 22.0143, -366.901, -133.982, 0.48 ) }
    dend_8 { pt3dadd( 22.1171, -367.238, -134.376, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 5/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.2564, -358.23, -124.685, 0.12 ) }
    dend_7 { pt3dadd( 21.1295, -360.055, -126.88, 0.12 ) }
    dend_7 { pt3dadd( 21.0851, -360.694, -127.649, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 8/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 115.25, -184.323, -158.818, 0.12 ) }
    dend_42 { pt3dadd( 121.167, -189.768, -164.759, 0.12 ) }
    dend_42 { pt3dadd( 126.714, -195.862, -170.383, 0.12 ) }
    dend_42 { pt3dadd( 131.409, -202.248, -176.433, 0.12 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 12/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 115.25, -184.323, -158.818, 0.24 ) }
    dend_41 { pt3dadd( 120.447, -189.144, -164.872, 0.12 ) }
    dend_41 { pt3dadd( 124.198, -192.946, -172.555, 0.12 ) }
    dend_41 { pt3dadd( 127.104, -197.583, -180.123, 0.12 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -52.1267, -241.314, -67.6257, 0.12 ) }
    dend_37 { pt3dadd( -55.4088, -252.288, -70.2666, 0.12 ) }
    dend_37 { pt3dadd( -60.1488, -262.76, -72.8396, 0.12 ) }
    dend_37 { pt3dadd( -64.2851, -273.64, -74.5155, 0.12 ) }
    dend_37 { pt3dadd( -67.8772, -284.378, -77.7139, 0.12 ) }
    dend_37 { pt3dadd( -70.1724, -295.436, -80.9546, 0.12 ) }
    dend_37 { pt3dadd( -72.0308, -306.692, -83.7206, 0.12 ) }
    dend_37 { pt3dadd( -75.4434, -316.972, -88.3721, 0.12 ) }
    dend_37 { pt3dadd( -79.2584, -326.847, -93.5988, 0.12 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -52.1267, -241.314, -67.6257, 0.24 ) }
    dend_36 { pt3dadd( -54.0047, -249.388, -69.2347, 0.12 ) }
    dend_36 { pt3dadd( -56.3767, -257.481, -69.4436, 0.12 ) }
    dend_36 { pt3dadd( -57.9037, -265.747, -68.8644, 0.12 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 29/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.45323, 173.118, 21.3568, 0.12 ) }
    dend_29 { pt3dadd( 1.39172, 176.756, 23.5647, 0.12 ) }
    dend_29 { pt3dadd( 0.565545, 180.028, 25.4895, 0.12 ) }
    dend_29 { pt3dadd( 0.173175, 181.582, 26.4037, 0.48 ) }
    dend_29 { pt3dadd( -0.095461, 182.646, 27.0296, 0.12 ) }
    dend_29 { pt3dadd( -1.25822, 187.252, 29.7386, 0.12 ) }
    dend_29 { pt3dadd( -1.645, 188.783, 30.6397, 0.48 ) }
    dend_29 { pt3dadd( -2.01675, 190.189, 31.5983, 0.12 ) }
    dend_29 { pt3dadd( -4.48836, 196.891, 37.3113, 0.12 ) }
    dend_29 { pt3dadd( -6.07404, 202.443, 44.4491, 0.12 ) }
    dend_29 { pt3dadd( -7.90458, 208.517, 51.0635, 0.12 ) }
    dend_29 { pt3dadd( -11.2051, 214.373, 57.3138, 0.12 ) }
    dend_29 { pt3dadd( -12.8915, 220.826, 63.5803, 0.12 ) }
    dend_29 { pt3dadd( -14.5022, 228.136, 68.791, 0.12 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.45323, 173.118, 21.3568, 0.12 ) }
    dend_28 { pt3dadd( 1.48664, 176.617, 20.7172, 0.12 ) }
    dend_28 { pt3dadd( 1.24195, 177.503, 20.5553, 0.84 ) }
    dend_28 { pt3dadd( 1.08823, 178.06, 20.4536, 0.12 ) }
    dend_28 { pt3dadd( -1.28647, 184.927, 17.6483, 0.12 ) }
    dend_28 { pt3dadd( -4.8092, 191.566, 15.5609, 0.12 ) }
    dend_28 { pt3dadd( -8.56596, 198.084, 13.4815, 0.12 ) }
    dend_28 { pt3dadd( -11.9033, 205.049, 12.5189, 0.12 ) }
    dend_28 { pt3dadd( -15.2235, 212.066, 12.9655, 0.12 ) }
    dend_28 { pt3dadd( -18.9001, 218.79, 14.3497, 0.12 ) }
    dend_28 { pt3dadd( -20.9273, 226.204, 15.3612, 0.12 ) }
    dend_28 { pt3dadd( -23.9733, 233.177, 16.951, 0.12 ) }
    dend_28 { pt3dadd( -28.7643, 239.295, 17.7956, 0.12 ) }
    dend_28 { pt3dadd( -33.5562, 245.285, 19.3141, 0.12 ) }
    dend_28 { pt3dadd( -38.5926, 251.221, 20.0992, 0.12 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -58.34, 207.917, 82.0694, 0.12 ) }
    dend_24 { pt3dadd( -68.5203, 210.864, 84.4992, 0.12 ) }
    dend_24 { pt3dadd( -79.1224, 212.658, 86.1753, 0.12 ) }
    dend_24 { pt3dadd( -89.2225, 214.667, 89.6862, 0.12 ) }
    dend_24 { pt3dadd( -98.9903, 218.187, 92.8872, 0.12 ) }
    dend_24 { pt3dadd( -109.455, 220.345, 94.9393, 0.12 ) }
    dend_24 { pt3dadd( -119.555, 223.686, 97.1686, 0.12 ) }
    dend_24 { pt3dadd( -130.081, 225.444, 99.3003, 0.12 ) }
    dend_24 { pt3dadd( -140.261, 229.241, 99.472, 0.12 ) }
    dend_24 { pt3dadd( -149.363, 234.663, 97.1598, 0.12 ) }
    dend_24 { pt3dadd( -157.908, 240.844, 94.7134, 0.12 ) }
    dend_24 { pt3dadd( -167.36, 245.882, 92.9772, 0.12 ) }
    dend_24 { pt3dadd( -176.829, 250.892, 91.2545, 0.12 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 71/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -58.34, 207.917, 82.0694, 0.12 ) }
    dend_23 { pt3dadd( -57.2911, 216.672, 86.6431, 0.12 ) }
    dend_23 { pt3dadd( -55.106, 224.889, 91.816, 0.12 ) }
    dend_23 { pt3dadd( -54.0257, 233.304, 97.0088, 0.12 ) }
    dend_23 { pt3dadd( -53.0975, 242.742, 99.8689, 0.12 ) }
    dend_23 { pt3dadd( -53.2593, 251.767, 103.993, 0.12 ) }
    dend_23 { pt3dadd( -53.3395, 260.192, 109.285, 0.12 ) }
    dend_23 { pt3dadd( -54.4491, 268.392, 114.83, 0.12 ) }
    dend_23 { pt3dadd( -55.8163, 277.592, 118.284, 0.12 ) }
    dend_23 { pt3dadd( -57.1774, 287.336, 119.406, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 22.1171, -367.238, -134.376, 0.12 ) }
    dend_10 { pt3dadd( 22.3988, -368.299, -135.863, 0.12 ) }
    dend_10 { pt3dadd( 22.5256, -368.935, -137.136, 0.96 ) }
    dend_10 { pt3dadd( 22.5698, -370.042, -140.026, 0.12 ) }
    dend_10 { pt3dadd( 22.4988, -370.637, -141.883, 0.12 ) }
    dend_10 { pt3dadd( 22.3997, -370.934, -143.318, 0.96 ) }
    dend_10 { pt3dadd( 22.3121, -371.048, -144.129, 0.96 ) }
    dend_10 { pt3dadd( 21.719, -371.124, -147.57, 0.12 ) }
    dend_10 { pt3dadd( 21.3782, -370.998, -149.095, 0.12 ) }
    dend_10 { pt3dadd( 21.264, -370.916, -149.52, 0.84 ) }
    dend_10 { pt3dadd( 20.0869, -369.979, -153.108, 0.12 ) }
    dend_10 { pt3dadd( 19.6924, -369.693, -154.131, 0.12 ) }
    dend_10 { pt3dadd( 19.5292, -369.589, -154.519, 0.72 ) }
    dend_10 { pt3dadd( 19.1739, -369.432, -155.278, 0.72 ) }
    dend_10 { pt3dadd( 18.7634, -369.221, -156.235, 0.12 ) }
    dend_10 { pt3dadd( 18.1515, -368.834, -157.572, 0.12 ) }
    dend_10 { pt3dadd( 18.0522, -368.744, -157.843, 0.6 ) }
    dend_10 { pt3dadd( 17.8934, -368.516, -158.665, 0.6 ) }
    dend_10 { pt3dadd( 17.912, -368.118, -161.508, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_10 { pt3dadd( 18.0876, -368.022, -163.215, 0.12 ) }
    dend_10 { pt3dadd( 18.1318, -368.012, -163.561, 0.84 ) }
    dend_10 { pt3dadd( 18.5457, -368.039, -166.504, 0.12 ) }
    dend_10 { pt3dadd( 18.7523, -368.126, -167.805, 0.72 ) }
    dend_10 { pt3dadd( 19.861, -369.025, -174.33, 0.12 ) }
    dend_10 { pt3dadd( 20.4789, -369.84, -177.988, 0.12 ) }
    dend_10 { pt3dadd( 20.5993, -370.073, -178.817, 0.72 ) }
    dend_10 { pt3dadd( 20.7022, -370.414, -179.966, 0.72 ) }
    dend_10 { pt3dadd( 20.885, -371.434, -183.042, 0.12 ) }
    dend_10 { pt3dadd( 20.9044, -371.845, -184.253, 0.48 ) }
    dend_10 { pt3dadd( 20.8733, -372.129, -184.832, 0.12 ) }
    dend_10 { pt3dadd( 20.6418, -373.193, -186.907, 0.12 ) }
    dend_10 { pt3dadd( 20.3946, -374.38, -189.656, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.1171, -367.238, -134.376, 0.12 ) }
    dend_9 { pt3dadd( 21.8196, -368.876, -135.466, 0.12 ) }
    dend_9 { pt3dadd( 21.4324, -371.381, -137.189, 0.48 ) }
    dend_9 { pt3dadd( 20.9372, -375.09, -139.69, 0.12 ) }
    dend_9 { pt3dadd( 20.8552, -375.687, -140.084, 0.48 ) }
    dend_9 { pt3dadd( 20.4761, -378.06, -141.629, 0.12 ) }
    dend_9 { pt3dadd( 19.9849, -380.835, -143.641, 0.12 ) }
    dend_9 { pt3dadd( 19.7002, -382.434, -144.93, 0.48 ) }
    dend_9 { pt3dadd( 19.5634, -383.092, -145.507, 0.24 ) }
    dend_9 { pt3dadd( 19.3578, -383.856, -146.125, 0.24 ) }
    dend_9 { pt3dadd( 19.0587, -384.802, -146.885, 0.6 ) }
    dend_9 { pt3dadd( 17.7625, -388.033, -149.369, 0.12 ) }
    dend_9 { pt3dadd( 17.0549, -389.585, -150.804, 0.12 ) }
    dend_9 { pt3dadd( 16.8324, -390.017, -151.233, 0.6 ) }
    dend_9 { pt3dadd( 16.5364, -390.561, -151.811, 0.6 ) }
    dend_9 { pt3dadd( 16.2201, -391.137, -152.511, 0.12 ) }
    dend_9 { pt3dadd( 15.6857, -391.942, -153.651, 0.12 ) }
    dend_9 { pt3dadd( 14.4585, -393.075, -156.284, 0.12 ) }
    dend_9 { pt3dadd( 14.3969, -393.122, -156.428, 0.72 ) }
    dend_9 { pt3dadd( 14.1347, -393.299, -157.093, 0.72 ) }
    dend_9 { pt3dadd( 13.1353, -393.843, -159.808, 0.12 ) }
    dend_9 { pt3dadd( 12.6072, -394.047, -161.342, 0.12 ) }
    dend_9 { pt3dadd( 11.3712, -394.296, -165.1, 0.12 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -79.2584, -326.847, -93.5988, 0.12 ) }
    dend_39 { pt3dadd( -81.608, -334.322, -95.7011, 0.12 ) }
    dend_39 { pt3dadd( -85.2438, -341.472, -97.0515, 0.12 ) }
    dend_39 { pt3dadd( -89.4541, -348.443, -96.742, 0.12 ) }
    dend_39 { pt3dadd( -93.3077, -355.478, -95.308, 0.12 ) }
    dend_39 { pt3dadd( -96.2799, -362.726, -93.1005, 0.12 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -79.2584, -326.847, -93.5988, 0.24 ) }
    dend_38 { pt3dadd( -82.3885, -336.628, -96.5213, 0.12 ) }
    dend_38 { pt3dadd( -84.0444, -346.833, -99.0895, 0.12 ) }
    dend_38 { pt3dadd( -87.098, -356.561, -102.264, 0.12 ) }
    dend_38 { pt3dadd( -92.3094, -365.579, -104.792, 0.12 ) }
    dend_38 { pt3dadd( -97.146, -374.751, -107.47, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 48/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -176.829, 250.892, 91.2545, 0.12 ) }
    dend_26 { pt3dadd( -183.231, 252.767, 93.0522, 0.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 50/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -176.829, 250.892, 91.2545, 0.24 ) }
    dend_25 { pt3dadd( -185.459, 254.453, 91.0217, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_72 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_77 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_74 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_62 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_60 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_32 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_14 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_76 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_68 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_64 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_63 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_59 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_58 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_50 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_2 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_43 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_3 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_40 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_22 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_37 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_28 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_24 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_23 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_10 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_9 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_39 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_38 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_47 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_13 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_57 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_75 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_44 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_69 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_70 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_36 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_66 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_65 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_41 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_42 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_7 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_8 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_51 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_72 nseg = 11
    dend_77 nseg = 15
    dend_74 nseg = 3
    dend_67 nseg = 7
    dend_62 nseg = 3
    dend_60 nseg = 15
    dend_48 nseg = 17
    dend_32 nseg = 3
    dend_31 nseg = 11
    dend_17 nseg = 3
    dend_14 nseg = 9
    dend_12 nseg = 13
    dend_76 nseg = 13
    dend_71 nseg = 3
    dend_68 nseg = 5
    dend_64 nseg = 13
    dend_63 nseg = 5
    dend_59 nseg = 7
    dend_58 nseg = 9
    dend_55 nseg = 3
    dend_54 nseg = 13
    dend_50 nseg = 5
    dend_49 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_52 nseg = 3
    dend_46 nseg = 13
    dend_43 nseg = 17
    dend_34 nseg = 3
    dend_20 nseg = 7
    dend_11 nseg = 11
    dend_6 nseg = 15
    dend_4 nseg = 15
    dend_3 nseg = 11
    dend_40 nseg = 11
    dend_35 nseg = 9
    dend_27 nseg = 3
    dend_22 nseg = 7
    dend_37 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 7
    dend_23 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_39 nseg = 3
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_LBC_a7bdd51160_0_0


