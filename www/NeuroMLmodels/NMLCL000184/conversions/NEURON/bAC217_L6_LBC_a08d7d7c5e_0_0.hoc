// Cell: bAC217_L6_LBC_a08d7d7c5e_0_0
/*
{
  "id" : "bAC217_L6_LBC_a08d7d7c5e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "3.53699, 8.1767, -0.046517, 3.89204", "3.23089, 7.26926, -0.0420574, 6.96208", "2.92479, 6.36182, -0.0375978, 10.0575", "2.61869, 5.45437, -0.0331383, 12.1025", "2.31259, 4.54693, -0.0286787, 13.6233", "2.00649, 3.63948, -0.0242192, 14.3107", "1.70039, 2.73204, -0.0197596, 14.7168", "1.39429, 1.8246, -0.0153001, 15.1228", "1.08819, 0.917153, -0.0108405, 14.9289", "0.782089, 0.00970928, -0.00638094, 14.6123", "0.475989, -0.897735, -0.00192139, 14.2054", "0.16989, -1.80518, 0.00253817, 13.7906", "-0.13621, -2.71262, 0.00699773, 13.1567", "-0.442309, -3.62007, 0.0114573, 11.719", "-0.748409, -4.52751, 0.0159168, 10.1965", "-1.05451, -5.43495, 0.0203764, 8.66594", "-1.36061, -6.3424, 0.024836, 7.15698", "-1.66671, -7.24984, 0.0292955, 5.77138", "-1.97281, -8.15729, 0.0337551, 4.37985", "-2.27891, -9.06473, 0.0382146, 2.89161", "-2.58501, -9.97217, 0.0426742, 1.70729" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.778487, -0.213754, 18.4829, 1.32", "-0.146169, 2.32577, 18.5029, 1.32", "-1.04362, 5.42491, 18.522, 1.32", "-1.53087, 7.07029, 18.7613, 1.32", "-2.24307, 9.21458, 19.2213, 0.96", "-2.90226, 11.1352, 19.6888, 0.96", "-3.54453, 12.9646, 20.1467, 0.96", "-4.13394, 14.6646, 20.6255, 0.96", "-5.51138, 18.9277, 21.8817, 0.6", "-6.00675, 20.5641, 22.556, 0.48", "-6.58042, 22.4469, 23.4852, 0.48", "-7.07292, 24.2823, 24.4412, 0.48", "-7.46993, 25.8298, 25.2776, 0.48", "-7.84755, 27.5619, 26.2068, 0.48", "-8.55497, 33.0658, 28.867, 0.48", "-8.61984, 34.0986, 29.4454, 0.48", "-8.66135, 36.4689, 31.0513, 0.48", "-10.745, 46.8428, 36.6805, 0.48", "-10.9538, 57.1826, 42.7443, 0.48", "-9.86271, 68.1893, 47.1995, 0.48", "-8.84028, 78.4002, 53.4206, 0.48", "-6.13061, 88.7505, 58.8272, 0.48", "-3.13917, 99.1004, 64.084, 0.48", "0.682595, 108.268, 70.9793, 0.48", "6.28935, 117.725, 75.9542, 0.48", "12.1745, 127.793, 78.8364, 0.48", "17.3705, 138.27, 81.4171, 0.48", "22.7194, 148.71, 83.8469, 0.48", "28.5747, 158.541, 87.5724, 0.48", "33.857, 167.732, 93.3847, 0.48", "37.0064, 177.516, 99.6529, 0.48", "38.5761, 186.819, 107.198, 0.48", "39.8709, 195.246, 115.852, 0.48", "42.7376, 203.671, 124.123, 0.48", "46.049, 211.371, 132.99, 0.48", "48.5721, 219.008, 142.17, 0.48", "50.5774, 226.772, 151.361, 0.48", "51.2385, 234.229, 161.016, 0.48", "51.4078, 241.739, 170.647, 0.48", "49.9766, 249.471, 179.973, 0.48", "50.6516, 256.137, 190.249, 0.48", "49.2069, 263.036, 200.271, 0.48", "48.5422, 269.862, 210.43, 0.48", "45.8403, 276.582, 220.326, 0.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.82151, 2.40824, -19.4171, 1.45", "-7.60416, 2.27168, -21.542, 1.45", "-10.3715, 1.99945, -24.6899, 1.2", "-17.4696, 1.16473, -31.9448, 1.2", "-20.8475, 0.724117, -35.2723, 0.84", "-24.4322, 0.248571, -38.5075, 2.05", "-30.4742, -0.476656, -44.0146, 0.36", "-33.0738, -0.757081, -46.3979, 1.45", "-36.1046, -1.02472, -49.1069, 0.24", "-40.719, -1.22461, -52.9428, 1.81", "-44.9095, -1.40586, -56.4444, 0.48", "-51.4658, -1.5153, -61.9108, 1.57", "-54.4715, -1.33727, -64.4072, 0.36", "-55.3676, -1.22129, -65.2216, 1.08", "-58.7898, -0.55123, -68.4724, 0.12", "-60.9309, -0.0159331, -70.367, 1.69", "-63.2406, 0.665387, -72.3369, 0.24", "-66.1871, 1.52321, -74.3949, 1.08", "-68.7593, 2.24021, -76.0802, 0.24", "-70.817, 2.71025, -77.2864, 0.24", "-75.2204, 3.51418, -79.5984, 0.24", "-77.5338, 3.84502, -80.7515, 1.57", "-80.8522, 4.245, -82.3643, 0.48", "-83.7185, 4.53513, -83.7848, 1.69", "-88.0601, 4.92996, -85.9357, 0.12", "-90.3559, 5.13515, -87.2229, 1.57", "-95.7891, 5.66316, -90.479, 0.36", "-99.4607, 6.1181, -92.8709, 1.69", "-102.999, 6.67003, -95.4356, 0.36", "-104.885, 7.02828, -96.8704, 1.57", "-110.718, 8.46526, -101.521, 0.12", "-111.713, 8.75209, -102.363, 1.33", "-116.708, 10.4036, -106.77, 0.12", "-118.483, 11.0258, -108.36, 0.84", "-120.265, 11.6862, -110.113, 0.12", "-121.413, 12.1233, -111.288, 1.69", "-126.572, 14.1902, -116.345, 0.12", "-128.287, 14.9004, -117.974, 1.57", "-131.992, 16.4717, -121.212, 0.36", "-134.819, 17.6763, -123.508, 1.08", "-136.967, 18.5223, -125.271, 0.24", "-138.408, 19.0237, -126.369, 1.57", "-141.03, 19.7809, -128.192, 0.36", "-142.484, 20.1035, -129.213, 0.36", "-143.893, 20.19, -130.418, 1.57", "-147.724, 19.9087, -134.259, 0.12", "-148.694, 19.7239, -135.416, 1.33", "-151.44, 18.947, -138.964, 0.36", "-151.795, 18.8187, -139.479, 0.96", "-157.317, 16.5513, -148.151, 0.36", "-158.753, 15.885, -150.599, 0.96", "-160.313, 15.1075, -153.301, 0.24", "-160.877, 14.8216, -154.276, 0.84", "-164.59, 13.0189, -160.468, 0.48", "-165.876, 12.4427, -162.501, 1.57", "-172.171, 9.97486, -171.517, 0.12", "-173.295, 9.54096, -173.126, 0.12", "-173.908, 9.31605, -173.978, 1.45", "-175.82, 8.64664, -176.568, 0.24", "-176.934, 8.28619, -177.836, 0.24", "-178.129, 7.99803, -179.049, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.17151, 5.17275, -6.6171, 1.57", "-10.1931, 10.7682, -13.2787, 1.33", "-11.44, 12.503, -15.344, 1.33", "-11.9292, 13.1836, -16.1543, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.59152, -3.90925, -14.8471, 1.57", "-8.55787, -5.5716, -15.0982, 0.48", "-12.0685, -6.75806, -15.5533, 0.48", "-13.6615, -7.25389, -15.7934, 0.48", "-15.7436, -7.77001, -16.2995, 0.48", "-19.5597, -8.57178, -17.5008, 0.48", "-23.4133, -9.3355, -18.8459, 0.48", "-26.2281, -9.71695, -20.2167, 0.24", "-28.0515, -9.89083, -21.2789, 0.24", "-32.3716, -10.248, -24.1643, 0.48", "-34.3059, -10.4056, -25.5888, 0.48", "-35.5841, -10.5312, -26.6183, 0.48", "-39.9166, -11.0043, -30.175, 1.57", "-40.5241, -11.0927, -30.7772, 1.57", "-42.8646, -11.5545, -33.2462, 0.48", "-43.6454, -11.7535, -34.0759, 0.48", "-43.9695, -11.8365, -34.4252, 0.48", "-47.3388, -12.7268, -38.0047, 2.05", "-53.3497, -14.4349, -44.0681, 0.72", "-55.4704, -15.0661, -46.1729, 0.72", "-57.9143, -15.8281, -48.4559, 0.48", "-58.5654, -16.0314, -49.0412, 0.48", "-60.1627, -16.5203, -50.4268, 0.48", "-61.3128, -16.8511, -51.3819, 0.96", "-65.938, -18.1007, -55.1017, 0.48", "-67.8512, -18.622, -56.6788, 0.24", "-70.5066, -19.3937, -59.0554, 1.33", "-74.2553, -20.5162, -62.5205, 0.48", "-77.5908, -21.5081, -65.736, 0.48", "-80.7138, -22.4404, -68.7656, 1.45", "-82.5468, -22.9862, -70.4494, 0.48", "-86.7682, -24.1766, -74.6258, 1.45", "-88.4766, -24.5878, -76.4002, 0.48", "-90.6469, -25.0109, -78.4876, 0.48", "-91.5213, -25.1203, -79.3258, 0.96", "-93.3186, -25.2385, -80.9901, 0.12", "-99.5234, -25.3662, -86.7945, 0.12", "-104.156, -25.2929, -90.9432, 0.12", "-108.382, -25.1078, -95.234, 1.33", "-114.057, -24.763, -101.403, 0.12", "-115.194, -24.6651, -102.648, 0.6", "-116.782, -24.5086, -104.457, 0.12", "-116.965, -24.4892, -104.653, 0.72", "-123.014, -23.8629, -111.358, 0.12", "-124.231, -23.7751, -112.748, 1.57", "-129.804, -23.4684, -118.809, 0.12", "-132.073, -23.3896, -121.256, 1.2", "-133.493, -23.4011, -122.971, 0.12", "-134.142, -23.4286, -123.762, 1.08", "-139.655, -23.989, -130.881, 0.12", "-140.608, -24.134, -132.212, 0.6", "-140.822, -24.1757, -132.548, 0.6", "-148.243, -25.5207, -144.249, 0.12", "-151.009, -25.9779, -148.536, 0.6", "-154.81, -26.4921, -154.141, 0.12", "-155.76, -26.591, -155.421, 1.2", "-163.325, -27.2878, -164.962, 0.12", "-164.074, -27.345, -165.775, 0.72", "-166.356, -27.4706, -167.749, 0.12", "-167.503, -27.5349, -168.687, 1.08", "-169.091, -27.6191, -169.728, 0.12", "-174.306, -27.9883, -173.013, 1.08", "-178.366, -28.3892, -175.154, 0.12", "-178.812, -28.4342, -175.39, 0.6", "-182.191, -28.7855, -177.168, 0.12", "-182.964, -28.8605, -177.6, 1.69", "-190.08, -29.5266, -181.316, 0.12", "-190.995, -29.6035, -181.895, 1.45", "-194.274, -29.8635, -184.472, 0.12", "-195.136, -29.9166, -185.183, 1.33", "-199.433, -30.1263, -188.898, 0.12", "-201.695, -30.2241, -190.953, 0.84", "-211.254, -30.6419, -200.007, 0.12", "-212.551, -30.7291, -201.311, 0.48", "-215.259, -31.0096, -204.21, 0.12", "-215.882, -31.1076, -204.944, 0.6", "-219.945, -31.8455, -209.707, 0.12", "-220.294, -31.9186, -210.144, 1.33", "-221.835, -32.458, -211.952, 0.12", "-222.495, -32.7782, -212.939, 0.12", "-225.022, -34.7371, -218.463, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.21151, -5.74275, -5.6771, 2.89", "-4.94181, -10.2118, -5.6771, 2.89" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.46849, 5.34375, -3.4871, 1.08", "7.2695, 6.37467, -3.52161, 0.84", "8.4991, 7.06264, -3.34948, 0.72", "11.0955, 8.51536, -2.98601, 1.08", "12.8945, 9.52196, -2.73417, 1.08", "18.2036, 12.4925, -1.99094, 1.08", "19.7803, 13.3746, -1.77023, 0.84", "25.9934, 16.5822, -0.760423, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38151, -10.1318, 12.3429, 2.05", "-2.08937, -12.3233, 12.3429, 2.05", "-1.84968, -14.1214, 12.3429, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.58501, -9.97217, 0.0426742, 1.0273", "-7.37941, -24.1853, 0.0426742, 1.0273", "-12.1738, -38.3985, 0.0426742, 1.0273" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "45.8403, 276.582, 220.326, 0.6", "47.6466, 282.097, 224.444, 0.6" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "45.8403, 276.582, 220.326, 0.6", "46.7472, 284.321, 225.902, 0.6" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-11.9292, 13.1836, -16.1543, 1.33", "-12.1416, 13.4965, -16.1505, 1.33", "-14.2534, 16.6074, -16.1121, 1.81", "-16.882, 20.4795, -16.0644, 0.96", "-18.7871, 23.286, -16.0298, 1.57", "-19.0121, 23.6175, -16.0257, 1.57" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.9292, 13.1836, -16.1543, 0.84", "-19.9913, 14.7964, -15.9558, 0.84", "-23.7476, 15.4306, -16.0046, 0.84", "-27.7964, 15.9832, -15.88, 0.84", "-29.2125, 16.1259, -15.8152, 0.36", "-31.2955, 16.201, -15.7346, 0.84", "-33.1065, 16.1623, -15.7294, 0.36", "-35.8427, 15.842, -16.0163, 1.45", "-39.4511, 15.0705, -16.2151, 0.72", "-41.349, 14.5379, -16.2306, 0.48", "-45.5451, 13.1066, -16.2729, 2.65", "-48.2902, 12.0136, -16.2578, 0.48", "-50.1653, 11.1931, -16.2907, 0.48", "-52.9761, 9.81606, -16.4738, 0.72", "-54.2676, 9.11396, -16.6115, 0.24", "-55.609, 8.34466, -16.7008, 0.24", "-57.5539, 7.21072, -16.732, 1.33", "-59.5507, 6.09345, -16.7058, 0.36", "-61.1118, 5.24568, -16.8169, 1.2", "-62.9635, 4.32448, -17.1067, 0.24", "-65.0266, 3.36143, -17.4898, 1.81", "-67.0114, 2.51272, -17.9509, 0.12", "-68.7143, 1.80218, -18.3875, 1.2", "-71.0767, 0.864516, -18.9245, 0.12", "-72.0799, 0.499256, -19.19, 1.2", "-73.9043, -0.0683555, -19.8422, 0.12", "-75.9647, -0.664311, -20.7728, 2.05" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-225.022, -34.7371, -218.463, 0.6", "-225.361, -34.5691, -219.372, 0.6", "-227.256, -33.2558, -224.553, 0.96", "-229.298, -31.5938, -230.649, 0.12", "-229.51, -31.4208, -231.283, 1.69", "-230.436, -30.6673, -234.047, 0.36", "-230.623, -30.515, -234.605, 1.08", "-232.332, -28.8988, -239.984, 0.12", "-233.596, -27.4355, -243.781, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.94181, -10.2118, -5.6771, 2.04", "-3.51762, -13.3349, -10.276, 2.04", "-3.2502, -13.9214, -11.1396, 2.04", "-2.96583, -14.545, -12.0578, 1.8", "-2.75981, -14.9968, -12.7231, 1.8", "-2.49724, -15.5726, -13.571, 1.8", "-1.53286, -17.6874, -16.6851, 1.8" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.94181, -10.2118, -5.6771, 2.89", "-4.94601, -10.601, -5.64856, 2.89", "-5.03912, -19.2352, -5.01558, 1.81", "-5.08181, -23.1932, -4.72541, 1.81", "-5.12553, -27.2466, -4.42825, 2.41" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "25.9934, 16.5822, -0.760423, 0.36", "30.2083, 17.9723, -1.27202, 0.36", "34.4023, 19.3315, -2.13879, 0.36", "39.9344, 21.0765, -3.49189, 0.36", "45.153, 22.7026, -4.83121, 0.36", "48.8908, 23.841, -5.79258, 0.84", "54.0739, 25.5041, -7.21426, 0.6", "57.9651, 26.8141, -8.4271, 0.6", "60.3158, 27.6541, -9.20261, 0.48", "64.3421, 29.1334, -10.5495, 0.48", "67.398, 30.2042, -11.5278, 0.96", "74.0416, 32.4728, -13.3636, 0.72", "76.8964, 33.4302, -14.1974, 1.08", "78.8623, 34.095, -14.847, 0.72", "81.7098, 35.0138, -15.9373, 0.72", "84.0104, 35.6765, -16.9098, 0.6", "86.5826, 36.344, -18.0273, 1.45", "94.0549, 37.9848, -21.1611, 0.84", "96.7886, 38.5942, -22.1843, 0.48", "99.651, 39.2415, -23.0869, 1.33", "102.519, 39.9181, -23.8104, 0.48", "105.095, 40.5413, -24.3865, 1.2", "107.998, 41.2185, -24.9016, 0.36", "111.726, 42.0944, -25.4837, 1.57", "117.203, 43.4797, -26.637, 0.36", "119.731, 44.1907, -27.443, 1.33", "124.076, 45.4938, -29.1305, 0.36", "126.334, 46.2356, -30.1746, 1.45", "131.56, 48.1638, -32.8147, 0.24", "133.892, 49.1055, -34.1652, 1.45", "141.225, 52.4307, -38.8127, 0.48", "143.196, 53.3771, -40.0828, 1.81", "147.326, 55.4066, -42.6841, 0.6", "150.702, 57.1357, -44.7944, 0.24", "155.433, 59.7368, -47.9124, 0.96", "161.225, 63.127, -51.9178, 0.48", "163.819, 64.7535, -53.8186, 0.48", "165.323, 65.7006, -54.9838, 0.48", "166.932, 66.6223, -56.3033, 1.33", "171.698, 68.9783, -60.4598, 0.12", "173.142, 69.5876, -61.7804, 1.33", "176.784, 70.8444, -65.3142, 0.48", "178.365, 71.3096, -66.8919, 0.48", "183.593, 72.6231, -71.927, 0.48", "186.928, 73.2106, -74.7469, 0.48", "190.833, 73.8277, -77.5454, 0.72", "192.327, 74.1176, -78.4916, 0.12", "193.672, 74.4477, -79.1834, 0.96", "196.019, 75.1968, -80.1616, 0.36", "200.839, 77.1432, -81.8076, 0.36", "206.298, 79.6985, -83.4531, 0.12", "211.811, 82.2758, -84.7905, 0.12", "216.0, 84.137, -85.7159, 0.12", "219.37, 85.5371, -86.5886, 0.12", "223.065, 86.9526, -87.6049, 0.12", "225.059, 87.6138, -88.1065, 0.12", "230.1, 88.8465, -89.4698, 0.12", "233.401, 89.4514, -90.3976, 0.12", "242.146, 90.7307, -93.1145, 0.12", "243.62, 90.9, -93.6813, 0.96", "248.504, 91.3823, -95.7058, 0.24", "253.613, 91.8623, -98.1561, 1.08", "257.891, 92.2287, -100.424, 0.24", "263.533, 92.5682, -103.588, 0.24", "269.806, 92.6943, -107.126, 0.24", "272.168, 92.7031, -108.516, 1.2", "277.064, 92.5857, -111.435, 0.24", "284.292, 92.202, -115.41, 0.24", "287.472, 91.9525, -117.164, 0.24", "289.203, 91.7597, -117.982, 0.84", "291.466, 91.4783, -118.937, 0.24", "295.009, 91.0264, -120.416, 0.24", "296.842, 90.7903, -121.121, 0.24", "300.728, 90.3212, -122.525, 1.69", "304.674, 89.8666, -123.824, 0.24", "309.693, 89.2656, -125.651, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "25.9934, 16.5822, -0.760423, 0.72", "28.4528, 18.6794, 1.20725, 0.72", "30.3811, 20.5059, 2.75015, 0.96", "34.769, 24.5662, 7.04489, 0.96", "36.4405, 25.9913, 8.64775, 0.84", "45.479, 33.1223, 16.8089, 0.6", "48.2258, 35.2094, 19.2099, 0.6", "50.4393, 36.813, 21.0445, 0.6", "58.6735, 42.401, 27.7052, 0.48", "62.1741, 44.5968, 30.469, 0.48", "65.5564, 46.5178, 33.0968, 0.36", "69.2426, 48.2604, 35.6979, 0.36", "70.6447, 48.81, 36.5731, 0.36", "73.2452, 49.7837, 38.0339, 0.36", "77.2638, 51.6114, 39.9825, 0.36", "78.6184, 52.3464, 40.8151, 0.36", "80.6653, 53.6819, 42.2737, 0.36", "83.065, 55.2252, 43.9627, 0.36", "86.8367, 57.794, 46.7165, 0.12", "88.6098, 59.3091, 48.1331, 0.12", "90.0187, 61.0512, 49.4695, 0.12", "91.689, 63.662, 51.4828, 0.6", "101.275, 71.1533, 60.3669, 0.6", "112.082, 78.8598, 67.4989, 0.6", "123.077, 87.2066, 73.4655, 0.6", "133.001, 94.638, 82.0347, 0.6", "141.997, 103.36, 90.2605, 0.6", "148.934, 112.491, 99.8449, 0.6", "156.038, 120.47, 110.398, 0.6", "161.813, 127.73, 122.25, 0.6", "165.718, 135.232, 134.676, 0.6", "171.362, 141.936, 146.95, 0.6", "177.318, 148.23, 159.323, 0.6", "184.745, 154.302, 171.015, 0.6", "190.006, 161.728, 182.988, 0.6", "194.802, 167.681, 196.033, 0.6", "200.132, 172.076, 209.567, 0.6", "205.205, 173.995, 223.856, 0.6", "211.428, 176.55, 237.561, 0.6", "217.123, 181.072, 250.897, 0.6", "221.534, 186.349, 264.399, 0.6", "224.851, 194.584, 276.47, 0.6", "225.294, 202.843, 288.959, 0.6", "223.852, 211.349, 301.19, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.84968, -14.1214, 12.3429, 0.72", "-0.662316, -15.0226, 12.447, 0.72", "0.522876, -16.1014, 12.5087, 0.72", "2.58347, -18.2241, 12.5706, 0.72", "3.62453, -19.4462, 12.5875, 0.48", "4.6172, -20.7261, 12.7026, 0.48", "5.78146, -22.3348, 12.9088, 0.48", "6.43231, -23.3814, 13.1152, 0.96", "7.07322, -24.5237, 13.3867, 0.6", "7.97196, -26.2445, 13.8236, 0.96", "9.24481, -28.5869, 14.5934, 1.33", "10.2728, -30.2483, 15.2687, 1.33", "11.4862, -31.9622, 16.012, 0.96", "12.4796, -33.2183, 16.5388, 1.33", "13.3011, -34.1703, 16.906, 0.72", "14.7084, -35.6597, 17.4453, 0.72", "15.5195, -36.4451, 17.6444, 0.72", "17.1346, -37.8517, 17.9547, 0.72", "18.088, -38.5967, 18.0116, 1.2", "18.9146, -39.1644, 18.0145, 2.17", "22.782, -43.6954, 19.3327, 2.17", "27.2084, -47.6366, 20.9563, 2.17", "31.2339, -51.7592, 23.0557, 2.17", "35.3265, -56.2363, 23.7486, 2.17", "39.2915, -60.78, 24.6673, 2.17", "42.8793, -65.6592, 24.2152, 2.17", "46.1678, -70.7311, 24.5861, 2.17", "49.2313, -75.7881, 25.9036, 2.17", "52.3879, -80.8949, 26.6758, 2.17", "55.8686, -85.7074, 27.9681, 2.17", "58.5811, -90.8173, 29.7502, 2.17", "61.4013, -95.419, 32.5873, 2.17", "64.7238, -99.2439, 36.0826, 2.17", "68.2112, -102.077, 40.3756, 2.17" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.84968, -14.1214, 12.3429, 1.08", "-3.04522, -19.3775, 14.0064, 1.08", "-3.59526, -21.9292, 14.8198, 1.45", "-3.97943, -24.0808, 15.4487, 1.45", "-4.32794, -26.726, 16.2219, 1.45", "-4.62975, -29.0167, 16.8914, 1.2", "-4.77355, -30.1081, 17.2104, 1.45", "-5.02515, -33.1662, 17.8674, 1.2", "-5.22216, -36.2708, 18.5092, 1.57", "-5.39709, -40.5983, 19.5955, 1.45" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-12.1738, -38.3985, 0.0426742, 0.12", "-16.9682, -52.6116, 0.0426742, 0.12", "-21.7626, -66.8248, 0.0426742, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.0121, 23.6175, -16.0257, 2.05", "-19.5235, 25.3559, -15.9641, 2.05", "-20.1697, 27.6573, -15.8485, 0.6", "-20.6523, 29.3913, -15.7506, 0.6", "-20.9694, 30.5634, -15.7548, 1.81", "-21.3476, 32.0103, -15.8118, 0.72", "-21.5918, 32.9915, -15.872, 0.72", "-21.7885, 33.9287, -15.9566, 1.33", "-21.9183, 34.672, -16.0449, 1.93", "-22.2178, 36.811, -16.1765, 0.36", "-22.3005, 37.4977, -16.1881, 0.84", "-22.4178, 38.6635, -16.1081, 0.36", "-22.5149, 39.814, -15.9172, 1.57", "-22.5699, 40.6964, -15.668, 2.65", "-22.6959, 43.1306, -14.6386, 0.48", "-22.7553, 43.9545, -14.1986, 1.33", "-22.921, 45.6117, -13.2769, 0.36", "-22.9915, 46.1711, -12.956, 1.57", "-23.1881, 47.4637, -12.2267, 0.48", "-23.4281, 48.7984, -11.5348, 1.69", "-23.8357, 50.657, -10.7674, 0.36", "-24.0252, 51.403, -10.4934, 1.08", "-24.0895, 51.6274, -10.4319, 1.81", "-24.5146, 52.9603, -10.1435, 0.6", "-24.7751, 53.6732, -10.0588, 1.69", "-25.0823, 54.4464, -10.0267, 0.12", "-25.3315, 55.0076, -10.0144, 0.96", "-25.7123, 55.7758, -9.9974, 0.24", "-26.103, 56.4846, -9.98359, 0.24", "-26.5355, 57.2049, -9.92441, 1.33", "-26.6824, 57.4497, -9.88698, 2.05", "-27.5099, 58.929, -9.60625, 0.48", "-27.7684, 59.4257, -9.51612, 0.48", "-28.0144, 59.9348, -9.43322, 1.57", "-28.6663, 61.4457, -9.21789, 0.36", "-28.9537, 62.18, -9.1172, 1.33", "-29.6067, 63.9931, -8.84828, 0.36", "-29.8235, 64.6783, -8.75681, 1.69", "-30.088, 65.6218, -8.66127, 0.48", "-30.1622, 65.934, -8.64275, 0.84", "-30.2793, 66.5461, -8.61112, 0.24", "-30.4028, 67.4598, -8.52709, 1.33", "-30.4523, 68.561, -8.41959, 0.6", "-30.4142, 69.7288, -8.31662, 0.36", "-30.307, 70.6866, -8.24689, 0.36", "-30.0594, 71.9472, -8.16226, 1.33", "-29.8579, 72.66, -8.12331, 0.36", "-29.4315, 73.8849, -8.07835, 0.72", "-29.1669, 74.4994, -8.04239, 0.12", "-28.9392, 74.9423, -8.02353, 0.72", "-28.4563, 75.778, -8.02958, 0.24", "-28.0952, 76.3397, -8.10305, 0.24" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-19.0121, 23.6175, -16.0257, 1.2", "-24.8662, 30.6398, -3.87509, 1.2", "-26.3834, 32.3284, -0.911325, 0.24", "-27.8511, 33.9739, 1.88469, 1.2", "-30.4179, 36.8477, 6.54561, 0.24", "-33.3771, 40.149, 11.8667, 1.57", "-36.2384, 43.4041, 16.9529, 0.96", "-38.261, 45.715, 20.131, 1.93", "-39.1072, 46.6775, 21.4636, 0.72", "-42.0013, 49.8038, 25.9283, 2.77", "-44.2321, 52.2439, 29.1163, 0.72", "-45.1923, 53.4373, 30.5894, 1.81", "-46.6321, 55.4836, 32.5715, 0.6", "-52.6572, 60.8913, 41.0266, 0.6", "-56.7811, 67.4083, 49.7491, 0.6", "-58.6401, 74.6811, 58.5928, 0.6", "-61.69, 81.6094, 67.4077, 0.6", "-64.0917, 87.627, 77.1248, 0.6", "-65.5602, 93.5352, 87.1032, 0.6", "-69.0877, 100.287, 95.8902, 0.6", "-72.3602, 108.633, 103.119, 0.6", "-74.796, 116.397, 111.335, 0.6", "-75.0593, 124.601, 119.446, 0.6", "-75.4938, 131.967, 128.397, 0.6", "-74.3386, 138.17, 138.23, 0.6", "-73.3179, 143.313, 148.735, 0.6", "-71.3432, 146.775, 159.86, 0.6", "-68.8204, 150.652, 170.72, 0.6", "-67.9041, 154.743, 181.739, 0.6", "-67.7237, 160.357, 192.016, 0.6", "-66.5714, 167.016, 201.512, 0.6", "-67.4189, 172.187, 212.009, 0.6", "-70.3319, 175.951, 222.799, 0.6", "-72.887, 180.81, 233.179, 0.6", "-76.7299, 185.533, 243.224, 0.6", "-82.4982, 191.293, 251.598, 0.6", "-87.6159, 197.38, 260.136, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-75.9647, -0.664311, -20.7728, 0.12", "-76.1389, -5.33688, -19.1813, 0.12", "-76.198, -6.56526, -18.699, 1.69", "-76.3257, -9.10444, -17.626, 0.24", "-76.3895, -10.6814, -16.9842, 0.24", "-76.4518, -12.3518, -16.2982, 1.57", "-76.5409, -17.0197, -14.4294, 0.12", "-76.5579, -17.644, -14.1347, 1.81", "-76.5604, -20.1404, -12.9955, 0.24", "-76.4788, -21.3635, -12.5188, 0.24", "-76.3548, -22.3721, -12.149, 1.08", "-76.1844, -23.5565, -11.7695, 1.08", "-75.9975, -24.7486, -11.4609, 0.24", "-75.8916, -25.5531, -11.2283, 1.69", "-75.5021, -29.0716, -10.1691, 0.12", "-75.1481, -33.7414, -8.62006, 0.12", "-75.1109, -34.61, -8.32499, 0.6", "-75.1325, -35.8685, -7.87719, 1.69", "-75.3234, -38.4294, -6.95678, 0.36", "-75.3851, -38.8771, -6.80432, 1.08", "-75.7688, -40.4429, -6.45331, 0.36", "-75.9628, -41.0418, -6.38965, 0.36", "-76.687, -43.1956, -6.14296, 0.36", "-76.9569, -43.9596, -6.06422, 0.36", "-77.1942, -44.6522, -6.02584, 0.84", "-78.2035, -47.7814, -5.87719, 0.48", "-78.705, -49.6523, -5.77618, 0.72", "-79.163, -51.5032, -5.64802, 0.12", "-79.263, -51.9806, -5.60734, 1.08", "-79.4385, -52.9879, -5.48814, 0.36", "-79.5138, -53.5408, -5.39796, 0.84", "-79.7608, -56.9224, -4.56591, 0.24", "-79.8235, -64.3505, -2.31046, 0.24", "-80.2362, -71.6603, 0.347652, 0.24", "-80.7686, -78.8649, 3.30494, 0.24", "-81.8347, -85.9245, 6.52274, 0.24", "-84.7329, -92.2845, 10.2253, 0.24", "-88.3331, -97.9416, 14.5121, 0.24", "-92.2422, -104.178, 17.4221, 0.24", "-97.0244, -109.131, 21.4784, 0.24", "-100.704, -114.724, 25.7874, 0.24", "-103.619, -120.273, 30.7017, 0.24", "-107.216, -125.494, 35.5492, 0.24", "-109.866, -131.007, 40.6526, 0.24" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-75.9647, -0.664311, -20.7728, 1.45", "-76.9474, -1.14614, -21.0665, 1.45", "-78.035, -1.72638, -21.4868, 0.24", "-78.5715, -2.08833, -21.8461, 1.2", "-79.1549, -2.52134, -22.3036, 0.12", "-79.7219, -2.98532, -22.8263, 1.33", "-80.5525, -3.71237, -23.6245, 0.12", "-81.0057, -4.15841, -24.0899, 1.33", "-82.7062, -5.91885, -25.8131, 0.36", "-82.8676, -6.08132, -26.0037, 0.84", "-84.2605, -7.50597, -27.7066, 0.12", "-84.727, -7.98783, -28.2894, 1.45", "-86.032, -9.31368, -29.8447, 0.6", "-86.9919, -10.2502, -30.9479, 0.24", "-89.3243, -12.3359, -33.3946, 1.81" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.53286, -17.6874, -16.6851, 1.32", "-1.03528, -18.892, -18.6609, 1.32", "0.00219509, -21.196, -21.981, 0.6", "1.72546, -24.5793, -26.3089, 0.6", "2.20472, -25.4207, -27.3895, 0.6", "2.69809, -26.2786, -28.4973, 0.6", "3.37201, -27.5353, -30.1399, 1.68", "3.73382, -28.2708, -31.0618, 1.68", "4.12314, -29.0738, -32.2187, 0.84", "5.57201, -31.924, -36.5847, 0.84", "5.99846, -32.7145, -37.8999, 0.84", "7.19518, -34.8858, -41.7159, 1.8", "7.41725, -35.2794, -42.4721, 1.8", "9.44876, -38.7561, -49.3143, 0.6", "9.68929, -39.1541, -50.1802, 0.6", "10.0208, -39.6508, -51.2664, 0.6", "10.4306, -40.2112, -52.51, 1.44", "12.3098, -42.6185, -57.8331, 0.6", "13.2926, -43.8637, -60.748, 1.8", "16.8053, -48.2427, -71.1748, 0.24", "17.309, -48.8848, -72.7596, 1.44", "17.5791, -49.237, -73.6384, 0.36", "17.8804, -49.6248, -74.5955, 0.36", "20.6445, -53.056, -82.4877, 1.44", "20.7922, -53.2346, -82.8779, 1.44", "20.9704, -53.446, -83.2577, 0.48", "22.2231, -55.0299, -85.98, 0.48", "22.7161, -55.6877, -87.0177, 1.92", "23.0352, -56.1254, -87.6587, 0.72", "25.0008, -58.8741, -91.3211, 0.24", "25.7749, -59.9443, -92.7784, 0.24", "26.8829, -61.4358, -94.812, 0.24", "28.2046, -63.1965, -97.3977, 2.16", "29.2154, -64.5054, -99.6425, 0.12", "30.7522, -66.4225, -103.097, 0.24", "31.3954, -67.207, -104.675, 1.08", "32.4628, -68.5214, -107.448, 0.24", "34.5441, -71.1394, -113.058, 1.8", "37.7563, -75.1806, -121.805, 0.12", "38.1813, -75.7012, -123.062, 1.92", "40.3657, -78.2619, -129.905, 0.12", "40.796, -78.7074, -131.498, 0.12", "41.8003, -79.6614, -135.599, 0.12", "42.3668, -80.1413, -137.945, 1.56", "44.9337, -82.1555, -148.664, 0.12", "45.1037, -82.2854, -149.37, 1.92", "49.7316, -85.6003, -167.569, 0.12", "49.9293, -85.736, -168.31, 0.12", "50.313, -86.0041, -169.68, 1.8", "51.349, -86.8445, -173.309, 0.12", "52.6693, -88.1148, -177.407, 0.96", "53.0103, -88.4918, -178.414, 0.12", "53.9241, -89.7071, -180.667, 1.44", "54.6893, -90.8464, -182.823, 0.48", "55.6606, -92.6664, -186.387, 0.48", "55.7584, -92.892, -186.843, 0.96", "56.6015, -95.184, -192.005, 0.96", "56.8521, -95.9263, -193.799, 0.96", "57.0012, -96.3668, -194.9, 1.32", "57.8744, -98.595, -200.523, 0.12", "58.6192, -100.27, -204.669, 0.12", "59.8564, -102.9, -210.944, 1.32", "60.0016, -103.184, -211.589, 0.12", "60.2982, -103.684, -212.692, 0.12", "61.2404, -105.089, -215.593, 1.8", "61.7099, -105.762, -216.73, 0.12", "62.2897, -106.618, -217.815, 0.12", "63.2674, -108.029, -219.212, 0.12", "64.6294, -109.989, -221.106, 1.68", "66.0312, -112.032, -223.099, 0.12", "66.7064, -113.005, -224.018, 0.12", "68.1179, -115.01, -226.039, 0.12", "68.7391, -115.879, -226.936, 0.12", "68.8604, -116.046, -227.073, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.53286, -17.6874, -16.6851, 0.6", "-3.09041, -17.9205, -17.113, 0.6", "-4.20569, -18.1518, -17.5635, 0.6", "-5.07197, -18.3985, -17.9702, 0.6", "-6.45912, -18.9091, -18.8731, 0.6", "-8.47516, -19.7115, -20.302, 0.6", "-11.5556, -20.9952, -22.5016, 0.6", "-12.3023, -21.3418, -23.0432, 0.6", "-12.9454, -21.681, -23.5201, 0.6", "-14.6749, -22.7135, -24.7688, 0.6", "-15.8547, -23.4827, -25.5978, 0.6", "-17.2976, -24.4139, -26.5848, 1.68", "-18.4095, -25.1129, -27.4468, 0.72", "-19.0736, -25.5475, -28.2585, 0.72", "-19.6249, -25.9332, -29.127, 0.72", "-20.3768, -26.5013, -30.4063, 0.72", "-21.2057, -27.1881, -32.1521, 0.72", "-23.0951, -28.8126, -36.8001, 0.72", "-24.5545, -30.0708, -40.8984, 0.36", "-25.218, -30.6179, -42.9144, 1.2", "-25.9422, -31.1508, -45.132, 0.36", "-27.8156, -32.5089, -50.7158, 1.44", "-29.3658, -33.6042, -54.8919, 0.12", "-31.2074, -34.8982, -59.4397, 1.32", "-32.3581, -35.7384, -62.1223, 0.36", "-33.1341, -36.3544, -63.974, 1.44", "-35.0075, -37.9989, -68.5119, 0.24", "-35.8898, -38.8264, -70.4378, 0.24", "-38.0172, -41.0236, -74.8635, 0.24", "-38.6793, -41.7767, -76.2185, 0.24", "-40.6021, -44.2625, -80.5198, 1.44", "-41.9486, -46.0842, -83.8283, 0.12", "-42.3428, -46.5998, -84.8946, 0.36", "-43.0041, -47.48, -87.0581, 0.36", "-43.6861, -48.3716, -89.4224, 0.36", "-44.9246, -49.9652, -94.1426, 0.36", "-46.1465, -51.4052, -98.6619, 0.36", "-46.7849, -52.0834, -100.916, 1.2", "-49.6791, -54.8506, -110.501, 0.36", "-49.9694, -55.0802, -111.323, 0.36", "-52.6349, -56.8182, -117.59, 0.36", "-53.5918, -57.2953, -119.326, 0.36", "-54.4164, -57.6142, -120.426, 0.36", "-55.3401, -57.8746, -121.246, 0.72", "-58.1448, -58.3161, -122.941, 0.48", "-59.3264, -58.4745, -123.622, 0.48", "-61.6975, -58.7768, -125.06, 0.24", "-63.3091, -59.0076, -126.2, 1.2", "-63.9932, -59.1092, -126.724, 1.2", "-70.4519, -60.1299, -132.148, 0.24", "-73.3904, -60.6403, -134.924, 0.24", "-76.1742, -61.186, -137.768, 1.32", "-76.8734, -61.3463, -138.547, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.12553, -27.2466, -4.42825, 0.6", "-0.762277, -30.9761, -3.39027, 0.6", "1.60652, -32.7919, -2.8628, 0.6", "5.45953, -35.6961, -1.84787, 0.6", "8.65549, -38.2274, -0.954988, 0.6", "9.74466, -39.1411, -0.647426, 0.6", "11.9703, -40.9064, -0.0854602, 0.84", "14.4117, -42.7232, 0.657041, 0.84", "15.997, -43.8352, 1.28691, 0.6", "17.7467, -45.0654, 2.04075, 0.6", "18.8962, -45.8316, 2.59699, 0.6", "21.4238, -47.3957, 3.62653, 0.84", "25.4155, -49.7481, 4.88652, 0.48", "27.2048, -50.7218, 5.24852, 1.08", "29.2955, -51.7937, 5.76465, 0.48", "33.0758, -53.6223, 6.9816, 0.48", "36.4492, -55.2671, 8.25972, 0.48", "38.0405, -56.1219, 8.91236, 0.48", "39.9435, -57.1678, 9.6049, 1.08", "45.7213, -60.3095, 11.7685, 1.08", "48.9298, -62.1352, 13.0342, 0.48", "50.4327, -63.1604, 13.6881, 0.36", "52.0556, -64.4324, 14.3882, 0.36", "54.2612, -66.3116, 15.1254, 0.36", "55.5199, -67.4391, 15.3133, 0.36", "56.5185, -68.4338, 15.1762, 1.57", "57.9102, -69.9644, 14.731, 0.84", "59.0066, -71.2365, 14.3397, 0.6", "60.6612, -73.2393, 13.8126, 0.6", "61.7797, -74.8187, 13.4511, 0.6", "62.3083, -75.6088, 13.2699, 0.6", "64.0529, -78.1921, 12.5533, 1.57", "65.0943, -79.7292, 12.0098, 0.48", "65.6823, -80.7532, 11.5536, 0.48", "66.2843, -82.3313, 10.7815, 0.48", "73.8613, -86.9072, 10.9832, 0.48", "81.3748, -91.4029, 12.3391, 0.48", "87.5407, -97.4861, 13.6252, 0.48", "94.0036, -103.404, 13.4268, 0.48", "100.659, -109.13, 13.5644, 0.48", "107.668, -114.461, 13.7118, 0.48", "114.862, -119.54, 14.2681, 0.48", "122.214, -124.375, 13.4512, 0.48", "129.483, -129.324, 12.646, 0.48", "136.736, -134.206, 11.3878, 0.48", "144.361, -138.646, 10.5796, 0.48", "152.178, -142.826, 10.1591, 0.48", "159.261, -147.872, 8.66806, 0.48", "166.09, -153.371, 7.98525, 0.48", "172.153, -159.53, 6.64058, 0.48", "177.444, -166.317, 5.39634, 0.48", "182.114, -173.457, 3.87533, 0.48", "186.467, -180.533, 1.39033, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.12553, -27.2466, -4.42825, 1.2", "-6.18148, -31.0849, -3.91021, 1.2", "-6.86544, -33.8319, -3.55825, 1.08", "-7.89287, -37.7193, -3.1233, 1.45", "-8.76947, -40.979, -2.9728, 1.2", "-10.7688, -48.3031, -2.96154, 1.2", "-12.7033, -55.3878, -3.14425, 1.2", "-13.4186, -58.2322, -3.30227, 0.96", "-14.2148, -61.5951, -3.55971, 0.96", "-15.1642, -66.0031, -4.1868, 0.96", "-15.926, -69.7206, -4.98938, 1.2", "-16.6565, -73.3045, -6.08916, 0.84", "-17.5022, -77.3664, -7.3352, 1.33", "-18.3813, -82.2323, -8.80816, 0.96", "-19.0668, -87.8748, -10.422, 0.84", "-19.3168, -91.5098, -11.3364, 0.84", "-19.3789, -96.6381, -12.6228, 0.84", "-19.1781, -99.7468, -13.5799, 0.84", "-18.9521, -101.691, -14.2756, 0.84", "-18.3568, -106.048, -15.9022, 0.72", "-17.9469, -108.67, -16.8501, 1.2", "-17.6536, -110.247, -17.4399, 2.65", "-16.324, -116.962, -19.91, 0.72", "-15.7065, -120.767, -21.3396, 0.6", "-15.1878, -125.794, -23.2099, 0.6", "-15.124, -128.546, -24.1827, 0.48", "-15.1842, -131.076, -24.9779, 1.33", "-15.2301, -132.075, -25.2692, 1.45", "-15.3867, -134.035, -25.7444, 0.6", "-15.465, -135.052, -26.0412, 0.48", "-15.7746, -137.689, -26.9239, 1.2", "-16.1485, -140.264, -27.9947, 0.6", "-17.0372, -145.697, -30.5585, 1.33", "-17.6252, -149.342, -32.3505, 0.96", "-17.9517, -151.393, -33.3862, 0.96", "-18.3245, -153.666, -34.6146, 0.72", "-19.1847, -158.201, -37.1687, 1.45", "-19.6426, -160.287, -38.3583, 0.72", "-20.0322, -162.048, -39.267, 0.72", "-20.2139, -163.053, -39.7604, 0.72", "-20.7331, -166.336, -41.2817, 0.48", "-21.1023, -168.794, -42.3633, 0.48", "-21.3395, -170.307, -42.9358, 1.69", "-22.1811, -176.518, -45.3654, 0.72", "-22.6071, -180.035, -46.7397, 0.72", "-22.6793, -180.872, -47.0384, 2.89" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "223.852, 211.349, 301.19, 0.6", "226.65, 213.95, 305.335, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "223.852, 211.349, 301.19, 0.6", "228.398, 215.437, 307.875, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.39709, -40.5983, 19.5955, 0.96", "-9.86128, -42.9869, 26.7538, 0.96", "-10.719, -43.4352, 27.8159, 0.96", "-11.8738, -43.983, 28.9503, 0.84", "-13.2439, -44.6331, 30.2964, 0.84", "-14.9791, -45.4564, 32.001, 0.84", "-16.9848, -46.408, 33.9715, 0.84", "-18.7916, -47.0559, 34.7102, 0.6", "-20.6582, -47.8006, 35.549, 0.36", "-29.7648, -50.4441, 43.9358, 0.36", "-39.5309, -54.4527, 50.8268, 0.36", "-50.8419, -56.4925, 56.1541, 0.36", "-63.1571, -55.7735, 59.2134, 0.36", "-75.7117, -56.5402, 60.9133, 0.36", "-87.7963, -56.8711, 64.8063, 0.36", "-100.079, -59.1733, 66.8061, 0.36", "-112.172, -62.7055, 67.3821, 0.36", "-124.626, -64.7484, 68.418, 0.36", "-136.247, -67.9375, 72.196, 0.36", "-146.036, -73.2314, 77.9862, 0.36", "-155.332, -80.8408, 81.0493, 0.36", "-164.194, -89.3444, 82.1267, 0.36", "-172.592, -98.3214, 82.138, 0.36", "-180.462, -107.691, 82.9718, 0.36", "-188.989, -116.557, 82.9052, 0.36", "-197.973, -124.945, 83.9779, 0.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.39709, -40.5983, 19.5955, 1.2", "-6.21235, -42.3387, 20.0125, 1.2", "-6.84247, -44.1578, 20.2974, 1.2", "-7.27818, -46.1994, 20.495, 1.08", "-7.64822, -48.7628, 20.738, 1.08", "-7.85926, -51.1235, 20.9071, 1.08", "-7.94436, -52.3848, 20.9761, 1.08", "-7.98878, -54.8313, 20.9998, 1.08", "-7.92163, -57.4546, 20.9754, 0.96", "-7.84535, -59.366, 20.9089, 0.84", "-7.81911, -61.5427, 20.9281, 1.2", "-7.98332, -64.1613, 21.126, 1.45", "-8.3053, -66.3234, 21.4123, 1.2", "-8.73006, -68.3708, 21.7703, 1.2", "-9.14716, -69.9404, 22.0874, 1.2", "-10.3506, -73.8926, 22.9883, 1.2", "-11.1415, -76.0601, 23.6722, 1.2", "-11.793, -77.6226, 24.3246, 1.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-28.0952, 76.3397, -8.10305, 1.2", "-27.9523, 76.7481, -8.23553, 1.2", "-27.0762, 79.7908, -9.40952, 0.36", "-26.7764, 80.935, -9.84752, 0.36", "-26.5629, 81.8135, -10.1858, 0.96", "-26.1459, 83.7275, -10.8585, 0.12", "-25.7703, 85.8159, -11.5499, 1.33", "-25.3382, 88.8367, -12.4456, 0.24", "-25.1736, 90.4928, -12.8637, 0.24", "-25.022, 92.3673, -13.2896, 0.24", "-24.8763, 94.5103, -13.7206, 1.93", "-24.7094, 97.3005, -14.1877, 0.48", "-24.5944, 99.2351, -14.436, 0.48", "-24.5097, 100.929, -14.5769, 1.57", "-24.4503, 103.853, -14.8246, 0.72", "-24.4703, 105.101, -14.9075, 0.6", "-24.5591, 107.009, -15.023, 1.57", "-24.7725, 109.854, -15.1631, 0.48", "-25.0833, 112.517, -15.2964, 0.24", "-25.3979, 114.858, -15.4587, 1.57", "-25.8602, 117.934, -15.716, 0.6", "-26.189, 120.061, -15.9075, 1.93", "-26.399, 121.644, -16.1109, 0.6", "-26.529, 122.933, -16.3102, 1.81", "-26.6649, 125.608, -16.8007, 0.12", "-26.6704, 126.848, -17.0031, 0.48", "-26.6354, 128.299, -17.2573, 0.12", "-26.5704, 131.002, -17.593, 2.05", "-26.4853, 134.115, -17.7132, 0.72", "-26.441, 135.571, -17.6219, 1.33", "-26.3174, 138.922, -16.9962, 0.48", "-26.2393, 140.436, -16.6075, 1.57", "-26.0305, 142.715, -15.8018, 0.36", "-25.6762, 145.535, -14.5693, 0.36", "-25.2886, 147.657, -13.5061, 0.96", "-24.5559, 150.921, -11.7586, 0.36", "-24.2234, 152.114, -11.0951, 0.96", "-23.1496, 155.319, -9.33208, 0.6", "-22.8973, 155.888, -9.04689, 0.84", "-21.6037, 158.013, -7.98639, 0.6", "-20.7885, 158.885, -7.64687, 0.96", "-19.8023, 159.711, -7.36662, 0.36", "-18.4352, 160.633, -7.11323, 0.96", "-16.1829, 161.72, -7.06102, 0.48", "-13.703, 162.662, -7.15965, 0.84", "-8.91911, 163.875, -7.8095, 0.12", "-5.08833, 172.363, -8.44691, 0.12", "-2.09438, 181.147, -9.15014, 0.12", "0.44055, 190.035, -8.08965, 0.12", "3.21784, 198.897, -8.5673, 0.12", "4.15219, 207.949, -10.3892, 0.12", "3.68045, 216.692, -13.555, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-87.6159, 197.38, 260.136, 0.6", "-88.4937, 204.748, 270.257, 0.6" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-87.6159, 197.38, 260.136, 0.6", "-91.8181, 201.628, 270.966, 0.6" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "186.467, -180.533, 1.39033, 0.6", "194.216, -186.732, 1.82568, 0.6" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "186.467, -180.533, 1.39033, 0.6", "192.866, -185.46, 1.39289, 0.6" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.6793, -180.872, -47.0384, 0.48", "-21.0115, -183.139, -48.5301, 0.48", "-20.4958, -183.823, -48.9603, 0.72", "-19.6573, -184.88, -49.5587, 0.24", "-17.6385, -187.363, -50.8391, 1.33", "-14.6085, -191.105, -52.5735, 0.6", "-13.8078, -192.112, -52.9796, 0.36", "-12.654, -193.548, -53.4516, 0.36", "-11.4715, -194.983, -53.8763, 0.36", "-10.2894, -196.414, -54.2317, 0.96", "-8.57691, -198.589, -54.5554, 0.6", "-7.38328, -200.179, -54.652, 1.2", "-6.60612, -201.26, -54.7611, 0.48", "-5.44759, -202.862, -55.0466, 0.48", "-4.62267, -203.992, -55.3998, 0.48", "-4.10139, -204.696, -55.6632, 0.6", "-2.99197, -206.193, -56.2618, 0.24", "-1.74666, -207.861, -56.9791, 0.24", "0.0152216, -210.22, -57.9345, 0.72", "1.85592, -212.681, -58.6831, 0.24", "2.79996, -213.903, -59.0204, 0.36", "4.13383, -215.619, -59.4326, 0.36", "5.91464, -217.904, -59.8535, 0.36", "6.93597, -219.222, -60.0009, 0.72", "8.80969, -221.661, -60.062, 0.72", "10.7406, -224.163, -59.9708, 0.36", "12.2636, -226.117, -59.8717, 0.12", "13.2052, -227.323, -59.7668, 0.12", "13.9644, -228.316, -59.6177, 0.12", "15.1781, -229.904, -59.3114, 0.6", "16.796, -232.009, -58.7845, 0.12", "17.3306, -232.741, -58.5342, 0.6", "18.119, -233.837, -58.1168, 0.24", "19.1467, -235.365, -57.5222, 0.72", "20.8601, -238.024, -56.4846, 0.12", "21.4169, -238.869, -56.1497, 0.6", "23.075, -241.302, -55.1714, 0.12", "23.5006, -241.934, -54.9229, 0.72", "24.6634, -243.682, -54.2501, 0.12", "25.3346, -244.689, -53.8668, 0.6", "28.8077, -249.876, -51.9127, 0.12", "29.5276, -250.93, -51.5141, 0.72", "30.1144, -251.751, -51.1987, 0.24", "30.631, -252.488, -50.912, 0.96", "31.6602, -253.985, -50.2116, 0.24", "32.4116, -255.118, -49.599, 0.24", "33.0483, -256.189, -49.0476, 0.84", "33.6978, -257.302, -48.502, 0.24", "34.7133, -259.093, -47.682, 0.84", "35.892, -261.203, -46.837, 0.24", "36.6338, -262.562, -46.3665, 0.72", "38.1112, -265.196, -45.8193, 0.12", "38.3447, -265.61, -45.8073, 0.6", "39.3645, -267.356, -45.9694, 0.12", "40.2973, -268.723, -46.4287, 0.6", "40.9053, -269.52, -46.789, 0.12", "42.8407, -271.839, -47.9594, 0.96", "45.0227, -274.311, -49.2089, 0.36", "46.013, -275.424, -49.7528, 0.6", "49.5675, -279.5, -51.6824, 0.24", "50.9178, -281.141, -52.3896, 0.84", "52.4351, -283.075, -53.0912, 0.36", "53.68, -284.774, -53.5254, 0.24", "54.5225, -285.998, -53.7577, 0.84", "56.4411, -289.053, -54.0959, 0.36", "57.5939, -291.073, -54.0596, 0.12", "58.6533, -292.927, -53.9662, 0.12", "59.6615, -294.677, -53.7133, 0.12", "60.2535, -295.67, -53.4908, 0.12", "60.964, -296.887, -53.0893, 0.6", "61.7255, -298.298, -52.4406, 0.12", "62.2661, -299.446, -51.8197, 0.12", "63.0749, -301.326, -50.8791, 0.6", "63.5781, -302.67, -50.3027, 0.36", "64.1726, -304.518, -49.6496, 0.36", "64.6362, -306.309, -49.1548, 0.12", "65.0412, -308.355, -48.6845, 0.12", "65.4296, -310.921, -48.2392, 0.12", "65.7296, -313.04, -47.9786, 0.12", "65.9907, -315.128, -47.7786, 0.12", "66.2051, -317.062, -47.6698, 0.12", "66.3785, -318.689, -47.624, 0.12", "66.496, -320.315, -47.6057, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-22.6793, -180.872, -47.0384, 0.72", "-23.7363, -184.066, -47.0208, 0.72", "-24.1844, -185.585, -47.0104, 0.72", "-24.8936, -188.164, -47.0574, 1.33", "-25.4891, -190.689, -47.119, 0.36", "-25.7381, -192.206, -47.1994, 0.36", "-25.8939, -193.712, -47.2861, 0.36", "-25.9483, -196.258, -47.4685, 1.45", "-25.9859, -198.35, -47.5008, 0.48", "-26.0395, -200.798, -47.4372, 0.48", "-26.1793, -204.205, -47.1885, 1.57", "-26.3691, -206.888, -46.9059, 0.6", "-26.6678, -210.118, -46.4767, 1.81", "-27.2513, -215.495, -45.7236, 0.12", "-27.6066, -218.218, -45.3268, 1.57", "-28.1294, -221.476, -44.8744, 0.12", "-28.4339, -222.973, -44.6196, 0.12", "-28.7354, -224.362, -44.3781, 1.81", "-29.7057, -229.383, -43.7379, 0.48", "-30.1119, -231.879, -43.5729, 1.93", "-30.5462, -234.501, -43.4746, 0.48", "-31.1985, -238.328, -43.3453, 1.2", "-31.3046, -238.957, -43.3382, 2.05", "-32.1103, -243.41, -43.3824, 0.36", "-32.3718, -244.686, -43.4247, 0.36", "-32.6534, -245.941, -43.4644, 0.36", "-33.2859, -248.799, -43.6607, 1.81", "-33.9033, -251.742, -44.0199, 0.6", "-34.2434, -253.168, -44.1327, 1.93", "-34.8099, -255.117, -44.0753, 0.48", "-35.9474, -259.162, -43.9389, 2.17" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.793, -77.6226, 24.3246, 0.84", "-12.5441, -79.3643, 24.2386, 0.84", "-13.8167, -81.1475, 24.2834, 0.84", "-15.6458, -82.6986, 24.4186, 0.84", "-16.3598, -83.3041, 24.4714, 0.96", "-17.5469, -84.3109, 24.5591, 0.6", "-19.1269, -85.6508, 24.6759, 0.6", "-20.9863, -86.5901, 24.8442, 0.48", "-23.3416, -87.182, 25.0933, 0.72", "-30.7786, -92.2889, 24.2791, 0.72", "-37.3061, -98.2389, 22.5299, 0.72", "-44.6095, -103.572, 22.4037, 0.72", "-52.354, -108.3, 22.0716, 0.72", "-60.7107, -111.964, 22.3662, 0.72", "-68.7, -116.284, 21.7959, 0.72", "-75.6573, -121.956, 22.702, 0.72", "-82.9455, -127.308, 22.7899, 0.72", "-90.2981, -132.501, 21.8198, 0.72", "-97.9578, -137.209, 20.544, 0.72", "-104.15, -143.229, 18.0196, 0.72", "-111.042, -148.86, 16.5144, 0.72" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.793, -77.6226, 24.3246, 0.96", "-13.7403, -82.6494, 22.0533, 0.96", "-15.91, -88.4343, 19.905, 0.84", "-16.9071, -91.0191, 19.0328, 0.84", "-17.663, -92.8587, 18.3539, 0.72", "-18.955, -95.9072, 17.1971, 0.72", "-19.7352, -97.7548, 16.5141, 0.96", "-20.774, -100.239, 15.6938, 0.84", "-22.3929, -103.909, 14.5371, 0.72", "-24.7451, -108.809, 12.8901, 0.96", "-26.2734, -111.806, 11.8197, 0.72", "-27.6531, -114.408, 10.8446, 0.6", "-29.0807, -117.093, 9.87204, 0.6", "-30.3142, -119.359, 9.0675, 0.6", "-32.0395, -122.441, 8.05739, 0.72", "-33.5956, -124.979, 7.10763, 0.6", "-35.3914, -127.503, 5.86055, 1.08", "-37.297, -129.841, 4.46411, 0.84", "-39.1818, -131.899, 3.0366, 0.84", "-41.6967, -134.337, 1.12954, 0.72", "-45.1161, -137.391, -1.69959, 0.72", "-47.2951, -139.122, -3.49528, 0.6", "-49.0961, -140.4, -4.95856, 0.6", "-52.0318, -142.371, -7.22276, 3.01", "-54.0279, -143.815, -8.76035, 0.84", "-57.3479, -146.403, -11.1584, 0.6", "-58.7808, -147.616, -12.1602, 0.96", "-59.8681, -148.542, -12.9355, 0.36", "-61.7991, -150.125, -14.333, 2.53", "-65.3023, -152.911, -16.7639, 0.6", "-66.5322, -153.856, -17.8223, 0.6", "-69.9315, -156.396, -21.3405, 0.48", "-71.1538, -157.328, -22.8261, 0.48", "-72.143, -158.076, -24.2389, 0.48", "-72.5736, -158.4, -25.0002, 2.65", "-76.9322, -161.687, -32.9379, 0.24", "-78.7982, -163.16, -36.5452, 0.24", "-79.4787, -163.729, -37.9155, 2.05", "-81.9716, -165.838, -43.0844, 0.36", "-85.1604, -168.452, -49.3513, 2.05", "-86.9579, -169.887, -52.4554, 0.36", "-88.0833, -170.794, -54.0317, 1.45", "-90.6983, -172.921, -57.1745, 0.12", "-92.337, -174.286, -59.0334, 1.93", "-94.7556, -176.35, -61.4194, 0.12", "-96.7046, -178.143, -63.3094, 1.69", "-101.16, -182.545, -67.9367, 0.24", "-102.042, -183.484, -68.8956, 1.45", "-105.537, -187.473, -73.2672, 0.6", "-106.227, -188.299, -74.213, 1.57", "-108.788, -191.565, -78.1093, 0.12", "-109.499, -192.504, -79.2731, 1.33", "-112.027, -195.831, -82.8327, 0.6", "-115.291, -200.092, -86.7498, 0.12", "-116.359, -201.455, -87.803, 2.05", "-119.316, -205.248, -90.4512, 0.24", "-121.327, -207.93, -91.9118, 1.81", "-125.054, -213.154, -94.224, 0.12", "-126.367, -215.019, -94.7733, 1.81", "-129.519, -219.585, -95.6385, 0.12", "-130.439, -220.911, -95.8758, 1.81", "-132.427, -223.736, -96.2149, 0.12", "-133.211, -224.832, -96.4854, 2.05", "-134.572, -226.66, -97.356, 0.36", "-135.287, -227.561, -97.8615, 0.48", "-136.507, -229.044, -98.9099, 0.24", "-137.074, -229.702, -99.4614, 0.84", "-140.791, -233.913, -103.41, 0.36", "-141.868, -235.183, -104.602, 1.2", "-143.69, -237.498, -106.694, 0.12", "-145.769, -240.235, -109.206, 0.12", "-146.869, -241.75, -110.513, 0.12", "-147.382, -242.454, -111.074, 1.45", "-148.178, -243.531, -111.728, 0.24", "-148.986, -244.59, -112.457, 0.24", "-150.382, -246.208, -113.596, 1.45", "-152.058, -247.987, -114.958, 0.48", "-153.825, -249.758, -116.407, 1.57", "-156.721, -252.606, -118.793, 0.12", "-159.817, -255.633, -121.257, 1.93", "-161.726, -257.502, -122.765, 0.12", "-164.269, -260.124, -124.674, 2.29", "-165.983, -262.049, -125.945, 0.12", "-166.78, -263.049, -126.558, 0.72", "-168.248, -265.116, -127.753, 0.12", "-169.951, -267.949, -129.17, 1.2", "-171.349, -270.723, -130.513, 0.48", "-172.482, -273.291, -131.653, 0.12", "-173.917, -276.807, -133.395, 0.48", "-174.384, -277.935, -133.976, 1.45", "-175.4, -280.361, -135.233, 0.24", "-176.056, -281.837, -136.076, 0.24", "-176.6, -282.957, -136.8, 0.6", "-178.586, -286.59, -139.221, 0.6", "-179.33, -287.894, -140.001, 0.12", "-180.554, -289.902, -141.284, 0.12", "-183.053, -293.725, -143.753, 0.12", "-183.799, -294.827, -144.46, 1.2", "-184.826, -296.35, -145.478, 1.2", "-186.368, -298.615, -146.922, 0.24", "-188.434, -301.721, -148.847, 1.69", "-189.436, -303.187, -149.904, 2.05", "-191.113, -305.553, -151.794, 0.6", "-193.889, -309.455, -155.077, 0.36", "-195.257, -311.399, -156.872, 0.12", "-196.379, -312.989, -158.454, 0.12", "-200.809, -319.287, -165.074, 0.12", "-203.377, -322.922, -169.157, 0.24", "-205.284, -325.607, -172.27, 0.24", "-208.147, -329.624, -177.047, 0.24", "-210.121, -332.443, -180.553, 0.24", "-212.642, -336.017, -185.124, 0.24", "-213.885, -337.896, -187.393, 0.24" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "3.68045, 216.692, -13.555, 0.6", "5.59601, 225.17, -14.3834, 0.6" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "3.68045, 216.692, -13.555, 0.6", "6.11681, 227.427, -13.1599, 0.6" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-35.9474, -259.162, -43.9389, 0.36", "-38.4644, -263.34, -46.7012, 0.36", "-39.885, -265.787, -48.0776, 0.36", "-40.5604, -267.504, -48.9939, 0.72", "-41.0048, -269.556, -50.0692, 0.36", "-41.197, -270.81, -50.7057, 0.12", "-41.2015, -271.808, -51.2974, 0.12", "-40.9777, -273.6, -52.3432, 0.48", "-40.0754, -278.347, -55.3103, 0.12", "-39.194, -282.555, -58.027, 0.12", "-38.8928, -283.924, -58.8973, 0.6", "-37.3801, -291.172, -63.4254, 0.48", "-37.0443, -292.728, -64.4223, 0.84", "-36.3643, -295.867, -66.4747, 0.72", "-36.0917, -297.503, -67.5191, 0.84", "-35.8638, -299.574, -68.7995, 0.24", "-35.8275, -300.594, -69.3603, 0.48" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-35.9474, -259.162, -43.9389, 0.36", "-36.3598, -260.751, -44.2192, 0.36", "-36.6065, -261.767, -44.5116, 0.36", "-36.9068, -262.905, -44.8666, 0.72", "-37.1199, -263.707, -45.1118, 0.48", "-37.5814, -265.197, -45.4802, 0.84", "-38.1743, -266.964, -45.8379, 0.48", "-38.7159, -268.368, -45.956, 1.08", "-39.1059, -269.352, -45.9281, 0.36", "-39.5142, -270.364, -45.8012, 1.2", "-40.2061, -272.139, -45.4252, 0.24", "-40.5725, -273.239, -45.1473, 1.57", "-41.2649, -275.698, -44.4359, 0.6", "-41.5331, -276.881, -44.1144, 1.45", "-41.7044, -277.783, -43.927, 0.24", "-41.9567, -279.238, -43.7355, 1.33", "-42.3733, -281.82, -43.6313, 0.48", "-42.5792, -282.824, -43.6275, 1.33", "-42.9246, -284.288, -43.7313, 0.12", "-43.3154, -285.665, -43.8492, 0.12", "-43.7258, -286.809, -43.9318, 1.33", "-44.469, -288.278, -43.9544, 0.12", "-45.4363, -289.715, -43.8496, 1.45", "-46.4678, -291.085, -43.729, 0.24", "-47.0133, -291.755, -43.6044, 0.24", "-48.2097, -293.226, -43.2268, 1.33", "-49.804, -295.251, -42.5594, 0.24", "-50.7558, -296.501, -42.0851, 1.33", "-51.9386, -297.946, -41.4161, 0.48", "-53.3593, -299.587, -40.4967, 0.36", "-54.4059, -300.809, -39.6302, 1.57", "-55.0759, -301.522, -38.9143, 0.6", "-55.5458, -302.019, -38.3175, 0.6", "-57.2641, -303.704, -35.9462, 1.2", "-57.6845, -304.087, -35.3582, 0.36", "-59.7055, -305.903, -32.5657, 1.69", "-61.9773, -307.967, -29.4207, 0.48", "-62.698, -308.668, -28.4065, 0.48", "-63.7175, -309.817, -26.8481, 0.36", "-64.1209, -310.428, -26.1028, 0.36", "-64.3912, -310.943, -25.5228, 0.12", "-64.6319, -312.018, -24.5684, 0.6", "-64.2437, -314.283, -22.8545, 0.6", "-63.909, -314.855, -22.4243, 0.48", "-62.7197, -315.648, -21.8738, 0.36", "-61.044, -316.179, -21.4624, 0.12", "-59.7888, -316.339, -21.2841, 0.12", "-58.9117, -316.315, -21.0664, 0.6", "-56.2149, -315.917, -20.0018, 0.6", "-55.2556, -315.695, -19.3858, 0.24", "-54.5354, -315.477, -18.6383, 0.24", "-53.632, -315.146, -17.4268, 0.24", "-51.2911, -314.111, -13.537, 0.24", "-50.4363, -313.691, -11.7195, 0.24", "-50.1835, -313.553, -11.0088, 0.84", "-49.6317, -313.265, -9.12582, 0.84", "-50.4565, -318.279, -5.0028, 0.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_39", "dend_27", "dend_25", "dend_12", "dend_7", "dend_0", "dend_42", "dend_41", "dend_31", "dend_28", "dend_26", "dend_22", "dend_13", "dend_11", "dend_8", "dend_6", "dend_1", "dend_35", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_19", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_4", "dend_3", "dend_38", "dend_37", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_39", "dend_27", "dend_25", "dend_12", "dend_7", "dend_0", "dend_42", "dend_41", "dend_31", "dend_28", "dend_26", "dend_22", "dend_13", "dend_11", "dend_8", "dend_6", "dend_1", "dend_35", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_19", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_4", "dend_3", "dend_38", "dend_37", "dend_17", "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "axon_0", "axon_0", "dend_42", "dend_41", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_37", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_LBC_a08d7d7c5e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, axon_0, axon_0, dend_42, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.44999997810555437)
    connect dend_39(0), soma_0(0.44999997810555437)
    connect dend_27(0), soma_0(0.44999997810555437)
    connect dend_25(0), soma_0(0.44999997810555437)
    connect dend_12(0), soma_0(0.44999997810555437)
    connect dend_7(0), soma_0(0.44999997810555437)
    connect dend_0(0), soma_0(0.44999997810555437)
    connect axon_0(0), soma_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 3.53699, 8.1767, -0.046517, 3.89204 ) }
    soma_0 { pt3dadd( 3.23089, 7.26926, -0.0420574, 6.96208 ) }
    soma_0 { pt3dadd( 2.92479, 6.36182, -0.0375978, 10.0575 ) }
    soma_0 { pt3dadd( 2.61869, 5.45437, -0.0331383, 12.1025 ) }
    soma_0 { pt3dadd( 2.31259, 4.54693, -0.0286787, 13.6233 ) }
    soma_0 { pt3dadd( 2.00649, 3.63948, -0.0242192, 14.3107 ) }
    soma_0 { pt3dadd( 1.70039, 2.73204, -0.0197596, 14.7168 ) }
    soma_0 { pt3dadd( 1.39429, 1.8246, -0.0153001, 15.1228 ) }
    soma_0 { pt3dadd( 1.08819, 0.917153, -0.0108405, 14.9289 ) }
    soma_0 { pt3dadd( 0.782089, 0.00970928, -0.00638094, 14.6123 ) }
    soma_0 { pt3dadd( 0.475989, -0.897735, -0.00192139, 14.2054 ) }
    soma_0 { pt3dadd( 0.16989, -1.80518, 0.00253817, 13.7906 ) }
    soma_0 { pt3dadd( -0.13621, -2.71262, 0.00699773, 13.1567 ) }
    soma_0 { pt3dadd( -0.442309, -3.62007, 0.0114573, 11.719 ) }
    soma_0 { pt3dadd( -0.748409, -4.52751, 0.0159168, 10.1965 ) }
    soma_0 { pt3dadd( -1.05451, -5.43495, 0.0203764, 8.66594 ) }
    soma_0 { pt3dadd( -1.36061, -6.3424, 0.024836, 7.15698 ) }
    soma_0 { pt3dadd( -1.66671, -7.24984, 0.0292955, 5.77138 ) }
    soma_0 { pt3dadd( -1.97281, -8.15729, 0.0337551, 4.37985 ) }
    soma_0 { pt3dadd( -2.27891, -9.06473, 0.0382146, 2.89161 ) }
    soma_0 { pt3dadd( -2.58501, -9.97217, 0.0426742, 1.70729 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.778487, -0.213754, 18.4829, 1.32 ) }
    dend_40 { pt3dadd( -0.146169, 2.32577, 18.5029, 1.32 ) }
    dend_40 { pt3dadd( -1.04362, 5.42491, 18.522, 1.32 ) }
    dend_40 { pt3dadd( -1.53087, 7.07029, 18.7613, 1.32 ) }
    dend_40 { pt3dadd( -2.24307, 9.21458, 19.2213, 0.96 ) }
    dend_40 { pt3dadd( -2.90226, 11.1352, 19.6888, 0.96 ) }
    dend_40 { pt3dadd( -3.54453, 12.9646, 20.1467, 0.96 ) }
    dend_40 { pt3dadd( -4.13394, 14.6646, 20.6255, 0.96 ) }
    dend_40 { pt3dadd( -5.51138, 18.9277, 21.8817, 0.6 ) }
    dend_40 { pt3dadd( -6.00675, 20.5641, 22.556, 0.48 ) }
    dend_40 { pt3dadd( -6.58042, 22.4469, 23.4852, 0.48 ) }
    dend_40 { pt3dadd( -7.07292, 24.2823, 24.4412, 0.48 ) }
    dend_40 { pt3dadd( -7.46993, 25.8298, 25.2776, 0.48 ) }
    dend_40 { pt3dadd( -7.84755, 27.5619, 26.2068, 0.48 ) }
    dend_40 { pt3dadd( -8.55497, 33.0658, 28.867, 0.48 ) }
    dend_40 { pt3dadd( -8.61984, 34.0986, 29.4454, 0.48 ) }
    dend_40 { pt3dadd( -8.66135, 36.4689, 31.0513, 0.48 ) }
    dend_40 { pt3dadd( -10.745, 46.8428, 36.6805, 0.48 ) }
    dend_40 { pt3dadd( -10.9538, 57.1826, 42.7443, 0.48 ) }
    dend_40 { pt3dadd( -9.86271, 68.1893, 47.1995, 0.48 ) }
    dend_40 { pt3dadd( -8.84028, 78.4002, 53.4206, 0.48 ) }
    dend_40 { pt3dadd( -6.13061, 88.7505, 58.8272, 0.48 ) }
    dend_40 { pt3dadd( -3.13917, 99.1004, 64.084, 0.48 ) }
    dend_40 { pt3dadd( 0.682595, 108.268, 70.9793, 0.48 ) }
    dend_40 { pt3dadd( 6.28935, 117.725, 75.9542, 0.48 ) }
    dend_40 { pt3dadd( 12.1745, 127.793, 78.8364, 0.48 ) }
    dend_40 { pt3dadd( 17.3705, 138.27, 81.4171, 0.48 ) }
    dend_40 { pt3dadd( 22.7194, 148.71, 83.8469, 0.48 ) }
    dend_40 { pt3dadd( 28.5747, 158.541, 87.5724, 0.48 ) }
    dend_40 { pt3dadd( 33.857, 167.732, 93.3847, 0.48 ) }
    dend_40 { pt3dadd( 37.0064, 177.516, 99.6529, 0.48 ) }
    dend_40 { pt3dadd( 38.5761, 186.819, 107.198, 0.48 ) }
    dend_40 { pt3dadd( 39.8709, 195.246, 115.852, 0.48 ) }
    dend_40 { pt3dadd( 42.7376, 203.671, 124.123, 0.48 ) }
    dend_40 { pt3dadd( 46.049, 211.371, 132.99, 0.48 ) }
    dend_40 { pt3dadd( 48.5721, 219.008, 142.17, 0.48 ) }
    dend_40 { pt3dadd( 50.5774, 226.772, 151.361, 0.48 ) }
    dend_40 { pt3dadd( 51.2385, 234.229, 161.016, 0.48 ) }
    dend_40 { pt3dadd( 51.4078, 241.739, 170.647, 0.48 ) }
    dend_40 { pt3dadd( 49.9766, 249.471, 179.973, 0.48 ) }
    dend_40 { pt3dadd( 50.6516, 256.137, 190.249, 0.48 ) }
    dend_40 { pt3dadd( 49.2069, 263.036, 200.271, 0.48 ) }
    dend_40 { pt3dadd( 48.5422, 269.862, 210.43, 0.48 ) }
    dend_40 { pt3dadd( 45.8403, 276.582, 220.326, 0.48 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.82151, 2.40824, -19.4171, 1.45 ) }
    dend_39 { pt3dadd( -7.60416, 2.27168, -21.542, 1.45 ) }
    dend_39 { pt3dadd( -10.3715, 1.99945, -24.6899, 1.2 ) }
    dend_39 { pt3dadd( -17.4696, 1.16473, -31.9448, 1.2 ) }
    dend_39 { pt3dadd( -20.8475, 0.724117, -35.2723, 0.84 ) }
    dend_39 { pt3dadd( -24.4322, 0.248571, -38.5075, 2.05 ) }
    dend_39 { pt3dadd( -30.4742, -0.476656, -44.0146, 0.36 ) }
    dend_39 { pt3dadd( -33.0738, -0.757081, -46.3979, 1.45 ) }
    dend_39 { pt3dadd( -36.1046, -1.02472, -49.1069, 0.24 ) }
    dend_39 { pt3dadd( -40.719, -1.22461, -52.9428, 1.81 ) }
    dend_39 { pt3dadd( -44.9095, -1.40586, -56.4444, 0.48 ) }
    dend_39 { pt3dadd( -51.4658, -1.5153, -61.9108, 1.57 ) }
    dend_39 { pt3dadd( -54.4715, -1.33727, -64.4072, 0.36 ) }
    dend_39 { pt3dadd( -55.3676, -1.22129, -65.2216, 1.08 ) }
    dend_39 { pt3dadd( -58.7898, -0.55123, -68.4724, 0.12 ) }
    dend_39 { pt3dadd( -60.9309, -0.0159331, -70.367, 1.69 ) }
    dend_39 { pt3dadd( -63.2406, 0.665387, -72.3369, 0.24 ) }
    dend_39 { pt3dadd( -66.1871, 1.52321, -74.3949, 1.08 ) }
    dend_39 { pt3dadd( -68.7593, 2.24021, -76.0802, 0.24 ) }
    dend_39 { pt3dadd( -70.817, 2.71025, -77.2864, 0.24 ) }
    dend_39 { pt3dadd( -75.2204, 3.51418, -79.5984, 0.24 ) }
    dend_39 { pt3dadd( -77.5338, 3.84502, -80.7515, 1.57 ) }
    dend_39 { pt3dadd( -80.8522, 4.245, -82.3643, 0.48 ) }
    dend_39 { pt3dadd( -83.7185, 4.53513, -83.7848, 1.69 ) }
    dend_39 { pt3dadd( -88.0601, 4.92996, -85.9357, 0.12 ) }
    dend_39 { pt3dadd( -90.3559, 5.13515, -87.2229, 1.57 ) }
    dend_39 { pt3dadd( -95.7891, 5.66316, -90.479, 0.36 ) }
    dend_39 { pt3dadd( -99.4607, 6.1181, -92.8709, 1.69 ) }
    dend_39 { pt3dadd( -102.999, 6.67003, -95.4356, 0.36 ) }
    dend_39 { pt3dadd( -104.885, 7.02828, -96.8704, 1.57 ) }
    dend_39 { pt3dadd( -110.718, 8.46526, -101.521, 0.12 ) }
    dend_39 { pt3dadd( -111.713, 8.75209, -102.363, 1.33 ) }
    dend_39 { pt3dadd( -116.708, 10.4036, -106.77, 0.12 ) }
    dend_39 { pt3dadd( -118.483, 11.0258, -108.36, 0.84 ) }
    dend_39 { pt3dadd( -120.265, 11.6862, -110.113, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -121.413, 12.1233, -111.288, 1.69 ) }
    dend_39 { pt3dadd( -126.572, 14.1902, -116.345, 0.12 ) }
    dend_39 { pt3dadd( -128.287, 14.9004, -117.974, 1.57 ) }
    dend_39 { pt3dadd( -131.992, 16.4717, -121.212, 0.36 ) }
    dend_39 { pt3dadd( -134.819, 17.6763, -123.508, 1.08 ) }
    dend_39 { pt3dadd( -136.967, 18.5223, -125.271, 0.24 ) }
    dend_39 { pt3dadd( -138.408, 19.0237, -126.369, 1.57 ) }
    dend_39 { pt3dadd( -141.03, 19.7809, -128.192, 0.36 ) }
    dend_39 { pt3dadd( -142.484, 20.1035, -129.213, 0.36 ) }
    dend_39 { pt3dadd( -143.893, 20.19, -130.418, 1.57 ) }
    dend_39 { pt3dadd( -147.724, 19.9087, -134.259, 0.12 ) }
    dend_39 { pt3dadd( -148.694, 19.7239, -135.416, 1.33 ) }
    dend_39 { pt3dadd( -151.44, 18.947, -138.964, 0.36 ) }
    dend_39 { pt3dadd( -151.795, 18.8187, -139.479, 0.96 ) }
    dend_39 { pt3dadd( -157.317, 16.5513, -148.151, 0.36 ) }
    dend_39 { pt3dadd( -158.753, 15.885, -150.599, 0.96 ) }
    dend_39 { pt3dadd( -160.313, 15.1075, -153.301, 0.24 ) }
    dend_39 { pt3dadd( -160.877, 14.8216, -154.276, 0.84 ) }
    dend_39 { pt3dadd( -164.59, 13.0189, -160.468, 0.48 ) }
    dend_39 { pt3dadd( -165.876, 12.4427, -162.501, 1.57 ) }
    dend_39 { pt3dadd( -172.171, 9.97486, -171.517, 0.12 ) }
    dend_39 { pt3dadd( -173.295, 9.54096, -173.126, 0.12 ) }
    dend_39 { pt3dadd( -173.908, 9.31605, -173.978, 1.45 ) }
    dend_39 { pt3dadd( -175.82, 8.64664, -176.568, 0.24 ) }
    dend_39 { pt3dadd( -176.934, 8.28619, -177.836, 0.24 ) }
    dend_39 { pt3dadd( -178.129, 7.99803, -179.049, 0.96 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.17151, 5.17275, -6.6171, 1.57 ) }
    dend_27 { pt3dadd( -10.1931, 10.7682, -13.2787, 1.33 ) }
    dend_27 { pt3dadd( -11.44, 12.503, -15.344, 1.33 ) }
    dend_27 { pt3dadd( -11.9292, 13.1836, -16.1543, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.59152, -3.90925, -14.8471, 1.57 ) }
    dend_25 { pt3dadd( -8.55787, -5.5716, -15.0982, 0.48 ) }
    dend_25 { pt3dadd( -12.0685, -6.75806, -15.5533, 0.48 ) }
    dend_25 { pt3dadd( -13.6615, -7.25389, -15.7934, 0.48 ) }
    dend_25 { pt3dadd( -15.7436, -7.77001, -16.2995, 0.48 ) }
    dend_25 { pt3dadd( -19.5597, -8.57178, -17.5008, 0.48 ) }
    dend_25 { pt3dadd( -23.4133, -9.3355, -18.8459, 0.48 ) }
    dend_25 { pt3dadd( -26.2281, -9.71695, -20.2167, 0.24 ) }
    dend_25 { pt3dadd( -28.0515, -9.89083, -21.2789, 0.24 ) }
    dend_25 { pt3dadd( -32.3716, -10.248, -24.1643, 0.48 ) }
    dend_25 { pt3dadd( -34.3059, -10.4056, -25.5888, 0.48 ) }
    dend_25 { pt3dadd( -35.5841, -10.5312, -26.6183, 0.48 ) }
    dend_25 { pt3dadd( -39.9166, -11.0043, -30.175, 1.57 ) }
    dend_25 { pt3dadd( -40.5241, -11.0927, -30.7772, 1.57 ) }
    dend_25 { pt3dadd( -42.8646, -11.5545, -33.2462, 0.48 ) }
    dend_25 { pt3dadd( -43.6454, -11.7535, -34.0759, 0.48 ) }
    dend_25 { pt3dadd( -43.9695, -11.8365, -34.4252, 0.48 ) }
    dend_25 { pt3dadd( -47.3388, -12.7268, -38.0047, 2.05 ) }
    dend_25 { pt3dadd( -53.3497, -14.4349, -44.0681, 0.72 ) }
    dend_25 { pt3dadd( -55.4704, -15.0661, -46.1729, 0.72 ) }
    dend_25 { pt3dadd( -57.9143, -15.8281, -48.4559, 0.48 ) }
    dend_25 { pt3dadd( -58.5654, -16.0314, -49.0412, 0.48 ) }
    dend_25 { pt3dadd( -60.1627, -16.5203, -50.4268, 0.48 ) }
    dend_25 { pt3dadd( -61.3128, -16.8511, -51.3819, 0.96 ) }
    dend_25 { pt3dadd( -65.938, -18.1007, -55.1017, 0.48 ) }
    dend_25 { pt3dadd( -67.8512, -18.622, -56.6788, 0.24 ) }
    dend_25 { pt3dadd( -70.5066, -19.3937, -59.0554, 1.33 ) }
    dend_25 { pt3dadd( -74.2553, -20.5162, -62.5205, 0.48 ) }
    dend_25 { pt3dadd( -77.5908, -21.5081, -65.736, 0.48 ) }
    dend_25 { pt3dadd( -80.7138, -22.4404, -68.7656, 1.45 ) }
    dend_25 { pt3dadd( -82.5468, -22.9862, -70.4494, 0.48 ) }
    dend_25 { pt3dadd( -86.7682, -24.1766, -74.6258, 1.45 ) }
    dend_25 { pt3dadd( -88.4766, -24.5878, -76.4002, 0.48 ) }
    dend_25 { pt3dadd( -90.6469, -25.0109, -78.4876, 0.48 ) }
    dend_25 { pt3dadd( -91.5213, -25.1203, -79.3258, 0.96 ) }
    dend_25 { pt3dadd( -93.3186, -25.2385, -80.9901, 0.12 ) }
    dend_25 { pt3dadd( -99.5234, -25.3662, -86.7945, 0.12 ) }
    dend_25 { pt3dadd( -104.156, -25.2929, -90.9432, 0.12 ) }
    dend_25 { pt3dadd( -108.382, -25.1078, -95.234, 1.33 ) }
    dend_25 { pt3dadd( -114.057, -24.763, -101.403, 0.12 ) }
    dend_25 { pt3dadd( -115.194, -24.6651, -102.648, 0.6 ) }
    dend_25 { pt3dadd( -116.782, -24.5086, -104.457, 0.12 ) }
    dend_25 { pt3dadd( -116.965, -24.4892, -104.653, 0.72 ) }
    dend_25 { pt3dadd( -123.014, -23.8629, -111.358, 0.12 ) }
    dend_25 { pt3dadd( -124.231, -23.7751, -112.748, 1.57 ) }
    dend_25 { pt3dadd( -129.804, -23.4684, -118.809, 0.12 ) }
    dend_25 { pt3dadd( -132.073, -23.3896, -121.256, 1.2 ) }
    dend_25 { pt3dadd( -133.493, -23.4011, -122.971, 0.12 ) }
    dend_25 { pt3dadd( -134.142, -23.4286, -123.762, 1.08 ) }
    dend_25 { pt3dadd( -139.655, -23.989, -130.881, 0.12 ) }
    dend_25 { pt3dadd( -140.608, -24.134, -132.212, 0.6 ) }
    dend_25 { pt3dadd( -140.822, -24.1757, -132.548, 0.6 ) }
    dend_25 { pt3dadd( -148.243, -25.5207, -144.249, 0.12 ) }
    dend_25 { pt3dadd( -151.009, -25.9779, -148.536, 0.6 ) }
    dend_25 { pt3dadd( -154.81, -26.4921, -154.141, 0.12 ) }
    dend_25 { pt3dadd( -155.76, -26.591, -155.421, 1.2 ) }
    dend_25 { pt3dadd( -163.325, -27.2878, -164.962, 0.12 ) }
    dend_25 { pt3dadd( -164.074, -27.345, -165.775, 0.72 ) }
    dend_25 { pt3dadd( -166.356, -27.4706, -167.749, 0.12 ) }
    dend_25 { pt3dadd( -167.503, -27.5349, -168.687, 1.08 ) }
    dend_25 { pt3dadd( -169.091, -27.6191, -169.728, 0.12 ) }
    dend_25 { pt3dadd( -174.306, -27.9883, -173.013, 1.08 ) }
    dend_25 { pt3dadd( -178.366, -28.3892, -175.154, 0.12 ) }
    dend_25 { pt3dadd( -178.812, -28.4342, -175.39, 0.6 ) }
    dend_25 { pt3dadd( -182.191, -28.7855, -177.168, 0.12 ) }
    dend_25 { pt3dadd( -182.964, -28.8605, -177.6, 1.69 ) }
    dend_25 { pt3dadd( -190.08, -29.5266, -181.316, 0.12 ) }
    dend_25 { pt3dadd( -190.995, -29.6035, -181.895, 1.45 ) }
    dend_25 { pt3dadd( -194.274, -29.8635, -184.472, 0.12 ) }
    dend_25 { pt3dadd( -195.136, -29.9166, -185.183, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -199.433, -30.1263, -188.898, 0.12 ) }
    dend_25 { pt3dadd( -201.695, -30.2241, -190.953, 0.84 ) }
    dend_25 { pt3dadd( -211.254, -30.6419, -200.007, 0.12 ) }
    dend_25 { pt3dadd( -212.551, -30.7291, -201.311, 0.48 ) }
    dend_25 { pt3dadd( -215.259, -31.0096, -204.21, 0.12 ) }
    dend_25 { pt3dadd( -215.882, -31.1076, -204.944, 0.6 ) }
    dend_25 { pt3dadd( -219.945, -31.8455, -209.707, 0.12 ) }
    dend_25 { pt3dadd( -220.294, -31.9186, -210.144, 1.33 ) }
    dend_25 { pt3dadd( -221.835, -32.458, -211.952, 0.12 ) }
    dend_25 { pt3dadd( -222.495, -32.7782, -212.939, 0.12 ) }
    dend_25 { pt3dadd( -225.022, -34.7371, -218.463, 0.12 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 11/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.21151, -5.74275, -5.6771, 2.89 ) }
    dend_12 { pt3dadd( -4.94181, -10.2118, -5.6771, 2.89 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.46849, 5.34375, -3.4871, 1.08 ) }
    dend_7 { pt3dadd( 7.2695, 6.37467, -3.52161, 0.84 ) }
    dend_7 { pt3dadd( 8.4991, 7.06264, -3.34948, 0.72 ) }
    dend_7 { pt3dadd( 11.0955, 8.51536, -2.98601, 1.08 ) }
    dend_7 { pt3dadd( 12.8945, 9.52196, -2.73417, 1.08 ) }
    dend_7 { pt3dadd( 18.2036, 12.4925, -1.99094, 1.08 ) }
    dend_7 { pt3dadd( 19.7803, 13.3746, -1.77023, 0.84 ) }
    dend_7 { pt3dadd( 25.9934, 16.5822, -0.760423, 1.2 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38151, -10.1318, 12.3429, 2.05 ) }
    dend_0 { pt3dadd( -2.08937, -12.3233, 12.3429, 2.05 ) }
    dend_0 { pt3dadd( -1.84968, -14.1214, 12.3429, 2.41 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 24/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.58501, -9.97217, 0.0426742, 1.0273 ) }
    axon_0 { pt3dadd( -7.37941, -24.1853, 0.0426742, 1.0273 ) }
    axon_0 { pt3dadd( -12.1738, -38.3985, 0.0426742, 1.0273 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 27/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 45.8403, 276.582, 220.326, 0.6 ) }
    dend_42 { pt3dadd( 47.6466, 282.097, 224.444, 0.6 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 29/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 45.8403, 276.582, 220.326, 0.6 ) }
    dend_41 { pt3dadd( 46.7472, 284.321, 225.902, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 31/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -11.9292, 13.1836, -16.1543, 1.33 ) }
    dend_31 { pt3dadd( -12.1416, 13.4965, -16.1505, 1.33 ) }
    dend_31 { pt3dadd( -14.2534, 16.6074, -16.1121, 1.81 ) }
    dend_31 { pt3dadd( -16.882, 20.4795, -16.0644, 0.96 ) }
    dend_31 { pt3dadd( -18.7871, 23.286, -16.0298, 1.57 ) }
    dend_31 { pt3dadd( -19.0121, 23.6175, -16.0257, 1.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 37/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.9292, 13.1836, -16.1543, 0.84 ) }
    dend_28 { pt3dadd( -19.9913, 14.7964, -15.9558, 0.84 ) }
    dend_28 { pt3dadd( -23.7476, 15.4306, -16.0046, 0.84 ) }
    dend_28 { pt3dadd( -27.7964, 15.9832, -15.88, 0.84 ) }
    dend_28 { pt3dadd( -29.2125, 16.1259, -15.8152, 0.36 ) }
    dend_28 { pt3dadd( -31.2955, 16.201, -15.7346, 0.84 ) }
    dend_28 { pt3dadd( -33.1065, 16.1623, -15.7294, 0.36 ) }
    dend_28 { pt3dadd( -35.8427, 15.842, -16.0163, 1.45 ) }
    dend_28 { pt3dadd( -39.4511, 15.0705, -16.2151, 0.72 ) }
    dend_28 { pt3dadd( -41.349, 14.5379, -16.2306, 0.48 ) }
    dend_28 { pt3dadd( -45.5451, 13.1066, -16.2729, 2.65 ) }
    dend_28 { pt3dadd( -48.2902, 12.0136, -16.2578, 0.48 ) }
    dend_28 { pt3dadd( -50.1653, 11.1931, -16.2907, 0.48 ) }
    dend_28 { pt3dadd( -52.9761, 9.81606, -16.4738, 0.72 ) }
    dend_28 { pt3dadd( -54.2676, 9.11396, -16.6115, 0.24 ) }
    dend_28 { pt3dadd( -55.609, 8.34466, -16.7008, 0.24 ) }
    dend_28 { pt3dadd( -57.5539, 7.21072, -16.732, 1.33 ) }
    dend_28 { pt3dadd( -59.5507, 6.09345, -16.7058, 0.36 ) }
    dend_28 { pt3dadd( -61.1118, 5.24568, -16.8169, 1.2 ) }
    dend_28 { pt3dadd( -62.9635, 4.32448, -17.1067, 0.24 ) }
    dend_28 { pt3dadd( -65.0266, 3.36143, -17.4898, 1.81 ) }
    dend_28 { pt3dadd( -67.0114, 2.51272, -17.9509, 0.12 ) }
    dend_28 { pt3dadd( -68.7143, 1.80218, -18.3875, 1.2 ) }
    dend_28 { pt3dadd( -71.0767, 0.864516, -18.9245, 0.12 ) }
    dend_28 { pt3dadd( -72.0799, 0.499256, -19.19, 1.2 ) }
    dend_28 { pt3dadd( -73.9043, -0.0683555, -19.8422, 0.12 ) }
    dend_28 { pt3dadd( -75.9647, -0.664311, -20.7728, 2.05 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 64/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -225.022, -34.7371, -218.463, 0.6 ) }
    dend_26 { pt3dadd( -225.361, -34.5691, -219.372, 0.6 ) }
    dend_26 { pt3dadd( -227.256, -33.2558, -224.553, 0.96 ) }
    dend_26 { pt3dadd( -229.298, -31.5938, -230.649, 0.12 ) }
    dend_26 { pt3dadd( -229.51, -31.4208, -231.283, 1.69 ) }
    dend_26 { pt3dadd( -230.436, -30.6673, -234.047, 0.36 ) }
    dend_26 { pt3dadd( -230.623, -30.515, -234.605, 1.08 ) }
    dend_26 { pt3dadd( -232.332, -28.8988, -239.984, 0.12 ) }
    dend_26 { pt3dadd( -233.596, -27.4355, -243.781, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.94181, -10.2118, -5.6771, 2.04 ) }
    dend_22 { pt3dadd( -3.51762, -13.3349, -10.276, 2.04 ) }
    dend_22 { pt3dadd( -3.2502, -13.9214, -11.1396, 2.04 ) }
    dend_22 { pt3dadd( -2.96583, -14.545, -12.0578, 1.8 ) }
    dend_22 { pt3dadd( -2.75981, -14.9968, -12.7231, 1.8 ) }
    dend_22 { pt3dadd( -2.49724, -15.5726, -13.571, 1.8 ) }
    dend_22 { pt3dadd( -1.53286, -17.6874, -16.6851, 1.8 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 80/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.94181, -10.2118, -5.6771, 2.89 ) }
    dend_13 { pt3dadd( -4.94601, -10.601, -5.64856, 2.89 ) }
    dend_13 { pt3dadd( -5.03912, -19.2352, -5.01558, 1.81 ) }
    dend_13 { pt3dadd( -5.08181, -23.1932, -4.72541, 1.81 ) }
    dend_13 { pt3dadd( -5.12553, -27.2466, -4.42825, 2.41 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 25.9934, 16.5822, -0.760423, 0.36 ) }
    dend_11 { pt3dadd( 30.2083, 17.9723, -1.27202, 0.36 ) }
    dend_11 { pt3dadd( 34.4023, 19.3315, -2.13879, 0.36 ) }
    dend_11 { pt3dadd( 39.9344, 21.0765, -3.49189, 0.36 ) }
    dend_11 { pt3dadd( 45.153, 22.7026, -4.83121, 0.36 ) }
    dend_11 { pt3dadd( 48.8908, 23.841, -5.79258, 0.84 ) }
    dend_11 { pt3dadd( 54.0739, 25.5041, -7.21426, 0.6 ) }
    dend_11 { pt3dadd( 57.9651, 26.8141, -8.4271, 0.6 ) }
    dend_11 { pt3dadd( 60.3158, 27.6541, -9.20261, 0.48 ) }
    dend_11 { pt3dadd( 64.3421, 29.1334, -10.5495, 0.48 ) }
    dend_11 { pt3dadd( 67.398, 30.2042, -11.5278, 0.96 ) }
    dend_11 { pt3dadd( 74.0416, 32.4728, -13.3636, 0.72 ) }
    dend_11 { pt3dadd( 76.8964, 33.4302, -14.1974, 1.08 ) }
    dend_11 { pt3dadd( 78.8623, 34.095, -14.847, 0.72 ) }
    dend_11 { pt3dadd( 81.7098, 35.0138, -15.9373, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_11 { pt3dadd( 84.0104, 35.6765, -16.9098, 0.6 ) }
    dend_11 { pt3dadd( 86.5826, 36.344, -18.0273, 1.45 ) }
    dend_11 { pt3dadd( 94.0549, 37.9848, -21.1611, 0.84 ) }
    dend_11 { pt3dadd( 96.7886, 38.5942, -22.1843, 0.48 ) }
    dend_11 { pt3dadd( 99.651, 39.2415, -23.0869, 1.33 ) }
    dend_11 { pt3dadd( 102.519, 39.9181, -23.8104, 0.48 ) }
    dend_11 { pt3dadd( 105.095, 40.5413, -24.3865, 1.2 ) }
    dend_11 { pt3dadd( 107.998, 41.2185, -24.9016, 0.36 ) }
    dend_11 { pt3dadd( 111.726, 42.0944, -25.4837, 1.57 ) }
    dend_11 { pt3dadd( 117.203, 43.4797, -26.637, 0.36 ) }
    dend_11 { pt3dadd( 119.731, 44.1907, -27.443, 1.33 ) }
    dend_11 { pt3dadd( 124.076, 45.4938, -29.1305, 0.36 ) }
    dend_11 { pt3dadd( 126.334, 46.2356, -30.1746, 1.45 ) }
    dend_11 { pt3dadd( 131.56, 48.1638, -32.8147, 0.24 ) }
    dend_11 { pt3dadd( 133.892, 49.1055, -34.1652, 1.45 ) }
    dend_11 { pt3dadd( 141.225, 52.4307, -38.8127, 0.48 ) }
    dend_11 { pt3dadd( 143.196, 53.3771, -40.0828, 1.81 ) }
    dend_11 { pt3dadd( 147.326, 55.4066, -42.6841, 0.6 ) }
    dend_11 { pt3dadd( 150.702, 57.1357, -44.7944, 0.24 ) }
    dend_11 { pt3dadd( 155.433, 59.7368, -47.9124, 0.96 ) }
    dend_11 { pt3dadd( 161.225, 63.127, -51.9178, 0.48 ) }
    dend_11 { pt3dadd( 163.819, 64.7535, -53.8186, 0.48 ) }
    dend_11 { pt3dadd( 165.323, 65.7006, -54.9838, 0.48 ) }
    dend_11 { pt3dadd( 166.932, 66.6223, -56.3033, 1.33 ) }
    dend_11 { pt3dadd( 171.698, 68.9783, -60.4598, 0.12 ) }
    dend_11 { pt3dadd( 173.142, 69.5876, -61.7804, 1.33 ) }
    dend_11 { pt3dadd( 176.784, 70.8444, -65.3142, 0.48 ) }
    dend_11 { pt3dadd( 178.365, 71.3096, -66.8919, 0.48 ) }
    dend_11 { pt3dadd( 183.593, 72.6231, -71.927, 0.48 ) }
    dend_11 { pt3dadd( 186.928, 73.2106, -74.7469, 0.48 ) }
    dend_11 { pt3dadd( 190.833, 73.8277, -77.5454, 0.72 ) }
    dend_11 { pt3dadd( 192.327, 74.1176, -78.4916, 0.12 ) }
    dend_11 { pt3dadd( 193.672, 74.4477, -79.1834, 0.96 ) }
    dend_11 { pt3dadd( 196.019, 75.1968, -80.1616, 0.36 ) }
    dend_11 { pt3dadd( 200.839, 77.1432, -81.8076, 0.36 ) }
    dend_11 { pt3dadd( 206.298, 79.6985, -83.4531, 0.12 ) }
    dend_11 { pt3dadd( 211.811, 82.2758, -84.7905, 0.12 ) }
    dend_11 { pt3dadd( 216.0, 84.137, -85.7159, 0.12 ) }
    dend_11 { pt3dadd( 219.37, 85.5371, -86.5886, 0.12 ) }
    dend_11 { pt3dadd( 223.065, 86.9526, -87.6049, 0.12 ) }
    dend_11 { pt3dadd( 225.059, 87.6138, -88.1065, 0.12 ) }
    dend_11 { pt3dadd( 230.1, 88.8465, -89.4698, 0.12 ) }
    dend_11 { pt3dadd( 233.401, 89.4514, -90.3976, 0.12 ) }
    dend_11 { pt3dadd( 242.146, 90.7307, -93.1145, 0.12 ) }
    dend_11 { pt3dadd( 243.62, 90.9, -93.6813, 0.96 ) }
    dend_11 { pt3dadd( 248.504, 91.3823, -95.7058, 0.24 ) }
    dend_11 { pt3dadd( 253.613, 91.8623, -98.1561, 1.08 ) }
    dend_11 { pt3dadd( 257.891, 92.2287, -100.424, 0.24 ) }
    dend_11 { pt3dadd( 263.533, 92.5682, -103.588, 0.24 ) }
    dend_11 { pt3dadd( 269.806, 92.6943, -107.126, 0.24 ) }
    dend_11 { pt3dadd( 272.168, 92.7031, -108.516, 1.2 ) }
    dend_11 { pt3dadd( 277.064, 92.5857, -111.435, 0.24 ) }
    dend_11 { pt3dadd( 284.292, 92.202, -115.41, 0.24 ) }
    dend_11 { pt3dadd( 287.472, 91.9525, -117.164, 0.24 ) }
    dend_11 { pt3dadd( 289.203, 91.7597, -117.982, 0.84 ) }
    dend_11 { pt3dadd( 291.466, 91.4783, -118.937, 0.24 ) }
    dend_11 { pt3dadd( 295.009, 91.0264, -120.416, 0.24 ) }
    dend_11 { pt3dadd( 296.842, 90.7903, -121.121, 0.24 ) }
    dend_11 { pt3dadd( 300.728, 90.3212, -122.525, 1.69 ) }
    dend_11 { pt3dadd( 304.674, 89.8666, -123.824, 0.24 ) }
    dend_11 { pt3dadd( 309.693, 89.2656, -125.651, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 61/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 25.9934, 16.5822, -0.760423, 0.72 ) }
    dend_8 { pt3dadd( 28.4528, 18.6794, 1.20725, 0.72 ) }
    dend_8 { pt3dadd( 30.3811, 20.5059, 2.75015, 0.96 ) }
    dend_8 { pt3dadd( 34.769, 24.5662, 7.04489, 0.96 ) }
    dend_8 { pt3dadd( 36.4405, 25.9913, 8.64775, 0.84 ) }
    dend_8 { pt3dadd( 45.479, 33.1223, 16.8089, 0.6 ) }
    dend_8 { pt3dadd( 48.2258, 35.2094, 19.2099, 0.6 ) }
    dend_8 { pt3dadd( 50.4393, 36.813, 21.0445, 0.6 ) }
    dend_8 { pt3dadd( 58.6735, 42.401, 27.7052, 0.48 ) }
    dend_8 { pt3dadd( 62.1741, 44.5968, 30.469, 0.48 ) }
    dend_8 { pt3dadd( 65.5564, 46.5178, 33.0968, 0.36 ) }
    dend_8 { pt3dadd( 69.2426, 48.2604, 35.6979, 0.36 ) }
    dend_8 { pt3dadd( 70.6447, 48.81, 36.5731, 0.36 ) }
    dend_8 { pt3dadd( 73.2452, 49.7837, 38.0339, 0.36 ) }
    dend_8 { pt3dadd( 77.2638, 51.6114, 39.9825, 0.36 ) }
    dend_8 { pt3dadd( 78.6184, 52.3464, 40.8151, 0.36 ) }
    dend_8 { pt3dadd( 80.6653, 53.6819, 42.2737, 0.36 ) }
    dend_8 { pt3dadd( 83.065, 55.2252, 43.9627, 0.36 ) }
    dend_8 { pt3dadd( 86.8367, 57.794, 46.7165, 0.12 ) }
    dend_8 { pt3dadd( 88.6098, 59.3091, 48.1331, 0.12 ) }
    dend_8 { pt3dadd( 90.0187, 61.0512, 49.4695, 0.12 ) }
    dend_8 { pt3dadd( 91.689, 63.662, 51.4828, 0.6 ) }
    dend_8 { pt3dadd( 101.275, 71.1533, 60.3669, 0.6 ) }
    dend_8 { pt3dadd( 112.082, 78.8598, 67.4989, 0.6 ) }
    dend_8 { pt3dadd( 123.077, 87.2066, 73.4655, 0.6 ) }
    dend_8 { pt3dadd( 133.001, 94.638, 82.0347, 0.6 ) }
    dend_8 { pt3dadd( 141.997, 103.36, 90.2605, 0.6 ) }
    dend_8 { pt3dadd( 148.934, 112.491, 99.8449, 0.6 ) }
    dend_8 { pt3dadd( 156.038, 120.47, 110.398, 0.6 ) }
    dend_8 { pt3dadd( 161.813, 127.73, 122.25, 0.6 ) }
    dend_8 { pt3dadd( 165.718, 135.232, 134.676, 0.6 ) }
    dend_8 { pt3dadd( 171.362, 141.936, 146.95, 0.6 ) }
    dend_8 { pt3dadd( 177.318, 148.23, 159.323, 0.6 ) }
    dend_8 { pt3dadd( 184.745, 154.302, 171.015, 0.6 ) }
    dend_8 { pt3dadd( 190.006, 161.728, 182.988, 0.6 ) }
    dend_8 { pt3dadd( 194.802, 167.681, 196.033, 0.6 ) }
    dend_8 { pt3dadd( 200.132, 172.076, 209.567, 0.6 ) }
    dend_8 { pt3dadd( 205.205, 173.995, 223.856, 0.6 ) }
    dend_8 { pt3dadd( 211.428, 176.55, 237.561, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 217.123, 181.072, 250.897, 0.6 ) }
    dend_8 { pt3dadd( 221.534, 186.349, 264.399, 0.6 ) }
    dend_8 { pt3dadd( 224.851, 194.584, 276.47, 0.6 ) }
    dend_8 { pt3dadd( 225.294, 202.843, 288.959, 0.6 ) }
    dend_8 { pt3dadd( 223.852, 211.349, 301.19, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.84968, -14.1214, 12.3429, 0.72 ) }
    dend_6 { pt3dadd( -0.662316, -15.0226, 12.447, 0.72 ) }
    dend_6 { pt3dadd( 0.522876, -16.1014, 12.5087, 0.72 ) }
    dend_6 { pt3dadd( 2.58347, -18.2241, 12.5706, 0.72 ) }
    dend_6 { pt3dadd( 3.62453, -19.4462, 12.5875, 0.48 ) }
    dend_6 { pt3dadd( 4.6172, -20.7261, 12.7026, 0.48 ) }
    dend_6 { pt3dadd( 5.78146, -22.3348, 12.9088, 0.48 ) }
    dend_6 { pt3dadd( 6.43231, -23.3814, 13.1152, 0.96 ) }
    dend_6 { pt3dadd( 7.07322, -24.5237, 13.3867, 0.6 ) }
    dend_6 { pt3dadd( 7.97196, -26.2445, 13.8236, 0.96 ) }
    dend_6 { pt3dadd( 9.24481, -28.5869, 14.5934, 1.33 ) }
    dend_6 { pt3dadd( 10.2728, -30.2483, 15.2687, 1.33 ) }
    dend_6 { pt3dadd( 11.4862, -31.9622, 16.012, 0.96 ) }
    dend_6 { pt3dadd( 12.4796, -33.2183, 16.5388, 1.33 ) }
    dend_6 { pt3dadd( 13.3011, -34.1703, 16.906, 0.72 ) }
    dend_6 { pt3dadd( 14.7084, -35.6597, 17.4453, 0.72 ) }
    dend_6 { pt3dadd( 15.5195, -36.4451, 17.6444, 0.72 ) }
    dend_6 { pt3dadd( 17.1346, -37.8517, 17.9547, 0.72 ) }
    dend_6 { pt3dadd( 18.088, -38.5967, 18.0116, 1.2 ) }
    dend_6 { pt3dadd( 18.9146, -39.1644, 18.0145, 2.17 ) }
    dend_6 { pt3dadd( 22.782, -43.6954, 19.3327, 2.17 ) }
    dend_6 { pt3dadd( 27.2084, -47.6366, 20.9563, 2.17 ) }
    dend_6 { pt3dadd( 31.2339, -51.7592, 23.0557, 2.17 ) }
    dend_6 { pt3dadd( 35.3265, -56.2363, 23.7486, 2.17 ) }
    dend_6 { pt3dadd( 39.2915, -60.78, 24.6673, 2.17 ) }
    dend_6 { pt3dadd( 42.8793, -65.6592, 24.2152, 2.17 ) }
    dend_6 { pt3dadd( 46.1678, -70.7311, 24.5861, 2.17 ) }
    dend_6 { pt3dadd( 49.2313, -75.7881, 25.9036, 2.17 ) }
    dend_6 { pt3dadd( 52.3879, -80.8949, 26.6758, 2.17 ) }
    dend_6 { pt3dadd( 55.8686, -85.7074, 27.9681, 2.17 ) }
    dend_6 { pt3dadd( 58.5811, -90.8173, 29.7502, 2.17 ) }
    dend_6 { pt3dadd( 61.4013, -95.419, 32.5873, 2.17 ) }
    dend_6 { pt3dadd( 64.7238, -99.2439, 36.0826, 2.17 ) }
    dend_6 { pt3dadd( 68.2112, -102.077, 40.3756, 2.17 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.84968, -14.1214, 12.3429, 1.08 ) }
    dend_1 { pt3dadd( -3.04522, -19.3775, 14.0064, 1.08 ) }
    dend_1 { pt3dadd( -3.59526, -21.9292, 14.8198, 1.45 ) }
    dend_1 { pt3dadd( -3.97943, -24.0808, 15.4487, 1.45 ) }
    dend_1 { pt3dadd( -4.32794, -26.726, 16.2219, 1.45 ) }
    dend_1 { pt3dadd( -4.62975, -29.0167, 16.8914, 1.2 ) }
    dend_1 { pt3dadd( -4.77355, -30.1081, 17.2104, 1.45 ) }
    dend_1 { pt3dadd( -5.02515, -33.1662, 17.8674, 1.2 ) }
    dend_1 { pt3dadd( -5.22216, -36.2708, 18.5092, 1.57 ) }
    dend_1 { pt3dadd( -5.39709, -40.5983, 19.5955, 1.45 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -12.1738, -38.3985, 0.0426742, 0.12 ) }
    axon_1 { pt3dadd( -16.9682, -52.6116, 0.0426742, 0.12 ) }
    axon_1 { pt3dadd( -21.7626, -66.8248, 0.0426742, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 52/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.0121, 23.6175, -16.0257, 2.05 ) }
    dend_35 { pt3dadd( -19.5235, 25.3559, -15.9641, 2.05 ) }
    dend_35 { pt3dadd( -20.1697, 27.6573, -15.8485, 0.6 ) }
    dend_35 { pt3dadd( -20.6523, 29.3913, -15.7506, 0.6 ) }
    dend_35 { pt3dadd( -20.9694, 30.5634, -15.7548, 1.81 ) }
    dend_35 { pt3dadd( -21.3476, 32.0103, -15.8118, 0.72 ) }
    dend_35 { pt3dadd( -21.5918, 32.9915, -15.872, 0.72 ) }
    dend_35 { pt3dadd( -21.7885, 33.9287, -15.9566, 1.33 ) }
    dend_35 { pt3dadd( -21.9183, 34.672, -16.0449, 1.93 ) }
    dend_35 { pt3dadd( -22.2178, 36.811, -16.1765, 0.36 ) }
    dend_35 { pt3dadd( -22.3005, 37.4977, -16.1881, 0.84 ) }
    dend_35 { pt3dadd( -22.4178, 38.6635, -16.1081, 0.36 ) }
    dend_35 { pt3dadd( -22.5149, 39.814, -15.9172, 1.57 ) }
    dend_35 { pt3dadd( -22.5699, 40.6964, -15.668, 2.65 ) }
    dend_35 { pt3dadd( -22.6959, 43.1306, -14.6386, 0.48 ) }
    dend_35 { pt3dadd( -22.7553, 43.9545, -14.1986, 1.33 ) }
    dend_35 { pt3dadd( -22.921, 45.6117, -13.2769, 0.36 ) }
    dend_35 { pt3dadd( -22.9915, 46.1711, -12.956, 1.57 ) }
    dend_35 { pt3dadd( -23.1881, 47.4637, -12.2267, 0.48 ) }
    dend_35 { pt3dadd( -23.4281, 48.7984, -11.5348, 1.69 ) }
    dend_35 { pt3dadd( -23.8357, 50.657, -10.7674, 0.36 ) }
    dend_35 { pt3dadd( -24.0252, 51.403, -10.4934, 1.08 ) }
    dend_35 { pt3dadd( -24.0895, 51.6274, -10.4319, 1.81 ) }
    dend_35 { pt3dadd( -24.5146, 52.9603, -10.1435, 0.6 ) }
    dend_35 { pt3dadd( -24.7751, 53.6732, -10.0588, 1.69 ) }
    dend_35 { pt3dadd( -25.0823, 54.4464, -10.0267, 0.12 ) }
    dend_35 { pt3dadd( -25.3315, 55.0076, -10.0144, 0.96 ) }
    dend_35 { pt3dadd( -25.7123, 55.7758, -9.9974, 0.24 ) }
    dend_35 { pt3dadd( -26.103, 56.4846, -9.98359, 0.24 ) }
    dend_35 { pt3dadd( -26.5355, 57.2049, -9.92441, 1.33 ) }
    dend_35 { pt3dadd( -26.6824, 57.4497, -9.88698, 2.05 ) }
    dend_35 { pt3dadd( -27.5099, 58.929, -9.60625, 0.48 ) }
    dend_35 { pt3dadd( -27.7684, 59.4257, -9.51612, 0.48 ) }
    dend_35 { pt3dadd( -28.0144, 59.9348, -9.43322, 1.57 ) }
    dend_35 { pt3dadd( -28.6663, 61.4457, -9.21789, 0.36 ) }
    dend_35 { pt3dadd( -28.9537, 62.18, -9.1172, 1.33 ) }
    dend_35 { pt3dadd( -29.6067, 63.9931, -8.84828, 0.36 ) }
    dend_35 { pt3dadd( -29.8235, 64.6783, -8.75681, 1.69 ) }
    dend_35 { pt3dadd( -30.088, 65.6218, -8.66127, 0.48 ) }
    dend_35 { pt3dadd( -30.1622, 65.934, -8.64275, 0.84 ) }
    dend_35 { pt3dadd( -30.2793, 66.5461, -8.61112, 0.24 ) }
    dend_35 { pt3dadd( -30.4028, 67.4598, -8.52709, 1.33 ) }
    dend_35 { pt3dadd( -30.4523, 68.561, -8.41959, 0.6 ) }
    dend_35 { pt3dadd( -30.4142, 69.7288, -8.31662, 0.36 ) }
    dend_35 { pt3dadd( -30.307, 70.6866, -8.24689, 0.36 ) }
    dend_35 { pt3dadd( -30.0594, 71.9472, -8.16226, 1.33 ) }
    dend_35 { pt3dadd( -29.8579, 72.66, -8.12331, 0.36 ) }
    dend_35 { pt3dadd( -29.4315, 73.8849, -8.07835, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( -29.1669, 74.4994, -8.04239, 0.12 ) }
    dend_35 { pt3dadd( -28.9392, 74.9423, -8.02353, 0.72 ) }
    dend_35 { pt3dadd( -28.4563, 75.778, -8.02958, 0.24 ) }
    dend_35 { pt3dadd( -28.0952, 76.3397, -8.10305, 0.24 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -19.0121, 23.6175, -16.0257, 1.2 ) }
    dend_32 { pt3dadd( -24.8662, 30.6398, -3.87509, 1.2 ) }
    dend_32 { pt3dadd( -26.3834, 32.3284, -0.911325, 0.24 ) }
    dend_32 { pt3dadd( -27.8511, 33.9739, 1.88469, 1.2 ) }
    dend_32 { pt3dadd( -30.4179, 36.8477, 6.54561, 0.24 ) }
    dend_32 { pt3dadd( -33.3771, 40.149, 11.8667, 1.57 ) }
    dend_32 { pt3dadd( -36.2384, 43.4041, 16.9529, 0.96 ) }
    dend_32 { pt3dadd( -38.261, 45.715, 20.131, 1.93 ) }
    dend_32 { pt3dadd( -39.1072, 46.6775, 21.4636, 0.72 ) }
    dend_32 { pt3dadd( -42.0013, 49.8038, 25.9283, 2.77 ) }
    dend_32 { pt3dadd( -44.2321, 52.2439, 29.1163, 0.72 ) }
    dend_32 { pt3dadd( -45.1923, 53.4373, 30.5894, 1.81 ) }
    dend_32 { pt3dadd( -46.6321, 55.4836, 32.5715, 0.6 ) }
    dend_32 { pt3dadd( -52.6572, 60.8913, 41.0266, 0.6 ) }
    dend_32 { pt3dadd( -56.7811, 67.4083, 49.7491, 0.6 ) }
    dend_32 { pt3dadd( -58.6401, 74.6811, 58.5928, 0.6 ) }
    dend_32 { pt3dadd( -61.69, 81.6094, 67.4077, 0.6 ) }
    dend_32 { pt3dadd( -64.0917, 87.627, 77.1248, 0.6 ) }
    dend_32 { pt3dadd( -65.5602, 93.5352, 87.1032, 0.6 ) }
    dend_32 { pt3dadd( -69.0877, 100.287, 95.8902, 0.6 ) }
    dend_32 { pt3dadd( -72.3602, 108.633, 103.119, 0.6 ) }
    dend_32 { pt3dadd( -74.796, 116.397, 111.335, 0.6 ) }
    dend_32 { pt3dadd( -75.0593, 124.601, 119.446, 0.6 ) }
    dend_32 { pt3dadd( -75.4938, 131.967, 128.397, 0.6 ) }
    dend_32 { pt3dadd( -74.3386, 138.17, 138.23, 0.6 ) }
    dend_32 { pt3dadd( -73.3179, 143.313, 148.735, 0.6 ) }
    dend_32 { pt3dadd( -71.3432, 146.775, 159.86, 0.6 ) }
    dend_32 { pt3dadd( -68.8204, 150.652, 170.72, 0.6 ) }
    dend_32 { pt3dadd( -67.9041, 154.743, 181.739, 0.6 ) }
    dend_32 { pt3dadd( -67.7237, 160.357, 192.016, 0.6 ) }
    dend_32 { pt3dadd( -66.5714, 167.016, 201.512, 0.6 ) }
    dend_32 { pt3dadd( -67.4189, 172.187, 212.009, 0.6 ) }
    dend_32 { pt3dadd( -70.3319, 175.951, 222.799, 0.6 ) }
    dend_32 { pt3dadd( -72.887, 180.81, 233.179, 0.6 ) }
    dend_32 { pt3dadd( -76.7299, 185.533, 243.224, 0.6 ) }
    dend_32 { pt3dadd( -82.4982, 191.293, 251.598, 0.6 ) }
    dend_32 { pt3dadd( -87.6159, 197.38, 260.136, 0.6 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 41/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -75.9647, -0.664311, -20.7728, 0.12 ) }
    dend_30 { pt3dadd( -76.1389, -5.33688, -19.1813, 0.12 ) }
    dend_30 { pt3dadd( -76.198, -6.56526, -18.699, 1.69 ) }
    dend_30 { pt3dadd( -76.3257, -9.10444, -17.626, 0.24 ) }
    dend_30 { pt3dadd( -76.3895, -10.6814, -16.9842, 0.24 ) }
    dend_30 { pt3dadd( -76.4518, -12.3518, -16.2982, 1.57 ) }
    dend_30 { pt3dadd( -76.5409, -17.0197, -14.4294, 0.12 ) }
    dend_30 { pt3dadd( -76.5579, -17.644, -14.1347, 1.81 ) }
    dend_30 { pt3dadd( -76.5604, -20.1404, -12.9955, 0.24 ) }
    dend_30 { pt3dadd( -76.4788, -21.3635, -12.5188, 0.24 ) }
    dend_30 { pt3dadd( -76.3548, -22.3721, -12.149, 1.08 ) }
    dend_30 { pt3dadd( -76.1844, -23.5565, -11.7695, 1.08 ) }
    dend_30 { pt3dadd( -75.9975, -24.7486, -11.4609, 0.24 ) }
    dend_30 { pt3dadd( -75.8916, -25.5531, -11.2283, 1.69 ) }
    dend_30 { pt3dadd( -75.5021, -29.0716, -10.1691, 0.12 ) }
    dend_30 { pt3dadd( -75.1481, -33.7414, -8.62006, 0.12 ) }
    dend_30 { pt3dadd( -75.1109, -34.61, -8.32499, 0.6 ) }
    dend_30 { pt3dadd( -75.1325, -35.8685, -7.87719, 1.69 ) }
    dend_30 { pt3dadd( -75.3234, -38.4294, -6.95678, 0.36 ) }
    dend_30 { pt3dadd( -75.3851, -38.8771, -6.80432, 1.08 ) }
    dend_30 { pt3dadd( -75.7688, -40.4429, -6.45331, 0.36 ) }
    dend_30 { pt3dadd( -75.9628, -41.0418, -6.38965, 0.36 ) }
    dend_30 { pt3dadd( -76.687, -43.1956, -6.14296, 0.36 ) }
    dend_30 { pt3dadd( -76.9569, -43.9596, -6.06422, 0.36 ) }
    dend_30 { pt3dadd( -77.1942, -44.6522, -6.02584, 0.84 ) }
    dend_30 { pt3dadd( -78.2035, -47.7814, -5.87719, 0.48 ) }
    dend_30 { pt3dadd( -78.705, -49.6523, -5.77618, 0.72 ) }
    dend_30 { pt3dadd( -79.163, -51.5032, -5.64802, 0.12 ) }
    dend_30 { pt3dadd( -79.263, -51.9806, -5.60734, 1.08 ) }
    dend_30 { pt3dadd( -79.4385, -52.9879, -5.48814, 0.36 ) }
    dend_30 { pt3dadd( -79.5138, -53.5408, -5.39796, 0.84 ) }
    dend_30 { pt3dadd( -79.7608, -56.9224, -4.56591, 0.24 ) }
    dend_30 { pt3dadd( -79.8235, -64.3505, -2.31046, 0.24 ) }
    dend_30 { pt3dadd( -80.2362, -71.6603, 0.347652, 0.24 ) }
    dend_30 { pt3dadd( -80.7686, -78.8649, 3.30494, 0.24 ) }
    dend_30 { pt3dadd( -81.8347, -85.9245, 6.52274, 0.24 ) }
    dend_30 { pt3dadd( -84.7329, -92.2845, 10.2253, 0.24 ) }
    dend_30 { pt3dadd( -88.3331, -97.9416, 14.5121, 0.24 ) }
    dend_30 { pt3dadd( -92.2422, -104.178, 17.4221, 0.24 ) }
    dend_30 { pt3dadd( -97.0244, -109.131, 21.4784, 0.24 ) }
    dend_30 { pt3dadd( -100.704, -114.724, 25.7874, 0.24 ) }
    dend_30 { pt3dadd( -103.619, -120.273, 30.7017, 0.24 ) }
    dend_30 { pt3dadd( -107.216, -125.494, 35.5492, 0.24 ) }
    dend_30 { pt3dadd( -109.866, -131.007, 40.6526, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 85/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -75.9647, -0.664311, -20.7728, 1.45 ) }
    dend_29 { pt3dadd( -76.9474, -1.14614, -21.0665, 1.45 ) }
    dend_29 { pt3dadd( -78.035, -1.72638, -21.4868, 0.24 ) }
    dend_29 { pt3dadd( -78.5715, -2.08833, -21.8461, 1.2 ) }
    dend_29 { pt3dadd( -79.1549, -2.52134, -22.3036, 0.12 ) }
    dend_29 { pt3dadd( -79.7219, -2.98532, -22.8263, 1.33 ) }
    dend_29 { pt3dadd( -80.5525, -3.71237, -23.6245, 0.12 ) }
    dend_29 { pt3dadd( -81.0057, -4.15841, -24.0899, 1.33 ) }
    dend_29 { pt3dadd( -82.7062, -5.91885, -25.8131, 0.36 ) }
    dend_29 { pt3dadd( -82.8676, -6.08132, -26.0037, 0.84 ) }
    dend_29 { pt3dadd( -84.2605, -7.50597, -27.7066, 0.12 ) }
    dend_29 { pt3dadd( -84.727, -7.98783, -28.2894, 1.45 ) }
    dend_29 { pt3dadd( -86.032, -9.31368, -29.8447, 0.6 ) }
    dend_29 { pt3dadd( -86.9919, -10.2502, -30.9479, 0.24 ) }
    dend_29 { pt3dadd( -89.3243, -12.3359, -33.3946, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.53286, -17.6874, -16.6851, 1.32 ) }
    dend_24 { pt3dadd( -1.03528, -18.892, -18.6609, 1.32 ) }
    dend_24 { pt3dadd( 0.00219509, -21.196, -21.981, 0.6 ) }
    dend_24 { pt3dadd( 1.72546, -24.5793, -26.3089, 0.6 ) }
    dend_24 { pt3dadd( 2.20472, -25.4207, -27.3895, 0.6 ) }
    dend_24 { pt3dadd( 2.69809, -26.2786, -28.4973, 0.6 ) }
    dend_24 { pt3dadd( 3.37201, -27.5353, -30.1399, 1.68 ) }
    dend_24 { pt3dadd( 3.73382, -28.2708, -31.0618, 1.68 ) }
    dend_24 { pt3dadd( 4.12314, -29.0738, -32.2187, 0.84 ) }
    dend_24 { pt3dadd( 5.57201, -31.924, -36.5847, 0.84 ) }
    dend_24 { pt3dadd( 5.99846, -32.7145, -37.8999, 0.84 ) }
    dend_24 { pt3dadd( 7.19518, -34.8858, -41.7159, 1.8 ) }
    dend_24 { pt3dadd( 7.41725, -35.2794, -42.4721, 1.8 ) }
    dend_24 { pt3dadd( 9.44876, -38.7561, -49.3143, 0.6 ) }
    dend_24 { pt3dadd( 9.68929, -39.1541, -50.1802, 0.6 ) }
    dend_24 { pt3dadd( 10.0208, -39.6508, -51.2664, 0.6 ) }
    dend_24 { pt3dadd( 10.4306, -40.2112, -52.51, 1.44 ) }
    dend_24 { pt3dadd( 12.3098, -42.6185, -57.8331, 0.6 ) }
    dend_24 { pt3dadd( 13.2926, -43.8637, -60.748, 1.8 ) }
    dend_24 { pt3dadd( 16.8053, -48.2427, -71.1748, 0.24 ) }
    dend_24 { pt3dadd( 17.309, -48.8848, -72.7596, 1.44 ) }
    dend_24 { pt3dadd( 17.5791, -49.237, -73.6384, 0.36 ) }
    dend_24 { pt3dadd( 17.8804, -49.6248, -74.5955, 0.36 ) }
    dend_24 { pt3dadd( 20.6445, -53.056, -82.4877, 1.44 ) }
    dend_24 { pt3dadd( 20.7922, -53.2346, -82.8779, 1.44 ) }
    dend_24 { pt3dadd( 20.9704, -53.446, -83.2577, 0.48 ) }
    dend_24 { pt3dadd( 22.2231, -55.0299, -85.98, 0.48 ) }
    dend_24 { pt3dadd( 22.7161, -55.6877, -87.0177, 1.92 ) }
    dend_24 { pt3dadd( 23.0352, -56.1254, -87.6587, 0.72 ) }
    dend_24 { pt3dadd( 25.0008, -58.8741, -91.3211, 0.24 ) }
    dend_24 { pt3dadd( 25.7749, -59.9443, -92.7784, 0.24 ) }
    dend_24 { pt3dadd( 26.8829, -61.4358, -94.812, 0.24 ) }
    dend_24 { pt3dadd( 28.2046, -63.1965, -97.3977, 2.16 ) }
    dend_24 { pt3dadd( 29.2154, -64.5054, -99.6425, 0.12 ) }
    dend_24 { pt3dadd( 30.7522, -66.4225, -103.097, 0.24 ) }
    dend_24 { pt3dadd( 31.3954, -67.207, -104.675, 1.08 ) }
    dend_24 { pt3dadd( 32.4628, -68.5214, -107.448, 0.24 ) }
    dend_24 { pt3dadd( 34.5441, -71.1394, -113.058, 1.8 ) }
    dend_24 { pt3dadd( 37.7563, -75.1806, -121.805, 0.12 ) }
    dend_24 { pt3dadd( 38.1813, -75.7012, -123.062, 1.92 ) }
    dend_24 { pt3dadd( 40.3657, -78.2619, -129.905, 0.12 ) }
    dend_24 { pt3dadd( 40.796, -78.7074, -131.498, 0.12 ) }
    dend_24 { pt3dadd( 41.8003, -79.6614, -135.599, 0.12 ) }
    dend_24 { pt3dadd( 42.3668, -80.1413, -137.945, 1.56 ) }
    dend_24 { pt3dadd( 44.9337, -82.1555, -148.664, 0.12 ) }
    dend_24 { pt3dadd( 45.1037, -82.2854, -149.37, 1.92 ) }
    dend_24 { pt3dadd( 49.7316, -85.6003, -167.569, 0.12 ) }
    dend_24 { pt3dadd( 49.9293, -85.736, -168.31, 0.12 ) }
    dend_24 { pt3dadd( 50.313, -86.0041, -169.68, 1.8 ) }
    dend_24 { pt3dadd( 51.349, -86.8445, -173.309, 0.12 ) }
    dend_24 { pt3dadd( 52.6693, -88.1148, -177.407, 0.96 ) }
    dend_24 { pt3dadd( 53.0103, -88.4918, -178.414, 0.12 ) }
    dend_24 { pt3dadd( 53.9241, -89.7071, -180.667, 1.44 ) }
    dend_24 { pt3dadd( 54.6893, -90.8464, -182.823, 0.48 ) }
    dend_24 { pt3dadd( 55.6606, -92.6664, -186.387, 0.48 ) }
    dend_24 { pt3dadd( 55.7584, -92.892, -186.843, 0.96 ) }
    dend_24 { pt3dadd( 56.6015, -95.184, -192.005, 0.96 ) }
    dend_24 { pt3dadd( 56.8521, -95.9263, -193.799, 0.96 ) }
    dend_24 { pt3dadd( 57.0012, -96.3668, -194.9, 1.32 ) }
    dend_24 { pt3dadd( 57.8744, -98.595, -200.523, 0.12 ) }
    dend_24 { pt3dadd( 58.6192, -100.27, -204.669, 0.12 ) }
    dend_24 { pt3dadd( 59.8564, -102.9, -210.944, 1.32 ) }
    dend_24 { pt3dadd( 60.0016, -103.184, -211.589, 0.12 ) }
    dend_24 { pt3dadd( 60.2982, -103.684, -212.692, 0.12 ) }
    dend_24 { pt3dadd( 61.2404, -105.089, -215.593, 1.8 ) }
    dend_24 { pt3dadd( 61.7099, -105.762, -216.73, 0.12 ) }
    dend_24 { pt3dadd( 62.2897, -106.618, -217.815, 0.12 ) }
    dend_24 { pt3dadd( 63.2674, -108.029, -219.212, 0.12 ) }
    dend_24 { pt3dadd( 64.6294, -109.989, -221.106, 1.68 ) }
    dend_24 { pt3dadd( 66.0312, -112.032, -223.099, 0.12 ) }
    dend_24 { pt3dadd( 66.7064, -113.005, -224.018, 0.12 ) }
    dend_24 { pt3dadd( 68.1179, -115.01, -226.039, 0.12 ) }
    dend_24 { pt3dadd( 68.7391, -115.879, -226.936, 0.12 ) }
    dend_24 { pt3dadd( 68.8604, -116.046, -227.073, 0.72 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.53286, -17.6874, -16.6851, 0.6 ) }
    dend_23 { pt3dadd( -3.09041, -17.9205, -17.113, 0.6 ) }
    dend_23 { pt3dadd( -4.20569, -18.1518, -17.5635, 0.6 ) }
    dend_23 { pt3dadd( -5.07197, -18.3985, -17.9702, 0.6 ) }
    dend_23 { pt3dadd( -6.45912, -18.9091, -18.8731, 0.6 ) }
    dend_23 { pt3dadd( -8.47516, -19.7115, -20.302, 0.6 ) }
    dend_23 { pt3dadd( -11.5556, -20.9952, -22.5016, 0.6 ) }
    dend_23 { pt3dadd( -12.3023, -21.3418, -23.0432, 0.6 ) }
    dend_23 { pt3dadd( -12.9454, -21.681, -23.5201, 0.6 ) }
    dend_23 { pt3dadd( -14.6749, -22.7135, -24.7688, 0.6 ) }
    dend_23 { pt3dadd( -15.8547, -23.4827, -25.5978, 0.6 ) }
    dend_23 { pt3dadd( -17.2976, -24.4139, -26.5848, 1.68 ) }
    dend_23 { pt3dadd( -18.4095, -25.1129, -27.4468, 0.72 ) }
    dend_23 { pt3dadd( -19.0736, -25.5475, -28.2585, 0.72 ) }
    dend_23 { pt3dadd( -19.6249, -25.9332, -29.127, 0.72 ) }
    dend_23 { pt3dadd( -20.3768, -26.5013, -30.4063, 0.72 ) }
    dend_23 { pt3dadd( -21.2057, -27.1881, -32.1521, 0.72 ) }
    dend_23 { pt3dadd( -23.0951, -28.8126, -36.8001, 0.72 ) }
    dend_23 { pt3dadd( -24.5545, -30.0708, -40.8984, 0.36 ) }
    dend_23 { pt3dadd( -25.218, -30.6179, -42.9144, 1.2 ) }
    dend_23 { pt3dadd( -25.9422, -31.1508, -45.132, 0.36 ) }
    dend_23 { pt3dadd( -27.8156, -32.5089, -50.7158, 1.44 ) }
    dend_23 { pt3dadd( -29.3658, -33.6042, -54.8919, 0.12 ) }
    dend_23 { pt3dadd( -31.2074, -34.8982, -59.4397, 1.32 ) }
    dend_23 { pt3dadd( -32.3581, -35.7384, -62.1223, 0.36 ) }
    dend_23 { pt3dadd( -33.1341, -36.3544, -63.974, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -35.0075, -37.9989, -68.5119, 0.24 ) }
    dend_23 { pt3dadd( -35.8898, -38.8264, -70.4378, 0.24 ) }
    dend_23 { pt3dadd( -38.0172, -41.0236, -74.8635, 0.24 ) }
    dend_23 { pt3dadd( -38.6793, -41.7767, -76.2185, 0.24 ) }
    dend_23 { pt3dadd( -40.6021, -44.2625, -80.5198, 1.44 ) }
    dend_23 { pt3dadd( -41.9486, -46.0842, -83.8283, 0.12 ) }
    dend_23 { pt3dadd( -42.3428, -46.5998, -84.8946, 0.36 ) }
    dend_23 { pt3dadd( -43.0041, -47.48, -87.0581, 0.36 ) }
    dend_23 { pt3dadd( -43.6861, -48.3716, -89.4224, 0.36 ) }
    dend_23 { pt3dadd( -44.9246, -49.9652, -94.1426, 0.36 ) }
    dend_23 { pt3dadd( -46.1465, -51.4052, -98.6619, 0.36 ) }
    dend_23 { pt3dadd( -46.7849, -52.0834, -100.916, 1.2 ) }
    dend_23 { pt3dadd( -49.6791, -54.8506, -110.501, 0.36 ) }
    dend_23 { pt3dadd( -49.9694, -55.0802, -111.323, 0.36 ) }
    dend_23 { pt3dadd( -52.6349, -56.8182, -117.59, 0.36 ) }
    dend_23 { pt3dadd( -53.5918, -57.2953, -119.326, 0.36 ) }
    dend_23 { pt3dadd( -54.4164, -57.6142, -120.426, 0.36 ) }
    dend_23 { pt3dadd( -55.3401, -57.8746, -121.246, 0.72 ) }
    dend_23 { pt3dadd( -58.1448, -58.3161, -122.941, 0.48 ) }
    dend_23 { pt3dadd( -59.3264, -58.4745, -123.622, 0.48 ) }
    dend_23 { pt3dadd( -61.6975, -58.7768, -125.06, 0.24 ) }
    dend_23 { pt3dadd( -63.3091, -59.0076, -126.2, 1.2 ) }
    dend_23 { pt3dadd( -63.9932, -59.1092, -126.724, 1.2 ) }
    dend_23 { pt3dadd( -70.4519, -60.1299, -132.148, 0.24 ) }
    dend_23 { pt3dadd( -73.3904, -60.6403, -134.924, 0.24 ) }
    dend_23 { pt3dadd( -76.1742, -61.186, -137.768, 1.32 ) }
    dend_23 { pt3dadd( -76.8734, -61.3463, -138.547, 1.32 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.12553, -27.2466, -4.42825, 0.6 ) }
    dend_19 { pt3dadd( -0.762277, -30.9761, -3.39027, 0.6 ) }
    dend_19 { pt3dadd( 1.60652, -32.7919, -2.8628, 0.6 ) }
    dend_19 { pt3dadd( 5.45953, -35.6961, -1.84787, 0.6 ) }
    dend_19 { pt3dadd( 8.65549, -38.2274, -0.954988, 0.6 ) }
    dend_19 { pt3dadd( 9.74466, -39.1411, -0.647426, 0.6 ) }
    dend_19 { pt3dadd( 11.9703, -40.9064, -0.0854602, 0.84 ) }
    dend_19 { pt3dadd( 14.4117, -42.7232, 0.657041, 0.84 ) }
    dend_19 { pt3dadd( 15.997, -43.8352, 1.28691, 0.6 ) }
    dend_19 { pt3dadd( 17.7467, -45.0654, 2.04075, 0.6 ) }
    dend_19 { pt3dadd( 18.8962, -45.8316, 2.59699, 0.6 ) }
    dend_19 { pt3dadd( 21.4238, -47.3957, 3.62653, 0.84 ) }
    dend_19 { pt3dadd( 25.4155, -49.7481, 4.88652, 0.48 ) }
    dend_19 { pt3dadd( 27.2048, -50.7218, 5.24852, 1.08 ) }
    dend_19 { pt3dadd( 29.2955, -51.7937, 5.76465, 0.48 ) }
    dend_19 { pt3dadd( 33.0758, -53.6223, 6.9816, 0.48 ) }
    dend_19 { pt3dadd( 36.4492, -55.2671, 8.25972, 0.48 ) }
    dend_19 { pt3dadd( 38.0405, -56.1219, 8.91236, 0.48 ) }
    dend_19 { pt3dadd( 39.9435, -57.1678, 9.6049, 1.08 ) }
    dend_19 { pt3dadd( 45.7213, -60.3095, 11.7685, 1.08 ) }
    dend_19 { pt3dadd( 48.9298, -62.1352, 13.0342, 0.48 ) }
    dend_19 { pt3dadd( 50.4327, -63.1604, 13.6881, 0.36 ) }
    dend_19 { pt3dadd( 52.0556, -64.4324, 14.3882, 0.36 ) }
    dend_19 { pt3dadd( 54.2612, -66.3116, 15.1254, 0.36 ) }
    dend_19 { pt3dadd( 55.5199, -67.4391, 15.3133, 0.36 ) }
    dend_19 { pt3dadd( 56.5185, -68.4338, 15.1762, 1.57 ) }
    dend_19 { pt3dadd( 57.9102, -69.9644, 14.731, 0.84 ) }
    dend_19 { pt3dadd( 59.0066, -71.2365, 14.3397, 0.6 ) }
    dend_19 { pt3dadd( 60.6612, -73.2393, 13.8126, 0.6 ) }
    dend_19 { pt3dadd( 61.7797, -74.8187, 13.4511, 0.6 ) }
    dend_19 { pt3dadd( 62.3083, -75.6088, 13.2699, 0.6 ) }
    dend_19 { pt3dadd( 64.0529, -78.1921, 12.5533, 1.57 ) }
    dend_19 { pt3dadd( 65.0943, -79.7292, 12.0098, 0.48 ) }
    dend_19 { pt3dadd( 65.6823, -80.7532, 11.5536, 0.48 ) }
    dend_19 { pt3dadd( 66.2843, -82.3313, 10.7815, 0.48 ) }
    dend_19 { pt3dadd( 73.8613, -86.9072, 10.9832, 0.48 ) }
    dend_19 { pt3dadd( 81.3748, -91.4029, 12.3391, 0.48 ) }
    dend_19 { pt3dadd( 87.5407, -97.4861, 13.6252, 0.48 ) }
    dend_19 { pt3dadd( 94.0036, -103.404, 13.4268, 0.48 ) }
    dend_19 { pt3dadd( 100.659, -109.13, 13.5644, 0.48 ) }
    dend_19 { pt3dadd( 107.668, -114.461, 13.7118, 0.48 ) }
    dend_19 { pt3dadd( 114.862, -119.54, 14.2681, 0.48 ) }
    dend_19 { pt3dadd( 122.214, -124.375, 13.4512, 0.48 ) }
    dend_19 { pt3dadd( 129.483, -129.324, 12.646, 0.48 ) }
    dend_19 { pt3dadd( 136.736, -134.206, 11.3878, 0.48 ) }
    dend_19 { pt3dadd( 144.361, -138.646, 10.5796, 0.48 ) }
    dend_19 { pt3dadd( 152.178, -142.826, 10.1591, 0.48 ) }
    dend_19 { pt3dadd( 159.261, -147.872, 8.66806, 0.48 ) }
    dend_19 { pt3dadd( 166.09, -153.371, 7.98525, 0.48 ) }
    dend_19 { pt3dadd( 172.153, -159.53, 6.64058, 0.48 ) }
    dend_19 { pt3dadd( 177.444, -166.317, 5.39634, 0.48 ) }
    dend_19 { pt3dadd( 182.114, -173.457, 3.87533, 0.48 ) }
    dend_19 { pt3dadd( 186.467, -180.533, 1.39033, 0.48 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 80/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.12553, -27.2466, -4.42825, 1.2 ) }
    dend_14 { pt3dadd( -6.18148, -31.0849, -3.91021, 1.2 ) }
    dend_14 { pt3dadd( -6.86544, -33.8319, -3.55825, 1.08 ) }
    dend_14 { pt3dadd( -7.89287, -37.7193, -3.1233, 1.45 ) }
    dend_14 { pt3dadd( -8.76947, -40.979, -2.9728, 1.2 ) }
    dend_14 { pt3dadd( -10.7688, -48.3031, -2.96154, 1.2 ) }
    dend_14 { pt3dadd( -12.7033, -55.3878, -3.14425, 1.2 ) }
    dend_14 { pt3dadd( -13.4186, -58.2322, -3.30227, 0.96 ) }
    dend_14 { pt3dadd( -14.2148, -61.5951, -3.55971, 0.96 ) }
    dend_14 { pt3dadd( -15.1642, -66.0031, -4.1868, 0.96 ) }
    dend_14 { pt3dadd( -15.926, -69.7206, -4.98938, 1.2 ) }
    dend_14 { pt3dadd( -16.6565, -73.3045, -6.08916, 0.84 ) }
    dend_14 { pt3dadd( -17.5022, -77.3664, -7.3352, 1.33 ) }
    dend_14 { pt3dadd( -18.3813, -82.2323, -8.80816, 0.96 ) }
    dend_14 { pt3dadd( -19.0668, -87.8748, -10.422, 0.84 ) }
    dend_14 { pt3dadd( -19.3168, -91.5098, -11.3364, 0.84 ) }
    dend_14 { pt3dadd( -19.3789, -96.6381, -12.6228, 0.84 ) }
    dend_14 { pt3dadd( -19.1781, -99.7468, -13.5799, 0.84 ) }
    dend_14 { pt3dadd( -18.9521, -101.691, -14.2756, 0.84 ) }
    dend_14 { pt3dadd( -18.3568, -106.048, -15.9022, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( -17.9469, -108.67, -16.8501, 1.2 ) }
    dend_14 { pt3dadd( -17.6536, -110.247, -17.4399, 2.65 ) }
    dend_14 { pt3dadd( -16.324, -116.962, -19.91, 0.72 ) }
    dend_14 { pt3dadd( -15.7065, -120.767, -21.3396, 0.6 ) }
    dend_14 { pt3dadd( -15.1878, -125.794, -23.2099, 0.6 ) }
    dend_14 { pt3dadd( -15.124, -128.546, -24.1827, 0.48 ) }
    dend_14 { pt3dadd( -15.1842, -131.076, -24.9779, 1.33 ) }
    dend_14 { pt3dadd( -15.2301, -132.075, -25.2692, 1.45 ) }
    dend_14 { pt3dadd( -15.3867, -134.035, -25.7444, 0.6 ) }
    dend_14 { pt3dadd( -15.465, -135.052, -26.0412, 0.48 ) }
    dend_14 { pt3dadd( -15.7746, -137.689, -26.9239, 1.2 ) }
    dend_14 { pt3dadd( -16.1485, -140.264, -27.9947, 0.6 ) }
    dend_14 { pt3dadd( -17.0372, -145.697, -30.5585, 1.33 ) }
    dend_14 { pt3dadd( -17.6252, -149.342, -32.3505, 0.96 ) }
    dend_14 { pt3dadd( -17.9517, -151.393, -33.3862, 0.96 ) }
    dend_14 { pt3dadd( -18.3245, -153.666, -34.6146, 0.72 ) }
    dend_14 { pt3dadd( -19.1847, -158.201, -37.1687, 1.45 ) }
    dend_14 { pt3dadd( -19.6426, -160.287, -38.3583, 0.72 ) }
    dend_14 { pt3dadd( -20.0322, -162.048, -39.267, 0.72 ) }
    dend_14 { pt3dadd( -20.2139, -163.053, -39.7604, 0.72 ) }
    dend_14 { pt3dadd( -20.7331, -166.336, -41.2817, 0.48 ) }
    dend_14 { pt3dadd( -21.1023, -168.794, -42.3633, 0.48 ) }
    dend_14 { pt3dadd( -21.3395, -170.307, -42.9358, 1.69 ) }
    dend_14 { pt3dadd( -22.1811, -176.518, -45.3654, 0.72 ) }
    dend_14 { pt3dadd( -22.6071, -180.035, -46.7397, 0.72 ) }
    dend_14 { pt3dadd( -22.6793, -180.872, -47.0384, 2.89 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 223.852, 211.349, 301.19, 0.6 ) }
    dend_10 { pt3dadd( 226.65, 213.95, 305.335, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 223.852, 211.349, 301.19, 0.6 ) }
    dend_9 { pt3dadd( 228.398, 215.437, 307.875, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 30/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.39709, -40.5983, 19.5955, 0.96 ) }
    dend_5 { pt3dadd( -9.86128, -42.9869, 26.7538, 0.96 ) }
    dend_5 { pt3dadd( -10.719, -43.4352, 27.8159, 0.96 ) }
    dend_5 { pt3dadd( -11.8738, -43.983, 28.9503, 0.84 ) }
    dend_5 { pt3dadd( -13.2439, -44.6331, 30.2964, 0.84 ) }
    dend_5 { pt3dadd( -14.9791, -45.4564, 32.001, 0.84 ) }
    dend_5 { pt3dadd( -16.9848, -46.408, 33.9715, 0.84 ) }
    dend_5 { pt3dadd( -18.7916, -47.0559, 34.7102, 0.6 ) }
    dend_5 { pt3dadd( -20.6582, -47.8006, 35.549, 0.36 ) }
    dend_5 { pt3dadd( -29.7648, -50.4441, 43.9358, 0.36 ) }
    dend_5 { pt3dadd( -39.5309, -54.4527, 50.8268, 0.36 ) }
    dend_5 { pt3dadd( -50.8419, -56.4925, 56.1541, 0.36 ) }
    dend_5 { pt3dadd( -63.1571, -55.7735, 59.2134, 0.36 ) }
    dend_5 { pt3dadd( -75.7117, -56.5402, 60.9133, 0.36 ) }
    dend_5 { pt3dadd( -87.7963, -56.8711, 64.8063, 0.36 ) }
    dend_5 { pt3dadd( -100.079, -59.1733, 66.8061, 0.36 ) }
    dend_5 { pt3dadd( -112.172, -62.7055, 67.3821, 0.36 ) }
    dend_5 { pt3dadd( -124.626, -64.7484, 68.418, 0.36 ) }
    dend_5 { pt3dadd( -136.247, -67.9375, 72.196, 0.36 ) }
    dend_5 { pt3dadd( -146.036, -73.2314, 77.9862, 0.36 ) }
    dend_5 { pt3dadd( -155.332, -80.8408, 81.0493, 0.36 ) }
    dend_5 { pt3dadd( -164.194, -89.3444, 82.1267, 0.36 ) }
    dend_5 { pt3dadd( -172.592, -98.3214, 82.138, 0.36 ) }
    dend_5 { pt3dadd( -180.462, -107.691, 82.9718, 0.36 ) }
    dend_5 { pt3dadd( -188.989, -116.557, 82.9052, 0.36 ) }
    dend_5 { pt3dadd( -197.973, -124.945, 83.9779, 0.36 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 56/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.39709, -40.5983, 19.5955, 1.2 ) }
    dend_2 { pt3dadd( -6.21235, -42.3387, 20.0125, 1.2 ) }
    dend_2 { pt3dadd( -6.84247, -44.1578, 20.2974, 1.2 ) }
    dend_2 { pt3dadd( -7.27818, -46.1994, 20.495, 1.08 ) }
    dend_2 { pt3dadd( -7.64822, -48.7628, 20.738, 1.08 ) }
    dend_2 { pt3dadd( -7.85926, -51.1235, 20.9071, 1.08 ) }
    dend_2 { pt3dadd( -7.94436, -52.3848, 20.9761, 1.08 ) }
    dend_2 { pt3dadd( -7.98878, -54.8313, 20.9998, 1.08 ) }
    dend_2 { pt3dadd( -7.92163, -57.4546, 20.9754, 0.96 ) }
    dend_2 { pt3dadd( -7.84535, -59.366, 20.9089, 0.84 ) }
    dend_2 { pt3dadd( -7.81911, -61.5427, 20.9281, 1.2 ) }
    dend_2 { pt3dadd( -7.98332, -64.1613, 21.126, 1.45 ) }
    dend_2 { pt3dadd( -8.3053, -66.3234, 21.4123, 1.2 ) }
    dend_2 { pt3dadd( -8.73006, -68.3708, 21.7703, 1.2 ) }
    dend_2 { pt3dadd( -9.14716, -69.9404, 22.0874, 1.2 ) }
    dend_2 { pt3dadd( -10.3506, -73.8926, 22.9883, 1.2 ) }
    dend_2 { pt3dadd( -11.1415, -76.0601, 23.6722, 1.2 ) }
    dend_2 { pt3dadd( -11.793, -77.6226, 24.3246, 1.57 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -28.0952, 76.3397, -8.10305, 1.2 ) }
    dend_36 { pt3dadd( -27.9523, 76.7481, -8.23553, 1.2 ) }
    dend_36 { pt3dadd( -27.0762, 79.7908, -9.40952, 0.36 ) }
    dend_36 { pt3dadd( -26.7764, 80.935, -9.84752, 0.36 ) }
    dend_36 { pt3dadd( -26.5629, 81.8135, -10.1858, 0.96 ) }
    dend_36 { pt3dadd( -26.1459, 83.7275, -10.8585, 0.12 ) }
    dend_36 { pt3dadd( -25.7703, 85.8159, -11.5499, 1.33 ) }
    dend_36 { pt3dadd( -25.3382, 88.8367, -12.4456, 0.24 ) }
    dend_36 { pt3dadd( -25.1736, 90.4928, -12.8637, 0.24 ) }
    dend_36 { pt3dadd( -25.022, 92.3673, -13.2896, 0.24 ) }
    dend_36 { pt3dadd( -24.8763, 94.5103, -13.7206, 1.93 ) }
    dend_36 { pt3dadd( -24.7094, 97.3005, -14.1877, 0.48 ) }
    dend_36 { pt3dadd( -24.5944, 99.2351, -14.436, 0.48 ) }
    dend_36 { pt3dadd( -24.5097, 100.929, -14.5769, 1.57 ) }
    dend_36 { pt3dadd( -24.4503, 103.853, -14.8246, 0.72 ) }
    dend_36 { pt3dadd( -24.4703, 105.101, -14.9075, 0.6 ) }
    dend_36 { pt3dadd( -24.5591, 107.009, -15.023, 1.57 ) }
    dend_36 { pt3dadd( -24.7725, 109.854, -15.1631, 0.48 ) }
    dend_36 { pt3dadd( -25.0833, 112.517, -15.2964, 0.24 ) }
    dend_36 { pt3dadd( -25.3979, 114.858, -15.4587, 1.57 ) }
    dend_36 { pt3dadd( -25.8602, 117.934, -15.716, 0.6 ) }
    dend_36 { pt3dadd( -26.189, 120.061, -15.9075, 1.93 ) }
    dend_36 { pt3dadd( -26.399, 121.644, -16.1109, 0.6 ) }
    dend_36 { pt3dadd( -26.529, 122.933, -16.3102, 1.81 ) }
    dend_36 { pt3dadd( -26.6649, 125.608, -16.8007, 0.12 ) }
    dend_36 { pt3dadd( -26.6704, 126.848, -17.0031, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( -26.6354, 128.299, -17.2573, 0.12 ) }
    dend_36 { pt3dadd( -26.5704, 131.002, -17.593, 2.05 ) }
    dend_36 { pt3dadd( -26.4853, 134.115, -17.7132, 0.72 ) }
    dend_36 { pt3dadd( -26.441, 135.571, -17.6219, 1.33 ) }
    dend_36 { pt3dadd( -26.3174, 138.922, -16.9962, 0.48 ) }
    dend_36 { pt3dadd( -26.2393, 140.436, -16.6075, 1.57 ) }
    dend_36 { pt3dadd( -26.0305, 142.715, -15.8018, 0.36 ) }
    dend_36 { pt3dadd( -25.6762, 145.535, -14.5693, 0.36 ) }
    dend_36 { pt3dadd( -25.2886, 147.657, -13.5061, 0.96 ) }
    dend_36 { pt3dadd( -24.5559, 150.921, -11.7586, 0.36 ) }
    dend_36 { pt3dadd( -24.2234, 152.114, -11.0951, 0.96 ) }
    dend_36 { pt3dadd( -23.1496, 155.319, -9.33208, 0.6 ) }
    dend_36 { pt3dadd( -22.8973, 155.888, -9.04689, 0.84 ) }
    dend_36 { pt3dadd( -21.6037, 158.013, -7.98639, 0.6 ) }
    dend_36 { pt3dadd( -20.7885, 158.885, -7.64687, 0.96 ) }
    dend_36 { pt3dadd( -19.8023, 159.711, -7.36662, 0.36 ) }
    dend_36 { pt3dadd( -18.4352, 160.633, -7.11323, 0.96 ) }
    dend_36 { pt3dadd( -16.1829, 161.72, -7.06102, 0.48 ) }
    dend_36 { pt3dadd( -13.703, 162.662, -7.15965, 0.84 ) }
    dend_36 { pt3dadd( -8.91911, 163.875, -7.8095, 0.12 ) }
    dend_36 { pt3dadd( -5.08833, 172.363, -8.44691, 0.12 ) }
    dend_36 { pt3dadd( -2.09438, 181.147, -9.15014, 0.12 ) }
    dend_36 { pt3dadd( 0.44055, 190.035, -8.08965, 0.12 ) }
    dend_36 { pt3dadd( 3.21784, 198.897, -8.5673, 0.12 ) }
    dend_36 { pt3dadd( 4.15219, 207.949, -10.3892, 0.12 ) }
    dend_36 { pt3dadd( 3.68045, 216.692, -13.555, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -87.6159, 197.38, 260.136, 0.6 ) }
    dend_34 { pt3dadd( -88.4937, 204.748, 270.257, 0.6 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -87.6159, 197.38, 260.136, 0.6 ) }
    dend_33 { pt3dadd( -91.8181, 201.628, 270.966, 0.6 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 30/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 186.467, -180.533, 1.39033, 0.6 ) }
    dend_21 { pt3dadd( 194.216, -186.732, 1.82568, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 186.467, -180.533, 1.39033, 0.6 ) }
    dend_20 { pt3dadd( 192.866, -185.46, 1.39289, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 34/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.6793, -180.872, -47.0384, 0.48 ) }
    dend_18 { pt3dadd( -21.0115, -183.139, -48.5301, 0.48 ) }
    dend_18 { pt3dadd( -20.4958, -183.823, -48.9603, 0.72 ) }
    dend_18 { pt3dadd( -19.6573, -184.88, -49.5587, 0.24 ) }
    dend_18 { pt3dadd( -17.6385, -187.363, -50.8391, 1.33 ) }
    dend_18 { pt3dadd( -14.6085, -191.105, -52.5735, 0.6 ) }
    dend_18 { pt3dadd( -13.8078, -192.112, -52.9796, 0.36 ) }
    dend_18 { pt3dadd( -12.654, -193.548, -53.4516, 0.36 ) }
    dend_18 { pt3dadd( -11.4715, -194.983, -53.8763, 0.36 ) }
    dend_18 { pt3dadd( -10.2894, -196.414, -54.2317, 0.96 ) }
    dend_18 { pt3dadd( -8.57691, -198.589, -54.5554, 0.6 ) }
    dend_18 { pt3dadd( -7.38328, -200.179, -54.652, 1.2 ) }
    dend_18 { pt3dadd( -6.60612, -201.26, -54.7611, 0.48 ) }
    dend_18 { pt3dadd( -5.44759, -202.862, -55.0466, 0.48 ) }
    dend_18 { pt3dadd( -4.62267, -203.992, -55.3998, 0.48 ) }
    dend_18 { pt3dadd( -4.10139, -204.696, -55.6632, 0.6 ) }
    dend_18 { pt3dadd( -2.99197, -206.193, -56.2618, 0.24 ) }
    dend_18 { pt3dadd( -1.74666, -207.861, -56.9791, 0.24 ) }
    dend_18 { pt3dadd( 0.0152216, -210.22, -57.9345, 0.72 ) }
    dend_18 { pt3dadd( 1.85592, -212.681, -58.6831, 0.24 ) }
    dend_18 { pt3dadd( 2.79996, -213.903, -59.0204, 0.36 ) }
    dend_18 { pt3dadd( 4.13383, -215.619, -59.4326, 0.36 ) }
    dend_18 { pt3dadd( 5.91464, -217.904, -59.8535, 0.36 ) }
    dend_18 { pt3dadd( 6.93597, -219.222, -60.0009, 0.72 ) }
    dend_18 { pt3dadd( 8.80969, -221.661, -60.062, 0.72 ) }
    dend_18 { pt3dadd( 10.7406, -224.163, -59.9708, 0.36 ) }
    dend_18 { pt3dadd( 12.2636, -226.117, -59.8717, 0.12 ) }
    dend_18 { pt3dadd( 13.2052, -227.323, -59.7668, 0.12 ) }
    dend_18 { pt3dadd( 13.9644, -228.316, -59.6177, 0.12 ) }
    dend_18 { pt3dadd( 15.1781, -229.904, -59.3114, 0.6 ) }
    dend_18 { pt3dadd( 16.796, -232.009, -58.7845, 0.12 ) }
    dend_18 { pt3dadd( 17.3306, -232.741, -58.5342, 0.6 ) }
    dend_18 { pt3dadd( 18.119, -233.837, -58.1168, 0.24 ) }
    dend_18 { pt3dadd( 19.1467, -235.365, -57.5222, 0.72 ) }
    dend_18 { pt3dadd( 20.8601, -238.024, -56.4846, 0.12 ) }
    dend_18 { pt3dadd( 21.4169, -238.869, -56.1497, 0.6 ) }
    dend_18 { pt3dadd( 23.075, -241.302, -55.1714, 0.12 ) }
    dend_18 { pt3dadd( 23.5006, -241.934, -54.9229, 0.72 ) }
    dend_18 { pt3dadd( 24.6634, -243.682, -54.2501, 0.12 ) }
    dend_18 { pt3dadd( 25.3346, -244.689, -53.8668, 0.6 ) }
    dend_18 { pt3dadd( 28.8077, -249.876, -51.9127, 0.12 ) }
    dend_18 { pt3dadd( 29.5276, -250.93, -51.5141, 0.72 ) }
    dend_18 { pt3dadd( 30.1144, -251.751, -51.1987, 0.24 ) }
    dend_18 { pt3dadd( 30.631, -252.488, -50.912, 0.96 ) }
    dend_18 { pt3dadd( 31.6602, -253.985, -50.2116, 0.24 ) }
    dend_18 { pt3dadd( 32.4116, -255.118, -49.599, 0.24 ) }
    dend_18 { pt3dadd( 33.0483, -256.189, -49.0476, 0.84 ) }
    dend_18 { pt3dadd( 33.6978, -257.302, -48.502, 0.24 ) }
    dend_18 { pt3dadd( 34.7133, -259.093, -47.682, 0.84 ) }
    dend_18 { pt3dadd( 35.892, -261.203, -46.837, 0.24 ) }
    dend_18 { pt3dadd( 36.6338, -262.562, -46.3665, 0.72 ) }
    dend_18 { pt3dadd( 38.1112, -265.196, -45.8193, 0.12 ) }
    dend_18 { pt3dadd( 38.3447, -265.61, -45.8073, 0.6 ) }
    dend_18 { pt3dadd( 39.3645, -267.356, -45.9694, 0.12 ) }
    dend_18 { pt3dadd( 40.2973, -268.723, -46.4287, 0.6 ) }
    dend_18 { pt3dadd( 40.9053, -269.52, -46.789, 0.12 ) }
    dend_18 { pt3dadd( 42.8407, -271.839, -47.9594, 0.96 ) }
    dend_18 { pt3dadd( 45.0227, -274.311, -49.2089, 0.36 ) }
    dend_18 { pt3dadd( 46.013, -275.424, -49.7528, 0.6 ) }
    dend_18 { pt3dadd( 49.5675, -279.5, -51.6824, 0.24 ) }
    dend_18 { pt3dadd( 50.9178, -281.141, -52.3896, 0.84 ) }
    dend_18 { pt3dadd( 52.4351, -283.075, -53.0912, 0.36 ) }
    dend_18 { pt3dadd( 53.68, -284.774, -53.5254, 0.24 ) }
    dend_18 { pt3dadd( 54.5225, -285.998, -53.7577, 0.84 ) }
    dend_18 { pt3dadd( 56.4411, -289.053, -54.0959, 0.36 ) }
    dend_18 { pt3dadd( 57.5939, -291.073, -54.0596, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 58.6533, -292.927, -53.9662, 0.12 ) }
    dend_18 { pt3dadd( 59.6615, -294.677, -53.7133, 0.12 ) }
    dend_18 { pt3dadd( 60.2535, -295.67, -53.4908, 0.12 ) }
    dend_18 { pt3dadd( 60.964, -296.887, -53.0893, 0.6 ) }
    dend_18 { pt3dadd( 61.7255, -298.298, -52.4406, 0.12 ) }
    dend_18 { pt3dadd( 62.2661, -299.446, -51.8197, 0.12 ) }
    dend_18 { pt3dadd( 63.0749, -301.326, -50.8791, 0.6 ) }
    dend_18 { pt3dadd( 63.5781, -302.67, -50.3027, 0.36 ) }
    dend_18 { pt3dadd( 64.1726, -304.518, -49.6496, 0.36 ) }
    dend_18 { pt3dadd( 64.6362, -306.309, -49.1548, 0.12 ) }
    dend_18 { pt3dadd( 65.0412, -308.355, -48.6845, 0.12 ) }
    dend_18 { pt3dadd( 65.4296, -310.921, -48.2392, 0.12 ) }
    dend_18 { pt3dadd( 65.7296, -313.04, -47.9786, 0.12 ) }
    dend_18 { pt3dadd( 65.9907, -315.128, -47.7786, 0.12 ) }
    dend_18 { pt3dadd( 66.2051, -317.062, -47.6698, 0.12 ) }
    dend_18 { pt3dadd( 66.3785, -318.689, -47.624, 0.12 ) }
    dend_18 { pt3dadd( 66.496, -320.315, -47.6057, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 17/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -22.6793, -180.872, -47.0384, 0.72 ) }
    dend_15 { pt3dadd( -23.7363, -184.066, -47.0208, 0.72 ) }
    dend_15 { pt3dadd( -24.1844, -185.585, -47.0104, 0.72 ) }
    dend_15 { pt3dadd( -24.8936, -188.164, -47.0574, 1.33 ) }
    dend_15 { pt3dadd( -25.4891, -190.689, -47.119, 0.36 ) }
    dend_15 { pt3dadd( -25.7381, -192.206, -47.1994, 0.36 ) }
    dend_15 { pt3dadd( -25.8939, -193.712, -47.2861, 0.36 ) }
    dend_15 { pt3dadd( -25.9483, -196.258, -47.4685, 1.45 ) }
    dend_15 { pt3dadd( -25.9859, -198.35, -47.5008, 0.48 ) }
    dend_15 { pt3dadd( -26.0395, -200.798, -47.4372, 0.48 ) }
    dend_15 { pt3dadd( -26.1793, -204.205, -47.1885, 1.57 ) }
    dend_15 { pt3dadd( -26.3691, -206.888, -46.9059, 0.6 ) }
    dend_15 { pt3dadd( -26.6678, -210.118, -46.4767, 1.81 ) }
    dend_15 { pt3dadd( -27.2513, -215.495, -45.7236, 0.12 ) }
    dend_15 { pt3dadd( -27.6066, -218.218, -45.3268, 1.57 ) }
    dend_15 { pt3dadd( -28.1294, -221.476, -44.8744, 0.12 ) }
    dend_15 { pt3dadd( -28.4339, -222.973, -44.6196, 0.12 ) }
    dend_15 { pt3dadd( -28.7354, -224.362, -44.3781, 1.81 ) }
    dend_15 { pt3dadd( -29.7057, -229.383, -43.7379, 0.48 ) }
    dend_15 { pt3dadd( -30.1119, -231.879, -43.5729, 1.93 ) }
    dend_15 { pt3dadd( -30.5462, -234.501, -43.4746, 0.48 ) }
    dend_15 { pt3dadd( -31.1985, -238.328, -43.3453, 1.2 ) }
    dend_15 { pt3dadd( -31.3046, -238.957, -43.3382, 2.05 ) }
    dend_15 { pt3dadd( -32.1103, -243.41, -43.3824, 0.36 ) }
    dend_15 { pt3dadd( -32.3718, -244.686, -43.4247, 0.36 ) }
    dend_15 { pt3dadd( -32.6534, -245.941, -43.4644, 0.36 ) }
    dend_15 { pt3dadd( -33.2859, -248.799, -43.6607, 1.81 ) }
    dend_15 { pt3dadd( -33.9033, -251.742, -44.0199, 0.6 ) }
    dend_15 { pt3dadd( -34.2434, -253.168, -44.1327, 1.93 ) }
    dend_15 { pt3dadd( -34.8099, -255.117, -44.0753, 0.48 ) }
    dend_15 { pt3dadd( -35.9474, -259.162, -43.9389, 2.17 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.793, -77.6226, 24.3246, 0.84 ) }
    dend_4 { pt3dadd( -12.5441, -79.3643, 24.2386, 0.84 ) }
    dend_4 { pt3dadd( -13.8167, -81.1475, 24.2834, 0.84 ) }
    dend_4 { pt3dadd( -15.6458, -82.6986, 24.4186, 0.84 ) }
    dend_4 { pt3dadd( -16.3598, -83.3041, 24.4714, 0.96 ) }
    dend_4 { pt3dadd( -17.5469, -84.3109, 24.5591, 0.6 ) }
    dend_4 { pt3dadd( -19.1269, -85.6508, 24.6759, 0.6 ) }
    dend_4 { pt3dadd( -20.9863, -86.5901, 24.8442, 0.48 ) }
    dend_4 { pt3dadd( -23.3416, -87.182, 25.0933, 0.72 ) }
    dend_4 { pt3dadd( -30.7786, -92.2889, 24.2791, 0.72 ) }
    dend_4 { pt3dadd( -37.3061, -98.2389, 22.5299, 0.72 ) }
    dend_4 { pt3dadd( -44.6095, -103.572, 22.4037, 0.72 ) }
    dend_4 { pt3dadd( -52.354, -108.3, 22.0716, 0.72 ) }
    dend_4 { pt3dadd( -60.7107, -111.964, 22.3662, 0.72 ) }
    dend_4 { pt3dadd( -68.7, -116.284, 21.7959, 0.72 ) }
    dend_4 { pt3dadd( -75.6573, -121.956, 22.702, 0.72 ) }
    dend_4 { pt3dadd( -82.9455, -127.308, 22.7899, 0.72 ) }
    dend_4 { pt3dadd( -90.2981, -132.501, 21.8198, 0.72 ) }
    dend_4 { pt3dadd( -97.9578, -137.209, 20.544, 0.72 ) }
    dend_4 { pt3dadd( -104.15, -143.229, 18.0196, 0.72 ) }
    dend_4 { pt3dadd( -111.042, -148.86, 16.5144, 0.72 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.793, -77.6226, 24.3246, 0.96 ) }
    dend_3 { pt3dadd( -13.7403, -82.6494, 22.0533, 0.96 ) }
    dend_3 { pt3dadd( -15.91, -88.4343, 19.905, 0.84 ) }
    dend_3 { pt3dadd( -16.9071, -91.0191, 19.0328, 0.84 ) }
    dend_3 { pt3dadd( -17.663, -92.8587, 18.3539, 0.72 ) }
    dend_3 { pt3dadd( -18.955, -95.9072, 17.1971, 0.72 ) }
    dend_3 { pt3dadd( -19.7352, -97.7548, 16.5141, 0.96 ) }
    dend_3 { pt3dadd( -20.774, -100.239, 15.6938, 0.84 ) }
    dend_3 { pt3dadd( -22.3929, -103.909, 14.5371, 0.72 ) }
    dend_3 { pt3dadd( -24.7451, -108.809, 12.8901, 0.96 ) }
    dend_3 { pt3dadd( -26.2734, -111.806, 11.8197, 0.72 ) }
    dend_3 { pt3dadd( -27.6531, -114.408, 10.8446, 0.6 ) }
    dend_3 { pt3dadd( -29.0807, -117.093, 9.87204, 0.6 ) }
    dend_3 { pt3dadd( -30.3142, -119.359, 9.0675, 0.6 ) }
    dend_3 { pt3dadd( -32.0395, -122.441, 8.05739, 0.72 ) }
    dend_3 { pt3dadd( -33.5956, -124.979, 7.10763, 0.6 ) }
    dend_3 { pt3dadd( -35.3914, -127.503, 5.86055, 1.08 ) }
    dend_3 { pt3dadd( -37.297, -129.841, 4.46411, 0.84 ) }
    dend_3 { pt3dadd( -39.1818, -131.899, 3.0366, 0.84 ) }
    dend_3 { pt3dadd( -41.6967, -134.337, 1.12954, 0.72 ) }
    dend_3 { pt3dadd( -45.1161, -137.391, -1.69959, 0.72 ) }
    dend_3 { pt3dadd( -47.2951, -139.122, -3.49528, 0.6 ) }
    dend_3 { pt3dadd( -49.0961, -140.4, -4.95856, 0.6 ) }
    dend_3 { pt3dadd( -52.0318, -142.371, -7.22276, 3.01 ) }
    dend_3 { pt3dadd( -54.0279, -143.815, -8.76035, 0.84 ) }
    dend_3 { pt3dadd( -57.3479, -146.403, -11.1584, 0.6 ) }
    dend_3 { pt3dadd( -58.7808, -147.616, -12.1602, 0.96 ) }
    dend_3 { pt3dadd( -59.8681, -148.542, -12.9355, 0.36 ) }
    dend_3 { pt3dadd( -61.7991, -150.125, -14.333, 2.53 ) }
    dend_3 { pt3dadd( -65.3023, -152.911, -16.7639, 0.6 ) }
    dend_3 { pt3dadd( -66.5322, -153.856, -17.8223, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( -69.9315, -156.396, -21.3405, 0.48 ) }
    dend_3 { pt3dadd( -71.1538, -157.328, -22.8261, 0.48 ) }
    dend_3 { pt3dadd( -72.143, -158.076, -24.2389, 0.48 ) }
    dend_3 { pt3dadd( -72.5736, -158.4, -25.0002, 2.65 ) }
    dend_3 { pt3dadd( -76.9322, -161.687, -32.9379, 0.24 ) }
    dend_3 { pt3dadd( -78.7982, -163.16, -36.5452, 0.24 ) }
    dend_3 { pt3dadd( -79.4787, -163.729, -37.9155, 2.05 ) }
    dend_3 { pt3dadd( -81.9716, -165.838, -43.0844, 0.36 ) }
    dend_3 { pt3dadd( -85.1604, -168.452, -49.3513, 2.05 ) }
    dend_3 { pt3dadd( -86.9579, -169.887, -52.4554, 0.36 ) }
    dend_3 { pt3dadd( -88.0833, -170.794, -54.0317, 1.45 ) }
    dend_3 { pt3dadd( -90.6983, -172.921, -57.1745, 0.12 ) }
    dend_3 { pt3dadd( -92.337, -174.286, -59.0334, 1.93 ) }
    dend_3 { pt3dadd( -94.7556, -176.35, -61.4194, 0.12 ) }
    dend_3 { pt3dadd( -96.7046, -178.143, -63.3094, 1.69 ) }
    dend_3 { pt3dadd( -101.16, -182.545, -67.9367, 0.24 ) }
    dend_3 { pt3dadd( -102.042, -183.484, -68.8956, 1.45 ) }
    dend_3 { pt3dadd( -105.537, -187.473, -73.2672, 0.6 ) }
    dend_3 { pt3dadd( -106.227, -188.299, -74.213, 1.57 ) }
    dend_3 { pt3dadd( -108.788, -191.565, -78.1093, 0.12 ) }
    dend_3 { pt3dadd( -109.499, -192.504, -79.2731, 1.33 ) }
    dend_3 { pt3dadd( -112.027, -195.831, -82.8327, 0.6 ) }
    dend_3 { pt3dadd( -115.291, -200.092, -86.7498, 0.12 ) }
    dend_3 { pt3dadd( -116.359, -201.455, -87.803, 2.05 ) }
    dend_3 { pt3dadd( -119.316, -205.248, -90.4512, 0.24 ) }
    dend_3 { pt3dadd( -121.327, -207.93, -91.9118, 1.81 ) }
    dend_3 { pt3dadd( -125.054, -213.154, -94.224, 0.12 ) }
    dend_3 { pt3dadd( -126.367, -215.019, -94.7733, 1.81 ) }
    dend_3 { pt3dadd( -129.519, -219.585, -95.6385, 0.12 ) }
    dend_3 { pt3dadd( -130.439, -220.911, -95.8758, 1.81 ) }
    dend_3 { pt3dadd( -132.427, -223.736, -96.2149, 0.12 ) }
    dend_3 { pt3dadd( -133.211, -224.832, -96.4854, 2.05 ) }
    dend_3 { pt3dadd( -134.572, -226.66, -97.356, 0.36 ) }
    dend_3 { pt3dadd( -135.287, -227.561, -97.8615, 0.48 ) }
    dend_3 { pt3dadd( -136.507, -229.044, -98.9099, 0.24 ) }
    dend_3 { pt3dadd( -137.074, -229.702, -99.4614, 0.84 ) }
    dend_3 { pt3dadd( -140.791, -233.913, -103.41, 0.36 ) }
    dend_3 { pt3dadd( -141.868, -235.183, -104.602, 1.2 ) }
    dend_3 { pt3dadd( -143.69, -237.498, -106.694, 0.12 ) }
    dend_3 { pt3dadd( -145.769, -240.235, -109.206, 0.12 ) }
    dend_3 { pt3dadd( -146.869, -241.75, -110.513, 0.12 ) }
    dend_3 { pt3dadd( -147.382, -242.454, -111.074, 1.45 ) }
    dend_3 { pt3dadd( -148.178, -243.531, -111.728, 0.24 ) }
    dend_3 { pt3dadd( -148.986, -244.59, -112.457, 0.24 ) }
    dend_3 { pt3dadd( -150.382, -246.208, -113.596, 1.45 ) }
    dend_3 { pt3dadd( -152.058, -247.987, -114.958, 0.48 ) }
    dend_3 { pt3dadd( -153.825, -249.758, -116.407, 1.57 ) }
    dend_3 { pt3dadd( -156.721, -252.606, -118.793, 0.12 ) }
    dend_3 { pt3dadd( -159.817, -255.633, -121.257, 1.93 ) }
    dend_3 { pt3dadd( -161.726, -257.502, -122.765, 0.12 ) }
    dend_3 { pt3dadd( -164.269, -260.124, -124.674, 2.29 ) }
    dend_3 { pt3dadd( -165.983, -262.049, -125.945, 0.12 ) }
    dend_3 { pt3dadd( -166.78, -263.049, -126.558, 0.72 ) }
    dend_3 { pt3dadd( -168.248, -265.116, -127.753, 0.12 ) }
    dend_3 { pt3dadd( -169.951, -267.949, -129.17, 1.2 ) }
    dend_3 { pt3dadd( -171.349, -270.723, -130.513, 0.48 ) }
    dend_3 { pt3dadd( -172.482, -273.291, -131.653, 0.12 ) }
    dend_3 { pt3dadd( -173.917, -276.807, -133.395, 0.48 ) }
    dend_3 { pt3dadd( -174.384, -277.935, -133.976, 1.45 ) }
    dend_3 { pt3dadd( -175.4, -280.361, -135.233, 0.24 ) }
    dend_3 { pt3dadd( -176.056, -281.837, -136.076, 0.24 ) }
    dend_3 { pt3dadd( -176.6, -282.957, -136.8, 0.6 ) }
    dend_3 { pt3dadd( -178.586, -286.59, -139.221, 0.6 ) }
    dend_3 { pt3dadd( -179.33, -287.894, -140.001, 0.12 ) }
    dend_3 { pt3dadd( -180.554, -289.902, -141.284, 0.12 ) }
    dend_3 { pt3dadd( -183.053, -293.725, -143.753, 0.12 ) }
    dend_3 { pt3dadd( -183.799, -294.827, -144.46, 1.2 ) }
    dend_3 { pt3dadd( -184.826, -296.35, -145.478, 1.2 ) }
    dend_3 { pt3dadd( -186.368, -298.615, -146.922, 0.24 ) }
    dend_3 { pt3dadd( -188.434, -301.721, -148.847, 1.69 ) }
    dend_3 { pt3dadd( -189.436, -303.187, -149.904, 2.05 ) }
    dend_3 { pt3dadd( -191.113, -305.553, -151.794, 0.6 ) }
    dend_3 { pt3dadd( -193.889, -309.455, -155.077, 0.36 ) }
    dend_3 { pt3dadd( -195.257, -311.399, -156.872, 0.12 ) }
    dend_3 { pt3dadd( -196.379, -312.989, -158.454, 0.12 ) }
    dend_3 { pt3dadd( -200.809, -319.287, -165.074, 0.12 ) }
    dend_3 { pt3dadd( -203.377, -322.922, -169.157, 0.24 ) }
    dend_3 { pt3dadd( -205.284, -325.607, -172.27, 0.24 ) }
    dend_3 { pt3dadd( -208.147, -329.624, -177.047, 0.24 ) }
    dend_3 { pt3dadd( -210.121, -332.443, -180.553, 0.24 ) }
    dend_3 { pt3dadd( -212.642, -336.017, -185.124, 0.24 ) }
    dend_3 { pt3dadd( -213.885, -337.896, -187.393, 0.24 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 82/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 3.68045, 216.692, -13.555, 0.6 ) }
    dend_38 { pt3dadd( 5.59601, 225.17, -14.3834, 0.6 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 3.68045, 216.692, -13.555, 0.6 ) }
    dend_37 { pt3dadd( 6.11681, 227.427, -13.1599, 0.6 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 86/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -35.9474, -259.162, -43.9389, 0.36 ) }
    dend_17 { pt3dadd( -38.4644, -263.34, -46.7012, 0.36 ) }
    dend_17 { pt3dadd( -39.885, -265.787, -48.0776, 0.36 ) }
    dend_17 { pt3dadd( -40.5604, -267.504, -48.9939, 0.72 ) }
    dend_17 { pt3dadd( -41.0048, -269.556, -50.0692, 0.36 ) }
    dend_17 { pt3dadd( -41.197, -270.81, -50.7057, 0.12 ) }
    dend_17 { pt3dadd( -41.2015, -271.808, -51.2974, 0.12 ) }
    dend_17 { pt3dadd( -40.9777, -273.6, -52.3432, 0.48 ) }
    dend_17 { pt3dadd( -40.0754, -278.347, -55.3103, 0.12 ) }
    dend_17 { pt3dadd( -39.194, -282.555, -58.027, 0.12 ) }
    dend_17 { pt3dadd( -38.8928, -283.924, -58.8973, 0.6 ) }
    dend_17 { pt3dadd( -37.3801, -291.172, -63.4254, 0.48 ) }
    dend_17 { pt3dadd( -37.0443, -292.728, -64.4223, 0.84 ) }
    dend_17 { pt3dadd( -36.3643, -295.867, -66.4747, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_17 { pt3dadd( -36.0917, -297.503, -67.5191, 0.84 ) }
    dend_17 { pt3dadd( -35.8638, -299.574, -68.7995, 0.24 ) }
    dend_17 { pt3dadd( -35.8275, -300.594, -69.3603, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 3/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -35.9474, -259.162, -43.9389, 0.36 ) }
    dend_16 { pt3dadd( -36.3598, -260.751, -44.2192, 0.36 ) }
    dend_16 { pt3dadd( -36.6065, -261.767, -44.5116, 0.36 ) }
    dend_16 { pt3dadd( -36.9068, -262.905, -44.8666, 0.72 ) }
    dend_16 { pt3dadd( -37.1199, -263.707, -45.1118, 0.48 ) }
    dend_16 { pt3dadd( -37.5814, -265.197, -45.4802, 0.84 ) }
    dend_16 { pt3dadd( -38.1743, -266.964, -45.8379, 0.48 ) }
    dend_16 { pt3dadd( -38.7159, -268.368, -45.956, 1.08 ) }
    dend_16 { pt3dadd( -39.1059, -269.352, -45.9281, 0.36 ) }
    dend_16 { pt3dadd( -39.5142, -270.364, -45.8012, 1.2 ) }
    dend_16 { pt3dadd( -40.2061, -272.139, -45.4252, 0.24 ) }
    dend_16 { pt3dadd( -40.5725, -273.239, -45.1473, 1.57 ) }
    dend_16 { pt3dadd( -41.2649, -275.698, -44.4359, 0.6 ) }
    dend_16 { pt3dadd( -41.5331, -276.881, -44.1144, 1.45 ) }
    dend_16 { pt3dadd( -41.7044, -277.783, -43.927, 0.24 ) }
    dend_16 { pt3dadd( -41.9567, -279.238, -43.7355, 1.33 ) }
    dend_16 { pt3dadd( -42.3733, -281.82, -43.6313, 0.48 ) }
    dend_16 { pt3dadd( -42.5792, -282.824, -43.6275, 1.33 ) }
    dend_16 { pt3dadd( -42.9246, -284.288, -43.7313, 0.12 ) }
    dend_16 { pt3dadd( -43.3154, -285.665, -43.8492, 0.12 ) }
    dend_16 { pt3dadd( -43.7258, -286.809, -43.9318, 1.33 ) }
    dend_16 { pt3dadd( -44.469, -288.278, -43.9544, 0.12 ) }
    dend_16 { pt3dadd( -45.4363, -289.715, -43.8496, 1.45 ) }
    dend_16 { pt3dadd( -46.4678, -291.085, -43.729, 0.24 ) }
    dend_16 { pt3dadd( -47.0133, -291.755, -43.6044, 0.24 ) }
    dend_16 { pt3dadd( -48.2097, -293.226, -43.2268, 1.33 ) }
    dend_16 { pt3dadd( -49.804, -295.251, -42.5594, 0.24 ) }
    dend_16 { pt3dadd( -50.7558, -296.501, -42.0851, 1.33 ) }
    dend_16 { pt3dadd( -51.9386, -297.946, -41.4161, 0.48 ) }
    dend_16 { pt3dadd( -53.3593, -299.587, -40.4967, 0.36 ) }
    dend_16 { pt3dadd( -54.4059, -300.809, -39.6302, 1.57 ) }
    dend_16 { pt3dadd( -55.0759, -301.522, -38.9143, 0.6 ) }
    dend_16 { pt3dadd( -55.5458, -302.019, -38.3175, 0.6 ) }
    dend_16 { pt3dadd( -57.2641, -303.704, -35.9462, 1.2 ) }
    dend_16 { pt3dadd( -57.6845, -304.087, -35.3582, 0.36 ) }
    dend_16 { pt3dadd( -59.7055, -305.903, -32.5657, 1.69 ) }
    dend_16 { pt3dadd( -61.9773, -307.967, -29.4207, 0.48 ) }
    dend_16 { pt3dadd( -62.698, -308.668, -28.4065, 0.48 ) }
    dend_16 { pt3dadd( -63.7175, -309.817, -26.8481, 0.36 ) }
    dend_16 { pt3dadd( -64.1209, -310.428, -26.1028, 0.36 ) }
    dend_16 { pt3dadd( -64.3912, -310.943, -25.5228, 0.12 ) }
    dend_16 { pt3dadd( -64.6319, -312.018, -24.5684, 0.6 ) }
    dend_16 { pt3dadd( -64.2437, -314.283, -22.8545, 0.6 ) }
    dend_16 { pt3dadd( -63.909, -314.855, -22.4243, 0.48 ) }
    dend_16 { pt3dadd( -62.7197, -315.648, -21.8738, 0.36 ) }
    dend_16 { pt3dadd( -61.044, -316.179, -21.4624, 0.12 ) }
    dend_16 { pt3dadd( -59.7888, -316.339, -21.2841, 0.12 ) }
    dend_16 { pt3dadd( -58.9117, -316.315, -21.0664, 0.6 ) }
    dend_16 { pt3dadd( -56.2149, -315.917, -20.0018, 0.6 ) }
    dend_16 { pt3dadd( -55.2556, -315.695, -19.3858, 0.24 ) }
    dend_16 { pt3dadd( -54.5354, -315.477, -18.6383, 0.24 ) }
    dend_16 { pt3dadd( -53.632, -315.146, -17.4268, 0.24 ) }
    dend_16 { pt3dadd( -51.2911, -314.111, -13.537, 0.24 ) }
    dend_16 { pt3dadd( -50.4363, -313.691, -11.7195, 0.24 ) }
    dend_16 { pt3dadd( -50.1835, -313.553, -11.0088, 0.84 ) }
    dend_16 { pt3dadd( -49.6317, -313.265, -9.12582, 0.84 ) }
    dend_16 { pt3dadd( -50.4565, -318.279, -5.0028, 0.84 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_28 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_35 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_16 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_12 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_42 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_41 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, axon_0, axon_0, dend_42, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_41 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 19
    dend_39 nseg = 13
    dend_25 nseg = 15
    dend_28 nseg = 3
    dend_11 nseg = 17
    dend_8 nseg = 21
    dend_6 nseg = 5
    dend_35 nseg = 3
    dend_32 nseg = 17
    dend_30 nseg = 7
    dend_24 nseg = 13
    dend_23 nseg = 7
    dend_19 nseg = 13
    dend_14 nseg = 9
    dend_5 nseg = 11
    dend_36 nseg = 7
    dend_18 nseg = 9
    dend_15 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 21
    dend_17 nseg = 3
    dend_16 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_LBC_a08d7d7c5e_0_0


