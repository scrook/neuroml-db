// Cell: bAC217_L5_NBC_768f1bf7ac_0_0
/*
{
  "id" : "bAC217_L5_NBC_768f1bf7ac_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "3.82702, -11.9208, 0.0, 3.744", "3.40576, -10.7308, 0.0, 6.66423", "2.9845, -9.54079, 0.0, 10.7621", "2.56323, -8.35078, 0.0, 12.5635", "2.14197, -7.16077, 0.0, 13.9114", "1.72071, -5.97076, 0.0, 14.8426", "1.29944, -4.78075, 0.0, 15.7513", "0.878178, -3.59074, 0.0, 16.4111", "0.456915, -2.40072, 0.0, 17.0427", "0.0356512, -1.21071, 0.0, 17.656", "-0.385612, -0.0207042, 0.0, 17.803", "-0.806876, 1.16931, 0.0, 17.8623", "-1.22814, 2.35932, 0.0, 17.7834", "-1.6494, 3.54933, 0.0, 17.4667", "-2.07067, 4.73934, 0.0, 17.0149", "-2.49193, 5.92935, 0.0, 16.3823", "-2.91319, 7.11936, 0.0, 15.6225", "-3.33446, 8.30937, 0.0, 13.9243", "-3.75572, 9.49938, 0.0, 11.9305", "-4.17698, 10.6894, 0.0, 9.23702", "-4.59825, 11.8794, 0.0, 5.12736" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.70995, 7.45705, -10.13, 1.36", "-3.42711, 7.2429, -12.9442, 1.36", "-3.37983, 5.76655, -15.3315, 1.36", "-3.03049, 4.39809, -16.9841, 1.13", "-2.3488, 2.3722, -19.0443, 1.13", "-1.57604, 0.033905, -21.2051, 1.13", "-0.715651, -2.75251, -23.7207, 1.59", "0.70661, -7.40976, -27.5404, 0.91", "1.29186, -9.18528, -28.8583, 0.91", "1.96013, -10.8421, -29.9806, 0.91", "2.73598, -12.1066, -30.6968, 0.91", "1.38185, -11.9788, -31.0336, 0.91", "-2.91129, -12.0046, -32.3744, 1.81", "-7.11105, -11.8136, -33.4166, 0.91", "-10.4571, -11.4394, -33.9716, 0.91", "-7.47289, -11.5766, -34.5982, 0.91", "-5.34883, -11.4513, -35.9759, 0.91", "-1.99345, -11.4755, -38.1873, 2.27", "3.16509, -11.983, -41.312, 1.13", "6.09751, -12.4834, -43.0652, 0.68", "8.76704, -13.0081, -44.618, 0.68", "11.6818, -13.7273, -46.3692, 2.27", "15.057, -15.3813, -48.8394, 1.59", "16.6155, -17.0737, -50.2075, 1.13", "18.3013, -19.762, -51.67, 1.13", "19.6267, -22.0228, -52.802, 1.13", "20.8141, -24.5216, -54.14, 0.91", "21.7901, -27.3546, -56.0525, 1.59", "22.1875, -29.7613, -58.0686, 1.59", "22.2312, -31.9768, -60.1596, 1.59", "22.3413, -34.2494, -62.5, 1.59", "22.6417, -36.3055, -64.9315, 1.59", "23.2853, -38.6048, -68.1036, 1.59", "24.0087, -40.6544, -70.8421, 1.36", "24.551, -41.9793, -72.5047, 1.36", "25.5552, -44.3817, -75.2352, 1.36", "26.5359, -46.2641, -77.2785, 2.27", "28.0305, -48.7509, -79.8227, 2.27", "28.629, -51.2713, -82.1345, 0.68", "28.9858, -52.4765, -83.2982, 0.68", "27.5148, -54.5454, -85.1882, 0.68", "25.4411, -56.375, -86.7942, 2.04", "23.2113, -58.064, -88.26, 2.04", "19.448, -60.4058, -90.294, 1.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.79005, -10.003, 1.96, 3.18", "6.85434, -10.8059, 1.96, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.01995, -11.383, 2.37, 0.91", "-3.25355, -12.9089, 2.44522, 0.68", "-3.46483, -14.1432, 2.41015, 0.91", "-3.86159, -16.8954, 2.11673, 0.23", "-4.0906, -19.0283, 1.85942, 0.23", "-4.31947, -21.8375, 1.51253, 1.13", "-4.53241, -24.4009, 1.18952, 1.13", "-4.83406, -27.6643, 0.774865, 2.04", "-5.0889, -30.0715, 0.490231, 0.23", "-5.3323, -31.7444, 0.304463, 0.23", "-5.63608, -33.238, 0.202085, 0.23", "-5.97618, -34.7162, 0.194453, 0.23", "-6.40059, -36.2948, 0.272956, 1.81", "-7.13841, -38.3663, 0.490073, 2.72", "-7.9637, -40.2964, 0.68363, 1.59", "-8.8727, -42.1696, 0.767617, 0.23", "-9.22893, -42.8661, 0.781987, 1.36", "-10.264, -44.8748, 0.764364, 0.45", "-10.8694, -46.0673, 0.746065, 1.36", "-11.7658, -47.9427, 0.751118, 3.18", "-12.5629, -49.6625, 0.775717, 3.63", "-13.3287, -51.3687, 0.810616, 3.63", "-14.564, -54.3528, 0.92715, 1.81", "-15.5892, -57.085, 1.03075, 0.91", "-16.7014, -60.2969, 1.09526, 3.4", "-17.7861, -63.6387, 1.09658, 1.81", "-18.2163, -65.1042, 1.06924, 0.23", "-18.6105, -66.5687, 1.04389, 0.23", "-19.1772, -68.8791, 1.01635, 2.27", "-19.7173, -71.1581, 0.989352, 1.13", "-20.1853, -73.4582, 0.976839, 2.95", "-20.449, -75.5922, 1.01036, 0.91", "-20.6515, -77.7019, 1.12896, 0.23", "-20.7267, -78.9116, 1.24677, 0.23", "-20.6514, -81.0723, 1.59491, 2.27", "-20.4046, -82.8239, 1.92272, 2.5", "-19.9221, -84.9267, 2.34497, 0.45", "-19.447, -86.5917, 2.664, 0.23", "-19.2772, -87.1313, 2.74752, 0.23", "-18.8666, -88.2072, 2.96067, 0.23", "-18.4902, -89.0558, 3.16662, 0.23", "-18.1322, -89.9111, 3.36551, 2.5", "-17.7476, -91.0567, 3.51629, 3.18", "-17.1301, -93.7857, 3.60663, 0.23", "-16.887, -95.916, 3.57291, 0.23", "-16.869, -96.701, 3.53207, 0.23", "-16.9085, -98.1098, 3.42988, 0.23", "-17.0401, -100.468, 3.21399, 2.27", "-17.1897, -102.642, 2.9986, 0.23", "-17.3184, -104.164, 2.81837, 0.23", "-17.5512, -106.272, 2.55479, 2.95", "-17.7108, -107.494, 2.41783, 2.95", "-18.0344, -109.964, 2.21675, 0.23", "-18.2616, -111.8, 2.10862, 1.36", "-18.5624, -113.76, 1.98043, 0.45", "-18.8209, -115.25, 1.85489, 0.45", "-19.15, -117.305, 1.66936, 1.81", "-19.4133, -119.181, 1.50499, 0.68", "-19.6258, -120.692, 1.42361, 0.23", "-19.8393, -122.369, 1.38272, 2.5", "-20.2665, -125.578, 1.42142, 0.23", "-20.4472, -127.147, 1.42978, 0.45", "-20.5401, -127.797, 1.4087, 0.23", "-21.0372, -129.999, 1.24869, 2.04", "-21.2635, -130.737, 1.17156, 2.04", "-22.5288, -133.824, 0.680909, 0.23", "-23.3452, -135.432, 0.36077, 2.04", "-24.424, -137.653, -0.165027, 0.23", "-24.9412, -138.847, -0.47496, 0.23", "-25.2514, -139.705, -0.741417, 2.04", "-26.0861, -142.274, -1.55487, 0.23", "-26.3459, -143.15, -1.81818, 1.13", "-27.0365, -145.452, -2.42733, 0.23", "-27.7027, -147.624, -3.01479, 2.04", "-28.5096, -150.066, -3.69781, 0.23", "-29.0147, -151.494, -4.09587, 1.81", "-30.1717, -154.586, -4.8545, 0.23", "-30.7237, -155.861, -5.13455, 1.13", "-31.6687, -157.744, -5.53471, 0.23", "-32.3796, -159.113, -5.8077, 0.23", "-32.8112, -159.915, -5.92534, 0.23", "-33.5312, -161.269, -6.11587, 0.91", "-34.7667, -163.524, -6.36681, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.83995, -11.053, 1.13, 1.59", "-1.92845, -11.527, 1.16482, 1.59", "-2.16234, -12.3221, 1.25842, 0.68", "-2.35571, -12.759, 1.33186, 0.91", "-2.60038, -13.1721, 1.38818, 0.91", "-3.24368, -14.2221, 1.49465, 1.59", "-4.13043, -15.6829, 1.58815, 2.27", "-4.55429, -16.3641, 1.61317, 2.72", "-5.17389, -17.3808, 1.62243, 2.72", "-5.86668, -18.6672, 1.57615, 1.81", "-6.54689, -20.3134, 1.4139, 0.68", "-6.67087, -21.0196, 1.28163, 0.68", "-6.62433, -21.6992, 1.11204, 0.68", "-6.43158, -22.4824, 0.91148, 0.68", "-6.09677, -23.3973, 0.678037, 2.27", "-5.6311, -24.3622, 0.43557, 2.27", "-4.91805, -25.6319, 0.100396, 1.13", "-4.18897, -26.8723, -0.215508, 2.72", "-3.29386, -28.3685, -0.57488, 0.23", "-2.98638, -28.8893, -0.693205, 0.23", "-2.5252, -29.6469, -0.885923, 1.13", "-2.29843, -29.9807, -0.984876, 1.13", "-1.7323, -30.7042, -1.23766, 0.23", "-0.950078, -31.6297, -1.59341, 2.04", "-0.34757, -32.3095, -1.87075, 2.72", "0.821375, -33.5925, -2.44854, 0.23", "1.39793, -34.2193, -2.74864, 1.81", "2.14675, -35.0019, -3.15014, 1.81", "3.23463, -36.0757, -3.74637, 0.68", "3.76636, -36.5676, -4.04013, 1.59", "4.52493, -37.2365, -4.38436, 0.45", "5.03558, -37.6855, -4.56575, 0.91", "5.6859, -38.2686, -4.79203, 0.23", "6.19858, -38.7184, -4.96575, 1.81", "6.93902, -39.3706, -5.20814, 1.81", "8.23856, -40.5794, -5.62826, 0.68", "8.75798, -41.0961, -5.79311, 2.04", "9.83987, -42.2205, -6.1645, 0.23", "10.455, -42.8769, -6.39113, 2.04", "10.8429, -43.3061, -6.55698, 2.04", "11.9781, -44.6245, -7.06504, 0.23", "12.7355, -45.5317, -7.42378, 1.81", "13.6546, -46.6729, -7.81375, 0.23", "14.0122, -47.1448, -7.94522, 0.91", "14.6246, -47.9774, -8.18282, 0.23", "15.2969, -48.9177, -8.45727, 2.04", "16.0058, -49.979, -8.76487, 0.23", "16.611, -50.9263, -9.05081, 1.13", "16.9633, -51.558, -9.23402, 0.23", "17.4408, -52.5393, -9.50398, 1.36", "17.7248, -53.2074, -9.67614, 1.81", "18.3023, -54.7386, -10.0862, 0.23", "18.5923, -55.5159, -10.2844, 1.13", "19.0718, -56.6735, -10.5794, 0.23", "19.3391, -57.2362, -10.7296, 1.81", "20.0882, -58.5701, -11.1376, 0.23", "20.7702, -59.5994, -11.5154, 2.04", "21.5578, -60.5701, -11.9432, 0.23", "22.2259, -61.2816, -12.2735, 0.23", "22.7968, -61.8048, -12.5393, 1.81", "24.1167, -62.8891, -13.1014, 0.23", "24.5914, -63.2406, -13.277, 1.13", "25.8569, -64.1305, -13.6886, 0.23", "26.7461, -64.782, -13.9793, 0.45", "27.2945, -65.1923, -14.1715, 0.23", "27.9977, -65.7081, -14.4257, 2.04", "29.6701, -66.8699, -15.0428, 0.23", "30.4096, -67.3886, -15.3413, 1.81", "31.9246, -68.446, -16.0104, 0.23", "32.7629, -69.0359, -16.4185, 1.36", "33.3833, -69.482, -16.7398, 1.36", "34.2124, -70.0966, -17.2141, 0.23", "35.1836, -70.8315, -17.8182, 0.23", "35.8384, -71.3312, -18.2014, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.32994, -10.703, 5.39, 1.13", "-3.08265, -10.4322, 5.84152, 0.68", "-4.2327, -9.97845, 6.7442, 0.68", "-4.71245, -9.7732, 7.36578, 0.68", "-5.37711, -9.51145, 8.64627, 0.68", "-5.59908, -9.46025, 9.50871, 2.5", "-5.93438, -9.5556, 11.5848, 2.5", "-5.75857, -10.1456, 13.052, 0.91", "-4.81142, -12.4567, 15.1172, 2.5", "-4.07454, -14.388, 16.251, 0.68", "-3.9998, -14.6306, 16.3554, 1.13", "-3.64013, -16.0421, 16.7905, 0.23", "-2.82222, -19.1891, 17.4449, 3.63", "-2.14883, -21.8304, 17.745, 0.23", "-1.99286, -22.5034, 17.8018, 1.13", "-1.49248, -24.1708, 17.9836, 0.23", "-0.789986, -25.6453, 18.1429, 0.45", "0.147513, -27.0839, 18.2779, 2.72", "1.25814, -28.0952, 18.3669, 1.59", "3.2448, -29.156, 18.5186, 2.5", "4.20911, -29.4614, 18.6156, 2.5", "5.5787, -29.6177, 18.7765, 2.5", "8.19827, -37.9661, 22.3824, 2.5", "9.63747, -47.1934, 23.9139, 2.5", "9.70959, -56.0876, 27.1462, 2.5", "10.9014, -65.0448, 29.9585, 2.5", "13.087, -73.7046, 33.0876, 2.5", "13.7882, -81.9001, 37.7676, 2.5", "15.2137, -89.9359, 42.5586, 2.5", "16.0641, -98.2943, 46.9146, 2.5", "18.6439, -106.452, 50.9588, 2.5", "22.2534, -114.261, 54.9027, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.70995, 9.17704, -10.6, 2.5", "-2.68963, 11.6727, -9.56423, 2.5", "-2.77156, 14.7405, -8.39032, 2.04", "-2.90197, 17.3623, -7.44203, 1.81", "-3.06048, 20.5491, -6.28938, 1.81", "-3.21084, 23.572, -5.19602, 2.5", "-3.39897, 27.3543, -3.82797, 2.5", "-3.52307, 29.2346, -3.20794, 2.5", "-3.70413, 31.5639, -2.45015, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.68996, 7.48704, 1.94, 1.36", "-8.84306, 8.12621, 1.30542, 1.13", "-10.3648, 8.96187, 0.64382, 0.68", "-12.0259, 9.88862, 0.00229664, 1.36", "-13.3494, 10.6711, -0.464295, 2.04", "-14.3866, 11.2937, -0.777482, 2.5", "-15.4797, 11.9952, -1.07143, 2.5", "-17.3904, 13.3594, -1.41747, 1.81", "-18.4801, 14.2255, -1.51747, 1.13", "-19.3863, 15.0804, -1.5317, 1.59", "-21.0697, 17.0123, -1.52711, 0.91", "-22.0521, 18.4298, -1.5508, 0.68", "-22.8285, 19.8554, -1.63765, 0.68", "-23.0874, 20.4784, -1.69698, 1.81", "-23.6382, 22.0338, -1.88301, 2.5", "-24.2405, 23.6936, -2.14364, 2.5", "-25.0824, 25.8303, -2.56155, 0.91", "-25.5714, 26.7627, -2.75403, 1.59", "-26.183, 27.7099, -2.94244, 0.68", "-26.6793, 28.3731, -3.03446, 0.68", "-28.1454, 29.9191, -3.13627, 1.13", "-29.2822, 30.8988, -3.15054, 0.23", "-30.4871, 31.8401, -3.07081, 2.27", "-31.7725, 32.8782, -2.93252, 3.18", "-33.3206, 34.1914, -2.75775, 1.81", "-35.1249, 35.8595, -2.55572, 0.45", "-36.0068, 36.768, -2.45776, 0.45", "-37.4366, 38.281, -2.32357, 1.59", "-38.3834, 39.2558, -2.27181, 0.45", "-39.0641, 39.8835, -2.26155, 0.45", "-40.5685, 41.1817, -2.29044, 2.04", "-40.7727, 41.3442, -2.3009, 3.18", "-41.8646, 42.1026, -2.37834, 2.72", "-44.0111, 43.305, -2.63183, 0.23", "-45.5169, 43.9744, -2.7929, 0.91", "-46.1081, 44.1921, -2.86489, 2.04", "-48.35, 44.8571, -3.24346, 0.23", "-49.1958, 45.0806, -3.41053, 1.59", "-50.6663, 45.4061, -3.73299, 2.04", "-52.4918, 45.7464, -4.14681, 0.23", "-54.3636, 46.0601, -4.65255, 0.23", "-55.8115, 46.2936, -5.13374, 0.23", "-56.5613, 46.4352, -5.45395, 1.81", "-57.8522, 46.7606, -6.10693, 2.95", "-59.2254, 47.2846, -6.97984, 1.59", "-60.9551, 48.2032, -8.27656, 0.45", "-61.8333, 48.8947, -9.03645, 0.45", "-63.1156, 50.2379, -10.2618, 2.27", "-63.3997, 50.583, -10.5494, 2.72", "-64.2242, 51.6059, -11.357, 0.45", "-65.2078, 52.7168, -12.1812, 1.13", "-66.5409, 53.9933, -13.0861, 0.23", "-67.669, 54.9439, -13.7976, 2.04", "-68.8182, 55.7987, -14.4576, 2.04", "-70.6255, 57.1173, -15.4528, 0.23", "-71.5686, 57.7929, -15.9654, 0.23", "-72.5418, 58.4368, -16.4936, 0.23", "-73.6536, 59.0336, -17.0587, 0.23", "-74.3862, 59.4131, -17.4311, 0.23", "-75.461, 59.9824, -17.9873, 0.23", "-77.1883, 60.9656, -18.8797, 2.04", "-78.6115, 61.7592, -19.6147, 0.23", "-80.2837, 62.5511, -20.3772, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998035292246,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-4.59825, 11.8794, 0.0, 0.581371", "-9.60386, 26.0196, 0.0, 0.581371", "-14.6095, 40.1597, 0.0, 0.581371" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.448, -60.4058, -90.294, 1.13", "21.1651, -60.5629, -91.2937, 1.13", "22.9049, -60.8715, -92.3306, 1.81", "24.8768, -61.4989, -93.5831, 0.68", "25.7529, -61.8241, -94.1864, 0.68", "26.5077, -62.0722, -94.7591, 0.68", "27.3329, -62.2953, -95.4616, 0.68", "28.4417, -62.5138, -96.5733, 0.68", "29.3084, -62.6794, -97.6585, 0.68", "30.1822, -62.9373, -99.1892, 1.36", "30.9127, -63.2406, -100.835, 1.36", "31.3158, -63.5904, -102.251, 2.5", "31.3741, -64.3366, -104.316, 0.45", "31.161, -64.8711, -105.285, 0.45", "30.0945, -66.6644, -107.824, 1.13", "29.7124, -67.2513, -108.501, 1.13", "28.702, -68.7524, -109.899, 1.81", "27.3858, -70.7539, -111.405, 0.91", "26.8531, -71.5644, -111.93, 0.91", "26.0291, -73.0363, -112.877, 0.91", "26.0657, -73.3063, -113.279, 0.91", "26.5129, -73.2737, -114.377, 0.91", "26.9446, -73.0411, -115.572, 0.91", "27.1578, -72.8911, -116.384, 0.91", "27.3121, -72.6751, -118.626, 2.04", "27.0508, -72.9024, -122.009, 0.23", "26.9688, -73.0416, -122.891, 0.23", "26.8987, -73.4305, -124.726, 0.23", "26.9188, -73.8881, -126.523, 0.23", "26.9048, -74.2564, -127.808, 0.23", "26.8431, -74.7401, -129.265, 0.23", "26.7467, -75.1541, -130.865, 1.59", "26.6836, -75.3415, -132.533, 1.59", "26.7798, -75.4161, -134.049, 1.59", "26.9289, -75.5088, -136.764, 0.91", "26.8754, -75.5793, -138.063, 0.91", "26.5989, -75.7719, -139.328, 0.91", "25.8249, -76.7447, -141.152, 1.59", "25.1687, -78.3433, -142.644, 0.68", "25.0312, -79.3778, -143.285, 0.68", "25.0017, -80.3196, -143.725, 1.36", "24.8708, -81.7052, -144.316, 0.45", "24.5425, -83.2722, -145.135, 1.36", "23.864, -84.7573, -146.196, 0.45", "23.1057, -85.7606, -147.262, 0.45", "22.4431, -86.6837, -148.453, 2.04", "21.4257, -88.399, -150.635, 0.91", "20.5571, -89.9833, -152.531, 0.91", "20.3079, -90.3469, -152.948, 0.91", "19.8442, -90.9154, -153.556, 0.91", "18.3463, -92.3146, -155.254, 2.5", "17.3027, -93.0917, -156.542, 2.5", "16.5408, -93.2472, -157.325, 2.5", "15.7502, -93.0749, -157.995, 1.59", "14.9027, -92.6807, -158.737, 0.23", "12.6962, -91.143, -160.806, 1.81", "11.6472, -90.1337, -161.907, 0.91", "10.4104, -88.5256, -163.499, 1.81", "9.7351, -87.0255, -165.027, 0.91", "9.69662, -85.8246, -166.296, 0.23", "9.9171, -84.9822, -167.143, 1.13", "10.3879, -83.8235, -168.182, 0.23", "10.8607, -82.4703, -169.337, 2.27", "11.4014, -80.2093, -171.352, 1.13", "11.243, -78.184, -173.352, 0.45", "10.5884, -77.0097, -174.68, 2.27", "9.20406, -75.7013, -176.418, 1.13", "8.03471, -75.0336, -177.537, 1.13", "6.74053, -74.5945, -178.609, 1.13", "5.32655, -74.4164, -179.652, 1.13", "4.14163, -74.624, -180.729, 1.13", "3.42769, -74.9255, -181.619, 1.13", "3.11794, -75.1171, -182.33, 1.13", "3.70431, -73.9313, -183.729, 1.13", "4.25748, -73.1866, -184.492, 1.13", "5.29272, -71.7903, -185.807, 1.13", "5.90942, -70.9277, -186.549, 1.13", "7.21188, -68.89, -188.045, 0.23", "7.77239, -67.868, -188.666, 1.36", "9.08183, -64.8936, -190.076, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "19.448, -60.4058, -90.294, 0.45", "18.1842, -60.7406, -90.0843, 0.45", "17.3277, -61.0347, -90.0922, 0.45", "16.7335, -61.2779, -90.1335, 0.45", "15.1691, -61.9285, -90.2835, 1.13", "12.3133, -63.2355, -90.7334, 0.23", "10.3814, -64.1884, -91.0177, 1.13", "7.66968, -65.5894, -91.4157, 0.45", "6.48295, -66.1947, -91.6006, 1.36", "5.05872, -66.963, -91.8516, 0.23", "3.33667, -68.0744, -92.2719, 0.23", "2.01549, -69.1733, -92.7294, 0.23", "0.427879, -70.6395, -93.2448, 1.13" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "6.85434, -10.8059, 1.96, 1.36", "8.51298, -12.7205, 0.0369142, 1.36", "10.3982, -14.8967, -2.14896, 1.36", "11.3958, -16.0482, -3.30553, 2.27", "12.4819, -17.3019, -4.5648, 2.27" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.85434, -10.8059, 1.96, 0.91", "6.43016, -12.7602, 4.05265, 0.91", "6.58905, -14.7328, 5.99155, 0.91", "6.85185, -16.1196, 7.26116, 0.23", "7.17539, -17.7178, 8.57641, 2.04", "7.49012, -19.6391, 9.97112, 2.95", "7.78596, -22.4451, 11.7943, 0.45", "7.89835, -23.2024, 12.1868, 0.23", "8.02056, -23.9969, 12.4937, 0.23", "8.52293, -26.3117, 13.2788, 2.04", "9.07438, -28.2473, 13.8042, 2.95", "9.58489, -29.9992, 14.2163, 2.95", "10.4781, -33.2218, 14.9258, 0.23", "10.8697, -34.5779, 15.2093, 1.13", "11.8795, -37.4767, 15.7459, 0.23", "13.194, -40.5391, 16.266, 0.23", "14.1404, -42.3132, 16.6004, 0.23", "15.1646, -43.9875, 16.9352, 1.81", "16.6089, -46.2681, 17.4132, 0.23", "17.774, -48.2137, 17.826, 2.04", "18.6181, -49.7976, 18.2058, 2.72", "20.1719, -52.589, 19.0361, 0.23", "20.8379, -53.6458, 19.3784, 0.91", "21.8177, -54.9686, 19.8008, 0.23", "23.1814, -56.5678, 20.3067, 2.95", "26.2976, -59.7879, 21.2778, 0.23", "27.9042, -61.0367, 21.5556, 2.5", "28.8191, -61.5339, 21.6013, 2.5", "32.4302, -62.8719, 21.5104, 0.23", "34.2675, -63.2827, 21.3416, 0.23", "36.965, -63.5477, 20.9069, 2.95", "41.6761, -63.6655, 19.9161, 0.23", "44.5981, -63.6463, 19.2229, 0.23", "46.9243, -63.5622, 18.6504, 0.91", "48.9759, -63.4172, 18.1162, 1.59", "51.3206, -63.3325, 17.499, 0.45", "58.8423, -71.8254, 20.5453, 0.45", "68.3991, -78.0259, 23.4097, 0.45", "77.5374, -85.2553, 24.8971, 0.45", "86.528, -92.8015, 25.3511, 0.45", "94.0088, -101.28, 28.5352, 0.45", "102.332, -108.696, 32.2374, 0.45", "111.024, -115.818, 35.66, 0.45", "119.835, -122.461, 39.6865, 0.45", "129.425, -128.273, 43.1859, 0.45", "140.376, -132.42, 44.1123, 0.45" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.70413, 31.5639, -2.45015, 1.13", "-1.71701, 31.677, -3.67426, 1.13", "1.22827, 32.1063, -5.06582, 0.91", "3.53924, 32.5167, -6.07243, 0.91", "5.46737, 32.8778, -6.83206, 0.91", "7.6758, 33.2549, -7.61913, 1.59", "9.88196, 33.6404, -8.36231, 1.59", "13.4013, 34.2957, -9.38786, 0.68", "15.6408, 34.8648, -9.91312, 0.68", "18.1186, 35.7319, -10.4989, 1.36", "20.5234, 36.8077, -11.0415, 0.45", "21.2361, 37.1666, -11.2043, 0.23", "21.9077, 37.5726, -11.3713, 0.23", "23.6883, 38.9839, -11.8447, 2.04", "24.3494, 39.6893, -12.0001, 2.04", "25.5493, 41.5069, -12.3521, 0.23", "25.7846, 41.923, -12.4218, 0.23", "26.3268, 42.6911, -12.5438, 0.23", "27.2267, 43.7414, -12.7715, 0.23", "28.7331, 45.1048, -13.151, 0.23", "29.8727, 46.048, -13.4504, 1.81", "31.7192, 47.4958, -13.9651, 2.27", "34.1686, 49.4666, -14.8605, 1.13", "35.3646, 50.4718, -15.3694, 0.23", "36.9251, 51.6984, -16.0688, 0.91", "38.0582, 52.4833, -16.5811, 0.23", "39.5072, 53.4402, -17.2299, 2.04", "41.8582, 54.9406, -18.2522, 2.5", "42.8564, 55.5929, -18.6805, 2.5", "45.0559, 57.0117, -19.6097, 0.23", "46.2006, 57.724, -20.0897, 0.23", "47.1652, 58.243, -20.468, 0.23", "49.3137, 59.2402, -21.2658, 2.04", "51.4837, 60.0721, -21.9895, 2.72", "55.1951, 61.2239, -23.2376, 0.23", "56.6015, 61.594, -23.6896, 1.36", "58.3268, 61.9378, -24.1257, 0.23", "59.0508, 62.0492, -24.2563, 0.23", "60.0054, 62.1622, -24.3409, 0.23", "61.7873, 62.3146, -24.3347, 0.91", "63.9377, 62.4874, -24.205, 0.91", "66.4434, 62.6698, -24.0618, 1.81", "67.9637, 62.7252, -23.9918, 1.81", "70.168, 62.8231, -23.8984, 0.68", "71.9397, 62.9162, -23.8328, 1.59", "74.1442, 62.9478, -23.8536, 0.23", "75.3, 62.9513, -23.9299, 0.23", "77.6092, 62.9979, -24.1951, 0.23", "80.5058, 63.1374, -24.573, 1.59", "82.6735, 63.417, -24.866, 1.59", "85.1556, 63.8481, -25.204, 0.23", "87.8823, 64.3851, -25.5722, 0.23", "89.3634, 64.6791, -25.7695, 2.72", "91.5155, 65.0674, -26.0506, 2.72", "95.9069, 65.6764, -26.6177, 0.23", "97.1385, 65.8152, -26.7533, 0.91", "100.065, 66.096, -26.9949, 0.23", "102.168, 66.1881, -27.1715, 0.91", "105.395, 66.2591, -27.5489, 0.23", "105.395, 66.2591, -27.5489, 1.13", "107.412, 66.3494, -28.0293, 1.13", "108.54, 66.5101, -28.3673, 1.13", "110.199, 66.9419, -28.963, 0.23", "112.281, 67.706, -29.7944, 1.81", "113.463, 68.2634, -30.3022, 1.81", "116.57, 69.9453, -31.5756, 0.23", "117.995, 70.904, -32.163, 0.23", "118.957, 71.6541, -32.5295, 0.23", "119.457, 72.1028, -32.7199, 1.81", "120.605, 73.3102, -33.1967, 1.81", "122.571, 75.4745, -34.0886, 0.23", "123.806, 76.8128, -34.6459, 0.23", "125.232, 78.193, -35.367, 2.04", "126.52, 79.1893, -35.9298, 2.04", "129.949, 81.1598, -37.273, 0.23", "132.708, 82.3452, -38.2697, 1.81", "134.047, 82.7821, -38.7071, 1.81", "137.299, 83.6621, -39.649, 0.68", "140.896, 84.553, -40.5443, 2.27", "144.778, 85.3328, -41.3599, 0.23", "145.469, 85.4222, -41.4949, 0.23", "147.323, 85.6575, -41.9757, 1.36", "148.841, 85.8418, -42.4484, 0.23", "150.634, 86.0324, -43.0918, 0.91", "152.628, 86.1184, -43.9525, 0.23", "154.513, 85.987, -44.8091, 1.36", "157.455, 85.4531, -46.135, 0.23", "158.916, 85.1038, -46.8239, 1.13", "160.485, 84.6323, -47.541, 0.23", "163.306, 83.6885, -48.8548, 1.36", "165.235, 83.0628, -49.7852, 0.23", "167.298, 82.4391, -50.8536, 0.91", "169.489, 81.8482, -52.1004, 0.23", "171.829, 81.3889, -53.5525, 0.91", "173.661, 81.2421, -54.8011, 0.23", "175.623, 81.3444, -56.2014, 2.04", "177.614, 81.6752, -57.614, 0.23", "179.587, 82.237, -59.0671, 0.23", "180.715, 82.7623, -59.8943, 1.36", "182.997, 84.5939, -61.5247, 0.23", "183.548, 85.2922, -61.8755, 1.13", "184.146, 86.6408, -62.153, 0.23", "184.502, 88.4952, -62.1878, 1.13", "184.605, 91.2617, -61.9301, 0.23", "184.402, 93.8556, -61.5333, 0.23", "184.135, 95.4313, -61.1915, 0.23", "183.633, 97.6438, -60.706, 0.23", "183.264, 99.0021, -60.4472, 1.36", "182.925, 100.047, -60.2885, 1.36", "182.309, 101.917, -60.2397, 0.23", "181.997, 103.021, -60.2991, 0.91", "181.494, 105.033, -60.4518, 0.23", "181.07, 106.818, -60.6205, 1.13", "180.752, 108.526, -60.7734, 1.59", "180.061, 113.01, -61.1391, 0.23", "179.716, 116.014, -61.3538, 0.91", "179.511, 118.322, -61.484, 0.23", "179.417, 119.836, -61.5381, 0.91", "179.285, 122.21, -61.6203, 0.23", "179.213, 123.735, -61.6938, 0.23", "179.176, 125.598, -61.8008, 0.91", "179.192, 127.189, -62.0068, 0.23", "179.224, 129.05, -62.3287, 1.13", "179.271, 131.318, -62.7935, 0.23", "179.25, 132.044, -62.9539, 0.23", "179.161, 133.809, -63.3689, 0.23", "179.108, 134.93, -63.6706, 0.23", "179.092, 136.76, -64.2071, 2.04", "179.136, 138.311, -64.646, 2.72", "179.074, 141.443, -65.4425, 0.23", "178.991, 142.604, -65.7336, 0.23", "178.807, 144.335, -66.1361, 0.23", "178.59, 146.414, -66.6228, 1.13", "178.415, 148.671, -67.1342, 0.23", "178.207, 151.28, -67.7516, 0.23", "178.205, 152.412, -68.0168, 0.23", "178.24, 154.693, -68.4392, 2.04" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.70413, 31.5639, -2.45015, 2.04", "-5.00354, 33.0759, -2.33684, 2.04", "-6.43677, 34.7437, -2.21187, 1.13", "-7.5281, 36.0136, -2.1167, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-80.2837, 62.5511, -20.3772, 0.23", "-80.9979, 63.7042, -21.131, 0.23", "-81.7577, 64.8834, -21.8685, 1.13", "-83.3253, 66.9807, -23.1093, 0.23", "-84.4192, 68.3303, -23.8617, 1.13", "-85.583, 69.7668, -24.6746, 0.23", "-86.6576, 71.1062, -25.4141, 1.59", "-87.2715, 71.8822, -25.7841, 1.59", "-88.514, 73.4481, -26.5413, 0.23", "-89.5625, 74.6818, -27.11, 0.91", "-90.7954, 76.0959, -27.7906, 0.23", "-91.5298, 76.8233, -28.1464, 0.23", "-93.1012, 78.16, -28.8376, 1.81", "-94.8908, 79.6227, -29.584, 0.23", "-95.7202, 80.213, -29.915, 0.91", "-97.4404, 81.2057, -30.5098, 0.23", "-99.2459, 82.0484, -31.0543, 1.13", "-101.241, 82.829, -31.6248, 0.23", "-103.385, 83.5396, -32.1752, 0.68", "-105.21, 84.1036, -32.5651, 0.23", "-106.658, 84.5647, -32.9125, 1.81", "-108.721, 85.1846, -33.4392, 0.23", "-109.951, 85.5249, -33.7702, 0.91", "-111.515, 85.8574, -34.1859, 0.23", "-112.307, 85.9762, -34.4015, 1.59", "-114.539, 86.377, -35.1444, 0.23", "-115.643, 86.565, -35.584, 1.13", "-116.817, 86.7196, -36.1317, 0.23", "-117.9, 86.8377, -36.7003, 0.23", "-120.076, 87.0899, -37.8706, 1.59", "-122.14, 87.3341, -38.9965, 0.23", "-123.074, 87.4277, -39.4811, 1.13", "-124.156, 87.5435, -40.0321, 0.23", "-125.634, 87.7102, -40.7503, 1.13", "-127.294, 87.8862, -41.4337, 0.23", "-128.908, 88.0321, -41.9484, 0.91", "-130.304, 88.1669, -42.2199, 0.23", "-131.593, 88.3274, -42.3708, 0.23", "-133.568, 88.6679, -42.4305, 1.36", "-136.061, 89.2398, -42.2368, 0.45", "-137.966, 89.831, -41.9384, 1.36", "-139.981, 90.6623, -41.4537, 0.23", "-141.041, 91.2187, -41.14, 0.23", "-142.23, 92.0203, -40.7173, 0.91", "-144.8, 94.1268, -39.6553, 0.23", "-146.081, 95.3997, -39.0857, 1.13", "-147.324, 96.8694, -38.6256, 0.23", "-148.062, 97.9142, -38.4656, 2.04", "-149.136, 99.8768, -38.5971, 0.23", "-149.599, 100.951, -38.8669, 0.23", "-149.945, 102.066, -39.3255, 0.23", "-150.584, 104.415, -40.4998, 0.23", "-150.81, 105.262, -40.9691, 1.81", "-151.944, 108.654, -42.9993, 0.23", "-152.353, 109.624, -43.6339, 1.36", "-153.187, 111.206, -44.7039, 0.23", "-153.393, 111.507, -44.9014, 0.23", "-154.439, 112.582, -45.5338, 1.36", "-156.209, 113.885, -46.2942, 0.45", "-157.485, 114.492, -46.6674, 1.13", "-159.299, 115.186, -47.2093, 0.23", "-160.795, 115.683, -47.6405, 0.68", "-162.656, 116.286, -48.1779, 1.13", "-163.873, 116.655, -48.5167, 0.23", "-165.321, 117.076, -48.909, 0.68", "-167.579, 117.717, -49.512, 0.23", "-168.609, 117.959, -49.7878, 0.91", "-169.392, 118.097, -50.0035, 0.23", "-170.597, 118.303, -50.3337, 0.91", "-172.116, 118.547, -50.7459, 0.23", "-173.133, 118.682, -50.9965, 0.91", "-174.891, 118.859, -51.3866, 0.23", "-175.93, 118.961, -51.625, 1.59", "-176.507, 119.041, -51.7683, 1.59", "-178.954, 119.524, -52.4418, 0.23", "-180.18, 119.857, -52.784, 0.91", "-182.57, 120.732, -53.4883, 0.68", "-183.452, 121.168, -53.7579, 0.23", "-185.108, 122.152, -54.2566, 1.13", "-186.106, 122.843, -54.5361, 0.23", "-187.571, 124.154, -54.891, 0.91", "-188.653, 125.418, -55.1264, 0.23", "-189.336, 126.506, -55.2319, 1.13", "-189.693, 127.254, -55.2631, 0.23", "-190.128, 128.579, -55.24, 0.23", "-190.496, 130.151, -55.2125, 1.13", "-190.694, 131.439, -55.2126, 0.23", "-190.869, 132.742, -55.2303, 0.68", "-191.063, 134.33, -55.3174, 0.23", "-191.208, 135.999, -55.4821, 1.13", "-191.33, 137.865, -55.7331, 0.45", "-191.397, 138.814, -55.8881, 1.81", "-191.478, 140.847, -56.2297, 0.23", "-191.492, 142.592, -56.5287, 0.23", "-191.434, 143.952, -56.7545, 0.23", "-191.359, 144.903, -56.8903, 0.23", "-191.191, 146.163, -57.0235, 1.36", "-190.742, 148.879, -57.2411, 0.23", "-190.56, 149.859, -57.2883, 0.23", "-190.303, 151.484, -57.3478, 0.91", "-190.119, 153.093, -57.4244, 0.23", "-189.965, 155.724, -57.6191, 0.91", "-189.972, 157.645, -57.8356, 0.23", "-190.051, 159.244, -58.0448, 0.91", "-190.274, 162.051, -58.4388, 0.23", "-190.42, 163.144, -58.6154, 1.13", "-190.695, 164.732, -58.9295, 0.23", "-191.036, 165.96, -59.24, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-80.2837, 62.5511, -20.3772, 0.23", "-81.6825, 62.1902, -20.5654, 0.23", "-82.3579, 61.9622, -20.597, 0.68", "-83.7705, 61.4649, -20.6427, 0.23", "-85.233, 60.95, -20.69, 1.13", "-86.9939, 60.33, -20.7469, 0.23", "-87.9237, 60.0027, -20.777, 0.91", "-89.3818, 59.4354, -20.7634, 0.23", "-90.5297, 58.9361, -20.6863, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-14.6095, 40.1597, 0.0, 0.213235", "-19.6151, 54.2998, 0.0, 0.213235", "-24.6207, 68.44, 0.0, 0.213235" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "12.4819, -17.3019, -4.5648, 0.23", "11.9425, -17.2828, -4.81275, 0.23", "9.90648, -17.4071, -5.8272, 0.23", "8.03288, -17.9275, -6.81984, 0.23", "6.18673, -18.7544, -7.89147, 1.13", "4.74523, -19.6384, -8.82345, 1.59", "3.40497, -21.0056, -9.90534, 0.68", "4.44455, -22.844, -10.2925, 1.36", "6.69802, -25.5749, -10.7905, 0.45", "8.25387, -27.2829, -11.1093, 0.45", "10.2624, -29.3832, -11.47, 1.36", "11.98, -31.1105, -11.7361, 1.81", "14.2279, -33.2797, -11.9928, 0.91", "15.903, -34.8474, -12.157, 0.23", "16.4263, -35.3554, -12.217, 0.23", "17.5364, -36.8608, -12.3847, 0.23", "18.3198, -38.3686, -12.5271, 0.23", "19.1209, -40.3528, -12.9764, 0.23", "19.5503, -41.5931, -13.2473, 2.04", "20.2847, -43.6433, -13.6491, 2.95", "21.267, -46.2727, -14.1389, 1.81", "21.9999, -48.1835, -14.4497, 1.81", "23.6833, -52.8271, -15.3138, 0.45", "24.5913, -55.6056, -15.8652, 2.27", "25.206, -58.0252, -16.3388, 2.72", "25.5596, -60.0277, -16.7264, 2.72", "26.1204, -64.9703, -17.6337, 0.23", "26.43, -68.7469, -18.2447, 2.72", "26.5022, -69.9514, -18.395, 2.72", "26.7882, -74.3234, -19.1726, 0.23", "26.8703, -75.8793, -19.3966, 0.23", "26.9446, -77.487, -19.5495, 0.23", "26.9803, -78.9561, -19.6162, 0.23", "26.9993, -80.4784, -19.6091, 2.04", "26.9866, -84.1506, -19.5639, 0.91", "27.1078, -88.6374, -19.4686, 2.72", "27.2315, -92.9829, -19.495, 0.23", "27.209, -94.2151, -19.559, 0.23", "27.1342, -95.1472, -19.6439, 0.23", "26.8807, -96.9546, -19.8779, 0.23", "26.3501, -99.5683, -20.4817, 0.23", "25.8361, -102.482, -21.4866, 2.27", "25.4593, -105.271, -22.8096, 0.45", "25.356, -106.356, -23.3763, 1.36", "25.2325, -108.514, -24.5475, 1.81", "25.1792, -112.387, -26.5794, 0.68", "25.1841, -114.201, -27.4833, 2.95", "25.4408, -119.515, -29.8547, 0.23", "25.6079, -121.326, -30.6243, 0.91", "25.8452, -123.011, -31.3043, 0.23", "26.4946, -126.429, -32.5385, 2.27", "26.7968, -127.931, -32.9537, 0.23", "27.0836, -129.819, -33.4562, 1.36", "27.3832, -132.794, -34.1362, 0.23", "27.4683, -134.353, -34.5702, 0.23", "27.4583, -135.519, -34.9466, 0.23", "27.2559, -138.229, -35.8493, 2.27", "26.9446, -141.597, -36.8954, 0.23", "26.8235, -143.053, -37.2931, 0.23", "26.626, -145.063, -37.7467, 0.23", "26.5216, -145.887, -37.9206, 2.27", "26.0353, -150.541, -38.7891, 0.23", "25.9291, -153.07, -39.171, 0.23", "25.9211, -155.397, -39.5134, 1.81", "25.9586, -157.549, -39.8965, 0.23", "25.9558, -159.037, -40.1731, 0.23", "25.9381, -161.322, -40.6831, 2.04", "25.9416, -163.294, -41.1887, 2.04", "25.9227, -166.755, -42.2713, 0.23", "25.904, -167.272, -42.4605, 0.23", "25.8336, -169.844, -43.5342, 2.04", "25.7526, -174.232, -45.5593, 0.23", "25.7049, -175.342, -46.0963, 1.81", "25.4808, -178.687, -47.6978, 0.68", "25.4407, -179.888, -48.2414, 1.36", "25.4765, -182.435, -49.4819, 0.45", "25.6341, -185.29, -51.0281, 2.5", "25.7602, -186.702, -51.7773, 2.5", "26.0441, -189.343, -53.1242, 0.23", "26.2779, -191.017, -53.8337, 0.23", "26.7861, -194.159, -55.0572, 2.27", "27.3059, -197.444, -56.2708, 0.23", "27.6076, -199.333, -56.9352, 1.13", "28.0269, -201.597, -57.6824, 0.23", "28.4825, -204.398, -58.5241, 2.04", "28.7652, -206.516, -59.0741, 1.13", "29.0484, -209.768, -59.8091, 0.23", "29.1602, -211.343, -60.1661, 1.81", "29.2803, -213.905, -60.9685, 0.23", "29.3894, -216.008, -61.747, 0.23", "29.6391, -218.815, -62.9048, 2.04", "29.9907, -221.194, -63.8773, 0.23", "30.507, -223.331, -64.8289, 2.04", "31.7415, -226.706, -66.4607, 0.23", "32.55, -228.425, -67.3144, 1.59", "33.5776, -230.32, -68.2049, 0.45", "34.8107, -232.39, -69.1584, 1.59", "36.6248, -235.101, -70.271, 0.45", "38.1477, -237.291, -71.0532, 1.36", "39.2312, -238.911, -71.5028, 0.45", "40.4665, -240.924, -71.9048, 1.13", "42.2043, -244.252, -72.4176, 0.23", "43.5292, -247.177, -72.7168, 0.91", "44.1314, -248.601, -72.8469, 0.23", "44.879, -250.418, -73.047, 1.59", "46.4756, -254.529, -73.5654, 0.23", "47.8325, -258.407, -74.086, 1.81", "48.662, -261.557, -74.6046, 0.23", "49.0428, -263.318, -75.0107, 0.23", "49.3281, -264.706, -75.4307, 0.23", "49.8276, -267.668, -76.5065, 2.04", "49.9239, -269.111, -77.1618, 2.04", "50.0124, -271.879, -78.4265, 0.23", "50.0604, -272.781, -78.89, 0.23", "50.3181, -274.693, -79.8434, 0.23", "50.8789, -276.838, -80.8977, 0.91", "51.6204, -279.178, -82.0809, 0.23", "52.2247, -280.875, -82.9075, 0.91", "53.5381, -284.167, -84.445, 0.91", "54.567, -286.91, -85.6954, 0.23", "55.8546, -290.544, -87.278, 1.81", "57.6186, -295.326, -89.2614, 0.23", "58.4627, -297.737, -90.1389, 1.13", "59.4137, -301.298, -91.3289, 0.23", "59.8756, -303.599, -92.032, 1.36", "60.2995, -306.199, -92.9055, 0.23", "60.5021, -307.842, -93.4673, 0.23", "60.807, -311.243, -94.6158, 2.04", "60.7939, -314.984, -96.0036, 0.91", "60.7242, -316.85, -96.7194, 1.59", "60.7466, -319.149, -97.635, 0.45", "60.8186, -321.673, -98.4976, 1.36", "60.8453, -323.159, -98.8714, 0.68", "60.9552, -326.343, -99.3281, 0.23", "61.0556, -328.058, -99.3893, 0.23", "61.1789, -330.508, -99.2134, 1.13", "61.3432, -334.451, -98.5484, 0.23", "61.5864, -337.594, -97.8811, 1.81", "61.8431, -340.268, -97.2404, 0.45", "61.9924, -341.818, -96.7961, 1.81", "62.2453, -345.972, -95.5829, 0.68", "62.3611, -349.58, -94.5653, 1.36", "62.529, -353.363, -93.6542, 0.45", "62.592, -354.34, -93.4357, 0.45", "62.7785, -356.855, -92.9605, 1.13", "62.9864, -359.59, -92.5128, 0.23", "63.1793, -361.944, -92.2657, 1.59", "63.5737, -366.91, -91.9536, 0.45", "63.6973, -369.279, -91.8363, 0.45", "63.8257, -371.73, -91.7867, 1.36" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "12.4819, -17.3019, -4.5648, 0.23", "14.4112, -16.2954, -5.08225, 0.23", "15.8392, -16.1515, -5.16876, 0.23", "17.41, -16.4513, -5.18666, 0.23", "17.9872, -16.5971, -5.15257, 0.23", "19.8701, -17.2228, -5.11402, 1.59", "21.2095, -17.733, -5.11238, 2.5", "23.0273, -18.5228, -5.10854, 1.81", "25.926, -19.7753, -5.14299, 0.68", "27.511, -20.4808, -5.19292, 1.36", "30.2221, -21.6712, -5.33172, 0.23", "30.9575, -21.9951, -5.40305, 1.81", "32.9994, -22.8878, -5.59472, 2.5", "36.4372, -24.4526, -5.73925, 0.23", "37.8491, -25.1294, -5.74172, 2.5", "39.1847, -25.7912, -5.70388, 2.5", "42.7966, -27.6745, -5.4126, 0.23", "45.635, -29.2142, -5.12504, 2.27", "48.1548, -30.6803, -4.81611, 0.68", "48.7152, -31.0439, -4.72707, 2.27", "49.9312, -31.8818, -4.52018, 1.81", "52.2684, -33.5973, -4.12776, 0.68", "54.7273, -35.3849, -3.77525, 2.27", "55.8511, -36.1941, -3.68636, 2.27", "58.4887, -38.0593, -3.55391, 0.91", "59.9116, -39.0924, -3.47947, 1.81", "61.8093, -40.4929, -3.38496, 0.91", "63.6267, -41.8331, -3.31542, 2.27", "65.5534, -43.2853, -3.27332, 0.23", "66.6628, -44.1189, -3.27058, 1.81", "68.7279, -45.6457, -3.27806, 0.68", "70.5766, -47.0509, -3.30887, 2.27", "72.8747, -48.8593, -3.39738, 0.23", "73.9395, -49.7236, -3.45884, 1.81", "75.8002, -51.2255, -3.60474, 0.68", "77.7429, -52.8037, -3.74899, 0.23", "80.0593, -54.6806, -3.91515, 2.5", "82.9101, -57.0263, -4.11041, 0.23", "84.136, -57.9984, -4.16894, 0.23", "85.8306, -59.3128, -4.21919, 1.36", "87.2947, -60.4293, -4.237, 0.23", "88.5313, -61.3776, -4.18802, 0.91", "89.7498, -62.3339, -4.03083, 0.23", "91.6103, -63.8194, -3.69691, 0.23", "92.515, -64.5883, -3.50867, 2.04", "93.4864, -65.525, -3.25659, 2.04", "94.9443, -66.9761, -2.85727, 0.23", "96.2539, -68.3569, -2.45213, 0.91", "97.1325, -69.3679, -2.15124, 0.23", "97.9282, -70.431, -1.86675, 0.23", "99.0324, -72.0211, -1.41924, 0.68", "108.441, -77.4772, -0.0278336, 0.68", "117.008, -83.7213, 2.76974, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "178.24, 154.693, -68.4392, 0.23", "178.604, 156.29, -68.1209, 0.23", "178.869, 157.099, -67.9849, 1.13", "179.248, 158.022, -67.8557, 0.23", "179.714, 159.026, -67.7409, 0.91", "180.156, 159.977, -67.632, 0.23", "180.578, 160.885, -67.5281, 0.91", "181.253, 162.084, -67.4141, 0.23", "181.802, 162.949, -67.3507, 0.91", "182.778, 164.377, -67.287, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "178.24, 154.693, -68.4392, 0.23", "180.656, 154.016, -69.2667, 0.23", "181.76, 153.706, -69.6448, 0.91", "182.923, 153.38, -70.0431, 0.23", "184.759, 152.865, -70.6721, 0.91", "186.184, 152.465, -71.1603, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.5281, 36.0136, -2.1167, 0.91", "-8.36917, 36.6474, -2.43087, 0.91", "-12.3723, 40.0143, -2.53087, 0.23", "-13.8483, 41.2569, -2.35129, 0.68", "-14.8529, 42.0686, -2.15189, 0.68", "-17.2718, 44.004, -1.57381, 1.36", "-19.8735, 46.153, -0.901428, 1.13", "-22.5871, 48.4952, -0.0638626, 1.59", "-24.5145, 50.1396, 0.674643, 1.59", "-26.4149, 51.6663, 1.33178, 0.68", "-28.0462, 52.9446, 1.79239, 0.23", "-29.4186, 54.0397, 2.12478, 1.13", "-31.0447, 55.3663, 2.50665, 0.23", "-32.1444, 56.3336, 2.71563, 1.36", "-33.5785, 57.821, 2.99373, 0.23", "-34.8101, 59.2408, 3.16687, 0.91", "-36.1942, 60.9491, 3.34012, 0.23", "-37.8597, 63.0136, 3.42627, 1.81", "-39.3979, 65.0082, 3.36761, 1.81", "-40.6589, 66.7784, 3.19884, 0.68", "-41.938, 68.6935, 2.88223, 0.23", "-43.0377, 70.3528, 2.51577, 2.5", "-44.4469, 72.4686, 1.97408, 2.5", "-46.4282, 75.3378, 1.1964, 0.23", "-47.2153, 76.4353, 0.961933, 0.23", "-48.0704, 77.4808, 0.812611, 1.81", "-49.9241, 79.5099, 0.77514, 0.23", "-51.1366, 80.7039, 0.815223, 0.23", "-52.2816, 81.6866, 0.830519, 1.59", "-53.3403, 82.5193, 0.824291, 1.59", "-56.2173, 84.5614, 0.653799, 0.23", "-57.7033, 85.4549, 0.431897, 0.23", "-59.4253, 86.2416, 0.0144207, 2.72", "-62.943, 87.661, -1.17601, 0.45", "-64.6982, 88.3243, -2.05702, 0.23", "-66.4308, 88.9454, -3.62971, 1.36", "-68.2185, 89.4092, -6.32054, 0.23", "-69.7763, 89.6428, -8.92149, 0.91", "-70.4366, 89.6635, -10.1452, 2.04", "-71.5138, 89.5721, -12.5993, 0.23", "-73.0162, 89.3879, -16.3954, 0.23", "-74.3765, 89.3847, -21.6393, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.5281, 36.0136, -2.1167, 0.45", "-6.75311, 36.8915, -3.16237, 0.45", "-6.1584, 38.4344, -4.22894, 0.45", "-5.96093, 40.3785, -5.087, 0.45", "-5.98316, 41.7391, -5.53669, 0.45", "-6.1155, 43.0583, -5.92966, 1.81", "-6.56087, 45.8004, -6.68732, 1.13", "-7.04113, 47.3832, -7.04014, 0.68", "-8.00662, 49.899, -7.45996, 0.68", "-8.70359, 51.5245, -7.58608, 0.68", "-9.3297, 53.0156, -7.61172, 1.81", "-9.67469, 54.0066, -7.59698, 1.81", "-10.4718, 56.6968, -7.4746, 0.45", "-10.9617, 58.7378, -7.34821, 0.45", "-11.5237, 61.8283, -7.11084, 2.95", "-11.8232, 64.4983, -6.87974, 0.91", "-11.8624, 67.2209, -6.61711, 0.23", "-11.8065, 68.1668, -6.52977, 0.23", "-11.6335, 69.8646, -6.38152, 0.91", "-11.4149, 72.1463, -6.24908, 1.59", "-11.3425, 74.4411, -6.22798, 0.23", "-11.4956, 76.3441, -6.26312, 0.23", "-11.6425, 77.4806, -6.33099, 0.23", "-11.8179, 79.369, -6.48943, 0.23", "-11.9554, 80.7037, -6.62239, 2.5", "-12.1668, 82.4134, -6.82369, 1.81", "-12.7684, 85.6109, -7.24805, 0.23", "-13.3299, 88.2164, -7.61832, 0.23", "-13.5908, 89.9486, -7.89626, 2.95" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-90.5297, 58.9361, -20.6863, 0.23", "-91.7675, 58.6835, -21.6794, 0.23", "-93.5069, 58.104, -23.1182, 0.91", "-94.2003, 57.8079, -23.7424, 0.23", "-94.7682, 57.5306, -24.2714, 0.68", "-95.8049, 56.9585, -25.2666, 0.23", "-96.3427, 56.6533, -25.7937, 0.68", "-97.4445, 55.9739, -26.8562, 0.23", "-98.1972, 55.5752, -27.5885, 0.23", "-98.9974, 55.2211, -28.3484, 0.23", "-99.711, 54.9651, -29.0065, 0.91", "-101.068, 54.6122, -30.1749, 0.23", "-101.833, 54.4619, -30.7918, 0.23", "-103.3, 54.2416, -31.91, 1.36", "-104.93, 54.0097, -33.1226, 0.23", "-105.923, 53.8203, -33.8967, 0.68", "-106.876, 53.5748, -34.6608, 0.23", "-107.38, 53.4132, -35.0728, 0.91", "-107.982, 53.1627, -35.5905, 0.23", "-108.967, 52.6343, -36.476, 0.91", "-110.287, 51.8171, -37.764, 0.23", "-111.105, 51.2243, -38.6604, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-90.5297, 58.9361, -20.6863, 1.59", "-91.7881, 58.581, -21.1396, 1.59", "-92.4273, 58.4234, -21.3816, 0.45", "-92.8312, 58.3292, -21.5405, 0.45", "-93.5255, 58.1812, -21.8174, 1.36", "-94.8023, 57.9617, -22.3028, 0.23", "-95.7906, 57.8425, -22.6545, 0.23", "-96.6485, 57.8137, -22.9513, 0.91", "-97.3782, 57.8079, -23.1916, 0.23", "-98.3625, 57.82, -23.5015, 1.13", "-99.7047, 57.8856, -23.8904, 0.23", "-100.835, 57.998, -24.1779, 0.23", "-101.626, 58.1017, -24.3592, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "63.8257, -371.73, -91.7867, 0.23", "62.5916, -374.126, -92.6748, 0.23", "61.6324, -376.079, -93.4844, 1.13", "60.7716, -378.138, -94.3403, 0.23", "60.4358, -379.011, -94.6808, 0.91", "60.1739, -379.718, -94.9481, 0.23", "59.916, -380.483, -95.2291, 1.13", "59.3725, -382.453, -96.0433, 0.23", "59.1495, -383.752, -96.4993, 0.23", "59.0778, -384.866, -96.8711, 0.91", "59.0471, -386.108, -97.2551, 0.23", "59.069, -387.036, -97.5233, 1.13", "59.2735, -389.579, -98.2054, 0.23", "59.381, -390.63, -98.4266, 0.91", "59.5138, -392.212, -98.7894, 0.23", "59.6068, -393.041, -98.9806, 0.91", "59.7775, -394.395, -99.2653, 0.23", "59.8546, -395.159, -99.4105, 0.23", "60.0201, -396.848, -99.6483, 0.91", "60.1173, -399.179, -100.032, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "63.8257, -371.73, -91.7867, 0.23", "65.1243, -372.845, -92.1595, 0.23", "66.533, -374.056, -92.5639, 0.23", "67.2966, -374.712, -92.7831, 0.23", "69.1604, -376.313, -93.3181, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-74.3765, 89.3847, -21.6393, 0.23", "-74.6191, 91.2469, -21.3792, 0.23", "-75.0597, 94.1813, -21.3332, 0.23", "-75.2862, 96.1183, -21.4715, 1.59", "-75.4812, 97.9695, -21.7937, 0.45", "-75.6716, 99.7778, -22.2099, 1.13", "-76.0732, 102.739, -23.0544, 0.23", "-76.2825, 103.805, -23.508, 0.45", "-76.7335, 105.569, -24.4823, 0.23", "-77.1751, 107.148, -25.43, 1.13", "-77.6163, 108.484, -26.1897, 0.23", "-78.3039, 109.916, -27.0733, 1.13", "-78.7099, 110.581, -27.4972, 0.23", "-79.7871, 112.055, -28.4618, 1.13", "-82.0788, 114.89, -30.2485, 0.23", "-83.2538, 116.373, -31.1862, 1.13", "-85.979, 120.063, -33.5332, 0.23", "-87.3174, 121.949, -34.7198, 1.13", "-87.81, 122.652, -35.1484, 0.23", "-88.7433, 123.921, -35.8929, 1.13", "-90.5447, 126.314, -37.1749, 0.23", "-91.8857, 128.334, -38.2125, 1.36", "-92.9658, 130.394, -39.0594, 0.23", "-93.7387, 132.013, -39.6906, 0.68", "-94.4673, 133.655, -40.3769, 0.23", "-95.045, 135.15, -40.9128, 0.91", "-95.9081, 137.579, -41.585, 0.23", "-96.8391, 140.522, -42.1841, 0.23", "-97.4519, 142.536, -42.5864, 0.68", "-98.3466, 144.926, -43.0318, 0.23", "-99.9142, 148.339, -43.5087, 0.91", "-100.398, 149.082, -43.5622, 0.23", "-102.142, 150.772, -43.4568, 1.13", "-106.352, 153.625, -43.6207, 0.23", "-108.574, 155.116, -43.8719, 1.13", "-108.807, 155.279, -43.9119, 1.13", "-109.512, 155.782, -44.1, 1.13", "-111.114, 157.072, -44.5704, 0.23", "-113.948, 159.665, -45.3597, 0.23", "-115.548, 161.236, -45.4314, 0.23", "-116.155, 161.758, -45.3961, 0.23", "-116.74, 162.117, -45.2685, 0.23", "-117.76, 162.521, -44.8167, 0.23", "-119.598, 163.041, -43.9479, 0.23", "-122.04, 163.58, -42.8373, 0.23", "-124.171, 163.976, -41.8701, 0.23", "-126.574, 164.41, -40.7944, 0.23", "-130.027, 165.068, -39.2912, 1.13", "-134.206, 165.879, -37.5531, 0.23", "-137.176, 166.461, -36.4244, 0.68" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-74.3765, 89.3847, -21.6393, 1.59", "-75.8768, 88.8957, -21.5526, 1.59", "-77.7639, 88.2807, -21.4436, 0.23", "-79.4052, 87.7457, -21.3488, 2.04", "-80.2546, 87.4689, -21.2997, 2.04", "-81.637, 87.0183, -21.2198, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.5908, 89.9486, -7.89626, 0.23", "-11.9542, 92.0495, -7.08407, 0.23", "-10.9474, 93.4163, -6.58871, 0.23", "-10.2322, 94.5062, -6.15721, 1.59", "-9.40142, 95.9999, -5.49211, 0.45", "-8.22896, 98.2327, -4.46933, 0.23", "-7.56997, 99.5413, -3.93654, 0.91", "-7.14113, 100.514, -3.60482, 0.23", "-6.34445, 102.325, -3.03729, 2.04", "-5.34432, 104.488, -2.50171, 0.91", "-4.43928, 106.329, -2.23974, 1.59", "-3.49555, 108.255, -2.16428, 0.45", "-3.01051, 109.279, -2.19426, 1.59", "-2.01904, 111.393, -2.32575, 0.23", "-1.28797, 113.019, -2.48812, 0.91", "-0.521454, 114.936, -2.67899, 0.23", "-0.0805072, 116.255, -2.74991, 1.81", "0.736515, 118.906, -2.81843, 0.23", "1.20574, 120.711, -2.87603, 0.91", "1.5928, 122.682, -2.93838, 0.23", "1.83746, 124.043, -2.96283, 1.13", "2.16729, 125.538, -2.9895, 1.13", "2.7581, 127.438, -3.09923, 0.23", "3.10009, 128.228, -3.17028, 0.23", "3.35512, 128.713, -3.23469, 0.23", "3.71849, 129.314, -3.32613, 0.23", "4.85174, 131.02, -3.60924, 1.36", "6.35236, 133.142, -4.01567, 0.23", "7.16778, 134.264, -4.2334, 1.13", "8.56332, 136.171, -4.64349, 0.23", "9.35581, 137.328, -4.89428, 0.68", "10.3034, 138.818, -5.25574, 0.23", "11.08, 140.082, -5.58322, 0.23", "11.5145, 140.801, -5.76292, 0.23", "11.9405, 141.532, -5.93877, 1.13", "13.2599, 143.762, -6.42353, 0.23", "13.8618, 144.798, -6.62485, 0.23", "14.6545, 146.205, -6.86987, 0.23", "15.1145, 147.021, -6.97922, 0.23", "15.6934, 147.95, -7.10985, 0.91" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.5908, 89.9486, -7.89626, 0.23", "-13.7697, 92.6525, -8.53972, 0.23", "-13.792, 93.4653, -8.6821, 1.13", "-13.8805, 95.4263, -8.95108, 0.23", "-13.9161, 95.9912, -9.01737, 0.23", "-13.9477, 96.6737, -9.073, 0.23", "-13.9961, 98.3769, -9.16469, 2.27", "-13.9786, 99.7278, -9.15751, 1.13", "-13.9634, 101.195, -9.10863, 0.23", "-13.9636, 101.764, -9.07645, 0.91", "-14.0348, 103.976, -8.97232, 0.23", "-14.1733, 105.838, -8.90672, 2.04", "-14.252, 106.734, -8.87837, 2.04", "-14.4944, 109.975, -8.76097, 0.23", "-14.5359, 110.542, -8.73235, 1.13", "-14.5975, 111.224, -8.69391, 1.13", "-14.9221, 113.59, -8.56663, 0.23", "-15.1427, 114.961, -8.50768, 0.23", "-15.3984, 116.818, -8.42776, 2.95", "-15.5601, 118.667, -8.33227, 0.23", "-15.5743, 119.491, -8.27912, 0.91", "-15.4218, 121.053, -8.19243, 0.23", "-15.0969, 122.448, -8.12733, 1.81", "-14.5478, 123.998, -8.06267, 0.23", "-14.2633, 124.608, -8.03852, 0.23", "-13.4064, 126.223, -7.96623, 2.04", "-12.394, 128.135, -7.83104, 0.23", "-11.7669, 129.326, -7.70157, 1.13", "-10.9654, 131.111, -7.49321, 0.23", "-10.7878, 131.606, -7.43938, 0.23", "-10.1896, 133.666, -7.15255, 2.04", "-9.57592, 136.671, -6.66471, 0.23", "-9.42474, 137.963, -6.42757, 0.23", "-9.30368, 139.923, -6.07376, 2.04", "-9.28803, 140.708, -5.93135, 2.04", "-9.3171, 142.821, -5.55123, 0.23", "-9.40961, 144.191, -5.31253, 1.13", "-9.60232, 145.638, -5.09499, 0.23", "-9.73258, 146.945, -4.9128, 0.23", "-9.76137, 147.472, -4.83861, 1.81", "-9.79427, 148.266, -4.78056, 1.81", "-9.87348, 150.931, -4.74333, 0.68", "-9.85543, 152.89, -4.73866, 1.13", "-9.72862, 155.038, -4.73934, 0.23", "-9.61481, 156.62, -4.75526, 2.04", "-9.36862, 159.277, -4.83244, 0.23", "-9.18587, 160.59, -4.88154, 1.13", "-8.98939, 161.811, -4.94546, 1.13", "-8.68145, 163.471, -5.01783, 0.23", "-8.51985, 164.474, -5.05231, 0.23", "-8.25591, 165.988, -5.05972, 0.91", "-7.95166, 167.791, -4.98417, 0.23", "-7.7355, 169.582, -4.96188, 1.13", "-7.68182, 170.742, -4.98448, 0.23", "-7.72948, 172.083, -5.0485, 1.81", "-7.76759, 172.571, -5.09074, 1.81", "-8.07386, 174.381, -5.41043, 0.23", "-8.32663, 175.412, -5.68919, 0.23", "-8.44804, 175.993, -5.90161, 0.68", "-8.62151, 176.787, -6.28917, 0.23", "-8.89921, 178.164, -7.02596, 1.81", "-9.22911, 179.936, -7.96482, 0.23", "-9.38436, 180.722, -8.38355, 0.23", "-9.78406, 182.658, -9.30961, 2.04", "-10.2236, 184.527, -10.1135, 0.23", "-10.7342, 186.243, -10.7774, 0.23", "-11.1708, 187.45, -11.1741, 1.36", "-11.4696, 188.192, -11.3659, 1.36", "-12.2516, 189.951, -11.73, 0.45", "-13.0079, 191.455, -11.9456, 0.68", "-13.6748, 192.783, -12.1097, 0.23", "-14.1658, 193.766, -12.2506, 1.13", "-14.9706, 195.46, -12.5731, 0.23", "-15.6088, 196.854, -12.8957, 2.27", "-16.4867, 198.725, -13.4299, 0.23", "-16.938, 199.73, -13.7519, 1.13", "-17.2356, 200.432, -13.9859, 1.13", "-17.7604, 201.923, -14.4823, 0.23", "-17.9897, 202.739, -14.7387, 0.23", "-18.1478, 203.534, -14.9375, 0.23", "-18.3104, 204.573, -15.1663, 0.23", "-18.6685, 206.37, -15.5189, 1.59", "-19.2287, 208.876, -15.9733, 0.23", "-19.6265, 210.524, -16.2313, 1.59", "-20.1302, 212.284, -16.5308, 0.23", "-20.4545, 213.199, -16.7343, 0.23", "-21.542, 215.329, -17.3782, 0.23", "-21.9962, 215.971, -17.6287, 0.23", "-22.4359, 216.433, -17.8446, 0.91", "-23.652, 217.559, -18.47, 1.36", "-24.7162, 218.484, -19.0148, 0.23", "-25.9819, 219.632, -19.6397, 0.91", "-26.6645, 220.303, -19.9817, 0.23", "-27.7159, 221.439, -20.54, 1.59", "-28.9459, 222.912, -21.217, 0.23", "-29.6303, 223.872, -21.5983, 0.45", "-30.8643, 225.798, -22.2545, 0.23", "-31.384, 226.698, -22.5421, 1.81", "-32.3886, 228.549, -23.1435, 0.45", "-32.5117, 228.78, -23.2049, 1.36", "-33.3006, 230.151, -23.4984, 0.23", "-33.5888, 230.633, -23.5955, 0.23", "-34.4358, 232.074, -23.8482, 1.59", "-36.1507, 235.084, -24.2964, 0.23", "-37.4959, 237.516, -24.5814, 2.04", "-38.9223, 240.132, -24.837, 0.23", "-39.3979, 241.025, -24.9057, 0.23", "-40.0335, 242.259, -24.982, 0.91", "-40.5253, 243.296, -25.0114, 0.23", "-40.7407, 243.824, -24.9893, 0.23", "-41.3162, 245.743, -24.9759, 1.81", "-41.5806, 247.106, -24.8619, 1.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-137.176, 166.461, -36.4244, 0.23", "-139.563, 166.858, -36.4195, 0.23", "-141.514, 167.181, -36.4018, 0.23", "-143.836, 167.517, -36.3766, 0.91", "-145.656, 167.768, -36.3366, 0.23", "-146.729, 167.915, -36.298, 0.91", "-149.532, 168.31, -36.1464, 0.23", "-152.155, 168.713, -35.9554, 0.23", "-154.601, 169.118, -35.6617, 0.23", "-155.855, 169.333, -35.4668, 1.36", "-157.112, 169.542, -35.2719, 0.45", "-158.923, 169.868, -35.0143, 1.13", "-161.474, 170.394, -34.6705, 0.23", "-162.786, 170.668, -34.5378, 0.23", "-163.529, 170.828, -34.4814, 0.91", "-166.381, 171.38, -34.3829, 0.23", "-167.982, 171.648, -34.3789, 0.23", "-169.634, 171.88, -34.4042, 0.23", "-170.818, 172.015, -34.4254, 0.23", "-171.905, 172.127, -34.4072, 0.23", "-173.342, 172.275, -34.3136, 0.23", "-174.237, 172.379, -34.1965, 0.91", "-175.85, 172.565, -33.9487, 0.23", "-176.566, 172.651, -33.8701, 0.91", "-178.011, 172.862, -33.7909, 0.23", "-180.84, 173.352, -33.7357, 0.68", "-181.264, 173.425, -33.7289, 0.23", "-182.926, 173.722, -33.7415, 1.13", "-185.924, 174.249, -33.7778, 0.23", "-187.859, 174.572, -33.7871, 0.23", "-189.355, 174.809, -33.8303, 0.23", "-191.891, 175.237, -34.0057, 1.13", "-194.662, 175.723, -34.263, 0.23", "-196.428, 176.085, -34.435, 0.23", "-197.326, 176.311, -34.5237, 1.13", "-200.439, 177.164, -34.9439, 0.23", "-202.857, 177.846, -35.3756, 0.23", "-203.409, 178.012, -35.4856, 0.23", "-205.684, 178.698, -35.9406, 0.91", "-207.717, 179.329, -36.3317, 0.23", "-209.705, 179.953, -36.6382, 0.23", "-212.401, 180.769, -36.9303, 0.23", "-213.689, 181.12, -37.0374, 0.91", "-216.131, 181.734, -37.2673, 0.23", "-217.113, 181.941, -37.3706, 0.23", "-218.429, 182.219, -37.4488, 0.91" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-137.176, 166.461, -36.4244, 0.23", "-139.589, 166.953, -36.4861, 0.23", "-140.923, 167.174, -36.4497, 0.23", "-143.343, 167.575, -36.3837, 0.68", "-145.633, 167.954, -36.3212, 0.23", "-148.616, 168.448, -36.2399, 0.23", "-150.697, 168.792, -36.1831, 0.23", "-152.058, 168.834, -36.0984, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-81.637, 87.0183, -21.2198, 0.23", "-82.4877, 88.6931, -22.4229, 0.23", "-83.2812, 90.1943, -23.4999, 1.13", "-84.1568, 91.7966, -24.4685, 0.23", "-84.7488, 92.7427, -25.1223, 1.13", "-85.8772, 94.6117, -26.4476, 0.23", "-86.1815, 95.1495, -26.8607, 0.23", "-86.9183, 96.3929, -27.8981, 1.59", "-88.0148, 98.1603, -29.3465, 0.45", "-89.6757, 100.457, -31.3641, 1.36", "-90.507, 101.308, -32.2353, 0.23", "-92.0908, 102.504, -33.5751, 1.13", "-93.1235, 103.104, -34.3441, 0.23", "-93.732, 103.384, -34.728, 0.23", "-95.9441, 104.194, -35.8243, 0.91", "-97.4116, 104.689, -36.3573, 0.23", "-98.8463, 105.14, -36.7837, 0.91", "-101.354, 105.885, -37.1857, 0.23", "-102.972, 106.358, -37.2803, 1.13", "-105.611, 107.157, -37.3258, 0.23", "-106.299, 107.362, -37.2652, 0.23", "-107.672, 107.728, -36.9665, 1.13", "-110.919, 108.464, -35.7486, 0.23", "-112.313, 108.742, -34.8389, 1.13" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-81.637, 87.0183, -21.2198, 0.23", "-82.3472, 86.6488, -21.2713, 0.23", "-83.9226, 85.8731, -21.3884, 1.59", "-85.73, 85.0536, -21.4862, 0.45", "-87.121, 84.5827, -21.7686, 1.13", "-87.6127, 84.4655, -21.9331, 0.23", "-88.9345, 84.2113, -22.3588, 1.13", "-90.1623, 84.0637, -22.8319, 0.23", "-90.8942, 84.0008, -23.2125, 0.91", "-93.5682, 83.7324, -24.7581, 0.23", "-94.5701, 83.5066, -25.5282, 0.23", "-95.7849, 82.8859, -26.8518, 1.13", "-96.4473, 82.2318, -27.7771, 0.23", "-97.0838, 81.3392, -28.7983, 0.23", "-97.6514, 80.3857, -29.7453, 2.27", "-98.3896, 79.0691, -30.8414, 0.23", "-99.7475, 76.9029, -32.7197, 0.23", "-100.539, 75.8156, -33.7492, 0.23", "-100.684, 75.6517, -33.9046, 1.13", "-102.587, 74.1195, -35.4414, 0.23", "-103.528, 73.6291, -36.0553, 0.91", "-104.835, 73.3846, -36.6538, 0.23", "-105.499, 73.3919, -36.8514, 1.81", "-105.972, 73.4609, -36.9764, 1.81", "-107.654, 73.8625, -37.308, 0.23", "-108.639, 74.3232, -37.3449, 0.91", "-110.153, 75.2286, -37.4011, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-41.5806, 247.106, -24.8619, 0.23", "-43.0295, 250.982, -23.6312, 0.23", "-43.4899, 252.224, -23.1637, 0.91", "-44.045, 253.734, -22.5867, 0.23", "-44.2398, 254.317, -22.3659, 0.91", "-44.7026, 255.851, -21.7601, 0.23", "-45.2445, 257.785, -20.9761, 1.13", "-45.8285, 260.023, -19.9937, 0.23", "-46.0325, 260.944, -19.605, 0.23", "-46.3476, 262.823, -18.8815, 0.68", "-46.572, 264.589, -18.2226, 0.23", "-46.6599, 265.569, -17.8851, 1.13", "-46.8145, 267.517, -17.3386, 0.23", "-46.9435, 268.469, -17.1173, 0.91", "-47.3551, 270.69, -16.7274, 0.23", "-47.4331, 271.012, -16.6951, 0.68", "-47.7105, 271.99, -16.6624, 0.23", "-48.029, 272.922, -16.6947, 0.23", "-48.6673, 274.521, -16.7993, 1.13", "-49.7909, 277.103, -17.0206, 0.23", "-50.3499, 278.318, -17.152, 0.91", "-50.7723, 279.241, -17.2558, 0.23", "-51.5451, 281.118, -17.3941, 0.68", "-52.0084, 282.233, -17.4863, 0.23", "-52.6945, 283.907, -17.6389, 1.13", "-53.8567, 286.812, -17.8398, 0.23", "-54.3378, 288.053, -17.9071, 0.68", "-55.1816, 290.427, -17.9701, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-41.5806, 247.106, -24.8619, 0.23", "-43.2083, 252.639, -24.2435, 0.23", "-44.0233, 255.195, -24.009, 0.23", "-44.5343, 256.798, -23.862, 0.91", "-45.3035, 259.21, -23.6406, 0.23", "-46.0813, 261.65, -23.4168, 0.91", "-46.791, 263.875, -23.2126, 0.23", "-47.3386, 265.953, -22.8954, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-110.153, 75.2286, -37.4011, 1.59", "-112.301, 76.37, -39.1782, 1.59", "-114.604, 77.5936, -41.0832, 0.23", "-115.621, 78.1342, -41.925, 0.68", "-117.32, 79.0366, -43.33, 0.23", "-118.927, 79.8906, -44.6596, 1.13", "-122.169, 81.6131, -47.3416, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-110.153, 75.2286, -37.4011, 1.36", "-111.691, 75.3669, -36.8238, 1.36", "-112.612, 75.4584, -36.5297, 0.45", "-114.514, 75.7, -35.9795, 1.13", "-117.677, 76.2947, -35.2046, 0.23", "-118.98, 76.5899, -34.9133, 1.13", "-121.766, 77.3328, -34.396, 0.23", "-122.308, 77.5247, -34.3235, 0.23", "-123.854, 78.1425, -34.1686, 1.13", "-126.236, 79.1971, -34.092, 0.23", "-126.92, 79.5179, -34.1198, 1.13", "-128.76, 80.3725, -34.1953, 0.23", "-130.2, 80.9675, -34.2381, 0.91", "-131.871, 81.4989, -34.3001, 0.23", "-133.217, 81.7509, -34.3607, 0.91", "-133.804, 81.7636, -34.3723, 0.23", "-135.345, 81.6913, -34.3951, 0.91", "-136.701, 81.4875, -34.3861, 0.23", "-138.04, 81.1686, -34.3906, 0.91", "-138.643, 80.989, -34.38, 0.23", "-140.826, 80.2266, -34.2093, 0.91" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_27", "dend_26", "dend_25", "dend_24", "dend_5", "dend_0", "dend_36", "dend_35", "dend_29", "dend_28", "dend_21", "dend_6", "dend_4", "dend_1", "dend_31", "dend_30", "dend_23", "dend_22", "dend_12", "dend_7", "dend_3", "dend_2", "dend_33", "dend_32", "dend_18", "dend_13", "dend_11", "dend_8", "dend_20", "dend_19", "dend_17", "dend_14", "dend_10", "dend_9", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_27", "dend_26", "dend_25", "dend_24", "dend_5", "dend_0", "dend_36", "dend_35", "dend_29", "dend_28", "dend_21", "dend_6", "dend_4", "dend_1", "dend_31", "dend_30", "dend_23", "dend_22", "dend_12", "dend_7", "dend_3", "dend_2", "dend_33", "dend_32", "dend_18", "dend_13", "dend_11", "dend_8", "dend_20", "dend_19", "dend_17", "dend_14", "dend_10", "dend_9", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_NBC_768f1bf7ac_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_5
create dend_21
public dend_21
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_24, dend_5, dend_0, dend_36, dend_35, dend_29, dend_28, dend_21, dend_6, dend_4, dend_1, dend_31, dend_30, dend_23, dend_22, dend_12, dend_7, dend_3, dend_2, dend_33, dend_32, dend_18, dend_13, dend_11, dend_8, dend_20, dend_19, dend_17, dend_14, dend_10, dend_9, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_24, dend_5, dend_0, dend_36, dend_35, dend_29, dend_28, dend_21, dend_6, dend_4, dend_1, dend_31, dend_30, dend_23, dend_22, dend_12, dend_7, dend_3, dend_2, dend_33, dend_32, dend_18, dend_13, dend_11, dend_8, dend_20, dend_19, dend_17, dend_14, dend_10, dend_9, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.4999998035292246)
    connect dend_27(0), soma_0(0.4999998035292246)
    connect dend_26(0), soma_0(0.4999998035292246)
    connect dend_25(0), soma_0(0.4999998035292246)
    connect dend_24(0), soma_0(0.4999998035292246)
    connect dend_5(0), soma_0(0.4999998035292246)
    connect dend_0(0), soma_0(0.4999998035292246)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 3.82702, -11.9208, 0.0, 3.744 ) }
    soma_0 { pt3dadd( 3.40576, -10.7308, 0.0, 6.66423 ) }
    soma_0 { pt3dadd( 2.9845, -9.54079, 0.0, 10.7621 ) }
    soma_0 { pt3dadd( 2.56323, -8.35078, 0.0, 12.5635 ) }
    soma_0 { pt3dadd( 2.14197, -7.16077, 0.0, 13.9114 ) }
    soma_0 { pt3dadd( 1.72071, -5.97076, 0.0, 14.8426 ) }
    soma_0 { pt3dadd( 1.29944, -4.78075, 0.0, 15.7513 ) }
    soma_0 { pt3dadd( 0.878178, -3.59074, 0.0, 16.4111 ) }
    soma_0 { pt3dadd( 0.456915, -2.40072, 0.0, 17.0427 ) }
    soma_0 { pt3dadd( 0.0356512, -1.21071, 0.0, 17.656 ) }
    soma_0 { pt3dadd( -0.385612, -0.0207042, 0.0, 17.803 ) }
    soma_0 { pt3dadd( -0.806876, 1.16931, 0.0, 17.8623 ) }
    soma_0 { pt3dadd( -1.22814, 2.35932, 0.0, 17.7834 ) }
    soma_0 { pt3dadd( -1.6494, 3.54933, 0.0, 17.4667 ) }
    soma_0 { pt3dadd( -2.07067, 4.73934, 0.0, 17.0149 ) }
    soma_0 { pt3dadd( -2.49193, 5.92935, 0.0, 16.3823 ) }
    soma_0 { pt3dadd( -2.91319, 7.11936, 0.0, 15.6225 ) }
    soma_0 { pt3dadd( -3.33446, 8.30937, 0.0, 13.9243 ) }
    soma_0 { pt3dadd( -3.75572, 9.49938, 0.0, 11.9305 ) }
    soma_0 { pt3dadd( -4.17698, 10.6894, 0.0, 9.23702 ) }
    soma_0 { pt3dadd( -4.59825, 11.8794, 0.0, 5.12736 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.70995, 7.45705, -10.13, 1.36 ) }
    dend_34 { pt3dadd( -3.42711, 7.2429, -12.9442, 1.36 ) }
    dend_34 { pt3dadd( -3.37983, 5.76655, -15.3315, 1.36 ) }
    dend_34 { pt3dadd( -3.03049, 4.39809, -16.9841, 1.13 ) }
    dend_34 { pt3dadd( -2.3488, 2.3722, -19.0443, 1.13 ) }
    dend_34 { pt3dadd( -1.57604, 0.033905, -21.2051, 1.13 ) }
    dend_34 { pt3dadd( -0.715651, -2.75251, -23.7207, 1.59 ) }
    dend_34 { pt3dadd( 0.70661, -7.40976, -27.5404, 0.91 ) }
    dend_34 { pt3dadd( 1.29186, -9.18528, -28.8583, 0.91 ) }
    dend_34 { pt3dadd( 1.96013, -10.8421, -29.9806, 0.91 ) }
    dend_34 { pt3dadd( 2.73598, -12.1066, -30.6968, 0.91 ) }
    dend_34 { pt3dadd( 1.38185, -11.9788, -31.0336, 0.91 ) }
    dend_34 { pt3dadd( -2.91129, -12.0046, -32.3744, 1.81 ) }
    dend_34 { pt3dadd( -7.11105, -11.8136, -33.4166, 0.91 ) }
    dend_34 { pt3dadd( -10.4571, -11.4394, -33.9716, 0.91 ) }
    dend_34 { pt3dadd( -7.47289, -11.5766, -34.5982, 0.91 ) }
    dend_34 { pt3dadd( -5.34883, -11.4513, -35.9759, 0.91 ) }
    dend_34 { pt3dadd( -1.99345, -11.4755, -38.1873, 2.27 ) }
    dend_34 { pt3dadd( 3.16509, -11.983, -41.312, 1.13 ) }
    dend_34 { pt3dadd( 6.09751, -12.4834, -43.0652, 0.68 ) }
    dend_34 { pt3dadd( 8.76704, -13.0081, -44.618, 0.68 ) }
    dend_34 { pt3dadd( 11.6818, -13.7273, -46.3692, 2.27 ) }
    dend_34 { pt3dadd( 15.057, -15.3813, -48.8394, 1.59 ) }
    dend_34 { pt3dadd( 16.6155, -17.0737, -50.2075, 1.13 ) }
    dend_34 { pt3dadd( 18.3013, -19.762, -51.67, 1.13 ) }
    dend_34 { pt3dadd( 19.6267, -22.0228, -52.802, 1.13 ) }
    dend_34 { pt3dadd( 20.8141, -24.5216, -54.14, 0.91 ) }
    dend_34 { pt3dadd( 21.7901, -27.3546, -56.0525, 1.59 ) }
    dend_34 { pt3dadd( 22.1875, -29.7613, -58.0686, 1.59 ) }
    dend_34 { pt3dadd( 22.2312, -31.9768, -60.1596, 1.59 ) }
    dend_34 { pt3dadd( 22.3413, -34.2494, -62.5, 1.59 ) }
    dend_34 { pt3dadd( 22.6417, -36.3055, -64.9315, 1.59 ) }
    dend_34 { pt3dadd( 23.2853, -38.6048, -68.1036, 1.59 ) }
    dend_34 { pt3dadd( 24.0087, -40.6544, -70.8421, 1.36 ) }
    dend_34 { pt3dadd( 24.551, -41.9793, -72.5047, 1.36 ) }
    dend_34 { pt3dadd( 25.5552, -44.3817, -75.2352, 1.36 ) }
    dend_34 { pt3dadd( 26.5359, -46.2641, -77.2785, 2.27 ) }
    dend_34 { pt3dadd( 28.0305, -48.7509, -79.8227, 2.27 ) }
    dend_34 { pt3dadd( 28.629, -51.2713, -82.1345, 0.68 ) }
    dend_34 { pt3dadd( 28.9858, -52.4765, -83.2982, 0.68 ) }
    dend_34 { pt3dadd( 27.5148, -54.5454, -85.1882, 0.68 ) }
    dend_34 { pt3dadd( 25.4411, -56.375, -86.7942, 2.04 ) }
    dend_34 { pt3dadd( 23.2113, -58.064, -88.26, 2.04 ) }
    dend_34 { pt3dadd( 19.448, -60.4058, -90.294, 1.13 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 65/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.79005, -10.003, 1.96, 3.18 ) }
    dend_27 { pt3dadd( 6.85434, -10.8059, 1.96, 3.18 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 67/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.01995, -11.383, 2.37, 0.91 ) }
    dend_26 { pt3dadd( -3.25355, -12.9089, 2.44522, 0.68 ) }
    dend_26 { pt3dadd( -3.46483, -14.1432, 2.41015, 0.91 ) }
    dend_26 { pt3dadd( -3.86159, -16.8954, 2.11673, 0.23 ) }
    dend_26 { pt3dadd( -4.0906, -19.0283, 1.85942, 0.23 ) }
    dend_26 { pt3dadd( -4.31947, -21.8375, 1.51253, 1.13 ) }
    dend_26 { pt3dadd( -4.53241, -24.4009, 1.18952, 1.13 ) }
    dend_26 { pt3dadd( -4.83406, -27.6643, 0.774865, 2.04 ) }
    dend_26 { pt3dadd( -5.0889, -30.0715, 0.490231, 0.23 ) }
    dend_26 { pt3dadd( -5.3323, -31.7444, 0.304463, 0.23 ) }
    dend_26 { pt3dadd( -5.63608, -33.238, 0.202085, 0.23 ) }
    dend_26 { pt3dadd( -5.97618, -34.7162, 0.194453, 0.23 ) }
    dend_26 { pt3dadd( -6.40059, -36.2948, 0.272956, 1.81 ) }
    dend_26 { pt3dadd( -7.13841, -38.3663, 0.490073, 2.72 ) }
    dend_26 { pt3dadd( -7.9637, -40.2964, 0.68363, 1.59 ) }
    dend_26 { pt3dadd( -8.8727, -42.1696, 0.767617, 0.23 ) }
    dend_26 { pt3dadd( -9.22893, -42.8661, 0.781987, 1.36 ) }
    dend_26 { pt3dadd( -10.264, -44.8748, 0.764364, 0.45 ) }
    dend_26 { pt3dadd( -10.8694, -46.0673, 0.746065, 1.36 ) }
    dend_26 { pt3dadd( -11.7658, -47.9427, 0.751118, 3.18 ) }
    dend_26 { pt3dadd( -12.5629, -49.6625, 0.775717, 3.63 ) }
    dend_26 { pt3dadd( -13.3287, -51.3687, 0.810616, 3.63 ) }
    dend_26 { pt3dadd( -14.564, -54.3528, 0.92715, 1.81 ) }
    dend_26 { pt3dadd( -15.5892, -57.085, 1.03075, 0.91 ) }
    dend_26 { pt3dadd( -16.7014, -60.2969, 1.09526, 3.4 ) }
    dend_26 { pt3dadd( -17.7861, -63.6387, 1.09658, 1.81 ) }
    dend_26 { pt3dadd( -18.2163, -65.1042, 1.06924, 0.23 ) }
    dend_26 { pt3dadd( -18.6105, -66.5687, 1.04389, 0.23 ) }
    dend_26 { pt3dadd( -19.1772, -68.8791, 1.01635, 2.27 ) }
    dend_26 { pt3dadd( -19.7173, -71.1581, 0.989352, 1.13 ) }
    dend_26 { pt3dadd( -20.1853, -73.4582, 0.976839, 2.95 ) }
    dend_26 { pt3dadd( -20.449, -75.5922, 1.01036, 0.91 ) }
    dend_26 { pt3dadd( -20.6515, -77.7019, 1.12896, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( -20.7267, -78.9116, 1.24677, 0.23 ) }
    dend_26 { pt3dadd( -20.6514, -81.0723, 1.59491, 2.27 ) }
    dend_26 { pt3dadd( -20.4046, -82.8239, 1.92272, 2.5 ) }
    dend_26 { pt3dadd( -19.9221, -84.9267, 2.34497, 0.45 ) }
    dend_26 { pt3dadd( -19.447, -86.5917, 2.664, 0.23 ) }
    dend_26 { pt3dadd( -19.2772, -87.1313, 2.74752, 0.23 ) }
    dend_26 { pt3dadd( -18.8666, -88.2072, 2.96067, 0.23 ) }
    dend_26 { pt3dadd( -18.4902, -89.0558, 3.16662, 0.23 ) }
    dend_26 { pt3dadd( -18.1322, -89.9111, 3.36551, 2.5 ) }
    dend_26 { pt3dadd( -17.7476, -91.0567, 3.51629, 3.18 ) }
    dend_26 { pt3dadd( -17.1301, -93.7857, 3.60663, 0.23 ) }
    dend_26 { pt3dadd( -16.887, -95.916, 3.57291, 0.23 ) }
    dend_26 { pt3dadd( -16.869, -96.701, 3.53207, 0.23 ) }
    dend_26 { pt3dadd( -16.9085, -98.1098, 3.42988, 0.23 ) }
    dend_26 { pt3dadd( -17.0401, -100.468, 3.21399, 2.27 ) }
    dend_26 { pt3dadd( -17.1897, -102.642, 2.9986, 0.23 ) }
    dend_26 { pt3dadd( -17.3184, -104.164, 2.81837, 0.23 ) }
    dend_26 { pt3dadd( -17.5512, -106.272, 2.55479, 2.95 ) }
    dend_26 { pt3dadd( -17.7108, -107.494, 2.41783, 2.95 ) }
    dend_26 { pt3dadd( -18.0344, -109.964, 2.21675, 0.23 ) }
    dend_26 { pt3dadd( -18.2616, -111.8, 2.10862, 1.36 ) }
    dend_26 { pt3dadd( -18.5624, -113.76, 1.98043, 0.45 ) }
    dend_26 { pt3dadd( -18.8209, -115.25, 1.85489, 0.45 ) }
    dend_26 { pt3dadd( -19.15, -117.305, 1.66936, 1.81 ) }
    dend_26 { pt3dadd( -19.4133, -119.181, 1.50499, 0.68 ) }
    dend_26 { pt3dadd( -19.6258, -120.692, 1.42361, 0.23 ) }
    dend_26 { pt3dadd( -19.8393, -122.369, 1.38272, 2.5 ) }
    dend_26 { pt3dadd( -20.2665, -125.578, 1.42142, 0.23 ) }
    dend_26 { pt3dadd( -20.4472, -127.147, 1.42978, 0.45 ) }
    dend_26 { pt3dadd( -20.5401, -127.797, 1.4087, 0.23 ) }
    dend_26 { pt3dadd( -21.0372, -129.999, 1.24869, 2.04 ) }
    dend_26 { pt3dadd( -21.2635, -130.737, 1.17156, 2.04 ) }
    dend_26 { pt3dadd( -22.5288, -133.824, 0.680909, 0.23 ) }
    dend_26 { pt3dadd( -23.3452, -135.432, 0.36077, 2.04 ) }
    dend_26 { pt3dadd( -24.424, -137.653, -0.165027, 0.23 ) }
    dend_26 { pt3dadd( -24.9412, -138.847, -0.47496, 0.23 ) }
    dend_26 { pt3dadd( -25.2514, -139.705, -0.741417, 2.04 ) }
    dend_26 { pt3dadd( -26.0861, -142.274, -1.55487, 0.23 ) }
    dend_26 { pt3dadd( -26.3459, -143.15, -1.81818, 1.13 ) }
    dend_26 { pt3dadd( -27.0365, -145.452, -2.42733, 0.23 ) }
    dend_26 { pt3dadd( -27.7027, -147.624, -3.01479, 2.04 ) }
    dend_26 { pt3dadd( -28.5096, -150.066, -3.69781, 0.23 ) }
    dend_26 { pt3dadd( -29.0147, -151.494, -4.09587, 1.81 ) }
    dend_26 { pt3dadd( -30.1717, -154.586, -4.8545, 0.23 ) }
    dend_26 { pt3dadd( -30.7237, -155.861, -5.13455, 1.13 ) }
    dend_26 { pt3dadd( -31.6687, -157.744, -5.53471, 0.23 ) }
    dend_26 { pt3dadd( -32.3796, -159.113, -5.8077, 0.23 ) }
    dend_26 { pt3dadd( -32.8112, -159.915, -5.92534, 0.23 ) }
    dend_26 { pt3dadd( -33.5312, -161.269, -6.11587, 0.91 ) }
    dend_26 { pt3dadd( -34.7667, -163.524, -6.36681, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 50/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.83995, -11.053, 1.13, 1.59 ) }
    dend_25 { pt3dadd( -1.92845, -11.527, 1.16482, 1.59 ) }
    dend_25 { pt3dadd( -2.16234, -12.3221, 1.25842, 0.68 ) }
    dend_25 { pt3dadd( -2.35571, -12.759, 1.33186, 0.91 ) }
    dend_25 { pt3dadd( -2.60038, -13.1721, 1.38818, 0.91 ) }
    dend_25 { pt3dadd( -3.24368, -14.2221, 1.49465, 1.59 ) }
    dend_25 { pt3dadd( -4.13043, -15.6829, 1.58815, 2.27 ) }
    dend_25 { pt3dadd( -4.55429, -16.3641, 1.61317, 2.72 ) }
    dend_25 { pt3dadd( -5.17389, -17.3808, 1.62243, 2.72 ) }
    dend_25 { pt3dadd( -5.86668, -18.6672, 1.57615, 1.81 ) }
    dend_25 { pt3dadd( -6.54689, -20.3134, 1.4139, 0.68 ) }
    dend_25 { pt3dadd( -6.67087, -21.0196, 1.28163, 0.68 ) }
    dend_25 { pt3dadd( -6.62433, -21.6992, 1.11204, 0.68 ) }
    dend_25 { pt3dadd( -6.43158, -22.4824, 0.91148, 0.68 ) }
    dend_25 { pt3dadd( -6.09677, -23.3973, 0.678037, 2.27 ) }
    dend_25 { pt3dadd( -5.6311, -24.3622, 0.43557, 2.27 ) }
    dend_25 { pt3dadd( -4.91805, -25.6319, 0.100396, 1.13 ) }
    dend_25 { pt3dadd( -4.18897, -26.8723, -0.215508, 2.72 ) }
    dend_25 { pt3dadd( -3.29386, -28.3685, -0.57488, 0.23 ) }
    dend_25 { pt3dadd( -2.98638, -28.8893, -0.693205, 0.23 ) }
    dend_25 { pt3dadd( -2.5252, -29.6469, -0.885923, 1.13 ) }
    dend_25 { pt3dadd( -2.29843, -29.9807, -0.984876, 1.13 ) }
    dend_25 { pt3dadd( -1.7323, -30.7042, -1.23766, 0.23 ) }
    dend_25 { pt3dadd( -0.950078, -31.6297, -1.59341, 2.04 ) }
    dend_25 { pt3dadd( -0.34757, -32.3095, -1.87075, 2.72 ) }
    dend_25 { pt3dadd( 0.821375, -33.5925, -2.44854, 0.23 ) }
    dend_25 { pt3dadd( 1.39793, -34.2193, -2.74864, 1.81 ) }
    dend_25 { pt3dadd( 2.14675, -35.0019, -3.15014, 1.81 ) }
    dend_25 { pt3dadd( 3.23463, -36.0757, -3.74637, 0.68 ) }
    dend_25 { pt3dadd( 3.76636, -36.5676, -4.04013, 1.59 ) }
    dend_25 { pt3dadd( 4.52493, -37.2365, -4.38436, 0.45 ) }
    dend_25 { pt3dadd( 5.03558, -37.6855, -4.56575, 0.91 ) }
    dend_25 { pt3dadd( 5.6859, -38.2686, -4.79203, 0.23 ) }
    dend_25 { pt3dadd( 6.19858, -38.7184, -4.96575, 1.81 ) }
    dend_25 { pt3dadd( 6.93902, -39.3706, -5.20814, 1.81 ) }
    dend_25 { pt3dadd( 8.23856, -40.5794, -5.62826, 0.68 ) }
    dend_25 { pt3dadd( 8.75798, -41.0961, -5.79311, 2.04 ) }
    dend_25 { pt3dadd( 9.83987, -42.2205, -6.1645, 0.23 ) }
    dend_25 { pt3dadd( 10.455, -42.8769, -6.39113, 2.04 ) }
    dend_25 { pt3dadd( 10.8429, -43.3061, -6.55698, 2.04 ) }
    dend_25 { pt3dadd( 11.9781, -44.6245, -7.06504, 0.23 ) }
    dend_25 { pt3dadd( 12.7355, -45.5317, -7.42378, 1.81 ) }
    dend_25 { pt3dadd( 13.6546, -46.6729, -7.81375, 0.23 ) }
    dend_25 { pt3dadd( 14.0122, -47.1448, -7.94522, 0.91 ) }
    dend_25 { pt3dadd( 14.6246, -47.9774, -8.18282, 0.23 ) }
    dend_25 { pt3dadd( 15.2969, -48.9177, -8.45727, 2.04 ) }
    dend_25 { pt3dadd( 16.0058, -49.979, -8.76487, 0.23 ) }
    dend_25 { pt3dadd( 16.611, -50.9263, -9.05081, 1.13 ) }
    dend_25 { pt3dadd( 16.9633, -51.558, -9.23402, 0.23 ) }
    dend_25 { pt3dadd( 17.4408, -52.5393, -9.50398, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( 17.7248, -53.2074, -9.67614, 1.81 ) }
    dend_25 { pt3dadd( 18.3023, -54.7386, -10.0862, 0.23 ) }
    dend_25 { pt3dadd( 18.5923, -55.5159, -10.2844, 1.13 ) }
    dend_25 { pt3dadd( 19.0718, -56.6735, -10.5794, 0.23 ) }
    dend_25 { pt3dadd( 19.3391, -57.2362, -10.7296, 1.81 ) }
    dend_25 { pt3dadd( 20.0882, -58.5701, -11.1376, 0.23 ) }
    dend_25 { pt3dadd( 20.7702, -59.5994, -11.5154, 2.04 ) }
    dend_25 { pt3dadd( 21.5578, -60.5701, -11.9432, 0.23 ) }
    dend_25 { pt3dadd( 22.2259, -61.2816, -12.2735, 0.23 ) }
    dend_25 { pt3dadd( 22.7968, -61.8048, -12.5393, 1.81 ) }
    dend_25 { pt3dadd( 24.1167, -62.8891, -13.1014, 0.23 ) }
    dend_25 { pt3dadd( 24.5914, -63.2406, -13.277, 1.13 ) }
    dend_25 { pt3dadd( 25.8569, -64.1305, -13.6886, 0.23 ) }
    dend_25 { pt3dadd( 26.7461, -64.782, -13.9793, 0.45 ) }
    dend_25 { pt3dadd( 27.2945, -65.1923, -14.1715, 0.23 ) }
    dend_25 { pt3dadd( 27.9977, -65.7081, -14.4257, 2.04 ) }
    dend_25 { pt3dadd( 29.6701, -66.8699, -15.0428, 0.23 ) }
    dend_25 { pt3dadd( 30.4096, -67.3886, -15.3413, 1.81 ) }
    dend_25 { pt3dadd( 31.9246, -68.446, -16.0104, 0.23 ) }
    dend_25 { pt3dadd( 32.7629, -69.0359, -16.4185, 1.36 ) }
    dend_25 { pt3dadd( 33.3833, -69.482, -16.7398, 1.36 ) }
    dend_25 { pt3dadd( 34.2124, -70.0966, -17.2141, 0.23 ) }
    dend_25 { pt3dadd( 35.1836, -70.8315, -17.8182, 0.23 ) }
    dend_25 { pt3dadd( 35.8384, -71.3312, -18.2014, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 24/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.32994, -10.703, 5.39, 1.13 ) }
    dend_24 { pt3dadd( -3.08265, -10.4322, 5.84152, 0.68 ) }
    dend_24 { pt3dadd( -4.2327, -9.97845, 6.7442, 0.68 ) }
    dend_24 { pt3dadd( -4.71245, -9.7732, 7.36578, 0.68 ) }
    dend_24 { pt3dadd( -5.37711, -9.51145, 8.64627, 0.68 ) }
    dend_24 { pt3dadd( -5.59908, -9.46025, 9.50871, 2.5 ) }
    dend_24 { pt3dadd( -5.93438, -9.5556, 11.5848, 2.5 ) }
    dend_24 { pt3dadd( -5.75857, -10.1456, 13.052, 0.91 ) }
    dend_24 { pt3dadd( -4.81142, -12.4567, 15.1172, 2.5 ) }
    dend_24 { pt3dadd( -4.07454, -14.388, 16.251, 0.68 ) }
    dend_24 { pt3dadd( -3.9998, -14.6306, 16.3554, 1.13 ) }
    dend_24 { pt3dadd( -3.64013, -16.0421, 16.7905, 0.23 ) }
    dend_24 { pt3dadd( -2.82222, -19.1891, 17.4449, 3.63 ) }
    dend_24 { pt3dadd( -2.14883, -21.8304, 17.745, 0.23 ) }
    dend_24 { pt3dadd( -1.99286, -22.5034, 17.8018, 1.13 ) }
    dend_24 { pt3dadd( -1.49248, -24.1708, 17.9836, 0.23 ) }
    dend_24 { pt3dadd( -0.789986, -25.6453, 18.1429, 0.45 ) }
    dend_24 { pt3dadd( 0.147513, -27.0839, 18.2779, 2.72 ) }
    dend_24 { pt3dadd( 1.25814, -28.0952, 18.3669, 1.59 ) }
    dend_24 { pt3dadd( 3.2448, -29.156, 18.5186, 2.5 ) }
    dend_24 { pt3dadd( 4.20911, -29.4614, 18.6156, 2.5 ) }
    dend_24 { pt3dadd( 5.5787, -29.6177, 18.7765, 2.5 ) }
    dend_24 { pt3dadd( 8.19827, -37.9661, 22.3824, 2.5 ) }
    dend_24 { pt3dadd( 9.63747, -47.1934, 23.9139, 2.5 ) }
    dend_24 { pt3dadd( 9.70959, -56.0876, 27.1462, 2.5 ) }
    dend_24 { pt3dadd( 10.9014, -65.0448, 29.9585, 2.5 ) }
    dend_24 { pt3dadd( 13.087, -73.7046, 33.0876, 2.5 ) }
    dend_24 { pt3dadd( 13.7882, -81.9001, 37.7676, 2.5 ) }
    dend_24 { pt3dadd( 15.2137, -89.9359, 42.5586, 2.5 ) }
    dend_24 { pt3dadd( 16.0641, -98.2943, 46.9146, 2.5 ) }
    dend_24 { pt3dadd( 18.6439, -106.452, 50.9588, 2.5 ) }
    dend_24 { pt3dadd( 22.2534, -114.261, 54.9027, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.70995, 9.17704, -10.6, 2.5 ) }
    dend_5 { pt3dadd( -2.68963, 11.6727, -9.56423, 2.5 ) }
    dend_5 { pt3dadd( -2.77156, 14.7405, -8.39032, 2.04 ) }
    dend_5 { pt3dadd( -2.90197, 17.3623, -7.44203, 1.81 ) }
    dend_5 { pt3dadd( -3.06048, 20.5491, -6.28938, 1.81 ) }
    dend_5 { pt3dadd( -3.21084, 23.572, -5.19602, 2.5 ) }
    dend_5 { pt3dadd( -3.39897, 27.3543, -3.82797, 2.5 ) }
    dend_5 { pt3dadd( -3.52307, 29.2346, -3.20794, 2.5 ) }
    dend_5 { pt3dadd( -3.70413, 31.5639, -2.45015, 3.18 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.68996, 7.48704, 1.94, 1.36 ) }
    dend_0 { pt3dadd( -8.84306, 8.12621, 1.30542, 1.13 ) }
    dend_0 { pt3dadd( -10.3648, 8.96187, 0.64382, 0.68 ) }
    dend_0 { pt3dadd( -12.0259, 9.88862, 0.00229664, 1.36 ) }
    dend_0 { pt3dadd( -13.3494, 10.6711, -0.464295, 2.04 ) }
    dend_0 { pt3dadd( -14.3866, 11.2937, -0.777482, 2.5 ) }
    dend_0 { pt3dadd( -15.4797, 11.9952, -1.07143, 2.5 ) }
    dend_0 { pt3dadd( -17.3904, 13.3594, -1.41747, 1.81 ) }
    dend_0 { pt3dadd( -18.4801, 14.2255, -1.51747, 1.13 ) }
    dend_0 { pt3dadd( -19.3863, 15.0804, -1.5317, 1.59 ) }
    dend_0 { pt3dadd( -21.0697, 17.0123, -1.52711, 0.91 ) }
    dend_0 { pt3dadd( -22.0521, 18.4298, -1.5508, 0.68 ) }
    dend_0 { pt3dadd( -22.8285, 19.8554, -1.63765, 0.68 ) }
    dend_0 { pt3dadd( -23.0874, 20.4784, -1.69698, 1.81 ) }
    dend_0 { pt3dadd( -23.6382, 22.0338, -1.88301, 2.5 ) }
    dend_0 { pt3dadd( -24.2405, 23.6936, -2.14364, 2.5 ) }
    dend_0 { pt3dadd( -25.0824, 25.8303, -2.56155, 0.91 ) }
    dend_0 { pt3dadd( -25.5714, 26.7627, -2.75403, 1.59 ) }
    dend_0 { pt3dadd( -26.183, 27.7099, -2.94244, 0.68 ) }
    dend_0 { pt3dadd( -26.6793, 28.3731, -3.03446, 0.68 ) }
    dend_0 { pt3dadd( -28.1454, 29.9191, -3.13627, 1.13 ) }
    dend_0 { pt3dadd( -29.2822, 30.8988, -3.15054, 0.23 ) }
    dend_0 { pt3dadd( -30.4871, 31.8401, -3.07081, 2.27 ) }
    dend_0 { pt3dadd( -31.7725, 32.8782, -2.93252, 3.18 ) }
    dend_0 { pt3dadd( -33.3206, 34.1914, -2.75775, 1.81 ) }
    dend_0 { pt3dadd( -35.1249, 35.8595, -2.55572, 0.45 ) }
    dend_0 { pt3dadd( -36.0068, 36.768, -2.45776, 0.45 ) }
    dend_0 { pt3dadd( -37.4366, 38.281, -2.32357, 1.59 ) }
    dend_0 { pt3dadd( -38.3834, 39.2558, -2.27181, 0.45 ) }
    dend_0 { pt3dadd( -39.0641, 39.8835, -2.26155, 0.45 ) }
    dend_0 { pt3dadd( -40.5685, 41.1817, -2.29044, 2.04 ) }
    dend_0 { pt3dadd( -40.7727, 41.3442, -2.3009, 3.18 ) }
    dend_0 { pt3dadd( -41.8646, 42.1026, -2.37834, 2.72 ) }
    dend_0 { pt3dadd( -44.0111, 43.305, -2.63183, 0.23 ) }
    dend_0 { pt3dadd( -45.5169, 43.9744, -2.7929, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( -46.1081, 44.1921, -2.86489, 2.04 ) }
    dend_0 { pt3dadd( -48.35, 44.8571, -3.24346, 0.23 ) }
    dend_0 { pt3dadd( -49.1958, 45.0806, -3.41053, 1.59 ) }
    dend_0 { pt3dadd( -50.6663, 45.4061, -3.73299, 2.04 ) }
    dend_0 { pt3dadd( -52.4918, 45.7464, -4.14681, 0.23 ) }
    dend_0 { pt3dadd( -54.3636, 46.0601, -4.65255, 0.23 ) }
    dend_0 { pt3dadd( -55.8115, 46.2936, -5.13374, 0.23 ) }
    dend_0 { pt3dadd( -56.5613, 46.4352, -5.45395, 1.81 ) }
    dend_0 { pt3dadd( -57.8522, 46.7606, -6.10693, 2.95 ) }
    dend_0 { pt3dadd( -59.2254, 47.2846, -6.97984, 1.59 ) }
    dend_0 { pt3dadd( -60.9551, 48.2032, -8.27656, 0.45 ) }
    dend_0 { pt3dadd( -61.8333, 48.8947, -9.03645, 0.45 ) }
    dend_0 { pt3dadd( -63.1156, 50.2379, -10.2618, 2.27 ) }
    dend_0 { pt3dadd( -63.3997, 50.583, -10.5494, 2.72 ) }
    dend_0 { pt3dadd( -64.2242, 51.6059, -11.357, 0.45 ) }
    dend_0 { pt3dadd( -65.2078, 52.7168, -12.1812, 1.13 ) }
    dend_0 { pt3dadd( -66.5409, 53.9933, -13.0861, 0.23 ) }
    dend_0 { pt3dadd( -67.669, 54.9439, -13.7976, 2.04 ) }
    dend_0 { pt3dadd( -68.8182, 55.7987, -14.4576, 2.04 ) }
    dend_0 { pt3dadd( -70.6255, 57.1173, -15.4528, 0.23 ) }
    dend_0 { pt3dadd( -71.5686, 57.7929, -15.9654, 0.23 ) }
    dend_0 { pt3dadd( -72.5418, 58.4368, -16.4936, 0.23 ) }
    dend_0 { pt3dadd( -73.6536, 59.0336, -17.0587, 0.23 ) }
    dend_0 { pt3dadd( -74.3862, 59.4131, -17.4311, 0.23 ) }
    dend_0 { pt3dadd( -75.461, 59.9824, -17.9873, 0.23 ) }
    dend_0 { pt3dadd( -77.1883, 60.9656, -18.8797, 2.04 ) }
    dend_0 { pt3dadd( -78.6115, 61.7592, -19.6147, 0.23 ) }
    dend_0 { pt3dadd( -80.2837, 62.5511, -20.3772, 2.27 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -4.59825, 11.8794, 0.0, 0.581371 ) }
    axon_0 { pt3dadd( -9.60386, 26.0196, 0.0, 0.581371 ) }
    axon_0 { pt3dadd( -14.6095, 40.1597, 0.0, 0.581371 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 31/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.448, -60.4058, -90.294, 1.13 ) }
    dend_36 { pt3dadd( 21.1651, -60.5629, -91.2937, 1.13 ) }
    dend_36 { pt3dadd( 22.9049, -60.8715, -92.3306, 1.81 ) }
    dend_36 { pt3dadd( 24.8768, -61.4989, -93.5831, 0.68 ) }
    dend_36 { pt3dadd( 25.7529, -61.8241, -94.1864, 0.68 ) }
    dend_36 { pt3dadd( 26.5077, -62.0722, -94.7591, 0.68 ) }
    dend_36 { pt3dadd( 27.3329, -62.2953, -95.4616, 0.68 ) }
    dend_36 { pt3dadd( 28.4417, -62.5138, -96.5733, 0.68 ) }
    dend_36 { pt3dadd( 29.3084, -62.6794, -97.6585, 0.68 ) }
    dend_36 { pt3dadd( 30.1822, -62.9373, -99.1892, 1.36 ) }
    dend_36 { pt3dadd( 30.9127, -63.2406, -100.835, 1.36 ) }
    dend_36 { pt3dadd( 31.3158, -63.5904, -102.251, 2.5 ) }
    dend_36 { pt3dadd( 31.3741, -64.3366, -104.316, 0.45 ) }
    dend_36 { pt3dadd( 31.161, -64.8711, -105.285, 0.45 ) }
    dend_36 { pt3dadd( 30.0945, -66.6644, -107.824, 1.13 ) }
    dend_36 { pt3dadd( 29.7124, -67.2513, -108.501, 1.13 ) }
    dend_36 { pt3dadd( 28.702, -68.7524, -109.899, 1.81 ) }
    dend_36 { pt3dadd( 27.3858, -70.7539, -111.405, 0.91 ) }
    dend_36 { pt3dadd( 26.8531, -71.5644, -111.93, 0.91 ) }
    dend_36 { pt3dadd( 26.0291, -73.0363, -112.877, 0.91 ) }
    dend_36 { pt3dadd( 26.0657, -73.3063, -113.279, 0.91 ) }
    dend_36 { pt3dadd( 26.5129, -73.2737, -114.377, 0.91 ) }
    dend_36 { pt3dadd( 26.9446, -73.0411, -115.572, 0.91 ) }
    dend_36 { pt3dadd( 27.1578, -72.8911, -116.384, 0.91 ) }
    dend_36 { pt3dadd( 27.3121, -72.6751, -118.626, 2.04 ) }
    dend_36 { pt3dadd( 27.0508, -72.9024, -122.009, 0.23 ) }
    dend_36 { pt3dadd( 26.9688, -73.0416, -122.891, 0.23 ) }
    dend_36 { pt3dadd( 26.8987, -73.4305, -124.726, 0.23 ) }
    dend_36 { pt3dadd( 26.9188, -73.8881, -126.523, 0.23 ) }
    dend_36 { pt3dadd( 26.9048, -74.2564, -127.808, 0.23 ) }
    dend_36 { pt3dadd( 26.8431, -74.7401, -129.265, 0.23 ) }
    dend_36 { pt3dadd( 26.7467, -75.1541, -130.865, 1.59 ) }
    dend_36 { pt3dadd( 26.6836, -75.3415, -132.533, 1.59 ) }
    dend_36 { pt3dadd( 26.7798, -75.4161, -134.049, 1.59 ) }
    dend_36 { pt3dadd( 26.9289, -75.5088, -136.764, 0.91 ) }
    dend_36 { pt3dadd( 26.8754, -75.5793, -138.063, 0.91 ) }
    dend_36 { pt3dadd( 26.5989, -75.7719, -139.328, 0.91 ) }
    dend_36 { pt3dadd( 25.8249, -76.7447, -141.152, 1.59 ) }
    dend_36 { pt3dadd( 25.1687, -78.3433, -142.644, 0.68 ) }
    dend_36 { pt3dadd( 25.0312, -79.3778, -143.285, 0.68 ) }
    dend_36 { pt3dadd( 25.0017, -80.3196, -143.725, 1.36 ) }
    dend_36 { pt3dadd( 24.8708, -81.7052, -144.316, 0.45 ) }
    dend_36 { pt3dadd( 24.5425, -83.2722, -145.135, 1.36 ) }
    dend_36 { pt3dadd( 23.864, -84.7573, -146.196, 0.45 ) }
    dend_36 { pt3dadd( 23.1057, -85.7606, -147.262, 0.45 ) }
    dend_36 { pt3dadd( 22.4431, -86.6837, -148.453, 2.04 ) }
    dend_36 { pt3dadd( 21.4257, -88.399, -150.635, 0.91 ) }
    dend_36 { pt3dadd( 20.5571, -89.9833, -152.531, 0.91 ) }
    dend_36 { pt3dadd( 20.3079, -90.3469, -152.948, 0.91 ) }
    dend_36 { pt3dadd( 19.8442, -90.9154, -153.556, 0.91 ) }
    dend_36 { pt3dadd( 18.3463, -92.3146, -155.254, 2.5 ) }
    dend_36 { pt3dadd( 17.3027, -93.0917, -156.542, 2.5 ) }
    dend_36 { pt3dadd( 16.5408, -93.2472, -157.325, 2.5 ) }
    dend_36 { pt3dadd( 15.7502, -93.0749, -157.995, 1.59 ) }
    dend_36 { pt3dadd( 14.9027, -92.6807, -158.737, 0.23 ) }
    dend_36 { pt3dadd( 12.6962, -91.143, -160.806, 1.81 ) }
    dend_36 { pt3dadd( 11.6472, -90.1337, -161.907, 0.91 ) }
    dend_36 { pt3dadd( 10.4104, -88.5256, -163.499, 1.81 ) }
    dend_36 { pt3dadd( 9.7351, -87.0255, -165.027, 0.91 ) }
    dend_36 { pt3dadd( 9.69662, -85.8246, -166.296, 0.23 ) }
    dend_36 { pt3dadd( 9.9171, -84.9822, -167.143, 1.13 ) }
    dend_36 { pt3dadd( 10.3879, -83.8235, -168.182, 0.23 ) }
    dend_36 { pt3dadd( 10.8607, -82.4703, -169.337, 2.27 ) }
    dend_36 { pt3dadd( 11.4014, -80.2093, -171.352, 1.13 ) }
    dend_36 { pt3dadd( 11.243, -78.184, -173.352, 0.45 ) }
    dend_36 { pt3dadd( 10.5884, -77.0097, -174.68, 2.27 ) }
    dend_36 { pt3dadd( 9.20406, -75.7013, -176.418, 1.13 ) }
    dend_36 { pt3dadd( 8.03471, -75.0336, -177.537, 1.13 ) }
    dend_36 { pt3dadd( 6.74053, -74.5945, -178.609, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 5.32655, -74.4164, -179.652, 1.13 ) }
    dend_36 { pt3dadd( 4.14163, -74.624, -180.729, 1.13 ) }
    dend_36 { pt3dadd( 3.42769, -74.9255, -181.619, 1.13 ) }
    dend_36 { pt3dadd( 3.11794, -75.1171, -182.33, 1.13 ) }
    dend_36 { pt3dadd( 3.70431, -73.9313, -183.729, 1.13 ) }
    dend_36 { pt3dadd( 4.25748, -73.1866, -184.492, 1.13 ) }
    dend_36 { pt3dadd( 5.29272, -71.7903, -185.807, 1.13 ) }
    dend_36 { pt3dadd( 5.90942, -70.9277, -186.549, 1.13 ) }
    dend_36 { pt3dadd( 7.21188, -68.89, -188.045, 0.23 ) }
    dend_36 { pt3dadd( 7.77239, -67.868, -188.666, 1.36 ) }
    dend_36 { pt3dadd( 9.08183, -64.8936, -190.076, 0.45 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 11/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 19.448, -60.4058, -90.294, 0.45 ) }
    dend_35 { pt3dadd( 18.1842, -60.7406, -90.0843, 0.45 ) }
    dend_35 { pt3dadd( 17.3277, -61.0347, -90.0922, 0.45 ) }
    dend_35 { pt3dadd( 16.7335, -61.2779, -90.1335, 0.45 ) }
    dend_35 { pt3dadd( 15.1691, -61.9285, -90.2835, 1.13 ) }
    dend_35 { pt3dadd( 12.3133, -63.2355, -90.7334, 0.23 ) }
    dend_35 { pt3dadd( 10.3814, -64.1884, -91.0177, 1.13 ) }
    dend_35 { pt3dadd( 7.66968, -65.5894, -91.4157, 0.45 ) }
    dend_35 { pt3dadd( 6.48295, -66.1947, -91.6006, 1.36 ) }
    dend_35 { pt3dadd( 5.05872, -66.963, -91.8516, 0.23 ) }
    dend_35 { pt3dadd( 3.33667, -68.0744, -92.2719, 0.23 ) }
    dend_35 { pt3dadd( 2.01549, -69.1733, -92.7294, 0.23 ) }
    dend_35 { pt3dadd( 0.427879, -70.6395, -93.2448, 1.13 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 6.85434, -10.8059, 1.96, 1.36 ) }
    dend_29 { pt3dadd( 8.51298, -12.7205, 0.0369142, 1.36 ) }
    dend_29 { pt3dadd( 10.3982, -14.8967, -2.14896, 1.36 ) }
    dend_29 { pt3dadd( 11.3958, -16.0482, -3.30553, 2.27 ) }
    dend_29 { pt3dadd( 12.4819, -17.3019, -4.5648, 2.27 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.85434, -10.8059, 1.96, 0.91 ) }
    dend_28 { pt3dadd( 6.43016, -12.7602, 4.05265, 0.91 ) }
    dend_28 { pt3dadd( 6.58905, -14.7328, 5.99155, 0.91 ) }
    dend_28 { pt3dadd( 6.85185, -16.1196, 7.26116, 0.23 ) }
    dend_28 { pt3dadd( 7.17539, -17.7178, 8.57641, 2.04 ) }
    dend_28 { pt3dadd( 7.49012, -19.6391, 9.97112, 2.95 ) }
    dend_28 { pt3dadd( 7.78596, -22.4451, 11.7943, 0.45 ) }
    dend_28 { pt3dadd( 7.89835, -23.2024, 12.1868, 0.23 ) }
    dend_28 { pt3dadd( 8.02056, -23.9969, 12.4937, 0.23 ) }
    dend_28 { pt3dadd( 8.52293, -26.3117, 13.2788, 2.04 ) }
    dend_28 { pt3dadd( 9.07438, -28.2473, 13.8042, 2.95 ) }
    dend_28 { pt3dadd( 9.58489, -29.9992, 14.2163, 2.95 ) }
    dend_28 { pt3dadd( 10.4781, -33.2218, 14.9258, 0.23 ) }
    dend_28 { pt3dadd( 10.8697, -34.5779, 15.2093, 1.13 ) }
    dend_28 { pt3dadd( 11.8795, -37.4767, 15.7459, 0.23 ) }
    dend_28 { pt3dadd( 13.194, -40.5391, 16.266, 0.23 ) }
    dend_28 { pt3dadd( 14.1404, -42.3132, 16.6004, 0.23 ) }
    dend_28 { pt3dadd( 15.1646, -43.9875, 16.9352, 1.81 ) }
    dend_28 { pt3dadd( 16.6089, -46.2681, 17.4132, 0.23 ) }
    dend_28 { pt3dadd( 17.774, -48.2137, 17.826, 2.04 ) }
    dend_28 { pt3dadd( 18.6181, -49.7976, 18.2058, 2.72 ) }
    dend_28 { pt3dadd( 20.1719, -52.589, 19.0361, 0.23 ) }
    dend_28 { pt3dadd( 20.8379, -53.6458, 19.3784, 0.91 ) }
    dend_28 { pt3dadd( 21.8177, -54.9686, 19.8008, 0.23 ) }
    dend_28 { pt3dadd( 23.1814, -56.5678, 20.3067, 2.95 ) }
    dend_28 { pt3dadd( 26.2976, -59.7879, 21.2778, 0.23 ) }
    dend_28 { pt3dadd( 27.9042, -61.0367, 21.5556, 2.5 ) }
    dend_28 { pt3dadd( 28.8191, -61.5339, 21.6013, 2.5 ) }
    dend_28 { pt3dadd( 32.4302, -62.8719, 21.5104, 0.23 ) }
    dend_28 { pt3dadd( 34.2675, -63.2827, 21.3416, 0.23 ) }
    dend_28 { pt3dadd( 36.965, -63.5477, 20.9069, 2.95 ) }
    dend_28 { pt3dadd( 41.6761, -63.6655, 19.9161, 0.23 ) }
    dend_28 { pt3dadd( 44.5981, -63.6463, 19.2229, 0.23 ) }
    dend_28 { pt3dadd( 46.9243, -63.5622, 18.6504, 0.91 ) }
    dend_28 { pt3dadd( 48.9759, -63.4172, 18.1162, 1.59 ) }
    dend_28 { pt3dadd( 51.3206, -63.3325, 17.499, 0.45 ) }
    dend_28 { pt3dadd( 58.8423, -71.8254, 20.5453, 0.45 ) }
    dend_28 { pt3dadd( 68.3991, -78.0259, 23.4097, 0.45 ) }
    dend_28 { pt3dadd( 77.5374, -85.2553, 24.8971, 0.45 ) }
    dend_28 { pt3dadd( 86.528, -92.8015, 25.3511, 0.45 ) }
    dend_28 { pt3dadd( 94.0088, -101.28, 28.5352, 0.45 ) }
    dend_28 { pt3dadd( 102.332, -108.696, 32.2374, 0.45 ) }
    dend_28 { pt3dadd( 111.024, -115.818, 35.66, 0.45 ) }
    dend_28 { pt3dadd( 119.835, -122.461, 39.6865, 0.45 ) }
    dend_28 { pt3dadd( 129.425, -128.273, 43.1859, 0.45 ) }
    dend_28 { pt3dadd( 140.376, -132.42, 44.1123, 0.45 ) }
    // Section: dend_21, id: dend_21, parent: dend_5 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.70413, 31.5639, -2.45015, 1.13 ) }
    dend_21 { pt3dadd( -1.71701, 31.677, -3.67426, 1.13 ) }
    dend_21 { pt3dadd( 1.22827, 32.1063, -5.06582, 0.91 ) }
    dend_21 { pt3dadd( 3.53924, 32.5167, -6.07243, 0.91 ) }
    dend_21 { pt3dadd( 5.46737, 32.8778, -6.83206, 0.91 ) }
    dend_21 { pt3dadd( 7.6758, 33.2549, -7.61913, 1.59 ) }
    dend_21 { pt3dadd( 9.88196, 33.6404, -8.36231, 1.59 ) }
    dend_21 { pt3dadd( 13.4013, 34.2957, -9.38786, 0.68 ) }
    dend_21 { pt3dadd( 15.6408, 34.8648, -9.91312, 0.68 ) }
    dend_21 { pt3dadd( 18.1186, 35.7319, -10.4989, 1.36 ) }
    dend_21 { pt3dadd( 20.5234, 36.8077, -11.0415, 0.45 ) }
    dend_21 { pt3dadd( 21.2361, 37.1666, -11.2043, 0.23 ) }
    dend_21 { pt3dadd( 21.9077, 37.5726, -11.3713, 0.23 ) }
    dend_21 { pt3dadd( 23.6883, 38.9839, -11.8447, 2.04 ) }
    dend_21 { pt3dadd( 24.3494, 39.6893, -12.0001, 2.04 ) }
    dend_21 { pt3dadd( 25.5493, 41.5069, -12.3521, 0.23 ) }
    dend_21 { pt3dadd( 25.7846, 41.923, -12.4218, 0.23 ) }
    dend_21 { pt3dadd( 26.3268, 42.6911, -12.5438, 0.23 ) }
    dend_21 { pt3dadd( 27.2267, 43.7414, -12.7715, 0.23 ) }
    dend_21 { pt3dadd( 28.7331, 45.1048, -13.151, 0.23 ) }
    dend_21 { pt3dadd( 29.8727, 46.048, -13.4504, 1.81 ) }
    dend_21 { pt3dadd( 31.7192, 47.4958, -13.9651, 2.27 ) }
    dend_21 { pt3dadd( 34.1686, 49.4666, -14.8605, 1.13 ) }
    dend_21 { pt3dadd( 35.3646, 50.4718, -15.3694, 0.23 ) }
    dend_21 { pt3dadd( 36.9251, 51.6984, -16.0688, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( 38.0582, 52.4833, -16.5811, 0.23 ) }
    dend_21 { pt3dadd( 39.5072, 53.4402, -17.2299, 2.04 ) }
    dend_21 { pt3dadd( 41.8582, 54.9406, -18.2522, 2.5 ) }
    dend_21 { pt3dadd( 42.8564, 55.5929, -18.6805, 2.5 ) }
    dend_21 { pt3dadd( 45.0559, 57.0117, -19.6097, 0.23 ) }
    dend_21 { pt3dadd( 46.2006, 57.724, -20.0897, 0.23 ) }
    dend_21 { pt3dadd( 47.1652, 58.243, -20.468, 0.23 ) }
    dend_21 { pt3dadd( 49.3137, 59.2402, -21.2658, 2.04 ) }
    dend_21 { pt3dadd( 51.4837, 60.0721, -21.9895, 2.72 ) }
    dend_21 { pt3dadd( 55.1951, 61.2239, -23.2376, 0.23 ) }
    dend_21 { pt3dadd( 56.6015, 61.594, -23.6896, 1.36 ) }
    dend_21 { pt3dadd( 58.3268, 61.9378, -24.1257, 0.23 ) }
    dend_21 { pt3dadd( 59.0508, 62.0492, -24.2563, 0.23 ) }
    dend_21 { pt3dadd( 60.0054, 62.1622, -24.3409, 0.23 ) }
    dend_21 { pt3dadd( 61.7873, 62.3146, -24.3347, 0.91 ) }
    dend_21 { pt3dadd( 63.9377, 62.4874, -24.205, 0.91 ) }
    dend_21 { pt3dadd( 66.4434, 62.6698, -24.0618, 1.81 ) }
    dend_21 { pt3dadd( 67.9637, 62.7252, -23.9918, 1.81 ) }
    dend_21 { pt3dadd( 70.168, 62.8231, -23.8984, 0.68 ) }
    dend_21 { pt3dadd( 71.9397, 62.9162, -23.8328, 1.59 ) }
    dend_21 { pt3dadd( 74.1442, 62.9478, -23.8536, 0.23 ) }
    dend_21 { pt3dadd( 75.3, 62.9513, -23.9299, 0.23 ) }
    dend_21 { pt3dadd( 77.6092, 62.9979, -24.1951, 0.23 ) }
    dend_21 { pt3dadd( 80.5058, 63.1374, -24.573, 1.59 ) }
    dend_21 { pt3dadd( 82.6735, 63.417, -24.866, 1.59 ) }
    dend_21 { pt3dadd( 85.1556, 63.8481, -25.204, 0.23 ) }
    dend_21 { pt3dadd( 87.8823, 64.3851, -25.5722, 0.23 ) }
    dend_21 { pt3dadd( 89.3634, 64.6791, -25.7695, 2.72 ) }
    dend_21 { pt3dadd( 91.5155, 65.0674, -26.0506, 2.72 ) }
    dend_21 { pt3dadd( 95.9069, 65.6764, -26.6177, 0.23 ) }
    dend_21 { pt3dadd( 97.1385, 65.8152, -26.7533, 0.91 ) }
    dend_21 { pt3dadd( 100.065, 66.096, -26.9949, 0.23 ) }
    dend_21 { pt3dadd( 102.168, 66.1881, -27.1715, 0.91 ) }
    dend_21 { pt3dadd( 105.395, 66.2591, -27.5489, 0.23 ) }
    dend_21 { pt3dadd( 105.395, 66.2591, -27.5489, 1.13 ) }
    dend_21 { pt3dadd( 107.412, 66.3494, -28.0293, 1.13 ) }
    dend_21 { pt3dadd( 108.54, 66.5101, -28.3673, 1.13 ) }
    dend_21 { pt3dadd( 110.199, 66.9419, -28.963, 0.23 ) }
    dend_21 { pt3dadd( 112.281, 67.706, -29.7944, 1.81 ) }
    dend_21 { pt3dadd( 113.463, 68.2634, -30.3022, 1.81 ) }
    dend_21 { pt3dadd( 116.57, 69.9453, -31.5756, 0.23 ) }
    dend_21 { pt3dadd( 117.995, 70.904, -32.163, 0.23 ) }
    dend_21 { pt3dadd( 118.957, 71.6541, -32.5295, 0.23 ) }
    dend_21 { pt3dadd( 119.457, 72.1028, -32.7199, 1.81 ) }
    dend_21 { pt3dadd( 120.605, 73.3102, -33.1967, 1.81 ) }
    dend_21 { pt3dadd( 122.571, 75.4745, -34.0886, 0.23 ) }
    dend_21 { pt3dadd( 123.806, 76.8128, -34.6459, 0.23 ) }
    dend_21 { pt3dadd( 125.232, 78.193, -35.367, 2.04 ) }
    dend_21 { pt3dadd( 126.52, 79.1893, -35.9298, 2.04 ) }
    dend_21 { pt3dadd( 129.949, 81.1598, -37.273, 0.23 ) }
    dend_21 { pt3dadd( 132.708, 82.3452, -38.2697, 1.81 ) }
    dend_21 { pt3dadd( 134.047, 82.7821, -38.7071, 1.81 ) }
    dend_21 { pt3dadd( 137.299, 83.6621, -39.649, 0.68 ) }
    dend_21 { pt3dadd( 140.896, 84.553, -40.5443, 2.27 ) }
    dend_21 { pt3dadd( 144.778, 85.3328, -41.3599, 0.23 ) }
    dend_21 { pt3dadd( 145.469, 85.4222, -41.4949, 0.23 ) }
    dend_21 { pt3dadd( 147.323, 85.6575, -41.9757, 1.36 ) }
    dend_21 { pt3dadd( 148.841, 85.8418, -42.4484, 0.23 ) }
    dend_21 { pt3dadd( 150.634, 86.0324, -43.0918, 0.91 ) }
    dend_21 { pt3dadd( 152.628, 86.1184, -43.9525, 0.23 ) }
    dend_21 { pt3dadd( 154.513, 85.987, -44.8091, 1.36 ) }
    dend_21 { pt3dadd( 157.455, 85.4531, -46.135, 0.23 ) }
    dend_21 { pt3dadd( 158.916, 85.1038, -46.8239, 1.13 ) }
    dend_21 { pt3dadd( 160.485, 84.6323, -47.541, 0.23 ) }
    dend_21 { pt3dadd( 163.306, 83.6885, -48.8548, 1.36 ) }
    dend_21 { pt3dadd( 165.235, 83.0628, -49.7852, 0.23 ) }
    dend_21 { pt3dadd( 167.298, 82.4391, -50.8536, 0.91 ) }
    dend_21 { pt3dadd( 169.489, 81.8482, -52.1004, 0.23 ) }
    dend_21 { pt3dadd( 171.829, 81.3889, -53.5525, 0.91 ) }
    dend_21 { pt3dadd( 173.661, 81.2421, -54.8011, 0.23 ) }
    dend_21 { pt3dadd( 175.623, 81.3444, -56.2014, 2.04 ) }
    dend_21 { pt3dadd( 177.614, 81.6752, -57.614, 0.23 ) }
    dend_21 { pt3dadd( 179.587, 82.237, -59.0671, 0.23 ) }
    dend_21 { pt3dadd( 180.715, 82.7623, -59.8943, 1.36 ) }
    dend_21 { pt3dadd( 182.997, 84.5939, -61.5247, 0.23 ) }
    dend_21 { pt3dadd( 183.548, 85.2922, -61.8755, 1.13 ) }
    dend_21 { pt3dadd( 184.146, 86.6408, -62.153, 0.23 ) }
    dend_21 { pt3dadd( 184.502, 88.4952, -62.1878, 1.13 ) }
    dend_21 { pt3dadd( 184.605, 91.2617, -61.9301, 0.23 ) }
    dend_21 { pt3dadd( 184.402, 93.8556, -61.5333, 0.23 ) }
    dend_21 { pt3dadd( 184.135, 95.4313, -61.1915, 0.23 ) }
    dend_21 { pt3dadd( 183.633, 97.6438, -60.706, 0.23 ) }
    dend_21 { pt3dadd( 183.264, 99.0021, -60.4472, 1.36 ) }
    dend_21 { pt3dadd( 182.925, 100.047, -60.2885, 1.36 ) }
    dend_21 { pt3dadd( 182.309, 101.917, -60.2397, 0.23 ) }
    dend_21 { pt3dadd( 181.997, 103.021, -60.2991, 0.91 ) }
    dend_21 { pt3dadd( 181.494, 105.033, -60.4518, 0.23 ) }
    dend_21 { pt3dadd( 181.07, 106.818, -60.6205, 1.13 ) }
    dend_21 { pt3dadd( 180.752, 108.526, -60.7734, 1.59 ) }
    dend_21 { pt3dadd( 180.061, 113.01, -61.1391, 0.23 ) }
    dend_21 { pt3dadd( 179.716, 116.014, -61.3538, 0.91 ) }
    dend_21 { pt3dadd( 179.511, 118.322, -61.484, 0.23 ) }
    dend_21 { pt3dadd( 179.417, 119.836, -61.5381, 0.91 ) }
    dend_21 { pt3dadd( 179.285, 122.21, -61.6203, 0.23 ) }
    dend_21 { pt3dadd( 179.213, 123.735, -61.6938, 0.23 ) }
    dend_21 { pt3dadd( 179.176, 125.598, -61.8008, 0.91 ) }
    dend_21 { pt3dadd( 179.192, 127.189, -62.0068, 0.23 ) }
    dend_21 { pt3dadd( 179.224, 129.05, -62.3287, 1.13 ) }
    dend_21 { pt3dadd( 179.271, 131.318, -62.7935, 0.23 ) }
    dend_21 { pt3dadd( 179.25, 132.044, -62.9539, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( 179.161, 133.809, -63.3689, 0.23 ) }
    dend_21 { pt3dadd( 179.108, 134.93, -63.6706, 0.23 ) }
    dend_21 { pt3dadd( 179.092, 136.76, -64.2071, 2.04 ) }
    dend_21 { pt3dadd( 179.136, 138.311, -64.646, 2.72 ) }
    dend_21 { pt3dadd( 179.074, 141.443, -65.4425, 0.23 ) }
    dend_21 { pt3dadd( 178.991, 142.604, -65.7336, 0.23 ) }
    dend_21 { pt3dadd( 178.807, 144.335, -66.1361, 0.23 ) }
    dend_21 { pt3dadd( 178.59, 146.414, -66.6228, 1.13 ) }
    dend_21 { pt3dadd( 178.415, 148.671, -67.1342, 0.23 ) }
    dend_21 { pt3dadd( 178.207, 151.28, -67.7516, 0.23 ) }
    dend_21 { pt3dadd( 178.205, 152.412, -68.0168, 0.23 ) }
    dend_21 { pt3dadd( 178.24, 154.693, -68.4392, 2.04 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 12/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.70413, 31.5639, -2.45015, 2.04 ) }
    dend_6 { pt3dadd( -5.00354, 33.0759, -2.33684, 2.04 ) }
    dend_6 { pt3dadd( -6.43677, 34.7437, -2.21187, 1.13 ) }
    dend_6 { pt3dadd( -7.5281, 36.0136, -2.1167, 1.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -80.2837, 62.5511, -20.3772, 0.23 ) }
    dend_4 { pt3dadd( -80.9979, 63.7042, -21.131, 0.23 ) }
    dend_4 { pt3dadd( -81.7577, 64.8834, -21.8685, 1.13 ) }
    dend_4 { pt3dadd( -83.3253, 66.9807, -23.1093, 0.23 ) }
    dend_4 { pt3dadd( -84.4192, 68.3303, -23.8617, 1.13 ) }
    dend_4 { pt3dadd( -85.583, 69.7668, -24.6746, 0.23 ) }
    dend_4 { pt3dadd( -86.6576, 71.1062, -25.4141, 1.59 ) }
    dend_4 { pt3dadd( -87.2715, 71.8822, -25.7841, 1.59 ) }
    dend_4 { pt3dadd( -88.514, 73.4481, -26.5413, 0.23 ) }
    dend_4 { pt3dadd( -89.5625, 74.6818, -27.11, 0.91 ) }
    dend_4 { pt3dadd( -90.7954, 76.0959, -27.7906, 0.23 ) }
    dend_4 { pt3dadd( -91.5298, 76.8233, -28.1464, 0.23 ) }
    dend_4 { pt3dadd( -93.1012, 78.16, -28.8376, 1.81 ) }
    dend_4 { pt3dadd( -94.8908, 79.6227, -29.584, 0.23 ) }
    dend_4 { pt3dadd( -95.7202, 80.213, -29.915, 0.91 ) }
    dend_4 { pt3dadd( -97.4404, 81.2057, -30.5098, 0.23 ) }
    dend_4 { pt3dadd( -99.2459, 82.0484, -31.0543, 1.13 ) }
    dend_4 { pt3dadd( -101.241, 82.829, -31.6248, 0.23 ) }
    dend_4 { pt3dadd( -103.385, 83.5396, -32.1752, 0.68 ) }
    dend_4 { pt3dadd( -105.21, 84.1036, -32.5651, 0.23 ) }
    dend_4 { pt3dadd( -106.658, 84.5647, -32.9125, 1.81 ) }
    dend_4 { pt3dadd( -108.721, 85.1846, -33.4392, 0.23 ) }
    dend_4 { pt3dadd( -109.951, 85.5249, -33.7702, 0.91 ) }
    dend_4 { pt3dadd( -111.515, 85.8574, -34.1859, 0.23 ) }
    dend_4 { pt3dadd( -112.307, 85.9762, -34.4015, 1.59 ) }
    dend_4 { pt3dadd( -114.539, 86.377, -35.1444, 0.23 ) }
    dend_4 { pt3dadd( -115.643, 86.565, -35.584, 1.13 ) }
    dend_4 { pt3dadd( -116.817, 86.7196, -36.1317, 0.23 ) }
    dend_4 { pt3dadd( -117.9, 86.8377, -36.7003, 0.23 ) }
    dend_4 { pt3dadd( -120.076, 87.0899, -37.8706, 1.59 ) }
    dend_4 { pt3dadd( -122.14, 87.3341, -38.9965, 0.23 ) }
    dend_4 { pt3dadd( -123.074, 87.4277, -39.4811, 1.13 ) }
    dend_4 { pt3dadd( -124.156, 87.5435, -40.0321, 0.23 ) }
    dend_4 { pt3dadd( -125.634, 87.7102, -40.7503, 1.13 ) }
    dend_4 { pt3dadd( -127.294, 87.8862, -41.4337, 0.23 ) }
    dend_4 { pt3dadd( -128.908, 88.0321, -41.9484, 0.91 ) }
    dend_4 { pt3dadd( -130.304, 88.1669, -42.2199, 0.23 ) }
    dend_4 { pt3dadd( -131.593, 88.3274, -42.3708, 0.23 ) }
    dend_4 { pt3dadd( -133.568, 88.6679, -42.4305, 1.36 ) }
    dend_4 { pt3dadd( -136.061, 89.2398, -42.2368, 0.45 ) }
    dend_4 { pt3dadd( -137.966, 89.831, -41.9384, 1.36 ) }
    dend_4 { pt3dadd( -139.981, 90.6623, -41.4537, 0.23 ) }
    dend_4 { pt3dadd( -141.041, 91.2187, -41.14, 0.23 ) }
    dend_4 { pt3dadd( -142.23, 92.0203, -40.7173, 0.91 ) }
    dend_4 { pt3dadd( -144.8, 94.1268, -39.6553, 0.23 ) }
    dend_4 { pt3dadd( -146.081, 95.3997, -39.0857, 1.13 ) }
    dend_4 { pt3dadd( -147.324, 96.8694, -38.6256, 0.23 ) }
    dend_4 { pt3dadd( -148.062, 97.9142, -38.4656, 2.04 ) }
    dend_4 { pt3dadd( -149.136, 99.8768, -38.5971, 0.23 ) }
    dend_4 { pt3dadd( -149.599, 100.951, -38.8669, 0.23 ) }
    dend_4 { pt3dadd( -149.945, 102.066, -39.3255, 0.23 ) }
    dend_4 { pt3dadd( -150.584, 104.415, -40.4998, 0.23 ) }
    dend_4 { pt3dadd( -150.81, 105.262, -40.9691, 1.81 ) }
    dend_4 { pt3dadd( -151.944, 108.654, -42.9993, 0.23 ) }
    dend_4 { pt3dadd( -152.353, 109.624, -43.6339, 1.36 ) }
    dend_4 { pt3dadd( -153.187, 111.206, -44.7039, 0.23 ) }
    dend_4 { pt3dadd( -153.393, 111.507, -44.9014, 0.23 ) }
    dend_4 { pt3dadd( -154.439, 112.582, -45.5338, 1.36 ) }
    dend_4 { pt3dadd( -156.209, 113.885, -46.2942, 0.45 ) }
    dend_4 { pt3dadd( -157.485, 114.492, -46.6674, 1.13 ) }
    dend_4 { pt3dadd( -159.299, 115.186, -47.2093, 0.23 ) }
    dend_4 { pt3dadd( -160.795, 115.683, -47.6405, 0.68 ) }
    dend_4 { pt3dadd( -162.656, 116.286, -48.1779, 1.13 ) }
    dend_4 { pt3dadd( -163.873, 116.655, -48.5167, 0.23 ) }
    dend_4 { pt3dadd( -165.321, 117.076, -48.909, 0.68 ) }
    dend_4 { pt3dadd( -167.579, 117.717, -49.512, 0.23 ) }
    dend_4 { pt3dadd( -168.609, 117.959, -49.7878, 0.91 ) }
    dend_4 { pt3dadd( -169.392, 118.097, -50.0035, 0.23 ) }
    dend_4 { pt3dadd( -170.597, 118.303, -50.3337, 0.91 ) }
    dend_4 { pt3dadd( -172.116, 118.547, -50.7459, 0.23 ) }
    dend_4 { pt3dadd( -173.133, 118.682, -50.9965, 0.91 ) }
    dend_4 { pt3dadd( -174.891, 118.859, -51.3866, 0.23 ) }
    dend_4 { pt3dadd( -175.93, 118.961, -51.625, 1.59 ) }
    dend_4 { pt3dadd( -176.507, 119.041, -51.7683, 1.59 ) }
    dend_4 { pt3dadd( -178.954, 119.524, -52.4418, 0.23 ) }
    dend_4 { pt3dadd( -180.18, 119.857, -52.784, 0.91 ) }
    dend_4 { pt3dadd( -182.57, 120.732, -53.4883, 0.68 ) }
    dend_4 { pt3dadd( -183.452, 121.168, -53.7579, 0.23 ) }
    dend_4 { pt3dadd( -185.108, 122.152, -54.2566, 1.13 ) }
    dend_4 { pt3dadd( -186.106, 122.843, -54.5361, 0.23 ) }
    dend_4 { pt3dadd( -187.571, 124.154, -54.891, 0.91 ) }
    dend_4 { pt3dadd( -188.653, 125.418, -55.1264, 0.23 ) }
    dend_4 { pt3dadd( -189.336, 126.506, -55.2319, 1.13 ) }
    dend_4 { pt3dadd( -189.693, 127.254, -55.2631, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -190.128, 128.579, -55.24, 0.23 ) }
    dend_4 { pt3dadd( -190.496, 130.151, -55.2125, 1.13 ) }
    dend_4 { pt3dadd( -190.694, 131.439, -55.2126, 0.23 ) }
    dend_4 { pt3dadd( -190.869, 132.742, -55.2303, 0.68 ) }
    dend_4 { pt3dadd( -191.063, 134.33, -55.3174, 0.23 ) }
    dend_4 { pt3dadd( -191.208, 135.999, -55.4821, 1.13 ) }
    dend_4 { pt3dadd( -191.33, 137.865, -55.7331, 0.45 ) }
    dend_4 { pt3dadd( -191.397, 138.814, -55.8881, 1.81 ) }
    dend_4 { pt3dadd( -191.478, 140.847, -56.2297, 0.23 ) }
    dend_4 { pt3dadd( -191.492, 142.592, -56.5287, 0.23 ) }
    dend_4 { pt3dadd( -191.434, 143.952, -56.7545, 0.23 ) }
    dend_4 { pt3dadd( -191.359, 144.903, -56.8903, 0.23 ) }
    dend_4 { pt3dadd( -191.191, 146.163, -57.0235, 1.36 ) }
    dend_4 { pt3dadd( -190.742, 148.879, -57.2411, 0.23 ) }
    dend_4 { pt3dadd( -190.56, 149.859, -57.2883, 0.23 ) }
    dend_4 { pt3dadd( -190.303, 151.484, -57.3478, 0.91 ) }
    dend_4 { pt3dadd( -190.119, 153.093, -57.4244, 0.23 ) }
    dend_4 { pt3dadd( -189.965, 155.724, -57.6191, 0.91 ) }
    dend_4 { pt3dadd( -189.972, 157.645, -57.8356, 0.23 ) }
    dend_4 { pt3dadd( -190.051, 159.244, -58.0448, 0.91 ) }
    dend_4 { pt3dadd( -190.274, 162.051, -58.4388, 0.23 ) }
    dend_4 { pt3dadd( -190.42, 163.144, -58.6154, 1.13 ) }
    dend_4 { pt3dadd( -190.695, 164.732, -58.9295, 0.23 ) }
    dend_4 { pt3dadd( -191.036, 165.96, -59.24, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 24/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -80.2837, 62.5511, -20.3772, 0.23 ) }
    dend_1 { pt3dadd( -81.6825, 62.1902, -20.5654, 0.23 ) }
    dend_1 { pt3dadd( -82.3579, 61.9622, -20.597, 0.68 ) }
    dend_1 { pt3dadd( -83.7705, 61.4649, -20.6427, 0.23 ) }
    dend_1 { pt3dadd( -85.233, 60.95, -20.69, 1.13 ) }
    dend_1 { pt3dadd( -86.9939, 60.33, -20.7469, 0.23 ) }
    dend_1 { pt3dadd( -87.9237, 60.0027, -20.777, 0.91 ) }
    dend_1 { pt3dadd( -89.3818, 59.4354, -20.7634, 0.23 ) }
    dend_1 { pt3dadd( -90.5297, 58.9361, -20.6863, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 33/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -14.6095, 40.1597, 0.0, 0.213235 ) }
    axon_1 { pt3dadd( -19.6151, 54.2998, 0.0, 0.213235 ) }
    axon_1 { pt3dadd( -24.6207, 68.44, 0.0, 0.213235 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 36/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 12.4819, -17.3019, -4.5648, 0.23 ) }
    dend_31 { pt3dadd( 11.9425, -17.2828, -4.81275, 0.23 ) }
    dend_31 { pt3dadd( 9.90648, -17.4071, -5.8272, 0.23 ) }
    dend_31 { pt3dadd( 8.03288, -17.9275, -6.81984, 0.23 ) }
    dend_31 { pt3dadd( 6.18673, -18.7544, -7.89147, 1.13 ) }
    dend_31 { pt3dadd( 4.74523, -19.6384, -8.82345, 1.59 ) }
    dend_31 { pt3dadd( 3.40497, -21.0056, -9.90534, 0.68 ) }
    dend_31 { pt3dadd( 4.44455, -22.844, -10.2925, 1.36 ) }
    dend_31 { pt3dadd( 6.69802, -25.5749, -10.7905, 0.45 ) }
    dend_31 { pt3dadd( 8.25387, -27.2829, -11.1093, 0.45 ) }
    dend_31 { pt3dadd( 10.2624, -29.3832, -11.47, 1.36 ) }
    dend_31 { pt3dadd( 11.98, -31.1105, -11.7361, 1.81 ) }
    dend_31 { pt3dadd( 14.2279, -33.2797, -11.9928, 0.91 ) }
    dend_31 { pt3dadd( 15.903, -34.8474, -12.157, 0.23 ) }
    dend_31 { pt3dadd( 16.4263, -35.3554, -12.217, 0.23 ) }
    dend_31 { pt3dadd( 17.5364, -36.8608, -12.3847, 0.23 ) }
    dend_31 { pt3dadd( 18.3198, -38.3686, -12.5271, 0.23 ) }
    dend_31 { pt3dadd( 19.1209, -40.3528, -12.9764, 0.23 ) }
    dend_31 { pt3dadd( 19.5503, -41.5931, -13.2473, 2.04 ) }
    dend_31 { pt3dadd( 20.2847, -43.6433, -13.6491, 2.95 ) }
    dend_31 { pt3dadd( 21.267, -46.2727, -14.1389, 1.81 ) }
    dend_31 { pt3dadd( 21.9999, -48.1835, -14.4497, 1.81 ) }
    dend_31 { pt3dadd( 23.6833, -52.8271, -15.3138, 0.45 ) }
    dend_31 { pt3dadd( 24.5913, -55.6056, -15.8652, 2.27 ) }
    dend_31 { pt3dadd( 25.206, -58.0252, -16.3388, 2.72 ) }
    dend_31 { pt3dadd( 25.5596, -60.0277, -16.7264, 2.72 ) }
    dend_31 { pt3dadd( 26.1204, -64.9703, -17.6337, 0.23 ) }
    dend_31 { pt3dadd( 26.43, -68.7469, -18.2447, 2.72 ) }
    dend_31 { pt3dadd( 26.5022, -69.9514, -18.395, 2.72 ) }
    dend_31 { pt3dadd( 26.7882, -74.3234, -19.1726, 0.23 ) }
    dend_31 { pt3dadd( 26.8703, -75.8793, -19.3966, 0.23 ) }
    dend_31 { pt3dadd( 26.9446, -77.487, -19.5495, 0.23 ) }
    dend_31 { pt3dadd( 26.9803, -78.9561, -19.6162, 0.23 ) }
    dend_31 { pt3dadd( 26.9993, -80.4784, -19.6091, 2.04 ) }
    dend_31 { pt3dadd( 26.9866, -84.1506, -19.5639, 0.91 ) }
    dend_31 { pt3dadd( 27.1078, -88.6374, -19.4686, 2.72 ) }
    dend_31 { pt3dadd( 27.2315, -92.9829, -19.495, 0.23 ) }
    dend_31 { pt3dadd( 27.209, -94.2151, -19.559, 0.23 ) }
    dend_31 { pt3dadd( 27.1342, -95.1472, -19.6439, 0.23 ) }
    dend_31 { pt3dadd( 26.8807, -96.9546, -19.8779, 0.23 ) }
    dend_31 { pt3dadd( 26.3501, -99.5683, -20.4817, 0.23 ) }
    dend_31 { pt3dadd( 25.8361, -102.482, -21.4866, 2.27 ) }
    dend_31 { pt3dadd( 25.4593, -105.271, -22.8096, 0.45 ) }
    dend_31 { pt3dadd( 25.356, -106.356, -23.3763, 1.36 ) }
    dend_31 { pt3dadd( 25.2325, -108.514, -24.5475, 1.81 ) }
    dend_31 { pt3dadd( 25.1792, -112.387, -26.5794, 0.68 ) }
    dend_31 { pt3dadd( 25.1841, -114.201, -27.4833, 2.95 ) }
    dend_31 { pt3dadd( 25.4408, -119.515, -29.8547, 0.23 ) }
    dend_31 { pt3dadd( 25.6079, -121.326, -30.6243, 0.91 ) }
    dend_31 { pt3dadd( 25.8452, -123.011, -31.3043, 0.23 ) }
    dend_31 { pt3dadd( 26.4946, -126.429, -32.5385, 2.27 ) }
    dend_31 { pt3dadd( 26.7968, -127.931, -32.9537, 0.23 ) }
    dend_31 { pt3dadd( 27.0836, -129.819, -33.4562, 1.36 ) }
    dend_31 { pt3dadd( 27.3832, -132.794, -34.1362, 0.23 ) }
    dend_31 { pt3dadd( 27.4683, -134.353, -34.5702, 0.23 ) }
    dend_31 { pt3dadd( 27.4583, -135.519, -34.9466, 0.23 ) }
    dend_31 { pt3dadd( 27.2559, -138.229, -35.8493, 2.27 ) }
    dend_31 { pt3dadd( 26.9446, -141.597, -36.8954, 0.23 ) }
    dend_31 { pt3dadd( 26.8235, -143.053, -37.2931, 0.23 ) }
    dend_31 { pt3dadd( 26.626, -145.063, -37.7467, 0.23 ) }
    dend_31 { pt3dadd( 26.5216, -145.887, -37.9206, 2.27 ) }
    dend_31 { pt3dadd( 26.0353, -150.541, -38.7891, 0.23 ) }
    dend_31 { pt3dadd( 25.9291, -153.07, -39.171, 0.23 ) }
    dend_31 { pt3dadd( 25.9211, -155.397, -39.5134, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 25.9586, -157.549, -39.8965, 0.23 ) }
    dend_31 { pt3dadd( 25.9558, -159.037, -40.1731, 0.23 ) }
    dend_31 { pt3dadd( 25.9381, -161.322, -40.6831, 2.04 ) }
    dend_31 { pt3dadd( 25.9416, -163.294, -41.1887, 2.04 ) }
    dend_31 { pt3dadd( 25.9227, -166.755, -42.2713, 0.23 ) }
    dend_31 { pt3dadd( 25.904, -167.272, -42.4605, 0.23 ) }
    dend_31 { pt3dadd( 25.8336, -169.844, -43.5342, 2.04 ) }
    dend_31 { pt3dadd( 25.7526, -174.232, -45.5593, 0.23 ) }
    dend_31 { pt3dadd( 25.7049, -175.342, -46.0963, 1.81 ) }
    dend_31 { pt3dadd( 25.4808, -178.687, -47.6978, 0.68 ) }
    dend_31 { pt3dadd( 25.4407, -179.888, -48.2414, 1.36 ) }
    dend_31 { pt3dadd( 25.4765, -182.435, -49.4819, 0.45 ) }
    dend_31 { pt3dadd( 25.6341, -185.29, -51.0281, 2.5 ) }
    dend_31 { pt3dadd( 25.7602, -186.702, -51.7773, 2.5 ) }
    dend_31 { pt3dadd( 26.0441, -189.343, -53.1242, 0.23 ) }
    dend_31 { pt3dadd( 26.2779, -191.017, -53.8337, 0.23 ) }
    dend_31 { pt3dadd( 26.7861, -194.159, -55.0572, 2.27 ) }
    dend_31 { pt3dadd( 27.3059, -197.444, -56.2708, 0.23 ) }
    dend_31 { pt3dadd( 27.6076, -199.333, -56.9352, 1.13 ) }
    dend_31 { pt3dadd( 28.0269, -201.597, -57.6824, 0.23 ) }
    dend_31 { pt3dadd( 28.4825, -204.398, -58.5241, 2.04 ) }
    dend_31 { pt3dadd( 28.7652, -206.516, -59.0741, 1.13 ) }
    dend_31 { pt3dadd( 29.0484, -209.768, -59.8091, 0.23 ) }
    dend_31 { pt3dadd( 29.1602, -211.343, -60.1661, 1.81 ) }
    dend_31 { pt3dadd( 29.2803, -213.905, -60.9685, 0.23 ) }
    dend_31 { pt3dadd( 29.3894, -216.008, -61.747, 0.23 ) }
    dend_31 { pt3dadd( 29.6391, -218.815, -62.9048, 2.04 ) }
    dend_31 { pt3dadd( 29.9907, -221.194, -63.8773, 0.23 ) }
    dend_31 { pt3dadd( 30.507, -223.331, -64.8289, 2.04 ) }
    dend_31 { pt3dadd( 31.7415, -226.706, -66.4607, 0.23 ) }
    dend_31 { pt3dadd( 32.55, -228.425, -67.3144, 1.59 ) }
    dend_31 { pt3dadd( 33.5776, -230.32, -68.2049, 0.45 ) }
    dend_31 { pt3dadd( 34.8107, -232.39, -69.1584, 1.59 ) }
    dend_31 { pt3dadd( 36.6248, -235.101, -70.271, 0.45 ) }
    dend_31 { pt3dadd( 38.1477, -237.291, -71.0532, 1.36 ) }
    dend_31 { pt3dadd( 39.2312, -238.911, -71.5028, 0.45 ) }
    dend_31 { pt3dadd( 40.4665, -240.924, -71.9048, 1.13 ) }
    dend_31 { pt3dadd( 42.2043, -244.252, -72.4176, 0.23 ) }
    dend_31 { pt3dadd( 43.5292, -247.177, -72.7168, 0.91 ) }
    dend_31 { pt3dadd( 44.1314, -248.601, -72.8469, 0.23 ) }
    dend_31 { pt3dadd( 44.879, -250.418, -73.047, 1.59 ) }
    dend_31 { pt3dadd( 46.4756, -254.529, -73.5654, 0.23 ) }
    dend_31 { pt3dadd( 47.8325, -258.407, -74.086, 1.81 ) }
    dend_31 { pt3dadd( 48.662, -261.557, -74.6046, 0.23 ) }
    dend_31 { pt3dadd( 49.0428, -263.318, -75.0107, 0.23 ) }
    dend_31 { pt3dadd( 49.3281, -264.706, -75.4307, 0.23 ) }
    dend_31 { pt3dadd( 49.8276, -267.668, -76.5065, 2.04 ) }
    dend_31 { pt3dadd( 49.9239, -269.111, -77.1618, 2.04 ) }
    dend_31 { pt3dadd( 50.0124, -271.879, -78.4265, 0.23 ) }
    dend_31 { pt3dadd( 50.0604, -272.781, -78.89, 0.23 ) }
    dend_31 { pt3dadd( 50.3181, -274.693, -79.8434, 0.23 ) }
    dend_31 { pt3dadd( 50.8789, -276.838, -80.8977, 0.91 ) }
    dend_31 { pt3dadd( 51.6204, -279.178, -82.0809, 0.23 ) }
    dend_31 { pt3dadd( 52.2247, -280.875, -82.9075, 0.91 ) }
    dend_31 { pt3dadd( 53.5381, -284.167, -84.445, 0.91 ) }
    dend_31 { pt3dadd( 54.567, -286.91, -85.6954, 0.23 ) }
    dend_31 { pt3dadd( 55.8546, -290.544, -87.278, 1.81 ) }
    dend_31 { pt3dadd( 57.6186, -295.326, -89.2614, 0.23 ) }
    dend_31 { pt3dadd( 58.4627, -297.737, -90.1389, 1.13 ) }
    dend_31 { pt3dadd( 59.4137, -301.298, -91.3289, 0.23 ) }
    dend_31 { pt3dadd( 59.8756, -303.599, -92.032, 1.36 ) }
    dend_31 { pt3dadd( 60.2995, -306.199, -92.9055, 0.23 ) }
    dend_31 { pt3dadd( 60.5021, -307.842, -93.4673, 0.23 ) }
    dend_31 { pt3dadd( 60.807, -311.243, -94.6158, 2.04 ) }
    dend_31 { pt3dadd( 60.7939, -314.984, -96.0036, 0.91 ) }
    dend_31 { pt3dadd( 60.7242, -316.85, -96.7194, 1.59 ) }
    dend_31 { pt3dadd( 60.7466, -319.149, -97.635, 0.45 ) }
    dend_31 { pt3dadd( 60.8186, -321.673, -98.4976, 1.36 ) }
    dend_31 { pt3dadd( 60.8453, -323.159, -98.8714, 0.68 ) }
    dend_31 { pt3dadd( 60.9552, -326.343, -99.3281, 0.23 ) }
    dend_31 { pt3dadd( 61.0556, -328.058, -99.3893, 0.23 ) }
    dend_31 { pt3dadd( 61.1789, -330.508, -99.2134, 1.13 ) }
    dend_31 { pt3dadd( 61.3432, -334.451, -98.5484, 0.23 ) }
    dend_31 { pt3dadd( 61.5864, -337.594, -97.8811, 1.81 ) }
    dend_31 { pt3dadd( 61.8431, -340.268, -97.2404, 0.45 ) }
    dend_31 { pt3dadd( 61.9924, -341.818, -96.7961, 1.81 ) }
    dend_31 { pt3dadd( 62.2453, -345.972, -95.5829, 0.68 ) }
    dend_31 { pt3dadd( 62.3611, -349.58, -94.5653, 1.36 ) }
    dend_31 { pt3dadd( 62.529, -353.363, -93.6542, 0.45 ) }
    dend_31 { pt3dadd( 62.592, -354.34, -93.4357, 0.45 ) }
    dend_31 { pt3dadd( 62.7785, -356.855, -92.9605, 1.13 ) }
    dend_31 { pt3dadd( 62.9864, -359.59, -92.5128, 0.23 ) }
    dend_31 { pt3dadd( 63.1793, -361.944, -92.2657, 1.59 ) }
    dend_31 { pt3dadd( 63.5737, -366.91, -91.9536, 0.45 ) }
    dend_31 { pt3dadd( 63.6973, -369.279, -91.8363, 0.45 ) }
    dend_31 { pt3dadd( 63.8257, -371.73, -91.7867, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 86/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 12.4819, -17.3019, -4.5648, 0.23 ) }
    dend_30 { pt3dadd( 14.4112, -16.2954, -5.08225, 0.23 ) }
    dend_30 { pt3dadd( 15.8392, -16.1515, -5.16876, 0.23 ) }
    dend_30 { pt3dadd( 17.41, -16.4513, -5.18666, 0.23 ) }
    dend_30 { pt3dadd( 17.9872, -16.5971, -5.15257, 0.23 ) }
    dend_30 { pt3dadd( 19.8701, -17.2228, -5.11402, 1.59 ) }
    dend_30 { pt3dadd( 21.2095, -17.733, -5.11238, 2.5 ) }
    dend_30 { pt3dadd( 23.0273, -18.5228, -5.10854, 1.81 ) }
    dend_30 { pt3dadd( 25.926, -19.7753, -5.14299, 0.68 ) }
    dend_30 { pt3dadd( 27.511, -20.4808, -5.19292, 1.36 ) }
    dend_30 { pt3dadd( 30.2221, -21.6712, -5.33172, 0.23 ) }
    dend_30 { pt3dadd( 30.9575, -21.9951, -5.40305, 1.81 ) }
    dend_30 { pt3dadd( 32.9994, -22.8878, -5.59472, 2.5 ) }
    dend_30 { pt3dadd( 36.4372, -24.4526, -5.73925, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 37.8491, -25.1294, -5.74172, 2.5 ) }
    dend_30 { pt3dadd( 39.1847, -25.7912, -5.70388, 2.5 ) }
    dend_30 { pt3dadd( 42.7966, -27.6745, -5.4126, 0.23 ) }
    dend_30 { pt3dadd( 45.635, -29.2142, -5.12504, 2.27 ) }
    dend_30 { pt3dadd( 48.1548, -30.6803, -4.81611, 0.68 ) }
    dend_30 { pt3dadd( 48.7152, -31.0439, -4.72707, 2.27 ) }
    dend_30 { pt3dadd( 49.9312, -31.8818, -4.52018, 1.81 ) }
    dend_30 { pt3dadd( 52.2684, -33.5973, -4.12776, 0.68 ) }
    dend_30 { pt3dadd( 54.7273, -35.3849, -3.77525, 2.27 ) }
    dend_30 { pt3dadd( 55.8511, -36.1941, -3.68636, 2.27 ) }
    dend_30 { pt3dadd( 58.4887, -38.0593, -3.55391, 0.91 ) }
    dend_30 { pt3dadd( 59.9116, -39.0924, -3.47947, 1.81 ) }
    dend_30 { pt3dadd( 61.8093, -40.4929, -3.38496, 0.91 ) }
    dend_30 { pt3dadd( 63.6267, -41.8331, -3.31542, 2.27 ) }
    dend_30 { pt3dadd( 65.5534, -43.2853, -3.27332, 0.23 ) }
    dend_30 { pt3dadd( 66.6628, -44.1189, -3.27058, 1.81 ) }
    dend_30 { pt3dadd( 68.7279, -45.6457, -3.27806, 0.68 ) }
    dend_30 { pt3dadd( 70.5766, -47.0509, -3.30887, 2.27 ) }
    dend_30 { pt3dadd( 72.8747, -48.8593, -3.39738, 0.23 ) }
    dend_30 { pt3dadd( 73.9395, -49.7236, -3.45884, 1.81 ) }
    dend_30 { pt3dadd( 75.8002, -51.2255, -3.60474, 0.68 ) }
    dend_30 { pt3dadd( 77.7429, -52.8037, -3.74899, 0.23 ) }
    dend_30 { pt3dadd( 80.0593, -54.6806, -3.91515, 2.5 ) }
    dend_30 { pt3dadd( 82.9101, -57.0263, -4.11041, 0.23 ) }
    dend_30 { pt3dadd( 84.136, -57.9984, -4.16894, 0.23 ) }
    dend_30 { pt3dadd( 85.8306, -59.3128, -4.21919, 1.36 ) }
    dend_30 { pt3dadd( 87.2947, -60.4293, -4.237, 0.23 ) }
    dend_30 { pt3dadd( 88.5313, -61.3776, -4.18802, 0.91 ) }
    dend_30 { pt3dadd( 89.7498, -62.3339, -4.03083, 0.23 ) }
    dend_30 { pt3dadd( 91.6103, -63.8194, -3.69691, 0.23 ) }
    dend_30 { pt3dadd( 92.515, -64.5883, -3.50867, 2.04 ) }
    dend_30 { pt3dadd( 93.4864, -65.525, -3.25659, 2.04 ) }
    dend_30 { pt3dadd( 94.9443, -66.9761, -2.85727, 0.23 ) }
    dend_30 { pt3dadd( 96.2539, -68.3569, -2.45213, 0.91 ) }
    dend_30 { pt3dadd( 97.1325, -69.3679, -2.15124, 0.23 ) }
    dend_30 { pt3dadd( 97.9282, -70.431, -1.86675, 0.23 ) }
    dend_30 { pt3dadd( 99.0324, -72.0211, -1.41924, 0.68 ) }
    dend_30 { pt3dadd( 108.441, -77.4772, -0.0278336, 0.68 ) }
    dend_30 { pt3dadd( 117.008, -83.7213, 2.76974, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 178.24, 154.693, -68.4392, 0.23 ) }
    dend_23 { pt3dadd( 178.604, 156.29, -68.1209, 0.23 ) }
    dend_23 { pt3dadd( 178.869, 157.099, -67.9849, 1.13 ) }
    dend_23 { pt3dadd( 179.248, 158.022, -67.8557, 0.23 ) }
    dend_23 { pt3dadd( 179.714, 159.026, -67.7409, 0.91 ) }
    dend_23 { pt3dadd( 180.156, 159.977, -67.632, 0.23 ) }
    dend_23 { pt3dadd( 180.578, 160.885, -67.5281, 0.91 ) }
    dend_23 { pt3dadd( 181.253, 162.084, -67.4141, 0.23 ) }
    dend_23 { pt3dadd( 181.802, 162.949, -67.3507, 0.91 ) }
    dend_23 { pt3dadd( 182.778, 164.377, -67.287, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 178.24, 154.693, -68.4392, 0.23 ) }
    dend_22 { pt3dadd( 180.656, 154.016, -69.2667, 0.23 ) }
    dend_22 { pt3dadd( 181.76, 153.706, -69.6448, 0.91 ) }
    dend_22 { pt3dadd( 182.923, 153.38, -70.0431, 0.23 ) }
    dend_22 { pt3dadd( 184.759, 152.865, -70.6721, 0.91 ) }
    dend_22 { pt3dadd( 186.184, 152.465, -71.1603, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.5281, 36.0136, -2.1167, 0.91 ) }
    dend_12 { pt3dadd( -8.36917, 36.6474, -2.43087, 0.91 ) }
    dend_12 { pt3dadd( -12.3723, 40.0143, -2.53087, 0.23 ) }
    dend_12 { pt3dadd( -13.8483, 41.2569, -2.35129, 0.68 ) }
    dend_12 { pt3dadd( -14.8529, 42.0686, -2.15189, 0.68 ) }
    dend_12 { pt3dadd( -17.2718, 44.004, -1.57381, 1.36 ) }
    dend_12 { pt3dadd( -19.8735, 46.153, -0.901428, 1.13 ) }
    dend_12 { pt3dadd( -22.5871, 48.4952, -0.0638626, 1.59 ) }
    dend_12 { pt3dadd( -24.5145, 50.1396, 0.674643, 1.59 ) }
    dend_12 { pt3dadd( -26.4149, 51.6663, 1.33178, 0.68 ) }
    dend_12 { pt3dadd( -28.0462, 52.9446, 1.79239, 0.23 ) }
    dend_12 { pt3dadd( -29.4186, 54.0397, 2.12478, 1.13 ) }
    dend_12 { pt3dadd( -31.0447, 55.3663, 2.50665, 0.23 ) }
    dend_12 { pt3dadd( -32.1444, 56.3336, 2.71563, 1.36 ) }
    dend_12 { pt3dadd( -33.5785, 57.821, 2.99373, 0.23 ) }
    dend_12 { pt3dadd( -34.8101, 59.2408, 3.16687, 0.91 ) }
    dend_12 { pt3dadd( -36.1942, 60.9491, 3.34012, 0.23 ) }
    dend_12 { pt3dadd( -37.8597, 63.0136, 3.42627, 1.81 ) }
    dend_12 { pt3dadd( -39.3979, 65.0082, 3.36761, 1.81 ) }
    dend_12 { pt3dadd( -40.6589, 66.7784, 3.19884, 0.68 ) }
    dend_12 { pt3dadd( -41.938, 68.6935, 2.88223, 0.23 ) }
    dend_12 { pt3dadd( -43.0377, 70.3528, 2.51577, 2.5 ) }
    dend_12 { pt3dadd( -44.4469, 72.4686, 1.97408, 2.5 ) }
    dend_12 { pt3dadd( -46.4282, 75.3378, 1.1964, 0.23 ) }
    dend_12 { pt3dadd( -47.2153, 76.4353, 0.961933, 0.23 ) }
    dend_12 { pt3dadd( -48.0704, 77.4808, 0.812611, 1.81 ) }
    dend_12 { pt3dadd( -49.9241, 79.5099, 0.77514, 0.23 ) }
    dend_12 { pt3dadd( -51.1366, 80.7039, 0.815223, 0.23 ) }
    dend_12 { pt3dadd( -52.2816, 81.6866, 0.830519, 1.59 ) }
    dend_12 { pt3dadd( -53.3403, 82.5193, 0.824291, 1.59 ) }
    dend_12 { pt3dadd( -56.2173, 84.5614, 0.653799, 0.23 ) }
    dend_12 { pt3dadd( -57.7033, 85.4549, 0.431897, 0.23 ) }
    dend_12 { pt3dadd( -59.4253, 86.2416, 0.0144207, 2.72 ) }
    dend_12 { pt3dadd( -62.943, 87.661, -1.17601, 0.45 ) }
    dend_12 { pt3dadd( -64.6982, 88.3243, -2.05702, 0.23 ) }
    dend_12 { pt3dadd( -66.4308, 88.9454, -3.62971, 1.36 ) }
    dend_12 { pt3dadd( -68.2185, 89.4092, -6.32054, 0.23 ) }
    dend_12 { pt3dadd( -69.7763, 89.6428, -8.92149, 0.91 ) }
    dend_12 { pt3dadd( -70.4366, 89.6635, -10.1452, 2.04 ) }
    dend_12 { pt3dadd( -71.5138, 89.5721, -12.5993, 0.23 ) }
    dend_12 { pt3dadd( -73.0162, 89.3879, -16.3954, 0.23 ) }
    dend_12 { pt3dadd( -74.3765, 89.3847, -21.6393, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 97/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.5281, 36.0136, -2.1167, 0.45 ) }
    dend_7 { pt3dadd( -6.75311, 36.8915, -3.16237, 0.45 ) }
    dend_7 { pt3dadd( -6.1584, 38.4344, -4.22894, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -5.96093, 40.3785, -5.087, 0.45 ) }
    dend_7 { pt3dadd( -5.98316, 41.7391, -5.53669, 0.45 ) }
    dend_7 { pt3dadd( -6.1155, 43.0583, -5.92966, 1.81 ) }
    dend_7 { pt3dadd( -6.56087, 45.8004, -6.68732, 1.13 ) }
    dend_7 { pt3dadd( -7.04113, 47.3832, -7.04014, 0.68 ) }
    dend_7 { pt3dadd( -8.00662, 49.899, -7.45996, 0.68 ) }
    dend_7 { pt3dadd( -8.70359, 51.5245, -7.58608, 0.68 ) }
    dend_7 { pt3dadd( -9.3297, 53.0156, -7.61172, 1.81 ) }
    dend_7 { pt3dadd( -9.67469, 54.0066, -7.59698, 1.81 ) }
    dend_7 { pt3dadd( -10.4718, 56.6968, -7.4746, 0.45 ) }
    dend_7 { pt3dadd( -10.9617, 58.7378, -7.34821, 0.45 ) }
    dend_7 { pt3dadd( -11.5237, 61.8283, -7.11084, 2.95 ) }
    dend_7 { pt3dadd( -11.8232, 64.4983, -6.87974, 0.91 ) }
    dend_7 { pt3dadd( -11.8624, 67.2209, -6.61711, 0.23 ) }
    dend_7 { pt3dadd( -11.8065, 68.1668, -6.52977, 0.23 ) }
    dend_7 { pt3dadd( -11.6335, 69.8646, -6.38152, 0.91 ) }
    dend_7 { pt3dadd( -11.4149, 72.1463, -6.24908, 1.59 ) }
    dend_7 { pt3dadd( -11.3425, 74.4411, -6.22798, 0.23 ) }
    dend_7 { pt3dadd( -11.4956, 76.3441, -6.26312, 0.23 ) }
    dend_7 { pt3dadd( -11.6425, 77.4806, -6.33099, 0.23 ) }
    dend_7 { pt3dadd( -11.8179, 79.369, -6.48943, 0.23 ) }
    dend_7 { pt3dadd( -11.9554, 80.7037, -6.62239, 2.5 ) }
    dend_7 { pt3dadd( -12.1668, 82.4134, -6.82369, 1.81 ) }
    dend_7 { pt3dadd( -12.7684, 85.6109, -7.24805, 0.23 ) }
    dend_7 { pt3dadd( -13.3299, 88.2164, -7.61832, 0.23 ) }
    dend_7 { pt3dadd( -13.5908, 89.9486, -7.89626, 2.95 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -90.5297, 58.9361, -20.6863, 0.23 ) }
    dend_3 { pt3dadd( -91.7675, 58.6835, -21.6794, 0.23 ) }
    dend_3 { pt3dadd( -93.5069, 58.104, -23.1182, 0.91 ) }
    dend_3 { pt3dadd( -94.2003, 57.8079, -23.7424, 0.23 ) }
    dend_3 { pt3dadd( -94.7682, 57.5306, -24.2714, 0.68 ) }
    dend_3 { pt3dadd( -95.8049, 56.9585, -25.2666, 0.23 ) }
    dend_3 { pt3dadd( -96.3427, 56.6533, -25.7937, 0.68 ) }
    dend_3 { pt3dadd( -97.4445, 55.9739, -26.8562, 0.23 ) }
    dend_3 { pt3dadd( -98.1972, 55.5752, -27.5885, 0.23 ) }
    dend_3 { pt3dadd( -98.9974, 55.2211, -28.3484, 0.23 ) }
    dend_3 { pt3dadd( -99.711, 54.9651, -29.0065, 0.91 ) }
    dend_3 { pt3dadd( -101.068, 54.6122, -30.1749, 0.23 ) }
    dend_3 { pt3dadd( -101.833, 54.4619, -30.7918, 0.23 ) }
    dend_3 { pt3dadd( -103.3, 54.2416, -31.91, 1.36 ) }
    dend_3 { pt3dadd( -104.93, 54.0097, -33.1226, 0.23 ) }
    dend_3 { pt3dadd( -105.923, 53.8203, -33.8967, 0.68 ) }
    dend_3 { pt3dadd( -106.876, 53.5748, -34.6608, 0.23 ) }
    dend_3 { pt3dadd( -107.38, 53.4132, -35.0728, 0.91 ) }
    dend_3 { pt3dadd( -107.982, 53.1627, -35.5905, 0.23 ) }
    dend_3 { pt3dadd( -108.967, 52.6343, -36.476, 0.91 ) }
    dend_3 { pt3dadd( -110.287, 51.8171, -37.764, 0.23 ) }
    dend_3 { pt3dadd( -111.105, 51.2243, -38.6604, 0.91 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -90.5297, 58.9361, -20.6863, 1.59 ) }
    dend_2 { pt3dadd( -91.7881, 58.581, -21.1396, 1.59 ) }
    dend_2 { pt3dadd( -92.4273, 58.4234, -21.3816, 0.45 ) }
    dend_2 { pt3dadd( -92.8312, 58.3292, -21.5405, 0.45 ) }
    dend_2 { pt3dadd( -93.5255, 58.1812, -21.8174, 1.36 ) }
    dend_2 { pt3dadd( -94.8023, 57.9617, -22.3028, 0.23 ) }
    dend_2 { pt3dadd( -95.7906, 57.8425, -22.6545, 0.23 ) }
    dend_2 { pt3dadd( -96.6485, 57.8137, -22.9513, 0.91 ) }
    dend_2 { pt3dadd( -97.3782, 57.8079, -23.1916, 0.23 ) }
    dend_2 { pt3dadd( -98.3625, 57.82, -23.5015, 1.13 ) }
    dend_2 { pt3dadd( -99.7047, 57.8856, -23.8904, 0.23 ) }
    dend_2 { pt3dadd( -100.835, 57.998, -24.1779, 0.23 ) }
    dend_2 { pt3dadd( -101.626, 58.1017, -24.3592, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 63.8257, -371.73, -91.7867, 0.23 ) }
    dend_33 { pt3dadd( 62.5916, -374.126, -92.6748, 0.23 ) }
    dend_33 { pt3dadd( 61.6324, -376.079, -93.4844, 1.13 ) }
    dend_33 { pt3dadd( 60.7716, -378.138, -94.3403, 0.23 ) }
    dend_33 { pt3dadd( 60.4358, -379.011, -94.6808, 0.91 ) }
    dend_33 { pt3dadd( 60.1739, -379.718, -94.9481, 0.23 ) }
    dend_33 { pt3dadd( 59.916, -380.483, -95.2291, 1.13 ) }
    dend_33 { pt3dadd( 59.3725, -382.453, -96.0433, 0.23 ) }
    dend_33 { pt3dadd( 59.1495, -383.752, -96.4993, 0.23 ) }
    dend_33 { pt3dadd( 59.0778, -384.866, -96.8711, 0.91 ) }
    dend_33 { pt3dadd( 59.0471, -386.108, -97.2551, 0.23 ) }
    dend_33 { pt3dadd( 59.069, -387.036, -97.5233, 1.13 ) }
    dend_33 { pt3dadd( 59.2735, -389.579, -98.2054, 0.23 ) }
    dend_33 { pt3dadd( 59.381, -390.63, -98.4266, 0.91 ) }
    dend_33 { pt3dadd( 59.5138, -392.212, -98.7894, 0.23 ) }
    dend_33 { pt3dadd( 59.6068, -393.041, -98.9806, 0.91 ) }
    dend_33 { pt3dadd( 59.7775, -394.395, -99.2653, 0.23 ) }
    dend_33 { pt3dadd( 59.8546, -395.159, -99.4105, 0.23 ) }
    dend_33 { pt3dadd( 60.0201, -396.848, -99.6483, 0.91 ) }
    dend_33 { pt3dadd( 60.1173, -399.179, -100.032, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 81/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 63.8257, -371.73, -91.7867, 0.23 ) }
    dend_32 { pt3dadd( 65.1243, -372.845, -92.1595, 0.23 ) }
    dend_32 { pt3dadd( 66.533, -374.056, -92.5639, 0.23 ) }
    dend_32 { pt3dadd( 67.2966, -374.712, -92.7831, 0.23 ) }
    dend_32 { pt3dadd( 69.1604, -376.313, -93.3181, 0.91 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -74.3765, 89.3847, -21.6393, 0.23 ) }
    dend_18 { pt3dadd( -74.6191, 91.2469, -21.3792, 0.23 ) }
    dend_18 { pt3dadd( -75.0597, 94.1813, -21.3332, 0.23 ) }
    dend_18 { pt3dadd( -75.2862, 96.1183, -21.4715, 1.59 ) }
    dend_18 { pt3dadd( -75.4812, 97.9695, -21.7937, 0.45 ) }
    dend_18 { pt3dadd( -75.6716, 99.7778, -22.2099, 1.13 ) }
    dend_18 { pt3dadd( -76.0732, 102.739, -23.0544, 0.23 ) }
    dend_18 { pt3dadd( -76.2825, 103.805, -23.508, 0.45 ) }
    dend_18 { pt3dadd( -76.7335, 105.569, -24.4823, 0.23 ) }
    dend_18 { pt3dadd( -77.1751, 107.148, -25.43, 1.13 ) }
    dend_18 { pt3dadd( -77.6163, 108.484, -26.1897, 0.23 ) }
    dend_18 { pt3dadd( -78.3039, 109.916, -27.0733, 1.13 ) }
    dend_18 { pt3dadd( -78.7099, 110.581, -27.4972, 0.23 ) }
    dend_18 { pt3dadd( -79.7871, 112.055, -28.4618, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_18 { pt3dadd( -82.0788, 114.89, -30.2485, 0.23 ) }
    dend_18 { pt3dadd( -83.2538, 116.373, -31.1862, 1.13 ) }
    dend_18 { pt3dadd( -85.979, 120.063, -33.5332, 0.23 ) }
    dend_18 { pt3dadd( -87.3174, 121.949, -34.7198, 1.13 ) }
    dend_18 { pt3dadd( -87.81, 122.652, -35.1484, 0.23 ) }
    dend_18 { pt3dadd( -88.7433, 123.921, -35.8929, 1.13 ) }
    dend_18 { pt3dadd( -90.5447, 126.314, -37.1749, 0.23 ) }
    dend_18 { pt3dadd( -91.8857, 128.334, -38.2125, 1.36 ) }
    dend_18 { pt3dadd( -92.9658, 130.394, -39.0594, 0.23 ) }
    dend_18 { pt3dadd( -93.7387, 132.013, -39.6906, 0.68 ) }
    dend_18 { pt3dadd( -94.4673, 133.655, -40.3769, 0.23 ) }
    dend_18 { pt3dadd( -95.045, 135.15, -40.9128, 0.91 ) }
    dend_18 { pt3dadd( -95.9081, 137.579, -41.585, 0.23 ) }
    dend_18 { pt3dadd( -96.8391, 140.522, -42.1841, 0.23 ) }
    dend_18 { pt3dadd( -97.4519, 142.536, -42.5864, 0.68 ) }
    dend_18 { pt3dadd( -98.3466, 144.926, -43.0318, 0.23 ) }
    dend_18 { pt3dadd( -99.9142, 148.339, -43.5087, 0.91 ) }
    dend_18 { pt3dadd( -100.398, 149.082, -43.5622, 0.23 ) }
    dend_18 { pt3dadd( -102.142, 150.772, -43.4568, 1.13 ) }
    dend_18 { pt3dadd( -106.352, 153.625, -43.6207, 0.23 ) }
    dend_18 { pt3dadd( -108.574, 155.116, -43.8719, 1.13 ) }
    dend_18 { pt3dadd( -108.807, 155.279, -43.9119, 1.13 ) }
    dend_18 { pt3dadd( -109.512, 155.782, -44.1, 1.13 ) }
    dend_18 { pt3dadd( -111.114, 157.072, -44.5704, 0.23 ) }
    dend_18 { pt3dadd( -113.948, 159.665, -45.3597, 0.23 ) }
    dend_18 { pt3dadd( -115.548, 161.236, -45.4314, 0.23 ) }
    dend_18 { pt3dadd( -116.155, 161.758, -45.3961, 0.23 ) }
    dend_18 { pt3dadd( -116.74, 162.117, -45.2685, 0.23 ) }
    dend_18 { pt3dadd( -117.76, 162.521, -44.8167, 0.23 ) }
    dend_18 { pt3dadd( -119.598, 163.041, -43.9479, 0.23 ) }
    dend_18 { pt3dadd( -122.04, 163.58, -42.8373, 0.23 ) }
    dend_18 { pt3dadd( -124.171, 163.976, -41.8701, 0.23 ) }
    dend_18 { pt3dadd( -126.574, 164.41, -40.7944, 0.23 ) }
    dend_18 { pt3dadd( -130.027, 165.068, -39.2912, 1.13 ) }
    dend_18 { pt3dadd( -134.206, 165.879, -37.5531, 0.23 ) }
    dend_18 { pt3dadd( -137.176, 166.461, -36.4244, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 36/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -74.3765, 89.3847, -21.6393, 1.59 ) }
    dend_13 { pt3dadd( -75.8768, 88.8957, -21.5526, 1.59 ) }
    dend_13 { pt3dadd( -77.7639, 88.2807, -21.4436, 0.23 ) }
    dend_13 { pt3dadd( -79.4052, 87.7457, -21.3488, 2.04 ) }
    dend_13 { pt3dadd( -80.2546, 87.4689, -21.2997, 2.04 ) }
    dend_13 { pt3dadd( -81.637, 87.0183, -21.2198, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.5908, 89.9486, -7.89626, 0.23 ) }
    dend_11 { pt3dadd( -11.9542, 92.0495, -7.08407, 0.23 ) }
    dend_11 { pt3dadd( -10.9474, 93.4163, -6.58871, 0.23 ) }
    dend_11 { pt3dadd( -10.2322, 94.5062, -6.15721, 1.59 ) }
    dend_11 { pt3dadd( -9.40142, 95.9999, -5.49211, 0.45 ) }
    dend_11 { pt3dadd( -8.22896, 98.2327, -4.46933, 0.23 ) }
    dend_11 { pt3dadd( -7.56997, 99.5413, -3.93654, 0.91 ) }
    dend_11 { pt3dadd( -7.14113, 100.514, -3.60482, 0.23 ) }
    dend_11 { pt3dadd( -6.34445, 102.325, -3.03729, 2.04 ) }
    dend_11 { pt3dadd( -5.34432, 104.488, -2.50171, 0.91 ) }
    dend_11 { pt3dadd( -4.43928, 106.329, -2.23974, 1.59 ) }
    dend_11 { pt3dadd( -3.49555, 108.255, -2.16428, 0.45 ) }
    dend_11 { pt3dadd( -3.01051, 109.279, -2.19426, 1.59 ) }
    dend_11 { pt3dadd( -2.01904, 111.393, -2.32575, 0.23 ) }
    dend_11 { pt3dadd( -1.28797, 113.019, -2.48812, 0.91 ) }
    dend_11 { pt3dadd( -0.521454, 114.936, -2.67899, 0.23 ) }
    dend_11 { pt3dadd( -0.0805072, 116.255, -2.74991, 1.81 ) }
    dend_11 { pt3dadd( 0.736515, 118.906, -2.81843, 0.23 ) }
    dend_11 { pt3dadd( 1.20574, 120.711, -2.87603, 0.91 ) }
    dend_11 { pt3dadd( 1.5928, 122.682, -2.93838, 0.23 ) }
    dend_11 { pt3dadd( 1.83746, 124.043, -2.96283, 1.13 ) }
    dend_11 { pt3dadd( 2.16729, 125.538, -2.9895, 1.13 ) }
    dend_11 { pt3dadd( 2.7581, 127.438, -3.09923, 0.23 ) }
    dend_11 { pt3dadd( 3.10009, 128.228, -3.17028, 0.23 ) }
    dend_11 { pt3dadd( 3.35512, 128.713, -3.23469, 0.23 ) }
    dend_11 { pt3dadd( 3.71849, 129.314, -3.32613, 0.23 ) }
    dend_11 { pt3dadd( 4.85174, 131.02, -3.60924, 1.36 ) }
    dend_11 { pt3dadd( 6.35236, 133.142, -4.01567, 0.23 ) }
    dend_11 { pt3dadd( 7.16778, 134.264, -4.2334, 1.13 ) }
    dend_11 { pt3dadd( 8.56332, 136.171, -4.64349, 0.23 ) }
    dend_11 { pt3dadd( 9.35581, 137.328, -4.89428, 0.68 ) }
    dend_11 { pt3dadd( 10.3034, 138.818, -5.25574, 0.23 ) }
    dend_11 { pt3dadd( 11.08, 140.082, -5.58322, 0.23 ) }
    dend_11 { pt3dadd( 11.5145, 140.801, -5.76292, 0.23 ) }
    dend_11 { pt3dadd( 11.9405, 141.532, -5.93877, 1.13 ) }
    dend_11 { pt3dadd( 13.2599, 143.762, -6.42353, 0.23 ) }
    dend_11 { pt3dadd( 13.8618, 144.798, -6.62485, 0.23 ) }
    dend_11 { pt3dadd( 14.6545, 146.205, -6.86987, 0.23 ) }
    dend_11 { pt3dadd( 15.1145, 147.021, -6.97922, 0.23 ) }
    dend_11 { pt3dadd( 15.6934, 147.95, -7.10985, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.5908, 89.9486, -7.89626, 0.23 ) }
    dend_8 { pt3dadd( -13.7697, 92.6525, -8.53972, 0.23 ) }
    dend_8 { pt3dadd( -13.792, 93.4653, -8.6821, 1.13 ) }
    dend_8 { pt3dadd( -13.8805, 95.4263, -8.95108, 0.23 ) }
    dend_8 { pt3dadd( -13.9161, 95.9912, -9.01737, 0.23 ) }
    dend_8 { pt3dadd( -13.9477, 96.6737, -9.073, 0.23 ) }
    dend_8 { pt3dadd( -13.9961, 98.3769, -9.16469, 2.27 ) }
    dend_8 { pt3dadd( -13.9786, 99.7278, -9.15751, 1.13 ) }
    dend_8 { pt3dadd( -13.9634, 101.195, -9.10863, 0.23 ) }
    dend_8 { pt3dadd( -13.9636, 101.764, -9.07645, 0.91 ) }
    dend_8 { pt3dadd( -14.0348, 103.976, -8.97232, 0.23 ) }
    dend_8 { pt3dadd( -14.1733, 105.838, -8.90672, 2.04 ) }
    dend_8 { pt3dadd( -14.252, 106.734, -8.87837, 2.04 ) }
    dend_8 { pt3dadd( -14.4944, 109.975, -8.76097, 0.23 ) }
    dend_8 { pt3dadd( -14.5359, 110.542, -8.73235, 1.13 ) }
    dend_8 { pt3dadd( -14.5975, 111.224, -8.69391, 1.13 ) }
    dend_8 { pt3dadd( -14.9221, 113.59, -8.56663, 0.23 ) }
    dend_8 { pt3dadd( -15.1427, 114.961, -8.50768, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_8 { pt3dadd( -15.3984, 116.818, -8.42776, 2.95 ) }
    dend_8 { pt3dadd( -15.5601, 118.667, -8.33227, 0.23 ) }
    dend_8 { pt3dadd( -15.5743, 119.491, -8.27912, 0.91 ) }
    dend_8 { pt3dadd( -15.4218, 121.053, -8.19243, 0.23 ) }
    dend_8 { pt3dadd( -15.0969, 122.448, -8.12733, 1.81 ) }
    dend_8 { pt3dadd( -14.5478, 123.998, -8.06267, 0.23 ) }
    dend_8 { pt3dadd( -14.2633, 124.608, -8.03852, 0.23 ) }
    dend_8 { pt3dadd( -13.4064, 126.223, -7.96623, 2.04 ) }
    dend_8 { pt3dadd( -12.394, 128.135, -7.83104, 0.23 ) }
    dend_8 { pt3dadd( -11.7669, 129.326, -7.70157, 1.13 ) }
    dend_8 { pt3dadd( -10.9654, 131.111, -7.49321, 0.23 ) }
    dend_8 { pt3dadd( -10.7878, 131.606, -7.43938, 0.23 ) }
    dend_8 { pt3dadd( -10.1896, 133.666, -7.15255, 2.04 ) }
    dend_8 { pt3dadd( -9.57592, 136.671, -6.66471, 0.23 ) }
    dend_8 { pt3dadd( -9.42474, 137.963, -6.42757, 0.23 ) }
    dend_8 { pt3dadd( -9.30368, 139.923, -6.07376, 2.04 ) }
    dend_8 { pt3dadd( -9.28803, 140.708, -5.93135, 2.04 ) }
    dend_8 { pt3dadd( -9.3171, 142.821, -5.55123, 0.23 ) }
    dend_8 { pt3dadd( -9.40961, 144.191, -5.31253, 1.13 ) }
    dend_8 { pt3dadd( -9.60232, 145.638, -5.09499, 0.23 ) }
    dend_8 { pt3dadd( -9.73258, 146.945, -4.9128, 0.23 ) }
    dend_8 { pt3dadd( -9.76137, 147.472, -4.83861, 1.81 ) }
    dend_8 { pt3dadd( -9.79427, 148.266, -4.78056, 1.81 ) }
    dend_8 { pt3dadd( -9.87348, 150.931, -4.74333, 0.68 ) }
    dend_8 { pt3dadd( -9.85543, 152.89, -4.73866, 1.13 ) }
    dend_8 { pt3dadd( -9.72862, 155.038, -4.73934, 0.23 ) }
    dend_8 { pt3dadd( -9.61481, 156.62, -4.75526, 2.04 ) }
    dend_8 { pt3dadd( -9.36862, 159.277, -4.83244, 0.23 ) }
    dend_8 { pt3dadd( -9.18587, 160.59, -4.88154, 1.13 ) }
    dend_8 { pt3dadd( -8.98939, 161.811, -4.94546, 1.13 ) }
    dend_8 { pt3dadd( -8.68145, 163.471, -5.01783, 0.23 ) }
    dend_8 { pt3dadd( -8.51985, 164.474, -5.05231, 0.23 ) }
    dend_8 { pt3dadd( -8.25591, 165.988, -5.05972, 0.91 ) }
    dend_8 { pt3dadd( -7.95166, 167.791, -4.98417, 0.23 ) }
    dend_8 { pt3dadd( -7.7355, 169.582, -4.96188, 1.13 ) }
    dend_8 { pt3dadd( -7.68182, 170.742, -4.98448, 0.23 ) }
    dend_8 { pt3dadd( -7.72948, 172.083, -5.0485, 1.81 ) }
    dend_8 { pt3dadd( -7.76759, 172.571, -5.09074, 1.81 ) }
    dend_8 { pt3dadd( -8.07386, 174.381, -5.41043, 0.23 ) }
    dend_8 { pt3dadd( -8.32663, 175.412, -5.68919, 0.23 ) }
    dend_8 { pt3dadd( -8.44804, 175.993, -5.90161, 0.68 ) }
    dend_8 { pt3dadd( -8.62151, 176.787, -6.28917, 0.23 ) }
    dend_8 { pt3dadd( -8.89921, 178.164, -7.02596, 1.81 ) }
    dend_8 { pt3dadd( -9.22911, 179.936, -7.96482, 0.23 ) }
    dend_8 { pt3dadd( -9.38436, 180.722, -8.38355, 0.23 ) }
    dend_8 { pt3dadd( -9.78406, 182.658, -9.30961, 2.04 ) }
    dend_8 { pt3dadd( -10.2236, 184.527, -10.1135, 0.23 ) }
    dend_8 { pt3dadd( -10.7342, 186.243, -10.7774, 0.23 ) }
    dend_8 { pt3dadd( -11.1708, 187.45, -11.1741, 1.36 ) }
    dend_8 { pt3dadd( -11.4696, 188.192, -11.3659, 1.36 ) }
    dend_8 { pt3dadd( -12.2516, 189.951, -11.73, 0.45 ) }
    dend_8 { pt3dadd( -13.0079, 191.455, -11.9456, 0.68 ) }
    dend_8 { pt3dadd( -13.6748, 192.783, -12.1097, 0.23 ) }
    dend_8 { pt3dadd( -14.1658, 193.766, -12.2506, 1.13 ) }
    dend_8 { pt3dadd( -14.9706, 195.46, -12.5731, 0.23 ) }
    dend_8 { pt3dadd( -15.6088, 196.854, -12.8957, 2.27 ) }
    dend_8 { pt3dadd( -16.4867, 198.725, -13.4299, 0.23 ) }
    dend_8 { pt3dadd( -16.938, 199.73, -13.7519, 1.13 ) }
    dend_8 { pt3dadd( -17.2356, 200.432, -13.9859, 1.13 ) }
    dend_8 { pt3dadd( -17.7604, 201.923, -14.4823, 0.23 ) }
    dend_8 { pt3dadd( -17.9897, 202.739, -14.7387, 0.23 ) }
    dend_8 { pt3dadd( -18.1478, 203.534, -14.9375, 0.23 ) }
    dend_8 { pt3dadd( -18.3104, 204.573, -15.1663, 0.23 ) }
    dend_8 { pt3dadd( -18.6685, 206.37, -15.5189, 1.59 ) }
    dend_8 { pt3dadd( -19.2287, 208.876, -15.9733, 0.23 ) }
    dend_8 { pt3dadd( -19.6265, 210.524, -16.2313, 1.59 ) }
    dend_8 { pt3dadd( -20.1302, 212.284, -16.5308, 0.23 ) }
    dend_8 { pt3dadd( -20.4545, 213.199, -16.7343, 0.23 ) }
    dend_8 { pt3dadd( -21.542, 215.329, -17.3782, 0.23 ) }
    dend_8 { pt3dadd( -21.9962, 215.971, -17.6287, 0.23 ) }
    dend_8 { pt3dadd( -22.4359, 216.433, -17.8446, 0.91 ) }
    dend_8 { pt3dadd( -23.652, 217.559, -18.47, 1.36 ) }
    dend_8 { pt3dadd( -24.7162, 218.484, -19.0148, 0.23 ) }
    dend_8 { pt3dadd( -25.9819, 219.632, -19.6397, 0.91 ) }
    dend_8 { pt3dadd( -26.6645, 220.303, -19.9817, 0.23 ) }
    dend_8 { pt3dadd( -27.7159, 221.439, -20.54, 1.59 ) }
    dend_8 { pt3dadd( -28.9459, 222.912, -21.217, 0.23 ) }
    dend_8 { pt3dadd( -29.6303, 223.872, -21.5983, 0.45 ) }
    dend_8 { pt3dadd( -30.8643, 225.798, -22.2545, 0.23 ) }
    dend_8 { pt3dadd( -31.384, 226.698, -22.5421, 1.81 ) }
    dend_8 { pt3dadd( -32.3886, 228.549, -23.1435, 0.45 ) }
    dend_8 { pt3dadd( -32.5117, 228.78, -23.2049, 1.36 ) }
    dend_8 { pt3dadd( -33.3006, 230.151, -23.4984, 0.23 ) }
    dend_8 { pt3dadd( -33.5888, 230.633, -23.5955, 0.23 ) }
    dend_8 { pt3dadd( -34.4358, 232.074, -23.8482, 1.59 ) }
    dend_8 { pt3dadd( -36.1507, 235.084, -24.2964, 0.23 ) }
    dend_8 { pt3dadd( -37.4959, 237.516, -24.5814, 2.04 ) }
    dend_8 { pt3dadd( -38.9223, 240.132, -24.837, 0.23 ) }
    dend_8 { pt3dadd( -39.3979, 241.025, -24.9057, 0.23 ) }
    dend_8 { pt3dadd( -40.0335, 242.259, -24.982, 0.91 ) }
    dend_8 { pt3dadd( -40.5253, 243.296, -25.0114, 0.23 ) }
    dend_8 { pt3dadd( -40.7407, 243.824, -24.9893, 0.23 ) }
    dend_8 { pt3dadd( -41.3162, 245.743, -24.9759, 1.81 ) }
    dend_8 { pt3dadd( -41.5806, 247.106, -24.8619, 1.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 94/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -137.176, 166.461, -36.4244, 0.23 ) }
    dend_20 { pt3dadd( -139.563, 166.858, -36.4195, 0.23 ) }
    dend_20 { pt3dadd( -141.514, 167.181, -36.4018, 0.23 ) }
    dend_20 { pt3dadd( -143.836, 167.517, -36.3766, 0.91 ) }
    dend_20 { pt3dadd( -145.656, 167.768, -36.3366, 0.23 ) }
    dend_20 { pt3dadd( -146.729, 167.915, -36.298, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_20 { pt3dadd( -149.532, 168.31, -36.1464, 0.23 ) }
    dend_20 { pt3dadd( -152.155, 168.713, -35.9554, 0.23 ) }
    dend_20 { pt3dadd( -154.601, 169.118, -35.6617, 0.23 ) }
    dend_20 { pt3dadd( -155.855, 169.333, -35.4668, 1.36 ) }
    dend_20 { pt3dadd( -157.112, 169.542, -35.2719, 0.45 ) }
    dend_20 { pt3dadd( -158.923, 169.868, -35.0143, 1.13 ) }
    dend_20 { pt3dadd( -161.474, 170.394, -34.6705, 0.23 ) }
    dend_20 { pt3dadd( -162.786, 170.668, -34.5378, 0.23 ) }
    dend_20 { pt3dadd( -163.529, 170.828, -34.4814, 0.91 ) }
    dend_20 { pt3dadd( -166.381, 171.38, -34.3829, 0.23 ) }
    dend_20 { pt3dadd( -167.982, 171.648, -34.3789, 0.23 ) }
    dend_20 { pt3dadd( -169.634, 171.88, -34.4042, 0.23 ) }
    dend_20 { pt3dadd( -170.818, 172.015, -34.4254, 0.23 ) }
    dend_20 { pt3dadd( -171.905, 172.127, -34.4072, 0.23 ) }
    dend_20 { pt3dadd( -173.342, 172.275, -34.3136, 0.23 ) }
    dend_20 { pt3dadd( -174.237, 172.379, -34.1965, 0.91 ) }
    dend_20 { pt3dadd( -175.85, 172.565, -33.9487, 0.23 ) }
    dend_20 { pt3dadd( -176.566, 172.651, -33.8701, 0.91 ) }
    dend_20 { pt3dadd( -178.011, 172.862, -33.7909, 0.23 ) }
    dend_20 { pt3dadd( -180.84, 173.352, -33.7357, 0.68 ) }
    dend_20 { pt3dadd( -181.264, 173.425, -33.7289, 0.23 ) }
    dend_20 { pt3dadd( -182.926, 173.722, -33.7415, 1.13 ) }
    dend_20 { pt3dadd( -185.924, 174.249, -33.7778, 0.23 ) }
    dend_20 { pt3dadd( -187.859, 174.572, -33.7871, 0.23 ) }
    dend_20 { pt3dadd( -189.355, 174.809, -33.8303, 0.23 ) }
    dend_20 { pt3dadd( -191.891, 175.237, -34.0057, 1.13 ) }
    dend_20 { pt3dadd( -194.662, 175.723, -34.263, 0.23 ) }
    dend_20 { pt3dadd( -196.428, 176.085, -34.435, 0.23 ) }
    dend_20 { pt3dadd( -197.326, 176.311, -34.5237, 1.13 ) }
    dend_20 { pt3dadd( -200.439, 177.164, -34.9439, 0.23 ) }
    dend_20 { pt3dadd( -202.857, 177.846, -35.3756, 0.23 ) }
    dend_20 { pt3dadd( -203.409, 178.012, -35.4856, 0.23 ) }
    dend_20 { pt3dadd( -205.684, 178.698, -35.9406, 0.91 ) }
    dend_20 { pt3dadd( -207.717, 179.329, -36.3317, 0.23 ) }
    dend_20 { pt3dadd( -209.705, 179.953, -36.6382, 0.23 ) }
    dend_20 { pt3dadd( -212.401, 180.769, -36.9303, 0.23 ) }
    dend_20 { pt3dadd( -213.689, 181.12, -37.0374, 0.91 ) }
    dend_20 { pt3dadd( -216.131, 181.734, -37.2673, 0.23 ) }
    dend_20 { pt3dadd( -217.113, 181.941, -37.3706, 0.23 ) }
    dend_20 { pt3dadd( -218.429, 182.219, -37.4488, 0.91 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 40/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -137.176, 166.461, -36.4244, 0.23 ) }
    dend_19 { pt3dadd( -139.589, 166.953, -36.4861, 0.23 ) }
    dend_19 { pt3dadd( -140.923, 167.174, -36.4497, 0.23 ) }
    dend_19 { pt3dadd( -143.343, 167.575, -36.3837, 0.68 ) }
    dend_19 { pt3dadd( -145.633, 167.954, -36.3212, 0.23 ) }
    dend_19 { pt3dadd( -148.616, 168.448, -36.2399, 0.23 ) }
    dend_19 { pt3dadd( -150.697, 168.792, -36.1831, 0.23 ) }
    dend_19 { pt3dadd( -152.058, 168.834, -36.0984, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -81.637, 87.0183, -21.2198, 0.23 ) }
    dend_17 { pt3dadd( -82.4877, 88.6931, -22.4229, 0.23 ) }
    dend_17 { pt3dadd( -83.2812, 90.1943, -23.4999, 1.13 ) }
    dend_17 { pt3dadd( -84.1568, 91.7966, -24.4685, 0.23 ) }
    dend_17 { pt3dadd( -84.7488, 92.7427, -25.1223, 1.13 ) }
    dend_17 { pt3dadd( -85.8772, 94.6117, -26.4476, 0.23 ) }
    dend_17 { pt3dadd( -86.1815, 95.1495, -26.8607, 0.23 ) }
    dend_17 { pt3dadd( -86.9183, 96.3929, -27.8981, 1.59 ) }
    dend_17 { pt3dadd( -88.0148, 98.1603, -29.3465, 0.45 ) }
    dend_17 { pt3dadd( -89.6757, 100.457, -31.3641, 1.36 ) }
    dend_17 { pt3dadd( -90.507, 101.308, -32.2353, 0.23 ) }
    dend_17 { pt3dadd( -92.0908, 102.504, -33.5751, 1.13 ) }
    dend_17 { pt3dadd( -93.1235, 103.104, -34.3441, 0.23 ) }
    dend_17 { pt3dadd( -93.732, 103.384, -34.728, 0.23 ) }
    dend_17 { pt3dadd( -95.9441, 104.194, -35.8243, 0.91 ) }
    dend_17 { pt3dadd( -97.4116, 104.689, -36.3573, 0.23 ) }
    dend_17 { pt3dadd( -98.8463, 105.14, -36.7837, 0.91 ) }
    dend_17 { pt3dadd( -101.354, 105.885, -37.1857, 0.23 ) }
    dend_17 { pt3dadd( -102.972, 106.358, -37.2803, 1.13 ) }
    dend_17 { pt3dadd( -105.611, 107.157, -37.3258, 0.23 ) }
    dend_17 { pt3dadd( -106.299, 107.362, -37.2652, 0.23 ) }
    dend_17 { pt3dadd( -107.672, 107.728, -36.9665, 1.13 ) }
    dend_17 { pt3dadd( -110.919, 108.464, -35.7486, 0.23 ) }
    dend_17 { pt3dadd( -112.313, 108.742, -34.8389, 1.13 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 72/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -81.637, 87.0183, -21.2198, 0.23 ) }
    dend_14 { pt3dadd( -82.3472, 86.6488, -21.2713, 0.23 ) }
    dend_14 { pt3dadd( -83.9226, 85.8731, -21.3884, 1.59 ) }
    dend_14 { pt3dadd( -85.73, 85.0536, -21.4862, 0.45 ) }
    dend_14 { pt3dadd( -87.121, 84.5827, -21.7686, 1.13 ) }
    dend_14 { pt3dadd( -87.6127, 84.4655, -21.9331, 0.23 ) }
    dend_14 { pt3dadd( -88.9345, 84.2113, -22.3588, 1.13 ) }
    dend_14 { pt3dadd( -90.1623, 84.0637, -22.8319, 0.23 ) }
    dend_14 { pt3dadd( -90.8942, 84.0008, -23.2125, 0.91 ) }
    dend_14 { pt3dadd( -93.5682, 83.7324, -24.7581, 0.23 ) }
    dend_14 { pt3dadd( -94.5701, 83.5066, -25.5282, 0.23 ) }
    dend_14 { pt3dadd( -95.7849, 82.8859, -26.8518, 1.13 ) }
    dend_14 { pt3dadd( -96.4473, 82.2318, -27.7771, 0.23 ) }
    dend_14 { pt3dadd( -97.0838, 81.3392, -28.7983, 0.23 ) }
    dend_14 { pt3dadd( -97.6514, 80.3857, -29.7453, 2.27 ) }
    dend_14 { pt3dadd( -98.3896, 79.0691, -30.8414, 0.23 ) }
    dend_14 { pt3dadd( -99.7475, 76.9029, -32.7197, 0.23 ) }
    dend_14 { pt3dadd( -100.539, 75.8156, -33.7492, 0.23 ) }
    dend_14 { pt3dadd( -100.684, 75.6517, -33.9046, 1.13 ) }
    dend_14 { pt3dadd( -102.587, 74.1195, -35.4414, 0.23 ) }
    dend_14 { pt3dadd( -103.528, 73.6291, -36.0553, 0.91 ) }
    dend_14 { pt3dadd( -104.835, 73.3846, -36.6538, 0.23 ) }
    dend_14 { pt3dadd( -105.499, 73.3919, -36.8514, 1.81 ) }
    dend_14 { pt3dadd( -105.972, 73.4609, -36.9764, 1.81 ) }
    dend_14 { pt3dadd( -107.654, 73.8625, -37.308, 0.23 ) }
    dend_14 { pt3dadd( -108.639, 74.3232, -37.3449, 0.91 ) }
    dend_14 { pt3dadd( -110.153, 75.2286, -37.4011, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -41.5806, 247.106, -24.8619, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -43.0295, 250.982, -23.6312, 0.23 ) }
    dend_10 { pt3dadd( -43.4899, 252.224, -23.1637, 0.91 ) }
    dend_10 { pt3dadd( -44.045, 253.734, -22.5867, 0.23 ) }
    dend_10 { pt3dadd( -44.2398, 254.317, -22.3659, 0.91 ) }
    dend_10 { pt3dadd( -44.7026, 255.851, -21.7601, 0.23 ) }
    dend_10 { pt3dadd( -45.2445, 257.785, -20.9761, 1.13 ) }
    dend_10 { pt3dadd( -45.8285, 260.023, -19.9937, 0.23 ) }
    dend_10 { pt3dadd( -46.0325, 260.944, -19.605, 0.23 ) }
    dend_10 { pt3dadd( -46.3476, 262.823, -18.8815, 0.68 ) }
    dend_10 { pt3dadd( -46.572, 264.589, -18.2226, 0.23 ) }
    dend_10 { pt3dadd( -46.6599, 265.569, -17.8851, 1.13 ) }
    dend_10 { pt3dadd( -46.8145, 267.517, -17.3386, 0.23 ) }
    dend_10 { pt3dadd( -46.9435, 268.469, -17.1173, 0.91 ) }
    dend_10 { pt3dadd( -47.3551, 270.69, -16.7274, 0.23 ) }
    dend_10 { pt3dadd( -47.4331, 271.012, -16.6951, 0.68 ) }
    dend_10 { pt3dadd( -47.7105, 271.99, -16.6624, 0.23 ) }
    dend_10 { pt3dadd( -48.029, 272.922, -16.6947, 0.23 ) }
    dend_10 { pt3dadd( -48.6673, 274.521, -16.7993, 1.13 ) }
    dend_10 { pt3dadd( -49.7909, 277.103, -17.0206, 0.23 ) }
    dend_10 { pt3dadd( -50.3499, 278.318, -17.152, 0.91 ) }
    dend_10 { pt3dadd( -50.7723, 279.241, -17.2558, 0.23 ) }
    dend_10 { pt3dadd( -51.5451, 281.118, -17.3941, 0.68 ) }
    dend_10 { pt3dadd( -52.0084, 282.233, -17.4863, 0.23 ) }
    dend_10 { pt3dadd( -52.6945, 283.907, -17.6389, 1.13 ) }
    dend_10 { pt3dadd( -53.8567, 286.812, -17.8398, 0.23 ) }
    dend_10 { pt3dadd( -54.3378, 288.053, -17.9071, 0.68 ) }
    dend_10 { pt3dadd( -55.1816, 290.427, -17.9701, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -41.5806, 247.106, -24.8619, 0.23 ) }
    dend_9 { pt3dadd( -43.2083, 252.639, -24.2435, 0.23 ) }
    dend_9 { pt3dadd( -44.0233, 255.195, -24.009, 0.23 ) }
    dend_9 { pt3dadd( -44.5343, 256.798, -23.862, 0.91 ) }
    dend_9 { pt3dadd( -45.3035, 259.21, -23.6406, 0.23 ) }
    dend_9 { pt3dadd( -46.0813, 261.65, -23.4168, 0.91 ) }
    dend_9 { pt3dadd( -46.791, 263.875, -23.2126, 0.23 ) }
    dend_9 { pt3dadd( -47.3386, 265.953, -22.8954, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 35/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -110.153, 75.2286, -37.4011, 1.59 ) }
    dend_16 { pt3dadd( -112.301, 76.37, -39.1782, 1.59 ) }
    dend_16 { pt3dadd( -114.604, 77.5936, -41.0832, 0.23 ) }
    dend_16 { pt3dadd( -115.621, 78.1342, -41.925, 0.68 ) }
    dend_16 { pt3dadd( -117.32, 79.0366, -43.33, 0.23 ) }
    dend_16 { pt3dadd( -118.927, 79.8906, -44.6596, 1.13 ) }
    dend_16 { pt3dadd( -122.169, 81.6131, -47.3416, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 42/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -110.153, 75.2286, -37.4011, 1.36 ) }
    dend_15 { pt3dadd( -111.691, 75.3669, -36.8238, 1.36 ) }
    dend_15 { pt3dadd( -112.612, 75.4584, -36.5297, 0.45 ) }
    dend_15 { pt3dadd( -114.514, 75.7, -35.9795, 1.13 ) }
    dend_15 { pt3dadd( -117.677, 76.2947, -35.2046, 0.23 ) }
    dend_15 { pt3dadd( -118.98, 76.5899, -34.9133, 1.13 ) }
    dend_15 { pt3dadd( -121.766, 77.3328, -34.396, 0.23 ) }
    dend_15 { pt3dadd( -122.308, 77.5247, -34.3235, 0.23 ) }
    dend_15 { pt3dadd( -123.854, 78.1425, -34.1686, 1.13 ) }
    dend_15 { pt3dadd( -126.236, 79.1971, -34.092, 0.23 ) }
    dend_15 { pt3dadd( -126.92, 79.5179, -34.1198, 1.13 ) }
    dend_15 { pt3dadd( -128.76, 80.3725, -34.1953, 0.23 ) }
    dend_15 { pt3dadd( -130.2, 80.9675, -34.2381, 0.91 ) }
    dend_15 { pt3dadd( -131.871, 81.4989, -34.3001, 0.23 ) }
    dend_15 { pt3dadd( -133.217, 81.7509, -34.3607, 0.91 ) }
    dend_15 { pt3dadd( -133.804, 81.7636, -34.3723, 0.23 ) }
    dend_15 { pt3dadd( -135.345, 81.6913, -34.3951, 0.91 ) }
    dend_15 { pt3dadd( -136.701, 81.4875, -34.3861, 0.23 ) }
    dend_15 { pt3dadd( -138.04, 81.1686, -34.3906, 0.91 ) }
    dend_15 { pt3dadd( -138.643, 80.989, -34.38, 0.23 ) }
    dend_15 { pt3dadd( -140.826, 80.2266, -34.2093, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_24, dend_5, dend_0, dend_36, dend_35, dend_29, dend_28, dend_21, dend_6, dend_4, dend_1, dend_31, dend_30, dend_23, dend_22, dend_12, dend_7, dend_3, dend_2, dend_33, dend_32, dend_18, dend_13, dend_11, dend_8, dend_20, dend_19, dend_17, dend_14, dend_10, dend_9, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_24, dend_5, dend_0, dend_36, dend_35, dend_29, dend_28, dend_21, dend_6, dend_4, dend_1, dend_31, dend_30, dend_23, dend_22, dend_12, dend_7, dend_3, dend_2, dend_33, dend_32, dend_18, dend_13, dend_11, dend_8, dend_20, dend_19, dend_17, dend_14, dend_10, dend_9, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_28 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_7 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_17 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_5 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_19 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 7
    dend_26 nseg = 9
    dend_25 nseg = 5
    dend_24 nseg = 7
    dend_0 nseg = 5
    dend_36 nseg = 7
    dend_28 nseg = 11
    dend_21 nseg = 15
    dend_4 nseg = 9
    dend_31 nseg = 19
    dend_30 nseg = 7
    dend_12 nseg = 5
    dend_7 nseg = 3
    dend_18 nseg = 5
    dend_11 nseg = 3
    dend_8 nseg = 9
    dend_20 nseg = 5
    dend_17 nseg = 3
    dend_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_NBC_768f1bf7ac_0_0


