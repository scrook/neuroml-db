// Cell: bNAC219_L1_HAC_f8c9772d9d_0_0
/*
{
  "id" : "bNAC219_L1_HAC_f8c9772d9d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.80955, -7.56547, 0.0, 2.78828", "-3.43318, -6.80001, 0.0, 4.90928", "-3.05681, -6.03456, 0.0, 7.20539", "-2.68044, -5.2691, 0.0, 8.94517", "-2.30407, -4.50365, 0.0, 10.2527", "-1.9277, -3.7382, 0.0, 11.4469", "-1.55133, -2.97274, 0.0, 12.3814", "-1.17496, -2.20729, 0.0, 13.1179", "-0.798584, -1.44183, 0.0, 13.5254", "-0.422213, -0.676379, 0.0, 13.6936", "-0.0458416, 0.0890748, 0.0, 13.7724", "0.33053, 0.854529, 0.0, 13.6581", "0.706901, 1.61998, 0.0, 13.5309", "1.08327, 2.38544, 0.0, 13.3741", "1.45964, 3.15089, 0.0, 13.1125", "1.83601, 3.91635, 0.0, 12.4905", "2.21239, 4.6818, 0.0, 11.7489", "2.58876, 5.44725, 0.0, 10.3682", "2.96513, 6.21271, 0.0, 8.59077", "3.3415, 6.97816, 0.0, 6.15897", "3.71787, 7.74362, 0.0, 3.31537" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-5.06404, -6.93531, -0.289997, 2.65", "-5.47631, -8.45381, 0.439642, 2.65", "-6.07827, -10.4452, 1.44454, 2.14", "-6.52606, -11.8054, 2.18523, 1.62", "-6.86613, -12.7692, 2.74429, 1.62", "-7.22789, -13.7305, 3.33868, 1.62", "-7.51555, -14.4466, 3.83919, 1.62", "-7.78279, -14.9885, 4.36677, 1.62", "-7.90163, -15.0236, 4.95605, 1.62", "-7.90363, -14.7059, 5.64675, 1.62", "-7.84804, -14.2598, 6.39357, 1.4", "-7.70446, -13.5532, 7.47078, 1.4", "-7.49788, -12.7184, 8.7235, 1.4", "-7.23637, -11.7572, 10.1682, 1.18", "-6.96366, -10.7121, 11.7354, 0.96", "-6.76223, -9.98408, 12.8794, 0.96", "-6.50894, -9.09923, 14.2978, 0.96", "-6.32695, -8.42419, 15.3315, 1.25", "-6.22957, -8.0089, 15.9632, 1.92", "-6.13207, -7.42821, 16.8887, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999480938624
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.96404, -6.69531, 6.53, 3.1", "-4.96404, -6.69531, 6.53, 3.1", "-5.63063, -7.65269, 7.21013, 2.21", "-6.38417, -8.5912, 7.7527, 1.99", "-7.30541, -9.5989, 8.27927, 2.43", "-8.03198, -10.2756, 8.64372, 2.73", "-9.52173, -11.4872, 9.22695, 2.36", "-11.3358, -12.7092, 9.73048, 1.77", "-13.3873, -13.759, 10.0602, 1.33", "-14.5043, -14.223, 10.166, 1.33", "-16.0231, -14.7011, 10.1617, 1.33", "-18.0499, -15.1225, 9.94255, 1.47", "-18.7755, -15.1609, 9.76537, 1.92", "-19.428, -15.058, 9.53931, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999480938624
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.67404, -0.335303, -3.54, 1.18", "-3.79247, -0.15264, -3.5666, 1.18", "-4.55925, 0.765694, -3.68373, 1.03", "-5.57694, 1.71575, -3.76564, 0.81", "-6.67399, 2.57201, -3.78975, 0.66", "-7.73711, 3.34541, -3.78282, 0.66", "-8.38245, 3.80219, -3.769, 0.66", "-9.56771, 4.53524, -3.68485, 0.96", "-10.8032, 5.14186, -3.51026, 0.66", "-11.9077, 5.54996, -3.2857, 0.59", "-12.9431, 5.81403, -3.04017, 0.59", "-13.9009, 5.94953, -2.82934, 0.74", "-14.9005, 5.95843, -2.66924, 0.88", "-16.2372, 5.77404, -2.62266, 0.88", "-17.2248, 5.56051, -2.72181, 0.96", "-18.4713, 5.2632, -2.93185, 0.96", "-19.429, 5.06815, -3.08168, 0.74", "-20.529, 4.93074, -3.19301, 0.59", "-21.898, 4.93635, -3.2376, 0.66", "-23.1592, 5.11915, -3.16425, 0.81", "-24.4405, 5.4756, -2.94352, 0.88", "-25.7379, 5.96357, -2.64294, 0.74", "-27.0998, 6.54999, -2.28428, 0.74", "-28.3307, 7.12581, -1.97693, 0.66", "-29.2213, 7.55853, -1.79339, 0.66", "-30.3494, 8.11524, -1.64164, 0.66", "-31.4075, 8.6345, -1.61402, 0.66", "-32.5386, 9.1633, -1.75068, 0.74", "-34.1812, 9.89915, -2.16641, 0.66", "-35.2116, 10.3003, -2.52793, 0.66", "-36.562, 10.7104, -3.11151, 0.74", "-37.7658, 10.956, -3.73214, 0.74", "-39.2821, 11.0937, -4.58419, 0.88", "-40.0611, 11.0443, -5.08106, 0.88", "-40.8258, 10.8108, -5.63467, 0.59", "-41.4833, 10.4352, -6.14069, 0.59", "-41.9471, 10.0378, -6.53189, 0.59", "-42.573, 9.36327, -7.06475, 0.59", "-43.0884, 8.74779, -7.44361, 0.52", "-43.7131, 8.03317, -7.8731, 0.52", "-44.3564, 7.36544, -8.34636, 0.44", "-45.2234, 6.68851, -9.01945, 0.44", "-45.8633, 6.41425, -9.53146, 0.44", "-46.595, 6.4244, -10.0649, 0.44", "-47.4483, 6.72338, -10.6284, 0.59", "-48.2643, 7.126, -11.104, 0.59", "-49.3356, 7.70326, -11.7075, 0.52", "-50.247, 8.16223, -12.1658, 0.52", "-51.4622, 8.66195, -12.7662, 0.44", "-52.6705, 9.03534, -13.3936, 0.44", "-53.4864, 9.17997, -13.7805, 0.52", "-54.366, 9.20202, -14.19, 0.52", "-55.1983, 9.06949, -14.611, 0.59", "-56.0313, 8.81615, -15.0851, 0.52", "-56.3881, 8.67916, -15.307, 0.52", "-56.6994, 8.56915, -15.4787, 0.52", "-57.5158, 8.40145, -15.8939, 0.59", "-58.1898, 8.40821, -16.1838, 0.88", "-58.3964, 8.44434, -16.2732, 0.88", "-59.0613, 8.65231, -16.5461, 0.52", "-59.7898, 8.99679, -16.8481, 0.44", "-60.9554, 9.77375, -17.332, 0.44", "-62.0591, 10.7415, -17.769, 0.44", "-62.5692, 11.2976, -18.0045, 0.37", "-62.9911, 11.7963, -18.2099, 0.37", "-63.5819, 12.5859, -18.5229, 0.37", "-63.9546, 13.1913, -18.7604, 0.37", "-64.1399, 13.6704, -18.9208, 0.07", "-64.5403, 15.3089, -19.3724, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999480938624,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.424043, 8.25469, 7.78, 4.65", "-0.424043, 8.25469, 7.78, 4.65", "-0.755907, 9.16889, 8.8679, 3.76", "-1.165, 10.2959, 10.209, 2.29", "-1.54964, 11.3555, 11.4699, 1.7", "-1.81069, 12.0746, 12.3256, 1.7", "-1.95199, 12.4638, 12.7888, 1.7", "-2.12054, 12.9405, 13.3383, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999480938624
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.56596, -7.38531, 1.4, 0.88", "1.56596, -7.38531, 1.4, 0.88", "1.57649, -7.94102, 1.5813, 0.88", "1.62118, -8.45522, 1.74131, 0.88", "1.80058, -9.53089, 2.06013, 0.81", "1.9827, -10.2114, 2.26069, 0.52", "2.30151, -11.0425, 2.50501, 0.81", "2.46808, -11.4355, 2.62358, 0.88", "2.81833, -12.1227, 2.84163, 0.81", "3.15144, -12.6231, 3.00033, 1.03", "3.70566, -13.1907, 3.15422, 1.4", "4.31317, -13.6487, 3.2746, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999480938624
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.71787, 7.74362, 0.0, 0.592928", "10.3365, 21.2044, 0.0, 0.592928", "16.9551, 34.6653, 0.0, 0.592928" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.13207, -7.42821, 16.8887, 1.25", "-7.32787, -7.48203, 18.0637, 1.25", "-8.62006, -7.54019, 19.3334, 1.18", "-9.69377, -7.58852, 20.3884, 1.7", "-10.7591, -7.63647, 21.4352, 1.99" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.13207, -7.42821, 16.8887, 1.18", "-5.7675, -6.97631, 18.2745, 1.18", "-5.19692, -6.27831, 20.3699, 0.96", "-4.66102, -5.71184, 22.0672, 0.96", "-4.28922, -5.31884, 23.2448, 0.96", "-3.96869, -4.98002, 24.26, 1.33", "-3.62693, -4.61877, 25.3425, 1.33", "-3.36529, -4.36204, 26.1716, 1.33", "-2.75892, -3.81466, 27.7505, 1.47" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.428, -15.058, 9.53931, 1.33", "-19.9606, -14.7688, 8.12873, 1.33", "-20.8343, -14.498, 6.15316, 0.81", "-21.5741, -14.2687, 4.48013, 0.81", "-22.1043, -14.1044, 3.28124, 0.81", "-22.5145, -13.9772, 2.35363, 0.81", "-22.7734, -13.897, 1.76812, 0.96", "-23.5605, -13.7894, 0.242016, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-19.428, -15.058, 9.53931, 0.81", "-19.7714, -15.0025, 10.2487, 0.81", "-20.3331, -14.9707, 11.2686, 0.74", "-22.1073, -14.9656, 14.1588, 0.88", "-23.1175, -14.9716, 15.6086, 0.66", "-23.8395, -14.9628, 16.5473, 0.66", "-24.3564, -14.9564, 17.2195, 0.66", "-24.9261, -14.972, 17.9415, 0.81", "-25.6286, -15.028, 18.8091, 0.96", "-26.5438, -15.128, 19.5489, 1.33", "-27.2878, -15.1858, 20.0216, 1.77" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.12054, 12.9405, 13.3383, 1.11", "-2.01861, 14.0658, 13.3533, 1.11", "-1.89152, 15.4004, 13.3623, 1.03", "-1.7252, 17.3006, 13.3671, 1.03", "-1.60641, 18.6579, 13.3706, 1.11", "-1.53192, 19.5089, 13.3727, 1.11", "-1.46343, 20.2914, 13.3747, 1.11", "-1.41557, 20.6738, 13.3786, 1.11", "-1.30195, 21.3286, 13.3985, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.12054, 12.9405, 13.3383, 1.33", "-2.8128, 14.0554, 15.7939, 1.33", "-3.0744, 14.7203, 17.117, 0.81", "-3.1562, 15.1939, 17.9173, 0.81", "-3.18528, 15.7548, 18.791, 0.66", "-3.16823, 16.4007, 19.7116, 0.66", "-3.12364, 17.0144, 20.4915, 0.88", "-2.96597, 17.8691, 21.2888, 0.88", "-2.74226, 19.0182, 22.1845, 0.88", "-2.66533, 19.6486, 22.6229, 0.88", "-2.65584, 20.361, 23.0809, 0.88", "-2.81682, 21.4033, 23.6976, 1.03", "-3.08879, 22.213, 24.1539, 0.66", "-3.53429, 23.0201, 24.5869, 0.66", "-4.45361, 24.0867, 25.2048, 0.66", "-5.36551, 24.8474, 25.6935, 0.66", "-6.2066, 25.4253, 26.1057, 0.88", "-6.89453, 25.7987, 26.4161, 1.03", "-7.80831, 26.1902, 26.7976, 0.59", "-9.11574, 26.5973, 27.2634, 0.59", "-9.91664, 26.7254, 27.4747, 0.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.31317, -13.6487, 3.2746, 1.4", "4.55386, -13.4794, 3.6819, 1.4", "4.83468, -13.2734, 4.20861, 1.11", "5.00472, -13.1342, 4.57713, 1.11", "5.20524, -12.937, 5.13606, 1.11", "5.31003, -12.8218, 5.48353, 0.96", "5.46939, -12.6439, 6.08847, 0.88", "5.64914, -12.4553, 6.8946, 0.88", "5.79763, -12.3227, 7.61325, 0.88", "6.05412, -12.1562, 8.81196, 0.88", "6.28721, -12.0573, 9.75492, 0.88", "6.60761, -11.9586, 10.8253, 0.88", "7.02754, -11.8543, 11.9414, 1.03", "7.57333, -11.7227, 13.0615, 1.11", "8.09803, -11.5868, 13.9347, 1.11", "8.53913, -11.4498, 14.552, 1.4", "9.19236, -11.2074, 15.371, 1.47", "9.9269, -10.8736, 16.223, 1.47", "10.7406, -10.4432, 17.1415, 1.33", "11.3935, -10.0627, 17.8947, 1.18", "12.0279, -9.67418, 18.6841, 1.03", "12.3467, -9.48428, 19.145, 0.96", "12.7919, -9.2618, 19.8691, 0.81", "13.2059, -9.12207, 20.6026, 0.81", "13.5972, -9.06109, 21.3516, 0.81", "14.0754, -9.08187, 22.2049, 0.81", "14.6939, -9.21304, 23.2101, 1.11", "15.2544, -9.39413, 24.0284, 1.4", "15.9963, -9.70234, 24.953, 1.4", "16.4886, -9.94371, 25.4595, 1.4", "17.6146, -10.5551, 26.438, 0.52", "18.3188, -10.9389, 26.959, 1.03", "18.7981, -11.1899, 27.2818, 1.25", "19.6085, -11.5795, 27.8148, 0.66", "20.5467, -11.9464, 28.4409, 0.52", "21.3066, -12.1467, 28.996, 0.52", "21.789, -12.1498, 29.4519, 0.66", "22.4009, -11.9438, 30.2127, 0.88", "22.7926, -11.6781, 30.8513, 1.18", "23.2294, -11.2038, 31.7779, 1.18", "23.4454, -10.8945, 32.337, 0.81", "23.8455, -10.267, 33.4004, 0.66", "24.2048, -9.74852, 34.3279, 0.66", "24.5701, -9.31433, 35.2159, 0.66", "25.0507, -8.84774, 36.313, 0.66", "25.5012, -8.50734, 37.2503, 1.33", "26.0079, -8.2016, 38.1108, 2.21", "27.0207, -7.7008, 39.4686, 0.88", "27.8375, -7.33658, 40.3356, 0.66", "28.515, -7.04274, 40.9484, 0.81", "29.1745, -6.73954, 41.4854, 0.96", "30.476, -6.0558, 42.4818, 0.59", "31.217, -5.61523, 43.0511, 0.59", "31.9161, -5.14447, 43.5437, 0.52", "32.4538, -4.75703, 43.9616, 0.52", "32.9972, -4.37769, 44.4776, 0.52", "33.3872, -4.10773, 44.9393, 0.52", "33.8593, -3.79974, 45.5926, 0.59", "34.4321, -3.4511, 46.3704, 0.66", "35.0144, -3.12265, 47.1505, 0.59", "35.545, -2.84153, 47.8362, 0.59", "36.0061, -2.59324, 48.4344, 0.59", "36.2863, -2.41028, 48.8083, 0.96", "36.7621, -2.016, 49.4867, 1.77", "37.5129, -1.25871, 50.6056, 0.59", "38.0954, -0.619752, 51.4356, 0.74", "38.4066, -0.275565, 51.8529, 1.33", "38.9773, 0.377143, 52.6117, 1.92", "39.5837, 1.113, 53.4492, 1.11", "40.1591, 1.85892, 54.2694, 0.44", "40.4386, 2.25738, 54.6649, 0.44", "40.6763, 2.60479, 54.9978, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.31317, -13.6487, 3.2746, 0.66", "4.55831, -14.916, 3.41639, 0.66", "4.7034, -16.0128, 3.43726, 0.44", "4.80529, -17.5258, 3.43075, 0.44", "4.80818, -18.3056, 3.44806, 0.52", "4.79063, -19.0562, 3.49689, 0.74", "4.77262, -19.7134, 3.54458, 1.18", "4.72912, -20.1886, 3.60816, 1.7", "4.66072, -20.913, 3.71749, 1.11", "4.61012, -21.8219, 3.76287, 0.59", "4.60231, -22.5196, 3.79202, 0.52", "4.6122, -23.0861, 3.82195, 0.52", "4.63419, -23.9068, 3.82477, 0.52", "4.64033, -24.4774, 3.8564, 0.74", "4.63651, -25.3719, 3.92325, 0.81", "4.61911, -26.1705, 4.00755, 0.81", "4.57883, -27.1918, 4.16647, 0.66", "4.54026, -28.2676, 4.39426, 0.44", "4.50183, -30.0331, 4.82958, 0.44", "4.50819, -30.6337, 5.02013, 0.66", "4.56171, -31.2841, 5.25852, 0.96", "4.65491, -31.8176, 5.44114, 1.11", "4.84748, -32.5195, 5.6243, 1.55", "4.97916, -32.8662, 5.65542, 1.55", "5.0742, -33.0785, 5.62678, 1.55", "5.49798, -33.9429, 5.4051, 0.66", "5.93785, -34.7739, 5.06865, 0.44", "6.19497, -35.2403, 4.84378, 0.44", "6.52882, -35.8125, 4.53645, 0.44", "6.73708, -36.1587, 4.34615, 0.88", "7.10222, -36.7553, 4.01899, 1.33", "7.65625, -37.679, 3.50821, 1.33", "8.13163, -38.5298, 3.0813, 0.66", "8.48224, -39.3036, 2.76564, 0.37", "8.61196, -39.7222, 2.63773, 0.37", "8.64837, -40.0825, 2.56188, 0.37", "8.58389, -40.6056, 2.49892, 0.37", "8.33374, -41.3813, 2.44333, 0.37", "7.96912, -42.3075, 2.33357, 0.37", "7.7774, -42.8289, 2.24638, 0.81", "7.48302, -43.7982, 1.96586, 1.55", "7.36697, -44.2895, 1.75484, 1.7", "7.2036, -45.3336, 1.14414, 1.18", "7.09562, -46.5191, 0.226267, 0.81", "7.07213, -47.384, -0.655935, 0.52", "7.12086, -48.4471, -2.07453, 0.44", "7.22879, -49.0895, -3.22578, 0.44", "7.39317, -49.5216, -4.23952, 0.44", "7.57567, -49.7575, -5.02389, 0.44", "7.80291, -49.9233, -5.82081, 0.44", "7.99533, -50.0201, -6.39892, 0.44", "8.26015, -50.1636, -7.00545, 0.44", "8.55939, -50.4759, -7.53178, 0.44", "8.74099, -50.8921, -7.82777, 0.44", "8.90789, -51.3917, -8.08149, 0.44", "9.05317, -51.8691, -8.27999, 0.44", "9.28089, -52.6244, -8.52032, 1.7", "9.58857, -53.5707, -8.77087, 2.43", "10.4899, -55.9805, -9.34995, 0.44", "10.7759, -56.6466, -9.48969, 1.03", "11.0054, -57.1293, -9.5798, 1.18", "11.5849, -58.2492, -9.74313, 0.29", "11.941, -58.8938, -9.82214, 0.29", "12.3569, -59.5927, -9.87317, 0.29", "12.5005, -59.8203, -9.88151, 0.29", "12.8808, -60.5059, -10.008, 0.29", "13.1419, -61.0352, -10.1772, 0.29", "13.4906, -61.7562, -10.5008, 0.59", "13.7709, -62.3117, -10.8033, 0.88", "14.162, -62.9927, -11.2233, 0.44", "14.8431, -63.8509, -11.854, 0.44", "15.2818, -64.2648, -12.2122, 0.44", "15.8513, -64.7094, -12.63, 0.44", "16.5751, -65.2057, -13.1007, 1.03", "17.0509, -65.5199, -13.4036, 1.7", "18.0933, -66.2138, -14.0417, 0.52", "18.9544, -66.8224, -14.5285, 0.59", "19.3599, -67.1411, -14.7445, 0.59", "19.9763, -67.6675, -15.053, 0.07", "20.8913, -68.5071, -15.4824, 0.66", "21.7114, -69.3516, -15.8956, 0.29", "22.3223, -70.0701, -16.2155, 0.88", "22.9857, -70.9162, -16.5636, 0.22", "23.2823, -71.3235, -16.7154, 0.22", "23.5132, -71.6553, -16.8196, 0.22", "23.9203, -72.2524, -16.9473, 0.22", "24.1302, -72.5677, -17.0055, 0.22", "24.5385, -73.0877, -17.0944, 0.66", "25.0834, -73.6973, -17.1938, 0.15", "25.524, -74.1444, -17.2613, 0.15", "26.1471, -74.7427, -17.3339, 1.4", "26.4411, -75.0121, -17.359, 1.4", "27.6365, -76.1003, -17.474, 0.22", "28.1433, -76.5604, -17.5358, 0.59", "28.8023, -77.2011, -17.6611, 0.44", "29.3488, -77.7907, -17.8167, 0.22", "29.7037, -78.2244, -17.9854, 0.22", "29.9906, -78.6328, -18.1834, 0.59", "30.3054, -79.2309, -18.545, 0.74", "30.693, -80.1069, -19.1136, 0.22", "30.8531, -80.5226, -19.3916, 0.22", "31.1439, -81.2917, -19.9334, 0.96", "31.2953, -81.6889, -20.2365, 0.96", "31.6808, -82.68, -21.0555, 0.22", "32.0071, -83.4266, -21.7165, 0.59", "32.5216, -84.3347, -22.5804, 0.22", "32.9222, -84.923, -23.1819, 0.22", "33.3499, -85.4698, -23.7961, 0.22", "33.6724, -85.8361, -24.2613, 0.22", "34.0682, -86.24, -24.8288, 1.11", "34.7957, -86.9622, -25.873, 0.22", "35.3029, -87.4829, -26.5892, 0.22", "35.6074, -87.8086, -26.9913, 0.22", "36.1004, -88.3513, -27.5861, 0.81", "36.6801, -89.0082, -28.2522, 0.22", "37.0196, -89.3971, -28.6165, 0.59", "37.7595, -90.2347, -29.3665, 0.07", "38.3468, -90.8961, -29.9271, 0.07", "38.8105, -91.4259, -30.3474, 0.66", "39.4575, -92.2108, -30.9215, 0.66", "40.2184, -93.2048, -31.5975, 0.15", "40.7006, -93.8789, -32.0765, 0.15", "41.1482, -94.5319, -32.609, 0.15", "41.3136, -94.7786, -32.8497, 0.74", "41.589, -95.1832, -33.3337, 1.47", "41.9391, -95.6919, -34.0296, 0.81", "42.5283, -96.4956, -35.3011, 0.29", "43.0498, -97.1203, -36.3487, 0.29", "43.3319, -97.4285, -36.8672, 0.29", "43.6967, -97.8195, -37.4836, 0.29", "44.1343, -98.2852, -38.1318, 0.22", "44.601, -98.8199, -38.7265, 0.22", "44.9027, -99.2157, -39.0571, 0.52", "45.46, -100.102, -39.6199, 0.22", "45.7923, -100.743, -39.9576, 0.22", "46.0197, -101.27, -40.2048, 0.59", "46.203, -101.801, -40.431, 0.59", "46.3368, -102.33, -40.6319, 0.59", "46.5331, -103.3, -40.992, 0.29", "46.6421, -103.841, -41.2022, 0.29", "46.7548, -104.278, -41.4079, 0.29", "46.8979, -104.711, -41.6981, 0.59", "47.0008, -104.964, -41.9216, 0.59", "47.2017, -105.38, -42.4436, 0.29", "47.4609, -105.871, -43.3333, 0.15", "47.5984, -106.185, -44.1183, 0.37", "47.7038, -106.541, -45.4225, 0.37", "47.7059, -106.628, -45.9624, 0.37", "47.6658, -106.753, -46.9969, 0.37", "47.5949, -106.804, -47.7791, 0.37", "47.4569, -106.803, -48.7541, 0.37", "47.2376, -106.734, -50.0348, 0.37", "47.0653, -106.635, -50.9742, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "16.9551, 34.6653, 0.0, 0.480818", "23.5738, 48.1261, 0.0, 0.480818", "30.1924, 61.5869, 0.0, 0.480818" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-10.7591, -7.63647, 21.4352, 1.33", "-11.18, -6.97057, 21.6438, 1.33", "-11.9267, -5.66105, 21.9972, 0.59", "-12.6663, -4.17466, 22.3338, 0.59", "-13.1286, -3.17799, 22.5307, 0.74", "-13.3088, -2.79985, 22.6103, 1.03", "-13.5718, -2.28267, 22.7413, 1.03", "-14.0237, -1.43916, 22.9949, 1.03", "-14.46, -0.583533, 23.2749, 0.59", "-14.6815, -0.121728, 23.4403, 0.59", "-15.1949, 0.899754, 23.8358, 0.59", "-15.6774, 1.81945, 24.185, 0.59", "-16.1067, 2.59464, 24.4859, 0.96", "-16.6871, 3.58697, 24.858, 0.52", "-17.2039, 4.49198, 25.2117, 0.52", "-17.6911, 5.43, 25.6193, 0.74", "-18.1787, 6.51529, 26.1186, 1.18", "-18.399, 7.10156, 26.4358, 0.88", "-18.7051, 8.11215, 27.1525, 0.37", "-18.9053, 8.98756, 27.9131, 0.66", "-19.0847, 10.0609, 28.9839, 1.62", "-19.1337, 10.5237, 29.4891, 1.99", "-19.2127, 11.4931, 30.5816, 1.25", "-19.3282, 12.4986, 31.709, 1.03", "-19.445, 13.0747, 32.3561, 0.59", "-19.7261, 13.9198, 33.2098, 0.59", "-19.938, 14.3852, 33.6652, 0.59", "-20.1969, 14.881, 34.1701, 1.25", "-20.6754, 15.7423, 35.0775, 1.77", "-21.3543, 16.9799, 36.4258, 0.74", "-21.822, 17.8239, 37.3885, 1.03", "-22.4217, 18.9083, 38.5863, 0.66", "-23.114, 20.1006, 39.7988, 0.59", "-23.8362, 21.2774, 40.9414, 1.18", "-24.3705, 22.0781, 41.6302, 0.59", "-24.7452, 22.5512, 41.98, 0.59", "-25.6854, 23.4763, 42.5258, 0.59", "-27.5263, 24.8009, 42.8266, 0.44", "-29.8302, 26.1217, 42.6981, 0.44", "-30.5917, 26.5319, 42.5444, 0.81", "-31.2166, 26.8733, 42.3552, 0.96", "-31.9457, 27.2812, 42.0726, 0.74", "-33.3398, 28.008, 41.4783, 0.81", "-34.0106, 28.3418, 41.1157, 0.59", "-35.3351, 28.9715, 40.1527, 0.52", "-36.186, 29.3968, 39.4719, 0.37", "-36.9333, 29.794, 38.8401, 0.37", "-37.5459, 30.1094, 38.3246, 0.59", "-38.0688, 30.3741, 37.8892, 0.59", "-38.4546, 30.5542, 37.5679, 0.59", "-38.9658, 30.7773, 37.1681, 0.81", "-39.6, 31.076, 36.6774, 1.18", "-40.416, 31.4854, 36.0729, 0.52", "-41.2576, 31.922, 35.4254, 0.52", "-42.3001, 32.4298, 34.5922, 0.88", "-43.3953, 32.9026, 33.6448, 0.29", "-43.9844, 33.123, 33.0871, 0.52", "-44.8544, 33.4044, 32.2109, 0.52", "-45.2453, 33.5174, 31.7798, 0.52", "-45.7712, 33.6544, 31.1521, 0.52", "-46.332, 33.8061, 30.3327, 0.52", "-46.6603, 33.9213, 29.702, 0.52", "-46.8702, 34.0278, 29.2495, 0.52", "-47.1529, 34.2226, 28.5827, 0.52", "-47.377, 34.3988, 28.1531, 0.52", "-47.6703, 34.6377, 27.6671, 0.52", "-48.1736, 35.066, 26.8975, 0.37", "-48.7868, 35.609, 25.9706, 0.29", "-49.024, 35.8167, 25.6334, 0.59", "-49.6289, 36.3085, 24.8553, 1.11", "-50.7, 37.1138, 23.6137, 0.29", "-50.923, 37.2841, 23.3844, 0.29", "-51.3728, 37.6624, 22.9829, 0.29", "-51.9649, 38.2432, 22.5923, 0.29", "-52.5573, 38.9524, 22.4263, 0.44", "-53.185, 39.8594, 22.5977, 0.15", "-53.8027, 40.7768, 22.9948, 0.52", "-54.6562, 41.9264, 23.6929, 0.52", "-55.331, 42.6831, 24.292, 0.52", "-55.7964, 43.0923, 24.7081, 0.52", "-56.2863, 43.4192, 25.1247, 0.52", "-56.8589, 43.6671, 25.5032, 0.52", "-57.7621, 43.8554, 25.8362, 0.66", "-58.8451, 43.9468, 25.9989, 0.37", "-59.9584, 43.9239, 25.9838, 0.37", "-60.1976, 43.9051, 25.9436, 0.37", "-61.3439, 43.7873, 25.59, 0.37", "-62.2972, 43.6956, 25.1803, 0.37", "-63.1544, 43.6451, 24.7123, 0.37", "-64.0546, 43.6419, 24.1417, 0.52", "-64.7896, 43.6958, 23.6576, 0.66", "-65.2705, 43.7624, 23.374, 0.66", "-65.6909, 43.8661, 23.1344, 0.66", "-65.9985, 43.9951, 22.9975, 0.66", "-66.2589, 44.1305, 22.9284, 0.66", "-67.16, 44.6379, 22.8442, 0.44", "-68.1184, 45.1911, 22.8713, 0.44", "-69.2822, 45.8914, 22.9976, 0.59", "-70.0493, 46.3799, 23.1385, 0.59", "-70.9627, 46.9881, 23.3858, 0.59", "-72.2006, 47.8444, 23.81, 0.52", "-72.734, 48.2311, 23.9823, 0.52", "-73.2545, 48.5957, 24.1376, 0.52", "-73.9487, 49.0456, 24.3001, 0.59", "-74.7656, 49.5454, 24.3139, 0.59", "-75.5122, 49.9645, 24.0777, 0.59", "-76.9588, 50.631, 23.0845, 0.37", "-77.5772, 50.8599, 22.6057, 0.37", "-78.1539, 51.0449, 22.0852, 0.52", "-78.8001, 51.2182, 21.401, 0.96", "-79.498, 51.409, 20.5354, 0.96", "-80.2586, 51.6661, 19.4989, 0.96", "-81.1207, 52.1172, 18.3133, 0.81", "-81.8262, 52.5533, 17.2852, 0.81", "-82.3763, 52.927, 16.4783, 0.81", "-82.8608, 53.2884, 15.7959, 0.81", "-83.569, 53.9068, 14.788, 0.59", "-84.3789, 54.7153, 13.5449, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.7591, -7.63647, 21.4352, 0.59", "-11.1081, -7.81471, 22.352, 0.59", "-11.8089, -8.12799, 24.0875, 0.52", "-12.5205, -8.40098, 25.8197, 0.52", "-13.0526, -8.58118, 27.0889, 0.52", "-13.54, -8.74068, 28.1975, 0.74", "-13.9518, -8.87735, 29.0469, 0.74", "-14.2319, -8.97746, 29.5642, 0.52", "-14.9961, -9.27858, 30.74, 0.52", "-15.5281, -9.51144, 31.4827, 0.52", "-16.0802, -9.79803, 32.2395, 0.52", "-16.702, -10.176, 33.0826, 0.88", "-17.3039, -10.5912, 33.8858, 1.84", "-18.2385, -11.2728, 35.117, 0.66", "-18.9801, -11.8122, 36.0398, 0.66", "-19.6677, -12.3038, 36.8708, 0.44", "-20.0782, -12.5973, 37.3583, 0.44", "-20.2434, -12.7224, 37.5605, 0.44", "-20.8065, -13.1535, 38.2569, 0.44", "-21.1674, -13.4253, 38.7323, 0.44", "-21.6705, -13.7756, 39.4255, 0.44", "-22.1129, -14.0342, 40.1132, 0.88", "-22.7655, -14.3459, 41.2024, 0.22", "-23.4543, -14.6061, 42.3781, 0.22", "-24.0566, -14.7855, 43.4765, 0.22", "-24.3718, -14.8469, 44.1098, 1.18", "-25.1254, -14.8837, 45.6939, 0.44", "-25.7155, -14.8424, 46.8943, 1.03", "-26.753, -14.6924, 48.7905, 0.52", "-27.5036, -14.5608, 50.0229, 0.52", "-28.334, -14.4098, 51.2325, 0.52", "-29.3816, -14.2438, 52.6286, 0.29", "-30.1999, -14.1314, 53.6395, 0.29", "-30.8644, -14.061, 54.4228, 0.88", "-31.32, -14.0186, 54.9348, 2.29", "-32.4574, -13.9414, 56.1561, 0.66", "-32.9717, -13.91, 56.6942, 0.44", "-33.9806, -13.8275, 57.8774, 0.44", "-34.5804, -13.7338, 58.6858, 0.44", "-35.1303, -13.5797, 59.64, 0.44", "-35.4319, -13.4608, 60.2795, 0.44", "-35.7139, -13.3257, 60.9495, 0.44", "-36.1296, -13.1144, 61.9146, 0.66", "-36.5158, -12.9253, 62.7787, 1.62", "-37.9484, -12.2832, 65.8803, 0.59", "-38.6563, -12.0175, 67.371, 0.59", "-39.0378, -11.9181, 68.1523, 0.59", "-39.6484, -11.8355, 69.3476, 0.07", "-40.1513, -11.8133, 70.2492, 0.07", "-40.5623, -11.8102, 70.917, 0.07", "-41.0588, -11.8188, 71.5676, 0.07", "-41.8597, -11.8345, 72.534, 0.74", "-42.5985, -11.8257, 73.3866, 0.22", "-43.1746, -11.8041, 74.0093, 0.22", "-43.6532, -11.7585, 74.4924, 0.37", "-44.4099, -11.6141, 75.2891, 0.07", "-45.2244, -11.3603, 76.1494, 0.07", "-46.0658, -11.0111, 77.0601, 1.25", "-47.1405, -10.5198, 78.2292, 0.15", "-47.8642, -10.1696, 79.0504, 0.37", "-48.9803, -9.56413, 80.4477, 0.74", "-49.7038, -9.07791, 81.485, 0.15", "-50.2131, -8.66125, 82.3558, 0.15", "-50.4794, -8.40792, 82.9298, 0.15", "-50.9083, -7.95221, 84.0354, 1.03", "-51.3377, -7.49458, 85.2982, 1.03", "-51.6182, -7.20715, 86.2336, 1.03", "-51.934, -6.87467, 87.4325, 0.74", "-52.2993, -6.48302, 88.8703, 0.74", "-52.6127, -6.14463, 90.1225, 1.25", "-53.0017, -5.76195, 91.5791, 1.25", "-53.3716, -5.45736, 92.7753, 1.25", "-53.9277, -5.03259, 94.3842, 0.37", "-54.346, -4.71043, 95.4687, 0.37", "-54.5398, -4.55821, 95.8998, 0.37", "-54.943, -4.24254, 96.6176, 0.37", "-55.4258, -3.86762, 97.2409, 0.15", "-55.9978, -3.45276, 97.8466, 0.15", "-56.4708, -3.14771, 98.3098, 0.52", "-56.8482, -2.92728, 98.7143, 1.33", "-57.4244, -2.64502, 99.4185, 1.47", "-58.4521, -2.27124, 100.88, 0.44", "-59.4716, -2.04372, 102.493, 0.44", "-60.1986, -1.9355, 103.717, 0.15", "-61.0093, -1.88292, 105.189, 0.15", "-61.6371, -1.90561, 106.422, 0.59", "-62.4578, -2.06425, 108.185, 0.07", "-62.7063, -2.17277, 108.745, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.75892, -3.81466, 27.7505, 0.66", "-2.721, -3.20524, 28.602, 0.66", "-2.60014, -1.85316, 30.2336, 0.59", "-2.45308, -0.7335, 31.3839, 0.59", "-2.20153, 0.424714, 32.5009, 0.37", "-1.98325, 1.21961, 33.2135, 0.37", "-1.79967, 1.84208, 33.7325, 0.37", "-1.53125, 2.64402, 34.3388, 0.52", "-1.13721, 3.6518, 34.9112, 1.33", "-0.543506, 5.07409, 35.6603, 0.44", "-0.15074, 5.98713, 36.2134, 0.44", "0.103506, 6.58193, 36.6397, 0.44", "0.385407, 7.22471, 37.1744, 0.44", "0.811636, 8.2388, 38.0824, 1.03", "1.29808, 9.5318, 39.2478, 0.88", "1.72374, 10.828, 40.3537, 0.88", "1.89807, 11.3462, 40.8131, 0.74", "2.09652, 11.8899, 41.3035, 0.59", "2.41135, 12.6534, 41.9573, 0.29", "2.85298, 13.5807, 42.7061, 0.66", "3.35383, 14.4105, 43.2737, 0.22", "3.8286, 15.0758, 43.7087, 0.22", "4.19461, 15.5442, 44.0317, 0.22", "4.836, 16.3143, 44.5863, 1.33", "5.60886, 17.1877, 45.2254, 0.44", "6.46126, 18.0504, 45.8391, 0.52", "7.16421, 18.7167, 46.2746, 0.07", "7.72686, 19.2133, 46.5612, 0.07", "8.18531, 19.5988, 46.757, 0.07", "8.92431, 20.2048, 47.0462, 1.33", "10.2989, 21.2609, 47.4816, 0.07", "10.7744, 21.5793, 47.6056, 0.07", "11.7298, 22.1616, 47.8236, 0.44", "12.9542, 22.8433, 48.0897, 0.07", "13.7346, 23.2517, 48.2651, 0.07", "14.7786, 23.765, 48.5038, 0.07", "16.03, 24.4228, 48.7783, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.75892, -3.81466, 27.7505, 0.74", "-1.90274, -3.88399, 28.3393, 0.74", "-1.15771, -3.66356, 29.0541, 0.74", "-0.388325, -3.20955, 29.9318, 0.44", "0.171438, -2.86048, 30.516, 0.44", "1.13025, -2.31877, 31.3703, 0.44", "1.8721, -1.89963, 32.0313, 0.44", "2.60326, -1.35113, 32.7912, 0.74", "3.11354, -0.857985, 33.3735, 0.74", "3.65069, -0.201328, 34.0446, 1.03", "4.24241, 0.503088, 34.6517, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-23.5605, -13.7894, 0.242016, 0.96", "-24.341, -14.8346, 0.682344, 0.96", "-25.3505, -16.0934, 1.09895, 0.52", "-25.8548, -16.7354, 1.23295, 0.52", "-26.5768, -17.6937, 1.35863, 0.74", "-27.2598, -18.66, 1.43232, 0.88", "-27.977, -19.7418, 1.47217, 0.52", "-28.4918, -20.5508, 1.44073, 0.52", "-29.0768, -21.556, 1.36504, 0.81", "-29.4035, -22.1732, 1.34514, 1.11", "-29.8728, -23.1277, 1.39351, 0.88", "-30.4978, -24.4333, 1.63202, 0.44", "-30.9915, -25.3794, 1.96006, 0.66", "-31.5829, -26.3196, 2.46575, 1.03", "-32.3174, -27.2638, 3.19558, 1.18", "-33.1537, -28.136, 4.12303, 1.18", "-33.7524, -28.6251, 4.85857, 1.18", "-34.4462, -29.0791, 5.80323, 0.74", "-35.0678, -29.4195, 6.69776, 0.59", "-35.6835, -29.7225, 7.59954, 0.59", "-36.2923, -30.0405, 8.46517, 0.81", "-36.9112, -30.3669, 9.34926, 0.81", "-37.3364, -30.6097, 9.96964, 1.55", "-37.7985, -30.9125, 10.694, 1.99", "-38.301, -31.3295, 11.4823, 1.92", "-39.0859, -32.1017, 12.5741, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.5605, -13.7894, 0.242016, 0.96", "-23.5581, -13.8595, 1.93887E-4, 0.96", "-23.5619, -14.2727, -1.40334, 0.96", "-23.6678, -14.8887, -3.58032, 0.74", "-23.788, -15.1698, -4.6193, 0.74", "-23.9441, -15.3733, -5.41103, 0.74", "-24.1165, -15.5339, -6.01852, 0.74", "-24.3623, -15.7035, -6.62954, 0.74", "-24.7682, -15.925, -7.33461, 0.74", "-25.4539, -16.2763, -8.24122, 0.74", "-26.0396, -16.6165, -8.96323, 0.22", "-26.6322, -17.036, -9.77834, 0.44", "-27.0802, -17.4747, -10.5867, 0.44", "-27.2579, -17.812, -11.1563, 0.44", "-27.3069, -18.2911, -11.9249, 0.74", "-27.2074, -18.8974, -12.8975, 0.52", "-27.0312, -19.4793, -13.8988, 0.52", "-26.8862, -19.9218, -14.7157, 0.52", "-26.7276, -20.4835, -15.8379, 0.52", "-26.6449, -20.8767, -16.7371, 0.59", "-26.5931, -21.3673, -17.9555, 0.52", "-26.6451, -21.8143, -19.1475, 0.52", "-26.8191, -22.1587, -20.0089, 0.66", "-27.1325, -22.5082, -20.8436, 0.66", "-27.3514, -22.6842, -21.2445, 0.66", "-27.5052, -22.7911, -21.4748, 0.66", "-27.8654, -23.0437, -21.9778, 0.66", "-28.4038, -23.4275, -22.708, 0.52", "-28.9193, -23.7699, -23.427, 0.52", "-29.5443, -24.1432, -24.3116, 0.52", "-30.0319, -24.3971, -25.0494, 0.52", "-30.4883, -24.5846, -25.8061, 0.52", "-30.969, -24.7109, -26.703, 0.52", "-31.3372, -24.7312, -27.49, 0.52", "-31.5695, -24.7037, -28.0473, 0.52", "-31.7336, -24.6575, -28.5114, 0.52", "-31.841, -24.6258, -28.894, 0.52", "-31.9319, -24.6248, -29.2852, 0.52", "-32.0265, -24.704, -29.6875, 0.52", "-32.1844, -24.9149, -30.3334, 0.52", "-32.3337, -25.1098, -30.8785, 0.52", "-32.5018, -25.3334, -31.4931, 0.52", "-32.644, -25.5587, -31.9957, 0.74", "-32.8941, -26.051, -32.956, 0.81", "-33.1278, -26.6838, -34.0885, 0.81", "-33.2274, -27.1327, -34.8594, 0.81", "-33.2684, -27.4336, -35.3573, 0.81", "-33.3388, -28.3363, -36.7977, 0.29", "-33.3549, -28.8787, -37.6599, 0.44", "-33.3623, -29.41, -38.5059, 0.52", "-33.419, -30.0644, -39.5621, 0.52", "-33.4966, -30.4671, -40.2374, 0.52", "-33.5636, -30.6116, -40.5194, 0.52", "-33.691, -30.721, -40.8179, 0.52", "-33.9858, -30.8708, -41.281, 0.52", "-34.4397, -31.0598, -41.8668, 0.52", "-34.8773, -31.256, -42.4128, 0.44", "-35.3539, -31.5314, -43.0816, 0.44", "-35.695, -31.7864, -43.6521, 0.44", "-36.0846, -32.1423, -44.4559, 0.44", "-36.2907, -32.3761, -45.009, 0.44", "-36.4746, -32.627, -45.6595, 0.44", "-36.6676, -32.9167, -46.4491, 0.44", "-36.8804, -33.2916, -47.4013, 0.44", "-37.0982, -33.7145, -48.4118, 0.44", "-37.3235, -34.1414, -49.3441, 0.44", "-37.5118, -34.4861, -50.0686, 0.44", "-37.7797, -34.9594, -50.9775, 0.44", "-37.9964, -35.328, -51.667, 0.44", "-38.1856, -35.6567, -52.2144, 0.44", "-38.3341, -35.9272, -52.604, 0.44", "-38.6545, -36.4852, -53.3099, 0.44", "-39.1418, -37.3166, -54.2409, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-27.2878, -15.1858, 20.0216, 1.18", "-27.6168, -14.1742, 20.3389, 1.18", "-27.9768, -12.7429, 20.7947, 0.81", "-28.1229, -11.8672, 21.0615, 0.66", "-28.1839, -10.9521, 21.3166, 0.52", "-28.1818, -10.0622, 21.542, 0.52", "-28.16, -9.51859, 21.6808, 0.52", "-28.0499, -8.40424, 21.9425, 0.59", "-27.9433, -7.58962, 22.1057, 0.59", "-27.8025, -6.51882, 22.3594, 0.52", "-27.7489, -5.84977, 22.553, 0.52", "-27.7533, -5.28383, 22.753, 0.52", "-27.8851, -4.45979, 23.0886, 0.74", "-28.1721, -3.49749, 23.5374, 0.96", "-28.4008, -2.8235, 23.9028, 0.59", "-28.7268, -1.79858, 24.5596, 0.52", "-28.8314, -1.40236, 24.8528, 0.52", "-28.9776, -0.635631, 25.5177, 0.66", "-29.0657, 0.0344415, 26.1891, 0.88", "-29.1396, 0.906814, 27.1111, 1.55", "-29.1641, 1.84262, 28.131, 1.55", "-29.1288, 2.57984, 28.9721, 1.77", "-29.0408, 3.68882, 30.304, 1.33", "-28.9348, 4.63616, 31.5512, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-27.2878, -15.1858, 20.0216, 0.66", "-28.0882, -15.3208, 20.2052, 0.66", "-29.0207, -15.2339, 20.3848, 0.44", "-29.735, -15.0261, 20.5202, 0.29", "-30.4096, -14.8007, 20.6375, 0.29", "-30.6193, -14.7303, 20.6927, 0.29", "-31.1973, -14.5541, 20.8797, 0.74", "-32.1779, -14.2311, 21.2286, 0.29", "-33.2132, -13.885, 21.5392, 0.07", "-33.9333, -13.6841, 21.7248, 0.81", "-35.6216, -13.3528, 22.1358, 0.59", "-36.8552, -13.2004, 22.4456, 0.74", "-37.8724, -13.1417, 22.7358, 0.66", "-39.2443, -13.125, 23.2328, 0.66", "-40.1907, -13.1363, 23.6636, 0.52", "-41.1361, -13.1648, 24.212, 0.74", "-41.8853, -13.2141, 24.7699, 1.18", "-42.7375, -13.3199, 25.5885, 1.03", "-43.7174, -13.4926, 26.7266, 0.59", "-44.3414, -13.6189, 27.5573, 0.59", "-44.9685, -13.7344, 28.4304, 0.81", "-45.5531, -13.8187, 29.2102, 0.81", "-46.2309, -13.8871, 30.032, 0.59", "-46.6374, -13.8848, 30.4346, 0.52", "-47.144, -13.8105, 30.8007, 0.52", "-47.6393, -13.6878, 31.0894, 0.52", "-48.359, -13.4702, 31.4585, 0.81", "-49.1952, -13.2022, 31.8719, 1.47", "-50.3682, -12.8296, 32.4921, 0.59", "-51.3053, -12.5922, 33.0184, 0.29", "-51.8935, -12.4907, 33.3785, 0.29", "-52.3705, -12.4384, 33.69, 0.29", "-52.9553, -12.4038, 34.0999, 0.29", "-53.5068, -12.3835, 34.4556, 0.29", "-53.7496, -12.3817, 34.6054, 0.29", "-54.3925, -12.3486, 34.9968, 0.29", "-55.2592, -12.2228, 35.5051, 0.74", "-56.368, -11.9908, 36.1592, 0.52", "-57.0982, -11.8004, 36.5926, 0.52", "-58.0618, -11.4928, 37.1942, 0.29", "-58.8198, -11.2316, 37.694, 0.74", "-59.4434, -11.0046, 38.1485, 1.4", "-60.061, -10.7695, 38.6548, 1.7", "-60.5969, -10.5413, 39.1433, 1.4", "-61.481, -10.1441, 39.9967, 0.44", "-62.3514, -9.75524, 40.8517, 0.37", "-63.1396, -9.41872, 41.6426, 1.11", "-63.9566, -9.09125, 42.4722, 1.11", "-65.126, -8.62877, 43.6884, 0.29", "-66.1306, -8.24356, 44.7875, 0.29", "-66.5857, -8.08005, 45.2919, 0.29", "-67.1245, -7.89194, 45.8879, 0.29", "-67.3942, -7.80333, 46.1661, 0.66", "-67.9095, -7.65548, 46.6599, 0.81", "-68.4395, -7.53774, 47.136, 0.81", "-69.2391, -7.39174, 47.8241, 0.29", "-69.8663, -7.27165, 48.3057, 0.29", "-70.1546, -7.20963, 48.5134, 0.29", "-70.8855, -7.02426, 49.0429, 1.25", "-71.8718, -6.72702, 49.7663, 2.21", "-72.6898, -6.43304, 50.3884, 0.96", "-73.6069, -6.04885, 51.1131, 0.29", "-74.1271, -5.81071, 51.5262, 0.29", "-74.6254, -5.58467, 51.903, 0.29", "-75.5076, -5.20627, 52.5083, 0.29", "-75.7493, -5.11236, 52.6551, 0.29", "-76.5601, -4.82623, 53.1315, 0.29", "-76.9408, -4.72144, 53.3415, 0.29", "-77.9806, -4.50409, 53.8319, 1.92", "-79.2535, -4.2882, 54.3159, 0.59", "-79.5539, -4.24754, 54.4058, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.30195, 21.3286, 13.3985, 0.88", "-2.55848, 21.4427, 13.7781, 0.88", "-4.01595, 21.4248, 14.1529, 0.81", "-4.96583, 21.3075, 14.3939, 0.81", "-5.76647, 21.1295, 14.6041, 0.81", "-7.42327, 20.6185, 15.0715, 0.74", "-8.41326, 20.2562, 15.3668, 0.74", "-9.28213, 19.822, 15.6133, 0.74", "-10.297, 19.2454, 15.8969, 0.74", "-11.1856, 18.7431, 16.1583, 0.74", "-12.0607, 18.2886, 16.4518, 0.74", "-12.7688, 17.9832, 16.6213, 0.74", "-13.5552, 17.7409, 16.6747, 0.74", "-14.7031, 17.5136, 16.494, 0.88", "-15.6201, 17.4139, 16.1595, 0.96", "-16.3674, 17.3533, 15.7723, 0.96", "-18.9713, 17.0923, 14.126, 0.74", "-19.7887, 16.9396, 13.5576, 0.74", "-20.3096, 16.7616, 13.1813, 0.74", "-20.832, 16.5012, 12.8133, 0.74", "-21.4137, 16.1685, 12.4601, 0.74", "-22.2716, 15.679, 12.1, 0.74", "-23.2513, 15.1518, 11.9469, 0.74", "-24.3836, 14.6275, 11.8977, 0.88", "-25.2393, 14.3414, 11.9316, 0.88", "-26.4793, 14.1913, 12.0942, 0.88", "-27.5136, 14.3429, 12.3479, 0.88", "-28.0908, 14.5369, 12.5328, 0.88", "-28.8565, 14.873, 12.7883, 0.88", "-30.1185, 15.481, 13.2393, 0.81", "-31.5228, 16.1456, 13.7726, 0.74", "-32.8795, 16.7075, 14.2948, 0.74", "-34.0124, 17.0749, 14.6951, 0.59", "-35.3472, 17.3044, 15.1125, 0.52", "-36.1053, 17.3118, 15.298, 0.52", "-36.8158, 17.2051, 15.4301, 0.52", "-37.8798, 16.9262, 15.5473, 0.66", "-38.4046, 16.7551, 15.5652, 0.81", "-39.9002, 16.258, 15.5306, 0.37", "-41.013, 15.9649, 15.4852, 0.37", "-41.549, 15.9239, 15.4524, 0.37", "-42.1209, 16.0024, 15.4221, 0.59", "-42.5479, 16.1327, 15.4125, 1.11", "-42.95, 16.2888, 15.4483, 1.47", "-44.013, 16.7829, 15.6674, 0.66", "-45.0325, 17.2905, 16.0316, 0.29", "-45.3977, 17.4756, 16.1955, 0.44", "-46.1835, 17.8801, 16.5967, 0.52", "-47.1537, 18.3796, 17.1344, 0.37", "-47.5295, 18.5747, 17.3551, 0.29", "-48.2482, 18.9611, 17.7675, 0.29", "-48.6177, 19.167, 18.0041, 0.29", "-49.2761, 19.5952, 18.4488, 0.52", "-49.6246, 19.8234, 18.6696, 0.52", "-49.9864, 19.9971, 18.8579, 0.52", "-50.6548, 20.2102, 19.1037, 0.74", "-51.2432, 20.3266, 19.2521, 1.33", "-52.0751, 20.4354, 19.3832, 1.11", "-53.4334, 20.5573, 19.491, 0.66", "-54.9985, 20.6749, 19.5168, 0.44", "-56.6405, 20.7806, 19.4567, 0.44", "-57.0835, 20.8035, 19.4151, 0.44", "-58.0992, 20.8435, 19.2437, 0.29", "-58.814, 20.8548, 19.0629, 0.66", "-59.2751, 20.8426, 18.9038, 1.25", "-59.8255, 20.808, 18.6716, 1.25", "-60.6202, 20.682, 18.3602, 0.59", "-61.4529, 20.4726, 17.971, 0.44", "-61.9414, 20.3056, 17.7141, 0.44", "-62.6506, 20.0495, 17.3104, 0.59", "-63.0765, 19.91, 17.0729, 0.59", "-63.9355, 19.6914, 16.6561, 0.29", "-64.6792, 19.5977, 16.4161, 0.29", "-65.0335, 19.5866, 16.3502, 0.29", "-65.613, 19.596, 16.286, 0.59", "-66.3469, 19.6231, 16.229, 1.18", "-67.174, 19.6607, 16.1518, 0.66", "-68.5685, 19.7378, 16.0488, 0.29", "-69.4803, 19.7642, 15.9981, 0.74", "-69.9585, 19.7578, 15.9804, 1.33", "-70.8128, 19.7042, 15.9597, 1.77", "-72.6654, 19.5103, 15.9355, 0.44", "-74.0717, 19.3027, 15.9605, 0.59", "-74.7848, 19.1646, 15.9981, 0.59", "-75.8008, 18.9462, 16.0, 0.22", "-76.3649, 18.8156, 15.9783, 0.22", "-76.8, 18.7153, 15.9452, 0.22", "-77.6004, 18.5751, 15.8144, 0.44", "-78.2645, 18.5319, 15.6578, 0.81", "-80.4107, 18.6983, 15.1069, 0.29", "-81.0455, 18.8553, 14.9407, 0.96", "-81.7204, 19.1027, 14.7647, 1.33", "-83.2093, 19.8035, 14.4838, 0.37", "-83.949, 20.233, 14.4063, 0.29", "-84.5597, 20.65, 14.4351, 0.29", "-85.4994, 21.3356, 14.6585, 0.07", "-85.8907, 21.6011, 14.7584, 0.07", "-87.2604, 22.3555, 15.1055, 0.22", "-87.5971, 22.4851, 15.1877, 0.81", "-88.2995, 22.6537, 15.3163, 1.33", "-89.6604, 22.8487, 15.552, 0.29", "-91.0004, 22.9456, 15.7589, 0.29", "-91.9645, 22.9787, 15.8835, 0.29", "-93.0934, 22.9868, 15.9861, 0.29", "-94.1245, 22.9766, 16.0846, 0.81", "-95.4289, 22.9375, 16.2193, 0.07", "-96.4603, 22.8833, 16.3359, 1.4", "-98.9494, 22.7166, 16.6348, 0.07", "-99.5745, 22.6874, 16.7104, 0.22", "-100.395, 22.6653, 16.8014, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.30195, 21.3286, 13.3985, 1.25", "-1.1143, 22.6487, 12.4373, 1.25", "-1.00966, 23.3849, 11.9013, 1.25", "-0.939683, 23.8772, 11.5429, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.91664, 26.7254, 27.4747, 0.59", "-10.6301, 26.8648, 27.694, 0.59", "-11.6765, 27.0165, 28.0665, 0.59", "-13.2103, 27.2029, 28.5869, 0.81", "-13.9604, 27.2705, 28.8282, 0.81", "-15.4608, 27.3578, 29.2175, 0.66", "-16.884, 27.412, 29.5276, 0.66", "-18.7475, 27.4381, 29.9013, 0.66", "-20.4326, 27.441, 30.1955, 0.44", "-21.2589, 27.439, 30.3303, 0.66", "-22.8801, 27.4492, 30.5395, 0.66", "-23.5662, 27.4637, 30.6118, 0.66", "-24.4794, 27.5637, 30.6912, 0.66", "-24.9274, 27.6708, 30.7466, 0.66", "-25.5421, 27.8666, 30.8879, 0.66", "-26.3157, 28.0835, 31.097, 0.81", "-27.0515, 28.1849, 31.2972, 0.81", "-28.2287, 28.1644, 31.4805, 0.29", "-29.0631, 28.0227, 31.5323, 0.52", "-29.7183, 27.8244, 31.5464, 0.96", "-31.0649, 27.2196, 31.5185, 0.52", "-32.4389, 26.4371, 31.4914, 0.37", "-33.2919, 25.8811, 31.4737, 0.37", "-33.8641, 25.4636, 31.4732, 0.37", "-34.2947, 25.1586, 31.4831, 0.37", "-35.13, 24.6303, 31.5365, 0.52", "-36.0417, 24.222, 31.537, 1.03", "-36.7601, 24.0617, 31.4886, 1.55", "-36.9779, 24.044, 31.4632, 1.55", "-38.3653, 24.0433, 31.2109, 0.44", "-39.069, 24.0702, 31.0495, 0.44", "-41.0608, 24.1942, 30.5388, 0.44", "-41.594, 24.2159, 30.4653, 0.44", "-42.3278, 24.2172, 30.4772, 0.66", "-42.9796, 24.1919, 30.5905, 1.11", "-43.986, 24.1532, 30.8782, 1.4", "-44.9172, 24.1461, 31.2703, 0.81", "-47.5373, 24.1766, 32.6389, 0.29", "-48.1243, 24.2053, 32.95, 0.81", "-48.8043, 24.2768, 33.3063, 1.55", "-50.0393, 24.4759, 33.9133, 0.22", "-51.283, 24.748, 34.4487, 0.22", "-51.8457, 24.8867, 34.6118, 0.22", "-52.5688, 25.0737, 34.6979, 0.59", "-53.1261, 25.2202, 34.7586, 0.59", "-53.6863, 25.3637, 34.8052, 0.59", "-55.0699, 25.6964, 34.8801, 0.07", "-56.1278, 25.9659, 34.8666, 0.07", "-57.0398, 26.2508, 34.8443, 0.22", "-57.6224, 26.4749, 34.7954, 0.22", "-58.0467, 26.6626, 34.7252, 0.44", "-58.5032, 26.8944, 34.5961, 0.74", "-58.7774, 27.0501, 34.4907, 0.74", "-59.3325, 27.3722, 34.3174, 0.29", "-60.2738, 27.8952, 34.0923, 0.15", "-60.9709, 28.2366, 33.9819, 0.59", "-62.2425, 28.7166, 33.8524, 0.07", "-63.2387, 29.0023, 33.7881, 0.37", "-64.5779, 29.3075, 33.7485, 0.15", "-65.0406, 29.3856, 33.7539, 0.22", "-65.8727, 29.5015, 33.8024, 0.74", "-67.3997, 29.7046, 33.901, 0.22", "-68.1126, 29.8144, 33.943, 0.22", "-68.4384, 29.88, 33.9497, 0.52", "-69.304, 30.1006, 33.9748, 0.88", "-70.5243, 30.4924, 34.2079, 0.22", "-71.2918, 30.8263, 34.6482, 0.37", "-72.1328, 31.2659, 35.3132, 0.07", "-72.6554, 31.5642, 35.8375, 0.22", "-73.3459, 31.9924, 36.7501, 0.22", "-74.3879, 32.7821, 38.9154, 0.22", "-74.9149, 33.2994, 40.8869, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.91664, 26.7254, 27.4747, 0.74", "-10.6535, 26.5539, 28.167, 0.74", "-11.7004, 26.3754, 29.1668, 0.74", "-12.4422, 26.2886, 29.8736, 0.74", "-13.2864, 26.2057, 30.6996, 0.74", "-13.9513, 26.1256, 31.39, 0.74", "-14.4334, 26.0629, 31.9139, 0.74", "-15.0285, 25.9942, 32.5901, 0.74", "-15.4231, 25.9557, 33.1041, 0.96", "-15.7856, 25.9292, 33.7541, 0.96", "-16.1712, 25.9171, 34.7227, 0.96", "-16.3769, 25.9352, 35.3794, 0.96", "-16.6482, 26.0109, 36.3001, 0.96", "-16.8854, 26.1185, 37.1251, 0.81", "-17.2807, 26.3868, 38.5515, 0.81", "-17.5131, 26.6275, 39.4389, 0.81", "-17.7799, 27.0028, 40.5338, 0.81", "-18.0479, 27.4266, 41.649, 0.81", "-18.315, 27.8219, 42.6328, 0.81", "-18.66, 28.2698, 43.7596, 0.81", "-18.9561, 28.5852, 44.6757, 0.66", "-19.1038, 28.7058, 45.1429, 0.66", "-19.4303, 28.8477, 46.2167, 0.66", "-19.9163, 28.843, 47.8717, 0.66", "-20.2369, 28.6766, 48.9547, 0.52", "-20.7187, 28.1374, 50.5381, 0.52", "-20.9417, 27.7645, 51.2532, 0.52", "-21.234, 27.0669, 52.2797, 0.37", "-21.3895, 26.3733, 53.0391, 0.37", "-21.4466, 25.6662, 53.654, 0.59", "-21.4447, 24.9553, 54.2094, 0.81", "-21.3919, 24.0946, 54.8715, 0.81", "-21.3014, 23.3481, 55.512, 0.81", "-21.1116, 22.3881, 56.3517, 0.37", "-20.9403, 21.6593, 56.9967, 0.52", "-20.777, 20.9424, 57.6168, 1.47", "-20.5762, 19.9462, 58.4307, 1.47", "-20.4942, 19.1722, 58.9998, 1.47", "-20.4467, 17.4605, 60.1774, 0.29", "-20.4757, 16.6944, 60.6812, 0.29", "-20.5588, 15.7833, 61.2305, 0.96", "-20.684, 14.8414, 61.7269, 1.18", "-21.0065, 13.0366, 62.5644, 0.22", "-21.2068, 12.1788, 62.9236, 0.22", "-21.3446, 11.6807, 63.1129, 0.88", "-21.5669, 10.9113, 63.3609, 1.47", "-21.9104, 9.82395, 63.703, 0.37", "-22.1268, 9.21206, 63.9366, 0.37", "-22.5507, 8.19285, 64.4284, 0.59", "-23.0667, 7.1965, 65.058, 0.07", "-23.406, 6.6477, 65.516, 0.29", "-23.9387, 5.99309, 66.3151, 0.59", "-24.8682, 5.19968, 67.8512, 0.59", "-25.2687, 4.96178, 68.541, 1.33", "-25.742, 4.77132, 69.3033, 1.33", "-25.9996, 4.69463, 69.6837, 1.33", "-26.9157, 4.43381, 71.0098, 0.44", "-27.6832, 4.19924, 72.1123, 0.44", "-28.2036, 3.97973, 72.8972, 0.44", "-28.8451, 3.58391, 74.0825, 1.84", "-29.7282, 2.66517, 76.3829, 0.52", "-30.0656, 1.9808, 77.8052, 0.52", "-30.1131, 1.60293, 78.468, 1.77", "-29.9669, 0.656663, 79.9457, 0.52", "-29.6223, -0.24322, 81.3354, 1.92", "-28.906, -1.43608, 83.2511, 1.03", "-28.2618, -2.24372, 84.5624, 0.29", "-27.6815, -2.86176, 85.6087, 1.4", "-26.7359, -3.79806, 87.2499, 0.07", "-25.8556, -4.58402, 88.7145, 0.07", "-25.1452, -5.16372, 89.8826, 0.07", "-24.4881, -5.58146, 90.8606, 0.07", "-24.0648, -5.77328, 91.4963, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "40.6763, 2.60479, 54.9978, 0.37", "40.7976, 3.02031, 55.284, 0.37", "40.9959, 3.69762, 55.8197, 0.07", "41.1778, 4.25574, 56.3158, 0.29", "41.3544, 4.76589, 56.774, 1.47", "41.3914, 4.87907, 56.8828, 1.47", "41.6699, 5.81329, 57.8182, 0.22", "41.8282, 6.36208, 58.4452, 0.22", "41.9807, 6.87346, 59.101, 0.07", "42.0862, 7.17134, 59.5123, 0.44", "42.3606, 7.9047, 60.6241, 0.07", "42.4816, 8.18967, 61.1111, 0.07", "42.6814, 8.59253, 61.9031, 0.07", "42.7976, 8.78193, 62.3094, 0.15", "43.0159, 9.08231, 62.9781, 0.44", "43.4782, 9.53512, 64.1037, 0.22", "44.0326, 9.90325, 65.1955, 0.22", "44.3052, 10.0379, 65.6859, 0.81", "44.6499, 10.1633, 66.2575, 1.55", "44.8882, 10.2321, 66.6113, 1.62", "45.6229, 10.3868, 67.629, 0.22", "46.2537, 10.4377, 68.3781, 0.22", "46.5416, 10.4429, 68.6899, 0.22", "47.0349, 10.424, 69.2379, 0.66", "47.4636, 10.3743, 69.7847, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "40.6763, 2.60479, 54.9978, 0.74", "40.8155, 2.6407, 54.9795, 0.74", "41.0538, 2.74336, 54.9305, 0.74", "41.7129, 3.13046, 54.7804, 0.22", "42.0732, 3.36973, 54.7059, 0.22", "43.0364, 4.00859, 54.5286, 0.59", "44.2155, 4.74663, 54.3417, 0.44", "44.6786, 5.01457, 54.281, 0.44", "45.307, 5.32889, 54.2309, 0.44", "46.0024, 5.62157, 54.2216, 0.66", "46.4514, 5.76066, 54.2131, 0.88", "47.1846, 5.90191, 54.2182, 0.44", "48.2352, 6.04072, 54.2575, 0.22", "49.1731, 6.12835, 54.264, 0.29", "49.6938, 6.15373, 54.2652, 0.29", "51.02, 6.19904, 54.2597, 0.29", "51.759, 6.23462, 54.2594, 0.74", "52.3492, 6.26791, 54.2759, 0.96", "53.2595, 6.34644, 54.3439, 0.37", "54.196, 6.45243, 54.4649, 0.15", "55.0954, 6.55853, 54.6414, 0.29", "56.5228, 6.71644, 55.0792, 0.07", "57.2467, 6.80085, 55.3541, 0.37", "57.9806, 6.87582, 55.679, 0.37", "58.4462, 6.91149, 55.9168, 0.22", "58.9907, 6.94003, 56.235, 1.18", "59.6452, 6.93896, 56.642, 1.4", "60.5604, 6.90383, 57.213, 0.44", "61.8117, 6.82482, 57.988, 0.22", "62.8421, 6.72849, 58.6335, 0.22", "63.4926, 6.66981, 59.0976, 0.22", "64.0178, 6.63771, 59.5997, 0.37", "64.7006, 6.62639, 60.4893, 0.07", "65.2978, 6.65187, 61.5308, 0.07", "65.62, 6.70268, 62.2556, 0.29", "66.1469, 6.86025, 63.7122, 0.74", "66.8108, 7.19524, 65.9813, 1.33", "67.1624, 7.47618, 67.5864, 0.37", "67.343, 7.69477, 68.8245, 0.37", "67.4858, 7.94586, 70.3042, 0.37", "67.5955, 8.15996, 71.6933, 0.37", "67.6678, 8.29225, 72.6658, 0.37", "67.709, 8.40198, 73.3862, 0.37", "67.7313, 8.5623, 74.4498, 0.37", "67.7252, 8.73921, 75.797, 0.37", "67.7187, 8.83441, 77.0306, 0.37", "67.7783, 8.859, 78.2623, 0.37", "67.9359, 8.84207, 79.492, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-84.3789, 54.7153, 13.5449, 0.29", "-84.3244, 56.064, 13.6188, 0.29", "-84.2916, 56.8748, 13.6633, 0.29", "-84.2388, 58.1796, 13.7349, 0.22", "-84.2089, 58.9185, 13.7754, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-84.3789, 54.7153, 13.5449, 0.29", "-85.1049, 54.5795, 12.3962, 0.29", "-85.4501, 54.5832, 11.8364, 0.29", "-85.9741, 54.5999, 10.9994, 0.29", "-86.2781, 54.6096, 10.5139, 0.29", "-86.5758, 54.6191, 10.0383, 0.29", "-87.1195, 54.6365, 9.16997, 0.29", "-87.709, 54.7397, 8.13442, 0.37", "-87.9396, 54.8222, 7.71485, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "4.24241, 0.503088, 34.6517, 0.52", "4.92855, -0.00281301, 36.8817, 0.52", "5.08772, -0.187244, 37.6842, 0.37", "5.34695, -0.526027, 39.011, 0.37", "5.54467, -0.77499, 39.901, 0.37", "5.9177, -1.20296, 41.3486, 0.37", "6.22929, -1.53372, 42.4086, 0.52", "6.62074, -1.94599, 43.747, 0.52", "6.88858, -2.21946, 44.5633, 0.74", "7.24145, -2.52937, 45.3806, 0.96", "7.59461, -2.77639, 46.0338, 0.96", "8.10656, -3.05908, 46.8167, 0.96", "8.52053, -3.23399, 47.4017, 0.96", "8.91305, -3.34377, 47.9328, 0.96", "9.52371, -3.41213, 48.9168, 0.52", "10.2121, -3.39396, 50.2627, 0.52", "10.7727, -3.31991, 51.6043, 0.52", "11.1231, -3.256, 52.6011, 1.03", "11.642, -3.15373, 54.2257, 1.77", "12.568, -2.96835, 57.3012, 0.37", "12.9618, -2.89084, 58.7081, 0.37", "13.2175, -2.83405, 59.6041, 0.37", "13.4302, -2.77942, 60.3688, 0.37", "13.8008, -2.6674, 61.8754, 0.37", "13.9878, -2.58644, 62.8409, 0.74", "14.2087, -2.46253, 64.0621, 0.96", "14.4997, -2.25493, 65.517, 0.96", "14.6555, -2.11877, 66.2315, 1.4", "14.9579, -1.81951, 67.5643, 1.4", "15.2633, -1.47967, 69.0264, 1.4", "15.7408, -1.12493, 70.7119, 1.4", "16.0185, -0.991677, 71.4449, 0.74", "16.6505, -0.784141, 72.7581, 1.11", "17.1581, -0.633698, 73.6712, 1.55", "17.6711, -0.477699, 74.4824, 1.55", "18.9979, -0.059084, 76.4616, 0.52", "19.5404, 0.119957, 77.2753, 0.52", "20.2058, 0.329551, 78.2923, 0.52", "20.8116, 0.509234, 79.2067, 0.52", "21.3227, 0.654194, 79.9724, 0.81", "21.986, 0.780324, 80.8817, 0.81", "22.4343, 0.769364, 81.5624, 0.81", "23.1524, 0.576081, 82.741, 0.29", "23.7487, 0.299627, 83.7546, 0.29", "24.0316, 0.143031, 84.2495, 0.29", "24.729, -0.242572, 85.5163, 1.55", "26.0828, -0.927892, 88.0239, 0.44", "26.7772, -1.25815, 89.3739, 0.44", "27.3116, -1.51973, 90.5283, 0.44", "27.7537, -1.74808, 91.6111, 0.44", "28.1159, -1.94518, 92.6936, 0.44", "28.4788, -2.13646, 94.1815, 0.44", "28.6632, -2.2448, 95.3116, 0.44", "28.7385, -2.38967, 96.5613, 0.44", "28.6882, -2.61597, 98.0924, 0.44", "28.5969, -2.82827, 99.2659, 0.44", "28.4948, -3.10617, 100.528, 0.44", "28.3757, -3.53157, 102.148, 0.44", "28.3719, -3.68886, 102.597, 0.44", "28.5104, -4.23485, 103.671, 0.44", "28.8069, -4.9522, 104.528, 0.44", "29.1946, -5.91977, 105.234, 1.33", "29.5204, -6.86152, 105.762, 0.52", "29.8761, -8.01913, 106.328, 0.44", "30.0193, -8.55425, 106.595, 0.66", "30.1989, -9.35891, 107.001, 1.33", "30.538, -11.107, 107.964, 0.22", "30.7405, -12.2384, 108.669, 0.22", "30.8887, -13.0219, 109.258, 0.22", "31.0316, -13.76, 109.913, 0.22", "31.157, -14.437, 110.636, 0.22", "31.237, -14.9509, 111.344, 0.44", "31.2935, -15.5009, 112.282, 1.25", "31.3517, -16.4759, 114.198, 0.44", "31.3656, -17.1168, 115.56, 0.44", "31.3773, -17.9456, 117.568, 0.66", "31.4066, -18.7636, 119.981, 0.66", "31.4243, -19.2161, 121.726, 1.62", "31.4258, -19.577, 123.904, 0.74", "31.4206, -19.6212, 124.458, 0.52", "31.4166, -19.6467, 126.051, 0.52", "31.4537, -19.5807, 127.343, 0.52", "31.5389, -19.465, 128.399, 0.52", "31.6666, -19.3163, 129.525, 0.52", "31.7831, -19.2195, 130.459, 0.52", "31.9327, -19.1776, 131.452, 0.52", "32.0891, -19.2186, 132.392, 0.52", "32.3598, -19.3828, 133.995, 0.52", "32.6262, -19.5983, 135.449, 0.52", "32.9648, -19.9338, 137.077, 0.52", "33.2647, -20.2831, 138.503, 0.52", "33.4469, -20.5354, 139.496, 0.52", "33.6979, -20.9768, 141.049, 0.52", "33.8537, -21.3259, 142.09, 0.52", "34.0728, -21.9429, 143.57, 0.29", "34.2204, -22.5093, 144.595, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.24241, 0.503088, 34.6517, 0.52", "5.14909, 1.11103, 34.5363, 0.52", "5.74856, 1.46533, 34.4648, 0.52", "6.37582, 1.76104, 34.4016, 0.52", "7.13921, 2.05339, 34.3339, 0.52", "8.17384, 2.37691, 34.2528, 0.52", "8.9824, 2.59927, 34.1954, 0.74", "9.8994, 2.80136, 34.1512, 0.74", "11.1602, 3.09369, 34.1176, 0.44", "11.8149, 3.26927, 34.1153, 0.29", "12.5408, 3.49787, 34.1025, 0.44", "13.0147, 3.68375, 34.0911, 0.44", "14.0058, 4.1784, 34.0555, 0.37", "14.7689, 4.64808, 34.0366, 0.66", "15.3614, 5.07302, 34.044, 0.81", "16.553, 5.98314, 34.0959, 1.33", "17.214, 6.50471, 34.1407, 0.52", "18.0767, 7.1636, 34.2241, 0.37", "18.696, 7.60909, 34.2977, 0.66", "19.5061, 8.14697, 34.4232, 1.25", "19.9391, 8.42544, 34.5052, 1.25", "20.6789, 8.89339, 34.6736, 0.59", "21.3776, 9.33601, 34.8176, 0.52", "21.9406, 9.71025, 34.9122, 0.52", "22.3746, 10.0079, 34.9826, 0.52", "23.149, 10.5265, 35.0477, 0.37", "23.615, 10.8227, 35.0384, 0.37", "24.543, 11.3773, 34.9349, 0.88", "25.2077, 11.7743, 34.8061, 0.29", "26.0293, 12.2819, 34.6429, 0.59", "27.2071, 13.0361, 34.462, 0.44", "28.1686, 13.6586, 34.3789, 0.44", "28.6548, 13.9933, 34.3722, 0.44", "29.1234, 14.3313, 34.3887, 0.66", "30.0365, 14.9464, 34.4798, 1.03", "30.959, 15.5125, 34.6753, 1.25", "31.8327, 16.0104, 34.9648, 0.59", "32.4941, 16.3558, 35.2058, 0.44", "32.9253, 16.5561, 35.3479, 0.44", "33.9554, 16.986, 35.6238, 0.66", "35.02, 17.3973, 35.7898, 0.29", "35.2406, 17.4879, 35.8046, 0.29", "35.8699, 17.7773, 35.7975, 0.29", "36.0844, 17.8984, 35.7743, 0.29", "36.5368, 18.2073, 35.6579, 0.29", "36.9147, 18.5003, 35.477, 0.29", "37.31, 18.7821, 35.2546, 0.29", "37.6844, 19.0087, 35.043, 0.29", "38.1287, 19.2606, 34.867, 0.59", "38.9964, 19.7465, 34.6505, 0.59", "39.6874, 20.137, 34.6058, 0.59", "40.064, 20.3716, 34.651, 0.59", "40.657, 20.8179, 34.8575, 0.59", "41.8583, 21.9017, 35.5785, 0.52", "42.2309, 22.2719, 35.8963, 0.59", "42.8, 22.8863, 36.5152, 0.59", "43.1385, 23.2523, 36.9027, 0.59", "43.6399, 23.786, 37.4586, 0.15", "44.0304, 24.1936, 37.9065, 0.15", "44.5091, 24.667, 38.4031, 0.15", "44.9294, 25.0648, 38.8088, 0.15", "45.7686, 25.8094, 39.4642, 0.15", "46.2369, 26.1877, 39.7669, 0.15" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-39.0859, -32.1017, 12.5741, 0.22", "-39.2327, -33.1232, 12.9549, 0.22", "-39.3266, -34.2824, 13.2818, 0.22", "-39.3642, -34.8841, 13.4413, 0.22", "-39.4009, -35.2803, 13.5421, 0.22", "-39.4659, -35.7225, 13.6511, 0.37", "-39.5765, -36.2914, 13.7843, 0.88", "-39.8028, -37.2339, 13.8912, 0.37", "-39.9767, -38.0281, 13.8753, 0.22", "-40.0777, -38.5334, 13.8161, 0.37", "-40.1895, -39.0962, 13.6693, 0.52", "-40.2901, -39.5687, 13.4683, 0.37", "-40.4912, -40.4157, 12.9427, 0.15", "-40.6599, -41.068, 12.4374, 0.15", "-40.7735, -41.5196, 12.0027, 0.15", "-40.8926, -42.0279, 11.4016, 0.15", "-40.9498, -42.286, 11.0383, 0.52", "-41.0001, -42.5037, 10.6857, 1.55", "-41.0847, -42.847, 10.0509, 1.62", "-41.2692, -43.7404, 8.34989, 0.59", "-41.3091, -44.3799, 6.94595, 0.59", "-41.2778, -44.7762, 5.89707, 0.59", "-41.2256, -45.0329, 5.10129, 0.59", "-41.1166, -45.3634, 3.92827, 0.59", "-41.0259, -45.5717, 3.1163, 1.99", "-40.5587, -46.4254, -0.509704, 1.11", "-40.2365, -46.9652, -2.88619, 1.11", "-40.0459, -47.266, -4.31764, 1.11", "-39.9154, -47.4599, -5.34499, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.0859, -32.1017, 12.5741, 0.52", "-41.3164, -32.3461, 13.7343, 0.52", "-42.3127, -32.5213, 14.2849, 0.37", "-42.8744, -32.6444, 14.6011, 0.81", "-43.7495, -32.8722, 15.1307, 0.81", "-44.6749, -33.1681, 15.7248, 0.44", "-45.5853, -33.5049, 16.3219, 0.44", "-46.3402, -33.885, 16.7764, 0.88", "-46.4982, -33.982, 16.8846, 1.11", "-47.3685, -34.5426, 17.4932, 0.44", "-47.8961, -34.8738, 17.8518, 0.44", "-48.2118, -35.0705, 18.0603, 0.66", "-48.7468, -35.4065, 18.3626, 0.96", "-48.9722, -35.5542, 18.4881, 1.03", "-49.588, -35.972, 18.8297, 0.52", "-50.4771, -36.6345, 19.3022, 0.37", "-51.3445, -37.3399, 19.8111, 0.37", "-51.8289, -37.7948, 20.1369, 0.88", "-52.3545, -38.3454, 20.5179, 1.77", "-52.797, -38.8415, 20.8668, 2.21", "-53.2576, -39.4032, 21.2782, 1.92", "-53.9352, -40.2619, 21.9401, 1.18", "-54.5459, -41.0226, 22.5405, 0.66", "-55.2887, -41.9186, 23.2652, 0.29", "-55.9189, -42.64, 23.8423, 0.44", "-56.4997, -43.2862, 24.3657, 0.44", "-57.1392, -43.9712, 24.9361, 0.44", "-57.5686, -44.4142, 25.2912, 1.18", "-58.0401, -44.8765, 25.6529, 1.77", "-58.5415, -45.3466, 25.9912, 1.03", "-59.4118, -46.0869, 26.441, 0.22", "-60.2183, -46.7349, 26.7678, 0.22", "-60.8012, -47.2, 26.9639, 0.22", "-61.4301, -47.7295, 27.151, 0.22", "-62.2603, -48.4637, 27.3803, 0.66", "-63.2328, -49.3602, 27.6562, 0.22", "-63.7963, -49.8923, 27.8194, 0.37", "-64.4577, -50.5412, 28.0474, 0.22", "-65.4139, -51.4937, 28.4832, 1.7", "-66.4128, -52.4738, 29.0126, 0.59", "-67.2278, -53.2458, 29.5443, 0.59", "-68.1736, -54.0754, 30.2323, 0.07", "-68.8465, -54.6107, 30.738, 0.22", "-69.9666, -55.4006, 31.5699, 0.07", "-70.8504, -55.9413, 32.194, 1.62", "-72.4695, -56.8529, 33.2667, 0.22", "-72.9912, -57.1296, 33.5996, 0.22", "-73.4117, -57.3421, 33.8652, 0.44", "-74.1055, -57.6893, 34.2818, 0.81", "-75.3512, -58.3047, 34.9905, 0.29", "-76.085, -58.6618, 35.4361, 0.29", "-76.9162, -59.0766, 35.9697, 0.29", "-77.5559, -59.4089, 36.4121, 0.29", "-78.2265, -59.767, 36.8933, 1.4", "-78.5458, -59.946, 37.125, 1.84", "-79.8729, -60.7273, 38.0253, 1.18", "-81.6499, -61.8061, 39.1166, 0.29", "-82.0392, -62.0529, 39.3332, 0.29", "-82.7408, -62.512, 39.696, 0.52", "-83.8498, -63.2549, 40.1786, 0.07", "-84.9258, -63.9909, 40.5952, 0.07", "-85.8657, -64.6494, 40.8519, 0.07", "-86.5489, -65.134, 40.9726, 0.37", "-86.9651, -65.4307, 41.0394, 0.37", "-88.0736, -66.1942, 41.1599, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-28.9348, 4.63616, 31.5512, 0.44", "-29.0831, 5.62274, 31.9373, 0.44", "-29.1981, 6.65666, 32.4382, 0.59", "-29.2786, 7.69917, 33.0231, 0.29", "-29.2919, 8.55837, 33.558, 0.44", "-29.2573, 9.35986, 34.0797, 0.44", "-29.2044, 10.1666, 34.6011, 0.44", "-29.1429, 10.7213, 34.9871, 0.44", "-29.1023, 11.0171, 35.2086, 0.44", "-29.0273, 11.59, 35.605, 0.44", "-29.008, 12.0521, 35.8496, 0.44", "-29.1145, 12.882, 36.153, 0.59", "-29.2817, 13.5267, 36.3204, 0.59", "-29.4678, 14.0981, 36.4412, 0.59", "-29.6976, 14.7916, 36.5644, 0.59", "-29.9398, 15.5224, 36.6792, 0.44", "-30.1958, 16.3908, 36.8108, 0.29", "-30.331, 16.9557, 36.8886, 0.29", "-30.4094, 17.4165, 36.9525, 0.29", "-30.5417, 18.5888, 37.1122, 0.59", "-30.6135, 19.3506, 37.2055, 0.59", "-30.6524, 19.779, 37.2503, 0.59", "-30.7242, 20.4303, 37.3082, 0.29", "-30.8775, 21.1411, 37.3733, 0.29", "-31.1546, 21.8321, 37.4317, 0.29", "-31.6062, 22.6196, 37.4892, 0.07", "-31.7994, 22.9198, 37.5057, 0.07", "-32.1472, 23.4477, 37.5247, 0.22", "-32.7431, 24.3672, 37.5812, 0.07", "-33.4143, 25.4517, 37.7056, 0.22", "-33.8201, 26.2275, 37.8577, 0.37", "-34.0985, 26.8964, 38.044, 0.59", "-34.4153, 27.7745, 38.3082, 0.52", "-34.6839, 28.6951, 38.6244, 0.22", "-34.88, 29.6513, 39.0178, 0.37", "-35.0044, 30.644, 39.5171, 0.07", "-35.0581, 31.2365, 39.8751, 0.07" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-28.9348, 4.63616, 31.5512, 0.66", "-29.1735, 4.99535, 32.1462, 0.66", "-29.519, 5.65915, 33.1332, 0.52", "-29.8013, 6.33214, 34.1536, 0.52", "-30.0632, 7.0772, 35.2267, 0.88", "-30.2441, 7.66469, 36.0792, 0.52", "-30.3442, 8.04081, 36.6622, 0.52", "-30.405, 8.46844, 37.3894, 0.52", "-30.4315, 9.12192, 38.6162, 0.74", "-30.43, 9.34243, 39.1044, 0.88", "-30.4218, 9.68035, 40.0712, 0.88", "-30.4499, 9.99455, 41.2381, 0.88", "-30.5417, 10.3157, 42.5765, 0.88", "-30.6752, 10.6239, 43.9161, 0.88", "-30.8063, 10.8634, 44.9422, 0.88", "-31.0129, 11.1931, 46.2667, 0.88", "-31.2503, 11.513, 47.3581, 0.66", "-31.5362, 11.8377, 48.317, 0.81", "-31.74, 12.041, 48.8425, 0.81", "-31.966, 12.2549, 49.2884, 0.81", "-32.2206, 12.4835, 49.775, 0.81", "-32.8839, 12.9709, 50.9828, 0.74", "-33.4036, 13.2862, 51.9417, 0.74", "-33.6685, 13.4243, 52.4295, 0.74", "-34.2303, 13.7157, 53.5225, 0.52", "-35.4956, 14.4197, 56.3143, 1.4", "-35.9615, 14.7068, 57.531, 1.18", "-36.2638, 14.9206, 58.4473, 1.18", "-36.4794, 15.0907, 59.1987, 1.18", "-36.6755, 15.2508, 60.017, 1.18", "-36.8513, 15.3747, 60.8816, 1.18", "-37.0345, 15.4592, 61.7364, 1.18", "-37.1543, 15.4765, 62.281, 1.18", "-37.3618, 15.4399, 63.0423, 1.18", "-37.6993, 15.3244, 63.9632, 1.18", "-38.0339, 15.1988, 64.689, 0.44", "-38.6473, 14.9574, 65.8233, 0.52", "-39.3785, 14.6257, 67.1231, 0.52", "-39.6084, 14.5204, 67.5258, 0.52", "-40.055, 14.3468, 68.2293, 1.25", "-40.442, 14.2288, 68.8097, 1.25", "-41.1746, 14.074, 69.8707, 0.81", "-41.9682, 13.9671, 70.927, 0.66", "-43.0383, 13.8393, 72.3247, 0.52", "-43.5402, 13.7805, 72.9934, 0.74", "-44.6083, 13.662, 74.4275, 0.88", "-45.2112, 13.5907, 75.1927, 1.03", "-46.5541, 13.4309, 76.7464, 0.44", "-47.4499, 13.3079, 77.704, 0.44", "-48.2007, 13.1674, 78.4158, 0.44", "-48.4548, 13.1083, 78.6304, 0.44", "-49.1469, 12.9345, 79.0794, 1.03", "-49.9732, 12.7183, 79.5243, 1.62", "-50.914, 12.4729, 79.9393, 1.4", "-52.5374, 12.1215, 80.5341, 0.29", "-53.2771, 11.9915, 80.7832, 0.29", "-54.4161, 11.8304, 81.1763, 0.29", "-54.702, 11.8027, 81.2793, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-79.5539, -4.24754, 54.4058, 0.37", "-79.6512, -3.67545, 55.6708, 0.37", "-79.6967, -3.04224, 57.1027, 0.15", "-79.7192, -2.51369, 58.3105, 0.59", "-79.7193, -1.95488, 59.5504, 1.25", "-79.6713, -1.08679, 61.3943, 0.44", "-79.5905, -0.451485, 62.6927, 0.44", "-79.4628, 0.0607923, 63.6203, 0.44", "-79.1789, 0.784233, 64.7641, 0.44", "-78.9615, 1.21494, 65.3581, 0.44", "-78.7409, 1.58733, 65.8092, 0.29", "-78.2584, 2.32146, 66.5266, 0.81", "-77.932, 2.82358, 66.9977, 0.81", "-77.4312, 3.61498, 67.7396, 0.37", "-76.9148, 4.48632, 68.5466, 0.29", "-76.4528, 5.38068, 69.3936, 0.29", "-76.0908, 6.20894, 70.2156, 0.96", "-75.5702, 7.63717, 71.7656, 0.22", "-75.4537, 8.02382, 72.2534, 0.22", "-75.3661, 8.44466, 72.8929, 0.44", "-75.3415, 8.80488, 73.5303, 0.29", "-75.3497, 9.42135, 74.7722, 1.03", "-75.3647, 10.0317, 76.2186, 1.03", "-75.3366, 10.6397, 77.9597, 0.37", "-75.2811, 11.1166, 79.7418, 0.44", "-75.2236, 11.4364, 81.4439, 0.44", "-75.1521, 11.6514, 83.2039, 0.44", "-75.054, 11.7598, 84.9813, 0.44", "-74.9151, 11.7889, 86.5186, 0.44", "-74.6655, 11.7701, 88.2657, 0.44", "-74.333, 11.7404, 90.0435, 0.44", "-74.0558, 11.7196, 91.3947, 0.44", "-73.8055, 11.7029, 92.7564, 0.44", "-73.6105, 11.713, 94.0149, 0.44", "-73.464, 11.7757, 95.5355, 0.44", "-73.4392, 11.8366, 96.8688, 0.44", "-73.4513, 11.8915, 97.7911, 0.44", "-73.5247, 11.9544, 98.8256, 0.44", "-73.7078, 12.0124, 100.11, 0.44", "-74.1688, 12.0146, 102.262, 0.44", "-74.8594, 11.8823, 104.879, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-79.5539, -4.24754, 54.4058, 0.15", "-80.8805, -3.70562, 54.3928, 0.15", "-81.7024, -3.38727, 54.3896, 0.15", "-82.4418, -3.13926, 54.4168, 0.15", "-82.9012, -3.01351, 54.451, 0.66", "-84.5749, -2.6496, 54.5968, 0.07", "-84.9315, -2.58051, 54.6482, 0.07", "-85.8157, -2.4194, 54.8627, 0.37", "-87.4867, -2.12367, 55.3651, 0.07", "-88.7737, -1.88753, 55.8507, 0.07", "-89.6386, -1.71635, 56.242, 0.44", "-90.9279, -1.44842, 56.9137, 0.07", "-91.6876, -1.26299, 57.3988, 0.07", "-92.3324, -1.07044, 57.9001, 0.07", "-93.0132, -0.818341, 58.4992, 0.07", "-93.489, -0.62854, 58.981, 0.07", "-94.0811, -0.394575, 59.6084, 0.37", "-95.567, 0.160353, 61.0906, 0.07", "-96.257, 0.407653, 61.7415, 0.07", "-97.1702, 0.732353, 62.6096, 0.96", "-99.267, 1.48702, 64.6242, 0.37", "-100.077, 1.78256, 65.4317, 0.07", "-100.96, 2.10256, 66.3422, 0.07", "-101.609, 2.32185, 66.9958, 0.52", "-102.58, 2.62338, 68.0395, 0.29", "-103.489, 2.88823, 69.0937, 0.59", "-104.576, 3.2117, 70.4293, 0.07", "-105.09, 3.38064, 71.1181, 0.07", "-105.584, 3.568, 71.8198, 0.37", "-106.434, 3.90014, 73.0674, 0.07", "-107.138, 4.19715, 74.0877, 0.07", "-107.896, 4.55888, 75.1938, 0.96", "-108.812, 5.06965, 76.4549, 0.22", "-109.4, 5.45075, 77.2516, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.939683, 23.8772, 11.5429, 1.25", "-1.15968, 24.9772, 11.9229, 1.25" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.939683, 23.8772, 11.5429, 0.59", "0.121406, 24.3062, 13.3805, 0.59", "0.817827, 24.4652, 14.5366, 0.59", "1.42819, 24.5365, 15.5389, 0.74", "1.97867, 24.5679, 16.455, 0.74", "2.35296, 24.5941, 17.0527, 0.74", "2.77215, 24.632, 17.7032, 0.74", "3.28787, 24.6247, 18.3839, 0.88", "3.8088, 24.6097, 18.9522, 0.88", "4.52783, 24.5678, 19.5807, 0.88", "5.33953, 24.4992, 20.1227, 0.66", "5.85161, 24.4537, 20.3831, 0.66", "6.76169, 24.4012, 20.7287, 0.59", "7.68576, 24.372, 20.9653, 0.59", "8.69932, 24.3779, 21.1383, 0.59", "9.79296, 24.4343, 21.2535, 0.52", "10.7096, 24.4679, 21.3255, 0.52", "11.7085, 24.5269, 21.3803, 0.66", "12.5726, 24.6417, 21.4283, 0.66", "13.3212, 24.8641, 21.4652, 0.74", "14.0591, 25.2472, 21.5061, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.15968, 24.9772, 11.9229, 0.59", "-1.04039, 26.0538, 11.9853, 0.59", "-0.872831, 27.2704, 12.1612, 0.59", "-0.727127, 28.3899, 12.4396, 0.66", "-0.611169, 29.3932, 12.7881, 0.74", "-0.511463, 30.3971, 13.1791, 0.74", "-0.441822, 31.1357, 13.5211, 0.74", "-0.360105, 32.172, 14.1821, 0.74", "-0.289638, 33.0343, 14.891, 0.74", "-0.210957, 33.7215, 15.5193, 0.74", "-0.0904819, 34.3291, 16.0889, 0.66", "0.191379, 35.2492, 16.8735, 0.66", "0.475578, 35.8893, 17.2954, 0.66", "1.01507, 36.3913, 17.0795, 0.66", "2.15426, 37.3309, 16.5022, 0.66", "2.79359, 37.8743, 16.2062, 0.81", "3.79006, 38.7614, 15.8411, 1.03", "4.49886, 39.4721, 15.6362, 1.03", "5.20355, 40.3257, 15.626, 0.44", "6.0031, 41.712, 16.259, 0.44", "6.43678, 42.7057, 17.0595, 0.44", "6.71537, 43.5397, 17.884, 0.44", "6.88752, 44.1724, 18.6302, 0.59", "7.07548, 44.8937, 19.5892, 0.88", "7.26583, 45.6031, 20.6372, 0.88", "7.38109, 45.903, 21.1409, 0.88", "7.67389, 46.3806, 21.9949, 0.44", "8.03109, 46.8329, 22.7146, 0.44", "8.42098, 47.2533, 23.3054, 0.44", "8.96366, 47.814, 23.9709, 0.44", "9.37948, 48.2362, 24.4458, 0.44", "9.87, 48.729, 25.0151, 0.44", "10.4958, 49.3618, 25.7815, 0.44", "10.8812, 49.8192, 26.3431, 0.44", "11.1825, 50.3221, 26.9954, 0.44", "11.3559, 50.8512, 27.7352, 0.44", "11.3835, 51.3307, 28.5066, 0.44", "11.2402, 51.6813, 29.1829, 0.44", "10.9751, 52.055, 30.0366, 0.44", "10.4969, 52.4771, 31.114, 0.22", "9.9046, 52.8347, 32.1183, 0.22", "9.35948, 53.0886, 32.817, 0.22", "8.32938, 53.4514, 33.8681, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.15968, 24.9772, 11.9229, 0.59", "-2.31211, 25.5344, 12.2253, 0.59", "-3.56359, 26.1715, 12.6724, 0.52", "-4.51967, 26.673, 13.1072, 0.52", "-5.90316, 27.4207, 13.8184, 0.52", "-6.62131, 27.8273, 14.2314, 0.59", "-7.16984, 28.158, 14.6053, 0.59", "-7.81205, 28.6077, 15.2671, 0.59", "-8.16106, 28.9467, 15.8646, 0.59", "-8.32531, 29.1627, 16.3242, 0.59", "-8.48765, 29.5076, 17.0835, 0.66", "-8.62663, 30.0325, 18.1288, 0.66", "-8.70249, 30.657, 19.1595, 0.66", "-8.74535, 31.2148, 19.9389, 0.66", "-8.77945, 31.5975, 20.4047, 0.66", "-8.93731, 32.3639, 21.266, 0.59", "-9.19231, 32.9992, 21.8863, 0.59", "-9.68777, 33.7346, 22.4592, 0.52", "-10.2932, 34.3568, 22.8523, 0.37", "-10.8299, 34.8145, 23.0544, 0.37", "-12.0743, 35.7668, 23.2827, 0.37", "-12.6825, 36.1771, 23.3095, 0.37", "-13.0924, 36.4398, 23.2772, 0.66", "-14.1928, 37.0918, 23.0626, 0.66", "-15.2764, 37.7511, 22.7173, 0.74", "-16.0761, 38.2737, 22.3546, 0.74", "-16.4387, 38.5278, 22.1334, 0.74", "-16.9997, 38.8838, 21.7321, 0.44", "-17.8043, 39.3175, 21.1299, 0.44", "-18.1999, 39.4995, 20.8133, 0.44", "-18.8388, 39.7495, 20.3003, 0.59", "-19.5791, 39.9968, 19.7151, 0.74", "-20.6387, 40.2913, 18.8648, 0.44", "-21.7465, 40.5997, 17.9362, 0.44", "-22.5322, 40.8258, 17.2716, 0.44", "-23.0685, 40.9714, 16.8119, 0.44", "-23.5954, 41.0947, 16.3806, 0.44", "-24.298, 41.1942, 15.8056, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "14.0591, 25.2472, 21.5061, 0.37", "15.1658, 24.9029, 22.0402, 0.37", "16.0135, 24.75, 22.5506, 0.37", "17.0772, 24.6119, 23.3149, 0.44", "17.5889, 24.5537, 23.7169, 0.44", "18.0422, 24.5047, 24.0706, 0.44", "18.554, 24.4573, 24.4453, 0.44", "19.1256, 24.459, 24.8983, 0.66", "19.569, 24.5094, 25.2291, 0.66", "20.0641, 24.5956, 25.5159, 0.66", "20.4977, 24.6908, 25.7348, 0.81", "21.099, 24.855, 25.9932, 0.81", "21.961, 25.1314, 26.3436, 0.66", "22.3712, 25.2692, 26.5187, 0.66", "23.0742, 25.5224, 26.8508, 0.59", "23.6324, 25.7111, 27.1649, 0.59", "24.2589, 25.8605, 27.5548, 0.74", "24.8073, 25.8826, 27.9079, 0.74", "25.4488, 25.8005, 28.3206, 0.74", "25.9523, 25.6879, 28.6238, 0.74", "26.6139, 25.4889, 29.0122, 0.74", "27.5282, 25.1425, 29.5199, 0.37", "28.6978, 24.6098, 30.1561, 0.07", "29.1393, 24.3899, 30.3661, 0.07", "29.3797, 24.2657, 30.4647, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.0591, 25.2472, 21.5061, 0.37", "14.2449, 25.731, 22.205, 0.37", "14.4463, 26.2006, 22.9457, 0.37", "14.7004, 26.7367, 23.7335, 0.52", "14.9377, 27.2092, 24.3795, 0.59", "15.2423, 27.726, 25.0493, 0.59", "15.5587, 28.182, 25.643, 0.66", "15.8575, 28.5002, 26.1176, 0.66", "16.3126, 28.8729, 26.7256, 0.52", "16.543, 29.0113, 26.966, 0.52", "17.144, 29.3071, 27.4868, 0.44", "17.5837, 29.4971, 27.8427, 0.44", "18.0627, 29.691, 28.1775, 0.44", "18.4932, 29.8535, 28.4291, 0.44", "18.8599, 29.9796, 28.6176, 0.44", "19.6953, 30.2798, 28.9532, 0.52", "20.2437, 30.5149, 29.1031, 0.52", "21.2265, 31.0471, 29.1785, 0.52", "21.8495, 31.477, 29.1384, 0.52", "22.2489, 31.8065, 29.0934, 0.52", "22.8291, 32.3652, 28.986, 0.52", "23.4153, 33.005, 28.8161, 0.52", "24.311, 34.1063, 28.4435, 0.52", "25.0003, 35.0553, 28.1017, 0.44", "25.5883, 35.9331, 27.6984, 0.44", "26.0125, 36.5831, 27.3113, 0.44", "26.3932, 37.1427, 26.8582, 0.59", "26.8205, 37.6225, 26.2544, 0.59", "26.992, 37.73, 25.9967, 0.59", "27.4319, 37.9012, 25.2815, 0.59", "27.7084, 37.9714, 24.8068, 0.59", "27.9282, 38.0041, 24.4539, 0.59", "28.299, 38.0555, 23.901, 0.22", "28.9447, 38.1893, 23.0111, 0.22", "29.4709, 38.3565, 22.307, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_19", "dend_18", "dend_5", "dend_0", "dend_38", "dend_33", "dend_27", "dend_20", "dend_9", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_37", "dend_34", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_23", "dend_22", "dend_14", "dend_11", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_19", "dend_18", "dend_5", "dend_0", "dend_38", "dend_33", "dend_27", "dend_20", "dend_9", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_37", "dend_34", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_23", "dend_22", "dend_14", "dend_11", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_HAC_f8c9772d9d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_19, dend_18, dend_5, dend_0, dend_38, dend_33, dend_27, dend_20, dend_9, dend_6, dend_2, dend_1, dend_40, dend_39, dend_37, dend_34, dend_29, dend_28, dend_24, dend_21, dend_17, dend_10, dend_8, dend_7, dend_4, dend_3, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_14, dend_11, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_19, dend_18, dend_5, dend_0, dend_38, dend_33, dend_27, dend_20, dend_9, dend_6, dend_2, dend_1, dend_40, dend_39, dend_37, dend_34, dend_29, dend_28, dend_24, dend_21, dend_17, dend_10, dend_8, dend_7, dend_4, dend_3, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_14, dend_11, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999999480938624)
    connect dend_19(0), soma_0(0.4999999480938624)
    connect dend_18(0), soma_0(0.4999999480938624)
    connect dend_5(0), soma_0(0.4999999480938624)
    connect dend_0(0), soma_0(0.4999999480938624)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.80955, -7.56547, 0.0, 2.78828 ) }
    soma_0 { pt3dadd( -3.43318, -6.80001, 0.0, 4.90928 ) }
    soma_0 { pt3dadd( -3.05681, -6.03456, 0.0, 7.20539 ) }
    soma_0 { pt3dadd( -2.68044, -5.2691, 0.0, 8.94517 ) }
    soma_0 { pt3dadd( -2.30407, -4.50365, 0.0, 10.2527 ) }
    soma_0 { pt3dadd( -1.9277, -3.7382, 0.0, 11.4469 ) }
    soma_0 { pt3dadd( -1.55133, -2.97274, 0.0, 12.3814 ) }
    soma_0 { pt3dadd( -1.17496, -2.20729, 0.0, 13.1179 ) }
    soma_0 { pt3dadd( -0.798584, -1.44183, 0.0, 13.5254 ) }
    soma_0 { pt3dadd( -0.422213, -0.676379, 0.0, 13.6936 ) }
    soma_0 { pt3dadd( -0.0458416, 0.0890748, 0.0, 13.7724 ) }
    soma_0 { pt3dadd( 0.33053, 0.854529, 0.0, 13.6581 ) }
    soma_0 { pt3dadd( 0.706901, 1.61998, 0.0, 13.5309 ) }
    soma_0 { pt3dadd( 1.08327, 2.38544, 0.0, 13.3741 ) }
    soma_0 { pt3dadd( 1.45964, 3.15089, 0.0, 13.1125 ) }
    soma_0 { pt3dadd( 1.83601, 3.91635, 0.0, 12.4905 ) }
    soma_0 { pt3dadd( 2.21239, 4.6818, 0.0, 11.7489 ) }
    soma_0 { pt3dadd( 2.58876, 5.44725, 0.0, 10.3682 ) }
    soma_0 { pt3dadd( 2.96513, 6.21271, 0.0, 8.59077 ) }
    soma_0 { pt3dadd( 3.3415, 6.97816, 0.0, 6.15897 ) }
    soma_0 { pt3dadd( 3.71787, 7.74362, 0.0, 3.31537 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -5.06404, -6.93531, -0.289997, 2.65 ) }
    dend_32 { pt3dadd( -5.47631, -8.45381, 0.439642, 2.65 ) }
    dend_32 { pt3dadd( -6.07827, -10.4452, 1.44454, 2.14 ) }
    dend_32 { pt3dadd( -6.52606, -11.8054, 2.18523, 1.62 ) }
    dend_32 { pt3dadd( -6.86613, -12.7692, 2.74429, 1.62 ) }
    dend_32 { pt3dadd( -7.22789, -13.7305, 3.33868, 1.62 ) }
    dend_32 { pt3dadd( -7.51555, -14.4466, 3.83919, 1.62 ) }
    dend_32 { pt3dadd( -7.78279, -14.9885, 4.36677, 1.62 ) }
    dend_32 { pt3dadd( -7.90163, -15.0236, 4.95605, 1.62 ) }
    dend_32 { pt3dadd( -7.90363, -14.7059, 5.64675, 1.62 ) }
    dend_32 { pt3dadd( -7.84804, -14.2598, 6.39357, 1.4 ) }
    dend_32 { pt3dadd( -7.70446, -13.5532, 7.47078, 1.4 ) }
    dend_32 { pt3dadd( -7.49788, -12.7184, 8.7235, 1.4 ) }
    dend_32 { pt3dadd( -7.23637, -11.7572, 10.1682, 1.18 ) }
    dend_32 { pt3dadd( -6.96366, -10.7121, 11.7354, 0.96 ) }
    dend_32 { pt3dadd( -6.76223, -9.98408, 12.8794, 0.96 ) }
    dend_32 { pt3dadd( -6.50894, -9.09923, 14.2978, 0.96 ) }
    dend_32 { pt3dadd( -6.32695, -8.42419, 15.3315, 1.25 ) }
    dend_32 { pt3dadd( -6.22957, -8.0089, 15.9632, 1.92 ) }
    dend_32 { pt3dadd( -6.13207, -7.42821, 16.8887, 2.43 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 41/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.96404, -6.69531, 6.53, 3.1 ) }
    dend_19 { pt3dadd( -4.96404, -6.69531, 6.53, 3.1 ) }
    dend_19 { pt3dadd( -5.63063, -7.65269, 7.21013, 2.21 ) }
    dend_19 { pt3dadd( -6.38417, -8.5912, 7.7527, 1.99 ) }
    dend_19 { pt3dadd( -7.30541, -9.5989, 8.27927, 2.43 ) }
    dend_19 { pt3dadd( -8.03198, -10.2756, 8.64372, 2.73 ) }
    dend_19 { pt3dadd( -9.52173, -11.4872, 9.22695, 2.36 ) }
    dend_19 { pt3dadd( -11.3358, -12.7092, 9.73048, 1.77 ) }
    dend_19 { pt3dadd( -13.3873, -13.759, 10.0602, 1.33 ) }
    dend_19 { pt3dadd( -14.5043, -14.223, 10.166, 1.33 ) }
    dend_19 { pt3dadd( -16.0231, -14.7011, 10.1617, 1.33 ) }
    dend_19 { pt3dadd( -18.0499, -15.1225, 9.94255, 1.47 ) }
    dend_19 { pt3dadd( -18.7755, -15.1609, 9.76537, 1.92 ) }
    dend_19 { pt3dadd( -19.428, -15.058, 9.53931, 1.92 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 55/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.67404, -0.335303, -3.54, 1.18 ) }
    dend_18 { pt3dadd( -3.79247, -0.15264, -3.5666, 1.18 ) }
    dend_18 { pt3dadd( -4.55925, 0.765694, -3.68373, 1.03 ) }
    dend_18 { pt3dadd( -5.57694, 1.71575, -3.76564, 0.81 ) }
    dend_18 { pt3dadd( -6.67399, 2.57201, -3.78975, 0.66 ) }
    dend_18 { pt3dadd( -7.73711, 3.34541, -3.78282, 0.66 ) }
    dend_18 { pt3dadd( -8.38245, 3.80219, -3.769, 0.66 ) }
    dend_18 { pt3dadd( -9.56771, 4.53524, -3.68485, 0.96 ) }
    dend_18 { pt3dadd( -10.8032, 5.14186, -3.51026, 0.66 ) }
    dend_18 { pt3dadd( -11.9077, 5.54996, -3.2857, 0.59 ) }
    dend_18 { pt3dadd( -12.9431, 5.81403, -3.04017, 0.59 ) }
    dend_18 { pt3dadd( -13.9009, 5.94953, -2.82934, 0.74 ) }
    dend_18 { pt3dadd( -14.9005, 5.95843, -2.66924, 0.88 ) }
    dend_18 { pt3dadd( -16.2372, 5.77404, -2.62266, 0.88 ) }
    dend_18 { pt3dadd( -17.2248, 5.56051, -2.72181, 0.96 ) }
    dend_18 { pt3dadd( -18.4713, 5.2632, -2.93185, 0.96 ) }
    dend_18 { pt3dadd( -19.429, 5.06815, -3.08168, 0.74 ) }
    dend_18 { pt3dadd( -20.529, 4.93074, -3.19301, 0.59 ) }
    dend_18 { pt3dadd( -21.898, 4.93635, -3.2376, 0.66 ) }
    dend_18 { pt3dadd( -23.1592, 5.11915, -3.16425, 0.81 ) }
    dend_18 { pt3dadd( -24.4405, 5.4756, -2.94352, 0.88 ) }
    dend_18 { pt3dadd( -25.7379, 5.96357, -2.64294, 0.74 ) }
    dend_18 { pt3dadd( -27.0998, 6.54999, -2.28428, 0.74 ) }
    dend_18 { pt3dadd( -28.3307, 7.12581, -1.97693, 0.66 ) }
    dend_18 { pt3dadd( -29.2213, 7.55853, -1.79339, 0.66 ) }
    dend_18 { pt3dadd( -30.3494, 8.11524, -1.64164, 0.66 ) }
    dend_18 { pt3dadd( -31.4075, 8.6345, -1.61402, 0.66 ) }
    dend_18 { pt3dadd( -32.5386, 9.1633, -1.75068, 0.74 ) }
    dend_18 { pt3dadd( -34.1812, 9.89915, -2.16641, 0.66 ) }
    dend_18 { pt3dadd( -35.2116, 10.3003, -2.52793, 0.66 ) }
    dend_18 { pt3dadd( -36.562, 10.7104, -3.11151, 0.74 ) }
    dend_18 { pt3dadd( -37.7658, 10.956, -3.73214, 0.74 ) }
    dend_18 { pt3dadd( -39.2821, 11.0937, -4.58419, 0.88 ) }
    dend_18 { pt3dadd( -40.0611, 11.0443, -5.08106, 0.88 ) }
    dend_18 { pt3dadd( -40.8258, 10.8108, -5.63467, 0.59 ) }
    dend_18 { pt3dadd( -41.4833, 10.4352, -6.14069, 0.59 ) }
    dend_18 { pt3dadd( -41.9471, 10.0378, -6.53189, 0.59 ) }
    dend_18 { pt3dadd( -42.573, 9.36327, -7.06475, 0.59 ) }
    dend_18 { pt3dadd( -43.0884, 8.74779, -7.44361, 0.52 ) }
    dend_18 { pt3dadd( -43.7131, 8.03317, -7.8731, 0.52 ) }
    dend_18 { pt3dadd( -44.3564, 7.36544, -8.34636, 0.44 ) }
    dend_18 { pt3dadd( -45.2234, 6.68851, -9.01945, 0.44 ) }
    dend_18 { pt3dadd( -45.8633, 6.41425, -9.53146, 0.44 ) }
    dend_18 { pt3dadd( -46.595, 6.4244, -10.0649, 0.44 ) }
    dend_18 { pt3dadd( -47.4483, 6.72338, -10.6284, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -48.2643, 7.126, -11.104, 0.59 ) }
    dend_18 { pt3dadd( -49.3356, 7.70326, -11.7075, 0.52 ) }
    dend_18 { pt3dadd( -50.247, 8.16223, -12.1658, 0.52 ) }
    dend_18 { pt3dadd( -51.4622, 8.66195, -12.7662, 0.44 ) }
    dend_18 { pt3dadd( -52.6705, 9.03534, -13.3936, 0.44 ) }
    dend_18 { pt3dadd( -53.4864, 9.17997, -13.7805, 0.52 ) }
    dend_18 { pt3dadd( -54.366, 9.20202, -14.19, 0.52 ) }
    dend_18 { pt3dadd( -55.1983, 9.06949, -14.611, 0.59 ) }
    dend_18 { pt3dadd( -56.0313, 8.81615, -15.0851, 0.52 ) }
    dend_18 { pt3dadd( -56.3881, 8.67916, -15.307, 0.52 ) }
    dend_18 { pt3dadd( -56.6994, 8.56915, -15.4787, 0.52 ) }
    dend_18 { pt3dadd( -57.5158, 8.40145, -15.8939, 0.59 ) }
    dend_18 { pt3dadd( -58.1898, 8.40821, -16.1838, 0.88 ) }
    dend_18 { pt3dadd( -58.3964, 8.44434, -16.2732, 0.88 ) }
    dend_18 { pt3dadd( -59.0613, 8.65231, -16.5461, 0.52 ) }
    dend_18 { pt3dadd( -59.7898, 8.99679, -16.8481, 0.44 ) }
    dend_18 { pt3dadd( -60.9554, 9.77375, -17.332, 0.44 ) }
    dend_18 { pt3dadd( -62.0591, 10.7415, -17.769, 0.44 ) }
    dend_18 { pt3dadd( -62.5692, 11.2976, -18.0045, 0.37 ) }
    dend_18 { pt3dadd( -62.9911, 11.7963, -18.2099, 0.37 ) }
    dend_18 { pt3dadd( -63.5819, 12.5859, -18.5229, 0.37 ) }
    dend_18 { pt3dadd( -63.9546, 13.1913, -18.7604, 0.37 ) }
    dend_18 { pt3dadd( -64.1399, 13.6704, -18.9208, 0.07 ) }
    dend_18 { pt3dadd( -64.5403, 15.3089, -19.3724, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 24/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.424043, 8.25469, 7.78, 4.65 ) }
    dend_5 { pt3dadd( -0.424043, 8.25469, 7.78, 4.65 ) }
    dend_5 { pt3dadd( -0.755907, 9.16889, 8.8679, 3.76 ) }
    dend_5 { pt3dadd( -1.165, 10.2959, 10.209, 2.29 ) }
    dend_5 { pt3dadd( -1.54964, 11.3555, 11.4699, 1.7 ) }
    dend_5 { pt3dadd( -1.81069, 12.0746, 12.3256, 1.7 ) }
    dend_5 { pt3dadd( -1.95199, 12.4638, 12.7888, 1.7 ) }
    dend_5 { pt3dadd( -2.12054, 12.9405, 13.3383, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.56596, -7.38531, 1.4, 0.88 ) }
    dend_0 { pt3dadd( 1.56596, -7.38531, 1.4, 0.88 ) }
    dend_0 { pt3dadd( 1.57649, -7.94102, 1.5813, 0.88 ) }
    dend_0 { pt3dadd( 1.62118, -8.45522, 1.74131, 0.88 ) }
    dend_0 { pt3dadd( 1.80058, -9.53089, 2.06013, 0.81 ) }
    dend_0 { pt3dadd( 1.9827, -10.2114, 2.26069, 0.52 ) }
    dend_0 { pt3dadd( 2.30151, -11.0425, 2.50501, 0.81 ) }
    dend_0 { pt3dadd( 2.46808, -11.4355, 2.62358, 0.88 ) }
    dend_0 { pt3dadd( 2.81833, -12.1227, 2.84163, 0.81 ) }
    dend_0 { pt3dadd( 3.15144, -12.6231, 3.00033, 1.03 ) }
    dend_0 { pt3dadd( 3.70566, -13.1907, 3.15422, 1.4 ) }
    dend_0 { pt3dadd( 4.31317, -13.6487, 3.2746, 1.92 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.71787, 7.74362, 0.0, 0.592928 ) }
    axon_0 { pt3dadd( 10.3365, 21.2044, 0.0, 0.592928 ) }
    axon_0 { pt3dadd( 16.9551, 34.6653, 0.0, 0.592928 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.13207, -7.42821, 16.8887, 1.25 ) }
    dend_38 { pt3dadd( -7.32787, -7.48203, 18.0637, 1.25 ) }
    dend_38 { pt3dadd( -8.62006, -7.54019, 19.3334, 1.18 ) }
    dend_38 { pt3dadd( -9.69377, -7.58852, 20.3884, 1.7 ) }
    dend_38 { pt3dadd( -10.7591, -7.63647, 21.4352, 1.99 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.13207, -7.42821, 16.8887, 1.18 ) }
    dend_33 { pt3dadd( -5.7675, -6.97631, 18.2745, 1.18 ) }
    dend_33 { pt3dadd( -5.19692, -6.27831, 20.3699, 0.96 ) }
    dend_33 { pt3dadd( -4.66102, -5.71184, 22.0672, 0.96 ) }
    dend_33 { pt3dadd( -4.28922, -5.31884, 23.2448, 0.96 ) }
    dend_33 { pt3dadd( -3.96869, -4.98002, 24.26, 1.33 ) }
    dend_33 { pt3dadd( -3.62693, -4.61877, 25.3425, 1.33 ) }
    dend_33 { pt3dadd( -3.36529, -4.36204, 26.1716, 1.33 ) }
    dend_33 { pt3dadd( -2.75892, -3.81466, 27.7505, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 61/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.428, -15.058, 9.53931, 1.33 ) }
    dend_27 { pt3dadd( -19.9606, -14.7688, 8.12873, 1.33 ) }
    dend_27 { pt3dadd( -20.8343, -14.498, 6.15316, 0.81 ) }
    dend_27 { pt3dadd( -21.5741, -14.2687, 4.48013, 0.81 ) }
    dend_27 { pt3dadd( -22.1043, -14.1044, 3.28124, 0.81 ) }
    dend_27 { pt3dadd( -22.5145, -13.9772, 2.35363, 0.81 ) }
    dend_27 { pt3dadd( -22.7734, -13.897, 1.76812, 0.96 ) }
    dend_27 { pt3dadd( -23.5605, -13.7894, 0.242016, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 69/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -19.428, -15.058, 9.53931, 0.81 ) }
    dend_20 { pt3dadd( -19.7714, -15.0025, 10.2487, 0.81 ) }
    dend_20 { pt3dadd( -20.3331, -14.9707, 11.2686, 0.74 ) }
    dend_20 { pt3dadd( -22.1073, -14.9656, 14.1588, 0.88 ) }
    dend_20 { pt3dadd( -23.1175, -14.9716, 15.6086, 0.66 ) }
    dend_20 { pt3dadd( -23.8395, -14.9628, 16.5473, 0.66 ) }
    dend_20 { pt3dadd( -24.3564, -14.9564, 17.2195, 0.66 ) }
    dend_20 { pt3dadd( -24.9261, -14.972, 17.9415, 0.81 ) }
    dend_20 { pt3dadd( -25.6286, -15.028, 18.8091, 0.96 ) }
    dend_20 { pt3dadd( -26.5438, -15.128, 19.5489, 1.33 ) }
    dend_20 { pt3dadd( -27.2878, -15.1858, 20.0216, 1.77 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 80/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.12054, 12.9405, 13.3383, 1.11 ) }
    dend_9 { pt3dadd( -2.01861, 14.0658, 13.3533, 1.11 ) }
    dend_9 { pt3dadd( -1.89152, 15.4004, 13.3623, 1.03 ) }
    dend_9 { pt3dadd( -1.7252, 17.3006, 13.3671, 1.03 ) }
    dend_9 { pt3dadd( -1.60641, 18.6579, 13.3706, 1.11 ) }
    dend_9 { pt3dadd( -1.53192, 19.5089, 13.3727, 1.11 ) }
    dend_9 { pt3dadd( -1.46343, 20.2914, 13.3747, 1.11 ) }
    dend_9 { pt3dadd( -1.41557, 20.6738, 13.3786, 1.11 ) }
    dend_9 { pt3dadd( -1.30195, 21.3286, 13.3985, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 89/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.12054, 12.9405, 13.3383, 1.33 ) }
    dend_6 { pt3dadd( -2.8128, 14.0554, 15.7939, 1.33 ) }
    dend_6 { pt3dadd( -3.0744, 14.7203, 17.117, 0.81 ) }
    dend_6 { pt3dadd( -3.1562, 15.1939, 17.9173, 0.81 ) }
    dend_6 { pt3dadd( -3.18528, 15.7548, 18.791, 0.66 ) }
    dend_6 { pt3dadd( -3.16823, 16.4007, 19.7116, 0.66 ) }
    dend_6 { pt3dadd( -3.12364, 17.0144, 20.4915, 0.88 ) }
    dend_6 { pt3dadd( -2.96597, 17.8691, 21.2888, 0.88 ) }
    dend_6 { pt3dadd( -2.74226, 19.0182, 22.1845, 0.88 ) }
    dend_6 { pt3dadd( -2.66533, 19.6486, 22.6229, 0.88 ) }
    dend_6 { pt3dadd( -2.65584, 20.361, 23.0809, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( -2.81682, 21.4033, 23.6976, 1.03 ) }
    dend_6 { pt3dadd( -3.08879, 22.213, 24.1539, 0.66 ) }
    dend_6 { pt3dadd( -3.53429, 23.0201, 24.5869, 0.66 ) }
    dend_6 { pt3dadd( -4.45361, 24.0867, 25.2048, 0.66 ) }
    dend_6 { pt3dadd( -5.36551, 24.8474, 25.6935, 0.66 ) }
    dend_6 { pt3dadd( -6.2066, 25.4253, 26.1057, 0.88 ) }
    dend_6 { pt3dadd( -6.89453, 25.7987, 26.4161, 1.03 ) }
    dend_6 { pt3dadd( -7.80831, 26.1902, 26.7976, 0.59 ) }
    dend_6 { pt3dadd( -9.11574, 26.5973, 27.2634, 0.59 ) }
    dend_6 { pt3dadd( -9.91664, 26.7254, 27.4747, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 10/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.31317, -13.6487, 3.2746, 1.4 ) }
    dend_2 { pt3dadd( 4.55386, -13.4794, 3.6819, 1.4 ) }
    dend_2 { pt3dadd( 4.83468, -13.2734, 4.20861, 1.11 ) }
    dend_2 { pt3dadd( 5.00472, -13.1342, 4.57713, 1.11 ) }
    dend_2 { pt3dadd( 5.20524, -12.937, 5.13606, 1.11 ) }
    dend_2 { pt3dadd( 5.31003, -12.8218, 5.48353, 0.96 ) }
    dend_2 { pt3dadd( 5.46939, -12.6439, 6.08847, 0.88 ) }
    dend_2 { pt3dadd( 5.64914, -12.4553, 6.8946, 0.88 ) }
    dend_2 { pt3dadd( 5.79763, -12.3227, 7.61325, 0.88 ) }
    dend_2 { pt3dadd( 6.05412, -12.1562, 8.81196, 0.88 ) }
    dend_2 { pt3dadd( 6.28721, -12.0573, 9.75492, 0.88 ) }
    dend_2 { pt3dadd( 6.60761, -11.9586, 10.8253, 0.88 ) }
    dend_2 { pt3dadd( 7.02754, -11.8543, 11.9414, 1.03 ) }
    dend_2 { pt3dadd( 7.57333, -11.7227, 13.0615, 1.11 ) }
    dend_2 { pt3dadd( 8.09803, -11.5868, 13.9347, 1.11 ) }
    dend_2 { pt3dadd( 8.53913, -11.4498, 14.552, 1.4 ) }
    dend_2 { pt3dadd( 9.19236, -11.2074, 15.371, 1.47 ) }
    dend_2 { pt3dadd( 9.9269, -10.8736, 16.223, 1.47 ) }
    dend_2 { pt3dadd( 10.7406, -10.4432, 17.1415, 1.33 ) }
    dend_2 { pt3dadd( 11.3935, -10.0627, 17.8947, 1.18 ) }
    dend_2 { pt3dadd( 12.0279, -9.67418, 18.6841, 1.03 ) }
    dend_2 { pt3dadd( 12.3467, -9.48428, 19.145, 0.96 ) }
    dend_2 { pt3dadd( 12.7919, -9.2618, 19.8691, 0.81 ) }
    dend_2 { pt3dadd( 13.2059, -9.12207, 20.6026, 0.81 ) }
    dend_2 { pt3dadd( 13.5972, -9.06109, 21.3516, 0.81 ) }
    dend_2 { pt3dadd( 14.0754, -9.08187, 22.2049, 0.81 ) }
    dend_2 { pt3dadd( 14.6939, -9.21304, 23.2101, 1.11 ) }
    dend_2 { pt3dadd( 15.2544, -9.39413, 24.0284, 1.4 ) }
    dend_2 { pt3dadd( 15.9963, -9.70234, 24.953, 1.4 ) }
    dend_2 { pt3dadd( 16.4886, -9.94371, 25.4595, 1.4 ) }
    dend_2 { pt3dadd( 17.6146, -10.5551, 26.438, 0.52 ) }
    dend_2 { pt3dadd( 18.3188, -10.9389, 26.959, 1.03 ) }
    dend_2 { pt3dadd( 18.7981, -11.1899, 27.2818, 1.25 ) }
    dend_2 { pt3dadd( 19.6085, -11.5795, 27.8148, 0.66 ) }
    dend_2 { pt3dadd( 20.5467, -11.9464, 28.4409, 0.52 ) }
    dend_2 { pt3dadd( 21.3066, -12.1467, 28.996, 0.52 ) }
    dend_2 { pt3dadd( 21.789, -12.1498, 29.4519, 0.66 ) }
    dend_2 { pt3dadd( 22.4009, -11.9438, 30.2127, 0.88 ) }
    dend_2 { pt3dadd( 22.7926, -11.6781, 30.8513, 1.18 ) }
    dend_2 { pt3dadd( 23.2294, -11.2038, 31.7779, 1.18 ) }
    dend_2 { pt3dadd( 23.4454, -10.8945, 32.337, 0.81 ) }
    dend_2 { pt3dadd( 23.8455, -10.267, 33.4004, 0.66 ) }
    dend_2 { pt3dadd( 24.2048, -9.74852, 34.3279, 0.66 ) }
    dend_2 { pt3dadd( 24.5701, -9.31433, 35.2159, 0.66 ) }
    dend_2 { pt3dadd( 25.0507, -8.84774, 36.313, 0.66 ) }
    dend_2 { pt3dadd( 25.5012, -8.50734, 37.2503, 1.33 ) }
    dend_2 { pt3dadd( 26.0079, -8.2016, 38.1108, 2.21 ) }
    dend_2 { pt3dadd( 27.0207, -7.7008, 39.4686, 0.88 ) }
    dend_2 { pt3dadd( 27.8375, -7.33658, 40.3356, 0.66 ) }
    dend_2 { pt3dadd( 28.515, -7.04274, 40.9484, 0.81 ) }
    dend_2 { pt3dadd( 29.1745, -6.73954, 41.4854, 0.96 ) }
    dend_2 { pt3dadd( 30.476, -6.0558, 42.4818, 0.59 ) }
    dend_2 { pt3dadd( 31.217, -5.61523, 43.0511, 0.59 ) }
    dend_2 { pt3dadd( 31.9161, -5.14447, 43.5437, 0.52 ) }
    dend_2 { pt3dadd( 32.4538, -4.75703, 43.9616, 0.52 ) }
    dend_2 { pt3dadd( 32.9972, -4.37769, 44.4776, 0.52 ) }
    dend_2 { pt3dadd( 33.3872, -4.10773, 44.9393, 0.52 ) }
    dend_2 { pt3dadd( 33.8593, -3.79974, 45.5926, 0.59 ) }
    dend_2 { pt3dadd( 34.4321, -3.4511, 46.3704, 0.66 ) }
    dend_2 { pt3dadd( 35.0144, -3.12265, 47.1505, 0.59 ) }
    dend_2 { pt3dadd( 35.545, -2.84153, 47.8362, 0.59 ) }
    dend_2 { pt3dadd( 36.0061, -2.59324, 48.4344, 0.59 ) }
    dend_2 { pt3dadd( 36.2863, -2.41028, 48.8083, 0.96 ) }
    dend_2 { pt3dadd( 36.7621, -2.016, 49.4867, 1.77 ) }
    dend_2 { pt3dadd( 37.5129, -1.25871, 50.6056, 0.59 ) }
    dend_2 { pt3dadd( 38.0954, -0.619752, 51.4356, 0.74 ) }
    dend_2 { pt3dadd( 38.4066, -0.275565, 51.8529, 1.33 ) }
    dend_2 { pt3dadd( 38.9773, 0.377143, 52.6117, 1.92 ) }
    dend_2 { pt3dadd( 39.5837, 1.113, 53.4492, 1.11 ) }
    dend_2 { pt3dadd( 40.1591, 1.85892, 54.2694, 0.44 ) }
    dend_2 { pt3dadd( 40.4386, 2.25738, 54.6649, 0.44 ) }
    dend_2 { pt3dadd( 40.6763, 2.60479, 54.9978, 0.44 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 82/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.31317, -13.6487, 3.2746, 0.66 ) }
    dend_1 { pt3dadd( 4.55831, -14.916, 3.41639, 0.66 ) }
    dend_1 { pt3dadd( 4.7034, -16.0128, 3.43726, 0.44 ) }
    dend_1 { pt3dadd( 4.80529, -17.5258, 3.43075, 0.44 ) }
    dend_1 { pt3dadd( 4.80818, -18.3056, 3.44806, 0.52 ) }
    dend_1 { pt3dadd( 4.79063, -19.0562, 3.49689, 0.74 ) }
    dend_1 { pt3dadd( 4.77262, -19.7134, 3.54458, 1.18 ) }
    dend_1 { pt3dadd( 4.72912, -20.1886, 3.60816, 1.7 ) }
    dend_1 { pt3dadd( 4.66072, -20.913, 3.71749, 1.11 ) }
    dend_1 { pt3dadd( 4.61012, -21.8219, 3.76287, 0.59 ) }
    dend_1 { pt3dadd( 4.60231, -22.5196, 3.79202, 0.52 ) }
    dend_1 { pt3dadd( 4.6122, -23.0861, 3.82195, 0.52 ) }
    dend_1 { pt3dadd( 4.63419, -23.9068, 3.82477, 0.52 ) }
    dend_1 { pt3dadd( 4.64033, -24.4774, 3.8564, 0.74 ) }
    dend_1 { pt3dadd( 4.63651, -25.3719, 3.92325, 0.81 ) }
    dend_1 { pt3dadd( 4.61911, -26.1705, 4.00755, 0.81 ) }
    dend_1 { pt3dadd( 4.57883, -27.1918, 4.16647, 0.66 ) }
    dend_1 { pt3dadd( 4.54026, -28.2676, 4.39426, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 4.50183, -30.0331, 4.82958, 0.44 ) }
    dend_1 { pt3dadd( 4.50819, -30.6337, 5.02013, 0.66 ) }
    dend_1 { pt3dadd( 4.56171, -31.2841, 5.25852, 0.96 ) }
    dend_1 { pt3dadd( 4.65491, -31.8176, 5.44114, 1.11 ) }
    dend_1 { pt3dadd( 4.84748, -32.5195, 5.6243, 1.55 ) }
    dend_1 { pt3dadd( 4.97916, -32.8662, 5.65542, 1.55 ) }
    dend_1 { pt3dadd( 5.0742, -33.0785, 5.62678, 1.55 ) }
    dend_1 { pt3dadd( 5.49798, -33.9429, 5.4051, 0.66 ) }
    dend_1 { pt3dadd( 5.93785, -34.7739, 5.06865, 0.44 ) }
    dend_1 { pt3dadd( 6.19497, -35.2403, 4.84378, 0.44 ) }
    dend_1 { pt3dadd( 6.52882, -35.8125, 4.53645, 0.44 ) }
    dend_1 { pt3dadd( 6.73708, -36.1587, 4.34615, 0.88 ) }
    dend_1 { pt3dadd( 7.10222, -36.7553, 4.01899, 1.33 ) }
    dend_1 { pt3dadd( 7.65625, -37.679, 3.50821, 1.33 ) }
    dend_1 { pt3dadd( 8.13163, -38.5298, 3.0813, 0.66 ) }
    dend_1 { pt3dadd( 8.48224, -39.3036, 2.76564, 0.37 ) }
    dend_1 { pt3dadd( 8.61196, -39.7222, 2.63773, 0.37 ) }
    dend_1 { pt3dadd( 8.64837, -40.0825, 2.56188, 0.37 ) }
    dend_1 { pt3dadd( 8.58389, -40.6056, 2.49892, 0.37 ) }
    dend_1 { pt3dadd( 8.33374, -41.3813, 2.44333, 0.37 ) }
    dend_1 { pt3dadd( 7.96912, -42.3075, 2.33357, 0.37 ) }
    dend_1 { pt3dadd( 7.7774, -42.8289, 2.24638, 0.81 ) }
    dend_1 { pt3dadd( 7.48302, -43.7982, 1.96586, 1.55 ) }
    dend_1 { pt3dadd( 7.36697, -44.2895, 1.75484, 1.7 ) }
    dend_1 { pt3dadd( 7.2036, -45.3336, 1.14414, 1.18 ) }
    dend_1 { pt3dadd( 7.09562, -46.5191, 0.226267, 0.81 ) }
    dend_1 { pt3dadd( 7.07213, -47.384, -0.655935, 0.52 ) }
    dend_1 { pt3dadd( 7.12086, -48.4471, -2.07453, 0.44 ) }
    dend_1 { pt3dadd( 7.22879, -49.0895, -3.22578, 0.44 ) }
    dend_1 { pt3dadd( 7.39317, -49.5216, -4.23952, 0.44 ) }
    dend_1 { pt3dadd( 7.57567, -49.7575, -5.02389, 0.44 ) }
    dend_1 { pt3dadd( 7.80291, -49.9233, -5.82081, 0.44 ) }
    dend_1 { pt3dadd( 7.99533, -50.0201, -6.39892, 0.44 ) }
    dend_1 { pt3dadd( 8.26015, -50.1636, -7.00545, 0.44 ) }
    dend_1 { pt3dadd( 8.55939, -50.4759, -7.53178, 0.44 ) }
    dend_1 { pt3dadd( 8.74099, -50.8921, -7.82777, 0.44 ) }
    dend_1 { pt3dadd( 8.90789, -51.3917, -8.08149, 0.44 ) }
    dend_1 { pt3dadd( 9.05317, -51.8691, -8.27999, 0.44 ) }
    dend_1 { pt3dadd( 9.28089, -52.6244, -8.52032, 1.7 ) }
    dend_1 { pt3dadd( 9.58857, -53.5707, -8.77087, 2.43 ) }
    dend_1 { pt3dadd( 10.4899, -55.9805, -9.34995, 0.44 ) }
    dend_1 { pt3dadd( 10.7759, -56.6466, -9.48969, 1.03 ) }
    dend_1 { pt3dadd( 11.0054, -57.1293, -9.5798, 1.18 ) }
    dend_1 { pt3dadd( 11.5849, -58.2492, -9.74313, 0.29 ) }
    dend_1 { pt3dadd( 11.941, -58.8938, -9.82214, 0.29 ) }
    dend_1 { pt3dadd( 12.3569, -59.5927, -9.87317, 0.29 ) }
    dend_1 { pt3dadd( 12.5005, -59.8203, -9.88151, 0.29 ) }
    dend_1 { pt3dadd( 12.8808, -60.5059, -10.008, 0.29 ) }
    dend_1 { pt3dadd( 13.1419, -61.0352, -10.1772, 0.29 ) }
    dend_1 { pt3dadd( 13.4906, -61.7562, -10.5008, 0.59 ) }
    dend_1 { pt3dadd( 13.7709, -62.3117, -10.8033, 0.88 ) }
    dend_1 { pt3dadd( 14.162, -62.9927, -11.2233, 0.44 ) }
    dend_1 { pt3dadd( 14.8431, -63.8509, -11.854, 0.44 ) }
    dend_1 { pt3dadd( 15.2818, -64.2648, -12.2122, 0.44 ) }
    dend_1 { pt3dadd( 15.8513, -64.7094, -12.63, 0.44 ) }
    dend_1 { pt3dadd( 16.5751, -65.2057, -13.1007, 1.03 ) }
    dend_1 { pt3dadd( 17.0509, -65.5199, -13.4036, 1.7 ) }
    dend_1 { pt3dadd( 18.0933, -66.2138, -14.0417, 0.52 ) }
    dend_1 { pt3dadd( 18.9544, -66.8224, -14.5285, 0.59 ) }
    dend_1 { pt3dadd( 19.3599, -67.1411, -14.7445, 0.59 ) }
    dend_1 { pt3dadd( 19.9763, -67.6675, -15.053, 0.07 ) }
    dend_1 { pt3dadd( 20.8913, -68.5071, -15.4824, 0.66 ) }
    dend_1 { pt3dadd( 21.7114, -69.3516, -15.8956, 0.29 ) }
    dend_1 { pt3dadd( 22.3223, -70.0701, -16.2155, 0.88 ) }
    dend_1 { pt3dadd( 22.9857, -70.9162, -16.5636, 0.22 ) }
    dend_1 { pt3dadd( 23.2823, -71.3235, -16.7154, 0.22 ) }
    dend_1 { pt3dadd( 23.5132, -71.6553, -16.8196, 0.22 ) }
    dend_1 { pt3dadd( 23.9203, -72.2524, -16.9473, 0.22 ) }
    dend_1 { pt3dadd( 24.1302, -72.5677, -17.0055, 0.22 ) }
    dend_1 { pt3dadd( 24.5385, -73.0877, -17.0944, 0.66 ) }
    dend_1 { pt3dadd( 25.0834, -73.6973, -17.1938, 0.15 ) }
    dend_1 { pt3dadd( 25.524, -74.1444, -17.2613, 0.15 ) }
    dend_1 { pt3dadd( 26.1471, -74.7427, -17.3339, 1.4 ) }
    dend_1 { pt3dadd( 26.4411, -75.0121, -17.359, 1.4 ) }
    dend_1 { pt3dadd( 27.6365, -76.1003, -17.474, 0.22 ) }
    dend_1 { pt3dadd( 28.1433, -76.5604, -17.5358, 0.59 ) }
    dend_1 { pt3dadd( 28.8023, -77.2011, -17.6611, 0.44 ) }
    dend_1 { pt3dadd( 29.3488, -77.7907, -17.8167, 0.22 ) }
    dend_1 { pt3dadd( 29.7037, -78.2244, -17.9854, 0.22 ) }
    dend_1 { pt3dadd( 29.9906, -78.6328, -18.1834, 0.59 ) }
    dend_1 { pt3dadd( 30.3054, -79.2309, -18.545, 0.74 ) }
    dend_1 { pt3dadd( 30.693, -80.1069, -19.1136, 0.22 ) }
    dend_1 { pt3dadd( 30.8531, -80.5226, -19.3916, 0.22 ) }
    dend_1 { pt3dadd( 31.1439, -81.2917, -19.9334, 0.96 ) }
    dend_1 { pt3dadd( 31.2953, -81.6889, -20.2365, 0.96 ) }
    dend_1 { pt3dadd( 31.6808, -82.68, -21.0555, 0.22 ) }
    dend_1 { pt3dadd( 32.0071, -83.4266, -21.7165, 0.59 ) }
    dend_1 { pt3dadd( 32.5216, -84.3347, -22.5804, 0.22 ) }
    dend_1 { pt3dadd( 32.9222, -84.923, -23.1819, 0.22 ) }
    dend_1 { pt3dadd( 33.3499, -85.4698, -23.7961, 0.22 ) }
    dend_1 { pt3dadd( 33.6724, -85.8361, -24.2613, 0.22 ) }
    dend_1 { pt3dadd( 34.0682, -86.24, -24.8288, 1.11 ) }
    dend_1 { pt3dadd( 34.7957, -86.9622, -25.873, 0.22 ) }
    dend_1 { pt3dadd( 35.3029, -87.4829, -26.5892, 0.22 ) }
    dend_1 { pt3dadd( 35.6074, -87.8086, -26.9913, 0.22 ) }
    dend_1 { pt3dadd( 36.1004, -88.3513, -27.5861, 0.81 ) }
    dend_1 { pt3dadd( 36.6801, -89.0082, -28.2522, 0.22 ) }
    dend_1 { pt3dadd( 37.0196, -89.3971, -28.6165, 0.59 ) }
    dend_1 { pt3dadd( 37.7595, -90.2347, -29.3665, 0.07 ) }
    dend_1 { pt3dadd( 38.3468, -90.8961, -29.9271, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 38.8105, -91.4259, -30.3474, 0.66 ) }
    dend_1 { pt3dadd( 39.4575, -92.2108, -30.9215, 0.66 ) }
    dend_1 { pt3dadd( 40.2184, -93.2048, -31.5975, 0.15 ) }
    dend_1 { pt3dadd( 40.7006, -93.8789, -32.0765, 0.15 ) }
    dend_1 { pt3dadd( 41.1482, -94.5319, -32.609, 0.15 ) }
    dend_1 { pt3dadd( 41.3136, -94.7786, -32.8497, 0.74 ) }
    dend_1 { pt3dadd( 41.589, -95.1832, -33.3337, 1.47 ) }
    dend_1 { pt3dadd( 41.9391, -95.6919, -34.0296, 0.81 ) }
    dend_1 { pt3dadd( 42.5283, -96.4956, -35.3011, 0.29 ) }
    dend_1 { pt3dadd( 43.0498, -97.1203, -36.3487, 0.29 ) }
    dend_1 { pt3dadd( 43.3319, -97.4285, -36.8672, 0.29 ) }
    dend_1 { pt3dadd( 43.6967, -97.8195, -37.4836, 0.29 ) }
    dend_1 { pt3dadd( 44.1343, -98.2852, -38.1318, 0.22 ) }
    dend_1 { pt3dadd( 44.601, -98.8199, -38.7265, 0.22 ) }
    dend_1 { pt3dadd( 44.9027, -99.2157, -39.0571, 0.52 ) }
    dend_1 { pt3dadd( 45.46, -100.102, -39.6199, 0.22 ) }
    dend_1 { pt3dadd( 45.7923, -100.743, -39.9576, 0.22 ) }
    dend_1 { pt3dadd( 46.0197, -101.27, -40.2048, 0.59 ) }
    dend_1 { pt3dadd( 46.203, -101.801, -40.431, 0.59 ) }
    dend_1 { pt3dadd( 46.3368, -102.33, -40.6319, 0.59 ) }
    dend_1 { pt3dadd( 46.5331, -103.3, -40.992, 0.29 ) }
    dend_1 { pt3dadd( 46.6421, -103.841, -41.2022, 0.29 ) }
    dend_1 { pt3dadd( 46.7548, -104.278, -41.4079, 0.29 ) }
    dend_1 { pt3dadd( 46.8979, -104.711, -41.6981, 0.59 ) }
    dend_1 { pt3dadd( 47.0008, -104.964, -41.9216, 0.59 ) }
    dend_1 { pt3dadd( 47.2017, -105.38, -42.4436, 0.29 ) }
    dend_1 { pt3dadd( 47.4609, -105.871, -43.3333, 0.15 ) }
    dend_1 { pt3dadd( 47.5984, -106.185, -44.1183, 0.37 ) }
    dend_1 { pt3dadd( 47.7038, -106.541, -45.4225, 0.37 ) }
    dend_1 { pt3dadd( 47.7059, -106.628, -45.9624, 0.37 ) }
    dend_1 { pt3dadd( 47.6658, -106.753, -46.9969, 0.37 ) }
    dend_1 { pt3dadd( 47.5949, -106.804, -47.7791, 0.37 ) }
    dend_1 { pt3dadd( 47.4569, -106.803, -48.7541, 0.37 ) }
    dend_1 { pt3dadd( 47.2376, -106.734, -50.0348, 0.37 ) }
    dend_1 { pt3dadd( 47.0653, -106.635, -50.9742, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 16.9551, 34.6653, 0.0, 0.480818 ) }
    axon_1 { pt3dadd( 23.5738, 48.1261, 0.0, 0.480818 ) }
    axon_1 { pt3dadd( 30.1924, 61.5869, 0.0, 0.480818 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -10.7591, -7.63647, 21.4352, 1.33 ) }
    dend_40 { pt3dadd( -11.18, -6.97057, 21.6438, 1.33 ) }
    dend_40 { pt3dadd( -11.9267, -5.66105, 21.9972, 0.59 ) }
    dend_40 { pt3dadd( -12.6663, -4.17466, 22.3338, 0.59 ) }
    dend_40 { pt3dadd( -13.1286, -3.17799, 22.5307, 0.74 ) }
    dend_40 { pt3dadd( -13.3088, -2.79985, 22.6103, 1.03 ) }
    dend_40 { pt3dadd( -13.5718, -2.28267, 22.7413, 1.03 ) }
    dend_40 { pt3dadd( -14.0237, -1.43916, 22.9949, 1.03 ) }
    dend_40 { pt3dadd( -14.46, -0.583533, 23.2749, 0.59 ) }
    dend_40 { pt3dadd( -14.6815, -0.121728, 23.4403, 0.59 ) }
    dend_40 { pt3dadd( -15.1949, 0.899754, 23.8358, 0.59 ) }
    dend_40 { pt3dadd( -15.6774, 1.81945, 24.185, 0.59 ) }
    dend_40 { pt3dadd( -16.1067, 2.59464, 24.4859, 0.96 ) }
    dend_40 { pt3dadd( -16.6871, 3.58697, 24.858, 0.52 ) }
    dend_40 { pt3dadd( -17.2039, 4.49198, 25.2117, 0.52 ) }
    dend_40 { pt3dadd( -17.6911, 5.43, 25.6193, 0.74 ) }
    dend_40 { pt3dadd( -18.1787, 6.51529, 26.1186, 1.18 ) }
    dend_40 { pt3dadd( -18.399, 7.10156, 26.4358, 0.88 ) }
    dend_40 { pt3dadd( -18.7051, 8.11215, 27.1525, 0.37 ) }
    dend_40 { pt3dadd( -18.9053, 8.98756, 27.9131, 0.66 ) }
    dend_40 { pt3dadd( -19.0847, 10.0609, 28.9839, 1.62 ) }
    dend_40 { pt3dadd( -19.1337, 10.5237, 29.4891, 1.99 ) }
    dend_40 { pt3dadd( -19.2127, 11.4931, 30.5816, 1.25 ) }
    dend_40 { pt3dadd( -19.3282, 12.4986, 31.709, 1.03 ) }
    dend_40 { pt3dadd( -19.445, 13.0747, 32.3561, 0.59 ) }
    dend_40 { pt3dadd( -19.7261, 13.9198, 33.2098, 0.59 ) }
    dend_40 { pt3dadd( -19.938, 14.3852, 33.6652, 0.59 ) }
    dend_40 { pt3dadd( -20.1969, 14.881, 34.1701, 1.25 ) }
    dend_40 { pt3dadd( -20.6754, 15.7423, 35.0775, 1.77 ) }
    dend_40 { pt3dadd( -21.3543, 16.9799, 36.4258, 0.74 ) }
    dend_40 { pt3dadd( -21.822, 17.8239, 37.3885, 1.03 ) }
    dend_40 { pt3dadd( -22.4217, 18.9083, 38.5863, 0.66 ) }
    dend_40 { pt3dadd( -23.114, 20.1006, 39.7988, 0.59 ) }
    dend_40 { pt3dadd( -23.8362, 21.2774, 40.9414, 1.18 ) }
    dend_40 { pt3dadd( -24.3705, 22.0781, 41.6302, 0.59 ) }
    dend_40 { pt3dadd( -24.7452, 22.5512, 41.98, 0.59 ) }
    dend_40 { pt3dadd( -25.6854, 23.4763, 42.5258, 0.59 ) }
    dend_40 { pt3dadd( -27.5263, 24.8009, 42.8266, 0.44 ) }
    dend_40 { pt3dadd( -29.8302, 26.1217, 42.6981, 0.44 ) }
    dend_40 { pt3dadd( -30.5917, 26.5319, 42.5444, 0.81 ) }
    dend_40 { pt3dadd( -31.2166, 26.8733, 42.3552, 0.96 ) }
    dend_40 { pt3dadd( -31.9457, 27.2812, 42.0726, 0.74 ) }
    dend_40 { pt3dadd( -33.3398, 28.008, 41.4783, 0.81 ) }
    dend_40 { pt3dadd( -34.0106, 28.3418, 41.1157, 0.59 ) }
    dend_40 { pt3dadd( -35.3351, 28.9715, 40.1527, 0.52 ) }
    dend_40 { pt3dadd( -36.186, 29.3968, 39.4719, 0.37 ) }
    dend_40 { pt3dadd( -36.9333, 29.794, 38.8401, 0.37 ) }
    dend_40 { pt3dadd( -37.5459, 30.1094, 38.3246, 0.59 ) }
    dend_40 { pt3dadd( -38.0688, 30.3741, 37.8892, 0.59 ) }
    dend_40 { pt3dadd( -38.4546, 30.5542, 37.5679, 0.59 ) }
    dend_40 { pt3dadd( -38.9658, 30.7773, 37.1681, 0.81 ) }
    dend_40 { pt3dadd( -39.6, 31.076, 36.6774, 1.18 ) }
    dend_40 { pt3dadd( -40.416, 31.4854, 36.0729, 0.52 ) }
    dend_40 { pt3dadd( -41.2576, 31.922, 35.4254, 0.52 ) }
    dend_40 { pt3dadd( -42.3001, 32.4298, 34.5922, 0.88 ) }
    dend_40 { pt3dadd( -43.3953, 32.9026, 33.6448, 0.29 ) }
    dend_40 { pt3dadd( -43.9844, 33.123, 33.0871, 0.52 ) }
    dend_40 { pt3dadd( -44.8544, 33.4044, 32.2109, 0.52 ) }
    dend_40 { pt3dadd( -45.2453, 33.5174, 31.7798, 0.52 ) }
    dend_40 { pt3dadd( -45.7712, 33.6544, 31.1521, 0.52 ) }
    dend_40 { pt3dadd( -46.332, 33.8061, 30.3327, 0.52 ) }
    dend_40 { pt3dadd( -46.6603, 33.9213, 29.702, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( -46.8702, 34.0278, 29.2495, 0.52 ) }
    dend_40 { pt3dadd( -47.1529, 34.2226, 28.5827, 0.52 ) }
    dend_40 { pt3dadd( -47.377, 34.3988, 28.1531, 0.52 ) }
    dend_40 { pt3dadd( -47.6703, 34.6377, 27.6671, 0.52 ) }
    dend_40 { pt3dadd( -48.1736, 35.066, 26.8975, 0.37 ) }
    dend_40 { pt3dadd( -48.7868, 35.609, 25.9706, 0.29 ) }
    dend_40 { pt3dadd( -49.024, 35.8167, 25.6334, 0.59 ) }
    dend_40 { pt3dadd( -49.6289, 36.3085, 24.8553, 1.11 ) }
    dend_40 { pt3dadd( -50.7, 37.1138, 23.6137, 0.29 ) }
    dend_40 { pt3dadd( -50.923, 37.2841, 23.3844, 0.29 ) }
    dend_40 { pt3dadd( -51.3728, 37.6624, 22.9829, 0.29 ) }
    dend_40 { pt3dadd( -51.9649, 38.2432, 22.5923, 0.29 ) }
    dend_40 { pt3dadd( -52.5573, 38.9524, 22.4263, 0.44 ) }
    dend_40 { pt3dadd( -53.185, 39.8594, 22.5977, 0.15 ) }
    dend_40 { pt3dadd( -53.8027, 40.7768, 22.9948, 0.52 ) }
    dend_40 { pt3dadd( -54.6562, 41.9264, 23.6929, 0.52 ) }
    dend_40 { pt3dadd( -55.331, 42.6831, 24.292, 0.52 ) }
    dend_40 { pt3dadd( -55.7964, 43.0923, 24.7081, 0.52 ) }
    dend_40 { pt3dadd( -56.2863, 43.4192, 25.1247, 0.52 ) }
    dend_40 { pt3dadd( -56.8589, 43.6671, 25.5032, 0.52 ) }
    dend_40 { pt3dadd( -57.7621, 43.8554, 25.8362, 0.66 ) }
    dend_40 { pt3dadd( -58.8451, 43.9468, 25.9989, 0.37 ) }
    dend_40 { pt3dadd( -59.9584, 43.9239, 25.9838, 0.37 ) }
    dend_40 { pt3dadd( -60.1976, 43.9051, 25.9436, 0.37 ) }
    dend_40 { pt3dadd( -61.3439, 43.7873, 25.59, 0.37 ) }
    dend_40 { pt3dadd( -62.2972, 43.6956, 25.1803, 0.37 ) }
    dend_40 { pt3dadd( -63.1544, 43.6451, 24.7123, 0.37 ) }
    dend_40 { pt3dadd( -64.0546, 43.6419, 24.1417, 0.52 ) }
    dend_40 { pt3dadd( -64.7896, 43.6958, 23.6576, 0.66 ) }
    dend_40 { pt3dadd( -65.2705, 43.7624, 23.374, 0.66 ) }
    dend_40 { pt3dadd( -65.6909, 43.8661, 23.1344, 0.66 ) }
    dend_40 { pt3dadd( -65.9985, 43.9951, 22.9975, 0.66 ) }
    dend_40 { pt3dadd( -66.2589, 44.1305, 22.9284, 0.66 ) }
    dend_40 { pt3dadd( -67.16, 44.6379, 22.8442, 0.44 ) }
    dend_40 { pt3dadd( -68.1184, 45.1911, 22.8713, 0.44 ) }
    dend_40 { pt3dadd( -69.2822, 45.8914, 22.9976, 0.59 ) }
    dend_40 { pt3dadd( -70.0493, 46.3799, 23.1385, 0.59 ) }
    dend_40 { pt3dadd( -70.9627, 46.9881, 23.3858, 0.59 ) }
    dend_40 { pt3dadd( -72.2006, 47.8444, 23.81, 0.52 ) }
    dend_40 { pt3dadd( -72.734, 48.2311, 23.9823, 0.52 ) }
    dend_40 { pt3dadd( -73.2545, 48.5957, 24.1376, 0.52 ) }
    dend_40 { pt3dadd( -73.9487, 49.0456, 24.3001, 0.59 ) }
    dend_40 { pt3dadd( -74.7656, 49.5454, 24.3139, 0.59 ) }
    dend_40 { pt3dadd( -75.5122, 49.9645, 24.0777, 0.59 ) }
    dend_40 { pt3dadd( -76.9588, 50.631, 23.0845, 0.37 ) }
    dend_40 { pt3dadd( -77.5772, 50.8599, 22.6057, 0.37 ) }
    dend_40 { pt3dadd( -78.1539, 51.0449, 22.0852, 0.52 ) }
    dend_40 { pt3dadd( -78.8001, 51.2182, 21.401, 0.96 ) }
    dend_40 { pt3dadd( -79.498, 51.409, 20.5354, 0.96 ) }
    dend_40 { pt3dadd( -80.2586, 51.6661, 19.4989, 0.96 ) }
    dend_40 { pt3dadd( -81.1207, 52.1172, 18.3133, 0.81 ) }
    dend_40 { pt3dadd( -81.8262, 52.5533, 17.2852, 0.81 ) }
    dend_40 { pt3dadd( -82.3763, 52.927, 16.4783, 0.81 ) }
    dend_40 { pt3dadd( -82.8608, 53.2884, 15.7959, 0.81 ) }
    dend_40 { pt3dadd( -83.569, 53.9068, 14.788, 0.59 ) }
    dend_40 { pt3dadd( -84.3789, 54.7153, 13.5449, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 56/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.7591, -7.63647, 21.4352, 0.59 ) }
    dend_39 { pt3dadd( -11.1081, -7.81471, 22.352, 0.59 ) }
    dend_39 { pt3dadd( -11.8089, -8.12799, 24.0875, 0.52 ) }
    dend_39 { pt3dadd( -12.5205, -8.40098, 25.8197, 0.52 ) }
    dend_39 { pt3dadd( -13.0526, -8.58118, 27.0889, 0.52 ) }
    dend_39 { pt3dadd( -13.54, -8.74068, 28.1975, 0.74 ) }
    dend_39 { pt3dadd( -13.9518, -8.87735, 29.0469, 0.74 ) }
    dend_39 { pt3dadd( -14.2319, -8.97746, 29.5642, 0.52 ) }
    dend_39 { pt3dadd( -14.9961, -9.27858, 30.74, 0.52 ) }
    dend_39 { pt3dadd( -15.5281, -9.51144, 31.4827, 0.52 ) }
    dend_39 { pt3dadd( -16.0802, -9.79803, 32.2395, 0.52 ) }
    dend_39 { pt3dadd( -16.702, -10.176, 33.0826, 0.88 ) }
    dend_39 { pt3dadd( -17.3039, -10.5912, 33.8858, 1.84 ) }
    dend_39 { pt3dadd( -18.2385, -11.2728, 35.117, 0.66 ) }
    dend_39 { pt3dadd( -18.9801, -11.8122, 36.0398, 0.66 ) }
    dend_39 { pt3dadd( -19.6677, -12.3038, 36.8708, 0.44 ) }
    dend_39 { pt3dadd( -20.0782, -12.5973, 37.3583, 0.44 ) }
    dend_39 { pt3dadd( -20.2434, -12.7224, 37.5605, 0.44 ) }
    dend_39 { pt3dadd( -20.8065, -13.1535, 38.2569, 0.44 ) }
    dend_39 { pt3dadd( -21.1674, -13.4253, 38.7323, 0.44 ) }
    dend_39 { pt3dadd( -21.6705, -13.7756, 39.4255, 0.44 ) }
    dend_39 { pt3dadd( -22.1129, -14.0342, 40.1132, 0.88 ) }
    dend_39 { pt3dadd( -22.7655, -14.3459, 41.2024, 0.22 ) }
    dend_39 { pt3dadd( -23.4543, -14.6061, 42.3781, 0.22 ) }
    dend_39 { pt3dadd( -24.0566, -14.7855, 43.4765, 0.22 ) }
    dend_39 { pt3dadd( -24.3718, -14.8469, 44.1098, 1.18 ) }
    dend_39 { pt3dadd( -25.1254, -14.8837, 45.6939, 0.44 ) }
    dend_39 { pt3dadd( -25.7155, -14.8424, 46.8943, 1.03 ) }
    dend_39 { pt3dadd( -26.753, -14.6924, 48.7905, 0.52 ) }
    dend_39 { pt3dadd( -27.5036, -14.5608, 50.0229, 0.52 ) }
    dend_39 { pt3dadd( -28.334, -14.4098, 51.2325, 0.52 ) }
    dend_39 { pt3dadd( -29.3816, -14.2438, 52.6286, 0.29 ) }
    dend_39 { pt3dadd( -30.1999, -14.1314, 53.6395, 0.29 ) }
    dend_39 { pt3dadd( -30.8644, -14.061, 54.4228, 0.88 ) }
    dend_39 { pt3dadd( -31.32, -14.0186, 54.9348, 2.29 ) }
    dend_39 { pt3dadd( -32.4574, -13.9414, 56.1561, 0.66 ) }
    dend_39 { pt3dadd( -32.9717, -13.91, 56.6942, 0.44 ) }
    dend_39 { pt3dadd( -33.9806, -13.8275, 57.8774, 0.44 ) }
    dend_39 { pt3dadd( -34.5804, -13.7338, 58.6858, 0.44 ) }
    dend_39 { pt3dadd( -35.1303, -13.5797, 59.64, 0.44 ) }
    dend_39 { pt3dadd( -35.4319, -13.4608, 60.2795, 0.44 ) }
    dend_39 { pt3dadd( -35.7139, -13.3257, 60.9495, 0.44 ) }
    dend_39 { pt3dadd( -36.1296, -13.1144, 61.9146, 0.66 ) }
    dend_39 { pt3dadd( -36.5158, -12.9253, 62.7787, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_39 { pt3dadd( -37.9484, -12.2832, 65.8803, 0.59 ) }
    dend_39 { pt3dadd( -38.6563, -12.0175, 67.371, 0.59 ) }
    dend_39 { pt3dadd( -39.0378, -11.9181, 68.1523, 0.59 ) }
    dend_39 { pt3dadd( -39.6484, -11.8355, 69.3476, 0.07 ) }
    dend_39 { pt3dadd( -40.1513, -11.8133, 70.2492, 0.07 ) }
    dend_39 { pt3dadd( -40.5623, -11.8102, 70.917, 0.07 ) }
    dend_39 { pt3dadd( -41.0588, -11.8188, 71.5676, 0.07 ) }
    dend_39 { pt3dadd( -41.8597, -11.8345, 72.534, 0.74 ) }
    dend_39 { pt3dadd( -42.5985, -11.8257, 73.3866, 0.22 ) }
    dend_39 { pt3dadd( -43.1746, -11.8041, 74.0093, 0.22 ) }
    dend_39 { pt3dadd( -43.6532, -11.7585, 74.4924, 0.37 ) }
    dend_39 { pt3dadd( -44.4099, -11.6141, 75.2891, 0.07 ) }
    dend_39 { pt3dadd( -45.2244, -11.3603, 76.1494, 0.07 ) }
    dend_39 { pt3dadd( -46.0658, -11.0111, 77.0601, 1.25 ) }
    dend_39 { pt3dadd( -47.1405, -10.5198, 78.2292, 0.15 ) }
    dend_39 { pt3dadd( -47.8642, -10.1696, 79.0504, 0.37 ) }
    dend_39 { pt3dadd( -48.9803, -9.56413, 80.4477, 0.74 ) }
    dend_39 { pt3dadd( -49.7038, -9.07791, 81.485, 0.15 ) }
    dend_39 { pt3dadd( -50.2131, -8.66125, 82.3558, 0.15 ) }
    dend_39 { pt3dadd( -50.4794, -8.40792, 82.9298, 0.15 ) }
    dend_39 { pt3dadd( -50.9083, -7.95221, 84.0354, 1.03 ) }
    dend_39 { pt3dadd( -51.3377, -7.49458, 85.2982, 1.03 ) }
    dend_39 { pt3dadd( -51.6182, -7.20715, 86.2336, 1.03 ) }
    dend_39 { pt3dadd( -51.934, -6.87467, 87.4325, 0.74 ) }
    dend_39 { pt3dadd( -52.2993, -6.48302, 88.8703, 0.74 ) }
    dend_39 { pt3dadd( -52.6127, -6.14463, 90.1225, 1.25 ) }
    dend_39 { pt3dadd( -53.0017, -5.76195, 91.5791, 1.25 ) }
    dend_39 { pt3dadd( -53.3716, -5.45736, 92.7753, 1.25 ) }
    dend_39 { pt3dadd( -53.9277, -5.03259, 94.3842, 0.37 ) }
    dend_39 { pt3dadd( -54.346, -4.71043, 95.4687, 0.37 ) }
    dend_39 { pt3dadd( -54.5398, -4.55821, 95.8998, 0.37 ) }
    dend_39 { pt3dadd( -54.943, -4.24254, 96.6176, 0.37 ) }
    dend_39 { pt3dadd( -55.4258, -3.86762, 97.2409, 0.15 ) }
    dend_39 { pt3dadd( -55.9978, -3.45276, 97.8466, 0.15 ) }
    dend_39 { pt3dadd( -56.4708, -3.14771, 98.3098, 0.52 ) }
    dend_39 { pt3dadd( -56.8482, -2.92728, 98.7143, 1.33 ) }
    dend_39 { pt3dadd( -57.4244, -2.64502, 99.4185, 1.47 ) }
    dend_39 { pt3dadd( -58.4521, -2.27124, 100.88, 0.44 ) }
    dend_39 { pt3dadd( -59.4716, -2.04372, 102.493, 0.44 ) }
    dend_39 { pt3dadd( -60.1986, -1.9355, 103.717, 0.15 ) }
    dend_39 { pt3dadd( -61.0093, -1.88292, 105.189, 0.15 ) }
    dend_39 { pt3dadd( -61.6371, -1.90561, 106.422, 0.59 ) }
    dend_39 { pt3dadd( -62.4578, -2.06425, 108.185, 0.07 ) }
    dend_39 { pt3dadd( -62.7063, -2.17277, 108.745, 0.07 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 44/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.75892, -3.81466, 27.7505, 0.66 ) }
    dend_37 { pt3dadd( -2.721, -3.20524, 28.602, 0.66 ) }
    dend_37 { pt3dadd( -2.60014, -1.85316, 30.2336, 0.59 ) }
    dend_37 { pt3dadd( -2.45308, -0.7335, 31.3839, 0.59 ) }
    dend_37 { pt3dadd( -2.20153, 0.424714, 32.5009, 0.37 ) }
    dend_37 { pt3dadd( -1.98325, 1.21961, 33.2135, 0.37 ) }
    dend_37 { pt3dadd( -1.79967, 1.84208, 33.7325, 0.37 ) }
    dend_37 { pt3dadd( -1.53125, 2.64402, 34.3388, 0.52 ) }
    dend_37 { pt3dadd( -1.13721, 3.6518, 34.9112, 1.33 ) }
    dend_37 { pt3dadd( -0.543506, 5.07409, 35.6603, 0.44 ) }
    dend_37 { pt3dadd( -0.15074, 5.98713, 36.2134, 0.44 ) }
    dend_37 { pt3dadd( 0.103506, 6.58193, 36.6397, 0.44 ) }
    dend_37 { pt3dadd( 0.385407, 7.22471, 37.1744, 0.44 ) }
    dend_37 { pt3dadd( 0.811636, 8.2388, 38.0824, 1.03 ) }
    dend_37 { pt3dadd( 1.29808, 9.5318, 39.2478, 0.88 ) }
    dend_37 { pt3dadd( 1.72374, 10.828, 40.3537, 0.88 ) }
    dend_37 { pt3dadd( 1.89807, 11.3462, 40.8131, 0.74 ) }
    dend_37 { pt3dadd( 2.09652, 11.8899, 41.3035, 0.59 ) }
    dend_37 { pt3dadd( 2.41135, 12.6534, 41.9573, 0.29 ) }
    dend_37 { pt3dadd( 2.85298, 13.5807, 42.7061, 0.66 ) }
    dend_37 { pt3dadd( 3.35383, 14.4105, 43.2737, 0.22 ) }
    dend_37 { pt3dadd( 3.8286, 15.0758, 43.7087, 0.22 ) }
    dend_37 { pt3dadd( 4.19461, 15.5442, 44.0317, 0.22 ) }
    dend_37 { pt3dadd( 4.836, 16.3143, 44.5863, 1.33 ) }
    dend_37 { pt3dadd( 5.60886, 17.1877, 45.2254, 0.44 ) }
    dend_37 { pt3dadd( 6.46126, 18.0504, 45.8391, 0.52 ) }
    dend_37 { pt3dadd( 7.16421, 18.7167, 46.2746, 0.07 ) }
    dend_37 { pt3dadd( 7.72686, 19.2133, 46.5612, 0.07 ) }
    dend_37 { pt3dadd( 8.18531, 19.5988, 46.757, 0.07 ) }
    dend_37 { pt3dadd( 8.92431, 20.2048, 47.0462, 1.33 ) }
    dend_37 { pt3dadd( 10.2989, 21.2609, 47.4816, 0.07 ) }
    dend_37 { pt3dadd( 10.7744, 21.5793, 47.6056, 0.07 ) }
    dend_37 { pt3dadd( 11.7298, 22.1616, 47.8236, 0.44 ) }
    dend_37 { pt3dadd( 12.9542, 22.8433, 48.0897, 0.07 ) }
    dend_37 { pt3dadd( 13.7346, 23.2517, 48.2651, 0.07 ) }
    dend_37 { pt3dadd( 14.7786, 23.765, 48.5038, 0.07 ) }
    dend_37 { pt3dadd( 16.03, 24.4228, 48.7783, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.75892, -3.81466, 27.7505, 0.74 ) }
    dend_34 { pt3dadd( -1.90274, -3.88399, 28.3393, 0.74 ) }
    dend_34 { pt3dadd( -1.15771, -3.66356, 29.0541, 0.74 ) }
    dend_34 { pt3dadd( -0.388325, -3.20955, 29.9318, 0.44 ) }
    dend_34 { pt3dadd( 0.171438, -2.86048, 30.516, 0.44 ) }
    dend_34 { pt3dadd( 1.13025, -2.31877, 31.3703, 0.44 ) }
    dend_34 { pt3dadd( 1.8721, -1.89963, 32.0313, 0.44 ) }
    dend_34 { pt3dadd( 2.60326, -1.35113, 32.7912, 0.74 ) }
    dend_34 { pt3dadd( 3.11354, -0.857985, 33.3735, 0.74 ) }
    dend_34 { pt3dadd( 3.65069, -0.201328, 34.0446, 1.03 ) }
    dend_34 { pt3dadd( 4.24241, 0.503088, 34.6517, 1.18 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 92/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -23.5605, -13.7894, 0.242016, 0.96 ) }
    dend_29 { pt3dadd( -24.341, -14.8346, 0.682344, 0.96 ) }
    dend_29 { pt3dadd( -25.3505, -16.0934, 1.09895, 0.52 ) }
    dend_29 { pt3dadd( -25.8548, -16.7354, 1.23295, 0.52 ) }
    dend_29 { pt3dadd( -26.5768, -17.6937, 1.35863, 0.74 ) }
    dend_29 { pt3dadd( -27.2598, -18.66, 1.43232, 0.88 ) }
    dend_29 { pt3dadd( -27.977, -19.7418, 1.47217, 0.52 ) }
    dend_29 { pt3dadd( -28.4918, -20.5508, 1.44073, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( -29.0768, -21.556, 1.36504, 0.81 ) }
    dend_29 { pt3dadd( -29.4035, -22.1732, 1.34514, 1.11 ) }
    dend_29 { pt3dadd( -29.8728, -23.1277, 1.39351, 0.88 ) }
    dend_29 { pt3dadd( -30.4978, -24.4333, 1.63202, 0.44 ) }
    dend_29 { pt3dadd( -30.9915, -25.3794, 1.96006, 0.66 ) }
    dend_29 { pt3dadd( -31.5829, -26.3196, 2.46575, 1.03 ) }
    dend_29 { pt3dadd( -32.3174, -27.2638, 3.19558, 1.18 ) }
    dend_29 { pt3dadd( -33.1537, -28.136, 4.12303, 1.18 ) }
    dend_29 { pt3dadd( -33.7524, -28.6251, 4.85857, 1.18 ) }
    dend_29 { pt3dadd( -34.4462, -29.0791, 5.80323, 0.74 ) }
    dend_29 { pt3dadd( -35.0678, -29.4195, 6.69776, 0.59 ) }
    dend_29 { pt3dadd( -35.6835, -29.7225, 7.59954, 0.59 ) }
    dend_29 { pt3dadd( -36.2923, -30.0405, 8.46517, 0.81 ) }
    dend_29 { pt3dadd( -36.9112, -30.3669, 9.34926, 0.81 ) }
    dend_29 { pt3dadd( -37.3364, -30.6097, 9.96964, 1.55 ) }
    dend_29 { pt3dadd( -37.7985, -30.9125, 10.694, 1.99 ) }
    dend_29 { pt3dadd( -38.301, -31.3295, 11.4823, 1.92 ) }
    dend_29 { pt3dadd( -39.0859, -32.1017, 12.5741, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 18/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.5605, -13.7894, 0.242016, 0.96 ) }
    dend_28 { pt3dadd( -23.5581, -13.8595, 1.93887E-4, 0.96 ) }
    dend_28 { pt3dadd( -23.5619, -14.2727, -1.40334, 0.96 ) }
    dend_28 { pt3dadd( -23.6678, -14.8887, -3.58032, 0.74 ) }
    dend_28 { pt3dadd( -23.788, -15.1698, -4.6193, 0.74 ) }
    dend_28 { pt3dadd( -23.9441, -15.3733, -5.41103, 0.74 ) }
    dend_28 { pt3dadd( -24.1165, -15.5339, -6.01852, 0.74 ) }
    dend_28 { pt3dadd( -24.3623, -15.7035, -6.62954, 0.74 ) }
    dend_28 { pt3dadd( -24.7682, -15.925, -7.33461, 0.74 ) }
    dend_28 { pt3dadd( -25.4539, -16.2763, -8.24122, 0.74 ) }
    dend_28 { pt3dadd( -26.0396, -16.6165, -8.96323, 0.22 ) }
    dend_28 { pt3dadd( -26.6322, -17.036, -9.77834, 0.44 ) }
    dend_28 { pt3dadd( -27.0802, -17.4747, -10.5867, 0.44 ) }
    dend_28 { pt3dadd( -27.2579, -17.812, -11.1563, 0.44 ) }
    dend_28 { pt3dadd( -27.3069, -18.2911, -11.9249, 0.74 ) }
    dend_28 { pt3dadd( -27.2074, -18.8974, -12.8975, 0.52 ) }
    dend_28 { pt3dadd( -27.0312, -19.4793, -13.8988, 0.52 ) }
    dend_28 { pt3dadd( -26.8862, -19.9218, -14.7157, 0.52 ) }
    dend_28 { pt3dadd( -26.7276, -20.4835, -15.8379, 0.52 ) }
    dend_28 { pt3dadd( -26.6449, -20.8767, -16.7371, 0.59 ) }
    dend_28 { pt3dadd( -26.5931, -21.3673, -17.9555, 0.52 ) }
    dend_28 { pt3dadd( -26.6451, -21.8143, -19.1475, 0.52 ) }
    dend_28 { pt3dadd( -26.8191, -22.1587, -20.0089, 0.66 ) }
    dend_28 { pt3dadd( -27.1325, -22.5082, -20.8436, 0.66 ) }
    dend_28 { pt3dadd( -27.3514, -22.6842, -21.2445, 0.66 ) }
    dend_28 { pt3dadd( -27.5052, -22.7911, -21.4748, 0.66 ) }
    dend_28 { pt3dadd( -27.8654, -23.0437, -21.9778, 0.66 ) }
    dend_28 { pt3dadd( -28.4038, -23.4275, -22.708, 0.52 ) }
    dend_28 { pt3dadd( -28.9193, -23.7699, -23.427, 0.52 ) }
    dend_28 { pt3dadd( -29.5443, -24.1432, -24.3116, 0.52 ) }
    dend_28 { pt3dadd( -30.0319, -24.3971, -25.0494, 0.52 ) }
    dend_28 { pt3dadd( -30.4883, -24.5846, -25.8061, 0.52 ) }
    dend_28 { pt3dadd( -30.969, -24.7109, -26.703, 0.52 ) }
    dend_28 { pt3dadd( -31.3372, -24.7312, -27.49, 0.52 ) }
    dend_28 { pt3dadd( -31.5695, -24.7037, -28.0473, 0.52 ) }
    dend_28 { pt3dadd( -31.7336, -24.6575, -28.5114, 0.52 ) }
    dend_28 { pt3dadd( -31.841, -24.6258, -28.894, 0.52 ) }
    dend_28 { pt3dadd( -31.9319, -24.6248, -29.2852, 0.52 ) }
    dend_28 { pt3dadd( -32.0265, -24.704, -29.6875, 0.52 ) }
    dend_28 { pt3dadd( -32.1844, -24.9149, -30.3334, 0.52 ) }
    dend_28 { pt3dadd( -32.3337, -25.1098, -30.8785, 0.52 ) }
    dend_28 { pt3dadd( -32.5018, -25.3334, -31.4931, 0.52 ) }
    dend_28 { pt3dadd( -32.644, -25.5587, -31.9957, 0.74 ) }
    dend_28 { pt3dadd( -32.8941, -26.051, -32.956, 0.81 ) }
    dend_28 { pt3dadd( -33.1278, -26.6838, -34.0885, 0.81 ) }
    dend_28 { pt3dadd( -33.2274, -27.1327, -34.8594, 0.81 ) }
    dend_28 { pt3dadd( -33.2684, -27.4336, -35.3573, 0.81 ) }
    dend_28 { pt3dadd( -33.3388, -28.3363, -36.7977, 0.29 ) }
    dend_28 { pt3dadd( -33.3549, -28.8787, -37.6599, 0.44 ) }
    dend_28 { pt3dadd( -33.3623, -29.41, -38.5059, 0.52 ) }
    dend_28 { pt3dadd( -33.419, -30.0644, -39.5621, 0.52 ) }
    dend_28 { pt3dadd( -33.4966, -30.4671, -40.2374, 0.52 ) }
    dend_28 { pt3dadd( -33.5636, -30.6116, -40.5194, 0.52 ) }
    dend_28 { pt3dadd( -33.691, -30.721, -40.8179, 0.52 ) }
    dend_28 { pt3dadd( -33.9858, -30.8708, -41.281, 0.52 ) }
    dend_28 { pt3dadd( -34.4397, -31.0598, -41.8668, 0.52 ) }
    dend_28 { pt3dadd( -34.8773, -31.256, -42.4128, 0.44 ) }
    dend_28 { pt3dadd( -35.3539, -31.5314, -43.0816, 0.44 ) }
    dend_28 { pt3dadd( -35.695, -31.7864, -43.6521, 0.44 ) }
    dend_28 { pt3dadd( -36.0846, -32.1423, -44.4559, 0.44 ) }
    dend_28 { pt3dadd( -36.2907, -32.3761, -45.009, 0.44 ) }
    dend_28 { pt3dadd( -36.4746, -32.627, -45.6595, 0.44 ) }
    dend_28 { pt3dadd( -36.6676, -32.9167, -46.4491, 0.44 ) }
    dend_28 { pt3dadd( -36.8804, -33.2916, -47.4013, 0.44 ) }
    dend_28 { pt3dadd( -37.0982, -33.7145, -48.4118, 0.44 ) }
    dend_28 { pt3dadd( -37.3235, -34.1414, -49.3441, 0.44 ) }
    dend_28 { pt3dadd( -37.5118, -34.4861, -50.0686, 0.44 ) }
    dend_28 { pt3dadd( -37.7797, -34.9594, -50.9775, 0.44 ) }
    dend_28 { pt3dadd( -37.9964, -35.328, -51.667, 0.44 ) }
    dend_28 { pt3dadd( -38.1856, -35.6567, -52.2144, 0.44 ) }
    dend_28 { pt3dadd( -38.3341, -35.9272, -52.604, 0.44 ) }
    dend_28 { pt3dadd( -38.6545, -36.4852, -53.3099, 0.44 ) }
    dend_28 { pt3dadd( -39.1418, -37.3166, -54.2409, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -27.2878, -15.1858, 20.0216, 1.18 ) }
    dend_24 { pt3dadd( -27.6168, -14.1742, 20.3389, 1.18 ) }
    dend_24 { pt3dadd( -27.9768, -12.7429, 20.7947, 0.81 ) }
    dend_24 { pt3dadd( -28.1229, -11.8672, 21.0615, 0.66 ) }
    dend_24 { pt3dadd( -28.1839, -10.9521, 21.3166, 0.52 ) }
    dend_24 { pt3dadd( -28.1818, -10.0622, 21.542, 0.52 ) }
    dend_24 { pt3dadd( -28.16, -9.51859, 21.6808, 0.52 ) }
    dend_24 { pt3dadd( -28.0499, -8.40424, 21.9425, 0.59 ) }
    dend_24 { pt3dadd( -27.9433, -7.58962, 22.1057, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -27.8025, -6.51882, 22.3594, 0.52 ) }
    dend_24 { pt3dadd( -27.7489, -5.84977, 22.553, 0.52 ) }
    dend_24 { pt3dadd( -27.7533, -5.28383, 22.753, 0.52 ) }
    dend_24 { pt3dadd( -27.8851, -4.45979, 23.0886, 0.74 ) }
    dend_24 { pt3dadd( -28.1721, -3.49749, 23.5374, 0.96 ) }
    dend_24 { pt3dadd( -28.4008, -2.8235, 23.9028, 0.59 ) }
    dend_24 { pt3dadd( -28.7268, -1.79858, 24.5596, 0.52 ) }
    dend_24 { pt3dadd( -28.8314, -1.40236, 24.8528, 0.52 ) }
    dend_24 { pt3dadd( -28.9776, -0.635631, 25.5177, 0.66 ) }
    dend_24 { pt3dadd( -29.0657, 0.0344415, 26.1891, 0.88 ) }
    dend_24 { pt3dadd( -29.1396, 0.906814, 27.1111, 1.55 ) }
    dend_24 { pt3dadd( -29.1641, 1.84262, 28.131, 1.55 ) }
    dend_24 { pt3dadd( -29.1288, 2.57984, 28.9721, 1.77 ) }
    dend_24 { pt3dadd( -29.0408, 3.68882, 30.304, 1.33 ) }
    dend_24 { pt3dadd( -28.9348, 4.63616, 31.5512, 0.96 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 15/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -27.2878, -15.1858, 20.0216, 0.66 ) }
    dend_21 { pt3dadd( -28.0882, -15.3208, 20.2052, 0.66 ) }
    dend_21 { pt3dadd( -29.0207, -15.2339, 20.3848, 0.44 ) }
    dend_21 { pt3dadd( -29.735, -15.0261, 20.5202, 0.29 ) }
    dend_21 { pt3dadd( -30.4096, -14.8007, 20.6375, 0.29 ) }
    dend_21 { pt3dadd( -30.6193, -14.7303, 20.6927, 0.29 ) }
    dend_21 { pt3dadd( -31.1973, -14.5541, 20.8797, 0.74 ) }
    dend_21 { pt3dadd( -32.1779, -14.2311, 21.2286, 0.29 ) }
    dend_21 { pt3dadd( -33.2132, -13.885, 21.5392, 0.07 ) }
    dend_21 { pt3dadd( -33.9333, -13.6841, 21.7248, 0.81 ) }
    dend_21 { pt3dadd( -35.6216, -13.3528, 22.1358, 0.59 ) }
    dend_21 { pt3dadd( -36.8552, -13.2004, 22.4456, 0.74 ) }
    dend_21 { pt3dadd( -37.8724, -13.1417, 22.7358, 0.66 ) }
    dend_21 { pt3dadd( -39.2443, -13.125, 23.2328, 0.66 ) }
    dend_21 { pt3dadd( -40.1907, -13.1363, 23.6636, 0.52 ) }
    dend_21 { pt3dadd( -41.1361, -13.1648, 24.212, 0.74 ) }
    dend_21 { pt3dadd( -41.8853, -13.2141, 24.7699, 1.18 ) }
    dend_21 { pt3dadd( -42.7375, -13.3199, 25.5885, 1.03 ) }
    dend_21 { pt3dadd( -43.7174, -13.4926, 26.7266, 0.59 ) }
    dend_21 { pt3dadd( -44.3414, -13.6189, 27.5573, 0.59 ) }
    dend_21 { pt3dadd( -44.9685, -13.7344, 28.4304, 0.81 ) }
    dend_21 { pt3dadd( -45.5531, -13.8187, 29.2102, 0.81 ) }
    dend_21 { pt3dadd( -46.2309, -13.8871, 30.032, 0.59 ) }
    dend_21 { pt3dadd( -46.6374, -13.8848, 30.4346, 0.52 ) }
    dend_21 { pt3dadd( -47.144, -13.8105, 30.8007, 0.52 ) }
    dend_21 { pt3dadd( -47.6393, -13.6878, 31.0894, 0.52 ) }
    dend_21 { pt3dadd( -48.359, -13.4702, 31.4585, 0.81 ) }
    dend_21 { pt3dadd( -49.1952, -13.2022, 31.8719, 1.47 ) }
    dend_21 { pt3dadd( -50.3682, -12.8296, 32.4921, 0.59 ) }
    dend_21 { pt3dadd( -51.3053, -12.5922, 33.0184, 0.29 ) }
    dend_21 { pt3dadd( -51.8935, -12.4907, 33.3785, 0.29 ) }
    dend_21 { pt3dadd( -52.3705, -12.4384, 33.69, 0.29 ) }
    dend_21 { pt3dadd( -52.9553, -12.4038, 34.0999, 0.29 ) }
    dend_21 { pt3dadd( -53.5068, -12.3835, 34.4556, 0.29 ) }
    dend_21 { pt3dadd( -53.7496, -12.3817, 34.6054, 0.29 ) }
    dend_21 { pt3dadd( -54.3925, -12.3486, 34.9968, 0.29 ) }
    dend_21 { pt3dadd( -55.2592, -12.2228, 35.5051, 0.74 ) }
    dend_21 { pt3dadd( -56.368, -11.9908, 36.1592, 0.52 ) }
    dend_21 { pt3dadd( -57.0982, -11.8004, 36.5926, 0.52 ) }
    dend_21 { pt3dadd( -58.0618, -11.4928, 37.1942, 0.29 ) }
    dend_21 { pt3dadd( -58.8198, -11.2316, 37.694, 0.74 ) }
    dend_21 { pt3dadd( -59.4434, -11.0046, 38.1485, 1.4 ) }
    dend_21 { pt3dadd( -60.061, -10.7695, 38.6548, 1.7 ) }
    dend_21 { pt3dadd( -60.5969, -10.5413, 39.1433, 1.4 ) }
    dend_21 { pt3dadd( -61.481, -10.1441, 39.9967, 0.44 ) }
    dend_21 { pt3dadd( -62.3514, -9.75524, 40.8517, 0.37 ) }
    dend_21 { pt3dadd( -63.1396, -9.41872, 41.6426, 1.11 ) }
    dend_21 { pt3dadd( -63.9566, -9.09125, 42.4722, 1.11 ) }
    dend_21 { pt3dadd( -65.126, -8.62877, 43.6884, 0.29 ) }
    dend_21 { pt3dadd( -66.1306, -8.24356, 44.7875, 0.29 ) }
    dend_21 { pt3dadd( -66.5857, -8.08005, 45.2919, 0.29 ) }
    dend_21 { pt3dadd( -67.1245, -7.89194, 45.8879, 0.29 ) }
    dend_21 { pt3dadd( -67.3942, -7.80333, 46.1661, 0.66 ) }
    dend_21 { pt3dadd( -67.9095, -7.65548, 46.6599, 0.81 ) }
    dend_21 { pt3dadd( -68.4395, -7.53774, 47.136, 0.81 ) }
    dend_21 { pt3dadd( -69.2391, -7.39174, 47.8241, 0.29 ) }
    dend_21 { pt3dadd( -69.8663, -7.27165, 48.3057, 0.29 ) }
    dend_21 { pt3dadd( -70.1546, -7.20963, 48.5134, 0.29 ) }
    dend_21 { pt3dadd( -70.8855, -7.02426, 49.0429, 1.25 ) }
    dend_21 { pt3dadd( -71.8718, -6.72702, 49.7663, 2.21 ) }
    dend_21 { pt3dadd( -72.6898, -6.43304, 50.3884, 0.96 ) }
    dend_21 { pt3dadd( -73.6069, -6.04885, 51.1131, 0.29 ) }
    dend_21 { pt3dadd( -74.1271, -5.81071, 51.5262, 0.29 ) }
    dend_21 { pt3dadd( -74.6254, -5.58467, 51.903, 0.29 ) }
    dend_21 { pt3dadd( -75.5076, -5.20627, 52.5083, 0.29 ) }
    dend_21 { pt3dadd( -75.7493, -5.11236, 52.6551, 0.29 ) }
    dend_21 { pt3dadd( -76.5601, -4.82623, 53.1315, 0.29 ) }
    dend_21 { pt3dadd( -76.9408, -4.72144, 53.3415, 0.29 ) }
    dend_21 { pt3dadd( -77.9806, -4.50409, 53.8319, 1.92 ) }
    dend_21 { pt3dadd( -79.2535, -4.2882, 54.3159, 0.59 ) }
    dend_21 { pt3dadd( -79.5539, -4.24754, 54.4058, 0.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 86/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.30195, 21.3286, 13.3985, 0.88 ) }
    dend_17 { pt3dadd( -2.55848, 21.4427, 13.7781, 0.88 ) }
    dend_17 { pt3dadd( -4.01595, 21.4248, 14.1529, 0.81 ) }
    dend_17 { pt3dadd( -4.96583, 21.3075, 14.3939, 0.81 ) }
    dend_17 { pt3dadd( -5.76647, 21.1295, 14.6041, 0.81 ) }
    dend_17 { pt3dadd( -7.42327, 20.6185, 15.0715, 0.74 ) }
    dend_17 { pt3dadd( -8.41326, 20.2562, 15.3668, 0.74 ) }
    dend_17 { pt3dadd( -9.28213, 19.822, 15.6133, 0.74 ) }
    dend_17 { pt3dadd( -10.297, 19.2454, 15.8969, 0.74 ) }
    dend_17 { pt3dadd( -11.1856, 18.7431, 16.1583, 0.74 ) }
    dend_17 { pt3dadd( -12.0607, 18.2886, 16.4518, 0.74 ) }
    dend_17 { pt3dadd( -12.7688, 17.9832, 16.6213, 0.74 ) }
    dend_17 { pt3dadd( -13.5552, 17.7409, 16.6747, 0.74 ) }
    dend_17 { pt3dadd( -14.7031, 17.5136, 16.494, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( -15.6201, 17.4139, 16.1595, 0.96 ) }
    dend_17 { pt3dadd( -16.3674, 17.3533, 15.7723, 0.96 ) }
    dend_17 { pt3dadd( -18.9713, 17.0923, 14.126, 0.74 ) }
    dend_17 { pt3dadd( -19.7887, 16.9396, 13.5576, 0.74 ) }
    dend_17 { pt3dadd( -20.3096, 16.7616, 13.1813, 0.74 ) }
    dend_17 { pt3dadd( -20.832, 16.5012, 12.8133, 0.74 ) }
    dend_17 { pt3dadd( -21.4137, 16.1685, 12.4601, 0.74 ) }
    dend_17 { pt3dadd( -22.2716, 15.679, 12.1, 0.74 ) }
    dend_17 { pt3dadd( -23.2513, 15.1518, 11.9469, 0.74 ) }
    dend_17 { pt3dadd( -24.3836, 14.6275, 11.8977, 0.88 ) }
    dend_17 { pt3dadd( -25.2393, 14.3414, 11.9316, 0.88 ) }
    dend_17 { pt3dadd( -26.4793, 14.1913, 12.0942, 0.88 ) }
    dend_17 { pt3dadd( -27.5136, 14.3429, 12.3479, 0.88 ) }
    dend_17 { pt3dadd( -28.0908, 14.5369, 12.5328, 0.88 ) }
    dend_17 { pt3dadd( -28.8565, 14.873, 12.7883, 0.88 ) }
    dend_17 { pt3dadd( -30.1185, 15.481, 13.2393, 0.81 ) }
    dend_17 { pt3dadd( -31.5228, 16.1456, 13.7726, 0.74 ) }
    dend_17 { pt3dadd( -32.8795, 16.7075, 14.2948, 0.74 ) }
    dend_17 { pt3dadd( -34.0124, 17.0749, 14.6951, 0.59 ) }
    dend_17 { pt3dadd( -35.3472, 17.3044, 15.1125, 0.52 ) }
    dend_17 { pt3dadd( -36.1053, 17.3118, 15.298, 0.52 ) }
    dend_17 { pt3dadd( -36.8158, 17.2051, 15.4301, 0.52 ) }
    dend_17 { pt3dadd( -37.8798, 16.9262, 15.5473, 0.66 ) }
    dend_17 { pt3dadd( -38.4046, 16.7551, 15.5652, 0.81 ) }
    dend_17 { pt3dadd( -39.9002, 16.258, 15.5306, 0.37 ) }
    dend_17 { pt3dadd( -41.013, 15.9649, 15.4852, 0.37 ) }
    dend_17 { pt3dadd( -41.549, 15.9239, 15.4524, 0.37 ) }
    dend_17 { pt3dadd( -42.1209, 16.0024, 15.4221, 0.59 ) }
    dend_17 { pt3dadd( -42.5479, 16.1327, 15.4125, 1.11 ) }
    dend_17 { pt3dadd( -42.95, 16.2888, 15.4483, 1.47 ) }
    dend_17 { pt3dadd( -44.013, 16.7829, 15.6674, 0.66 ) }
    dend_17 { pt3dadd( -45.0325, 17.2905, 16.0316, 0.29 ) }
    dend_17 { pt3dadd( -45.3977, 17.4756, 16.1955, 0.44 ) }
    dend_17 { pt3dadd( -46.1835, 17.8801, 16.5967, 0.52 ) }
    dend_17 { pt3dadd( -47.1537, 18.3796, 17.1344, 0.37 ) }
    dend_17 { pt3dadd( -47.5295, 18.5747, 17.3551, 0.29 ) }
    dend_17 { pt3dadd( -48.2482, 18.9611, 17.7675, 0.29 ) }
    dend_17 { pt3dadd( -48.6177, 19.167, 18.0041, 0.29 ) }
    dend_17 { pt3dadd( -49.2761, 19.5952, 18.4488, 0.52 ) }
    dend_17 { pt3dadd( -49.6246, 19.8234, 18.6696, 0.52 ) }
    dend_17 { pt3dadd( -49.9864, 19.9971, 18.8579, 0.52 ) }
    dend_17 { pt3dadd( -50.6548, 20.2102, 19.1037, 0.74 ) }
    dend_17 { pt3dadd( -51.2432, 20.3266, 19.2521, 1.33 ) }
    dend_17 { pt3dadd( -52.0751, 20.4354, 19.3832, 1.11 ) }
    dend_17 { pt3dadd( -53.4334, 20.5573, 19.491, 0.66 ) }
    dend_17 { pt3dadd( -54.9985, 20.6749, 19.5168, 0.44 ) }
    dend_17 { pt3dadd( -56.6405, 20.7806, 19.4567, 0.44 ) }
    dend_17 { pt3dadd( -57.0835, 20.8035, 19.4151, 0.44 ) }
    dend_17 { pt3dadd( -58.0992, 20.8435, 19.2437, 0.29 ) }
    dend_17 { pt3dadd( -58.814, 20.8548, 19.0629, 0.66 ) }
    dend_17 { pt3dadd( -59.2751, 20.8426, 18.9038, 1.25 ) }
    dend_17 { pt3dadd( -59.8255, 20.808, 18.6716, 1.25 ) }
    dend_17 { pt3dadd( -60.6202, 20.682, 18.3602, 0.59 ) }
    dend_17 { pt3dadd( -61.4529, 20.4726, 17.971, 0.44 ) }
    dend_17 { pt3dadd( -61.9414, 20.3056, 17.7141, 0.44 ) }
    dend_17 { pt3dadd( -62.6506, 20.0495, 17.3104, 0.59 ) }
    dend_17 { pt3dadd( -63.0765, 19.91, 17.0729, 0.59 ) }
    dend_17 { pt3dadd( -63.9355, 19.6914, 16.6561, 0.29 ) }
    dend_17 { pt3dadd( -64.6792, 19.5977, 16.4161, 0.29 ) }
    dend_17 { pt3dadd( -65.0335, 19.5866, 16.3502, 0.29 ) }
    dend_17 { pt3dadd( -65.613, 19.596, 16.286, 0.59 ) }
    dend_17 { pt3dadd( -66.3469, 19.6231, 16.229, 1.18 ) }
    dend_17 { pt3dadd( -67.174, 19.6607, 16.1518, 0.66 ) }
    dend_17 { pt3dadd( -68.5685, 19.7378, 16.0488, 0.29 ) }
    dend_17 { pt3dadd( -69.4803, 19.7642, 15.9981, 0.74 ) }
    dend_17 { pt3dadd( -69.9585, 19.7578, 15.9804, 1.33 ) }
    dend_17 { pt3dadd( -70.8128, 19.7042, 15.9597, 1.77 ) }
    dend_17 { pt3dadd( -72.6654, 19.5103, 15.9355, 0.44 ) }
    dend_17 { pt3dadd( -74.0717, 19.3027, 15.9605, 0.59 ) }
    dend_17 { pt3dadd( -74.7848, 19.1646, 15.9981, 0.59 ) }
    dend_17 { pt3dadd( -75.8008, 18.9462, 16.0, 0.22 ) }
    dend_17 { pt3dadd( -76.3649, 18.8156, 15.9783, 0.22 ) }
    dend_17 { pt3dadd( -76.8, 18.7153, 15.9452, 0.22 ) }
    dend_17 { pt3dadd( -77.6004, 18.5751, 15.8144, 0.44 ) }
    dend_17 { pt3dadd( -78.2645, 18.5319, 15.6578, 0.81 ) }
    dend_17 { pt3dadd( -80.4107, 18.6983, 15.1069, 0.29 ) }
    dend_17 { pt3dadd( -81.0455, 18.8553, 14.9407, 0.96 ) }
    dend_17 { pt3dadd( -81.7204, 19.1027, 14.7647, 1.33 ) }
    dend_17 { pt3dadd( -83.2093, 19.8035, 14.4838, 0.37 ) }
    dend_17 { pt3dadd( -83.949, 20.233, 14.4063, 0.29 ) }
    dend_17 { pt3dadd( -84.5597, 20.65, 14.4351, 0.29 ) }
    dend_17 { pt3dadd( -85.4994, 21.3356, 14.6585, 0.07 ) }
    dend_17 { pt3dadd( -85.8907, 21.6011, 14.7584, 0.07 ) }
    dend_17 { pt3dadd( -87.2604, 22.3555, 15.1055, 0.22 ) }
    dend_17 { pt3dadd( -87.5971, 22.4851, 15.1877, 0.81 ) }
    dend_17 { pt3dadd( -88.2995, 22.6537, 15.3163, 1.33 ) }
    dend_17 { pt3dadd( -89.6604, 22.8487, 15.552, 0.29 ) }
    dend_17 { pt3dadd( -91.0004, 22.9456, 15.7589, 0.29 ) }
    dend_17 { pt3dadd( -91.9645, 22.9787, 15.8835, 0.29 ) }
    dend_17 { pt3dadd( -93.0934, 22.9868, 15.9861, 0.29 ) }
    dend_17 { pt3dadd( -94.1245, 22.9766, 16.0846, 0.81 ) }
    dend_17 { pt3dadd( -95.4289, 22.9375, 16.2193, 0.07 ) }
    dend_17 { pt3dadd( -96.4603, 22.8833, 16.3359, 1.4 ) }
    dend_17 { pt3dadd( -98.9494, 22.7166, 16.6348, 0.07 ) }
    dend_17 { pt3dadd( -99.5745, 22.6874, 16.7104, 0.22 ) }
    dend_17 { pt3dadd( -100.395, 22.6653, 16.8014, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.30195, 21.3286, 13.3985, 1.25 ) }
    dend_10 { pt3dadd( -1.1143, 22.6487, 12.4373, 1.25 ) }
    dend_10 { pt3dadd( -1.00966, 23.3849, 11.9013, 1.25 ) }
    dend_10 { pt3dadd( -0.939683, 23.8772, 11.5429, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.91664, 26.7254, 27.4747, 0.59 ) }
    dend_8 { pt3dadd( -10.6301, 26.8648, 27.694, 0.59 ) }
    dend_8 { pt3dadd( -11.6765, 27.0165, 28.0665, 0.59 ) }
    dend_8 { pt3dadd( -13.2103, 27.2029, 28.5869, 0.81 ) }
    dend_8 { pt3dadd( -13.9604, 27.2705, 28.8282, 0.81 ) }
    dend_8 { pt3dadd( -15.4608, 27.3578, 29.2175, 0.66 ) }
    dend_8 { pt3dadd( -16.884, 27.412, 29.5276, 0.66 ) }
    dend_8 { pt3dadd( -18.7475, 27.4381, 29.9013, 0.66 ) }
    dend_8 { pt3dadd( -20.4326, 27.441, 30.1955, 0.44 ) }
    dend_8 { pt3dadd( -21.2589, 27.439, 30.3303, 0.66 ) }
    dend_8 { pt3dadd( -22.8801, 27.4492, 30.5395, 0.66 ) }
    dend_8 { pt3dadd( -23.5662, 27.4637, 30.6118, 0.66 ) }
    dend_8 { pt3dadd( -24.4794, 27.5637, 30.6912, 0.66 ) }
    dend_8 { pt3dadd( -24.9274, 27.6708, 30.7466, 0.66 ) }
    dend_8 { pt3dadd( -25.5421, 27.8666, 30.8879, 0.66 ) }
    dend_8 { pt3dadd( -26.3157, 28.0835, 31.097, 0.81 ) }
    dend_8 { pt3dadd( -27.0515, 28.1849, 31.2972, 0.81 ) }
    dend_8 { pt3dadd( -28.2287, 28.1644, 31.4805, 0.29 ) }
    dend_8 { pt3dadd( -29.0631, 28.0227, 31.5323, 0.52 ) }
    dend_8 { pt3dadd( -29.7183, 27.8244, 31.5464, 0.96 ) }
    dend_8 { pt3dadd( -31.0649, 27.2196, 31.5185, 0.52 ) }
    dend_8 { pt3dadd( -32.4389, 26.4371, 31.4914, 0.37 ) }
    dend_8 { pt3dadd( -33.2919, 25.8811, 31.4737, 0.37 ) }
    dend_8 { pt3dadd( -33.8641, 25.4636, 31.4732, 0.37 ) }
    dend_8 { pt3dadd( -34.2947, 25.1586, 31.4831, 0.37 ) }
    dend_8 { pt3dadd( -35.13, 24.6303, 31.5365, 0.52 ) }
    dend_8 { pt3dadd( -36.0417, 24.222, 31.537, 1.03 ) }
    dend_8 { pt3dadd( -36.7601, 24.0617, 31.4886, 1.55 ) }
    dend_8 { pt3dadd( -36.9779, 24.044, 31.4632, 1.55 ) }
    dend_8 { pt3dadd( -38.3653, 24.0433, 31.2109, 0.44 ) }
    dend_8 { pt3dadd( -39.069, 24.0702, 31.0495, 0.44 ) }
    dend_8 { pt3dadd( -41.0608, 24.1942, 30.5388, 0.44 ) }
    dend_8 { pt3dadd( -41.594, 24.2159, 30.4653, 0.44 ) }
    dend_8 { pt3dadd( -42.3278, 24.2172, 30.4772, 0.66 ) }
    dend_8 { pt3dadd( -42.9796, 24.1919, 30.5905, 1.11 ) }
    dend_8 { pt3dadd( -43.986, 24.1532, 30.8782, 1.4 ) }
    dend_8 { pt3dadd( -44.9172, 24.1461, 31.2703, 0.81 ) }
    dend_8 { pt3dadd( -47.5373, 24.1766, 32.6389, 0.29 ) }
    dend_8 { pt3dadd( -48.1243, 24.2053, 32.95, 0.81 ) }
    dend_8 { pt3dadd( -48.8043, 24.2768, 33.3063, 1.55 ) }
    dend_8 { pt3dadd( -50.0393, 24.4759, 33.9133, 0.22 ) }
    dend_8 { pt3dadd( -51.283, 24.748, 34.4487, 0.22 ) }
    dend_8 { pt3dadd( -51.8457, 24.8867, 34.6118, 0.22 ) }
    dend_8 { pt3dadd( -52.5688, 25.0737, 34.6979, 0.59 ) }
    dend_8 { pt3dadd( -53.1261, 25.2202, 34.7586, 0.59 ) }
    dend_8 { pt3dadd( -53.6863, 25.3637, 34.8052, 0.59 ) }
    dend_8 { pt3dadd( -55.0699, 25.6964, 34.8801, 0.07 ) }
    dend_8 { pt3dadd( -56.1278, 25.9659, 34.8666, 0.07 ) }
    dend_8 { pt3dadd( -57.0398, 26.2508, 34.8443, 0.22 ) }
    dend_8 { pt3dadd( -57.6224, 26.4749, 34.7954, 0.22 ) }
    dend_8 { pt3dadd( -58.0467, 26.6626, 34.7252, 0.44 ) }
    dend_8 { pt3dadd( -58.5032, 26.8944, 34.5961, 0.74 ) }
    dend_8 { pt3dadd( -58.7774, 27.0501, 34.4907, 0.74 ) }
    dend_8 { pt3dadd( -59.3325, 27.3722, 34.3174, 0.29 ) }
    dend_8 { pt3dadd( -60.2738, 27.8952, 34.0923, 0.15 ) }
    dend_8 { pt3dadd( -60.9709, 28.2366, 33.9819, 0.59 ) }
    dend_8 { pt3dadd( -62.2425, 28.7166, 33.8524, 0.07 ) }
    dend_8 { pt3dadd( -63.2387, 29.0023, 33.7881, 0.37 ) }
    dend_8 { pt3dadd( -64.5779, 29.3075, 33.7485, 0.15 ) }
    dend_8 { pt3dadd( -65.0406, 29.3856, 33.7539, 0.22 ) }
    dend_8 { pt3dadd( -65.8727, 29.5015, 33.8024, 0.74 ) }
    dend_8 { pt3dadd( -67.3997, 29.7046, 33.901, 0.22 ) }
    dend_8 { pt3dadd( -68.1126, 29.8144, 33.943, 0.22 ) }
    dend_8 { pt3dadd( -68.4384, 29.88, 33.9497, 0.52 ) }
    dend_8 { pt3dadd( -69.304, 30.1006, 33.9748, 0.88 ) }
    dend_8 { pt3dadd( -70.5243, 30.4924, 34.2079, 0.22 ) }
    dend_8 { pt3dadd( -71.2918, 30.8263, 34.6482, 0.37 ) }
    dend_8 { pt3dadd( -72.1328, 31.2659, 35.3132, 0.07 ) }
    dend_8 { pt3dadd( -72.6554, 31.5642, 35.8375, 0.22 ) }
    dend_8 { pt3dadd( -73.3459, 31.9924, 36.7501, 0.22 ) }
    dend_8 { pt3dadd( -74.3879, 32.7821, 38.9154, 0.22 ) }
    dend_8 { pt3dadd( -74.9149, 33.2994, 40.8869, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 72/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.91664, 26.7254, 27.4747, 0.74 ) }
    dend_7 { pt3dadd( -10.6535, 26.5539, 28.167, 0.74 ) }
    dend_7 { pt3dadd( -11.7004, 26.3754, 29.1668, 0.74 ) }
    dend_7 { pt3dadd( -12.4422, 26.2886, 29.8736, 0.74 ) }
    dend_7 { pt3dadd( -13.2864, 26.2057, 30.6996, 0.74 ) }
    dend_7 { pt3dadd( -13.9513, 26.1256, 31.39, 0.74 ) }
    dend_7 { pt3dadd( -14.4334, 26.0629, 31.9139, 0.74 ) }
    dend_7 { pt3dadd( -15.0285, 25.9942, 32.5901, 0.74 ) }
    dend_7 { pt3dadd( -15.4231, 25.9557, 33.1041, 0.96 ) }
    dend_7 { pt3dadd( -15.7856, 25.9292, 33.7541, 0.96 ) }
    dend_7 { pt3dadd( -16.1712, 25.9171, 34.7227, 0.96 ) }
    dend_7 { pt3dadd( -16.3769, 25.9352, 35.3794, 0.96 ) }
    dend_7 { pt3dadd( -16.6482, 26.0109, 36.3001, 0.96 ) }
    dend_7 { pt3dadd( -16.8854, 26.1185, 37.1251, 0.81 ) }
    dend_7 { pt3dadd( -17.2807, 26.3868, 38.5515, 0.81 ) }
    dend_7 { pt3dadd( -17.5131, 26.6275, 39.4389, 0.81 ) }
    dend_7 { pt3dadd( -17.7799, 27.0028, 40.5338, 0.81 ) }
    dend_7 { pt3dadd( -18.0479, 27.4266, 41.649, 0.81 ) }
    dend_7 { pt3dadd( -18.315, 27.8219, 42.6328, 0.81 ) }
    dend_7 { pt3dadd( -18.66, 28.2698, 43.7596, 0.81 ) }
    dend_7 { pt3dadd( -18.9561, 28.5852, 44.6757, 0.66 ) }
    dend_7 { pt3dadd( -19.1038, 28.7058, 45.1429, 0.66 ) }
    dend_7 { pt3dadd( -19.4303, 28.8477, 46.2167, 0.66 ) }
    dend_7 { pt3dadd( -19.9163, 28.843, 47.8717, 0.66 ) }
    dend_7 { pt3dadd( -20.2369, 28.6766, 48.9547, 0.52 ) }
    dend_7 { pt3dadd( -20.7187, 28.1374, 50.5381, 0.52 ) }
    dend_7 { pt3dadd( -20.9417, 27.7645, 51.2532, 0.52 ) }
    dend_7 { pt3dadd( -21.234, 27.0669, 52.2797, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( -21.3895, 26.3733, 53.0391, 0.37 ) }
    dend_7 { pt3dadd( -21.4466, 25.6662, 53.654, 0.59 ) }
    dend_7 { pt3dadd( -21.4447, 24.9553, 54.2094, 0.81 ) }
    dend_7 { pt3dadd( -21.3919, 24.0946, 54.8715, 0.81 ) }
    dend_7 { pt3dadd( -21.3014, 23.3481, 55.512, 0.81 ) }
    dend_7 { pt3dadd( -21.1116, 22.3881, 56.3517, 0.37 ) }
    dend_7 { pt3dadd( -20.9403, 21.6593, 56.9967, 0.52 ) }
    dend_7 { pt3dadd( -20.777, 20.9424, 57.6168, 1.47 ) }
    dend_7 { pt3dadd( -20.5762, 19.9462, 58.4307, 1.47 ) }
    dend_7 { pt3dadd( -20.4942, 19.1722, 58.9998, 1.47 ) }
    dend_7 { pt3dadd( -20.4467, 17.4605, 60.1774, 0.29 ) }
    dend_7 { pt3dadd( -20.4757, 16.6944, 60.6812, 0.29 ) }
    dend_7 { pt3dadd( -20.5588, 15.7833, 61.2305, 0.96 ) }
    dend_7 { pt3dadd( -20.684, 14.8414, 61.7269, 1.18 ) }
    dend_7 { pt3dadd( -21.0065, 13.0366, 62.5644, 0.22 ) }
    dend_7 { pt3dadd( -21.2068, 12.1788, 62.9236, 0.22 ) }
    dend_7 { pt3dadd( -21.3446, 11.6807, 63.1129, 0.88 ) }
    dend_7 { pt3dadd( -21.5669, 10.9113, 63.3609, 1.47 ) }
    dend_7 { pt3dadd( -21.9104, 9.82395, 63.703, 0.37 ) }
    dend_7 { pt3dadd( -22.1268, 9.21206, 63.9366, 0.37 ) }
    dend_7 { pt3dadd( -22.5507, 8.19285, 64.4284, 0.59 ) }
    dend_7 { pt3dadd( -23.0667, 7.1965, 65.058, 0.07 ) }
    dend_7 { pt3dadd( -23.406, 6.6477, 65.516, 0.29 ) }
    dend_7 { pt3dadd( -23.9387, 5.99309, 66.3151, 0.59 ) }
    dend_7 { pt3dadd( -24.8682, 5.19968, 67.8512, 0.59 ) }
    dend_7 { pt3dadd( -25.2687, 4.96178, 68.541, 1.33 ) }
    dend_7 { pt3dadd( -25.742, 4.77132, 69.3033, 1.33 ) }
    dend_7 { pt3dadd( -25.9996, 4.69463, 69.6837, 1.33 ) }
    dend_7 { pt3dadd( -26.9157, 4.43381, 71.0098, 0.44 ) }
    dend_7 { pt3dadd( -27.6832, 4.19924, 72.1123, 0.44 ) }
    dend_7 { pt3dadd( -28.2036, 3.97973, 72.8972, 0.44 ) }
    dend_7 { pt3dadd( -28.8451, 3.58391, 74.0825, 1.84 ) }
    dend_7 { pt3dadd( -29.7282, 2.66517, 76.3829, 0.52 ) }
    dend_7 { pt3dadd( -30.0656, 1.9808, 77.8052, 0.52 ) }
    dend_7 { pt3dadd( -30.1131, 1.60293, 78.468, 1.77 ) }
    dend_7 { pt3dadd( -29.9669, 0.656663, 79.9457, 0.52 ) }
    dend_7 { pt3dadd( -29.6223, -0.24322, 81.3354, 1.92 ) }
    dend_7 { pt3dadd( -28.906, -1.43608, 83.2511, 1.03 ) }
    dend_7 { pt3dadd( -28.2618, -2.24372, 84.5624, 0.29 ) }
    dend_7 { pt3dadd( -27.6815, -2.86176, 85.6087, 1.4 ) }
    dend_7 { pt3dadd( -26.7359, -3.79806, 87.2499, 0.07 ) }
    dend_7 { pt3dadd( -25.8556, -4.58402, 88.7145, 0.07 ) }
    dend_7 { pt3dadd( -25.1452, -5.16372, 89.8826, 0.07 ) }
    dend_7 { pt3dadd( -24.4881, -5.58146, 90.8606, 0.07 ) }
    dend_7 { pt3dadd( -24.0648, -5.77328, 91.4963, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 40.6763, 2.60479, 54.9978, 0.37 ) }
    dend_4 { pt3dadd( 40.7976, 3.02031, 55.284, 0.37 ) }
    dend_4 { pt3dadd( 40.9959, 3.69762, 55.8197, 0.07 ) }
    dend_4 { pt3dadd( 41.1778, 4.25574, 56.3158, 0.29 ) }
    dend_4 { pt3dadd( 41.3544, 4.76589, 56.774, 1.47 ) }
    dend_4 { pt3dadd( 41.3914, 4.87907, 56.8828, 1.47 ) }
    dend_4 { pt3dadd( 41.6699, 5.81329, 57.8182, 0.22 ) }
    dend_4 { pt3dadd( 41.8282, 6.36208, 58.4452, 0.22 ) }
    dend_4 { pt3dadd( 41.9807, 6.87346, 59.101, 0.07 ) }
    dend_4 { pt3dadd( 42.0862, 7.17134, 59.5123, 0.44 ) }
    dend_4 { pt3dadd( 42.3606, 7.9047, 60.6241, 0.07 ) }
    dend_4 { pt3dadd( 42.4816, 8.18967, 61.1111, 0.07 ) }
    dend_4 { pt3dadd( 42.6814, 8.59253, 61.9031, 0.07 ) }
    dend_4 { pt3dadd( 42.7976, 8.78193, 62.3094, 0.15 ) }
    dend_4 { pt3dadd( 43.0159, 9.08231, 62.9781, 0.44 ) }
    dend_4 { pt3dadd( 43.4782, 9.53512, 64.1037, 0.22 ) }
    dend_4 { pt3dadd( 44.0326, 9.90325, 65.1955, 0.22 ) }
    dend_4 { pt3dadd( 44.3052, 10.0379, 65.6859, 0.81 ) }
    dend_4 { pt3dadd( 44.6499, 10.1633, 66.2575, 1.55 ) }
    dend_4 { pt3dadd( 44.8882, 10.2321, 66.6113, 1.62 ) }
    dend_4 { pt3dadd( 45.6229, 10.3868, 67.629, 0.22 ) }
    dend_4 { pt3dadd( 46.2537, 10.4377, 68.3781, 0.22 ) }
    dend_4 { pt3dadd( 46.5416, 10.4429, 68.6899, 0.22 ) }
    dend_4 { pt3dadd( 47.0349, 10.424, 69.2379, 0.66 ) }
    dend_4 { pt3dadd( 47.4636, 10.3743, 69.7847, 1.03 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 40.6763, 2.60479, 54.9978, 0.74 ) }
    dend_3 { pt3dadd( 40.8155, 2.6407, 54.9795, 0.74 ) }
    dend_3 { pt3dadd( 41.0538, 2.74336, 54.9305, 0.74 ) }
    dend_3 { pt3dadd( 41.7129, 3.13046, 54.7804, 0.22 ) }
    dend_3 { pt3dadd( 42.0732, 3.36973, 54.7059, 0.22 ) }
    dend_3 { pt3dadd( 43.0364, 4.00859, 54.5286, 0.59 ) }
    dend_3 { pt3dadd( 44.2155, 4.74663, 54.3417, 0.44 ) }
    dend_3 { pt3dadd( 44.6786, 5.01457, 54.281, 0.44 ) }
    dend_3 { pt3dadd( 45.307, 5.32889, 54.2309, 0.44 ) }
    dend_3 { pt3dadd( 46.0024, 5.62157, 54.2216, 0.66 ) }
    dend_3 { pt3dadd( 46.4514, 5.76066, 54.2131, 0.88 ) }
    dend_3 { pt3dadd( 47.1846, 5.90191, 54.2182, 0.44 ) }
    dend_3 { pt3dadd( 48.2352, 6.04072, 54.2575, 0.22 ) }
    dend_3 { pt3dadd( 49.1731, 6.12835, 54.264, 0.29 ) }
    dend_3 { pt3dadd( 49.6938, 6.15373, 54.2652, 0.29 ) }
    dend_3 { pt3dadd( 51.02, 6.19904, 54.2597, 0.29 ) }
    dend_3 { pt3dadd( 51.759, 6.23462, 54.2594, 0.74 ) }
    dend_3 { pt3dadd( 52.3492, 6.26791, 54.2759, 0.96 ) }
    dend_3 { pt3dadd( 53.2595, 6.34644, 54.3439, 0.37 ) }
    dend_3 { pt3dadd( 54.196, 6.45243, 54.4649, 0.15 ) }
    dend_3 { pt3dadd( 55.0954, 6.55853, 54.6414, 0.29 ) }
    dend_3 { pt3dadd( 56.5228, 6.71644, 55.0792, 0.07 ) }
    dend_3 { pt3dadd( 57.2467, 6.80085, 55.3541, 0.37 ) }
    dend_3 { pt3dadd( 57.9806, 6.87582, 55.679, 0.37 ) }
    dend_3 { pt3dadd( 58.4462, 6.91149, 55.9168, 0.22 ) }
    dend_3 { pt3dadd( 58.9907, 6.94003, 56.235, 1.18 ) }
    dend_3 { pt3dadd( 59.6452, 6.93896, 56.642, 1.4 ) }
    dend_3 { pt3dadd( 60.5604, 6.90383, 57.213, 0.44 ) }
    dend_3 { pt3dadd( 61.8117, 6.82482, 57.988, 0.22 ) }
    dend_3 { pt3dadd( 62.8421, 6.72849, 58.6335, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 63.4926, 6.66981, 59.0976, 0.22 ) }
    dend_3 { pt3dadd( 64.0178, 6.63771, 59.5997, 0.37 ) }
    dend_3 { pt3dadd( 64.7006, 6.62639, 60.4893, 0.07 ) }
    dend_3 { pt3dadd( 65.2978, 6.65187, 61.5308, 0.07 ) }
    dend_3 { pt3dadd( 65.62, 6.70268, 62.2556, 0.29 ) }
    dend_3 { pt3dadd( 66.1469, 6.86025, 63.7122, 0.74 ) }
    dend_3 { pt3dadd( 66.8108, 7.19524, 65.9813, 1.33 ) }
    dend_3 { pt3dadd( 67.1624, 7.47618, 67.5864, 0.37 ) }
    dend_3 { pt3dadd( 67.343, 7.69477, 68.8245, 0.37 ) }
    dend_3 { pt3dadd( 67.4858, 7.94586, 70.3042, 0.37 ) }
    dend_3 { pt3dadd( 67.5955, 8.15996, 71.6933, 0.37 ) }
    dend_3 { pt3dadd( 67.6678, 8.29225, 72.6658, 0.37 ) }
    dend_3 { pt3dadd( 67.709, 8.40198, 73.3862, 0.37 ) }
    dend_3 { pt3dadd( 67.7313, 8.5623, 74.4498, 0.37 ) }
    dend_3 { pt3dadd( 67.7252, 8.73921, 75.797, 0.37 ) }
    dend_3 { pt3dadd( 67.7187, 8.83441, 77.0306, 0.37 ) }
    dend_3 { pt3dadd( 67.7783, 8.859, 78.2623, 0.37 ) }
    dend_3 { pt3dadd( 67.9359, 8.84207, 79.492, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 18/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -84.3789, 54.7153, 13.5449, 0.29 ) }
    dend_42 { pt3dadd( -84.3244, 56.064, 13.6188, 0.29 ) }
    dend_42 { pt3dadd( -84.2916, 56.8748, 13.6633, 0.29 ) }
    dend_42 { pt3dadd( -84.2388, 58.1796, 13.7349, 0.22 ) }
    dend_42 { pt3dadd( -84.2089, 58.9185, 13.7754, 0.22 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 23/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -84.3789, 54.7153, 13.5449, 0.29 ) }
    dend_41 { pt3dadd( -85.1049, 54.5795, 12.3962, 0.29 ) }
    dend_41 { pt3dadd( -85.4501, 54.5832, 11.8364, 0.29 ) }
    dend_41 { pt3dadd( -85.9741, 54.5999, 10.9994, 0.29 ) }
    dend_41 { pt3dadd( -86.2781, 54.6096, 10.5139, 0.29 ) }
    dend_41 { pt3dadd( -86.5758, 54.6191, 10.0383, 0.29 ) }
    dend_41 { pt3dadd( -87.1195, 54.6365, 9.16997, 0.29 ) }
    dend_41 { pt3dadd( -87.709, 54.7397, 8.13442, 0.37 ) }
    dend_41 { pt3dadd( -87.9396, 54.8222, 7.71485, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 32/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 4.24241, 0.503088, 34.6517, 0.52 ) }
    dend_36 { pt3dadd( 4.92855, -0.00281301, 36.8817, 0.52 ) }
    dend_36 { pt3dadd( 5.08772, -0.187244, 37.6842, 0.37 ) }
    dend_36 { pt3dadd( 5.34695, -0.526027, 39.011, 0.37 ) }
    dend_36 { pt3dadd( 5.54467, -0.77499, 39.901, 0.37 ) }
    dend_36 { pt3dadd( 5.9177, -1.20296, 41.3486, 0.37 ) }
    dend_36 { pt3dadd( 6.22929, -1.53372, 42.4086, 0.52 ) }
    dend_36 { pt3dadd( 6.62074, -1.94599, 43.747, 0.52 ) }
    dend_36 { pt3dadd( 6.88858, -2.21946, 44.5633, 0.74 ) }
    dend_36 { pt3dadd( 7.24145, -2.52937, 45.3806, 0.96 ) }
    dend_36 { pt3dadd( 7.59461, -2.77639, 46.0338, 0.96 ) }
    dend_36 { pt3dadd( 8.10656, -3.05908, 46.8167, 0.96 ) }
    dend_36 { pt3dadd( 8.52053, -3.23399, 47.4017, 0.96 ) }
    dend_36 { pt3dadd( 8.91305, -3.34377, 47.9328, 0.96 ) }
    dend_36 { pt3dadd( 9.52371, -3.41213, 48.9168, 0.52 ) }
    dend_36 { pt3dadd( 10.2121, -3.39396, 50.2627, 0.52 ) }
    dend_36 { pt3dadd( 10.7727, -3.31991, 51.6043, 0.52 ) }
    dend_36 { pt3dadd( 11.1231, -3.256, 52.6011, 1.03 ) }
    dend_36 { pt3dadd( 11.642, -3.15373, 54.2257, 1.77 ) }
    dend_36 { pt3dadd( 12.568, -2.96835, 57.3012, 0.37 ) }
    dend_36 { pt3dadd( 12.9618, -2.89084, 58.7081, 0.37 ) }
    dend_36 { pt3dadd( 13.2175, -2.83405, 59.6041, 0.37 ) }
    dend_36 { pt3dadd( 13.4302, -2.77942, 60.3688, 0.37 ) }
    dend_36 { pt3dadd( 13.8008, -2.6674, 61.8754, 0.37 ) }
    dend_36 { pt3dadd( 13.9878, -2.58644, 62.8409, 0.74 ) }
    dend_36 { pt3dadd( 14.2087, -2.46253, 64.0621, 0.96 ) }
    dend_36 { pt3dadd( 14.4997, -2.25493, 65.517, 0.96 ) }
    dend_36 { pt3dadd( 14.6555, -2.11877, 66.2315, 1.4 ) }
    dend_36 { pt3dadd( 14.9579, -1.81951, 67.5643, 1.4 ) }
    dend_36 { pt3dadd( 15.2633, -1.47967, 69.0264, 1.4 ) }
    dend_36 { pt3dadd( 15.7408, -1.12493, 70.7119, 1.4 ) }
    dend_36 { pt3dadd( 16.0185, -0.991677, 71.4449, 0.74 ) }
    dend_36 { pt3dadd( 16.6505, -0.784141, 72.7581, 1.11 ) }
    dend_36 { pt3dadd( 17.1581, -0.633698, 73.6712, 1.55 ) }
    dend_36 { pt3dadd( 17.6711, -0.477699, 74.4824, 1.55 ) }
    dend_36 { pt3dadd( 18.9979, -0.059084, 76.4616, 0.52 ) }
    dend_36 { pt3dadd( 19.5404, 0.119957, 77.2753, 0.52 ) }
    dend_36 { pt3dadd( 20.2058, 0.329551, 78.2923, 0.52 ) }
    dend_36 { pt3dadd( 20.8116, 0.509234, 79.2067, 0.52 ) }
    dend_36 { pt3dadd( 21.3227, 0.654194, 79.9724, 0.81 ) }
    dend_36 { pt3dadd( 21.986, 0.780324, 80.8817, 0.81 ) }
    dend_36 { pt3dadd( 22.4343, 0.769364, 81.5624, 0.81 ) }
    dend_36 { pt3dadd( 23.1524, 0.576081, 82.741, 0.29 ) }
    dend_36 { pt3dadd( 23.7487, 0.299627, 83.7546, 0.29 ) }
    dend_36 { pt3dadd( 24.0316, 0.143031, 84.2495, 0.29 ) }
    dend_36 { pt3dadd( 24.729, -0.242572, 85.5163, 1.55 ) }
    dend_36 { pt3dadd( 26.0828, -0.927892, 88.0239, 0.44 ) }
    dend_36 { pt3dadd( 26.7772, -1.25815, 89.3739, 0.44 ) }
    dend_36 { pt3dadd( 27.3116, -1.51973, 90.5283, 0.44 ) }
    dend_36 { pt3dadd( 27.7537, -1.74808, 91.6111, 0.44 ) }
    dend_36 { pt3dadd( 28.1159, -1.94518, 92.6936, 0.44 ) }
    dend_36 { pt3dadd( 28.4788, -2.13646, 94.1815, 0.44 ) }
    dend_36 { pt3dadd( 28.6632, -2.2448, 95.3116, 0.44 ) }
    dend_36 { pt3dadd( 28.7385, -2.38967, 96.5613, 0.44 ) }
    dend_36 { pt3dadd( 28.6882, -2.61597, 98.0924, 0.44 ) }
    dend_36 { pt3dadd( 28.5969, -2.82827, 99.2659, 0.44 ) }
    dend_36 { pt3dadd( 28.4948, -3.10617, 100.528, 0.44 ) }
    dend_36 { pt3dadd( 28.3757, -3.53157, 102.148, 0.44 ) }
    dend_36 { pt3dadd( 28.3719, -3.68886, 102.597, 0.44 ) }
    dend_36 { pt3dadd( 28.5104, -4.23485, 103.671, 0.44 ) }
    dend_36 { pt3dadd( 28.8069, -4.9522, 104.528, 0.44 ) }
    dend_36 { pt3dadd( 29.1946, -5.91977, 105.234, 1.33 ) }
    dend_36 { pt3dadd( 29.5204, -6.86152, 105.762, 0.52 ) }
    dend_36 { pt3dadd( 29.8761, -8.01913, 106.328, 0.44 ) }
    dend_36 { pt3dadd( 30.0193, -8.55425, 106.595, 0.66 ) }
    dend_36 { pt3dadd( 30.1989, -9.35891, 107.001, 1.33 ) }
    dend_36 { pt3dadd( 30.538, -11.107, 107.964, 0.22 ) }
    dend_36 { pt3dadd( 30.7405, -12.2384, 108.669, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_36 { pt3dadd( 30.8887, -13.0219, 109.258, 0.22 ) }
    dend_36 { pt3dadd( 31.0316, -13.76, 109.913, 0.22 ) }
    dend_36 { pt3dadd( 31.157, -14.437, 110.636, 0.22 ) }
    dend_36 { pt3dadd( 31.237, -14.9509, 111.344, 0.44 ) }
    dend_36 { pt3dadd( 31.2935, -15.5009, 112.282, 1.25 ) }
    dend_36 { pt3dadd( 31.3517, -16.4759, 114.198, 0.44 ) }
    dend_36 { pt3dadd( 31.3656, -17.1168, 115.56, 0.44 ) }
    dend_36 { pt3dadd( 31.3773, -17.9456, 117.568, 0.66 ) }
    dend_36 { pt3dadd( 31.4066, -18.7636, 119.981, 0.66 ) }
    dend_36 { pt3dadd( 31.4243, -19.2161, 121.726, 1.62 ) }
    dend_36 { pt3dadd( 31.4258, -19.577, 123.904, 0.74 ) }
    dend_36 { pt3dadd( 31.4206, -19.6212, 124.458, 0.52 ) }
    dend_36 { pt3dadd( 31.4166, -19.6467, 126.051, 0.52 ) }
    dend_36 { pt3dadd( 31.4537, -19.5807, 127.343, 0.52 ) }
    dend_36 { pt3dadd( 31.5389, -19.465, 128.399, 0.52 ) }
    dend_36 { pt3dadd( 31.6666, -19.3163, 129.525, 0.52 ) }
    dend_36 { pt3dadd( 31.7831, -19.2195, 130.459, 0.52 ) }
    dend_36 { pt3dadd( 31.9327, -19.1776, 131.452, 0.52 ) }
    dend_36 { pt3dadd( 32.0891, -19.2186, 132.392, 0.52 ) }
    dend_36 { pt3dadd( 32.3598, -19.3828, 133.995, 0.52 ) }
    dend_36 { pt3dadd( 32.6262, -19.5983, 135.449, 0.52 ) }
    dend_36 { pt3dadd( 32.9648, -19.9338, 137.077, 0.52 ) }
    dend_36 { pt3dadd( 33.2647, -20.2831, 138.503, 0.52 ) }
    dend_36 { pt3dadd( 33.4469, -20.5354, 139.496, 0.52 ) }
    dend_36 { pt3dadd( 33.6979, -20.9768, 141.049, 0.52 ) }
    dend_36 { pt3dadd( 33.8537, -21.3259, 142.09, 0.52 ) }
    dend_36 { pt3dadd( 34.0728, -21.9429, 143.57, 0.29 ) }
    dend_36 { pt3dadd( 34.2204, -22.5093, 144.595, 0.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 28/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.24241, 0.503088, 34.6517, 0.52 ) }
    dend_35 { pt3dadd( 5.14909, 1.11103, 34.5363, 0.52 ) }
    dend_35 { pt3dadd( 5.74856, 1.46533, 34.4648, 0.52 ) }
    dend_35 { pt3dadd( 6.37582, 1.76104, 34.4016, 0.52 ) }
    dend_35 { pt3dadd( 7.13921, 2.05339, 34.3339, 0.52 ) }
    dend_35 { pt3dadd( 8.17384, 2.37691, 34.2528, 0.52 ) }
    dend_35 { pt3dadd( 8.9824, 2.59927, 34.1954, 0.74 ) }
    dend_35 { pt3dadd( 9.8994, 2.80136, 34.1512, 0.74 ) }
    dend_35 { pt3dadd( 11.1602, 3.09369, 34.1176, 0.44 ) }
    dend_35 { pt3dadd( 11.8149, 3.26927, 34.1153, 0.29 ) }
    dend_35 { pt3dadd( 12.5408, 3.49787, 34.1025, 0.44 ) }
    dend_35 { pt3dadd( 13.0147, 3.68375, 34.0911, 0.44 ) }
    dend_35 { pt3dadd( 14.0058, 4.1784, 34.0555, 0.37 ) }
    dend_35 { pt3dadd( 14.7689, 4.64808, 34.0366, 0.66 ) }
    dend_35 { pt3dadd( 15.3614, 5.07302, 34.044, 0.81 ) }
    dend_35 { pt3dadd( 16.553, 5.98314, 34.0959, 1.33 ) }
    dend_35 { pt3dadd( 17.214, 6.50471, 34.1407, 0.52 ) }
    dend_35 { pt3dadd( 18.0767, 7.1636, 34.2241, 0.37 ) }
    dend_35 { pt3dadd( 18.696, 7.60909, 34.2977, 0.66 ) }
    dend_35 { pt3dadd( 19.5061, 8.14697, 34.4232, 1.25 ) }
    dend_35 { pt3dadd( 19.9391, 8.42544, 34.5052, 1.25 ) }
    dend_35 { pt3dadd( 20.6789, 8.89339, 34.6736, 0.59 ) }
    dend_35 { pt3dadd( 21.3776, 9.33601, 34.8176, 0.52 ) }
    dend_35 { pt3dadd( 21.9406, 9.71025, 34.9122, 0.52 ) }
    dend_35 { pt3dadd( 22.3746, 10.0079, 34.9826, 0.52 ) }
    dend_35 { pt3dadd( 23.149, 10.5265, 35.0477, 0.37 ) }
    dend_35 { pt3dadd( 23.615, 10.8227, 35.0384, 0.37 ) }
    dend_35 { pt3dadd( 24.543, 11.3773, 34.9349, 0.88 ) }
    dend_35 { pt3dadd( 25.2077, 11.7743, 34.8061, 0.29 ) }
    dend_35 { pt3dadd( 26.0293, 12.2819, 34.6429, 0.59 ) }
    dend_35 { pt3dadd( 27.2071, 13.0361, 34.462, 0.44 ) }
    dend_35 { pt3dadd( 28.1686, 13.6586, 34.3789, 0.44 ) }
    dend_35 { pt3dadd( 28.6548, 13.9933, 34.3722, 0.44 ) }
    dend_35 { pt3dadd( 29.1234, 14.3313, 34.3887, 0.66 ) }
    dend_35 { pt3dadd( 30.0365, 14.9464, 34.4798, 1.03 ) }
    dend_35 { pt3dadd( 30.959, 15.5125, 34.6753, 1.25 ) }
    dend_35 { pt3dadd( 31.8327, 16.0104, 34.9648, 0.59 ) }
    dend_35 { pt3dadd( 32.4941, 16.3558, 35.2058, 0.44 ) }
    dend_35 { pt3dadd( 32.9253, 16.5561, 35.3479, 0.44 ) }
    dend_35 { pt3dadd( 33.9554, 16.986, 35.6238, 0.66 ) }
    dend_35 { pt3dadd( 35.02, 17.3973, 35.7898, 0.29 ) }
    dend_35 { pt3dadd( 35.2406, 17.4879, 35.8046, 0.29 ) }
    dend_35 { pt3dadd( 35.8699, 17.7773, 35.7975, 0.29 ) }
    dend_35 { pt3dadd( 36.0844, 17.8984, 35.7743, 0.29 ) }
    dend_35 { pt3dadd( 36.5368, 18.2073, 35.6579, 0.29 ) }
    dend_35 { pt3dadd( 36.9147, 18.5003, 35.477, 0.29 ) }
    dend_35 { pt3dadd( 37.31, 18.7821, 35.2546, 0.29 ) }
    dend_35 { pt3dadd( 37.6844, 19.0087, 35.043, 0.29 ) }
    dend_35 { pt3dadd( 38.1287, 19.2606, 34.867, 0.59 ) }
    dend_35 { pt3dadd( 38.9964, 19.7465, 34.6505, 0.59 ) }
    dend_35 { pt3dadd( 39.6874, 20.137, 34.6058, 0.59 ) }
    dend_35 { pt3dadd( 40.064, 20.3716, 34.651, 0.59 ) }
    dend_35 { pt3dadd( 40.657, 20.8179, 34.8575, 0.59 ) }
    dend_35 { pt3dadd( 41.8583, 21.9017, 35.5785, 0.52 ) }
    dend_35 { pt3dadd( 42.2309, 22.2719, 35.8963, 0.59 ) }
    dend_35 { pt3dadd( 42.8, 22.8863, 36.5152, 0.59 ) }
    dend_35 { pt3dadd( 43.1385, 23.2523, 36.9027, 0.59 ) }
    dend_35 { pt3dadd( 43.6399, 23.786, 37.4586, 0.15 ) }
    dend_35 { pt3dadd( 44.0304, 24.1936, 37.9065, 0.15 ) }
    dend_35 { pt3dadd( 44.5091, 24.667, 38.4031, 0.15 ) }
    dend_35 { pt3dadd( 44.9294, 25.0648, 38.8088, 0.15 ) }
    dend_35 { pt3dadd( 45.7686, 25.8094, 39.4642, 0.15 ) }
    dend_35 { pt3dadd( 46.2369, 26.1877, 39.7669, 0.15 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -39.0859, -32.1017, 12.5741, 0.22 ) }
    dend_31 { pt3dadd( -39.2327, -33.1232, 12.9549, 0.22 ) }
    dend_31 { pt3dadd( -39.3266, -34.2824, 13.2818, 0.22 ) }
    dend_31 { pt3dadd( -39.3642, -34.8841, 13.4413, 0.22 ) }
    dend_31 { pt3dadd( -39.4009, -35.2803, 13.5421, 0.22 ) }
    dend_31 { pt3dadd( -39.4659, -35.7225, 13.6511, 0.37 ) }
    dend_31 { pt3dadd( -39.5765, -36.2914, 13.7843, 0.88 ) }
    dend_31 { pt3dadd( -39.8028, -37.2339, 13.8912, 0.37 ) }
    dend_31 { pt3dadd( -39.9767, -38.0281, 13.8753, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_31 { pt3dadd( -40.0777, -38.5334, 13.8161, 0.37 ) }
    dend_31 { pt3dadd( -40.1895, -39.0962, 13.6693, 0.52 ) }
    dend_31 { pt3dadd( -40.2901, -39.5687, 13.4683, 0.37 ) }
    dend_31 { pt3dadd( -40.4912, -40.4157, 12.9427, 0.15 ) }
    dend_31 { pt3dadd( -40.6599, -41.068, 12.4374, 0.15 ) }
    dend_31 { pt3dadd( -40.7735, -41.5196, 12.0027, 0.15 ) }
    dend_31 { pt3dadd( -40.8926, -42.0279, 11.4016, 0.15 ) }
    dend_31 { pt3dadd( -40.9498, -42.286, 11.0383, 0.52 ) }
    dend_31 { pt3dadd( -41.0001, -42.5037, 10.6857, 1.55 ) }
    dend_31 { pt3dadd( -41.0847, -42.847, 10.0509, 1.62 ) }
    dend_31 { pt3dadd( -41.2692, -43.7404, 8.34989, 0.59 ) }
    dend_31 { pt3dadd( -41.3091, -44.3799, 6.94595, 0.59 ) }
    dend_31 { pt3dadd( -41.2778, -44.7762, 5.89707, 0.59 ) }
    dend_31 { pt3dadd( -41.2256, -45.0329, 5.10129, 0.59 ) }
    dend_31 { pt3dadd( -41.1166, -45.3634, 3.92827, 0.59 ) }
    dend_31 { pt3dadd( -41.0259, -45.5717, 3.1163, 1.99 ) }
    dend_31 { pt3dadd( -40.5587, -46.4254, -0.509704, 1.11 ) }
    dend_31 { pt3dadd( -40.2365, -46.9652, -2.88619, 1.11 ) }
    dend_31 { pt3dadd( -40.0459, -47.266, -4.31764, 1.11 ) }
    dend_31 { pt3dadd( -39.9154, -47.4599, -5.34499, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.0859, -32.1017, 12.5741, 0.52 ) }
    dend_30 { pt3dadd( -41.3164, -32.3461, 13.7343, 0.52 ) }
    dend_30 { pt3dadd( -42.3127, -32.5213, 14.2849, 0.37 ) }
    dend_30 { pt3dadd( -42.8744, -32.6444, 14.6011, 0.81 ) }
    dend_30 { pt3dadd( -43.7495, -32.8722, 15.1307, 0.81 ) }
    dend_30 { pt3dadd( -44.6749, -33.1681, 15.7248, 0.44 ) }
    dend_30 { pt3dadd( -45.5853, -33.5049, 16.3219, 0.44 ) }
    dend_30 { pt3dadd( -46.3402, -33.885, 16.7764, 0.88 ) }
    dend_30 { pt3dadd( -46.4982, -33.982, 16.8846, 1.11 ) }
    dend_30 { pt3dadd( -47.3685, -34.5426, 17.4932, 0.44 ) }
    dend_30 { pt3dadd( -47.8961, -34.8738, 17.8518, 0.44 ) }
    dend_30 { pt3dadd( -48.2118, -35.0705, 18.0603, 0.66 ) }
    dend_30 { pt3dadd( -48.7468, -35.4065, 18.3626, 0.96 ) }
    dend_30 { pt3dadd( -48.9722, -35.5542, 18.4881, 1.03 ) }
    dend_30 { pt3dadd( -49.588, -35.972, 18.8297, 0.52 ) }
    dend_30 { pt3dadd( -50.4771, -36.6345, 19.3022, 0.37 ) }
    dend_30 { pt3dadd( -51.3445, -37.3399, 19.8111, 0.37 ) }
    dend_30 { pt3dadd( -51.8289, -37.7948, 20.1369, 0.88 ) }
    dend_30 { pt3dadd( -52.3545, -38.3454, 20.5179, 1.77 ) }
    dend_30 { pt3dadd( -52.797, -38.8415, 20.8668, 2.21 ) }
    dend_30 { pt3dadd( -53.2576, -39.4032, 21.2782, 1.92 ) }
    dend_30 { pt3dadd( -53.9352, -40.2619, 21.9401, 1.18 ) }
    dend_30 { pt3dadd( -54.5459, -41.0226, 22.5405, 0.66 ) }
    dend_30 { pt3dadd( -55.2887, -41.9186, 23.2652, 0.29 ) }
    dend_30 { pt3dadd( -55.9189, -42.64, 23.8423, 0.44 ) }
    dend_30 { pt3dadd( -56.4997, -43.2862, 24.3657, 0.44 ) }
    dend_30 { pt3dadd( -57.1392, -43.9712, 24.9361, 0.44 ) }
    dend_30 { pt3dadd( -57.5686, -44.4142, 25.2912, 1.18 ) }
    dend_30 { pt3dadd( -58.0401, -44.8765, 25.6529, 1.77 ) }
    dend_30 { pt3dadd( -58.5415, -45.3466, 25.9912, 1.03 ) }
    dend_30 { pt3dadd( -59.4118, -46.0869, 26.441, 0.22 ) }
    dend_30 { pt3dadd( -60.2183, -46.7349, 26.7678, 0.22 ) }
    dend_30 { pt3dadd( -60.8012, -47.2, 26.9639, 0.22 ) }
    dend_30 { pt3dadd( -61.4301, -47.7295, 27.151, 0.22 ) }
    dend_30 { pt3dadd( -62.2603, -48.4637, 27.3803, 0.66 ) }
    dend_30 { pt3dadd( -63.2328, -49.3602, 27.6562, 0.22 ) }
    dend_30 { pt3dadd( -63.7963, -49.8923, 27.8194, 0.37 ) }
    dend_30 { pt3dadd( -64.4577, -50.5412, 28.0474, 0.22 ) }
    dend_30 { pt3dadd( -65.4139, -51.4937, 28.4832, 1.7 ) }
    dend_30 { pt3dadd( -66.4128, -52.4738, 29.0126, 0.59 ) }
    dend_30 { pt3dadd( -67.2278, -53.2458, 29.5443, 0.59 ) }
    dend_30 { pt3dadd( -68.1736, -54.0754, 30.2323, 0.07 ) }
    dend_30 { pt3dadd( -68.8465, -54.6107, 30.738, 0.22 ) }
    dend_30 { pt3dadd( -69.9666, -55.4006, 31.5699, 0.07 ) }
    dend_30 { pt3dadd( -70.8504, -55.9413, 32.194, 1.62 ) }
    dend_30 { pt3dadd( -72.4695, -56.8529, 33.2667, 0.22 ) }
    dend_30 { pt3dadd( -72.9912, -57.1296, 33.5996, 0.22 ) }
    dend_30 { pt3dadd( -73.4117, -57.3421, 33.8652, 0.44 ) }
    dend_30 { pt3dadd( -74.1055, -57.6893, 34.2818, 0.81 ) }
    dend_30 { pt3dadd( -75.3512, -58.3047, 34.9905, 0.29 ) }
    dend_30 { pt3dadd( -76.085, -58.6618, 35.4361, 0.29 ) }
    dend_30 { pt3dadd( -76.9162, -59.0766, 35.9697, 0.29 ) }
    dend_30 { pt3dadd( -77.5559, -59.4089, 36.4121, 0.29 ) }
    dend_30 { pt3dadd( -78.2265, -59.767, 36.8933, 1.4 ) }
    dend_30 { pt3dadd( -78.5458, -59.946, 37.125, 1.84 ) }
    dend_30 { pt3dadd( -79.8729, -60.7273, 38.0253, 1.18 ) }
    dend_30 { pt3dadd( -81.6499, -61.8061, 39.1166, 0.29 ) }
    dend_30 { pt3dadd( -82.0392, -62.0529, 39.3332, 0.29 ) }
    dend_30 { pt3dadd( -82.7408, -62.512, 39.696, 0.52 ) }
    dend_30 { pt3dadd( -83.8498, -63.2549, 40.1786, 0.07 ) }
    dend_30 { pt3dadd( -84.9258, -63.9909, 40.5952, 0.07 ) }
    dend_30 { pt3dadd( -85.8657, -64.6494, 40.8519, 0.07 ) }
    dend_30 { pt3dadd( -86.5489, -65.134, 40.9726, 0.37 ) }
    dend_30 { pt3dadd( -86.9651, -65.4307, 41.0394, 0.37 ) }
    dend_30 { pt3dadd( -88.0736, -66.1942, 41.1599, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -28.9348, 4.63616, 31.5512, 0.44 ) }
    dend_26 { pt3dadd( -29.0831, 5.62274, 31.9373, 0.44 ) }
    dend_26 { pt3dadd( -29.1981, 6.65666, 32.4382, 0.59 ) }
    dend_26 { pt3dadd( -29.2786, 7.69917, 33.0231, 0.29 ) }
    dend_26 { pt3dadd( -29.2919, 8.55837, 33.558, 0.44 ) }
    dend_26 { pt3dadd( -29.2573, 9.35986, 34.0797, 0.44 ) }
    dend_26 { pt3dadd( -29.2044, 10.1666, 34.6011, 0.44 ) }
    dend_26 { pt3dadd( -29.1429, 10.7213, 34.9871, 0.44 ) }
    dend_26 { pt3dadd( -29.1023, 11.0171, 35.2086, 0.44 ) }
    dend_26 { pt3dadd( -29.0273, 11.59, 35.605, 0.44 ) }
    dend_26 { pt3dadd( -29.008, 12.0521, 35.8496, 0.44 ) }
    dend_26 { pt3dadd( -29.1145, 12.882, 36.153, 0.59 ) }
    dend_26 { pt3dadd( -29.2817, 13.5267, 36.3204, 0.59 ) }
    dend_26 { pt3dadd( -29.4678, 14.0981, 36.4412, 0.59 ) }
    dend_26 { pt3dadd( -29.6976, 14.7916, 36.5644, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_26 { pt3dadd( -29.9398, 15.5224, 36.6792, 0.44 ) }
    dend_26 { pt3dadd( -30.1958, 16.3908, 36.8108, 0.29 ) }
    dend_26 { pt3dadd( -30.331, 16.9557, 36.8886, 0.29 ) }
    dend_26 { pt3dadd( -30.4094, 17.4165, 36.9525, 0.29 ) }
    dend_26 { pt3dadd( -30.5417, 18.5888, 37.1122, 0.59 ) }
    dend_26 { pt3dadd( -30.6135, 19.3506, 37.2055, 0.59 ) }
    dend_26 { pt3dadd( -30.6524, 19.779, 37.2503, 0.59 ) }
    dend_26 { pt3dadd( -30.7242, 20.4303, 37.3082, 0.29 ) }
    dend_26 { pt3dadd( -30.8775, 21.1411, 37.3733, 0.29 ) }
    dend_26 { pt3dadd( -31.1546, 21.8321, 37.4317, 0.29 ) }
    dend_26 { pt3dadd( -31.6062, 22.6196, 37.4892, 0.07 ) }
    dend_26 { pt3dadd( -31.7994, 22.9198, 37.5057, 0.07 ) }
    dend_26 { pt3dadd( -32.1472, 23.4477, 37.5247, 0.22 ) }
    dend_26 { pt3dadd( -32.7431, 24.3672, 37.5812, 0.07 ) }
    dend_26 { pt3dadd( -33.4143, 25.4517, 37.7056, 0.22 ) }
    dend_26 { pt3dadd( -33.8201, 26.2275, 37.8577, 0.37 ) }
    dend_26 { pt3dadd( -34.0985, 26.8964, 38.044, 0.59 ) }
    dend_26 { pt3dadd( -34.4153, 27.7745, 38.3082, 0.52 ) }
    dend_26 { pt3dadd( -34.6839, 28.6951, 38.6244, 0.22 ) }
    dend_26 { pt3dadd( -34.88, 29.6513, 39.0178, 0.37 ) }
    dend_26 { pt3dadd( -35.0044, 30.644, 39.5171, 0.07 ) }
    dend_26 { pt3dadd( -35.0581, 31.2365, 39.8751, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 22/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -28.9348, 4.63616, 31.5512, 0.66 ) }
    dend_25 { pt3dadd( -29.1735, 4.99535, 32.1462, 0.66 ) }
    dend_25 { pt3dadd( -29.519, 5.65915, 33.1332, 0.52 ) }
    dend_25 { pt3dadd( -29.8013, 6.33214, 34.1536, 0.52 ) }
    dend_25 { pt3dadd( -30.0632, 7.0772, 35.2267, 0.88 ) }
    dend_25 { pt3dadd( -30.2441, 7.66469, 36.0792, 0.52 ) }
    dend_25 { pt3dadd( -30.3442, 8.04081, 36.6622, 0.52 ) }
    dend_25 { pt3dadd( -30.405, 8.46844, 37.3894, 0.52 ) }
    dend_25 { pt3dadd( -30.4315, 9.12192, 38.6162, 0.74 ) }
    dend_25 { pt3dadd( -30.43, 9.34243, 39.1044, 0.88 ) }
    dend_25 { pt3dadd( -30.4218, 9.68035, 40.0712, 0.88 ) }
    dend_25 { pt3dadd( -30.4499, 9.99455, 41.2381, 0.88 ) }
    dend_25 { pt3dadd( -30.5417, 10.3157, 42.5765, 0.88 ) }
    dend_25 { pt3dadd( -30.6752, 10.6239, 43.9161, 0.88 ) }
    dend_25 { pt3dadd( -30.8063, 10.8634, 44.9422, 0.88 ) }
    dend_25 { pt3dadd( -31.0129, 11.1931, 46.2667, 0.88 ) }
    dend_25 { pt3dadd( -31.2503, 11.513, 47.3581, 0.66 ) }
    dend_25 { pt3dadd( -31.5362, 11.8377, 48.317, 0.81 ) }
    dend_25 { pt3dadd( -31.74, 12.041, 48.8425, 0.81 ) }
    dend_25 { pt3dadd( -31.966, 12.2549, 49.2884, 0.81 ) }
    dend_25 { pt3dadd( -32.2206, 12.4835, 49.775, 0.81 ) }
    dend_25 { pt3dadd( -32.8839, 12.9709, 50.9828, 0.74 ) }
    dend_25 { pt3dadd( -33.4036, 13.2862, 51.9417, 0.74 ) }
    dend_25 { pt3dadd( -33.6685, 13.4243, 52.4295, 0.74 ) }
    dend_25 { pt3dadd( -34.2303, 13.7157, 53.5225, 0.52 ) }
    dend_25 { pt3dadd( -35.4956, 14.4197, 56.3143, 1.4 ) }
    dend_25 { pt3dadd( -35.9615, 14.7068, 57.531, 1.18 ) }
    dend_25 { pt3dadd( -36.2638, 14.9206, 58.4473, 1.18 ) }
    dend_25 { pt3dadd( -36.4794, 15.0907, 59.1987, 1.18 ) }
    dend_25 { pt3dadd( -36.6755, 15.2508, 60.017, 1.18 ) }
    dend_25 { pt3dadd( -36.8513, 15.3747, 60.8816, 1.18 ) }
    dend_25 { pt3dadd( -37.0345, 15.4592, 61.7364, 1.18 ) }
    dend_25 { pt3dadd( -37.1543, 15.4765, 62.281, 1.18 ) }
    dend_25 { pt3dadd( -37.3618, 15.4399, 63.0423, 1.18 ) }
    dend_25 { pt3dadd( -37.6993, 15.3244, 63.9632, 1.18 ) }
    dend_25 { pt3dadd( -38.0339, 15.1988, 64.689, 0.44 ) }
    dend_25 { pt3dadd( -38.6473, 14.9574, 65.8233, 0.52 ) }
    dend_25 { pt3dadd( -39.3785, 14.6257, 67.1231, 0.52 ) }
    dend_25 { pt3dadd( -39.6084, 14.5204, 67.5258, 0.52 ) }
    dend_25 { pt3dadd( -40.055, 14.3468, 68.2293, 1.25 ) }
    dend_25 { pt3dadd( -40.442, 14.2288, 68.8097, 1.25 ) }
    dend_25 { pt3dadd( -41.1746, 14.074, 69.8707, 0.81 ) }
    dend_25 { pt3dadd( -41.9682, 13.9671, 70.927, 0.66 ) }
    dend_25 { pt3dadd( -43.0383, 13.8393, 72.3247, 0.52 ) }
    dend_25 { pt3dadd( -43.5402, 13.7805, 72.9934, 0.74 ) }
    dend_25 { pt3dadd( -44.6083, 13.662, 74.4275, 0.88 ) }
    dend_25 { pt3dadd( -45.2112, 13.5907, 75.1927, 1.03 ) }
    dend_25 { pt3dadd( -46.5541, 13.4309, 76.7464, 0.44 ) }
    dend_25 { pt3dadd( -47.4499, 13.3079, 77.704, 0.44 ) }
    dend_25 { pt3dadd( -48.2007, 13.1674, 78.4158, 0.44 ) }
    dend_25 { pt3dadd( -48.4548, 13.1083, 78.6304, 0.44 ) }
    dend_25 { pt3dadd( -49.1469, 12.9345, 79.0794, 1.03 ) }
    dend_25 { pt3dadd( -49.9732, 12.7183, 79.5243, 1.62 ) }
    dend_25 { pt3dadd( -50.914, 12.4729, 79.9393, 1.4 ) }
    dend_25 { pt3dadd( -52.5374, 12.1215, 80.5341, 0.29 ) }
    dend_25 { pt3dadd( -53.2771, 11.9915, 80.7832, 0.29 ) }
    dend_25 { pt3dadd( -54.4161, 11.8304, 81.1763, 0.29 ) }
    dend_25 { pt3dadd( -54.702, 11.8027, 81.2793, 0.29 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -79.5539, -4.24754, 54.4058, 0.37 ) }
    dend_23 { pt3dadd( -79.6512, -3.67545, 55.6708, 0.37 ) }
    dend_23 { pt3dadd( -79.6967, -3.04224, 57.1027, 0.15 ) }
    dend_23 { pt3dadd( -79.7192, -2.51369, 58.3105, 0.59 ) }
    dend_23 { pt3dadd( -79.7193, -1.95488, 59.5504, 1.25 ) }
    dend_23 { pt3dadd( -79.6713, -1.08679, 61.3943, 0.44 ) }
    dend_23 { pt3dadd( -79.5905, -0.451485, 62.6927, 0.44 ) }
    dend_23 { pt3dadd( -79.4628, 0.0607923, 63.6203, 0.44 ) }
    dend_23 { pt3dadd( -79.1789, 0.784233, 64.7641, 0.44 ) }
    dend_23 { pt3dadd( -78.9615, 1.21494, 65.3581, 0.44 ) }
    dend_23 { pt3dadd( -78.7409, 1.58733, 65.8092, 0.29 ) }
    dend_23 { pt3dadd( -78.2584, 2.32146, 66.5266, 0.81 ) }
    dend_23 { pt3dadd( -77.932, 2.82358, 66.9977, 0.81 ) }
    dend_23 { pt3dadd( -77.4312, 3.61498, 67.7396, 0.37 ) }
    dend_23 { pt3dadd( -76.9148, 4.48632, 68.5466, 0.29 ) }
    dend_23 { pt3dadd( -76.4528, 5.38068, 69.3936, 0.29 ) }
    dend_23 { pt3dadd( -76.0908, 6.20894, 70.2156, 0.96 ) }
    dend_23 { pt3dadd( -75.5702, 7.63717, 71.7656, 0.22 ) }
    dend_23 { pt3dadd( -75.4537, 8.02382, 72.2534, 0.22 ) }
    dend_23 { pt3dadd( -75.3661, 8.44466, 72.8929, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( -75.3415, 8.80488, 73.5303, 0.29 ) }
    dend_23 { pt3dadd( -75.3497, 9.42135, 74.7722, 1.03 ) }
    dend_23 { pt3dadd( -75.3647, 10.0317, 76.2186, 1.03 ) }
    dend_23 { pt3dadd( -75.3366, 10.6397, 77.9597, 0.37 ) }
    dend_23 { pt3dadd( -75.2811, 11.1166, 79.7418, 0.44 ) }
    dend_23 { pt3dadd( -75.2236, 11.4364, 81.4439, 0.44 ) }
    dend_23 { pt3dadd( -75.1521, 11.6514, 83.2039, 0.44 ) }
    dend_23 { pt3dadd( -75.054, 11.7598, 84.9813, 0.44 ) }
    dend_23 { pt3dadd( -74.9151, 11.7889, 86.5186, 0.44 ) }
    dend_23 { pt3dadd( -74.6655, 11.7701, 88.2657, 0.44 ) }
    dend_23 { pt3dadd( -74.333, 11.7404, 90.0435, 0.44 ) }
    dend_23 { pt3dadd( -74.0558, 11.7196, 91.3947, 0.44 ) }
    dend_23 { pt3dadd( -73.8055, 11.7029, 92.7564, 0.44 ) }
    dend_23 { pt3dadd( -73.6105, 11.713, 94.0149, 0.44 ) }
    dend_23 { pt3dadd( -73.464, 11.7757, 95.5355, 0.44 ) }
    dend_23 { pt3dadd( -73.4392, 11.8366, 96.8688, 0.44 ) }
    dend_23 { pt3dadd( -73.4513, 11.8915, 97.7911, 0.44 ) }
    dend_23 { pt3dadd( -73.5247, 11.9544, 98.8256, 0.44 ) }
    dend_23 { pt3dadd( -73.7078, 12.0124, 100.11, 0.44 ) }
    dend_23 { pt3dadd( -74.1688, 12.0146, 102.262, 0.44 ) }
    dend_23 { pt3dadd( -74.8594, 11.8823, 104.879, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -79.5539, -4.24754, 54.4058, 0.15 ) }
    dend_22 { pt3dadd( -80.8805, -3.70562, 54.3928, 0.15 ) }
    dend_22 { pt3dadd( -81.7024, -3.38727, 54.3896, 0.15 ) }
    dend_22 { pt3dadd( -82.4418, -3.13926, 54.4168, 0.15 ) }
    dend_22 { pt3dadd( -82.9012, -3.01351, 54.451, 0.66 ) }
    dend_22 { pt3dadd( -84.5749, -2.6496, 54.5968, 0.07 ) }
    dend_22 { pt3dadd( -84.9315, -2.58051, 54.6482, 0.07 ) }
    dend_22 { pt3dadd( -85.8157, -2.4194, 54.8627, 0.37 ) }
    dend_22 { pt3dadd( -87.4867, -2.12367, 55.3651, 0.07 ) }
    dend_22 { pt3dadd( -88.7737, -1.88753, 55.8507, 0.07 ) }
    dend_22 { pt3dadd( -89.6386, -1.71635, 56.242, 0.44 ) }
    dend_22 { pt3dadd( -90.9279, -1.44842, 56.9137, 0.07 ) }
    dend_22 { pt3dadd( -91.6876, -1.26299, 57.3988, 0.07 ) }
    dend_22 { pt3dadd( -92.3324, -1.07044, 57.9001, 0.07 ) }
    dend_22 { pt3dadd( -93.0132, -0.818341, 58.4992, 0.07 ) }
    dend_22 { pt3dadd( -93.489, -0.62854, 58.981, 0.07 ) }
    dend_22 { pt3dadd( -94.0811, -0.394575, 59.6084, 0.37 ) }
    dend_22 { pt3dadd( -95.567, 0.160353, 61.0906, 0.07 ) }
    dend_22 { pt3dadd( -96.257, 0.407653, 61.7415, 0.07 ) }
    dend_22 { pt3dadd( -97.1702, 0.732353, 62.6096, 0.96 ) }
    dend_22 { pt3dadd( -99.267, 1.48702, 64.6242, 0.37 ) }
    dend_22 { pt3dadd( -100.077, 1.78256, 65.4317, 0.07 ) }
    dend_22 { pt3dadd( -100.96, 2.10256, 66.3422, 0.07 ) }
    dend_22 { pt3dadd( -101.609, 2.32185, 66.9958, 0.52 ) }
    dend_22 { pt3dadd( -102.58, 2.62338, 68.0395, 0.29 ) }
    dend_22 { pt3dadd( -103.489, 2.88823, 69.0937, 0.59 ) }
    dend_22 { pt3dadd( -104.576, 3.2117, 70.4293, 0.07 ) }
    dend_22 { pt3dadd( -105.09, 3.38064, 71.1181, 0.07 ) }
    dend_22 { pt3dadd( -105.584, 3.568, 71.8198, 0.37 ) }
    dend_22 { pt3dadd( -106.434, 3.90014, 73.0674, 0.07 ) }
    dend_22 { pt3dadd( -107.138, 4.19715, 74.0877, 0.07 ) }
    dend_22 { pt3dadd( -107.896, 4.55888, 75.1938, 0.96 ) }
    dend_22 { pt3dadd( -108.812, 5.06965, 76.4549, 0.22 ) }
    dend_22 { pt3dadd( -109.4, 5.45075, 77.2516, 1.11 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 55/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.939683, 23.8772, 11.5429, 1.25 ) }
    dend_14 { pt3dadd( -1.15968, 24.9772, 11.9229, 1.25 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.939683, 23.8772, 11.5429, 0.59 ) }
    dend_11 { pt3dadd( 0.121406, 24.3062, 13.3805, 0.59 ) }
    dend_11 { pt3dadd( 0.817827, 24.4652, 14.5366, 0.59 ) }
    dend_11 { pt3dadd( 1.42819, 24.5365, 15.5389, 0.74 ) }
    dend_11 { pt3dadd( 1.97867, 24.5679, 16.455, 0.74 ) }
    dend_11 { pt3dadd( 2.35296, 24.5941, 17.0527, 0.74 ) }
    dend_11 { pt3dadd( 2.77215, 24.632, 17.7032, 0.74 ) }
    dend_11 { pt3dadd( 3.28787, 24.6247, 18.3839, 0.88 ) }
    dend_11 { pt3dadd( 3.8088, 24.6097, 18.9522, 0.88 ) }
    dend_11 { pt3dadd( 4.52783, 24.5678, 19.5807, 0.88 ) }
    dend_11 { pt3dadd( 5.33953, 24.4992, 20.1227, 0.66 ) }
    dend_11 { pt3dadd( 5.85161, 24.4537, 20.3831, 0.66 ) }
    dend_11 { pt3dadd( 6.76169, 24.4012, 20.7287, 0.59 ) }
    dend_11 { pt3dadd( 7.68576, 24.372, 20.9653, 0.59 ) }
    dend_11 { pt3dadd( 8.69932, 24.3779, 21.1383, 0.59 ) }
    dend_11 { pt3dadd( 9.79296, 24.4343, 21.2535, 0.52 ) }
    dend_11 { pt3dadd( 10.7096, 24.4679, 21.3255, 0.52 ) }
    dend_11 { pt3dadd( 11.7085, 24.5269, 21.3803, 0.66 ) }
    dend_11 { pt3dadd( 12.5726, 24.6417, 21.4283, 0.66 ) }
    dend_11 { pt3dadd( 13.3212, 24.8641, 21.4652, 0.74 ) }
    dend_11 { pt3dadd( 14.0591, 25.2472, 21.5061, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 78/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.15968, 24.9772, 11.9229, 0.59 ) }
    dend_16 { pt3dadd( -1.04039, 26.0538, 11.9853, 0.59 ) }
    dend_16 { pt3dadd( -0.872831, 27.2704, 12.1612, 0.59 ) }
    dend_16 { pt3dadd( -0.727127, 28.3899, 12.4396, 0.66 ) }
    dend_16 { pt3dadd( -0.611169, 29.3932, 12.7881, 0.74 ) }
    dend_16 { pt3dadd( -0.511463, 30.3971, 13.1791, 0.74 ) }
    dend_16 { pt3dadd( -0.441822, 31.1357, 13.5211, 0.74 ) }
    dend_16 { pt3dadd( -0.360105, 32.172, 14.1821, 0.74 ) }
    dend_16 { pt3dadd( -0.289638, 33.0343, 14.891, 0.74 ) }
    dend_16 { pt3dadd( -0.210957, 33.7215, 15.5193, 0.74 ) }
    dend_16 { pt3dadd( -0.0904819, 34.3291, 16.0889, 0.66 ) }
    dend_16 { pt3dadd( 0.191379, 35.2492, 16.8735, 0.66 ) }
    dend_16 { pt3dadd( 0.475578, 35.8893, 17.2954, 0.66 ) }
    dend_16 { pt3dadd( 1.01507, 36.3913, 17.0795, 0.66 ) }
    dend_16 { pt3dadd( 2.15426, 37.3309, 16.5022, 0.66 ) }
    dend_16 { pt3dadd( 2.79359, 37.8743, 16.2062, 0.81 ) }
    dend_16 { pt3dadd( 3.79006, 38.7614, 15.8411, 1.03 ) }
    dend_16 { pt3dadd( 4.49886, 39.4721, 15.6362, 1.03 ) }
    dend_16 { pt3dadd( 5.20355, 40.3257, 15.626, 0.44 ) }
    dend_16 { pt3dadd( 6.0031, 41.712, 16.259, 0.44 ) }
    dend_16 { pt3dadd( 6.43678, 42.7057, 17.0595, 0.44 ) }
    dend_16 { pt3dadd( 6.71537, 43.5397, 17.884, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_16 { pt3dadd( 6.88752, 44.1724, 18.6302, 0.59 ) }
    dend_16 { pt3dadd( 7.07548, 44.8937, 19.5892, 0.88 ) }
    dend_16 { pt3dadd( 7.26583, 45.6031, 20.6372, 0.88 ) }
    dend_16 { pt3dadd( 7.38109, 45.903, 21.1409, 0.88 ) }
    dend_16 { pt3dadd( 7.67389, 46.3806, 21.9949, 0.44 ) }
    dend_16 { pt3dadd( 8.03109, 46.8329, 22.7146, 0.44 ) }
    dend_16 { pt3dadd( 8.42098, 47.2533, 23.3054, 0.44 ) }
    dend_16 { pt3dadd( 8.96366, 47.814, 23.9709, 0.44 ) }
    dend_16 { pt3dadd( 9.37948, 48.2362, 24.4458, 0.44 ) }
    dend_16 { pt3dadd( 9.87, 48.729, 25.0151, 0.44 ) }
    dend_16 { pt3dadd( 10.4958, 49.3618, 25.7815, 0.44 ) }
    dend_16 { pt3dadd( 10.8812, 49.8192, 26.3431, 0.44 ) }
    dend_16 { pt3dadd( 11.1825, 50.3221, 26.9954, 0.44 ) }
    dend_16 { pt3dadd( 11.3559, 50.8512, 27.7352, 0.44 ) }
    dend_16 { pt3dadd( 11.3835, 51.3307, 28.5066, 0.44 ) }
    dend_16 { pt3dadd( 11.2402, 51.6813, 29.1829, 0.44 ) }
    dend_16 { pt3dadd( 10.9751, 52.055, 30.0366, 0.44 ) }
    dend_16 { pt3dadd( 10.4969, 52.4771, 31.114, 0.22 ) }
    dend_16 { pt3dadd( 9.9046, 52.8347, 32.1183, 0.22 ) }
    dend_16 { pt3dadd( 9.35948, 53.0886, 32.817, 0.22 ) }
    dend_16 { pt3dadd( 8.32938, 53.4514, 33.8681, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 21/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.15968, 24.9772, 11.9229, 0.59 ) }
    dend_15 { pt3dadd( -2.31211, 25.5344, 12.2253, 0.59 ) }
    dend_15 { pt3dadd( -3.56359, 26.1715, 12.6724, 0.52 ) }
    dend_15 { pt3dadd( -4.51967, 26.673, 13.1072, 0.52 ) }
    dend_15 { pt3dadd( -5.90316, 27.4207, 13.8184, 0.52 ) }
    dend_15 { pt3dadd( -6.62131, 27.8273, 14.2314, 0.59 ) }
    dend_15 { pt3dadd( -7.16984, 28.158, 14.6053, 0.59 ) }
    dend_15 { pt3dadd( -7.81205, 28.6077, 15.2671, 0.59 ) }
    dend_15 { pt3dadd( -8.16106, 28.9467, 15.8646, 0.59 ) }
    dend_15 { pt3dadd( -8.32531, 29.1627, 16.3242, 0.59 ) }
    dend_15 { pt3dadd( -8.48765, 29.5076, 17.0835, 0.66 ) }
    dend_15 { pt3dadd( -8.62663, 30.0325, 18.1288, 0.66 ) }
    dend_15 { pt3dadd( -8.70249, 30.657, 19.1595, 0.66 ) }
    dend_15 { pt3dadd( -8.74535, 31.2148, 19.9389, 0.66 ) }
    dend_15 { pt3dadd( -8.77945, 31.5975, 20.4047, 0.66 ) }
    dend_15 { pt3dadd( -8.93731, 32.3639, 21.266, 0.59 ) }
    dend_15 { pt3dadd( -9.19231, 32.9992, 21.8863, 0.59 ) }
    dend_15 { pt3dadd( -9.68777, 33.7346, 22.4592, 0.52 ) }
    dend_15 { pt3dadd( -10.2932, 34.3568, 22.8523, 0.37 ) }
    dend_15 { pt3dadd( -10.8299, 34.8145, 23.0544, 0.37 ) }
    dend_15 { pt3dadd( -12.0743, 35.7668, 23.2827, 0.37 ) }
    dend_15 { pt3dadd( -12.6825, 36.1771, 23.3095, 0.37 ) }
    dend_15 { pt3dadd( -13.0924, 36.4398, 23.2772, 0.66 ) }
    dend_15 { pt3dadd( -14.1928, 37.0918, 23.0626, 0.66 ) }
    dend_15 { pt3dadd( -15.2764, 37.7511, 22.7173, 0.74 ) }
    dend_15 { pt3dadd( -16.0761, 38.2737, 22.3546, 0.74 ) }
    dend_15 { pt3dadd( -16.4387, 38.5278, 22.1334, 0.74 ) }
    dend_15 { pt3dadd( -16.9997, 38.8838, 21.7321, 0.44 ) }
    dend_15 { pt3dadd( -17.8043, 39.3175, 21.1299, 0.44 ) }
    dend_15 { pt3dadd( -18.1999, 39.4995, 20.8133, 0.44 ) }
    dend_15 { pt3dadd( -18.8388, 39.7495, 20.3003, 0.59 ) }
    dend_15 { pt3dadd( -19.5791, 39.9968, 19.7151, 0.74 ) }
    dend_15 { pt3dadd( -20.6387, 40.2913, 18.8648, 0.44 ) }
    dend_15 { pt3dadd( -21.7465, 40.5997, 17.9362, 0.44 ) }
    dend_15 { pt3dadd( -22.5322, 40.8258, 17.2716, 0.44 ) }
    dend_15 { pt3dadd( -23.0685, 40.9714, 16.8119, 0.44 ) }
    dend_15 { pt3dadd( -23.5954, 41.0947, 16.3806, 0.44 ) }
    dend_15 { pt3dadd( -24.298, 41.1942, 15.8056, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 14.0591, 25.2472, 21.5061, 0.37 ) }
    dend_13 { pt3dadd( 15.1658, 24.9029, 22.0402, 0.37 ) }
    dend_13 { pt3dadd( 16.0135, 24.75, 22.5506, 0.37 ) }
    dend_13 { pt3dadd( 17.0772, 24.6119, 23.3149, 0.44 ) }
    dend_13 { pt3dadd( 17.5889, 24.5537, 23.7169, 0.44 ) }
    dend_13 { pt3dadd( 18.0422, 24.5047, 24.0706, 0.44 ) }
    dend_13 { pt3dadd( 18.554, 24.4573, 24.4453, 0.44 ) }
    dend_13 { pt3dadd( 19.1256, 24.459, 24.8983, 0.66 ) }
    dend_13 { pt3dadd( 19.569, 24.5094, 25.2291, 0.66 ) }
    dend_13 { pt3dadd( 20.0641, 24.5956, 25.5159, 0.66 ) }
    dend_13 { pt3dadd( 20.4977, 24.6908, 25.7348, 0.81 ) }
    dend_13 { pt3dadd( 21.099, 24.855, 25.9932, 0.81 ) }
    dend_13 { pt3dadd( 21.961, 25.1314, 26.3436, 0.66 ) }
    dend_13 { pt3dadd( 22.3712, 25.2692, 26.5187, 0.66 ) }
    dend_13 { pt3dadd( 23.0742, 25.5224, 26.8508, 0.59 ) }
    dend_13 { pt3dadd( 23.6324, 25.7111, 27.1649, 0.59 ) }
    dend_13 { pt3dadd( 24.2589, 25.8605, 27.5548, 0.74 ) }
    dend_13 { pt3dadd( 24.8073, 25.8826, 27.9079, 0.74 ) }
    dend_13 { pt3dadd( 25.4488, 25.8005, 28.3206, 0.74 ) }
    dend_13 { pt3dadd( 25.9523, 25.6879, 28.6238, 0.74 ) }
    dend_13 { pt3dadd( 26.6139, 25.4889, 29.0122, 0.74 ) }
    dend_13 { pt3dadd( 27.5282, 25.1425, 29.5199, 0.37 ) }
    dend_13 { pt3dadd( 28.6978, 24.6098, 30.1561, 0.07 ) }
    dend_13 { pt3dadd( 29.1393, 24.3899, 30.3661, 0.07 ) }
    dend_13 { pt3dadd( 29.3797, 24.2657, 30.4647, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.0591, 25.2472, 21.5061, 0.37 ) }
    dend_12 { pt3dadd( 14.2449, 25.731, 22.205, 0.37 ) }
    dend_12 { pt3dadd( 14.4463, 26.2006, 22.9457, 0.37 ) }
    dend_12 { pt3dadd( 14.7004, 26.7367, 23.7335, 0.52 ) }
    dend_12 { pt3dadd( 14.9377, 27.2092, 24.3795, 0.59 ) }
    dend_12 { pt3dadd( 15.2423, 27.726, 25.0493, 0.59 ) }
    dend_12 { pt3dadd( 15.5587, 28.182, 25.643, 0.66 ) }
    dend_12 { pt3dadd( 15.8575, 28.5002, 26.1176, 0.66 ) }
    dend_12 { pt3dadd( 16.3126, 28.8729, 26.7256, 0.52 ) }
    dend_12 { pt3dadd( 16.543, 29.0113, 26.966, 0.52 ) }
    dend_12 { pt3dadd( 17.144, 29.3071, 27.4868, 0.44 ) }
    dend_12 { pt3dadd( 17.5837, 29.4971, 27.8427, 0.44 ) }
    dend_12 { pt3dadd( 18.0627, 29.691, 28.1775, 0.44 ) }
    dend_12 { pt3dadd( 18.4932, 29.8535, 28.4291, 0.44 ) }
    dend_12 { pt3dadd( 18.8599, 29.9796, 28.6176, 0.44 ) }
    dend_12 { pt3dadd( 19.6953, 30.2798, 28.9532, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 20.2437, 30.5149, 29.1031, 0.52 ) }
    dend_12 { pt3dadd( 21.2265, 31.0471, 29.1785, 0.52 ) }
    dend_12 { pt3dadd( 21.8495, 31.477, 29.1384, 0.52 ) }
    dend_12 { pt3dadd( 22.2489, 31.8065, 29.0934, 0.52 ) }
    dend_12 { pt3dadd( 22.8291, 32.3652, 28.986, 0.52 ) }
    dend_12 { pt3dadd( 23.4153, 33.005, 28.8161, 0.52 ) }
    dend_12 { pt3dadd( 24.311, 34.1063, 28.4435, 0.52 ) }
    dend_12 { pt3dadd( 25.0003, 35.0553, 28.1017, 0.44 ) }
    dend_12 { pt3dadd( 25.5883, 35.9331, 27.6984, 0.44 ) }
    dend_12 { pt3dadd( 26.0125, 36.5831, 27.3113, 0.44 ) }
    dend_12 { pt3dadd( 26.3932, 37.1427, 26.8582, 0.59 ) }
    dend_12 { pt3dadd( 26.8205, 37.6225, 26.2544, 0.59 ) }
    dend_12 { pt3dadd( 26.992, 37.73, 25.9967, 0.59 ) }
    dend_12 { pt3dadd( 27.4319, 37.9012, 25.2815, 0.59 ) }
    dend_12 { pt3dadd( 27.7084, 37.9714, 24.8068, 0.59 ) }
    dend_12 { pt3dadd( 27.9282, 38.0041, 24.4539, 0.59 ) }
    dend_12 { pt3dadd( 28.299, 38.0555, 23.901, 0.22 ) }
    dend_12 { pt3dadd( 28.9447, 38.1893, 23.0111, 0.22 ) }
    dend_12 { pt3dadd( 29.4709, 38.3565, 22.307, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_19, dend_18, dend_5, dend_0, dend_38, dend_33, dend_27, dend_20, dend_9, dend_6, dend_2, dend_1, dend_40, dend_39, dend_37, dend_34, dend_29, dend_28, dend_24, dend_21, dend_17, dend_10, dend_8, dend_7, dend_4, dend_3, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_14, dend_11, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_19, dend_18, dend_5, dend_0, dend_38, dend_33, dend_27, dend_20, dend_9, dend_6, dend_2, dend_1, dend_40, dend_39, dend_37, dend_34, dend_29, dend_28, dend_24, dend_21, dend_17, dend_10, dend_8, dend_7, dend_4, dend_3, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_14, dend_11, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_18 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_2 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_21 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_25 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_22 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_16 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_9 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_29 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_26 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_31 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_40 nseg = 7
    dend_39 nseg = 5
    dend_37 nseg = 3
    dend_28 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 5
    dend_3 nseg = 3
    dend_36 nseg = 7
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_HAC_f8c9772d9d_0_0


