// Cell: bNAC219_L4_DBC_519f8feedc_0_0
/*
{
  "id" : "bNAC219_L4_DBC_519f8feedc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.26895, -17.6726, 3.85", "4.005, -5.67559, -16.8384, 3.85", "4.9697, -5.05929, -15.9719, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -12.4309, -2.03262, 2.64", "-0.417371, -14.6111, -0.388018, 1.92", "-0.228239, -16.2495, 0.699796, 1.8", "-0.0447062, -17.5575, 1.41295, 1.92", "0.518452, -21.045, 2.95515, 1.32", "0.822731, -22.624, 3.52019, 1.56", "1.17715, -24.1872, 3.9641, 1.8", "1.51804, -25.4453, 4.10227, 2.04", "2.12572, -27.3954, 4.06405, 2.16", "2.54708, -28.6583, 3.86611, 1.32", "3.01672, -30.0897, 3.54542, 1.44", "3.55118, -31.9598, 3.21186, 1.44", "3.8813, -33.4277, 3.03203, 1.8", "4.0293, -34.4513, 2.95011, 2.04", "4.08289, -35.907, 2.90208, 1.68", "3.94294, -38.0856, 2.86289, 1.44", "3.7606, -39.1709, 2.85636, 1.8", "3.53338, -40.0614, 2.86668, 2.04", "3.16089, -41.2776, 2.90862, 1.92", "2.7603, -42.399, 2.94312, 1.56", "2.23285, -43.7723, 2.91714, 1.56", "1.87786, -44.6894, 2.77698, 0.72", "1.62884, -45.3775, 2.65489, 0.48", "1.43883, -45.9218, 2.57814, 0.48", "1.00024, -47.2108, 2.45154, 1.32", "0.637716, -48.2928, 2.35113, 1.68", "-0.0333188, -50.3058, 2.10105, 1.56", "-0.411306, -51.4377, 1.96286, 1.92", "-0.958783, -53.1203, 1.76856, 2.64", "-1.33819, -54.3709, 1.66473, 2.76", "-1.62049, -55.4825, 1.62772, 2.76", "-1.92751, -57.0577, 1.67708, 1.68", "-2.05056, -58.0701, 1.75095, 0.96", "-2.11411, -59.4048, 1.83468, 0.96", "-2.07681, -61.1261, 1.92677, 1.32", "-1.91633, -63.6015, 2.08984, 1.8", "-1.82273, -64.6819, 2.1764, 2.16", "-1.70567, -65.922, 2.26671, 2.28", "-1.56375, -67.4434, 2.34052, 0.84", "-1.49765, -68.4406, 2.35904, 0.84", "-1.45914, -69.9163, 2.32246, 1.08", "-1.56417, -71.463, 2.23417, 1.68", "-1.79308, -72.6639, 2.15598, 2.52", "-1.94722, -73.1565, 2.09539, 3.0", "-2.16545, -73.6882, 2.00293, 2.88", "-2.30736, -73.9808, 1.94882, 2.88", "-2.90274, -75.0898, 1.72952, 2.16", "-3.87679, -76.8049, 1.5484, 0.96", "-4.62356, -78.1089, 1.44966, 0.48", "-4.88518, -78.5591, 1.41721, 0.48", "-5.80283, -80.1213, 1.31691, 1.92", "-6.69449, -81.6026, 1.24509, 3.12", "-7.69891, -83.2916, 1.23273, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 10.7351, 0.167383, 2.16", "3.12077, 12.5512, 0.841873, 1.44", "3.60368, 14.2934, 1.45568, 2.16", "4.14565, 16.1946, 2.08061, 3.25", "4.52706, 17.481, 2.48795, 3.49", "4.96883, 18.934, 3.01996, 3.25", "5.27878, 19.9534, 3.39322, 2.88", "5.51743, 20.7271, 3.71498, 2.88", "5.77525, 21.5245, 4.01472, 2.52", "6.26484, 22.9319, 4.56586, 2.16", "6.97141, 24.8446, 5.33599, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.8533", "-2.81746, -27.7426, -0.718029, 0.8533", "-4.56437, -42.6406, -0.718029, 0.8533" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.9697, -5.05929, -15.9719, 1.56", "4.69342, -1.91094, -16.9117, 1.56", "4.63813, -0.590592, -17.3059, 1.2", "4.64847, 0.338114, -17.5906, 0.96", "4.71618, 1.43337, -17.8842, 0.96", "4.91943, 3.35235, -18.3851, 1.32", "5.22872, 5.5216, -18.8139, 1.32", "5.57588, 7.26454, -18.9692, 1.44", "5.97177, 8.73772, -19.0317, 1.44", "6.48942, 10.2814, -19.0079, 1.44", "6.93646, 11.4869, -18.9044, 1.68", "7.74699, 13.6749, -18.5618, 2.88", "8.0627, 14.6104, -18.3519, 3.73", "8.46934, 16.1123, -17.9926, 3.73", "8.85047, 18.108, -17.5411, 2.88", "9.12652, 20.401, -17.1084, 1.68", "9.18486, 21.4858, -16.9323, 1.2", "9.19678, 22.4912, -16.8293, 0.96", "9.1525, 23.8006, -16.6998, 1.68", "9.01415, 25.2692, -16.5638, 2.88", "8.8948, 25.9252, -16.5137, 3.49", "8.6899, 26.6859, -16.4857, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.9697, -5.05929, -15.9719, 1.32", "6.71126, -5.58293, -15.9735, 1.32", "7.40773, -5.78528, -16.0713, 0.84", "8.41921, -6.10469, -16.2994, 1.2", "9.53029, -6.52476, -16.6472, 1.44", "10.6607, -7.10964, -17.1254, 1.32", "11.5756, -7.75579, -17.5898, 1.56", "12.4867, -8.75766, -18.2919, 1.2", "12.7507, -9.14256, -18.5649, 1.2", "13.0591, -9.83401, -19.0458, 1.2", "13.3611, -11.0594, -19.8333, 2.64", "13.4774, -12.1082, -20.394, 4.45", "13.5389, -12.939, -20.6856, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.69891, -83.2916, 1.23273, 3.0", "-8.57059, -84.1311, 1.3849, 3.0", "-9.06631, -84.6827, 1.47948, 2.76", "-9.83627, -85.6611, 1.69133, 1.92", "-10.0834, -86.0364, 1.78589, 1.92", "-10.5585, -86.9124, 2.01462, 0.6", "-10.8299, -87.5248, 2.16145, 0.48", "-10.8858, -87.7667, 2.21043, 0.48", "-10.9582, -88.4019, 2.32334, 0.48", "-10.9611, -89.174, 2.43084, 0.84", "-10.8799, -90.0503, 2.53583, 1.08", "-10.722, -90.9125, 2.6599, 1.32", "-10.4982, -91.761, 2.76999, 0.96", "-10.2966, -92.3567, 2.84505, 0.72", "-10.0476, -92.974, 2.91394, 0.6", "-9.57947, -93.9411, 3.06254, 0.48", "-9.06035, -94.8363, 3.18598, 0.48", "-8.49869, -95.6813, 3.29552, 1.44", "-7.87011, -96.5522, 3.39439, 1.92", "-7.38906, -97.193, 3.48305, 2.04", "-6.76374, -98.0626, 3.61429, 1.44", "-6.0191, -99.1507, 3.75875, 0.84", "-5.81442, -99.4886, 3.83492, 0.12", "-5.58058, -99.9716, 4.00814, 0.12", "-5.32708, -100.774, 4.43912, 1.32", "-5.16799, -101.634, 5.00109, 1.68", "-5.12244, -102.042, 5.28448, 1.8", "-4.95213, -103.725, 6.49543, 1.2", "-4.90044, -104.447, 6.99633, 1.68", "-4.79483, -105.641, 7.82611, 1.2", "-4.73924, -106.399, 8.36243, 0.24", "-4.71896, -106.908, 8.73822, 0.24", "-4.71501, -107.813, 9.37997, 1.92", "-4.76263, -108.429, 9.75823, 1.8", "-5.21428, -110.337, 10.9, 0.72", "-5.59198, -111.303, 11.4488, 0.72", "-5.95416, -111.942, 11.8057, 0.48", "-6.28921, -112.384, 12.0682, 0.36", "-6.89034, -113.05, 12.4442, 0.36", "-7.23602, -113.469, 12.6342, 0.36", "-7.9186, -114.502, 13.1526, 0.6", "-8.07124, -114.887, 13.3769, 0.6", "-8.23226, -115.372, 13.7641, 0.36", "-8.35933, -115.732, 14.1054, 0.36", "-8.49701, -116.173, 14.5511, 0.36", "-8.93901, -117.44, 15.8955, 0.36", "-9.05862, -117.686, 16.1656, 0.36", "-9.47352, -118.479, 17.1337, 1.44", "-9.63718, -118.783, 17.5404, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.69891, -83.2916, 1.23273, 0.12", "-8.03454, -85.1777, 0.956966, 0.12", "-8.19502, -85.8554, 0.765462, 0.12", "-8.35619, -86.4822, 0.55386, 0.96", "-8.52141, -87.2049, 0.297691, 1.32", "-8.6266, -87.758, 0.0937825, 1.32", "-8.80496, -88.9655, -0.357069, 0.6", "-8.93007, -89.868, -0.811603, 0.36", "-8.94537, -90.1048, -0.946716, 0.36", "-8.91386, -90.6842, -1.28889, 0.36", "-8.86135, -91.0548, -1.47771, 0.36", "-8.80914, -91.4394, -1.63424, 0.36", "-8.77015, -92.1577, -1.84302, 0.36", "-8.79568, -92.6379, -1.9356, 0.36", "-8.87738, -93.3256, -2.1387, 0.36", "-9.01879, -94.1097, -2.37931, 1.08", "-9.25778, -95.1628, -2.69786, 1.68", "-9.45737, -95.9298, -2.92482, 1.8", "-9.74166, -96.9255, -3.19012, 1.56", "-10.1336, -98.4021, -3.63386, 1.2", "-10.2838, -99.0816, -3.84667, 0.36", "-10.3399, -99.4506, -3.93925, 0.36", "-10.3797, -99.8766, -3.97465, 0.36", "-10.4213, -100.899, -3.95004, 1.56", "-10.4222, -101.683, -3.88083, 1.92", "-10.399, -102.659, -3.72573, 1.92", "-10.3174, -103.994, -3.51999, 1.08", "-10.207, -105.13, -3.30675, 0.36", "-10.1019, -106.052, -3.10743, 0.36", "-10.0265, -106.692, -2.88365, 0.36", "-10.0024, -106.943, -2.77927, 0.36", "-9.95145, -107.57, -2.5134, 0.96", "-9.90726, -108.24, -2.21005, 1.8", "-9.8692, -108.999, -1.90957, 2.16", "-9.81058, -111.203, -1.08228, 1.92", "-9.81479, -112.284, -0.74005, 1.8", "-9.84749, -113.212, -0.541954, 1.8", "-9.92753, -114.321, -0.537529, 1.2", "-10.084, -115.916, -1.00208, 0.12", "-10.1093, -116.159, -1.12253, 0.12", "-10.1812, -116.824, -1.54294, 0.12", "-10.2661, -117.627, -2.05454, 0.84", "-10.3857, -118.959, -2.92761, 1.08", "-10.4706, -120.155, -3.68772, 1.92", "-10.519, -121.107, -4.19578, 2.88", "-10.5503, -121.709, -4.48746, 2.88", "-10.5916, -122.482, -4.84429, 1.92", "-10.6693, -123.583, -5.3066, 0.36", "-10.7204, -124.103, -5.47798, 0.36", "-10.793, -124.76, -5.63504, 1.08", "-10.8994, -125.582, -5.81677, 1.2", "-11.0669, -126.814, -6.04063, 0.48", "-11.208, -127.875, -6.20588, 0.48", "-11.341, -128.805, -6.3212, 0.48", "-11.5564, -130.151, -6.48913, 1.92", "-11.7281, -131.07, -6.5979, 2.4", "-11.889, -131.853, -6.67725, 2.64", "-12.1268, -132.921, -6.75408, 2.64", "-12.3173, -133.683, -6.82736, 2.04", "-12.6082, -134.67, -6.94598, 0.72", "-12.7672, -135.133, -6.99471, 0.72", "-12.9897, -135.789, -7.01735, 0.72", "-13.186, -136.428, -7.02866, 0.72", "-13.4063, -137.265, -7.02083, 0.24", "-13.5661, -138.011, -6.92514, 0.12", "-13.622, -138.426, -6.82718, 0.12", "-13.6627, -139.204, -6.58721, 0.12", "-13.6102, -139.981, -6.31016, 1.2", "-13.5005, -140.662, -6.06144, 2.28", "-13.062, -142.626, -5.36846, 1.8", "-12.7837, -143.691, -5.02741, 0.36", "-12.6444, -144.238, -4.90664, 0.36", "-12.4309, -145.355, -4.78009, 0.36", "-12.3171, -146.424, -4.77624, 0.36", "-12.2846, -147.107, -4.88262, 0.36", "-12.3242, -148.164, -5.22026, 0.36", "-12.519, -149.472, -5.69733, 1.56", "-12.738, -150.472, -6.07101, 2.4", "-12.8857, -151.027, -6.27601, 2.4", "-13.1264, -151.981, -6.60302, 2.4", "-13.4223, -153.447, -7.02904, 0.48", "-13.5116, -154.034, -7.15901, 0.48", "-13.5778, -154.962, -7.28148, 0.6", "-13.572, -155.761, -7.35789, 0.36", "-13.5239, -156.705, -7.43252, 0.36", "-13.457, -157.612, -7.48101, 0.48", "-13.3872, -158.273, -7.53591, 0.36", "-13.2958, -159.075, -7.647, 0.36", "-13.2301, -159.861, -7.80167, 0.36", "-13.2254, -160.365, -7.9448, 0.48", "-13.2768, -161.115, -8.23388, 0.48", "-13.4087, -162.018, -8.60271, 0.36", "-13.5242, -162.658, -8.86532, 0.84", "-13.735, -163.695, -9.24145, 1.32", "-14.0342, -165.05, -9.66588, 2.16", "-14.2894, -166.081, -9.95745, 2.64", "-14.5724, -167.143, -10.2238, 2.28", "-14.9119, -168.331, -10.4343, 1.8", "-15.25, -169.558, -10.5982, 1.2", "-15.4243, -170.262, -10.5852, 0.48", "-15.6595, -171.433, -10.43, 0.36", "-15.7931, -172.23, -10.2595, 0.36", "-15.8942, -173.045, -10.0405, 1.08", "-15.9466, -173.861, -9.76224, 1.08", "-15.9214, -176.187, -8.91751, 1.44", "-15.8292, -177.498, -8.44405, 1.44", "-15.7313, -178.407, -8.08036, 1.32", "-15.6331, -179.292, -7.76329, 0.48", "-15.5563, -180.023, -7.568, 0.48", "-15.5238, -180.47, -7.47291, 1.08", "-15.4859, -181.311, -7.3631, 1.68", "-15.4828, -182.686, -7.13369, 2.28", "-15.5372, -183.626, -7.00585, 2.4", "-15.6772, -184.833, -6.91455, 1.32", "-15.8266, -185.648, -6.88324, 0.6", "-15.9555, -186.18, -6.92907, 0.48", "-16.231, -187.019, -7.16467, 0.48", "-16.5169, -187.765, -7.49687, 0.48", "-16.8318, -188.594, -8.03739, 1.08", "-17.0581, -189.307, -8.55394, 1.92", "-17.4553, -190.825, -9.77157, 1.92", "-17.7195, -192.072, -10.8113, 2.28", "-17.8568, -192.897, -11.5036, 2.76", "-18.1261, -194.901, -13.1128, 2.76", "-18.298, -196.448, -14.2361, 0.72", "-18.3979, -197.64, -14.989, 0.72", "-18.4615, -198.567, -15.4487, 0.96", "-18.5272, -199.339, -15.7523, 1.56", "-18.6516, -200.269, -16.0333, 1.8", "-18.792, -201.096, -16.1656, 1.44", "-18.925, -202.057, -16.2858, 0.48", "-18.9414, -202.439, -16.3169, 0.6", "-18.9115, -203.459, -16.3914, 0.6", "-18.8791, -203.937, -16.4136, 0.48", "-18.797, -205.04, -16.4443, 0.48", "-18.7516, -205.901, -16.4565, 0.48", "-18.7355, -206.963, -16.4241, 0.48", "-18.7656, -208.016, -16.3952, 0.84", "-18.8766, -209.381, -16.3573, 1.68", "-19.0723, -210.863, -16.3139, 2.4", "-19.2248, -211.828, -16.2824, 2.4", "-19.4319, -213.174, -16.2522, 0.6", "-19.5363, -214.109, -16.235, 0.6", "-19.5669, -215.325, -16.2565, 0.6", "-19.4788, -216.404, -16.3023, 0.6", "-19.3119, -217.291, -16.3305, 1.08", "-19.0816, -218.162, -16.3441, 1.44", "-18.8396, -218.934, -16.3459, 0.84", "-18.5648, -219.792, -16.307, 0.96", "-18.2865, -220.776, -16.2426, 0.96", "-18.1331, -221.507, -16.1897, 0.72", "-18.0606, -222.055, -16.1505, 0.48", "-18.0275, -222.548, -16.1136, 0.48", "-18.0352, -223.231, -16.0503, 1.32", "-18.1328, -224.354, -15.9287, 1.8", "-18.2461, -225.172, -15.8875, 2.04", "-18.4384, -226.275, -15.8936, 1.92", "-18.5962, -227.097, -15.9299, 1.44", "-18.801, -228.12, -16.0296, 0.48", "-18.9824, -228.99, -16.1807, 0.48", "-19.2659, -230.391, -16.5081, 1.44", "-19.5036, -231.609, -16.8181, 2.52", "-19.6941, -232.667, -17.0971, 3.25", "-19.9199, -234.18, -17.508, 2.28", "-20.0231, -235.231, -17.7806, 1.8", "-20.0662, -236.417, -18.0533, 0.96", "-20.0556, -238.012, -18.3574, 0.96", "-20.0073, -239.209, -18.5812, 0.96", "-19.9188, -240.746, -18.8477, 2.52", "-19.8388, -241.884, -18.9872, 2.52", "-19.688, -243.785, -19.1366, 1.44", "-19.6066, -244.721, -19.1862, 0.96", "-19.5032, -245.813, -19.2423, 0.72", "-19.4569, -246.37, -19.2651, 0.72", "-19.4028, -247.447, -19.3451, 0.72", "-19.41, -248.255, -19.4509, 0.72", "-19.443, -249.163, -19.6889, 1.08", "-19.4413, -250.055, -20.1192, 1.44", "-19.4235, -250.382, -20.3247, 1.44", "-19.3159, -251.733, -21.3383, 0.36", "-19.1966, -252.879, -22.2935, 0.36", "-19.0205, -254.23, -23.4299, 1.32", "-18.7713, -255.784, -24.6819, 0.48", "-18.6529, -256.423, -25.1549, 0.48", "-18.3806, -257.749, -26.0484, 1.92", "-18.2942, -258.161, -26.2867, 2.76", "-18.1122, -259.13, -26.7517, 2.4", "-18.0058, -260.049, -27.0108, 1.32", "-17.9947, -260.58, -27.1746, 0.12", "-18.0343, -261.095, -27.3955, 0.12", "-18.0861, -261.352, -27.532, 0.12", "-18.2928, -262.133, -28.0429, 1.08", "-18.4351, -262.665, -28.4497, 1.08", "-18.9405, -264.918, -30.4446, 0.24", "-18.971, -265.236, -30.7382, 0.24", "-18.9356, -265.836, -31.266, 0.24", "-18.7451, -266.555, -31.7962, 0.24", "-18.3724, -267.338, -32.2449, 0.24", "-17.7984, -268.332, -32.7604, 1.08", "-17.2595, -269.202, -33.1066, 2.04", "-16.7925, -270.009, -33.4411, 2.04", "-16.2568, -271.012, -33.8641, 1.44", "-16.0514, -271.518, -34.0564, 0.96", "-15.5149, -273.414, -34.6583, 0.72", "-15.3657, -274.194, -34.8424, 0.36", "-15.2992, -275.122, -35.0397, 0.36", "-15.3099, -275.537, -35.0959, 0.36", "-15.4082, -276.55, -35.1209, 1.32", "-15.5082, -277.401, -35.0592, 2.04", "-15.5571, -277.811, -34.9945, 2.4", "-15.6359, -278.406, -34.8963, 2.4", "-15.842, -279.964, -34.6383, 0.48", "-15.9469, -280.762, -34.5137, 0.36", "-16.122, -282.212, -34.3381, 0.36", "-16.2147, -283.028, -34.2487, 0.36", "-16.3158, -283.924, -34.1643, 1.68", "-16.369, -284.592, -34.1151, 2.16", "-16.3824, -285.02, -34.098, 2.16", "-16.3657, -286.147, -34.0476, 0.96", "-16.3231, -286.817, -34.0472, 0.36", "-16.2847, -287.22, -34.0926, 0.36", "-16.1641, -288.213, -34.3278, 0.36", "-16.0449, -289.185, -34.6335, 0.36", "-15.9607, -289.865, -34.8564, 0.36", "-15.8445, -290.942, -35.2068, 1.44", "-15.7479, -292.422, -35.6515, 2.4", "-15.7285, -293.195, -35.845, 2.52", "-15.7407, -293.564, -35.9174, 2.52", "-15.8503, -294.891, -36.0859, 0.48", "-15.9284, -295.716, -36.1453, 0.36", "-16.09, -297.182, -36.0816, 0.36", "-16.1662, -297.843, -35.9803, 1.32", "-16.2712, -298.669, -35.8203, 1.92", "-16.3572, -299.373, -35.6927, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.97141, 24.8446, 5.33599, 1.92", "6.83609, 28.5124, 5.55218, 1.92", "6.7404, 30.2799, 5.68942, 2.28", "6.65671, 31.8974, 5.87687, 1.8", "6.57489, 33.7904, 6.12612, 1.8", "6.49106, 36.3635, 6.48087, 1.68", "6.42794, 39.3636, 6.89886, 2.4", "6.43779, 41.6402, 7.36847, 2.88", "6.45296, 42.8468, 7.59429, 2.76", "6.49943, 43.9497, 7.81478, 2.76", "6.58007, 44.7824, 8.02054, 2.76", "6.7387, 45.7274, 8.28489, 2.52", "7.22496, 47.7405, 8.86863, 1.68", "7.54276, 48.9128, 9.21553, 1.44", "7.91109, 50.2435, 9.59537, 1.68", "8.60281, 52.6635, 10.3368, 2.64", "9.03802, 54.1365, 10.8125, 2.88", "9.30031, 54.9708, 11.0905, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.97141, 24.8446, 5.33599, 0.84", "6.54266, 24.6647, 5.53966, 0.84", "5.85345, 24.5327, 5.86834, 0.84", "5.39073, 24.5676, 6.16666, 0.84", "5.26115, 24.6156, 6.2873, 0.84", "4.97116, 24.8513, 6.64349, 0.72", "4.80617, 25.1398, 7.07779, 0.72", "4.77569, 25.342, 7.39305, 0.72", "4.87521, 25.7291, 7.95861, 0.96", "5.05913, 26.0227, 8.3931, 1.44", "5.33432, 26.3342, 8.83344, 1.56", "5.95681, 26.8739, 9.60187, 1.32", "6.41207, 27.1988, 10.077, 0.48", "6.81224, 27.4486, 10.4208, 0.6", "7.60828, 27.8712, 10.9693, 0.6", "8.09064, 28.0871, 11.2076, 1.68", "8.92901, 28.3767, 11.3828, 1.92", "9.51793, 28.5433, 11.1914, 1.56", "11.0181, 28.7571, 9.50525, 0.48", "11.2687, 28.7631, 8.99307, 0.48", "11.4497, 28.7566, 8.53211, 0.84", "11.53, 28.7363, 8.21115, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.460471", "-6.31129, -57.5385, -0.718029, 0.460471", "-8.0582, -72.4364, -0.718029, 0.460471" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "8.6899, 26.6859, -16.4857, 0.96", "10.9617, 28.9115, -17.1304, 0.96", "12.1684, 30.2411, -17.3825, 0.6", "13.2371, 31.5777, -17.5654, 0.6", "13.7654, 32.3284, -17.6437, 1.32", "14.1903, 33.0231, -17.6704, 1.56", "14.9062, 34.4091, -17.6476, 0.96", "15.5199, 36.1801, -17.3702, 0.6", "15.7322, 37.0412, -17.2016, 0.48", "15.8827, 37.8022, -17.0506, 0.48", "16.1835, 39.3559, -16.7563, 0.72", "16.5728, 41.2217, -16.4621, 1.8", "16.9915, 42.9104, -16.253, 2.04", "17.4108, 44.2593, -16.1261, 2.64", "17.9707, 45.7471, -16.0828, 3.25", "18.5402, 47.0756, -16.1213, 3.25", "19.1753, 48.4031, -16.2387, 2.88", "20.0801, 50.1385, -16.427, 0.84", "20.4576, 50.8417, -16.5012, 0.6", "21.3985, 52.6508, -16.6651, 2.4", "22.0306, 53.9336, -16.7534, 3.25", "22.6047, 55.1564, -16.7949, 2.88", "23.5322, 57.1853, -16.7981, 0.96", "24.5196, 59.343, -16.8118, 0.84", "25.1303, 60.6718, -16.8307, 0.48", "25.5516, 61.5752, -16.8386, 0.48", "26.363, 63.3246, -16.8824, 0.48", "26.9949, 64.7001, -16.947, 1.92", "27.7771, 66.3351, -17.0831, 3.37", "28.3347, 67.3942, -17.2197, 3.49", "29.0758, 68.6364, -17.4274, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "8.6899, 26.6859, -16.4857, 0.84", "7.26212, 27.9174, -16.9946, 0.84", "6.96358, 28.3395, -17.1981, 0.72", "6.80048, 28.7096, -17.3787, 0.72", "6.71558, 29.1857, -17.6458, 0.72", "6.68229, 30.0553, -18.288, 0.84", "6.67667, 31.1118, -19.1561, 0.72", "6.78025, 31.8521, -19.8096, 0.48", "6.89986, 32.5462, -20.4394, 0.48", "7.11109, 33.7576, -21.55, 0.72", "7.28058, 35.0265, -22.7224, 0.48", "7.29764, 35.3477, -23.0482, 0.48", "7.27653, 35.6268, -23.3238, 0.48", "7.1818, 36.1343, -23.8133, 1.32", "7.04242, 36.6351, -24.2976, 2.04", "6.80096, 37.3233, -24.9167, 1.56", "6.30478, 38.8172, -26.1868, 0.36", "6.19801, 39.1717, -26.5057, 0.36", "5.81969, 40.5144, -27.8108, 2.4", "5.6781, 41.0771, -28.4115, 3.25", "5.60012, 41.4341, -28.8241, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "13.5389, -12.939, -20.6856, 0.24", "13.0237, -14.6344, -21.1831, 0.24", "12.8769, -15.2349, -21.3835, 0.24", "12.67, -16.3686, -21.7468, 1.92", "12.4987, -17.2701, -22.0156, 2.52", "12.3407, -17.9996, -22.2194, 2.4", "12.1634, -18.7511, -22.4209, 1.8", "11.9526, -19.7329, -22.6735, 0.24", "11.6771, -20.8956, -22.9252, 0.24", "11.3799, -22.0574, -23.1193, 0.24", "11.1573, -22.8598, -23.2217, 0.24", "10.9351, -23.5977, -23.3238, 1.68", "10.5527, -24.7664, -23.4834, 1.92", "10.0968, -26.0614, -23.6731, 2.28", "9.7183, -27.0683, -23.8414, 3.12", "9.31508, -28.0961, -24.0265, 3.12", "8.54502, -29.9258, -24.337, 0.24", "8.21939, -30.6253, -24.4433, 0.24", "8.13886, -30.7776, -24.4642, 0.48", "7.78027, -31.3698, -24.5266, 0.48", "7.2447, -32.1587, -24.565, 0.48", "6.8868, -32.6957, -24.5416, 0.48", "6.72709, -32.9754, -24.487, 0.12", "6.49641, -33.5742, -24.3797, 0.12", "6.40391, -33.9034, -24.3258, 0.12", "6.31546, -34.3853, -24.2606, 0.72", "6.19714, -35.3486, -24.1679, 0.96", "6.13225, -35.9555, -24.1498, 0.24", "6.00389, -37.1493, -24.1606, 0.24", "5.94842, -37.6696, -24.152, 0.96", "5.8795, -38.27, -24.1336, 1.44", "5.77735, -39.0055, -24.1079, 1.56", "5.60275, -40.0086, -24.0755, 0.48", "5.47734, -40.6605, -24.0595, 0.24", "5.24189, -41.8603, -24.0237, 1.68", "5.10237, -42.7041, -24.0158, 2.88", "4.93467, -43.928, -23.9869, 2.88", "4.77174, -45.54, -23.9377, 0.24", "4.69011, -46.8834, -23.881, 0.24", "4.67739, -47.3863, -23.863, 0.24", "4.68998, -48.9395, -23.8489, 0.24", "4.73264, -49.9263, -23.8396, 1.8", "4.8223, -51.008, -23.8188, 2.76", "4.99296, -52.4858, -23.7807, 0.48", "5.0869, -53.325, -23.757, 0.48", "5.13659, -53.9832, -23.7401, 0.6", "5.15948, -54.7181, -23.7021, 0.6", "5.15321, -55.2877, -23.6872, 0.36", "5.1236, -55.8972, -23.6705, 0.36", "5.0063, -56.8865, -23.7134, 0.48", "4.79678, -58.1952, -23.8237, 0.48", "4.62297, -59.0742, -23.9235, 1.44", "4.38898, -60.1854, -24.123, 2.76", "4.21244, -61.1117, -24.3418, 3.0", "3.90054, -63.0324, -24.9698, 0.12", "3.81947, -63.5958, -25.1954, 0.12", "3.70964, -64.3914, -25.5607, 0.12", "3.59542, -65.3026, -26.0095, 1.32", "3.49411, -66.1804, -26.4317, 2.4", "3.26197, -67.9267, -27.2156, 0.12", "3.13328, -68.7802, -27.5425, 0.12", "3.0305, -69.288, -27.7193, 0.84", "2.88944, -69.8479, -27.8891, 0.96", "2.51506, -71.1663, -28.1953, 0.12", "2.22246, -72.1509, -28.3839, 0.12", "2.00912, -72.9268, -28.4868, 1.32", "1.82896, -73.663, -28.5797, 1.8", "1.61246, -74.6567, -28.6886, 0.12", "1.33824, -75.9627, -28.8056, 0.12", "1.20436, -76.6715, -28.853, 1.56", "1.08434, -77.5151, -28.9018, 2.52", "1.00344, -78.2526, -28.9372, 2.64", "0.87364, -79.8336, -28.9957, 1.32", "0.816985, -80.5477, -29.0129, 0.12", "0.805021, -80.6794, -29.0161, 0.24", "0.709157, -81.6035, -29.0564, 0.24", "0.593788, -82.6842, -29.1221, 0.24", "0.514838, -83.4055, -29.2252, 0.24", "0.461441, -83.9028, -29.3313, 0.24", "0.408109, -84.3886, -29.4541, 1.56", "0.307928, -85.1485, -29.6613, 2.28", "0.201605, -85.8453, -29.8782, 2.28", "-0.0369904, -87.4122, -30.4062, 0.48", "-0.180595, -88.319, -30.7155, 0.48", "-0.199113, -88.434, -30.753, 0.72", "-0.344027, -89.2403, -30.9977, 0.96", "-0.480166, -89.9185, -31.1708, 0.48", "-0.56879, -90.2737, -31.2622, 0.48", "-0.730584, -90.854, -31.368, 0.48", "-0.954118, -91.6235, -31.4965, 0.6", "-1.02697, -91.8843, -31.5349, 0.24", "-1.23223, -92.7064, -31.6446, 0.24", "-1.4775, -93.9068, -31.7763, 1.56", "-1.64414, -94.8735, -31.8808, 2.4", "-1.77093, -95.739, -31.9712, 2.52", "-1.83312, -96.2213, -32.0179, 2.52", "-2.02544, -97.7936, -32.1284, 0.24", "-2.20774, -99.7206, -32.2081, 0.24", "-2.24036, -100.228, -32.2169, 0.96", "-2.26832, -100.96, -32.2356, 1.44", "-2.26964, -101.453, -32.2415, 1.68", "-2.23806, -102.521, -32.2638, 0.24", "-2.09688, -104.362, -32.3097, 0.24", "-1.98208, -105.332, -32.3486, 1.56", "-1.89805, -105.938, -32.3861, 2.16", "-1.8001, -106.59, -32.4451, 1.8", "-1.66697, -107.707, -32.5876, 0.12", "-1.6246, -108.344, -32.7019, 0.12", "-1.63129, -108.464, -32.7252, 0.6", "-1.71086, -108.963, -32.8181, 0.12", "-1.80023, -109.334, -32.8793, 0.12", "-2.0641, -110.238, -32.9995, 0.12", "-2.18733, -110.66, -33.0333, 0.6", "-2.37154, -111.373, -33.0117, 0.6", "-2.47607, -111.853, -32.9568, 0.12", "-2.58886, -112.435, -32.8566, 0.12", "-2.68785, -112.921, -32.7619, 0.6", "-2.81578, -113.628, -32.6126, 0.6", "-3.03856, -114.974, -32.3268, 0.12", "-3.17305, -115.867, -32.1437, 0.12", "-3.29606, -116.766, -31.9774, 1.44", "-3.41095, -117.695, -31.8347, 2.4", "-3.45846, -118.13, -31.7862, 2.52", "-3.52475, -118.83, -31.7506, 2.16", "-3.53707, -119.685, -31.7771, 0.12", "-3.49402, -120.416, -31.7593, 0.36", "-3.44197, -120.891, -31.7256, 0.12", "-3.39317, -121.252, -31.6852, 0.12", "-3.31578, -121.78, -31.6244, 0.12", "-3.16564, -122.717, -31.5143, 0.12", "-2.97172, -123.795, -31.3976, 0.12", "-2.93716, -124.036, -31.3804, 0.12", "-2.88383, -124.77, -31.359, 0.12", "-2.87681, -125.623, -31.4015, 1.8", "-2.88769, -125.986, -31.4437, 2.28", "-2.94749, -126.714, -31.5059, 1.92", "-3.0486, -127.911, -31.5466, 0.36", "-3.1351, -128.827, -31.5361, 0.36", "-3.2094, -129.674, -31.4951, 1.2", "-3.25325, -130.426, -31.3734, 0.72", "-3.23875, -131.961, -31.1352, 0.12", "-3.17792, -133.345, -30.9285, 0.12", "-3.11181, -134.251, -30.8012, 1.68", "-3.06311, -134.955, -30.7041, 1.8", "-2.96022, -136.828, -30.4244, 1.44", "-2.88461, -138.713, -30.2274, 0.24", "-2.79486, -140.523, -30.0697, 0.12", "-2.75192, -141.362, -29.9747, 0.12", "-2.70122, -142.806, -29.7668, 0.12", "-2.68869, -143.508, -29.6752, 1.2", "-2.66702, -144.472, -29.579, 2.52", "-2.60964, -145.979, -29.2619, 0.48", "-2.57668, -146.325, -29.1838, 0.48", "-2.46268, -147.18, -28.99, 0.48", "-2.30357, -148.108, -28.8012, 0.72", "-2.09061, -149.311, -28.5777, 0.24", "-1.88014, -150.584, -28.2605, 0.12", "-1.69194, -151.538, -28.0294, 0.12", "-1.55827, -152.057, -27.9175, 1.08", "-1.37985, -152.629, -27.7771, 1.32", "-1.21074, -153.093, -27.6701, 1.08", "-0.74583, -154.301, -27.4253, 0.36", "-0.0252742, -156.106, -27.1812, 0.36", "0.468719, -157.321, -27.0088, 1.56", "0.896246, -158.381, -26.8661, 2.16", "1.27729, -159.225, -26.7685, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "13.5389, -12.939, -20.6856, 0.36", "14.659, -13.9858, -20.9727, 0.36", "15.0734, -14.1535, -21.1507, 0.36", "15.3142, -14.1794, -21.2829, 0.36", "15.5354, -14.1891, -21.4054, 0.36", "16.07, -14.2157, -21.6922, 0.72", "16.8852, -14.2832, -22.1259, 0.96", "17.4125, -14.2735, -22.431, 0.96", "18.1537, -14.2752, -22.8664, 0.48", "18.8322, -14.3274, -23.2651, 0.36", "19.1691, -14.4226, -23.4654, 0.36", "19.416, -14.6443, -23.6024, 0.36", "19.4814, -14.7964, -23.6335, 0.36", "19.6318, -15.3144, -23.6975, 0.36", "19.7702, -15.8057, -23.7309, 1.56", "19.9692, -16.4051, -23.7573, 2.52", "20.2004, -16.9388, -23.8032, 2.4", "20.7506, -17.8935, -23.9135, 0.36", "20.9713, -18.1929, -23.9619, 0.36", "21.4498, -18.7343, -24.0703, 0.36", "21.9256, -19.1997, -24.1877, 0.36", "22.5975, -19.7989, -24.3513, 1.44", "23.3235, -20.397, -24.5307, 3.25", "24.1465, -21.0285, -24.7409, 4.69", "24.2988, -21.1488, -24.7844, 4.93", "25.1917, -21.9232, -25.0861, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-16.3572, -299.373, -35.6927, 0.12", "-17.2306, -300.639, -36.6859, 0.12", "-17.6011, -301.212, -37.1472, 0.12", "-17.731, -301.376, -37.3258, 0.12", "-17.9022, -301.562, -37.5193, 0.36", "-18.8923, -302.585, -38.5061, 0.12", "-19.2142, -302.886, -38.8377, 0.12", "-19.2142, -302.886, -38.8377, 0.36", "-20.4108, -303.977, -40.127, 0.36", "-21.1414, -304.685, -40.9368, 2.52", "-21.4031, -304.965, -41.2376, 2.88", "-23.5895, -307.488, -43.6728, 0.24", "-23.876, -307.844, -43.9896, 0.12", "-24.1091, -308.187, -44.2597, 0.12", "-24.3294, -308.641, -44.546, 0.48", "-24.5005, -309.14, -44.8307, 0.48", "-24.6346, -309.656, -45.0708, 0.12", "-24.7356, -310.578, -45.2816, 0.12", "-24.8098, -311.121, -45.46, 0.12", "-24.9011, -311.741, -45.6909, 0.84", "-24.97, -312.144, -45.8233, 0.84", "-25.2091, -313.665, -46.2855, 0.12", "-25.2918, -314.328, -46.4649, 0.12", "-25.5372, -316.047, -46.8619, 2.64", "-25.6367, -316.589, -46.9595, 2.28", "-25.9353, -318.094, -47.024, 0.12", "-26.0479, -318.627, -46.9569, 0.12", "-26.2992, -319.625, -46.6118, 0.12", "-26.5643, -320.316, -46.2341, 1.2", "-26.614, -320.416, -46.1551, 1.44", "-27.3957, -321.747, -44.9011, 0.12", "-27.6507, -322.1, -44.4643, 0.12", "-27.8953, -322.374, -44.0289, 0.12", "-28.2164, -322.67, -43.3786, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.3572, -299.373, -35.6927, 0.6", "-16.2305, -300.121, -36.859, 0.6", "-16.2275, -300.214, -37.017, 0.6", "-16.2287, -300.614, -37.6883, 1.32", "-16.2362, -301.052, -38.3852, 2.28", "-16.2447, -301.545, -39.1687, 2.04", "-16.2725, -303.164, -41.7442, 0.96", "-16.3069, -303.547, -42.4209, 0.48", "-16.3334, -303.746, -42.7918, 0.48", "-16.3816, -303.958, -43.2186, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.30031, 54.9708, 11.0905, 1.2", "9.23837, 56.5185, 10.9104, 1.2", "9.21281, 57.9597, 10.8818, 1.32", "9.20819, 58.814, 10.9003, 1.44", "9.22306, 59.9081, 10.9605, 0.96", "9.28662, 61.3812, 11.0548, 1.08", "9.43784, 63.3647, 11.1807, 1.56", "9.71614, 65.0761, 11.3303, 0.96", "9.94989, 66.0312, 11.4233, 0.6", "10.2433, 66.9441, 11.5083, 1.2", "10.579, 67.8027, 11.5836, 2.04", "10.8737, 68.4717, 11.6362, 2.16", "11.49, 69.8207, 11.7539, 1.2", "11.8996, 70.7937, 11.8409, 0.84", "12.2365, 71.8237, 11.9056, 0.48", "12.4014, 72.5472, 11.937, 0.48", "12.5883, 74.1753, 11.9798, 0.48", "12.6211, 75.3726, 11.9916, 0.84", "12.5709, 76.7235, 11.9744, 1.92", "12.4727, 78.4235, 11.897, 2.52", "12.4256, 79.2938, 11.8304, 2.28", "12.4005, 80.7293, 11.717, 0.6", "12.4196, 81.2224, 11.6846, 0.6", "12.4736, 81.9321, 11.6642, 0.48", "12.5998, 83.1331, 11.6979, 0.48", "12.7267, 84.0362, 11.7851, 0.96", "12.8552, 84.8408, 11.8807, 1.8", "13.0683, 85.9783, 12.0548, 2.04", "13.2798, 87.1771, 12.2498, 2.04", "13.523, 88.9007, 12.5573, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.30031, 54.9708, 11.0905, 1.32", "10.351, 56.472, 11.1851, 1.32", "10.7858, 57.1251, 11.1364, 0.96", "11.5342, 58.1987, 10.9472, 1.32", "11.9967, 58.7869, 10.7622, 1.68", "12.5991, 59.4573, 10.4809, 1.2", "13.3417, 60.2096, 10.1053, 0.84", "14.1374, 60.9435, 9.61394, 0.72", "14.5988, 61.3382, 9.33777, 0.84", "15.4055, 61.9045, 8.82341, 0.6", "15.9348, 62.2063, 8.48575, 0.6", "16.3824, 62.3917, 8.21514, 1.32", "17.5926, 62.7734, 7.7282, 1.8", "18.3785, 63.1253, 7.65426, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "29.0758, 68.6364, -17.4274, 0.48", "29.6009, 69.85, -17.1843, 0.48", "29.8799, 70.5789, -17.0245, 0.48", "30.0533, 71.0756, -16.9036, 0.48", "30.3506, 71.9638, -16.6936, 0.72", "30.5234, 72.4994, -16.573, 0.48", "30.725, 73.1441, -16.4342, 0.48", "30.9481, 74.0931, -16.2549, 0.48", "31.1347, 74.951, -16.0947, 1.8", "31.2392, 75.3899, -16.0159, 2.64", "31.3765, 75.8866, -15.9339, 2.88", "31.552, 76.4566, -15.8323, 2.88", "31.7633, 77.1024, -15.7153, 2.04", "32.0446, 77.9176, -15.5724, 0.48", "32.1609, 78.2416, -15.5133, 0.36", "32.601, 79.4364, -15.2955, 0.36", "32.8916, 80.2013, -15.1611, 1.44", "33.1954, 80.9003, -15.0489, 2.52", "33.5293, 81.5796, -14.9514, 2.64", "33.7879, 82.0574, -14.8928, 2.52", "34.3895, 83.1037, -14.7891, 0.48", "34.6495, 83.5429, -14.7579, 0.36", "35.1447, 84.3952, -14.7119, 0.36", "35.3743, 84.7991, -14.6839, 0.36", "35.7422, 85.4746, -14.6383, 0.36", "36.1378, 86.2377, -14.5849, 1.44", "36.3541, 86.7077, -14.5514, 1.56", "36.5975, 87.3292, -14.5123, 0.24", "36.8264, 88.0687, -14.4689, 0.24", "37.006, 88.7123, -14.4211, 0.72", "37.0958, 89.0373, -14.3917, 0.72", "37.2022, 89.4134, -14.3514, 0.48", "37.2804, 89.6587, -14.3211, 0.36", "37.428, 90.051, -14.2522, 0.36", "37.6334, 90.5112, -14.133, 0.84", "38.0183, 91.2419, -13.9103, 2.4", "38.1805, 91.5353, -13.8252, 3.0", "38.5092, 92.1134, -13.6632, 3.0", "38.9154, 92.8427, -13.4774, 1.68", "39.3133, 93.5759, -13.3075, 0.36", "39.6258, 94.182, -13.1878, 0.36", "39.9881, 94.9807, -13.0549, 0.36", "40.2365, 95.6218, -12.9729, 1.68", "40.3813, 96.059, -12.9347, 2.52", "40.4798, 96.4059, -12.9188, 2.64", "40.5952, 96.8535, -12.9051, 2.28", "40.7854, 97.5755, -12.8806, 0.48", "41.1017, 98.5593, -12.8695, 0.48", "41.3728, 99.2857, -12.8791, 0.48", "41.5112, 99.6064, -12.8855, 0.96", "41.7688, 100.154, -12.8951, 1.56", "41.9705, 100.545, -12.8974, 1.56", "42.3887, 101.305, -12.889, 0.48", "42.5195, 101.537, -12.8893, 0.12", "42.8922, 102.212, -12.893, 0.12", "43.2986, 102.972, -12.8954, 2.16", "43.4964, 103.358, -12.8935, 2.88", "43.646, 103.669, -12.8836, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "29.0758, 68.6364, -17.4274, 0.48", "29.4279, 70.2823, -18.5748, 0.48", "29.4698, 70.5234, -18.7377, 0.48", "29.5509, 71.0426, -19.1163, 0.72", "29.6119, 71.3986, -19.401, 0.72", "29.7407, 72.0653, -19.9374, 0.24", "29.8016, 72.3637, -20.1812, 0.12", "29.8893, 72.7845, -20.5086, 0.84", "30.0249, 73.3289, -20.9725, 0.12", "30.1925, 73.9138, -21.4874, 0.12", "30.2977, 74.2451, -21.76, 1.68", "30.4315, 74.6432, -22.0403, 2.4", "30.6649, 75.3338, -22.5105, 1.8", "30.8882, 75.9959, -22.9529, 0.12", "30.9752, 76.2998, -23.1416, 0.12", "31.1084, 76.9126, -23.5183, 1.92", "31.1844, 77.3287, -23.8001, 2.4", "31.37, 78.424, -24.5935, 0.6", "31.4402, 78.9339, -24.975, 0.48", "31.4908, 79.3452, -25.2828, 0.48", "31.5716, 79.9445, -25.7401, 1.2", "31.6716, 80.6223, -26.2928, 0.48", "31.7185, 80.877, -26.4952, 0.12", "31.8444, 81.3888, -26.8246, 0.12", "31.9414, 81.704, -27.0005, 0.72", "32.0589, 82.0165, -27.2012, 0.72", "32.3194, 82.7567, -27.6865, 0.12", "32.3739, 82.9263, -27.8056, 0.12", "32.5449, 83.4342, -28.1905, 2.28", "32.6454, 83.7029, -28.4329, 2.52", "33.1146, 84.8797, -29.6177, 0.12", "33.3304, 85.3556, -30.1096, 0.12", "33.5715, 85.8353, -30.6072, 1.44", "33.7112, 86.1021, -30.89, 1.8", "34.0187, 86.6744, -31.5189, 1.32", "34.1822, 87.0092, -31.8724, 0.12", "34.4261, 87.5315, -32.3573, 0.12", "34.7479, 88.2554, -32.9963, 1.56", "34.8426, 88.5, -33.195, 1.92", "35.1031, 89.3077, -33.8171, 0.12", "35.2459, 89.8054, -34.1784, 0.12", "35.3286, 90.1134, -34.4032, 0.96", "35.3585, 90.2281, -34.4904, 0.96", "35.5047, 90.7143, -34.9036, 0.12", "35.6246, 91.0922, -35.254, 0.12", "35.7912, 91.6474, -35.7925, 1.32", "35.867, 91.9062, -36.0461, 1.8", "35.9564, 92.2452, -36.367, 1.32", "36.2052, 93.2052, -37.2291, 0.12", "36.2353, 93.3176, -37.3463, 0.12", "36.3525, 93.7187, -37.7909, 0.36", "36.4369, 94.0607, -38.161, 0.36", "36.5674, 94.5239, -38.6842, 1.92", "36.7015, 94.9067, -39.1171, 2.76", "37.3871, 96.6088, -40.9568, 0.36", "37.4485, 96.7509, -41.1153, 0.36", "37.6934, 97.2814, -41.7208, 0.36", "37.9403, 97.8078, -42.3232, 0.36", "38.0866, 98.1024, -42.6577, 0.36", "38.3625, 98.6027, -43.2154, 0.72", "38.7459, 99.184, -43.8483, 0.12", "38.8417, 99.3224, -44.0103, 0.12", "39.0268, 99.5732, -44.3289, 1.92", "39.3477, 100.093, -44.9799, 2.52", "39.6987, 100.644, -45.7573, 1.44", "39.968, 100.958, -46.3017, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "5.60012, 41.4341, -28.8241, 0.12", "5.57127, 43.1652, -29.3605, 0.12", "5.55697, 43.9195, -29.6125, 0.6", "5.56009, 44.4969, -29.8036, 0.12", "5.56285, 44.7597, -29.8849, 0.12", "5.56321, 45.1151, -29.984, 0.12", "5.56192, 45.5412, -30.0897, 0.24", "5.56926, 45.9385, -30.1949, 0.12", "5.60234, 46.2815, -30.3286, 0.12", "5.68155, 46.8501, -30.5826, 0.12", "5.78029, 47.4083, -30.8536, 1.32", "5.86991, 47.787, -31.0345, 1.8", "6.16633, 48.8568, -31.5153, 0.84", "6.4121, 49.5156, -31.89, 0.12", "6.51101, 49.7229, -32.0176, 0.12", "6.8656, 50.3753, -32.4059, 1.8", "7.08768, 50.7669, -32.6208, 2.16", "7.30673, 51.1303, -32.8108, 1.8", "8.45029, 52.8209, -33.7624, 0.24", "8.95504, 53.5023, -34.1757, 0.24", "9.47446, 54.1869, -34.6, 0.24", "9.70945, 54.4906, -34.7976, 0.24", "10.4865, 55.4884, -35.4936, 2.28", "11.566, 56.8681, -36.4904, 0.24", "11.7344, 57.0899, -36.6412, 0.24", "12.2414, 57.7491, -37.128, 0.24", "12.8007, 58.4581, -37.6601, 1.44", "13.2368, 59.0468, -38.0672, 1.8", "13.712, 59.8035, -38.4852, 0.12", "14.0238, 60.3964, -38.7365, 0.12", "14.1848, 60.7086, -38.8708, 0.96", "14.3221, 60.9715, -38.9771, 1.2", "14.6481, 61.6459, -39.2024, 0.12", "14.9011, 62.1762, -39.3651, 0.12", "15.058, 62.4859, -39.4694, 0.36", "15.4126, 63.141, -39.7679, 0.12", "15.573, 63.4616, -39.9243, 0.12", "15.834, 64.0207, -40.2063, 0.48", "16.1695, 64.7578, -40.6027, 0.48", "16.5059, 65.5335, -41.0272, 2.28", "17.0266, 66.8076, -41.6999, 0.12", "17.2671, 67.4665, -42.0292, 0.12", "17.3918, 67.8313, -42.219, 0.12", "17.5988, 68.5222, -42.5751, 1.08", "17.6898, 68.8883, -42.781, 1.2", "17.8295, 69.512, -43.2686, 0.12", "17.915, 69.9854, -43.7242, 0.12", "18.0587, 70.7007, -44.4918, 1.44", "18.1073, 70.9489, -44.7669, 2.04", "18.1785, 71.4013, -45.274, 1.68", "18.3653, 72.7722, -46.8681, 0.24", "18.4142, 73.2202, -47.4095, 0.24", "18.4609, 73.6949, -47.9916, 0.12", "18.48, 74.1459, -48.5118, 0.72", "18.4877, 74.3639, -48.7424, 0.72", "18.4791, 74.5668, -48.9335, 0.12", "18.3997, 75.2475, -49.484, 0.12", "18.3488, 75.5456, -49.7743, 0.12", "18.1882, 76.0769, -50.3613, 1.68", "18.1512, 76.1904, -50.4911, 1.68", "17.9046, 77.1819, -51.6106, 0.12", "17.8335, 77.5448, -51.9879, 0.12", "17.8058, 77.8977, -52.3326, 0.24", "17.8033, 78.292, -52.6955, 0.24", "17.8332, 78.9557, -53.2638, 0.24", "17.8594, 79.6481, -53.7714, 1.56", "17.8879, 80.0895, -54.0397, 2.04", "17.9704, 81.336, -54.7128, 0.36", "18.0029, 81.7197, -54.8956, 0.48", "18.0731, 82.3092, -55.1788, 0.48", "18.1245, 82.9528, -55.4794, 0.48", "18.1376, 83.2812, -55.6384, 0.24", "18.1524, 83.65, -55.8587, 0.24", "18.172, 84.1711, -56.2184, 0.24", "18.2149, 84.885, -56.827, 1.08", "18.2284, 85.1922, -57.1472, 1.08", "18.2248, 85.58, -57.7207, 0.36", "18.1682, 85.9749, -58.4466, 0.36", "18.1334, 86.082, -58.6876, 0.36", "18.0773, 86.1817, -58.9439, 0.36", "17.9901, 86.3039, -59.2777, 0.36", "17.5963, 86.8258, -60.7022, 1.68", "17.5146, 86.9213, -60.9532, 2.4", "17.451, 86.9928, -61.1271, 2.64", "16.7492, 87.7529, -62.9142, 0.6", "16.6542, 87.8414, -63.1291, 0.12", "16.512, 87.9515, -63.3889, 0.12", "16.3181, 88.0679, -63.6723, 0.6", "16.1163, 88.1815, -63.9653, 0.12", "15.8745, 88.2961, -64.2589, 0.12", "15.4326, 88.4293, -64.6363, 1.44", "15.064, 88.5396, -64.9454, 1.08", "14.1232, 88.8567, -65.6937, 0.12", "13.7251, 89.0183, -65.9711, 0.12", "13.2301, 89.2477, -66.2605, 0.84", "13.034, 89.3536, -66.3752, 0.84", "12.895, 89.433, -66.4513, 0.12", "12.569, 89.5967, -66.6065, 0.12", "12.0842, 89.8129, -66.7879, 1.44", "11.9161, 89.8824, -66.8587, 1.56", "11.2494, 90.169, -67.1773, 0.12", "10.7454, 90.3931, -67.4179, 0.12", "10.4362, 90.5272, -67.5649, 1.08", "10.0691, 90.6772, -67.764, 1.92", "9.77633, 90.7943, -67.95, 1.56", "9.2442, 91.0169, -68.3305, 0.12", "9.03411, 91.1059, -68.4942, 0.12", "8.90886, 91.1631, -68.6064, 0.48", "8.39788, 91.4199, -69.1262, 0.48", "8.17804, 91.5401, -69.3588, 0.12", "7.81054, 91.7528, -69.6307, 0.12", "7.68277, 91.9015, -69.8167, 0.84", "7.57737, 92.0551, -70.0252, 1.2", "7.38408, 92.307, -70.326, 0.12", "6.98822, 92.5823, -70.5161, 0.12", "5.62888, 92.8357, -70.1682, 2.88", "2.56205, 92.8778, -68.5816, 0.96", "1.98229, 92.8051, -68.1509, 0.96", "-1.1626, 92.0641, -65.2756, 0.12", "-1.54207, 91.9445, -64.8822, 0.12", "-1.82959, 91.8295, -64.5519, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "5.60012, 41.4341, -28.8241, 0.48", "4.40618, 41.7094, -29.8969, 0.48", "3.97835, 41.9101, -30.6041, 0.48", "3.56679, 42.3229, -31.8177, 0.48", "3.37778, 42.5729, -32.4589, 2.16", "3.29127, 42.7105, -32.7829, 2.52", "3.1777, 42.9162, -33.2382, 2.52", "2.87499, 43.8918, -35.3888, 1.44", "2.70519, 44.508, -36.8076, 0.36", "2.64029, 44.7146, -37.3304, 0.48", "2.50926, 45.0567, -38.315, 0.6", "2.42064, 45.3514, -39.5109, 0.6", "2.36377, 45.6694, -41.1433, 0.6", "2.33885, 45.7877, -41.8549, 1.92", "2.31504, 45.8721, -42.4678, 2.64", "2.29112, 45.9472, -43.077, 2.64", "2.03783, 46.56, -48.5615, 1.68", "1.89935, 46.8272, -50.949, 0.72", "1.8645, 46.8845, -51.3945, 1.56", "1.77993, 47.017, -52.3098, 1.92", "1.7304, 47.0807, -52.7046, 2.28", "1.67356, 47.1376, -53.0128, 2.28", "0.689419, 47.6893, -55.2901, 0.24", "0.517078, 47.7732, -55.6584, 0.12", "0.409979, 47.8269, -55.9536, 0.12", "0.235696, 47.9143, -56.5109, 0.12", "-0.0756122, 48.0507, -57.5495, 1.32", "-0.217678, 48.1009, -58.0463, 2.16", "-0.453551, 48.1518, -58.8428, 2.4", "-1.13173, 48.2199, -61.138, 0.72", "-1.32133, 48.2159, -61.7735, 0.84", "-1.4393, 48.196, -62.1753, 1.08", "-1.82169, 48.084, -63.3528, 0.48", "-1.92272, 48.0489, -63.6351, 0.12", "-2.13918, 47.9623, -64.1541, 0.48", "-2.23118, 47.9209, -64.3181, 0.48", "-2.64031, 47.7081, -65.042, 0.12", "-2.79298, 47.62, -65.3059, 0.12", "-2.98534, 47.4946, -65.6643, 0.12", "-3.07363, 47.4294, -65.9451, 0.12", "-3.14956, 47.37, -66.2946, 0.12", "-3.22716, 47.3176, -66.607, 0.48", "-3.26306, 47.2896, -66.7417, 0.48", "-3.53317, 47.0108, -67.7492, 0.48", "-3.70414, 46.79, -68.3465, 0.12", "-3.77429, 46.7137, -68.5453, 0.12", "-3.96681, 46.5032, -69.0029, 0.12", "-4.30071, 46.1166, -69.804, 1.8", "-4.54923, 45.8711, -70.3033, 2.76", "-4.71693, 45.7113, -70.5857, 2.76", "-5.02931, 45.3986, -71.0897, 1.92", "-5.34831, 45.0446, -71.628, 1.92", "-6.02511, 44.1428, -72.9708, 0.12", "-6.2837, 43.7498, -73.5208, 0.12", "-6.39922, 43.5313, -73.8392, 0.12", "-6.50934, 43.2984, -74.1593, 0.48", "-6.60278, 43.069, -74.4606, 0.6", "-6.80503, 42.6087, -75.0773, 0.12", "-6.87857, 42.4089, -75.2977, 0.12", "-7.16561, 41.4327, -76.3884, 2.4", "-7.32999, 40.9635, -76.9862, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.27729, -159.225, -26.7685, 0.12", "1.11733, -160.174, -27.0038, 0.12", "1.01899, -160.482, -27.042, 0.12", "0.872429, -160.832, -27.0286, 0.36", "0.622953, -161.375, -26.9627, 0.48", "0.498497, -161.638, -26.922, 0.12", "0.325526, -162.039, -26.8593, 0.12", "0.0499712, -162.653, -26.6976, 0.36", "-0.131936, -163.05, -26.4704, 0.12", "-0.307438, -163.355, -26.219, 0.12", "-0.471742, -163.56, -26.0145, 0.12", "-0.72687, -163.873, -25.6744, 0.12", "-1.11842, -164.335, -25.1251, 0.36", "-1.7456, -165.01, -24.2534, 0.12", "-2.1921, -165.428, -23.662, 0.12", "-2.90103, -165.952, -22.7387, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.27729, -159.225, -26.7685, 0.12", "1.77223, -159.456, -27.053, 0.12", "2.16592, -159.628, -27.3078, 0.12", "2.5962, -159.817, -27.5891, 0.48", "2.91987, -159.961, -27.8011, 0.12", "3.55663, -160.244, -28.2183, 0.12", "4.21954, -160.539, -28.6525, 0.12", "4.96149, -160.843, -29.197, 2.52", "5.12903, -160.909, -29.3277, 2.28", "5.14999, -160.918, -29.3438, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.1917, -21.9232, -25.0861, 0.48", "24.7633, -24.2911, -27.3881, 0.48", "24.7092, -24.6715, -27.6988, 0.36", "24.6618, -25.0825, -27.9982, 0.36", "24.6135, -25.5529, -28.3095, 0.84", "24.5479, -26.3018, -28.7707, 1.32", "24.5138, -27.3064, -29.3358, 0.48", "24.5722, -28.1232, -29.6142, 0.36", "24.6178, -28.495, -29.7318, 0.36", "24.7037, -28.9729, -29.8872, 0.48", "24.8153, -29.4727, -30.0472, 0.36", "25.0616, -30.4217, -30.3587, 0.36", "25.2039, -30.9528, -30.5396, 0.36", "25.2822, -31.425, -30.7151, 0.48", "25.3433, -32.0071, -30.9439, 0.36", "25.3687, -32.5969, -31.182, 0.36", "25.3665, -32.8328, -31.2775, 0.36", "25.2542, -34.9018, -32.1139, 3.49", "25.1038, -36.8728, -32.8721, 0.12", "25.0733, -37.2197, -32.9999, 0.12", "25.0202, -37.7558, -33.1816, 0.36", "24.9998, -37.9396, -33.2417, 0.12", "24.9085, -38.5841, -33.434, 0.12", "24.7654, -39.2038, -33.5784, 0.6", "24.6721, -39.5785, -33.6442, 0.6", "24.4873, -40.189, -33.759, 0.36", "24.4067, -40.4247, -33.8125, 0.24", "24.2615, -40.7949, -33.9083, 0.24", "24.0748, -41.1981, -34.0229, 1.08", "23.6454, -42.1052, -34.2936, 1.8", "23.3156, -42.8063, -34.4716, 1.56", "23.0306, -43.446, -34.58, 0.96", "22.8537, -43.9355, -34.6424, 0.24", "22.5578, -44.9015, -34.7471, 0.24", "22.4272, -45.3964, -34.7923, 0.24", "22.2079, -46.3411, -34.8658, 0.24", "21.8073, -48.2576, -34.9961, 3.25", "21.4863, -50.0377, -35.114, 0.24", "21.4284, -50.4207, -35.1425, 0.24", "21.2745, -51.6746, -35.2592, 0.24", "21.2115, -52.2917, -35.334, 0.48", "21.1961, -52.5417, -35.3773, 0.12", "21.1817, -54.2842, -35.7252, 0.12", "21.185, -54.4606, -35.7596, 0.84", "21.2093, -55.0909, -35.883, 1.08", "21.2433, -55.8173, -36.0285, 0.12", "21.2995, -57.0882, -36.2831, 0.12", "21.3521, -58.499, -36.5658, 2.4", "21.391, -60.0069, -36.8681, 0.24", "21.3954, -60.6176, -37.0018, 0.24", "21.3786, -61.36, -37.1762, 0.36", "21.3546, -61.7483, -37.2771, 0.24", "21.3315, -61.9918, -37.3463, 0.24", "21.2864, -62.3379, -37.4716, 0.24", "21.1871, -62.9945, -37.7653, 0.24", "21.1451, -63.4102, -37.955, 0.84", "21.1265, -63.8208, -38.1384, 0.84", "21.1202, -64.1961, -38.2835, 0.84", "21.1232, -64.7499, -38.4551, 0.12", "21.1207, -65.0342, -38.5294, 0.12", "21.1229, -65.8622, -38.7061, 0.12", "21.1266, -66.263, -38.787, 1.32", "21.1221, -67.1303, -38.9938, 1.68", "21.1041, -68.2347, -39.2791, 1.2", "21.0994, -68.8798, -39.5215, 0.12", "21.0941, -69.1207, -39.6328, 0.12", "21.0614, -69.7975, -39.9866, 0.12", "20.9902, -70.7675, -40.5274, 1.32", "20.9308, -71.4154, -40.9086, 2.04", "20.7854, -73.1636, -41.9288, 0.36", "20.7138, -74.1649, -42.4755, 0.36", "20.6414, -74.9584, -42.85, 0.36", "20.6034, -75.3838, -43.0171, 0.36", "20.5562, -75.8593, -43.1565, 0.36", "20.4478, -76.8587, -43.3717, 1.92", "20.3653, -77.6115, -43.4603, 2.52", "20.2404, -79.0138, -43.6144, 0.24", "20.1842, -79.6959, -43.6329, 0.24", "20.1299, -80.3728, -43.6199, 0.84", "20.0675, -81.1325, -43.5781, 1.08", "19.993, -81.9179, -43.4775, 0.36", "19.9244, -82.9163, -43.2963, 0.36", "19.8646, -84.6487, -42.9176, 1.44", "19.8532, -85.4134, -42.73, 1.92", "19.8616, -85.9674, -42.5925, 1.56", "19.89, -87.2386, -42.2183, 0.12", "19.9075, -87.8501, -42.0337, 0.12", "19.9311, -88.4663, -41.8589, 0.12", "19.9394, -88.6423, -41.8195, 0.48", "19.9874, -89.6336, -41.59, 0.84", "20.0589, -91.544, -41.1991, 0.12", "20.0889, -92.3297, -41.073, 0.12", "20.0972, -92.696, -41.0094, 0.24", "20.1102, -93.2137, -40.918, 0.24", "20.1197, -93.6118, -40.8554, 0.24", "20.1288, -94.1069, -40.793, 0.48", "20.1305, -94.3913, -40.7849, 0.6", "20.1248, -94.8671, -40.7665, 0.12", "20.119, -95.259, -40.7466, 0.12", "20.1096, -95.64, -40.723, 0.12", "20.0649, -96.9807, -40.6326, 2.4", "20.0367, -97.7423, -40.5819, 2.88", "19.9975, -98.5039, -40.5448, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "25.1917, -21.9232, -25.0861, 0.12", "25.7614, -22.7365, -23.6677, 0.12", "26.0159, -23.0124, -23.1053, 0.12", "26.4403, -23.3622, -22.3013, 0.72", "27.3979, -23.9636, -20.7203, 0.72", "27.8544, -24.1681, -20.1012, 0.12", "28.242, -24.3049, -19.6664, 0.12", "28.9118, -24.4442, -18.9622, 1.68", "29.3897, -24.5071, -18.5404, 2.28", "30.26, -24.5775, -17.941, 1.92", "31.2903, -24.7131, -17.2313, 0.36", "32.1301, -24.9133, -16.5766, 0.36", "32.7297, -25.1933, -15.9362, 0.6", "32.9516, -25.3828, -15.5389, 0.36", "33.1273, -25.5894, -15.1275, 0.36", "33.9552, -26.7686, -12.8557, 0.36", "34.093, -26.9921, -12.439, 1.2", "34.5116, -27.7622, -10.9964, 1.92", "35.1332, -28.9539, -8.80249, 0.24", "35.4487, -29.5552, -7.67555, 2.16", "35.5764, -29.7711, -7.26885, 3.0", "35.7945, -29.9976, -6.82556, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-16.3816, -303.958, -43.2186, 0.12", "-15.4827, -303.845, -44.0039, 0.12", "-15.0598, -303.826, -44.3276, 0.12", "-14.824, -303.83, -44.4946, 0.12", "-14.0701, -303.854, -44.9985, 0.6", "-13.7435, -303.865, -45.2168, 0.6", "-13.1475, -303.884, -45.6151, 0.12", "-12.2146, -303.962, -46.1455, 0.12", "-11.908, -304.001, -46.3258, 0.84", "-11.6604, -304.042, -46.4687, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.3816, -303.958, -43.2186, 1.56", "-16.238, -304.665, -43.2213, 1.56", "-16.0389, -305.644, -43.225, 2.28", "-15.9215, -306.222, -43.2272, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.523, 88.9007, 12.5573, 0.48", "14.1705, 90.8152, 13.0221, 0.48", "14.3477, 91.4932, 13.1587, 0.36", "14.4826, 92.1892, 13.2835, 0.36", "14.5727, 92.9082, 13.4072, 0.36", "14.6148, 93.5188, 13.5186, 0.36", "14.6196, 93.8677, 13.5853, 0.72", "14.554, 94.2314, 13.6186, 0.72", "14.4601, 94.67, 13.6705, 0.36", "14.3312, 95.2115, 13.7499, 0.36", "14.2299, 95.6929, 13.824, 1.2", "14.1368, 96.2429, 13.9103, 1.8", "14.0374, 97.0061, 14.0476, 1.8", "13.9386, 98.0617, 14.2582, 0.36", "13.9065, 98.4091, 14.3076, 0.36", "13.8573, 99.1368, 14.3938, 0.72", "13.8427, 99.4947, 14.4283, 0.84", "13.8249, 100.278, 14.5046, 0.36", "13.8154, 100.902, 14.5728, 1.08", "13.7678, 102.225, 14.683, 2.64", "13.7227, 103.086, 14.7343, 3.61", "13.6863, 103.486, 14.7393, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "13.523, 88.9007, 12.5573, 0.6", "13.207, 90.2301, 12.515, 0.6", "13.0866, 91.136, 12.4188, 0.6", "12.9927, 92.3953, 12.1612, 0.6", "12.9579, 92.9526, 11.9516, 0.6", "12.8881, 93.7621, 11.6103, 1.68", "12.7966, 94.56, 11.2596, 2.04", "12.761, 95.0733, 10.9688, 1.8", "12.6625, 95.6999, 10.5267, 2.04", "12.2472, 96.7333, 9.67716, 0.48", "11.921, 97.2078, 9.30871, 0.48", "11.7546, 97.376, 9.19968, 0.72", "11.3435, 97.7495, 9.00191, 0.96", "10.7893, 98.2492, 8.7607, 0.72", "10.3399, 98.6839, 8.58617, 1.32", "9.96207, 99.1166, 8.43698, 1.8", "9.45711, 99.8185, 8.1946, 1.8", "9.09584, 100.418, 8.01186, 0.96", "8.7441, 101.095, 7.79857, 0.72", "8.49704, 101.603, 7.62617, 0.84", "8.02992, 102.54, 7.24111, 1.56", "7.77944, 103.028, 7.00503, 2.52", "7.55557, 103.444, 6.7857, 2.52", "6.90127, 104.548, 6.18253, 2.4", "6.32009, 105.458, 5.65993, 1.56", "5.86659, 106.137, 5.23638, 0.84", "5.52832, 106.626, 4.91884, 0.48", "5.39619, 106.822, 4.78442, 0.24", "5.03466, 107.361, 4.42507, 0.24", "4.75583, 107.801, 4.02803, 0.48", "4.60098, 108.076, 3.71254, 0.12", "4.47876, 108.337, 3.39318, 0.12", "4.18178, 109.009, 2.54597, 1.2", "4.02409, 109.383, 2.07921, 1.56", "3.27378, 111.209, -0.159537, 0.36", "3.04126, 111.798, -0.813982, 0.12", "2.64096, 112.831, -1.79137, 2.64", "2.52182, 113.153, -2.03247, 3.0", "2.31931, 113.692, -2.2068, 2.76", "1.61118, 115.386, -2.11633, 0.48", "0.169616, 118.58, -1.19035, 0.48", "-0.120953, 119.27, -1.09526, 0.48", "-0.244538, 119.729, -1.26396, 0.48", "-0.289427, 120.25, -1.67337, 0.36", "-0.250413, 121.188, -2.65905, 0.36", "-0.0933352, 122.116, -3.7835, 0.36", "0.212216, 123.394, -5.30923, 2.16", "0.375664, 123.868, -5.87383, 3.0", "0.464697, 124.08, -6.11151, 3.12", "0.930885, 125.005, -7.0825, 3.0", "1.68478, 126.382, -8.40815, 0.12", "2.03652, 127.033, -8.97137, 0.12", "2.13695, 127.229, -9.12091, 0.12", "2.59295, 128.083, -9.80329, 2.52", "2.78251, 128.431, -10.0664, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "18.3785, 63.1253, 7.65426, 0.6", "17.7821, 63.4846, 9.47685, 0.6", "17.5503, 63.6242, 10.1849, 0.6", "17.2227, 63.8216, 11.1862, 0.24", "16.999, 63.9563, 11.8697, 0.24", "16.7629, 64.0985, 12.5912, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "18.3785, 63.1253, 7.65426, 0.6", "19.0592, 64.1542, 7.99735, 0.6", "19.8431, 65.4254, 8.43392, 0.72", "20.3623, 66.345, 8.72691, 1.08", "20.6345, 66.878, 8.86371, 1.44", "20.958, 67.5283, 9.03781, 1.56", "21.4641, 68.5714, 9.30167, 1.44", "22.126, 70.04, 9.65772, 1.56", "22.5209, 71.0079, 9.88687, 1.68", "22.8568, 71.8414, 10.1454, 1.68", "23.2091, 72.7104, 10.4639, 1.68", "23.7352, 74.0321, 11.0011, 0.6", "24.1131, 75.0358, 11.4355, 0.36", "24.3955, 75.8224, 11.7085, 0.36", "24.7697, 76.8688, 12.0192, 1.44", "24.9727, 77.4189, 12.1488, 1.56", "25.2823, 78.3018, 12.257, 1.56", "25.4296, 78.7352, 12.2651, 1.44", "25.9702, 80.2542, 12.235, 0.72", "26.2015, 80.8216, 12.2175, 0.6", "26.6191, 81.7352, 12.1906, 1.2", "26.8354, 82.1536, 12.1953, 1.32", "27.3826, 83.0846, 12.2259, 0.84", "28.3719, 84.5143, 12.3666, 1.08", "29.0929, 85.4219, 12.5115, 0.96", "29.7117, 86.1316, 12.5942, 0.48", "30.2166, 86.6902, 12.6361, 0.48", "30.8033, 87.3132, 12.6517, 0.6", "31.6892, 88.2404, 12.6158, 0.96", "31.9778, 88.5523, 12.5912, 0.96", "33.0211, 89.769, 12.5207, 1.68", "33.9864, 91.0005, 12.4579, 2.28", "34.7743, 92.12, 12.4229, 2.16", "35.2608, 92.9487, 12.4195, 1.92", "35.7902, 94.1324, 12.4042, 0.6", "36.2086, 95.4578, 12.3938, 0.6", "36.4122, 96.2871, 12.402, 0.6", "36.551, 97.1651, 12.4052, 0.48", "36.6335, 98.66, 12.4168, 0.48", "36.5774, 100.08, 12.3995, 0.48", "36.3684, 101.342, 12.2908, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "43.646, 103.669, -12.8836, 0.48", "44.2536, 104.987, -12.4277, 0.48", "44.4764, 105.4, -12.2573, 0.12", "44.932, 106.219, -11.9035, 0.36", "45.281, 106.831, -11.6404, 0.48", "45.5463, 107.27, -11.4562, 0.48", "45.8877, 107.815, -11.2389, 0.48", "46.5246, 108.714, -10.9237, 1.68", "46.7249, 108.975, -10.8573, 2.16", "47.004, 109.322, -10.8115, 2.4", "47.3458, 109.734, -10.7823, 2.4", "47.7701, 110.228, -10.7406, 1.92", "48.4119, 110.967, -10.681, 0.12", "48.6726, 111.256, -10.6647, 0.24", "48.9105, 111.515, -10.637, 0.24", "49.4227, 112.073, -10.5481, 0.48", "50.0706, 112.773, -10.3976, 0.48", "50.2837, 113.0, -10.3365, 1.32", "50.6543, 113.382, -10.2214, 1.68", "51.022, 113.762, -10.1398, 1.8", "51.3571, 114.112, -10.0966, 1.92", "51.5625, 114.332, -10.0952, 1.92", "52.0641, 114.902, -10.1432, 0.48", "52.6641, 115.612, -10.2534, 0.48", "53.173, 116.246, -10.3635, 0.72", "53.7164, 116.94, -10.4695, 0.72", "54.2198, 117.633, -10.6692, 0.36", "54.5673, 118.153, -10.8698, 0.36", "54.9745, 118.832, -11.169, 0.72", "55.3568, 119.519, -11.4315, 1.08", "55.722, 120.187, -11.6401, 1.32", "56.8479, 122.326, -12.1226, 0.48", "57.1442, 122.904, -12.1889, 0.36", "57.6778, 123.957, -12.203, 0.36", "58.3854, 125.392, -12.1523, 0.36", "58.6281, 125.878, -12.1319, 1.92", "59.0007, 126.547, -12.0826, 3.0", "59.2877, 126.993, -12.0203, 3.25", "59.7846, 127.702, -11.989, 3.25", "60.7863, 129.064, -12.06, 0.36", "61.1582, 129.572, -12.1274, 0.48", "61.9248, 130.628, -12.2672, 0.48", "62.5095, 131.455, -12.3685, 0.48", "63.0238, 132.25, -12.4466, 0.48", "63.2395, 132.626, -12.4688, 0.96", "63.4431, 133.014, -12.4705, 1.2", "63.7846, 133.726, -12.4595, 0.84", "64.1905, 134.612, -12.431, 0.48", "64.6242, 135.502, -12.3889, 0.36", "65.0007, 136.16, -12.3508, 0.36", "65.5763, 136.998, -12.3165, 0.36", "65.9739, 137.497, -12.3151, 1.32", "66.5833, 138.196, -12.332, 2.28", "66.9741, 138.62, -12.3505, 2.76", "67.5064, 139.199, -12.381, 2.4", "68.5083, 140.37, -12.4434, 1.08", "69.1738, 141.233, -12.4801, 0.36", "69.6607, 141.942, -12.4957, 0.36", "70.1285, 142.697, -12.5187, 1.68", "70.3969, 143.17, -12.5346, 2.28", "70.7994, 143.937, -12.5312, 2.4", "71.3871, 145.132, -12.4818, 1.68", "72.087, 146.576, -12.3705, 1.08", "72.4237, 147.28, -12.3105, 0.6", "72.6939, 147.869, -12.2573, 0.6", "73.1481, 148.851, -12.1685, 1.44", "73.373, 149.333, -12.1304, 1.8", "73.6479, 149.922, -12.0964, 1.8", "74.042, 150.715, -12.0635, 0.48", "74.6461, 151.86, -12.0198, 0.48", "75.1892, 152.883, -12.0486, 1.2", "75.8278, 154.05, -12.1451, 1.68", "76.2918, 154.846, -12.2257, 2.28", "76.9693, 155.98, -12.334, 2.52", "77.8687, 157.481, -12.4262, 1.2", "78.4556, 158.48, -12.4197, 0.6", "78.7982, 159.11, -12.3638, 0.48", "79.2568, 160.049, -12.1821, 0.48", "79.5967, 160.807, -11.9352, 0.48", "79.9185, 161.566, -11.5874, 0.48", "80.2962, 162.437, -11.0823, 0.48", "80.5384, 162.948, -10.756, 0.48", "80.8088, 163.484, -10.4999, 0.48", "81.2323, 164.239, -10.3063, 1.08", "81.6783, 164.932, -10.2915, 1.68", "82.0556, 165.49, -10.3753, 2.04", "82.4226, 166.013, -10.5075, 2.04", "83.4583, 167.466, -10.9255, 0.96", "83.838, 168.01, -11.0938, 0.48", "84.1933, 168.532, -11.2619, 0.48", "84.724, 169.324, -11.4838, 1.56", "84.9176, 169.629, -11.5452, 2.16", "85.3018, 170.264, -11.7066, 2.64", "85.5668, 170.715, -11.8185, 2.64", "85.908, 171.296, -11.9967, 3.12", "86.223, 171.822, -12.1932, 3.12", "86.8348, 172.81, -12.5935, 0.6", "87.93, 174.49, -13.2717, 0.48", "88.3621, 175.11, -13.512, 0.36", "88.6354, 175.483, -13.6383, 0.36", "89.1204, 176.13, -13.7731, 0.96", "89.7497, 176.934, -13.8351, 0.96", "90.3494, 177.692, -13.7821, 0.72", "90.8019, 178.319, -13.6681, 0.48", "91.3333, 179.148, -13.5506, 0.48", "92.0802, 180.446, -13.408, 1.2", "92.4314, 181.115, -13.355, 1.68", "92.8538, 181.984, -13.3098, 2.04", "93.3034, 182.937, -13.2852, 1.8", "93.8698, 184.128, -13.2879, 0.6", "94.2531, 184.914, -13.3149, 0.48", "94.7457, 185.885, -13.385, 0.48", "95.2618, 186.833, -13.4563, 0.48", "95.5851, 187.367, -13.4902, 0.48", "95.8981, 187.824, -13.5006, 1.08", "96.3464, 188.436, -13.4761, 1.32", "96.6111, 188.78, -13.4621, 1.32", "97.111, 189.387, -13.4231, 0.72", "97.4309, 189.761, -13.4048, 0.48", "97.8832, 190.296, -13.3823, 0.72", "98.3786, 190.886, -13.3769, 1.08", "98.9032, 191.528, -13.4007, 1.32", "99.5166, 192.311, -13.4634, 0.48", "100.026, 193.013, -13.5769, 0.48", "100.519, 193.71, -13.7365, 0.48", "101.061, 194.483, -13.942, 1.44", "101.535, 195.165, -14.1243, 2.28", "102.106, 195.994, -14.3344, 1.92", "102.921, 197.175, -14.6079, 0.48", "103.557, 198.074, -14.7649, 0.48", "104.017, 198.714, -14.8254, 0.72", "104.352, 199.191, -14.8177, 0.48", "104.67, 199.677, -14.7481, 0.36", "105.082, 200.455, -14.658, 0.36", "105.403, 201.258, -14.6214, 0.36", "105.674, 202.185, -14.6721, 1.8", "105.89, 203.13, -14.7944, 3.0", "106.059, 204.079, -14.967, 3.25", "106.347, 206.47, -15.5525, 1.8", "106.431, 207.487, -15.8527, 0.48", "106.475, 208.097, -16.058, 0.48", "106.517, 208.519, -16.2085, 0.72", "106.606, 209.064, -16.3802, 0.48", "106.905, 210.075, -16.5897, 0.36", "107.276, 210.85, -16.5928, 0.36", "107.559, 211.325, -16.5643, 0.72", "108.108, 212.148, -16.4696, 1.08", "108.573, 212.808, -16.3634, 1.2", "109.311, 213.809, -16.1331, 0.72", "110.016, 214.742, -15.8606, 0.36", "110.475, 215.358, -15.6715, 0.36", "111.069, 216.191, -15.3905, 0.36", "111.594, 216.965, -15.1147, 0.36", "112.156, 217.865, -14.8319, 1.92", "112.47, 218.423, -14.6718, 2.76", "112.563, 218.603, -14.6265, 3.12", "113.02, 219.511, -14.4268, 2.76", "113.171, 219.815, -14.3754, 2.76", "113.742, 220.956, -14.2126, 0.48", "114.165, 221.821, -14.12, 0.48", "114.395, 222.303, -14.0694, 0.96", "114.607, 222.756, -14.0243, 0.6", "114.873, 223.338, -13.9717, 0.48", "115.102, 223.832, -13.9123, 0.36", "115.67, 224.977, -13.6918, 0.36", "115.917, 225.452, -13.5943, 0.48", "116.174, 225.922, -13.5058, 0.36", "116.494, 226.468, -13.3995, 0.36", "116.738, 226.869, -13.314, 0.36", "117.18, 227.589, -13.1985, 1.2", "117.447, 228.049, -13.1521, 2.04", "117.748, 228.593, -13.0902, 2.16", "118.105, 229.286, -13.0071, 1.68", "118.475, 230.063, -12.9137, 0.48", "118.889, 230.961, -12.8114, 0.36", "119.682, 232.716, -12.6079, 0.36", "120.048, 233.514, -12.5046, 1.2", "120.237, 233.916, -12.4566, 0.84", "120.518, 234.49, -12.4018, 0.48", "121.058, 235.515, -12.3433, 0.36", "121.299, 235.952, -12.358, 0.36", "121.589, 236.452, -12.4551, 1.44", "121.999, 237.172, -12.6522, 1.92", "122.257, 237.623, -12.7827, 2.04", "122.691, 238.379, -13.0008, 2.04", "123.315, 239.474, -13.2402, 0.48", "124.0, 240.695, -13.4079, 0.48", "124.262, 241.16, -13.4308, 0.6", "124.432, 241.466, -13.419, 0.48", "124.924, 242.356, -13.3379, 0.48", "125.589, 243.594, -13.1293, 2.64", "125.992, 244.361, -12.9425, 3.49", "126.159, 244.695, -12.8549, 3.49", "126.397, 245.178, -12.729, 3.49", "127.05, 246.531, -12.392, 0.48", "127.476, 247.419, -12.1754, 0.72", "127.786, 248.051, -12.036, 0.48", "128.036, 248.525, -11.9303, 0.48", "128.374, 249.134, -11.7971, 1.32", "128.603, 249.501, -11.7219, 1.56", "128.984, 250.02, -11.6224, 1.56", "129.397, 250.521, -11.5579, 0.48", "129.907, 251.112, -11.5093, 0.48", "130.284, 251.548, -11.4693, 0.6", "130.838, 252.213, -11.3984, 0.6", "131.281, 252.767, -11.3328, 0.36", "131.627, 253.226, -11.2845, 0.36", "132.046, 253.855, -11.2245, 0.36", "132.335, 254.379, -11.1913, 1.32", "132.563, 254.873, -11.1598, 1.56", "132.713, 255.278, -11.1272, 1.32", "132.882, 255.784, -11.0818, 0.36", "133.151, 256.514, -11.0103, 0.36", "133.398, 257.088, -10.9573, 1.2", "133.698, 257.679, -10.9189, 1.2", "134.081, 258.359, -10.889, 0.36", "134.475, 259.007, -10.8688, 0.36", "134.904, 259.661, -10.8513, 0.48", "135.237, 260.146, -10.8625, 0.48", "135.702, 260.827, -10.9048, 0.48", "135.823, 261.008, -10.9273, 0.48", "136.125, 261.457, -10.9932, 0.72", "136.552, 262.09, -11.0786, 0.72", "136.778, 262.43, -11.1076, 0.48", "137.15, 262.975, -11.1258, 0.48", "137.6, 263.615, -11.1136, 1.08", "138.002, 264.159, -11.0746, 1.68", "138.38, 264.656, -11.0267, 1.68", "138.791, 265.204, -10.9736, 0.84", "139.054, 265.555, -10.9543, 0.72", "139.558, 266.259, -11.0051, 0.72", "140.097, 267.039, -11.1361, 1.32", "140.406, 267.501, -11.2445, 2.4", "140.845, 268.18, -11.4373, 2.76", "141.271, 268.864, -11.6441, 2.04", "141.999, 270.062, -12.0011, 0.48", "142.336, 270.629, -12.1639, 0.48", "142.608, 271.097, -12.2848, 0.6", "142.769, 271.365, -12.3354, 0.48", "143.449, 272.461, -12.4413, 0.48", "143.738, 272.923, -12.4393, 0.72", "144.048, 273.379, -12.3936, 1.08", "144.302, 273.735, -12.3521, 0.72", "144.652, 274.198, -12.2784, 0.48", "144.977, 274.631, -12.2185, 0.24", "145.323, 275.088, -12.1641, 0.24", "146.167, 276.25, -12.0722, 3.12", "146.414, 276.596, -12.0551, 3.37", "146.859, 277.226, -12.0381, 3.0", "147.64, 278.431, -12.0192, 0.48", "148.157, 279.311, -12.013, 0.48", "148.603, 280.126, -11.9981, 0.84", "148.899, 280.685, -11.9805, 0.48", "149.381, 281.537, -11.9002, 0.48", "149.981, 282.518, -11.7415, 0.48", "150.236, 282.896, -11.6401, 0.48", "150.713, 283.575, -11.4176, 0.48", "151.018, 283.976, -11.2655, 0.96", "151.627, 284.738, -11.0069, 1.56", "151.882, 285.02, -10.9115, 1.56", "152.387, 285.537, -10.8098, 0.48", "152.533, 285.699, -10.8072, 0.36", "152.927, 286.248, -10.8618, 0.36", "153.474, 287.106, -10.9851, 1.8", "153.829, 287.705, -11.0852, 2.64", "154.486, 288.835, -11.2527, 1.56", "154.963, 289.65, -11.3473, 0.36", "155.504, 290.56, -11.4358, 0.48", "156.176, 291.677, -11.4717, 0.48", "156.399, 292.054, -11.4806, 0.48", "156.75, 292.613, -11.4927, 1.32", "156.956, 292.899, -11.4815, 1.68", "157.264, 293.262, -11.4359, 1.92", "158.073, 294.177, -11.2982, 0.84", "158.823, 295.114, -11.1322, 0.48", "159.404, 295.905, -10.9607, 0.48", "159.695, 296.344, -10.8557, 0.48", "160.277, 297.33, -10.6142, 0.48", "160.794, 298.306, -10.3274, 0.72", "161.111, 298.961, -10.1141, 1.32", "161.407, 299.612, -9.87563, 0.84", "161.607, 300.085, -9.69355, 0.36", "161.855, 300.649, -9.48006, 0.36", "162.218, 301.366, -9.21768, 0.84", "162.451, 301.731, -9.06869, 0.36", "162.999, 302.469, -8.73478, 0.36", "163.683, 303.299, -8.35526, 0.84", "163.989, 303.641, -8.19232, 0.84", "164.349, 304.027, -8.0276, 0.36", "165.116, 304.843, -7.74383, 0.36", "165.56, 305.343, -7.59958, 1.2", "166.047, 305.942, -7.47258, 2.16", "166.188, 306.139, -7.45006, 2.28", "166.889, 307.183, -7.3673, 0.6", "167.199, 307.66, -7.33277, 0.36", "167.574, 308.223, -7.29113, 0.36", "167.805, 308.538, -7.27021, 0.36", "168.07, 308.87, -7.23579, 0.36", "168.831, 309.748, -7.11377, 0.36", "169.379, 310.346, -7.01598, 1.08", "169.974, 310.982, -6.91714, 1.56", "170.674, 311.715, -6.81846, 0.72", "170.911, 311.979, -6.79065, 0.48", "171.404, 312.584, -6.7408, 0.48", "171.91, 313.303, -6.6979, 1.68", "172.273, 313.855, -6.69592, 2.52", "172.689, 314.516, -6.74084, 1.92", "173.267, 315.427, -6.85242, 0.72", "173.622, 315.954, -6.95035, 0.6", "174.176, 316.733, -7.15105, 0.6", "174.937, 317.722, -7.45299, 0.6", "175.668, 318.641, -7.75294, 1.44", "175.997, 319.044, -7.88752, 1.92", "176.644, 319.826, -8.12484, 0.96", "177.105, 320.39, -8.26434, 0.36", "177.613, 321.046, -8.34775, 0.36", "178.015, 321.594, -8.34144, 0.36", "178.398, 322.117, -8.27649, 0.72", "178.865, 322.769, -8.24983, 0.36", "179.27, 323.324, -8.2624, 0.24", "179.947, 324.212, -8.3494, 2.04", "180.081, 324.381, -8.3837, 2.04", "180.668, 325.085, -8.57526, 1.92", "181.955, 326.567, -9.06468, 0.48", "182.483, 327.159, -9.28139, 0.48", "183.012, 327.748, -9.50299, 0.72", "183.75, 328.588, -9.80453, 0.84", "184.6, 329.61, -10.1302, 0.36", "184.916, 330.013, -10.2333, 0.24", "185.373, 330.642, -10.321, 1.2", "185.504, 330.845, -10.3461, 1.68", "185.923, 331.592, -10.4215, 1.56", "186.313, 332.376, -10.4749, 0.36", "186.571, 332.963, -10.4946, 0.36", "187.032, 334.075, -10.4913, 0.36", "187.235, 334.572, -10.4795, 1.32", "187.442, 335.077, -10.4564, 1.8", "187.613, 335.48, -10.4284, 1.68", "188.0, 336.361, -10.34, 0.48", "188.538, 337.536, -10.2255, 0.48", "188.859, 338.211, -10.1617, 1.8", "189.122, 338.793, -10.1053, 2.4", "189.295, 339.201, -10.0446, 1.92", "189.686, 340.17, -9.82815, 0.6", "189.791, 340.435, -9.74243, 0.6", "190.114, 341.284, -9.40633, 0.6", "190.422, 342.077, -9.05503, 0.6", "190.841, 343.167, -8.57689, 0.6", "191.273, 344.314, -8.1089, 0.6", "191.635, 345.271, -7.76264, 1.56", "191.858, 345.861, -7.60112, 2.04", "192.099, 346.498, -7.49473, 1.68", "192.438, 347.387, -7.43846, 0.84", "192.713, 348.157, -7.4748, 0.48", "193.095, 349.387, -7.59209, 0.48", "193.443, 350.597, -7.72441, 0.6", "193.691, 351.506, -7.805, 1.32", "193.879, 352.234, -7.84928, 1.44", "194.105, 353.127, -7.87023, 0.48", "194.529, 354.772, -7.87133, 0.48", "194.675, 355.296, -7.86267, 1.32", "194.93, 356.123, -7.82493, 2.04", "195.141, 356.738, -7.79628, 1.68", "195.46, 357.587, -7.76711, 0.6", "195.809, 358.436, -7.75271, 0.48", "196.215, 359.34, -7.76323, 0.48", "196.476, 359.926, -7.77604, 0.48", "196.853, 360.76, -7.79953, 0.72", "197.118, 361.344, -7.81329, 0.72", "197.341, 361.813, -7.81635, 0.36", "197.658, 362.501, -7.81234, 0.36", "197.949, 363.073, -7.80248, 1.8", "198.285, 363.62, -7.78632, 2.4", "198.777, 364.332, -7.7465, 2.4", "199.379, 365.16, -7.71346, 0.48", "199.523, 365.356, -7.70655, 0.48", "200.053, 366.101, -7.73057, 0.48", "200.533, 366.798, -7.79926, 0.48", "200.991, 367.546, -7.93236, 0.48", "201.216, 367.996, -8.03657, 1.08", "201.372, 368.444, -8.14295, 1.92", "201.57, 369.237, -8.3036, 2.16", "201.651, 369.676, -8.36945, 2.16", "201.837, 370.7, -8.47932, 0.72", "201.947, 371.164, -8.50044, 0.48", "202.208, 372.052, -8.48091, 0.48", "202.497, 372.867, -8.43123, 0.48", "202.998, 374.068, -8.27808, 0.48", "203.235, 374.552, -8.20284, 0.48", "203.617, 375.224, -8.07315, 1.32", "204.012, 375.859, -7.94555, 1.92", "204.505, 376.596, -7.75384, 1.56", "204.926, 377.22, -7.55947, 0.36", "205.474, 378.028, -7.25457, 0.36", "205.892, 378.64, -7.00258, 0.6", "206.297, 379.215, -6.7381, 0.6", "206.877, 380.004, -6.34522, 0.24", "207.253, 380.481, -6.10356, 0.24", "207.821, 381.16, -5.79403, 1.92", "208.127, 381.503, -5.6358, 2.4", "208.818, 382.246, -5.32481, 1.92", "209.468, 382.961, -5.07009, 0.48", "210.059, 383.649, -4.87308, 0.48", "210.74, 384.505, -4.64728, 0.48", "211.314, 385.305, -4.46372, 1.44", "211.91, 386.197, -4.27425, 2.04", "212.475, 387.1, -4.10536, 1.08", "212.873, 387.741, -3.98856, 0.6", "213.327, 388.464, -3.8713, 0.48", "213.869, 389.259, -3.76934, 0.48", "214.211, 389.721, -3.73229, 0.48", "214.565, 390.175, -3.69855, 0.96", "215.092, 390.839, -3.6515, 1.44", "215.68, 391.6, -3.60118, 0.84", "216.094, 392.156, -3.56469, 0.48", "216.772, 393.132, -3.495, 0.48", "217.228, 393.865, -3.42244, 0.6", "217.695, 394.712, -3.31796, 0.72", "217.927, 395.199, -3.24726, 0.12", "218.011, 395.393, -3.19677, 0.12", "218.286, 396.061, -2.96541, 1.56", "218.576, 396.772, -2.68046, 2.28", "218.802, 397.326, -2.44477, 2.52", "218.99, 397.793, -2.24075, 2.52", "219.623, 399.444, -1.55123, 0.72", "220.162, 400.896, -1.06566, 0.72", "220.456, 401.673, -0.820009, 0.96", "220.647, 402.159, -0.66597, 0.6", "220.846, 402.642, -0.501746, 0.48", "221.282, 403.695, -0.157472, 0.48", "221.922, 405.187, 0.260744, 0.48", "222.43, 406.261, 0.573128, 0.48", "222.896, 407.152, 0.824018, 1.92", "223.534, 408.281, 1.08712, 0.96", "224.113, 409.216, 1.26339, 0.48", "225.238, 410.912, 1.48037, 0.48", "226.019, 412.032, 1.56994, 0.48", "226.768, 413.089, 1.55787, 0.48", "227.489, 414.065, 1.48582, 1.2", "227.958, 414.666, 1.41732, 1.92", "228.696, 415.559, 1.2992, 1.44", "229.167, 416.142, 1.22175, 1.08", "229.493, 416.577, 1.17911, 0.48", "229.929, 417.209, 1.14922, 0.96", "230.356, 417.864, 1.15885, 0.96", "230.661, 418.354, 1.17371, 0.48", "231.587, 419.815, 1.26777, 0.48", "231.942, 420.37, 1.30798, 0.6", "232.173, 420.725, 1.34119, 0.48", "232.717, 421.547, 1.45238, 0.48", "233.474, 422.718, 1.65862, 0.48", "233.898, 423.408, 1.79823, 0.96", "234.221, 423.959, 1.92786, 1.2", "234.575, 424.609, 2.09055, 0.6", "234.825, 425.133, 2.21072, 0.36", "235.329, 426.403, 2.47567, 0.36", "235.595, 427.258, 2.62503, 0.72", "235.761, 427.941, 2.70741, 1.44", "235.921, 428.688, 2.7851, 2.4", "236.164, 429.862, 2.88836, 1.56", "236.306, 430.531, 2.94647, 0.48", "236.689, 432.23, 3.11207, 0.48", "236.917, 433.039, 3.23555, 0.6", "237.069, 433.474, 3.33252, 0.48", "237.456, 434.333, 3.62141, 0.48", "237.763, 434.834, 3.84483, 0.48", "238.179, 435.357, 4.14008, 0.84", "239.132, 436.328, 4.80366, 0.96", "239.806, 436.939, 5.24804, 0.48", "240.354, 437.399, 5.5961, 0.36", "241.293, 438.152, 6.16541, 0.36", "242.117, 438.816, 6.62127, 0.96", "242.284, 438.952, 6.71712, 1.08", "242.836, 439.413, 7.03779, 0.48", "243.524, 439.998, 7.51665, 0.48", "244.153, 440.549, 8.01822, 0.48", "244.69, 441.036, 8.49129, 0.48", "245.451, 441.76, 9.12771, 0.48", "246.313, 442.625, 9.81348, 0.48", "247.312, 443.72, 10.5717, 1.68", "247.655, 444.12, 10.8089, 2.4", "247.943, 444.47, 10.9877, 2.64", "248.792, 445.602, 11.3753, 0.24", "249.334, 446.523, 11.4983, 0.24", "249.728, 447.432, 11.5114, 0.24", "249.765, 447.534, 11.506, 0.72", "250.003, 448.253, 11.4659, 0.84", "250.281, 449.206, 11.4117, 0.24", "250.664, 450.763, 11.324, 0.24", "250.956, 452.052, 11.2233, 0.24", "251.026, 452.369, 11.1948, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "43.646, 103.669, -12.8836, 0.12", "43.2945, 104.186, -13.7904, 0.12", "43.2286, 104.282, -13.9546, 0.12", "43.0126, 104.592, -14.4477, 1.2", "42.8036, 104.871, -14.8923, 1.44", "41.6025, 106.412, -17.26, 0.36", "41.3444, 106.758, -17.7511, 0.36", "41.2075, 106.96, -18.0301, 1.8", "41.0174, 107.265, -18.4114, 2.16", "40.2947, 108.562, -19.8327, 0.36", "40.0625, 109.029, -20.3058, 0.36", "39.8281, 109.565, -20.7442, 1.32", "39.6266, 110.096, -21.226, 0.24", "39.526, 110.421, -21.5303, 0.24", "39.2953, 111.283, -22.312, 0.6", "39.0302, 112.426, -23.2386, 1.68", "38.945, 112.77, -23.5015, 2.04", "38.5148, 114.26, -24.6221, 0.36", "38.3478, 114.808, -24.9884, 0.36", "38.1542, 115.453, -25.3467, 1.56", "37.9853, 116.068, -25.6139, 0.36", "37.7996, 116.764, -25.838, 0.6", "37.6875, 117.178, -25.9586, 0.12", "37.5174, 117.82, -26.0845, 0.12", "37.4424, 118.161, -26.1693, 0.48", "37.2971, 119.228, -26.5304, 0.12", "37.2689, 119.58, -26.6611, 0.12", "37.2585, 119.88, -26.7702, 0.12", "37.2538, 120.302, -26.9084, 1.68", "37.2723, 120.822, -27.0536, 2.04", "37.3665, 121.898, -27.2895, 0.24", "37.4225, 122.357, -27.3556, 0.24", "37.4707, 122.712, -27.4153, 0.48", "37.5272, 123.11, -27.5061, 0.12", "37.681, 124.202, -27.7766, 0.12", "37.8228, 125.195, -28.0208, 0.12", "37.9162, 125.837, -28.1652, 0.12", "38.0545, 126.769, -28.3622, 1.68", "38.2103, 127.904, -28.5712, 0.12", "38.3255, 128.8, -28.7086, 0.12", "38.3795, 129.242, -28.7642, 1.32", "38.46, 129.785, -28.7957, 1.68", "38.597, 130.52, -28.7867, 0.12", "38.7581, 131.199, -28.7105, 0.12", "38.8368, 131.447, -28.6691, 0.36", "38.9601, 131.777, -28.6193, 0.12", "39.2904, 132.58, -28.5099, 0.12", "39.5032, 133.059, -28.4535, 1.56", "39.8341, 133.771, -28.3831, 0.12", "40.4459, 135.042, -28.26, 0.12", "40.5651, 135.292, -28.2363, 0.48", "40.6734, 135.523, -28.2147, 0.12", "41.0778, 136.39, -28.1442, 0.12", "41.3347, 136.94, -28.1057, 1.2", "41.5201, 137.337, -28.0837, 1.2", "41.7067, 137.739, -28.0657, 0.12", "42.0207, 138.359, -28.0425, 0.12", "42.2422, 138.77, -28.0294, 1.32", "42.4608, 139.151, -28.0192, 1.68", "42.9956, 140.062, -27.9926, 0.12", "43.3959, 140.736, -27.9732, 0.12", "43.7909, 141.408, -27.9496, 0.12", "43.9298, 141.648, -27.9395, 0.12", "44.1845, 142.109, -27.9125, 0.12", "44.3525, 142.43, -27.8914, 1.2", "44.6303, 142.985, -27.8501, 0.12", "44.9715, 143.689, -27.8049, 0.12", "45.0855, 143.934, -27.7903, 0.36", "45.2071, 144.188, -27.7765, 0.12", "45.6014, 144.969, -27.737, 0.12", "45.7851, 145.308, -27.7208, 0.96", "45.9818, 145.649, -27.7028, 0.12", "46.4487, 146.385, -27.611, 0.12", "46.6881, 146.752, -27.5575, 0.84", "46.9305, 147.115, -27.4977, 0.36", "47.0852, 147.343, -27.4554, 0.12", "48.0817, 148.775, -27.1921, 0.12", "48.6362, 149.543, -27.0532, 0.24", "48.8663, 149.854, -27.0027, 0.48", "49.0298, 150.077, -26.972, 0.12", "49.4996, 150.755, -26.9082, 0.12", "49.7808, 151.22, -26.8877, 0.84", "49.9077, 151.474, -26.8959, 0.12", "50.2869, 152.264, -26.9603, 0.12", "50.3401, 152.385, -26.9663, 0.6", "50.4606, 152.795, -27.0088, 0.12", "50.5467, 153.342, -27.0839, 0.12", "50.5931, 153.87, -27.1617, 1.08", "50.6172, 154.489, -27.2913, 1.32", "50.5997, 155.011, -27.4226, 1.68", "50.5419, 155.981, -27.6671, 0.12", "50.4834, 156.571, -27.8454, 0.12", "50.4419, 156.821, -27.9266, 0.48", "50.3361, 157.287, -28.0645, 0.12", "50.1685, 157.935, -28.2271, 0.12", "50.0682, 158.314, -28.3014, 0.48", "49.8635, 158.981, -28.3873, 0.12", "49.6202, 159.629, -28.4451, 0.12", "49.3779, 160.254, -28.4657, 0.12", "49.2642, 160.554, -28.4561, 0.84", "49.1046, 160.97, -28.4331, 0.84", "49.0007, 161.219, -28.4072, 0.12", "48.7154, 161.837, -28.2986, 0.12", "48.5125, 162.23, -28.2317, 0.12", "48.4686, 162.306, -28.2163, 0.48", "48.2901, 162.595, -28.148, 0.12", "48.072, 162.919, -28.0636, 0.12", "47.7636, 163.312, -27.924, 1.32", "47.6292, 163.446, -27.8603, 1.56", "47.1438, 163.865, -27.6229, 0.12", "46.811, 164.138, -27.4607, 0.12", "46.5809, 164.311, -27.3114, 0.48", "46.2624, 164.53, -27.0679, 0.12", "46.0801, 164.663, -26.9198, 0.12", "45.8688, 164.832, -26.7488, 0.12", "45.6708, 165.01, -26.5631, 0.72", "45.0876, 165.63, -25.9691, 0.12", "44.8479, 165.927, -25.7185, 0.12", "44.4917, 166.416, -25.3197, 1.8", "44.2656, 166.75, -25.038, 2.04", "43.7459, 167.548, -24.3624, 0.24", "43.5537, 167.859, -24.1079, 0.24", "43.3147, 168.28, -23.8038, 0.24", "42.9812, 168.926, -23.3537, 0.24", "42.7775, 169.342, -23.0663, 0.96", "42.6616, 169.592, -22.9092, 1.32", "42.4745, 170.014, -22.679, 0.12", "42.2692, 170.479, -22.4317, 0.12", "41.9677, 171.17, -22.1061, 0.12", "41.862, 171.452, -22.0061, 0.96", "41.7869, 171.711, -21.9297, 0.96", "41.7094, 172.049, -21.8394, 0.24", "41.6295, 172.476, -21.7466, 0.24", "41.5885, 172.763, -21.6963, 0.12", "41.506, 173.559, -21.5903, 0.12", "41.4552, 174.171, -21.5303, 0.12", "41.4306, 174.543, -21.5002, 0.96", "41.3999, 174.87, -21.5134, 0.12", "41.3356, 175.332, -21.5731, 0.12", "41.2987, 175.523, -21.6081, 0.12", "41.2577, 175.704, -21.6589, 1.2", "41.1929, 176.002, -21.7565, 1.2", "40.9882, 177.136, -22.1291, 0.12", "40.9125, 177.589, -22.3195, 0.12", "40.8572, 178.051, -22.5324, 0.12", "40.8184, 178.506, -22.746, 0.12", "40.8027, 178.827, -22.9066, 0.72", "40.7928, 179.188, -23.0703, 0.84", "40.7986, 180.303, -23.4971, 0.12", "40.8031, 181.029, -23.8084, 0.12", "40.8001, 181.141, -23.8544, 0.24", "40.7632, 181.609, -24.0404, 0.12", "40.6593, 182.596, -24.4582, 0.12", "40.6361, 182.759, -24.5249, 1.2", "40.4919, 183.511, -24.8194, 0.12", "40.3185, 184.181, -25.1366, 0.12", "40.1875, 184.678, -25.3895, 0.72", "40.0329, 185.164, -25.6786, 0.12", "39.9025, 185.474, -25.9005, 0.12", "39.6476, 185.962, -26.261, 0.12", "39.4346, 186.318, -26.533, 1.08", "39.2687, 186.564, -26.748, 1.08", "38.8427, 187.141, -27.2526, 0.12", "38.506, 187.547, -27.6076, 0.12", "38.4083, 187.655, -27.7126, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "39.968, 100.958, -46.3017, 0.12", "40.7225, 101.724, -46.6447, 0.12", "41.5726, 102.612, -47.0528, 2.64", "41.9032, 102.977, -47.2245, 2.16", "42.5691, 103.79, -47.5929, 0.24", "43.138, 104.522, -47.8965, 0.24", "43.5536, 105.08, -48.1098, 0.24", "44.1485, 105.94, -48.3638, 0.96", "44.5284, 106.537, -48.5148, 0.12", "44.9833, 107.281, -48.6289, 0.12", "45.3362, 107.862, -48.65, 0.24", "45.5462, 108.209, -48.629, 0.24", "45.9945, 108.922, -48.5195, 1.68", "46.3383, 109.462, -48.4208, 2.52", "46.9304, 110.358, -48.2966, 1.56", "47.1788, 110.739, -48.2671, 0.48", "47.9242, 111.982, -48.2563, 0.48", "48.33, 112.703, -48.286, 1.32", "48.769, 113.549, -48.3904, 0.96", "49.0905, 114.203, -48.5143, 0.12", "49.3994, 114.863, -48.6826, 0.12", "49.7742, 115.68, -48.9077, 1.8", "50.0297, 116.239, -49.0674, 1.92", "50.4191, 117.083, -49.269, 0.12", "50.7405, 117.752, -49.3524, 0.12", "50.8338, 117.949, -49.3618, 0.48", "51.0434, 118.385, -49.3633, 0.12", "51.2675, 118.852, -49.3374, 0.12", "51.5979, 119.596, -49.2371, 0.72", "51.8615, 120.222, -49.101, 0.12", "52.12, 120.909, -48.9522, 0.12", "52.2244, 121.195, -48.8927, 0.48", "52.3215, 121.474, -48.8419, 0.12", "52.556, 122.179, -48.7545, 0.12", "52.6526, 122.483, -48.7369, 1.2", "52.8318, 123.045, -48.7253, 1.32", "53.0521, 123.626, -48.6982, 0.84", "53.1586, 123.879, -48.6796, 0.12", "53.4141, 124.442, -48.6167, 0.12", "53.5096, 124.624, -48.5892, 0.6", "53.7287, 124.998, -48.5261, 0.12", "54.2603, 125.806, -48.3736, 0.12", "54.5015, 126.143, -48.3114, 0.6", "54.6997, 126.416, -48.3167, 0.12", "55.0126, 126.828, -48.3826, 0.12", "55.5299, 127.533, -48.5504, 1.56", "55.713, 127.795, -48.6276, 2.04", "56.0826, 128.349, -48.8062, 1.68", "57.1364, 129.911, -49.3854, 0.12", "57.6353, 130.66, -49.706, 0.12", "57.9434, 131.149, -49.9451, 0.12", "58.1843, 131.558, -50.1622, 1.08", "58.3667, 131.879, -50.3364, 1.56", "58.795, 132.656, -50.8039, 0.12", "59.3424, 133.597, -51.3889, 0.12", "59.7115, 134.179, -51.8407, 0.48", "60.0958, 134.731, -52.3511, 0.48", "60.3038, 134.999, -52.6298, 0.48", "60.8653, 135.673, -53.4573, 1.44", "61.1174, 135.954, -53.8243, 1.92", "61.5358, 136.351, -54.3816, 1.44", "62.0821, 136.813, -55.1046, 0.48", "62.7521, 137.342, -55.9763, 0.36", "63.6176, 137.984, -57.0617, 0.12", "64.1224, 138.339, -57.6468, 1.56", "64.5204, 138.617, -58.1088, 1.2", "65.5844, 139.33, -59.2441, 0.12", "65.9248, 139.533, -59.5812, 0.12", "66.1441, 139.647, -59.7858, 0.6", "66.4268, 139.779, -60.0033, 0.6", "66.9881, 140.037, -60.4508, 0.36", "67.3865, 140.215, -60.7343, 0.36", "68.0941, 140.52, -61.1185, 0.12", "68.5384, 140.716, -61.3214, 0.12", "69.2549, 141.049, -61.6078, 0.12", "70.1786, 141.506, -61.968, 1.56", "70.7761, 141.813, -62.1812, 2.16", "71.6547, 142.301, -62.4856, 0.24", "72.845, 143.053, -62.9519, 0.24", "73.3375, 143.422, -63.1767, 0.12", "74.1695, 144.127, -63.6, 1.68", "74.4148, 144.37, -63.7505, 2.28", "74.6641, 144.665, -63.9417, 2.28", "75.4691, 145.804, -64.7573, 0.12", "75.9166, 146.574, -65.3305, 0.12", "76.0367, 146.814, -65.509, 0.6", "76.3905, 147.673, -66.1719, 0.24", "76.5452, 148.142, -66.5612, 0.24", "76.7257, 148.741, -67.0705, 0.24", "76.8304, 149.161, -67.4215, 0.96", "76.9413, 149.737, -67.9257, 1.44", "77.1043, 150.798, -68.8285, 0.12", "77.2405, 151.8, -69.5826, 0.12", "77.2957, 152.221, -69.8775, 0.12", "77.3123, 152.358, -69.9578, 0.48", "77.3539, 152.649, -70.1087, 0.48", "77.3757, 152.783, -70.1652, 0.48", "77.5157, 153.589, -70.3985, 0.48", "77.6731, 154.464, -70.6101, 1.32", "77.7555, 154.914, -70.7178, 1.8", "77.9131, 155.58, -70.8661, 0.96", "78.0775, 156.183, -70.9799, 0.12", "78.3393, 157.062, -71.1422, 0.12", "78.492, 157.554, -71.2206, 1.2", "78.6364, 157.937, -71.2871, 1.56", "78.8674, 158.457, -71.4346, 0.12", "79.2662, 159.274, -71.7138, 0.12", "79.6652, 160.002, -72.0039, 0.12", "80.0994, 160.717, -72.4256, 0.12", "80.8362, 161.878, -73.2334, 0.12", "81.4638, 162.84, -74.0228, 0.12", "81.7136, 163.213, -74.3524, 0.84", "81.887, 163.464, -74.5837, 0.96", "82.7464, 164.738, -75.7417, 0.12", "83.096, 165.302, -76.2395, 0.12", "83.369, 165.901, -76.6523, 0.12", "83.6063, 166.54, -76.9973, 0.12", "83.7783, 167.106, -77.2884, 0.36", "83.7989, 167.202, -77.3245, 0.12", "83.8304, 167.667, -77.2819, 0.12", "83.7765, 168.175, -77.1789, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "39.968, 100.958, -46.3017, 0.12", "38.4117, 103.31, -49.4663, 0.12", "38.1099, 103.797, -50.0298, 0.12", "37.6994, 104.473, -50.6594, 0.12", "37.427, 104.933, -51.0223, 0.84", "36.8349, 105.946, -51.7249, 1.8", "36.628, 106.306, -51.9444, 1.92", "36.1855, 107.173, -52.1914, 0.12", "35.6975, 108.28, -52.4313, 0.12", "35.4004, 109.031, -52.526, 0.96", "35.2689, 109.404, -52.5511, 1.2", "34.993, 110.301, -52.544, 0.12", "34.8301, 110.919, -52.5567, 0.12", "34.5988, 112.212, -52.6001, 0.12", "34.5452, 112.698, -52.6281, 1.2", "34.5212, 113.005, -52.643, 1.44", "34.4768, 113.679, -52.7146, 0.6", "34.4141, 114.525, -52.8369, 0.12", "34.318, 115.264, -52.9687, 0.12", "34.1998, 115.783, -53.1021, 0.96", "34.0968, 116.144, -53.2064, 1.32", "33.7538, 117.101, -53.4808, 0.12", "33.5355, 117.584, -53.6117, 0.12", "33.233, 118.13, -53.7699, 0.12", "32.6246, 119.07, -54.077, 0.12", "32.2486, 119.624, -54.2636, 1.08", "31.9698, 120.015, -54.3855, 1.8", "31.5854, 120.514, -54.5626, 1.2", "30.9732, 121.291, -54.8784, 0.12", "30.6823, 121.658, -55.029, 0.12", "30.4394, 121.954, -55.1443, 0.12", "30.1385, 122.305, -55.3247, 0.12", "29.0154, 123.563, -56.0469, 0.12", "28.7669, 123.834, -56.2045, 1.44", "28.4644, 124.154, -56.4345, 2.04", "27.967, 124.645, -56.8371, 1.32", "26.8382, 125.675, -57.6986, 0.12", "26.4596, 125.997, -57.9671, 0.12", "26.0999, 126.269, -58.1772, 0.96", "24.4788, 127.36, -59.0338, 0.12", "23.847, 127.738, -59.3106, 0.12", "23.1373, 128.121, -59.5702, 1.56", "22.827, 128.269, -59.6455, 1.8", "21.9713, 128.67, -59.8503, 0.12", "21.7398, 128.778, -59.8945, 0.12", "21.2358, 129.018, -59.9549, 0.48", "20.1925, 129.54, -60.1586, 0.12", "19.5032, 129.899, -60.329, 0.12", "18.9373, 130.197, -60.4496, 1.32", "18.5297, 130.398, -60.5116, 1.56", "17.64, 130.755, -60.5522, 0.12", "17.198, 130.872, -60.5217, 0.12", "16.9823, 130.904, -60.4811, 0.48", "16.2856, 130.954, -60.3346, 0.12", "15.5961, 130.972, -60.1693, 0.12", "14.6873, 130.965, -59.9187, 0.12", "13.8627, 130.939, -59.6608, 0.12", "13.5305, 130.929, -59.5605, 0.72", "13.2388, 130.92, -59.4433, 0.12", "12.5024, 130.922, -59.0924, 0.12", "12.0464, 130.949, -58.8343, 0.12", "11.5799, 131.003, -58.5381, 1.44", "11.0906, 131.082, -58.2089, 1.8", "9.65243, 131.344, -57.2326, 0.12", "9.20618, 131.435, -56.914, 0.12", "8.04657, 131.707, -56.0657, 0.12", "7.79566, 131.78, -55.8904, 0.24", "7.60542, 131.845, -55.744, 0.12", "7.34147, 131.941, -55.5322, 0.12", "6.62554, 132.25, -54.9775, 1.32", "6.54824, 132.288, -54.9073, 1.56", "6.04669, 132.586, -54.3796, 1.56", "5.33277, 133.063, -53.6345, 0.24", "5.19197, 133.171, -53.4899, 0.12", "4.75169, 133.557, -53.0863, 0.12", "4.3672, 133.92, -52.8063, 0.12", "4.20876, 134.071, -52.6986, 0.48", "3.95008, 134.336, -52.5465, 0.48", "3.80425, 134.492, -52.4874, 0.12", "3.2031, 135.139, -52.2497, 0.12", "2.73045, 135.589, -52.0742, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-7.32999, 40.9635, -76.9862, 0.12", "-7.24327, 40.0202, -78.2521, 0.12", "-7.17256, 39.5196, -79.0606, 0.12", "-7.09309, 38.8956, -80.0719, 0.12", "-7.07708, 38.7504, -80.3032, 1.56", "-7.04928, 38.4191, -80.8079, 1.56", "-7.03609, 38.079, -81.2988, 0.96", "-7.05802, 37.4731, -82.1776, 0.12", "-7.06763, 37.1157, -82.7431, 0.12", "-7.07888, 37.0004, -82.9039, 0.12", "-7.11213, 36.7477, -83.2067, 0.12", "-7.14434, 36.4182, -83.5746, 0.6", "-7.16363, 36.1945, -83.8003, 0.72", "-7.24935, 35.2088, -84.6597, 0.12", "-7.22843, 34.783, -85.1319, 0.12", "-7.15235, 34.1664, -85.8401, 2.04", "-6.94489, 33.1201, -87.109, 0.12", "-6.83557, 32.6547, -87.6851, 0.12", "-6.70582, 32.1603, -88.3424, 2.28", "-6.30058, 30.5681, -90.474, 0.12", "-6.16827, 30.0836, -91.1916, 0.12", "-6.04647, 29.7701, -91.8418, 0.12", "-5.99671, 29.6529, -92.1367, 0.12", "-5.84801, 29.261, -93.2349, 0.12", "-5.79088, 29.0372, -93.9282, 1.92", "-5.78814, 28.8928, -94.3502, 2.28", "-5.80347, 27.723, -97.9571, 0.12", "-5.81472, 27.5929, -98.327, 0.12", "-5.84666, 27.2476, -99.24, 1.8", "-5.86614, 27.0915, -99.606, 1.8", "-5.90073, 26.8289, -100.161, 1.2", "-5.98061, 26.2333, -101.08, 0.12", "-6.08454, 25.8358, -101.383, 0.12", "-6.11027, 25.6948, -101.498, 0.6", "-6.13805, 25.3117, -101.794, 0.12", "-6.14004, 24.7354, -102.223, 0.12", "-6.14033, 24.5982, -102.32, 0.36", "-6.11929, 24.2944, -102.57, 0.36", "-6.0872, 24.0896, -102.765, 0.12", "-5.99147, 23.4592, -103.359, 0.12", "-5.84542, 22.9338, -103.993, 0.12", "-5.78155, 22.7412, -104.239, 0.96", "-5.47211, 21.8738, -105.333, 0.12", "-5.30759, 21.5462, -105.835, 0.12", "-5.01534, 21.0395, -106.671, 2.76", "-4.17156, 19.8365, -108.948, 0.12", "-3.88451, 19.4518, -109.692, 0.12", "-3.75927, 19.2986, -109.992, 0.96", "-2.7183, 18.1951, -112.211, 0.12", "-2.44326, 17.9729, -112.726, 0.12", "-1.80733, 17.5664, -113.753, 0.12", "-1.6078, 17.4539, -114.017, 1.2", "-1.25709, 17.2771, -114.426, 2.28", "-0.361249, 16.8197, -115.305, 1.68", "0.376046, 16.4085, -115.793, 0.12", "0.785269, 16.2217, -116.037, 0.12", "1.01685, 16.1198, -116.16, 0.12", "1.33908, 15.9956, -116.359, 0.12", "1.67014, 15.8559, -116.565, 0.6", "1.89439, 15.7461, -116.689, 0.6", "2.70311, 15.352, -117.316, 0.24", "2.8769, 15.2666, -117.5, 0.24", "3.42963, 14.9883, -118.194, 0.12", "3.9999, 14.649, -118.97, 2.4", "4.09619, 14.5831, -119.104, 2.4", "5.29101, 13.7288, -120.98, 0.12", "6.07207, 13.1188, -122.287, 0.12", "6.53883, 12.741, -123.1, 0.12", "6.97051, 12.382, -123.895, 3.12", "7.15438, 12.2217, -124.26, 3.12", "8.6523, 10.7311, -127.374, 0.12", "8.85209, 10.5, -127.81, 0.12", "8.94697, 10.3794, -128.028, 0.48", "9.14966, 10.106, -128.503, 0.12", "9.30556, 9.89108, -128.895, 0.12", "9.40133, 9.74153, -129.208, 0.48", "9.52763, 9.4646, -129.765, 0.12", "9.62824, 9.23081, -130.259, 0.12", "9.89366, 8.5704, -131.551, 2.76", "9.94419, 8.43517, -131.792, 2.76", "10.5097, 6.89516, -134.4, 0.12", "10.5945, 6.65737, -134.764, 0.12", "10.7051, 6.34555, -135.208, 0.12", "10.8735, 5.87742, -135.845, 0.12", "11.0707, 5.32158, -136.556, 1.8", "11.2261, 4.93737, -137.014, 2.16", "11.3804, 4.53529, -137.42, 1.92", "11.7804, 3.56035, -138.574, 0.12", "11.8595, 3.34994, -138.852, 0.72", "11.9582, 2.96468, -139.431, 0.72", "11.9816, 2.74728, -139.742, 0.12", "11.9767, 2.33099, -140.294, 0.12", "11.9284, 1.88943, -140.828, 0.12", "11.8457, 1.41864, -141.296, 2.4", "11.636, 0.299237, -142.306, 0.12", "11.5023, -0.42059, -142.9, 0.12", "11.4552, -0.730822, -143.127, 0.6", "11.4341, -0.955972, -143.289, 0.12", "11.399, -1.40931, -143.597, 0.12", "11.3914, -1.55536, -143.695, 0.48", "11.4051, -1.97599, -144.013, 0.12", "11.4946, -2.92545, -144.85, 0.12", "11.5814, -3.64207, -145.518, 1.68", "11.6196, -3.91934, -145.786, 2.16", "11.6562, -4.14873, -146.003, 2.16", "11.897, -5.42309, -147.192, 0.12", "11.9712, -5.81518, -147.542, 0.12", "12.0108, -6.01171, -147.726, 0.48", "12.0202, -6.07861, -147.782, 0.12", "12.0692, -6.6959, -148.272, 0.12", "12.0447, -7.28126, -148.682, 0.12", "11.9882, -7.67218, -148.977, 1.68", "11.9409, -7.92909, -149.215, 1.92", "11.8169, -8.43571, -149.737, 0.12", "11.7155, -8.74602, -150.084, 0.12", "11.5553, -9.09822, -150.505, 1.32", "11.1114, -9.99851, -151.627, 0.12", "10.9525, -10.3232, -152.058, 0.12", "10.8544, -10.5343, -152.38, 0.48", "10.786, -10.6702, -152.617, 0.12", "10.6306, -10.9635, -153.223, 0.12", "10.4103, -11.3259, -154.022, 0.12", "10.3499, -11.3999, -154.205, 0.96", "10.0196, -11.7022, -155.069, 0.12", "9.87875, -11.8106, -155.398, 0.12", "9.52998, -12.0379, -156.118, 1.44", "9.20562, -12.2223, -156.687, 1.8", "8.6448, -12.5121, -157.473, 0.12", "7.89798, -12.8846, -158.366, 0.12", "7.70451, -12.977, -158.558, 0.48", "7.57393, -13.0371, -158.676, 0.12", "7.20328, -13.2131, -158.972, 0.12", "6.92953, -13.3456, -159.18, 1.08", "6.58264, -13.5233, -159.414, 1.68", "5.92059, -13.8646, -159.824, 0.12", "5.63239, -14.0152, -159.997, 0.12", "5.43887, -14.1287, -160.113, 0.48", "5.29928, -14.2197, -160.196, 0.12", "4.77619, -14.6217, -160.57, 0.12", "4.24146, -15.1414, -161.029, 1.68", "3.91401, -15.586, -161.416, 0.12", "3.66582, -16.039, -161.84, 0.12", "3.5264, -16.381, -162.169, 0.6", "3.3049, -17.1473, -162.917, 0.12", "3.21553, -17.6837, -163.43, 0.12", "3.15543, -18.4238, -164.181, 0.12", "3.13741, -18.6867, -164.445, 0.12", "3.11331, -18.9605, -164.719, 1.68", "3.0776, -19.2334, -164.973, 2.28", "2.95822, -19.7384, -165.389, 1.56", "2.73271, -20.4166, -165.925, 0.12", "2.58649, -20.7699, -166.145, 0.12", "2.45502, -21.0824, -166.333, 0.12", "2.30541, -21.4382, -166.547, 1.32", "2.18009, -21.7336, -166.717, 1.56", "1.98808, -22.1798, -166.971, 0.12", "1.47364, -23.375, -167.601, 0.12", "1.16651, -24.1031, -167.993, 1.8", "1.06718, -24.3644, -168.131, 2.52", "0.985795, -24.5773, -168.244, 2.52", "0.732545, -25.2593, -168.621, 0.12", "0.41211, -26.1471, -169.123, 0.12", "0.257931, -26.5767, -169.358, 1.56", "0.0697919, -27.1186, -169.628, 2.04", "-0.129498, -27.7254, -169.924, 2.04", "-0.396755, -28.5883, -170.332, 0.12", "-0.552988, -29.1324, -170.571, 0.12", "-0.634689, -29.4821, -170.712, 0.72", "-0.67088, -29.6658, -170.77, 0.12", "-0.75067, -30.1123, -170.873, 0.12", "-0.776196, -30.3046, -170.9, 0.48", "-0.800617, -30.5695, -170.939, 0.12", "-0.827337, -31.512, -171.137, 0.12", "-0.813067, -32.1377, -171.294, 1.56", "-0.794055, -32.4386, -171.379, 1.8", "-0.753765, -32.7905, -171.49, 1.8", "-0.587763, -33.9123, -171.879, 0.12", "-0.456184, -34.6337, -172.159, 0.12", "-0.456184, -34.6337, -172.159, 0.48", "-0.411081, -34.7827, -172.24, 0.12", "-0.24107, -35.2111, -172.495, 0.12", "-0.164649, -35.363, -172.593, 0.48", "-0.0918412, -35.5046, -172.683, 0.12", "0.275467, -36.1209, -173.2, 0.12", "0.742689, -36.9033, -173.896, 0.48", "0.86541, -37.1354, -174.085, 0.12", "1.11986, -37.6441, -174.476, 1.56", "1.33784, -38.1123, -174.809, 1.92", "1.64612, -38.8324, -175.271, 1.56", "1.79613, -39.184, -175.497, 0.12", "2.38657, -40.8166, -176.431, 0.12", "2.46448, -41.0429, -176.557, 0.84", "2.54384, -41.282, -176.687, 0.12", "2.67232, -41.6525, -176.886, 0.12", "3.06129, -42.7912, -177.444, 0.12", "3.46058, -43.8044, -178.029, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-7.32999, 40.9635, -76.9862, 0.12", "-7.6027, 41.7827, -78.1836, 0.12", "-7.79171, 42.3808, -79.0259, 0.12", "-8.14841, 43.4099, -80.3253, 2.4", "-8.72562, 45.1528, -82.4616, 0.24", "-8.84806, 45.51, -82.8842, 0.24", "-8.97959, 45.882, -83.302, 1.44", "-9.25079, 46.6536, -84.1342, 0.12", "-9.54444, 47.5721, -85.0463, 0.12", "-9.83068, 48.3831, -85.7295, 0.12", "-10.1291, 49.1678, -86.3554, 2.28", "-10.4752, 50.1331, -87.159, 0.12", "-10.7649, 50.9067, -87.8116, 0.12", "-11.1637, 51.9249, -88.6554, 0.12", "-11.6171, 53.0414, -89.58, 2.76", "-12.1821, 54.3899, -90.6982, 0.24", "-12.1821, 54.3899, -90.6982, 0.12", "-12.5142, 55.1745, -91.3247, 0.12", "-12.6715, 55.5482, -91.6226, 0.96", "-12.8933, 56.0169, -91.9608, 0.96", "-13.3854, 57.0569, -92.6696, 0.12", "-13.8147, 58.1157, -93.339, 0.12", "-13.9483, 58.5063, -93.5798, 0.72", "-14.1303, 59.1784, -94.0234, 0.12", "-14.3107, 59.8862, -94.4923, 0.12", "-14.5205, 60.6523, -94.9664, 2.16", "-14.8807, 62.0797, -95.9097, 0.12", "-14.9735, 62.5025, -96.2168, 0.12", "-15.1669, 63.4417, -96.9265, 0.12", "-15.2973, 64.0531, -97.3812, 0.12", "-15.4285, 64.8138, -97.998, 1.44", "-15.6981, 66.6182, -99.4583, 0.12", "-15.8038, 67.2162, -99.9236, 0.12", "-15.879, 67.6736, -100.269, 1.56", "-15.961, 68.2093, -100.651, 1.56", "-16.1329, 69.397, -101.503, 0.12", "-16.2043, 69.922, -101.872, 0.12", "-16.2987, 70.3665, -102.13, 0.12", "-16.3508, 70.61, -102.297, 0.12", "-16.5874, 71.5014, -102.957, 0.12", "-16.6982, 71.8577, -103.251, 0.12", "-16.9225, 72.4053, -103.732, 1.92", "-17.0736, 72.7664, -104.094, 2.16", "-17.6187, 73.9317, -105.351, 0.12", "-17.8533, 74.3527, -105.828, 0.12", "-18.0524, 74.6726, -106.212, 1.08", "-18.2942, 75.0136, -106.674, 1.32", "-18.7315, 75.5311, -107.475, 0.12", "-19.0475, 75.8458, -108.04, 0.12", "-19.2932, 76.0436, -108.467, 0.48", "-19.5334, 76.2086, -108.913, 0.12", "-20.0753, 76.5592, -109.92, 0.12", "-20.4098, 76.7809, -110.552, 1.44", "-20.5998, 76.9204, -110.911, 1.68", "-21.1645, 77.4402, -112.03, 0.12", "-21.5898, 77.8713, -112.822, 0.12", "-21.9489, 78.265, -113.423, 1.8", "-22.3103, 78.7015, -113.956, 2.16", "-22.8986, 79.4043, -114.716, 0.12", "-23.2509, 79.8429, -115.206, 0.12", "-23.5331, 80.1612, -115.571, 0.48", "-23.5849, 80.2137, -115.636, 0.12", "-23.8906, 80.481, -116.045, 0.12", "-24.3611, 80.8629, -116.764, 1.68", "-25.293, 81.5757, -118.31, 0.12", "-25.6556, 81.8505, -118.946, 0.12", "-25.8727, 82.0377, -119.339, 0.48", "-26.2734, 82.4078, -120.025, 0.12", "-26.5396, 82.6801, -120.477, 0.12", "-26.8515, 83.0383, -120.998, 1.56", "-27.1262, 83.345, -121.401, 2.28", "-27.7897, 84.0832, -122.287, 0.12", "-28.1076, 84.4129, -122.681, 0.12", "-28.346, 84.6212, -122.922, 0.48", "-28.7822, 84.9563, -123.31, 0.12", "-29.0997, 85.1802, -123.59, 0.12", "-29.8931, 85.6587, -124.253, 2.16", "-31.0169, 86.177, -125.088, 0.12", "-31.8153, 86.48, -125.643, 0.12", "-32.2654, 86.6343, -125.966, 0.6", "-32.561, 86.7252, -126.186, 0.12", "-33.1492, 86.8866, -126.627, 0.12", "-33.8548, 87.0618, -127.149, 2.4", "-34.2088, 87.1453, -127.378, 2.4", "-35.5042, 87.4571, -128.19, 0.12", "-36.5932, 87.7218, -128.811, 0.12", "-37.3107, 87.8979, -129.183, 1.68", "-37.8639, 88.0288, -129.446, 2.16", "-39.0267, 88.2769, -129.918, 0.12", "-39.7449, 88.4133, -130.156, 0.12", "-40.3377, 88.5039, -130.296, 0.6", "-40.5452, 88.5333, -130.344, 0.12", "-41.6806, 88.6988, -130.649, 0.12", "-42.1657, 88.7586, -130.748, 0.84", "-42.6392, 88.81, -130.814, 1.08", "-42.8749, 88.8432, -130.847, 1.08", "-43.2266, 88.9094, -130.901, 0.12", "-43.8807, 89.0652, -130.994, 0.12", "-44.6759, 89.2852, -131.1, 1.44", "-45.2962, 89.457, -131.198, 1.68", "-45.9685, 89.6411, -131.303, 0.12", "-46.9436, 89.9114, -131.474, 0.12", "-47.1783, 89.9751, -131.522, 1.32", "-47.7047, 90.1119, -131.661, 0.12", "-48.1049, 90.2107, -131.781, 0.12", "-48.333, 90.2521, -131.844, 0.36", "-48.7073, 90.2798, -131.946, 0.12", "-49.225, 90.2828, -132.093, 0.12", "-49.639, 90.2734, -132.211, 0.48", "-50.251, 90.2479, -132.403, 0.12", "-51.0653, 90.2, -132.68, 0.12", "-51.6799, 90.1537, -132.901, 1.8", "-52.1066, 90.1141, -133.064, 2.64", "-52.4037, 90.084, -133.187, 2.64", "-53.3939, 89.9673, -133.64, 0.12", "-54.2512, 89.8508, -134.076, 0.12", "-54.6317, 89.8019, -134.272, 0.12", "-54.938, 89.7654, -134.429, 0.48", "-55.1305, 89.7416, -134.523, 0.12", "-55.5356, 89.7005, -134.7, 0.12", "-55.939, 89.679, -134.849, 0.6", "-56.3072, 89.6928, -134.971, 0.12", "-56.8184, 89.7457, -135.129, 0.12", "-57.2591, 89.8028, -135.232, 0.72", "-57.7301, 89.8742, -135.322, 0.96", "-58.2832, 89.9964, -135.438, 0.12", "-58.9279, 90.1751, -135.594, 0.12", "-59.3373, 90.2987, -135.698, 1.2", "-60.0861, 90.5592, -135.898, 1.56", "-60.5971, 90.7712, -136.061, 1.68", "-61.5055, 91.2307, -136.378, 0.12", "-62.2956, 91.6807, -136.671, 0.12", "-62.6629, 91.9435, -136.899, 1.56", "-63.0779, 92.2666, -137.182, 1.56", "-63.549, 92.6708, -137.549, 0.12", "-65.0238, 94.0202, -138.775, 0.12", "-65.2058, 94.1971, -138.937, 0.48", "-66.7206, 95.9239, -140.631, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.90103, -165.952, -22.7387, 3.37", "-2.35248, -166.394, -21.3472, 3.37", "-0.730484, -167.523, -17.4856, 0.12", "-0.599524, -167.585, -17.2321, 0.12", "-0.199111, -167.736, -16.5498, 0.12", "0.077196, -167.814, -16.1396, 0.72", "0.431626, -167.888, -15.6808, 0.72", "0.655579, -167.896, -15.4931, 0.12", "2.2288, -167.736, -14.7383, 0.12", "2.39222, -167.738, -14.6231, 0.96", "2.86261, -167.849, -14.1116, 0.96", "3.34606, -168.138, -13.1579, 0.12", "3.41002, -168.219, -12.9182, 0.12", "3.45045, -168.369, -12.4741, 0.84", "3.38811, -169.262, -9.99432, 0.24", "3.30183, -169.793, -8.62275, 1.92", "3.08987, -170.638, -6.63365, 0.24", "2.96881, -171.021, -5.81568, 1.68", "2.60526, -172.117, -3.69162, 1.68", "2.49086, -172.438, -3.15099, 0.12", "2.34763, -172.839, -2.66243, 0.12", "2.23915, -173.213, -2.34013, 0.6", "2.13629, -173.771, -2.03964, 1.08", "2.03702, -174.487, -1.75953, 1.08", "1.87713, -175.546, -1.52867, 0.12", "1.78456, -176.164, -1.39649, 0.12", "1.70701, -176.788, -1.27822, 0.12", "1.65152, -177.417, -1.18132, 0.12", "1.63365, -178.04, -1.11455, 0.12", "1.64395, -178.565, -1.09584, 0.96", "1.67577, -179.208, -1.10182, 0.12", "1.70702, -180.004, -1.10873, 0.12", "1.7068, -180.463, -1.09604, 1.32", "1.68734, -180.747, -1.07885, 1.32", "1.59594, -181.585, -1.00437, 0.12", "1.47411, -182.336, -0.920593, 0.12", "1.44296, -182.513, -0.898926, 0.48", "1.34625, -183.089, -0.818815, 0.12", "1.32164, -183.371, -0.780217, 0.12", "1.32197, -183.739, -0.731701, 0.12", "1.38943, -183.998, -0.627872, 0.48", "1.5421, -184.47, -0.337461, 0.36", "1.63336, -184.818, -0.173224, 0.36", "1.70943, -185.154, -0.0607817, 1.2", "1.78538, -185.516, 0.037508, 1.2", "2.15849, -187.385, 0.653512, 0.12", "2.30749, -188.076, 0.888, 0.12", "2.58707, -189.581, 1.4037, 0.12", "2.70549, -190.332, 1.64844, 0.12", "2.76657, -190.836, 1.78977, 0.12", "2.86925, -191.986, 2.00027, 1.32", "2.95644, -192.891, 1.94986, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.90103, -165.952, -22.7387, 0.12", "-4.33015, -166.857, -22.8515, 0.12", "-5.27849, -167.457, -22.9263, 0.12", "-5.57858, -167.647, -22.95, 0.96", "-5.93225, -167.871, -22.9779, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "5.14999, -160.918, -29.3438, 0.12", "5.78886, -161.82, -29.3168, 0.12", "6.24639, -162.584, -29.2868, 0.12", "6.67198, -163.301, -29.265, 0.72", "7.22049, -164.229, -29.2619, 0.84", "7.53068, -164.735, -29.244, 0.48", "7.74812, -165.08, -29.2273, 0.12", "8.22664, -165.824, -29.1789, 0.12", "8.53746, -166.305, -29.1297, 0.12", "8.83785, -166.741, -29.0891, 0.84", "9.39153, -167.602, -29.1171, 0.36", "9.65169, -168.022, -29.1509, 0.12", "10.2692, -169.026, -29.2723, 0.12", "10.7972, -169.896, -29.4119, 1.8", "11.2088, -170.67, -29.5527, 1.56", "11.8652, -172.041, -29.8454, 0.12", "11.9695, -172.291, -29.9141, 0.12", "12.0182, -172.417, -29.9499, 0.36", "12.1719, -172.868, -30.0806, 0.12", "12.3867, -173.671, -30.2751, 0.12", "12.4498, -173.939, -30.3174, 0.12", "12.5568, -174.361, -30.3545, 0.72", "12.7147, -175.037, -30.4115, 0.96", "12.8313, -175.568, -30.4528, 0.12", "13.1646, -177.195, -30.5698, 0.12", "13.2668, -177.73, -30.6057, 0.84", "13.3619, -178.294, -30.6509, 0.12", "13.45, -178.97, -30.7042, 0.12", "13.4979, -179.414, -30.7391, 0.96", "13.5571, -179.971, -30.7872, 0.12", "13.648, -180.925, -30.883, 0.12", "13.7254, -181.844, -30.9856, 1.68", "13.7474, -182.234, -31.0345, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "5.14999, -160.918, -29.3438, 0.6", "6.07377, -160.416, -26.4216, 0.6", "6.15109, -160.655, -26.8638, 0.6", "6.49578, -161.336, -27.9091, 0.12", "6.65209, -161.61, -28.288, 0.12", "6.84745, -161.952, -28.7614, 0.96", "7.04356, -162.295, -29.2367, 0.96", "7.43422, -163.099, -30.4871, 0.12", "7.58372, -163.447, -31.0244, 0.12", "7.67034, -163.627, -31.2847, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "19.9975, -98.5039, -40.5448, 0.12", "21.686, -99.5902, -38.4463, 0.12", "22.0676, -99.8306, -37.9958, 0.12", "22.2458, -99.9436, -37.7985, 0.6", "22.7528, -100.25, -37.2682, 0.12", "23.682, -100.782, -36.3546, 0.12", "23.941, -100.926, -36.1046, 0.12", "24.1348, -101.022, -35.9632, 0.12", "24.4057, -101.159, -35.7733, 0.12", "25.0568, -101.494, -35.3196, 0.12", "25.264, -101.606, -35.19, 0.6", "25.6966, -101.889, -34.9832, 0.12", "26.134, -102.186, -34.7531, 0.12", "26.7092, -102.553, -34.451, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "19.9975, -98.5039, -40.5448, 0.24", "20.104, -100.035, -41.1795, 0.24", "20.1131, -101.412, -41.7733, 0.24", "20.0939, -102.051, -42.0443, 0.96", "20.0391, -103.16, -42.5077, 1.8", "20.0028, -104.244, -43.0301, 0.84", "19.9762, -104.938, -43.4091, 0.12", "19.9289, -105.99, -44.1088, 0.12", "19.8858, -106.534, -44.499, 0.72", "19.8733, -106.663, -44.5817, 0.72", "19.7904, -107.999, -45.3526, 0.24", "19.7982, -108.572, -45.6031, 0.24", "19.8704, -109.524, -45.9069, 0.24", "19.9783, -110.514, -46.107, 0.24", "20.063, -111.434, -46.203, 0.24", "20.1242, -112.489, -46.2417, 0.24", "20.1512, -113.541, -46.1662, 1.44", "20.1695, -114.687, -46.0287, 1.92", "20.1533, -115.816, -45.862, 1.92", "20.1116, -116.958, -45.6959, 1.2", "20.0488, -118.133, -45.5537, 0.48", "19.9618, -119.28, -45.4321, 0.12", "19.9009, -120.105, -45.3262, 0.12", "19.8691, -120.615, -45.2655, 0.6", "19.8402, -121.255, -45.2147, 0.12", "19.8221, -122.583, -45.1047, 0.12", "19.8427, -123.249, -45.0641, 0.12", "19.9768, -125.603, -45.0922, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "35.7945, -29.9976, -6.82556, 0.96", "35.5174, -25.8356, 2.31734, 0.96", "35.4688, -25.3099, 3.27511, 0.72", "35.43, -24.9582, 3.78995, 0.24", "35.3965, -24.5347, 4.27151, 0.24", "35.3789, -23.8677, 4.83493, 0.24", "35.401, -22.9776, 5.45582, 0.84", "35.5291, -21.7778, 5.66346, 1.2", "35.6982, -20.6857, 5.90933, 0.48", "35.9702, -19.2795, 6.36419, 0.24", "36.3323, -17.8404, 6.91413, 0.24", "36.893, -16.0439, 7.72272, 1.68", "37.2077, -15.1426, 8.15085, 2.28", "37.4524, -14.4846, 8.47729, 2.4", "38.2489, -12.3433, 9.55988, 0.36", "38.5433, -11.5022, 9.98212, 0.36", "38.9197, -10.345, 10.5227, 0.84", "39.4072, -8.7002, 11.2122, 0.84", "39.8526, -7.03004, 11.8761, 0.6", "40.2467, -5.47525, 12.4554, 0.6", "40.4883, -4.48902, 12.7724, 0.96", "40.6463, -3.70905, 13.018, 0.96", "40.8765, -2.24796, 13.4409, 0.12", "40.9506, -1.52296, 13.6398, 0.12", "40.9942, -0.90588, 13.7741, 0.12", "41.0301, -0.235548, 13.8864, 0.12", "41.0695, 0.439918, 14.001, 0.6", "41.1147, 0.976877, 14.0624, 0.96", "41.1568, 1.84006, 13.9955, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "35.7945, -29.9976, -6.82556, 0.12", "37.265, -30.3937, -6.33709, 0.12", "37.6989, -30.4995, -6.19151, 0.12", "38.2429, -30.6215, -6.00693, 0.6", "38.9112, -30.7484, -5.78824, 0.6", "39.8776, -30.9088, -5.49445, 0.12", "40.7773, -31.0219, -5.24739, 0.12", "40.8918, -31.025, -5.22104, 0.36", "41.2624, -31.0141, -5.14752, 0.12", "41.7719, -30.9695, -5.0294, 0.12", "42.226, -30.8841, -4.92358, 0.48", "42.889, -30.7401, -4.78888, 0.6", "43.3479, -30.6415, -4.68368, 0.48", "43.7557, -30.5761, -4.59298, 0.48", "44.7191, -30.4433, -4.2262, 0.12", "45.6902, -30.3728, -3.7626, 2.04", "46.2459, -30.3744, -3.4679, 3.25", "46.76, -30.4353, -3.19016, 3.37", "47.4083, -30.5807, -2.85106, 2.88", "49.4467, -31.2367, -1.82609, 0.24", "50.3049, -31.5979, -1.42625, 0.24", "50.848, -31.8817, -1.17426, 0.72", "51.8047, -32.4145, -0.777262, 0.96", "52.4185, -32.7802, -0.572863, 0.24", "52.6176, -32.8995, -0.544065, 0.24", "52.9078, -33.0564, -0.574188, 0.24", "53.5736, -33.2934, -0.674901, 0.24", "54.1507, -33.3974, -0.765431, 1.2", "54.62, -33.4198, -0.770316, 1.92", "55.5875, -33.3983, -0.684064, 1.92", "56.5637, -33.3387, -0.532685, 0.36", "57.1759, -33.2804, -0.363866, 0.36", "58.3866, -33.1338, 0.0594287, 0.36", "60.291, -32.8938, 0.815704, 1.68", "60.8753, -32.827, 1.04729, 2.52", "61.7729, -32.7461, 1.40732, 2.64", "63.7457, -32.6509, 2.09876, 0.24", "64.606, -32.6468, 2.3436, 0.24", "65.1936, -32.6614, 2.44897, 0.36", "66.2092, -32.718, 2.4697, 1.08", "66.7335, -32.7506, 2.4773, 1.08", "67.6639, -32.7977, 2.45909, 0.48", "68.1317, -32.8077, 2.4175, 0.24", "68.7876, -32.7674, 2.42872, 0.24", "69.36, -32.6701, 2.51003, 0.6", "70.4957, -32.3835, 2.81363, 0.36", "71.0384, -32.2604, 2.97756, 0.36", "71.4816, -32.1984, 3.16154, 0.36", "71.7988, -32.1939, 3.31505, 0.48", "72.0356, -32.2194, 3.42599, 0.24", "72.4689, -32.2938, 3.62917, 0.24", "73.2508, -32.4572, 3.91921, 0.24", "74.3738, -32.6965, 4.28135, 0.24", "74.8418, -32.7963, 4.41254, 1.2", "75.6509, -32.9367, 4.59792, 2.16", "76.8248, -33.0771, 4.8605, 1.8", "77.7544, -33.1387, 5.04866, 0.36", "79.1097, -33.12, 5.43496, 0.36", "79.7099, -33.0802, 5.62969, 0.36", "80.6946, -32.9753, 6.00392, 0.36", "81.6414, -32.8378, 6.49105, 1.56", "82.3624, -32.7132, 6.93198, 2.04", "84.3468, -32.342, 8.35862, 0.24", "84.9178, -32.2391, 8.82166, 0.24", "85.2032, -32.1978, 9.0556, 0.24", "86.5027, -32.1019, 10.1188, 1.68", "86.8914, -32.0974, 10.4078, 2.04", "87.1846, -32.1037, 10.6359, 2.04", "88.4734, -32.1324, 11.5592, 0.24", "89.0326, -32.109, 11.9876, 0.24", "89.4964, -32.048, 12.3521, 1.2", "89.868, -31.9375, 12.6409, 1.2", "91.2615, -31.2581, 13.8138, 0.12", "91.7713, -30.878, 14.2547, 0.12", "92.0593, -30.568, 14.4784, 0.24", "92.2567, -30.3165, 14.6581, 0.24", "92.641, -29.8442, 14.9739, 0.24", "92.857, -29.6053, 15.1294, 0.24", "93.2713, -29.2473, 15.3225, 0.24", "93.9464, -28.8128, 15.5952, 0.24", "95.194, -28.1209, 16.109, 0.12", "96.036, -27.7215, 16.4562, 0.12", "96.2704, -27.6284, 16.5533, 1.44", "97.1638, -27.3043, 16.9145, 2.52", "98.1366, -26.9483, 17.2866, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-15.9215, -306.222, -43.2272, 0.12", "-15.342, -307.395, -43.3846, 0.12", "-15.0432, -307.989, -43.4623, 0.12", "-14.9056, -308.263, -43.4991, 0.48", "-14.6631, -308.737, -43.5462, 0.48", "-14.4002, -309.233, -43.587, 0.48", "-14.2525, -309.489, -43.6354, 0.48", "-14.1088, -309.7, -43.7045, 0.48", "-13.7737, -310.114, -43.902, 1.68", "-13.4167, -310.495, -44.133, 2.28", "-13.0741, -310.822, -44.3654, 2.4", "-12.0908, -311.675, -45.0684, 0.48", "-11.4182, -312.232, -45.5784, 0.36", "-11.0103, -312.547, -45.9091, 0.12", "-10.789, -312.7, -46.1013, 0.12", "-10.6236, -312.802, -46.2599, 0.12", "-10.3665, -312.941, -46.5083, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.9215, -306.222, -43.2272, 0.12", "-16.0164, -307.961, -43.2209, 0.12", "-16.028, -308.399, -43.2516, 0.12", "-16.0206, -308.847, -43.3048, 0.12", "-16.0246, -309.589, -43.4604, 0.12", "-16.0392, -309.957, -43.549, 0.48", "-16.0912, -310.637, -43.7155, 0.48", "-16.1181, -310.891, -43.8009, 0.12", "-16.3766, -311.66, -44.1205, 0.12", "-16.7428, -312.396, -44.4498, 0.12", "-16.9757, -312.821, -44.6331, 1.68", "-17.1659, -313.144, -44.7904, 1.8", "-17.5077, -313.695, -45.082, 1.8", "-18.5389, -315.407, -45.9609, 0.12", "-18.8059, -315.866, -46.1988, 0.12", "-19.2612, -316.815, -46.6531, 0.12", "-19.5455, -317.536, -47.0309, 0.48", "-19.6202, -317.781, -47.1608, 0.48", "-19.717, -318.38, -47.4399, 0.48", "-19.7367, -318.566, -47.5166, 0.12", "-19.8331, -319.082, -47.7448, 0.12", "-20.0084, -319.814, -48.0585, 0.12", "-20.1001, -320.175, -48.1967, 0.96", "-20.3262, -320.95, -48.4904, 1.44", "-20.84, -322.392, -49.1092, 0.12", "-21.1738, -323.256, -49.4658, 0.12", "-21.3225, -323.631, -49.6164, 0.12", "-21.4308, -323.904, -49.7132, 0.6", "-21.6316, -324.348, -49.8894, 0.6", "-22.0726, -325.097, -50.291, 0.12", "-22.525, -325.764, -50.6927, 0.12", "-22.5985, -325.867, -50.7624, 0.48", "-22.7956, -326.182, -50.9498, 0.48", "-23.2484, -327.111, -51.395, 0.48", "-23.6454, -328.15, -51.7892, 0.24", "-23.7803, -328.496, -51.9838, 0.12", "-24.1244, -329.541, -52.6148, 0.12", "-24.3466, -330.222, -53.0622, 1.44", "-24.5137, -330.791, -53.4464, 2.16", "-24.7056, -331.551, -53.9458, 2.28", "-25.357, -334.347, -55.7358, 0.12", "-25.6961, -335.866, -56.7558, 0.12", "-25.8735, -336.703, -57.3444, 0.84", "-25.9889, -337.289, -57.7589, 1.44", "-26.0755, -337.777, -58.098, 0.96", "-26.1234, -338.292, -58.3721, 0.12", "-26.1318, -338.786, -58.5155, 0.12", "-26.1633, -339.327, -58.6543, 0.12", "-26.1868, -339.639, -58.7163, 0.36", "-25.9214, -340.452, -57.982, 0.12", "-25.3481, -341.75, -56.3684, 0.12", "-25.1715, -342.05, -55.8754, 1.08", "-24.9332, -342.373, -55.2155, 1.8", "-24.7836, -342.537, -54.8117, 2.04", "-21.8742, -345.221, -47.1237, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "13.6863, 103.486, 14.7393, 0.48", "14.0966, 105.178, 15.0358, 0.48", "14.252, 105.909, 15.1426, 0.48", "14.3354, 106.317, 15.1933, 0.48", "14.4304, 106.831, 15.2337, 0.48", "14.6018, 107.944, 15.2811, 0.48", "14.7319, 109.068, 15.3078, 0.48", "14.7428, 109.305, 15.2963, 0.72", "14.7677, 109.759, 15.3, 0.96", "14.8222, 110.513, 15.3415, 0.96", "14.9056, 111.155, 15.459, 0.36", "15.0998, 112.125, 15.7299, 0.36", "15.2438, 112.732, 15.9376, 0.36", "15.5624, 114.022, 16.4218, 1.56", "15.7096, 114.609, 16.6566, 2.16", "16.1056, 116.154, 17.3135, 0.48", "16.3709, 117.318, 17.7455, 0.48", "16.5015, 118.0, 17.9699, 0.48", "16.5469, 118.396, 18.0735, 0.48", "16.5383, 119.103, 18.1879, 1.68", "16.4917, 119.525, 18.2343, 1.92", "16.2679, 120.886, 18.2679, 1.08", "16.1551, 121.615, 18.287, 0.48", "16.0988, 122.14, 18.2984, 0.36", "16.0763, 123.109, 18.3141, 0.36", "16.138, 123.755, 18.349, 0.36", "16.3751, 124.929, 18.4127, 0.72", "16.513, 125.377, 18.4376, 0.36", "16.6869, 125.901, 18.4436, 0.36", "16.9728, 126.661, 18.4439, 0.36", "17.3626, 127.627, 18.4385, 0.84", "17.8289, 128.64, 18.5928, 1.92", "18.078, 129.338, 18.6299, 2.28", "18.2116, 129.85, 18.6102, 2.64", "18.286, 130.268, 18.5564, 2.76", "18.3445, 130.866, 18.4267, 2.76", "18.5125, 133.313, 17.6679, 1.56", "18.7624, 136.566, 16.4547, 0.12", "18.7918, 136.871, 16.3325, 0.12", "18.8229, 137.141, 16.2357, 0.12", "18.8583, 137.582, 16.0929, 0.72", "18.889, 138.216, 15.9176, 0.96", "18.8884, 138.97, 15.7153, 0.48", "18.9495, 139.607, 15.7151, 0.36", "19.0564, 141.04, 15.7299, 0.36", "19.0874, 141.5, 15.7771, 0.36", "19.1039, 141.855, 15.8319, 0.12", "19.1402, 142.766, 16.047, 0.96", "19.1736, 143.4, 16.2367, 1.32", "19.2047, 143.804, 16.3257, 1.2", "19.3877, 145.048, 16.7363, 0.48", "19.5515, 145.937, 17.056, 0.24", "19.6874, 146.598, 17.2954, 1.2", "19.8171, 147.163, 17.4974, 1.68", "20.1131, 148.332, 17.9151, 1.68", "20.6398, 150.291, 18.5999, 1.8", "20.8516, 151.046, 18.8294, 0.96", "21.1176, 151.826, 19.1394, 1.08", "21.3425, 152.435, 19.3836, 0.36", "21.8168, 153.723, 19.8401, 0.36", "22.0774, 154.498, 20.0693, 0.36", "22.2461, 155.048, 20.1541, 1.08", "22.6719, 156.495, 20.3599, 1.2", "23.0005, 157.704, 20.4906, 0.96", "23.2978, 158.957, 20.563, 0.36", "23.5094, 160.073, 20.4942, 0.24", "23.615, 160.784, 20.3958, 0.6", "23.6779, 161.256, 20.3246, 0.12", "23.7395, 161.66, 20.2529, 0.24", "23.9639, 162.871, 20.067, 0.24", "24.1606, 163.881, 19.9174, 0.24", "24.2921, 164.697, 19.7266, 1.68", "24.4513, 165.907, 19.4182, 2.52", "24.5444, 166.926, 19.172, 0.48", "24.6097, 167.909, 18.9445, 0.48", "24.638, 168.862, 18.7561, 0.72", "24.6202, 169.909, 18.615, 1.08", "24.5698, 170.614, 18.5545, 1.68", "24.4404, 171.532, 18.5056, 1.2", "24.2999, 172.299, 18.5329, 0.36", "24.1087, 173.297, 18.6308, 0.36", "23.987, 173.97, 18.7542, 0.36", "23.8489, 174.73, 18.9312, 0.36", "23.6806, 175.667, 19.1438, 2.04", "23.6169, 176.077, 19.242, 2.4", "23.503, 177.054, 19.4228, 2.4", "23.4229, 178.549, 19.5514, 0.36", "23.4369, 179.473, 19.5454, 0.36", "23.5022, 180.297, 19.527, 1.44", "23.5989, 180.937, 19.5042, 2.16", "23.8672, 182.417, 19.455, 0.48", "24.0355, 183.265, 19.4376, 0.12", "24.1544, 183.85, 19.4121, 0.6", "24.4417, 185.212, 19.4461, 0.36", "24.5704, 185.872, 19.5218, 0.24", "24.6849, 186.63, 19.6877, 0.24", "24.7197, 187.05, 19.8053, 0.24", "24.7414, 187.828, 19.9814, 0.36", "24.7487, 188.698, 20.095, 0.36", "24.786, 189.342, 20.1318, 0.36", "24.8563, 189.856, 20.1646, 0.36", "25.0459, 190.741, 20.1928, 1.68", "25.1986, 191.378, 20.1476, 2.4", "25.3062, 191.82, 20.0749, 2.4", "25.6412, 193.009, 19.8722, 0.24", "25.8136, 193.576, 19.7816, 0.24", "25.921, 193.932, 19.7333, 0.48", "26.2623, 195.154, 19.6382, 0.24", "26.4027, 195.887, 19.6136, 0.24", "26.4732, 196.669, 19.5904, 0.24", "26.4752, 197.299, 19.6121, 0.72", "26.4717, 197.845, 19.6756, 0.84", "26.4705, 198.22, 19.7354, 0.36", "26.4715, 198.939, 19.8369, 0.36", "26.4624, 199.718, 19.8546, 0.48", "26.444, 200.861, 19.745, 0.36", "26.4612, 201.497, 19.626, 0.36", "26.4968, 201.935, 19.5441, 0.96", "26.6226, 202.966, 19.2847, 0.96", "26.7228, 203.442, 19.1838, 0.36", "26.8228, 203.839, 19.1312, 0.36", "27.0952, 204.937, 19.0422, 2.4", "27.3777, 206.103, 19.0487, 3.25", "27.6174, 207.177, 19.1478, 2.16", "27.9135, 208.69, 19.358, 0.24", "28.0981, 209.801, 19.5131, 0.12", "28.2215, 210.733, 19.6264, 0.24", "28.2426, 211.05, 19.6588, 0.36", "28.2394, 211.876, 19.6763, 0.36", "28.1862, 212.915, 19.6577, 1.32", "28.1393, 213.558, 19.6007, 0.48", "28.1347, 213.931, 19.567, 0.12", "28.1644, 214.577, 19.5042, 0.12", "28.2261, 215.321, 19.4471, 0.12", "28.2861, 215.781, 19.4226, 0.84", "28.4859, 217.057, 19.405, 1.56", "28.5769, 217.569, 19.4046, 1.68", "28.7798, 218.499, 19.4146, 0.12", "29.0074, 219.295, 19.4087, 0.12", "29.205, 219.679, 19.5057, 0.24", "29.339, 219.825, 19.5923, 0.12", "29.7561, 220.063, 19.8822, 0.12", "30.0469, 220.176, 20.1024, 0.12", "31.0972, 220.432, 20.9593, 3.25", "34.1539, 220.833, 23.5737, 0.12", "34.4377, 220.848, 23.8301, 0.12", "34.6821, 220.843, 24.0603, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "13.6863, 103.486, 14.7393, 0.12", "11.4779, 103.984, 16.0449, 0.12", "10.9552, 104.103, 16.3764, 0.12", "10.5478, 104.199, 16.5896, 0.96", "9.50504, 104.421, 17.0701, 0.12", "8.76148, 104.566, 17.3288, 0.12", "8.32067, 104.653, 17.4663, 0.12", "7.66956, 104.79, 17.6369, 1.08", "6.35048, 105.042, 18.0529, 0.36", "5.07737, 105.27, 18.4642, 0.36", "3.57438, 105.575, 19.1333, 0.36", "2.90627, 105.697, 19.4474, 0.36", "1.81791, 105.841, 20.2976, 0.36", "1.30761, 105.854, 20.9097, 0.36", "0.8637, 105.784, 21.7239, 0.36", "0.0621933, 105.54, 23.713, 1.92", "-0.289844, 105.345, 24.9243, 1.92", "-1.19481, 104.547, 28.7717, 0.12", "-1.35255, 104.322, 29.6727, 0.12", "-1.40863, 104.168, 30.2267, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.78251, 128.431, -10.0664, 0.12", "2.54611, 129.566, -11.2302, 0.12", "2.50976, 129.782, -11.4055, 0.12", "2.45853, 130.189, -11.6588, 0.24", "2.41347, 131.559, -12.442, 0.24", "2.42422, 132.07, -12.7037, 0.24", "2.44243, 132.432, -12.8736, 0.24", "2.55217, 133.202, -13.1411, 1.68", "2.66102, 133.737, -13.3437, 1.68", "3.08047, 135.337, -13.9481, 0.12", "3.26581, 135.973, -14.1721, 0.12", "3.33769, 136.185, -14.2625, 0.6", "3.49457, 136.597, -14.465, 0.48", "3.91907, 137.595, -15.0202, 0.12", "4.15991, 138.11, -15.3305, 0.12", "4.2214, 138.239, -15.3939, 0.12", "4.35663, 138.532, -15.5332, 0.96", "4.49333, 138.834, -15.6609, 0.96", "4.63989, 139.173, -15.798, 0.48", "4.97142, 139.981, -16.0613, 0.12", "5.4231, 141.087, -16.424, 0.12", "5.70593, 141.782, -16.6599, 1.8", "5.85273, 142.146, -16.7847, 2.16", "6.30746, 143.272, -17.1442, 0.12", "6.64629, 144.089, -17.3824, 0.12", "6.77588, 144.405, -17.4572, 0.96", "6.97936, 144.901, -17.5697, 0.24", "7.17164, 145.372, -17.6703, 0.24", "7.47606, 146.078, -17.8204, 1.68", "7.72227, 146.603, -17.9177, 0.12", "7.94917, 147.028, -17.9923, 0.12", "8.28666, 147.565, -18.1557, 0.6", "8.56852, 147.963, -18.3034, 0.12", "9.20112, 148.796, -18.6686, 0.12", "9.32925, 148.956, -18.7459, 0.12", "9.84807, 149.61, -19.0702, 1.92", "11.0871, 151.182, -19.8172, 0.12", "11.6887, 151.972, -20.1602, 0.12", "11.8598, 152.217, -20.2396, 0.84", "12.0348, 152.506, -20.3053, 0.12", "12.4194, 153.276, -20.4093, 0.12", "12.6452, 153.88, -20.3664, 1.68", "12.7533, 154.271, -20.2357, 1.2", "12.9278, 154.949, -19.9488, 0.12", "13.0816, 155.541, -19.6363, 0.12", "13.1919, 155.944, -19.3833, 0.6", "13.5056, 156.981, -18.6375, 0.48", "13.664, 157.489, -18.2707, 0.48", "13.79, 157.866, -17.9964, 0.48", "13.9408, 158.3, -17.7173, 0.12", "14.0469, 158.594, -17.5578, 0.12", "14.2427, 159.172, -17.3531, 1.44", "14.3447, 159.54, -17.2871, 1.68", "14.5146, 160.274, -17.1945, 0.12", "14.7031, 161.231, -17.1147, 0.12", "14.8533, 162.078, -17.0784, 1.92", "15.0121, 163.07, -17.0504, 0.12", "15.1746, 164.117, -17.0367, 0.12", "15.2369, 164.503, -17.0372, 0.6", "15.2669, 164.694, -17.0414, 0.12", "15.3929, 165.568, -17.0614, 0.12", "15.4735, 166.164, -17.1214, 1.08", "15.5154, 166.463, -17.1674, 0.72", "15.5451, 166.67, -17.2163, 0.12", "15.6542, 167.405, -17.4303, 0.12", "15.7582, 168.096, -17.6576, 1.44", "15.9498, 169.311, -18.1864, 0.12", "16.0119, 169.656, -18.3447, 0.12", "16.0297, 169.743, -18.3841, 0.48", "16.0741, 169.94, -18.4648, 0.12", "16.2372, 170.565, -18.6714, 0.48", "16.4611, 171.331, -18.817, 0.12", "16.7766, 172.307, -18.9698, 0.12", "16.8381, 172.489, -19.0043, 0.72", "17.0484, 173.122, -19.1286, 1.44", "17.2096, 173.606, -19.221, 1.8", "17.4226, 174.204, -19.3258, 1.68", "17.8591, 175.463, -19.5137, 0.12", "18.0147, 175.921, -19.619, 0.12", "18.1636, 176.368, -19.7424, 0.12", "18.3217, 176.88, -19.9251, 1.32", "18.4283, 177.245, -20.0685, 1.32", "18.496, 177.507, -20.1759, 1.32", "18.6468, 178.246, -20.44, 0.12", "18.7719, 178.898, -20.7497, 0.12", "18.8726, 179.55, -21.1549, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.78251, 128.431, -10.0664, 0.12", "6.27256, 128.022, 11.0763, 0.12", "6.41243, 128.008, 11.8866, 0.12", "6.50304, 128.0, 12.3884, 0.12", "6.82382, 127.971, 14.0853, 0.84", "6.93161, 127.962, 14.6566, 0.84", "7.13288, 127.927, 15.9626, 0.36", "7.44733, 128.046, 15.4886, 0.36", "7.71275, 128.182, 14.9899, 0.36", "8.00219, 128.346, 14.3926, 0.36", "8.66338, 128.734, 13.0023, 0.36", "10.0327, 129.589, 10.0568, 0.36", "10.7715, 130.067, 8.52285, 2.04", "11.9236, 130.811, 6.21505, 1.56", "12.4534, 131.149, 5.2514, 0.12", "12.7152, 131.311, 4.83487, 0.12", "13.5209, 131.729, 3.85251, 1.2", "14.2145, 131.991, 3.27582, 0.48", "14.6124, 132.111, 3.01578, 0.12", "15.7385, 132.428, 2.445, 0.12", "16.895, 132.769, 1.76854, 1.32", "17.4171, 132.929, 1.42596, 1.68", "18.9483, 133.461, 0.273922, 0.12", "19.4077, 133.65, -0.16245, 0.12", "20.0769, 133.955, -0.946083, 0.6", "21.3056, 134.515, -2.58873, 0.12", "21.7233, 134.689, -3.16506, 0.12", "22.8817, 135.145, -4.82885, 1.8", "24.088, 135.588, -6.54017, 1.8", "25.3203, 135.97, -8.38564, 0.48", "25.7613, 136.072, -9.02185, 0.48", "26.2143, 136.141, -9.58679, 0.48", "27.1373, 136.241, -10.6701, 1.44", "27.695, 136.281, -11.2732, 1.68", "29.7439, 136.479, -13.3686, 0.36", "30.6499, 136.658, -14.3027, 0.36", "31.4291, 136.935, -15.3054, 1.68", "32.1254, 137.276, -16.3246, 1.2", "33.0558, 137.867, -17.8589, 0.36", "33.6576, 138.342, -18.9444, 0.36", "34.4123, 139.107, -20.4693, 1.68", "35.7085, 140.691, -23.4439, 0.24", "35.983, 141.063, -24.1, 0.24", "36.3194, 141.508, -24.8321, 0.84", "36.5968, 141.838, -25.3598, 0.96", "37.3289, 142.502, -26.4978, 0.24", "37.8032, 142.8, -27.0642, 0.24", "38.7769, 143.192, -27.9834, 1.44", "39.2135, 143.298, -28.4735, 1.68", "39.957, 143.365, -29.5912, 0.36", "40.3098, 143.348, -30.2131, 0.36", "40.5648, 143.298, -30.7247, 0.36", "41.5883, 143.011, -32.9464, 0.96", "42.7286, 142.618, -35.5148, 1.68", "44.0874, 142.103, -38.5975, 0.6", "44.3485, 141.987, -39.1827, 0.48", "45.3261, 141.489, -41.3095, 2.04", "45.6684, 141.28, -42.0066, 2.52", "46.7206, 140.544, -43.8328, 0.36", "47.0372, 140.323, -44.2637, 0.36", "47.5873, 139.995, -44.8249, 0.48", "48.7861, 139.315, -45.9319, 0.36", "49.2269, 139.051, -46.2922, 0.36", "49.4774, 138.89, -46.4919, 0.36", "50.7435, 138.069, -47.3623, 0.36", "51.7983, 137.396, -48.0091, 1.08", "52.5294, 136.957, -48.3699, 1.8", "53.4803, 136.425, -48.7045, 1.2", "54.2969, 136.024, -48.9574, 0.36", "55.4273, 135.528, -49.1752, 0.36", "56.5859, 135.083, -49.2798, 0.36", "57.4927, 134.796, -49.2974, 1.2", "58.6168, 134.53, -49.3086, 1.8", "60.1025, 134.277, -49.3389, 0.12", "62.2064, 134.015, -49.4325, 0.12", "63.3594, 133.891, -49.5211, 1.44", "64.0181, 133.799, -49.5962, 2.16", "65.1929, 133.563, -49.7537, 2.4", "66.7252, 133.137, -49.9579, 0.24", "67.3357, 132.894, -50.0362, 0.24", "67.9073, 132.58, -50.1411, 0.24", "68.9027, 131.903, -50.2601, 0.48", "69.553, 131.397, -50.3097, 0.12", "70.3204, 130.806, -50.3021, 0.12", "70.86, 130.435, -50.2305, 0.12", "71.4227, 130.127, -50.1405, 0.12", "72.1391, 129.83, -49.9334, 0.36", "72.6109, 129.689, -49.7659, 0.12", "74.0792, 129.309, -49.2181, 0.12", "75.3575, 129.013, -48.714, 1.44", "75.6854, 128.943, -48.5826, 1.56", "77.571, 128.526, -47.7965, 0.36", "78.1743, 128.356, -47.4424, 0.36", "78.5314, 128.223, -47.1713, 0.36", "78.9546, 127.985, -46.7675, 0.36", "79.271, 127.765, -46.5024, 0.36", "79.4965, 127.584, -46.2909, 0.36", "81.0175, 126.222, -44.8882, 0.12", "81.3124, 125.958, -44.6164, 0.12", "81.6445, 125.671, -44.2942, 0.12", "82.776, 124.756, -43.2293, 2.4", "84.7217, 123.307, -41.585, 0.12", "85.2746, 122.913, -41.1802, 0.12", "85.9779, 122.431, -40.6943, 0.36", "86.6606, 121.964, -40.178, 0.12", "87.2239, 121.579, -39.7278, 0.12", "87.757, 121.201, -39.2779, 1.08", "88.2148, 120.875, -38.895, 1.08", "89.7728, 119.7, -37.4627, 0.36", "90.1769, 119.355, -37.0932, 0.36", "90.5, 119.063, -36.8448, 0.12", "90.6939, 118.881, -36.6674, 0.12", "91.7646, 117.87, -35.6299, 0.12", "92.2513, 117.433, -35.1882, 1.32", "92.9961, 116.804, -34.5699, 2.04", "93.8664, 116.14, -33.8516, 1.32", "95.8209, 114.785, -32.2317, 0.12", "96.0855, 114.629, -32.0242, 0.12", "96.5376, 114.432, -31.5704, 0.24", "97.2121, 114.188, -30.8216, 0.24", "97.7254, 114.05, -30.1856, 0.24", "98.4271, 113.92, -29.2216, 0.24", "98.7829, 113.886, -28.7559, 0.84", "101.281, 113.743, -25.0657, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "36.3684, 101.342, 12.2908, 0.72", "35.9489, 101.05, 11.6954, 0.72", "35.3348, 100.703, 10.9421, 0.6", "34.9354, 100.477, 10.4522, 0.36", "34.787, 100.393, 10.27, 0.48", "34.4162, 100.184, 9.81528, 0.36", "33.9635, 99.9281, 9.25995, 0.12", "33.793, 99.8598, 9.07794, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "36.3684, 101.342, 12.2908, 0.48", "36.3218, 102.13, 12.383, 0.48", "36.2821, 102.805, 12.5055, 0.48", "36.1961, 103.519, 12.658, 0.6", "36.1021, 104.09, 12.8032, 0.48", "35.9511, 104.947, 13.0324, 0.48", "35.7817, 105.915, 13.2936, 2.04", "35.6734, 106.714, 13.5042, 1.92", "35.5406, 107.646, 13.6989, 1.44", "35.4266, 108.386, 13.8192, 1.08", "35.335, 109.044, 13.9026, 0.96", "35.2995, 109.382, 13.9122, 0.72", "35.2527, 110.179, 13.8282, 1.08", "35.2728, 111.498, 13.63, 0.48", "35.3171, 112.052, 13.5413, 0.48", "35.4211, 112.97, 13.4045, 1.32", "35.5052, 113.781, 13.2865, 1.92", "35.6229, 114.853, 13.1957, 1.08", "35.727, 115.604, 13.1865, 0.72", "35.8013, 115.998, 13.2259, 0.24", "36.0294, 116.901, 13.3115, 0.24", "36.1922, 117.567, 13.3795, 0.72", "36.3582, 118.335, 13.5106, 0.12", "36.5232, 119.003, 13.6359, 0.12", "36.7493, 119.944, 13.7923, 1.8", "37.0227, 121.138, 13.9993, 2.76", "37.1953, 121.909, 14.1583, 2.64", "37.4826, 123.193, 14.4452, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "19.9768, -125.603, -45.0922, 0.12", "20.769, -126.369, -45.0272, 0.12", "21.4264, -127.004, -44.9733, 0.12", "22.0911, -127.646, -44.9188, 0.6", "22.44, -127.983, -44.8902, 0.12", "23.2765, -128.791, -44.8216, 0.12", "23.7148, -129.214, -44.7857, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.9768, -125.603, -45.0922, 0.12", "19.811, -126.691, -45.1032, 0.12", "19.6791, -127.37, -45.0036, 0.12", "19.595, -127.87, -44.8958, 0.96", "19.5251, -128.364, -44.786, 1.56", "19.4387, -129.142, -44.6201, 0.12", "19.4087, -129.55, -44.5383, 0.12", "19.3738, -130.825, -44.1925, 1.08", "19.3806, -131.376, -44.0324, 0.72", "19.4015, -131.805, -43.9142, 0.12", "19.421, -132.32, -43.7325, 0.12", "19.4279, -132.788, -43.5539, 0.12", "19.4238, -133.525, -43.299, 1.44", "19.4188, -133.919, -43.1866, 1.68", "19.3996, -134.226, -43.097, 1.68", "19.2883, -135.512, -42.752, 0.12", "19.2097, -136.098, -42.6134, 0.12", "19.0961, -136.717, -42.5059, 0.12", "19.0508, -136.93, -42.4869, 0.96", "18.9337, -137.42, -42.4658, 0.96", "18.8298, -137.867, -42.4708, 0.12", "18.5488, -139.06, -42.5942, 0.12", "18.3967, -139.667, -42.6608, 0.96", "18.252, -140.217, -42.7362, 1.68", "18.1543, -140.603, -42.7952, 1.92", "18.059, -141.006, -42.875, 1.92", "17.8389, -141.999, -43.1175, 0.12", "17.7556, -142.372, -43.243, 0.12", "17.5536, -143.198, -43.5623, 0.12", "17.4546, -143.56, -43.7509, 0.6", "17.2975, -144.031, -44.0452, 0.12", "17.1086, -144.502, -44.3789, 0.12", "16.9036, -144.985, -44.7486, 1.2", "16.6024, -145.653, -45.277, 1.68", "16.1388, -146.612, -46.0288, 0.12", "15.9163, -147.094, -46.4004, 0.12", "15.7792, -147.443, -46.6406, 0.12", "15.656, -147.858, -46.9196, 0.12", "15.6058, -148.111, -47.0752, 1.2", "15.5377, -148.667, -47.3876, 1.56", "15.4778, -149.66, -47.8889, 0.24", "15.4698, -150.393, -48.2662, 0.24", "15.4637, -151.125, -48.6564, 0.72", "15.4525, -151.484, -48.8503, 0.84", "15.4338, -151.868, -49.0533, 0.12", "15.4133, -152.134, -49.1961, 0.12", "15.3538, -152.57, -49.4475, 0.12", "15.3053, -152.881, -49.6436, 0.12", "15.2209, -153.279, -49.7095, 0.12", "15.1764, -153.476, -49.701, 0.12", "14.9959, -154.181, -49.5807, 1.32", "14.7598, -154.955, -49.3973, 0.12", "14.5571, -155.65, -49.1531, 0.12", "13.6967, -158.731, -47.678, 0.6", "13.3518, -159.887, -46.9137, 1.32", "13.2462, -160.2, -46.6333, 2.04", "13.1149, -160.535, -46.2175, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "98.1366, -26.9483, 17.2866, 0.24", "98.7996, -27.0057, 17.6357, 0.24", "99.0919, -27.0255, 17.79, 0.24", "100.159, -27.0925, 18.3458, 0.24", "100.474, -27.1048, 18.4991, 0.96", "101.07, -27.1119, 18.7429, 1.56", "101.593, -27.1126, 18.9645, 0.36", "102.604, -27.0951, 19.3766, 0.12", "102.833, -27.0863, 19.4668, 1.2", "103.552, -27.0326, 19.7116, 2.16", "104.444, -26.9244, 20.039, 0.12", "105.365, -26.7564, 20.3856, 0.12", "105.527, -26.7117, 20.4467, 0.84", "105.843, -26.5858, 20.5579, 0.96", "106.263, -26.3883, 20.719, 0.12", "106.646, -26.1489, 20.896, 0.12", "106.769, -26.0328, 20.9647, 0.6", "107.056, -25.6742, 21.0511, 0.12", "107.242, -25.3814, 21.125, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "98.1366, -26.9483, 17.2866, 0.6", "98.0915, -25.7109, 17.3927, 0.6", "98.0866, -25.369, 17.4226, 0.6", "98.1156, -24.6428, 17.4606, 0.84", "98.2263, -23.6593, 17.4869, 0.12", "98.3507, -22.5403, 17.4989, 0.12", "98.3955, -22.1595, 17.4983, 0.96", "98.5402, -21.3334, 17.4906, 1.2", "98.7471, -20.3996, 17.4572, 0.12", "99.0223, -19.3616, 17.3916, 0.12", "99.2694, -18.5532, 17.2947, 0.12", "99.5954, -17.6537, 17.1417, 0.12", "99.7571, -17.2529, 17.0706, 0.12", "100.161, -16.3564, 16.908, 1.68", "100.317, -16.0718, 16.7921, 1.92", "100.966, -15.1121, 16.1829, 0.12", "101.559, -14.3644, 15.5344, 0.12", "101.814, -14.0348, 15.191, 1.32", "102.016, -13.7387, 14.8116, 1.68", "103.17, -11.9844, 11.9438, 0.36", "103.309, -11.7934, 11.5663, 0.36", "103.497, -11.5505, 10.9941, 0.12", "103.768, -11.2025, 10.0485, 0.12", "104.269, -10.5118, 8.0653, 0.48", "104.544, -10.0562, 6.77114, 1.44", "104.714, -9.60168, 5.73667, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-10.3665, -312.941, -46.5083, 0.24", "-10.2227, -312.651, -46.7254, 0.24", "-10.0402, -312.283, -47.0009, 0.24", "-9.81949, -311.838, -47.334, 0.6", "-9.59648, -311.389, -47.6707, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.3665, -312.941, -46.5083, 0.12", "-10.0342, -313.175, -46.2347, 0.12", "-9.81871, -313.304, -46.0557, 0.12", "-9.62821, -313.391, -45.9276, 0.12", "-9.37817, -313.476, -45.8004, 0.12", "-9.23901, -313.511, -45.7429, 0.12", "-8.10279, -313.721, -45.3553, 0.12", "-7.61487, -313.749, -45.239, 2.04", "-7.09229, -313.739, -45.1258, 1.56", "-6.53915, -313.696, -45.0253, 0.36", "-6.23904, -313.656, -44.9615, 0.36", "-5.89829, -313.598, -44.891, 0.36", "-5.21447, -313.464, -44.7818, 0.36", "-4.94112, -313.408, -44.7001, 0.6", "-4.75366, -313.371, -44.6193, 0.6", "-3.93987, -313.198, -44.199, 0.36", "-3.76, -313.16, -44.1028, 0.6", "-3.50532, -313.11, -43.9846, 0.6", "-3.0409, -313.031, -43.8202, 0.12", "-2.84838, -313.013, -43.7898, 0.12", "-2.49777, -313.009, -43.7985, 0.12", "-2.1678, -313.042, -43.8972, 1.08", "-1.54626, -313.178, -44.1536, 0.12", "-1.41584, -313.228, -44.2194, 0.12", "-1.06555, -313.402, -44.4138, 0.12", "-0.846947, -313.534, -44.5376, 0.48", "-0.497807, -313.778, -44.7395, 0.12", "-0.292422, -313.936, -44.8543, 0.12", "0.0624285, -314.218, -45.015, 0.12", "0.313519, -314.418, -45.1355, 0.12", "0.524311, -314.581, -45.2429, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "13.1149, -160.535, -46.2175, 0.48", "12.728, -161.866, -49.5618, 0.48", "12.6571, -162.085, -50.0816, 0.48", "12.495, -162.609, -51.1776, 0.12", "12.4255, -162.872, -51.6819, 0.12", "12.3293, -163.236, -52.3807, 1.2", "12.208, -163.695, -53.2607, 0.12", "12.1716, -163.819, -53.4316, 0.12", "12.0565, -164.207, -53.9794, 0.72", "11.9838, -164.442, -54.2324, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "13.1149, -160.535, -46.2175, 0.12", "12.3285, -161.504, -47.3749, 0.12", "12.0196, -161.948, -47.6992, 0.12", "11.9304, -162.078, -47.7781, 0.6", "11.6731, -162.442, -47.9713, 0.24", "11.5738, -162.58, -48.0171, 0.24", "11.3031, -162.943, -48.099, 0.24", "11.0905, -163.216, -48.0688, 0.6", "10.7567, -163.566, -48.0163, 0.12", "10.465, -163.824, -47.9798, 0.12", "9.84612, -164.27, -47.9293, 0.84", "9.69743, -164.366, -47.9121, 0.84", "9.41474, -164.526, -47.8616, 0.12", "9.25808, -164.603, -47.823, 0.12", "8.84911, -164.772, -47.6868, 0.84", "8.68236, -164.823, -47.6464, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_DBC_519f8feedc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.26895, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 4.005, -5.67559, -16.8384, 3.85 ) }
    dend_26 { pt3dadd( 4.9697, -5.05929, -15.9719, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -12.4309, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.417371, -14.6111, -0.388018, 1.92 ) }
    dend_15 { pt3dadd( -0.228239, -16.2495, 0.699796, 1.8 ) }
    dend_15 { pt3dadd( -0.0447062, -17.5575, 1.41295, 1.92 ) }
    dend_15 { pt3dadd( 0.518452, -21.045, 2.95515, 1.32 ) }
    dend_15 { pt3dadd( 0.822731, -22.624, 3.52019, 1.56 ) }
    dend_15 { pt3dadd( 1.17715, -24.1872, 3.9641, 1.8 ) }
    dend_15 { pt3dadd( 1.51804, -25.4453, 4.10227, 2.04 ) }
    dend_15 { pt3dadd( 2.12572, -27.3954, 4.06405, 2.16 ) }
    dend_15 { pt3dadd( 2.54708, -28.6583, 3.86611, 1.32 ) }
    dend_15 { pt3dadd( 3.01672, -30.0897, 3.54542, 1.44 ) }
    dend_15 { pt3dadd( 3.55118, -31.9598, 3.21186, 1.44 ) }
    dend_15 { pt3dadd( 3.8813, -33.4277, 3.03203, 1.8 ) }
    dend_15 { pt3dadd( 4.0293, -34.4513, 2.95011, 2.04 ) }
    dend_15 { pt3dadd( 4.08289, -35.907, 2.90208, 1.68 ) }
    dend_15 { pt3dadd( 3.94294, -38.0856, 2.86289, 1.44 ) }
    dend_15 { pt3dadd( 3.7606, -39.1709, 2.85636, 1.8 ) }
    dend_15 { pt3dadd( 3.53338, -40.0614, 2.86668, 2.04 ) }
    dend_15 { pt3dadd( 3.16089, -41.2776, 2.90862, 1.92 ) }
    dend_15 { pt3dadd( 2.7603, -42.399, 2.94312, 1.56 ) }
    dend_15 { pt3dadd( 2.23285, -43.7723, 2.91714, 1.56 ) }
    dend_15 { pt3dadd( 1.87786, -44.6894, 2.77698, 0.72 ) }
    dend_15 { pt3dadd( 1.62884, -45.3775, 2.65489, 0.48 ) }
    dend_15 { pt3dadd( 1.43883, -45.9218, 2.57814, 0.48 ) }
    dend_15 { pt3dadd( 1.00024, -47.2108, 2.45154, 1.32 ) }
    dend_15 { pt3dadd( 0.637716, -48.2928, 2.35113, 1.68 ) }
    dend_15 { pt3dadd( -0.0333188, -50.3058, 2.10105, 1.56 ) }
    dend_15 { pt3dadd( -0.411306, -51.4377, 1.96286, 1.92 ) }
    dend_15 { pt3dadd( -0.958783, -53.1203, 1.76856, 2.64 ) }
    dend_15 { pt3dadd( -1.33819, -54.3709, 1.66473, 2.76 ) }
    dend_15 { pt3dadd( -1.62049, -55.4825, 1.62772, 2.76 ) }
    dend_15 { pt3dadd( -1.92751, -57.0577, 1.67708, 1.68 ) }
    dend_15 { pt3dadd( -2.05056, -58.0701, 1.75095, 0.96 ) }
    dend_15 { pt3dadd( -2.11411, -59.4048, 1.83468, 0.96 ) }
    dend_15 { pt3dadd( -2.07681, -61.1261, 1.92677, 1.32 ) }
    dend_15 { pt3dadd( -1.91633, -63.6015, 2.08984, 1.8 ) }
    dend_15 { pt3dadd( -1.82273, -64.6819, 2.1764, 2.16 ) }
    dend_15 { pt3dadd( -1.70567, -65.922, 2.26671, 2.28 ) }
    dend_15 { pt3dadd( -1.56375, -67.4434, 2.34052, 0.84 ) }
    dend_15 { pt3dadd( -1.49765, -68.4406, 2.35904, 0.84 ) }
    dend_15 { pt3dadd( -1.45914, -69.9163, 2.32246, 1.08 ) }
    dend_15 { pt3dadd( -1.56417, -71.463, 2.23417, 1.68 ) }
    dend_15 { pt3dadd( -1.79308, -72.6639, 2.15598, 2.52 ) }
    dend_15 { pt3dadd( -1.94722, -73.1565, 2.09539, 3.0 ) }
    dend_15 { pt3dadd( -2.16545, -73.6882, 2.00293, 2.88 ) }
    dend_15 { pt3dadd( -2.30736, -73.9808, 1.94882, 2.88 ) }
    dend_15 { pt3dadd( -2.90274, -75.0898, 1.72952, 2.16 ) }
    dend_15 { pt3dadd( -3.87679, -76.8049, 1.5484, 0.96 ) }
    dend_15 { pt3dadd( -4.62356, -78.1089, 1.44966, 0.48 ) }
    dend_15 { pt3dadd( -4.88518, -78.5591, 1.41721, 0.48 ) }
    dend_15 { pt3dadd( -5.80283, -80.1213, 1.31691, 1.92 ) }
    dend_15 { pt3dadd( -6.69449, -81.6026, 1.24509, 3.12 ) }
    dend_15 { pt3dadd( -7.69891, -83.2916, 1.23273, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 10.7351, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.12077, 12.5512, 0.841873, 1.44 ) }
    dend_0 { pt3dadd( 3.60368, 14.2934, 1.45568, 2.16 ) }
    dend_0 { pt3dadd( 4.14565, 16.1946, 2.08061, 3.25 ) }
    dend_0 { pt3dadd( 4.52706, 17.481, 2.48795, 3.49 ) }
    dend_0 { pt3dadd( 4.96883, 18.934, 3.01996, 3.25 ) }
    dend_0 { pt3dadd( 5.27878, 19.9534, 3.39322, 2.88 ) }
    dend_0 { pt3dadd( 5.51743, 20.7271, 3.71498, 2.88 ) }
    dend_0 { pt3dadd( 5.77525, 21.5245, 4.01472, 2.52 ) }
    dend_0 { pt3dadd( 6.26484, 22.9319, 4.56586, 2.16 ) }
    dend_0 { pt3dadd( 6.97141, 24.8446, 5.33599, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.8533 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.8533 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.8533 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.9697, -5.05929, -15.9719, 1.56 ) }
    dend_48 { pt3dadd( 4.69342, -1.91094, -16.9117, 1.56 ) }
    dend_48 { pt3dadd( 4.63813, -0.590592, -17.3059, 1.2 ) }
    dend_48 { pt3dadd( 4.64847, 0.338114, -17.5906, 0.96 ) }
    dend_48 { pt3dadd( 4.71618, 1.43337, -17.8842, 0.96 ) }
    dend_48 { pt3dadd( 4.91943, 3.35235, -18.3851, 1.32 ) }
    dend_48 { pt3dadd( 5.22872, 5.5216, -18.8139, 1.32 ) }
    dend_48 { pt3dadd( 5.57588, 7.26454, -18.9692, 1.44 ) }
    dend_48 { pt3dadd( 5.97177, 8.73772, -19.0317, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 6.48942, 10.2814, -19.0079, 1.44 ) }
    dend_48 { pt3dadd( 6.93646, 11.4869, -18.9044, 1.68 ) }
    dend_48 { pt3dadd( 7.74699, 13.6749, -18.5618, 2.88 ) }
    dend_48 { pt3dadd( 8.0627, 14.6104, -18.3519, 3.73 ) }
    dend_48 { pt3dadd( 8.46934, 16.1123, -17.9926, 3.73 ) }
    dend_48 { pt3dadd( 8.85047, 18.108, -17.5411, 2.88 ) }
    dend_48 { pt3dadd( 9.12652, 20.401, -17.1084, 1.68 ) }
    dend_48 { pt3dadd( 9.18486, 21.4858, -16.9323, 1.2 ) }
    dend_48 { pt3dadd( 9.19678, 22.4912, -16.8293, 0.96 ) }
    dend_48 { pt3dadd( 9.1525, 23.8006, -16.6998, 1.68 ) }
    dend_48 { pt3dadd( 9.01415, 25.2692, -16.5638, 2.88 ) }
    dend_48 { pt3dadd( 8.8948, 25.9252, -16.5137, 3.49 ) }
    dend_48 { pt3dadd( 8.6899, 26.6859, -16.4857, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.9697, -5.05929, -15.9719, 1.32 ) }
    dend_27 { pt3dadd( 6.71126, -5.58293, -15.9735, 1.32 ) }
    dend_27 { pt3dadd( 7.40773, -5.78528, -16.0713, 0.84 ) }
    dend_27 { pt3dadd( 8.41921, -6.10469, -16.2994, 1.2 ) }
    dend_27 { pt3dadd( 9.53029, -6.52476, -16.6472, 1.44 ) }
    dend_27 { pt3dadd( 10.6607, -7.10964, -17.1254, 1.32 ) }
    dend_27 { pt3dadd( 11.5756, -7.75579, -17.5898, 1.56 ) }
    dend_27 { pt3dadd( 12.4867, -8.75766, -18.2919, 1.2 ) }
    dend_27 { pt3dadd( 12.7507, -9.14256, -18.5649, 1.2 ) }
    dend_27 { pt3dadd( 13.0591, -9.83401, -19.0458, 1.2 ) }
    dend_27 { pt3dadd( 13.3611, -11.0594, -19.8333, 2.64 ) }
    dend_27 { pt3dadd( 13.4774, -12.1082, -20.394, 4.45 ) }
    dend_27 { pt3dadd( 13.5389, -12.939, -20.6856, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.69891, -83.2916, 1.23273, 3.0 ) }
    dend_25 { pt3dadd( -8.57059, -84.1311, 1.3849, 3.0 ) }
    dend_25 { pt3dadd( -9.06631, -84.6827, 1.47948, 2.76 ) }
    dend_25 { pt3dadd( -9.83627, -85.6611, 1.69133, 1.92 ) }
    dend_25 { pt3dadd( -10.0834, -86.0364, 1.78589, 1.92 ) }
    dend_25 { pt3dadd( -10.5585, -86.9124, 2.01462, 0.6 ) }
    dend_25 { pt3dadd( -10.8299, -87.5248, 2.16145, 0.48 ) }
    dend_25 { pt3dadd( -10.8858, -87.7667, 2.21043, 0.48 ) }
    dend_25 { pt3dadd( -10.9582, -88.4019, 2.32334, 0.48 ) }
    dend_25 { pt3dadd( -10.9611, -89.174, 2.43084, 0.84 ) }
    dend_25 { pt3dadd( -10.8799, -90.0503, 2.53583, 1.08 ) }
    dend_25 { pt3dadd( -10.722, -90.9125, 2.6599, 1.32 ) }
    dend_25 { pt3dadd( -10.4982, -91.761, 2.76999, 0.96 ) }
    dend_25 { pt3dadd( -10.2966, -92.3567, 2.84505, 0.72 ) }
    dend_25 { pt3dadd( -10.0476, -92.974, 2.91394, 0.6 ) }
    dend_25 { pt3dadd( -9.57947, -93.9411, 3.06254, 0.48 ) }
    dend_25 { pt3dadd( -9.06035, -94.8363, 3.18598, 0.48 ) }
    dend_25 { pt3dadd( -8.49869, -95.6813, 3.29552, 1.44 ) }
    dend_25 { pt3dadd( -7.87011, -96.5522, 3.39439, 1.92 ) }
    dend_25 { pt3dadd( -7.38906, -97.193, 3.48305, 2.04 ) }
    dend_25 { pt3dadd( -6.76374, -98.0626, 3.61429, 1.44 ) }
    dend_25 { pt3dadd( -6.0191, -99.1507, 3.75875, 0.84 ) }
    dend_25 { pt3dadd( -5.81442, -99.4886, 3.83492, 0.12 ) }
    dend_25 { pt3dadd( -5.58058, -99.9716, 4.00814, 0.12 ) }
    dend_25 { pt3dadd( -5.32708, -100.774, 4.43912, 1.32 ) }
    dend_25 { pt3dadd( -5.16799, -101.634, 5.00109, 1.68 ) }
    dend_25 { pt3dadd( -5.12244, -102.042, 5.28448, 1.8 ) }
    dend_25 { pt3dadd( -4.95213, -103.725, 6.49543, 1.2 ) }
    dend_25 { pt3dadd( -4.90044, -104.447, 6.99633, 1.68 ) }
    dend_25 { pt3dadd( -4.79483, -105.641, 7.82611, 1.2 ) }
    dend_25 { pt3dadd( -4.73924, -106.399, 8.36243, 0.24 ) }
    dend_25 { pt3dadd( -4.71896, -106.908, 8.73822, 0.24 ) }
    dend_25 { pt3dadd( -4.71501, -107.813, 9.37997, 1.92 ) }
    dend_25 { pt3dadd( -4.76263, -108.429, 9.75823, 1.8 ) }
    dend_25 { pt3dadd( -5.21428, -110.337, 10.9, 0.72 ) }
    dend_25 { pt3dadd( -5.59198, -111.303, 11.4488, 0.72 ) }
    dend_25 { pt3dadd( -5.95416, -111.942, 11.8057, 0.48 ) }
    dend_25 { pt3dadd( -6.28921, -112.384, 12.0682, 0.36 ) }
    dend_25 { pt3dadd( -6.89034, -113.05, 12.4442, 0.36 ) }
    dend_25 { pt3dadd( -7.23602, -113.469, 12.6342, 0.36 ) }
    dend_25 { pt3dadd( -7.9186, -114.502, 13.1526, 0.6 ) }
    dend_25 { pt3dadd( -8.07124, -114.887, 13.3769, 0.6 ) }
    dend_25 { pt3dadd( -8.23226, -115.372, 13.7641, 0.36 ) }
    dend_25 { pt3dadd( -8.35933, -115.732, 14.1054, 0.36 ) }
    dend_25 { pt3dadd( -8.49701, -116.173, 14.5511, 0.36 ) }
    dend_25 { pt3dadd( -8.93901, -117.44, 15.8955, 0.36 ) }
    dend_25 { pt3dadd( -9.05862, -117.686, 16.1656, 0.36 ) }
    dend_25 { pt3dadd( -9.47352, -118.479, 17.1337, 1.44 ) }
    dend_25 { pt3dadd( -9.63718, -118.783, 17.5404, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.69891, -83.2916, 1.23273, 0.12 ) }
    dend_16 { pt3dadd( -8.03454, -85.1777, 0.956966, 0.12 ) }
    dend_16 { pt3dadd( -8.19502, -85.8554, 0.765462, 0.12 ) }
    dend_16 { pt3dadd( -8.35619, -86.4822, 0.55386, 0.96 ) }
    dend_16 { pt3dadd( -8.52141, -87.2049, 0.297691, 1.32 ) }
    dend_16 { pt3dadd( -8.6266, -87.758, 0.0937825, 1.32 ) }
    dend_16 { pt3dadd( -8.80496, -88.9655, -0.357069, 0.6 ) }
    dend_16 { pt3dadd( -8.93007, -89.868, -0.811603, 0.36 ) }
    dend_16 { pt3dadd( -8.94537, -90.1048, -0.946716, 0.36 ) }
    dend_16 { pt3dadd( -8.91386, -90.6842, -1.28889, 0.36 ) }
    dend_16 { pt3dadd( -8.86135, -91.0548, -1.47771, 0.36 ) }
    dend_16 { pt3dadd( -8.80914, -91.4394, -1.63424, 0.36 ) }
    dend_16 { pt3dadd( -8.77015, -92.1577, -1.84302, 0.36 ) }
    dend_16 { pt3dadd( -8.79568, -92.6379, -1.9356, 0.36 ) }
    dend_16 { pt3dadd( -8.87738, -93.3256, -2.1387, 0.36 ) }
    dend_16 { pt3dadd( -9.01879, -94.1097, -2.37931, 1.08 ) }
    dend_16 { pt3dadd( -9.25778, -95.1628, -2.69786, 1.68 ) }
    dend_16 { pt3dadd( -9.45737, -95.9298, -2.92482, 1.8 ) }
    dend_16 { pt3dadd( -9.74166, -96.9255, -3.19012, 1.56 ) }
    dend_16 { pt3dadd( -10.1336, -98.4021, -3.63386, 1.2 ) }
    dend_16 { pt3dadd( -10.2838, -99.0816, -3.84667, 0.36 ) }
    dend_16 { pt3dadd( -10.3399, -99.4506, -3.93925, 0.36 ) }
    dend_16 { pt3dadd( -10.3797, -99.8766, -3.97465, 0.36 ) }
    dend_16 { pt3dadd( -10.4213, -100.899, -3.95004, 1.56 ) }
    dend_16 { pt3dadd( -10.4222, -101.683, -3.88083, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -10.399, -102.659, -3.72573, 1.92 ) }
    dend_16 { pt3dadd( -10.3174, -103.994, -3.51999, 1.08 ) }
    dend_16 { pt3dadd( -10.207, -105.13, -3.30675, 0.36 ) }
    dend_16 { pt3dadd( -10.1019, -106.052, -3.10743, 0.36 ) }
    dend_16 { pt3dadd( -10.0265, -106.692, -2.88365, 0.36 ) }
    dend_16 { pt3dadd( -10.0024, -106.943, -2.77927, 0.36 ) }
    dend_16 { pt3dadd( -9.95145, -107.57, -2.5134, 0.96 ) }
    dend_16 { pt3dadd( -9.90726, -108.24, -2.21005, 1.8 ) }
    dend_16 { pt3dadd( -9.8692, -108.999, -1.90957, 2.16 ) }
    dend_16 { pt3dadd( -9.81058, -111.203, -1.08228, 1.92 ) }
    dend_16 { pt3dadd( -9.81479, -112.284, -0.74005, 1.8 ) }
    dend_16 { pt3dadd( -9.84749, -113.212, -0.541954, 1.8 ) }
    dend_16 { pt3dadd( -9.92753, -114.321, -0.537529, 1.2 ) }
    dend_16 { pt3dadd( -10.084, -115.916, -1.00208, 0.12 ) }
    dend_16 { pt3dadd( -10.1093, -116.159, -1.12253, 0.12 ) }
    dend_16 { pt3dadd( -10.1812, -116.824, -1.54294, 0.12 ) }
    dend_16 { pt3dadd( -10.2661, -117.627, -2.05454, 0.84 ) }
    dend_16 { pt3dadd( -10.3857, -118.959, -2.92761, 1.08 ) }
    dend_16 { pt3dadd( -10.4706, -120.155, -3.68772, 1.92 ) }
    dend_16 { pt3dadd( -10.519, -121.107, -4.19578, 2.88 ) }
    dend_16 { pt3dadd( -10.5503, -121.709, -4.48746, 2.88 ) }
    dend_16 { pt3dadd( -10.5916, -122.482, -4.84429, 1.92 ) }
    dend_16 { pt3dadd( -10.6693, -123.583, -5.3066, 0.36 ) }
    dend_16 { pt3dadd( -10.7204, -124.103, -5.47798, 0.36 ) }
    dend_16 { pt3dadd( -10.793, -124.76, -5.63504, 1.08 ) }
    dend_16 { pt3dadd( -10.8994, -125.582, -5.81677, 1.2 ) }
    dend_16 { pt3dadd( -11.0669, -126.814, -6.04063, 0.48 ) }
    dend_16 { pt3dadd( -11.208, -127.875, -6.20588, 0.48 ) }
    dend_16 { pt3dadd( -11.341, -128.805, -6.3212, 0.48 ) }
    dend_16 { pt3dadd( -11.5564, -130.151, -6.48913, 1.92 ) }
    dend_16 { pt3dadd( -11.7281, -131.07, -6.5979, 2.4 ) }
    dend_16 { pt3dadd( -11.889, -131.853, -6.67725, 2.64 ) }
    dend_16 { pt3dadd( -12.1268, -132.921, -6.75408, 2.64 ) }
    dend_16 { pt3dadd( -12.3173, -133.683, -6.82736, 2.04 ) }
    dend_16 { pt3dadd( -12.6082, -134.67, -6.94598, 0.72 ) }
    dend_16 { pt3dadd( -12.7672, -135.133, -6.99471, 0.72 ) }
    dend_16 { pt3dadd( -12.9897, -135.789, -7.01735, 0.72 ) }
    dend_16 { pt3dadd( -13.186, -136.428, -7.02866, 0.72 ) }
    dend_16 { pt3dadd( -13.4063, -137.265, -7.02083, 0.24 ) }
    dend_16 { pt3dadd( -13.5661, -138.011, -6.92514, 0.12 ) }
    dend_16 { pt3dadd( -13.622, -138.426, -6.82718, 0.12 ) }
    dend_16 { pt3dadd( -13.6627, -139.204, -6.58721, 0.12 ) }
    dend_16 { pt3dadd( -13.6102, -139.981, -6.31016, 1.2 ) }
    dend_16 { pt3dadd( -13.5005, -140.662, -6.06144, 2.28 ) }
    dend_16 { pt3dadd( -13.062, -142.626, -5.36846, 1.8 ) }
    dend_16 { pt3dadd( -12.7837, -143.691, -5.02741, 0.36 ) }
    dend_16 { pt3dadd( -12.6444, -144.238, -4.90664, 0.36 ) }
    dend_16 { pt3dadd( -12.4309, -145.355, -4.78009, 0.36 ) }
    dend_16 { pt3dadd( -12.3171, -146.424, -4.77624, 0.36 ) }
    dend_16 { pt3dadd( -12.2846, -147.107, -4.88262, 0.36 ) }
    dend_16 { pt3dadd( -12.3242, -148.164, -5.22026, 0.36 ) }
    dend_16 { pt3dadd( -12.519, -149.472, -5.69733, 1.56 ) }
    dend_16 { pt3dadd( -12.738, -150.472, -6.07101, 2.4 ) }
    dend_16 { pt3dadd( -12.8857, -151.027, -6.27601, 2.4 ) }
    dend_16 { pt3dadd( -13.1264, -151.981, -6.60302, 2.4 ) }
    dend_16 { pt3dadd( -13.4223, -153.447, -7.02904, 0.48 ) }
    dend_16 { pt3dadd( -13.5116, -154.034, -7.15901, 0.48 ) }
    dend_16 { pt3dadd( -13.5778, -154.962, -7.28148, 0.6 ) }
    dend_16 { pt3dadd( -13.572, -155.761, -7.35789, 0.36 ) }
    dend_16 { pt3dadd( -13.5239, -156.705, -7.43252, 0.36 ) }
    dend_16 { pt3dadd( -13.457, -157.612, -7.48101, 0.48 ) }
    dend_16 { pt3dadd( -13.3872, -158.273, -7.53591, 0.36 ) }
    dend_16 { pt3dadd( -13.2958, -159.075, -7.647, 0.36 ) }
    dend_16 { pt3dadd( -13.2301, -159.861, -7.80167, 0.36 ) }
    dend_16 { pt3dadd( -13.2254, -160.365, -7.9448, 0.48 ) }
    dend_16 { pt3dadd( -13.2768, -161.115, -8.23388, 0.48 ) }
    dend_16 { pt3dadd( -13.4087, -162.018, -8.60271, 0.36 ) }
    dend_16 { pt3dadd( -13.5242, -162.658, -8.86532, 0.84 ) }
    dend_16 { pt3dadd( -13.735, -163.695, -9.24145, 1.32 ) }
    dend_16 { pt3dadd( -14.0342, -165.05, -9.66588, 2.16 ) }
    dend_16 { pt3dadd( -14.2894, -166.081, -9.95745, 2.64 ) }
    dend_16 { pt3dadd( -14.5724, -167.143, -10.2238, 2.28 ) }
    dend_16 { pt3dadd( -14.9119, -168.331, -10.4343, 1.8 ) }
    dend_16 { pt3dadd( -15.25, -169.558, -10.5982, 1.2 ) }
    dend_16 { pt3dadd( -15.4243, -170.262, -10.5852, 0.48 ) }
    dend_16 { pt3dadd( -15.6595, -171.433, -10.43, 0.36 ) }
    dend_16 { pt3dadd( -15.7931, -172.23, -10.2595, 0.36 ) }
    dend_16 { pt3dadd( -15.8942, -173.045, -10.0405, 1.08 ) }
    dend_16 { pt3dadd( -15.9466, -173.861, -9.76224, 1.08 ) }
    dend_16 { pt3dadd( -15.9214, -176.187, -8.91751, 1.44 ) }
    dend_16 { pt3dadd( -15.8292, -177.498, -8.44405, 1.44 ) }
    dend_16 { pt3dadd( -15.7313, -178.407, -8.08036, 1.32 ) }
    dend_16 { pt3dadd( -15.6331, -179.292, -7.76329, 0.48 ) }
    dend_16 { pt3dadd( -15.5563, -180.023, -7.568, 0.48 ) }
    dend_16 { pt3dadd( -15.5238, -180.47, -7.47291, 1.08 ) }
    dend_16 { pt3dadd( -15.4859, -181.311, -7.3631, 1.68 ) }
    dend_16 { pt3dadd( -15.4828, -182.686, -7.13369, 2.28 ) }
    dend_16 { pt3dadd( -15.5372, -183.626, -7.00585, 2.4 ) }
    dend_16 { pt3dadd( -15.6772, -184.833, -6.91455, 1.32 ) }
    dend_16 { pt3dadd( -15.8266, -185.648, -6.88324, 0.6 ) }
    dend_16 { pt3dadd( -15.9555, -186.18, -6.92907, 0.48 ) }
    dend_16 { pt3dadd( -16.231, -187.019, -7.16467, 0.48 ) }
    dend_16 { pt3dadd( -16.5169, -187.765, -7.49687, 0.48 ) }
    dend_16 { pt3dadd( -16.8318, -188.594, -8.03739, 1.08 ) }
    dend_16 { pt3dadd( -17.0581, -189.307, -8.55394, 1.92 ) }
    dend_16 { pt3dadd( -17.4553, -190.825, -9.77157, 1.92 ) }
    dend_16 { pt3dadd( -17.7195, -192.072, -10.8113, 2.28 ) }
    dend_16 { pt3dadd( -17.8568, -192.897, -11.5036, 2.76 ) }
    dend_16 { pt3dadd( -18.1261, -194.901, -13.1128, 2.76 ) }
    dend_16 { pt3dadd( -18.298, -196.448, -14.2361, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -18.3979, -197.64, -14.989, 0.72 ) }
    dend_16 { pt3dadd( -18.4615, -198.567, -15.4487, 0.96 ) }
    dend_16 { pt3dadd( -18.5272, -199.339, -15.7523, 1.56 ) }
    dend_16 { pt3dadd( -18.6516, -200.269, -16.0333, 1.8 ) }
    dend_16 { pt3dadd( -18.792, -201.096, -16.1656, 1.44 ) }
    dend_16 { pt3dadd( -18.925, -202.057, -16.2858, 0.48 ) }
    dend_16 { pt3dadd( -18.9414, -202.439, -16.3169, 0.6 ) }
    dend_16 { pt3dadd( -18.9115, -203.459, -16.3914, 0.6 ) }
    dend_16 { pt3dadd( -18.8791, -203.937, -16.4136, 0.48 ) }
    dend_16 { pt3dadd( -18.797, -205.04, -16.4443, 0.48 ) }
    dend_16 { pt3dadd( -18.7516, -205.901, -16.4565, 0.48 ) }
    dend_16 { pt3dadd( -18.7355, -206.963, -16.4241, 0.48 ) }
    dend_16 { pt3dadd( -18.7656, -208.016, -16.3952, 0.84 ) }
    dend_16 { pt3dadd( -18.8766, -209.381, -16.3573, 1.68 ) }
    dend_16 { pt3dadd( -19.0723, -210.863, -16.3139, 2.4 ) }
    dend_16 { pt3dadd( -19.2248, -211.828, -16.2824, 2.4 ) }
    dend_16 { pt3dadd( -19.4319, -213.174, -16.2522, 0.6 ) }
    dend_16 { pt3dadd( -19.5363, -214.109, -16.235, 0.6 ) }
    dend_16 { pt3dadd( -19.5669, -215.325, -16.2565, 0.6 ) }
    dend_16 { pt3dadd( -19.4788, -216.404, -16.3023, 0.6 ) }
    dend_16 { pt3dadd( -19.3119, -217.291, -16.3305, 1.08 ) }
    dend_16 { pt3dadd( -19.0816, -218.162, -16.3441, 1.44 ) }
    dend_16 { pt3dadd( -18.8396, -218.934, -16.3459, 0.84 ) }
    dend_16 { pt3dadd( -18.5648, -219.792, -16.307, 0.96 ) }
    dend_16 { pt3dadd( -18.2865, -220.776, -16.2426, 0.96 ) }
    dend_16 { pt3dadd( -18.1331, -221.507, -16.1897, 0.72 ) }
    dend_16 { pt3dadd( -18.0606, -222.055, -16.1505, 0.48 ) }
    dend_16 { pt3dadd( -18.0275, -222.548, -16.1136, 0.48 ) }
    dend_16 { pt3dadd( -18.0352, -223.231, -16.0503, 1.32 ) }
    dend_16 { pt3dadd( -18.1328, -224.354, -15.9287, 1.8 ) }
    dend_16 { pt3dadd( -18.2461, -225.172, -15.8875, 2.04 ) }
    dend_16 { pt3dadd( -18.4384, -226.275, -15.8936, 1.92 ) }
    dend_16 { pt3dadd( -18.5962, -227.097, -15.9299, 1.44 ) }
    dend_16 { pt3dadd( -18.801, -228.12, -16.0296, 0.48 ) }
    dend_16 { pt3dadd( -18.9824, -228.99, -16.1807, 0.48 ) }
    dend_16 { pt3dadd( -19.2659, -230.391, -16.5081, 1.44 ) }
    dend_16 { pt3dadd( -19.5036, -231.609, -16.8181, 2.52 ) }
    dend_16 { pt3dadd( -19.6941, -232.667, -17.0971, 3.25 ) }
    dend_16 { pt3dadd( -19.9199, -234.18, -17.508, 2.28 ) }
    dend_16 { pt3dadd( -20.0231, -235.231, -17.7806, 1.8 ) }
    dend_16 { pt3dadd( -20.0662, -236.417, -18.0533, 0.96 ) }
    dend_16 { pt3dadd( -20.0556, -238.012, -18.3574, 0.96 ) }
    dend_16 { pt3dadd( -20.0073, -239.209, -18.5812, 0.96 ) }
    dend_16 { pt3dadd( -19.9188, -240.746, -18.8477, 2.52 ) }
    dend_16 { pt3dadd( -19.8388, -241.884, -18.9872, 2.52 ) }
    dend_16 { pt3dadd( -19.688, -243.785, -19.1366, 1.44 ) }
    dend_16 { pt3dadd( -19.6066, -244.721, -19.1862, 0.96 ) }
    dend_16 { pt3dadd( -19.5032, -245.813, -19.2423, 0.72 ) }
    dend_16 { pt3dadd( -19.4569, -246.37, -19.2651, 0.72 ) }
    dend_16 { pt3dadd( -19.4028, -247.447, -19.3451, 0.72 ) }
    dend_16 { pt3dadd( -19.41, -248.255, -19.4509, 0.72 ) }
    dend_16 { pt3dadd( -19.443, -249.163, -19.6889, 1.08 ) }
    dend_16 { pt3dadd( -19.4413, -250.055, -20.1192, 1.44 ) }
    dend_16 { pt3dadd( -19.4235, -250.382, -20.3247, 1.44 ) }
    dend_16 { pt3dadd( -19.3159, -251.733, -21.3383, 0.36 ) }
    dend_16 { pt3dadd( -19.1966, -252.879, -22.2935, 0.36 ) }
    dend_16 { pt3dadd( -19.0205, -254.23, -23.4299, 1.32 ) }
    dend_16 { pt3dadd( -18.7713, -255.784, -24.6819, 0.48 ) }
    dend_16 { pt3dadd( -18.6529, -256.423, -25.1549, 0.48 ) }
    dend_16 { pt3dadd( -18.3806, -257.749, -26.0484, 1.92 ) }
    dend_16 { pt3dadd( -18.2942, -258.161, -26.2867, 2.76 ) }
    dend_16 { pt3dadd( -18.1122, -259.13, -26.7517, 2.4 ) }
    dend_16 { pt3dadd( -18.0058, -260.049, -27.0108, 1.32 ) }
    dend_16 { pt3dadd( -17.9947, -260.58, -27.1746, 0.12 ) }
    dend_16 { pt3dadd( -18.0343, -261.095, -27.3955, 0.12 ) }
    dend_16 { pt3dadd( -18.0861, -261.352, -27.532, 0.12 ) }
    dend_16 { pt3dadd( -18.2928, -262.133, -28.0429, 1.08 ) }
    dend_16 { pt3dadd( -18.4351, -262.665, -28.4497, 1.08 ) }
    dend_16 { pt3dadd( -18.9405, -264.918, -30.4446, 0.24 ) }
    dend_16 { pt3dadd( -18.971, -265.236, -30.7382, 0.24 ) }
    dend_16 { pt3dadd( -18.9356, -265.836, -31.266, 0.24 ) }
    dend_16 { pt3dadd( -18.7451, -266.555, -31.7962, 0.24 ) }
    dend_16 { pt3dadd( -18.3724, -267.338, -32.2449, 0.24 ) }
    dend_16 { pt3dadd( -17.7984, -268.332, -32.7604, 1.08 ) }
    dend_16 { pt3dadd( -17.2595, -269.202, -33.1066, 2.04 ) }
    dend_16 { pt3dadd( -16.7925, -270.009, -33.4411, 2.04 ) }
    dend_16 { pt3dadd( -16.2568, -271.012, -33.8641, 1.44 ) }
    dend_16 { pt3dadd( -16.0514, -271.518, -34.0564, 0.96 ) }
    dend_16 { pt3dadd( -15.5149, -273.414, -34.6583, 0.72 ) }
    dend_16 { pt3dadd( -15.3657, -274.194, -34.8424, 0.36 ) }
    dend_16 { pt3dadd( -15.2992, -275.122, -35.0397, 0.36 ) }
    dend_16 { pt3dadd( -15.3099, -275.537, -35.0959, 0.36 ) }
    dend_16 { pt3dadd( -15.4082, -276.55, -35.1209, 1.32 ) }
    dend_16 { pt3dadd( -15.5082, -277.401, -35.0592, 2.04 ) }
    dend_16 { pt3dadd( -15.5571, -277.811, -34.9945, 2.4 ) }
    dend_16 { pt3dadd( -15.6359, -278.406, -34.8963, 2.4 ) }
    dend_16 { pt3dadd( -15.842, -279.964, -34.6383, 0.48 ) }
    dend_16 { pt3dadd( -15.9469, -280.762, -34.5137, 0.36 ) }
    dend_16 { pt3dadd( -16.122, -282.212, -34.3381, 0.36 ) }
    dend_16 { pt3dadd( -16.2147, -283.028, -34.2487, 0.36 ) }
    dend_16 { pt3dadd( -16.3158, -283.924, -34.1643, 1.68 ) }
    dend_16 { pt3dadd( -16.369, -284.592, -34.1151, 2.16 ) }
    dend_16 { pt3dadd( -16.3824, -285.02, -34.098, 2.16 ) }
    dend_16 { pt3dadd( -16.3657, -286.147, -34.0476, 0.96 ) }
    dend_16 { pt3dadd( -16.3231, -286.817, -34.0472, 0.36 ) }
    dend_16 { pt3dadd( -16.2847, -287.22, -34.0926, 0.36 ) }
    dend_16 { pt3dadd( -16.1641, -288.213, -34.3278, 0.36 ) }
    dend_16 { pt3dadd( -16.0449, -289.185, -34.6335, 0.36 ) }
    dend_16 { pt3dadd( -15.9607, -289.865, -34.8564, 0.36 ) }
    dend_16 { pt3dadd( -15.8445, -290.942, -35.2068, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -15.7479, -292.422, -35.6515, 2.4 ) }
    dend_16 { pt3dadd( -15.7285, -293.195, -35.845, 2.52 ) }
    dend_16 { pt3dadd( -15.7407, -293.564, -35.9174, 2.52 ) }
    dend_16 { pt3dadd( -15.8503, -294.891, -36.0859, 0.48 ) }
    dend_16 { pt3dadd( -15.9284, -295.716, -36.1453, 0.36 ) }
    dend_16 { pt3dadd( -16.09, -297.182, -36.0816, 0.36 ) }
    dend_16 { pt3dadd( -16.1662, -297.843, -35.9803, 1.32 ) }
    dend_16 { pt3dadd( -16.2712, -298.669, -35.8203, 1.92 ) }
    dend_16 { pt3dadd( -16.3572, -299.373, -35.6927, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.97141, 24.8446, 5.33599, 1.92 ) }
    dend_2 { pt3dadd( 6.83609, 28.5124, 5.55218, 1.92 ) }
    dend_2 { pt3dadd( 6.7404, 30.2799, 5.68942, 2.28 ) }
    dend_2 { pt3dadd( 6.65671, 31.8974, 5.87687, 1.8 ) }
    dend_2 { pt3dadd( 6.57489, 33.7904, 6.12612, 1.8 ) }
    dend_2 { pt3dadd( 6.49106, 36.3635, 6.48087, 1.68 ) }
    dend_2 { pt3dadd( 6.42794, 39.3636, 6.89886, 2.4 ) }
    dend_2 { pt3dadd( 6.43779, 41.6402, 7.36847, 2.88 ) }
    dend_2 { pt3dadd( 6.45296, 42.8468, 7.59429, 2.76 ) }
    dend_2 { pt3dadd( 6.49943, 43.9497, 7.81478, 2.76 ) }
    dend_2 { pt3dadd( 6.58007, 44.7824, 8.02054, 2.76 ) }
    dend_2 { pt3dadd( 6.7387, 45.7274, 8.28489, 2.52 ) }
    dend_2 { pt3dadd( 7.22496, 47.7405, 8.86863, 1.68 ) }
    dend_2 { pt3dadd( 7.54276, 48.9128, 9.21553, 1.44 ) }
    dend_2 { pt3dadd( 7.91109, 50.2435, 9.59537, 1.68 ) }
    dend_2 { pt3dadd( 8.60281, 52.6635, 10.3368, 2.64 ) }
    dend_2 { pt3dadd( 9.03802, 54.1365, 10.8125, 2.88 ) }
    dend_2 { pt3dadd( 9.30031, 54.9708, 11.0905, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.97141, 24.8446, 5.33599, 0.84 ) }
    dend_1 { pt3dadd( 6.54266, 24.6647, 5.53966, 0.84 ) }
    dend_1 { pt3dadd( 5.85345, 24.5327, 5.86834, 0.84 ) }
    dend_1 { pt3dadd( 5.39073, 24.5676, 6.16666, 0.84 ) }
    dend_1 { pt3dadd( 5.26115, 24.6156, 6.2873, 0.84 ) }
    dend_1 { pt3dadd( 4.97116, 24.8513, 6.64349, 0.72 ) }
    dend_1 { pt3dadd( 4.80617, 25.1398, 7.07779, 0.72 ) }
    dend_1 { pt3dadd( 4.77569, 25.342, 7.39305, 0.72 ) }
    dend_1 { pt3dadd( 4.87521, 25.7291, 7.95861, 0.96 ) }
    dend_1 { pt3dadd( 5.05913, 26.0227, 8.3931, 1.44 ) }
    dend_1 { pt3dadd( 5.33432, 26.3342, 8.83344, 1.56 ) }
    dend_1 { pt3dadd( 5.95681, 26.8739, 9.60187, 1.32 ) }
    dend_1 { pt3dadd( 6.41207, 27.1988, 10.077, 0.48 ) }
    dend_1 { pt3dadd( 6.81224, 27.4486, 10.4208, 0.6 ) }
    dend_1 { pt3dadd( 7.60828, 27.8712, 10.9693, 0.6 ) }
    dend_1 { pt3dadd( 8.09064, 28.0871, 11.2076, 1.68 ) }
    dend_1 { pt3dadd( 8.92901, 28.3767, 11.3828, 1.92 ) }
    dend_1 { pt3dadd( 9.51793, 28.5433, 11.1914, 1.56 ) }
    dend_1 { pt3dadd( 11.0181, 28.7571, 9.50525, 0.48 ) }
    dend_1 { pt3dadd( 11.2687, 28.7631, 8.99307, 0.48 ) }
    dend_1 { pt3dadd( 11.4497, 28.7566, 8.53211, 0.84 ) }
    dend_1 { pt3dadd( 11.53, 28.7363, 8.21115, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.460471 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.460471 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.460471 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 8.6899, 26.6859, -16.4857, 0.96 ) }
    dend_54 { pt3dadd( 10.9617, 28.9115, -17.1304, 0.96 ) }
    dend_54 { pt3dadd( 12.1684, 30.2411, -17.3825, 0.6 ) }
    dend_54 { pt3dadd( 13.2371, 31.5777, -17.5654, 0.6 ) }
    dend_54 { pt3dadd( 13.7654, 32.3284, -17.6437, 1.32 ) }
    dend_54 { pt3dadd( 14.1903, 33.0231, -17.6704, 1.56 ) }
    dend_54 { pt3dadd( 14.9062, 34.4091, -17.6476, 0.96 ) }
    dend_54 { pt3dadd( 15.5199, 36.1801, -17.3702, 0.6 ) }
    dend_54 { pt3dadd( 15.7322, 37.0412, -17.2016, 0.48 ) }
    dend_54 { pt3dadd( 15.8827, 37.8022, -17.0506, 0.48 ) }
    dend_54 { pt3dadd( 16.1835, 39.3559, -16.7563, 0.72 ) }
    dend_54 { pt3dadd( 16.5728, 41.2217, -16.4621, 1.8 ) }
    dend_54 { pt3dadd( 16.9915, 42.9104, -16.253, 2.04 ) }
    dend_54 { pt3dadd( 17.4108, 44.2593, -16.1261, 2.64 ) }
    dend_54 { pt3dadd( 17.9707, 45.7471, -16.0828, 3.25 ) }
    dend_54 { pt3dadd( 18.5402, 47.0756, -16.1213, 3.25 ) }
    dend_54 { pt3dadd( 19.1753, 48.4031, -16.2387, 2.88 ) }
    dend_54 { pt3dadd( 20.0801, 50.1385, -16.427, 0.84 ) }
    dend_54 { pt3dadd( 20.4576, 50.8417, -16.5012, 0.6 ) }
    dend_54 { pt3dadd( 21.3985, 52.6508, -16.6651, 2.4 ) }
    dend_54 { pt3dadd( 22.0306, 53.9336, -16.7534, 3.25 ) }
    dend_54 { pt3dadd( 22.6047, 55.1564, -16.7949, 2.88 ) }
    dend_54 { pt3dadd( 23.5322, 57.1853, -16.7981, 0.96 ) }
    dend_54 { pt3dadd( 24.5196, 59.343, -16.8118, 0.84 ) }
    dend_54 { pt3dadd( 25.1303, 60.6718, -16.8307, 0.48 ) }
    dend_54 { pt3dadd( 25.5516, 61.5752, -16.8386, 0.48 ) }
    dend_54 { pt3dadd( 26.363, 63.3246, -16.8824, 0.48 ) }
    dend_54 { pt3dadd( 26.9949, 64.7001, -16.947, 1.92 ) }
    dend_54 { pt3dadd( 27.7771, 66.3351, -17.0831, 3.37 ) }
    dend_54 { pt3dadd( 28.3347, 67.3942, -17.2197, 3.49 ) }
    dend_54 { pt3dadd( 29.0758, 68.6364, -17.4274, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 8.6899, 26.6859, -16.4857, 0.84 ) }
    dend_49 { pt3dadd( 7.26212, 27.9174, -16.9946, 0.84 ) }
    dend_49 { pt3dadd( 6.96358, 28.3395, -17.1981, 0.72 ) }
    dend_49 { pt3dadd( 6.80048, 28.7096, -17.3787, 0.72 ) }
    dend_49 { pt3dadd( 6.71558, 29.1857, -17.6458, 0.72 ) }
    dend_49 { pt3dadd( 6.68229, 30.0553, -18.288, 0.84 ) }
    dend_49 { pt3dadd( 6.67667, 31.1118, -19.1561, 0.72 ) }
    dend_49 { pt3dadd( 6.78025, 31.8521, -19.8096, 0.48 ) }
    dend_49 { pt3dadd( 6.89986, 32.5462, -20.4394, 0.48 ) }
    dend_49 { pt3dadd( 7.11109, 33.7576, -21.55, 0.72 ) }
    dend_49 { pt3dadd( 7.28058, 35.0265, -22.7224, 0.48 ) }
    dend_49 { pt3dadd( 7.29764, 35.3477, -23.0482, 0.48 ) }
    dend_49 { pt3dadd( 7.27653, 35.6268, -23.3238, 0.48 ) }
    dend_49 { pt3dadd( 7.1818, 36.1343, -23.8133, 1.32 ) }
    dend_49 { pt3dadd( 7.04242, 36.6351, -24.2976, 2.04 ) }
    dend_49 { pt3dadd( 6.80096, 37.3233, -24.9167, 1.56 ) }
    dend_49 { pt3dadd( 6.30478, 38.8172, -26.1868, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( 6.19801, 39.1717, -26.5057, 0.36 ) }
    dend_49 { pt3dadd( 5.81969, 40.5144, -27.8108, 2.4 ) }
    dend_49 { pt3dadd( 5.6781, 41.0771, -28.4115, 3.25 ) }
    dend_49 { pt3dadd( 5.60012, 41.4341, -28.8241, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 13.5389, -12.939, -20.6856, 0.24 ) }
    dend_41 { pt3dadd( 13.0237, -14.6344, -21.1831, 0.24 ) }
    dend_41 { pt3dadd( 12.8769, -15.2349, -21.3835, 0.24 ) }
    dend_41 { pt3dadd( 12.67, -16.3686, -21.7468, 1.92 ) }
    dend_41 { pt3dadd( 12.4987, -17.2701, -22.0156, 2.52 ) }
    dend_41 { pt3dadd( 12.3407, -17.9996, -22.2194, 2.4 ) }
    dend_41 { pt3dadd( 12.1634, -18.7511, -22.4209, 1.8 ) }
    dend_41 { pt3dadd( 11.9526, -19.7329, -22.6735, 0.24 ) }
    dend_41 { pt3dadd( 11.6771, -20.8956, -22.9252, 0.24 ) }
    dend_41 { pt3dadd( 11.3799, -22.0574, -23.1193, 0.24 ) }
    dend_41 { pt3dadd( 11.1573, -22.8598, -23.2217, 0.24 ) }
    dend_41 { pt3dadd( 10.9351, -23.5977, -23.3238, 1.68 ) }
    dend_41 { pt3dadd( 10.5527, -24.7664, -23.4834, 1.92 ) }
    dend_41 { pt3dadd( 10.0968, -26.0614, -23.6731, 2.28 ) }
    dend_41 { pt3dadd( 9.7183, -27.0683, -23.8414, 3.12 ) }
    dend_41 { pt3dadd( 9.31508, -28.0961, -24.0265, 3.12 ) }
    dend_41 { pt3dadd( 8.54502, -29.9258, -24.337, 0.24 ) }
    dend_41 { pt3dadd( 8.21939, -30.6253, -24.4433, 0.24 ) }
    dend_41 { pt3dadd( 8.13886, -30.7776, -24.4642, 0.48 ) }
    dend_41 { pt3dadd( 7.78027, -31.3698, -24.5266, 0.48 ) }
    dend_41 { pt3dadd( 7.2447, -32.1587, -24.565, 0.48 ) }
    dend_41 { pt3dadd( 6.8868, -32.6957, -24.5416, 0.48 ) }
    dend_41 { pt3dadd( 6.72709, -32.9754, -24.487, 0.12 ) }
    dend_41 { pt3dadd( 6.49641, -33.5742, -24.3797, 0.12 ) }
    dend_41 { pt3dadd( 6.40391, -33.9034, -24.3258, 0.12 ) }
    dend_41 { pt3dadd( 6.31546, -34.3853, -24.2606, 0.72 ) }
    dend_41 { pt3dadd( 6.19714, -35.3486, -24.1679, 0.96 ) }
    dend_41 { pt3dadd( 6.13225, -35.9555, -24.1498, 0.24 ) }
    dend_41 { pt3dadd( 6.00389, -37.1493, -24.1606, 0.24 ) }
    dend_41 { pt3dadd( 5.94842, -37.6696, -24.152, 0.96 ) }
    dend_41 { pt3dadd( 5.8795, -38.27, -24.1336, 1.44 ) }
    dend_41 { pt3dadd( 5.77735, -39.0055, -24.1079, 1.56 ) }
    dend_41 { pt3dadd( 5.60275, -40.0086, -24.0755, 0.48 ) }
    dend_41 { pt3dadd( 5.47734, -40.6605, -24.0595, 0.24 ) }
    dend_41 { pt3dadd( 5.24189, -41.8603, -24.0237, 1.68 ) }
    dend_41 { pt3dadd( 5.10237, -42.7041, -24.0158, 2.88 ) }
    dend_41 { pt3dadd( 4.93467, -43.928, -23.9869, 2.88 ) }
    dend_41 { pt3dadd( 4.77174, -45.54, -23.9377, 0.24 ) }
    dend_41 { pt3dadd( 4.69011, -46.8834, -23.881, 0.24 ) }
    dend_41 { pt3dadd( 4.67739, -47.3863, -23.863, 0.24 ) }
    dend_41 { pt3dadd( 4.68998, -48.9395, -23.8489, 0.24 ) }
    dend_41 { pt3dadd( 4.73264, -49.9263, -23.8396, 1.8 ) }
    dend_41 { pt3dadd( 4.8223, -51.008, -23.8188, 2.76 ) }
    dend_41 { pt3dadd( 4.99296, -52.4858, -23.7807, 0.48 ) }
    dend_41 { pt3dadd( 5.0869, -53.325, -23.757, 0.48 ) }
    dend_41 { pt3dadd( 5.13659, -53.9832, -23.7401, 0.6 ) }
    dend_41 { pt3dadd( 5.15948, -54.7181, -23.7021, 0.6 ) }
    dend_41 { pt3dadd( 5.15321, -55.2877, -23.6872, 0.36 ) }
    dend_41 { pt3dadd( 5.1236, -55.8972, -23.6705, 0.36 ) }
    dend_41 { pt3dadd( 5.0063, -56.8865, -23.7134, 0.48 ) }
    dend_41 { pt3dadd( 4.79678, -58.1952, -23.8237, 0.48 ) }
    dend_41 { pt3dadd( 4.62297, -59.0742, -23.9235, 1.44 ) }
    dend_41 { pt3dadd( 4.38898, -60.1854, -24.123, 2.76 ) }
    dend_41 { pt3dadd( 4.21244, -61.1117, -24.3418, 3.0 ) }
    dend_41 { pt3dadd( 3.90054, -63.0324, -24.9698, 0.12 ) }
    dend_41 { pt3dadd( 3.81947, -63.5958, -25.1954, 0.12 ) }
    dend_41 { pt3dadd( 3.70964, -64.3914, -25.5607, 0.12 ) }
    dend_41 { pt3dadd( 3.59542, -65.3026, -26.0095, 1.32 ) }
    dend_41 { pt3dadd( 3.49411, -66.1804, -26.4317, 2.4 ) }
    dend_41 { pt3dadd( 3.26197, -67.9267, -27.2156, 0.12 ) }
    dend_41 { pt3dadd( 3.13328, -68.7802, -27.5425, 0.12 ) }
    dend_41 { pt3dadd( 3.0305, -69.288, -27.7193, 0.84 ) }
    dend_41 { pt3dadd( 2.88944, -69.8479, -27.8891, 0.96 ) }
    dend_41 { pt3dadd( 2.51506, -71.1663, -28.1953, 0.12 ) }
    dend_41 { pt3dadd( 2.22246, -72.1509, -28.3839, 0.12 ) }
    dend_41 { pt3dadd( 2.00912, -72.9268, -28.4868, 1.32 ) }
    dend_41 { pt3dadd( 1.82896, -73.663, -28.5797, 1.8 ) }
    dend_41 { pt3dadd( 1.61246, -74.6567, -28.6886, 0.12 ) }
    dend_41 { pt3dadd( 1.33824, -75.9627, -28.8056, 0.12 ) }
    dend_41 { pt3dadd( 1.20436, -76.6715, -28.853, 1.56 ) }
    dend_41 { pt3dadd( 1.08434, -77.5151, -28.9018, 2.52 ) }
    dend_41 { pt3dadd( 1.00344, -78.2526, -28.9372, 2.64 ) }
    dend_41 { pt3dadd( 0.87364, -79.8336, -28.9957, 1.32 ) }
    dend_41 { pt3dadd( 0.816985, -80.5477, -29.0129, 0.12 ) }
    dend_41 { pt3dadd( 0.805021, -80.6794, -29.0161, 0.24 ) }
    dend_41 { pt3dadd( 0.709157, -81.6035, -29.0564, 0.24 ) }
    dend_41 { pt3dadd( 0.593788, -82.6842, -29.1221, 0.24 ) }
    dend_41 { pt3dadd( 0.514838, -83.4055, -29.2252, 0.24 ) }
    dend_41 { pt3dadd( 0.461441, -83.9028, -29.3313, 0.24 ) }
    dend_41 { pt3dadd( 0.408109, -84.3886, -29.4541, 1.56 ) }
    dend_41 { pt3dadd( 0.307928, -85.1485, -29.6613, 2.28 ) }
    dend_41 { pt3dadd( 0.201605, -85.8453, -29.8782, 2.28 ) }
    dend_41 { pt3dadd( -0.0369904, -87.4122, -30.4062, 0.48 ) }
    dend_41 { pt3dadd( -0.180595, -88.319, -30.7155, 0.48 ) }
    dend_41 { pt3dadd( -0.199113, -88.434, -30.753, 0.72 ) }
    dend_41 { pt3dadd( -0.344027, -89.2403, -30.9977, 0.96 ) }
    dend_41 { pt3dadd( -0.480166, -89.9185, -31.1708, 0.48 ) }
    dend_41 { pt3dadd( -0.56879, -90.2737, -31.2622, 0.48 ) }
    dend_41 { pt3dadd( -0.730584, -90.854, -31.368, 0.48 ) }
    dend_41 { pt3dadd( -0.954118, -91.6235, -31.4965, 0.6 ) }
    dend_41 { pt3dadd( -1.02697, -91.8843, -31.5349, 0.24 ) }
    dend_41 { pt3dadd( -1.23223, -92.7064, -31.6446, 0.24 ) }
    dend_41 { pt3dadd( -1.4775, -93.9068, -31.7763, 1.56 ) }
    dend_41 { pt3dadd( -1.64414, -94.8735, -31.8808, 2.4 ) }
    dend_41 { pt3dadd( -1.77093, -95.739, -31.9712, 2.52 ) }
    dend_41 { pt3dadd( -1.83312, -96.2213, -32.0179, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -2.02544, -97.7936, -32.1284, 0.24 ) }
    dend_41 { pt3dadd( -2.20774, -99.7206, -32.2081, 0.24 ) }
    dend_41 { pt3dadd( -2.24036, -100.228, -32.2169, 0.96 ) }
    dend_41 { pt3dadd( -2.26832, -100.96, -32.2356, 1.44 ) }
    dend_41 { pt3dadd( -2.26964, -101.453, -32.2415, 1.68 ) }
    dend_41 { pt3dadd( -2.23806, -102.521, -32.2638, 0.24 ) }
    dend_41 { pt3dadd( -2.09688, -104.362, -32.3097, 0.24 ) }
    dend_41 { pt3dadd( -1.98208, -105.332, -32.3486, 1.56 ) }
    dend_41 { pt3dadd( -1.89805, -105.938, -32.3861, 2.16 ) }
    dend_41 { pt3dadd( -1.8001, -106.59, -32.4451, 1.8 ) }
    dend_41 { pt3dadd( -1.66697, -107.707, -32.5876, 0.12 ) }
    dend_41 { pt3dadd( -1.6246, -108.344, -32.7019, 0.12 ) }
    dend_41 { pt3dadd( -1.63129, -108.464, -32.7252, 0.6 ) }
    dend_41 { pt3dadd( -1.71086, -108.963, -32.8181, 0.12 ) }
    dend_41 { pt3dadd( -1.80023, -109.334, -32.8793, 0.12 ) }
    dend_41 { pt3dadd( -2.0641, -110.238, -32.9995, 0.12 ) }
    dend_41 { pt3dadd( -2.18733, -110.66, -33.0333, 0.6 ) }
    dend_41 { pt3dadd( -2.37154, -111.373, -33.0117, 0.6 ) }
    dend_41 { pt3dadd( -2.47607, -111.853, -32.9568, 0.12 ) }
    dend_41 { pt3dadd( -2.58886, -112.435, -32.8566, 0.12 ) }
    dend_41 { pt3dadd( -2.68785, -112.921, -32.7619, 0.6 ) }
    dend_41 { pt3dadd( -2.81578, -113.628, -32.6126, 0.6 ) }
    dend_41 { pt3dadd( -3.03856, -114.974, -32.3268, 0.12 ) }
    dend_41 { pt3dadd( -3.17305, -115.867, -32.1437, 0.12 ) }
    dend_41 { pt3dadd( -3.29606, -116.766, -31.9774, 1.44 ) }
    dend_41 { pt3dadd( -3.41095, -117.695, -31.8347, 2.4 ) }
    dend_41 { pt3dadd( -3.45846, -118.13, -31.7862, 2.52 ) }
    dend_41 { pt3dadd( -3.52475, -118.83, -31.7506, 2.16 ) }
    dend_41 { pt3dadd( -3.53707, -119.685, -31.7771, 0.12 ) }
    dend_41 { pt3dadd( -3.49402, -120.416, -31.7593, 0.36 ) }
    dend_41 { pt3dadd( -3.44197, -120.891, -31.7256, 0.12 ) }
    dend_41 { pt3dadd( -3.39317, -121.252, -31.6852, 0.12 ) }
    dend_41 { pt3dadd( -3.31578, -121.78, -31.6244, 0.12 ) }
    dend_41 { pt3dadd( -3.16564, -122.717, -31.5143, 0.12 ) }
    dend_41 { pt3dadd( -2.97172, -123.795, -31.3976, 0.12 ) }
    dend_41 { pt3dadd( -2.93716, -124.036, -31.3804, 0.12 ) }
    dend_41 { pt3dadd( -2.88383, -124.77, -31.359, 0.12 ) }
    dend_41 { pt3dadd( -2.87681, -125.623, -31.4015, 1.8 ) }
    dend_41 { pt3dadd( -2.88769, -125.986, -31.4437, 2.28 ) }
    dend_41 { pt3dadd( -2.94749, -126.714, -31.5059, 1.92 ) }
    dend_41 { pt3dadd( -3.0486, -127.911, -31.5466, 0.36 ) }
    dend_41 { pt3dadd( -3.1351, -128.827, -31.5361, 0.36 ) }
    dend_41 { pt3dadd( -3.2094, -129.674, -31.4951, 1.2 ) }
    dend_41 { pt3dadd( -3.25325, -130.426, -31.3734, 0.72 ) }
    dend_41 { pt3dadd( -3.23875, -131.961, -31.1352, 0.12 ) }
    dend_41 { pt3dadd( -3.17792, -133.345, -30.9285, 0.12 ) }
    dend_41 { pt3dadd( -3.11181, -134.251, -30.8012, 1.68 ) }
    dend_41 { pt3dadd( -3.06311, -134.955, -30.7041, 1.8 ) }
    dend_41 { pt3dadd( -2.96022, -136.828, -30.4244, 1.44 ) }
    dend_41 { pt3dadd( -2.88461, -138.713, -30.2274, 0.24 ) }
    dend_41 { pt3dadd( -2.79486, -140.523, -30.0697, 0.12 ) }
    dend_41 { pt3dadd( -2.75192, -141.362, -29.9747, 0.12 ) }
    dend_41 { pt3dadd( -2.70122, -142.806, -29.7668, 0.12 ) }
    dend_41 { pt3dadd( -2.68869, -143.508, -29.6752, 1.2 ) }
    dend_41 { pt3dadd( -2.66702, -144.472, -29.579, 2.52 ) }
    dend_41 { pt3dadd( -2.60964, -145.979, -29.2619, 0.48 ) }
    dend_41 { pt3dadd( -2.57668, -146.325, -29.1838, 0.48 ) }
    dend_41 { pt3dadd( -2.46268, -147.18, -28.99, 0.48 ) }
    dend_41 { pt3dadd( -2.30357, -148.108, -28.8012, 0.72 ) }
    dend_41 { pt3dadd( -2.09061, -149.311, -28.5777, 0.24 ) }
    dend_41 { pt3dadd( -1.88014, -150.584, -28.2605, 0.12 ) }
    dend_41 { pt3dadd( -1.69194, -151.538, -28.0294, 0.12 ) }
    dend_41 { pt3dadd( -1.55827, -152.057, -27.9175, 1.08 ) }
    dend_41 { pt3dadd( -1.37985, -152.629, -27.7771, 1.32 ) }
    dend_41 { pt3dadd( -1.21074, -153.093, -27.6701, 1.08 ) }
    dend_41 { pt3dadd( -0.74583, -154.301, -27.4253, 0.36 ) }
    dend_41 { pt3dadd( -0.0252742, -156.106, -27.1812, 0.36 ) }
    dend_41 { pt3dadd( 0.468719, -157.321, -27.0088, 1.56 ) }
    dend_41 { pt3dadd( 0.896246, -158.381, -26.8661, 2.16 ) }
    dend_41 { pt3dadd( 1.27729, -159.225, -26.7685, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 13.5389, -12.939, -20.6856, 0.36 ) }
    dend_28 { pt3dadd( 14.659, -13.9858, -20.9727, 0.36 ) }
    dend_28 { pt3dadd( 15.0734, -14.1535, -21.1507, 0.36 ) }
    dend_28 { pt3dadd( 15.3142, -14.1794, -21.2829, 0.36 ) }
    dend_28 { pt3dadd( 15.5354, -14.1891, -21.4054, 0.36 ) }
    dend_28 { pt3dadd( 16.07, -14.2157, -21.6922, 0.72 ) }
    dend_28 { pt3dadd( 16.8852, -14.2832, -22.1259, 0.96 ) }
    dend_28 { pt3dadd( 17.4125, -14.2735, -22.431, 0.96 ) }
    dend_28 { pt3dadd( 18.1537, -14.2752, -22.8664, 0.48 ) }
    dend_28 { pt3dadd( 18.8322, -14.3274, -23.2651, 0.36 ) }
    dend_28 { pt3dadd( 19.1691, -14.4226, -23.4654, 0.36 ) }
    dend_28 { pt3dadd( 19.416, -14.6443, -23.6024, 0.36 ) }
    dend_28 { pt3dadd( 19.4814, -14.7964, -23.6335, 0.36 ) }
    dend_28 { pt3dadd( 19.6318, -15.3144, -23.6975, 0.36 ) }
    dend_28 { pt3dadd( 19.7702, -15.8057, -23.7309, 1.56 ) }
    dend_28 { pt3dadd( 19.9692, -16.4051, -23.7573, 2.52 ) }
    dend_28 { pt3dadd( 20.2004, -16.9388, -23.8032, 2.4 ) }
    dend_28 { pt3dadd( 20.7506, -17.8935, -23.9135, 0.36 ) }
    dend_28 { pt3dadd( 20.9713, -18.1929, -23.9619, 0.36 ) }
    dend_28 { pt3dadd( 21.4498, -18.7343, -24.0703, 0.36 ) }
    dend_28 { pt3dadd( 21.9256, -19.1997, -24.1877, 0.36 ) }
    dend_28 { pt3dadd( 22.5975, -19.7989, -24.3513, 1.44 ) }
    dend_28 { pt3dadd( 23.3235, -20.397, -24.5307, 3.25 ) }
    dend_28 { pt3dadd( 24.1465, -21.0285, -24.7409, 4.69 ) }
    dend_28 { pt3dadd( 24.2988, -21.1488, -24.7844, 4.93 ) }
    dend_28 { pt3dadd( 25.1917, -21.9232, -25.0861, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -16.3572, -299.373, -35.6927, 0.12 ) }
    dend_24 { pt3dadd( -17.2306, -300.639, -36.6859, 0.12 ) }
    dend_24 { pt3dadd( -17.6011, -301.212, -37.1472, 0.12 ) }
    dend_24 { pt3dadd( -17.731, -301.376, -37.3258, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -17.9022, -301.562, -37.5193, 0.36 ) }
    dend_24 { pt3dadd( -18.8923, -302.585, -38.5061, 0.12 ) }
    dend_24 { pt3dadd( -19.2142, -302.886, -38.8377, 0.12 ) }
    dend_24 { pt3dadd( -19.2142, -302.886, -38.8377, 0.36 ) }
    dend_24 { pt3dadd( -20.4108, -303.977, -40.127, 0.36 ) }
    dend_24 { pt3dadd( -21.1414, -304.685, -40.9368, 2.52 ) }
    dend_24 { pt3dadd( -21.4031, -304.965, -41.2376, 2.88 ) }
    dend_24 { pt3dadd( -23.5895, -307.488, -43.6728, 0.24 ) }
    dend_24 { pt3dadd( -23.876, -307.844, -43.9896, 0.12 ) }
    dend_24 { pt3dadd( -24.1091, -308.187, -44.2597, 0.12 ) }
    dend_24 { pt3dadd( -24.3294, -308.641, -44.546, 0.48 ) }
    dend_24 { pt3dadd( -24.5005, -309.14, -44.8307, 0.48 ) }
    dend_24 { pt3dadd( -24.6346, -309.656, -45.0708, 0.12 ) }
    dend_24 { pt3dadd( -24.7356, -310.578, -45.2816, 0.12 ) }
    dend_24 { pt3dadd( -24.8098, -311.121, -45.46, 0.12 ) }
    dend_24 { pt3dadd( -24.9011, -311.741, -45.6909, 0.84 ) }
    dend_24 { pt3dadd( -24.97, -312.144, -45.8233, 0.84 ) }
    dend_24 { pt3dadd( -25.2091, -313.665, -46.2855, 0.12 ) }
    dend_24 { pt3dadd( -25.2918, -314.328, -46.4649, 0.12 ) }
    dend_24 { pt3dadd( -25.5372, -316.047, -46.8619, 2.64 ) }
    dend_24 { pt3dadd( -25.6367, -316.589, -46.9595, 2.28 ) }
    dend_24 { pt3dadd( -25.9353, -318.094, -47.024, 0.12 ) }
    dend_24 { pt3dadd( -26.0479, -318.627, -46.9569, 0.12 ) }
    dend_24 { pt3dadd( -26.2992, -319.625, -46.6118, 0.12 ) }
    dend_24 { pt3dadd( -26.5643, -320.316, -46.2341, 1.2 ) }
    dend_24 { pt3dadd( -26.614, -320.416, -46.1551, 1.44 ) }
    dend_24 { pt3dadd( -27.3957, -321.747, -44.9011, 0.12 ) }
    dend_24 { pt3dadd( -27.6507, -322.1, -44.4643, 0.12 ) }
    dend_24 { pt3dadd( -27.8953, -322.374, -44.0289, 0.12 ) }
    dend_24 { pt3dadd( -28.2164, -322.67, -43.3786, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.3572, -299.373, -35.6927, 0.6 ) }
    dend_17 { pt3dadd( -16.2305, -300.121, -36.859, 0.6 ) }
    dend_17 { pt3dadd( -16.2275, -300.214, -37.017, 0.6 ) }
    dend_17 { pt3dadd( -16.2287, -300.614, -37.6883, 1.32 ) }
    dend_17 { pt3dadd( -16.2362, -301.052, -38.3852, 2.28 ) }
    dend_17 { pt3dadd( -16.2447, -301.545, -39.1687, 2.04 ) }
    dend_17 { pt3dadd( -16.2725, -303.164, -41.7442, 0.96 ) }
    dend_17 { pt3dadd( -16.3069, -303.547, -42.4209, 0.48 ) }
    dend_17 { pt3dadd( -16.3334, -303.746, -42.7918, 0.48 ) }
    dend_17 { pt3dadd( -16.3816, -303.958, -43.2186, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.30031, 54.9708, 11.0905, 1.2 ) }
    dend_8 { pt3dadd( 9.23837, 56.5185, 10.9104, 1.2 ) }
    dend_8 { pt3dadd( 9.21281, 57.9597, 10.8818, 1.32 ) }
    dend_8 { pt3dadd( 9.20819, 58.814, 10.9003, 1.44 ) }
    dend_8 { pt3dadd( 9.22306, 59.9081, 10.9605, 0.96 ) }
    dend_8 { pt3dadd( 9.28662, 61.3812, 11.0548, 1.08 ) }
    dend_8 { pt3dadd( 9.43784, 63.3647, 11.1807, 1.56 ) }
    dend_8 { pt3dadd( 9.71614, 65.0761, 11.3303, 0.96 ) }
    dend_8 { pt3dadd( 9.94989, 66.0312, 11.4233, 0.6 ) }
    dend_8 { pt3dadd( 10.2433, 66.9441, 11.5083, 1.2 ) }
    dend_8 { pt3dadd( 10.579, 67.8027, 11.5836, 2.04 ) }
    dend_8 { pt3dadd( 10.8737, 68.4717, 11.6362, 2.16 ) }
    dend_8 { pt3dadd( 11.49, 69.8207, 11.7539, 1.2 ) }
    dend_8 { pt3dadd( 11.8996, 70.7937, 11.8409, 0.84 ) }
    dend_8 { pt3dadd( 12.2365, 71.8237, 11.9056, 0.48 ) }
    dend_8 { pt3dadd( 12.4014, 72.5472, 11.937, 0.48 ) }
    dend_8 { pt3dadd( 12.5883, 74.1753, 11.9798, 0.48 ) }
    dend_8 { pt3dadd( 12.6211, 75.3726, 11.9916, 0.84 ) }
    dend_8 { pt3dadd( 12.5709, 76.7235, 11.9744, 1.92 ) }
    dend_8 { pt3dadd( 12.4727, 78.4235, 11.897, 2.52 ) }
    dend_8 { pt3dadd( 12.4256, 79.2938, 11.8304, 2.28 ) }
    dend_8 { pt3dadd( 12.4005, 80.7293, 11.717, 0.6 ) }
    dend_8 { pt3dadd( 12.4196, 81.2224, 11.6846, 0.6 ) }
    dend_8 { pt3dadd( 12.4736, 81.9321, 11.6642, 0.48 ) }
    dend_8 { pt3dadd( 12.5998, 83.1331, 11.6979, 0.48 ) }
    dend_8 { pt3dadd( 12.7267, 84.0362, 11.7851, 0.96 ) }
    dend_8 { pt3dadd( 12.8552, 84.8408, 11.8807, 1.8 ) }
    dend_8 { pt3dadd( 13.0683, 85.9783, 12.0548, 2.04 ) }
    dend_8 { pt3dadd( 13.2798, 87.1771, 12.2498, 2.04 ) }
    dend_8 { pt3dadd( 13.523, 88.9007, 12.5573, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.30031, 54.9708, 11.0905, 1.32 ) }
    dend_3 { pt3dadd( 10.351, 56.472, 11.1851, 1.32 ) }
    dend_3 { pt3dadd( 10.7858, 57.1251, 11.1364, 0.96 ) }
    dend_3 { pt3dadd( 11.5342, 58.1987, 10.9472, 1.32 ) }
    dend_3 { pt3dadd( 11.9967, 58.7869, 10.7622, 1.68 ) }
    dend_3 { pt3dadd( 12.5991, 59.4573, 10.4809, 1.2 ) }
    dend_3 { pt3dadd( 13.3417, 60.2096, 10.1053, 0.84 ) }
    dend_3 { pt3dadd( 14.1374, 60.9435, 9.61394, 0.72 ) }
    dend_3 { pt3dadd( 14.5988, 61.3382, 9.33777, 0.84 ) }
    dend_3 { pt3dadd( 15.4055, 61.9045, 8.82341, 0.6 ) }
    dend_3 { pt3dadd( 15.9348, 62.2063, 8.48575, 0.6 ) }
    dend_3 { pt3dadd( 16.3824, 62.3917, 8.21514, 1.32 ) }
    dend_3 { pt3dadd( 17.5926, 62.7734, 7.7282, 1.8 ) }
    dend_3 { pt3dadd( 18.3785, 63.1253, 7.65426, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 29.0758, 68.6364, -17.4274, 0.48 ) }
    dend_58 { pt3dadd( 29.6009, 69.85, -17.1843, 0.48 ) }
    dend_58 { pt3dadd( 29.8799, 70.5789, -17.0245, 0.48 ) }
    dend_58 { pt3dadd( 30.0533, 71.0756, -16.9036, 0.48 ) }
    dend_58 { pt3dadd( 30.3506, 71.9638, -16.6936, 0.72 ) }
    dend_58 { pt3dadd( 30.5234, 72.4994, -16.573, 0.48 ) }
    dend_58 { pt3dadd( 30.725, 73.1441, -16.4342, 0.48 ) }
    dend_58 { pt3dadd( 30.9481, 74.0931, -16.2549, 0.48 ) }
    dend_58 { pt3dadd( 31.1347, 74.951, -16.0947, 1.8 ) }
    dend_58 { pt3dadd( 31.2392, 75.3899, -16.0159, 2.64 ) }
    dend_58 { pt3dadd( 31.3765, 75.8866, -15.9339, 2.88 ) }
    dend_58 { pt3dadd( 31.552, 76.4566, -15.8323, 2.88 ) }
    dend_58 { pt3dadd( 31.7633, 77.1024, -15.7153, 2.04 ) }
    dend_58 { pt3dadd( 32.0446, 77.9176, -15.5724, 0.48 ) }
    dend_58 { pt3dadd( 32.1609, 78.2416, -15.5133, 0.36 ) }
    dend_58 { pt3dadd( 32.601, 79.4364, -15.2955, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 32.8916, 80.2013, -15.1611, 1.44 ) }
    dend_58 { pt3dadd( 33.1954, 80.9003, -15.0489, 2.52 ) }
    dend_58 { pt3dadd( 33.5293, 81.5796, -14.9514, 2.64 ) }
    dend_58 { pt3dadd( 33.7879, 82.0574, -14.8928, 2.52 ) }
    dend_58 { pt3dadd( 34.3895, 83.1037, -14.7891, 0.48 ) }
    dend_58 { pt3dadd( 34.6495, 83.5429, -14.7579, 0.36 ) }
    dend_58 { pt3dadd( 35.1447, 84.3952, -14.7119, 0.36 ) }
    dend_58 { pt3dadd( 35.3743, 84.7991, -14.6839, 0.36 ) }
    dend_58 { pt3dadd( 35.7422, 85.4746, -14.6383, 0.36 ) }
    dend_58 { pt3dadd( 36.1378, 86.2377, -14.5849, 1.44 ) }
    dend_58 { pt3dadd( 36.3541, 86.7077, -14.5514, 1.56 ) }
    dend_58 { pt3dadd( 36.5975, 87.3292, -14.5123, 0.24 ) }
    dend_58 { pt3dadd( 36.8264, 88.0687, -14.4689, 0.24 ) }
    dend_58 { pt3dadd( 37.006, 88.7123, -14.4211, 0.72 ) }
    dend_58 { pt3dadd( 37.0958, 89.0373, -14.3917, 0.72 ) }
    dend_58 { pt3dadd( 37.2022, 89.4134, -14.3514, 0.48 ) }
    dend_58 { pt3dadd( 37.2804, 89.6587, -14.3211, 0.36 ) }
    dend_58 { pt3dadd( 37.428, 90.051, -14.2522, 0.36 ) }
    dend_58 { pt3dadd( 37.6334, 90.5112, -14.133, 0.84 ) }
    dend_58 { pt3dadd( 38.0183, 91.2419, -13.9103, 2.4 ) }
    dend_58 { pt3dadd( 38.1805, 91.5353, -13.8252, 3.0 ) }
    dend_58 { pt3dadd( 38.5092, 92.1134, -13.6632, 3.0 ) }
    dend_58 { pt3dadd( 38.9154, 92.8427, -13.4774, 1.68 ) }
    dend_58 { pt3dadd( 39.3133, 93.5759, -13.3075, 0.36 ) }
    dend_58 { pt3dadd( 39.6258, 94.182, -13.1878, 0.36 ) }
    dend_58 { pt3dadd( 39.9881, 94.9807, -13.0549, 0.36 ) }
    dend_58 { pt3dadd( 40.2365, 95.6218, -12.9729, 1.68 ) }
    dend_58 { pt3dadd( 40.3813, 96.059, -12.9347, 2.52 ) }
    dend_58 { pt3dadd( 40.4798, 96.4059, -12.9188, 2.64 ) }
    dend_58 { pt3dadd( 40.5952, 96.8535, -12.9051, 2.28 ) }
    dend_58 { pt3dadd( 40.7854, 97.5755, -12.8806, 0.48 ) }
    dend_58 { pt3dadd( 41.1017, 98.5593, -12.8695, 0.48 ) }
    dend_58 { pt3dadd( 41.3728, 99.2857, -12.8791, 0.48 ) }
    dend_58 { pt3dadd( 41.5112, 99.6064, -12.8855, 0.96 ) }
    dend_58 { pt3dadd( 41.7688, 100.154, -12.8951, 1.56 ) }
    dend_58 { pt3dadd( 41.9705, 100.545, -12.8974, 1.56 ) }
    dend_58 { pt3dadd( 42.3887, 101.305, -12.889, 0.48 ) }
    dend_58 { pt3dadd( 42.5195, 101.537, -12.8893, 0.12 ) }
    dend_58 { pt3dadd( 42.8922, 102.212, -12.893, 0.12 ) }
    dend_58 { pt3dadd( 43.2986, 102.972, -12.8954, 2.16 ) }
    dend_58 { pt3dadd( 43.4964, 103.358, -12.8935, 2.88 ) }
    dend_58 { pt3dadd( 43.646, 103.669, -12.8836, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 29.0758, 68.6364, -17.4274, 0.48 ) }
    dend_55 { pt3dadd( 29.4279, 70.2823, -18.5748, 0.48 ) }
    dend_55 { pt3dadd( 29.4698, 70.5234, -18.7377, 0.48 ) }
    dend_55 { pt3dadd( 29.5509, 71.0426, -19.1163, 0.72 ) }
    dend_55 { pt3dadd( 29.6119, 71.3986, -19.401, 0.72 ) }
    dend_55 { pt3dadd( 29.7407, 72.0653, -19.9374, 0.24 ) }
    dend_55 { pt3dadd( 29.8016, 72.3637, -20.1812, 0.12 ) }
    dend_55 { pt3dadd( 29.8893, 72.7845, -20.5086, 0.84 ) }
    dend_55 { pt3dadd( 30.0249, 73.3289, -20.9725, 0.12 ) }
    dend_55 { pt3dadd( 30.1925, 73.9138, -21.4874, 0.12 ) }
    dend_55 { pt3dadd( 30.2977, 74.2451, -21.76, 1.68 ) }
    dend_55 { pt3dadd( 30.4315, 74.6432, -22.0403, 2.4 ) }
    dend_55 { pt3dadd( 30.6649, 75.3338, -22.5105, 1.8 ) }
    dend_55 { pt3dadd( 30.8882, 75.9959, -22.9529, 0.12 ) }
    dend_55 { pt3dadd( 30.9752, 76.2998, -23.1416, 0.12 ) }
    dend_55 { pt3dadd( 31.1084, 76.9126, -23.5183, 1.92 ) }
    dend_55 { pt3dadd( 31.1844, 77.3287, -23.8001, 2.4 ) }
    dend_55 { pt3dadd( 31.37, 78.424, -24.5935, 0.6 ) }
    dend_55 { pt3dadd( 31.4402, 78.9339, -24.975, 0.48 ) }
    dend_55 { pt3dadd( 31.4908, 79.3452, -25.2828, 0.48 ) }
    dend_55 { pt3dadd( 31.5716, 79.9445, -25.7401, 1.2 ) }
    dend_55 { pt3dadd( 31.6716, 80.6223, -26.2928, 0.48 ) }
    dend_55 { pt3dadd( 31.7185, 80.877, -26.4952, 0.12 ) }
    dend_55 { pt3dadd( 31.8444, 81.3888, -26.8246, 0.12 ) }
    dend_55 { pt3dadd( 31.9414, 81.704, -27.0005, 0.72 ) }
    dend_55 { pt3dadd( 32.0589, 82.0165, -27.2012, 0.72 ) }
    dend_55 { pt3dadd( 32.3194, 82.7567, -27.6865, 0.12 ) }
    dend_55 { pt3dadd( 32.3739, 82.9263, -27.8056, 0.12 ) }
    dend_55 { pt3dadd( 32.5449, 83.4342, -28.1905, 2.28 ) }
    dend_55 { pt3dadd( 32.6454, 83.7029, -28.4329, 2.52 ) }
    dend_55 { pt3dadd( 33.1146, 84.8797, -29.6177, 0.12 ) }
    dend_55 { pt3dadd( 33.3304, 85.3556, -30.1096, 0.12 ) }
    dend_55 { pt3dadd( 33.5715, 85.8353, -30.6072, 1.44 ) }
    dend_55 { pt3dadd( 33.7112, 86.1021, -30.89, 1.8 ) }
    dend_55 { pt3dadd( 34.0187, 86.6744, -31.5189, 1.32 ) }
    dend_55 { pt3dadd( 34.1822, 87.0092, -31.8724, 0.12 ) }
    dend_55 { pt3dadd( 34.4261, 87.5315, -32.3573, 0.12 ) }
    dend_55 { pt3dadd( 34.7479, 88.2554, -32.9963, 1.56 ) }
    dend_55 { pt3dadd( 34.8426, 88.5, -33.195, 1.92 ) }
    dend_55 { pt3dadd( 35.1031, 89.3077, -33.8171, 0.12 ) }
    dend_55 { pt3dadd( 35.2459, 89.8054, -34.1784, 0.12 ) }
    dend_55 { pt3dadd( 35.3286, 90.1134, -34.4032, 0.96 ) }
    dend_55 { pt3dadd( 35.3585, 90.2281, -34.4904, 0.96 ) }
    dend_55 { pt3dadd( 35.5047, 90.7143, -34.9036, 0.12 ) }
    dend_55 { pt3dadd( 35.6246, 91.0922, -35.254, 0.12 ) }
    dend_55 { pt3dadd( 35.7912, 91.6474, -35.7925, 1.32 ) }
    dend_55 { pt3dadd( 35.867, 91.9062, -36.0461, 1.8 ) }
    dend_55 { pt3dadd( 35.9564, 92.2452, -36.367, 1.32 ) }
    dend_55 { pt3dadd( 36.2052, 93.2052, -37.2291, 0.12 ) }
    dend_55 { pt3dadd( 36.2353, 93.3176, -37.3463, 0.12 ) }
    dend_55 { pt3dadd( 36.3525, 93.7187, -37.7909, 0.36 ) }
    dend_55 { pt3dadd( 36.4369, 94.0607, -38.161, 0.36 ) }
    dend_55 { pt3dadd( 36.5674, 94.5239, -38.6842, 1.92 ) }
    dend_55 { pt3dadd( 36.7015, 94.9067, -39.1171, 2.76 ) }
    dend_55 { pt3dadd( 37.3871, 96.6088, -40.9568, 0.36 ) }
    dend_55 { pt3dadd( 37.4485, 96.7509, -41.1153, 0.36 ) }
    dend_55 { pt3dadd( 37.6934, 97.2814, -41.7208, 0.36 ) }
    dend_55 { pt3dadd( 37.9403, 97.8078, -42.3232, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 38.0866, 98.1024, -42.6577, 0.36 ) }
    dend_55 { pt3dadd( 38.3625, 98.6027, -43.2154, 0.72 ) }
    dend_55 { pt3dadd( 38.7459, 99.184, -43.8483, 0.12 ) }
    dend_55 { pt3dadd( 38.8417, 99.3224, -44.0103, 0.12 ) }
    dend_55 { pt3dadd( 39.0268, 99.5732, -44.3289, 1.92 ) }
    dend_55 { pt3dadd( 39.3477, 100.093, -44.9799, 2.52 ) }
    dend_55 { pt3dadd( 39.6987, 100.644, -45.7573, 1.44 ) }
    dend_55 { pt3dadd( 39.968, 100.958, -46.3017, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 5.60012, 41.4341, -28.8241, 0.12 ) }
    dend_53 { pt3dadd( 5.57127, 43.1652, -29.3605, 0.12 ) }
    dend_53 { pt3dadd( 5.55697, 43.9195, -29.6125, 0.6 ) }
    dend_53 { pt3dadd( 5.56009, 44.4969, -29.8036, 0.12 ) }
    dend_53 { pt3dadd( 5.56285, 44.7597, -29.8849, 0.12 ) }
    dend_53 { pt3dadd( 5.56321, 45.1151, -29.984, 0.12 ) }
    dend_53 { pt3dadd( 5.56192, 45.5412, -30.0897, 0.24 ) }
    dend_53 { pt3dadd( 5.56926, 45.9385, -30.1949, 0.12 ) }
    dend_53 { pt3dadd( 5.60234, 46.2815, -30.3286, 0.12 ) }
    dend_53 { pt3dadd( 5.68155, 46.8501, -30.5826, 0.12 ) }
    dend_53 { pt3dadd( 5.78029, 47.4083, -30.8536, 1.32 ) }
    dend_53 { pt3dadd( 5.86991, 47.787, -31.0345, 1.8 ) }
    dend_53 { pt3dadd( 6.16633, 48.8568, -31.5153, 0.84 ) }
    dend_53 { pt3dadd( 6.4121, 49.5156, -31.89, 0.12 ) }
    dend_53 { pt3dadd( 6.51101, 49.7229, -32.0176, 0.12 ) }
    dend_53 { pt3dadd( 6.8656, 50.3753, -32.4059, 1.8 ) }
    dend_53 { pt3dadd( 7.08768, 50.7669, -32.6208, 2.16 ) }
    dend_53 { pt3dadd( 7.30673, 51.1303, -32.8108, 1.8 ) }
    dend_53 { pt3dadd( 8.45029, 52.8209, -33.7624, 0.24 ) }
    dend_53 { pt3dadd( 8.95504, 53.5023, -34.1757, 0.24 ) }
    dend_53 { pt3dadd( 9.47446, 54.1869, -34.6, 0.24 ) }
    dend_53 { pt3dadd( 9.70945, 54.4906, -34.7976, 0.24 ) }
    dend_53 { pt3dadd( 10.4865, 55.4884, -35.4936, 2.28 ) }
    dend_53 { pt3dadd( 11.566, 56.8681, -36.4904, 0.24 ) }
    dend_53 { pt3dadd( 11.7344, 57.0899, -36.6412, 0.24 ) }
    dend_53 { pt3dadd( 12.2414, 57.7491, -37.128, 0.24 ) }
    dend_53 { pt3dadd( 12.8007, 58.4581, -37.6601, 1.44 ) }
    dend_53 { pt3dadd( 13.2368, 59.0468, -38.0672, 1.8 ) }
    dend_53 { pt3dadd( 13.712, 59.8035, -38.4852, 0.12 ) }
    dend_53 { pt3dadd( 14.0238, 60.3964, -38.7365, 0.12 ) }
    dend_53 { pt3dadd( 14.1848, 60.7086, -38.8708, 0.96 ) }
    dend_53 { pt3dadd( 14.3221, 60.9715, -38.9771, 1.2 ) }
    dend_53 { pt3dadd( 14.6481, 61.6459, -39.2024, 0.12 ) }
    dend_53 { pt3dadd( 14.9011, 62.1762, -39.3651, 0.12 ) }
    dend_53 { pt3dadd( 15.058, 62.4859, -39.4694, 0.36 ) }
    dend_53 { pt3dadd( 15.4126, 63.141, -39.7679, 0.12 ) }
    dend_53 { pt3dadd( 15.573, 63.4616, -39.9243, 0.12 ) }
    dend_53 { pt3dadd( 15.834, 64.0207, -40.2063, 0.48 ) }
    dend_53 { pt3dadd( 16.1695, 64.7578, -40.6027, 0.48 ) }
    dend_53 { pt3dadd( 16.5059, 65.5335, -41.0272, 2.28 ) }
    dend_53 { pt3dadd( 17.0266, 66.8076, -41.6999, 0.12 ) }
    dend_53 { pt3dadd( 17.2671, 67.4665, -42.0292, 0.12 ) }
    dend_53 { pt3dadd( 17.3918, 67.8313, -42.219, 0.12 ) }
    dend_53 { pt3dadd( 17.5988, 68.5222, -42.5751, 1.08 ) }
    dend_53 { pt3dadd( 17.6898, 68.8883, -42.781, 1.2 ) }
    dend_53 { pt3dadd( 17.8295, 69.512, -43.2686, 0.12 ) }
    dend_53 { pt3dadd( 17.915, 69.9854, -43.7242, 0.12 ) }
    dend_53 { pt3dadd( 18.0587, 70.7007, -44.4918, 1.44 ) }
    dend_53 { pt3dadd( 18.1073, 70.9489, -44.7669, 2.04 ) }
    dend_53 { pt3dadd( 18.1785, 71.4013, -45.274, 1.68 ) }
    dend_53 { pt3dadd( 18.3653, 72.7722, -46.8681, 0.24 ) }
    dend_53 { pt3dadd( 18.4142, 73.2202, -47.4095, 0.24 ) }
    dend_53 { pt3dadd( 18.4609, 73.6949, -47.9916, 0.12 ) }
    dend_53 { pt3dadd( 18.48, 74.1459, -48.5118, 0.72 ) }
    dend_53 { pt3dadd( 18.4877, 74.3639, -48.7424, 0.72 ) }
    dend_53 { pt3dadd( 18.4791, 74.5668, -48.9335, 0.12 ) }
    dend_53 { pt3dadd( 18.3997, 75.2475, -49.484, 0.12 ) }
    dend_53 { pt3dadd( 18.3488, 75.5456, -49.7743, 0.12 ) }
    dend_53 { pt3dadd( 18.1882, 76.0769, -50.3613, 1.68 ) }
    dend_53 { pt3dadd( 18.1512, 76.1904, -50.4911, 1.68 ) }
    dend_53 { pt3dadd( 17.9046, 77.1819, -51.6106, 0.12 ) }
    dend_53 { pt3dadd( 17.8335, 77.5448, -51.9879, 0.12 ) }
    dend_53 { pt3dadd( 17.8058, 77.8977, -52.3326, 0.24 ) }
    dend_53 { pt3dadd( 17.8033, 78.292, -52.6955, 0.24 ) }
    dend_53 { pt3dadd( 17.8332, 78.9557, -53.2638, 0.24 ) }
    dend_53 { pt3dadd( 17.8594, 79.6481, -53.7714, 1.56 ) }
    dend_53 { pt3dadd( 17.8879, 80.0895, -54.0397, 2.04 ) }
    dend_53 { pt3dadd( 17.9704, 81.336, -54.7128, 0.36 ) }
    dend_53 { pt3dadd( 18.0029, 81.7197, -54.8956, 0.48 ) }
    dend_53 { pt3dadd( 18.0731, 82.3092, -55.1788, 0.48 ) }
    dend_53 { pt3dadd( 18.1245, 82.9528, -55.4794, 0.48 ) }
    dend_53 { pt3dadd( 18.1376, 83.2812, -55.6384, 0.24 ) }
    dend_53 { pt3dadd( 18.1524, 83.65, -55.8587, 0.24 ) }
    dend_53 { pt3dadd( 18.172, 84.1711, -56.2184, 0.24 ) }
    dend_53 { pt3dadd( 18.2149, 84.885, -56.827, 1.08 ) }
    dend_53 { pt3dadd( 18.2284, 85.1922, -57.1472, 1.08 ) }
    dend_53 { pt3dadd( 18.2248, 85.58, -57.7207, 0.36 ) }
    dend_53 { pt3dadd( 18.1682, 85.9749, -58.4466, 0.36 ) }
    dend_53 { pt3dadd( 18.1334, 86.082, -58.6876, 0.36 ) }
    dend_53 { pt3dadd( 18.0773, 86.1817, -58.9439, 0.36 ) }
    dend_53 { pt3dadd( 17.9901, 86.3039, -59.2777, 0.36 ) }
    dend_53 { pt3dadd( 17.5963, 86.8258, -60.7022, 1.68 ) }
    dend_53 { pt3dadd( 17.5146, 86.9213, -60.9532, 2.4 ) }
    dend_53 { pt3dadd( 17.451, 86.9928, -61.1271, 2.64 ) }
    dend_53 { pt3dadd( 16.7492, 87.7529, -62.9142, 0.6 ) }
    dend_53 { pt3dadd( 16.6542, 87.8414, -63.1291, 0.12 ) }
    dend_53 { pt3dadd( 16.512, 87.9515, -63.3889, 0.12 ) }
    dend_53 { pt3dadd( 16.3181, 88.0679, -63.6723, 0.6 ) }
    dend_53 { pt3dadd( 16.1163, 88.1815, -63.9653, 0.12 ) }
    dend_53 { pt3dadd( 15.8745, 88.2961, -64.2589, 0.12 ) }
    dend_53 { pt3dadd( 15.4326, 88.4293, -64.6363, 1.44 ) }
    dend_53 { pt3dadd( 15.064, 88.5396, -64.9454, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( 14.1232, 88.8567, -65.6937, 0.12 ) }
    dend_53 { pt3dadd( 13.7251, 89.0183, -65.9711, 0.12 ) }
    dend_53 { pt3dadd( 13.2301, 89.2477, -66.2605, 0.84 ) }
    dend_53 { pt3dadd( 13.034, 89.3536, -66.3752, 0.84 ) }
    dend_53 { pt3dadd( 12.895, 89.433, -66.4513, 0.12 ) }
    dend_53 { pt3dadd( 12.569, 89.5967, -66.6065, 0.12 ) }
    dend_53 { pt3dadd( 12.0842, 89.8129, -66.7879, 1.44 ) }
    dend_53 { pt3dadd( 11.9161, 89.8824, -66.8587, 1.56 ) }
    dend_53 { pt3dadd( 11.2494, 90.169, -67.1773, 0.12 ) }
    dend_53 { pt3dadd( 10.7454, 90.3931, -67.4179, 0.12 ) }
    dend_53 { pt3dadd( 10.4362, 90.5272, -67.5649, 1.08 ) }
    dend_53 { pt3dadd( 10.0691, 90.6772, -67.764, 1.92 ) }
    dend_53 { pt3dadd( 9.77633, 90.7943, -67.95, 1.56 ) }
    dend_53 { pt3dadd( 9.2442, 91.0169, -68.3305, 0.12 ) }
    dend_53 { pt3dadd( 9.03411, 91.1059, -68.4942, 0.12 ) }
    dend_53 { pt3dadd( 8.90886, 91.1631, -68.6064, 0.48 ) }
    dend_53 { pt3dadd( 8.39788, 91.4199, -69.1262, 0.48 ) }
    dend_53 { pt3dadd( 8.17804, 91.5401, -69.3588, 0.12 ) }
    dend_53 { pt3dadd( 7.81054, 91.7528, -69.6307, 0.12 ) }
    dend_53 { pt3dadd( 7.68277, 91.9015, -69.8167, 0.84 ) }
    dend_53 { pt3dadd( 7.57737, 92.0551, -70.0252, 1.2 ) }
    dend_53 { pt3dadd( 7.38408, 92.307, -70.326, 0.12 ) }
    dend_53 { pt3dadd( 6.98822, 92.5823, -70.5161, 0.12 ) }
    dend_53 { pt3dadd( 5.62888, 92.8357, -70.1682, 2.88 ) }
    dend_53 { pt3dadd( 2.56205, 92.8778, -68.5816, 0.96 ) }
    dend_53 { pt3dadd( 1.98229, 92.8051, -68.1509, 0.96 ) }
    dend_53 { pt3dadd( -1.1626, 92.0641, -65.2756, 0.12 ) }
    dend_53 { pt3dadd( -1.54207, 91.9445, -64.8822, 0.12 ) }
    dend_53 { pt3dadd( -1.82959, 91.8295, -64.5519, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 5.60012, 41.4341, -28.8241, 0.48 ) }
    dend_50 { pt3dadd( 4.40618, 41.7094, -29.8969, 0.48 ) }
    dend_50 { pt3dadd( 3.97835, 41.9101, -30.6041, 0.48 ) }
    dend_50 { pt3dadd( 3.56679, 42.3229, -31.8177, 0.48 ) }
    dend_50 { pt3dadd( 3.37778, 42.5729, -32.4589, 2.16 ) }
    dend_50 { pt3dadd( 3.29127, 42.7105, -32.7829, 2.52 ) }
    dend_50 { pt3dadd( 3.1777, 42.9162, -33.2382, 2.52 ) }
    dend_50 { pt3dadd( 2.87499, 43.8918, -35.3888, 1.44 ) }
    dend_50 { pt3dadd( 2.70519, 44.508, -36.8076, 0.36 ) }
    dend_50 { pt3dadd( 2.64029, 44.7146, -37.3304, 0.48 ) }
    dend_50 { pt3dadd( 2.50926, 45.0567, -38.315, 0.6 ) }
    dend_50 { pt3dadd( 2.42064, 45.3514, -39.5109, 0.6 ) }
    dend_50 { pt3dadd( 2.36377, 45.6694, -41.1433, 0.6 ) }
    dend_50 { pt3dadd( 2.33885, 45.7877, -41.8549, 1.92 ) }
    dend_50 { pt3dadd( 2.31504, 45.8721, -42.4678, 2.64 ) }
    dend_50 { pt3dadd( 2.29112, 45.9472, -43.077, 2.64 ) }
    dend_50 { pt3dadd( 2.03783, 46.56, -48.5615, 1.68 ) }
    dend_50 { pt3dadd( 1.89935, 46.8272, -50.949, 0.72 ) }
    dend_50 { pt3dadd( 1.8645, 46.8845, -51.3945, 1.56 ) }
    dend_50 { pt3dadd( 1.77993, 47.017, -52.3098, 1.92 ) }
    dend_50 { pt3dadd( 1.7304, 47.0807, -52.7046, 2.28 ) }
    dend_50 { pt3dadd( 1.67356, 47.1376, -53.0128, 2.28 ) }
    dend_50 { pt3dadd( 0.689419, 47.6893, -55.2901, 0.24 ) }
    dend_50 { pt3dadd( 0.517078, 47.7732, -55.6584, 0.12 ) }
    dend_50 { pt3dadd( 0.409979, 47.8269, -55.9536, 0.12 ) }
    dend_50 { pt3dadd( 0.235696, 47.9143, -56.5109, 0.12 ) }
    dend_50 { pt3dadd( -0.0756122, 48.0507, -57.5495, 1.32 ) }
    dend_50 { pt3dadd( -0.217678, 48.1009, -58.0463, 2.16 ) }
    dend_50 { pt3dadd( -0.453551, 48.1518, -58.8428, 2.4 ) }
    dend_50 { pt3dadd( -1.13173, 48.2199, -61.138, 0.72 ) }
    dend_50 { pt3dadd( -1.32133, 48.2159, -61.7735, 0.84 ) }
    dend_50 { pt3dadd( -1.4393, 48.196, -62.1753, 1.08 ) }
    dend_50 { pt3dadd( -1.82169, 48.084, -63.3528, 0.48 ) }
    dend_50 { pt3dadd( -1.92272, 48.0489, -63.6351, 0.12 ) }
    dend_50 { pt3dadd( -2.13918, 47.9623, -64.1541, 0.48 ) }
    dend_50 { pt3dadd( -2.23118, 47.9209, -64.3181, 0.48 ) }
    dend_50 { pt3dadd( -2.64031, 47.7081, -65.042, 0.12 ) }
    dend_50 { pt3dadd( -2.79298, 47.62, -65.3059, 0.12 ) }
    dend_50 { pt3dadd( -2.98534, 47.4946, -65.6643, 0.12 ) }
    dend_50 { pt3dadd( -3.07363, 47.4294, -65.9451, 0.12 ) }
    dend_50 { pt3dadd( -3.14956, 47.37, -66.2946, 0.12 ) }
    dend_50 { pt3dadd( -3.22716, 47.3176, -66.607, 0.48 ) }
    dend_50 { pt3dadd( -3.26306, 47.2896, -66.7417, 0.48 ) }
    dend_50 { pt3dadd( -3.53317, 47.0108, -67.7492, 0.48 ) }
    dend_50 { pt3dadd( -3.70414, 46.79, -68.3465, 0.12 ) }
    dend_50 { pt3dadd( -3.77429, 46.7137, -68.5453, 0.12 ) }
    dend_50 { pt3dadd( -3.96681, 46.5032, -69.0029, 0.12 ) }
    dend_50 { pt3dadd( -4.30071, 46.1166, -69.804, 1.8 ) }
    dend_50 { pt3dadd( -4.54923, 45.8711, -70.3033, 2.76 ) }
    dend_50 { pt3dadd( -4.71693, 45.7113, -70.5857, 2.76 ) }
    dend_50 { pt3dadd( -5.02931, 45.3986, -71.0897, 1.92 ) }
    dend_50 { pt3dadd( -5.34831, 45.0446, -71.628, 1.92 ) }
    dend_50 { pt3dadd( -6.02511, 44.1428, -72.9708, 0.12 ) }
    dend_50 { pt3dadd( -6.2837, 43.7498, -73.5208, 0.12 ) }
    dend_50 { pt3dadd( -6.39922, 43.5313, -73.8392, 0.12 ) }
    dend_50 { pt3dadd( -6.50934, 43.2984, -74.1593, 0.48 ) }
    dend_50 { pt3dadd( -6.60278, 43.069, -74.4606, 0.6 ) }
    dend_50 { pt3dadd( -6.80503, 42.6087, -75.0773, 0.12 ) }
    dend_50 { pt3dadd( -6.87857, 42.4089, -75.2977, 0.12 ) }
    dend_50 { pt3dadd( -7.16561, 41.4327, -76.3884, 2.4 ) }
    dend_50 { pt3dadd( -7.32999, 40.9635, -76.9862, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.27729, -159.225, -26.7685, 0.12 ) }
    dend_45 { pt3dadd( 1.11733, -160.174, -27.0038, 0.12 ) }
    dend_45 { pt3dadd( 1.01899, -160.482, -27.042, 0.12 ) }
    dend_45 { pt3dadd( 0.872429, -160.832, -27.0286, 0.36 ) }
    dend_45 { pt3dadd( 0.622953, -161.375, -26.9627, 0.48 ) }
    dend_45 { pt3dadd( 0.498497, -161.638, -26.922, 0.12 ) }
    dend_45 { pt3dadd( 0.325526, -162.039, -26.8593, 0.12 ) }
    dend_45 { pt3dadd( 0.0499712, -162.653, -26.6976, 0.36 ) }
    dend_45 { pt3dadd( -0.131936, -163.05, -26.4704, 0.12 ) }
    dend_45 { pt3dadd( -0.307438, -163.355, -26.219, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( -0.471742, -163.56, -26.0145, 0.12 ) }
    dend_45 { pt3dadd( -0.72687, -163.873, -25.6744, 0.12 ) }
    dend_45 { pt3dadd( -1.11842, -164.335, -25.1251, 0.36 ) }
    dend_45 { pt3dadd( -1.7456, -165.01, -24.2534, 0.12 ) }
    dend_45 { pt3dadd( -2.1921, -165.428, -23.662, 0.12 ) }
    dend_45 { pt3dadd( -2.90103, -165.952, -22.7387, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.27729, -159.225, -26.7685, 0.12 ) }
    dend_42 { pt3dadd( 1.77223, -159.456, -27.053, 0.12 ) }
    dend_42 { pt3dadd( 2.16592, -159.628, -27.3078, 0.12 ) }
    dend_42 { pt3dadd( 2.5962, -159.817, -27.5891, 0.48 ) }
    dend_42 { pt3dadd( 2.91987, -159.961, -27.8011, 0.12 ) }
    dend_42 { pt3dadd( 3.55663, -160.244, -28.2183, 0.12 ) }
    dend_42 { pt3dadd( 4.21954, -160.539, -28.6525, 0.12 ) }
    dend_42 { pt3dadd( 4.96149, -160.843, -29.197, 2.52 ) }
    dend_42 { pt3dadd( 5.12903, -160.909, -29.3277, 2.28 ) }
    dend_42 { pt3dadd( 5.14999, -160.918, -29.3438, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.1917, -21.9232, -25.0861, 0.48 ) }
    dend_34 { pt3dadd( 24.7633, -24.2911, -27.3881, 0.48 ) }
    dend_34 { pt3dadd( 24.7092, -24.6715, -27.6988, 0.36 ) }
    dend_34 { pt3dadd( 24.6618, -25.0825, -27.9982, 0.36 ) }
    dend_34 { pt3dadd( 24.6135, -25.5529, -28.3095, 0.84 ) }
    dend_34 { pt3dadd( 24.5479, -26.3018, -28.7707, 1.32 ) }
    dend_34 { pt3dadd( 24.5138, -27.3064, -29.3358, 0.48 ) }
    dend_34 { pt3dadd( 24.5722, -28.1232, -29.6142, 0.36 ) }
    dend_34 { pt3dadd( 24.6178, -28.495, -29.7318, 0.36 ) }
    dend_34 { pt3dadd( 24.7037, -28.9729, -29.8872, 0.48 ) }
    dend_34 { pt3dadd( 24.8153, -29.4727, -30.0472, 0.36 ) }
    dend_34 { pt3dadd( 25.0616, -30.4217, -30.3587, 0.36 ) }
    dend_34 { pt3dadd( 25.2039, -30.9528, -30.5396, 0.36 ) }
    dend_34 { pt3dadd( 25.2822, -31.425, -30.7151, 0.48 ) }
    dend_34 { pt3dadd( 25.3433, -32.0071, -30.9439, 0.36 ) }
    dend_34 { pt3dadd( 25.3687, -32.5969, -31.182, 0.36 ) }
    dend_34 { pt3dadd( 25.3665, -32.8328, -31.2775, 0.36 ) }
    dend_34 { pt3dadd( 25.2542, -34.9018, -32.1139, 3.49 ) }
    dend_34 { pt3dadd( 25.1038, -36.8728, -32.8721, 0.12 ) }
    dend_34 { pt3dadd( 25.0733, -37.2197, -32.9999, 0.12 ) }
    dend_34 { pt3dadd( 25.0202, -37.7558, -33.1816, 0.36 ) }
    dend_34 { pt3dadd( 24.9998, -37.9396, -33.2417, 0.12 ) }
    dend_34 { pt3dadd( 24.9085, -38.5841, -33.434, 0.12 ) }
    dend_34 { pt3dadd( 24.7654, -39.2038, -33.5784, 0.6 ) }
    dend_34 { pt3dadd( 24.6721, -39.5785, -33.6442, 0.6 ) }
    dend_34 { pt3dadd( 24.4873, -40.189, -33.759, 0.36 ) }
    dend_34 { pt3dadd( 24.4067, -40.4247, -33.8125, 0.24 ) }
    dend_34 { pt3dadd( 24.2615, -40.7949, -33.9083, 0.24 ) }
    dend_34 { pt3dadd( 24.0748, -41.1981, -34.0229, 1.08 ) }
    dend_34 { pt3dadd( 23.6454, -42.1052, -34.2936, 1.8 ) }
    dend_34 { pt3dadd( 23.3156, -42.8063, -34.4716, 1.56 ) }
    dend_34 { pt3dadd( 23.0306, -43.446, -34.58, 0.96 ) }
    dend_34 { pt3dadd( 22.8537, -43.9355, -34.6424, 0.24 ) }
    dend_34 { pt3dadd( 22.5578, -44.9015, -34.7471, 0.24 ) }
    dend_34 { pt3dadd( 22.4272, -45.3964, -34.7923, 0.24 ) }
    dend_34 { pt3dadd( 22.2079, -46.3411, -34.8658, 0.24 ) }
    dend_34 { pt3dadd( 21.8073, -48.2576, -34.9961, 3.25 ) }
    dend_34 { pt3dadd( 21.4863, -50.0377, -35.114, 0.24 ) }
    dend_34 { pt3dadd( 21.4284, -50.4207, -35.1425, 0.24 ) }
    dend_34 { pt3dadd( 21.2745, -51.6746, -35.2592, 0.24 ) }
    dend_34 { pt3dadd( 21.2115, -52.2917, -35.334, 0.48 ) }
    dend_34 { pt3dadd( 21.1961, -52.5417, -35.3773, 0.12 ) }
    dend_34 { pt3dadd( 21.1817, -54.2842, -35.7252, 0.12 ) }
    dend_34 { pt3dadd( 21.185, -54.4606, -35.7596, 0.84 ) }
    dend_34 { pt3dadd( 21.2093, -55.0909, -35.883, 1.08 ) }
    dend_34 { pt3dadd( 21.2433, -55.8173, -36.0285, 0.12 ) }
    dend_34 { pt3dadd( 21.2995, -57.0882, -36.2831, 0.12 ) }
    dend_34 { pt3dadd( 21.3521, -58.499, -36.5658, 2.4 ) }
    dend_34 { pt3dadd( 21.391, -60.0069, -36.8681, 0.24 ) }
    dend_34 { pt3dadd( 21.3954, -60.6176, -37.0018, 0.24 ) }
    dend_34 { pt3dadd( 21.3786, -61.36, -37.1762, 0.36 ) }
    dend_34 { pt3dadd( 21.3546, -61.7483, -37.2771, 0.24 ) }
    dend_34 { pt3dadd( 21.3315, -61.9918, -37.3463, 0.24 ) }
    dend_34 { pt3dadd( 21.2864, -62.3379, -37.4716, 0.24 ) }
    dend_34 { pt3dadd( 21.1871, -62.9945, -37.7653, 0.24 ) }
    dend_34 { pt3dadd( 21.1451, -63.4102, -37.955, 0.84 ) }
    dend_34 { pt3dadd( 21.1265, -63.8208, -38.1384, 0.84 ) }
    dend_34 { pt3dadd( 21.1202, -64.1961, -38.2835, 0.84 ) }
    dend_34 { pt3dadd( 21.1232, -64.7499, -38.4551, 0.12 ) }
    dend_34 { pt3dadd( 21.1207, -65.0342, -38.5294, 0.12 ) }
    dend_34 { pt3dadd( 21.1229, -65.8622, -38.7061, 0.12 ) }
    dend_34 { pt3dadd( 21.1266, -66.263, -38.787, 1.32 ) }
    dend_34 { pt3dadd( 21.1221, -67.1303, -38.9938, 1.68 ) }
    dend_34 { pt3dadd( 21.1041, -68.2347, -39.2791, 1.2 ) }
    dend_34 { pt3dadd( 21.0994, -68.8798, -39.5215, 0.12 ) }
    dend_34 { pt3dadd( 21.0941, -69.1207, -39.6328, 0.12 ) }
    dend_34 { pt3dadd( 21.0614, -69.7975, -39.9866, 0.12 ) }
    dend_34 { pt3dadd( 20.9902, -70.7675, -40.5274, 1.32 ) }
    dend_34 { pt3dadd( 20.9308, -71.4154, -40.9086, 2.04 ) }
    dend_34 { pt3dadd( 20.7854, -73.1636, -41.9288, 0.36 ) }
    dend_34 { pt3dadd( 20.7138, -74.1649, -42.4755, 0.36 ) }
    dend_34 { pt3dadd( 20.6414, -74.9584, -42.85, 0.36 ) }
    dend_34 { pt3dadd( 20.6034, -75.3838, -43.0171, 0.36 ) }
    dend_34 { pt3dadd( 20.5562, -75.8593, -43.1565, 0.36 ) }
    dend_34 { pt3dadd( 20.4478, -76.8587, -43.3717, 1.92 ) }
    dend_34 { pt3dadd( 20.3653, -77.6115, -43.4603, 2.52 ) }
    dend_34 { pt3dadd( 20.2404, -79.0138, -43.6144, 0.24 ) }
    dend_34 { pt3dadd( 20.1842, -79.6959, -43.6329, 0.24 ) }
    dend_34 { pt3dadd( 20.1299, -80.3728, -43.6199, 0.84 ) }
    dend_34 { pt3dadd( 20.0675, -81.1325, -43.5781, 1.08 ) }
    dend_34 { pt3dadd( 19.993, -81.9179, -43.4775, 0.36 ) }
    dend_34 { pt3dadd( 19.9244, -82.9163, -43.2963, 0.36 ) }
    dend_34 { pt3dadd( 19.8646, -84.6487, -42.9176, 1.44 ) }
    dend_34 { pt3dadd( 19.8532, -85.4134, -42.73, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 19.8616, -85.9674, -42.5925, 1.56 ) }
    dend_34 { pt3dadd( 19.89, -87.2386, -42.2183, 0.12 ) }
    dend_34 { pt3dadd( 19.9075, -87.8501, -42.0337, 0.12 ) }
    dend_34 { pt3dadd( 19.9311, -88.4663, -41.8589, 0.12 ) }
    dend_34 { pt3dadd( 19.9394, -88.6423, -41.8195, 0.48 ) }
    dend_34 { pt3dadd( 19.9874, -89.6336, -41.59, 0.84 ) }
    dend_34 { pt3dadd( 20.0589, -91.544, -41.1991, 0.12 ) }
    dend_34 { pt3dadd( 20.0889, -92.3297, -41.073, 0.12 ) }
    dend_34 { pt3dadd( 20.0972, -92.696, -41.0094, 0.24 ) }
    dend_34 { pt3dadd( 20.1102, -93.2137, -40.918, 0.24 ) }
    dend_34 { pt3dadd( 20.1197, -93.6118, -40.8554, 0.24 ) }
    dend_34 { pt3dadd( 20.1288, -94.1069, -40.793, 0.48 ) }
    dend_34 { pt3dadd( 20.1305, -94.3913, -40.7849, 0.6 ) }
    dend_34 { pt3dadd( 20.1248, -94.8671, -40.7665, 0.12 ) }
    dend_34 { pt3dadd( 20.119, -95.259, -40.7466, 0.12 ) }
    dend_34 { pt3dadd( 20.1096, -95.64, -40.723, 0.12 ) }
    dend_34 { pt3dadd( 20.0649, -96.9807, -40.6326, 2.4 ) }
    dend_34 { pt3dadd( 20.0367, -97.7423, -40.5819, 2.88 ) }
    dend_34 { pt3dadd( 19.9975, -98.5039, -40.5448, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 25.1917, -21.9232, -25.0861, 0.12 ) }
    dend_29 { pt3dadd( 25.7614, -22.7365, -23.6677, 0.12 ) }
    dend_29 { pt3dadd( 26.0159, -23.0124, -23.1053, 0.12 ) }
    dend_29 { pt3dadd( 26.4403, -23.3622, -22.3013, 0.72 ) }
    dend_29 { pt3dadd( 27.3979, -23.9636, -20.7203, 0.72 ) }
    dend_29 { pt3dadd( 27.8544, -24.1681, -20.1012, 0.12 ) }
    dend_29 { pt3dadd( 28.242, -24.3049, -19.6664, 0.12 ) }
    dend_29 { pt3dadd( 28.9118, -24.4442, -18.9622, 1.68 ) }
    dend_29 { pt3dadd( 29.3897, -24.5071, -18.5404, 2.28 ) }
    dend_29 { pt3dadd( 30.26, -24.5775, -17.941, 1.92 ) }
    dend_29 { pt3dadd( 31.2903, -24.7131, -17.2313, 0.36 ) }
    dend_29 { pt3dadd( 32.1301, -24.9133, -16.5766, 0.36 ) }
    dend_29 { pt3dadd( 32.7297, -25.1933, -15.9362, 0.6 ) }
    dend_29 { pt3dadd( 32.9516, -25.3828, -15.5389, 0.36 ) }
    dend_29 { pt3dadd( 33.1273, -25.5894, -15.1275, 0.36 ) }
    dend_29 { pt3dadd( 33.9552, -26.7686, -12.8557, 0.36 ) }
    dend_29 { pt3dadd( 34.093, -26.9921, -12.439, 1.2 ) }
    dend_29 { pt3dadd( 34.5116, -27.7622, -10.9964, 1.92 ) }
    dend_29 { pt3dadd( 35.1332, -28.9539, -8.80249, 0.24 ) }
    dend_29 { pt3dadd( 35.4487, -29.5552, -7.67555, 2.16 ) }
    dend_29 { pt3dadd( 35.5764, -29.7711, -7.26885, 3.0 ) }
    dend_29 { pt3dadd( 35.7945, -29.9976, -6.82556, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -16.3816, -303.958, -43.2186, 0.12 ) }
    dend_23 { pt3dadd( -15.4827, -303.845, -44.0039, 0.12 ) }
    dend_23 { pt3dadd( -15.0598, -303.826, -44.3276, 0.12 ) }
    dend_23 { pt3dadd( -14.824, -303.83, -44.4946, 0.12 ) }
    dend_23 { pt3dadd( -14.0701, -303.854, -44.9985, 0.6 ) }
    dend_23 { pt3dadd( -13.7435, -303.865, -45.2168, 0.6 ) }
    dend_23 { pt3dadd( -13.1475, -303.884, -45.6151, 0.12 ) }
    dend_23 { pt3dadd( -12.2146, -303.962, -46.1455, 0.12 ) }
    dend_23 { pt3dadd( -11.908, -304.001, -46.3258, 0.84 ) }
    dend_23 { pt3dadd( -11.6604, -304.042, -46.4687, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.3816, -303.958, -43.2186, 1.56 ) }
    dend_18 { pt3dadd( -16.238, -304.665, -43.2213, 1.56 ) }
    dend_18 { pt3dadd( -16.0389, -305.644, -43.225, 2.28 ) }
    dend_18 { pt3dadd( -15.9215, -306.222, -43.2272, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.523, 88.9007, 12.5573, 0.48 ) }
    dend_12 { pt3dadd( 14.1705, 90.8152, 13.0221, 0.48 ) }
    dend_12 { pt3dadd( 14.3477, 91.4932, 13.1587, 0.36 ) }
    dend_12 { pt3dadd( 14.4826, 92.1892, 13.2835, 0.36 ) }
    dend_12 { pt3dadd( 14.5727, 92.9082, 13.4072, 0.36 ) }
    dend_12 { pt3dadd( 14.6148, 93.5188, 13.5186, 0.36 ) }
    dend_12 { pt3dadd( 14.6196, 93.8677, 13.5853, 0.72 ) }
    dend_12 { pt3dadd( 14.554, 94.2314, 13.6186, 0.72 ) }
    dend_12 { pt3dadd( 14.4601, 94.67, 13.6705, 0.36 ) }
    dend_12 { pt3dadd( 14.3312, 95.2115, 13.7499, 0.36 ) }
    dend_12 { pt3dadd( 14.2299, 95.6929, 13.824, 1.2 ) }
    dend_12 { pt3dadd( 14.1368, 96.2429, 13.9103, 1.8 ) }
    dend_12 { pt3dadd( 14.0374, 97.0061, 14.0476, 1.8 ) }
    dend_12 { pt3dadd( 13.9386, 98.0617, 14.2582, 0.36 ) }
    dend_12 { pt3dadd( 13.9065, 98.4091, 14.3076, 0.36 ) }
    dend_12 { pt3dadd( 13.8573, 99.1368, 14.3938, 0.72 ) }
    dend_12 { pt3dadd( 13.8427, 99.4947, 14.4283, 0.84 ) }
    dend_12 { pt3dadd( 13.8249, 100.278, 14.5046, 0.36 ) }
    dend_12 { pt3dadd( 13.8154, 100.902, 14.5728, 1.08 ) }
    dend_12 { pt3dadd( 13.7678, 102.225, 14.683, 2.64 ) }
    dend_12 { pt3dadd( 13.7227, 103.086, 14.7343, 3.61 ) }
    dend_12 { pt3dadd( 13.6863, 103.486, 14.7393, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 13.523, 88.9007, 12.5573, 0.6 ) }
    dend_9 { pt3dadd( 13.207, 90.2301, 12.515, 0.6 ) }
    dend_9 { pt3dadd( 13.0866, 91.136, 12.4188, 0.6 ) }
    dend_9 { pt3dadd( 12.9927, 92.3953, 12.1612, 0.6 ) }
    dend_9 { pt3dadd( 12.9579, 92.9526, 11.9516, 0.6 ) }
    dend_9 { pt3dadd( 12.8881, 93.7621, 11.6103, 1.68 ) }
    dend_9 { pt3dadd( 12.7966, 94.56, 11.2596, 2.04 ) }
    dend_9 { pt3dadd( 12.761, 95.0733, 10.9688, 1.8 ) }
    dend_9 { pt3dadd( 12.6625, 95.6999, 10.5267, 2.04 ) }
    dend_9 { pt3dadd( 12.2472, 96.7333, 9.67716, 0.48 ) }
    dend_9 { pt3dadd( 11.921, 97.2078, 9.30871, 0.48 ) }
    dend_9 { pt3dadd( 11.7546, 97.376, 9.19968, 0.72 ) }
    dend_9 { pt3dadd( 11.3435, 97.7495, 9.00191, 0.96 ) }
    dend_9 { pt3dadd( 10.7893, 98.2492, 8.7607, 0.72 ) }
    dend_9 { pt3dadd( 10.3399, 98.6839, 8.58617, 1.32 ) }
    dend_9 { pt3dadd( 9.96207, 99.1166, 8.43698, 1.8 ) }
    dend_9 { pt3dadd( 9.45711, 99.8185, 8.1946, 1.8 ) }
    dend_9 { pt3dadd( 9.09584, 100.418, 8.01186, 0.96 ) }
    dend_9 { pt3dadd( 8.7441, 101.095, 7.79857, 0.72 ) }
    dend_9 { pt3dadd( 8.49704, 101.603, 7.62617, 0.84 ) }
    dend_9 { pt3dadd( 8.02992, 102.54, 7.24111, 1.56 ) }
    dend_9 { pt3dadd( 7.77944, 103.028, 7.00503, 2.52 ) }
    dend_9 { pt3dadd( 7.55557, 103.444, 6.7857, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 6.90127, 104.548, 6.18253, 2.4 ) }
    dend_9 { pt3dadd( 6.32009, 105.458, 5.65993, 1.56 ) }
    dend_9 { pt3dadd( 5.86659, 106.137, 5.23638, 0.84 ) }
    dend_9 { pt3dadd( 5.52832, 106.626, 4.91884, 0.48 ) }
    dend_9 { pt3dadd( 5.39619, 106.822, 4.78442, 0.24 ) }
    dend_9 { pt3dadd( 5.03466, 107.361, 4.42507, 0.24 ) }
    dend_9 { pt3dadd( 4.75583, 107.801, 4.02803, 0.48 ) }
    dend_9 { pt3dadd( 4.60098, 108.076, 3.71254, 0.12 ) }
    dend_9 { pt3dadd( 4.47876, 108.337, 3.39318, 0.12 ) }
    dend_9 { pt3dadd( 4.18178, 109.009, 2.54597, 1.2 ) }
    dend_9 { pt3dadd( 4.02409, 109.383, 2.07921, 1.56 ) }
    dend_9 { pt3dadd( 3.27378, 111.209, -0.159537, 0.36 ) }
    dend_9 { pt3dadd( 3.04126, 111.798, -0.813982, 0.12 ) }
    dend_9 { pt3dadd( 2.64096, 112.831, -1.79137, 2.64 ) }
    dend_9 { pt3dadd( 2.52182, 113.153, -2.03247, 3.0 ) }
    dend_9 { pt3dadd( 2.31931, 113.692, -2.2068, 2.76 ) }
    dend_9 { pt3dadd( 1.61118, 115.386, -2.11633, 0.48 ) }
    dend_9 { pt3dadd( 0.169616, 118.58, -1.19035, 0.48 ) }
    dend_9 { pt3dadd( -0.120953, 119.27, -1.09526, 0.48 ) }
    dend_9 { pt3dadd( -0.244538, 119.729, -1.26396, 0.48 ) }
    dend_9 { pt3dadd( -0.289427, 120.25, -1.67337, 0.36 ) }
    dend_9 { pt3dadd( -0.250413, 121.188, -2.65905, 0.36 ) }
    dend_9 { pt3dadd( -0.0933352, 122.116, -3.7835, 0.36 ) }
    dend_9 { pt3dadd( 0.212216, 123.394, -5.30923, 2.16 ) }
    dend_9 { pt3dadd( 0.375664, 123.868, -5.87383, 3.0 ) }
    dend_9 { pt3dadd( 0.464697, 124.08, -6.11151, 3.12 ) }
    dend_9 { pt3dadd( 0.930885, 125.005, -7.0825, 3.0 ) }
    dend_9 { pt3dadd( 1.68478, 126.382, -8.40815, 0.12 ) }
    dend_9 { pt3dadd( 2.03652, 127.033, -8.97137, 0.12 ) }
    dend_9 { pt3dadd( 2.13695, 127.229, -9.12091, 0.12 ) }
    dend_9 { pt3dadd( 2.59295, 128.083, -9.80329, 2.52 ) }
    dend_9 { pt3dadd( 2.78251, 128.431, -10.0664, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 18.3785, 63.1253, 7.65426, 0.6 ) }
    dend_7 { pt3dadd( 17.7821, 63.4846, 9.47685, 0.6 ) }
    dend_7 { pt3dadd( 17.5503, 63.6242, 10.1849, 0.6 ) }
    dend_7 { pt3dadd( 17.2227, 63.8216, 11.1862, 0.24 ) }
    dend_7 { pt3dadd( 16.999, 63.9563, 11.8697, 0.24 ) }
    dend_7 { pt3dadd( 16.7629, 64.0985, 12.5912, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 18.3785, 63.1253, 7.65426, 0.6 ) }
    dend_4 { pt3dadd( 19.0592, 64.1542, 7.99735, 0.6 ) }
    dend_4 { pt3dadd( 19.8431, 65.4254, 8.43392, 0.72 ) }
    dend_4 { pt3dadd( 20.3623, 66.345, 8.72691, 1.08 ) }
    dend_4 { pt3dadd( 20.6345, 66.878, 8.86371, 1.44 ) }
    dend_4 { pt3dadd( 20.958, 67.5283, 9.03781, 1.56 ) }
    dend_4 { pt3dadd( 21.4641, 68.5714, 9.30167, 1.44 ) }
    dend_4 { pt3dadd( 22.126, 70.04, 9.65772, 1.56 ) }
    dend_4 { pt3dadd( 22.5209, 71.0079, 9.88687, 1.68 ) }
    dend_4 { pt3dadd( 22.8568, 71.8414, 10.1454, 1.68 ) }
    dend_4 { pt3dadd( 23.2091, 72.7104, 10.4639, 1.68 ) }
    dend_4 { pt3dadd( 23.7352, 74.0321, 11.0011, 0.6 ) }
    dend_4 { pt3dadd( 24.1131, 75.0358, 11.4355, 0.36 ) }
    dend_4 { pt3dadd( 24.3955, 75.8224, 11.7085, 0.36 ) }
    dend_4 { pt3dadd( 24.7697, 76.8688, 12.0192, 1.44 ) }
    dend_4 { pt3dadd( 24.9727, 77.4189, 12.1488, 1.56 ) }
    dend_4 { pt3dadd( 25.2823, 78.3018, 12.257, 1.56 ) }
    dend_4 { pt3dadd( 25.4296, 78.7352, 12.2651, 1.44 ) }
    dend_4 { pt3dadd( 25.9702, 80.2542, 12.235, 0.72 ) }
    dend_4 { pt3dadd( 26.2015, 80.8216, 12.2175, 0.6 ) }
    dend_4 { pt3dadd( 26.6191, 81.7352, 12.1906, 1.2 ) }
    dend_4 { pt3dadd( 26.8354, 82.1536, 12.1953, 1.32 ) }
    dend_4 { pt3dadd( 27.3826, 83.0846, 12.2259, 0.84 ) }
    dend_4 { pt3dadd( 28.3719, 84.5143, 12.3666, 1.08 ) }
    dend_4 { pt3dadd( 29.0929, 85.4219, 12.5115, 0.96 ) }
    dend_4 { pt3dadd( 29.7117, 86.1316, 12.5942, 0.48 ) }
    dend_4 { pt3dadd( 30.2166, 86.6902, 12.6361, 0.48 ) }
    dend_4 { pt3dadd( 30.8033, 87.3132, 12.6517, 0.6 ) }
    dend_4 { pt3dadd( 31.6892, 88.2404, 12.6158, 0.96 ) }
    dend_4 { pt3dadd( 31.9778, 88.5523, 12.5912, 0.96 ) }
    dend_4 { pt3dadd( 33.0211, 89.769, 12.5207, 1.68 ) }
    dend_4 { pt3dadd( 33.9864, 91.0005, 12.4579, 2.28 ) }
    dend_4 { pt3dadd( 34.7743, 92.12, 12.4229, 2.16 ) }
    dend_4 { pt3dadd( 35.2608, 92.9487, 12.4195, 1.92 ) }
    dend_4 { pt3dadd( 35.7902, 94.1324, 12.4042, 0.6 ) }
    dend_4 { pt3dadd( 36.2086, 95.4578, 12.3938, 0.6 ) }
    dend_4 { pt3dadd( 36.4122, 96.2871, 12.402, 0.6 ) }
    dend_4 { pt3dadd( 36.551, 97.1651, 12.4052, 0.48 ) }
    dend_4 { pt3dadd( 36.6335, 98.66, 12.4168, 0.48 ) }
    dend_4 { pt3dadd( 36.5774, 100.08, 12.3995, 0.48 ) }
    dend_4 { pt3dadd( 36.3684, 101.342, 12.2908, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 43.646, 103.669, -12.8836, 0.48 ) }
    dend_60 { pt3dadd( 44.2536, 104.987, -12.4277, 0.48 ) }
    dend_60 { pt3dadd( 44.4764, 105.4, -12.2573, 0.12 ) }
    dend_60 { pt3dadd( 44.932, 106.219, -11.9035, 0.36 ) }
    dend_60 { pt3dadd( 45.281, 106.831, -11.6404, 0.48 ) }
    dend_60 { pt3dadd( 45.5463, 107.27, -11.4562, 0.48 ) }
    dend_60 { pt3dadd( 45.8877, 107.815, -11.2389, 0.48 ) }
    dend_60 { pt3dadd( 46.5246, 108.714, -10.9237, 1.68 ) }
    dend_60 { pt3dadd( 46.7249, 108.975, -10.8573, 2.16 ) }
    dend_60 { pt3dadd( 47.004, 109.322, -10.8115, 2.4 ) }
    dend_60 { pt3dadd( 47.3458, 109.734, -10.7823, 2.4 ) }
    dend_60 { pt3dadd( 47.7701, 110.228, -10.7406, 1.92 ) }
    dend_60 { pt3dadd( 48.4119, 110.967, -10.681, 0.12 ) }
    dend_60 { pt3dadd( 48.6726, 111.256, -10.6647, 0.24 ) }
    dend_60 { pt3dadd( 48.9105, 111.515, -10.637, 0.24 ) }
    dend_60 { pt3dadd( 49.4227, 112.073, -10.5481, 0.48 ) }
    dend_60 { pt3dadd( 50.0706, 112.773, -10.3976, 0.48 ) }
    dend_60 { pt3dadd( 50.2837, 113.0, -10.3365, 1.32 ) }
    dend_60 { pt3dadd( 50.6543, 113.382, -10.2214, 1.68 ) }
    dend_60 { pt3dadd( 51.022, 113.762, -10.1398, 1.8 ) }
    dend_60 { pt3dadd( 51.3571, 114.112, -10.0966, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( 51.5625, 114.332, -10.0952, 1.92 ) }
    dend_60 { pt3dadd( 52.0641, 114.902, -10.1432, 0.48 ) }
    dend_60 { pt3dadd( 52.6641, 115.612, -10.2534, 0.48 ) }
    dend_60 { pt3dadd( 53.173, 116.246, -10.3635, 0.72 ) }
    dend_60 { pt3dadd( 53.7164, 116.94, -10.4695, 0.72 ) }
    dend_60 { pt3dadd( 54.2198, 117.633, -10.6692, 0.36 ) }
    dend_60 { pt3dadd( 54.5673, 118.153, -10.8698, 0.36 ) }
    dend_60 { pt3dadd( 54.9745, 118.832, -11.169, 0.72 ) }
    dend_60 { pt3dadd( 55.3568, 119.519, -11.4315, 1.08 ) }
    dend_60 { pt3dadd( 55.722, 120.187, -11.6401, 1.32 ) }
    dend_60 { pt3dadd( 56.8479, 122.326, -12.1226, 0.48 ) }
    dend_60 { pt3dadd( 57.1442, 122.904, -12.1889, 0.36 ) }
    dend_60 { pt3dadd( 57.6778, 123.957, -12.203, 0.36 ) }
    dend_60 { pt3dadd( 58.3854, 125.392, -12.1523, 0.36 ) }
    dend_60 { pt3dadd( 58.6281, 125.878, -12.1319, 1.92 ) }
    dend_60 { pt3dadd( 59.0007, 126.547, -12.0826, 3.0 ) }
    dend_60 { pt3dadd( 59.2877, 126.993, -12.0203, 3.25 ) }
    dend_60 { pt3dadd( 59.7846, 127.702, -11.989, 3.25 ) }
    dend_60 { pt3dadd( 60.7863, 129.064, -12.06, 0.36 ) }
    dend_60 { pt3dadd( 61.1582, 129.572, -12.1274, 0.48 ) }
    dend_60 { pt3dadd( 61.9248, 130.628, -12.2672, 0.48 ) }
    dend_60 { pt3dadd( 62.5095, 131.455, -12.3685, 0.48 ) }
    dend_60 { pt3dadd( 63.0238, 132.25, -12.4466, 0.48 ) }
    dend_60 { pt3dadd( 63.2395, 132.626, -12.4688, 0.96 ) }
    dend_60 { pt3dadd( 63.4431, 133.014, -12.4705, 1.2 ) }
    dend_60 { pt3dadd( 63.7846, 133.726, -12.4595, 0.84 ) }
    dend_60 { pt3dadd( 64.1905, 134.612, -12.431, 0.48 ) }
    dend_60 { pt3dadd( 64.6242, 135.502, -12.3889, 0.36 ) }
    dend_60 { pt3dadd( 65.0007, 136.16, -12.3508, 0.36 ) }
    dend_60 { pt3dadd( 65.5763, 136.998, -12.3165, 0.36 ) }
    dend_60 { pt3dadd( 65.9739, 137.497, -12.3151, 1.32 ) }
    dend_60 { pt3dadd( 66.5833, 138.196, -12.332, 2.28 ) }
    dend_60 { pt3dadd( 66.9741, 138.62, -12.3505, 2.76 ) }
    dend_60 { pt3dadd( 67.5064, 139.199, -12.381, 2.4 ) }
    dend_60 { pt3dadd( 68.5083, 140.37, -12.4434, 1.08 ) }
    dend_60 { pt3dadd( 69.1738, 141.233, -12.4801, 0.36 ) }
    dend_60 { pt3dadd( 69.6607, 141.942, -12.4957, 0.36 ) }
    dend_60 { pt3dadd( 70.1285, 142.697, -12.5187, 1.68 ) }
    dend_60 { pt3dadd( 70.3969, 143.17, -12.5346, 2.28 ) }
    dend_60 { pt3dadd( 70.7994, 143.937, -12.5312, 2.4 ) }
    dend_60 { pt3dadd( 71.3871, 145.132, -12.4818, 1.68 ) }
    dend_60 { pt3dadd( 72.087, 146.576, -12.3705, 1.08 ) }
    dend_60 { pt3dadd( 72.4237, 147.28, -12.3105, 0.6 ) }
    dend_60 { pt3dadd( 72.6939, 147.869, -12.2573, 0.6 ) }
    dend_60 { pt3dadd( 73.1481, 148.851, -12.1685, 1.44 ) }
    dend_60 { pt3dadd( 73.373, 149.333, -12.1304, 1.8 ) }
    dend_60 { pt3dadd( 73.6479, 149.922, -12.0964, 1.8 ) }
    dend_60 { pt3dadd( 74.042, 150.715, -12.0635, 0.48 ) }
    dend_60 { pt3dadd( 74.6461, 151.86, -12.0198, 0.48 ) }
    dend_60 { pt3dadd( 75.1892, 152.883, -12.0486, 1.2 ) }
    dend_60 { pt3dadd( 75.8278, 154.05, -12.1451, 1.68 ) }
    dend_60 { pt3dadd( 76.2918, 154.846, -12.2257, 2.28 ) }
    dend_60 { pt3dadd( 76.9693, 155.98, -12.334, 2.52 ) }
    dend_60 { pt3dadd( 77.8687, 157.481, -12.4262, 1.2 ) }
    dend_60 { pt3dadd( 78.4556, 158.48, -12.4197, 0.6 ) }
    dend_60 { pt3dadd( 78.7982, 159.11, -12.3638, 0.48 ) }
    dend_60 { pt3dadd( 79.2568, 160.049, -12.1821, 0.48 ) }
    dend_60 { pt3dadd( 79.5967, 160.807, -11.9352, 0.48 ) }
    dend_60 { pt3dadd( 79.9185, 161.566, -11.5874, 0.48 ) }
    dend_60 { pt3dadd( 80.2962, 162.437, -11.0823, 0.48 ) }
    dend_60 { pt3dadd( 80.5384, 162.948, -10.756, 0.48 ) }
    dend_60 { pt3dadd( 80.8088, 163.484, -10.4999, 0.48 ) }
    dend_60 { pt3dadd( 81.2323, 164.239, -10.3063, 1.08 ) }
    dend_60 { pt3dadd( 81.6783, 164.932, -10.2915, 1.68 ) }
    dend_60 { pt3dadd( 82.0556, 165.49, -10.3753, 2.04 ) }
    dend_60 { pt3dadd( 82.4226, 166.013, -10.5075, 2.04 ) }
    dend_60 { pt3dadd( 83.4583, 167.466, -10.9255, 0.96 ) }
    dend_60 { pt3dadd( 83.838, 168.01, -11.0938, 0.48 ) }
    dend_60 { pt3dadd( 84.1933, 168.532, -11.2619, 0.48 ) }
    dend_60 { pt3dadd( 84.724, 169.324, -11.4838, 1.56 ) }
    dend_60 { pt3dadd( 84.9176, 169.629, -11.5452, 2.16 ) }
    dend_60 { pt3dadd( 85.3018, 170.264, -11.7066, 2.64 ) }
    dend_60 { pt3dadd( 85.5668, 170.715, -11.8185, 2.64 ) }
    dend_60 { pt3dadd( 85.908, 171.296, -11.9967, 3.12 ) }
    dend_60 { pt3dadd( 86.223, 171.822, -12.1932, 3.12 ) }
    dend_60 { pt3dadd( 86.8348, 172.81, -12.5935, 0.6 ) }
    dend_60 { pt3dadd( 87.93, 174.49, -13.2717, 0.48 ) }
    dend_60 { pt3dadd( 88.3621, 175.11, -13.512, 0.36 ) }
    dend_60 { pt3dadd( 88.6354, 175.483, -13.6383, 0.36 ) }
    dend_60 { pt3dadd( 89.1204, 176.13, -13.7731, 0.96 ) }
    dend_60 { pt3dadd( 89.7497, 176.934, -13.8351, 0.96 ) }
    dend_60 { pt3dadd( 90.3494, 177.692, -13.7821, 0.72 ) }
    dend_60 { pt3dadd( 90.8019, 178.319, -13.6681, 0.48 ) }
    dend_60 { pt3dadd( 91.3333, 179.148, -13.5506, 0.48 ) }
    dend_60 { pt3dadd( 92.0802, 180.446, -13.408, 1.2 ) }
    dend_60 { pt3dadd( 92.4314, 181.115, -13.355, 1.68 ) }
    dend_60 { pt3dadd( 92.8538, 181.984, -13.3098, 2.04 ) }
    dend_60 { pt3dadd( 93.3034, 182.937, -13.2852, 1.8 ) }
    dend_60 { pt3dadd( 93.8698, 184.128, -13.2879, 0.6 ) }
    dend_60 { pt3dadd( 94.2531, 184.914, -13.3149, 0.48 ) }
    dend_60 { pt3dadd( 94.7457, 185.885, -13.385, 0.48 ) }
    dend_60 { pt3dadd( 95.2618, 186.833, -13.4563, 0.48 ) }
    dend_60 { pt3dadd( 95.5851, 187.367, -13.4902, 0.48 ) }
    dend_60 { pt3dadd( 95.8981, 187.824, -13.5006, 1.08 ) }
    dend_60 { pt3dadd( 96.3464, 188.436, -13.4761, 1.32 ) }
    dend_60 { pt3dadd( 96.6111, 188.78, -13.4621, 1.32 ) }
    dend_60 { pt3dadd( 97.111, 189.387, -13.4231, 0.72 ) }
    dend_60 { pt3dadd( 97.4309, 189.761, -13.4048, 0.48 ) }
    dend_60 { pt3dadd( 97.8832, 190.296, -13.3823, 0.72 ) }
    dend_60 { pt3dadd( 98.3786, 190.886, -13.3769, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 98.9032, 191.528, -13.4007, 1.32 ) }
    dend_60 { pt3dadd( 99.5166, 192.311, -13.4634, 0.48 ) }
    dend_60 { pt3dadd( 100.026, 193.013, -13.5769, 0.48 ) }
    dend_60 { pt3dadd( 100.519, 193.71, -13.7365, 0.48 ) }
    dend_60 { pt3dadd( 101.061, 194.483, -13.942, 1.44 ) }
    dend_60 { pt3dadd( 101.535, 195.165, -14.1243, 2.28 ) }
    dend_60 { pt3dadd( 102.106, 195.994, -14.3344, 1.92 ) }
    dend_60 { pt3dadd( 102.921, 197.175, -14.6079, 0.48 ) }
    dend_60 { pt3dadd( 103.557, 198.074, -14.7649, 0.48 ) }
    dend_60 { pt3dadd( 104.017, 198.714, -14.8254, 0.72 ) }
    dend_60 { pt3dadd( 104.352, 199.191, -14.8177, 0.48 ) }
    dend_60 { pt3dadd( 104.67, 199.677, -14.7481, 0.36 ) }
    dend_60 { pt3dadd( 105.082, 200.455, -14.658, 0.36 ) }
    dend_60 { pt3dadd( 105.403, 201.258, -14.6214, 0.36 ) }
    dend_60 { pt3dadd( 105.674, 202.185, -14.6721, 1.8 ) }
    dend_60 { pt3dadd( 105.89, 203.13, -14.7944, 3.0 ) }
    dend_60 { pt3dadd( 106.059, 204.079, -14.967, 3.25 ) }
    dend_60 { pt3dadd( 106.347, 206.47, -15.5525, 1.8 ) }
    dend_60 { pt3dadd( 106.431, 207.487, -15.8527, 0.48 ) }
    dend_60 { pt3dadd( 106.475, 208.097, -16.058, 0.48 ) }
    dend_60 { pt3dadd( 106.517, 208.519, -16.2085, 0.72 ) }
    dend_60 { pt3dadd( 106.606, 209.064, -16.3802, 0.48 ) }
    dend_60 { pt3dadd( 106.905, 210.075, -16.5897, 0.36 ) }
    dend_60 { pt3dadd( 107.276, 210.85, -16.5928, 0.36 ) }
    dend_60 { pt3dadd( 107.559, 211.325, -16.5643, 0.72 ) }
    dend_60 { pt3dadd( 108.108, 212.148, -16.4696, 1.08 ) }
    dend_60 { pt3dadd( 108.573, 212.808, -16.3634, 1.2 ) }
    dend_60 { pt3dadd( 109.311, 213.809, -16.1331, 0.72 ) }
    dend_60 { pt3dadd( 110.016, 214.742, -15.8606, 0.36 ) }
    dend_60 { pt3dadd( 110.475, 215.358, -15.6715, 0.36 ) }
    dend_60 { pt3dadd( 111.069, 216.191, -15.3905, 0.36 ) }
    dend_60 { pt3dadd( 111.594, 216.965, -15.1147, 0.36 ) }
    dend_60 { pt3dadd( 112.156, 217.865, -14.8319, 1.92 ) }
    dend_60 { pt3dadd( 112.47, 218.423, -14.6718, 2.76 ) }
    dend_60 { pt3dadd( 112.563, 218.603, -14.6265, 3.12 ) }
    dend_60 { pt3dadd( 113.02, 219.511, -14.4268, 2.76 ) }
    dend_60 { pt3dadd( 113.171, 219.815, -14.3754, 2.76 ) }
    dend_60 { pt3dadd( 113.742, 220.956, -14.2126, 0.48 ) }
    dend_60 { pt3dadd( 114.165, 221.821, -14.12, 0.48 ) }
    dend_60 { pt3dadd( 114.395, 222.303, -14.0694, 0.96 ) }
    dend_60 { pt3dadd( 114.607, 222.756, -14.0243, 0.6 ) }
    dend_60 { pt3dadd( 114.873, 223.338, -13.9717, 0.48 ) }
    dend_60 { pt3dadd( 115.102, 223.832, -13.9123, 0.36 ) }
    dend_60 { pt3dadd( 115.67, 224.977, -13.6918, 0.36 ) }
    dend_60 { pt3dadd( 115.917, 225.452, -13.5943, 0.48 ) }
    dend_60 { pt3dadd( 116.174, 225.922, -13.5058, 0.36 ) }
    dend_60 { pt3dadd( 116.494, 226.468, -13.3995, 0.36 ) }
    dend_60 { pt3dadd( 116.738, 226.869, -13.314, 0.36 ) }
    dend_60 { pt3dadd( 117.18, 227.589, -13.1985, 1.2 ) }
    dend_60 { pt3dadd( 117.447, 228.049, -13.1521, 2.04 ) }
    dend_60 { pt3dadd( 117.748, 228.593, -13.0902, 2.16 ) }
    dend_60 { pt3dadd( 118.105, 229.286, -13.0071, 1.68 ) }
    dend_60 { pt3dadd( 118.475, 230.063, -12.9137, 0.48 ) }
    dend_60 { pt3dadd( 118.889, 230.961, -12.8114, 0.36 ) }
    dend_60 { pt3dadd( 119.682, 232.716, -12.6079, 0.36 ) }
    dend_60 { pt3dadd( 120.048, 233.514, -12.5046, 1.2 ) }
    dend_60 { pt3dadd( 120.237, 233.916, -12.4566, 0.84 ) }
    dend_60 { pt3dadd( 120.518, 234.49, -12.4018, 0.48 ) }
    dend_60 { pt3dadd( 121.058, 235.515, -12.3433, 0.36 ) }
    dend_60 { pt3dadd( 121.299, 235.952, -12.358, 0.36 ) }
    dend_60 { pt3dadd( 121.589, 236.452, -12.4551, 1.44 ) }
    dend_60 { pt3dadd( 121.999, 237.172, -12.6522, 1.92 ) }
    dend_60 { pt3dadd( 122.257, 237.623, -12.7827, 2.04 ) }
    dend_60 { pt3dadd( 122.691, 238.379, -13.0008, 2.04 ) }
    dend_60 { pt3dadd( 123.315, 239.474, -13.2402, 0.48 ) }
    dend_60 { pt3dadd( 124.0, 240.695, -13.4079, 0.48 ) }
    dend_60 { pt3dadd( 124.262, 241.16, -13.4308, 0.6 ) }
    dend_60 { pt3dadd( 124.432, 241.466, -13.419, 0.48 ) }
    dend_60 { pt3dadd( 124.924, 242.356, -13.3379, 0.48 ) }
    dend_60 { pt3dadd( 125.589, 243.594, -13.1293, 2.64 ) }
    dend_60 { pt3dadd( 125.992, 244.361, -12.9425, 3.49 ) }
    dend_60 { pt3dadd( 126.159, 244.695, -12.8549, 3.49 ) }
    dend_60 { pt3dadd( 126.397, 245.178, -12.729, 3.49 ) }
    dend_60 { pt3dadd( 127.05, 246.531, -12.392, 0.48 ) }
    dend_60 { pt3dadd( 127.476, 247.419, -12.1754, 0.72 ) }
    dend_60 { pt3dadd( 127.786, 248.051, -12.036, 0.48 ) }
    dend_60 { pt3dadd( 128.036, 248.525, -11.9303, 0.48 ) }
    dend_60 { pt3dadd( 128.374, 249.134, -11.7971, 1.32 ) }
    dend_60 { pt3dadd( 128.603, 249.501, -11.7219, 1.56 ) }
    dend_60 { pt3dadd( 128.984, 250.02, -11.6224, 1.56 ) }
    dend_60 { pt3dadd( 129.397, 250.521, -11.5579, 0.48 ) }
    dend_60 { pt3dadd( 129.907, 251.112, -11.5093, 0.48 ) }
    dend_60 { pt3dadd( 130.284, 251.548, -11.4693, 0.6 ) }
    dend_60 { pt3dadd( 130.838, 252.213, -11.3984, 0.6 ) }
    dend_60 { pt3dadd( 131.281, 252.767, -11.3328, 0.36 ) }
    dend_60 { pt3dadd( 131.627, 253.226, -11.2845, 0.36 ) }
    dend_60 { pt3dadd( 132.046, 253.855, -11.2245, 0.36 ) }
    dend_60 { pt3dadd( 132.335, 254.379, -11.1913, 1.32 ) }
    dend_60 { pt3dadd( 132.563, 254.873, -11.1598, 1.56 ) }
    dend_60 { pt3dadd( 132.713, 255.278, -11.1272, 1.32 ) }
    dend_60 { pt3dadd( 132.882, 255.784, -11.0818, 0.36 ) }
    dend_60 { pt3dadd( 133.151, 256.514, -11.0103, 0.36 ) }
    dend_60 { pt3dadd( 133.398, 257.088, -10.9573, 1.2 ) }
    dend_60 { pt3dadd( 133.698, 257.679, -10.9189, 1.2 ) }
    dend_60 { pt3dadd( 134.081, 258.359, -10.889, 0.36 ) }
    dend_60 { pt3dadd( 134.475, 259.007, -10.8688, 0.36 ) }
    dend_60 { pt3dadd( 134.904, 259.661, -10.8513, 0.48 ) }
    dend_60 { pt3dadd( 135.237, 260.146, -10.8625, 0.48 ) }
    dend_60 { pt3dadd( 135.702, 260.827, -10.9048, 0.48 ) }
    dend_60 { pt3dadd( 135.823, 261.008, -10.9273, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 136.125, 261.457, -10.9932, 0.72 ) }
    dend_60 { pt3dadd( 136.552, 262.09, -11.0786, 0.72 ) }
    dend_60 { pt3dadd( 136.778, 262.43, -11.1076, 0.48 ) }
    dend_60 { pt3dadd( 137.15, 262.975, -11.1258, 0.48 ) }
    dend_60 { pt3dadd( 137.6, 263.615, -11.1136, 1.08 ) }
    dend_60 { pt3dadd( 138.002, 264.159, -11.0746, 1.68 ) }
    dend_60 { pt3dadd( 138.38, 264.656, -11.0267, 1.68 ) }
    dend_60 { pt3dadd( 138.791, 265.204, -10.9736, 0.84 ) }
    dend_60 { pt3dadd( 139.054, 265.555, -10.9543, 0.72 ) }
    dend_60 { pt3dadd( 139.558, 266.259, -11.0051, 0.72 ) }
    dend_60 { pt3dadd( 140.097, 267.039, -11.1361, 1.32 ) }
    dend_60 { pt3dadd( 140.406, 267.501, -11.2445, 2.4 ) }
    dend_60 { pt3dadd( 140.845, 268.18, -11.4373, 2.76 ) }
    dend_60 { pt3dadd( 141.271, 268.864, -11.6441, 2.04 ) }
    dend_60 { pt3dadd( 141.999, 270.062, -12.0011, 0.48 ) }
    dend_60 { pt3dadd( 142.336, 270.629, -12.1639, 0.48 ) }
    dend_60 { pt3dadd( 142.608, 271.097, -12.2848, 0.6 ) }
    dend_60 { pt3dadd( 142.769, 271.365, -12.3354, 0.48 ) }
    dend_60 { pt3dadd( 143.449, 272.461, -12.4413, 0.48 ) }
    dend_60 { pt3dadd( 143.738, 272.923, -12.4393, 0.72 ) }
    dend_60 { pt3dadd( 144.048, 273.379, -12.3936, 1.08 ) }
    dend_60 { pt3dadd( 144.302, 273.735, -12.3521, 0.72 ) }
    dend_60 { pt3dadd( 144.652, 274.198, -12.2784, 0.48 ) }
    dend_60 { pt3dadd( 144.977, 274.631, -12.2185, 0.24 ) }
    dend_60 { pt3dadd( 145.323, 275.088, -12.1641, 0.24 ) }
    dend_60 { pt3dadd( 146.167, 276.25, -12.0722, 3.12 ) }
    dend_60 { pt3dadd( 146.414, 276.596, -12.0551, 3.37 ) }
    dend_60 { pt3dadd( 146.859, 277.226, -12.0381, 3.0 ) }
    dend_60 { pt3dadd( 147.64, 278.431, -12.0192, 0.48 ) }
    dend_60 { pt3dadd( 148.157, 279.311, -12.013, 0.48 ) }
    dend_60 { pt3dadd( 148.603, 280.126, -11.9981, 0.84 ) }
    dend_60 { pt3dadd( 148.899, 280.685, -11.9805, 0.48 ) }
    dend_60 { pt3dadd( 149.381, 281.537, -11.9002, 0.48 ) }
    dend_60 { pt3dadd( 149.981, 282.518, -11.7415, 0.48 ) }
    dend_60 { pt3dadd( 150.236, 282.896, -11.6401, 0.48 ) }
    dend_60 { pt3dadd( 150.713, 283.575, -11.4176, 0.48 ) }
    dend_60 { pt3dadd( 151.018, 283.976, -11.2655, 0.96 ) }
    dend_60 { pt3dadd( 151.627, 284.738, -11.0069, 1.56 ) }
    dend_60 { pt3dadd( 151.882, 285.02, -10.9115, 1.56 ) }
    dend_60 { pt3dadd( 152.387, 285.537, -10.8098, 0.48 ) }
    dend_60 { pt3dadd( 152.533, 285.699, -10.8072, 0.36 ) }
    dend_60 { pt3dadd( 152.927, 286.248, -10.8618, 0.36 ) }
    dend_60 { pt3dadd( 153.474, 287.106, -10.9851, 1.8 ) }
    dend_60 { pt3dadd( 153.829, 287.705, -11.0852, 2.64 ) }
    dend_60 { pt3dadd( 154.486, 288.835, -11.2527, 1.56 ) }
    dend_60 { pt3dadd( 154.963, 289.65, -11.3473, 0.36 ) }
    dend_60 { pt3dadd( 155.504, 290.56, -11.4358, 0.48 ) }
    dend_60 { pt3dadd( 156.176, 291.677, -11.4717, 0.48 ) }
    dend_60 { pt3dadd( 156.399, 292.054, -11.4806, 0.48 ) }
    dend_60 { pt3dadd( 156.75, 292.613, -11.4927, 1.32 ) }
    dend_60 { pt3dadd( 156.956, 292.899, -11.4815, 1.68 ) }
    dend_60 { pt3dadd( 157.264, 293.262, -11.4359, 1.92 ) }
    dend_60 { pt3dadd( 158.073, 294.177, -11.2982, 0.84 ) }
    dend_60 { pt3dadd( 158.823, 295.114, -11.1322, 0.48 ) }
    dend_60 { pt3dadd( 159.404, 295.905, -10.9607, 0.48 ) }
    dend_60 { pt3dadd( 159.695, 296.344, -10.8557, 0.48 ) }
    dend_60 { pt3dadd( 160.277, 297.33, -10.6142, 0.48 ) }
    dend_60 { pt3dadd( 160.794, 298.306, -10.3274, 0.72 ) }
    dend_60 { pt3dadd( 161.111, 298.961, -10.1141, 1.32 ) }
    dend_60 { pt3dadd( 161.407, 299.612, -9.87563, 0.84 ) }
    dend_60 { pt3dadd( 161.607, 300.085, -9.69355, 0.36 ) }
    dend_60 { pt3dadd( 161.855, 300.649, -9.48006, 0.36 ) }
    dend_60 { pt3dadd( 162.218, 301.366, -9.21768, 0.84 ) }
    dend_60 { pt3dadd( 162.451, 301.731, -9.06869, 0.36 ) }
    dend_60 { pt3dadd( 162.999, 302.469, -8.73478, 0.36 ) }
    dend_60 { pt3dadd( 163.683, 303.299, -8.35526, 0.84 ) }
    dend_60 { pt3dadd( 163.989, 303.641, -8.19232, 0.84 ) }
    dend_60 { pt3dadd( 164.349, 304.027, -8.0276, 0.36 ) }
    dend_60 { pt3dadd( 165.116, 304.843, -7.74383, 0.36 ) }
    dend_60 { pt3dadd( 165.56, 305.343, -7.59958, 1.2 ) }
    dend_60 { pt3dadd( 166.047, 305.942, -7.47258, 2.16 ) }
    dend_60 { pt3dadd( 166.188, 306.139, -7.45006, 2.28 ) }
    dend_60 { pt3dadd( 166.889, 307.183, -7.3673, 0.6 ) }
    dend_60 { pt3dadd( 167.199, 307.66, -7.33277, 0.36 ) }
    dend_60 { pt3dadd( 167.574, 308.223, -7.29113, 0.36 ) }
    dend_60 { pt3dadd( 167.805, 308.538, -7.27021, 0.36 ) }
    dend_60 { pt3dadd( 168.07, 308.87, -7.23579, 0.36 ) }
    dend_60 { pt3dadd( 168.831, 309.748, -7.11377, 0.36 ) }
    dend_60 { pt3dadd( 169.379, 310.346, -7.01598, 1.08 ) }
    dend_60 { pt3dadd( 169.974, 310.982, -6.91714, 1.56 ) }
    dend_60 { pt3dadd( 170.674, 311.715, -6.81846, 0.72 ) }
    dend_60 { pt3dadd( 170.911, 311.979, -6.79065, 0.48 ) }
    dend_60 { pt3dadd( 171.404, 312.584, -6.7408, 0.48 ) }
    dend_60 { pt3dadd( 171.91, 313.303, -6.6979, 1.68 ) }
    dend_60 { pt3dadd( 172.273, 313.855, -6.69592, 2.52 ) }
    dend_60 { pt3dadd( 172.689, 314.516, -6.74084, 1.92 ) }
    dend_60 { pt3dadd( 173.267, 315.427, -6.85242, 0.72 ) }
    dend_60 { pt3dadd( 173.622, 315.954, -6.95035, 0.6 ) }
    dend_60 { pt3dadd( 174.176, 316.733, -7.15105, 0.6 ) }
    dend_60 { pt3dadd( 174.937, 317.722, -7.45299, 0.6 ) }
    dend_60 { pt3dadd( 175.668, 318.641, -7.75294, 1.44 ) }
    dend_60 { pt3dadd( 175.997, 319.044, -7.88752, 1.92 ) }
    dend_60 { pt3dadd( 176.644, 319.826, -8.12484, 0.96 ) }
    dend_60 { pt3dadd( 177.105, 320.39, -8.26434, 0.36 ) }
    dend_60 { pt3dadd( 177.613, 321.046, -8.34775, 0.36 ) }
    dend_60 { pt3dadd( 178.015, 321.594, -8.34144, 0.36 ) }
    dend_60 { pt3dadd( 178.398, 322.117, -8.27649, 0.72 ) }
    dend_60 { pt3dadd( 178.865, 322.769, -8.24983, 0.36 ) }
    dend_60 { pt3dadd( 179.27, 323.324, -8.2624, 0.24 ) }
    dend_60 { pt3dadd( 179.947, 324.212, -8.3494, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 180.081, 324.381, -8.3837, 2.04 ) }
    dend_60 { pt3dadd( 180.668, 325.085, -8.57526, 1.92 ) }
    dend_60 { pt3dadd( 181.955, 326.567, -9.06468, 0.48 ) }
    dend_60 { pt3dadd( 182.483, 327.159, -9.28139, 0.48 ) }
    dend_60 { pt3dadd( 183.012, 327.748, -9.50299, 0.72 ) }
    dend_60 { pt3dadd( 183.75, 328.588, -9.80453, 0.84 ) }
    dend_60 { pt3dadd( 184.6, 329.61, -10.1302, 0.36 ) }
    dend_60 { pt3dadd( 184.916, 330.013, -10.2333, 0.24 ) }
    dend_60 { pt3dadd( 185.373, 330.642, -10.321, 1.2 ) }
    dend_60 { pt3dadd( 185.504, 330.845, -10.3461, 1.68 ) }
    dend_60 { pt3dadd( 185.923, 331.592, -10.4215, 1.56 ) }
    dend_60 { pt3dadd( 186.313, 332.376, -10.4749, 0.36 ) }
    dend_60 { pt3dadd( 186.571, 332.963, -10.4946, 0.36 ) }
    dend_60 { pt3dadd( 187.032, 334.075, -10.4913, 0.36 ) }
    dend_60 { pt3dadd( 187.235, 334.572, -10.4795, 1.32 ) }
    dend_60 { pt3dadd( 187.442, 335.077, -10.4564, 1.8 ) }
    dend_60 { pt3dadd( 187.613, 335.48, -10.4284, 1.68 ) }
    dend_60 { pt3dadd( 188.0, 336.361, -10.34, 0.48 ) }
    dend_60 { pt3dadd( 188.538, 337.536, -10.2255, 0.48 ) }
    dend_60 { pt3dadd( 188.859, 338.211, -10.1617, 1.8 ) }
    dend_60 { pt3dadd( 189.122, 338.793, -10.1053, 2.4 ) }
    dend_60 { pt3dadd( 189.295, 339.201, -10.0446, 1.92 ) }
    dend_60 { pt3dadd( 189.686, 340.17, -9.82815, 0.6 ) }
    dend_60 { pt3dadd( 189.791, 340.435, -9.74243, 0.6 ) }
    dend_60 { pt3dadd( 190.114, 341.284, -9.40633, 0.6 ) }
    dend_60 { pt3dadd( 190.422, 342.077, -9.05503, 0.6 ) }
    dend_60 { pt3dadd( 190.841, 343.167, -8.57689, 0.6 ) }
    dend_60 { pt3dadd( 191.273, 344.314, -8.1089, 0.6 ) }
    dend_60 { pt3dadd( 191.635, 345.271, -7.76264, 1.56 ) }
    dend_60 { pt3dadd( 191.858, 345.861, -7.60112, 2.04 ) }
    dend_60 { pt3dadd( 192.099, 346.498, -7.49473, 1.68 ) }
    dend_60 { pt3dadd( 192.438, 347.387, -7.43846, 0.84 ) }
    dend_60 { pt3dadd( 192.713, 348.157, -7.4748, 0.48 ) }
    dend_60 { pt3dadd( 193.095, 349.387, -7.59209, 0.48 ) }
    dend_60 { pt3dadd( 193.443, 350.597, -7.72441, 0.6 ) }
    dend_60 { pt3dadd( 193.691, 351.506, -7.805, 1.32 ) }
    dend_60 { pt3dadd( 193.879, 352.234, -7.84928, 1.44 ) }
    dend_60 { pt3dadd( 194.105, 353.127, -7.87023, 0.48 ) }
    dend_60 { pt3dadd( 194.529, 354.772, -7.87133, 0.48 ) }
    dend_60 { pt3dadd( 194.675, 355.296, -7.86267, 1.32 ) }
    dend_60 { pt3dadd( 194.93, 356.123, -7.82493, 2.04 ) }
    dend_60 { pt3dadd( 195.141, 356.738, -7.79628, 1.68 ) }
    dend_60 { pt3dadd( 195.46, 357.587, -7.76711, 0.6 ) }
    dend_60 { pt3dadd( 195.809, 358.436, -7.75271, 0.48 ) }
    dend_60 { pt3dadd( 196.215, 359.34, -7.76323, 0.48 ) }
    dend_60 { pt3dadd( 196.476, 359.926, -7.77604, 0.48 ) }
    dend_60 { pt3dadd( 196.853, 360.76, -7.79953, 0.72 ) }
    dend_60 { pt3dadd( 197.118, 361.344, -7.81329, 0.72 ) }
    dend_60 { pt3dadd( 197.341, 361.813, -7.81635, 0.36 ) }
    dend_60 { pt3dadd( 197.658, 362.501, -7.81234, 0.36 ) }
    dend_60 { pt3dadd( 197.949, 363.073, -7.80248, 1.8 ) }
    dend_60 { pt3dadd( 198.285, 363.62, -7.78632, 2.4 ) }
    dend_60 { pt3dadd( 198.777, 364.332, -7.7465, 2.4 ) }
    dend_60 { pt3dadd( 199.379, 365.16, -7.71346, 0.48 ) }
    dend_60 { pt3dadd( 199.523, 365.356, -7.70655, 0.48 ) }
    dend_60 { pt3dadd( 200.053, 366.101, -7.73057, 0.48 ) }
    dend_60 { pt3dadd( 200.533, 366.798, -7.79926, 0.48 ) }
    dend_60 { pt3dadd( 200.991, 367.546, -7.93236, 0.48 ) }
    dend_60 { pt3dadd( 201.216, 367.996, -8.03657, 1.08 ) }
    dend_60 { pt3dadd( 201.372, 368.444, -8.14295, 1.92 ) }
    dend_60 { pt3dadd( 201.57, 369.237, -8.3036, 2.16 ) }
    dend_60 { pt3dadd( 201.651, 369.676, -8.36945, 2.16 ) }
    dend_60 { pt3dadd( 201.837, 370.7, -8.47932, 0.72 ) }
    dend_60 { pt3dadd( 201.947, 371.164, -8.50044, 0.48 ) }
    dend_60 { pt3dadd( 202.208, 372.052, -8.48091, 0.48 ) }
    dend_60 { pt3dadd( 202.497, 372.867, -8.43123, 0.48 ) }
    dend_60 { pt3dadd( 202.998, 374.068, -8.27808, 0.48 ) }
    dend_60 { pt3dadd( 203.235, 374.552, -8.20284, 0.48 ) }
    dend_60 { pt3dadd( 203.617, 375.224, -8.07315, 1.32 ) }
    dend_60 { pt3dadd( 204.012, 375.859, -7.94555, 1.92 ) }
    dend_60 { pt3dadd( 204.505, 376.596, -7.75384, 1.56 ) }
    dend_60 { pt3dadd( 204.926, 377.22, -7.55947, 0.36 ) }
    dend_60 { pt3dadd( 205.474, 378.028, -7.25457, 0.36 ) }
    dend_60 { pt3dadd( 205.892, 378.64, -7.00258, 0.6 ) }
    dend_60 { pt3dadd( 206.297, 379.215, -6.7381, 0.6 ) }
    dend_60 { pt3dadd( 206.877, 380.004, -6.34522, 0.24 ) }
    dend_60 { pt3dadd( 207.253, 380.481, -6.10356, 0.24 ) }
    dend_60 { pt3dadd( 207.821, 381.16, -5.79403, 1.92 ) }
    dend_60 { pt3dadd( 208.127, 381.503, -5.6358, 2.4 ) }
    dend_60 { pt3dadd( 208.818, 382.246, -5.32481, 1.92 ) }
    dend_60 { pt3dadd( 209.468, 382.961, -5.07009, 0.48 ) }
    dend_60 { pt3dadd( 210.059, 383.649, -4.87308, 0.48 ) }
    dend_60 { pt3dadd( 210.74, 384.505, -4.64728, 0.48 ) }
    dend_60 { pt3dadd( 211.314, 385.305, -4.46372, 1.44 ) }
    dend_60 { pt3dadd( 211.91, 386.197, -4.27425, 2.04 ) }
    dend_60 { pt3dadd( 212.475, 387.1, -4.10536, 1.08 ) }
    dend_60 { pt3dadd( 212.873, 387.741, -3.98856, 0.6 ) }
    dend_60 { pt3dadd( 213.327, 388.464, -3.8713, 0.48 ) }
    dend_60 { pt3dadd( 213.869, 389.259, -3.76934, 0.48 ) }
    dend_60 { pt3dadd( 214.211, 389.721, -3.73229, 0.48 ) }
    dend_60 { pt3dadd( 214.565, 390.175, -3.69855, 0.96 ) }
    dend_60 { pt3dadd( 215.092, 390.839, -3.6515, 1.44 ) }
    dend_60 { pt3dadd( 215.68, 391.6, -3.60118, 0.84 ) }
    dend_60 { pt3dadd( 216.094, 392.156, -3.56469, 0.48 ) }
    dend_60 { pt3dadd( 216.772, 393.132, -3.495, 0.48 ) }
    dend_60 { pt3dadd( 217.228, 393.865, -3.42244, 0.6 ) }
    dend_60 { pt3dadd( 217.695, 394.712, -3.31796, 0.72 ) }
    dend_60 { pt3dadd( 217.927, 395.199, -3.24726, 0.12 ) }
    dend_60 { pt3dadd( 218.011, 395.393, -3.19677, 0.12 ) }
    dend_60 { pt3dadd( 218.286, 396.061, -2.96541, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 218.576, 396.772, -2.68046, 2.28 ) }
    dend_60 { pt3dadd( 218.802, 397.326, -2.44477, 2.52 ) }
    dend_60 { pt3dadd( 218.99, 397.793, -2.24075, 2.52 ) }
    dend_60 { pt3dadd( 219.623, 399.444, -1.55123, 0.72 ) }
    dend_60 { pt3dadd( 220.162, 400.896, -1.06566, 0.72 ) }
    dend_60 { pt3dadd( 220.456, 401.673, -0.820009, 0.96 ) }
    dend_60 { pt3dadd( 220.647, 402.159, -0.66597, 0.6 ) }
    dend_60 { pt3dadd( 220.846, 402.642, -0.501746, 0.48 ) }
    dend_60 { pt3dadd( 221.282, 403.695, -0.157472, 0.48 ) }
    dend_60 { pt3dadd( 221.922, 405.187, 0.260744, 0.48 ) }
    dend_60 { pt3dadd( 222.43, 406.261, 0.573128, 0.48 ) }
    dend_60 { pt3dadd( 222.896, 407.152, 0.824018, 1.92 ) }
    dend_60 { pt3dadd( 223.534, 408.281, 1.08712, 0.96 ) }
    dend_60 { pt3dadd( 224.113, 409.216, 1.26339, 0.48 ) }
    dend_60 { pt3dadd( 225.238, 410.912, 1.48037, 0.48 ) }
    dend_60 { pt3dadd( 226.019, 412.032, 1.56994, 0.48 ) }
    dend_60 { pt3dadd( 226.768, 413.089, 1.55787, 0.48 ) }
    dend_60 { pt3dadd( 227.489, 414.065, 1.48582, 1.2 ) }
    dend_60 { pt3dadd( 227.958, 414.666, 1.41732, 1.92 ) }
    dend_60 { pt3dadd( 228.696, 415.559, 1.2992, 1.44 ) }
    dend_60 { pt3dadd( 229.167, 416.142, 1.22175, 1.08 ) }
    dend_60 { pt3dadd( 229.493, 416.577, 1.17911, 0.48 ) }
    dend_60 { pt3dadd( 229.929, 417.209, 1.14922, 0.96 ) }
    dend_60 { pt3dadd( 230.356, 417.864, 1.15885, 0.96 ) }
    dend_60 { pt3dadd( 230.661, 418.354, 1.17371, 0.48 ) }
    dend_60 { pt3dadd( 231.587, 419.815, 1.26777, 0.48 ) }
    dend_60 { pt3dadd( 231.942, 420.37, 1.30798, 0.6 ) }
    dend_60 { pt3dadd( 232.173, 420.725, 1.34119, 0.48 ) }
    dend_60 { pt3dadd( 232.717, 421.547, 1.45238, 0.48 ) }
    dend_60 { pt3dadd( 233.474, 422.718, 1.65862, 0.48 ) }
    dend_60 { pt3dadd( 233.898, 423.408, 1.79823, 0.96 ) }
    dend_60 { pt3dadd( 234.221, 423.959, 1.92786, 1.2 ) }
    dend_60 { pt3dadd( 234.575, 424.609, 2.09055, 0.6 ) }
    dend_60 { pt3dadd( 234.825, 425.133, 2.21072, 0.36 ) }
    dend_60 { pt3dadd( 235.329, 426.403, 2.47567, 0.36 ) }
    dend_60 { pt3dadd( 235.595, 427.258, 2.62503, 0.72 ) }
    dend_60 { pt3dadd( 235.761, 427.941, 2.70741, 1.44 ) }
    dend_60 { pt3dadd( 235.921, 428.688, 2.7851, 2.4 ) }
    dend_60 { pt3dadd( 236.164, 429.862, 2.88836, 1.56 ) }
    dend_60 { pt3dadd( 236.306, 430.531, 2.94647, 0.48 ) }
    dend_60 { pt3dadd( 236.689, 432.23, 3.11207, 0.48 ) }
    dend_60 { pt3dadd( 236.917, 433.039, 3.23555, 0.6 ) }
    dend_60 { pt3dadd( 237.069, 433.474, 3.33252, 0.48 ) }
    dend_60 { pt3dadd( 237.456, 434.333, 3.62141, 0.48 ) }
    dend_60 { pt3dadd( 237.763, 434.834, 3.84483, 0.48 ) }
    dend_60 { pt3dadd( 238.179, 435.357, 4.14008, 0.84 ) }
    dend_60 { pt3dadd( 239.132, 436.328, 4.80366, 0.96 ) }
    dend_60 { pt3dadd( 239.806, 436.939, 5.24804, 0.48 ) }
    dend_60 { pt3dadd( 240.354, 437.399, 5.5961, 0.36 ) }
    dend_60 { pt3dadd( 241.293, 438.152, 6.16541, 0.36 ) }
    dend_60 { pt3dadd( 242.117, 438.816, 6.62127, 0.96 ) }
    dend_60 { pt3dadd( 242.284, 438.952, 6.71712, 1.08 ) }
    dend_60 { pt3dadd( 242.836, 439.413, 7.03779, 0.48 ) }
    dend_60 { pt3dadd( 243.524, 439.998, 7.51665, 0.48 ) }
    dend_60 { pt3dadd( 244.153, 440.549, 8.01822, 0.48 ) }
    dend_60 { pt3dadd( 244.69, 441.036, 8.49129, 0.48 ) }
    dend_60 { pt3dadd( 245.451, 441.76, 9.12771, 0.48 ) }
    dend_60 { pt3dadd( 246.313, 442.625, 9.81348, 0.48 ) }
    dend_60 { pt3dadd( 247.312, 443.72, 10.5717, 1.68 ) }
    dend_60 { pt3dadd( 247.655, 444.12, 10.8089, 2.4 ) }
    dend_60 { pt3dadd( 247.943, 444.47, 10.9877, 2.64 ) }
    dend_60 { pt3dadd( 248.792, 445.602, 11.3753, 0.24 ) }
    dend_60 { pt3dadd( 249.334, 446.523, 11.4983, 0.24 ) }
    dend_60 { pt3dadd( 249.728, 447.432, 11.5114, 0.24 ) }
    dend_60 { pt3dadd( 249.765, 447.534, 11.506, 0.72 ) }
    dend_60 { pt3dadd( 250.003, 448.253, 11.4659, 0.84 ) }
    dend_60 { pt3dadd( 250.281, 449.206, 11.4117, 0.24 ) }
    dend_60 { pt3dadd( 250.664, 450.763, 11.324, 0.24 ) }
    dend_60 { pt3dadd( 250.956, 452.052, 11.2233, 0.24 ) }
    dend_60 { pt3dadd( 251.026, 452.369, 11.1948, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 43.646, 103.669, -12.8836, 0.12 ) }
    dend_59 { pt3dadd( 43.2945, 104.186, -13.7904, 0.12 ) }
    dend_59 { pt3dadd( 43.2286, 104.282, -13.9546, 0.12 ) }
    dend_59 { pt3dadd( 43.0126, 104.592, -14.4477, 1.2 ) }
    dend_59 { pt3dadd( 42.8036, 104.871, -14.8923, 1.44 ) }
    dend_59 { pt3dadd( 41.6025, 106.412, -17.26, 0.36 ) }
    dend_59 { pt3dadd( 41.3444, 106.758, -17.7511, 0.36 ) }
    dend_59 { pt3dadd( 41.2075, 106.96, -18.0301, 1.8 ) }
    dend_59 { pt3dadd( 41.0174, 107.265, -18.4114, 2.16 ) }
    dend_59 { pt3dadd( 40.2947, 108.562, -19.8327, 0.36 ) }
    dend_59 { pt3dadd( 40.0625, 109.029, -20.3058, 0.36 ) }
    dend_59 { pt3dadd( 39.8281, 109.565, -20.7442, 1.32 ) }
    dend_59 { pt3dadd( 39.6266, 110.096, -21.226, 0.24 ) }
    dend_59 { pt3dadd( 39.526, 110.421, -21.5303, 0.24 ) }
    dend_59 { pt3dadd( 39.2953, 111.283, -22.312, 0.6 ) }
    dend_59 { pt3dadd( 39.0302, 112.426, -23.2386, 1.68 ) }
    dend_59 { pt3dadd( 38.945, 112.77, -23.5015, 2.04 ) }
    dend_59 { pt3dadd( 38.5148, 114.26, -24.6221, 0.36 ) }
    dend_59 { pt3dadd( 38.3478, 114.808, -24.9884, 0.36 ) }
    dend_59 { pt3dadd( 38.1542, 115.453, -25.3467, 1.56 ) }
    dend_59 { pt3dadd( 37.9853, 116.068, -25.6139, 0.36 ) }
    dend_59 { pt3dadd( 37.7996, 116.764, -25.838, 0.6 ) }
    dend_59 { pt3dadd( 37.6875, 117.178, -25.9586, 0.12 ) }
    dend_59 { pt3dadd( 37.5174, 117.82, -26.0845, 0.12 ) }
    dend_59 { pt3dadd( 37.4424, 118.161, -26.1693, 0.48 ) }
    dend_59 { pt3dadd( 37.2971, 119.228, -26.5304, 0.12 ) }
    dend_59 { pt3dadd( 37.2689, 119.58, -26.6611, 0.12 ) }
    dend_59 { pt3dadd( 37.2585, 119.88, -26.7702, 0.12 ) }
    dend_59 { pt3dadd( 37.2538, 120.302, -26.9084, 1.68 ) }
    dend_59 { pt3dadd( 37.2723, 120.822, -27.0536, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( 37.3665, 121.898, -27.2895, 0.24 ) }
    dend_59 { pt3dadd( 37.4225, 122.357, -27.3556, 0.24 ) }
    dend_59 { pt3dadd( 37.4707, 122.712, -27.4153, 0.48 ) }
    dend_59 { pt3dadd( 37.5272, 123.11, -27.5061, 0.12 ) }
    dend_59 { pt3dadd( 37.681, 124.202, -27.7766, 0.12 ) }
    dend_59 { pt3dadd( 37.8228, 125.195, -28.0208, 0.12 ) }
    dend_59 { pt3dadd( 37.9162, 125.837, -28.1652, 0.12 ) }
    dend_59 { pt3dadd( 38.0545, 126.769, -28.3622, 1.68 ) }
    dend_59 { pt3dadd( 38.2103, 127.904, -28.5712, 0.12 ) }
    dend_59 { pt3dadd( 38.3255, 128.8, -28.7086, 0.12 ) }
    dend_59 { pt3dadd( 38.3795, 129.242, -28.7642, 1.32 ) }
    dend_59 { pt3dadd( 38.46, 129.785, -28.7957, 1.68 ) }
    dend_59 { pt3dadd( 38.597, 130.52, -28.7867, 0.12 ) }
    dend_59 { pt3dadd( 38.7581, 131.199, -28.7105, 0.12 ) }
    dend_59 { pt3dadd( 38.8368, 131.447, -28.6691, 0.36 ) }
    dend_59 { pt3dadd( 38.9601, 131.777, -28.6193, 0.12 ) }
    dend_59 { pt3dadd( 39.2904, 132.58, -28.5099, 0.12 ) }
    dend_59 { pt3dadd( 39.5032, 133.059, -28.4535, 1.56 ) }
    dend_59 { pt3dadd( 39.8341, 133.771, -28.3831, 0.12 ) }
    dend_59 { pt3dadd( 40.4459, 135.042, -28.26, 0.12 ) }
    dend_59 { pt3dadd( 40.5651, 135.292, -28.2363, 0.48 ) }
    dend_59 { pt3dadd( 40.6734, 135.523, -28.2147, 0.12 ) }
    dend_59 { pt3dadd( 41.0778, 136.39, -28.1442, 0.12 ) }
    dend_59 { pt3dadd( 41.3347, 136.94, -28.1057, 1.2 ) }
    dend_59 { pt3dadd( 41.5201, 137.337, -28.0837, 1.2 ) }
    dend_59 { pt3dadd( 41.7067, 137.739, -28.0657, 0.12 ) }
    dend_59 { pt3dadd( 42.0207, 138.359, -28.0425, 0.12 ) }
    dend_59 { pt3dadd( 42.2422, 138.77, -28.0294, 1.32 ) }
    dend_59 { pt3dadd( 42.4608, 139.151, -28.0192, 1.68 ) }
    dend_59 { pt3dadd( 42.9956, 140.062, -27.9926, 0.12 ) }
    dend_59 { pt3dadd( 43.3959, 140.736, -27.9732, 0.12 ) }
    dend_59 { pt3dadd( 43.7909, 141.408, -27.9496, 0.12 ) }
    dend_59 { pt3dadd( 43.9298, 141.648, -27.9395, 0.12 ) }
    dend_59 { pt3dadd( 44.1845, 142.109, -27.9125, 0.12 ) }
    dend_59 { pt3dadd( 44.3525, 142.43, -27.8914, 1.2 ) }
    dend_59 { pt3dadd( 44.6303, 142.985, -27.8501, 0.12 ) }
    dend_59 { pt3dadd( 44.9715, 143.689, -27.8049, 0.12 ) }
    dend_59 { pt3dadd( 45.0855, 143.934, -27.7903, 0.36 ) }
    dend_59 { pt3dadd( 45.2071, 144.188, -27.7765, 0.12 ) }
    dend_59 { pt3dadd( 45.6014, 144.969, -27.737, 0.12 ) }
    dend_59 { pt3dadd( 45.7851, 145.308, -27.7208, 0.96 ) }
    dend_59 { pt3dadd( 45.9818, 145.649, -27.7028, 0.12 ) }
    dend_59 { pt3dadd( 46.4487, 146.385, -27.611, 0.12 ) }
    dend_59 { pt3dadd( 46.6881, 146.752, -27.5575, 0.84 ) }
    dend_59 { pt3dadd( 46.9305, 147.115, -27.4977, 0.36 ) }
    dend_59 { pt3dadd( 47.0852, 147.343, -27.4554, 0.12 ) }
    dend_59 { pt3dadd( 48.0817, 148.775, -27.1921, 0.12 ) }
    dend_59 { pt3dadd( 48.6362, 149.543, -27.0532, 0.24 ) }
    dend_59 { pt3dadd( 48.8663, 149.854, -27.0027, 0.48 ) }
    dend_59 { pt3dadd( 49.0298, 150.077, -26.972, 0.12 ) }
    dend_59 { pt3dadd( 49.4996, 150.755, -26.9082, 0.12 ) }
    dend_59 { pt3dadd( 49.7808, 151.22, -26.8877, 0.84 ) }
    dend_59 { pt3dadd( 49.9077, 151.474, -26.8959, 0.12 ) }
    dend_59 { pt3dadd( 50.2869, 152.264, -26.9603, 0.12 ) }
    dend_59 { pt3dadd( 50.3401, 152.385, -26.9663, 0.6 ) }
    dend_59 { pt3dadd( 50.4606, 152.795, -27.0088, 0.12 ) }
    dend_59 { pt3dadd( 50.5467, 153.342, -27.0839, 0.12 ) }
    dend_59 { pt3dadd( 50.5931, 153.87, -27.1617, 1.08 ) }
    dend_59 { pt3dadd( 50.6172, 154.489, -27.2913, 1.32 ) }
    dend_59 { pt3dadd( 50.5997, 155.011, -27.4226, 1.68 ) }
    dend_59 { pt3dadd( 50.5419, 155.981, -27.6671, 0.12 ) }
    dend_59 { pt3dadd( 50.4834, 156.571, -27.8454, 0.12 ) }
    dend_59 { pt3dadd( 50.4419, 156.821, -27.9266, 0.48 ) }
    dend_59 { pt3dadd( 50.3361, 157.287, -28.0645, 0.12 ) }
    dend_59 { pt3dadd( 50.1685, 157.935, -28.2271, 0.12 ) }
    dend_59 { pt3dadd( 50.0682, 158.314, -28.3014, 0.48 ) }
    dend_59 { pt3dadd( 49.8635, 158.981, -28.3873, 0.12 ) }
    dend_59 { pt3dadd( 49.6202, 159.629, -28.4451, 0.12 ) }
    dend_59 { pt3dadd( 49.3779, 160.254, -28.4657, 0.12 ) }
    dend_59 { pt3dadd( 49.2642, 160.554, -28.4561, 0.84 ) }
    dend_59 { pt3dadd( 49.1046, 160.97, -28.4331, 0.84 ) }
    dend_59 { pt3dadd( 49.0007, 161.219, -28.4072, 0.12 ) }
    dend_59 { pt3dadd( 48.7154, 161.837, -28.2986, 0.12 ) }
    dend_59 { pt3dadd( 48.5125, 162.23, -28.2317, 0.12 ) }
    dend_59 { pt3dadd( 48.4686, 162.306, -28.2163, 0.48 ) }
    dend_59 { pt3dadd( 48.2901, 162.595, -28.148, 0.12 ) }
    dend_59 { pt3dadd( 48.072, 162.919, -28.0636, 0.12 ) }
    dend_59 { pt3dadd( 47.7636, 163.312, -27.924, 1.32 ) }
    dend_59 { pt3dadd( 47.6292, 163.446, -27.8603, 1.56 ) }
    dend_59 { pt3dadd( 47.1438, 163.865, -27.6229, 0.12 ) }
    dend_59 { pt3dadd( 46.811, 164.138, -27.4607, 0.12 ) }
    dend_59 { pt3dadd( 46.5809, 164.311, -27.3114, 0.48 ) }
    dend_59 { pt3dadd( 46.2624, 164.53, -27.0679, 0.12 ) }
    dend_59 { pt3dadd( 46.0801, 164.663, -26.9198, 0.12 ) }
    dend_59 { pt3dadd( 45.8688, 164.832, -26.7488, 0.12 ) }
    dend_59 { pt3dadd( 45.6708, 165.01, -26.5631, 0.72 ) }
    dend_59 { pt3dadd( 45.0876, 165.63, -25.9691, 0.12 ) }
    dend_59 { pt3dadd( 44.8479, 165.927, -25.7185, 0.12 ) }
    dend_59 { pt3dadd( 44.4917, 166.416, -25.3197, 1.8 ) }
    dend_59 { pt3dadd( 44.2656, 166.75, -25.038, 2.04 ) }
    dend_59 { pt3dadd( 43.7459, 167.548, -24.3624, 0.24 ) }
    dend_59 { pt3dadd( 43.5537, 167.859, -24.1079, 0.24 ) }
    dend_59 { pt3dadd( 43.3147, 168.28, -23.8038, 0.24 ) }
    dend_59 { pt3dadd( 42.9812, 168.926, -23.3537, 0.24 ) }
    dend_59 { pt3dadd( 42.7775, 169.342, -23.0663, 0.96 ) }
    dend_59 { pt3dadd( 42.6616, 169.592, -22.9092, 1.32 ) }
    dend_59 { pt3dadd( 42.4745, 170.014, -22.679, 0.12 ) }
    dend_59 { pt3dadd( 42.2692, 170.479, -22.4317, 0.12 ) }
    dend_59 { pt3dadd( 41.9677, 171.17, -22.1061, 0.12 ) }
    dend_59 { pt3dadd( 41.862, 171.452, -22.0061, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( 41.7869, 171.711, -21.9297, 0.96 ) }
    dend_59 { pt3dadd( 41.7094, 172.049, -21.8394, 0.24 ) }
    dend_59 { pt3dadd( 41.6295, 172.476, -21.7466, 0.24 ) }
    dend_59 { pt3dadd( 41.5885, 172.763, -21.6963, 0.12 ) }
    dend_59 { pt3dadd( 41.506, 173.559, -21.5903, 0.12 ) }
    dend_59 { pt3dadd( 41.4552, 174.171, -21.5303, 0.12 ) }
    dend_59 { pt3dadd( 41.4306, 174.543, -21.5002, 0.96 ) }
    dend_59 { pt3dadd( 41.3999, 174.87, -21.5134, 0.12 ) }
    dend_59 { pt3dadd( 41.3356, 175.332, -21.5731, 0.12 ) }
    dend_59 { pt3dadd( 41.2987, 175.523, -21.6081, 0.12 ) }
    dend_59 { pt3dadd( 41.2577, 175.704, -21.6589, 1.2 ) }
    dend_59 { pt3dadd( 41.1929, 176.002, -21.7565, 1.2 ) }
    dend_59 { pt3dadd( 40.9882, 177.136, -22.1291, 0.12 ) }
    dend_59 { pt3dadd( 40.9125, 177.589, -22.3195, 0.12 ) }
    dend_59 { pt3dadd( 40.8572, 178.051, -22.5324, 0.12 ) }
    dend_59 { pt3dadd( 40.8184, 178.506, -22.746, 0.12 ) }
    dend_59 { pt3dadd( 40.8027, 178.827, -22.9066, 0.72 ) }
    dend_59 { pt3dadd( 40.7928, 179.188, -23.0703, 0.84 ) }
    dend_59 { pt3dadd( 40.7986, 180.303, -23.4971, 0.12 ) }
    dend_59 { pt3dadd( 40.8031, 181.029, -23.8084, 0.12 ) }
    dend_59 { pt3dadd( 40.8001, 181.141, -23.8544, 0.24 ) }
    dend_59 { pt3dadd( 40.7632, 181.609, -24.0404, 0.12 ) }
    dend_59 { pt3dadd( 40.6593, 182.596, -24.4582, 0.12 ) }
    dend_59 { pt3dadd( 40.6361, 182.759, -24.5249, 1.2 ) }
    dend_59 { pt3dadd( 40.4919, 183.511, -24.8194, 0.12 ) }
    dend_59 { pt3dadd( 40.3185, 184.181, -25.1366, 0.12 ) }
    dend_59 { pt3dadd( 40.1875, 184.678, -25.3895, 0.72 ) }
    dend_59 { pt3dadd( 40.0329, 185.164, -25.6786, 0.12 ) }
    dend_59 { pt3dadd( 39.9025, 185.474, -25.9005, 0.12 ) }
    dend_59 { pt3dadd( 39.6476, 185.962, -26.261, 0.12 ) }
    dend_59 { pt3dadd( 39.4346, 186.318, -26.533, 1.08 ) }
    dend_59 { pt3dadd( 39.2687, 186.564, -26.748, 1.08 ) }
    dend_59 { pt3dadd( 38.8427, 187.141, -27.2526, 0.12 ) }
    dend_59 { pt3dadd( 38.506, 187.547, -27.6076, 0.12 ) }
    dend_59 { pt3dadd( 38.4083, 187.655, -27.7126, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 39.968, 100.958, -46.3017, 0.12 ) }
    dend_57 { pt3dadd( 40.7225, 101.724, -46.6447, 0.12 ) }
    dend_57 { pt3dadd( 41.5726, 102.612, -47.0528, 2.64 ) }
    dend_57 { pt3dadd( 41.9032, 102.977, -47.2245, 2.16 ) }
    dend_57 { pt3dadd( 42.5691, 103.79, -47.5929, 0.24 ) }
    dend_57 { pt3dadd( 43.138, 104.522, -47.8965, 0.24 ) }
    dend_57 { pt3dadd( 43.5536, 105.08, -48.1098, 0.24 ) }
    dend_57 { pt3dadd( 44.1485, 105.94, -48.3638, 0.96 ) }
    dend_57 { pt3dadd( 44.5284, 106.537, -48.5148, 0.12 ) }
    dend_57 { pt3dadd( 44.9833, 107.281, -48.6289, 0.12 ) }
    dend_57 { pt3dadd( 45.3362, 107.862, -48.65, 0.24 ) }
    dend_57 { pt3dadd( 45.5462, 108.209, -48.629, 0.24 ) }
    dend_57 { pt3dadd( 45.9945, 108.922, -48.5195, 1.68 ) }
    dend_57 { pt3dadd( 46.3383, 109.462, -48.4208, 2.52 ) }
    dend_57 { pt3dadd( 46.9304, 110.358, -48.2966, 1.56 ) }
    dend_57 { pt3dadd( 47.1788, 110.739, -48.2671, 0.48 ) }
    dend_57 { pt3dadd( 47.9242, 111.982, -48.2563, 0.48 ) }
    dend_57 { pt3dadd( 48.33, 112.703, -48.286, 1.32 ) }
    dend_57 { pt3dadd( 48.769, 113.549, -48.3904, 0.96 ) }
    dend_57 { pt3dadd( 49.0905, 114.203, -48.5143, 0.12 ) }
    dend_57 { pt3dadd( 49.3994, 114.863, -48.6826, 0.12 ) }
    dend_57 { pt3dadd( 49.7742, 115.68, -48.9077, 1.8 ) }
    dend_57 { pt3dadd( 50.0297, 116.239, -49.0674, 1.92 ) }
    dend_57 { pt3dadd( 50.4191, 117.083, -49.269, 0.12 ) }
    dend_57 { pt3dadd( 50.7405, 117.752, -49.3524, 0.12 ) }
    dend_57 { pt3dadd( 50.8338, 117.949, -49.3618, 0.48 ) }
    dend_57 { pt3dadd( 51.0434, 118.385, -49.3633, 0.12 ) }
    dend_57 { pt3dadd( 51.2675, 118.852, -49.3374, 0.12 ) }
    dend_57 { pt3dadd( 51.5979, 119.596, -49.2371, 0.72 ) }
    dend_57 { pt3dadd( 51.8615, 120.222, -49.101, 0.12 ) }
    dend_57 { pt3dadd( 52.12, 120.909, -48.9522, 0.12 ) }
    dend_57 { pt3dadd( 52.2244, 121.195, -48.8927, 0.48 ) }
    dend_57 { pt3dadd( 52.3215, 121.474, -48.8419, 0.12 ) }
    dend_57 { pt3dadd( 52.556, 122.179, -48.7545, 0.12 ) }
    dend_57 { pt3dadd( 52.6526, 122.483, -48.7369, 1.2 ) }
    dend_57 { pt3dadd( 52.8318, 123.045, -48.7253, 1.32 ) }
    dend_57 { pt3dadd( 53.0521, 123.626, -48.6982, 0.84 ) }
    dend_57 { pt3dadd( 53.1586, 123.879, -48.6796, 0.12 ) }
    dend_57 { pt3dadd( 53.4141, 124.442, -48.6167, 0.12 ) }
    dend_57 { pt3dadd( 53.5096, 124.624, -48.5892, 0.6 ) }
    dend_57 { pt3dadd( 53.7287, 124.998, -48.5261, 0.12 ) }
    dend_57 { pt3dadd( 54.2603, 125.806, -48.3736, 0.12 ) }
    dend_57 { pt3dadd( 54.5015, 126.143, -48.3114, 0.6 ) }
    dend_57 { pt3dadd( 54.6997, 126.416, -48.3167, 0.12 ) }
    dend_57 { pt3dadd( 55.0126, 126.828, -48.3826, 0.12 ) }
    dend_57 { pt3dadd( 55.5299, 127.533, -48.5504, 1.56 ) }
    dend_57 { pt3dadd( 55.713, 127.795, -48.6276, 2.04 ) }
    dend_57 { pt3dadd( 56.0826, 128.349, -48.8062, 1.68 ) }
    dend_57 { pt3dadd( 57.1364, 129.911, -49.3854, 0.12 ) }
    dend_57 { pt3dadd( 57.6353, 130.66, -49.706, 0.12 ) }
    dend_57 { pt3dadd( 57.9434, 131.149, -49.9451, 0.12 ) }
    dend_57 { pt3dadd( 58.1843, 131.558, -50.1622, 1.08 ) }
    dend_57 { pt3dadd( 58.3667, 131.879, -50.3364, 1.56 ) }
    dend_57 { pt3dadd( 58.795, 132.656, -50.8039, 0.12 ) }
    dend_57 { pt3dadd( 59.3424, 133.597, -51.3889, 0.12 ) }
    dend_57 { pt3dadd( 59.7115, 134.179, -51.8407, 0.48 ) }
    dend_57 { pt3dadd( 60.0958, 134.731, -52.3511, 0.48 ) }
    dend_57 { pt3dadd( 60.3038, 134.999, -52.6298, 0.48 ) }
    dend_57 { pt3dadd( 60.8653, 135.673, -53.4573, 1.44 ) }
    dend_57 { pt3dadd( 61.1174, 135.954, -53.8243, 1.92 ) }
    dend_57 { pt3dadd( 61.5358, 136.351, -54.3816, 1.44 ) }
    dend_57 { pt3dadd( 62.0821, 136.813, -55.1046, 0.48 ) }
    dend_57 { pt3dadd( 62.7521, 137.342, -55.9763, 0.36 ) }
    dend_57 { pt3dadd( 63.6176, 137.984, -57.0617, 0.12 ) }
    dend_57 { pt3dadd( 64.1224, 138.339, -57.6468, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 64.5204, 138.617, -58.1088, 1.2 ) }
    dend_57 { pt3dadd( 65.5844, 139.33, -59.2441, 0.12 ) }
    dend_57 { pt3dadd( 65.9248, 139.533, -59.5812, 0.12 ) }
    dend_57 { pt3dadd( 66.1441, 139.647, -59.7858, 0.6 ) }
    dend_57 { pt3dadd( 66.4268, 139.779, -60.0033, 0.6 ) }
    dend_57 { pt3dadd( 66.9881, 140.037, -60.4508, 0.36 ) }
    dend_57 { pt3dadd( 67.3865, 140.215, -60.7343, 0.36 ) }
    dend_57 { pt3dadd( 68.0941, 140.52, -61.1185, 0.12 ) }
    dend_57 { pt3dadd( 68.5384, 140.716, -61.3214, 0.12 ) }
    dend_57 { pt3dadd( 69.2549, 141.049, -61.6078, 0.12 ) }
    dend_57 { pt3dadd( 70.1786, 141.506, -61.968, 1.56 ) }
    dend_57 { pt3dadd( 70.7761, 141.813, -62.1812, 2.16 ) }
    dend_57 { pt3dadd( 71.6547, 142.301, -62.4856, 0.24 ) }
    dend_57 { pt3dadd( 72.845, 143.053, -62.9519, 0.24 ) }
    dend_57 { pt3dadd( 73.3375, 143.422, -63.1767, 0.12 ) }
    dend_57 { pt3dadd( 74.1695, 144.127, -63.6, 1.68 ) }
    dend_57 { pt3dadd( 74.4148, 144.37, -63.7505, 2.28 ) }
    dend_57 { pt3dadd( 74.6641, 144.665, -63.9417, 2.28 ) }
    dend_57 { pt3dadd( 75.4691, 145.804, -64.7573, 0.12 ) }
    dend_57 { pt3dadd( 75.9166, 146.574, -65.3305, 0.12 ) }
    dend_57 { pt3dadd( 76.0367, 146.814, -65.509, 0.6 ) }
    dend_57 { pt3dadd( 76.3905, 147.673, -66.1719, 0.24 ) }
    dend_57 { pt3dadd( 76.5452, 148.142, -66.5612, 0.24 ) }
    dend_57 { pt3dadd( 76.7257, 148.741, -67.0705, 0.24 ) }
    dend_57 { pt3dadd( 76.8304, 149.161, -67.4215, 0.96 ) }
    dend_57 { pt3dadd( 76.9413, 149.737, -67.9257, 1.44 ) }
    dend_57 { pt3dadd( 77.1043, 150.798, -68.8285, 0.12 ) }
    dend_57 { pt3dadd( 77.2405, 151.8, -69.5826, 0.12 ) }
    dend_57 { pt3dadd( 77.2957, 152.221, -69.8775, 0.12 ) }
    dend_57 { pt3dadd( 77.3123, 152.358, -69.9578, 0.48 ) }
    dend_57 { pt3dadd( 77.3539, 152.649, -70.1087, 0.48 ) }
    dend_57 { pt3dadd( 77.3757, 152.783, -70.1652, 0.48 ) }
    dend_57 { pt3dadd( 77.5157, 153.589, -70.3985, 0.48 ) }
    dend_57 { pt3dadd( 77.6731, 154.464, -70.6101, 1.32 ) }
    dend_57 { pt3dadd( 77.7555, 154.914, -70.7178, 1.8 ) }
    dend_57 { pt3dadd( 77.9131, 155.58, -70.8661, 0.96 ) }
    dend_57 { pt3dadd( 78.0775, 156.183, -70.9799, 0.12 ) }
    dend_57 { pt3dadd( 78.3393, 157.062, -71.1422, 0.12 ) }
    dend_57 { pt3dadd( 78.492, 157.554, -71.2206, 1.2 ) }
    dend_57 { pt3dadd( 78.6364, 157.937, -71.2871, 1.56 ) }
    dend_57 { pt3dadd( 78.8674, 158.457, -71.4346, 0.12 ) }
    dend_57 { pt3dadd( 79.2662, 159.274, -71.7138, 0.12 ) }
    dend_57 { pt3dadd( 79.6652, 160.002, -72.0039, 0.12 ) }
    dend_57 { pt3dadd( 80.0994, 160.717, -72.4256, 0.12 ) }
    dend_57 { pt3dadd( 80.8362, 161.878, -73.2334, 0.12 ) }
    dend_57 { pt3dadd( 81.4638, 162.84, -74.0228, 0.12 ) }
    dend_57 { pt3dadd( 81.7136, 163.213, -74.3524, 0.84 ) }
    dend_57 { pt3dadd( 81.887, 163.464, -74.5837, 0.96 ) }
    dend_57 { pt3dadd( 82.7464, 164.738, -75.7417, 0.12 ) }
    dend_57 { pt3dadd( 83.096, 165.302, -76.2395, 0.12 ) }
    dend_57 { pt3dadd( 83.369, 165.901, -76.6523, 0.12 ) }
    dend_57 { pt3dadd( 83.6063, 166.54, -76.9973, 0.12 ) }
    dend_57 { pt3dadd( 83.7783, 167.106, -77.2884, 0.36 ) }
    dend_57 { pt3dadd( 83.7989, 167.202, -77.3245, 0.12 ) }
    dend_57 { pt3dadd( 83.8304, 167.667, -77.2819, 0.12 ) }
    dend_57 { pt3dadd( 83.7765, 168.175, -77.1789, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 39.968, 100.958, -46.3017, 0.12 ) }
    dend_56 { pt3dadd( 38.4117, 103.31, -49.4663, 0.12 ) }
    dend_56 { pt3dadd( 38.1099, 103.797, -50.0298, 0.12 ) }
    dend_56 { pt3dadd( 37.6994, 104.473, -50.6594, 0.12 ) }
    dend_56 { pt3dadd( 37.427, 104.933, -51.0223, 0.84 ) }
    dend_56 { pt3dadd( 36.8349, 105.946, -51.7249, 1.8 ) }
    dend_56 { pt3dadd( 36.628, 106.306, -51.9444, 1.92 ) }
    dend_56 { pt3dadd( 36.1855, 107.173, -52.1914, 0.12 ) }
    dend_56 { pt3dadd( 35.6975, 108.28, -52.4313, 0.12 ) }
    dend_56 { pt3dadd( 35.4004, 109.031, -52.526, 0.96 ) }
    dend_56 { pt3dadd( 35.2689, 109.404, -52.5511, 1.2 ) }
    dend_56 { pt3dadd( 34.993, 110.301, -52.544, 0.12 ) }
    dend_56 { pt3dadd( 34.8301, 110.919, -52.5567, 0.12 ) }
    dend_56 { pt3dadd( 34.5988, 112.212, -52.6001, 0.12 ) }
    dend_56 { pt3dadd( 34.5452, 112.698, -52.6281, 1.2 ) }
    dend_56 { pt3dadd( 34.5212, 113.005, -52.643, 1.44 ) }
    dend_56 { pt3dadd( 34.4768, 113.679, -52.7146, 0.6 ) }
    dend_56 { pt3dadd( 34.4141, 114.525, -52.8369, 0.12 ) }
    dend_56 { pt3dadd( 34.318, 115.264, -52.9687, 0.12 ) }
    dend_56 { pt3dadd( 34.1998, 115.783, -53.1021, 0.96 ) }
    dend_56 { pt3dadd( 34.0968, 116.144, -53.2064, 1.32 ) }
    dend_56 { pt3dadd( 33.7538, 117.101, -53.4808, 0.12 ) }
    dend_56 { pt3dadd( 33.5355, 117.584, -53.6117, 0.12 ) }
    dend_56 { pt3dadd( 33.233, 118.13, -53.7699, 0.12 ) }
    dend_56 { pt3dadd( 32.6246, 119.07, -54.077, 0.12 ) }
    dend_56 { pt3dadd( 32.2486, 119.624, -54.2636, 1.08 ) }
    dend_56 { pt3dadd( 31.9698, 120.015, -54.3855, 1.8 ) }
    dend_56 { pt3dadd( 31.5854, 120.514, -54.5626, 1.2 ) }
    dend_56 { pt3dadd( 30.9732, 121.291, -54.8784, 0.12 ) }
    dend_56 { pt3dadd( 30.6823, 121.658, -55.029, 0.12 ) }
    dend_56 { pt3dadd( 30.4394, 121.954, -55.1443, 0.12 ) }
    dend_56 { pt3dadd( 30.1385, 122.305, -55.3247, 0.12 ) }
    dend_56 { pt3dadd( 29.0154, 123.563, -56.0469, 0.12 ) }
    dend_56 { pt3dadd( 28.7669, 123.834, -56.2045, 1.44 ) }
    dend_56 { pt3dadd( 28.4644, 124.154, -56.4345, 2.04 ) }
    dend_56 { pt3dadd( 27.967, 124.645, -56.8371, 1.32 ) }
    dend_56 { pt3dadd( 26.8382, 125.675, -57.6986, 0.12 ) }
    dend_56 { pt3dadd( 26.4596, 125.997, -57.9671, 0.12 ) }
    dend_56 { pt3dadd( 26.0999, 126.269, -58.1772, 0.96 ) }
    dend_56 { pt3dadd( 24.4788, 127.36, -59.0338, 0.12 ) }
    dend_56 { pt3dadd( 23.847, 127.738, -59.3106, 0.12 ) }
    dend_56 { pt3dadd( 23.1373, 128.121, -59.5702, 1.56 ) }
    dend_56 { pt3dadd( 22.827, 128.269, -59.6455, 1.8 ) }
    dend_56 { pt3dadd( 21.9713, 128.67, -59.8503, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( 21.7398, 128.778, -59.8945, 0.12 ) }
    dend_56 { pt3dadd( 21.2358, 129.018, -59.9549, 0.48 ) }
    dend_56 { pt3dadd( 20.1925, 129.54, -60.1586, 0.12 ) }
    dend_56 { pt3dadd( 19.5032, 129.899, -60.329, 0.12 ) }
    dend_56 { pt3dadd( 18.9373, 130.197, -60.4496, 1.32 ) }
    dend_56 { pt3dadd( 18.5297, 130.398, -60.5116, 1.56 ) }
    dend_56 { pt3dadd( 17.64, 130.755, -60.5522, 0.12 ) }
    dend_56 { pt3dadd( 17.198, 130.872, -60.5217, 0.12 ) }
    dend_56 { pt3dadd( 16.9823, 130.904, -60.4811, 0.48 ) }
    dend_56 { pt3dadd( 16.2856, 130.954, -60.3346, 0.12 ) }
    dend_56 { pt3dadd( 15.5961, 130.972, -60.1693, 0.12 ) }
    dend_56 { pt3dadd( 14.6873, 130.965, -59.9187, 0.12 ) }
    dend_56 { pt3dadd( 13.8627, 130.939, -59.6608, 0.12 ) }
    dend_56 { pt3dadd( 13.5305, 130.929, -59.5605, 0.72 ) }
    dend_56 { pt3dadd( 13.2388, 130.92, -59.4433, 0.12 ) }
    dend_56 { pt3dadd( 12.5024, 130.922, -59.0924, 0.12 ) }
    dend_56 { pt3dadd( 12.0464, 130.949, -58.8343, 0.12 ) }
    dend_56 { pt3dadd( 11.5799, 131.003, -58.5381, 1.44 ) }
    dend_56 { pt3dadd( 11.0906, 131.082, -58.2089, 1.8 ) }
    dend_56 { pt3dadd( 9.65243, 131.344, -57.2326, 0.12 ) }
    dend_56 { pt3dadd( 9.20618, 131.435, -56.914, 0.12 ) }
    dend_56 { pt3dadd( 8.04657, 131.707, -56.0657, 0.12 ) }
    dend_56 { pt3dadd( 7.79566, 131.78, -55.8904, 0.24 ) }
    dend_56 { pt3dadd( 7.60542, 131.845, -55.744, 0.12 ) }
    dend_56 { pt3dadd( 7.34147, 131.941, -55.5322, 0.12 ) }
    dend_56 { pt3dadd( 6.62554, 132.25, -54.9775, 1.32 ) }
    dend_56 { pt3dadd( 6.54824, 132.288, -54.9073, 1.56 ) }
    dend_56 { pt3dadd( 6.04669, 132.586, -54.3796, 1.56 ) }
    dend_56 { pt3dadd( 5.33277, 133.063, -53.6345, 0.24 ) }
    dend_56 { pt3dadd( 5.19197, 133.171, -53.4899, 0.12 ) }
    dend_56 { pt3dadd( 4.75169, 133.557, -53.0863, 0.12 ) }
    dend_56 { pt3dadd( 4.3672, 133.92, -52.8063, 0.12 ) }
    dend_56 { pt3dadd( 4.20876, 134.071, -52.6986, 0.48 ) }
    dend_56 { pt3dadd( 3.95008, 134.336, -52.5465, 0.48 ) }
    dend_56 { pt3dadd( 3.80425, 134.492, -52.4874, 0.12 ) }
    dend_56 { pt3dadd( 3.2031, 135.139, -52.2497, 0.12 ) }
    dend_56 { pt3dadd( 2.73045, 135.589, -52.0742, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -7.32999, 40.9635, -76.9862, 0.12 ) }
    dend_52 { pt3dadd( -7.24327, 40.0202, -78.2521, 0.12 ) }
    dend_52 { pt3dadd( -7.17256, 39.5196, -79.0606, 0.12 ) }
    dend_52 { pt3dadd( -7.09309, 38.8956, -80.0719, 0.12 ) }
    dend_52 { pt3dadd( -7.07708, 38.7504, -80.3032, 1.56 ) }
    dend_52 { pt3dadd( -7.04928, 38.4191, -80.8079, 1.56 ) }
    dend_52 { pt3dadd( -7.03609, 38.079, -81.2988, 0.96 ) }
    dend_52 { pt3dadd( -7.05802, 37.4731, -82.1776, 0.12 ) }
    dend_52 { pt3dadd( -7.06763, 37.1157, -82.7431, 0.12 ) }
    dend_52 { pt3dadd( -7.07888, 37.0004, -82.9039, 0.12 ) }
    dend_52 { pt3dadd( -7.11213, 36.7477, -83.2067, 0.12 ) }
    dend_52 { pt3dadd( -7.14434, 36.4182, -83.5746, 0.6 ) }
    dend_52 { pt3dadd( -7.16363, 36.1945, -83.8003, 0.72 ) }
    dend_52 { pt3dadd( -7.24935, 35.2088, -84.6597, 0.12 ) }
    dend_52 { pt3dadd( -7.22843, 34.783, -85.1319, 0.12 ) }
    dend_52 { pt3dadd( -7.15235, 34.1664, -85.8401, 2.04 ) }
    dend_52 { pt3dadd( -6.94489, 33.1201, -87.109, 0.12 ) }
    dend_52 { pt3dadd( -6.83557, 32.6547, -87.6851, 0.12 ) }
    dend_52 { pt3dadd( -6.70582, 32.1603, -88.3424, 2.28 ) }
    dend_52 { pt3dadd( -6.30058, 30.5681, -90.474, 0.12 ) }
    dend_52 { pt3dadd( -6.16827, 30.0836, -91.1916, 0.12 ) }
    dend_52 { pt3dadd( -6.04647, 29.7701, -91.8418, 0.12 ) }
    dend_52 { pt3dadd( -5.99671, 29.6529, -92.1367, 0.12 ) }
    dend_52 { pt3dadd( -5.84801, 29.261, -93.2349, 0.12 ) }
    dend_52 { pt3dadd( -5.79088, 29.0372, -93.9282, 1.92 ) }
    dend_52 { pt3dadd( -5.78814, 28.8928, -94.3502, 2.28 ) }
    dend_52 { pt3dadd( -5.80347, 27.723, -97.9571, 0.12 ) }
    dend_52 { pt3dadd( -5.81472, 27.5929, -98.327, 0.12 ) }
    dend_52 { pt3dadd( -5.84666, 27.2476, -99.24, 1.8 ) }
    dend_52 { pt3dadd( -5.86614, 27.0915, -99.606, 1.8 ) }
    dend_52 { pt3dadd( -5.90073, 26.8289, -100.161, 1.2 ) }
    dend_52 { pt3dadd( -5.98061, 26.2333, -101.08, 0.12 ) }
    dend_52 { pt3dadd( -6.08454, 25.8358, -101.383, 0.12 ) }
    dend_52 { pt3dadd( -6.11027, 25.6948, -101.498, 0.6 ) }
    dend_52 { pt3dadd( -6.13805, 25.3117, -101.794, 0.12 ) }
    dend_52 { pt3dadd( -6.14004, 24.7354, -102.223, 0.12 ) }
    dend_52 { pt3dadd( -6.14033, 24.5982, -102.32, 0.36 ) }
    dend_52 { pt3dadd( -6.11929, 24.2944, -102.57, 0.36 ) }
    dend_52 { pt3dadd( -6.0872, 24.0896, -102.765, 0.12 ) }
    dend_52 { pt3dadd( -5.99147, 23.4592, -103.359, 0.12 ) }
    dend_52 { pt3dadd( -5.84542, 22.9338, -103.993, 0.12 ) }
    dend_52 { pt3dadd( -5.78155, 22.7412, -104.239, 0.96 ) }
    dend_52 { pt3dadd( -5.47211, 21.8738, -105.333, 0.12 ) }
    dend_52 { pt3dadd( -5.30759, 21.5462, -105.835, 0.12 ) }
    dend_52 { pt3dadd( -5.01534, 21.0395, -106.671, 2.76 ) }
    dend_52 { pt3dadd( -4.17156, 19.8365, -108.948, 0.12 ) }
    dend_52 { pt3dadd( -3.88451, 19.4518, -109.692, 0.12 ) }
    dend_52 { pt3dadd( -3.75927, 19.2986, -109.992, 0.96 ) }
    dend_52 { pt3dadd( -2.7183, 18.1951, -112.211, 0.12 ) }
    dend_52 { pt3dadd( -2.44326, 17.9729, -112.726, 0.12 ) }
    dend_52 { pt3dadd( -1.80733, 17.5664, -113.753, 0.12 ) }
    dend_52 { pt3dadd( -1.6078, 17.4539, -114.017, 1.2 ) }
    dend_52 { pt3dadd( -1.25709, 17.2771, -114.426, 2.28 ) }
    dend_52 { pt3dadd( -0.361249, 16.8197, -115.305, 1.68 ) }
    dend_52 { pt3dadd( 0.376046, 16.4085, -115.793, 0.12 ) }
    dend_52 { pt3dadd( 0.785269, 16.2217, -116.037, 0.12 ) }
    dend_52 { pt3dadd( 1.01685, 16.1198, -116.16, 0.12 ) }
    dend_52 { pt3dadd( 1.33908, 15.9956, -116.359, 0.12 ) }
    dend_52 { pt3dadd( 1.67014, 15.8559, -116.565, 0.6 ) }
    dend_52 { pt3dadd( 1.89439, 15.7461, -116.689, 0.6 ) }
    dend_52 { pt3dadd( 2.70311, 15.352, -117.316, 0.24 ) }
    dend_52 { pt3dadd( 2.8769, 15.2666, -117.5, 0.24 ) }
    dend_52 { pt3dadd( 3.42963, 14.9883, -118.194, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( 3.9999, 14.649, -118.97, 2.4 ) }
    dend_52 { pt3dadd( 4.09619, 14.5831, -119.104, 2.4 ) }
    dend_52 { pt3dadd( 5.29101, 13.7288, -120.98, 0.12 ) }
    dend_52 { pt3dadd( 6.07207, 13.1188, -122.287, 0.12 ) }
    dend_52 { pt3dadd( 6.53883, 12.741, -123.1, 0.12 ) }
    dend_52 { pt3dadd( 6.97051, 12.382, -123.895, 3.12 ) }
    dend_52 { pt3dadd( 7.15438, 12.2217, -124.26, 3.12 ) }
    dend_52 { pt3dadd( 8.6523, 10.7311, -127.374, 0.12 ) }
    dend_52 { pt3dadd( 8.85209, 10.5, -127.81, 0.12 ) }
    dend_52 { pt3dadd( 8.94697, 10.3794, -128.028, 0.48 ) }
    dend_52 { pt3dadd( 9.14966, 10.106, -128.503, 0.12 ) }
    dend_52 { pt3dadd( 9.30556, 9.89108, -128.895, 0.12 ) }
    dend_52 { pt3dadd( 9.40133, 9.74153, -129.208, 0.48 ) }
    dend_52 { pt3dadd( 9.52763, 9.4646, -129.765, 0.12 ) }
    dend_52 { pt3dadd( 9.62824, 9.23081, -130.259, 0.12 ) }
    dend_52 { pt3dadd( 9.89366, 8.5704, -131.551, 2.76 ) }
    dend_52 { pt3dadd( 9.94419, 8.43517, -131.792, 2.76 ) }
    dend_52 { pt3dadd( 10.5097, 6.89516, -134.4, 0.12 ) }
    dend_52 { pt3dadd( 10.5945, 6.65737, -134.764, 0.12 ) }
    dend_52 { pt3dadd( 10.7051, 6.34555, -135.208, 0.12 ) }
    dend_52 { pt3dadd( 10.8735, 5.87742, -135.845, 0.12 ) }
    dend_52 { pt3dadd( 11.0707, 5.32158, -136.556, 1.8 ) }
    dend_52 { pt3dadd( 11.2261, 4.93737, -137.014, 2.16 ) }
    dend_52 { pt3dadd( 11.3804, 4.53529, -137.42, 1.92 ) }
    dend_52 { pt3dadd( 11.7804, 3.56035, -138.574, 0.12 ) }
    dend_52 { pt3dadd( 11.8595, 3.34994, -138.852, 0.72 ) }
    dend_52 { pt3dadd( 11.9582, 2.96468, -139.431, 0.72 ) }
    dend_52 { pt3dadd( 11.9816, 2.74728, -139.742, 0.12 ) }
    dend_52 { pt3dadd( 11.9767, 2.33099, -140.294, 0.12 ) }
    dend_52 { pt3dadd( 11.9284, 1.88943, -140.828, 0.12 ) }
    dend_52 { pt3dadd( 11.8457, 1.41864, -141.296, 2.4 ) }
    dend_52 { pt3dadd( 11.636, 0.299237, -142.306, 0.12 ) }
    dend_52 { pt3dadd( 11.5023, -0.42059, -142.9, 0.12 ) }
    dend_52 { pt3dadd( 11.4552, -0.730822, -143.127, 0.6 ) }
    dend_52 { pt3dadd( 11.4341, -0.955972, -143.289, 0.12 ) }
    dend_52 { pt3dadd( 11.399, -1.40931, -143.597, 0.12 ) }
    dend_52 { pt3dadd( 11.3914, -1.55536, -143.695, 0.48 ) }
    dend_52 { pt3dadd( 11.4051, -1.97599, -144.013, 0.12 ) }
    dend_52 { pt3dadd( 11.4946, -2.92545, -144.85, 0.12 ) }
    dend_52 { pt3dadd( 11.5814, -3.64207, -145.518, 1.68 ) }
    dend_52 { pt3dadd( 11.6196, -3.91934, -145.786, 2.16 ) }
    dend_52 { pt3dadd( 11.6562, -4.14873, -146.003, 2.16 ) }
    dend_52 { pt3dadd( 11.897, -5.42309, -147.192, 0.12 ) }
    dend_52 { pt3dadd( 11.9712, -5.81518, -147.542, 0.12 ) }
    dend_52 { pt3dadd( 12.0108, -6.01171, -147.726, 0.48 ) }
    dend_52 { pt3dadd( 12.0202, -6.07861, -147.782, 0.12 ) }
    dend_52 { pt3dadd( 12.0692, -6.6959, -148.272, 0.12 ) }
    dend_52 { pt3dadd( 12.0447, -7.28126, -148.682, 0.12 ) }
    dend_52 { pt3dadd( 11.9882, -7.67218, -148.977, 1.68 ) }
    dend_52 { pt3dadd( 11.9409, -7.92909, -149.215, 1.92 ) }
    dend_52 { pt3dadd( 11.8169, -8.43571, -149.737, 0.12 ) }
    dend_52 { pt3dadd( 11.7155, -8.74602, -150.084, 0.12 ) }
    dend_52 { pt3dadd( 11.5553, -9.09822, -150.505, 1.32 ) }
    dend_52 { pt3dadd( 11.1114, -9.99851, -151.627, 0.12 ) }
    dend_52 { pt3dadd( 10.9525, -10.3232, -152.058, 0.12 ) }
    dend_52 { pt3dadd( 10.8544, -10.5343, -152.38, 0.48 ) }
    dend_52 { pt3dadd( 10.786, -10.6702, -152.617, 0.12 ) }
    dend_52 { pt3dadd( 10.6306, -10.9635, -153.223, 0.12 ) }
    dend_52 { pt3dadd( 10.4103, -11.3259, -154.022, 0.12 ) }
    dend_52 { pt3dadd( 10.3499, -11.3999, -154.205, 0.96 ) }
    dend_52 { pt3dadd( 10.0196, -11.7022, -155.069, 0.12 ) }
    dend_52 { pt3dadd( 9.87875, -11.8106, -155.398, 0.12 ) }
    dend_52 { pt3dadd( 9.52998, -12.0379, -156.118, 1.44 ) }
    dend_52 { pt3dadd( 9.20562, -12.2223, -156.687, 1.8 ) }
    dend_52 { pt3dadd( 8.6448, -12.5121, -157.473, 0.12 ) }
    dend_52 { pt3dadd( 7.89798, -12.8846, -158.366, 0.12 ) }
    dend_52 { pt3dadd( 7.70451, -12.977, -158.558, 0.48 ) }
    dend_52 { pt3dadd( 7.57393, -13.0371, -158.676, 0.12 ) }
    dend_52 { pt3dadd( 7.20328, -13.2131, -158.972, 0.12 ) }
    dend_52 { pt3dadd( 6.92953, -13.3456, -159.18, 1.08 ) }
    dend_52 { pt3dadd( 6.58264, -13.5233, -159.414, 1.68 ) }
    dend_52 { pt3dadd( 5.92059, -13.8646, -159.824, 0.12 ) }
    dend_52 { pt3dadd( 5.63239, -14.0152, -159.997, 0.12 ) }
    dend_52 { pt3dadd( 5.43887, -14.1287, -160.113, 0.48 ) }
    dend_52 { pt3dadd( 5.29928, -14.2197, -160.196, 0.12 ) }
    dend_52 { pt3dadd( 4.77619, -14.6217, -160.57, 0.12 ) }
    dend_52 { pt3dadd( 4.24146, -15.1414, -161.029, 1.68 ) }
    dend_52 { pt3dadd( 3.91401, -15.586, -161.416, 0.12 ) }
    dend_52 { pt3dadd( 3.66582, -16.039, -161.84, 0.12 ) }
    dend_52 { pt3dadd( 3.5264, -16.381, -162.169, 0.6 ) }
    dend_52 { pt3dadd( 3.3049, -17.1473, -162.917, 0.12 ) }
    dend_52 { pt3dadd( 3.21553, -17.6837, -163.43, 0.12 ) }
    dend_52 { pt3dadd( 3.15543, -18.4238, -164.181, 0.12 ) }
    dend_52 { pt3dadd( 3.13741, -18.6867, -164.445, 0.12 ) }
    dend_52 { pt3dadd( 3.11331, -18.9605, -164.719, 1.68 ) }
    dend_52 { pt3dadd( 3.0776, -19.2334, -164.973, 2.28 ) }
    dend_52 { pt3dadd( 2.95822, -19.7384, -165.389, 1.56 ) }
    dend_52 { pt3dadd( 2.73271, -20.4166, -165.925, 0.12 ) }
    dend_52 { pt3dadd( 2.58649, -20.7699, -166.145, 0.12 ) }
    dend_52 { pt3dadd( 2.45502, -21.0824, -166.333, 0.12 ) }
    dend_52 { pt3dadd( 2.30541, -21.4382, -166.547, 1.32 ) }
    dend_52 { pt3dadd( 2.18009, -21.7336, -166.717, 1.56 ) }
    dend_52 { pt3dadd( 1.98808, -22.1798, -166.971, 0.12 ) }
    dend_52 { pt3dadd( 1.47364, -23.375, -167.601, 0.12 ) }
    dend_52 { pt3dadd( 1.16651, -24.1031, -167.993, 1.8 ) }
    dend_52 { pt3dadd( 1.06718, -24.3644, -168.131, 2.52 ) }
    dend_52 { pt3dadd( 0.985795, -24.5773, -168.244, 2.52 ) }
    dend_52 { pt3dadd( 0.732545, -25.2593, -168.621, 0.12 ) }
    dend_52 { pt3dadd( 0.41211, -26.1471, -169.123, 0.12 ) }
    dend_52 { pt3dadd( 0.257931, -26.5767, -169.358, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( 0.0697919, -27.1186, -169.628, 2.04 ) }
    dend_52 { pt3dadd( -0.129498, -27.7254, -169.924, 2.04 ) }
    dend_52 { pt3dadd( -0.396755, -28.5883, -170.332, 0.12 ) }
    dend_52 { pt3dadd( -0.552988, -29.1324, -170.571, 0.12 ) }
    dend_52 { pt3dadd( -0.634689, -29.4821, -170.712, 0.72 ) }
    dend_52 { pt3dadd( -0.67088, -29.6658, -170.77, 0.12 ) }
    dend_52 { pt3dadd( -0.75067, -30.1123, -170.873, 0.12 ) }
    dend_52 { pt3dadd( -0.776196, -30.3046, -170.9, 0.48 ) }
    dend_52 { pt3dadd( -0.800617, -30.5695, -170.939, 0.12 ) }
    dend_52 { pt3dadd( -0.827337, -31.512, -171.137, 0.12 ) }
    dend_52 { pt3dadd( -0.813067, -32.1377, -171.294, 1.56 ) }
    dend_52 { pt3dadd( -0.794055, -32.4386, -171.379, 1.8 ) }
    dend_52 { pt3dadd( -0.753765, -32.7905, -171.49, 1.8 ) }
    dend_52 { pt3dadd( -0.587763, -33.9123, -171.879, 0.12 ) }
    dend_52 { pt3dadd( -0.456184, -34.6337, -172.159, 0.12 ) }
    dend_52 { pt3dadd( -0.456184, -34.6337, -172.159, 0.48 ) }
    dend_52 { pt3dadd( -0.411081, -34.7827, -172.24, 0.12 ) }
    dend_52 { pt3dadd( -0.24107, -35.2111, -172.495, 0.12 ) }
    dend_52 { pt3dadd( -0.164649, -35.363, -172.593, 0.48 ) }
    dend_52 { pt3dadd( -0.0918412, -35.5046, -172.683, 0.12 ) }
    dend_52 { pt3dadd( 0.275467, -36.1209, -173.2, 0.12 ) }
    dend_52 { pt3dadd( 0.742689, -36.9033, -173.896, 0.48 ) }
    dend_52 { pt3dadd( 0.86541, -37.1354, -174.085, 0.12 ) }
    dend_52 { pt3dadd( 1.11986, -37.6441, -174.476, 1.56 ) }
    dend_52 { pt3dadd( 1.33784, -38.1123, -174.809, 1.92 ) }
    dend_52 { pt3dadd( 1.64612, -38.8324, -175.271, 1.56 ) }
    dend_52 { pt3dadd( 1.79613, -39.184, -175.497, 0.12 ) }
    dend_52 { pt3dadd( 2.38657, -40.8166, -176.431, 0.12 ) }
    dend_52 { pt3dadd( 2.46448, -41.0429, -176.557, 0.84 ) }
    dend_52 { pt3dadd( 2.54384, -41.282, -176.687, 0.12 ) }
    dend_52 { pt3dadd( 2.67232, -41.6525, -176.886, 0.12 ) }
    dend_52 { pt3dadd( 3.06129, -42.7912, -177.444, 0.12 ) }
    dend_52 { pt3dadd( 3.46058, -43.8044, -178.029, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -7.32999, 40.9635, -76.9862, 0.12 ) }
    dend_51 { pt3dadd( -7.6027, 41.7827, -78.1836, 0.12 ) }
    dend_51 { pt3dadd( -7.79171, 42.3808, -79.0259, 0.12 ) }
    dend_51 { pt3dadd( -8.14841, 43.4099, -80.3253, 2.4 ) }
    dend_51 { pt3dadd( -8.72562, 45.1528, -82.4616, 0.24 ) }
    dend_51 { pt3dadd( -8.84806, 45.51, -82.8842, 0.24 ) }
    dend_51 { pt3dadd( -8.97959, 45.882, -83.302, 1.44 ) }
    dend_51 { pt3dadd( -9.25079, 46.6536, -84.1342, 0.12 ) }
    dend_51 { pt3dadd( -9.54444, 47.5721, -85.0463, 0.12 ) }
    dend_51 { pt3dadd( -9.83068, 48.3831, -85.7295, 0.12 ) }
    dend_51 { pt3dadd( -10.1291, 49.1678, -86.3554, 2.28 ) }
    dend_51 { pt3dadd( -10.4752, 50.1331, -87.159, 0.12 ) }
    dend_51 { pt3dadd( -10.7649, 50.9067, -87.8116, 0.12 ) }
    dend_51 { pt3dadd( -11.1637, 51.9249, -88.6554, 0.12 ) }
    dend_51 { pt3dadd( -11.6171, 53.0414, -89.58, 2.76 ) }
    dend_51 { pt3dadd( -12.1821, 54.3899, -90.6982, 0.24 ) }
    dend_51 { pt3dadd( -12.1821, 54.3899, -90.6982, 0.12 ) }
    dend_51 { pt3dadd( -12.5142, 55.1745, -91.3247, 0.12 ) }
    dend_51 { pt3dadd( -12.6715, 55.5482, -91.6226, 0.96 ) }
    dend_51 { pt3dadd( -12.8933, 56.0169, -91.9608, 0.96 ) }
    dend_51 { pt3dadd( -13.3854, 57.0569, -92.6696, 0.12 ) }
    dend_51 { pt3dadd( -13.8147, 58.1157, -93.339, 0.12 ) }
    dend_51 { pt3dadd( -13.9483, 58.5063, -93.5798, 0.72 ) }
    dend_51 { pt3dadd( -14.1303, 59.1784, -94.0234, 0.12 ) }
    dend_51 { pt3dadd( -14.3107, 59.8862, -94.4923, 0.12 ) }
    dend_51 { pt3dadd( -14.5205, 60.6523, -94.9664, 2.16 ) }
    dend_51 { pt3dadd( -14.8807, 62.0797, -95.9097, 0.12 ) }
    dend_51 { pt3dadd( -14.9735, 62.5025, -96.2168, 0.12 ) }
    dend_51 { pt3dadd( -15.1669, 63.4417, -96.9265, 0.12 ) }
    dend_51 { pt3dadd( -15.2973, 64.0531, -97.3812, 0.12 ) }
    dend_51 { pt3dadd( -15.4285, 64.8138, -97.998, 1.44 ) }
    dend_51 { pt3dadd( -15.6981, 66.6182, -99.4583, 0.12 ) }
    dend_51 { pt3dadd( -15.8038, 67.2162, -99.9236, 0.12 ) }
    dend_51 { pt3dadd( -15.879, 67.6736, -100.269, 1.56 ) }
    dend_51 { pt3dadd( -15.961, 68.2093, -100.651, 1.56 ) }
    dend_51 { pt3dadd( -16.1329, 69.397, -101.503, 0.12 ) }
    dend_51 { pt3dadd( -16.2043, 69.922, -101.872, 0.12 ) }
    dend_51 { pt3dadd( -16.2987, 70.3665, -102.13, 0.12 ) }
    dend_51 { pt3dadd( -16.3508, 70.61, -102.297, 0.12 ) }
    dend_51 { pt3dadd( -16.5874, 71.5014, -102.957, 0.12 ) }
    dend_51 { pt3dadd( -16.6982, 71.8577, -103.251, 0.12 ) }
    dend_51 { pt3dadd( -16.9225, 72.4053, -103.732, 1.92 ) }
    dend_51 { pt3dadd( -17.0736, 72.7664, -104.094, 2.16 ) }
    dend_51 { pt3dadd( -17.6187, 73.9317, -105.351, 0.12 ) }
    dend_51 { pt3dadd( -17.8533, 74.3527, -105.828, 0.12 ) }
    dend_51 { pt3dadd( -18.0524, 74.6726, -106.212, 1.08 ) }
    dend_51 { pt3dadd( -18.2942, 75.0136, -106.674, 1.32 ) }
    dend_51 { pt3dadd( -18.7315, 75.5311, -107.475, 0.12 ) }
    dend_51 { pt3dadd( -19.0475, 75.8458, -108.04, 0.12 ) }
    dend_51 { pt3dadd( -19.2932, 76.0436, -108.467, 0.48 ) }
    dend_51 { pt3dadd( -19.5334, 76.2086, -108.913, 0.12 ) }
    dend_51 { pt3dadd( -20.0753, 76.5592, -109.92, 0.12 ) }
    dend_51 { pt3dadd( -20.4098, 76.7809, -110.552, 1.44 ) }
    dend_51 { pt3dadd( -20.5998, 76.9204, -110.911, 1.68 ) }
    dend_51 { pt3dadd( -21.1645, 77.4402, -112.03, 0.12 ) }
    dend_51 { pt3dadd( -21.5898, 77.8713, -112.822, 0.12 ) }
    dend_51 { pt3dadd( -21.9489, 78.265, -113.423, 1.8 ) }
    dend_51 { pt3dadd( -22.3103, 78.7015, -113.956, 2.16 ) }
    dend_51 { pt3dadd( -22.8986, 79.4043, -114.716, 0.12 ) }
    dend_51 { pt3dadd( -23.2509, 79.8429, -115.206, 0.12 ) }
    dend_51 { pt3dadd( -23.5331, 80.1612, -115.571, 0.48 ) }
    dend_51 { pt3dadd( -23.5849, 80.2137, -115.636, 0.12 ) }
    dend_51 { pt3dadd( -23.8906, 80.481, -116.045, 0.12 ) }
    dend_51 { pt3dadd( -24.3611, 80.8629, -116.764, 1.68 ) }
    dend_51 { pt3dadd( -25.293, 81.5757, -118.31, 0.12 ) }
    dend_51 { pt3dadd( -25.6556, 81.8505, -118.946, 0.12 ) }
    dend_51 { pt3dadd( -25.8727, 82.0377, -119.339, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -26.2734, 82.4078, -120.025, 0.12 ) }
    dend_51 { pt3dadd( -26.5396, 82.6801, -120.477, 0.12 ) }
    dend_51 { pt3dadd( -26.8515, 83.0383, -120.998, 1.56 ) }
    dend_51 { pt3dadd( -27.1262, 83.345, -121.401, 2.28 ) }
    dend_51 { pt3dadd( -27.7897, 84.0832, -122.287, 0.12 ) }
    dend_51 { pt3dadd( -28.1076, 84.4129, -122.681, 0.12 ) }
    dend_51 { pt3dadd( -28.346, 84.6212, -122.922, 0.48 ) }
    dend_51 { pt3dadd( -28.7822, 84.9563, -123.31, 0.12 ) }
    dend_51 { pt3dadd( -29.0997, 85.1802, -123.59, 0.12 ) }
    dend_51 { pt3dadd( -29.8931, 85.6587, -124.253, 2.16 ) }
    dend_51 { pt3dadd( -31.0169, 86.177, -125.088, 0.12 ) }
    dend_51 { pt3dadd( -31.8153, 86.48, -125.643, 0.12 ) }
    dend_51 { pt3dadd( -32.2654, 86.6343, -125.966, 0.6 ) }
    dend_51 { pt3dadd( -32.561, 86.7252, -126.186, 0.12 ) }
    dend_51 { pt3dadd( -33.1492, 86.8866, -126.627, 0.12 ) }
    dend_51 { pt3dadd( -33.8548, 87.0618, -127.149, 2.4 ) }
    dend_51 { pt3dadd( -34.2088, 87.1453, -127.378, 2.4 ) }
    dend_51 { pt3dadd( -35.5042, 87.4571, -128.19, 0.12 ) }
    dend_51 { pt3dadd( -36.5932, 87.7218, -128.811, 0.12 ) }
    dend_51 { pt3dadd( -37.3107, 87.8979, -129.183, 1.68 ) }
    dend_51 { pt3dadd( -37.8639, 88.0288, -129.446, 2.16 ) }
    dend_51 { pt3dadd( -39.0267, 88.2769, -129.918, 0.12 ) }
    dend_51 { pt3dadd( -39.7449, 88.4133, -130.156, 0.12 ) }
    dend_51 { pt3dadd( -40.3377, 88.5039, -130.296, 0.6 ) }
    dend_51 { pt3dadd( -40.5452, 88.5333, -130.344, 0.12 ) }
    dend_51 { pt3dadd( -41.6806, 88.6988, -130.649, 0.12 ) }
    dend_51 { pt3dadd( -42.1657, 88.7586, -130.748, 0.84 ) }
    dend_51 { pt3dadd( -42.6392, 88.81, -130.814, 1.08 ) }
    dend_51 { pt3dadd( -42.8749, 88.8432, -130.847, 1.08 ) }
    dend_51 { pt3dadd( -43.2266, 88.9094, -130.901, 0.12 ) }
    dend_51 { pt3dadd( -43.8807, 89.0652, -130.994, 0.12 ) }
    dend_51 { pt3dadd( -44.6759, 89.2852, -131.1, 1.44 ) }
    dend_51 { pt3dadd( -45.2962, 89.457, -131.198, 1.68 ) }
    dend_51 { pt3dadd( -45.9685, 89.6411, -131.303, 0.12 ) }
    dend_51 { pt3dadd( -46.9436, 89.9114, -131.474, 0.12 ) }
    dend_51 { pt3dadd( -47.1783, 89.9751, -131.522, 1.32 ) }
    dend_51 { pt3dadd( -47.7047, 90.1119, -131.661, 0.12 ) }
    dend_51 { pt3dadd( -48.1049, 90.2107, -131.781, 0.12 ) }
    dend_51 { pt3dadd( -48.333, 90.2521, -131.844, 0.36 ) }
    dend_51 { pt3dadd( -48.7073, 90.2798, -131.946, 0.12 ) }
    dend_51 { pt3dadd( -49.225, 90.2828, -132.093, 0.12 ) }
    dend_51 { pt3dadd( -49.639, 90.2734, -132.211, 0.48 ) }
    dend_51 { pt3dadd( -50.251, 90.2479, -132.403, 0.12 ) }
    dend_51 { pt3dadd( -51.0653, 90.2, -132.68, 0.12 ) }
    dend_51 { pt3dadd( -51.6799, 90.1537, -132.901, 1.8 ) }
    dend_51 { pt3dadd( -52.1066, 90.1141, -133.064, 2.64 ) }
    dend_51 { pt3dadd( -52.4037, 90.084, -133.187, 2.64 ) }
    dend_51 { pt3dadd( -53.3939, 89.9673, -133.64, 0.12 ) }
    dend_51 { pt3dadd( -54.2512, 89.8508, -134.076, 0.12 ) }
    dend_51 { pt3dadd( -54.6317, 89.8019, -134.272, 0.12 ) }
    dend_51 { pt3dadd( -54.938, 89.7654, -134.429, 0.48 ) }
    dend_51 { pt3dadd( -55.1305, 89.7416, -134.523, 0.12 ) }
    dend_51 { pt3dadd( -55.5356, 89.7005, -134.7, 0.12 ) }
    dend_51 { pt3dadd( -55.939, 89.679, -134.849, 0.6 ) }
    dend_51 { pt3dadd( -56.3072, 89.6928, -134.971, 0.12 ) }
    dend_51 { pt3dadd( -56.8184, 89.7457, -135.129, 0.12 ) }
    dend_51 { pt3dadd( -57.2591, 89.8028, -135.232, 0.72 ) }
    dend_51 { pt3dadd( -57.7301, 89.8742, -135.322, 0.96 ) }
    dend_51 { pt3dadd( -58.2832, 89.9964, -135.438, 0.12 ) }
    dend_51 { pt3dadd( -58.9279, 90.1751, -135.594, 0.12 ) }
    dend_51 { pt3dadd( -59.3373, 90.2987, -135.698, 1.2 ) }
    dend_51 { pt3dadd( -60.0861, 90.5592, -135.898, 1.56 ) }
    dend_51 { pt3dadd( -60.5971, 90.7712, -136.061, 1.68 ) }
    dend_51 { pt3dadd( -61.5055, 91.2307, -136.378, 0.12 ) }
    dend_51 { pt3dadd( -62.2956, 91.6807, -136.671, 0.12 ) }
    dend_51 { pt3dadd( -62.6629, 91.9435, -136.899, 1.56 ) }
    dend_51 { pt3dadd( -63.0779, 92.2666, -137.182, 1.56 ) }
    dend_51 { pt3dadd( -63.549, 92.6708, -137.549, 0.12 ) }
    dend_51 { pt3dadd( -65.0238, 94.0202, -138.775, 0.12 ) }
    dend_51 { pt3dadd( -65.2058, 94.1971, -138.937, 0.48 ) }
    dend_51 { pt3dadd( -66.7206, 95.9239, -140.631, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.90103, -165.952, -22.7387, 3.37 ) }
    dend_47 { pt3dadd( -2.35248, -166.394, -21.3472, 3.37 ) }
    dend_47 { pt3dadd( -0.730484, -167.523, -17.4856, 0.12 ) }
    dend_47 { pt3dadd( -0.599524, -167.585, -17.2321, 0.12 ) }
    dend_47 { pt3dadd( -0.199111, -167.736, -16.5498, 0.12 ) }
    dend_47 { pt3dadd( 0.077196, -167.814, -16.1396, 0.72 ) }
    dend_47 { pt3dadd( 0.431626, -167.888, -15.6808, 0.72 ) }
    dend_47 { pt3dadd( 0.655579, -167.896, -15.4931, 0.12 ) }
    dend_47 { pt3dadd( 2.2288, -167.736, -14.7383, 0.12 ) }
    dend_47 { pt3dadd( 2.39222, -167.738, -14.6231, 0.96 ) }
    dend_47 { pt3dadd( 2.86261, -167.849, -14.1116, 0.96 ) }
    dend_47 { pt3dadd( 3.34606, -168.138, -13.1579, 0.12 ) }
    dend_47 { pt3dadd( 3.41002, -168.219, -12.9182, 0.12 ) }
    dend_47 { pt3dadd( 3.45045, -168.369, -12.4741, 0.84 ) }
    dend_47 { pt3dadd( 3.38811, -169.262, -9.99432, 0.24 ) }
    dend_47 { pt3dadd( 3.30183, -169.793, -8.62275, 1.92 ) }
    dend_47 { pt3dadd( 3.08987, -170.638, -6.63365, 0.24 ) }
    dend_47 { pt3dadd( 2.96881, -171.021, -5.81568, 1.68 ) }
    dend_47 { pt3dadd( 2.60526, -172.117, -3.69162, 1.68 ) }
    dend_47 { pt3dadd( 2.49086, -172.438, -3.15099, 0.12 ) }
    dend_47 { pt3dadd( 2.34763, -172.839, -2.66243, 0.12 ) }
    dend_47 { pt3dadd( 2.23915, -173.213, -2.34013, 0.6 ) }
    dend_47 { pt3dadd( 2.13629, -173.771, -2.03964, 1.08 ) }
    dend_47 { pt3dadd( 2.03702, -174.487, -1.75953, 1.08 ) }
    dend_47 { pt3dadd( 1.87713, -175.546, -1.52867, 0.12 ) }
    dend_47 { pt3dadd( 1.78456, -176.164, -1.39649, 0.12 ) }
    dend_47 { pt3dadd( 1.70701, -176.788, -1.27822, 0.12 ) }
    dend_47 { pt3dadd( 1.65152, -177.417, -1.18132, 0.12 ) }
    dend_47 { pt3dadd( 1.63365, -178.04, -1.11455, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( 1.64395, -178.565, -1.09584, 0.96 ) }
    dend_47 { pt3dadd( 1.67577, -179.208, -1.10182, 0.12 ) }
    dend_47 { pt3dadd( 1.70702, -180.004, -1.10873, 0.12 ) }
    dend_47 { pt3dadd( 1.7068, -180.463, -1.09604, 1.32 ) }
    dend_47 { pt3dadd( 1.68734, -180.747, -1.07885, 1.32 ) }
    dend_47 { pt3dadd( 1.59594, -181.585, -1.00437, 0.12 ) }
    dend_47 { pt3dadd( 1.47411, -182.336, -0.920593, 0.12 ) }
    dend_47 { pt3dadd( 1.44296, -182.513, -0.898926, 0.48 ) }
    dend_47 { pt3dadd( 1.34625, -183.089, -0.818815, 0.12 ) }
    dend_47 { pt3dadd( 1.32164, -183.371, -0.780217, 0.12 ) }
    dend_47 { pt3dadd( 1.32197, -183.739, -0.731701, 0.12 ) }
    dend_47 { pt3dadd( 1.38943, -183.998, -0.627872, 0.48 ) }
    dend_47 { pt3dadd( 1.5421, -184.47, -0.337461, 0.36 ) }
    dend_47 { pt3dadd( 1.63336, -184.818, -0.173224, 0.36 ) }
    dend_47 { pt3dadd( 1.70943, -185.154, -0.0607817, 1.2 ) }
    dend_47 { pt3dadd( 1.78538, -185.516, 0.037508, 1.2 ) }
    dend_47 { pt3dadd( 2.15849, -187.385, 0.653512, 0.12 ) }
    dend_47 { pt3dadd( 2.30749, -188.076, 0.888, 0.12 ) }
    dend_47 { pt3dadd( 2.58707, -189.581, 1.4037, 0.12 ) }
    dend_47 { pt3dadd( 2.70549, -190.332, 1.64844, 0.12 ) }
    dend_47 { pt3dadd( 2.76657, -190.836, 1.78977, 0.12 ) }
    dend_47 { pt3dadd( 2.86925, -191.986, 2.00027, 1.32 ) }
    dend_47 { pt3dadd( 2.95644, -192.891, 1.94986, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.90103, -165.952, -22.7387, 0.12 ) }
    dend_46 { pt3dadd( -4.33015, -166.857, -22.8515, 0.12 ) }
    dend_46 { pt3dadd( -5.27849, -167.457, -22.9263, 0.12 ) }
    dend_46 { pt3dadd( -5.57858, -167.647, -22.95, 0.96 ) }
    dend_46 { pt3dadd( -5.93225, -167.871, -22.9779, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 5.14999, -160.918, -29.3438, 0.12 ) }
    dend_44 { pt3dadd( 5.78886, -161.82, -29.3168, 0.12 ) }
    dend_44 { pt3dadd( 6.24639, -162.584, -29.2868, 0.12 ) }
    dend_44 { pt3dadd( 6.67198, -163.301, -29.265, 0.72 ) }
    dend_44 { pt3dadd( 7.22049, -164.229, -29.2619, 0.84 ) }
    dend_44 { pt3dadd( 7.53068, -164.735, -29.244, 0.48 ) }
    dend_44 { pt3dadd( 7.74812, -165.08, -29.2273, 0.12 ) }
    dend_44 { pt3dadd( 8.22664, -165.824, -29.1789, 0.12 ) }
    dend_44 { pt3dadd( 8.53746, -166.305, -29.1297, 0.12 ) }
    dend_44 { pt3dadd( 8.83785, -166.741, -29.0891, 0.84 ) }
    dend_44 { pt3dadd( 9.39153, -167.602, -29.1171, 0.36 ) }
    dend_44 { pt3dadd( 9.65169, -168.022, -29.1509, 0.12 ) }
    dend_44 { pt3dadd( 10.2692, -169.026, -29.2723, 0.12 ) }
    dend_44 { pt3dadd( 10.7972, -169.896, -29.4119, 1.8 ) }
    dend_44 { pt3dadd( 11.2088, -170.67, -29.5527, 1.56 ) }
    dend_44 { pt3dadd( 11.8652, -172.041, -29.8454, 0.12 ) }
    dend_44 { pt3dadd( 11.9695, -172.291, -29.9141, 0.12 ) }
    dend_44 { pt3dadd( 12.0182, -172.417, -29.9499, 0.36 ) }
    dend_44 { pt3dadd( 12.1719, -172.868, -30.0806, 0.12 ) }
    dend_44 { pt3dadd( 12.3867, -173.671, -30.2751, 0.12 ) }
    dend_44 { pt3dadd( 12.4498, -173.939, -30.3174, 0.12 ) }
    dend_44 { pt3dadd( 12.5568, -174.361, -30.3545, 0.72 ) }
    dend_44 { pt3dadd( 12.7147, -175.037, -30.4115, 0.96 ) }
    dend_44 { pt3dadd( 12.8313, -175.568, -30.4528, 0.12 ) }
    dend_44 { pt3dadd( 13.1646, -177.195, -30.5698, 0.12 ) }
    dend_44 { pt3dadd( 13.2668, -177.73, -30.6057, 0.84 ) }
    dend_44 { pt3dadd( 13.3619, -178.294, -30.6509, 0.12 ) }
    dend_44 { pt3dadd( 13.45, -178.97, -30.7042, 0.12 ) }
    dend_44 { pt3dadd( 13.4979, -179.414, -30.7391, 0.96 ) }
    dend_44 { pt3dadd( 13.5571, -179.971, -30.7872, 0.12 ) }
    dend_44 { pt3dadd( 13.648, -180.925, -30.883, 0.12 ) }
    dend_44 { pt3dadd( 13.7254, -181.844, -30.9856, 1.68 ) }
    dend_44 { pt3dadd( 13.7474, -182.234, -31.0345, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 5.14999, -160.918, -29.3438, 0.6 ) }
    dend_43 { pt3dadd( 6.07377, -160.416, -26.4216, 0.6 ) }
    dend_43 { pt3dadd( 6.15109, -160.655, -26.8638, 0.6 ) }
    dend_43 { pt3dadd( 6.49578, -161.336, -27.9091, 0.12 ) }
    dend_43 { pt3dadd( 6.65209, -161.61, -28.288, 0.12 ) }
    dend_43 { pt3dadd( 6.84745, -161.952, -28.7614, 0.96 ) }
    dend_43 { pt3dadd( 7.04356, -162.295, -29.2367, 0.96 ) }
    dend_43 { pt3dadd( 7.43422, -163.099, -30.4871, 0.12 ) }
    dend_43 { pt3dadd( 7.58372, -163.447, -31.0244, 0.12 ) }
    dend_43 { pt3dadd( 7.67034, -163.627, -31.2847, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 19.9975, -98.5039, -40.5448, 0.12 ) }
    dend_40 { pt3dadd( 21.686, -99.5902, -38.4463, 0.12 ) }
    dend_40 { pt3dadd( 22.0676, -99.8306, -37.9958, 0.12 ) }
    dend_40 { pt3dadd( 22.2458, -99.9436, -37.7985, 0.6 ) }
    dend_40 { pt3dadd( 22.7528, -100.25, -37.2682, 0.12 ) }
    dend_40 { pt3dadd( 23.682, -100.782, -36.3546, 0.12 ) }
    dend_40 { pt3dadd( 23.941, -100.926, -36.1046, 0.12 ) }
    dend_40 { pt3dadd( 24.1348, -101.022, -35.9632, 0.12 ) }
    dend_40 { pt3dadd( 24.4057, -101.159, -35.7733, 0.12 ) }
    dend_40 { pt3dadd( 25.0568, -101.494, -35.3196, 0.12 ) }
    dend_40 { pt3dadd( 25.264, -101.606, -35.19, 0.6 ) }
    dend_40 { pt3dadd( 25.6966, -101.889, -34.9832, 0.12 ) }
    dend_40 { pt3dadd( 26.134, -102.186, -34.7531, 0.12 ) }
    dend_40 { pt3dadd( 26.7092, -102.553, -34.451, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 19.9975, -98.5039, -40.5448, 0.24 ) }
    dend_35 { pt3dadd( 20.104, -100.035, -41.1795, 0.24 ) }
    dend_35 { pt3dadd( 20.1131, -101.412, -41.7733, 0.24 ) }
    dend_35 { pt3dadd( 20.0939, -102.051, -42.0443, 0.96 ) }
    dend_35 { pt3dadd( 20.0391, -103.16, -42.5077, 1.8 ) }
    dend_35 { pt3dadd( 20.0028, -104.244, -43.0301, 0.84 ) }
    dend_35 { pt3dadd( 19.9762, -104.938, -43.4091, 0.12 ) }
    dend_35 { pt3dadd( 19.9289, -105.99, -44.1088, 0.12 ) }
    dend_35 { pt3dadd( 19.8858, -106.534, -44.499, 0.72 ) }
    dend_35 { pt3dadd( 19.8733, -106.663, -44.5817, 0.72 ) }
    dend_35 { pt3dadd( 19.7904, -107.999, -45.3526, 0.24 ) }
    dend_35 { pt3dadd( 19.7982, -108.572, -45.6031, 0.24 ) }
    dend_35 { pt3dadd( 19.8704, -109.524, -45.9069, 0.24 ) }
    dend_35 { pt3dadd( 19.9783, -110.514, -46.107, 0.24 ) }
    dend_35 { pt3dadd( 20.063, -111.434, -46.203, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 20.1242, -112.489, -46.2417, 0.24 ) }
    dend_35 { pt3dadd( 20.1512, -113.541, -46.1662, 1.44 ) }
    dend_35 { pt3dadd( 20.1695, -114.687, -46.0287, 1.92 ) }
    dend_35 { pt3dadd( 20.1533, -115.816, -45.862, 1.92 ) }
    dend_35 { pt3dadd( 20.1116, -116.958, -45.6959, 1.2 ) }
    dend_35 { pt3dadd( 20.0488, -118.133, -45.5537, 0.48 ) }
    dend_35 { pt3dadd( 19.9618, -119.28, -45.4321, 0.12 ) }
    dend_35 { pt3dadd( 19.9009, -120.105, -45.3262, 0.12 ) }
    dend_35 { pt3dadd( 19.8691, -120.615, -45.2655, 0.6 ) }
    dend_35 { pt3dadd( 19.8402, -121.255, -45.2147, 0.12 ) }
    dend_35 { pt3dadd( 19.8221, -122.583, -45.1047, 0.12 ) }
    dend_35 { pt3dadd( 19.8427, -123.249, -45.0641, 0.12 ) }
    dend_35 { pt3dadd( 19.9768, -125.603, -45.0922, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 35.7945, -29.9976, -6.82556, 0.96 ) }
    dend_33 { pt3dadd( 35.5174, -25.8356, 2.31734, 0.96 ) }
    dend_33 { pt3dadd( 35.4688, -25.3099, 3.27511, 0.72 ) }
    dend_33 { pt3dadd( 35.43, -24.9582, 3.78995, 0.24 ) }
    dend_33 { pt3dadd( 35.3965, -24.5347, 4.27151, 0.24 ) }
    dend_33 { pt3dadd( 35.3789, -23.8677, 4.83493, 0.24 ) }
    dend_33 { pt3dadd( 35.401, -22.9776, 5.45582, 0.84 ) }
    dend_33 { pt3dadd( 35.5291, -21.7778, 5.66346, 1.2 ) }
    dend_33 { pt3dadd( 35.6982, -20.6857, 5.90933, 0.48 ) }
    dend_33 { pt3dadd( 35.9702, -19.2795, 6.36419, 0.24 ) }
    dend_33 { pt3dadd( 36.3323, -17.8404, 6.91413, 0.24 ) }
    dend_33 { pt3dadd( 36.893, -16.0439, 7.72272, 1.68 ) }
    dend_33 { pt3dadd( 37.2077, -15.1426, 8.15085, 2.28 ) }
    dend_33 { pt3dadd( 37.4524, -14.4846, 8.47729, 2.4 ) }
    dend_33 { pt3dadd( 38.2489, -12.3433, 9.55988, 0.36 ) }
    dend_33 { pt3dadd( 38.5433, -11.5022, 9.98212, 0.36 ) }
    dend_33 { pt3dadd( 38.9197, -10.345, 10.5227, 0.84 ) }
    dend_33 { pt3dadd( 39.4072, -8.7002, 11.2122, 0.84 ) }
    dend_33 { pt3dadd( 39.8526, -7.03004, 11.8761, 0.6 ) }
    dend_33 { pt3dadd( 40.2467, -5.47525, 12.4554, 0.6 ) }
    dend_33 { pt3dadd( 40.4883, -4.48902, 12.7724, 0.96 ) }
    dend_33 { pt3dadd( 40.6463, -3.70905, 13.018, 0.96 ) }
    dend_33 { pt3dadd( 40.8765, -2.24796, 13.4409, 0.12 ) }
    dend_33 { pt3dadd( 40.9506, -1.52296, 13.6398, 0.12 ) }
    dend_33 { pt3dadd( 40.9942, -0.90588, 13.7741, 0.12 ) }
    dend_33 { pt3dadd( 41.0301, -0.235548, 13.8864, 0.12 ) }
    dend_33 { pt3dadd( 41.0695, 0.439918, 14.001, 0.6 ) }
    dend_33 { pt3dadd( 41.1147, 0.976877, 14.0624, 0.96 ) }
    dend_33 { pt3dadd( 41.1568, 1.84006, 13.9955, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 35.7945, -29.9976, -6.82556, 0.12 ) }
    dend_30 { pt3dadd( 37.265, -30.3937, -6.33709, 0.12 ) }
    dend_30 { pt3dadd( 37.6989, -30.4995, -6.19151, 0.12 ) }
    dend_30 { pt3dadd( 38.2429, -30.6215, -6.00693, 0.6 ) }
    dend_30 { pt3dadd( 38.9112, -30.7484, -5.78824, 0.6 ) }
    dend_30 { pt3dadd( 39.8776, -30.9088, -5.49445, 0.12 ) }
    dend_30 { pt3dadd( 40.7773, -31.0219, -5.24739, 0.12 ) }
    dend_30 { pt3dadd( 40.8918, -31.025, -5.22104, 0.36 ) }
    dend_30 { pt3dadd( 41.2624, -31.0141, -5.14752, 0.12 ) }
    dend_30 { pt3dadd( 41.7719, -30.9695, -5.0294, 0.12 ) }
    dend_30 { pt3dadd( 42.226, -30.8841, -4.92358, 0.48 ) }
    dend_30 { pt3dadd( 42.889, -30.7401, -4.78888, 0.6 ) }
    dend_30 { pt3dadd( 43.3479, -30.6415, -4.68368, 0.48 ) }
    dend_30 { pt3dadd( 43.7557, -30.5761, -4.59298, 0.48 ) }
    dend_30 { pt3dadd( 44.7191, -30.4433, -4.2262, 0.12 ) }
    dend_30 { pt3dadd( 45.6902, -30.3728, -3.7626, 2.04 ) }
    dend_30 { pt3dadd( 46.2459, -30.3744, -3.4679, 3.25 ) }
    dend_30 { pt3dadd( 46.76, -30.4353, -3.19016, 3.37 ) }
    dend_30 { pt3dadd( 47.4083, -30.5807, -2.85106, 2.88 ) }
    dend_30 { pt3dadd( 49.4467, -31.2367, -1.82609, 0.24 ) }
    dend_30 { pt3dadd( 50.3049, -31.5979, -1.42625, 0.24 ) }
    dend_30 { pt3dadd( 50.848, -31.8817, -1.17426, 0.72 ) }
    dend_30 { pt3dadd( 51.8047, -32.4145, -0.777262, 0.96 ) }
    dend_30 { pt3dadd( 52.4185, -32.7802, -0.572863, 0.24 ) }
    dend_30 { pt3dadd( 52.6176, -32.8995, -0.544065, 0.24 ) }
    dend_30 { pt3dadd( 52.9078, -33.0564, -0.574188, 0.24 ) }
    dend_30 { pt3dadd( 53.5736, -33.2934, -0.674901, 0.24 ) }
    dend_30 { pt3dadd( 54.1507, -33.3974, -0.765431, 1.2 ) }
    dend_30 { pt3dadd( 54.62, -33.4198, -0.770316, 1.92 ) }
    dend_30 { pt3dadd( 55.5875, -33.3983, -0.684064, 1.92 ) }
    dend_30 { pt3dadd( 56.5637, -33.3387, -0.532685, 0.36 ) }
    dend_30 { pt3dadd( 57.1759, -33.2804, -0.363866, 0.36 ) }
    dend_30 { pt3dadd( 58.3866, -33.1338, 0.0594287, 0.36 ) }
    dend_30 { pt3dadd( 60.291, -32.8938, 0.815704, 1.68 ) }
    dend_30 { pt3dadd( 60.8753, -32.827, 1.04729, 2.52 ) }
    dend_30 { pt3dadd( 61.7729, -32.7461, 1.40732, 2.64 ) }
    dend_30 { pt3dadd( 63.7457, -32.6509, 2.09876, 0.24 ) }
    dend_30 { pt3dadd( 64.606, -32.6468, 2.3436, 0.24 ) }
    dend_30 { pt3dadd( 65.1936, -32.6614, 2.44897, 0.36 ) }
    dend_30 { pt3dadd( 66.2092, -32.718, 2.4697, 1.08 ) }
    dend_30 { pt3dadd( 66.7335, -32.7506, 2.4773, 1.08 ) }
    dend_30 { pt3dadd( 67.6639, -32.7977, 2.45909, 0.48 ) }
    dend_30 { pt3dadd( 68.1317, -32.8077, 2.4175, 0.24 ) }
    dend_30 { pt3dadd( 68.7876, -32.7674, 2.42872, 0.24 ) }
    dend_30 { pt3dadd( 69.36, -32.6701, 2.51003, 0.6 ) }
    dend_30 { pt3dadd( 70.4957, -32.3835, 2.81363, 0.36 ) }
    dend_30 { pt3dadd( 71.0384, -32.2604, 2.97756, 0.36 ) }
    dend_30 { pt3dadd( 71.4816, -32.1984, 3.16154, 0.36 ) }
    dend_30 { pt3dadd( 71.7988, -32.1939, 3.31505, 0.48 ) }
    dend_30 { pt3dadd( 72.0356, -32.2194, 3.42599, 0.24 ) }
    dend_30 { pt3dadd( 72.4689, -32.2938, 3.62917, 0.24 ) }
    dend_30 { pt3dadd( 73.2508, -32.4572, 3.91921, 0.24 ) }
    dend_30 { pt3dadd( 74.3738, -32.6965, 4.28135, 0.24 ) }
    dend_30 { pt3dadd( 74.8418, -32.7963, 4.41254, 1.2 ) }
    dend_30 { pt3dadd( 75.6509, -32.9367, 4.59792, 2.16 ) }
    dend_30 { pt3dadd( 76.8248, -33.0771, 4.8605, 1.8 ) }
    dend_30 { pt3dadd( 77.7544, -33.1387, 5.04866, 0.36 ) }
    dend_30 { pt3dadd( 79.1097, -33.12, 5.43496, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 79.7099, -33.0802, 5.62969, 0.36 ) }
    dend_30 { pt3dadd( 80.6946, -32.9753, 6.00392, 0.36 ) }
    dend_30 { pt3dadd( 81.6414, -32.8378, 6.49105, 1.56 ) }
    dend_30 { pt3dadd( 82.3624, -32.7132, 6.93198, 2.04 ) }
    dend_30 { pt3dadd( 84.3468, -32.342, 8.35862, 0.24 ) }
    dend_30 { pt3dadd( 84.9178, -32.2391, 8.82166, 0.24 ) }
    dend_30 { pt3dadd( 85.2032, -32.1978, 9.0556, 0.24 ) }
    dend_30 { pt3dadd( 86.5027, -32.1019, 10.1188, 1.68 ) }
    dend_30 { pt3dadd( 86.8914, -32.0974, 10.4078, 2.04 ) }
    dend_30 { pt3dadd( 87.1846, -32.1037, 10.6359, 2.04 ) }
    dend_30 { pt3dadd( 88.4734, -32.1324, 11.5592, 0.24 ) }
    dend_30 { pt3dadd( 89.0326, -32.109, 11.9876, 0.24 ) }
    dend_30 { pt3dadd( 89.4964, -32.048, 12.3521, 1.2 ) }
    dend_30 { pt3dadd( 89.868, -31.9375, 12.6409, 1.2 ) }
    dend_30 { pt3dadd( 91.2615, -31.2581, 13.8138, 0.12 ) }
    dend_30 { pt3dadd( 91.7713, -30.878, 14.2547, 0.12 ) }
    dend_30 { pt3dadd( 92.0593, -30.568, 14.4784, 0.24 ) }
    dend_30 { pt3dadd( 92.2567, -30.3165, 14.6581, 0.24 ) }
    dend_30 { pt3dadd( 92.641, -29.8442, 14.9739, 0.24 ) }
    dend_30 { pt3dadd( 92.857, -29.6053, 15.1294, 0.24 ) }
    dend_30 { pt3dadd( 93.2713, -29.2473, 15.3225, 0.24 ) }
    dend_30 { pt3dadd( 93.9464, -28.8128, 15.5952, 0.24 ) }
    dend_30 { pt3dadd( 95.194, -28.1209, 16.109, 0.12 ) }
    dend_30 { pt3dadd( 96.036, -27.7215, 16.4562, 0.12 ) }
    dend_30 { pt3dadd( 96.2704, -27.6284, 16.5533, 1.44 ) }
    dend_30 { pt3dadd( 97.1638, -27.3043, 16.9145, 2.52 ) }
    dend_30 { pt3dadd( 98.1366, -26.9483, 17.2866, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -15.9215, -306.222, -43.2272, 0.12 ) }
    dend_20 { pt3dadd( -15.342, -307.395, -43.3846, 0.12 ) }
    dend_20 { pt3dadd( -15.0432, -307.989, -43.4623, 0.12 ) }
    dend_20 { pt3dadd( -14.9056, -308.263, -43.4991, 0.48 ) }
    dend_20 { pt3dadd( -14.6631, -308.737, -43.5462, 0.48 ) }
    dend_20 { pt3dadd( -14.4002, -309.233, -43.587, 0.48 ) }
    dend_20 { pt3dadd( -14.2525, -309.489, -43.6354, 0.48 ) }
    dend_20 { pt3dadd( -14.1088, -309.7, -43.7045, 0.48 ) }
    dend_20 { pt3dadd( -13.7737, -310.114, -43.902, 1.68 ) }
    dend_20 { pt3dadd( -13.4167, -310.495, -44.133, 2.28 ) }
    dend_20 { pt3dadd( -13.0741, -310.822, -44.3654, 2.4 ) }
    dend_20 { pt3dadd( -12.0908, -311.675, -45.0684, 0.48 ) }
    dend_20 { pt3dadd( -11.4182, -312.232, -45.5784, 0.36 ) }
    dend_20 { pt3dadd( -11.0103, -312.547, -45.9091, 0.12 ) }
    dend_20 { pt3dadd( -10.789, -312.7, -46.1013, 0.12 ) }
    dend_20 { pt3dadd( -10.6236, -312.802, -46.2599, 0.12 ) }
    dend_20 { pt3dadd( -10.3665, -312.941, -46.5083, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.9215, -306.222, -43.2272, 0.12 ) }
    dend_19 { pt3dadd( -16.0164, -307.961, -43.2209, 0.12 ) }
    dend_19 { pt3dadd( -16.028, -308.399, -43.2516, 0.12 ) }
    dend_19 { pt3dadd( -16.0206, -308.847, -43.3048, 0.12 ) }
    dend_19 { pt3dadd( -16.0246, -309.589, -43.4604, 0.12 ) }
    dend_19 { pt3dadd( -16.0392, -309.957, -43.549, 0.48 ) }
    dend_19 { pt3dadd( -16.0912, -310.637, -43.7155, 0.48 ) }
    dend_19 { pt3dadd( -16.1181, -310.891, -43.8009, 0.12 ) }
    dend_19 { pt3dadd( -16.3766, -311.66, -44.1205, 0.12 ) }
    dend_19 { pt3dadd( -16.7428, -312.396, -44.4498, 0.12 ) }
    dend_19 { pt3dadd( -16.9757, -312.821, -44.6331, 1.68 ) }
    dend_19 { pt3dadd( -17.1659, -313.144, -44.7904, 1.8 ) }
    dend_19 { pt3dadd( -17.5077, -313.695, -45.082, 1.8 ) }
    dend_19 { pt3dadd( -18.5389, -315.407, -45.9609, 0.12 ) }
    dend_19 { pt3dadd( -18.8059, -315.866, -46.1988, 0.12 ) }
    dend_19 { pt3dadd( -19.2612, -316.815, -46.6531, 0.12 ) }
    dend_19 { pt3dadd( -19.5455, -317.536, -47.0309, 0.48 ) }
    dend_19 { pt3dadd( -19.6202, -317.781, -47.1608, 0.48 ) }
    dend_19 { pt3dadd( -19.717, -318.38, -47.4399, 0.48 ) }
    dend_19 { pt3dadd( -19.7367, -318.566, -47.5166, 0.12 ) }
    dend_19 { pt3dadd( -19.8331, -319.082, -47.7448, 0.12 ) }
    dend_19 { pt3dadd( -20.0084, -319.814, -48.0585, 0.12 ) }
    dend_19 { pt3dadd( -20.1001, -320.175, -48.1967, 0.96 ) }
    dend_19 { pt3dadd( -20.3262, -320.95, -48.4904, 1.44 ) }
    dend_19 { pt3dadd( -20.84, -322.392, -49.1092, 0.12 ) }
    dend_19 { pt3dadd( -21.1738, -323.256, -49.4658, 0.12 ) }
    dend_19 { pt3dadd( -21.3225, -323.631, -49.6164, 0.12 ) }
    dend_19 { pt3dadd( -21.4308, -323.904, -49.7132, 0.6 ) }
    dend_19 { pt3dadd( -21.6316, -324.348, -49.8894, 0.6 ) }
    dend_19 { pt3dadd( -22.0726, -325.097, -50.291, 0.12 ) }
    dend_19 { pt3dadd( -22.525, -325.764, -50.6927, 0.12 ) }
    dend_19 { pt3dadd( -22.5985, -325.867, -50.7624, 0.48 ) }
    dend_19 { pt3dadd( -22.7956, -326.182, -50.9498, 0.48 ) }
    dend_19 { pt3dadd( -23.2484, -327.111, -51.395, 0.48 ) }
    dend_19 { pt3dadd( -23.6454, -328.15, -51.7892, 0.24 ) }
    dend_19 { pt3dadd( -23.7803, -328.496, -51.9838, 0.12 ) }
    dend_19 { pt3dadd( -24.1244, -329.541, -52.6148, 0.12 ) }
    dend_19 { pt3dadd( -24.3466, -330.222, -53.0622, 1.44 ) }
    dend_19 { pt3dadd( -24.5137, -330.791, -53.4464, 2.16 ) }
    dend_19 { pt3dadd( -24.7056, -331.551, -53.9458, 2.28 ) }
    dend_19 { pt3dadd( -25.357, -334.347, -55.7358, 0.12 ) }
    dend_19 { pt3dadd( -25.6961, -335.866, -56.7558, 0.12 ) }
    dend_19 { pt3dadd( -25.8735, -336.703, -57.3444, 0.84 ) }
    dend_19 { pt3dadd( -25.9889, -337.289, -57.7589, 1.44 ) }
    dend_19 { pt3dadd( -26.0755, -337.777, -58.098, 0.96 ) }
    dend_19 { pt3dadd( -26.1234, -338.292, -58.3721, 0.12 ) }
    dend_19 { pt3dadd( -26.1318, -338.786, -58.5155, 0.12 ) }
    dend_19 { pt3dadd( -26.1633, -339.327, -58.6543, 0.12 ) }
    dend_19 { pt3dadd( -26.1868, -339.639, -58.7163, 0.36 ) }
    dend_19 { pt3dadd( -25.9214, -340.452, -57.982, 0.12 ) }
    dend_19 { pt3dadd( -25.3481, -341.75, -56.3684, 0.12 ) }
    dend_19 { pt3dadd( -25.1715, -342.05, -55.8754, 1.08 ) }
    dend_19 { pt3dadd( -24.9332, -342.373, -55.2155, 1.8 ) }
    dend_19 { pt3dadd( -24.7836, -342.537, -54.8117, 2.04 ) }
    dend_19 { pt3dadd( -21.8742, -345.221, -47.1237, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 13.6863, 103.486, 14.7393, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 14.0966, 105.178, 15.0358, 0.48 ) }
    dend_14 { pt3dadd( 14.252, 105.909, 15.1426, 0.48 ) }
    dend_14 { pt3dadd( 14.3354, 106.317, 15.1933, 0.48 ) }
    dend_14 { pt3dadd( 14.4304, 106.831, 15.2337, 0.48 ) }
    dend_14 { pt3dadd( 14.6018, 107.944, 15.2811, 0.48 ) }
    dend_14 { pt3dadd( 14.7319, 109.068, 15.3078, 0.48 ) }
    dend_14 { pt3dadd( 14.7428, 109.305, 15.2963, 0.72 ) }
    dend_14 { pt3dadd( 14.7677, 109.759, 15.3, 0.96 ) }
    dend_14 { pt3dadd( 14.8222, 110.513, 15.3415, 0.96 ) }
    dend_14 { pt3dadd( 14.9056, 111.155, 15.459, 0.36 ) }
    dend_14 { pt3dadd( 15.0998, 112.125, 15.7299, 0.36 ) }
    dend_14 { pt3dadd( 15.2438, 112.732, 15.9376, 0.36 ) }
    dend_14 { pt3dadd( 15.5624, 114.022, 16.4218, 1.56 ) }
    dend_14 { pt3dadd( 15.7096, 114.609, 16.6566, 2.16 ) }
    dend_14 { pt3dadd( 16.1056, 116.154, 17.3135, 0.48 ) }
    dend_14 { pt3dadd( 16.3709, 117.318, 17.7455, 0.48 ) }
    dend_14 { pt3dadd( 16.5015, 118.0, 17.9699, 0.48 ) }
    dend_14 { pt3dadd( 16.5469, 118.396, 18.0735, 0.48 ) }
    dend_14 { pt3dadd( 16.5383, 119.103, 18.1879, 1.68 ) }
    dend_14 { pt3dadd( 16.4917, 119.525, 18.2343, 1.92 ) }
    dend_14 { pt3dadd( 16.2679, 120.886, 18.2679, 1.08 ) }
    dend_14 { pt3dadd( 16.1551, 121.615, 18.287, 0.48 ) }
    dend_14 { pt3dadd( 16.0988, 122.14, 18.2984, 0.36 ) }
    dend_14 { pt3dadd( 16.0763, 123.109, 18.3141, 0.36 ) }
    dend_14 { pt3dadd( 16.138, 123.755, 18.349, 0.36 ) }
    dend_14 { pt3dadd( 16.3751, 124.929, 18.4127, 0.72 ) }
    dend_14 { pt3dadd( 16.513, 125.377, 18.4376, 0.36 ) }
    dend_14 { pt3dadd( 16.6869, 125.901, 18.4436, 0.36 ) }
    dend_14 { pt3dadd( 16.9728, 126.661, 18.4439, 0.36 ) }
    dend_14 { pt3dadd( 17.3626, 127.627, 18.4385, 0.84 ) }
    dend_14 { pt3dadd( 17.8289, 128.64, 18.5928, 1.92 ) }
    dend_14 { pt3dadd( 18.078, 129.338, 18.6299, 2.28 ) }
    dend_14 { pt3dadd( 18.2116, 129.85, 18.6102, 2.64 ) }
    dend_14 { pt3dadd( 18.286, 130.268, 18.5564, 2.76 ) }
    dend_14 { pt3dadd( 18.3445, 130.866, 18.4267, 2.76 ) }
    dend_14 { pt3dadd( 18.5125, 133.313, 17.6679, 1.56 ) }
    dend_14 { pt3dadd( 18.7624, 136.566, 16.4547, 0.12 ) }
    dend_14 { pt3dadd( 18.7918, 136.871, 16.3325, 0.12 ) }
    dend_14 { pt3dadd( 18.8229, 137.141, 16.2357, 0.12 ) }
    dend_14 { pt3dadd( 18.8583, 137.582, 16.0929, 0.72 ) }
    dend_14 { pt3dadd( 18.889, 138.216, 15.9176, 0.96 ) }
    dend_14 { pt3dadd( 18.8884, 138.97, 15.7153, 0.48 ) }
    dend_14 { pt3dadd( 18.9495, 139.607, 15.7151, 0.36 ) }
    dend_14 { pt3dadd( 19.0564, 141.04, 15.7299, 0.36 ) }
    dend_14 { pt3dadd( 19.0874, 141.5, 15.7771, 0.36 ) }
    dend_14 { pt3dadd( 19.1039, 141.855, 15.8319, 0.12 ) }
    dend_14 { pt3dadd( 19.1402, 142.766, 16.047, 0.96 ) }
    dend_14 { pt3dadd( 19.1736, 143.4, 16.2367, 1.32 ) }
    dend_14 { pt3dadd( 19.2047, 143.804, 16.3257, 1.2 ) }
    dend_14 { pt3dadd( 19.3877, 145.048, 16.7363, 0.48 ) }
    dend_14 { pt3dadd( 19.5515, 145.937, 17.056, 0.24 ) }
    dend_14 { pt3dadd( 19.6874, 146.598, 17.2954, 1.2 ) }
    dend_14 { pt3dadd( 19.8171, 147.163, 17.4974, 1.68 ) }
    dend_14 { pt3dadd( 20.1131, 148.332, 17.9151, 1.68 ) }
    dend_14 { pt3dadd( 20.6398, 150.291, 18.5999, 1.8 ) }
    dend_14 { pt3dadd( 20.8516, 151.046, 18.8294, 0.96 ) }
    dend_14 { pt3dadd( 21.1176, 151.826, 19.1394, 1.08 ) }
    dend_14 { pt3dadd( 21.3425, 152.435, 19.3836, 0.36 ) }
    dend_14 { pt3dadd( 21.8168, 153.723, 19.8401, 0.36 ) }
    dend_14 { pt3dadd( 22.0774, 154.498, 20.0693, 0.36 ) }
    dend_14 { pt3dadd( 22.2461, 155.048, 20.1541, 1.08 ) }
    dend_14 { pt3dadd( 22.6719, 156.495, 20.3599, 1.2 ) }
    dend_14 { pt3dadd( 23.0005, 157.704, 20.4906, 0.96 ) }
    dend_14 { pt3dadd( 23.2978, 158.957, 20.563, 0.36 ) }
    dend_14 { pt3dadd( 23.5094, 160.073, 20.4942, 0.24 ) }
    dend_14 { pt3dadd( 23.615, 160.784, 20.3958, 0.6 ) }
    dend_14 { pt3dadd( 23.6779, 161.256, 20.3246, 0.12 ) }
    dend_14 { pt3dadd( 23.7395, 161.66, 20.2529, 0.24 ) }
    dend_14 { pt3dadd( 23.9639, 162.871, 20.067, 0.24 ) }
    dend_14 { pt3dadd( 24.1606, 163.881, 19.9174, 0.24 ) }
    dend_14 { pt3dadd( 24.2921, 164.697, 19.7266, 1.68 ) }
    dend_14 { pt3dadd( 24.4513, 165.907, 19.4182, 2.52 ) }
    dend_14 { pt3dadd( 24.5444, 166.926, 19.172, 0.48 ) }
    dend_14 { pt3dadd( 24.6097, 167.909, 18.9445, 0.48 ) }
    dend_14 { pt3dadd( 24.638, 168.862, 18.7561, 0.72 ) }
    dend_14 { pt3dadd( 24.6202, 169.909, 18.615, 1.08 ) }
    dend_14 { pt3dadd( 24.5698, 170.614, 18.5545, 1.68 ) }
    dend_14 { pt3dadd( 24.4404, 171.532, 18.5056, 1.2 ) }
    dend_14 { pt3dadd( 24.2999, 172.299, 18.5329, 0.36 ) }
    dend_14 { pt3dadd( 24.1087, 173.297, 18.6308, 0.36 ) }
    dend_14 { pt3dadd( 23.987, 173.97, 18.7542, 0.36 ) }
    dend_14 { pt3dadd( 23.8489, 174.73, 18.9312, 0.36 ) }
    dend_14 { pt3dadd( 23.6806, 175.667, 19.1438, 2.04 ) }
    dend_14 { pt3dadd( 23.6169, 176.077, 19.242, 2.4 ) }
    dend_14 { pt3dadd( 23.503, 177.054, 19.4228, 2.4 ) }
    dend_14 { pt3dadd( 23.4229, 178.549, 19.5514, 0.36 ) }
    dend_14 { pt3dadd( 23.4369, 179.473, 19.5454, 0.36 ) }
    dend_14 { pt3dadd( 23.5022, 180.297, 19.527, 1.44 ) }
    dend_14 { pt3dadd( 23.5989, 180.937, 19.5042, 2.16 ) }
    dend_14 { pt3dadd( 23.8672, 182.417, 19.455, 0.48 ) }
    dend_14 { pt3dadd( 24.0355, 183.265, 19.4376, 0.12 ) }
    dend_14 { pt3dadd( 24.1544, 183.85, 19.4121, 0.6 ) }
    dend_14 { pt3dadd( 24.4417, 185.212, 19.4461, 0.36 ) }
    dend_14 { pt3dadd( 24.5704, 185.872, 19.5218, 0.24 ) }
    dend_14 { pt3dadd( 24.6849, 186.63, 19.6877, 0.24 ) }
    dend_14 { pt3dadd( 24.7197, 187.05, 19.8053, 0.24 ) }
    dend_14 { pt3dadd( 24.7414, 187.828, 19.9814, 0.36 ) }
    dend_14 { pt3dadd( 24.7487, 188.698, 20.095, 0.36 ) }
    dend_14 { pt3dadd( 24.786, 189.342, 20.1318, 0.36 ) }
    dend_14 { pt3dadd( 24.8563, 189.856, 20.1646, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 25.0459, 190.741, 20.1928, 1.68 ) }
    dend_14 { pt3dadd( 25.1986, 191.378, 20.1476, 2.4 ) }
    dend_14 { pt3dadd( 25.3062, 191.82, 20.0749, 2.4 ) }
    dend_14 { pt3dadd( 25.6412, 193.009, 19.8722, 0.24 ) }
    dend_14 { pt3dadd( 25.8136, 193.576, 19.7816, 0.24 ) }
    dend_14 { pt3dadd( 25.921, 193.932, 19.7333, 0.48 ) }
    dend_14 { pt3dadd( 26.2623, 195.154, 19.6382, 0.24 ) }
    dend_14 { pt3dadd( 26.4027, 195.887, 19.6136, 0.24 ) }
    dend_14 { pt3dadd( 26.4732, 196.669, 19.5904, 0.24 ) }
    dend_14 { pt3dadd( 26.4752, 197.299, 19.6121, 0.72 ) }
    dend_14 { pt3dadd( 26.4717, 197.845, 19.6756, 0.84 ) }
    dend_14 { pt3dadd( 26.4705, 198.22, 19.7354, 0.36 ) }
    dend_14 { pt3dadd( 26.4715, 198.939, 19.8369, 0.36 ) }
    dend_14 { pt3dadd( 26.4624, 199.718, 19.8546, 0.48 ) }
    dend_14 { pt3dadd( 26.444, 200.861, 19.745, 0.36 ) }
    dend_14 { pt3dadd( 26.4612, 201.497, 19.626, 0.36 ) }
    dend_14 { pt3dadd( 26.4968, 201.935, 19.5441, 0.96 ) }
    dend_14 { pt3dadd( 26.6226, 202.966, 19.2847, 0.96 ) }
    dend_14 { pt3dadd( 26.7228, 203.442, 19.1838, 0.36 ) }
    dend_14 { pt3dadd( 26.8228, 203.839, 19.1312, 0.36 ) }
    dend_14 { pt3dadd( 27.0952, 204.937, 19.0422, 2.4 ) }
    dend_14 { pt3dadd( 27.3777, 206.103, 19.0487, 3.25 ) }
    dend_14 { pt3dadd( 27.6174, 207.177, 19.1478, 2.16 ) }
    dend_14 { pt3dadd( 27.9135, 208.69, 19.358, 0.24 ) }
    dend_14 { pt3dadd( 28.0981, 209.801, 19.5131, 0.12 ) }
    dend_14 { pt3dadd( 28.2215, 210.733, 19.6264, 0.24 ) }
    dend_14 { pt3dadd( 28.2426, 211.05, 19.6588, 0.36 ) }
    dend_14 { pt3dadd( 28.2394, 211.876, 19.6763, 0.36 ) }
    dend_14 { pt3dadd( 28.1862, 212.915, 19.6577, 1.32 ) }
    dend_14 { pt3dadd( 28.1393, 213.558, 19.6007, 0.48 ) }
    dend_14 { pt3dadd( 28.1347, 213.931, 19.567, 0.12 ) }
    dend_14 { pt3dadd( 28.1644, 214.577, 19.5042, 0.12 ) }
    dend_14 { pt3dadd( 28.2261, 215.321, 19.4471, 0.12 ) }
    dend_14 { pt3dadd( 28.2861, 215.781, 19.4226, 0.84 ) }
    dend_14 { pt3dadd( 28.4859, 217.057, 19.405, 1.56 ) }
    dend_14 { pt3dadd( 28.5769, 217.569, 19.4046, 1.68 ) }
    dend_14 { pt3dadd( 28.7798, 218.499, 19.4146, 0.12 ) }
    dend_14 { pt3dadd( 29.0074, 219.295, 19.4087, 0.12 ) }
    dend_14 { pt3dadd( 29.205, 219.679, 19.5057, 0.24 ) }
    dend_14 { pt3dadd( 29.339, 219.825, 19.5923, 0.12 ) }
    dend_14 { pt3dadd( 29.7561, 220.063, 19.8822, 0.12 ) }
    dend_14 { pt3dadd( 30.0469, 220.176, 20.1024, 0.12 ) }
    dend_14 { pt3dadd( 31.0972, 220.432, 20.9593, 3.25 ) }
    dend_14 { pt3dadd( 34.1539, 220.833, 23.5737, 0.12 ) }
    dend_14 { pt3dadd( 34.4377, 220.848, 23.8301, 0.12 ) }
    dend_14 { pt3dadd( 34.6821, 220.843, 24.0603, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 13.6863, 103.486, 14.7393, 0.12 ) }
    dend_13 { pt3dadd( 11.4779, 103.984, 16.0449, 0.12 ) }
    dend_13 { pt3dadd( 10.9552, 104.103, 16.3764, 0.12 ) }
    dend_13 { pt3dadd( 10.5478, 104.199, 16.5896, 0.96 ) }
    dend_13 { pt3dadd( 9.50504, 104.421, 17.0701, 0.12 ) }
    dend_13 { pt3dadd( 8.76148, 104.566, 17.3288, 0.12 ) }
    dend_13 { pt3dadd( 8.32067, 104.653, 17.4663, 0.12 ) }
    dend_13 { pt3dadd( 7.66956, 104.79, 17.6369, 1.08 ) }
    dend_13 { pt3dadd( 6.35048, 105.042, 18.0529, 0.36 ) }
    dend_13 { pt3dadd( 5.07737, 105.27, 18.4642, 0.36 ) }
    dend_13 { pt3dadd( 3.57438, 105.575, 19.1333, 0.36 ) }
    dend_13 { pt3dadd( 2.90627, 105.697, 19.4474, 0.36 ) }
    dend_13 { pt3dadd( 1.81791, 105.841, 20.2976, 0.36 ) }
    dend_13 { pt3dadd( 1.30761, 105.854, 20.9097, 0.36 ) }
    dend_13 { pt3dadd( 0.8637, 105.784, 21.7239, 0.36 ) }
    dend_13 { pt3dadd( 0.0621933, 105.54, 23.713, 1.92 ) }
    dend_13 { pt3dadd( -0.289844, 105.345, 24.9243, 1.92 ) }
    dend_13 { pt3dadd( -1.19481, 104.547, 28.7717, 0.12 ) }
    dend_13 { pt3dadd( -1.35255, 104.322, 29.6727, 0.12 ) }
    dend_13 { pt3dadd( -1.40863, 104.168, 30.2267, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.78251, 128.431, -10.0664, 0.12 ) }
    dend_11 { pt3dadd( 2.54611, 129.566, -11.2302, 0.12 ) }
    dend_11 { pt3dadd( 2.50976, 129.782, -11.4055, 0.12 ) }
    dend_11 { pt3dadd( 2.45853, 130.189, -11.6588, 0.24 ) }
    dend_11 { pt3dadd( 2.41347, 131.559, -12.442, 0.24 ) }
    dend_11 { pt3dadd( 2.42422, 132.07, -12.7037, 0.24 ) }
    dend_11 { pt3dadd( 2.44243, 132.432, -12.8736, 0.24 ) }
    dend_11 { pt3dadd( 2.55217, 133.202, -13.1411, 1.68 ) }
    dend_11 { pt3dadd( 2.66102, 133.737, -13.3437, 1.68 ) }
    dend_11 { pt3dadd( 3.08047, 135.337, -13.9481, 0.12 ) }
    dend_11 { pt3dadd( 3.26581, 135.973, -14.1721, 0.12 ) }
    dend_11 { pt3dadd( 3.33769, 136.185, -14.2625, 0.6 ) }
    dend_11 { pt3dadd( 3.49457, 136.597, -14.465, 0.48 ) }
    dend_11 { pt3dadd( 3.91907, 137.595, -15.0202, 0.12 ) }
    dend_11 { pt3dadd( 4.15991, 138.11, -15.3305, 0.12 ) }
    dend_11 { pt3dadd( 4.2214, 138.239, -15.3939, 0.12 ) }
    dend_11 { pt3dadd( 4.35663, 138.532, -15.5332, 0.96 ) }
    dend_11 { pt3dadd( 4.49333, 138.834, -15.6609, 0.96 ) }
    dend_11 { pt3dadd( 4.63989, 139.173, -15.798, 0.48 ) }
    dend_11 { pt3dadd( 4.97142, 139.981, -16.0613, 0.12 ) }
    dend_11 { pt3dadd( 5.4231, 141.087, -16.424, 0.12 ) }
    dend_11 { pt3dadd( 5.70593, 141.782, -16.6599, 1.8 ) }
    dend_11 { pt3dadd( 5.85273, 142.146, -16.7847, 2.16 ) }
    dend_11 { pt3dadd( 6.30746, 143.272, -17.1442, 0.12 ) }
    dend_11 { pt3dadd( 6.64629, 144.089, -17.3824, 0.12 ) }
    dend_11 { pt3dadd( 6.77588, 144.405, -17.4572, 0.96 ) }
    dend_11 { pt3dadd( 6.97936, 144.901, -17.5697, 0.24 ) }
    dend_11 { pt3dadd( 7.17164, 145.372, -17.6703, 0.24 ) }
    dend_11 { pt3dadd( 7.47606, 146.078, -17.8204, 1.68 ) }
    dend_11 { pt3dadd( 7.72227, 146.603, -17.9177, 0.12 ) }
    dend_11 { pt3dadd( 7.94917, 147.028, -17.9923, 0.12 ) }
    dend_11 { pt3dadd( 8.28666, 147.565, -18.1557, 0.6 ) }
    dend_11 { pt3dadd( 8.56852, 147.963, -18.3034, 0.12 ) }
    dend_11 { pt3dadd( 9.20112, 148.796, -18.6686, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( 9.32925, 148.956, -18.7459, 0.12 ) }
    dend_11 { pt3dadd( 9.84807, 149.61, -19.0702, 1.92 ) }
    dend_11 { pt3dadd( 11.0871, 151.182, -19.8172, 0.12 ) }
    dend_11 { pt3dadd( 11.6887, 151.972, -20.1602, 0.12 ) }
    dend_11 { pt3dadd( 11.8598, 152.217, -20.2396, 0.84 ) }
    dend_11 { pt3dadd( 12.0348, 152.506, -20.3053, 0.12 ) }
    dend_11 { pt3dadd( 12.4194, 153.276, -20.4093, 0.12 ) }
    dend_11 { pt3dadd( 12.6452, 153.88, -20.3664, 1.68 ) }
    dend_11 { pt3dadd( 12.7533, 154.271, -20.2357, 1.2 ) }
    dend_11 { pt3dadd( 12.9278, 154.949, -19.9488, 0.12 ) }
    dend_11 { pt3dadd( 13.0816, 155.541, -19.6363, 0.12 ) }
    dend_11 { pt3dadd( 13.1919, 155.944, -19.3833, 0.6 ) }
    dend_11 { pt3dadd( 13.5056, 156.981, -18.6375, 0.48 ) }
    dend_11 { pt3dadd( 13.664, 157.489, -18.2707, 0.48 ) }
    dend_11 { pt3dadd( 13.79, 157.866, -17.9964, 0.48 ) }
    dend_11 { pt3dadd( 13.9408, 158.3, -17.7173, 0.12 ) }
    dend_11 { pt3dadd( 14.0469, 158.594, -17.5578, 0.12 ) }
    dend_11 { pt3dadd( 14.2427, 159.172, -17.3531, 1.44 ) }
    dend_11 { pt3dadd( 14.3447, 159.54, -17.2871, 1.68 ) }
    dend_11 { pt3dadd( 14.5146, 160.274, -17.1945, 0.12 ) }
    dend_11 { pt3dadd( 14.7031, 161.231, -17.1147, 0.12 ) }
    dend_11 { pt3dadd( 14.8533, 162.078, -17.0784, 1.92 ) }
    dend_11 { pt3dadd( 15.0121, 163.07, -17.0504, 0.12 ) }
    dend_11 { pt3dadd( 15.1746, 164.117, -17.0367, 0.12 ) }
    dend_11 { pt3dadd( 15.2369, 164.503, -17.0372, 0.6 ) }
    dend_11 { pt3dadd( 15.2669, 164.694, -17.0414, 0.12 ) }
    dend_11 { pt3dadd( 15.3929, 165.568, -17.0614, 0.12 ) }
    dend_11 { pt3dadd( 15.4735, 166.164, -17.1214, 1.08 ) }
    dend_11 { pt3dadd( 15.5154, 166.463, -17.1674, 0.72 ) }
    dend_11 { pt3dadd( 15.5451, 166.67, -17.2163, 0.12 ) }
    dend_11 { pt3dadd( 15.6542, 167.405, -17.4303, 0.12 ) }
    dend_11 { pt3dadd( 15.7582, 168.096, -17.6576, 1.44 ) }
    dend_11 { pt3dadd( 15.9498, 169.311, -18.1864, 0.12 ) }
    dend_11 { pt3dadd( 16.0119, 169.656, -18.3447, 0.12 ) }
    dend_11 { pt3dadd( 16.0297, 169.743, -18.3841, 0.48 ) }
    dend_11 { pt3dadd( 16.0741, 169.94, -18.4648, 0.12 ) }
    dend_11 { pt3dadd( 16.2372, 170.565, -18.6714, 0.48 ) }
    dend_11 { pt3dadd( 16.4611, 171.331, -18.817, 0.12 ) }
    dend_11 { pt3dadd( 16.7766, 172.307, -18.9698, 0.12 ) }
    dend_11 { pt3dadd( 16.8381, 172.489, -19.0043, 0.72 ) }
    dend_11 { pt3dadd( 17.0484, 173.122, -19.1286, 1.44 ) }
    dend_11 { pt3dadd( 17.2096, 173.606, -19.221, 1.8 ) }
    dend_11 { pt3dadd( 17.4226, 174.204, -19.3258, 1.68 ) }
    dend_11 { pt3dadd( 17.8591, 175.463, -19.5137, 0.12 ) }
    dend_11 { pt3dadd( 18.0147, 175.921, -19.619, 0.12 ) }
    dend_11 { pt3dadd( 18.1636, 176.368, -19.7424, 0.12 ) }
    dend_11 { pt3dadd( 18.3217, 176.88, -19.9251, 1.32 ) }
    dend_11 { pt3dadd( 18.4283, 177.245, -20.0685, 1.32 ) }
    dend_11 { pt3dadd( 18.496, 177.507, -20.1759, 1.32 ) }
    dend_11 { pt3dadd( 18.6468, 178.246, -20.44, 0.12 ) }
    dend_11 { pt3dadd( 18.7719, 178.898, -20.7497, 0.12 ) }
    dend_11 { pt3dadd( 18.8726, 179.55, -21.1549, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.78251, 128.431, -10.0664, 0.12 ) }
    dend_10 { pt3dadd( 6.27256, 128.022, 11.0763, 0.12 ) }
    dend_10 { pt3dadd( 6.41243, 128.008, 11.8866, 0.12 ) }
    dend_10 { pt3dadd( 6.50304, 128.0, 12.3884, 0.12 ) }
    dend_10 { pt3dadd( 6.82382, 127.971, 14.0853, 0.84 ) }
    dend_10 { pt3dadd( 6.93161, 127.962, 14.6566, 0.84 ) }
    dend_10 { pt3dadd( 7.13288, 127.927, 15.9626, 0.36 ) }
    dend_10 { pt3dadd( 7.44733, 128.046, 15.4886, 0.36 ) }
    dend_10 { pt3dadd( 7.71275, 128.182, 14.9899, 0.36 ) }
    dend_10 { pt3dadd( 8.00219, 128.346, 14.3926, 0.36 ) }
    dend_10 { pt3dadd( 8.66338, 128.734, 13.0023, 0.36 ) }
    dend_10 { pt3dadd( 10.0327, 129.589, 10.0568, 0.36 ) }
    dend_10 { pt3dadd( 10.7715, 130.067, 8.52285, 2.04 ) }
    dend_10 { pt3dadd( 11.9236, 130.811, 6.21505, 1.56 ) }
    dend_10 { pt3dadd( 12.4534, 131.149, 5.2514, 0.12 ) }
    dend_10 { pt3dadd( 12.7152, 131.311, 4.83487, 0.12 ) }
    dend_10 { pt3dadd( 13.5209, 131.729, 3.85251, 1.2 ) }
    dend_10 { pt3dadd( 14.2145, 131.991, 3.27582, 0.48 ) }
    dend_10 { pt3dadd( 14.6124, 132.111, 3.01578, 0.12 ) }
    dend_10 { pt3dadd( 15.7385, 132.428, 2.445, 0.12 ) }
    dend_10 { pt3dadd( 16.895, 132.769, 1.76854, 1.32 ) }
    dend_10 { pt3dadd( 17.4171, 132.929, 1.42596, 1.68 ) }
    dend_10 { pt3dadd( 18.9483, 133.461, 0.273922, 0.12 ) }
    dend_10 { pt3dadd( 19.4077, 133.65, -0.16245, 0.12 ) }
    dend_10 { pt3dadd( 20.0769, 133.955, -0.946083, 0.6 ) }
    dend_10 { pt3dadd( 21.3056, 134.515, -2.58873, 0.12 ) }
    dend_10 { pt3dadd( 21.7233, 134.689, -3.16506, 0.12 ) }
    dend_10 { pt3dadd( 22.8817, 135.145, -4.82885, 1.8 ) }
    dend_10 { pt3dadd( 24.088, 135.588, -6.54017, 1.8 ) }
    dend_10 { pt3dadd( 25.3203, 135.97, -8.38564, 0.48 ) }
    dend_10 { pt3dadd( 25.7613, 136.072, -9.02185, 0.48 ) }
    dend_10 { pt3dadd( 26.2143, 136.141, -9.58679, 0.48 ) }
    dend_10 { pt3dadd( 27.1373, 136.241, -10.6701, 1.44 ) }
    dend_10 { pt3dadd( 27.695, 136.281, -11.2732, 1.68 ) }
    dend_10 { pt3dadd( 29.7439, 136.479, -13.3686, 0.36 ) }
    dend_10 { pt3dadd( 30.6499, 136.658, -14.3027, 0.36 ) }
    dend_10 { pt3dadd( 31.4291, 136.935, -15.3054, 1.68 ) }
    dend_10 { pt3dadd( 32.1254, 137.276, -16.3246, 1.2 ) }
    dend_10 { pt3dadd( 33.0558, 137.867, -17.8589, 0.36 ) }
    dend_10 { pt3dadd( 33.6576, 138.342, -18.9444, 0.36 ) }
    dend_10 { pt3dadd( 34.4123, 139.107, -20.4693, 1.68 ) }
    dend_10 { pt3dadd( 35.7085, 140.691, -23.4439, 0.24 ) }
    dend_10 { pt3dadd( 35.983, 141.063, -24.1, 0.24 ) }
    dend_10 { pt3dadd( 36.3194, 141.508, -24.8321, 0.84 ) }
    dend_10 { pt3dadd( 36.5968, 141.838, -25.3598, 0.96 ) }
    dend_10 { pt3dadd( 37.3289, 142.502, -26.4978, 0.24 ) }
    dend_10 { pt3dadd( 37.8032, 142.8, -27.0642, 0.24 ) }
    dend_10 { pt3dadd( 38.7769, 143.192, -27.9834, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 39.2135, 143.298, -28.4735, 1.68 ) }
    dend_10 { pt3dadd( 39.957, 143.365, -29.5912, 0.36 ) }
    dend_10 { pt3dadd( 40.3098, 143.348, -30.2131, 0.36 ) }
    dend_10 { pt3dadd( 40.5648, 143.298, -30.7247, 0.36 ) }
    dend_10 { pt3dadd( 41.5883, 143.011, -32.9464, 0.96 ) }
    dend_10 { pt3dadd( 42.7286, 142.618, -35.5148, 1.68 ) }
    dend_10 { pt3dadd( 44.0874, 142.103, -38.5975, 0.6 ) }
    dend_10 { pt3dadd( 44.3485, 141.987, -39.1827, 0.48 ) }
    dend_10 { pt3dadd( 45.3261, 141.489, -41.3095, 2.04 ) }
    dend_10 { pt3dadd( 45.6684, 141.28, -42.0066, 2.52 ) }
    dend_10 { pt3dadd( 46.7206, 140.544, -43.8328, 0.36 ) }
    dend_10 { pt3dadd( 47.0372, 140.323, -44.2637, 0.36 ) }
    dend_10 { pt3dadd( 47.5873, 139.995, -44.8249, 0.48 ) }
    dend_10 { pt3dadd( 48.7861, 139.315, -45.9319, 0.36 ) }
    dend_10 { pt3dadd( 49.2269, 139.051, -46.2922, 0.36 ) }
    dend_10 { pt3dadd( 49.4774, 138.89, -46.4919, 0.36 ) }
    dend_10 { pt3dadd( 50.7435, 138.069, -47.3623, 0.36 ) }
    dend_10 { pt3dadd( 51.7983, 137.396, -48.0091, 1.08 ) }
    dend_10 { pt3dadd( 52.5294, 136.957, -48.3699, 1.8 ) }
    dend_10 { pt3dadd( 53.4803, 136.425, -48.7045, 1.2 ) }
    dend_10 { pt3dadd( 54.2969, 136.024, -48.9574, 0.36 ) }
    dend_10 { pt3dadd( 55.4273, 135.528, -49.1752, 0.36 ) }
    dend_10 { pt3dadd( 56.5859, 135.083, -49.2798, 0.36 ) }
    dend_10 { pt3dadd( 57.4927, 134.796, -49.2974, 1.2 ) }
    dend_10 { pt3dadd( 58.6168, 134.53, -49.3086, 1.8 ) }
    dend_10 { pt3dadd( 60.1025, 134.277, -49.3389, 0.12 ) }
    dend_10 { pt3dadd( 62.2064, 134.015, -49.4325, 0.12 ) }
    dend_10 { pt3dadd( 63.3594, 133.891, -49.5211, 1.44 ) }
    dend_10 { pt3dadd( 64.0181, 133.799, -49.5962, 2.16 ) }
    dend_10 { pt3dadd( 65.1929, 133.563, -49.7537, 2.4 ) }
    dend_10 { pt3dadd( 66.7252, 133.137, -49.9579, 0.24 ) }
    dend_10 { pt3dadd( 67.3357, 132.894, -50.0362, 0.24 ) }
    dend_10 { pt3dadd( 67.9073, 132.58, -50.1411, 0.24 ) }
    dend_10 { pt3dadd( 68.9027, 131.903, -50.2601, 0.48 ) }
    dend_10 { pt3dadd( 69.553, 131.397, -50.3097, 0.12 ) }
    dend_10 { pt3dadd( 70.3204, 130.806, -50.3021, 0.12 ) }
    dend_10 { pt3dadd( 70.86, 130.435, -50.2305, 0.12 ) }
    dend_10 { pt3dadd( 71.4227, 130.127, -50.1405, 0.12 ) }
    dend_10 { pt3dadd( 72.1391, 129.83, -49.9334, 0.36 ) }
    dend_10 { pt3dadd( 72.6109, 129.689, -49.7659, 0.12 ) }
    dend_10 { pt3dadd( 74.0792, 129.309, -49.2181, 0.12 ) }
    dend_10 { pt3dadd( 75.3575, 129.013, -48.714, 1.44 ) }
    dend_10 { pt3dadd( 75.6854, 128.943, -48.5826, 1.56 ) }
    dend_10 { pt3dadd( 77.571, 128.526, -47.7965, 0.36 ) }
    dend_10 { pt3dadd( 78.1743, 128.356, -47.4424, 0.36 ) }
    dend_10 { pt3dadd( 78.5314, 128.223, -47.1713, 0.36 ) }
    dend_10 { pt3dadd( 78.9546, 127.985, -46.7675, 0.36 ) }
    dend_10 { pt3dadd( 79.271, 127.765, -46.5024, 0.36 ) }
    dend_10 { pt3dadd( 79.4965, 127.584, -46.2909, 0.36 ) }
    dend_10 { pt3dadd( 81.0175, 126.222, -44.8882, 0.12 ) }
    dend_10 { pt3dadd( 81.3124, 125.958, -44.6164, 0.12 ) }
    dend_10 { pt3dadd( 81.6445, 125.671, -44.2942, 0.12 ) }
    dend_10 { pt3dadd( 82.776, 124.756, -43.2293, 2.4 ) }
    dend_10 { pt3dadd( 84.7217, 123.307, -41.585, 0.12 ) }
    dend_10 { pt3dadd( 85.2746, 122.913, -41.1802, 0.12 ) }
    dend_10 { pt3dadd( 85.9779, 122.431, -40.6943, 0.36 ) }
    dend_10 { pt3dadd( 86.6606, 121.964, -40.178, 0.12 ) }
    dend_10 { pt3dadd( 87.2239, 121.579, -39.7278, 0.12 ) }
    dend_10 { pt3dadd( 87.757, 121.201, -39.2779, 1.08 ) }
    dend_10 { pt3dadd( 88.2148, 120.875, -38.895, 1.08 ) }
    dend_10 { pt3dadd( 89.7728, 119.7, -37.4627, 0.36 ) }
    dend_10 { pt3dadd( 90.1769, 119.355, -37.0932, 0.36 ) }
    dend_10 { pt3dadd( 90.5, 119.063, -36.8448, 0.12 ) }
    dend_10 { pt3dadd( 90.6939, 118.881, -36.6674, 0.12 ) }
    dend_10 { pt3dadd( 91.7646, 117.87, -35.6299, 0.12 ) }
    dend_10 { pt3dadd( 92.2513, 117.433, -35.1882, 1.32 ) }
    dend_10 { pt3dadd( 92.9961, 116.804, -34.5699, 2.04 ) }
    dend_10 { pt3dadd( 93.8664, 116.14, -33.8516, 1.32 ) }
    dend_10 { pt3dadd( 95.8209, 114.785, -32.2317, 0.12 ) }
    dend_10 { pt3dadd( 96.0855, 114.629, -32.0242, 0.12 ) }
    dend_10 { pt3dadd( 96.5376, 114.432, -31.5704, 0.24 ) }
    dend_10 { pt3dadd( 97.2121, 114.188, -30.8216, 0.24 ) }
    dend_10 { pt3dadd( 97.7254, 114.05, -30.1856, 0.24 ) }
    dend_10 { pt3dadd( 98.4271, 113.92, -29.2216, 0.24 ) }
    dend_10 { pt3dadd( 98.7829, 113.886, -28.7559, 0.84 ) }
    dend_10 { pt3dadd( 101.281, 113.743, -25.0657, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 36.3684, 101.342, 12.2908, 0.72 ) }
    dend_6 { pt3dadd( 35.9489, 101.05, 11.6954, 0.72 ) }
    dend_6 { pt3dadd( 35.3348, 100.703, 10.9421, 0.6 ) }
    dend_6 { pt3dadd( 34.9354, 100.477, 10.4522, 0.36 ) }
    dend_6 { pt3dadd( 34.787, 100.393, 10.27, 0.48 ) }
    dend_6 { pt3dadd( 34.4162, 100.184, 9.81528, 0.36 ) }
    dend_6 { pt3dadd( 33.9635, 99.9281, 9.25995, 0.12 ) }
    dend_6 { pt3dadd( 33.793, 99.8598, 9.07794, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 36.3684, 101.342, 12.2908, 0.48 ) }
    dend_5 { pt3dadd( 36.3218, 102.13, 12.383, 0.48 ) }
    dend_5 { pt3dadd( 36.2821, 102.805, 12.5055, 0.48 ) }
    dend_5 { pt3dadd( 36.1961, 103.519, 12.658, 0.6 ) }
    dend_5 { pt3dadd( 36.1021, 104.09, 12.8032, 0.48 ) }
    dend_5 { pt3dadd( 35.9511, 104.947, 13.0324, 0.48 ) }
    dend_5 { pt3dadd( 35.7817, 105.915, 13.2936, 2.04 ) }
    dend_5 { pt3dadd( 35.6734, 106.714, 13.5042, 1.92 ) }
    dend_5 { pt3dadd( 35.5406, 107.646, 13.6989, 1.44 ) }
    dend_5 { pt3dadd( 35.4266, 108.386, 13.8192, 1.08 ) }
    dend_5 { pt3dadd( 35.335, 109.044, 13.9026, 0.96 ) }
    dend_5 { pt3dadd( 35.2995, 109.382, 13.9122, 0.72 ) }
    dend_5 { pt3dadd( 35.2527, 110.179, 13.8282, 1.08 ) }
    dend_5 { pt3dadd( 35.2728, 111.498, 13.63, 0.48 ) }
    dend_5 { pt3dadd( 35.3171, 112.052, 13.5413, 0.48 ) }
    dend_5 { pt3dadd( 35.4211, 112.97, 13.4045, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 35.5052, 113.781, 13.2865, 1.92 ) }
    dend_5 { pt3dadd( 35.6229, 114.853, 13.1957, 1.08 ) }
    dend_5 { pt3dadd( 35.727, 115.604, 13.1865, 0.72 ) }
    dend_5 { pt3dadd( 35.8013, 115.998, 13.2259, 0.24 ) }
    dend_5 { pt3dadd( 36.0294, 116.901, 13.3115, 0.24 ) }
    dend_5 { pt3dadd( 36.1922, 117.567, 13.3795, 0.72 ) }
    dend_5 { pt3dadd( 36.3582, 118.335, 13.5106, 0.12 ) }
    dend_5 { pt3dadd( 36.5232, 119.003, 13.6359, 0.12 ) }
    dend_5 { pt3dadd( 36.7493, 119.944, 13.7923, 1.8 ) }
    dend_5 { pt3dadd( 37.0227, 121.138, 13.9993, 2.76 ) }
    dend_5 { pt3dadd( 37.1953, 121.909, 14.1583, 2.64 ) }
    dend_5 { pt3dadd( 37.4826, 123.193, 14.4452, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 19.9768, -125.603, -45.0922, 0.12 ) }
    dend_39 { pt3dadd( 20.769, -126.369, -45.0272, 0.12 ) }
    dend_39 { pt3dadd( 21.4264, -127.004, -44.9733, 0.12 ) }
    dend_39 { pt3dadd( 22.0911, -127.646, -44.9188, 0.6 ) }
    dend_39 { pt3dadd( 22.44, -127.983, -44.8902, 0.12 ) }
    dend_39 { pt3dadd( 23.2765, -128.791, -44.8216, 0.12 ) }
    dend_39 { pt3dadd( 23.7148, -129.214, -44.7857, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.9768, -125.603, -45.0922, 0.12 ) }
    dend_36 { pt3dadd( 19.811, -126.691, -45.1032, 0.12 ) }
    dend_36 { pt3dadd( 19.6791, -127.37, -45.0036, 0.12 ) }
    dend_36 { pt3dadd( 19.595, -127.87, -44.8958, 0.96 ) }
    dend_36 { pt3dadd( 19.5251, -128.364, -44.786, 1.56 ) }
    dend_36 { pt3dadd( 19.4387, -129.142, -44.6201, 0.12 ) }
    dend_36 { pt3dadd( 19.4087, -129.55, -44.5383, 0.12 ) }
    dend_36 { pt3dadd( 19.3738, -130.825, -44.1925, 1.08 ) }
    dend_36 { pt3dadd( 19.3806, -131.376, -44.0324, 0.72 ) }
    dend_36 { pt3dadd( 19.4015, -131.805, -43.9142, 0.12 ) }
    dend_36 { pt3dadd( 19.421, -132.32, -43.7325, 0.12 ) }
    dend_36 { pt3dadd( 19.4279, -132.788, -43.5539, 0.12 ) }
    dend_36 { pt3dadd( 19.4238, -133.525, -43.299, 1.44 ) }
    dend_36 { pt3dadd( 19.4188, -133.919, -43.1866, 1.68 ) }
    dend_36 { pt3dadd( 19.3996, -134.226, -43.097, 1.68 ) }
    dend_36 { pt3dadd( 19.2883, -135.512, -42.752, 0.12 ) }
    dend_36 { pt3dadd( 19.2097, -136.098, -42.6134, 0.12 ) }
    dend_36 { pt3dadd( 19.0961, -136.717, -42.5059, 0.12 ) }
    dend_36 { pt3dadd( 19.0508, -136.93, -42.4869, 0.96 ) }
    dend_36 { pt3dadd( 18.9337, -137.42, -42.4658, 0.96 ) }
    dend_36 { pt3dadd( 18.8298, -137.867, -42.4708, 0.12 ) }
    dend_36 { pt3dadd( 18.5488, -139.06, -42.5942, 0.12 ) }
    dend_36 { pt3dadd( 18.3967, -139.667, -42.6608, 0.96 ) }
    dend_36 { pt3dadd( 18.252, -140.217, -42.7362, 1.68 ) }
    dend_36 { pt3dadd( 18.1543, -140.603, -42.7952, 1.92 ) }
    dend_36 { pt3dadd( 18.059, -141.006, -42.875, 1.92 ) }
    dend_36 { pt3dadd( 17.8389, -141.999, -43.1175, 0.12 ) }
    dend_36 { pt3dadd( 17.7556, -142.372, -43.243, 0.12 ) }
    dend_36 { pt3dadd( 17.5536, -143.198, -43.5623, 0.12 ) }
    dend_36 { pt3dadd( 17.4546, -143.56, -43.7509, 0.6 ) }
    dend_36 { pt3dadd( 17.2975, -144.031, -44.0452, 0.12 ) }
    dend_36 { pt3dadd( 17.1086, -144.502, -44.3789, 0.12 ) }
    dend_36 { pt3dadd( 16.9036, -144.985, -44.7486, 1.2 ) }
    dend_36 { pt3dadd( 16.6024, -145.653, -45.277, 1.68 ) }
    dend_36 { pt3dadd( 16.1388, -146.612, -46.0288, 0.12 ) }
    dend_36 { pt3dadd( 15.9163, -147.094, -46.4004, 0.12 ) }
    dend_36 { pt3dadd( 15.7792, -147.443, -46.6406, 0.12 ) }
    dend_36 { pt3dadd( 15.656, -147.858, -46.9196, 0.12 ) }
    dend_36 { pt3dadd( 15.6058, -148.111, -47.0752, 1.2 ) }
    dend_36 { pt3dadd( 15.5377, -148.667, -47.3876, 1.56 ) }
    dend_36 { pt3dadd( 15.4778, -149.66, -47.8889, 0.24 ) }
    dend_36 { pt3dadd( 15.4698, -150.393, -48.2662, 0.24 ) }
    dend_36 { pt3dadd( 15.4637, -151.125, -48.6564, 0.72 ) }
    dend_36 { pt3dadd( 15.4525, -151.484, -48.8503, 0.84 ) }
    dend_36 { pt3dadd( 15.4338, -151.868, -49.0533, 0.12 ) }
    dend_36 { pt3dadd( 15.4133, -152.134, -49.1961, 0.12 ) }
    dend_36 { pt3dadd( 15.3538, -152.57, -49.4475, 0.12 ) }
    dend_36 { pt3dadd( 15.3053, -152.881, -49.6436, 0.12 ) }
    dend_36 { pt3dadd( 15.2209, -153.279, -49.7095, 0.12 ) }
    dend_36 { pt3dadd( 15.1764, -153.476, -49.701, 0.12 ) }
    dend_36 { pt3dadd( 14.9959, -154.181, -49.5807, 1.32 ) }
    dend_36 { pt3dadd( 14.7598, -154.955, -49.3973, 0.12 ) }
    dend_36 { pt3dadd( 14.5571, -155.65, -49.1531, 0.12 ) }
    dend_36 { pt3dadd( 13.6967, -158.731, -47.678, 0.6 ) }
    dend_36 { pt3dadd( 13.3518, -159.887, -46.9137, 1.32 ) }
    dend_36 { pt3dadd( 13.2462, -160.2, -46.6333, 2.04 ) }
    dend_36 { pt3dadd( 13.1149, -160.535, -46.2175, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 98.1366, -26.9483, 17.2866, 0.24 ) }
    dend_32 { pt3dadd( 98.7996, -27.0057, 17.6357, 0.24 ) }
    dend_32 { pt3dadd( 99.0919, -27.0255, 17.79, 0.24 ) }
    dend_32 { pt3dadd( 100.159, -27.0925, 18.3458, 0.24 ) }
    dend_32 { pt3dadd( 100.474, -27.1048, 18.4991, 0.96 ) }
    dend_32 { pt3dadd( 101.07, -27.1119, 18.7429, 1.56 ) }
    dend_32 { pt3dadd( 101.593, -27.1126, 18.9645, 0.36 ) }
    dend_32 { pt3dadd( 102.604, -27.0951, 19.3766, 0.12 ) }
    dend_32 { pt3dadd( 102.833, -27.0863, 19.4668, 1.2 ) }
    dend_32 { pt3dadd( 103.552, -27.0326, 19.7116, 2.16 ) }
    dend_32 { pt3dadd( 104.444, -26.9244, 20.039, 0.12 ) }
    dend_32 { pt3dadd( 105.365, -26.7564, 20.3856, 0.12 ) }
    dend_32 { pt3dadd( 105.527, -26.7117, 20.4467, 0.84 ) }
    dend_32 { pt3dadd( 105.843, -26.5858, 20.5579, 0.96 ) }
    dend_32 { pt3dadd( 106.263, -26.3883, 20.719, 0.12 ) }
    dend_32 { pt3dadd( 106.646, -26.1489, 20.896, 0.12 ) }
    dend_32 { pt3dadd( 106.769, -26.0328, 20.9647, 0.6 ) }
    dend_32 { pt3dadd( 107.056, -25.6742, 21.0511, 0.12 ) }
    dend_32 { pt3dadd( 107.242, -25.3814, 21.125, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 98.1366, -26.9483, 17.2866, 0.6 ) }
    dend_31 { pt3dadd( 98.0915, -25.7109, 17.3927, 0.6 ) }
    dend_31 { pt3dadd( 98.0866, -25.369, 17.4226, 0.6 ) }
    dend_31 { pt3dadd( 98.1156, -24.6428, 17.4606, 0.84 ) }
    dend_31 { pt3dadd( 98.2263, -23.6593, 17.4869, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 98.3507, -22.5403, 17.4989, 0.12 ) }
    dend_31 { pt3dadd( 98.3955, -22.1595, 17.4983, 0.96 ) }
    dend_31 { pt3dadd( 98.5402, -21.3334, 17.4906, 1.2 ) }
    dend_31 { pt3dadd( 98.7471, -20.3996, 17.4572, 0.12 ) }
    dend_31 { pt3dadd( 99.0223, -19.3616, 17.3916, 0.12 ) }
    dend_31 { pt3dadd( 99.2694, -18.5532, 17.2947, 0.12 ) }
    dend_31 { pt3dadd( 99.5954, -17.6537, 17.1417, 0.12 ) }
    dend_31 { pt3dadd( 99.7571, -17.2529, 17.0706, 0.12 ) }
    dend_31 { pt3dadd( 100.161, -16.3564, 16.908, 1.68 ) }
    dend_31 { pt3dadd( 100.317, -16.0718, 16.7921, 1.92 ) }
    dend_31 { pt3dadd( 100.966, -15.1121, 16.1829, 0.12 ) }
    dend_31 { pt3dadd( 101.559, -14.3644, 15.5344, 0.12 ) }
    dend_31 { pt3dadd( 101.814, -14.0348, 15.191, 1.32 ) }
    dend_31 { pt3dadd( 102.016, -13.7387, 14.8116, 1.68 ) }
    dend_31 { pt3dadd( 103.17, -11.9844, 11.9438, 0.36 ) }
    dend_31 { pt3dadd( 103.309, -11.7934, 11.5663, 0.36 ) }
    dend_31 { pt3dadd( 103.497, -11.5505, 10.9941, 0.12 ) }
    dend_31 { pt3dadd( 103.768, -11.2025, 10.0485, 0.12 ) }
    dend_31 { pt3dadd( 104.269, -10.5118, 8.0653, 0.48 ) }
    dend_31 { pt3dadd( 104.544, -10.0562, 6.77114, 1.44 ) }
    dend_31 { pt3dadd( 104.714, -9.60168, 5.73667, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -10.3665, -312.941, -46.5083, 0.24 ) }
    dend_22 { pt3dadd( -10.2227, -312.651, -46.7254, 0.24 ) }
    dend_22 { pt3dadd( -10.0402, -312.283, -47.0009, 0.24 ) }
    dend_22 { pt3dadd( -9.81949, -311.838, -47.334, 0.6 ) }
    dend_22 { pt3dadd( -9.59648, -311.389, -47.6707, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.3665, -312.941, -46.5083, 0.12 ) }
    dend_21 { pt3dadd( -10.0342, -313.175, -46.2347, 0.12 ) }
    dend_21 { pt3dadd( -9.81871, -313.304, -46.0557, 0.12 ) }
    dend_21 { pt3dadd( -9.62821, -313.391, -45.9276, 0.12 ) }
    dend_21 { pt3dadd( -9.37817, -313.476, -45.8004, 0.12 ) }
    dend_21 { pt3dadd( -9.23901, -313.511, -45.7429, 0.12 ) }
    dend_21 { pt3dadd( -8.10279, -313.721, -45.3553, 0.12 ) }
    dend_21 { pt3dadd( -7.61487, -313.749, -45.239, 2.04 ) }
    dend_21 { pt3dadd( -7.09229, -313.739, -45.1258, 1.56 ) }
    dend_21 { pt3dadd( -6.53915, -313.696, -45.0253, 0.36 ) }
    dend_21 { pt3dadd( -6.23904, -313.656, -44.9615, 0.36 ) }
    dend_21 { pt3dadd( -5.89829, -313.598, -44.891, 0.36 ) }
    dend_21 { pt3dadd( -5.21447, -313.464, -44.7818, 0.36 ) }
    dend_21 { pt3dadd( -4.94112, -313.408, -44.7001, 0.6 ) }
    dend_21 { pt3dadd( -4.75366, -313.371, -44.6193, 0.6 ) }
    dend_21 { pt3dadd( -3.93987, -313.198, -44.199, 0.36 ) }
    dend_21 { pt3dadd( -3.76, -313.16, -44.1028, 0.6 ) }
    dend_21 { pt3dadd( -3.50532, -313.11, -43.9846, 0.6 ) }
    dend_21 { pt3dadd( -3.0409, -313.031, -43.8202, 0.12 ) }
    dend_21 { pt3dadd( -2.84838, -313.013, -43.7898, 0.12 ) }
    dend_21 { pt3dadd( -2.49777, -313.009, -43.7985, 0.12 ) }
    dend_21 { pt3dadd( -2.1678, -313.042, -43.8972, 1.08 ) }
    dend_21 { pt3dadd( -1.54626, -313.178, -44.1536, 0.12 ) }
    dend_21 { pt3dadd( -1.41584, -313.228, -44.2194, 0.12 ) }
    dend_21 { pt3dadd( -1.06555, -313.402, -44.4138, 0.12 ) }
    dend_21 { pt3dadd( -0.846947, -313.534, -44.5376, 0.48 ) }
    dend_21 { pt3dadd( -0.497807, -313.778, -44.7395, 0.12 ) }
    dend_21 { pt3dadd( -0.292422, -313.936, -44.8543, 0.12 ) }
    dend_21 { pt3dadd( 0.0624285, -314.218, -45.015, 0.12 ) }
    dend_21 { pt3dadd( 0.313519, -314.418, -45.1355, 0.12 ) }
    dend_21 { pt3dadd( 0.524311, -314.581, -45.2429, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 13.1149, -160.535, -46.2175, 0.48 ) }
    dend_38 { pt3dadd( 12.728, -161.866, -49.5618, 0.48 ) }
    dend_38 { pt3dadd( 12.6571, -162.085, -50.0816, 0.48 ) }
    dend_38 { pt3dadd( 12.495, -162.609, -51.1776, 0.12 ) }
    dend_38 { pt3dadd( 12.4255, -162.872, -51.6819, 0.12 ) }
    dend_38 { pt3dadd( 12.3293, -163.236, -52.3807, 1.2 ) }
    dend_38 { pt3dadd( 12.208, -163.695, -53.2607, 0.12 ) }
    dend_38 { pt3dadd( 12.1716, -163.819, -53.4316, 0.12 ) }
    dend_38 { pt3dadd( 12.0565, -164.207, -53.9794, 0.72 ) }
    dend_38 { pt3dadd( 11.9838, -164.442, -54.2324, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 13.1149, -160.535, -46.2175, 0.12 ) }
    dend_37 { pt3dadd( 12.3285, -161.504, -47.3749, 0.12 ) }
    dend_37 { pt3dadd( 12.0196, -161.948, -47.6992, 0.12 ) }
    dend_37 { pt3dadd( 11.9304, -162.078, -47.7781, 0.6 ) }
    dend_37 { pt3dadd( 11.6731, -162.442, -47.9713, 0.24 ) }
    dend_37 { pt3dadd( 11.5738, -162.58, -48.0171, 0.24 ) }
    dend_37 { pt3dadd( 11.3031, -162.943, -48.099, 0.24 ) }
    dend_37 { pt3dadd( 11.0905, -163.216, -48.0688, 0.6 ) }
    dend_37 { pt3dadd( 10.7567, -163.566, -48.0163, 0.12 ) }
    dend_37 { pt3dadd( 10.465, -163.824, -47.9798, 0.12 ) }
    dend_37 { pt3dadd( 9.84612, -164.27, -47.9293, 0.84 ) }
    dend_37 { pt3dadd( 9.69743, -164.366, -47.9121, 0.84 ) }
    dend_37 { pt3dadd( 9.41474, -164.526, -47.8616, 0.12 ) }
    dend_37 { pt3dadd( 9.25808, -164.603, -47.823, 0.12 ) }
    dend_37 { pt3dadd( 8.84911, -164.772, -47.6868, 0.84 ) }
    dend_37 { pt3dadd( 8.68236, -164.823, -47.6464, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 11
    dend_54 nseg = 3
    dend_41 nseg = 7
    dend_55 nseg = 3
    dend_53 nseg = 5
    dend_50 nseg = 3
    dend_34 nseg = 5
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_60 nseg = 21
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_56 nseg = 3
    dend_52 nseg = 7
    dend_51 nseg = 5
    dend_47 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_DBC_519f8feedc_0_0


