// Cell: dSTUT214_L5_BP_f600080385_0_0
/*
{
  "id" : "dSTUT214_L5_BP_f600080385_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-3.26027, 8.04783, 2.879, 0.83", "-6.34812, 10.3215, 3.34469, 1.11", "-8.16875, 11.6612, 3.58693, 0.83", "-9.93755, 12.9515, 3.80398, 0.83", "-10.9849, 13.6872, 3.92292, 1.11", "-14.2644, 15.9863, 4.30411, 1.11", "-20.1302, 19.9223, 4.97795, 0.83", "-22.2434, 21.2863, 5.20046, 0.83", "-23.9169, 22.3343, 5.33867, 0.83", "-25.5488, 23.373, 5.45831, 0.83", "-26.8772, 24.229, 5.52286, 0.55", "-27.8757, 24.8087, 5.58838, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "5.0179, 6.10841, -6.34651, 0.55", "8.29205, 6.78126, -7.07769, 0.55", "10.1919, 6.95111, -8.04519, 0.83", "13.1988, 7.13187, -9.8424, 0.55", "14.6503, 7.21913, -10.7099, 1.38", "18.2192, 7.43366, -12.843, 0.55", "19.7392, 7.36102, -13.8608, 0.83", "27.602, 6.02867, -19.5794, 0.55", "28.3627, 5.8495, -20.2085, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.690448, -10.4829, 3.43258, 1.11", "-0.750798, -15.5415, 5.34149, 1.11", "-0.775375, -17.6016, 6.11892, 0.83", "-0.808029, -20.3386, 7.15178, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.92161, 10.056, -1.42964, 1.11", "1.01945, 12.5488, -1.43077, 1.11", "1.15509, 16.6176, -1.27776, 1.38", "1.16642, 16.8443, -1.26465, 1.38", "1.48119, 19.6502, -1.05818, 0.83", "1.92662, 22.6198, -0.663472, 0.83", "2.69481, 25.9791, 0.23122, 0.83", "3.13762, 27.2558, 0.747814, 0.83", "3.5798, 28.1822, 1.22963, 1.11", "4.88858, 30.4404, 2.48775, 0.55", "6.41002, 32.8004, 3.99177, 0.83", "8.42698, 35.2316, 5.7237, 0.55", "9.46438, 36.2431, 6.51885, 0.83", "10.9059, 37.615, 7.74927, 0.55", "12.6815, 39.3607, 9.40419, 0.55", "15.1449, 41.9874, 11.9156, 0.55", "17.8586, 44.9882, 14.687, 0.55", "19.5469, 46.9384, 16.7373, 0.55", "21.5879, 49.4071, 19.6116, 0.55", "22.0082, 49.9031, 20.2615, 0.83", "23.1094, 51.2151, 22.09, 0.55", "24.0443, 52.2383, 23.5305, 0.83", "26.1869, 55.0262, 26.9368, 0.55", "27.0152, 56.0417, 27.9436, 0.83", "27.8106, 56.7904, 28.6422, 0.55", "28.6115, 57.4348, 29.1905, 0.83", "30.4041, 58.634, 30.2079, 0.83", "32.7914, 60.2633, 31.329, 0.83", "34.268, 61.3374, 31.8495, 0.55", "35.3929, 62.2658, 32.2516, 0.55", "38.3451, 64.6641, 33.26, 0.83", "40.2578, 66.2013, 33.8313, 0.55", "43.1709, 68.4526, 34.577, 0.55", "45.849, 70.3404, 35.1519, 0.55", "48.2497, 71.9397, 35.6009, 0.55", "51.2942, 73.8131, 36.0286, 0.55", "53.1606, 74.7324, 36.2308, 0.55", "54.4454, 75.2486, 36.2155, 0.55", "56.1636, 75.6356, 36.0539, 0.55", "58.7444, 75.8164, 35.6084, 0.55", "60.3589, 75.7368, 35.2715, 0.55", "62.7074, 75.5625, 34.9427, 0.55", "67.1533, 75.3688, 34.7097, 0.55", "70.6243, 75.372, 34.7721, 0.55", "74.2873, 75.5443, 35.0557, 0.55", "76.6229, 75.7336, 35.4228, 0.55", "82.6605, 76.7571, 36.7735, 0.55", "86.2127, 77.6312, 37.8426, 0.55", "88.858, 78.4589, 38.8969, 0.55", "90.4595, 79.2235, 39.5988, 0.55", "92.315, 80.3556, 40.4003, 0.55", "95.4735, 82.5796, 41.4638, 0.55", "96.2048, 83.1136, 41.6044, 0.55", "98.313, 84.541, 41.8682, 0.55", "100.25, 86.0594, 42.1008, 0.83", "101.308, 86.9015, 42.2107, 0.55", "102.895, 88.3447, 42.3094, 0.83", "111.103, 96.077, 45.0544, 0.83", "118.267, 104.92, 46.8359, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-27.8757, 24.8087, 5.58838, 0.55", "-29.7722, 26.0215, 4.45647, 0.55", "-31.8345, 27.3402, 3.22563, 0.55", "-34.3232, 28.9317, 1.74028, 0.55", "-36.3782, 30.2459, 0.513783, 0.83", "-38.1003, 31.3471, -0.514018, 0.55", "-41.2968, 33.3912, -2.42177, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.8757, 24.8087, 5.58838, 0.55", "-30.3063, 25.2185, 5.34266, 0.55", "-32.8869, 25.5818, 5.33966, 0.55", "-35.8116, 25.9904, 5.40781, 0.55", "-40.0388, 26.5445, 5.89684, 0.55", "-43.5702, 26.914, 6.56041, 0.55", "-47.2702, 27.2494, 7.41669, 0.55", "-50.837, 27.3478, 8.63746, 0.55", "-53.8993, 27.1499, 9.99448, 0.55", "-57.7045, 26.652, 12.1059, 0.55", "-59.3532, 26.3217, 13.2615, 0.55", "-61.1323, 25.9477, 14.5889, 0.55", "-64.2722, 25.0546, 16.7878, 0.55", "-65.9492, 24.5802, 17.688, 0.55", "-67.7055, 24.0309, 18.6212, 0.55", "-69.7991, 23.3999, 19.5142, 0.55", "-72.076, 22.7591, 20.4203, 0.55", "-75.3271, 21.8356, 21.6415, 0.55", "-79.6797, 20.8761, 22.8712, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.3627, 5.8495, -20.2085, 0.55", "33.5543, 6.41814, -21.332, 0.55", "36.5036, 6.70729, -22.421, 0.55", "39.3892, 6.8879, -23.5701, 0.55", "41.3461, 6.94029, -24.3752, 0.55", "44.1942, 6.95051, -25.5482, 0.55", "50.0759, 6.9203, -28.1917, 0.55", "56.7285, 6.97482, -31.638, 0.55", "59.91, 6.88062, -33.5827, 0.55", "61.6027, 6.82374, -34.7472, 0.55", "63.4585, 6.79192, -36.0972, 0.55", "66.7524, 6.6447, -38.5186, 0.55", "67.9337, 6.5368, -39.4574, 0.55", "72.9489, 6.31463, -43.7925, 0.55", "76.5027, 6.28985, -47.1135, 0.55", "78.5551, 6.33019, -49.0719, 0.55", "80.5985, 6.35284, -51.0285, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.3627, 5.8495, -20.2085, 0.83", "30.4276, 6.94933, -20.1878, 0.83", "31.6074, 7.58089, -20.2291, 0.55", "33.344, 8.55703, -20.4327, 0.83", "34.5123, 9.24384, -20.6025, 0.55", "36.1253, 10.2296, -20.8105, 0.83", "38.0669, 11.4452, -20.9878, 0.55", "39.0417, 11.9866, -21.042, 0.55", "41.2758, 12.9363, -21.0305, 0.83", "43.2979, 13.5501, -20.7753, 0.55", "44.4287, 13.8743, -20.5259, 0.83", "46.1282, 14.3828, -19.9724, 0.55", "48.5734, 15.1317, -18.8653, 0.55", "51.9642, 15.9948, -17.1666, 0.55", "55.1952, 16.6926, -15.3329, 0.55", "57.7544, 17.2164, -13.8362, 0.55", "61.9743, 18.0969, -11.3456, 0.55", "65.0652, 18.8196, -9.45023, 0.55", "66.9371, 19.3979, -8.22773, 0.55", "70.3958, 20.7917, -5.92178, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.808029, -20.3386, 7.15178, 0.83", "-1.02988, -22.8905, 7.04227, 0.83", "-1.24603, -25.3767, 6.93557, 0.83", "-1.48736, -28.1525, 6.81644, 0.83", "-1.61338, -29.6021, 6.75423, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.808029, -20.3386, 7.15178, 0.55", "0.142573, -22.4276, 8.34859, 0.55", "1.09073, -24.9663, 9.99347, 0.55", "1.87563, -28.2525, 12.4224, 0.55", "2.10224, -29.5229, 13.4263, 0.83", "2.49123, -32.7478, 16.4428, 0.55", "2.56491, -34.4019, 18.0719, 0.55", "2.67925, -37.6157, 21.3974, 0.83", "2.66956, -39.9938, 24.0601, 0.55", "2.47658, -41.9388, 26.2769, 0.55", "2.00699, -45.6133, 30.4313, 0.55", "1.62565, -48.5413, 33.7064, 0.55", "1.3783, -50.8938, 36.3516, 0.55", "1.23283, -53.4021, 39.0387, 0.28", "1.24966, -54.4538, 40.0913, 0.55", "1.29963, -56.3981, 41.909, 0.28", "1.65679, -59.4585, 44.1493, 0.55", "0.554998, -69.4351, 52.8645, 0.55", "-0.507206, -78.6487, 62.4704, 0.55", "-0.364618, -86.3105, 73.542, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-41.2968, 33.3912, -2.42177, 0.55", "-45.4671, 33.1559, -1.70728, 0.55", "-47.2736, 32.9069, -1.26763, 0.83", "-49.4532, 32.4403, -0.572054, 0.55", "-51.159, 32.033, 0.0722967, 0.83", "-55.6285, 31.0937, 1.78006, 0.55", "-57.3257, 30.7542, 2.44491, 0.28", "-60.2162, 30.1342, 3.73612, 0.55", "-64.0913, 29.3241, 5.46251, 0.55", "-67.0012, 28.7521, 6.67751, 0.55", "-70.8583, 28.0269, 8.21108, 0.28", "-71.8313, 27.8827, 8.52414, 0.55", "-73.8273, 27.627, 9.12266, 0.28", "-75.1524, 27.5223, 9.44429, 0.55", "-77.7952, 27.3739, 9.91394, 0.28", "-79.3199, 27.2476, 10.0979, 0.55", "-82.0039, 26.8597, 10.3747, 0.28", "-83.7886, 26.6122, 10.5057, 0.55", "-95.9345, 22.6655, 14.9384, 0.55", "-107.362, 17.3092, 19.7297, 0.55", "-118.345, 10.8531, 24.1034, 0.55", "-128.965, 3.31349, 27.3312, 0.55", "-138.665, -4.41284, 32.5064, 0.55", "-149.178, -11.4454, 37.0926, 0.55", "-160.153, -16.7667, 42.8944, 0.55", "-170.947, -22.9317, 48.124, 0.55", "-181.693, -28.4947, 54.1188, 0.55", "-191.96, -34.4201, 60.5779, 0.55", "-200.989, -41.8911, 67.2044, 0.55", "-210.307, -48.3801, 74.4953, 0.55", "-219.552, -55.8376, 80.8264, 0.55", "-227.447, -64.0979, 87.9037, 0.55", "-233.581, -72.081, 96.8503, 0.55", "-239.176, -81.8364, 104.095, 0.55", "-242.962, -91.9704, 111.944, 0.55", "-247.535, -101.664, 119.972, 0.55", "-253.596, -110.5, 128.069, 0.55", "-262.348, -117.224, 135.829, 0.55", "-269.913, -125.337, 143.438, 0.55", "-275.606, -132.115, 153.639, 0.55", "-283.287, -137.753, 163.229, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-41.2968, 33.3912, -2.42177, 0.55", "-42.7203, 34.4489, -4.6028, 0.55", "-43.7078, 35.6058, -6.94743, 0.55", "-44.586, 36.9728, -9.38353, 0.55", "-45.1359, 37.8288, -10.909, 0.55", "-46.1389, 39.3901, -13.6916, 0.83", "-46.8727, 40.5325, -15.7274, 0.55", "-47.6127, 42.1139, -18.6825, 0.83", "-47.794, 43.1306, -20.2894, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-79.6797, 20.8761, 22.8712, 0.28", "-80.7122, 18.8552, 22.9183, 0.28", "-81.2159, 17.9707, 22.8699, 0.28", "-81.871, 16.7148, 22.7524, 0.55", "-82.4083, 15.6141, 22.6556, 0.28", "-83.1976, 13.9422, 22.5267, 0.55", "-85.3784, 9.04849, 22.2165, 0.28", "-86.0964, 7.31068, 21.97, 0.55", "-87.19, 4.61943, 21.5018, 0.28", "-87.8221, 2.9983, 21.1504, 0.55", "-88.2609, 1.87637, 20.8826, 0.28", "-88.76, 0.590696, 20.585, 0.55", "-90.2512, -3.67415, 19.6799, 0.28", "-90.725, -4.97307, 19.3639, 0.55", "-91.5757, -6.99981, 18.6942, 0.28", "-92.2896, -8.32409, 18.1713, 0.28", "-92.9353, -9.22157, 17.8029, 0.55", "-95.1832, -11.7483, 16.8602, 0.28", "-96.2277, -12.7737, 16.5066, 0.55", "-98.7949, -15.1406, 15.5818, 0.28", "-101.368, -17.2568, 14.7363, 0.28", "-104.175, -19.3076, 13.8592, 0.28", "-105.461, -20.0916, 13.536, 0.55", "-111.492, -28.0507, 11.6037, 0.55", "-118.066, -35.8114, 11.6232, 0.55", "-124.639, -43.4461, 10.0638, 0.55", "-131.487, -50.6291, 7.55873, 0.55", "-138.531, -57.2609, 4.08366, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-79.6797, 20.8761, 22.8712, 0.55", "-80.6565, 20.809, 23.0037, 0.55", "-83.4099, 20.6073, 23.7352, 0.55", "-84.4449, 20.5038, 24.0644, 0.55", "-86.8797, 20.1888, 24.8735, 0.55", "-90.6244, 19.7483, 25.9379, 0.55", "-92.5696, 19.5779, 26.4585, 0.28", "-95.5981, 19.2525, 27.2069, 0.55", "-97.8483, 18.9703, 27.6802, 0.55", "-98.7986, 18.8451, 27.8818, 0.28", "-104.498, 18.0916, 29.0839, 0.55", "-107.166, 17.6296, 29.4786, 0.28", "-110.764, 17.0025, 29.7998, 0.28", "-113.867, 16.5128, 29.8966, 0.55", "-125.932, 16.1721, 32.9623, 0.55", "-137.581, 15.4728, 37.3051, 0.55", "-148.57, 13.5105, 42.798, 0.55", "-159.193, 13.4862, 49.2955, 0.55", "-168.257, 12.9546, 57.8197, 0.55", "-175.5, 12.9741, 67.9467, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "80.5985, 6.35284, -51.0285, 0.55", "84.604, 7.63652, -54.0726, 0.55", "85.8545, 8.02298, -55.1261, 0.55", "87.4073, 8.45567, -56.444, 0.55", "90.2142, 9.27861, -58.9996, 0.55", "93.1116, 10.058, -61.7754, 0.55", "94.5006, 10.3257, -63.1362, 0.83", "95.621, 10.507, -64.3677, 0.55", "96.4382, 10.6105, -65.3977, 0.83", "98.3285, 10.6519, -68.119, 0.55", "99.8436, 10.5463, -70.4259, 0.55", "101.586, 10.3767, -72.9891, 0.55", "103.541, 10.2612, -75.865, 0.55", "104.842, 10.1659, -77.8415, 0.55", "106.306, 10.0734, -80.1248, 0.55", "107.582, 10.0764, -82.1784, 0.55", "108.402, 10.1973, -83.5594, 0.55", "109.398, 10.6442, -86.2425, 0.55", "109.916, 10.9015, -87.926, 0.55", "110.292, 11.2308, -90.1583, 0.55", "110.73, 11.732, -93.9468, 0.55", "110.805, 11.8217, -94.8092, 0.28", "111.808, 12.7869, -105.344, 0.28", "112.193, 13.0673, -108.44, 0.83", "113.769, 13.8378, -119.51, 0.83", "114.578, 13.9957, -124.73, 0.83", "114.986, 13.9655, -126.88, 0.55", "115.492, 13.902, -128.993, 0.55", "117.073, 13.5491, -133.012, 0.55", "118.841, 13.1164, -136.599, 0.28", "119.433, 12.832, -136.919, 0.55", "120.776, 12.1084, -137.089, 0.28", "121.628, 11.6702, -137.048, 0.55", "122.515, 11.1734, -136.932, 0.28", "123.595, 10.6083, -136.725, 0.55", "125.23, 9.90645, -136.558, 0.28", "126.53, 9.32222, -136.48, 0.55", "127.991, 8.80669, -136.477, 0.28", "129.974, 8.17713, -136.643, 0.55", "132.207, 7.5674, -136.943, 0.55", "134.173, 7.10043, -137.328, 0.28", "136.896, 6.53202, -138.0, 0.55", "141.624, 5.85123, -139.608, 0.55", "143.733, 5.74035, -140.53, 0.55", "144.646, 5.76158, -141.007, 0.83", "146.385, 5.87058, -142.065, 0.55", "147.602, 6.01691, -142.857, 0.83", "150.896, 6.49973, -144.993, 0.55", "152.872, 6.69201, -146.392, 0.28", "153.693, 6.69306, -146.908, 0.55", "155.896, 6.4168, -148.147, 0.28", "156.65, 6.23571, -148.554, 0.55", "158.185, 5.67921, -149.183, 0.28", "159.715, 4.86383, -149.597, 0.55", "162.775, 2.84102, -149.921, 0.28", "164.174, 1.78735, -149.933, 0.55", "166.223, 0.0576341, -149.876, 0.28", "168.817, -2.15559, -149.698, 0.55", "170.702, -3.74257, -149.527, 0.55", "173.998, -6.41137, -149.135, 0.28", "175.365, -7.4, -149.071, 0.55", "177.751, -8.86995, -149.186, 0.28", "180.174, -10.0939, -149.41, 0.55", "181.539, -10.5515, -149.671, 0.28", "182.813, -10.7756, -149.946, 0.55", "186.455, -11.0934, -150.982, 0.28", "189.101, -11.1466, -151.704, 0.28", "191.442, -11.0356, -152.309, 0.55", "194.041, -10.8059, -153.076, 0.28", "194.706, -10.7208, -153.236, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "80.5985, 6.35284, -51.0285, 0.55", "80.5766, 5.34867, -52.896, 0.55", "80.428, 4.48028, -54.3665, 0.28", "80.2892, 3.62894, -55.61, 0.55", "80.1395, 1.80163, -58.289, 0.28", "80.1255, 1.70021, -58.4798, 0.55", "80.0786, 1.20039, -59.5524, 0.28", "79.971, 0.864868, -60.5417, 0.55", "79.8141, 0.571431, -61.652, 0.28", "79.5687, 0.204354, -63.2088, 0.55", "78.95, -0.742784, -67.0699, 0.55", "78.358, -1.57674, -70.6261, 0.55", "77.8649, -2.23698, -73.4684, 0.55", "77.3439, -2.89441, -76.2255, 0.55", "77.2074, -3.07463, -76.9178, 0.28", "77.0765, -3.29349, -77.618, 0.55", "76.9645, -3.64883, -78.5334, 0.28", "76.8989, -4.3814, -80.0798, 0.55", "76.9875, -6.04169, -82.6974, 0.55", "77.0459, -6.99904, -83.9934, 0.28", "77.0249, -7.92135, -85.3561, 0.55", "76.853, -9.14025, -87.3132, 0.28", "76.6137, -10.0801, -88.9132, 0.55", "76.1552, -11.4575, -91.2961, 0.28", "75.6977, -12.9249, -93.6947, 0.55", "74.987, -15.028, -97.1996, 0.28", "74.5669, -16.1356, -99.068, 0.55", "74.1064, -17.2379, -101.017, 0.28", "73.6841, -18.1516, -102.828, 0.28", "73.2308, -19.2221, -105.272, 0.55", "72.9465, -20.2736, -107.51, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "70.3958, 20.7917, -5.92178, 0.55", "72.9886, 20.2442, -5.57587, 0.55", "74.8646, 19.8108, -5.51383, 0.55", "78.957, 18.858, -5.59981, 0.55", "80.7859, 18.4245, -5.80887, 0.55", "82.779, 18.0115, -6.13136, 0.55", "85.4478, 17.5384, -6.74667, 0.55", "88.2429, 17.0191, -7.67848, 0.55", "89.6991, 16.7605, -8.34129, 0.55", "92.6347, 16.3131, -10.1022, 0.55", "93.985, 16.1266, -10.9556, 0.55", "97.1396, 15.6459, -13.0512, 0.55", "99.2712, 15.2316, -14.4682, 0.55", "100.844, 14.9027, -15.4383, 0.83", "103.351, 14.2787, -16.9762, 0.55", "105.804, 13.5291, -18.405, 0.83", "107.883, 12.7828, -19.5577, 0.55", "109.742, 12.1261, -20.477, 0.55", "110.806, 11.787, -20.9302, 0.83", "113.298, 10.977, -21.8513, 0.28", "114.546, 10.6091, -22.2187, 0.28", "115.744, 10.1905, -22.6522, 0.28", "117.041, 9.77328, -23.1204, 0.28", "119.117, 9.15253, -23.9067, 0.28", "119.955, 8.90799, -24.1955, 0.55", "121.972, 8.30455, -24.6807, 0.55", "125.612, 7.14849, -25.3738, 0.55", "126.62, 6.79406, -25.5255, 0.55", "127.521, 6.44144, -25.627, 0.83", "129.492, 5.70324, -25.6757, 0.55", "131.206, 5.05946, -25.6897, 0.55", "132.828, 4.45632, -25.694, 0.55", "134.08, 3.97504, -25.7372, 0.55", "136.048, 3.09712, -25.9297, 0.55", "138.345, 1.88865, -26.3258, 0.55", "141.865, -0.335147, -27.2762, 0.55", "143.767, -1.8156, -27.9817, 0.55", "145.386, -3.36847, -28.7374, 0.28", "145.858, -3.9357, -29.0146, 0.55", "146.868, -5.51305, -29.7533, 0.28", "147.699, -7.2753, -30.5222, 0.55", "148.438, -9.49544, -31.2749, 0.55", "148.945, -10.9693, -31.6978, 0.28", "149.135, -11.4953, -31.8215, 0.55", "149.631, -12.8067, -32.1117, 0.28", "150.319, -14.5226, -32.45, 0.55", "152.147, -18.6841, -33.1714, 0.55", "153.108, -20.7913, -33.4929, 0.55", "154.003, -22.7263, -33.7712, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "70.3958, 20.7917, -5.92178, 0.55", "73.1649, 20.5927, -3.95527, 0.55", "74.052, 20.536, -3.37185, 0.55", "77.351, 20.2102, -1.36553, 0.55", "81.0368, 19.9011, 0.940887, 0.55", "85.7628, 19.469, 4.0152, 0.55", "87.068, 19.3529, 4.85629, 0.55", "89.4073, 19.0672, 6.32544, 0.55", "91.9715, 18.8285, 7.85473, 0.55", "94.9522, 18.6553, 9.52071, 0.55", "97.7622, 18.5264, 11.1082, 0.55", "99.3041, 18.5348, 11.9245, 0.55", "101.116, 18.5929, 12.8903, 0.55", "103.357, 18.7324, 14.0593, 0.83", "107.022, 19.0347, 15.605, 0.55", "109.443, 19.1722, 16.4977, 0.83", "112.8, 19.2465, 17.5953, 0.55", "113.83, 19.221, 17.9068, 0.55", "117.018, 19.0108, 18.7773, 0.55", "122.712, 18.3671, 20.0455, 0.55", "126.874, 17.7031, 20.8351, 0.55", "130.166, 17.0197, 21.5041, 0.55", "133.521, 16.1355, 22.2617, 0.55", "134.227, 15.9312, 22.4206, 0.28", "135.656, 15.4648, 22.728, 0.83", "141.522, 13.4629, 24.0061, 0.55", "145.624, 12.0841, 24.8237, 0.55", "148.994, 11.0131, 25.5947, 0.55", "151.008, 10.3634, 26.0729, 0.83", "152.595, 9.87252, 26.4568, 0.28", "154.033, 9.43242, 26.7924, 0.55", "165.343, 8.17932, 31.5397, 0.55", "177.211, 5.63769, 33.7796, 0.55", "189.079, 4.35653, 36.89, 0.55", "199.707, 0.954817, 42.1629, 0.55", "209.564, -4.06019, 47.6148, 0.55", "220.189, -9.97422, 49.3377, 0.55", "230.539, -16.4666, 48.8133, 0.55", "242.007, -20.8386, 47.9958, 0.55", "253.362, -25.5611, 47.9417, 0.55", "265.214, -28.8993, 47.3932, 0.55", "277.077, -32.0913, 48.5013, 0.55", "288.133, -37.3155, 49.8123, 0.55", "299.59, -40.8307, 52.7484, 0.55", "310.654, -43.0376, 57.7445, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.61338, -29.6021, 6.75423, 1.38", "0.551277, -32.236, 5.47036, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.61338, -29.6021, 6.75423, 0.55", "-2.38743, -30.7198, 6.46629, 0.55", "-3.23066, -32.1406, 6.15606, 0.55", "-3.9015, -33.09, 5.91635, 0.55", "-4.42612, -33.8853, 5.61648, 0.55", "-5.52222, -35.5399, 4.83006, 0.55", "-6.28339, -36.649, 4.24988, 0.55", "-6.94609, -37.6432, 3.70217, 0.55", "-8.65825, -40.0727, 2.29199, 0.55", "-10.7313, -42.8934, 0.614396, 0.55", "-12.3249, -45.034, -0.721823, 0.55", "-13.3316, -46.4367, -1.59192, 0.55", "-14.4837, -48.114, -2.58296, 0.55", "-15.9377, -50.4986, -3.80498, 0.55", "-16.7788, -52.1706, -4.48542, 0.55", "-17.8441, -54.5555, -5.19239, 0.55", "-18.6896, -56.7743, -5.70046, 0.55", "-19.5171, -59.5221, -6.17493, 0.55", "-20.2737, -62.7274, -6.55342, 0.55", "-20.6489, -65.1583, -6.69093, 0.55", "-20.7894, -66.3606, -6.65076, 0.55", "-21.0198, -69.1703, -6.33984, 0.55", "-21.2185, -71.7948, -5.96346, 0.55", "-21.3677, -74.4253, -5.33969, 0.55", "-21.5024, -75.9345, -4.90832, 0.55", "-21.962, -80.5962, -3.39644, 0.55", "-22.0005, -80.9395, -3.2802, 0.55", "-22.2193, -83.0383, -2.50197, 0.55", "-22.8169, -86.8043, -1.09651, 0.55", "-22.9931, -88.0653, -0.702123, 0.55", "-23.1769, -90.0449, -0.433003, 0.55", "-23.1582, -90.7812, -0.487641, 0.55", "-22.7979, -93.2711, -1.07867, 0.55", "-22.3392, -94.8816, -1.75276, 0.55", "-21.3277, -97.4488, -3.30139, 0.55", "-19.8685, -100.583, -5.37858, 0.28", "-19.4531, -101.358, -5.98844, 0.55", "-18.7773, -102.534, -7.01167, 0.28", "-18.6732, -102.712, -7.17563, 0.55", "-18.1429, -103.683, -7.99558, 0.28", "-18.0157, -104.014, -8.20984, 0.55", "-17.5269, -105.731, -9.01963, 0.28", "-17.3853, -106.317, -9.29726, 0.55", "-17.0356, -108.012, -10.016, 0.28", "-16.924, -108.546, -10.2395, 0.55", "-16.5657, -110.387, -10.9877, 0.28", "-16.3948, -111.234, -11.3343, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.364618, -86.3105, 73.542, 0.55", "-2.11694, -92.2175, 80.9988, 0.55", "-4.43471, -97.1349, 89.0624, 0.55", "-6.837, -102.678, 96.6317, 0.55", "-9.45891, -108.206, 104.135, 0.55", "-11.6899, -114.935, 110.615, 0.55", "-13.5726, -121.423, 117.477, 0.55", "-15.6012, -129.442, 122.163, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.364618, -86.3105, 73.542, 0.55", "1.65647, -93.6082, 79.7236, 0.55", "3.23518, -101.914, 84.4581, 0.55", "3.35491, -109.965, 89.8327, 0.55", "2.49211, -118.286, 94.6184, 0.55", "2.05786, -126.662, 99.3746, 0.55", "2.01739, -134.764, 104.66, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.794, 43.1306, -20.2894, 0.83", "-47.4264, 44.2688, -21.4295, 0.83", "-46.6293, 47.0078, -23.9691, 0.55", "-46.2922, 48.1848, -24.9644, 0.83", "-45.9341, 49.4401, -25.9409, 0.55", "-45.5817, 50.7234, -26.758, 0.55", "-45.4066, 51.3643, -27.0826, 0.28", "-45.327, 51.7844, -27.1892, 0.55", "-45.0424, 53.1727, -27.2296, 0.28", "-44.9077, 53.7651, -27.2143, 0.55", "-44.4727, 55.8206, -27.0748, 0.28", "-44.1769, 57.4471, -26.909, 0.55", "-43.8491, 59.9842, -26.5753, 0.28", "-43.6468, 62.2126, -26.2423, 0.28", "-43.6115, 63.4591, -26.0352, 0.55", "-43.6653, 64.937, -25.7953, 0.28", "-43.7407, 65.6419, -25.6736, 0.55", "-44.0073, 67.3033, -25.473, 0.28", "-44.2579, 68.4135, -25.4056, 0.28", "-44.5257, 69.5054, -25.376, 0.28", "-44.6439, 70.0825, -25.3613, 0.55", "-44.9876, 72.4209, -25.3502, 0.28", "-45.2949, 75.1941, -25.3839, 0.55", "-45.3862, 76.1522, -25.3984, 0.55", "-45.4952, 77.1115, -25.3925, 0.55", "-45.8366, 79.1503, -25.4223, 0.55", "-46.148, 80.4891, -25.4783, 0.28", "-46.3263, 80.9955, -25.5109, 0.55", "-46.9118, 82.3637, -25.5756, 0.28", "-47.5927, 83.8223, -25.7094, 0.55", "-48.7684, 85.9202, -26.0015, 0.28", "-49.3557, 86.7956, -26.1601, 0.28", "-50.3256, 88.0163, -26.52, 0.55", "-51.419, 89.2897, -26.9714, 0.28", "-51.621, 89.4895, -27.0549, 0.55", "-52.3562, 90.1261, -27.3552, 0.28", "-54.9078, 92.1629, -28.3473, 0.55", "-58.4723, 94.6832, -29.8851, 0.28", "-59.1315, 95.1084, -30.2132, 0.55", "-60.9447, 96.2068, -31.1496, 0.28", "-61.7055, 96.6584, -31.5653, 0.28", "-62.3661, 97.0353, -31.9609, 0.55", "-64.3079, 97.9121, -33.2885, 0.28", "-65.6931, 98.3876, -34.1753, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.794, 43.1306, -20.2894, 0.55", "-48.0042, 44.3329, -20.2109, 0.55", "-48.1611, 45.0264, -20.1022, 0.28", "-48.4037, 45.4904, -19.9229, 0.55", "-48.961, 46.5558, -19.5113, 0.28", "-49.3524, 47.3041, -19.2222, 0.55", "-50.074, 48.6836, -18.6892, 0.28", "-50.5749, 49.3874, -18.2809, 0.55", "-52.504, 50.8846, -16.7532, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-138.531, -57.2609, 4.08366, 0.55", "-143.664, -64.4641, 2.88502, 0.55", "-147.351, -72.3354, 1.13035, 0.55", "-150.417, -79.8452, -2.55913, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-138.531, -57.2609, 4.08366, 0.55", "-145.295, -65.1516, 0.659949, 0.55", "-151.037, -73.1741, -4.05405, 0.55", "-156.338, -81.3404, -9.00422, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-175.5, 12.9741, 67.9467, 0.55", "-183.889, 12.6933, 73.6553, 0.55", "-192.722, 13.7348, 78.5274, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-175.5, 12.9741, 67.9467, 0.55", "-184.649, 11.8891, 70.8882, 0.55", "-193.729, 12.2754, 74.2103, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "72.9465, -20.2736, -107.51, 0.28", "79.6519, -20.5498, -122.729, 0.28", "80.2855, -20.6936, -124.138, 0.55", "81.3551, -20.9365, -126.517, 0.28", "82.2558, -21.1409, -128.52, 0.28", "83.448, -21.4116, -131.172, 0.55", "85.0199, -21.7684, -134.668, 0.55", "86.8084, -23.7561, -137.29, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "72.9465, -20.2736, -107.51, 0.55", "73.2279, -20.652, -109.213, 0.55", "73.2681, -20.7747, -109.961, 0.28", "73.299, -20.9493, -111.252, 0.55", "73.367, -21.3338, -114.097, 0.28", "73.4141, -21.6003, -116.069, 0.55", "73.4939, -22.0519, -119.41, 0.28", "73.5691, -22.4299, -123.668, 0.28", "73.5598, -22.5592, -125.64, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "154.003, -22.7263, -33.7712, 0.28", "156.006, -25.9609, -33.9042, 0.28", "158.515, -30.3301, -33.7409, 0.28", "160.094, -33.1954, -33.5272, 0.55", "161.062, -34.8063, -33.3353, 0.28", "161.575, -35.6754, -33.2243, 0.28", "164.12, -39.9487, -32.7375, 0.55", "164.709, -40.9352, -32.514, 0.28", "166.074, -43.5701, -31.7702, 0.55", "167.235, -45.8339, -31.208, 0.28", "168.262, -47.6707, -30.7819, 0.55", "169.463, -49.829, -30.3955, 0.55", "171.379, -53.1404, -30.1747, 0.55", "171.84, -53.944, -30.1483, 0.55", "173.475, -56.9294, -30.083, 0.28", "174.102, -58.1371, -30.0876, 0.55", "174.993, -59.6844, -30.0978, 0.28", "176.25, -61.8518, -30.209, 0.55", "178.358, -65.1331, -30.8662, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "154.003, -22.7263, -33.7712, 0.55", "151.922, -22.4648, -33.7593, 0.55", "150.231, -22.2525, -33.7496, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.551277, -32.236, 5.47036, 0.83", "0.683769, -32.5269, 5.41839, 0.83", "2.27968, -35.1114, 5.05968, 0.83", "3.6529, -37.3724, 4.58917, 0.55", "4.74844, -39.1762, 4.2138, 0.55", "7.07704, -43.0103, 3.41594, 0.83", "9.90147, -47.6608, 2.4482, 0.55", "11.4546, -50.0969, 1.98095, 0.83", "14.2515, -53.9806, 1.369, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.551277, -32.236, 5.47036, 0.55", "-1.93921, -33.0149, 3.75216, 0.55", "-4.61244, -33.851, 1.90789, 0.55", "-7.76822, -34.838, -0.269291, 0.55", "-11.6004, -36.0365, -2.91309, 0.55", "-13.775, -36.7166, -4.41336, 0.55", "-14.2118, -36.8533, -4.71474, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.01739, -134.764, 104.66, 0.55", "2.78703, -141.265, 109.059, 0.55", "4.13276, -148.311, 112.258, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.01739, -134.764, 104.66, 0.55", "1.72506, -142.087, 109.098, 0.55", "1.29633, -149.156, 113.95, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.504, 50.8846, -16.7532, 0.28", "-53.8983, 51.9809, -15.3175, 0.28", "-54.4322, 52.3856, -14.7067, 0.55", "-55.9651, 53.5527, -12.8998, 0.28", "-56.7171, 54.1447, -12.0893, 0.55", "-58.761, 55.7599, -9.97709, 0.28", "-60.8383, 57.4014, -7.83031, 0.55", "-64.2776, 59.9322, -4.27331, 0.28", "-65.01, 60.4769, -3.51415, 0.55", "-66.6149, 61.7839, -1.88901, 0.28", "-67.2411, 62.3326, -1.24444, 0.55", "-74.1071, 65.7276, 3.87214, 0.55", "-81.3554, 70.3686, 6.99422, 0.55", "-87.8107, 75.0724, 11.4487, 0.55", "-93.0626, 80.875, 16.0357, 0.55", "-99.1813, 86.4231, 19.8417, 0.55", "-106.145, 90.5022, 24.2182, 0.55", "-112.668, 93.7266, 29.8748, 0.55", "-118.486, 95.9074, 36.7317, 0.55", "-124.293, 98.6274, 43.3759, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.504, 50.8846, -16.7532, 0.55", "-56.0399, 49.5299, -16.0184, 0.55", "-57.8747, 48.7699, -15.6487, 0.28", "-59.2402, 48.2044, -15.3735, 0.55", "-60.3782, 47.733, -15.1442, 0.28", "-61.1754, 47.4029, -14.9836, 0.55", "-63.3734, 46.4925, -14.5406, 0.28", "-64.8064, 45.8002, -14.4421, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-150.417, -79.8452, -2.55913, 0.55", "-153.741, -87.9141, -2.10515, 0.55", "-156.804, -95.9516, -0.651929, 0.55", "-159.305, -104.304, -0.822586, 0.55", "-162.635, -112.31, 0.222346, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-150.417, -79.8452, -2.55913, 0.55", "-156.634, -90.8775, -10.1326, 0.55", "-162.106, -100.781, -19.739, 0.55", "-168.858, -111.527, -27.2932, 0.55", "-178.595, -119.865, -34.8231, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-156.338, -81.3404, -9.00422, 0.55", "-160.296, -87.9152, -13.8925, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-156.338, -81.3404, -9.00422, 0.55", "-160.07, -89.4149, -6.30483, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "86.8084, -23.7561, -137.29, 0.28", "90.0326, -24.8363, -140.158, 0.28", "91.5303, -25.338, -141.49, 0.55", "94.3864, -26.2948, -144.03, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "86.8084, -23.7561, -137.29, 0.55", "86.1463, -24.5557, -138.783, 0.55", "84.8218, -26.155, -141.771, 0.28", "84.3904, -26.676, -142.744, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "73.5598, -22.5592, -125.64, 0.28", "73.718, -22.7807, -129.38, 0.28", "73.7963, -22.8903, -131.232, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "73.5598, -22.5592, -125.64, 0.55", "71.5477, -22.0064, -125.218, 0.55", "65.937, -20.465, -124.042, 0.28", "64.6041, -20.0988, -123.762, 0.55", "60.958, -19.0971, -122.998, 0.28", "58.6078, -18.4514, -122.505, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.2515, -53.9806, 1.369, 0.83", "14.2855, -54.2779, 1.31525, 0.83", "14.7935, -58.1725, 0.725981, 0.83", "14.9075, -61.0982, 0.483852, 0.83", "14.8108, -63.9348, 0.560104, 0.83", "14.5439, -67.7212, 0.962577, 0.83", "14.1114, -72.0898, 1.59636, 0.83", "13.6524, -76.978, 2.57198, 0.83", "13.2099, -81.735, 3.74901, 0.83", "12.2676, -87.5685, 5.05592, 0.83", "11.6791, -90.242, 5.49823, 0.83", "11.2271, -92.2475, 5.69777, 0.83", "10.2732, -96.0917, 5.99545, 0.83", "9.50242, -99.5276, 6.06081, 0.83", "8.27206, -106.824, 5.33235, 0.83", "7.64374, -110.794, 4.38107, 0.83", "7.05981, -114.441, 3.21947, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "14.2515, -53.9806, 1.369, 0.55", "13.1691, -56.2234, 1.58524, 0.55", "12.372, -57.851, 1.87428, 0.55", "11.9032, -58.892, 2.16702, 0.55", "11.2688, -60.5221, 2.78469, 0.55", "10.1244, -63.7506, 4.21877, 0.55", "9.26637, -66.1936, 5.59143, 0.55", "8.60361, -68.1516, 6.91308, 0.55", "7.89868, -70.1283, 8.40193, 0.55", "7.30902, -71.7673, 9.72912, 0.28", "6.82848, -73.1058, 11.0238, 0.55", "5.93231, -75.54, 13.7496, 0.55", "5.31411, -77.0305, 15.601, 0.55", "4.95701, -77.8654, 16.6304, 0.55", "4.47691, -78.8495, 17.7949, 0.83", "3.00348, -81.7679, 21.0423, 0.28", "2.51391, -82.7337, 22.0886, 0.55", "1.68183, -84.4785, 23.9107, 0.28", "1.43026, -85.0162, 24.5143, 0.55", "0.912142, -86.2801, 25.8972, 0.28", "0.616703, -86.9991, 26.6264, 0.55", "-0.570725, -89.3382, 28.342, 0.55", "-1.80263, -95.6609, 35.4265, 0.55", "-2.52586, -101.689, 42.8575, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.2118, -36.8533, -4.71474, 0.55", "-17.248, -37.5189, -5.65203, 0.55", "-18.1276, -37.6666, -5.8987, 0.55", "-20.308, -38.0427, -6.46268, 0.55", "-25.0067, -38.7743, -7.55827, 0.28", "-25.6903, -38.874, -7.69127, 0.55", "-28.5041, -39.3545, -8.173, 0.55", "-32.2227, -40.0357, -8.57793, 0.55", "-33.6312, -40.2644, -8.70676, 0.28", "-34.8361, -40.4049, -8.76633, 0.28", "-36.7842, -40.6301, -8.66722, 0.55", "-39.1949, -40.808, -8.60809, 0.28", "-41.4372, -40.8162, -8.58211, 0.55", "-43.1534, -40.7104, -8.53136, 0.55", "-44.348, -40.5555, -8.51971, 0.55", "-47.8973, -39.968, -8.5557, 0.55", "-51.5979, -39.1543, -8.53123, 0.55", "-53.109, -38.7535, -8.48963, 0.28", "-54.5565, -38.3894, -8.47068, 0.55", "-57.4866, -37.8039, -8.41785, 0.28", "-58.4694, -37.6301, -8.39389, 0.83", "-60.2531, -37.2964, -8.25587, 0.28", "-61.4698, -37.1469, -8.03344, 0.55", "-63.2226, -36.9861, -7.68475, 0.28", "-63.9099, -36.9159, -7.52692, 0.55", "-65.1525, -36.812, -7.17958, 0.55", "-66.9885, -36.4888, -6.58598, 0.55", "-68.1515, -36.2137, -6.13723, 0.28", "-69.0459, -35.8862, -5.70458, 0.55", "-70.0973, -35.3698, -5.19246, 0.28", "-70.273, -35.2705, -5.11285, 0.55", "-72.0477, -34.2947, -4.62818, 0.28", "-73.4035, -33.553, -4.38775, 0.55", "-75.3053, -32.4553, -4.25801, 0.83", "-76.9491, -31.5104, -4.27914, 0.28", "-77.3916, -31.266, -4.31425, 0.55", "-80.8639, -29.4173, -4.7134, 0.28", "-81.4956, -29.0976, -4.82344, 0.55", "-83.4004, -28.0587, -5.21911, 0.28", "-83.8935, -27.7912, -5.32359, 0.55", "-85.1265, -27.1008, -5.53645, 0.28", "-85.9786, -26.6078, -5.65102, 0.55", "-87.7703, -25.5242, -5.71562, 0.28", "-88.8204, -24.9417, -5.7272, 0.55", "-91.0174, -23.8171, -5.66999, 0.28", "-91.6691, -23.5117, -5.64646, 0.55", "-92.6784, -23.0992, -5.58445, 0.28", "-93.5152, -22.7544, -5.50086, 0.55", "-95.2069, -22.0653, -5.24829, 0.28", "-95.7092, -21.8689, -5.1595, 0.55", "-99.3551, -20.358, -4.35938, 0.28", "-100.573, -19.7556, -3.98519, 0.55", "-102.669, -18.5939, -3.19602, 0.28", "-103.596, -18.0362, -2.81344, 0.55", "-105.652, -16.7829, -1.82856, 0.28", "-106.389, -16.3601, -1.43817, 0.55", "-108.984, -15.0949, 0.0986724, 0.28", "-110.069, -14.7151, 0.743585, 0.55", "-111.62, -14.4493, 1.67094, 0.55", "-112.564, -14.3533, 2.26075, 0.55", "-114.395, -14.2256, 3.60309, 0.28", "-116.116, -14.1316, 5.03638, 0.28", "-117.519, -14.0511, 6.27411, 0.55", "-119.076, -13.7886, 7.99179, 0.28", "-119.747, -13.5394, 8.96485, 0.55", "-121.15, -12.5634, 11.5008, 0.28", "-121.639, -11.8307, 13.0626, 0.55", "-121.814, -11.2403, 14.22, 0.28", "-121.834, -10.5925, 15.6945, 0.55", "-121.744, -9.74961, 17.6494, 0.28", "-121.718, -9.45593, 18.3869, 0.55", "-121.833, -8.15174, 21.9962, 0.28", "-121.883, -7.7453, 23.2072, 0.55", "-121.968, -6.86203, 26.121, 0.28", "-122.016, -6.39564, 27.7035, 0.55", "-122.057, -6.01375, 29.0037, 0.55", "-122.131, -5.56373, 30.5377, 0.28", "-122.247, -5.32893, 31.273, 0.55", "-122.729, -4.46979, 33.6604, 0.28", "-122.954, -3.90513, 34.9267, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.2118, -36.8533, -4.71474, 0.55", "-14.2149, -37.0085, -5.98708, 0.55", "-14.1691, -37.0359, -7.26865, 0.55", "-14.0222, -36.9733, -8.862, 0.55", "-13.839, -36.8308, -10.1542, 0.55", "-11.9578, -35.1409, -18.5114, 0.55", "-11.5334, -34.5684, -20.4074, 0.55", "-10.9365, -33.5401, -23.2306, 0.55", "-10.5185, -32.7528, -25.2339, 0.55", "-10.0664, -31.8883, -27.1679, 0.28", "-9.23659, -30.4174, -30.0836, 0.55", "-7.78935, -28.1214, -34.3205, 0.28", "-7.74518, -27.9839, -34.7352, 0.55", "-8.16402, -27.5245, -37.5335, 0.28", "-8.76981, -27.309, -39.3691, 0.55", "-9.62137, -27.2047, -41.2972, 0.55", "-11.2126, -27.1954, -44.7426, 0.55", "-14.3199, -27.2275, -51.5125, 0.55", "-16.3289, -27.3022, -56.0949, 0.55", "-16.9808, -27.3447, -57.6942, 0.55", "-21.0098, -27.5515, -68.3015, 0.55", "-21.9763, -27.5715, -71.2172, 0.55", "-22.3953, -27.5888, -72.8932, 0.55", "-23.0368, -27.7382, -76.8845, 0.55", "-24.0414, -28.5783, -86.5528, 0.55", "-24.2058, -28.9079, -89.1686, 0.28", "-24.1894, -29.1614, -90.6644, 0.55", "-24.1275, -29.6217, -92.8811, 0.28", "-24.0378, -29.897, -93.7892, 0.55", "-23.1233, -31.1129, -96.3385, 0.28", "-21.68, -32.716, -97.4557, 0.55", "-20.7834, -33.8449, -98.0553, 0.28", "-19.9037, -35.0783, -98.4838, 0.55", "-19.1049, -36.4076, -98.7774, 0.28", "-18.7745, -37.0869, -98.9146, 0.55", "-17.9803, -38.8596, -99.1548, 0.28", "-17.8209, -39.3844, -99.2833, 0.55", "-17.0055, -42.3878, -100.169, 0.28", "-16.6843, -43.7747, -100.763, 0.55", "-16.0712, -46.734, -102.394, 0.28", "-15.8663, -47.823, -103.131, 0.55", "-15.1765, -51.3999, -105.827, 0.28", "-15.023, -52.2687, -106.52, 0.55", "-14.6596, -55.0134, -108.766, 0.28", "-14.5834, -55.656, -109.226, 0.55", "-14.4264, -57.3518, -110.4, 0.28", "-14.3769, -58.3335, -111.174, 0.55", "-14.3377, -59.297, -112.024, 0.55", "-14.2506, -61.2198, -113.707, 0.28", "-14.1663, -62.411, -114.936, 0.55", "-13.7704, -65.3949, -118.956, 0.28", "-13.6126, -66.3641, -120.58, 0.55", "-13.4771, -66.9811, -121.695, 0.28", "-13.3131, -67.546, -122.823, 0.55", "-12.7222, -69.1344, -126.286, 0.28", "-12.2327, -70.3685, -128.868, 0.55", "-11.2215, -72.7214, -133.068, 0.28", "-10.8969, -73.454, -134.387, 0.55", "-10.1285, -74.8104, -136.787, 0.28", "-9.82988, -75.2582, -137.545, 0.55", "-9.19935, -75.9833, -138.617, 0.28", "-8.58104, -76.6, -139.495, 0.55", "-6.70274, -78.1489, -141.656, 0.28", "-4.49838, -79.8051, -144.098, 0.28", "-3.30259, -80.579, -145.245, 0.28", "-2.15107, -81.3072, -146.483, 0.55", "-0.460916, -82.2668, -148.305, 0.28", "0.3068, -82.6794, -149.098, 0.83", "2.32427, -83.7695, -151.034, 0.28", "3.15614, -84.265, -151.926, 0.55", "6.64061, -86.6192, -156.035, 0.28", "8.24937, -87.817, -158.255, 0.28", "9.34091, -88.6828, -159.967, 0.55", "9.89402, -89.204, -161.061, 0.55", "11.2048, -90.6151, -164.138, 0.28", "12.34, -92.0465, -167.094, 0.55", "13.3634, -93.4233, -169.783, 0.28", "14.2044, -94.6942, -172.303, 0.55", "14.9102, -95.7242, -174.379, 0.28", "15.5588, -96.4669, -176.022, 0.55", "17.2668, -98.0684, -179.868, 0.28", "18.1858, -98.8809, -181.761, 0.55", "19.6351, -100.113, -184.524, 0.28", "20.8659, -101.06, -186.748, 0.55", "23.772, -103.053, -191.971, 0.28", "24.872, -103.74, -194.216, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.13276, -148.311, 112.258, 0.55", "4.57965, -154.758, 115.19, 0.55", "5.19788, -161.692, 116.323, 0.55", "5.70387, -168.39, 118.54, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.13276, -148.311, 112.258, 0.55", "6.0083, -156.99, 117.486, 0.55", "7.66389, -164.33, 124.642, 0.55", "10.3883, -170.196, 132.899, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.29633, -149.156, 113.95, 0.55", "1.84156, -159.794, 119.642, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.29633, -149.156, 113.95, 0.55", "0.162582, -158.46, 120.945, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.05981, -114.441, 3.21947, 0.83", "7.91054, -117.796, 3.49555, 0.83", "8.79524, -120.628, 3.92198, 0.83", "9.67465, -123.443, 4.34586, 0.83", "10.5098, -126.117, 4.74841, 0.83", "11.7968, -130.237, 5.36877, 0.83", "13.0745, -134.328, 5.98465, 0.83", "14.2005, -137.044, 6.71577, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.05981, -114.441, 3.21947, 0.55", "7.92915, -115.74, 2.83549, 0.55", "8.52573, -116.751, 2.37221, 0.55", "8.90401, -117.497, 1.97242, 0.55", "9.17462, -118.368, 1.45132, 0.83", "9.36944, -119.353, 0.76958, 0.55", "9.55999, -120.318, 0.102751, 0.83", "9.66922, -121.361, -0.69056, 0.55", "9.70812, -121.966, -1.20537, 0.83", "9.6904, -123.917, -2.98667, 0.55", "9.51245, -125.445, -4.42691, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.52586, -101.689, 42.8575, 0.55", "-5.27778, -108.066, 47.7057, 0.55", "-9.17597, -113.653, 52.8431, 0.55", "-13.6256, -118.47, 58.3812, 0.55", "-18.7833, -122.331, 64.1304, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.52586, -101.689, 42.8575, 0.55", "-3.36784, -110.614, 51.927, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.2005, -137.044, 6.71577, 0.55", "14.4929, -139.219, 7.23019, 0.55", "14.9652, -141.997, 7.93076, 0.55", "15.4072, -144.619, 8.57745, 0.55", "15.6903, -146.483, 9.01616, 0.55", "16.1411, -149.809, 9.76041, 0.55", "17.4687, -159.158, 11.5665, 0.55", "17.9493, -162.332, 12.0172, 0.55", "18.2584, -164.57, 12.2201, 0.55", "18.5624, -167.126, 12.2403, 0.55", "18.7044, -169.1, 12.0928, 0.55", "19.1074, -173.715, 11.5106, 0.55", "19.29, -177.217, 11.1063, 0.55", "19.4949, -179.517, 10.887, 0.55", "20.1105, -185.485, 10.6302, 0.55", "20.5604, -189.497, 10.6435, 0.55", "21.2659, -194.673, 10.9419, 0.55", "22.2988, -200.549, 11.7037, 0.55", "23.2483, -204.475, 12.392, 0.55", "23.8867, -206.796, 12.8408, 0.55", "24.4336, -208.935, 13.2623, 0.55", "25.1274, -211.644, 13.6532, 0.55", "26.5689, -218.17, 14.1832, 0.55", "27.179, -220.696, 14.2651, 0.55", "27.7849, -223.508, 14.3609, 0.55", "28.6526, -227.73, 14.4951, 0.55", "29.1804, -230.975, 14.6824, 0.55", "29.4905, -234.057, 14.8834, 0.55", "29.6564, -236.993, 15.1218, 0.55", "29.7839, -239.859, 15.413, 0.55", "29.88, -241.899, 15.5957, 0.55", "30.0177, -245.236, 15.7722, 0.55", "30.0212, -249.24, 15.6991, 0.55", "30.0224, -251.184, 15.4993, 0.55", "29.9971, -252.89, 15.1876, 0.55", "30.031, -256.108, 14.3553, 0.55", "30.0119, -258.148, 13.7779, 0.55", "30.0499, -260.663, 13.1519, 0.55", "30.0469, -262.431, 12.8432, 0.55", "30.0187, -267.029, 12.2509, 0.55", "29.9983, -270.473, 12.0852, 0.55", "30.0288, -275.807, 12.2985, 0.55", "30.235, -279.252, 12.7358, 0.55", "30.4641, -282.87, 13.3226, 0.28", "30.5408, -284.324, 13.6311, 0.28", "30.8205, -287.856, 14.7068, 0.28", "31.1376, -291.121, 15.9706, 0.28", "32.1065, -295.441, 17.9486, 0.28", "34.7011, -305.151, 19.4734, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.2005, -137.044, 6.71577, 0.55", "15.6127, -137.544, 7.10171, 0.55", "18.4919, -138.803, 8.10029, 0.55", "20.9646, -140.034, 9.06481, 0.28", "23.6081, -141.43, 10.1781, 0.55", "25.1796, -142.318, 11.0655, 0.28", "27.8738, -143.913, 12.8608, 0.55", "28.9522, -144.748, 13.9423, 0.28", "29.3306, -145.05, 14.4117, 0.28", "29.9857, -145.483, 15.233, 0.55", "32.6004, -146.915, 18.1985, 0.28", "33.7277, -147.475, 19.4085, 0.55", "37.246, -149.107, 22.6122, 0.28", "39.196, -149.916, 24.1972, 0.28", "41.6617, -150.954, 26.0138, 0.55", "45.4045, -152.564, 28.3689, 0.28", "45.9227, -152.778, 28.6298, 0.55", "48.5072, -153.823, 29.7354, 0.28", "48.7461, -153.921, 29.8094, 0.55", "50.8366, -155.052, 30.5265, 0.28", "51.8202, -155.666, 30.9291, 0.55", "59.9117, -160.226, 34.3153, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.7833, -122.331, 64.1304, 0.55", "-24.3317, -127.098, 72.7239, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.7833, -122.331, 64.1304, 0.55", "-23.5963, -129.437, 67.261, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_BP_f600080385_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.26027, 8.04783, 2.879, 0.83 ) }
    dend_43 { pt3dadd( -6.34812, 10.3215, 3.34469, 1.11 ) }
    dend_43 { pt3dadd( -8.16875, 11.6612, 3.58693, 0.83 ) }
    dend_43 { pt3dadd( -9.93755, 12.9515, 3.80398, 0.83 ) }
    dend_43 { pt3dadd( -10.9849, 13.6872, 3.92292, 1.11 ) }
    dend_43 { pt3dadd( -14.2644, 15.9863, 4.30411, 1.11 ) }
    dend_43 { pt3dadd( -20.1302, 19.9223, 4.97795, 0.83 ) }
    dend_43 { pt3dadd( -22.2434, 21.2863, 5.20046, 0.83 ) }
    dend_43 { pt3dadd( -23.9169, 22.3343, 5.33867, 0.83 ) }
    dend_43 { pt3dadd( -25.5488, 23.373, 5.45831, 0.83 ) }
    dend_43 { pt3dadd( -26.8772, 24.229, 5.52286, 0.55 ) }
    dend_43 { pt3dadd( -27.8757, 24.8087, 5.58838, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.0179, 6.10841, -6.34651, 0.55 ) }
    dend_28 { pt3dadd( 8.29205, 6.78126, -7.07769, 0.55 ) }
    dend_28 { pt3dadd( 10.1919, 6.95111, -8.04519, 0.83 ) }
    dend_28 { pt3dadd( 13.1988, 7.13187, -9.8424, 0.55 ) }
    dend_28 { pt3dadd( 14.6503, 7.21913, -10.7099, 1.38 ) }
    dend_28 { pt3dadd( 18.2192, 7.43366, -12.843, 0.55 ) }
    dend_28 { pt3dadd( 19.7392, 7.36102, -13.8608, 0.83 ) }
    dend_28 { pt3dadd( 27.602, 6.02867, -19.5794, 0.55 ) }
    dend_28 { pt3dadd( 28.3627, 5.8495, -20.2085, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.690448, -10.4829, 3.43258, 1.11 ) }
    dend_1 { pt3dadd( -0.750798, -15.5415, 5.34149, 1.11 ) }
    dend_1 { pt3dadd( -0.775375, -17.6016, 6.11892, 0.83 ) }
    dend_1 { pt3dadd( -0.808029, -20.3386, 7.15178, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.92161, 10.056, -1.42964, 1.11 ) }
    dend_0 { pt3dadd( 1.01945, 12.5488, -1.43077, 1.11 ) }
    dend_0 { pt3dadd( 1.15509, 16.6176, -1.27776, 1.38 ) }
    dend_0 { pt3dadd( 1.16642, 16.8443, -1.26465, 1.38 ) }
    dend_0 { pt3dadd( 1.48119, 19.6502, -1.05818, 0.83 ) }
    dend_0 { pt3dadd( 1.92662, 22.6198, -0.663472, 0.83 ) }
    dend_0 { pt3dadd( 2.69481, 25.9791, 0.23122, 0.83 ) }
    dend_0 { pt3dadd( 3.13762, 27.2558, 0.747814, 0.83 ) }
    dend_0 { pt3dadd( 3.5798, 28.1822, 1.22963, 1.11 ) }
    dend_0 { pt3dadd( 4.88858, 30.4404, 2.48775, 0.55 ) }
    dend_0 { pt3dadd( 6.41002, 32.8004, 3.99177, 0.83 ) }
    dend_0 { pt3dadd( 8.42698, 35.2316, 5.7237, 0.55 ) }
    dend_0 { pt3dadd( 9.46438, 36.2431, 6.51885, 0.83 ) }
    dend_0 { pt3dadd( 10.9059, 37.615, 7.74927, 0.55 ) }
    dend_0 { pt3dadd( 12.6815, 39.3607, 9.40419, 0.55 ) }
    dend_0 { pt3dadd( 15.1449, 41.9874, 11.9156, 0.55 ) }
    dend_0 { pt3dadd( 17.8586, 44.9882, 14.687, 0.55 ) }
    dend_0 { pt3dadd( 19.5469, 46.9384, 16.7373, 0.55 ) }
    dend_0 { pt3dadd( 21.5879, 49.4071, 19.6116, 0.55 ) }
    dend_0 { pt3dadd( 22.0082, 49.9031, 20.2615, 0.83 ) }
    dend_0 { pt3dadd( 23.1094, 51.2151, 22.09, 0.55 ) }
    dend_0 { pt3dadd( 24.0443, 52.2383, 23.5305, 0.83 ) }
    dend_0 { pt3dadd( 26.1869, 55.0262, 26.9368, 0.55 ) }
    dend_0 { pt3dadd( 27.0152, 56.0417, 27.9436, 0.83 ) }
    dend_0 { pt3dadd( 27.8106, 56.7904, 28.6422, 0.55 ) }
    dend_0 { pt3dadd( 28.6115, 57.4348, 29.1905, 0.83 ) }
    dend_0 { pt3dadd( 30.4041, 58.634, 30.2079, 0.83 ) }
    dend_0 { pt3dadd( 32.7914, 60.2633, 31.329, 0.83 ) }
    dend_0 { pt3dadd( 34.268, 61.3374, 31.8495, 0.55 ) }
    dend_0 { pt3dadd( 35.3929, 62.2658, 32.2516, 0.55 ) }
    dend_0 { pt3dadd( 38.3451, 64.6641, 33.26, 0.83 ) }
    dend_0 { pt3dadd( 40.2578, 66.2013, 33.8313, 0.55 ) }
    dend_0 { pt3dadd( 43.1709, 68.4526, 34.577, 0.55 ) }
    dend_0 { pt3dadd( 45.849, 70.3404, 35.1519, 0.55 ) }
    dend_0 { pt3dadd( 48.2497, 71.9397, 35.6009, 0.55 ) }
    dend_0 { pt3dadd( 51.2942, 73.8131, 36.0286, 0.55 ) }
    dend_0 { pt3dadd( 53.1606, 74.7324, 36.2308, 0.55 ) }
    dend_0 { pt3dadd( 54.4454, 75.2486, 36.2155, 0.55 ) }
    dend_0 { pt3dadd( 56.1636, 75.6356, 36.0539, 0.55 ) }
    dend_0 { pt3dadd( 58.7444, 75.8164, 35.6084, 0.55 ) }
    dend_0 { pt3dadd( 60.3589, 75.7368, 35.2715, 0.55 ) }
    dend_0 { pt3dadd( 62.7074, 75.5625, 34.9427, 0.55 ) }
    dend_0 { pt3dadd( 67.1533, 75.3688, 34.7097, 0.55 ) }
    dend_0 { pt3dadd( 70.6243, 75.372, 34.7721, 0.55 ) }
    dend_0 { pt3dadd( 74.2873, 75.5443, 35.0557, 0.55 ) }
    dend_0 { pt3dadd( 76.6229, 75.7336, 35.4228, 0.55 ) }
    dend_0 { pt3dadd( 82.6605, 76.7571, 36.7735, 0.55 ) }
    dend_0 { pt3dadd( 86.2127, 77.6312, 37.8426, 0.55 ) }
    dend_0 { pt3dadd( 88.858, 78.4589, 38.8969, 0.55 ) }
    dend_0 { pt3dadd( 90.4595, 79.2235, 39.5988, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 92.315, 80.3556, 40.4003, 0.55 ) }
    dend_0 { pt3dadd( 95.4735, 82.5796, 41.4638, 0.55 ) }
    dend_0 { pt3dadd( 96.2048, 83.1136, 41.6044, 0.55 ) }
    dend_0 { pt3dadd( 98.313, 84.541, 41.8682, 0.55 ) }
    dend_0 { pt3dadd( 100.25, 86.0594, 42.1008, 0.83 ) }
    dend_0 { pt3dadd( 101.308, 86.9015, 42.2107, 0.55 ) }
    dend_0 { pt3dadd( 102.895, 88.3447, 42.3094, 0.83 ) }
    dend_0 { pt3dadd( 111.103, 96.077, 45.0544, 0.83 ) }
    dend_0 { pt3dadd( 118.267, 104.92, 46.8359, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -27.8757, 24.8087, 5.58838, 0.55 ) }
    dend_55 { pt3dadd( -29.7722, 26.0215, 4.45647, 0.55 ) }
    dend_55 { pt3dadd( -31.8345, 27.3402, 3.22563, 0.55 ) }
    dend_55 { pt3dadd( -34.3232, 28.9317, 1.74028, 0.55 ) }
    dend_55 { pt3dadd( -36.3782, 30.2459, 0.513783, 0.83 ) }
    dend_55 { pt3dadd( -38.1003, 31.3471, -0.514018, 0.55 ) }
    dend_55 { pt3dadd( -41.2968, 33.3912, -2.42177, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.8757, 24.8087, 5.58838, 0.55 ) }
    dend_44 { pt3dadd( -30.3063, 25.2185, 5.34266, 0.55 ) }
    dend_44 { pt3dadd( -32.8869, 25.5818, 5.33966, 0.55 ) }
    dend_44 { pt3dadd( -35.8116, 25.9904, 5.40781, 0.55 ) }
    dend_44 { pt3dadd( -40.0388, 26.5445, 5.89684, 0.55 ) }
    dend_44 { pt3dadd( -43.5702, 26.914, 6.56041, 0.55 ) }
    dend_44 { pt3dadd( -47.2702, 27.2494, 7.41669, 0.55 ) }
    dend_44 { pt3dadd( -50.837, 27.3478, 8.63746, 0.55 ) }
    dend_44 { pt3dadd( -53.8993, 27.1499, 9.99448, 0.55 ) }
    dend_44 { pt3dadd( -57.7045, 26.652, 12.1059, 0.55 ) }
    dend_44 { pt3dadd( -59.3532, 26.3217, 13.2615, 0.55 ) }
    dend_44 { pt3dadd( -61.1323, 25.9477, 14.5889, 0.55 ) }
    dend_44 { pt3dadd( -64.2722, 25.0546, 16.7878, 0.55 ) }
    dend_44 { pt3dadd( -65.9492, 24.5802, 17.688, 0.55 ) }
    dend_44 { pt3dadd( -67.7055, 24.0309, 18.6212, 0.55 ) }
    dend_44 { pt3dadd( -69.7991, 23.3999, 19.5142, 0.55 ) }
    dend_44 { pt3dadd( -72.076, 22.7591, 20.4203, 0.55 ) }
    dend_44 { pt3dadd( -75.3271, 21.8356, 21.6415, 0.55 ) }
    dend_44 { pt3dadd( -79.6797, 20.8761, 22.8712, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.3627, 5.8495, -20.2085, 0.55 ) }
    dend_34 { pt3dadd( 33.5543, 6.41814, -21.332, 0.55 ) }
    dend_34 { pt3dadd( 36.5036, 6.70729, -22.421, 0.55 ) }
    dend_34 { pt3dadd( 39.3892, 6.8879, -23.5701, 0.55 ) }
    dend_34 { pt3dadd( 41.3461, 6.94029, -24.3752, 0.55 ) }
    dend_34 { pt3dadd( 44.1942, 6.95051, -25.5482, 0.55 ) }
    dend_34 { pt3dadd( 50.0759, 6.9203, -28.1917, 0.55 ) }
    dend_34 { pt3dadd( 56.7285, 6.97482, -31.638, 0.55 ) }
    dend_34 { pt3dadd( 59.91, 6.88062, -33.5827, 0.55 ) }
    dend_34 { pt3dadd( 61.6027, 6.82374, -34.7472, 0.55 ) }
    dend_34 { pt3dadd( 63.4585, 6.79192, -36.0972, 0.55 ) }
    dend_34 { pt3dadd( 66.7524, 6.6447, -38.5186, 0.55 ) }
    dend_34 { pt3dadd( 67.9337, 6.5368, -39.4574, 0.55 ) }
    dend_34 { pt3dadd( 72.9489, 6.31463, -43.7925, 0.55 ) }
    dend_34 { pt3dadd( 76.5027, 6.28985, -47.1135, 0.55 ) }
    dend_34 { pt3dadd( 78.5551, 6.33019, -49.0719, 0.55 ) }
    dend_34 { pt3dadd( 80.5985, 6.35284, -51.0285, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.3627, 5.8495, -20.2085, 0.83 ) }
    dend_29 { pt3dadd( 30.4276, 6.94933, -20.1878, 0.83 ) }
    dend_29 { pt3dadd( 31.6074, 7.58089, -20.2291, 0.55 ) }
    dend_29 { pt3dadd( 33.344, 8.55703, -20.4327, 0.83 ) }
    dend_29 { pt3dadd( 34.5123, 9.24384, -20.6025, 0.55 ) }
    dend_29 { pt3dadd( 36.1253, 10.2296, -20.8105, 0.83 ) }
    dend_29 { pt3dadd( 38.0669, 11.4452, -20.9878, 0.55 ) }
    dend_29 { pt3dadd( 39.0417, 11.9866, -21.042, 0.55 ) }
    dend_29 { pt3dadd( 41.2758, 12.9363, -21.0305, 0.83 ) }
    dend_29 { pt3dadd( 43.2979, 13.5501, -20.7753, 0.55 ) }
    dend_29 { pt3dadd( 44.4287, 13.8743, -20.5259, 0.83 ) }
    dend_29 { pt3dadd( 46.1282, 14.3828, -19.9724, 0.55 ) }
    dend_29 { pt3dadd( 48.5734, 15.1317, -18.8653, 0.55 ) }
    dend_29 { pt3dadd( 51.9642, 15.9948, -17.1666, 0.55 ) }
    dend_29 { pt3dadd( 55.1952, 16.6926, -15.3329, 0.55 ) }
    dend_29 { pt3dadd( 57.7544, 17.2164, -13.8362, 0.55 ) }
    dend_29 { pt3dadd( 61.9743, 18.0969, -11.3456, 0.55 ) }
    dend_29 { pt3dadd( 65.0652, 18.8196, -9.45023, 0.55 ) }
    dend_29 { pt3dadd( 66.9371, 19.3979, -8.22773, 0.55 ) }
    dend_29 { pt3dadd( 70.3958, 20.7917, -5.92178, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.808029, -20.3386, 7.15178, 0.83 ) }
    dend_11 { pt3dadd( -1.02988, -22.8905, 7.04227, 0.83 ) }
    dend_11 { pt3dadd( -1.24603, -25.3767, 6.93557, 0.83 ) }
    dend_11 { pt3dadd( -1.48736, -28.1525, 6.81644, 0.83 ) }
    dend_11 { pt3dadd( -1.61338, -29.6021, 6.75423, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.808029, -20.3386, 7.15178, 0.55 ) }
    dend_2 { pt3dadd( 0.142573, -22.4276, 8.34859, 0.55 ) }
    dend_2 { pt3dadd( 1.09073, -24.9663, 9.99347, 0.55 ) }
    dend_2 { pt3dadd( 1.87563, -28.2525, 12.4224, 0.55 ) }
    dend_2 { pt3dadd( 2.10224, -29.5229, 13.4263, 0.83 ) }
    dend_2 { pt3dadd( 2.49123, -32.7478, 16.4428, 0.55 ) }
    dend_2 { pt3dadd( 2.56491, -34.4019, 18.0719, 0.55 ) }
    dend_2 { pt3dadd( 2.67925, -37.6157, 21.3974, 0.83 ) }
    dend_2 { pt3dadd( 2.66956, -39.9938, 24.0601, 0.55 ) }
    dend_2 { pt3dadd( 2.47658, -41.9388, 26.2769, 0.55 ) }
    dend_2 { pt3dadd( 2.00699, -45.6133, 30.4313, 0.55 ) }
    dend_2 { pt3dadd( 1.62565, -48.5413, 33.7064, 0.55 ) }
    dend_2 { pt3dadd( 1.3783, -50.8938, 36.3516, 0.55 ) }
    dend_2 { pt3dadd( 1.23283, -53.4021, 39.0387, 0.28 ) }
    dend_2 { pt3dadd( 1.24966, -54.4538, 40.0913, 0.55 ) }
    dend_2 { pt3dadd( 1.29963, -56.3981, 41.909, 0.28 ) }
    dend_2 { pt3dadd( 1.65679, -59.4585, 44.1493, 0.55 ) }
    dend_2 { pt3dadd( 0.554998, -69.4351, 52.8645, 0.55 ) }
    dend_2 { pt3dadd( -0.507206, -78.6487, 62.4704, 0.55 ) }
    dend_2 { pt3dadd( -0.364618, -86.3105, 73.542, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -41.2968, 33.3912, -2.42177, 0.55 ) }
    dend_61 { pt3dadd( -45.4671, 33.1559, -1.70728, 0.55 ) }
    dend_61 { pt3dadd( -47.2736, 32.9069, -1.26763, 0.83 ) }
    dend_61 { pt3dadd( -49.4532, 32.4403, -0.572054, 0.55 ) }
    dend_61 { pt3dadd( -51.159, 32.033, 0.0722967, 0.83 ) }
    dend_61 { pt3dadd( -55.6285, 31.0937, 1.78006, 0.55 ) }
    dend_61 { pt3dadd( -57.3257, 30.7542, 2.44491, 0.28 ) }
    dend_61 { pt3dadd( -60.2162, 30.1342, 3.73612, 0.55 ) }
    dend_61 { pt3dadd( -64.0913, 29.3241, 5.46251, 0.55 ) }
    dend_61 { pt3dadd( -67.0012, 28.7521, 6.67751, 0.55 ) }
    dend_61 { pt3dadd( -70.8583, 28.0269, 8.21108, 0.28 ) }
    dend_61 { pt3dadd( -71.8313, 27.8827, 8.52414, 0.55 ) }
    dend_61 { pt3dadd( -73.8273, 27.627, 9.12266, 0.28 ) }
    dend_61 { pt3dadd( -75.1524, 27.5223, 9.44429, 0.55 ) }
    dend_61 { pt3dadd( -77.7952, 27.3739, 9.91394, 0.28 ) }
    dend_61 { pt3dadd( -79.3199, 27.2476, 10.0979, 0.55 ) }
    dend_61 { pt3dadd( -82.0039, 26.8597, 10.3747, 0.28 ) }
    dend_61 { pt3dadd( -83.7886, 26.6122, 10.5057, 0.55 ) }
    dend_61 { pt3dadd( -95.9345, 22.6655, 14.9384, 0.55 ) }
    dend_61 { pt3dadd( -107.362, 17.3092, 19.7297, 0.55 ) }
    dend_61 { pt3dadd( -118.345, 10.8531, 24.1034, 0.55 ) }
    dend_61 { pt3dadd( -128.965, 3.31349, 27.3312, 0.55 ) }
    dend_61 { pt3dadd( -138.665, -4.41284, 32.5064, 0.55 ) }
    dend_61 { pt3dadd( -149.178, -11.4454, 37.0926, 0.55 ) }
    dend_61 { pt3dadd( -160.153, -16.7667, 42.8944, 0.55 ) }
    dend_61 { pt3dadd( -170.947, -22.9317, 48.124, 0.55 ) }
    dend_61 { pt3dadd( -181.693, -28.4947, 54.1188, 0.55 ) }
    dend_61 { pt3dadd( -191.96, -34.4201, 60.5779, 0.55 ) }
    dend_61 { pt3dadd( -200.989, -41.8911, 67.2044, 0.55 ) }
    dend_61 { pt3dadd( -210.307, -48.3801, 74.4953, 0.55 ) }
    dend_61 { pt3dadd( -219.552, -55.8376, 80.8264, 0.55 ) }
    dend_61 { pt3dadd( -227.447, -64.0979, 87.9037, 0.55 ) }
    dend_61 { pt3dadd( -233.581, -72.081, 96.8503, 0.55 ) }
    dend_61 { pt3dadd( -239.176, -81.8364, 104.095, 0.55 ) }
    dend_61 { pt3dadd( -242.962, -91.9704, 111.944, 0.55 ) }
    dend_61 { pt3dadd( -247.535, -101.664, 119.972, 0.55 ) }
    dend_61 { pt3dadd( -253.596, -110.5, 128.069, 0.55 ) }
    dend_61 { pt3dadd( -262.348, -117.224, 135.829, 0.55 ) }
    dend_61 { pt3dadd( -269.913, -125.337, 143.438, 0.55 ) }
    dend_61 { pt3dadd( -275.606, -132.115, 153.639, 0.55 ) }
    dend_61 { pt3dadd( -283.287, -137.753, 163.229, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -41.2968, 33.3912, -2.42177, 0.55 ) }
    dend_56 { pt3dadd( -42.7203, 34.4489, -4.6028, 0.55 ) }
    dend_56 { pt3dadd( -43.7078, 35.6058, -6.94743, 0.55 ) }
    dend_56 { pt3dadd( -44.586, 36.9728, -9.38353, 0.55 ) }
    dend_56 { pt3dadd( -45.1359, 37.8288, -10.909, 0.55 ) }
    dend_56 { pt3dadd( -46.1389, 39.3901, -13.6916, 0.83 ) }
    dend_56 { pt3dadd( -46.8727, 40.5325, -15.7274, 0.55 ) }
    dend_56 { pt3dadd( -47.6127, 42.1139, -18.6825, 0.83 ) }
    dend_56 { pt3dadd( -47.794, 43.1306, -20.2894, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -79.6797, 20.8761, 22.8712, 0.28 ) }
    dend_48 { pt3dadd( -80.7122, 18.8552, 22.9183, 0.28 ) }
    dend_48 { pt3dadd( -81.2159, 17.9707, 22.8699, 0.28 ) }
    dend_48 { pt3dadd( -81.871, 16.7148, 22.7524, 0.55 ) }
    dend_48 { pt3dadd( -82.4083, 15.6141, 22.6556, 0.28 ) }
    dend_48 { pt3dadd( -83.1976, 13.9422, 22.5267, 0.55 ) }
    dend_48 { pt3dadd( -85.3784, 9.04849, 22.2165, 0.28 ) }
    dend_48 { pt3dadd( -86.0964, 7.31068, 21.97, 0.55 ) }
    dend_48 { pt3dadd( -87.19, 4.61943, 21.5018, 0.28 ) }
    dend_48 { pt3dadd( -87.8221, 2.9983, 21.1504, 0.55 ) }
    dend_48 { pt3dadd( -88.2609, 1.87637, 20.8826, 0.28 ) }
    dend_48 { pt3dadd( -88.76, 0.590696, 20.585, 0.55 ) }
    dend_48 { pt3dadd( -90.2512, -3.67415, 19.6799, 0.28 ) }
    dend_48 { pt3dadd( -90.725, -4.97307, 19.3639, 0.55 ) }
    dend_48 { pt3dadd( -91.5757, -6.99981, 18.6942, 0.28 ) }
    dend_48 { pt3dadd( -92.2896, -8.32409, 18.1713, 0.28 ) }
    dend_48 { pt3dadd( -92.9353, -9.22157, 17.8029, 0.55 ) }
    dend_48 { pt3dadd( -95.1832, -11.7483, 16.8602, 0.28 ) }
    dend_48 { pt3dadd( -96.2277, -12.7737, 16.5066, 0.55 ) }
    dend_48 { pt3dadd( -98.7949, -15.1406, 15.5818, 0.28 ) }
    dend_48 { pt3dadd( -101.368, -17.2568, 14.7363, 0.28 ) }
    dend_48 { pt3dadd( -104.175, -19.3076, 13.8592, 0.28 ) }
    dend_48 { pt3dadd( -105.461, -20.0916, 13.536, 0.55 ) }
    dend_48 { pt3dadd( -111.492, -28.0507, 11.6037, 0.55 ) }
    dend_48 { pt3dadd( -118.066, -35.8114, 11.6232, 0.55 ) }
    dend_48 { pt3dadd( -124.639, -43.4461, 10.0638, 0.55 ) }
    dend_48 { pt3dadd( -131.487, -50.6291, 7.55873, 0.55 ) }
    dend_48 { pt3dadd( -138.531, -57.2609, 4.08366, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -79.6797, 20.8761, 22.8712, 0.55 ) }
    dend_45 { pt3dadd( -80.6565, 20.809, 23.0037, 0.55 ) }
    dend_45 { pt3dadd( -83.4099, 20.6073, 23.7352, 0.55 ) }
    dend_45 { pt3dadd( -84.4449, 20.5038, 24.0644, 0.55 ) }
    dend_45 { pt3dadd( -86.8797, 20.1888, 24.8735, 0.55 ) }
    dend_45 { pt3dadd( -90.6244, 19.7483, 25.9379, 0.55 ) }
    dend_45 { pt3dadd( -92.5696, 19.5779, 26.4585, 0.28 ) }
    dend_45 { pt3dadd( -95.5981, 19.2525, 27.2069, 0.55 ) }
    dend_45 { pt3dadd( -97.8483, 18.9703, 27.6802, 0.55 ) }
    dend_45 { pt3dadd( -98.7986, 18.8451, 27.8818, 0.28 ) }
    dend_45 { pt3dadd( -104.498, 18.0916, 29.0839, 0.55 ) }
    dend_45 { pt3dadd( -107.166, 17.6296, 29.4786, 0.28 ) }
    dend_45 { pt3dadd( -110.764, 17.0025, 29.7998, 0.28 ) }
    dend_45 { pt3dadd( -113.867, 16.5128, 29.8966, 0.55 ) }
    dend_45 { pt3dadd( -125.932, 16.1721, 32.9623, 0.55 ) }
    dend_45 { pt3dadd( -137.581, 15.4728, 37.3051, 0.55 ) }
    dend_45 { pt3dadd( -148.57, 13.5105, 42.798, 0.55 ) }
    dend_45 { pt3dadd( -159.193, 13.4862, 49.2955, 0.55 ) }
    dend_45 { pt3dadd( -168.257, 12.9546, 57.8197, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -175.5, 12.9741, 67.9467, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 80.5985, 6.35284, -51.0285, 0.55 ) }
    dend_42 { pt3dadd( 84.604, 7.63652, -54.0726, 0.55 ) }
    dend_42 { pt3dadd( 85.8545, 8.02298, -55.1261, 0.55 ) }
    dend_42 { pt3dadd( 87.4073, 8.45567, -56.444, 0.55 ) }
    dend_42 { pt3dadd( 90.2142, 9.27861, -58.9996, 0.55 ) }
    dend_42 { pt3dadd( 93.1116, 10.058, -61.7754, 0.55 ) }
    dend_42 { pt3dadd( 94.5006, 10.3257, -63.1362, 0.83 ) }
    dend_42 { pt3dadd( 95.621, 10.507, -64.3677, 0.55 ) }
    dend_42 { pt3dadd( 96.4382, 10.6105, -65.3977, 0.83 ) }
    dend_42 { pt3dadd( 98.3285, 10.6519, -68.119, 0.55 ) }
    dend_42 { pt3dadd( 99.8436, 10.5463, -70.4259, 0.55 ) }
    dend_42 { pt3dadd( 101.586, 10.3767, -72.9891, 0.55 ) }
    dend_42 { pt3dadd( 103.541, 10.2612, -75.865, 0.55 ) }
    dend_42 { pt3dadd( 104.842, 10.1659, -77.8415, 0.55 ) }
    dend_42 { pt3dadd( 106.306, 10.0734, -80.1248, 0.55 ) }
    dend_42 { pt3dadd( 107.582, 10.0764, -82.1784, 0.55 ) }
    dend_42 { pt3dadd( 108.402, 10.1973, -83.5594, 0.55 ) }
    dend_42 { pt3dadd( 109.398, 10.6442, -86.2425, 0.55 ) }
    dend_42 { pt3dadd( 109.916, 10.9015, -87.926, 0.55 ) }
    dend_42 { pt3dadd( 110.292, 11.2308, -90.1583, 0.55 ) }
    dend_42 { pt3dadd( 110.73, 11.732, -93.9468, 0.55 ) }
    dend_42 { pt3dadd( 110.805, 11.8217, -94.8092, 0.28 ) }
    dend_42 { pt3dadd( 111.808, 12.7869, -105.344, 0.28 ) }
    dend_42 { pt3dadd( 112.193, 13.0673, -108.44, 0.83 ) }
    dend_42 { pt3dadd( 113.769, 13.8378, -119.51, 0.83 ) }
    dend_42 { pt3dadd( 114.578, 13.9957, -124.73, 0.83 ) }
    dend_42 { pt3dadd( 114.986, 13.9655, -126.88, 0.55 ) }
    dend_42 { pt3dadd( 115.492, 13.902, -128.993, 0.55 ) }
    dend_42 { pt3dadd( 117.073, 13.5491, -133.012, 0.55 ) }
    dend_42 { pt3dadd( 118.841, 13.1164, -136.599, 0.28 ) }
    dend_42 { pt3dadd( 119.433, 12.832, -136.919, 0.55 ) }
    dend_42 { pt3dadd( 120.776, 12.1084, -137.089, 0.28 ) }
    dend_42 { pt3dadd( 121.628, 11.6702, -137.048, 0.55 ) }
    dend_42 { pt3dadd( 122.515, 11.1734, -136.932, 0.28 ) }
    dend_42 { pt3dadd( 123.595, 10.6083, -136.725, 0.55 ) }
    dend_42 { pt3dadd( 125.23, 9.90645, -136.558, 0.28 ) }
    dend_42 { pt3dadd( 126.53, 9.32222, -136.48, 0.55 ) }
    dend_42 { pt3dadd( 127.991, 8.80669, -136.477, 0.28 ) }
    dend_42 { pt3dadd( 129.974, 8.17713, -136.643, 0.55 ) }
    dend_42 { pt3dadd( 132.207, 7.5674, -136.943, 0.55 ) }
    dend_42 { pt3dadd( 134.173, 7.10043, -137.328, 0.28 ) }
    dend_42 { pt3dadd( 136.896, 6.53202, -138.0, 0.55 ) }
    dend_42 { pt3dadd( 141.624, 5.85123, -139.608, 0.55 ) }
    dend_42 { pt3dadd( 143.733, 5.74035, -140.53, 0.55 ) }
    dend_42 { pt3dadd( 144.646, 5.76158, -141.007, 0.83 ) }
    dend_42 { pt3dadd( 146.385, 5.87058, -142.065, 0.55 ) }
    dend_42 { pt3dadd( 147.602, 6.01691, -142.857, 0.83 ) }
    dend_42 { pt3dadd( 150.896, 6.49973, -144.993, 0.55 ) }
    dend_42 { pt3dadd( 152.872, 6.69201, -146.392, 0.28 ) }
    dend_42 { pt3dadd( 153.693, 6.69306, -146.908, 0.55 ) }
    dend_42 { pt3dadd( 155.896, 6.4168, -148.147, 0.28 ) }
    dend_42 { pt3dadd( 156.65, 6.23571, -148.554, 0.55 ) }
    dend_42 { pt3dadd( 158.185, 5.67921, -149.183, 0.28 ) }
    dend_42 { pt3dadd( 159.715, 4.86383, -149.597, 0.55 ) }
    dend_42 { pt3dadd( 162.775, 2.84102, -149.921, 0.28 ) }
    dend_42 { pt3dadd( 164.174, 1.78735, -149.933, 0.55 ) }
    dend_42 { pt3dadd( 166.223, 0.0576341, -149.876, 0.28 ) }
    dend_42 { pt3dadd( 168.817, -2.15559, -149.698, 0.55 ) }
    dend_42 { pt3dadd( 170.702, -3.74257, -149.527, 0.55 ) }
    dend_42 { pt3dadd( 173.998, -6.41137, -149.135, 0.28 ) }
    dend_42 { pt3dadd( 175.365, -7.4, -149.071, 0.55 ) }
    dend_42 { pt3dadd( 177.751, -8.86995, -149.186, 0.28 ) }
    dend_42 { pt3dadd( 180.174, -10.0939, -149.41, 0.55 ) }
    dend_42 { pt3dadd( 181.539, -10.5515, -149.671, 0.28 ) }
    dend_42 { pt3dadd( 182.813, -10.7756, -149.946, 0.55 ) }
    dend_42 { pt3dadd( 186.455, -11.0934, -150.982, 0.28 ) }
    dend_42 { pt3dadd( 189.101, -11.1466, -151.704, 0.28 ) }
    dend_42 { pt3dadd( 191.442, -11.0356, -152.309, 0.55 ) }
    dend_42 { pt3dadd( 194.041, -10.8059, -153.076, 0.28 ) }
    dend_42 { pt3dadd( 194.706, -10.7208, -153.236, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 80.5985, 6.35284, -51.0285, 0.55 ) }
    dend_35 { pt3dadd( 80.5766, 5.34867, -52.896, 0.55 ) }
    dend_35 { pt3dadd( 80.428, 4.48028, -54.3665, 0.28 ) }
    dend_35 { pt3dadd( 80.2892, 3.62894, -55.61, 0.55 ) }
    dend_35 { pt3dadd( 80.1395, 1.80163, -58.289, 0.28 ) }
    dend_35 { pt3dadd( 80.1255, 1.70021, -58.4798, 0.55 ) }
    dend_35 { pt3dadd( 80.0786, 1.20039, -59.5524, 0.28 ) }
    dend_35 { pt3dadd( 79.971, 0.864868, -60.5417, 0.55 ) }
    dend_35 { pt3dadd( 79.8141, 0.571431, -61.652, 0.28 ) }
    dend_35 { pt3dadd( 79.5687, 0.204354, -63.2088, 0.55 ) }
    dend_35 { pt3dadd( 78.95, -0.742784, -67.0699, 0.55 ) }
    dend_35 { pt3dadd( 78.358, -1.57674, -70.6261, 0.55 ) }
    dend_35 { pt3dadd( 77.8649, -2.23698, -73.4684, 0.55 ) }
    dend_35 { pt3dadd( 77.3439, -2.89441, -76.2255, 0.55 ) }
    dend_35 { pt3dadd( 77.2074, -3.07463, -76.9178, 0.28 ) }
    dend_35 { pt3dadd( 77.0765, -3.29349, -77.618, 0.55 ) }
    dend_35 { pt3dadd( 76.9645, -3.64883, -78.5334, 0.28 ) }
    dend_35 { pt3dadd( 76.8989, -4.3814, -80.0798, 0.55 ) }
    dend_35 { pt3dadd( 76.9875, -6.04169, -82.6974, 0.55 ) }
    dend_35 { pt3dadd( 77.0459, -6.99904, -83.9934, 0.28 ) }
    dend_35 { pt3dadd( 77.0249, -7.92135, -85.3561, 0.55 ) }
    dend_35 { pt3dadd( 76.853, -9.14025, -87.3132, 0.28 ) }
    dend_35 { pt3dadd( 76.6137, -10.0801, -88.9132, 0.55 ) }
    dend_35 { pt3dadd( 76.1552, -11.4575, -91.2961, 0.28 ) }
    dend_35 { pt3dadd( 75.6977, -12.9249, -93.6947, 0.55 ) }
    dend_35 { pt3dadd( 74.987, -15.028, -97.1996, 0.28 ) }
    dend_35 { pt3dadd( 74.5669, -16.1356, -99.068, 0.55 ) }
    dend_35 { pt3dadd( 74.1064, -17.2379, -101.017, 0.28 ) }
    dend_35 { pt3dadd( 73.6841, -18.1516, -102.828, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 73.2308, -19.2221, -105.272, 0.55 ) }
    dend_35 { pt3dadd( 72.9465, -20.2736, -107.51, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 70.3958, 20.7917, -5.92178, 0.55 ) }
    dend_31 { pt3dadd( 72.9886, 20.2442, -5.57587, 0.55 ) }
    dend_31 { pt3dadd( 74.8646, 19.8108, -5.51383, 0.55 ) }
    dend_31 { pt3dadd( 78.957, 18.858, -5.59981, 0.55 ) }
    dend_31 { pt3dadd( 80.7859, 18.4245, -5.80887, 0.55 ) }
    dend_31 { pt3dadd( 82.779, 18.0115, -6.13136, 0.55 ) }
    dend_31 { pt3dadd( 85.4478, 17.5384, -6.74667, 0.55 ) }
    dend_31 { pt3dadd( 88.2429, 17.0191, -7.67848, 0.55 ) }
    dend_31 { pt3dadd( 89.6991, 16.7605, -8.34129, 0.55 ) }
    dend_31 { pt3dadd( 92.6347, 16.3131, -10.1022, 0.55 ) }
    dend_31 { pt3dadd( 93.985, 16.1266, -10.9556, 0.55 ) }
    dend_31 { pt3dadd( 97.1396, 15.6459, -13.0512, 0.55 ) }
    dend_31 { pt3dadd( 99.2712, 15.2316, -14.4682, 0.55 ) }
    dend_31 { pt3dadd( 100.844, 14.9027, -15.4383, 0.83 ) }
    dend_31 { pt3dadd( 103.351, 14.2787, -16.9762, 0.55 ) }
    dend_31 { pt3dadd( 105.804, 13.5291, -18.405, 0.83 ) }
    dend_31 { pt3dadd( 107.883, 12.7828, -19.5577, 0.55 ) }
    dend_31 { pt3dadd( 109.742, 12.1261, -20.477, 0.55 ) }
    dend_31 { pt3dadd( 110.806, 11.787, -20.9302, 0.83 ) }
    dend_31 { pt3dadd( 113.298, 10.977, -21.8513, 0.28 ) }
    dend_31 { pt3dadd( 114.546, 10.6091, -22.2187, 0.28 ) }
    dend_31 { pt3dadd( 115.744, 10.1905, -22.6522, 0.28 ) }
    dend_31 { pt3dadd( 117.041, 9.77328, -23.1204, 0.28 ) }
    dend_31 { pt3dadd( 119.117, 9.15253, -23.9067, 0.28 ) }
    dend_31 { pt3dadd( 119.955, 8.90799, -24.1955, 0.55 ) }
    dend_31 { pt3dadd( 121.972, 8.30455, -24.6807, 0.55 ) }
    dend_31 { pt3dadd( 125.612, 7.14849, -25.3738, 0.55 ) }
    dend_31 { pt3dadd( 126.62, 6.79406, -25.5255, 0.55 ) }
    dend_31 { pt3dadd( 127.521, 6.44144, -25.627, 0.83 ) }
    dend_31 { pt3dadd( 129.492, 5.70324, -25.6757, 0.55 ) }
    dend_31 { pt3dadd( 131.206, 5.05946, -25.6897, 0.55 ) }
    dend_31 { pt3dadd( 132.828, 4.45632, -25.694, 0.55 ) }
    dend_31 { pt3dadd( 134.08, 3.97504, -25.7372, 0.55 ) }
    dend_31 { pt3dadd( 136.048, 3.09712, -25.9297, 0.55 ) }
    dend_31 { pt3dadd( 138.345, 1.88865, -26.3258, 0.55 ) }
    dend_31 { pt3dadd( 141.865, -0.335147, -27.2762, 0.55 ) }
    dend_31 { pt3dadd( 143.767, -1.8156, -27.9817, 0.55 ) }
    dend_31 { pt3dadd( 145.386, -3.36847, -28.7374, 0.28 ) }
    dend_31 { pt3dadd( 145.858, -3.9357, -29.0146, 0.55 ) }
    dend_31 { pt3dadd( 146.868, -5.51305, -29.7533, 0.28 ) }
    dend_31 { pt3dadd( 147.699, -7.2753, -30.5222, 0.55 ) }
    dend_31 { pt3dadd( 148.438, -9.49544, -31.2749, 0.55 ) }
    dend_31 { pt3dadd( 148.945, -10.9693, -31.6978, 0.28 ) }
    dend_31 { pt3dadd( 149.135, -11.4953, -31.8215, 0.55 ) }
    dend_31 { pt3dadd( 149.631, -12.8067, -32.1117, 0.28 ) }
    dend_31 { pt3dadd( 150.319, -14.5226, -32.45, 0.55 ) }
    dend_31 { pt3dadd( 152.147, -18.6841, -33.1714, 0.55 ) }
    dend_31 { pt3dadd( 153.108, -20.7913, -33.4929, 0.55 ) }
    dend_31 { pt3dadd( 154.003, -22.7263, -33.7712, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 70.3958, 20.7917, -5.92178, 0.55 ) }
    dend_30 { pt3dadd( 73.1649, 20.5927, -3.95527, 0.55 ) }
    dend_30 { pt3dadd( 74.052, 20.536, -3.37185, 0.55 ) }
    dend_30 { pt3dadd( 77.351, 20.2102, -1.36553, 0.55 ) }
    dend_30 { pt3dadd( 81.0368, 19.9011, 0.940887, 0.55 ) }
    dend_30 { pt3dadd( 85.7628, 19.469, 4.0152, 0.55 ) }
    dend_30 { pt3dadd( 87.068, 19.3529, 4.85629, 0.55 ) }
    dend_30 { pt3dadd( 89.4073, 19.0672, 6.32544, 0.55 ) }
    dend_30 { pt3dadd( 91.9715, 18.8285, 7.85473, 0.55 ) }
    dend_30 { pt3dadd( 94.9522, 18.6553, 9.52071, 0.55 ) }
    dend_30 { pt3dadd( 97.7622, 18.5264, 11.1082, 0.55 ) }
    dend_30 { pt3dadd( 99.3041, 18.5348, 11.9245, 0.55 ) }
    dend_30 { pt3dadd( 101.116, 18.5929, 12.8903, 0.55 ) }
    dend_30 { pt3dadd( 103.357, 18.7324, 14.0593, 0.83 ) }
    dend_30 { pt3dadd( 107.022, 19.0347, 15.605, 0.55 ) }
    dend_30 { pt3dadd( 109.443, 19.1722, 16.4977, 0.83 ) }
    dend_30 { pt3dadd( 112.8, 19.2465, 17.5953, 0.55 ) }
    dend_30 { pt3dadd( 113.83, 19.221, 17.9068, 0.55 ) }
    dend_30 { pt3dadd( 117.018, 19.0108, 18.7773, 0.55 ) }
    dend_30 { pt3dadd( 122.712, 18.3671, 20.0455, 0.55 ) }
    dend_30 { pt3dadd( 126.874, 17.7031, 20.8351, 0.55 ) }
    dend_30 { pt3dadd( 130.166, 17.0197, 21.5041, 0.55 ) }
    dend_30 { pt3dadd( 133.521, 16.1355, 22.2617, 0.55 ) }
    dend_30 { pt3dadd( 134.227, 15.9312, 22.4206, 0.28 ) }
    dend_30 { pt3dadd( 135.656, 15.4648, 22.728, 0.83 ) }
    dend_30 { pt3dadd( 141.522, 13.4629, 24.0061, 0.55 ) }
    dend_30 { pt3dadd( 145.624, 12.0841, 24.8237, 0.55 ) }
    dend_30 { pt3dadd( 148.994, 11.0131, 25.5947, 0.55 ) }
    dend_30 { pt3dadd( 151.008, 10.3634, 26.0729, 0.83 ) }
    dend_30 { pt3dadd( 152.595, 9.87252, 26.4568, 0.28 ) }
    dend_30 { pt3dadd( 154.033, 9.43242, 26.7924, 0.55 ) }
    dend_30 { pt3dadd( 165.343, 8.17932, 31.5397, 0.55 ) }
    dend_30 { pt3dadd( 177.211, 5.63769, 33.7796, 0.55 ) }
    dend_30 { pt3dadd( 189.079, 4.35653, 36.89, 0.55 ) }
    dend_30 { pt3dadd( 199.707, 0.954817, 42.1629, 0.55 ) }
    dend_30 { pt3dadd( 209.564, -4.06019, 47.6148, 0.55 ) }
    dend_30 { pt3dadd( 220.189, -9.97422, 49.3377, 0.55 ) }
    dend_30 { pt3dadd( 230.539, -16.4666, 48.8133, 0.55 ) }
    dend_30 { pt3dadd( 242.007, -20.8386, 47.9958, 0.55 ) }
    dend_30 { pt3dadd( 253.362, -25.5611, 47.9417, 0.55 ) }
    dend_30 { pt3dadd( 265.214, -28.8993, 47.3932, 0.55 ) }
    dend_30 { pt3dadd( 277.077, -32.0913, 48.5013, 0.55 ) }
    dend_30 { pt3dadd( 288.133, -37.3155, 49.8123, 0.55 ) }
    dend_30 { pt3dadd( 299.59, -40.8307, 52.7484, 0.55 ) }
    dend_30 { pt3dadd( 310.654, -43.0376, 57.7445, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.61338, -29.6021, 6.75423, 1.38 ) }
    dend_13 { pt3dadd( 0.551277, -32.236, 5.47036, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.61338, -29.6021, 6.75423, 0.55 ) }
    dend_12 { pt3dadd( -2.38743, -30.7198, 6.46629, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.23066, -32.1406, 6.15606, 0.55 ) }
    dend_12 { pt3dadd( -3.9015, -33.09, 5.91635, 0.55 ) }
    dend_12 { pt3dadd( -4.42612, -33.8853, 5.61648, 0.55 ) }
    dend_12 { pt3dadd( -5.52222, -35.5399, 4.83006, 0.55 ) }
    dend_12 { pt3dadd( -6.28339, -36.649, 4.24988, 0.55 ) }
    dend_12 { pt3dadd( -6.94609, -37.6432, 3.70217, 0.55 ) }
    dend_12 { pt3dadd( -8.65825, -40.0727, 2.29199, 0.55 ) }
    dend_12 { pt3dadd( -10.7313, -42.8934, 0.614396, 0.55 ) }
    dend_12 { pt3dadd( -12.3249, -45.034, -0.721823, 0.55 ) }
    dend_12 { pt3dadd( -13.3316, -46.4367, -1.59192, 0.55 ) }
    dend_12 { pt3dadd( -14.4837, -48.114, -2.58296, 0.55 ) }
    dend_12 { pt3dadd( -15.9377, -50.4986, -3.80498, 0.55 ) }
    dend_12 { pt3dadd( -16.7788, -52.1706, -4.48542, 0.55 ) }
    dend_12 { pt3dadd( -17.8441, -54.5555, -5.19239, 0.55 ) }
    dend_12 { pt3dadd( -18.6896, -56.7743, -5.70046, 0.55 ) }
    dend_12 { pt3dadd( -19.5171, -59.5221, -6.17493, 0.55 ) }
    dend_12 { pt3dadd( -20.2737, -62.7274, -6.55342, 0.55 ) }
    dend_12 { pt3dadd( -20.6489, -65.1583, -6.69093, 0.55 ) }
    dend_12 { pt3dadd( -20.7894, -66.3606, -6.65076, 0.55 ) }
    dend_12 { pt3dadd( -21.0198, -69.1703, -6.33984, 0.55 ) }
    dend_12 { pt3dadd( -21.2185, -71.7948, -5.96346, 0.55 ) }
    dend_12 { pt3dadd( -21.3677, -74.4253, -5.33969, 0.55 ) }
    dend_12 { pt3dadd( -21.5024, -75.9345, -4.90832, 0.55 ) }
    dend_12 { pt3dadd( -21.962, -80.5962, -3.39644, 0.55 ) }
    dend_12 { pt3dadd( -22.0005, -80.9395, -3.2802, 0.55 ) }
    dend_12 { pt3dadd( -22.2193, -83.0383, -2.50197, 0.55 ) }
    dend_12 { pt3dadd( -22.8169, -86.8043, -1.09651, 0.55 ) }
    dend_12 { pt3dadd( -22.9931, -88.0653, -0.702123, 0.55 ) }
    dend_12 { pt3dadd( -23.1769, -90.0449, -0.433003, 0.55 ) }
    dend_12 { pt3dadd( -23.1582, -90.7812, -0.487641, 0.55 ) }
    dend_12 { pt3dadd( -22.7979, -93.2711, -1.07867, 0.55 ) }
    dend_12 { pt3dadd( -22.3392, -94.8816, -1.75276, 0.55 ) }
    dend_12 { pt3dadd( -21.3277, -97.4488, -3.30139, 0.55 ) }
    dend_12 { pt3dadd( -19.8685, -100.583, -5.37858, 0.28 ) }
    dend_12 { pt3dadd( -19.4531, -101.358, -5.98844, 0.55 ) }
    dend_12 { pt3dadd( -18.7773, -102.534, -7.01167, 0.28 ) }
    dend_12 { pt3dadd( -18.6732, -102.712, -7.17563, 0.55 ) }
    dend_12 { pt3dadd( -18.1429, -103.683, -7.99558, 0.28 ) }
    dend_12 { pt3dadd( -18.0157, -104.014, -8.20984, 0.55 ) }
    dend_12 { pt3dadd( -17.5269, -105.731, -9.01963, 0.28 ) }
    dend_12 { pt3dadd( -17.3853, -106.317, -9.29726, 0.55 ) }
    dend_12 { pt3dadd( -17.0356, -108.012, -10.016, 0.28 ) }
    dend_12 { pt3dadd( -16.924, -108.546, -10.2395, 0.55 ) }
    dend_12 { pt3dadd( -16.5657, -110.387, -10.9877, 0.28 ) }
    dend_12 { pt3dadd( -16.3948, -111.234, -11.3343, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.364618, -86.3105, 73.542, 0.55 ) }
    dend_10 { pt3dadd( -2.11694, -92.2175, 80.9988, 0.55 ) }
    dend_10 { pt3dadd( -4.43471, -97.1349, 89.0624, 0.55 ) }
    dend_10 { pt3dadd( -6.837, -102.678, 96.6317, 0.55 ) }
    dend_10 { pt3dadd( -9.45891, -108.206, 104.135, 0.55 ) }
    dend_10 { pt3dadd( -11.6899, -114.935, 110.615, 0.55 ) }
    dend_10 { pt3dadd( -13.5726, -121.423, 117.477, 0.55 ) }
    dend_10 { pt3dadd( -15.6012, -129.442, 122.163, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.364618, -86.3105, 73.542, 0.55 ) }
    dend_3 { pt3dadd( 1.65647, -93.6082, 79.7236, 0.55 ) }
    dend_3 { pt3dadd( 3.23518, -101.914, 84.4581, 0.55 ) }
    dend_3 { pt3dadd( 3.35491, -109.965, 89.8327, 0.55 ) }
    dend_3 { pt3dadd( 2.49211, -118.286, 94.6184, 0.55 ) }
    dend_3 { pt3dadd( 2.05786, -126.662, 99.3746, 0.55 ) }
    dend_3 { pt3dadd( 2.01739, -134.764, 104.66, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.794, 43.1306, -20.2894, 0.83 ) }
    dend_60 { pt3dadd( -47.4264, 44.2688, -21.4295, 0.83 ) }
    dend_60 { pt3dadd( -46.6293, 47.0078, -23.9691, 0.55 ) }
    dend_60 { pt3dadd( -46.2922, 48.1848, -24.9644, 0.83 ) }
    dend_60 { pt3dadd( -45.9341, 49.4401, -25.9409, 0.55 ) }
    dend_60 { pt3dadd( -45.5817, 50.7234, -26.758, 0.55 ) }
    dend_60 { pt3dadd( -45.4066, 51.3643, -27.0826, 0.28 ) }
    dend_60 { pt3dadd( -45.327, 51.7844, -27.1892, 0.55 ) }
    dend_60 { pt3dadd( -45.0424, 53.1727, -27.2296, 0.28 ) }
    dend_60 { pt3dadd( -44.9077, 53.7651, -27.2143, 0.55 ) }
    dend_60 { pt3dadd( -44.4727, 55.8206, -27.0748, 0.28 ) }
    dend_60 { pt3dadd( -44.1769, 57.4471, -26.909, 0.55 ) }
    dend_60 { pt3dadd( -43.8491, 59.9842, -26.5753, 0.28 ) }
    dend_60 { pt3dadd( -43.6468, 62.2126, -26.2423, 0.28 ) }
    dend_60 { pt3dadd( -43.6115, 63.4591, -26.0352, 0.55 ) }
    dend_60 { pt3dadd( -43.6653, 64.937, -25.7953, 0.28 ) }
    dend_60 { pt3dadd( -43.7407, 65.6419, -25.6736, 0.55 ) }
    dend_60 { pt3dadd( -44.0073, 67.3033, -25.473, 0.28 ) }
    dend_60 { pt3dadd( -44.2579, 68.4135, -25.4056, 0.28 ) }
    dend_60 { pt3dadd( -44.5257, 69.5054, -25.376, 0.28 ) }
    dend_60 { pt3dadd( -44.6439, 70.0825, -25.3613, 0.55 ) }
    dend_60 { pt3dadd( -44.9876, 72.4209, -25.3502, 0.28 ) }
    dend_60 { pt3dadd( -45.2949, 75.1941, -25.3839, 0.55 ) }
    dend_60 { pt3dadd( -45.3862, 76.1522, -25.3984, 0.55 ) }
    dend_60 { pt3dadd( -45.4952, 77.1115, -25.3925, 0.55 ) }
    dend_60 { pt3dadd( -45.8366, 79.1503, -25.4223, 0.55 ) }
    dend_60 { pt3dadd( -46.148, 80.4891, -25.4783, 0.28 ) }
    dend_60 { pt3dadd( -46.3263, 80.9955, -25.5109, 0.55 ) }
    dend_60 { pt3dadd( -46.9118, 82.3637, -25.5756, 0.28 ) }
    dend_60 { pt3dadd( -47.5927, 83.8223, -25.7094, 0.55 ) }
    dend_60 { pt3dadd( -48.7684, 85.9202, -26.0015, 0.28 ) }
    dend_60 { pt3dadd( -49.3557, 86.7956, -26.1601, 0.28 ) }
    dend_60 { pt3dadd( -50.3256, 88.0163, -26.52, 0.55 ) }
    dend_60 { pt3dadd( -51.419, 89.2897, -26.9714, 0.28 ) }
    dend_60 { pt3dadd( -51.621, 89.4895, -27.0549, 0.55 ) }
    dend_60 { pt3dadd( -52.3562, 90.1261, -27.3552, 0.28 ) }
    dend_60 { pt3dadd( -54.9078, 92.1629, -28.3473, 0.55 ) }
    dend_60 { pt3dadd( -58.4723, 94.6832, -29.8851, 0.28 ) }
    dend_60 { pt3dadd( -59.1315, 95.1084, -30.2132, 0.55 ) }
    dend_60 { pt3dadd( -60.9447, 96.2068, -31.1496, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -61.7055, 96.6584, -31.5653, 0.28 ) }
    dend_60 { pt3dadd( -62.3661, 97.0353, -31.9609, 0.55 ) }
    dend_60 { pt3dadd( -64.3079, 97.9121, -33.2885, 0.28 ) }
    dend_60 { pt3dadd( -65.6931, 98.3876, -34.1753, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.794, 43.1306, -20.2894, 0.55 ) }
    dend_57 { pt3dadd( -48.0042, 44.3329, -20.2109, 0.55 ) }
    dend_57 { pt3dadd( -48.1611, 45.0264, -20.1022, 0.28 ) }
    dend_57 { pt3dadd( -48.4037, 45.4904, -19.9229, 0.55 ) }
    dend_57 { pt3dadd( -48.961, 46.5558, -19.5113, 0.28 ) }
    dend_57 { pt3dadd( -49.3524, 47.3041, -19.2222, 0.55 ) }
    dend_57 { pt3dadd( -50.074, 48.6836, -18.6892, 0.28 ) }
    dend_57 { pt3dadd( -50.5749, 49.3874, -18.2809, 0.55 ) }
    dend_57 { pt3dadd( -52.504, 50.8846, -16.7532, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -138.531, -57.2609, 4.08366, 0.55 ) }
    dend_52 { pt3dadd( -143.664, -64.4641, 2.88502, 0.55 ) }
    dend_52 { pt3dadd( -147.351, -72.3354, 1.13035, 0.55 ) }
    dend_52 { pt3dadd( -150.417, -79.8452, -2.55913, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -138.531, -57.2609, 4.08366, 0.55 ) }
    dend_49 { pt3dadd( -145.295, -65.1516, 0.659949, 0.55 ) }
    dend_49 { pt3dadd( -151.037, -73.1741, -4.05405, 0.55 ) }
    dend_49 { pt3dadd( -156.338, -81.3404, -9.00422, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -175.5, 12.9741, 67.9467, 0.55 ) }
    dend_47 { pt3dadd( -183.889, 12.6933, 73.6553, 0.55 ) }
    dend_47 { pt3dadd( -192.722, 13.7348, 78.5274, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -175.5, 12.9741, 67.9467, 0.55 ) }
    dend_46 { pt3dadd( -184.649, 11.8891, 70.8882, 0.55 ) }
    dend_46 { pt3dadd( -193.729, 12.2754, 74.2103, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 72.9465, -20.2736, -107.51, 0.28 ) }
    dend_39 { pt3dadd( 79.6519, -20.5498, -122.729, 0.28 ) }
    dend_39 { pt3dadd( 80.2855, -20.6936, -124.138, 0.55 ) }
    dend_39 { pt3dadd( 81.3551, -20.9365, -126.517, 0.28 ) }
    dend_39 { pt3dadd( 82.2558, -21.1409, -128.52, 0.28 ) }
    dend_39 { pt3dadd( 83.448, -21.4116, -131.172, 0.55 ) }
    dend_39 { pt3dadd( 85.0199, -21.7684, -134.668, 0.55 ) }
    dend_39 { pt3dadd( 86.8084, -23.7561, -137.29, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 72.9465, -20.2736, -107.51, 0.55 ) }
    dend_36 { pt3dadd( 73.2279, -20.652, -109.213, 0.55 ) }
    dend_36 { pt3dadd( 73.2681, -20.7747, -109.961, 0.28 ) }
    dend_36 { pt3dadd( 73.299, -20.9493, -111.252, 0.55 ) }
    dend_36 { pt3dadd( 73.367, -21.3338, -114.097, 0.28 ) }
    dend_36 { pt3dadd( 73.4141, -21.6003, -116.069, 0.55 ) }
    dend_36 { pt3dadd( 73.4939, -22.0519, -119.41, 0.28 ) }
    dend_36 { pt3dadd( 73.5691, -22.4299, -123.668, 0.28 ) }
    dend_36 { pt3dadd( 73.5598, -22.5592, -125.64, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 154.003, -22.7263, -33.7712, 0.28 ) }
    dend_33 { pt3dadd( 156.006, -25.9609, -33.9042, 0.28 ) }
    dend_33 { pt3dadd( 158.515, -30.3301, -33.7409, 0.28 ) }
    dend_33 { pt3dadd( 160.094, -33.1954, -33.5272, 0.55 ) }
    dend_33 { pt3dadd( 161.062, -34.8063, -33.3353, 0.28 ) }
    dend_33 { pt3dadd( 161.575, -35.6754, -33.2243, 0.28 ) }
    dend_33 { pt3dadd( 164.12, -39.9487, -32.7375, 0.55 ) }
    dend_33 { pt3dadd( 164.709, -40.9352, -32.514, 0.28 ) }
    dend_33 { pt3dadd( 166.074, -43.5701, -31.7702, 0.55 ) }
    dend_33 { pt3dadd( 167.235, -45.8339, -31.208, 0.28 ) }
    dend_33 { pt3dadd( 168.262, -47.6707, -30.7819, 0.55 ) }
    dend_33 { pt3dadd( 169.463, -49.829, -30.3955, 0.55 ) }
    dend_33 { pt3dadd( 171.379, -53.1404, -30.1747, 0.55 ) }
    dend_33 { pt3dadd( 171.84, -53.944, -30.1483, 0.55 ) }
    dend_33 { pt3dadd( 173.475, -56.9294, -30.083, 0.28 ) }
    dend_33 { pt3dadd( 174.102, -58.1371, -30.0876, 0.55 ) }
    dend_33 { pt3dadd( 174.993, -59.6844, -30.0978, 0.28 ) }
    dend_33 { pt3dadd( 176.25, -61.8518, -30.209, 0.55 ) }
    dend_33 { pt3dadd( 178.358, -65.1331, -30.8662, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 154.003, -22.7263, -33.7712, 0.55 ) }
    dend_32 { pt3dadd( 151.922, -22.4648, -33.7593, 0.55 ) }
    dend_32 { pt3dadd( 150.231, -22.2525, -33.7496, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.551277, -32.236, 5.47036, 0.83 ) }
    dend_17 { pt3dadd( 0.683769, -32.5269, 5.41839, 0.83 ) }
    dend_17 { pt3dadd( 2.27968, -35.1114, 5.05968, 0.83 ) }
    dend_17 { pt3dadd( 3.6529, -37.3724, 4.58917, 0.55 ) }
    dend_17 { pt3dadd( 4.74844, -39.1762, 4.2138, 0.55 ) }
    dend_17 { pt3dadd( 7.07704, -43.0103, 3.41594, 0.83 ) }
    dend_17 { pt3dadd( 9.90147, -47.6608, 2.4482, 0.55 ) }
    dend_17 { pt3dadd( 11.4546, -50.0969, 1.98095, 0.83 ) }
    dend_17 { pt3dadd( 14.2515, -53.9806, 1.369, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.551277, -32.236, 5.47036, 0.55 ) }
    dend_14 { pt3dadd( -1.93921, -33.0149, 3.75216, 0.55 ) }
    dend_14 { pt3dadd( -4.61244, -33.851, 1.90789, 0.55 ) }
    dend_14 { pt3dadd( -7.76822, -34.838, -0.269291, 0.55 ) }
    dend_14 { pt3dadd( -11.6004, -36.0365, -2.91309, 0.55 ) }
    dend_14 { pt3dadd( -13.775, -36.7166, -4.41336, 0.55 ) }
    dend_14 { pt3dadd( -14.2118, -36.8533, -4.71474, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.01739, -134.764, 104.66, 0.55 ) }
    dend_7 { pt3dadd( 2.78703, -141.265, 109.059, 0.55 ) }
    dend_7 { pt3dadd( 4.13276, -148.311, 112.258, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.01739, -134.764, 104.66, 0.55 ) }
    dend_4 { pt3dadd( 1.72506, -142.087, 109.098, 0.55 ) }
    dend_4 { pt3dadd( 1.29633, -149.156, 113.95, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.504, 50.8846, -16.7532, 0.28 ) }
    dend_59 { pt3dadd( -53.8983, 51.9809, -15.3175, 0.28 ) }
    dend_59 { pt3dadd( -54.4322, 52.3856, -14.7067, 0.55 ) }
    dend_59 { pt3dadd( -55.9651, 53.5527, -12.8998, 0.28 ) }
    dend_59 { pt3dadd( -56.7171, 54.1447, -12.0893, 0.55 ) }
    dend_59 { pt3dadd( -58.761, 55.7599, -9.97709, 0.28 ) }
    dend_59 { pt3dadd( -60.8383, 57.4014, -7.83031, 0.55 ) }
    dend_59 { pt3dadd( -64.2776, 59.9322, -4.27331, 0.28 ) }
    dend_59 { pt3dadd( -65.01, 60.4769, -3.51415, 0.55 ) }
    dend_59 { pt3dadd( -66.6149, 61.7839, -1.88901, 0.28 ) }
    dend_59 { pt3dadd( -67.2411, 62.3326, -1.24444, 0.55 ) }
    dend_59 { pt3dadd( -74.1071, 65.7276, 3.87214, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -81.3554, 70.3686, 6.99422, 0.55 ) }
    dend_59 { pt3dadd( -87.8107, 75.0724, 11.4487, 0.55 ) }
    dend_59 { pt3dadd( -93.0626, 80.875, 16.0357, 0.55 ) }
    dend_59 { pt3dadd( -99.1813, 86.4231, 19.8417, 0.55 ) }
    dend_59 { pt3dadd( -106.145, 90.5022, 24.2182, 0.55 ) }
    dend_59 { pt3dadd( -112.668, 93.7266, 29.8748, 0.55 ) }
    dend_59 { pt3dadd( -118.486, 95.9074, 36.7317, 0.55 ) }
    dend_59 { pt3dadd( -124.293, 98.6274, 43.3759, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.504, 50.8846, -16.7532, 0.55 ) }
    dend_58 { pt3dadd( -56.0399, 49.5299, -16.0184, 0.55 ) }
    dend_58 { pt3dadd( -57.8747, 48.7699, -15.6487, 0.28 ) }
    dend_58 { pt3dadd( -59.2402, 48.2044, -15.3735, 0.55 ) }
    dend_58 { pt3dadd( -60.3782, 47.733, -15.1442, 0.28 ) }
    dend_58 { pt3dadd( -61.1754, 47.4029, -14.9836, 0.55 ) }
    dend_58 { pt3dadd( -63.3734, 46.4925, -14.5406, 0.28 ) }
    dend_58 { pt3dadd( -64.8064, 45.8002, -14.4421, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -150.417, -79.8452, -2.55913, 0.55 ) }
    dend_54 { pt3dadd( -153.741, -87.9141, -2.10515, 0.55 ) }
    dend_54 { pt3dadd( -156.804, -95.9516, -0.651929, 0.55 ) }
    dend_54 { pt3dadd( -159.305, -104.304, -0.822586, 0.55 ) }
    dend_54 { pt3dadd( -162.635, -112.31, 0.222346, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -150.417, -79.8452, -2.55913, 0.55 ) }
    dend_53 { pt3dadd( -156.634, -90.8775, -10.1326, 0.55 ) }
    dend_53 { pt3dadd( -162.106, -100.781, -19.739, 0.55 ) }
    dend_53 { pt3dadd( -168.858, -111.527, -27.2932, 0.55 ) }
    dend_53 { pt3dadd( -178.595, -119.865, -34.8231, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -156.338, -81.3404, -9.00422, 0.55 ) }
    dend_51 { pt3dadd( -160.296, -87.9152, -13.8925, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -156.338, -81.3404, -9.00422, 0.55 ) }
    dend_50 { pt3dadd( -160.07, -89.4149, -6.30483, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 86.8084, -23.7561, -137.29, 0.28 ) }
    dend_41 { pt3dadd( 90.0326, -24.8363, -140.158, 0.28 ) }
    dend_41 { pt3dadd( 91.5303, -25.338, -141.49, 0.55 ) }
    dend_41 { pt3dadd( 94.3864, -26.2948, -144.03, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 86.8084, -23.7561, -137.29, 0.55 ) }
    dend_40 { pt3dadd( 86.1463, -24.5557, -138.783, 0.55 ) }
    dend_40 { pt3dadd( 84.8218, -26.155, -141.771, 0.28 ) }
    dend_40 { pt3dadd( 84.3904, -26.676, -142.744, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 73.5598, -22.5592, -125.64, 0.28 ) }
    dend_38 { pt3dadd( 73.718, -22.7807, -129.38, 0.28 ) }
    dend_38 { pt3dadd( 73.7963, -22.8903, -131.232, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 73.5598, -22.5592, -125.64, 0.55 ) }
    dend_37 { pt3dadd( 71.5477, -22.0064, -125.218, 0.55 ) }
    dend_37 { pt3dadd( 65.937, -20.465, -124.042, 0.28 ) }
    dend_37 { pt3dadd( 64.6041, -20.0988, -123.762, 0.55 ) }
    dend_37 { pt3dadd( 60.958, -19.0971, -122.998, 0.28 ) }
    dend_37 { pt3dadd( 58.6078, -18.4514, -122.505, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.2515, -53.9806, 1.369, 0.83 ) }
    dend_23 { pt3dadd( 14.2855, -54.2779, 1.31525, 0.83 ) }
    dend_23 { pt3dadd( 14.7935, -58.1725, 0.725981, 0.83 ) }
    dend_23 { pt3dadd( 14.9075, -61.0982, 0.483852, 0.83 ) }
    dend_23 { pt3dadd( 14.8108, -63.9348, 0.560104, 0.83 ) }
    dend_23 { pt3dadd( 14.5439, -67.7212, 0.962577, 0.83 ) }
    dend_23 { pt3dadd( 14.1114, -72.0898, 1.59636, 0.83 ) }
    dend_23 { pt3dadd( 13.6524, -76.978, 2.57198, 0.83 ) }
    dend_23 { pt3dadd( 13.2099, -81.735, 3.74901, 0.83 ) }
    dend_23 { pt3dadd( 12.2676, -87.5685, 5.05592, 0.83 ) }
    dend_23 { pt3dadd( 11.6791, -90.242, 5.49823, 0.83 ) }
    dend_23 { pt3dadd( 11.2271, -92.2475, 5.69777, 0.83 ) }
    dend_23 { pt3dadd( 10.2732, -96.0917, 5.99545, 0.83 ) }
    dend_23 { pt3dadd( 9.50242, -99.5276, 6.06081, 0.83 ) }
    dend_23 { pt3dadd( 8.27206, -106.824, 5.33235, 0.83 ) }
    dend_23 { pt3dadd( 7.64374, -110.794, 4.38107, 0.83 ) }
    dend_23 { pt3dadd( 7.05981, -114.441, 3.21947, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 14.2515, -53.9806, 1.369, 0.55 ) }
    dend_18 { pt3dadd( 13.1691, -56.2234, 1.58524, 0.55 ) }
    dend_18 { pt3dadd( 12.372, -57.851, 1.87428, 0.55 ) }
    dend_18 { pt3dadd( 11.9032, -58.892, 2.16702, 0.55 ) }
    dend_18 { pt3dadd( 11.2688, -60.5221, 2.78469, 0.55 ) }
    dend_18 { pt3dadd( 10.1244, -63.7506, 4.21877, 0.55 ) }
    dend_18 { pt3dadd( 9.26637, -66.1936, 5.59143, 0.55 ) }
    dend_18 { pt3dadd( 8.60361, -68.1516, 6.91308, 0.55 ) }
    dend_18 { pt3dadd( 7.89868, -70.1283, 8.40193, 0.55 ) }
    dend_18 { pt3dadd( 7.30902, -71.7673, 9.72912, 0.28 ) }
    dend_18 { pt3dadd( 6.82848, -73.1058, 11.0238, 0.55 ) }
    dend_18 { pt3dadd( 5.93231, -75.54, 13.7496, 0.55 ) }
    dend_18 { pt3dadd( 5.31411, -77.0305, 15.601, 0.55 ) }
    dend_18 { pt3dadd( 4.95701, -77.8654, 16.6304, 0.55 ) }
    dend_18 { pt3dadd( 4.47691, -78.8495, 17.7949, 0.83 ) }
    dend_18 { pt3dadd( 3.00348, -81.7679, 21.0423, 0.28 ) }
    dend_18 { pt3dadd( 2.51391, -82.7337, 22.0886, 0.55 ) }
    dend_18 { pt3dadd( 1.68183, -84.4785, 23.9107, 0.28 ) }
    dend_18 { pt3dadd( 1.43026, -85.0162, 24.5143, 0.55 ) }
    dend_18 { pt3dadd( 0.912142, -86.2801, 25.8972, 0.28 ) }
    dend_18 { pt3dadd( 0.616703, -86.9991, 26.6264, 0.55 ) }
    dend_18 { pt3dadd( -0.570725, -89.3382, 28.342, 0.55 ) }
    dend_18 { pt3dadd( -1.80263, -95.6609, 35.4265, 0.55 ) }
    dend_18 { pt3dadd( -2.52586, -101.689, 42.8575, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.2118, -36.8533, -4.71474, 0.55 ) }
    dend_16 { pt3dadd( -17.248, -37.5189, -5.65203, 0.55 ) }
    dend_16 { pt3dadd( -18.1276, -37.6666, -5.8987, 0.55 ) }
    dend_16 { pt3dadd( -20.308, -38.0427, -6.46268, 0.55 ) }
    dend_16 { pt3dadd( -25.0067, -38.7743, -7.55827, 0.28 ) }
    dend_16 { pt3dadd( -25.6903, -38.874, -7.69127, 0.55 ) }
    dend_16 { pt3dadd( -28.5041, -39.3545, -8.173, 0.55 ) }
    dend_16 { pt3dadd( -32.2227, -40.0357, -8.57793, 0.55 ) }
    dend_16 { pt3dadd( -33.6312, -40.2644, -8.70676, 0.28 ) }
    dend_16 { pt3dadd( -34.8361, -40.4049, -8.76633, 0.28 ) }
    dend_16 { pt3dadd( -36.7842, -40.6301, -8.66722, 0.55 ) }
    dend_16 { pt3dadd( -39.1949, -40.808, -8.60809, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -41.4372, -40.8162, -8.58211, 0.55 ) }
    dend_16 { pt3dadd( -43.1534, -40.7104, -8.53136, 0.55 ) }
    dend_16 { pt3dadd( -44.348, -40.5555, -8.51971, 0.55 ) }
    dend_16 { pt3dadd( -47.8973, -39.968, -8.5557, 0.55 ) }
    dend_16 { pt3dadd( -51.5979, -39.1543, -8.53123, 0.55 ) }
    dend_16 { pt3dadd( -53.109, -38.7535, -8.48963, 0.28 ) }
    dend_16 { pt3dadd( -54.5565, -38.3894, -8.47068, 0.55 ) }
    dend_16 { pt3dadd( -57.4866, -37.8039, -8.41785, 0.28 ) }
    dend_16 { pt3dadd( -58.4694, -37.6301, -8.39389, 0.83 ) }
    dend_16 { pt3dadd( -60.2531, -37.2964, -8.25587, 0.28 ) }
    dend_16 { pt3dadd( -61.4698, -37.1469, -8.03344, 0.55 ) }
    dend_16 { pt3dadd( -63.2226, -36.9861, -7.68475, 0.28 ) }
    dend_16 { pt3dadd( -63.9099, -36.9159, -7.52692, 0.55 ) }
    dend_16 { pt3dadd( -65.1525, -36.812, -7.17958, 0.55 ) }
    dend_16 { pt3dadd( -66.9885, -36.4888, -6.58598, 0.55 ) }
    dend_16 { pt3dadd( -68.1515, -36.2137, -6.13723, 0.28 ) }
    dend_16 { pt3dadd( -69.0459, -35.8862, -5.70458, 0.55 ) }
    dend_16 { pt3dadd( -70.0973, -35.3698, -5.19246, 0.28 ) }
    dend_16 { pt3dadd( -70.273, -35.2705, -5.11285, 0.55 ) }
    dend_16 { pt3dadd( -72.0477, -34.2947, -4.62818, 0.28 ) }
    dend_16 { pt3dadd( -73.4035, -33.553, -4.38775, 0.55 ) }
    dend_16 { pt3dadd( -75.3053, -32.4553, -4.25801, 0.83 ) }
    dend_16 { pt3dadd( -76.9491, -31.5104, -4.27914, 0.28 ) }
    dend_16 { pt3dadd( -77.3916, -31.266, -4.31425, 0.55 ) }
    dend_16 { pt3dadd( -80.8639, -29.4173, -4.7134, 0.28 ) }
    dend_16 { pt3dadd( -81.4956, -29.0976, -4.82344, 0.55 ) }
    dend_16 { pt3dadd( -83.4004, -28.0587, -5.21911, 0.28 ) }
    dend_16 { pt3dadd( -83.8935, -27.7912, -5.32359, 0.55 ) }
    dend_16 { pt3dadd( -85.1265, -27.1008, -5.53645, 0.28 ) }
    dend_16 { pt3dadd( -85.9786, -26.6078, -5.65102, 0.55 ) }
    dend_16 { pt3dadd( -87.7703, -25.5242, -5.71562, 0.28 ) }
    dend_16 { pt3dadd( -88.8204, -24.9417, -5.7272, 0.55 ) }
    dend_16 { pt3dadd( -91.0174, -23.8171, -5.66999, 0.28 ) }
    dend_16 { pt3dadd( -91.6691, -23.5117, -5.64646, 0.55 ) }
    dend_16 { pt3dadd( -92.6784, -23.0992, -5.58445, 0.28 ) }
    dend_16 { pt3dadd( -93.5152, -22.7544, -5.50086, 0.55 ) }
    dend_16 { pt3dadd( -95.2069, -22.0653, -5.24829, 0.28 ) }
    dend_16 { pt3dadd( -95.7092, -21.8689, -5.1595, 0.55 ) }
    dend_16 { pt3dadd( -99.3551, -20.358, -4.35938, 0.28 ) }
    dend_16 { pt3dadd( -100.573, -19.7556, -3.98519, 0.55 ) }
    dend_16 { pt3dadd( -102.669, -18.5939, -3.19602, 0.28 ) }
    dend_16 { pt3dadd( -103.596, -18.0362, -2.81344, 0.55 ) }
    dend_16 { pt3dadd( -105.652, -16.7829, -1.82856, 0.28 ) }
    dend_16 { pt3dadd( -106.389, -16.3601, -1.43817, 0.55 ) }
    dend_16 { pt3dadd( -108.984, -15.0949, 0.0986724, 0.28 ) }
    dend_16 { pt3dadd( -110.069, -14.7151, 0.743585, 0.55 ) }
    dend_16 { pt3dadd( -111.62, -14.4493, 1.67094, 0.55 ) }
    dend_16 { pt3dadd( -112.564, -14.3533, 2.26075, 0.55 ) }
    dend_16 { pt3dadd( -114.395, -14.2256, 3.60309, 0.28 ) }
    dend_16 { pt3dadd( -116.116, -14.1316, 5.03638, 0.28 ) }
    dend_16 { pt3dadd( -117.519, -14.0511, 6.27411, 0.55 ) }
    dend_16 { pt3dadd( -119.076, -13.7886, 7.99179, 0.28 ) }
    dend_16 { pt3dadd( -119.747, -13.5394, 8.96485, 0.55 ) }
    dend_16 { pt3dadd( -121.15, -12.5634, 11.5008, 0.28 ) }
    dend_16 { pt3dadd( -121.639, -11.8307, 13.0626, 0.55 ) }
    dend_16 { pt3dadd( -121.814, -11.2403, 14.22, 0.28 ) }
    dend_16 { pt3dadd( -121.834, -10.5925, 15.6945, 0.55 ) }
    dend_16 { pt3dadd( -121.744, -9.74961, 17.6494, 0.28 ) }
    dend_16 { pt3dadd( -121.718, -9.45593, 18.3869, 0.55 ) }
    dend_16 { pt3dadd( -121.833, -8.15174, 21.9962, 0.28 ) }
    dend_16 { pt3dadd( -121.883, -7.7453, 23.2072, 0.55 ) }
    dend_16 { pt3dadd( -121.968, -6.86203, 26.121, 0.28 ) }
    dend_16 { pt3dadd( -122.016, -6.39564, 27.7035, 0.55 ) }
    dend_16 { pt3dadd( -122.057, -6.01375, 29.0037, 0.55 ) }
    dend_16 { pt3dadd( -122.131, -5.56373, 30.5377, 0.28 ) }
    dend_16 { pt3dadd( -122.247, -5.32893, 31.273, 0.55 ) }
    dend_16 { pt3dadd( -122.729, -4.46979, 33.6604, 0.28 ) }
    dend_16 { pt3dadd( -122.954, -3.90513, 34.9267, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.2118, -36.8533, -4.71474, 0.55 ) }
    dend_15 { pt3dadd( -14.2149, -37.0085, -5.98708, 0.55 ) }
    dend_15 { pt3dadd( -14.1691, -37.0359, -7.26865, 0.55 ) }
    dend_15 { pt3dadd( -14.0222, -36.9733, -8.862, 0.55 ) }
    dend_15 { pt3dadd( -13.839, -36.8308, -10.1542, 0.55 ) }
    dend_15 { pt3dadd( -11.9578, -35.1409, -18.5114, 0.55 ) }
    dend_15 { pt3dadd( -11.5334, -34.5684, -20.4074, 0.55 ) }
    dend_15 { pt3dadd( -10.9365, -33.5401, -23.2306, 0.55 ) }
    dend_15 { pt3dadd( -10.5185, -32.7528, -25.2339, 0.55 ) }
    dend_15 { pt3dadd( -10.0664, -31.8883, -27.1679, 0.28 ) }
    dend_15 { pt3dadd( -9.23659, -30.4174, -30.0836, 0.55 ) }
    dend_15 { pt3dadd( -7.78935, -28.1214, -34.3205, 0.28 ) }
    dend_15 { pt3dadd( -7.74518, -27.9839, -34.7352, 0.55 ) }
    dend_15 { pt3dadd( -8.16402, -27.5245, -37.5335, 0.28 ) }
    dend_15 { pt3dadd( -8.76981, -27.309, -39.3691, 0.55 ) }
    dend_15 { pt3dadd( -9.62137, -27.2047, -41.2972, 0.55 ) }
    dend_15 { pt3dadd( -11.2126, -27.1954, -44.7426, 0.55 ) }
    dend_15 { pt3dadd( -14.3199, -27.2275, -51.5125, 0.55 ) }
    dend_15 { pt3dadd( -16.3289, -27.3022, -56.0949, 0.55 ) }
    dend_15 { pt3dadd( -16.9808, -27.3447, -57.6942, 0.55 ) }
    dend_15 { pt3dadd( -21.0098, -27.5515, -68.3015, 0.55 ) }
    dend_15 { pt3dadd( -21.9763, -27.5715, -71.2172, 0.55 ) }
    dend_15 { pt3dadd( -22.3953, -27.5888, -72.8932, 0.55 ) }
    dend_15 { pt3dadd( -23.0368, -27.7382, -76.8845, 0.55 ) }
    dend_15 { pt3dadd( -24.0414, -28.5783, -86.5528, 0.55 ) }
    dend_15 { pt3dadd( -24.2058, -28.9079, -89.1686, 0.28 ) }
    dend_15 { pt3dadd( -24.1894, -29.1614, -90.6644, 0.55 ) }
    dend_15 { pt3dadd( -24.1275, -29.6217, -92.8811, 0.28 ) }
    dend_15 { pt3dadd( -24.0378, -29.897, -93.7892, 0.55 ) }
    dend_15 { pt3dadd( -23.1233, -31.1129, -96.3385, 0.28 ) }
    dend_15 { pt3dadd( -21.68, -32.716, -97.4557, 0.55 ) }
    dend_15 { pt3dadd( -20.7834, -33.8449, -98.0553, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -19.9037, -35.0783, -98.4838, 0.55 ) }
    dend_15 { pt3dadd( -19.1049, -36.4076, -98.7774, 0.28 ) }
    dend_15 { pt3dadd( -18.7745, -37.0869, -98.9146, 0.55 ) }
    dend_15 { pt3dadd( -17.9803, -38.8596, -99.1548, 0.28 ) }
    dend_15 { pt3dadd( -17.8209, -39.3844, -99.2833, 0.55 ) }
    dend_15 { pt3dadd( -17.0055, -42.3878, -100.169, 0.28 ) }
    dend_15 { pt3dadd( -16.6843, -43.7747, -100.763, 0.55 ) }
    dend_15 { pt3dadd( -16.0712, -46.734, -102.394, 0.28 ) }
    dend_15 { pt3dadd( -15.8663, -47.823, -103.131, 0.55 ) }
    dend_15 { pt3dadd( -15.1765, -51.3999, -105.827, 0.28 ) }
    dend_15 { pt3dadd( -15.023, -52.2687, -106.52, 0.55 ) }
    dend_15 { pt3dadd( -14.6596, -55.0134, -108.766, 0.28 ) }
    dend_15 { pt3dadd( -14.5834, -55.656, -109.226, 0.55 ) }
    dend_15 { pt3dadd( -14.4264, -57.3518, -110.4, 0.28 ) }
    dend_15 { pt3dadd( -14.3769, -58.3335, -111.174, 0.55 ) }
    dend_15 { pt3dadd( -14.3377, -59.297, -112.024, 0.55 ) }
    dend_15 { pt3dadd( -14.2506, -61.2198, -113.707, 0.28 ) }
    dend_15 { pt3dadd( -14.1663, -62.411, -114.936, 0.55 ) }
    dend_15 { pt3dadd( -13.7704, -65.3949, -118.956, 0.28 ) }
    dend_15 { pt3dadd( -13.6126, -66.3641, -120.58, 0.55 ) }
    dend_15 { pt3dadd( -13.4771, -66.9811, -121.695, 0.28 ) }
    dend_15 { pt3dadd( -13.3131, -67.546, -122.823, 0.55 ) }
    dend_15 { pt3dadd( -12.7222, -69.1344, -126.286, 0.28 ) }
    dend_15 { pt3dadd( -12.2327, -70.3685, -128.868, 0.55 ) }
    dend_15 { pt3dadd( -11.2215, -72.7214, -133.068, 0.28 ) }
    dend_15 { pt3dadd( -10.8969, -73.454, -134.387, 0.55 ) }
    dend_15 { pt3dadd( -10.1285, -74.8104, -136.787, 0.28 ) }
    dend_15 { pt3dadd( -9.82988, -75.2582, -137.545, 0.55 ) }
    dend_15 { pt3dadd( -9.19935, -75.9833, -138.617, 0.28 ) }
    dend_15 { pt3dadd( -8.58104, -76.6, -139.495, 0.55 ) }
    dend_15 { pt3dadd( -6.70274, -78.1489, -141.656, 0.28 ) }
    dend_15 { pt3dadd( -4.49838, -79.8051, -144.098, 0.28 ) }
    dend_15 { pt3dadd( -3.30259, -80.579, -145.245, 0.28 ) }
    dend_15 { pt3dadd( -2.15107, -81.3072, -146.483, 0.55 ) }
    dend_15 { pt3dadd( -0.460916, -82.2668, -148.305, 0.28 ) }
    dend_15 { pt3dadd( 0.3068, -82.6794, -149.098, 0.83 ) }
    dend_15 { pt3dadd( 2.32427, -83.7695, -151.034, 0.28 ) }
    dend_15 { pt3dadd( 3.15614, -84.265, -151.926, 0.55 ) }
    dend_15 { pt3dadd( 6.64061, -86.6192, -156.035, 0.28 ) }
    dend_15 { pt3dadd( 8.24937, -87.817, -158.255, 0.28 ) }
    dend_15 { pt3dadd( 9.34091, -88.6828, -159.967, 0.55 ) }
    dend_15 { pt3dadd( 9.89402, -89.204, -161.061, 0.55 ) }
    dend_15 { pt3dadd( 11.2048, -90.6151, -164.138, 0.28 ) }
    dend_15 { pt3dadd( 12.34, -92.0465, -167.094, 0.55 ) }
    dend_15 { pt3dadd( 13.3634, -93.4233, -169.783, 0.28 ) }
    dend_15 { pt3dadd( 14.2044, -94.6942, -172.303, 0.55 ) }
    dend_15 { pt3dadd( 14.9102, -95.7242, -174.379, 0.28 ) }
    dend_15 { pt3dadd( 15.5588, -96.4669, -176.022, 0.55 ) }
    dend_15 { pt3dadd( 17.2668, -98.0684, -179.868, 0.28 ) }
    dend_15 { pt3dadd( 18.1858, -98.8809, -181.761, 0.55 ) }
    dend_15 { pt3dadd( 19.6351, -100.113, -184.524, 0.28 ) }
    dend_15 { pt3dadd( 20.8659, -101.06, -186.748, 0.55 ) }
    dend_15 { pt3dadd( 23.772, -103.053, -191.971, 0.28 ) }
    dend_15 { pt3dadd( 24.872, -103.74, -194.216, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.13276, -148.311, 112.258, 0.55 ) }
    dend_9 { pt3dadd( 4.57965, -154.758, 115.19, 0.55 ) }
    dend_9 { pt3dadd( 5.19788, -161.692, 116.323, 0.55 ) }
    dend_9 { pt3dadd( 5.70387, -168.39, 118.54, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.13276, -148.311, 112.258, 0.55 ) }
    dend_8 { pt3dadd( 6.0083, -156.99, 117.486, 0.55 ) }
    dend_8 { pt3dadd( 7.66389, -164.33, 124.642, 0.55 ) }
    dend_8 { pt3dadd( 10.3883, -170.196, 132.899, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.29633, -149.156, 113.95, 0.55 ) }
    dend_6 { pt3dadd( 1.84156, -159.794, 119.642, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.29633, -149.156, 113.95, 0.55 ) }
    dend_5 { pt3dadd( 0.162582, -158.46, 120.945, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.05981, -114.441, 3.21947, 0.83 ) }
    dend_25 { pt3dadd( 7.91054, -117.796, 3.49555, 0.83 ) }
    dend_25 { pt3dadd( 8.79524, -120.628, 3.92198, 0.83 ) }
    dend_25 { pt3dadd( 9.67465, -123.443, 4.34586, 0.83 ) }
    dend_25 { pt3dadd( 10.5098, -126.117, 4.74841, 0.83 ) }
    dend_25 { pt3dadd( 11.7968, -130.237, 5.36877, 0.83 ) }
    dend_25 { pt3dadd( 13.0745, -134.328, 5.98465, 0.83 ) }
    dend_25 { pt3dadd( 14.2005, -137.044, 6.71577, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.05981, -114.441, 3.21947, 0.55 ) }
    dend_24 { pt3dadd( 7.92915, -115.74, 2.83549, 0.55 ) }
    dend_24 { pt3dadd( 8.52573, -116.751, 2.37221, 0.55 ) }
    dend_24 { pt3dadd( 8.90401, -117.497, 1.97242, 0.55 ) }
    dend_24 { pt3dadd( 9.17462, -118.368, 1.45132, 0.83 ) }
    dend_24 { pt3dadd( 9.36944, -119.353, 0.76958, 0.55 ) }
    dend_24 { pt3dadd( 9.55999, -120.318, 0.102751, 0.83 ) }
    dend_24 { pt3dadd( 9.66922, -121.361, -0.69056, 0.55 ) }
    dend_24 { pt3dadd( 9.70812, -121.966, -1.20537, 0.83 ) }
    dend_24 { pt3dadd( 9.6904, -123.917, -2.98667, 0.55 ) }
    dend_24 { pt3dadd( 9.51245, -125.445, -4.42691, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.52586, -101.689, 42.8575, 0.55 ) }
    dend_20 { pt3dadd( -5.27778, -108.066, 47.7057, 0.55 ) }
    dend_20 { pt3dadd( -9.17597, -113.653, 52.8431, 0.55 ) }
    dend_20 { pt3dadd( -13.6256, -118.47, 58.3812, 0.55 ) }
    dend_20 { pt3dadd( -18.7833, -122.331, 64.1304, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.52586, -101.689, 42.8575, 0.55 ) }
    dend_19 { pt3dadd( -3.36784, -110.614, 51.927, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.2005, -137.044, 6.71577, 0.55 ) }
    dend_27 { pt3dadd( 14.4929, -139.219, 7.23019, 0.55 ) }
    dend_27 { pt3dadd( 14.9652, -141.997, 7.93076, 0.55 ) }
    dend_27 { pt3dadd( 15.4072, -144.619, 8.57745, 0.55 ) }
    dend_27 { pt3dadd( 15.6903, -146.483, 9.01616, 0.55 ) }
    dend_27 { pt3dadd( 16.1411, -149.809, 9.76041, 0.55 ) }
    dend_27 { pt3dadd( 17.4687, -159.158, 11.5665, 0.55 ) }
    dend_27 { pt3dadd( 17.9493, -162.332, 12.0172, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 18.2584, -164.57, 12.2201, 0.55 ) }
    dend_27 { pt3dadd( 18.5624, -167.126, 12.2403, 0.55 ) }
    dend_27 { pt3dadd( 18.7044, -169.1, 12.0928, 0.55 ) }
    dend_27 { pt3dadd( 19.1074, -173.715, 11.5106, 0.55 ) }
    dend_27 { pt3dadd( 19.29, -177.217, 11.1063, 0.55 ) }
    dend_27 { pt3dadd( 19.4949, -179.517, 10.887, 0.55 ) }
    dend_27 { pt3dadd( 20.1105, -185.485, 10.6302, 0.55 ) }
    dend_27 { pt3dadd( 20.5604, -189.497, 10.6435, 0.55 ) }
    dend_27 { pt3dadd( 21.2659, -194.673, 10.9419, 0.55 ) }
    dend_27 { pt3dadd( 22.2988, -200.549, 11.7037, 0.55 ) }
    dend_27 { pt3dadd( 23.2483, -204.475, 12.392, 0.55 ) }
    dend_27 { pt3dadd( 23.8867, -206.796, 12.8408, 0.55 ) }
    dend_27 { pt3dadd( 24.4336, -208.935, 13.2623, 0.55 ) }
    dend_27 { pt3dadd( 25.1274, -211.644, 13.6532, 0.55 ) }
    dend_27 { pt3dadd( 26.5689, -218.17, 14.1832, 0.55 ) }
    dend_27 { pt3dadd( 27.179, -220.696, 14.2651, 0.55 ) }
    dend_27 { pt3dadd( 27.7849, -223.508, 14.3609, 0.55 ) }
    dend_27 { pt3dadd( 28.6526, -227.73, 14.4951, 0.55 ) }
    dend_27 { pt3dadd( 29.1804, -230.975, 14.6824, 0.55 ) }
    dend_27 { pt3dadd( 29.4905, -234.057, 14.8834, 0.55 ) }
    dend_27 { pt3dadd( 29.6564, -236.993, 15.1218, 0.55 ) }
    dend_27 { pt3dadd( 29.7839, -239.859, 15.413, 0.55 ) }
    dend_27 { pt3dadd( 29.88, -241.899, 15.5957, 0.55 ) }
    dend_27 { pt3dadd( 30.0177, -245.236, 15.7722, 0.55 ) }
    dend_27 { pt3dadd( 30.0212, -249.24, 15.6991, 0.55 ) }
    dend_27 { pt3dadd( 30.0224, -251.184, 15.4993, 0.55 ) }
    dend_27 { pt3dadd( 29.9971, -252.89, 15.1876, 0.55 ) }
    dend_27 { pt3dadd( 30.031, -256.108, 14.3553, 0.55 ) }
    dend_27 { pt3dadd( 30.0119, -258.148, 13.7779, 0.55 ) }
    dend_27 { pt3dadd( 30.0499, -260.663, 13.1519, 0.55 ) }
    dend_27 { pt3dadd( 30.0469, -262.431, 12.8432, 0.55 ) }
    dend_27 { pt3dadd( 30.0187, -267.029, 12.2509, 0.55 ) }
    dend_27 { pt3dadd( 29.9983, -270.473, 12.0852, 0.55 ) }
    dend_27 { pt3dadd( 30.0288, -275.807, 12.2985, 0.55 ) }
    dend_27 { pt3dadd( 30.235, -279.252, 12.7358, 0.55 ) }
    dend_27 { pt3dadd( 30.4641, -282.87, 13.3226, 0.28 ) }
    dend_27 { pt3dadd( 30.5408, -284.324, 13.6311, 0.28 ) }
    dend_27 { pt3dadd( 30.8205, -287.856, 14.7068, 0.28 ) }
    dend_27 { pt3dadd( 31.1376, -291.121, 15.9706, 0.28 ) }
    dend_27 { pt3dadd( 32.1065, -295.441, 17.9486, 0.28 ) }
    dend_27 { pt3dadd( 34.7011, -305.151, 19.4734, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.2005, -137.044, 6.71577, 0.55 ) }
    dend_26 { pt3dadd( 15.6127, -137.544, 7.10171, 0.55 ) }
    dend_26 { pt3dadd( 18.4919, -138.803, 8.10029, 0.55 ) }
    dend_26 { pt3dadd( 20.9646, -140.034, 9.06481, 0.28 ) }
    dend_26 { pt3dadd( 23.6081, -141.43, 10.1781, 0.55 ) }
    dend_26 { pt3dadd( 25.1796, -142.318, 11.0655, 0.28 ) }
    dend_26 { pt3dadd( 27.8738, -143.913, 12.8608, 0.55 ) }
    dend_26 { pt3dadd( 28.9522, -144.748, 13.9423, 0.28 ) }
    dend_26 { pt3dadd( 29.3306, -145.05, 14.4117, 0.28 ) }
    dend_26 { pt3dadd( 29.9857, -145.483, 15.233, 0.55 ) }
    dend_26 { pt3dadd( 32.6004, -146.915, 18.1985, 0.28 ) }
    dend_26 { pt3dadd( 33.7277, -147.475, 19.4085, 0.55 ) }
    dend_26 { pt3dadd( 37.246, -149.107, 22.6122, 0.28 ) }
    dend_26 { pt3dadd( 39.196, -149.916, 24.1972, 0.28 ) }
    dend_26 { pt3dadd( 41.6617, -150.954, 26.0138, 0.55 ) }
    dend_26 { pt3dadd( 45.4045, -152.564, 28.3689, 0.28 ) }
    dend_26 { pt3dadd( 45.9227, -152.778, 28.6298, 0.55 ) }
    dend_26 { pt3dadd( 48.5072, -153.823, 29.7354, 0.28 ) }
    dend_26 { pt3dadd( 48.7461, -153.921, 29.8094, 0.55 ) }
    dend_26 { pt3dadd( 50.8366, -155.052, 30.5265, 0.28 ) }
    dend_26 { pt3dadd( 51.8202, -155.666, 30.9291, 0.55 ) }
    dend_26 { pt3dadd( 59.9117, -160.226, 34.3153, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.7833, -122.331, 64.1304, 0.55 ) }
    dend_22 { pt3dadd( -24.3317, -127.098, 72.7239, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.7833, -122.331, 64.1304, 0.55 ) }
    dend_21 { pt3dadd( -23.5963, -129.437, 67.261, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_BP_f600080385_0_0


