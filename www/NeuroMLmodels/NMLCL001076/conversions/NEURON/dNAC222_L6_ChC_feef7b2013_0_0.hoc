// Cell: dNAC222_L6_ChC_feef7b2013_0_0
/*
{
  "id" : "dNAC222_L6_ChC_feef7b2013_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.8586, -8.04469, 1.53009, 3.3791", "-7.97995, -7.34666, 1.36479, 5.72454", "-7.1013, -6.64862, 1.1995, 8.23846", "-6.22264, -5.95059, 1.0342, 11.0117", "-5.34399, -5.25256, 0.868909, 12.2892", "-4.46534, -4.55452, 0.703614, 13.1847", "-3.58668, -3.85649, 0.538319, 13.8694", "-2.70803, -3.15845, 0.373024, 14.3074", "-1.82938, -2.46042, 0.207729, 14.3951", "-0.950725, -1.76239, 0.0424341, 13.9653", "-0.0720712, -1.06435, -0.122861, 13.3474", "0.806582, -0.36632, -0.288156, 12.6084", "1.68524, 0.331714, -0.453451, 11.7137", "2.56389, 1.02975, -0.618746, 10.9789", "3.44254, 1.72778, -0.784041, 10.2328", "4.3212, 2.42582, -0.949336, 9.50705", "5.19985, 3.12385, -1.11463, 8.866", "6.0785, 3.82188, -1.27993, 8.5708", "6.95716, 4.51992, -1.44522, 7.86083", "7.83581, 5.21795, -1.61052, 5.76858", "8.71446, 5.91598, -1.77581, 3.46527" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.69144, -0.454376, 2.76069, 1.92", "-9.84583, -0.477266, 2.76069, 1.92", "-11.3919, -0.648525, 2.76069, 1.92", "-12.8885, -0.814315, 2.76069, 1.69", "-14.308, -0.971565, 2.76069, 1.55", "-16.3015, -1.1924, 2.76069, 1.55", "-17.9512, -1.37514, 2.76069, 1.55", "-20.7758, -1.66352, 2.76069, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.48144, -9.9606, -11.0593, 2.43", "-6.74639, -10.3023, -11.0593, 2.43", "-7.47024, -11.4203, -11.0593, 1.69", "-8.07892, -12.5569, -10.5934, 1.33", "-8.47321, -13.3336, -10.1607, 1.33", "-8.98778, -14.4329, -9.51422, 1.62", "-9.42594, -15.4173, -8.93631, 1.92", "-9.79133, -16.3504, -8.36313, 2.43", "-11.1099, -20.4458, -5.75458, 1.92", "-11.3479, -21.3133, -5.19413, 1.92", "-11.6205, -22.3782, -4.48078, 1.18", "-11.7716, -22.9669, -4.09218, 1.18", "-11.9902, -23.7503, -3.63711, 1.18", "-12.1813, -24.3243, -3.35536, 1.55", "-12.422, -24.9037, -3.18218, 1.55", "-12.9945, -26.0123, -2.79031, 0.96", "-13.609, -26.9221, -2.43255, 1.33", "-14.3602, -27.8317, -2.07139, 1.69", "-15.617, -29.1291, -1.6043, 2.28", "-16.5027, -29.9521, -1.35804, 1.84", "-17.3974, -30.7229, -1.18724, 1.62", "-18.2512, -31.4244, -1.10522, 1.62", "-19.3666, -32.3355, -1.05357, 1.11", "-20.0191, -32.9077, -1.06692, 0.88", "-20.7519, -33.6363, -1.15109, 1.25", "-21.2986, -34.2752, -1.2169, 1.25", "-21.885, -35.0612, -1.39331, 0.88", "-22.2438, -35.5829, -1.55796, 0.88", "-22.6699, -36.1972, -1.79356, 1.62", "-23.2562, -36.9837, -2.12232, 1.62", "-23.8763, -37.6979, -2.47357, 1.62", "-25.6327, -39.3256, -3.40441, 0.88", "-26.3048, -39.8044, -3.71302, 0.59", "-27.209, -40.3117, -4.04958, 0.59", "-27.9335, -40.6558, -4.2571, 0.96", "-28.8234, -41.0388, -4.44125, 1.62", "-29.7757, -41.4324, -4.55617, 1.92", "-30.8268, -41.898, -4.46018, 2.06", "-32.1022, -42.5177, -4.21785, 1.55", "-33.3087, -43.1585, -3.88534, 1.25", "-34.0289, -43.5768, -3.63739, 1.25", "-34.8566, -44.1127, -3.30275, 1.25", "-37.139, -45.7691, -2.47003, 1.25", "-37.6065, -46.1437, -2.3225, 1.25", "-38.291, -46.7524, -2.16164, 1.03", "-38.8398, -47.3115, -2.11966, 0.74", "-39.3317, -47.889, -2.176, 1.62", "-40.69, -49.6645, -2.60841, 2.28", "-41.2694, -50.4431, -2.89994, 2.5", "-41.6357, -50.9471, -3.07732, 2.5", "-42.3688, -51.9452, -3.39151, 1.11", "-42.932, -52.6254, -3.56031, 1.11", "-43.3995, -53.101, -3.62739, 1.11", "-43.8571, -53.4947, -3.62739, 1.11", "-44.2637, -53.8216, -3.62739, 1.62", "-44.9208, -54.4168, -3.62739, 1.99", "-45.9501, -55.4592, -3.62739, 1.99", "-46.8413, -56.4853, -3.62739, 1.99", "-47.7033, -57.6151, -3.62739, 1.99", "-48.4213, -58.6746, -3.62739, 1.99", "-49.9657, -61.2253, -3.61395, 1.99", "-50.5781, -62.4138, -3.60335, 1.99", "-51.024, -63.4756, -3.59085, 1.55", "-51.333, -64.3477, -3.5784, 1.18", "-52.0393, -66.7147, -3.43556, 1.18", "-52.2461, -67.5729, -3.34606, 1.11", "-52.4483, -68.6716, -3.1799, 1.92", "-52.6508, -70.057, -2.92463, 2.14", "-52.7434, -70.7462, -2.77828, 2.14", "-53.0075, -72.7234, -2.30433, 0.66", "-53.123, -73.5923, -2.06477, 0.66", "-53.3042, -74.3297, -1.85113, 0.66", "-53.4146, -74.5762, -1.77418, 1.03", "-53.958, -75.2716, -1.55949, 1.03", "-54.4167, -75.6372, -1.48032, 1.03", "-54.681, -75.7754, -1.4765, 1.33", "-55.458, -76.1393, -1.4659, 1.33", "-56.1724, -76.5072, -1.45657, 0.96", "-56.7505, -76.8903, -1.44959, 0.81", "-57.3703, -77.4393, -1.44271, 0.81", "-57.7964, -77.9534, -1.43652, 1.11", "-58.2464, -78.6891, -1.42861, 1.33", "-58.6219, -79.5413, -1.42113, 1.33", "-58.9677, -80.5436, -1.41135, 1.33", "-59.1387, -81.0745, -1.41673, 1.33", "-59.276, -81.476, -1.42772, 0.96", "-59.5007, -82.0856, -1.45348, 0.96", "-59.8092, -82.8262, -1.49459, 1.18", "-60.0692, -83.3752, -1.52985, 1.55", "-60.5778, -84.283, -1.59242, 1.55", "-60.9925, -84.9312, -1.6386, 1.25", "-61.4675, -85.5696, -1.684, 1.25", "-62.0058, -86.1688, -1.72321, 1.25", "-62.7603, -86.8289, -1.81531, 1.03", "-63.5156, -87.3388, -1.92906, 1.03", "-63.7852, -87.4734, -1.9724, 1.03", "-64.7619, -87.8345, -2.14338, 1.25", "-65.6469, -88.085, -2.29796, 1.4", "-67.019, -88.421, -2.53142, 1.4", "-67.765, -88.6115, -2.65464, 1.11", "-68.6406, -88.8766, -2.79264, 1.03", "-69.3118, -89.1388, -2.88647, 0.96", "-70.1407, -89.5692, -2.9797, 0.96", "-70.9017, -90.0914, -3.03063, 0.96", "-71.4745, -90.6226, -3.03063, 0.96", "-71.7243, -90.9161, -3.03063, 1.25", "-72.2339, -91.6621, -3.03063, 1.62", "-72.6405, -92.3615, -3.03063, 1.84", "-72.8979, -92.8459, -3.00005, 1.84", "-73.4019, -93.864, -2.88702, 1.62", "-73.7152, -94.5204, -2.79259, 1.62", "-73.9464, -95.0252, -2.71222, 1.99", "-74.3572, -95.9697, -2.55425, 1.99", "-74.9178, -97.1471, -2.35097, 1.99", "-75.4417, -98.0819, -2.19087, 1.99", "-75.8427, -98.6639, -2.0933, 1.99", "-76.739, -99.699, -1.94009, 1.33", "-77.38, -100.284, -1.8693, 1.33", "-78.2844, -100.945, -1.82223, 1.33", "-79.3339, -101.583, -1.82223, 1.55", "-80.1084, -101.992, -1.82019, 1.84", "-81.4349, -102.668, -1.81408, 1.84", "-82.1462, -103.042, -1.80953, 1.84", "-83.1995, -103.695, -1.80098, 1.18", "-83.8422, -104.209, -1.79442, 1.18", "-84.4348, -104.793, -1.78747, 1.18", "-85.0054, -105.447, -1.78037, 1.18", "-85.6136, -106.213, -1.77278, 1.4", "-86.3246, -107.123, -1.76489, 1.4", "-86.7561, -107.624, -1.76126, 1.62", "-87.6309, -108.458, -1.75718, 0.96", "-88.1435, -108.806, -1.75718, 0.96", "-88.7143, -109.037, -1.75718, 0.81", "-89.2079, -109.138, -1.75718, 0.81", "-90.0116, -109.22, -1.75718, 0.81", "-90.9367, -109.321, -1.75718, 0.81", "-91.6601, -109.464, -1.75718, 0.81", "-92.0536, -109.657, -1.75718, 0.88", "-92.7264, -110.272, -1.75718, 1.18", "-93.2766, -110.993, -1.75718, 1.55", "-93.752, -111.796, -1.80941, 1.99", "-94.1688, -112.62, -1.89189, 1.99", "-94.6659, -113.728, -2.02716, 1.92", "-95.0169, -114.521, -2.14102, 1.69", "-95.1985, -114.895, -2.2054, 1.69", "-95.8564, -116.035, -2.43723, 0.96", "-96.4408, -116.798, -2.62304, 0.96", "-96.8183, -117.142, -2.67309, 0.96", "-97.3421, -117.474, -2.71572, 0.96", "-98.0663, -117.844, -2.74397, 0.96", "-98.6423, -118.087, -2.73227, 0.96", "-99.201, -118.267, -2.66518, 0.96", "-100.976, -118.698, -2.42331, 0.96", "-102.655, -119.07, -2.1687, 0.74", "-102.869, -119.13, -2.13032, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.22144, -8.99538, 0.070692, 1.77", "-8.87728, -9.50302, 0.070692, 1.77", "-10.7993, -10.807, 0.070692, 1.77", "-12.1697, -11.6648, 0.070692, 1.77", "-13.8455, -12.6416, 0.070692, 1.77", "-15.8864, -13.7596, 0.070692, 1.77", "-17.4696, -14.5622, 0.070692, 1.77", "-18.9132, -15.1921, 0.070692, 1.77", "-20.3469, -15.6589, 0.070692, 1.77", "-21.8298, -15.9765, 0.070692, 1.77", "-22.6679, -16.0499, 0.070692, 1.77", "-23.8512, -16.0819, 0.070692, 1.77", "-24.9521, -16.0405, 0.070692, 1.77", "-26.2814, -15.9077, 0.070692, 1.77", "-28.4703, -15.5106, 0.070692, 1.77", "-29.7944, -15.1798, 0.070692, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.9086, 2.46088, -10.6193, 2.73", "11.1732, 2.38162, -10.5885, 2.73", "13.1713, 1.68532, -10.3892, 1.99", "15.2468, 0.891956, -10.2103, 2.43", "16.3865, 0.407363, -10.3098, 2.43", "17.9214, -0.30542, -10.5916, 2.5", "20.1608, -1.34541, -11.0029, 2.5", "21.286, -1.89695, -11.2557, 2.43", "22.5722, -2.61691, -11.6688, 1.99", "26.2594, -4.85673, -13.3866, 2.36", "27.0742, -5.39302, -13.8752, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.74856, 6.88737, -2.05931, 1.33", "9.45653, 7.48183, -2.03867, 1.33", "10.1524, 8.07806, -2.02263, 1.33", "11.0228, 8.8348, -1.82373, 1.33", "11.5863, 9.34526, -1.64011, 1.77", "12.3354, 10.0608, -1.36298, 2.28", "12.9108, 10.6406, -1.13796, 1.99", "13.6971, 11.5182, -0.778437, 1.25", "15.047, 13.1917, -0.183753, 1.25", "15.5784, 13.9055, 0.0222115, 1.33", "16.0778, 14.6228, 0.18195, 1.62", "16.4211, 15.1755, 0.140161, 1.69", "16.6772, 15.7016, -0.124057, 1.69", "16.9777, 16.7361, -1.14932, 1.03", "17.061, 17.3678, -1.93244, 1.03", "17.0594, 17.6886, -2.3584, 1.03", "16.7677, 20.0179, -5.53068, 1.99", "16.6032, 20.776, -6.54131, 1.69", "16.1196, 22.3822, -8.57836, 1.4", "15.7512, 23.361, -9.71151, 1.33", "15.4677, 24.0501, -10.419, 1.33", "15.1761, 24.8065, -11.04, 1.33", "14.9683, 25.5605, -11.4014, 1.33", "14.8802, 26.2506, -11.6516, 1.33", "14.9456, 26.9488, -11.8007, 1.33", "15.188, 27.6956, -11.9447, 1.33", "15.5607, 28.4248, -12.0947, 1.33", "16.1845, 29.337, -12.2832, 1.33", "17.1008, 30.4154, -12.5232, 0.96", "17.673, 30.9844, -12.6798, 0.96", "18.2805, 31.5149, -12.7965, 0.96", "18.6427, 31.8044, -12.8387, 1.25", "19.2474, 32.2921, -12.8829, 1.25", "19.9081, 32.8493, -13.004, 1.18", "20.8033, 33.6491, -13.2346, 1.18", "21.9148, 34.7326, -13.6377, 1.18", "22.6458, 35.4808, -13.9516, 1.4", "23.3327, 36.1964, -14.2679, 1.4", "25.0277, 38.0026, -15.0618, 1.18", "25.7388, 38.7858, -15.3859, 0.88", "26.5258, 39.6536, -15.7206, 0.88", "27.0445, 40.2021, -15.9326, 0.81", "27.7267, 40.8617, -16.1264, 0.81", "28.6677, 41.6703, -16.2521, 1.69", "29.464, 42.2957, -16.2435, 2.5", "29.9264, 42.6394, -16.2384, 2.06", "30.8322, 43.3227, -16.2287, 0.96", "31.3345, 43.7396, -16.2236, 0.96", "31.7113, 44.102, -16.2203, 0.96", "32.1714, 44.6463, -16.2178, 0.96", "32.5393, 45.2266, -16.2178, 0.96", "32.8976, 46.0971, -16.2178, 0.96", "33.0673, 46.8696, -16.2178, 0.96", "33.1689, 47.5942, -16.2136, 0.96", "33.2659, 48.4455, -16.2046, 0.96", "33.3631, 49.2146, -16.1931, 0.96", "33.5372, 50.0266, -16.1776, 0.96", "33.7909, 50.7814, -16.1602, 0.96", "34.0599, 51.2669, -16.1484, 0.96", "34.5819, 51.9575, -16.1319, 1.33", "35.1375, 52.5682, -16.1184, 1.69", "36.0547, 53.4483, -16.1636, 1.69", "36.3639, 53.7198, -16.1942, 1.69", "37.4941, 54.778, -16.3531, 0.88", "37.9511, 55.267, -16.4397, 0.74", "38.2771, 55.6593, -16.5169, 0.74", "38.9513, 56.6276, -16.6545, 0.74", "39.3144, 57.2899, -16.7056, 0.74", "39.748, 58.3516, -16.7166, 0.66", "39.8504, 58.6956, -16.7005, 0.96", "40.0083, 59.2617, -16.652, 1.33", "40.442, 60.5862, -16.4986, 0.96", "40.83, 61.4258, -16.3855, 0.96", "41.3788, 62.3656, -16.2946, 0.96", "41.9121, 63.1547, -16.2384, 0.96", "42.4309, 63.8879, -16.202, 0.96", "43.3472, 65.1442, -16.1684, 0.96", "44.8654, 67.1269, -16.1684, 0.81", "46.7838, 69.5296, -16.1684, 0.66", "47.3037, 70.1536, -16.1684, 1.4", "47.8621, 70.8158, -16.18, 2.14", "48.6193, 71.7133, -16.2106, 2.43", "49.5529, 72.829, -16.2667, 0.74", "50.2431, 73.584, -16.3176, 0.74", "50.9979, 74.2911, -16.3769, 0.74", "52.0821, 75.2292, -16.4601, 0.74", "53.2646, 76.19, -16.5483, 0.74", "54.2171, 76.9304, -16.6154, 0.52", "56.031, 78.354, -16.7317, 0.15", "56.4193, 78.6675, -16.7518, 0.15", "56.9404, 79.1021, -16.7671, 0.15", "57.3379, 79.4321, -16.763, 0.81", "57.5905, 79.6442, -16.7586, 1.18", "58.1948, 80.1722, -16.7439, 1.18", "58.6575, 80.6338, -16.7292, 1.18", "59.0791, 81.0228, -16.7172, 1.03", "59.5812, 81.4398, -16.7054, 0.88", "60.123, 81.8768, -16.6949, 0.81", "60.7157, 82.3712, -16.6863, 0.81", "61.2446, 82.8418, -16.6793, 0.81", "62.0878, 83.6847, -16.6693, 0.81", "62.7146, 84.4118, -16.6634, 0.81", "63.1413, 84.9984, -16.6608, 0.81", "63.5984, 85.7466, -16.6608, 0.81", "63.9488, 86.4621, -16.6608, 0.81", "64.1725, 87.0523, -16.6608, 0.81", "64.3525, 87.6743, -16.6608, 0.81", "64.4765, 88.0874, -16.6608, 0.81", "64.66, 88.5523, -16.6608, 0.44", "64.8704, 88.9713, -16.6608, 0.44", "65.1689, 89.4621, -16.6608, 0.66", "65.636, 90.1307, -16.6608, 0.66", "66.1969, 90.8601, -16.6572, 0.66", "66.7621, 91.5413, -16.6516, 1.11", "67.1807, 92.0218, -16.6465, 1.33", "67.6755, 92.5911, -16.6395, 1.33", "67.9736, 92.9727, -16.6346, 1.33", "68.6962, 94.0776, -16.6204, 0.59", "68.7967, 94.281, -16.6079, 0.15", "69.0449, 94.9108, -16.5473, 1.25", "69.276, 95.5854, -16.4678, 1.77", "69.5734, 96.5415, -16.3425, 2.14", "69.7507, 97.2357, -16.3119, 1.84", "70.1092, 98.9442, -16.3602, 0.81", "70.2522, 99.643, -16.4199, 0.81", "70.3537, 100.106, -16.4852, 0.81", "70.5583, 100.882, -16.6407, 0.81", "71.1738, 102.809, -17.1491, 0.81", "71.3363, 103.261, -17.3138, 0.81", "71.576, 103.867, -17.593, 0.81", "71.8171, 104.469, -17.8641, 0.81", "71.9774, 104.862, -18.0238, 0.81", "72.3044, 105.621, -18.2681, 1.25", "72.8666, 106.752, -18.4998, 1.25", "73.0606, 107.14, -18.5761, 1.25", "73.2809, 107.585, -18.6561, 1.25", "73.481, 107.991, -18.7204, 1.25", "74.1618, 109.381, -18.9046, 0.66", "74.7073, 110.443, -19.0101, 0.44", "75.0725, 111.149, -19.0473, 0.96", "75.4493, 111.886, -19.0808, 1.33", "75.7018, 112.4, -19.099, 1.69", "75.8856, 112.789, -19.1074, 1.69", "76.1562, 113.383, -19.1427, 1.47", "76.4445, 114.039, -19.2159, 1.11", "76.7706, 114.733, -19.3223, 0.74", "77.1278, 115.418, -19.4515, 0.74", "77.3705, 115.826, -19.5396, 1.03", "78.1064, 116.901, -19.8504, 0.88", "78.4197, 117.317, -20.0352, 0.88", "78.7235, 117.695, -20.2496, 0.88", "79.0041, 118.03, -20.4684, 0.88", "79.2921, 118.358, -20.728, 0.88", "79.8076, 118.969, -21.2226, 0.66", "80.5806, 119.85, -21.9208, 0.96", "80.9095, 120.224, -22.2156, 1.25", "81.1708, 120.529, -22.4464, 1.47", "82.0656, 121.617, -23.1927, 0.88", "82.5537, 122.243, -23.5451, 0.59", "83.0537, 122.92, -23.7977, 0.22", "83.2897, 123.225, -23.8602, 0.22", "83.4149, 123.395, -23.8681, 0.52", "83.7111, 123.836, -23.8349, 1.11", "84.2019, 124.618, -23.6961, 1.11", "84.6818, 125.425, -23.5192, 0.66", "85.5007, 126.913, -23.1645, 0.37", "86.1729, 128.108, -22.8316, 1.47", "86.5177, 128.708, -22.6522, 1.25", "86.8398, 129.273, -22.4763, 0.88", "87.2333, 129.962, -22.2608, 0.37", "87.5464, 130.52, -22.0912, 0.37", "88.0912, 131.493, -21.798, 1.11", "88.6195, 132.365, -21.5625, 0.59", "89.0616, 133.082, -21.3749, 1.25", "89.4653, 133.722, -21.1972, 1.99", "90.1656, 134.786, -20.9083, 1.11", "90.9009, 135.865, -20.5874, 1.11", "91.3736, 136.543, -20.3836, 1.03", "92.041, 137.444, -20.0928, 1.03", "92.6786, 138.264, -19.8258, 0.88", "93.3406, 139.112, -19.5639, 1.62", "93.9377, 139.866, -19.3581, 1.62", "94.5771, 140.654, -19.1599, 0.29", "94.9917, 141.157, -19.0395, 0.29", "95.4774, 141.747, -18.9225, 0.29", "95.8846, 142.266, -18.8536, 0.29", "96.2286, 142.706, -18.8037, 0.88", "96.4912, 143.043, -18.777, 1.47", "96.9998, 143.694, -18.7228, 1.47", "97.7915, 144.716, -18.6456, 0.29", "98.2622, 145.298, -18.6078, 1.03", "98.6469, 145.777, -18.5834, 1.4", "99.072, 146.311, -18.5395, 1.4", "99.1984, 146.464, -18.524, 1.4", "100.128, 147.494, -18.3825, 0.44", "100.733, 148.113, -18.2074, 0.44", "101.077, 148.485, -18.0712, 0.44", "101.893, 149.334, -17.7223, 0.66", "102.45, 149.884, -17.4697, 0.96", "103.031, 150.437, -17.2049, 1.25", "104.364, 151.671, -16.5994, 0.29", "105.1, 152.407, -16.2407, 0.29", "106.307, 153.708, -15.6159, 0.29", "106.69, 154.19, -15.3146, 0.88", "107.16, 154.888, -14.8114, 1.55", "107.489, 155.428, -14.3995, 1.55", "108.261, 156.784, -13.3737, 0.37", "108.52, 157.256, -13.0198, 1.33", "109.735, 159.779, -11.2414, 1.18", "110.112, 160.579, -10.7367, 0.88", "110.493, 161.454, -10.2537, 0.74", "110.866, 162.347, -9.8453, 1.62", "111.438, 163.725, -9.41889, 0.88", "111.769, 164.543, -9.28173, 0.52", "112.081, 165.359, -9.28173, 0.52", "112.447, 166.417, -9.28173, 0.52", "112.54, 166.716, -9.28173, 0.52", "112.742, 167.349, -9.28173, 0.74", "112.95, 167.941, -9.3647, 0.74", "113.156, 168.483, -9.49927, 1.11", "113.414, 169.131, -9.70891, 1.47", "113.755, 170.032, -9.99876, 1.03", "114.004, 170.766, -10.2198, 0.74", "114.707, 172.912, -10.7779, 0.15", "114.845, 173.401, -10.889, 1.33", "115.012, 173.98, -10.9987, 1.33", "115.765, 176.478, -11.4156, 0.52", "116.079, 177.427, -11.5473, 1.33", "116.929, 179.516, -11.7508, 0.22", "117.387, 180.439, -11.7918, 0.22", "118.398, 182.081, -11.8763, 0.96", "118.888, 182.685, -11.9129, 0.66", "119.819, 183.547, -11.9758, 0.52", "121.521, 184.799, -12.0741, 0.52", "122.355, 185.304, -12.057, 1.4", "123.493, 185.969, -11.9224, 1.11", "124.946, 186.786, -11.6087, 0.52", "125.478, 187.079, -11.4494, 0.52", "126.468, 187.671, -10.9958, 1.47", "128.048, 188.775, -9.938, 1.47", "129.323, 189.68, -8.92077, 0.07", "130.009, 190.164, -8.31435, 0.07", "130.492, 190.484, -7.88705, 0.52", "131.984, 191.238, -6.68653, 1.55", "133.112, 191.669, -5.88034, 1.4", "134.809, 192.085, -4.90767, 0.29", "135.525, 192.19, -4.54901, 0.29", "136.642, 192.314, -4.03357, 1.69", "139.01, 192.533, -2.94675, 1.62", "139.322, 192.55, -2.82298, 1.18", "140.009, 192.589, -2.55761, 0.22", "140.837, 192.654, -2.23722, 1.33", "141.265, 192.682, -2.06555, 1.33", "143.745, 192.772, -1.08917, 0.07", "144.529, 192.803, -0.816157, 0.88", "145.452, 192.865, -0.49084, 1.25", "146.523, 193.022, -0.119514, 1.62", "147.154, 193.141, 0.07531, 0.88", "147.574, 193.217, 0.216062, 0.88", "148.452, 193.347, 0.484544, 0.22", "148.782, 193.412, 0.676483, 0.74", "149.685, 193.654, 1.37361, 0.07", "150.324, 193.866, 1.93863, 1.4", "151.679, 194.303, 3.18946, 0.66", "152.312, 194.491, 3.80028, 1.18", "153.634, 194.823, 5.12091, 0.07", "153.94, 194.914, 5.42247, 0.07", "154.223, 195.015, 5.69271, 0.59", "154.377, 195.111, 5.82138, 0.07", "154.751, 195.422, 5.99715, 0.07", "154.958, 195.606, 6.05382, 0.74", "155.684, 196.246, 5.96725, 0.15", "155.875, 196.421, 5.92491, 0.88", "156.167, 196.702, 5.83879, 0.07", "156.603, 197.184, 5.67119, 0.07", "156.862, 197.498, 5.5481, 0.88", "157.669, 198.542, 5.09781, 0.07", "157.935, 198.941, 4.92195, 1.11", "158.081, 199.206, 4.81636, 0.29", "158.362, 199.883, 4.58481, 0.07", "158.383, 199.949, 4.56798, 0.44", "158.414, 200.049, 4.55163, 0.07", "158.661, 200.79, 4.3661, 0.59", "158.775, 201.025, 4.23838, 0.07", "158.999, 201.361, 3.95405, 0.07", "159.27, 201.624, 3.6312, 0.07", "159.468, 201.776, 3.41197, 1.03", "160.801, 202.622, 2.0499, 0.22", "161.111, 202.784, 1.75038, 0.52", "161.236, 202.84, 1.64665, 0.07", "161.639, 202.996, 1.35674, 0.07", "162.012, 203.146, 1.148, 0.88", "162.421, 203.335, 1.03424, 0.07", "162.722, 203.476, 1.04143, 0.07", "163.181, 203.705, 1.05403, 0.66", "163.181, 203.705, 1.05403, 0.07", "163.676, 203.984, 1.07204, 0.07", "164.104, 204.188, 1.08938, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.71446, 5.91598, -1.77581, 2.20598", "20.4593, 15.2465, -1.77581, 2.20598", "32.2041, 24.577, -1.77581, 2.20598" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-20.7758, -1.66352, 2.76069, 1.69", "-22.2092, -3.0752, 2.08158, 1.69", "-23.383, -4.47926, 1.5168, 1.11", "-24.2434, -5.65935, 1.11979, 1.11", "-24.8369, -6.53945, 0.864022, 1.11", "-25.2767, -7.20012, 0.69292, 1.33", "-25.9105, -8.14705, 0.453261, 1.4", "-26.7246, -9.51355, 0.107814, 1.4", "-27.3059, -10.5887, -0.0820863, 1.25", "-27.7337, -11.45, -0.20933, 1.4", "-28.1366, -12.3333, -0.28013, 1.4", "-28.5374, -13.3541, -0.149802, 1.03", "-28.704, -13.9559, 0.08257, 1.03", "-28.792, -14.6332, 0.688543, 1.03", "-28.8141, -14.9147, 1.01078, 1.4", "-28.9278, -16.1572, 2.65634, 1.25", "-29.1667, -17.6768, 4.99941, 1.55", "-29.2913, -18.1558, 5.84093, 1.69", "-29.8956, -19.4921, 8.54399, 1.4", "-30.1607, -19.8566, 9.37344, 1.03", "-30.584, -20.2294, 10.3127, 0.96", "-31.4341, -20.615, 11.4604, 0.96", "-31.9026, -20.6839, 11.8208, 0.96", "-32.9361, -20.6502, 12.3237, 0.96", "-33.722, -20.5364, 12.4706, 0.96", "-34.3908, -20.4282, 12.5271, 1.11", "-35.3592, -20.309, 12.5118, 1.11", "-36.1007, -20.2839, 12.4518, 0.96", "-36.9067, -20.3335, 12.3872, 1.25", "-37.7789, -20.4855, 12.3223, 1.4", "-38.7359, -20.7603, 12.2929, 1.4", "-39.453, -21.0579, 12.2853, 1.62", "-40.4947, -21.6137, 12.157, 1.62", "-41.3455, -22.2023, 11.9473, 1.4", "-42.2312, -22.9996, 11.6242, 1.11", "-42.938, -23.8245, 11.2618, 1.11", "-43.4898, -24.6216, 10.8961, 1.11", "-44.8794, -26.9552, 9.80286, 1.11", "-45.6526, -28.3846, 9.12405, 1.11", "-46.1972, -29.2877, 8.72749, 1.11", "-46.7573, -30.0758, 8.41798, 0.81", "-47.1878, -30.5646, 8.26215, 0.81", "-47.7907, -31.1244, 8.14363, 1.11", "-48.8964, -32.0135, 8.06797, 1.11", "-51.1205, -33.5991, 7.93127, 1.11", "-51.9801, -34.1793, 7.88473, 1.92", "-53.051, -34.9141, 7.83403, 1.77", "-54.2163, -35.7706, 7.7904, 1.4", "-54.9062, -36.3216, 7.77472, 0.88", "-55.7196, -37.0229, 7.77472, 0.88", "-56.2916, -37.5469, 7.76442, 1.25", "-57.0109, -38.2013, 7.74096, 1.77", "-58.1559, -39.1663, 7.69194, 1.77", "-59.2023, -39.9286, 7.64166, 1.33", "-60.2178, -40.5476, 7.59194, 1.11", "-61.1722, -41.0248, 7.60886, 1.4", "-62.2188, -41.4598, 7.69032, 1.77", "-63.6441, -41.9316, 7.88621, 1.92", "-64.7006, -42.2097, 8.12549, 1.99", "-65.7127, -42.4194, 8.39799, 1.99", "-67.6535, -42.7431, 8.97809, 0.81", "-68.2955, -42.8323, 9.18025, 0.81", "-69.3295, -42.9581, 9.53802, 0.81", "-70.3513, -43.0819, 9.92423, 0.81", "-71.4145, -43.2213, 10.3266, 1.84", "-72.5392, -43.3647, 10.6765, 2.28", "-73.6133, -43.4626, 10.7627, 2.28" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.7758, -1.66352, 2.76069, 2.14", "-20.8722, -1.07313, 3.54257, 2.14", "-20.8002, -0.602199, 4.47768, 1.33", "-20.3134, 1.14873, 8.10742, 1.18", "-20.1985, 1.49436, 8.77864, 1.18", "-20.0629, 1.84988, 9.4207, 1.18", "-19.8495, 2.37441, 10.2906, 1.18", "-18.3326, 5.29562, 14.7983, 1.18", "-18.1143, 5.6683, 15.317, 1.18", "-17.7, 6.34643, 16.0499, 1.18", "-17.3843, 6.92432, 16.5812, 1.18", "-17.0767, 7.58371, 17.0515, 1.18", "-16.7138, 8.53485, 17.3898, 1.62", "-16.5364, 9.08471, 17.3765, 1.99", "-16.3111, 9.83148, 17.3495, 1.33", "-16.0465, 10.8059, 17.3078, 1.33", "-15.9782, 11.127, 17.2927, 1.33", "-15.8173, 12.1485, 17.2423, 1.33", "-15.7656, 12.8089, 17.2089, 1.77", "-15.7947, 13.5237, 17.2182, 1.69", "-15.9946, 14.3655, 17.327, 0.96", "-16.2937, 14.9872, 17.482, 0.96", "-16.6408, 15.464, 17.674, 0.66", "-17.0509, 15.9148, 17.9357, 0.66", "-18.03, 16.8026, 18.592, 1.33", "-18.7958, 17.3692, 19.1149, 1.33", "-19.6525, 17.918, 19.7191, 1.33", "-20.5802, 18.4674, 20.4196, 1.33", "-21.9549, 19.2391, 21.5145, 2.5", "-22.5183, 19.5662, 21.9754, 2.5", "-22.7694, 19.7216, 22.1183, 2.5" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-102.869, -119.13, -2.13032, 0.44", "-103.222, -119.384, -2.13513, 0.44", "-103.745, -119.782, -2.14051, 0.44", "-104.26, -120.202, -2.14483, 0.44", "-104.799, -120.673, -2.14847, 0.44", "-105.526, -121.327, -2.15197, 0.44", "-105.753, -121.518, -2.15282, 1.33", "-106.547, -122.141, -2.15282, 1.77", "-107.041, -122.499, -2.15282, 1.4", "-107.858, -123.042, -2.15282, 1.03", "-109.473, -124.095, -2.15282, 1.03", "-110.284, -124.632, -2.15282, 1.03", "-110.944, -125.099, -2.15282, 1.03", "-111.231, -125.322, -2.15282, 1.03", "-111.809, -125.936, -2.27271, 1.03", "-112.062, -126.48, -2.4678, 1.03", "-112.211, -127.127, -2.74891, 1.03", "-112.312, -127.583, -2.95464, 1.03", "-112.469, -128.205, -3.24605, 1.03", "-113.259, -130.547, -4.4058, 0.74", "-113.737, -131.483, -4.91249, 0.74", "-114.354, -132.142, -5.30041, 0.74", "-115.262, -132.701, -5.71495, 0.74", "-115.837, -132.93, -5.91659, 1.4", "-116.664, -133.169, -6.1387, 1.4", "-117.614, -133.385, -6.30463, 0.81", "-119.079, -133.774, -6.59535, 0.81", "-120.249, -134.262, -6.87546, 0.52", "-120.625, -134.519, -6.97757, 1.03", "-121.104, -135.007, -7.10912, 0.74", "-121.561, -135.612, -7.30946, 1.03", "-122.099, -136.441, -7.58905, 1.03", "-122.446, -137.023, -7.77847, 1.03", "-122.92, -137.76, -8.00989, 1.03", "-123.521, -138.545, -8.29076, 1.03", "-125.338, -140.381, -9.05712, 0.66", "-126.06, -140.921, -9.32677, 0.66", "-126.449, -141.128, -9.4535, 0.66", "-126.859, -141.271, -9.56308, 0.96", "-128.195, -141.545, -9.83221, 0.96", "-129.287, -141.635, -9.966, 0.96", "-130.331, -141.637, -9.966, 0.96", "-130.852, -141.646, -9.966, 0.52", "-131.439, -141.72, -9.94194, 0.52", "-132.0, -141.868, -9.89721, 0.52", "-132.605, -142.1, -9.82881, 0.52", "-133.535, -142.49, -9.71665, 0.52", "-134.18, -142.713, -9.60991, 0.52", "-135.961, -143.163, -9.30104, 0.52", "-136.687, -143.304, -9.17593, 1.18", "-137.588, -143.419, -9.0309, 1.55", "-138.749, -143.503, -8.85959, 1.69", "-140.414, -143.52, -8.63283, 0.96", "-141.764, -143.483, -8.47128, 0.96", "-142.299, -143.446, -8.42084, 0.74", "-143.548, -143.317, -8.43149, 0.74", "-144.422, -143.191, -8.53679, 1.03", "-145.171, -143.067, -8.71252, 1.55", "-146.147, -142.941, -9.05901, 1.03", "-146.896, -142.884, -9.37725, 0.81", "-149.282, -142.89, -10.5178, 0.81", "-150.21, -143.025, -10.9412, 0.81", "-150.858, -143.262, -11.155, 0.81", "-151.674, -143.748, -11.2274, 1.25", "-152.215, -144.124, -11.1323, 1.69", "-152.623, -144.39, -10.9869, 1.69", "-154.516, -145.461, -10.0703, 0.81", "-155.106, -145.681, -9.81858, 0.81", "-155.865, -145.785, -9.56224, 0.81", "-157.08, -145.71, -9.26289, 1.55", "-158.024, -145.555, -9.20995, 1.99", "-158.52, -145.451, -9.26142, 1.99", "-159.822, -145.162, -9.58308, 0.81", "-160.604, -145.006, -9.81842, 0.81", "-161.499, -144.882, -10.1312, 0.81", "-163.72, -144.776, -10.9889, 0.52", "-164.42, -144.815, -11.3629, 0.88", "-165.188, -144.945, -11.8464, 1.62", "-165.367, -145.004, -11.9706, 2.06", "-166.012, -145.279, -12.3995, 1.33", "-166.714, -145.609, -12.8228, 1.11", "-168.988, -146.627, -13.9222, 0.66", "-169.506, -146.853, -14.1769, 0.44", "-170.407, -147.239, -14.5967, 0.44", "-171.192, -147.564, -14.9039, 0.29", "-171.651, -147.711, -15.0262, 0.29", "-171.95, -147.786, -15.0593, 0.07", "-172.506, -147.907, -15.0357, 0.07", "-173.118, -148.012, -15.0286, 1.33", "-173.728, -148.095, -15.0498, 2.21", "-175.506, -148.396, -15.2241, 0.07", "-176.224, -148.54, -15.3001, 0.07", "-176.429, -148.581, -15.3235, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-102.869, -119.13, -2.13032, 0.44", "-101.849, -119.627, -2.13032, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-29.7944, -15.1798, 0.070692, 2.06", "-33.4225, -15.2048, -2.48728, 2.06", "-33.4225, -15.2048, -2.48728, 2.06", "-34.4981, -15.4095, -3.10332, 0.96", "-35.1723, -15.5877, -3.45237, 0.74", "-35.8001, -15.799, -3.74471, 0.74", "-36.31, -16.0161, -3.95461, 0.74", "-36.7599, -16.3948, -3.95461, 0.74", "-37.0966, -16.6925, -3.95245, 0.74", "-37.2914, -16.8734, -3.95017, 0.74", "-37.617, -17.15, -3.94557, 0.74", "-38.1737, -17.555, -3.93751, 0.74", "-38.6429, -17.8717, -3.93075, 1.55", "-39.5252, -18.4316, -3.91756, 1.92", "-40.4948, -19.0311, -3.90247, 1.92", "-41.0316, -19.3532, -3.8939, 1.92", "-41.6563, -19.7118, -3.88375, 1.92", "-42.1187, -19.9657, -3.87636, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-29.7944, -15.1798, 0.070692, 1.18", "-30.7805, -14.8695, -0.327864, 1.18", "-31.632, -14.6213, -0.645002, 1.18", "-32.5694, -14.3402, -0.946393, 1.18", "-34.0941, -13.8272, -1.86644, 1.18", "-36.759, -12.8209, -3.77478, 1.18", "-38.1214, -12.2569, -4.78456, 1.18", "-38.902, -11.9138, -5.38194, 1.18", "-40.4542, -11.1425, -6.59761, 1.18", "-45.1104, -8.46449, -10.2452, 1.55", "-45.8793, -7.9374, -11.1853, 1.55", "-46.796, -7.22656, -12.6002, 1.55", "-47.4575, -6.68772, -13.7832, 1.55", "-48.2959, -6.01281, -15.3919, 1.55", "-48.9274, -5.51928, -16.6755, 1.55", "-53.762, -2.02603, -26.2389, 0.96", "-53.9848, -1.87163, -26.7281, 0.66", "-54.1951, -1.72914, -27.2621, 0.66", "-54.4485, -1.56815, -28.0115, 0.66", "-54.5064, -1.53218, -28.2264, 0.66", "-54.5809, -1.48677, -28.5768, 0.66", "-53.9973, -1.55821, -28.5768, 0.66", "-53.3167, -1.45052, -28.5768, 0.66", "-52.5603, -1.17331, -28.5768, 0.66", "-52.3688, -1.07523, -28.5768, 0.74", "-51.7805, -0.644808, -28.5768, 0.74", "-51.4607, -0.35112, -28.5768, 0.74", "-51.1998, 0.145322, -28.9782, 0.66", "-50.9915, 0.92141, -29.8253, 1.99", "-50.9289, 1.42564, -30.407, 2.73", "-50.9516, 2.07898, -31.2021, 2.73", "-50.9681, 2.11168, -31.3504, 2.28", "-51.6143, 3.07283, -36.649, 0.88", "-51.6574, 3.13376, -37.0078, 0.52", "-51.7292, 3.23107, -37.6254, 0.52", "-51.872, 3.41122, -38.8395, 1.77", "-54.6071, 6.60577, -61.0319, 0.88", "-54.6704, 6.67695, -61.5287, 0.88", "-54.8357, 6.85342, -62.7887, 0.88", "-54.8971, 6.92163, -63.2614, 0.88", "-55.0379, 7.09307, -64.3833, 1.84", "-55.1399, 7.25151, -65.2559, 0.52", "-55.4781, 7.81032, -66.121, 0.29", "-55.6235, 8.03463, -66.5359, 0.29", "-55.956, 8.49769, -67.5488, 1.11", "-56.0868, 8.69045, -68.022, 0.07", "-56.3319, 9.10814, -69.1822, 0.07", "-56.6244, 9.58387, -70.7625, 0.07", "-56.7435, 9.75344, -71.4016, 0.07", "-56.8351, 9.86642, -71.9374, 0.07", "-56.9182, 9.94951, -72.5056, 0.07", "-56.9609, 9.98494, -72.8186, 0.15", "-57.0903, 10.0716, -73.5209, 0.66", "-57.2643, 10.1653, -74.1916, 0.66", "-57.5441, 10.3033, -75.0138, 0.74", "-58.1262, 10.5572, -76.4416, 0.74", "-58.2427, 10.615, -76.6806, 0.74", "-59.3718, 11.22, -78.3537, 0.29", "-59.8754, 11.4786, -78.8571, 0.29", "-60.4449, 11.7666, -79.2746, 0.29", "-61.7365, 12.4156, -80.1034, 0.29", "-62.3562, 12.7252, -80.5407, 0.29", "-63.3772, 13.2362, -81.459, 1.77", "-64.1696, 13.6416, -82.328, 0.74", "-64.4083, 13.767, -82.5875, 0.22", "-64.9328, 14.0478, -83.1336, 0.22", "-65.8804, 14.5717, -84.0753, 0.22", "-66.3637, 14.8585, -84.5677, 0.22", "-66.7664, 15.1483, -85.0493, 0.22", "-67.1921, 15.4903, -85.584, 0.22", "-67.6181, 15.8414, -86.0834, 0.22", "-68.0987, 16.2641, -86.5943, 1.55", "-68.6311, 16.7529, -87.104, 0.44", "-69.6292, 17.7162, -88.1347, 0.44", "-70.113, 18.214, -88.7333, 0.44", "-70.214, 18.3236, -88.8822, 0.44", "-70.8992, 19.0884, -90.0959, 1.47", "-71.1872, 19.4218, -90.7095, 0.44", "-71.4532, 19.7586, -91.3293, 0.44", "-71.7598, 20.1856, -92.0126, 0.44", "-71.9645, 20.5141, -92.491, 0.44", "-72.1776, 20.8945, -93.0338, 0.44", "-72.3522, 21.2636, -93.5989, 0.44", "-72.5931, 21.8179, -94.4762, 1.4", "-72.7182, 22.1002, -94.9595, 0.37", "-72.8801, 22.4644, -95.724, 0.37", "-72.9482, 22.6129, -96.0905, 0.37", "-73.1595, 23.0251, -97.1059, 0.37", "-73.2803, 23.233, -97.5638, 0.37", "-73.6653, 23.8686, -98.8626, 0.37", "-73.9931, 24.4058, -99.8678, 0.37", "-74.1359, 24.6377, -100.263, 0.37", "-74.6624, 25.4973, -101.688, 2.06", "-75.0687, 26.1834, -102.763, 0.37", "-75.1811, 26.3776, -103.066, 0.37", "-75.5258, 26.9631, -103.949, 0.37", "-75.8747, 27.5268, -104.793, 0.37", "-76.2497, 28.1009, -105.682, 0.37", "-76.537, 28.5127, -106.379, 0.37", "-76.7178, 28.7498, -106.781, 0.37", "-76.9418, 29.0301, -107.212, 0.37", "-77.3577, 29.5451, -107.949, 1.03", "-77.749, 30.0157, -108.57, 0.52", "-77.8954, 30.1914, -108.776, 0.22", "-78.3566, 30.732, -109.462, 0.22", "-78.8992, 31.367, -110.353, 0.22", "-79.4103, 31.9646, -111.319, 0.22", "-79.7843, 32.3959, -112.141, 1.69", "-80.1503, 32.8124, -112.999, 0.37", "-80.6024, 33.3324, -114.152, 0.37", "-80.8335, 33.5843, -114.74, 0.37", "-81.0145, 33.7667, -115.167, 0.37", "-81.3033, 34.0416, -115.83, 0.37", "-81.5485, 34.2543, -116.474, 0.37", "-81.9918, 34.5942, -117.656, 0.37", "-82.1443, 34.7073, -118.054, 1.33", "-82.4371, 34.9603, -118.808, 0.52", "-82.5585, 35.0744, -119.075, 0.37", "-83.1527, 35.6702, -120.267, 0.37", "-83.2524, 35.7777, -120.464, 0.37", "-83.8862, 36.5186, -121.698, 0.37", "-84.4125, 37.2047, -122.864, 1.55", "-84.8073, 37.7504, -123.839, 0.52", "-84.861, 37.8269, -123.973, 0.52", "-85.093, 38.1811, -124.61, 0.37", "-85.2257, 38.4055, -125.043, 0.37", "-85.4189, 38.8338, -125.814, 0.37", "-85.4432, 38.9382, -125.985, 0.37", "-85.4751, 39.3077, -126.547, 0.37", "-85.5108, 40.1407, -127.702, 0.37", "-85.5131, 40.2747, -127.894, 0.37", "-85.5702, 40.8554, -128.923, 1.84", "-85.6465, 41.3748, -129.956, 0.44", "-85.6776, 41.5207, -130.301, 0.44", "-85.7557, 41.7664, -130.938, 0.44", "-86.044, 42.3577, -132.627, 0.44", "-86.361, 42.824, -134.182, 0.44", "-86.4354, 42.9098, -134.493, 0.44", "-86.6706, 43.1907, -135.399, 0.66", "-86.8042, 43.4324, -135.95, 0.66", "-86.8584, 43.5648, -136.184, 0.66", "-86.9394, 43.9142, -136.638, 0.66", "-87.0138, 44.5577, -137.342, 0.66", "-87.042, 44.9395, -137.775, 0.66", "-87.051, 46.0904, -139.276, 1.25", "-87.051, 46.0904, -139.276, 1.69", "-87.0188, 46.5129, -140.214, 1.03", "-87.0145, 46.6698, -140.648, 0.44", "-87.0362, 46.9642, -141.628, 0.44", "-87.1177, 47.3868, -143.124, 0.44", "-87.3451, 48.0714, -145.478, 0.66", "-87.4963, 48.4285, -146.606, 0.66", "-87.7037, 48.858, -147.882, 0.66", "-87.8818, 49.2158, -148.818, 0.66", "-88.0736, 49.6124, -149.686, 0.66", "-88.4815, 50.5256, -151.366, 1.18", "-88.8128, 51.3154, -152.747, 1.18", "-88.8777, 51.4927, -153.078, 1.18", "-88.9809, 51.9212, -153.968, 1.18", "-89.027, 52.2026, -154.669, 0.96", "-89.0831, 52.5708, -155.794, 0.96", "-89.1356, 53.0255, -157.548, 0.96", "-89.2123, 53.3953, -159.351, 0.96", "-89.2825, 53.5411, -160.221, 0.96", "-89.327, 53.577, -160.588, 0.96", "-89.6498, 53.622, -162.263, 0.96", "-89.7477, 53.6227, -162.571, 0.96", "-89.9673, 53.6463, -163.013, 0.74", "-90.3369, 53.7518, -163.544, 0.74", "-90.9296, 54.073, -164.279, 0.74", "-91.2116, 54.268, -164.604, 0.74", "-91.9966, 54.8587, -165.465, 0.74", "-92.4444, 55.168, -165.948, 1.11", "-93.1652, 55.6224, -166.715, 0.74", "-93.4625, 55.7878, -167.056, 0.74", "-93.9094, 55.9729, -167.603, 0.74", "-94.42, 56.046, -168.32, 0.74", "-94.9104, 55.9926, -169.101, 0.74", "-95.1998, 55.9345, -169.593, 0.74", "-95.6757, 55.8485, -170.366, 0.74", "-96.2283, 55.7994, -171.199, 0.74", "-96.9697, 55.8291, -172.28, 1.4", "-97.2881, 55.8862, -172.727, 1.4", "-97.4926, 55.9495, -173.023, 1.77", "-98.2539, 56.2165, -174.062, 0.74", "-98.7204, 56.3959, -174.649, 0.74", "-99.2737, 56.6328, -175.293, 0.74", "-99.7707, 56.8646, -175.758, 0.74", "-100.472, 57.2032, -176.298, 0.74", "-101.149, 57.5363, -176.789, 0.74", "-101.842, 57.8902, -177.263, 0.74", "-102.297, 58.133, -177.556, 0.74", "-103.508, 58.7785, -178.266, 1.47", "-104.304, 59.1978, -178.709, 0.44", "-105.185, 59.6395, -179.174, 0.44", "-105.507, 59.7679, -179.35, 0.44", "-106.35, 59.9591, -179.783, 0.44", "-106.552, 59.9716, -179.883, 0.44", "-106.753, 59.9486, -179.979, 0.44", "-107.431, 59.833, -180.229, 1.25", "-108.797, 59.653, -180.544, 0.44", "-109.375, 59.6083, -180.642, 0.37", "-109.899, 59.5913, -180.706, 0.37", "-110.465, 59.622, -180.768, 0.37", "-111.477, 59.769, -180.943, 0.88", "-112.723, 60.0821, -181.236, 0.29", "-113.29, 60.2819, -181.401, 0.29", "-113.552, 60.3889, -181.492, 0.52", "-114.796, 60.9425, -181.971, 1.47", "-116.632, 61.7763, -182.733, 0.44", "-117.317, 62.0609, -183.045, 0.44", "-117.889, 62.2686, -183.322, 0.74", "-118.496, 62.43, -183.597, 0.66", "-119.111, 62.5251, -183.829, 0.66", "-119.755, 62.5344, -183.992, 0.66", "-120.741, 62.4637, -184.099, 0.88", "-121.053, 62.4348, -184.119, 0.88", "-122.032, 62.3665, -184.149, 1.25", "-123.217, 62.3584, -184.154, 0.52", "-124.255, 62.4486, -184.154, 0.29", "-124.556, 62.5134, -184.154, 0.29", "-124.999, 62.6417, -184.163, 0.29", "-125.629, 62.8369, -184.194, 0.29", "-126.342, 63.048, -184.257, 0.29", "-127.188, 63.253, -184.363, 0.29", "-128.285, 63.425, -184.525, 1.11", "-129.508, 63.5159, -184.709, 0.52", "-129.841, 63.5198, -184.759, 0.22", "-130.526, 63.4967, -184.859, 0.22", "-130.752, 63.483, -184.894, 0.22", "-131.695, 63.3358, -185.067, 1.18", "-132.609, 63.0659, -185.233, 0.59", "-133.077, 62.8906, -185.338, 0.22", "-133.408, 62.7597, -185.421, 0.22", "-133.776, 62.6059, -185.54, 0.22", "-135.102, 62.0206, -186.066, 0.96", "-136.347, 61.4273, -186.679, 0.15", "-137.028, 61.1025, -187.07, 0.37", "-137.444, 60.9356, -187.34, 0.37", "-138.017, 60.7809, -187.723, 0.59", "-138.365, 60.7423, -187.969, 0.59", "-138.769, 60.7851, -188.269, 0.59", "-139.078, 60.825, -188.5, 0.59", "-139.663, 60.7708, -188.849, 0.59", "-140.656, 60.4924, -189.36, 0.59", "-141.009, 60.3815, -189.512, 0.59", "-141.646, 60.2189, -189.758, 0.59", "-142.262, 60.0933, -189.985, 0.74", "-142.92, 59.9777, -190.238, 0.74", "-143.685, 59.892, -190.604, 0.74", "-144.784, 59.8559, -191.23, 1.11", "-146.135, 59.8409, -192.063, 0.44", "-146.744, 59.8485, -192.472, 0.44", "-147.216, 59.8532, -192.811, 1.18", "-148.61, 59.8345, -193.878, 0.52", "-148.927, 59.8179, -194.13, 0.52", "-149.412, 59.8134, -194.473, 0.52", "-149.693, 59.8482, -194.621, 0.29", "-150.241, 59.9632, -194.796, 0.29", "-150.846, 60.1112, -194.904, 0.29", "-151.772, 60.3382, -194.962, 1.18", "-153.207, 60.6815, -195.065, 0.29", "-153.917, 60.8557, -195.141, 0.29", "-154.563, 61.0074, -195.236, 0.29", "-155.32, 61.1576, -195.374, 0.96", "-156.537, 61.2732, -195.649, 0.44", "-157.195, 61.2313, -195.851, 0.44", "-157.671, 61.1299, -196.043, 0.44", "-158.047, 61.039, -196.21, 0.44", "-158.346, 60.9825, -196.312, 0.44", "-158.85, 60.9242, -196.398, 0.44", "-159.499, 60.9444, -196.381, 0.44", "-160.413, 61.0684, -196.256, 1.03", "-161.141, 61.2014, -196.122, 0.59", "-162.743, 61.5288, -195.794, 0.59", "-163.594, 61.7155, -195.612, 1.11", "-164.773, 61.9659, -195.348, 0.59", "-165.647, 62.135, -195.143, 0.29", "-166.029, 62.1951, -195.058, 0.29", "-166.481, 62.2663, -194.991, 0.29", "-166.881, 62.386, -194.986, 0.29", "-167.422, 62.6408, -195.044, 0.29", "-167.853, 62.911, -195.143, 0.29", "-168.147, 63.0977, -195.234, 0.29", "-169.002, 63.6254, -195.52, 1.18", "-170.365, 64.4252, -195.991, 0.52", "-171.421, 65.0356, -196.34, 0.37", "-171.731, 65.2136, -196.432, 0.37", "-172.646, 65.6844, -196.698, 0.37", "-173.044, 65.8633, -196.811, 0.37", "-173.713, 66.1268, -196.998, 0.37", "-174.947, 66.6483, -197.339, 1.33", "-176.017, 67.2292, -197.624, 0.59", "-176.713, 67.7016, -197.864, 0.37", "-176.945, 67.8979, -197.971, 0.37", "-177.236, 68.1738, -198.138, 0.37", "-177.9, 68.8817, -198.614, 0.37", "-178.209, 69.2327, -198.857, 0.37", "-178.653, 69.7804, -199.225, 0.37", "-179.112, 70.3838, -199.621, 0.37", "-179.486, 70.9083, -199.952, 0.37", "-180.043, 71.7867, -200.485, 0.96", "-180.725, 72.9984, -201.214, 0.52", "-181.013, 73.6223, -201.57, 0.52", "-181.174, 74.125, -201.839, 0.52", "-181.27, 74.7563, -202.157, 1.03", "-181.239, 75.6171, -202.585, 0.52", "-181.171, 75.9746, -202.756, 0.52", "-181.09, 76.2563, -202.887, 0.52", "-180.987, 76.7693, -203.104, 0.52", "-180.95, 77.1606, -203.252, 0.52", "-180.983, 77.6688, -203.435, 0.52", "-181.139, 78.3615, -203.671, 0.52", "-181.251, 78.6943, -203.781, 0.52", "-181.768, 79.7542, -204.133, 1.03", "-182.059, 80.2202, -204.294, 0.37", "-182.565, 80.9401, -204.544, 0.37", "-182.833, 81.3087, -204.668, 0.37", "-183.002, 81.5468, -204.742, 1.18", "-183.467, 82.204, -204.987, 0.07", "-183.69, 82.5078, -205.127, 0.07", "-184.066, 83.0657, -205.417, 0.07", "-184.301, 83.4717, -205.636, 0.74", "-184.537, 83.9314, -205.882, 0.37", "-184.956, 84.8282, -206.373, 0.37", "-185.24, 85.4897, -206.757, 0.37", "-185.502, 86.0254, -207.089, 0.96", "-185.636, 86.2466, -207.248, 0.96" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.0742, -5.39302, -13.8752, 0.59", "28.3915, -8.49306, 13.6068, 0.59", "28.4613, -8.65192, 14.84, 0.59", "28.53, -8.81246, 15.9368, 0.59", "28.67, -9.14583, 18.1372, 0.59", "28.862, -9.61959, 21.1152, 0.59", "28.9956, -9.96669, 23.1553, 0.59", "29.3149, -11.4144, 22.3327, 0.59", "29.4981, -12.4321, 21.823, 0.59", "29.7955, -14.2129, 21.0716, 0.59", "30.0487, -15.2234, 20.7622, 0.59", "30.4089, -16.0427, 20.4994, 0.59", "30.9052, -16.8639, 20.1762, 0.44", "31.4562, -17.6369, 19.8069, 0.44", "32.4379, -18.8962, 19.1777, 0.44", "33.9532, -20.7096, 18.2868, 0.44", "35.072, -22.0838, 17.6063, 0.44", "35.515, -22.6996, 17.3277, 0.44", "36.2654, -23.8509, 16.8225, 0.44", "36.7256, -24.5752, 16.5145, 0.44", "37.1186, -25.1943, 16.2729, 0.44", "37.8388, -26.2706, 15.9191, 0.44", "40.2353, -29.6024, 14.9285, 0.44", "41.1069, -30.7213, 14.6029, 0.44", "41.8533, -31.6204, 14.3453, 0.44", "42.7607, -32.6952, 14.0177, 0.44", "43.6361, -33.7567, 13.6513, 0.44", "44.5583, -34.9008, 13.2252, 0.44", "45.131, -35.7047, 12.9028, 0.44", "45.6554, -36.6025, 12.4713, 0.44", "46.119, -37.5416, 11.916, 0.44", "46.7399, -39.0467, 10.9428, 0.44", "47.2453, -40.4251, 10.0888, 0.44", "47.8411, -42.1506, 9.10464, 0.44", "48.6201, -44.555, 7.79734, 0.44", "49.1099, -46.1023, 7.02059, 0.44", "50.0078, -48.8376, 5.76376, 0.44", "50.8603, -51.2843, 4.80736, 0.44", "51.4064, -52.7646, 4.35073, 0.44", "51.9191, -54.0899, 4.07117, 0.44", "52.5052, -55.5863, 3.90282, 0.44", "53.0976, -57.0489, 3.82451, 0.44", "54.4421, -60.2804, 3.77227, 0.44", "55.1732, -62.1086, 3.76987, 0.44", "55.5797, -63.1098, 3.7856, 0.44", "56.2833, -64.8294, 3.84552, 0.44", "56.7828, -66.0554, 3.88811, 0.44", "57.177, -67.0735, 3.92195, 0.44", "57.6737, -68.4247, 3.9615, 0.44", "58.3034, -70.2111, 3.90303, 0.44", "58.9534, -72.1518, 3.79139, 0.44", "59.5773, -74.0814, 3.65306, 0.44", "60.0104, -75.3937, 3.52061, 0.44", "60.7565, -77.4308, 3.27823, 0.44", "61.6537, -79.6021, 2.99715, 0.44", "62.6202, -81.7395, 2.70553, 0.44", "63.9268, -84.325, 2.30741, 0.44", "65.0364, -86.333, 1.9512, 0.44", "66.3897, -88.5796, 1.5102, 0.44", "67.8983, -90.9441, 0.97552, 0.44", "69.2167, -92.9654, 0.50295, 0.44", "70.1124, -94.3674, 0.153289, 0.44", "71.45, -96.6123, -0.409548, 0.44", "72.5298, -98.5913, -0.872166, 0.44", "73.7664, -101.038, -1.58295, 0.44", "74.7432, -103.15, -2.27834, 0.44", "75.5474, -105.037, -2.92942, 0.44", "76.0831, -106.349, -3.41026, 0.44", "76.6632, -107.776, -3.9621, 0.44", "77.9115, -110.769, -5.00497, 0.44", "78.1908, -111.398, -5.19371, 0.44", "78.7783, -112.636, -5.48844, 0.44", "80.2349, -115.517, -5.93435, 0.44", "80.974, -116.972, -5.98691, 0.44", "82.1909, -119.431, -5.7335, 0.44", "82.721, -120.559, -5.48579, 0.44", "83.4899, -122.257, -5.05648, 0.44", "84.0084, -123.48, -4.67425, 0.44", "84.7778, -125.491, -3.83896, 0.44", "85.485, -127.463, -3.0028, 0.44", "85.7472, -128.215, -2.6804, 0.44", "86.1983, -129.537, -2.08084, 0.44", "86.8466, -131.404, -1.17356, 0.44", "87.4867, -133.197, -0.276404, 0.44", "88.2736, -135.049, 0.628934, 0.44", "88.9688, -136.393, 1.18158, 0.44", "89.5994, -137.39, 1.50793, 0.44", "91.4881, -139.778, 1.99005, 0.44", "92.6399, -140.979, 1.99835, 0.44", "94.5445, -142.685, 1.66167, 0.44", "96.7284, -144.42, 1.06497, 0.44", "98.3794, -145.623, 0.508569, 0.44", "100.438, -146.97, -0.235997, 0.44", "102.581, -148.204, -1.04878, 0.44", "104.246, -149.063, -1.59377, 0.44", "106.21, -149.982, -2.1518, 0.44", "107.906, -150.683, -2.58396, 0.44", "109.5, -151.271, -3.01944, 0.44", "111.409, -151.908, -3.53005, 0.44", "114.78, -152.889, -4.3838, 0.44", "117.754, -153.683, -5.10988, 0.44", "120.665, -154.436, -5.88372, 0.44", "122.777, -155.023, -6.50038, 0.44", "124.06, -155.441, -6.92215, 0.44", "125.848, -156.136, -7.64219, 0.44", "127.512, -156.919, -8.41254, 0.44", "129.869, -158.288, -9.60524, 0.44", "131.506, -159.423, -10.5315, 0.44", "133.018, -160.593, -11.5405, 0.44", "134.767, -162.126, -12.8946, 0.44", "135.72, -163.071, -13.7921, 0.44", "136.738, -164.166, -14.8846, 0.44", "137.909, -165.521, -16.202, 0.44", "138.709, -166.466, -17.0363, 0.44", "139.629, -167.548, -17.8566, 0.44", "141.621, -169.841, -19.2424, 0.44", "142.74, -171.131, -19.8772, 0.44", "143.853, -172.416, -20.3465, 0.44", "145.372, -174.207, -20.8004, 0.44", "146.647, -175.727, -21.0252, 0.44", "148.479, -177.919, -21.1269, 0.44", "150.078, -179.841, -21.0152, 0.44", "151.297, -181.316, -20.8536, 0.44", "152.234, -182.44, -20.705, 0.44", "153.766, -184.348, -20.4075, 0.44", "155.202, -186.25, -20.0527, 0.44", "156.13, -187.513, -19.7934, 0.44", "157.889, -189.932, -19.2581, 0.44", "159.006, -191.497, -18.8986, 0.44", "160.83, -194.098, -18.3059, 0.44", "162.282, -196.238, -17.8661, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.0742, -5.39302, -13.8752, 1.25", "30.6336, -4.89644, -15.3062, 1.25", "31.9476, -4.71312, -15.8345, 1.25", "33.2126, -4.53664, -16.3431, 1.69", "34.8507, -4.3081, -17.0016, 2.87", "35.8631, -4.16686, -17.4087, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.2041, 24.577, -1.77581, 0.806721", "43.949, 33.9076, -1.77581, 0.806721", "55.6938, 43.2381, -1.77581, 0.806721" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-22.7694, 19.7216, 22.1183, 0.66", "-24.9494, 19.3706, 22.1183, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-22.7694, 19.7216, 22.1183, 0.66", "-24.3394, 20.7746, 22.1183, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-42.1187, -19.9657, -3.87636, 1.84", "-45.5251, -19.6021, 0.243508, 1.84", "-46.3658, -19.567, 0.821522, 0.66", "-46.9142, -19.5783, 1.05054, 1.11", "-47.2638, -19.6155, 1.15447, 1.92", "-48.1536, -19.7765, 1.25401, 1.92", "-49.3137, -20.0773, 1.2538, 1.4", "-51.195, -20.8539, 0.731988, 1.4", "-52.4997, -21.6022, 0.285796, 1.03", "-53.5896, -22.4049, -0.35775, 1.03", "-55.5, -24.1202, -1.86245, 1.4", "-56.0092, -24.6636, -2.3577, 1.4", "-56.6558, -25.4543, -3.0973, 1.11", "-57.1424, -26.1124, -3.73461, 1.77", "-58.9907, -28.6111, -6.20516, 2.06", "-59.7887, -29.544, -7.12607, 1.33", "-60.2166, -29.9354, -7.46778, 0.74", "-60.6722, -30.2606, -7.77082, 0.44", "-60.9961, -30.4401, -7.9918, 0.44", "-61.3343, -30.5988, -8.20828, 1.25", "-62.132, -30.9336, -8.58174, 0.96", "-63.0131, -31.3338, -9.09459, 0.74", "-63.5261, -31.6355, -9.41643, 0.37", "-65.544, -33.1739, -10.6521, 0.07", "-65.8987, -33.4943, -10.8457, 1.03", "-66.5032, -34.0967, -11.1233, 1.55", "-67.3826, -34.9912, -11.436, 2.06", "-68.2568, -35.8648, -11.6409, 2.58", "-69.3252, -36.8792, -11.7563, 1.77", "-70.2239, -37.6774, -11.7403, 0.96", "-71.0345, -38.3562, -11.9232, 0.96", "-71.8633, -39.0286, -12.3001, 1.25", "-72.5149, -39.5384, -12.7241, 1.25", "-73.2171, -40.0829, -13.2768, 1.25", "-74.0282, -40.7428, -14.001, 1.25", "-77.2021, -43.4859, -16.9744, 0.66", "-77.6363, -43.8888, -17.3769, 0.66", "-78.2542, -44.5, -18.0303, 1.18", "-78.9675, -45.2134, -18.8017, 2.14", "-79.5678, -45.8237, -19.4312, 2.65", "-80.2293, -46.5228, -20.0481, 2.65", "-80.9286, -47.3164, -20.5272, 1.47", "-82.9031, -49.7892, -22.0858, 0.96", "-83.3804, -50.4795, -22.5282, 0.96", "-83.6345, -50.915, -22.8025, 0.96", "-83.9269, -51.5555, -23.1712, 0.96", "-84.2067, -52.2834, -23.5334, 0.96", "-84.3746, -52.7603, -23.6916, 0.96", "-84.6068, -53.3551, -23.6916, 0.96", "-84.9186, -53.8551, -23.6916, 0.96", "-85.3977, -54.1231, -23.8587, 0.96", "-86.5152, -54.4857, -24.4034, 0.96", "-87.073, -54.6626, -24.8831, 0.96", "-87.6319, -54.8638, -25.4473, 0.96", "-88.0759, -55.0457, -25.9132, 0.96", "-89.6755, -55.8312, -27.8964, 0.07", "-90.1781, -56.1362, -28.6032, 1.77", "-91.8177, -57.4287, -31.212, 1.25", "-92.1169, -57.7024, -31.718, 0.81", "-92.6298, -58.2378, -32.5941, 0.66", "-93.6105, -59.4062, -34.1863, 0.29", "-93.8181, -59.6747, -34.4762, 0.29", "-94.1353, -60.1235, -34.8736, 0.29", "-94.4038, -60.5022, -35.1044, 1.47", "-94.9852, -61.2723, -35.6585, 1.92", "-95.4341, -61.8593, -36.0955, 1.4", "-96.3957, -63.0381, -37.2431, 1.4", "-97.1014, -63.8715, -38.2046, 0.66", "-97.6409, -64.4766, -38.969, 0.37", "-99.0511, -65.9684, -40.9523, 0.07", "-99.2718, -66.1939, -41.2602, 0.07", "-101.291, -68.0581, -43.8467, 1.4", "-101.909, -68.5973, -44.6804, 1.84", "-102.496, -69.079, -45.4698, 1.18", "-102.95, -69.459, -46.048, 0.15", "-103.49, -69.8904, -46.6022, 0.15", "-104.27, -70.5109, -47.2117, 0.15", "-107.065, -72.8276, -48.6808, 1.55", "-108.043, -73.672, -49.2213, 0.96", "-108.539, -74.1421, -49.4842, 0.07", "-108.856, -74.454, -49.8518, 1.4", "-110.092, -75.6587, -51.5981, 1.4", "-111.229, -76.8502, -53.389, 0.52", "-111.587, -77.2358, -53.9837, 0.15", "-112.014, -77.7186, -54.7387, 0.15", "-114.56, -80.7392, -59.431, 1.62", "-115.094, -81.4172, -60.4656, 0.52", "-115.297, -81.6692, -60.8844, 0.15", "-115.506, -81.9242, -61.2731, 0.15", "-116.252, -82.7909, -62.5128, 0.15", "-116.575, -83.1545, -62.9393, 1.33", "-116.955, -83.5682, -63.2297, 1.33", "-118.807, -85.411, -65.1155, 1.99", "-119.193, -85.7527, -65.5358, 1.62", "-119.897, -86.3315, -66.3033, 0.44", "-120.441, -86.7618, -66.8881, 0.44", "-120.87, -87.0883, -67.3058, 0.44", "-122.947, -88.5272, -69.9152, 1.4", "-123.378, -88.8109, -70.5086, 1.84", "-123.97, -89.1756, -71.3406, 0.88", "-124.589, -89.528, -72.2444, 0.88", "-125.109, -89.8046, -73.0002, 0.88", "-128.674, -91.6936, -78.0067, 0.29", "-129.259, -91.9985, -78.784, 1.84", "-130.323, -92.5479, -80.2124, 0.59", "-131.657, -93.2211, -81.9758, 0.07", "-131.861, -93.3282, -82.2613, 0.81", "-132.399, -93.629, -82.9435, 0.81", "-133.712, -94.382, -84.2571, 0.07", "-134.161, -94.6324, -84.7182, 1.03", "-134.509, -94.8185, -85.059, 1.69", "-137.672, -96.5127, -87.8455, 0.15", "-139.096, -97.2639, -89.0213, 0.15", "-139.679, -97.5687, -89.4546, 1.25", "-140.243, -97.8663, -89.8204, 1.69", "-141.334, -98.4531, -90.4471, 0.74", "-142.508, -99.0947, -91.0064, 0.07", "-143.214, -99.4828, -91.2294, 0.66", "-144.038, -99.9449, -91.5132, 1.62", "-145.167, -100.563, -91.8906, 1.62", "-146.234, -101.115, -92.2184, 0.52", "-147.805, -101.886, -92.7444, 0.52", "-148.842, -102.389, -93.2069, 0.29", "-149.551, -102.732, -93.5926, 0.59", "-150.449, -103.152, -94.1071, 0.59", "-151.191, -103.478, -94.5368, 1.11", "-152.736, -104.136, -95.4482, 1.55", "-155.018, -105.089, -96.7633, 1.55", "-156.126, -105.555, -97.4372, 0.88", "-157.791, -106.274, -98.4529, 0.59", "-159.303, -106.962, -99.3205, 0.22", "-160.292, -107.425, -99.8044, 0.22", "-160.916, -107.712, -100.026, 0.66", "-162.186, -108.292, -100.409, 1.18", "-162.845, -108.601, -100.677, 1.11", "-164.021, -109.132, -101.237, 0.59", "-164.931, -109.517, -101.686, 0.59", "-166.043, -109.903, -102.218, 0.29", "-167.591, -110.315, -102.877, 1.18", "-169.37, -110.673, -103.726, 1.55", "-170.25, -110.799, -104.248, 1.55", "-171.651, -110.96, -105.187, 0.44", "-172.912, -111.066, -106.083, 0.37", "-174.263, -111.147, -107.091, 0.37", "-177.051, -111.256, -109.18, 1.4", "-179.12, -111.297, -110.836, 0.15", "-179.613, -111.306, -111.254, 0.15", "-180.229, -111.315, -111.783, 0.15", "-181.178, -111.327, -112.522, 1.55", "-181.79, -111.35, -112.928, 1.55", "-183.729, -111.466, -113.848, 0.07", "-184.974, -111.545, -114.367, 1.47", "-185.978, -111.61, -114.782, 1.18", "-187.821, -111.786, -115.517, 1.69", "-189.557, -111.974, -116.124, 0.59", "-190.127, -112.045, -116.309, 1.18" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-42.1187, -19.9657, -3.87636, 1.4", "-42.4971, -22.2396, -2.38308, 1.4", "-42.6367, -22.8587, -2.03918, 0.96", "-42.7279, -23.1967, -1.88263, 0.66", "-42.8882, -23.712, -1.69091, 0.66", "-43.0454, -24.1813, -1.55786, 0.52", "-43.237, -24.7365, -1.43754, 0.44", "-43.3367, -24.982, -1.43383, 0.81", "-43.5163, -25.4564, -1.42705, 1.69", "-43.7456, -26.1456, -1.41562, 1.99", "-44.0218, -27.102, -1.39901, 1.69", "-44.2547, -28.0088, -1.3842, 0.66", "-44.4051, -28.6426, -1.37544, 0.66", "-44.484, -28.993, -1.37179, 0.66", "-44.5477, -29.2831, -1.36666, 0.66", "-44.7837, -30.332, -1.34298, 1.47", "-45.0014, -31.2541, -1.31942, 2.14", "-45.2252, -32.1561, -1.29627, 2.14", "-45.3769, -32.7871, -1.28141, 2.14", "-45.6435, -33.9031, -1.25908, 1.33", "-45.8297, -34.7511, -1.24549, 0.81", "-45.9309, -35.3103, -1.23734, 1.18", "-46.0977, -36.3649, -1.22432, 1.62", "-46.2804, -37.4116, -1.21432, 1.62", "-46.53, -38.6733, -1.20712, 1.62", "-46.7627, -39.6616, -1.20712, 0.81", "-46.9418, -40.2583, -1.22439, 0.59", "-47.2121, -40.9461, -1.26677, 1.03", "-47.5922, -41.6916, -1.3401, 1.03", "-47.8308, -42.0692, -1.39272, 1.03", "-48.09, -42.4387, -1.45913, 1.03", "-48.6219, -43.242, -1.61688, 0.66", "-48.8732, -43.7645, -1.71082, 0.44", "-48.989, -44.3288, -1.78696, 0.44", "-48.991, -44.6732, -1.81928, 1.25", "-48.9433, -45.2661, -1.851, 1.25", "-48.8614, -45.9724, -1.86496, 1.69", "-48.7749, -46.7648, -1.85321, 1.69", "-48.6881, -47.7582, -1.83981, 1.11", "-48.6498, -48.3109, -1.83369, 0.81", "-48.61, -49.2374, -1.82366, 0.81", "-48.5853, -50.0263, -1.81577, 0.81", "-48.5694, -50.6318, -1.81045, 0.81", "-48.5541, -51.2082, -1.80629, 0.81", "-48.5436, -51.9629, -1.80245, 0.81", "-48.5493, -53.1436, -1.79925, 0.81", "-48.5582, -54.2731, -1.79925, 0.81", "-48.5774, -55.0675, -1.79925, 0.81", "-48.6217, -55.7822, -1.79925, 1.47", "-48.7628, -56.8496, -1.79925, 1.92", "-48.9166, -57.6395, -1.79925, 2.43", "-49.0424, -58.1843, -1.79925, 2.43", "-49.3712, -59.4344, -1.79925, 1.18", "-49.5689, -60.1115, -1.79925, 1.11", "-49.8176, -60.878, -1.79925, 0.88", "-50.0623, -61.4774, -1.83704, 0.88", "-50.2209, -61.792, -1.87251, 0.88", "-50.4805, -62.226, -1.93144, 0.74", "-50.7354, -62.6071, -1.98804, 0.74", "-51.5253, -63.7329, -2.1556, 2.06", "-52.5618, -65.1938, -2.36713, 2.43", "-53.3501, -66.322, -2.52476, 2.43", "-54.172, -67.5542, -2.68814, 1.47", "-54.61, -68.2643, -2.77646, 0.96", "-54.9419, -68.8796, -2.84243, 0.96", "-55.2072, -69.5145, -2.88775, 0.88", "-55.3013, -69.95, -2.88225, 0.88", "-55.3062, -70.4047, -2.87847, 0.88", "-55.2781, -70.6134, -2.87847, 0.88", "-55.2121, -71.0369, -2.87847, 0.88", "-55.2004, -71.4027, -2.87847, 0.88", "-55.2843, -71.9551, -2.87847, 0.88", "-55.4371, -72.513, -2.87847, 0.88", "-55.6095, -72.9929, -2.87847, 0.88", "-55.8459, -73.5586, -2.87847, 1.4", "-56.3208, -74.5376, -2.86124, 1.84", "-56.7637, -75.4099, -2.84452, 2.65", "-57.3375, -76.5085, -2.82109, 2.65", "-58.0732, -77.8851, -2.78816, 1.33", "-58.5939, -78.8497, -2.76204, 1.33", "-59.4259, -80.2812, -2.71567, 1.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-185.636, 86.2466, -207.248, 0.22", "-185.531, 86.7261, -208.235, 0.22", "-185.467, 87.0166, -208.833, 0.22", "-185.365, 87.4798, -209.787, 0.22", "-185.207, 88.1991, -211.267, 0.22", "-185.113, 88.6241, -212.142, 0.22", "-185.022, 89.0388, -212.995, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-185.636, 86.2466, -207.248, 0.22", "-186.095, 84.8589, -207.12, 0.22", "-186.369, 84.0324, -207.043, 0.22", "-186.75, 82.8818, -206.936, 0.22", "-187.308, 81.1949, -206.779, 0.22", "-187.711, 79.977, -206.666, 0.22", "-187.824, 79.6361, -206.634, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "35.8631, -4.16686, -17.4087, 0.88", "37.4895, -8.25504, 3.60151, 0.88", "37.5861, -8.49638, 4.83309, 0.88", "37.7392, -8.88171, 6.96997, 0.44", "37.7763, -8.96189, 7.72704, 0.44", "37.7289, -8.75403, 9.22851, 0.44", "37.5481, -8.12815, 11.059, 0.44", "38.1335, -10.1004, 8.47742, 0.44", "38.5367, -11.5424, 6.38829, 0.44", "38.9479, -13.0983, 4.08084, 0.44", "39.6351, -16.3743, -0.996736, 0.44", "39.7689, -17.2924, -2.53618, 0.44", "39.9522, -18.9457, -5.62898, 0.44", "40.1404, -21.1591, -10.1356, 0.44", "40.1787, -21.54, -11.0031, 0.44", "40.3394, -23.0072, -14.4948, 0.44", "40.4961, -24.7224, -18.7431, 0.44", "40.6747, -26.6118, -23.6387, 0.44", "40.7759, -27.5432, -25.9688, 0.44", "40.9599, -29.0877, -29.7512, 0.44", "41.0175, -29.4561, -30.6788, 0.44", "41.2503, -30.5755, -33.4524, 0.44", "41.49, -31.8522, -36.2405, 0.44", "41.6357, -32.6686, -37.6809, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "35.8631, -4.16686, -17.4087, 2.14", "38.9611, -4.38015, -16.652, 2.14", "40.14, -4.40417, -16.4259, 0.81", "42.1043, -4.38889, -16.1116, 1.77", "43.1354, -4.35247, -15.9744, 1.77", "44.7421, -4.24294, -15.2557, 0.66", "45.7088, -4.15305, -14.7374, 1.47", "46.7984, -4.03609, -14.1844, 1.47", "47.7024, -3.91127, -13.6188, 1.47", "48.8263, -3.70822, -12.7244, 2.28", "54.0795, -2.61977, -7.62364, 2.28", "55.0708, -2.39334, -6.41452, 1.69" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-190.127, -112.045, -116.309, 0.66", "-192.408, -112.109, -119.957, 0.66", "-192.878, -112.189, -120.507, 0.66", "-193.345, -112.291, -120.921, 0.07", "-193.653, -112.359, -121.139, 0.96", "-194.156, -112.453, -121.409, 1.4", "-194.734, -112.519, -121.866, 1.18", "-195.467, -112.578, -122.371, 0.52", "-196.285, -112.596, -122.982, 0.07", "-196.815, -112.577, -123.381, 1.62", "-197.822, -112.523, -124.128, 2.14", "-201.819, -112.158, -126.995, 0.81", "-202.73, -112.042, -127.619, 0.81", "-203.545, -111.917, -128.134, 1.25", "-204.542, -111.764, -128.619, 0.07", "-205.296, -111.639, -128.962, 0.07", "-206.223, -111.455, -129.308, 0.07", "-206.791, -111.341, -129.438, 1.11", "-207.692, -111.171, -129.681, 1.69", "-210.028, -110.761, -130.355, 0.52", "-212.652, -110.301, -131.173, 0.07", "-213.953, -110.118, -131.588, 0.07", "-214.789, -110.033, -131.849, 0.07", "-215.458, -109.972, -132.043, 1.55", "-216.787, -109.861, -132.469, 1.55", "-218.566, -109.668, -133.043, 0.29", "-219.826, -109.488, -133.372, 0.29", "-220.873, -109.287, -133.74, 0.52", "-221.891, -108.991, -134.168, 1.55", "-223.355, -108.42, -134.862, 1.55", "-224.431, -107.864, -135.712, 0.22", "-224.667, -107.717, -135.952, 1.62", "-225.838, -106.882, -137.332, 0.37", "-226.267, -106.565, -137.89, 0.96", "-226.812, -106.166, -138.559, 1.47", "-229.478, -104.492, -141.613, 1.11", "-230.265, -104.066, -142.487, 0.15", "-230.539, -103.939, -142.756, 0.74", "-230.837, -103.822, -142.994, 1.55", "-232.435, -103.294, -144.215, 1.55", "-235.247, -102.636, -146.1, 0.52", "-236.181, -102.479, -146.603, 1.33", "-236.989, -102.375, -147.066, 0.74", "-237.96, -102.28, -147.871, 0.15", "-239.819, -102.114, -149.715, 0.15", "-240.743, -101.989, -150.757, 0.15", "-241.484, -101.871, -151.616, 1.62", "-242.25, -101.753, -152.606, 1.62", "-245.264, -101.236, -156.935, 0.37", "-245.782, -101.143, -157.755, 1.62", "-246.538, -100.957, -158.984, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-59.4259, -80.2812, -2.71567, 1.11", "-60.9991, -80.8357, -2.66141, 1.11", "-62.0572, -81.1979, -2.71541, 1.55", "-63.0509, -81.5311, -2.80602, 1.55", "-63.8615, -81.8162, -2.89648, 0.52", "-64.2304, -81.9458, -2.94113, 0.52", "-65.149, -82.2599, -3.05601, 1.69", "-66.3901, -82.6607, -3.26739, 1.03", "-66.937, -82.866, -3.36949, 0.15", "-67.3399, -83.0507, -3.4305, 0.15", "-67.9222, -83.3701, -3.48153, 0.15", "-68.2381, -83.5557, -3.48286, 0.15", "-68.6983, -83.8247, -3.45029, 0.15", "-69.5279, -84.28, -3.51023, 1.55", "-70.3635, -84.7122, -3.69184, 1.55", "-71.1343, -85.0997, -3.93548, 0.81", "-72.2965, -85.6872, -4.39207, 0.81", "-72.9192, -85.988, -4.67433, 0.66", "-75.3094, -87.0029, -5.84586, 0.07", "-75.7503, -87.1744, -6.07134, 0.81", "-76.1374, -87.3317, -6.27576, 1.18", "-76.6163, -87.5494, -6.50758, 0.81", "-77.4723, -87.9676, -6.82122, 0.29", "-78.206, -88.3385, -6.97948, 0.29", "-78.997, -88.7375, -7.0179, 1.77", "-79.6412, -89.0735, -7.04331, 1.77", "-80.3137, -89.459, -7.06243, 1.11", "-81.4601, -90.2021, -7.07766, 0.29", "-81.7555, -90.4195, -7.07618, 0.07", "-82.3782, -90.9658, -7.07424, 1.69", "-83.2028, -91.8138, -7.07007, 1.69", "-84.0831, -92.8829, -7.06423, 0.29", "-84.4265, -93.376, -7.06153, 0.96", "-84.7317, -93.9098, -7.05703, 0.96", "-85.5189, -95.5014, -7.04436, 0.22", "-85.8662, -96.363, -7.03818, 0.07", "-85.9872, -96.7484, -7.03594, 0.07", "-86.2154, -97.5831, -7.03225, 0.07", "-86.3585, -98.1613, -7.03123, 1.62", "-86.5496, -99.0678, -7.02834, 1.62", "-86.6774, -99.8579, -7.02317, 1.4", "-86.8558, -100.919, -7.02317, 0.81" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-59.4259, -80.2812, -2.71567, 0.88", "-59.9625, -81.0508, -2.71567, 0.88", "-60.3816, -81.7001, -2.62492, 0.66", "-60.776, -82.3226, -2.50143, 1.18", "-61.2697, -83.0373, -2.3369, 1.18", "-61.3606, -83.1599, -2.30639, 1.47", "-61.8028, -83.7512, -2.15671, 1.47", "-62.5745, -84.8459, -1.84342, 0.22", "-62.9023, -85.3795, -1.68616, 0.22", "-63.1489, -85.922, -1.54679, 0.22", "-63.2318, -86.1636, -1.49866, 0.22", "-63.3697, -86.6694, -1.42749, 0.74", "-63.5204, -87.416, -1.36875, 1.55", "-63.6136, -88.0431, -1.36032, 1.55", "-63.7784, -89.1782, -0.922904, 0.88", "-63.8729, -89.8078, -0.53691, 0.22", "-63.9537, -90.2912, -0.221028, 0.15", "-64.0371, -90.7139, 0.07493, 0.15", "-64.1899, -91.3902, 0.572117, 1.25", "-65.0505, -94.9, 3.26614, 1.62", "-65.2002, -95.5146, 3.74392, 1.62", "-65.4593, -96.7542, 4.62674, 0.66", "-65.5361, -97.118, 4.84554, 0.66", "-65.6577, -97.6321, 5.06138, 0.66", "-65.7096, -97.8346, 5.08883, 0.66", "-65.9056, -98.5326, 4.98109, 1.33", "-66.1223, -99.2157, 4.92529, 1.33", "-66.3579, -99.8809, 4.92529, 0.52", "-66.6121, -100.585, 4.92529, 0.52", "-66.8725, -101.256, 4.92529, 0.52", "-67.1024, -101.751, 4.92529, 0.96", "-67.5492, -102.568, 4.92529, 0.96", "-67.9009, -103.158, 4.92529, 0.44", "-68.4261, -104.01, 4.92883, 0.44", "-68.6698, -104.401, 4.9318, 0.44", "-69.1782, -105.234, 4.93975, 0.44", "-69.4146, -105.653, 4.9441, 0.44", "-69.7115, -106.231, 4.9501, 1.33", "-70.1293, -107.146, 4.9592, 1.77", "-70.6585, -108.425, 4.97518, 1.77", "-71.0724, -109.499, 4.98979, 0.88", "-71.3704, -110.313, 5.00123, 0.74", "-71.7811, -111.378, 5.01608, 0.74", "-71.9731, -111.839, 5.02063, 0.74", "-72.3364, -112.648, 5.02454, 0.74", "-72.7382, -113.482, 5.02656, 0.44", "-73.0483, -114.088, 5.02638, 0.96", "-73.4257, -114.801, 5.02427, 1.99", "-73.8887, -115.705, 5.01933, 1.18", "-74.2452, -116.437, 5.01382, 0.66", "-74.6073, -117.233, 4.99657, 0.66", "-75.0047, -118.173, 4.96892, 0.66", "-75.2782, -118.828, 4.85684, 1.18", "-75.7493, -119.908, 4.53237, 1.18", "-76.0335, -120.551, 4.28032, 1.18", "-76.3073, -121.154, 4.00981, 0.59", "-76.5964, -121.758, 3.71714, 0.59", "-77.7274, -124.053, 2.47293, 0.59", "-78.3015, -125.17, 1.80387, 2.14", "-78.7437, -125.99, 1.25985, 0.81", "-79.1431, -126.727, 0.753914, 0.66", "-79.448, -127.284, 0.388133, 0.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "55.0708, -2.39334, -6.41452, 1.69", "55.9178, -2.23233, -6.82696, 1.69", "56.8961, -2.2669, -7.34029, 1.4", "57.4516, -2.28653, -7.63179, 1.4", "58.8077, -2.33445, -8.34334, 0.74", "59.6752, -2.36511, -8.79855, 0.74", "60.0659, -2.37892, -9.00358, 0.74", "60.8258, -2.76511, -9.58343, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-246.538, -100.957, -158.984, 0.29", "-248.226, -101.119, -159.27, 0.29", "-248.599, -101.148, -159.344, 1.11", "-249.664, -101.25, -159.65, 1.11", "-250.533, -101.36, -159.924, 0.37", "-251.72, -101.528, -160.3, 1.84", "-253.807, -101.858, -161.248, 0.07", "-254.245, -101.917, -161.475, 1.18", "-255.389, -102.083, -162.1, 1.18", "-256.472, -102.275, -162.719, 0.44", "-257.376, -102.448, -163.268, 1.33", "-260.105, -102.882, -165.053, 1.25", "-261.403, -103.058, -165.841, 0.29", "-262.49, -103.16, -166.444, 0.29", "-263.324, -103.206, -166.832, 0.29", "-264.333, -103.189, -167.287, 1.4", "-266.945, -103.142, -168.343, 0.66", "-268.787, -103.084, -168.986, 0.66", "-269.682, -103.047, -169.339, 0.88", "-271.436, -102.961, -170.041, 0.88", "-273.696, -102.796, -170.897, 0.44", "-275.367, -102.695, -171.419, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-246.538, -100.957, -158.984, 0.07", "-246.662, -99.8429, -158.06, 0.07", "-246.761, -98.9473, -157.317, 0.07", "-246.968, -97.0814, -155.769, 0.88", "-247.047, -96.3765, -155.185, 0.59", "-247.131, -95.6211, -154.558, 1.18" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-86.8558, -100.919, -7.02317, 0.88", "-88.2321, -101.874, -7.55522, 0.88", "-88.8251, -102.297, -7.75482, 0.88", "-89.3446, -102.709, -7.90279, 0.44", "-89.8232, -103.096, -8.00563, 0.15", "-90.173, -103.403, -8.06631, 0.15", "-90.474, -103.676, -8.11135, 0.15", "-90.5669, -103.773, -8.15338, 0.15", "-90.9811, -104.258, -8.5196, 1.4", "-91.4582, -104.966, -9.10256, 1.4", "-91.7668, -105.455, -9.54104, 1.4", "-91.8454, -105.587, -9.66912, 1.4", "-93.1604, -107.919, -12.1171, 0.74", "-93.545, -108.629, -12.9361, 0.44", "-93.9225, -109.394, -13.9587, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-86.8558, -100.919, -7.02317, 0.22", "-86.9333, -101.605, -7.19952, 0.22", "-87.0073, -102.206, -7.3414, 0.22", "-87.0959, -103.018, -7.51091, 0.22", "-87.1519, -103.56, -7.61467, 1.4", "-87.2452, -104.563, -7.78971, 0.15", "-87.2766, -104.918, -7.84683, 0.15", "-87.3332, -105.619, -7.9322, 0.81", "-87.357, -106.102, -7.9835, 0.07", "-87.3595, -106.309, -8.00324, 0.07", "-87.3688, -106.759, -8.03111, 0.59", "-87.3598, -107.048, -8.02469, 0.29", "-87.3511, -107.208, -8.02123, 0.29", "-87.2517, -108.182, -8.005, 1.69" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "60.8258, -2.76511, -9.58343, 1.84", "62.7339, -2.70086, -9.89539, 1.84", "63.978, -2.65054, -10.0502, 1.84", "65.3225, -2.60671, -10.1835, 1.47", "66.3686, -2.57398, -10.2678, 1.11", "67.465, -2.55948, -10.3407, 1.25", "68.6834, -2.57623, -10.4065, 1.55", "69.9529, -2.62735, -10.4065, 1.33", "71.0514, -2.68759, -10.4065, 1.33", "72.283, -2.76479, -10.4065, 1.77", "73.6154, -2.83765, -10.4065, 2.06", "75.4531, -2.89139, -10.4065, 1.47", "76.6468, -2.85904, -10.4065, 1.47", "77.9197, -2.72664, -10.4065, 1.47", "79.2291, -2.4943, -10.4065, 1.11", "80.4072, -2.23528, -10.4065, 1.11", "81.3945, -1.99126, -10.3708, 1.11", "82.7206, -1.66719, -10.2813, 1.11", "83.9825, -1.4296, -10.1672, 1.11", "85.7806, -1.12551, -9.97974, 1.11", "87.098, -0.960315, -9.82112, 1.11", "88.62, -0.879805, -9.61203, 1.77", "89.7898, -0.921215, -9.43066, 1.92", "91.4312, -1.14443, -9.13622, 2.87" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "91.4312, -1.14443, -9.13622, 1.03", "93.5607, -1.86475, -9.65678, 1.03", "94.0279, -2.0156, -9.78145, 1.03", "94.5847, -2.21158, -9.92163, 1.03", "95.4366, -2.53868, -10.1208, 1.03", "96.5988, -3.05236, -10.3416, 1.03", "97.4727, -3.48945, -10.4805, 0.96", "98.2853, -3.96161, -10.6565, 0.96", "98.9186, -4.42269, -10.7422, 1.18", "99.4185, -4.83366, -10.7685, 1.18", "100.074, -5.36899, -10.805, 0.96", "100.651, -5.81845, -10.8399, 0.96", "101.275, -6.27129, -10.8919, 0.74", "102.307, -6.95684, -10.9942, 0.74", "103.375, -7.61442, -11.1109, 0.74", "108.417, -10.4257, -11.8471, 0.74", "109.626, -11.0607, -12.0708, 0.74", "110.361, -11.432, -12.2217, 1.18", "110.82, -11.6532, -12.324, 1.84", "111.141, -11.8041, -12.4088, 2.21", "113.634, -13.0179, -13.0539, 0.66", "114.832, -13.5763, -13.2335, 0.66", "115.414, -13.8665, -13.2269, 1.11", "115.797, -14.0655, -13.1559, 1.47", "116.87, -14.6456, -12.7565, 1.03", "118.402, -15.4909, -11.8751, 1.11", "120.388, -16.6063, -10.2823, 0.81", "120.86, -16.8607, -9.91098, 0.81", "121.237, -17.0583, -9.65536, 0.81", "121.773, -17.3309, -9.36363, 0.81", "122.582, -17.681, -9.05951, 1.11", "123.628, -18.0534, -8.92974, 1.77", "124.493, -18.3054, -8.91471, 1.33", "125.574, -18.5512, -8.88271, 0.96", "126.441, -18.6653, -8.78105, 0.96", "127.69, -18.7289, -8.60278, 1.4", "128.667, -18.7269, -8.44069, 1.4", "129.486, -18.6776, -8.27972, 0.52", "129.922, -18.6324, -8.17698, 0.52", "132.02, -18.3472, -7.55784, 1.92", "133.211, -18.1608, -7.11621, 1.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "91.4312, -1.14443, -9.13622, 0.96", "92.9698, -0.918225, -9.13622, 0.96", "94.16, -0.655575, -9.13622, 0.96", "95.2747, -0.293775, -9.13622, 0.96", "95.9086, 0.0298738, -9.13622, 0.66", "96.0853, 0.151547, -9.13622, 0.66", "96.3966, 0.416829, -9.13622, 0.66", "96.8963, 1.05171, -9.13622, 1.25", "97.3308, 1.74332, -9.13622, 1.69", "98.0312, 2.91412, -9.13622, 1.69", "98.4235, 3.51866, -9.13622, 1.69", "98.9748, 4.24636, -9.13622, 0.74", "99.3593, 4.63273, -9.13622, 0.74", "99.9391, 4.98791, -9.13622, 0.74", "100.644, 5.19841, -9.13622, 0.74", "101.152, 5.24605, -9.13622, 0.74", "101.857, 5.25466, -9.19585, 0.74", "102.798, 5.20361, -9.33084, 0.74", "103.455, 5.13531, -9.45561, 0.74", "104.211, 5.0205, -9.63422, 0.74", "104.792, 4.92979, -9.79404, 0.74", "106.303, 4.8012, -10.2565, 0.74", "106.754, 4.83525, -10.446, 0.74", "107.141, 4.94599, -10.6449, 0.74", "107.531, 5.15123, -10.8428, 0.74", "108.143, 5.60601, -11.117, 0.74", "109.113, 6.39915, -11.4548, 0.74", "110.316, 7.42769, -11.7612, 1.18", "110.998, 7.96986, -11.9074, 1.92", "112.154, 8.82619, -12.1188, 1.92", "113.157, 9.4887, -12.268, 1.03", "114.079, 9.99539, -12.369, 0.74", "114.766, 10.2413, -12.4069, 0.66", "115.993, 10.463, -12.396, 0.66", "116.373, 10.4597, -12.3953, 0.44", "117.174, 10.29, -12.4003, 1.4", "117.612, 10.1401, -12.4064, 1.84", "118.785, 9.70017, -12.4312, 1.18", "119.666, 9.38517, -12.4508, 0.81", "120.385, 9.19798, -12.4665, 0.81", "120.986, 9.10964, -12.4783, 0.81", "121.701, 9.07446, -12.4905, 0.81", "123.02, 9.08961, -12.5089, 1.62", "124.171, 9.15594, -12.5207, 1.62", "125.36, 9.233, -12.5275, 0.81", "126.24, 9.29322, -12.5275, 0.59", "126.973, 9.34349, -12.5275, 0.59", "127.701, 9.39758, -12.5275, 0.96", "128.65, 9.49699, -12.5275, 0.96", "129.386, 9.61764, -12.5275, 0.66", "130.179, 9.83473, -12.5275, 0.96", "130.85, 10.1649, -12.5275, 0.96", "131.458, 10.5711, -12.5275, 0.96", "132.027, 10.9951, -12.5275, 0.96", "132.313, 11.222, -12.5275, 0.96", "133.077, 11.7806, -12.5275, 0.96", "133.731, 12.1413, -12.5275, 0.96", "134.211, 12.3096, -12.5275, 0.96", "134.948, 12.427, -12.5275, 0.96", "135.176, 12.4345, -12.5275, 0.96", "135.771, 12.4165, -12.5275, 0.96", "136.364, 12.3836, -12.5275, 0.96", "136.731, 12.3696, -12.5275, 0.96", "137.385, 12.4071, -12.5275, 0.96", "137.649, 12.457, -12.5275, 0.96", "138.194, 12.6196, -12.5275, 1.25", "138.852, 12.9268, -12.4964, 1.25", "138.922, 12.9687, -12.4905, 1.55", "139.28, 13.1889, -12.4556, 1.55", "139.96, 13.5425, -12.3896, 1.55", "140.093, 13.5948, -12.3777, 1.55", "141.197, 13.8878, -12.2871, 0.81", "142.017, 14.0138, -12.2287, 0.81", "143.387, 14.1033, -12.1486, 0.81", "144.608, 14.0708, -12.1634, 0.96", "145.409, 13.9992, -12.2154, 1.18", "146.26, 13.8934, -12.3067, 1.47", "147.125, 13.7487, -12.4438, 1.4", "148.123, 13.5654, -12.6396, 1.03", "149.675, 13.3176, -13.0275, 0.15", "150.243, 13.2898, -13.2001, 0.15", "150.534, 13.3162, -13.2972, 0.44", "151.33, 13.548, -13.5423, 0.44", "151.604, 13.6838, -13.6315, 0.44", "152.082, 13.9538, -13.7659, 0.44", "152.497, 14.2021, -13.8522, 0.74", "153.111, 14.5802, -13.9725, 1.11", "153.959, 15.0974, -14.1256, 1.55", "155.719, 16.0894, -14.4137, 0.88", "156.563, 16.5165, -14.5375, 0.88", "158.021, 17.2028, -14.7703, 1.69", "159.0, 17.6255, -14.9289, 0.88", "159.724, 17.8838, -15.0417, 0.88", "160.647, 18.1402, -15.1667, 0.88", "162.006, 18.4424, -15.3011, 0.88", "163.105, 18.6803, -15.4162, 1.47", "164.01, 18.8951, -15.5086, 1.47", "165.041, 19.2147, -15.6013, 1.11", "166.173, 19.7091, -15.6838, 1.25", "167.333, 20.2971, -15.7391, 1.25", "168.056, 20.7016, -15.7567, 1.25", "169.454, 21.4658, -15.7567, 0.66", "170.685, 22.117, -15.7567, 1.4", "171.897, 22.7742, -15.7567, 0.96", "174.099, 23.9554, -15.7567, 0.59", "174.755, 24.2991, -15.7567, 0.59", "176.158, 25.0532, -15.809, 0.59", "176.813, 25.4057, -15.8561, 0.59", "178.278, 26.1785, -16.0077, 0.59", "179.309, 26.6826, -16.1428, 1.03", "179.924, 26.9502, -16.3077, 1.03", "181.607, 27.6153, -16.9325, 1.03", "182.496, 27.9489, -17.3463, 1.03", "183.328, 28.1983, -17.755, 1.4", "184.458, 28.4338, -18.2685, 1.4", "187.028, 28.8912, -19.3455, 0.44", "188.331, 29.0893, -19.8108, 0.44", "188.801, 29.1478, -19.9424, 0.74", "190.502, 29.3686, -20.3427, 0.74", "192.64, 29.5593, -20.8304, 0.74", "192.945, 29.5668, -20.8886, 1.18", "194.397, 29.4701, -21.1165, 1.18", "195.396, 29.2808, -21.3315, 1.18", "195.94, 29.1395, -21.5171, 1.18", "197.534, 28.6252, -22.2402, 0.29", "198.302, 28.3723, -22.629, 0.29", "199.368, 28.096, -23.1447, 1.62", "200.377, 27.9543, -23.5923, 1.62", "202.196, 27.9356, -24.277, 0.88", "203.814, 28.1136, -24.753, 0.88", "204.789, 28.334, -24.957, 0.88", "206.03, 28.7266, -25.15, 0.88", "207.564, 29.2968, -25.2976, 2.36", "208.75, 29.797, -25.3676, 2.36", "210.198, 30.4265, -25.3718, 1.18", "211.379, 30.9712, -25.3739, 1.69", "212.79, 31.5927, -25.3741, 0.07", "213.417, 31.8362, -25.3726, 0.07", "213.924, 31.9869, -25.3695, 0.07", "214.994, 32.2081, -25.3586, 0.07", "215.251, 32.2458, -25.3547, 0.59", "216.55, 32.3804, -25.3452, 0.88", "217.444, 32.4479, -25.4385, 1.25", "218.289, 32.4887, -25.5704, 0.59", "218.653, 32.512, -25.6368, 0.59", "219.597, 32.5779, -25.8312, 1.33", "221.097, 32.6323, -26.1551, 2.28", "223.239, 32.6399, -26.6583, 0.74", "224.067, 32.6317, -26.9512, 0.74", "224.959, 32.6198, -27.3436, 1.25", "225.56, 32.6237, -27.6398, 1.25", "226.344, 32.6721, -28.0596, 1.25", "226.476, 32.6971, -28.1321, 1.25", "228.843, 33.5248, -29.3097, 0.96", "229.804, 33.9642, -29.7712, 0.96", "230.509, 34.3249, -30.087, 0.96", "231.365, 34.8143, -30.406, 0.96", "232.441, 35.4575, -30.7062, 0.96", "233.035, 35.796, -30.8023, 0.96", "233.591, 36.0988, -30.8023, 0.88", "234.182, 36.3467, -30.8023, 0.88", "235.356, 36.5636, -30.8647, 0.88", "236.018, 36.5505, -30.931, 0.88", "236.574, 36.476, -31.0035, 0.88", "236.769, 36.4414, -31.0318, 0.88", "237.753, 36.2313, -31.1838, 0.88", "239.182, 35.9068, -31.4038, 0.88", "239.772, 35.7764, -31.5461, 0.88", "240.761, 35.5605, -31.8321, 0.88", "241.521, 35.397, -32.0727, 0.88", "242.325, 35.2239, -32.3326, 1.69", "243.149, 35.0516, -32.6033, 1.69", "245.048, 34.6577, -33.1698, 0.74", "245.742, 34.5133, -33.3718, 0.74", "246.054, 34.4612, -33.4596, 0.74", "246.915, 34.4176, -33.6722, 0.74", "247.228, 34.4478, -33.7331, 0.74", "248.464, 34.7591, -33.8749, 0.74", "249.205, 35.0596, -33.8839, 0.74", "249.814, 35.3583, -33.8909, 0.74", "250.81, 35.8494, -33.9015, 0.74", "251.269, 36.0644, -33.906, 0.74", "251.798, 36.2727, -33.9102, 0.74", "252.772, 36.5728, -33.9158, 1.47", "253.965, 36.7634, -33.9676, 2.43", "254.931, 36.7526, -34.0366, 1.69", "255.593, 36.6464, -34.0315, 1.47", "256.317, 36.4691, -33.9877, 1.11", "256.809, 36.3057, -33.939, 1.11", "258.147, 35.7723, -33.7651, 0.15", "259.427, 35.2157, -33.5689, 2.36", "261.553, 34.2696, -33.2123, 0.88", "262.275, 33.9428, -33.0838, 0.88", "263.565, 33.3189, -32.8413, 0.88", "263.882, 33.1481, -32.7777, 0.88", "264.547, 32.7233, -32.6325, 0.88", "265.195, 32.2099, -32.5352, 0.88", "265.743, 31.6733, -32.5272, 0.52", "266.252, 31.0785, -32.519, 1.33", "266.73, 30.4464, -32.5109, 1.33", "267.311, 29.6361, -32.5025, 0.37", "267.713, 29.0585, -32.498, 1.33", "268.125, 28.4539, -32.4954, 1.33", "268.322, 28.1572, -32.4954, 1.33", "268.661, 27.6647, -32.4954, 1.33", "269.236, 26.8443, -32.4954, 0.96", "269.594, 26.3083, -32.4954, 0.96", "269.967, 25.6601, -32.4922, 0.29", "270.193, 25.234, -32.4883, 0.29", "270.287, 25.0445, -32.4859, 0.29", "270.491, 24.6054, -32.4797, 0.88", "270.77, 24.0467, -32.4708, 1.33", "271.08, 23.5633, -32.4628, 1.33", "271.39, 23.2088, -32.4567, 1.33", "272.138, 22.5512, -32.4454, 0.74", "272.683, 22.171, -32.4397, 0.74", "273.261, 21.872, -32.436, 0.74", "274.1, 21.5273, -32.4336, 0.74", "274.733, 21.3365, -32.4336, 0.74", "275.462, 21.1813, -32.4336, 0.96", "276.59, 21.016, -32.4336, 1.92", "277.984, 20.831, -32.4336, 2.43", "278.801, 20.7211, -32.4336, 0.66", "280.188, 20.5407, -32.4336, 0.66", "280.805, 20.4496, -32.4336, 0.66", "281.681, 20.3021, -32.4336, 0.66", "282.61, 20.1011, -32.4336, 0.66", "283.097, 19.9466, -32.4336, 0.66", "284.544, 19.3256, -32.4336, 0.66", "285.055, 19.0522, -32.4336, 0.66", "285.779, 18.6416, -32.4336, 0.66", "286.41, 18.2855, -32.4336, 0.66", "287.038, 17.9235, -32.4336, 1.03", "287.992, 17.3273, -32.4336, 1.62", "288.856, 16.7777, -32.4336, 1.62", "289.686, 16.3056, -32.4336, 1.62", "290.552, 15.8597, -32.4336, 1.25", "291.592, 15.375, -32.4336, 0.88", "292.292, 15.0783, -32.4336, 0.88", "293.118, 14.7401, -32.4336, 1.84", "294.207, 14.3206, -32.6062, 1.03", "295.008, 14.0417, -32.8349, 1.03", "296.076, 13.7332, -33.2377, 1.03", "296.717, 13.5954, -33.5174, 0.74", "297.771, 13.4338, -33.9962, 0.74", "300.827, 13.0681, -35.463, 0.74", "301.691, 12.9883, -35.8908, 0.74", "302.148, 12.9522, -36.1036, 0.74", "303.004, 12.898, -36.4544, 0.74", "304.377, 12.8463, -36.8909, 0.74", "304.902, 12.8501, -36.9889, 0.74", "305.431, 12.8831, -37.0331, 0.96", "306.672, 12.9856, -37.2083, 0.96", "307.494, 13.064, -37.3637, 0.66", "308.145, 13.1589, -37.5178, 1.25", "308.745, 13.2949, -37.6784, 1.47", "310.379, 13.7412, -38.1151, 0.59", "311.161, 13.954, -38.3167, 0.59", "311.597, 14.0587, -38.4517, 0.96", "312.387, 14.1787, -38.7032, 1.4", "313.456, 14.2169, -39.023, 0.59", "314.095, 14.1752, -39.205, 0.59", "315.148, 14.0086, -39.4676, 1.92", "317.065, 13.6935, -39.969, 0.07", "317.889, 13.5231, -40.2419, 0.07", "318.818, 13.2981, -40.5938, 1.84", "319.986, 12.9814, -41.0782, 0.96", "320.85, 12.7518, -41.4648, 0.96", "321.749, 12.5022, -41.8667, 0.96", "323.429, 12.0177, -42.8713, 0.88", "324.071, 11.8376, -43.327, 0.88", "324.513, 11.7208, -43.6533, 1.11", "325.478, 11.4882, -44.4089, 1.33", "326.534, 11.271, -45.2248, 1.33", "329.176, 10.8191, -47.2194, 0.88", "330.479, 10.6849, -48.1064, 1.18", "331.668, 10.6092, -48.897, 0.81", "333.115, 10.5312, -49.8498, 1.92", "334.126, 10.4714, -50.4868, 0.88", "335.604, 10.3739, -51.353, 0.88", "337.02, 10.2289, -52.038, 0.88", "337.653, 10.1348, -52.3568, 1.55", "339.536, 9.68207, -53.3511, 0.07", "340.044, 9.50766, -53.6057, 0.66", "340.544, 9.29725, -53.8663, 1.25", "341.152, 9.03026, -54.2021, 1.25", "341.814, 8.75286, -54.6139, 0.22", "342.841, 8.4031, -55.1633, 0.22", "343.307, 8.32691, -55.3612, 0.96", "343.678, 8.32471, -55.5034, 0.22", "345.247, 8.53273, -55.9968, 0.22", "345.894, 8.70224, -56.1168, 1.11", "347.116, 9.10036, -56.1885, 1.11", "347.714, 9.29191, -56.1554, 1.11", "348.206, 9.43962, -56.1113, 1.18", "348.626, 9.55459, -56.0592, 0.29", "349.64, 9.7979, -55.9087, 0.29", "350.298, 9.9599, -55.8698, 0.88", "350.655, 10.0449, -55.8811, 0.29", "351.059, 10.1442, -55.8959, 0.29", "351.669, 10.2953, -55.9197, 1.62", "352.351, 10.4436, -55.9465, 1.62", "353.18, 10.5811, -55.9774, 0.07", "353.945, 10.6627, -56.0019, 0.07", "354.669, 10.6817, -56.021, 0.07", "355.331, 10.6409, -56.0627, 1.62", "356.207, 10.5172, -56.1437, 1.62", "357.082, 10.3316, -56.245, 0.66", "357.781, 10.1399, -56.3457, 0.66", "358.366, 9.95675, -56.4411, 0.96", "359.232, 9.67171, -56.5901, 0.29", "359.715, 9.52615, -56.6736, 0.29", "360.295, 9.37212, -56.7272, 0.29", "360.987, 9.1986, -56.733, 0.29", "361.402, 9.12216, -56.7034, 0.29", "362.207, 8.98446, -56.5946, 1.03", "362.695, 8.87261, -56.5015, 1.47", "363.841, 8.45348, -56.2728, 0.15", "364.284, 8.22044, -56.1352, 0.15", "365.036, 7.71628, -55.841, 0.15", "365.602, 7.26861, -55.5925, 0.15", "366.544, 6.42977, -55.1579, 2.06", "367.483, 5.53249, -54.7354, 1.25", "368.624, 4.3965, -54.2709, 0.66", "369.077, 3.95843, -54.0872, 0.66", "369.576, 3.52462, -53.9046, 0.66", "370.137, 3.09908, -53.7065, 0.66", "370.558, 2.84643, -53.5789, 0.66", "371.095, 2.62736, -53.4777, 0.66", "371.689, 2.42813, -53.4777, 0.66", "372.755, 2.12262, -53.4777, 1.47" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "133.211, -18.1608, -7.11621, 0.66", "133.618, -19.9958, -3.37604, 0.66", "133.744, -20.4655, -2.49231, 0.66", "133.811, -20.6819, -2.09181, 0.81", "133.91, -20.9546, -1.58423, 0.81", "133.975, -21.0516, -1.36526, 0.81", "134.107, -21.1702, -1.04442, 0.81", "134.268, -21.1885, -0.901298, 0.81", "134.62, -21.1946, -0.637623, 0.81", "135.015, -21.197, -0.371579, 0.81", "136.789, -21.2441, 0.673311, 0.81", "137.345, -21.2814, 0.965401, 0.81", "137.984, -21.3583, 1.26085, 1.11", "138.792, -21.508, 1.57956, 1.4", "139.535, -21.7145, 1.83202, 1.55", "140.351, -22.0178, 2.04457, 1.25", "140.936, -22.2881, 2.13166, 1.03", "141.659, -22.658, 2.23509, 1.03", "142.242, -22.9537, 2.31522, 1.03", "143.028, -23.3225, 2.4221, 0.96", "143.924, -23.6963, 2.53455, 0.88", "144.978, -24.072, 2.65233, 0.81", "145.686, -24.3037, 2.72206, 0.88", "146.74, -24.6047, 2.81922, 0.88", "147.543, -24.7842, 2.88396, 1.11", "148.644, -24.9391, 2.94312, 1.11", "149.005, -24.955, 2.96314, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "133.211, -18.1608, -7.11621, 0.66", "134.311, -17.6636, -2.98621, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "372.755, 2.12262, -53.4777, 0.22", "373.205, 1.8198, -53.4737, 0.22", "374.296, 0.976585, -53.2265, 0.22", "375.208, 0.286416, -52.9552, 1.62", "375.699, -0.0688941, -52.8043, 0.15", "376.121, -0.355549, -52.6761, 0.15", "376.839, -0.844595, -52.4363, 1.47", "378.593, -2.03781, -51.7777, 0.37", "379.803, -2.87451, -51.2705, 0.37", "380.412, -3.31723, -51.0001, 1.25", "380.814, -3.6141, -50.8226, 1.77", "381.868, -4.4086, -50.3776, 0.07", "382.447, -4.85585, -50.1715, 0.88", "382.831, -5.15138, -50.0945, 0.44", "383.175, -5.44457, -50.031, 0.44", "383.413, -5.65246, -50.0069, 0.96", "383.693, -5.88927, -50.0026, 0.29", "384.469, -6.48551, -50.0653, 0.29", "385.065, -6.95123, -50.1212, 1.18", "385.524, -7.3261, -50.1666, 1.18", "386.187, -7.87521, -50.232, 0.44", "386.472, -8.10239, -50.2585, 0.44", "387.132, -8.61357, -50.3161, 0.96", "387.597, -8.9628, -50.3509, 0.15", "388.278, -9.41273, -50.3886, 0.15", "388.861, -9.73357, -50.468, 0.15", "389.47, -9.9909, -50.5822, 0.88", "389.774, -10.0885, -50.6529, 1.25", "390.625, -10.2781, -50.8684, 0.37", "391.265, -10.4085, -51.0226, 0.07", "392.834, -10.6781, -51.3817, 1.33", "393.476, -10.7721, -51.5191, 0.37", "394.482, -10.895, -51.7117, 0.37", "395.213, -10.9693, -51.8288, 1.47", "396.521, -11.0755, -51.9877, 0.22", "397.239, -11.1381, -52.0512, 0.22", "397.913, -11.1875, -52.0673, 1.11", "398.443, -11.2136, -52.0936, 0.29", "399.024, -11.229, -52.1393, 0.29", "399.336, -11.2416, -52.173, 0.74", "399.908, -11.2756, -52.2522, 0.07", "400.581, -11.4165, -52.2877, 0.07", "401.145, -11.578, -52.2853, 0.96", "401.565, -11.7059, -52.2756, 0.15", "402.023, -11.8534, -52.2533, 0.15", "402.369, -11.9705, -52.2253, 0.59", "404.518, -12.7066, -51.9438, 0.07", "405.552, -13.0717, -51.7893, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "372.755, 2.12262, -53.4777, 0.07", "372.303, 1.52043, -53.4777, 0.07", "371.889, 0.969614, -53.4777, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "372.755, 2.12262, -53.4777, 0.22", "372.691, 3.07838, -53.4777, 0.22", "372.653, 3.65374, -53.4777, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "149.005, -24.955, 2.96314, 0.07", "150.63, -26.1492, 2.46223, 0.07", "151.804, -27.044, 2.14757, 0.07", "152.806, -27.8884, 1.90275, 0.07", "153.407, -28.4508, 1.7689, 0.07", "154.273, -29.314, 1.66891, 0.07", "154.731, -29.8097, 1.65645, 0.07", "155.171, -30.4033, 1.78575, 0.07", "155.533, -31.0059, 1.97304, 0.37", "155.843, -31.5852, 2.18199, 0.37", "156.415, -32.7856, 2.63613, 0.37", "156.673, -33.4036, 2.8745, 0.37", "157.035, -34.2518, 3.23348, 0.37", "157.852, -35.9946, 4.04376, 0.37", "158.129, -36.5433, 4.31521, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "149.005, -24.955, 2.96314, 0.96", "151.369, -25.8505, 1.64884, 0.96", "152.279, -26.1951, 1.14289, 0.88", "153.023, -26.4768, 0.729419, 0.88", "153.301, -26.582, 0.575112, 0.88", "153.796, -26.7695, 0.299764, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "149.005, -24.955, 2.96314, 0.59", "148.068, -24.7149, 3.06883, 0.59", "147.511, -24.5151, 3.10976, 0.59", "146.871, -24.1644, 3.13888, 0.59", "146.377, -23.7426, 3.15296, 0.44", "145.875, -23.2212, 3.16388, 0.44", "145.74, -23.0596, 3.16616, 0.22", "145.415, -22.6655, 3.1863, 0.22", "144.974, -22.0887, 3.21036, 0.22", "144.497, -21.3558, 3.2307, 0.22", "144.343, -21.0926, 3.23459, 0.22", "143.949, -20.4375, 3.24432, 0.22", "143.467, -19.7105, 3.25487, 0.22", "143.467, -19.7105, 3.25487, 0.22", "142.955, -19.1388, 3.26612, 0.22", "142.436, -18.6826, 3.22709, 0.22", "141.712, -18.1325, 3.13024, 0.22", "140.979, -17.5883, 2.97036, 0.22", "140.658, -17.3605, 2.89133, 0.22", "139.951, -16.8734, 2.70135, 0.22", "138.585, -15.9872, 2.27486, 0.22", "138.072, -15.6678, 2.08449, 0.22", "137.061, -15.0644, 1.62543, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "158.129, -36.5433, 4.31521, 1.11", "158.736, -37.2385, 4.45133, 1.11", "159.079, -37.8823, 4.48983, 0.66", "159.225, -38.2125, 4.5014, 0.37", "159.575, -38.9298, 4.52265, 0.74", "159.868, -39.4816, 4.56919, 0.88", "160.247, -40.2048, 4.65201, 0.88", "160.615, -41.1461, 4.76863, 0.88", "160.79, -41.6169, 4.85673, 0.66", "161.063, -42.2017, 5.00454, 0.66", "161.447, -42.8278, 5.21431, 0.81", "161.805, -43.3254, 5.44192, 0.81", "162.253, -43.9134, 5.78539, 0.81", "162.605, -44.4047, 6.07502, 0.81", "162.98, -45.0633, 6.41416, 0.74", "163.133, -45.384, 6.55138, 0.22", "163.423, -45.9746, 6.74709, 0.22", "163.783, -46.6032, 6.93892, 0.22", "164.172, -47.1929, 7.08613, 0.22", "164.407, -47.5635, 7.2065, 0.44", "164.723, -48.0966, 7.40538, 0.74", "165.102, -48.7878, 7.6778, 0.74", "165.488, -49.41, 7.94712, 0.44", "165.873, -49.9857, 8.22514, 0.44", "166.644, -51.1267, 8.8028, 1.11", "166.914, -51.5534, 9.01288, 1.11", "167.316, -52.2772, 9.34719, 0.29", "167.698, -53.0464, 9.66091, 0.29", "168.15, -54.0309, 9.97943, 0.29", "168.35, -54.4612, 10.0823, 1.11", "168.65, -55.0568, 10.1554, 0.81", "168.838, -55.3937, 10.1875, 0.81", "169.133, -55.8667, 10.2091, 0.81", "169.445, -56.3402, 10.2083, 0.81", "169.691, -56.6602, 10.1978, 0.81", "170.079, -57.1191, 10.1736, 0.44", "170.481, -57.5641, 10.1477, 0.44", "170.987, -58.1284, 10.1222, 1.03", "171.479, -58.7172, 10.1031, 1.25", "171.944, -59.35, 10.0938, 0.81", "172.186, -59.7298, 10.137, 0.66", "172.443, -60.2241, 10.2422, 0.66", "172.749, -60.9511, 10.4246, 0.66", "172.948, -61.5734, 10.6123, 1.03", "173.076, -62.0995, 10.8021, 0.81", "173.348, -63.4743, 11.4178, 0.66", "173.403, -63.844, 11.6171, 0.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "153.796, -26.7695, 0.299764, 1.03", "154.319, -27.0309, 0.311072, 1.03", "154.928, -27.326, 0.341742, 1.03", "155.694, -27.6704, 0.38945, 1.03", "156.665, -28.0608, 0.452934, 1.03", "157.361, -28.2959, 0.497564, 0.59", "158.205, -28.5507, 0.549041, 0.59", "158.562, -28.6377, 0.571261, 0.74", "159.35, -28.802, 0.600482, 0.81", "159.969, -28.9444, 0.612813, 0.81", "160.73, -29.1654, 0.590116, 0.81", "161.356, -29.4196, 0.529185, 0.44", "161.854, -29.7152, 0.424981, 0.44", "162.409, -30.1297, 0.327428, 0.44", "163.67, -31.0861, 0.156051, 0.44", "164.297, -31.4973, 0.108656, 0.74", "164.796, -31.763, 0.10096, 1.18", "165.442, -32.0237, 0.124051, 0.88", "166.476, -32.3493, 0.204301, 0.59", "167.548, -32.6158, 0.293485, 0.59", "168.369, -32.7895, 0.34645, 0.37", "169.042, -32.9489, 0.391173, 0.37", "169.258, -33.0141, 0.397913, 0.74", "169.587, -33.1723, 0.396236, 1.03", "170.257, -33.613, 0.34218, 1.03", "170.743, -34.0411, 0.2975, 0.52", "170.938, -34.242, 0.277867, 0.37", "171.133, -34.4456, 0.259928, 0.37", "172.034, -35.3312, 0.203664, 1.99" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "153.796, -26.7695, 0.299764, 0.15", "154.185, -27.375, 0.299764, 0.15", "154.414, -27.7331, 0.299764, 0.15", "154.635, -28.0771, 0.299764, 0.15", "155.063, -28.7437, 0.299764, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "137.061, -15.0644, 1.62543, 0.22", "136.217, -14.4365, 1.59698, 0.22", "135.294, -13.7502, 1.56589, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "137.061, -15.0644, 1.62543, 0.22", "136.283, -14.9335, 1.59346, 0.22", "135.43, -14.7899, 1.55838, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "173.403, -63.844, 11.6171, 0.07", "173.408, -64.3349, 11.6621, 0.07", "173.418, -65.1178, 11.7337, 0.07", "173.427, -65.879, 11.8034, 0.07" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "173.403, -63.844, 11.6171, 0.88", "173.493, -64.075, 11.5902, 0.88", "173.755, -64.7535, 11.6411, 0.07", "173.911, -65.2349, 11.7114, 0.07", "174.062, -66.1347, 11.8625, 0.07", "174.074, -66.4374, 12.0468, 0.66", "174.093, -66.9099, 12.405, 1.11", "174.137, -67.6975, 13.0991, 0.07", "174.15, -68.1081, 13.5053, 0.07", "174.142, -68.8389, 14.2941, 0.07", "174.059, -70.887, 16.8442, 0.07", "174.023, -71.465, 17.6335, 0.07", "174.007, -71.7584, 18.0887, 0.07" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "135.294, -13.7502, 1.56589, 0.22", "134.941, -13.1923, 1.38503, 0.22", "134.651, -12.7335, 1.23631, 0.22", "134.413, -12.3579, 1.11457, 0.22", "134.144, -11.9312, 0.976271, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "135.294, -13.7502, 1.56589, 0.22", "134.826, -14.2435, 1.74486, 0.22", "134.737, -14.6149, 1.80827, 0.22", "134.732, -14.9742, 1.85612, 0.22", "134.751, -15.4692, 1.91929, 0.22", "134.763, -15.7924, 1.96053, 0.22", "134.774, -16.0902, 1.99854, 0.22", "134.988, -16.6312, 1.99854, 0.22", "135.241, -16.9932, 1.99854, 0.22", "135.512, -17.24, 1.99854, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "174.007, -71.7584, 18.0887, 0.07", "173.877, -72.8304, 17.8458, 0.07", "173.825, -73.2662, 17.7471, 0.88", "173.716, -74.1732, 17.5416, 0.88", "173.574, -75.3438, 17.2764, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "173.574, -75.3438, 17.2764, 0.44", "173.874, -76.008, 17.2414, 0.44", "174.068, -76.3067, 17.2253, 0.66", "174.519, -76.7294, 17.1999, 0.37", "174.912, -76.6571, 17.1953, 0.29", "175.189, -76.5198, 17.1941, 0.44", "175.468, -76.3677, 17.1928, 0.66", "175.777, -76.1826, 17.1928, 0.66", "176.195, -75.9178, 17.1928, 0.29", "176.733, -75.6097, 17.25, 0.29", "177.001, -75.4526, 17.2819, 0.66", "177.555, -75.1475, 17.3574, 0.66", "178.074, -74.8906, 17.4396, 0.44", "178.405, -74.7496, 17.5029, 0.44", "179.606, -74.3932, 17.789, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "173.574, -75.3438, 17.2764, 0.22", "172.813, -75.9101, 17.2344, 0.22", "171.983, -76.5277, 17.1886, 0.22", "171.271, -77.0568, 17.1494, 0.22", "170.905, -77.3293, 17.1291, 0.22", "170.435, -77.6787, 17.1032, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "179.606, -74.3932, 17.789, 1.11", "180.226, -74.6565, 17.789, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "179.606, -74.3932, 17.789, 0.07", "179.463, -75.3798, 17.789, 0.07", "179.356, -76.1158, 17.789, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "180.226, -74.6565, 17.789, 0.52", "180.26, -75.4382, 17.6951, 0.52", "180.28, -75.8855, 17.6414, 0.52", "180.315, -76.6825, 17.5458, 0.29", "180.384, -78.2639, 17.3559, 0.29", "180.45, -79.7806, 17.1739, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "180.226, -74.6565, 17.789, 0.07", "181.914, -75.108, 17.7264, 0.07", "182.817, -75.3493, 17.693, 0.07", "183.897, -75.6381, 17.653, 0.07", "185.955, -76.1885, 17.5768, 0.07", "186.947, -76.4537, 17.5401, 0.07", "187.267, -76.5394, 17.5282, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "180.226, -74.6565, 17.789, 0.66", "180.946, -74.6921, 17.7969, 0.66", "181.608, -74.7249, 17.8042, 0.44", "182.783, -74.7832, 17.8172, 0.07", "183.661, -74.8267, 17.8269, 0.07", "184.21, -74.8539, 17.833, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_49", "dend_35", "dend_1", "dend_0", "dend_56", "dend_53", "dend_51", "dend_50", "dend_39", "dend_36", "dend_34", "dend_2", "dend_55", "dend_54", "dend_45", "dend_40", "dend_38", "dend_37", "dend_33", "dend_3", "dend_46", "dend_42", "dend_41", "dend_4", "dend_48", "dend_47", "dend_44", "dend_43", "dend_5", "dend_10", "dend_6", "dend_12", "dend_11", "dend_9", "dend_8", "dend_7", "dend_21", "dend_18", "dend_13", "dend_22", "dend_20", "dend_19", "dend_15", "dend_14", "dend_32", "dend_23", "dend_17", "dend_16", "dend_24", "dend_26", "dend_25", "dend_28", "dend_27", "dend_31", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_49", "dend_35", "dend_1", "dend_0", "dend_56", "dend_53", "dend_51", "dend_50", "dend_39", "dend_36", "dend_34", "dend_2", "dend_55", "dend_54", "dend_45", "dend_40", "dend_38", "dend_37", "dend_33", "dend_3", "dend_46", "dend_42", "dend_41", "dend_4", "dend_48", "dend_47", "dend_44", "dend_43", "dend_5", "dend_10", "dend_6", "dend_12", "dend_11", "dend_9", "dend_8", "dend_7", "dend_21", "dend_18", "dend_13", "dend_22", "dend_20", "dend_19", "dend_15", "dend_14", "dend_32", "dend_23", "dend_17", "dend_16", "dend_24", "dend_26", "dend_25", "dend_28", "dend_27", "dend_31", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_55", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_7", "dend_7", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_14", "dend_14", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_24", "dend_24", "dend_24", "dend_24", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_28", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_ChC_feef7b2013_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_1
create dend_34
public dend_34
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_2
create dend_33
public dend_33
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_10, id: dend_10, parent: dend_5
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_6
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_12
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_32, id: dend_32, parent: dend_22
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_28
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_55, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_14, dend_14, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_28, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.4499998968006674)
    connect dend_49(0), soma_0(0.4499998968006674)
    connect dend_35(0), soma_0(0.4499998968006674)
    connect dend_1(0), soma_0(0.4499998968006674)
    connect dend_0(0), soma_0(0.4499998968006674)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_10(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_6(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_12(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_32(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_28(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.8586, -8.04469, 1.53009, 3.3791 ) }
    soma_0 { pt3dadd( -7.97995, -7.34666, 1.36479, 5.72454 ) }
    soma_0 { pt3dadd( -7.1013, -6.64862, 1.1995, 8.23846 ) }
    soma_0 { pt3dadd( -6.22264, -5.95059, 1.0342, 11.0117 ) }
    soma_0 { pt3dadd( -5.34399, -5.25256, 0.868909, 12.2892 ) }
    soma_0 { pt3dadd( -4.46534, -4.55452, 0.703614, 13.1847 ) }
    soma_0 { pt3dadd( -3.58668, -3.85649, 0.538319, 13.8694 ) }
    soma_0 { pt3dadd( -2.70803, -3.15845, 0.373024, 14.3074 ) }
    soma_0 { pt3dadd( -1.82938, -2.46042, 0.207729, 14.3951 ) }
    soma_0 { pt3dadd( -0.950725, -1.76239, 0.0424341, 13.9653 ) }
    soma_0 { pt3dadd( -0.0720712, -1.06435, -0.122861, 13.3474 ) }
    soma_0 { pt3dadd( 0.806582, -0.36632, -0.288156, 12.6084 ) }
    soma_0 { pt3dadd( 1.68524, 0.331714, -0.453451, 11.7137 ) }
    soma_0 { pt3dadd( 2.56389, 1.02975, -0.618746, 10.9789 ) }
    soma_0 { pt3dadd( 3.44254, 1.72778, -0.784041, 10.2328 ) }
    soma_0 { pt3dadd( 4.3212, 2.42582, -0.949336, 9.50705 ) }
    soma_0 { pt3dadd( 5.19985, 3.12385, -1.11463, 8.866 ) }
    soma_0 { pt3dadd( 6.0785, 3.82188, -1.27993, 8.5708 ) }
    soma_0 { pt3dadd( 6.95716, 4.51992, -1.44522, 7.86083 ) }
    soma_0 { pt3dadd( 7.83581, 5.21795, -1.61052, 5.76858 ) }
    soma_0 { pt3dadd( 8.71446, 5.91598, -1.77581, 3.46527 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.69144, -0.454376, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -9.84583, -0.477266, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -11.3919, -0.648525, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -12.8885, -0.814315, 2.76069, 1.69 ) }
    dend_52 { pt3dadd( -14.308, -0.971565, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -16.3015, -1.1924, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -17.9512, -1.37514, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -20.7758, -1.66352, 2.76069, 1.55 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 29/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.48144, -9.9606, -11.0593, 2.43 ) }
    dend_49 { pt3dadd( -6.74639, -10.3023, -11.0593, 2.43 ) }
    dend_49 { pt3dadd( -7.47024, -11.4203, -11.0593, 1.69 ) }
    dend_49 { pt3dadd( -8.07892, -12.5569, -10.5934, 1.33 ) }
    dend_49 { pt3dadd( -8.47321, -13.3336, -10.1607, 1.33 ) }
    dend_49 { pt3dadd( -8.98778, -14.4329, -9.51422, 1.62 ) }
    dend_49 { pt3dadd( -9.42594, -15.4173, -8.93631, 1.92 ) }
    dend_49 { pt3dadd( -9.79133, -16.3504, -8.36313, 2.43 ) }
    dend_49 { pt3dadd( -11.1099, -20.4458, -5.75458, 1.92 ) }
    dend_49 { pt3dadd( -11.3479, -21.3133, -5.19413, 1.92 ) }
    dend_49 { pt3dadd( -11.6205, -22.3782, -4.48078, 1.18 ) }
    dend_49 { pt3dadd( -11.7716, -22.9669, -4.09218, 1.18 ) }
    dend_49 { pt3dadd( -11.9902, -23.7503, -3.63711, 1.18 ) }
    dend_49 { pt3dadd( -12.1813, -24.3243, -3.35536, 1.55 ) }
    dend_49 { pt3dadd( -12.422, -24.9037, -3.18218, 1.55 ) }
    dend_49 { pt3dadd( -12.9945, -26.0123, -2.79031, 0.96 ) }
    dend_49 { pt3dadd( -13.609, -26.9221, -2.43255, 1.33 ) }
    dend_49 { pt3dadd( -14.3602, -27.8317, -2.07139, 1.69 ) }
    dend_49 { pt3dadd( -15.617, -29.1291, -1.6043, 2.28 ) }
    dend_49 { pt3dadd( -16.5027, -29.9521, -1.35804, 1.84 ) }
    dend_49 { pt3dadd( -17.3974, -30.7229, -1.18724, 1.62 ) }
    dend_49 { pt3dadd( -18.2512, -31.4244, -1.10522, 1.62 ) }
    dend_49 { pt3dadd( -19.3666, -32.3355, -1.05357, 1.11 ) }
    dend_49 { pt3dadd( -20.0191, -32.9077, -1.06692, 0.88 ) }
    dend_49 { pt3dadd( -20.7519, -33.6363, -1.15109, 1.25 ) }
    dend_49 { pt3dadd( -21.2986, -34.2752, -1.2169, 1.25 ) }
    dend_49 { pt3dadd( -21.885, -35.0612, -1.39331, 0.88 ) }
    dend_49 { pt3dadd( -22.2438, -35.5829, -1.55796, 0.88 ) }
    dend_49 { pt3dadd( -22.6699, -36.1972, -1.79356, 1.62 ) }
    dend_49 { pt3dadd( -23.2562, -36.9837, -2.12232, 1.62 ) }
    dend_49 { pt3dadd( -23.8763, -37.6979, -2.47357, 1.62 ) }
    dend_49 { pt3dadd( -25.6327, -39.3256, -3.40441, 0.88 ) }
    dend_49 { pt3dadd( -26.3048, -39.8044, -3.71302, 0.59 ) }
    dend_49 { pt3dadd( -27.209, -40.3117, -4.04958, 0.59 ) }
    dend_49 { pt3dadd( -27.9335, -40.6558, -4.2571, 0.96 ) }
    dend_49 { pt3dadd( -28.8234, -41.0388, -4.44125, 1.62 ) }
    dend_49 { pt3dadd( -29.7757, -41.4324, -4.55617, 1.92 ) }
    dend_49 { pt3dadd( -30.8268, -41.898, -4.46018, 2.06 ) }
    dend_49 { pt3dadd( -32.1022, -42.5177, -4.21785, 1.55 ) }
    dend_49 { pt3dadd( -33.3087, -43.1585, -3.88534, 1.25 ) }
    dend_49 { pt3dadd( -34.0289, -43.5768, -3.63739, 1.25 ) }
    dend_49 { pt3dadd( -34.8566, -44.1127, -3.30275, 1.25 ) }
    dend_49 { pt3dadd( -37.139, -45.7691, -2.47003, 1.25 ) }
    dend_49 { pt3dadd( -37.6065, -46.1437, -2.3225, 1.25 ) }
    dend_49 { pt3dadd( -38.291, -46.7524, -2.16164, 1.03 ) }
    dend_49 { pt3dadd( -38.8398, -47.3115, -2.11966, 0.74 ) }
    dend_49 { pt3dadd( -39.3317, -47.889, -2.176, 1.62 ) }
    dend_49 { pt3dadd( -40.69, -49.6645, -2.60841, 2.28 ) }
    dend_49 { pt3dadd( -41.2694, -50.4431, -2.89994, 2.5 ) }
    dend_49 { pt3dadd( -41.6357, -50.9471, -3.07732, 2.5 ) }
    dend_49 { pt3dadd( -42.3688, -51.9452, -3.39151, 1.11 ) }
    dend_49 { pt3dadd( -42.932, -52.6254, -3.56031, 1.11 ) }
    dend_49 { pt3dadd( -43.3995, -53.101, -3.62739, 1.11 ) }
    dend_49 { pt3dadd( -43.8571, -53.4947, -3.62739, 1.11 ) }
    dend_49 { pt3dadd( -44.2637, -53.8216, -3.62739, 1.62 ) }
    dend_49 { pt3dadd( -44.9208, -54.4168, -3.62739, 1.99 ) }
    dend_49 { pt3dadd( -45.9501, -55.4592, -3.62739, 1.99 ) }
    dend_49 { pt3dadd( -46.8413, -56.4853, -3.62739, 1.99 ) }
    dend_49 { pt3dadd( -47.7033, -57.6151, -3.62739, 1.99 ) }
    dend_49 { pt3dadd( -48.4213, -58.6746, -3.62739, 1.99 ) }
    dend_49 { pt3dadd( -49.9657, -61.2253, -3.61395, 1.99 ) }
    dend_49 { pt3dadd( -50.5781, -62.4138, -3.60335, 1.99 ) }
    dend_49 { pt3dadd( -51.024, -63.4756, -3.59085, 1.55 ) }
    dend_49 { pt3dadd( -51.333, -64.3477, -3.5784, 1.18 ) }
    dend_49 { pt3dadd( -52.0393, -66.7147, -3.43556, 1.18 ) }
    dend_49 { pt3dadd( -52.2461, -67.5729, -3.34606, 1.11 ) }
    dend_49 { pt3dadd( -52.4483, -68.6716, -3.1799, 1.92 ) }
    dend_49 { pt3dadd( -52.6508, -70.057, -2.92463, 2.14 ) }
    dend_49 { pt3dadd( -52.7434, -70.7462, -2.77828, 2.14 ) }
    dend_49 { pt3dadd( -53.0075, -72.7234, -2.30433, 0.66 ) }
    dend_49 { pt3dadd( -53.123, -73.5923, -2.06477, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_49 { pt3dadd( -53.3042, -74.3297, -1.85113, 0.66 ) }
    dend_49 { pt3dadd( -53.4146, -74.5762, -1.77418, 1.03 ) }
    dend_49 { pt3dadd( -53.958, -75.2716, -1.55949, 1.03 ) }
    dend_49 { pt3dadd( -54.4167, -75.6372, -1.48032, 1.03 ) }
    dend_49 { pt3dadd( -54.681, -75.7754, -1.4765, 1.33 ) }
    dend_49 { pt3dadd( -55.458, -76.1393, -1.4659, 1.33 ) }
    dend_49 { pt3dadd( -56.1724, -76.5072, -1.45657, 0.96 ) }
    dend_49 { pt3dadd( -56.7505, -76.8903, -1.44959, 0.81 ) }
    dend_49 { pt3dadd( -57.3703, -77.4393, -1.44271, 0.81 ) }
    dend_49 { pt3dadd( -57.7964, -77.9534, -1.43652, 1.11 ) }
    dend_49 { pt3dadd( -58.2464, -78.6891, -1.42861, 1.33 ) }
    dend_49 { pt3dadd( -58.6219, -79.5413, -1.42113, 1.33 ) }
    dend_49 { pt3dadd( -58.9677, -80.5436, -1.41135, 1.33 ) }
    dend_49 { pt3dadd( -59.1387, -81.0745, -1.41673, 1.33 ) }
    dend_49 { pt3dadd( -59.276, -81.476, -1.42772, 0.96 ) }
    dend_49 { pt3dadd( -59.5007, -82.0856, -1.45348, 0.96 ) }
    dend_49 { pt3dadd( -59.8092, -82.8262, -1.49459, 1.18 ) }
    dend_49 { pt3dadd( -60.0692, -83.3752, -1.52985, 1.55 ) }
    dend_49 { pt3dadd( -60.5778, -84.283, -1.59242, 1.55 ) }
    dend_49 { pt3dadd( -60.9925, -84.9312, -1.6386, 1.25 ) }
    dend_49 { pt3dadd( -61.4675, -85.5696, -1.684, 1.25 ) }
    dend_49 { pt3dadd( -62.0058, -86.1688, -1.72321, 1.25 ) }
    dend_49 { pt3dadd( -62.7603, -86.8289, -1.81531, 1.03 ) }
    dend_49 { pt3dadd( -63.5156, -87.3388, -1.92906, 1.03 ) }
    dend_49 { pt3dadd( -63.7852, -87.4734, -1.9724, 1.03 ) }
    dend_49 { pt3dadd( -64.7619, -87.8345, -2.14338, 1.25 ) }
    dend_49 { pt3dadd( -65.6469, -88.085, -2.29796, 1.4 ) }
    dend_49 { pt3dadd( -67.019, -88.421, -2.53142, 1.4 ) }
    dend_49 { pt3dadd( -67.765, -88.6115, -2.65464, 1.11 ) }
    dend_49 { pt3dadd( -68.6406, -88.8766, -2.79264, 1.03 ) }
    dend_49 { pt3dadd( -69.3118, -89.1388, -2.88647, 0.96 ) }
    dend_49 { pt3dadd( -70.1407, -89.5692, -2.9797, 0.96 ) }
    dend_49 { pt3dadd( -70.9017, -90.0914, -3.03063, 0.96 ) }
    dend_49 { pt3dadd( -71.4745, -90.6226, -3.03063, 0.96 ) }
    dend_49 { pt3dadd( -71.7243, -90.9161, -3.03063, 1.25 ) }
    dend_49 { pt3dadd( -72.2339, -91.6621, -3.03063, 1.62 ) }
    dend_49 { pt3dadd( -72.6405, -92.3615, -3.03063, 1.84 ) }
    dend_49 { pt3dadd( -72.8979, -92.8459, -3.00005, 1.84 ) }
    dend_49 { pt3dadd( -73.4019, -93.864, -2.88702, 1.62 ) }
    dend_49 { pt3dadd( -73.7152, -94.5204, -2.79259, 1.62 ) }
    dend_49 { pt3dadd( -73.9464, -95.0252, -2.71222, 1.99 ) }
    dend_49 { pt3dadd( -74.3572, -95.9697, -2.55425, 1.99 ) }
    dend_49 { pt3dadd( -74.9178, -97.1471, -2.35097, 1.99 ) }
    dend_49 { pt3dadd( -75.4417, -98.0819, -2.19087, 1.99 ) }
    dend_49 { pt3dadd( -75.8427, -98.6639, -2.0933, 1.99 ) }
    dend_49 { pt3dadd( -76.739, -99.699, -1.94009, 1.33 ) }
    dend_49 { pt3dadd( -77.38, -100.284, -1.8693, 1.33 ) }
    dend_49 { pt3dadd( -78.2844, -100.945, -1.82223, 1.33 ) }
    dend_49 { pt3dadd( -79.3339, -101.583, -1.82223, 1.55 ) }
    dend_49 { pt3dadd( -80.1084, -101.992, -1.82019, 1.84 ) }
    dend_49 { pt3dadd( -81.4349, -102.668, -1.81408, 1.84 ) }
    dend_49 { pt3dadd( -82.1462, -103.042, -1.80953, 1.84 ) }
    dend_49 { pt3dadd( -83.1995, -103.695, -1.80098, 1.18 ) }
    dend_49 { pt3dadd( -83.8422, -104.209, -1.79442, 1.18 ) }
    dend_49 { pt3dadd( -84.4348, -104.793, -1.78747, 1.18 ) }
    dend_49 { pt3dadd( -85.0054, -105.447, -1.78037, 1.18 ) }
    dend_49 { pt3dadd( -85.6136, -106.213, -1.77278, 1.4 ) }
    dend_49 { pt3dadd( -86.3246, -107.123, -1.76489, 1.4 ) }
    dend_49 { pt3dadd( -86.7561, -107.624, -1.76126, 1.62 ) }
    dend_49 { pt3dadd( -87.6309, -108.458, -1.75718, 0.96 ) }
    dend_49 { pt3dadd( -88.1435, -108.806, -1.75718, 0.96 ) }
    dend_49 { pt3dadd( -88.7143, -109.037, -1.75718, 0.81 ) }
    dend_49 { pt3dadd( -89.2079, -109.138, -1.75718, 0.81 ) }
    dend_49 { pt3dadd( -90.0116, -109.22, -1.75718, 0.81 ) }
    dend_49 { pt3dadd( -90.9367, -109.321, -1.75718, 0.81 ) }
    dend_49 { pt3dadd( -91.6601, -109.464, -1.75718, 0.81 ) }
    dend_49 { pt3dadd( -92.0536, -109.657, -1.75718, 0.88 ) }
    dend_49 { pt3dadd( -92.7264, -110.272, -1.75718, 1.18 ) }
    dend_49 { pt3dadd( -93.2766, -110.993, -1.75718, 1.55 ) }
    dend_49 { pt3dadd( -93.752, -111.796, -1.80941, 1.99 ) }
    dend_49 { pt3dadd( -94.1688, -112.62, -1.89189, 1.99 ) }
    dend_49 { pt3dadd( -94.6659, -113.728, -2.02716, 1.92 ) }
    dend_49 { pt3dadd( -95.0169, -114.521, -2.14102, 1.69 ) }
    dend_49 { pt3dadd( -95.1985, -114.895, -2.2054, 1.69 ) }
    dend_49 { pt3dadd( -95.8564, -116.035, -2.43723, 0.96 ) }
    dend_49 { pt3dadd( -96.4408, -116.798, -2.62304, 0.96 ) }
    dend_49 { pt3dadd( -96.8183, -117.142, -2.67309, 0.96 ) }
    dend_49 { pt3dadd( -97.3421, -117.474, -2.71572, 0.96 ) }
    dend_49 { pt3dadd( -98.0663, -117.844, -2.74397, 0.96 ) }
    dend_49 { pt3dadd( -98.6423, -118.087, -2.73227, 0.96 ) }
    dend_49 { pt3dadd( -99.201, -118.267, -2.66518, 0.96 ) }
    dend_49 { pt3dadd( -100.976, -118.698, -2.42331, 0.96 ) }
    dend_49 { pt3dadd( -102.655, -119.07, -2.1687, 0.74 ) }
    dend_49 { pt3dadd( -102.869, -119.13, -2.13032, 0.74 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 84/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.22144, -8.99538, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -8.87728, -9.50302, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -10.7993, -10.807, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -12.1697, -11.6648, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -13.8455, -12.6416, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -15.8864, -13.7596, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -17.4696, -14.5622, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -18.9132, -15.1921, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -20.3469, -15.6589, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -21.8298, -15.9765, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -22.6679, -16.0499, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -23.8512, -16.0819, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -24.9521, -16.0405, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -26.2814, -15.9077, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -28.4703, -15.5106, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -29.7944, -15.1798, 0.070692, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.9086, 2.46088, -10.6193, 2.73 ) }
    dend_1 { pt3dadd( 11.1732, 2.38162, -10.5885, 2.73 ) }
    dend_1 { pt3dadd( 13.1713, 1.68532, -10.3892, 1.99 ) }
    dend_1 { pt3dadd( 15.2468, 0.891956, -10.2103, 2.43 ) }
    dend_1 { pt3dadd( 16.3865, 0.407363, -10.3098, 2.43 ) }
    dend_1 { pt3dadd( 17.9214, -0.30542, -10.5916, 2.5 ) }
    dend_1 { pt3dadd( 20.1608, -1.34541, -11.0029, 2.5 ) }
    dend_1 { pt3dadd( 21.286, -1.89695, -11.2557, 2.43 ) }
    dend_1 { pt3dadd( 22.5722, -2.61691, -11.6688, 1.99 ) }
    dend_1 { pt3dadd( 26.2594, -4.85673, -13.3866, 2.36 ) }
    dend_1 { pt3dadd( 27.0742, -5.39302, -13.8752, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.74856, 6.88737, -2.05931, 1.33 ) }
    dend_0 { pt3dadd( 9.45653, 7.48183, -2.03867, 1.33 ) }
    dend_0 { pt3dadd( 10.1524, 8.07806, -2.02263, 1.33 ) }
    dend_0 { pt3dadd( 11.0228, 8.8348, -1.82373, 1.33 ) }
    dend_0 { pt3dadd( 11.5863, 9.34526, -1.64011, 1.77 ) }
    dend_0 { pt3dadd( 12.3354, 10.0608, -1.36298, 2.28 ) }
    dend_0 { pt3dadd( 12.9108, 10.6406, -1.13796, 1.99 ) }
    dend_0 { pt3dadd( 13.6971, 11.5182, -0.778437, 1.25 ) }
    dend_0 { pt3dadd( 15.047, 13.1917, -0.183753, 1.25 ) }
    dend_0 { pt3dadd( 15.5784, 13.9055, 0.0222115, 1.33 ) }
    dend_0 { pt3dadd( 16.0778, 14.6228, 0.18195, 1.62 ) }
    dend_0 { pt3dadd( 16.4211, 15.1755, 0.140161, 1.69 ) }
    dend_0 { pt3dadd( 16.6772, 15.7016, -0.124057, 1.69 ) }
    dend_0 { pt3dadd( 16.9777, 16.7361, -1.14932, 1.03 ) }
    dend_0 { pt3dadd( 17.061, 17.3678, -1.93244, 1.03 ) }
    dend_0 { pt3dadd( 17.0594, 17.6886, -2.3584, 1.03 ) }
    dend_0 { pt3dadd( 16.7677, 20.0179, -5.53068, 1.99 ) }
    dend_0 { pt3dadd( 16.6032, 20.776, -6.54131, 1.69 ) }
    dend_0 { pt3dadd( 16.1196, 22.3822, -8.57836, 1.4 ) }
    dend_0 { pt3dadd( 15.7512, 23.361, -9.71151, 1.33 ) }
    dend_0 { pt3dadd( 15.4677, 24.0501, -10.419, 1.33 ) }
    dend_0 { pt3dadd( 15.1761, 24.8065, -11.04, 1.33 ) }
    dend_0 { pt3dadd( 14.9683, 25.5605, -11.4014, 1.33 ) }
    dend_0 { pt3dadd( 14.8802, 26.2506, -11.6516, 1.33 ) }
    dend_0 { pt3dadd( 14.9456, 26.9488, -11.8007, 1.33 ) }
    dend_0 { pt3dadd( 15.188, 27.6956, -11.9447, 1.33 ) }
    dend_0 { pt3dadd( 15.5607, 28.4248, -12.0947, 1.33 ) }
    dend_0 { pt3dadd( 16.1845, 29.337, -12.2832, 1.33 ) }
    dend_0 { pt3dadd( 17.1008, 30.4154, -12.5232, 0.96 ) }
    dend_0 { pt3dadd( 17.673, 30.9844, -12.6798, 0.96 ) }
    dend_0 { pt3dadd( 18.2805, 31.5149, -12.7965, 0.96 ) }
    dend_0 { pt3dadd( 18.6427, 31.8044, -12.8387, 1.25 ) }
    dend_0 { pt3dadd( 19.2474, 32.2921, -12.8829, 1.25 ) }
    dend_0 { pt3dadd( 19.9081, 32.8493, -13.004, 1.18 ) }
    dend_0 { pt3dadd( 20.8033, 33.6491, -13.2346, 1.18 ) }
    dend_0 { pt3dadd( 21.9148, 34.7326, -13.6377, 1.18 ) }
    dend_0 { pt3dadd( 22.6458, 35.4808, -13.9516, 1.4 ) }
    dend_0 { pt3dadd( 23.3327, 36.1964, -14.2679, 1.4 ) }
    dend_0 { pt3dadd( 25.0277, 38.0026, -15.0618, 1.18 ) }
    dend_0 { pt3dadd( 25.7388, 38.7858, -15.3859, 0.88 ) }
    dend_0 { pt3dadd( 26.5258, 39.6536, -15.7206, 0.88 ) }
    dend_0 { pt3dadd( 27.0445, 40.2021, -15.9326, 0.81 ) }
    dend_0 { pt3dadd( 27.7267, 40.8617, -16.1264, 0.81 ) }
    dend_0 { pt3dadd( 28.6677, 41.6703, -16.2521, 1.69 ) }
    dend_0 { pt3dadd( 29.464, 42.2957, -16.2435, 2.5 ) }
    dend_0 { pt3dadd( 29.9264, 42.6394, -16.2384, 2.06 ) }
    dend_0 { pt3dadd( 30.8322, 43.3227, -16.2287, 0.96 ) }
    dend_0 { pt3dadd( 31.3345, 43.7396, -16.2236, 0.96 ) }
    dend_0 { pt3dadd( 31.7113, 44.102, -16.2203, 0.96 ) }
    dend_0 { pt3dadd( 32.1714, 44.6463, -16.2178, 0.96 ) }
    dend_0 { pt3dadd( 32.5393, 45.2266, -16.2178, 0.96 ) }
    dend_0 { pt3dadd( 32.8976, 46.0971, -16.2178, 0.96 ) }
    dend_0 { pt3dadd( 33.0673, 46.8696, -16.2178, 0.96 ) }
    dend_0 { pt3dadd( 33.1689, 47.5942, -16.2136, 0.96 ) }
    dend_0 { pt3dadd( 33.2659, 48.4455, -16.2046, 0.96 ) }
    dend_0 { pt3dadd( 33.3631, 49.2146, -16.1931, 0.96 ) }
    dend_0 { pt3dadd( 33.5372, 50.0266, -16.1776, 0.96 ) }
    dend_0 { pt3dadd( 33.7909, 50.7814, -16.1602, 0.96 ) }
    dend_0 { pt3dadd( 34.0599, 51.2669, -16.1484, 0.96 ) }
    dend_0 { pt3dadd( 34.5819, 51.9575, -16.1319, 1.33 ) }
    dend_0 { pt3dadd( 35.1375, 52.5682, -16.1184, 1.69 ) }
    dend_0 { pt3dadd( 36.0547, 53.4483, -16.1636, 1.69 ) }
    dend_0 { pt3dadd( 36.3639, 53.7198, -16.1942, 1.69 ) }
    dend_0 { pt3dadd( 37.4941, 54.778, -16.3531, 0.88 ) }
    dend_0 { pt3dadd( 37.9511, 55.267, -16.4397, 0.74 ) }
    dend_0 { pt3dadd( 38.2771, 55.6593, -16.5169, 0.74 ) }
    dend_0 { pt3dadd( 38.9513, 56.6276, -16.6545, 0.74 ) }
    dend_0 { pt3dadd( 39.3144, 57.2899, -16.7056, 0.74 ) }
    dend_0 { pt3dadd( 39.748, 58.3516, -16.7166, 0.66 ) }
    dend_0 { pt3dadd( 39.8504, 58.6956, -16.7005, 0.96 ) }
    dend_0 { pt3dadd( 40.0083, 59.2617, -16.652, 1.33 ) }
    dend_0 { pt3dadd( 40.442, 60.5862, -16.4986, 0.96 ) }
    dend_0 { pt3dadd( 40.83, 61.4258, -16.3855, 0.96 ) }
    dend_0 { pt3dadd( 41.3788, 62.3656, -16.2946, 0.96 ) }
    dend_0 { pt3dadd( 41.9121, 63.1547, -16.2384, 0.96 ) }
    dend_0 { pt3dadd( 42.4309, 63.8879, -16.202, 0.96 ) }
    dend_0 { pt3dadd( 43.3472, 65.1442, -16.1684, 0.96 ) }
    dend_0 { pt3dadd( 44.8654, 67.1269, -16.1684, 0.81 ) }
    dend_0 { pt3dadd( 46.7838, 69.5296, -16.1684, 0.66 ) }
    dend_0 { pt3dadd( 47.3037, 70.1536, -16.1684, 1.4 ) }
    dend_0 { pt3dadd( 47.8621, 70.8158, -16.18, 2.14 ) }
    dend_0 { pt3dadd( 48.6193, 71.7133, -16.2106, 2.43 ) }
    dend_0 { pt3dadd( 49.5529, 72.829, -16.2667, 0.74 ) }
    dend_0 { pt3dadd( 50.2431, 73.584, -16.3176, 0.74 ) }
    dend_0 { pt3dadd( 50.9979, 74.2911, -16.3769, 0.74 ) }
    dend_0 { pt3dadd( 52.0821, 75.2292, -16.4601, 0.74 ) }
    dend_0 { pt3dadd( 53.2646, 76.19, -16.5483, 0.74 ) }
    dend_0 { pt3dadd( 54.2171, 76.9304, -16.6154, 0.52 ) }
    dend_0 { pt3dadd( 56.031, 78.354, -16.7317, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( 56.4193, 78.6675, -16.7518, 0.15 ) }
    dend_0 { pt3dadd( 56.9404, 79.1021, -16.7671, 0.15 ) }
    dend_0 { pt3dadd( 57.3379, 79.4321, -16.763, 0.81 ) }
    dend_0 { pt3dadd( 57.5905, 79.6442, -16.7586, 1.18 ) }
    dend_0 { pt3dadd( 58.1948, 80.1722, -16.7439, 1.18 ) }
    dend_0 { pt3dadd( 58.6575, 80.6338, -16.7292, 1.18 ) }
    dend_0 { pt3dadd( 59.0791, 81.0228, -16.7172, 1.03 ) }
    dend_0 { pt3dadd( 59.5812, 81.4398, -16.7054, 0.88 ) }
    dend_0 { pt3dadd( 60.123, 81.8768, -16.6949, 0.81 ) }
    dend_0 { pt3dadd( 60.7157, 82.3712, -16.6863, 0.81 ) }
    dend_0 { pt3dadd( 61.2446, 82.8418, -16.6793, 0.81 ) }
    dend_0 { pt3dadd( 62.0878, 83.6847, -16.6693, 0.81 ) }
    dend_0 { pt3dadd( 62.7146, 84.4118, -16.6634, 0.81 ) }
    dend_0 { pt3dadd( 63.1413, 84.9984, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 63.5984, 85.7466, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 63.9488, 86.4621, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 64.1725, 87.0523, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 64.3525, 87.6743, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 64.4765, 88.0874, -16.6608, 0.81 ) }
    dend_0 { pt3dadd( 64.66, 88.5523, -16.6608, 0.44 ) }
    dend_0 { pt3dadd( 64.8704, 88.9713, -16.6608, 0.44 ) }
    dend_0 { pt3dadd( 65.1689, 89.4621, -16.6608, 0.66 ) }
    dend_0 { pt3dadd( 65.636, 90.1307, -16.6608, 0.66 ) }
    dend_0 { pt3dadd( 66.1969, 90.8601, -16.6572, 0.66 ) }
    dend_0 { pt3dadd( 66.7621, 91.5413, -16.6516, 1.11 ) }
    dend_0 { pt3dadd( 67.1807, 92.0218, -16.6465, 1.33 ) }
    dend_0 { pt3dadd( 67.6755, 92.5911, -16.6395, 1.33 ) }
    dend_0 { pt3dadd( 67.9736, 92.9727, -16.6346, 1.33 ) }
    dend_0 { pt3dadd( 68.6962, 94.0776, -16.6204, 0.59 ) }
    dend_0 { pt3dadd( 68.7967, 94.281, -16.6079, 0.15 ) }
    dend_0 { pt3dadd( 69.0449, 94.9108, -16.5473, 1.25 ) }
    dend_0 { pt3dadd( 69.276, 95.5854, -16.4678, 1.77 ) }
    dend_0 { pt3dadd( 69.5734, 96.5415, -16.3425, 2.14 ) }
    dend_0 { pt3dadd( 69.7507, 97.2357, -16.3119, 1.84 ) }
    dend_0 { pt3dadd( 70.1092, 98.9442, -16.3602, 0.81 ) }
    dend_0 { pt3dadd( 70.2522, 99.643, -16.4199, 0.81 ) }
    dend_0 { pt3dadd( 70.3537, 100.106, -16.4852, 0.81 ) }
    dend_0 { pt3dadd( 70.5583, 100.882, -16.6407, 0.81 ) }
    dend_0 { pt3dadd( 71.1738, 102.809, -17.1491, 0.81 ) }
    dend_0 { pt3dadd( 71.3363, 103.261, -17.3138, 0.81 ) }
    dend_0 { pt3dadd( 71.576, 103.867, -17.593, 0.81 ) }
    dend_0 { pt3dadd( 71.8171, 104.469, -17.8641, 0.81 ) }
    dend_0 { pt3dadd( 71.9774, 104.862, -18.0238, 0.81 ) }
    dend_0 { pt3dadd( 72.3044, 105.621, -18.2681, 1.25 ) }
    dend_0 { pt3dadd( 72.8666, 106.752, -18.4998, 1.25 ) }
    dend_0 { pt3dadd( 73.0606, 107.14, -18.5761, 1.25 ) }
    dend_0 { pt3dadd( 73.2809, 107.585, -18.6561, 1.25 ) }
    dend_0 { pt3dadd( 73.481, 107.991, -18.7204, 1.25 ) }
    dend_0 { pt3dadd( 74.1618, 109.381, -18.9046, 0.66 ) }
    dend_0 { pt3dadd( 74.7073, 110.443, -19.0101, 0.44 ) }
    dend_0 { pt3dadd( 75.0725, 111.149, -19.0473, 0.96 ) }
    dend_0 { pt3dadd( 75.4493, 111.886, -19.0808, 1.33 ) }
    dend_0 { pt3dadd( 75.7018, 112.4, -19.099, 1.69 ) }
    dend_0 { pt3dadd( 75.8856, 112.789, -19.1074, 1.69 ) }
    dend_0 { pt3dadd( 76.1562, 113.383, -19.1427, 1.47 ) }
    dend_0 { pt3dadd( 76.4445, 114.039, -19.2159, 1.11 ) }
    dend_0 { pt3dadd( 76.7706, 114.733, -19.3223, 0.74 ) }
    dend_0 { pt3dadd( 77.1278, 115.418, -19.4515, 0.74 ) }
    dend_0 { pt3dadd( 77.3705, 115.826, -19.5396, 1.03 ) }
    dend_0 { pt3dadd( 78.1064, 116.901, -19.8504, 0.88 ) }
    dend_0 { pt3dadd( 78.4197, 117.317, -20.0352, 0.88 ) }
    dend_0 { pt3dadd( 78.7235, 117.695, -20.2496, 0.88 ) }
    dend_0 { pt3dadd( 79.0041, 118.03, -20.4684, 0.88 ) }
    dend_0 { pt3dadd( 79.2921, 118.358, -20.728, 0.88 ) }
    dend_0 { pt3dadd( 79.8076, 118.969, -21.2226, 0.66 ) }
    dend_0 { pt3dadd( 80.5806, 119.85, -21.9208, 0.96 ) }
    dend_0 { pt3dadd( 80.9095, 120.224, -22.2156, 1.25 ) }
    dend_0 { pt3dadd( 81.1708, 120.529, -22.4464, 1.47 ) }
    dend_0 { pt3dadd( 82.0656, 121.617, -23.1927, 0.88 ) }
    dend_0 { pt3dadd( 82.5537, 122.243, -23.5451, 0.59 ) }
    dend_0 { pt3dadd( 83.0537, 122.92, -23.7977, 0.22 ) }
    dend_0 { pt3dadd( 83.2897, 123.225, -23.8602, 0.22 ) }
    dend_0 { pt3dadd( 83.4149, 123.395, -23.8681, 0.52 ) }
    dend_0 { pt3dadd( 83.7111, 123.836, -23.8349, 1.11 ) }
    dend_0 { pt3dadd( 84.2019, 124.618, -23.6961, 1.11 ) }
    dend_0 { pt3dadd( 84.6818, 125.425, -23.5192, 0.66 ) }
    dend_0 { pt3dadd( 85.5007, 126.913, -23.1645, 0.37 ) }
    dend_0 { pt3dadd( 86.1729, 128.108, -22.8316, 1.47 ) }
    dend_0 { pt3dadd( 86.5177, 128.708, -22.6522, 1.25 ) }
    dend_0 { pt3dadd( 86.8398, 129.273, -22.4763, 0.88 ) }
    dend_0 { pt3dadd( 87.2333, 129.962, -22.2608, 0.37 ) }
    dend_0 { pt3dadd( 87.5464, 130.52, -22.0912, 0.37 ) }
    dend_0 { pt3dadd( 88.0912, 131.493, -21.798, 1.11 ) }
    dend_0 { pt3dadd( 88.6195, 132.365, -21.5625, 0.59 ) }
    dend_0 { pt3dadd( 89.0616, 133.082, -21.3749, 1.25 ) }
    dend_0 { pt3dadd( 89.4653, 133.722, -21.1972, 1.99 ) }
    dend_0 { pt3dadd( 90.1656, 134.786, -20.9083, 1.11 ) }
    dend_0 { pt3dadd( 90.9009, 135.865, -20.5874, 1.11 ) }
    dend_0 { pt3dadd( 91.3736, 136.543, -20.3836, 1.03 ) }
    dend_0 { pt3dadd( 92.041, 137.444, -20.0928, 1.03 ) }
    dend_0 { pt3dadd( 92.6786, 138.264, -19.8258, 0.88 ) }
    dend_0 { pt3dadd( 93.3406, 139.112, -19.5639, 1.62 ) }
    dend_0 { pt3dadd( 93.9377, 139.866, -19.3581, 1.62 ) }
    dend_0 { pt3dadd( 94.5771, 140.654, -19.1599, 0.29 ) }
    dend_0 { pt3dadd( 94.9917, 141.157, -19.0395, 0.29 ) }
    dend_0 { pt3dadd( 95.4774, 141.747, -18.9225, 0.29 ) }
    dend_0 { pt3dadd( 95.8846, 142.266, -18.8536, 0.29 ) }
    dend_0 { pt3dadd( 96.2286, 142.706, -18.8037, 0.88 ) }
    dend_0 { pt3dadd( 96.4912, 143.043, -18.777, 1.47 ) }
    dend_0 { pt3dadd( 96.9998, 143.694, -18.7228, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_0 { pt3dadd( 97.7915, 144.716, -18.6456, 0.29 ) }
    dend_0 { pt3dadd( 98.2622, 145.298, -18.6078, 1.03 ) }
    dend_0 { pt3dadd( 98.6469, 145.777, -18.5834, 1.4 ) }
    dend_0 { pt3dadd( 99.072, 146.311, -18.5395, 1.4 ) }
    dend_0 { pt3dadd( 99.1984, 146.464, -18.524, 1.4 ) }
    dend_0 { pt3dadd( 100.128, 147.494, -18.3825, 0.44 ) }
    dend_0 { pt3dadd( 100.733, 148.113, -18.2074, 0.44 ) }
    dend_0 { pt3dadd( 101.077, 148.485, -18.0712, 0.44 ) }
    dend_0 { pt3dadd( 101.893, 149.334, -17.7223, 0.66 ) }
    dend_0 { pt3dadd( 102.45, 149.884, -17.4697, 0.96 ) }
    dend_0 { pt3dadd( 103.031, 150.437, -17.2049, 1.25 ) }
    dend_0 { pt3dadd( 104.364, 151.671, -16.5994, 0.29 ) }
    dend_0 { pt3dadd( 105.1, 152.407, -16.2407, 0.29 ) }
    dend_0 { pt3dadd( 106.307, 153.708, -15.6159, 0.29 ) }
    dend_0 { pt3dadd( 106.69, 154.19, -15.3146, 0.88 ) }
    dend_0 { pt3dadd( 107.16, 154.888, -14.8114, 1.55 ) }
    dend_0 { pt3dadd( 107.489, 155.428, -14.3995, 1.55 ) }
    dend_0 { pt3dadd( 108.261, 156.784, -13.3737, 0.37 ) }
    dend_0 { pt3dadd( 108.52, 157.256, -13.0198, 1.33 ) }
    dend_0 { pt3dadd( 109.735, 159.779, -11.2414, 1.18 ) }
    dend_0 { pt3dadd( 110.112, 160.579, -10.7367, 0.88 ) }
    dend_0 { pt3dadd( 110.493, 161.454, -10.2537, 0.74 ) }
    dend_0 { pt3dadd( 110.866, 162.347, -9.8453, 1.62 ) }
    dend_0 { pt3dadd( 111.438, 163.725, -9.41889, 0.88 ) }
    dend_0 { pt3dadd( 111.769, 164.543, -9.28173, 0.52 ) }
    dend_0 { pt3dadd( 112.081, 165.359, -9.28173, 0.52 ) }
    dend_0 { pt3dadd( 112.447, 166.417, -9.28173, 0.52 ) }
    dend_0 { pt3dadd( 112.54, 166.716, -9.28173, 0.52 ) }
    dend_0 { pt3dadd( 112.742, 167.349, -9.28173, 0.74 ) }
    dend_0 { pt3dadd( 112.95, 167.941, -9.3647, 0.74 ) }
    dend_0 { pt3dadd( 113.156, 168.483, -9.49927, 1.11 ) }
    dend_0 { pt3dadd( 113.414, 169.131, -9.70891, 1.47 ) }
    dend_0 { pt3dadd( 113.755, 170.032, -9.99876, 1.03 ) }
    dend_0 { pt3dadd( 114.004, 170.766, -10.2198, 0.74 ) }
    dend_0 { pt3dadd( 114.707, 172.912, -10.7779, 0.15 ) }
    dend_0 { pt3dadd( 114.845, 173.401, -10.889, 1.33 ) }
    dend_0 { pt3dadd( 115.012, 173.98, -10.9987, 1.33 ) }
    dend_0 { pt3dadd( 115.765, 176.478, -11.4156, 0.52 ) }
    dend_0 { pt3dadd( 116.079, 177.427, -11.5473, 1.33 ) }
    dend_0 { pt3dadd( 116.929, 179.516, -11.7508, 0.22 ) }
    dend_0 { pt3dadd( 117.387, 180.439, -11.7918, 0.22 ) }
    dend_0 { pt3dadd( 118.398, 182.081, -11.8763, 0.96 ) }
    dend_0 { pt3dadd( 118.888, 182.685, -11.9129, 0.66 ) }
    dend_0 { pt3dadd( 119.819, 183.547, -11.9758, 0.52 ) }
    dend_0 { pt3dadd( 121.521, 184.799, -12.0741, 0.52 ) }
    dend_0 { pt3dadd( 122.355, 185.304, -12.057, 1.4 ) }
    dend_0 { pt3dadd( 123.493, 185.969, -11.9224, 1.11 ) }
    dend_0 { pt3dadd( 124.946, 186.786, -11.6087, 0.52 ) }
    dend_0 { pt3dadd( 125.478, 187.079, -11.4494, 0.52 ) }
    dend_0 { pt3dadd( 126.468, 187.671, -10.9958, 1.47 ) }
    dend_0 { pt3dadd( 128.048, 188.775, -9.938, 1.47 ) }
    dend_0 { pt3dadd( 129.323, 189.68, -8.92077, 0.07 ) }
    dend_0 { pt3dadd( 130.009, 190.164, -8.31435, 0.07 ) }
    dend_0 { pt3dadd( 130.492, 190.484, -7.88705, 0.52 ) }
    dend_0 { pt3dadd( 131.984, 191.238, -6.68653, 1.55 ) }
    dend_0 { pt3dadd( 133.112, 191.669, -5.88034, 1.4 ) }
    dend_0 { pt3dadd( 134.809, 192.085, -4.90767, 0.29 ) }
    dend_0 { pt3dadd( 135.525, 192.19, -4.54901, 0.29 ) }
    dend_0 { pt3dadd( 136.642, 192.314, -4.03357, 1.69 ) }
    dend_0 { pt3dadd( 139.01, 192.533, -2.94675, 1.62 ) }
    dend_0 { pt3dadd( 139.322, 192.55, -2.82298, 1.18 ) }
    dend_0 { pt3dadd( 140.009, 192.589, -2.55761, 0.22 ) }
    dend_0 { pt3dadd( 140.837, 192.654, -2.23722, 1.33 ) }
    dend_0 { pt3dadd( 141.265, 192.682, -2.06555, 1.33 ) }
    dend_0 { pt3dadd( 143.745, 192.772, -1.08917, 0.07 ) }
    dend_0 { pt3dadd( 144.529, 192.803, -0.816157, 0.88 ) }
    dend_0 { pt3dadd( 145.452, 192.865, -0.49084, 1.25 ) }
    dend_0 { pt3dadd( 146.523, 193.022, -0.119514, 1.62 ) }
    dend_0 { pt3dadd( 147.154, 193.141, 0.07531, 0.88 ) }
    dend_0 { pt3dadd( 147.574, 193.217, 0.216062, 0.88 ) }
    dend_0 { pt3dadd( 148.452, 193.347, 0.484544, 0.22 ) }
    dend_0 { pt3dadd( 148.782, 193.412, 0.676483, 0.74 ) }
    dend_0 { pt3dadd( 149.685, 193.654, 1.37361, 0.07 ) }
    dend_0 { pt3dadd( 150.324, 193.866, 1.93863, 1.4 ) }
    dend_0 { pt3dadd( 151.679, 194.303, 3.18946, 0.66 ) }
    dend_0 { pt3dadd( 152.312, 194.491, 3.80028, 1.18 ) }
    dend_0 { pt3dadd( 153.634, 194.823, 5.12091, 0.07 ) }
    dend_0 { pt3dadd( 153.94, 194.914, 5.42247, 0.07 ) }
    dend_0 { pt3dadd( 154.223, 195.015, 5.69271, 0.59 ) }
    dend_0 { pt3dadd( 154.377, 195.111, 5.82138, 0.07 ) }
    dend_0 { pt3dadd( 154.751, 195.422, 5.99715, 0.07 ) }
    dend_0 { pt3dadd( 154.958, 195.606, 6.05382, 0.74 ) }
    dend_0 { pt3dadd( 155.684, 196.246, 5.96725, 0.15 ) }
    dend_0 { pt3dadd( 155.875, 196.421, 5.92491, 0.88 ) }
    dend_0 { pt3dadd( 156.167, 196.702, 5.83879, 0.07 ) }
    dend_0 { pt3dadd( 156.603, 197.184, 5.67119, 0.07 ) }
    dend_0 { pt3dadd( 156.862, 197.498, 5.5481, 0.88 ) }
    dend_0 { pt3dadd( 157.669, 198.542, 5.09781, 0.07 ) }
    dend_0 { pt3dadd( 157.935, 198.941, 4.92195, 1.11 ) }
    dend_0 { pt3dadd( 158.081, 199.206, 4.81636, 0.29 ) }
    dend_0 { pt3dadd( 158.362, 199.883, 4.58481, 0.07 ) }
    dend_0 { pt3dadd( 158.383, 199.949, 4.56798, 0.44 ) }
    dend_0 { pt3dadd( 158.414, 200.049, 4.55163, 0.07 ) }
    dend_0 { pt3dadd( 158.661, 200.79, 4.3661, 0.59 ) }
    dend_0 { pt3dadd( 158.775, 201.025, 4.23838, 0.07 ) }
    dend_0 { pt3dadd( 158.999, 201.361, 3.95405, 0.07 ) }
    dend_0 { pt3dadd( 159.27, 201.624, 3.6312, 0.07 ) }
    dend_0 { pt3dadd( 159.468, 201.776, 3.41197, 1.03 ) }
    dend_0 { pt3dadd( 160.801, 202.622, 2.0499, 0.22 ) }
    dend_0 { pt3dadd( 161.111, 202.784, 1.75038, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_0 { pt3dadd( 161.236, 202.84, 1.64665, 0.07 ) }
    dend_0 { pt3dadd( 161.639, 202.996, 1.35674, 0.07 ) }
    dend_0 { pt3dadd( 162.012, 203.146, 1.148, 0.88 ) }
    dend_0 { pt3dadd( 162.421, 203.335, 1.03424, 0.07 ) }
    dend_0 { pt3dadd( 162.722, 203.476, 1.04143, 0.07 ) }
    dend_0 { pt3dadd( 163.181, 203.705, 1.05403, 0.66 ) }
    dend_0 { pt3dadd( 163.181, 203.705, 1.05403, 0.07 ) }
    dend_0 { pt3dadd( 163.676, 203.984, 1.07204, 0.07 ) }
    dend_0 { pt3dadd( 164.104, 204.188, 1.08938, 0.74 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.71446, 5.91598, -1.77581, 2.20598 ) }
    axon_0 { pt3dadd( 20.4593, 15.2465, -1.77581, 2.20598 ) }
    axon_0 { pt3dadd( 32.2041, 24.577, -1.77581, 2.20598 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 12/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -20.7758, -1.66352, 2.76069, 1.69 ) }
    dend_56 { pt3dadd( -22.2092, -3.0752, 2.08158, 1.69 ) }
    dend_56 { pt3dadd( -23.383, -4.47926, 1.5168, 1.11 ) }
    dend_56 { pt3dadd( -24.2434, -5.65935, 1.11979, 1.11 ) }
    dend_56 { pt3dadd( -24.8369, -6.53945, 0.864022, 1.11 ) }
    dend_56 { pt3dadd( -25.2767, -7.20012, 0.69292, 1.33 ) }
    dend_56 { pt3dadd( -25.9105, -8.14705, 0.453261, 1.4 ) }
    dend_56 { pt3dadd( -26.7246, -9.51355, 0.107814, 1.4 ) }
    dend_56 { pt3dadd( -27.3059, -10.5887, -0.0820863, 1.25 ) }
    dend_56 { pt3dadd( -27.7337, -11.45, -0.20933, 1.4 ) }
    dend_56 { pt3dadd( -28.1366, -12.3333, -0.28013, 1.4 ) }
    dend_56 { pt3dadd( -28.5374, -13.3541, -0.149802, 1.03 ) }
    dend_56 { pt3dadd( -28.704, -13.9559, 0.08257, 1.03 ) }
    dend_56 { pt3dadd( -28.792, -14.6332, 0.688543, 1.03 ) }
    dend_56 { pt3dadd( -28.8141, -14.9147, 1.01078, 1.4 ) }
    dend_56 { pt3dadd( -28.9278, -16.1572, 2.65634, 1.25 ) }
    dend_56 { pt3dadd( -29.1667, -17.6768, 4.99941, 1.55 ) }
    dend_56 { pt3dadd( -29.2913, -18.1558, 5.84093, 1.69 ) }
    dend_56 { pt3dadd( -29.8956, -19.4921, 8.54399, 1.4 ) }
    dend_56 { pt3dadd( -30.1607, -19.8566, 9.37344, 1.03 ) }
    dend_56 { pt3dadd( -30.584, -20.2294, 10.3127, 0.96 ) }
    dend_56 { pt3dadd( -31.4341, -20.615, 11.4604, 0.96 ) }
    dend_56 { pt3dadd( -31.9026, -20.6839, 11.8208, 0.96 ) }
    dend_56 { pt3dadd( -32.9361, -20.6502, 12.3237, 0.96 ) }
    dend_56 { pt3dadd( -33.722, -20.5364, 12.4706, 0.96 ) }
    dend_56 { pt3dadd( -34.3908, -20.4282, 12.5271, 1.11 ) }
    dend_56 { pt3dadd( -35.3592, -20.309, 12.5118, 1.11 ) }
    dend_56 { pt3dadd( -36.1007, -20.2839, 12.4518, 0.96 ) }
    dend_56 { pt3dadd( -36.9067, -20.3335, 12.3872, 1.25 ) }
    dend_56 { pt3dadd( -37.7789, -20.4855, 12.3223, 1.4 ) }
    dend_56 { pt3dadd( -38.7359, -20.7603, 12.2929, 1.4 ) }
    dend_56 { pt3dadd( -39.453, -21.0579, 12.2853, 1.62 ) }
    dend_56 { pt3dadd( -40.4947, -21.6137, 12.157, 1.62 ) }
    dend_56 { pt3dadd( -41.3455, -22.2023, 11.9473, 1.4 ) }
    dend_56 { pt3dadd( -42.2312, -22.9996, 11.6242, 1.11 ) }
    dend_56 { pt3dadd( -42.938, -23.8245, 11.2618, 1.11 ) }
    dend_56 { pt3dadd( -43.4898, -24.6216, 10.8961, 1.11 ) }
    dend_56 { pt3dadd( -44.8794, -26.9552, 9.80286, 1.11 ) }
    dend_56 { pt3dadd( -45.6526, -28.3846, 9.12405, 1.11 ) }
    dend_56 { pt3dadd( -46.1972, -29.2877, 8.72749, 1.11 ) }
    dend_56 { pt3dadd( -46.7573, -30.0758, 8.41798, 0.81 ) }
    dend_56 { pt3dadd( -47.1878, -30.5646, 8.26215, 0.81 ) }
    dend_56 { pt3dadd( -47.7907, -31.1244, 8.14363, 1.11 ) }
    dend_56 { pt3dadd( -48.8964, -32.0135, 8.06797, 1.11 ) }
    dend_56 { pt3dadd( -51.1205, -33.5991, 7.93127, 1.11 ) }
    dend_56 { pt3dadd( -51.9801, -34.1793, 7.88473, 1.92 ) }
    dend_56 { pt3dadd( -53.051, -34.9141, 7.83403, 1.77 ) }
    dend_56 { pt3dadd( -54.2163, -35.7706, 7.7904, 1.4 ) }
    dend_56 { pt3dadd( -54.9062, -36.3216, 7.77472, 0.88 ) }
    dend_56 { pt3dadd( -55.7196, -37.0229, 7.77472, 0.88 ) }
    dend_56 { pt3dadd( -56.2916, -37.5469, 7.76442, 1.25 ) }
    dend_56 { pt3dadd( -57.0109, -38.2013, 7.74096, 1.77 ) }
    dend_56 { pt3dadd( -58.1559, -39.1663, 7.69194, 1.77 ) }
    dend_56 { pt3dadd( -59.2023, -39.9286, 7.64166, 1.33 ) }
    dend_56 { pt3dadd( -60.2178, -40.5476, 7.59194, 1.11 ) }
    dend_56 { pt3dadd( -61.1722, -41.0248, 7.60886, 1.4 ) }
    dend_56 { pt3dadd( -62.2188, -41.4598, 7.69032, 1.77 ) }
    dend_56 { pt3dadd( -63.6441, -41.9316, 7.88621, 1.92 ) }
    dend_56 { pt3dadd( -64.7006, -42.2097, 8.12549, 1.99 ) }
    dend_56 { pt3dadd( -65.7127, -42.4194, 8.39799, 1.99 ) }
    dend_56 { pt3dadd( -67.6535, -42.7431, 8.97809, 0.81 ) }
    dend_56 { pt3dadd( -68.2955, -42.8323, 9.18025, 0.81 ) }
    dend_56 { pt3dadd( -69.3295, -42.9581, 9.53802, 0.81 ) }
    dend_56 { pt3dadd( -70.3513, -43.0819, 9.92423, 0.81 ) }
    dend_56 { pt3dadd( -71.4145, -43.2213, 10.3266, 1.84 ) }
    dend_56 { pt3dadd( -72.5392, -43.3647, 10.6765, 2.28 ) }
    dend_56 { pt3dadd( -73.6133, -43.4626, 10.7627, 2.28 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 79/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.7758, -1.66352, 2.76069, 2.14 ) }
    dend_53 { pt3dadd( -20.8722, -1.07313, 3.54257, 2.14 ) }
    dend_53 { pt3dadd( -20.8002, -0.602199, 4.47768, 1.33 ) }
    dend_53 { pt3dadd( -20.3134, 1.14873, 8.10742, 1.18 ) }
    dend_53 { pt3dadd( -20.1985, 1.49436, 8.77864, 1.18 ) }
    dend_53 { pt3dadd( -20.0629, 1.84988, 9.4207, 1.18 ) }
    dend_53 { pt3dadd( -19.8495, 2.37441, 10.2906, 1.18 ) }
    dend_53 { pt3dadd( -18.3326, 5.29562, 14.7983, 1.18 ) }
    dend_53 { pt3dadd( -18.1143, 5.6683, 15.317, 1.18 ) }
    dend_53 { pt3dadd( -17.7, 6.34643, 16.0499, 1.18 ) }
    dend_53 { pt3dadd( -17.3843, 6.92432, 16.5812, 1.18 ) }
    dend_53 { pt3dadd( -17.0767, 7.58371, 17.0515, 1.18 ) }
    dend_53 { pt3dadd( -16.7138, 8.53485, 17.3898, 1.62 ) }
    dend_53 { pt3dadd( -16.5364, 9.08471, 17.3765, 1.99 ) }
    dend_53 { pt3dadd( -16.3111, 9.83148, 17.3495, 1.33 ) }
    dend_53 { pt3dadd( -16.0465, 10.8059, 17.3078, 1.33 ) }
    dend_53 { pt3dadd( -15.9782, 11.127, 17.2927, 1.33 ) }
    dend_53 { pt3dadd( -15.8173, 12.1485, 17.2423, 1.33 ) }
    dend_53 { pt3dadd( -15.7656, 12.8089, 17.2089, 1.77 ) }
    dend_53 { pt3dadd( -15.7947, 13.5237, 17.2182, 1.69 ) }
    dend_53 { pt3dadd( -15.9946, 14.3655, 17.327, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -16.2937, 14.9872, 17.482, 0.96 ) }
    dend_53 { pt3dadd( -16.6408, 15.464, 17.674, 0.66 ) }
    dend_53 { pt3dadd( -17.0509, 15.9148, 17.9357, 0.66 ) }
    dend_53 { pt3dadd( -18.03, 16.8026, 18.592, 1.33 ) }
    dend_53 { pt3dadd( -18.7958, 17.3692, 19.1149, 1.33 ) }
    dend_53 { pt3dadd( -19.6525, 17.918, 19.7191, 1.33 ) }
    dend_53 { pt3dadd( -20.5802, 18.4674, 20.4196, 1.33 ) }
    dend_53 { pt3dadd( -21.9549, 19.2391, 21.5145, 2.5 ) }
    dend_53 { pt3dadd( -22.5183, 19.5662, 21.9754, 2.5 ) }
    dend_53 { pt3dadd( -22.7694, 19.7216, 22.1183, 2.5 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 10/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -102.869, -119.13, -2.13032, 0.44 ) }
    dend_51 { pt3dadd( -103.222, -119.384, -2.13513, 0.44 ) }
    dend_51 { pt3dadd( -103.745, -119.782, -2.14051, 0.44 ) }
    dend_51 { pt3dadd( -104.26, -120.202, -2.14483, 0.44 ) }
    dend_51 { pt3dadd( -104.799, -120.673, -2.14847, 0.44 ) }
    dend_51 { pt3dadd( -105.526, -121.327, -2.15197, 0.44 ) }
    dend_51 { pt3dadd( -105.753, -121.518, -2.15282, 1.33 ) }
    dend_51 { pt3dadd( -106.547, -122.141, -2.15282, 1.77 ) }
    dend_51 { pt3dadd( -107.041, -122.499, -2.15282, 1.4 ) }
    dend_51 { pt3dadd( -107.858, -123.042, -2.15282, 1.03 ) }
    dend_51 { pt3dadd( -109.473, -124.095, -2.15282, 1.03 ) }
    dend_51 { pt3dadd( -110.284, -124.632, -2.15282, 1.03 ) }
    dend_51 { pt3dadd( -110.944, -125.099, -2.15282, 1.03 ) }
    dend_51 { pt3dadd( -111.231, -125.322, -2.15282, 1.03 ) }
    dend_51 { pt3dadd( -111.809, -125.936, -2.27271, 1.03 ) }
    dend_51 { pt3dadd( -112.062, -126.48, -2.4678, 1.03 ) }
    dend_51 { pt3dadd( -112.211, -127.127, -2.74891, 1.03 ) }
    dend_51 { pt3dadd( -112.312, -127.583, -2.95464, 1.03 ) }
    dend_51 { pt3dadd( -112.469, -128.205, -3.24605, 1.03 ) }
    dend_51 { pt3dadd( -113.259, -130.547, -4.4058, 0.74 ) }
    dend_51 { pt3dadd( -113.737, -131.483, -4.91249, 0.74 ) }
    dend_51 { pt3dadd( -114.354, -132.142, -5.30041, 0.74 ) }
    dend_51 { pt3dadd( -115.262, -132.701, -5.71495, 0.74 ) }
    dend_51 { pt3dadd( -115.837, -132.93, -5.91659, 1.4 ) }
    dend_51 { pt3dadd( -116.664, -133.169, -6.1387, 1.4 ) }
    dend_51 { pt3dadd( -117.614, -133.385, -6.30463, 0.81 ) }
    dend_51 { pt3dadd( -119.079, -133.774, -6.59535, 0.81 ) }
    dend_51 { pt3dadd( -120.249, -134.262, -6.87546, 0.52 ) }
    dend_51 { pt3dadd( -120.625, -134.519, -6.97757, 1.03 ) }
    dend_51 { pt3dadd( -121.104, -135.007, -7.10912, 0.74 ) }
    dend_51 { pt3dadd( -121.561, -135.612, -7.30946, 1.03 ) }
    dend_51 { pt3dadd( -122.099, -136.441, -7.58905, 1.03 ) }
    dend_51 { pt3dadd( -122.446, -137.023, -7.77847, 1.03 ) }
    dend_51 { pt3dadd( -122.92, -137.76, -8.00989, 1.03 ) }
    dend_51 { pt3dadd( -123.521, -138.545, -8.29076, 1.03 ) }
    dend_51 { pt3dadd( -125.338, -140.381, -9.05712, 0.66 ) }
    dend_51 { pt3dadd( -126.06, -140.921, -9.32677, 0.66 ) }
    dend_51 { pt3dadd( -126.449, -141.128, -9.4535, 0.66 ) }
    dend_51 { pt3dadd( -126.859, -141.271, -9.56308, 0.96 ) }
    dend_51 { pt3dadd( -128.195, -141.545, -9.83221, 0.96 ) }
    dend_51 { pt3dadd( -129.287, -141.635, -9.966, 0.96 ) }
    dend_51 { pt3dadd( -130.331, -141.637, -9.966, 0.96 ) }
    dend_51 { pt3dadd( -130.852, -141.646, -9.966, 0.52 ) }
    dend_51 { pt3dadd( -131.439, -141.72, -9.94194, 0.52 ) }
    dend_51 { pt3dadd( -132.0, -141.868, -9.89721, 0.52 ) }
    dend_51 { pt3dadd( -132.605, -142.1, -9.82881, 0.52 ) }
    dend_51 { pt3dadd( -133.535, -142.49, -9.71665, 0.52 ) }
    dend_51 { pt3dadd( -134.18, -142.713, -9.60991, 0.52 ) }
    dend_51 { pt3dadd( -135.961, -143.163, -9.30104, 0.52 ) }
    dend_51 { pt3dadd( -136.687, -143.304, -9.17593, 1.18 ) }
    dend_51 { pt3dadd( -137.588, -143.419, -9.0309, 1.55 ) }
    dend_51 { pt3dadd( -138.749, -143.503, -8.85959, 1.69 ) }
    dend_51 { pt3dadd( -140.414, -143.52, -8.63283, 0.96 ) }
    dend_51 { pt3dadd( -141.764, -143.483, -8.47128, 0.96 ) }
    dend_51 { pt3dadd( -142.299, -143.446, -8.42084, 0.74 ) }
    dend_51 { pt3dadd( -143.548, -143.317, -8.43149, 0.74 ) }
    dend_51 { pt3dadd( -144.422, -143.191, -8.53679, 1.03 ) }
    dend_51 { pt3dadd( -145.171, -143.067, -8.71252, 1.55 ) }
    dend_51 { pt3dadd( -146.147, -142.941, -9.05901, 1.03 ) }
    dend_51 { pt3dadd( -146.896, -142.884, -9.37725, 0.81 ) }
    dend_51 { pt3dadd( -149.282, -142.89, -10.5178, 0.81 ) }
    dend_51 { pt3dadd( -150.21, -143.025, -10.9412, 0.81 ) }
    dend_51 { pt3dadd( -150.858, -143.262, -11.155, 0.81 ) }
    dend_51 { pt3dadd( -151.674, -143.748, -11.2274, 1.25 ) }
    dend_51 { pt3dadd( -152.215, -144.124, -11.1323, 1.69 ) }
    dend_51 { pt3dadd( -152.623, -144.39, -10.9869, 1.69 ) }
    dend_51 { pt3dadd( -154.516, -145.461, -10.0703, 0.81 ) }
    dend_51 { pt3dadd( -155.106, -145.681, -9.81858, 0.81 ) }
    dend_51 { pt3dadd( -155.865, -145.785, -9.56224, 0.81 ) }
    dend_51 { pt3dadd( -157.08, -145.71, -9.26289, 1.55 ) }
    dend_51 { pt3dadd( -158.024, -145.555, -9.20995, 1.99 ) }
    dend_51 { pt3dadd( -158.52, -145.451, -9.26142, 1.99 ) }
    dend_51 { pt3dadd( -159.822, -145.162, -9.58308, 0.81 ) }
    dend_51 { pt3dadd( -160.604, -145.006, -9.81842, 0.81 ) }
    dend_51 { pt3dadd( -161.499, -144.882, -10.1312, 0.81 ) }
    dend_51 { pt3dadd( -163.72, -144.776, -10.9889, 0.52 ) }
    dend_51 { pt3dadd( -164.42, -144.815, -11.3629, 0.88 ) }
    dend_51 { pt3dadd( -165.188, -144.945, -11.8464, 1.62 ) }
    dend_51 { pt3dadd( -165.367, -145.004, -11.9706, 2.06 ) }
    dend_51 { pt3dadd( -166.012, -145.279, -12.3995, 1.33 ) }
    dend_51 { pt3dadd( -166.714, -145.609, -12.8228, 1.11 ) }
    dend_51 { pt3dadd( -168.988, -146.627, -13.9222, 0.66 ) }
    dend_51 { pt3dadd( -169.506, -146.853, -14.1769, 0.44 ) }
    dend_51 { pt3dadd( -170.407, -147.239, -14.5967, 0.44 ) }
    dend_51 { pt3dadd( -171.192, -147.564, -14.9039, 0.29 ) }
    dend_51 { pt3dadd( -171.651, -147.711, -15.0262, 0.29 ) }
    dend_51 { pt3dadd( -171.95, -147.786, -15.0593, 0.07 ) }
    dend_51 { pt3dadd( -172.506, -147.907, -15.0357, 0.07 ) }
    dend_51 { pt3dadd( -173.118, -148.012, -15.0286, 1.33 ) }
    dend_51 { pt3dadd( -173.728, -148.095, -15.0498, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_51 { pt3dadd( -175.506, -148.396, -15.2241, 0.07 ) }
    dend_51 { pt3dadd( -176.224, -148.54, -15.3001, 0.07 ) }
    dend_51 { pt3dadd( -176.429, -148.581, -15.3235, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 3/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -102.869, -119.13, -2.13032, 0.44 ) }
    dend_50 { pt3dadd( -101.849, -119.627, -2.13032, 0.44 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 5/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -29.7944, -15.1798, 0.070692, 2.06 ) }
    dend_39 { pt3dadd( -33.4225, -15.2048, -2.48728, 2.06 ) }
    dend_39 { pt3dadd( -33.4225, -15.2048, -2.48728, 2.06 ) }
    dend_39 { pt3dadd( -34.4981, -15.4095, -3.10332, 0.96 ) }
    dend_39 { pt3dadd( -35.1723, -15.5877, -3.45237, 0.74 ) }
    dend_39 { pt3dadd( -35.8001, -15.799, -3.74471, 0.74 ) }
    dend_39 { pt3dadd( -36.31, -16.0161, -3.95461, 0.74 ) }
    dend_39 { pt3dadd( -36.7599, -16.3948, -3.95461, 0.74 ) }
    dend_39 { pt3dadd( -37.0966, -16.6925, -3.95245, 0.74 ) }
    dend_39 { pt3dadd( -37.2914, -16.8734, -3.95017, 0.74 ) }
    dend_39 { pt3dadd( -37.617, -17.15, -3.94557, 0.74 ) }
    dend_39 { pt3dadd( -38.1737, -17.555, -3.93751, 0.74 ) }
    dend_39 { pt3dadd( -38.6429, -17.8717, -3.93075, 1.55 ) }
    dend_39 { pt3dadd( -39.5252, -18.4316, -3.91756, 1.92 ) }
    dend_39 { pt3dadd( -40.4948, -19.0311, -3.90247, 1.92 ) }
    dend_39 { pt3dadd( -41.0316, -19.3532, -3.8939, 1.92 ) }
    dend_39 { pt3dadd( -41.6563, -19.7118, -3.88375, 1.92 ) }
    dend_39 { pt3dadd( -42.1187, -19.9657, -3.87636, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 23/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -29.7944, -15.1798, 0.070692, 1.18 ) }
    dend_36 { pt3dadd( -30.7805, -14.8695, -0.327864, 1.18 ) }
    dend_36 { pt3dadd( -31.632, -14.6213, -0.645002, 1.18 ) }
    dend_36 { pt3dadd( -32.5694, -14.3402, -0.946393, 1.18 ) }
    dend_36 { pt3dadd( -34.0941, -13.8272, -1.86644, 1.18 ) }
    dend_36 { pt3dadd( -36.759, -12.8209, -3.77478, 1.18 ) }
    dend_36 { pt3dadd( -38.1214, -12.2569, -4.78456, 1.18 ) }
    dend_36 { pt3dadd( -38.902, -11.9138, -5.38194, 1.18 ) }
    dend_36 { pt3dadd( -40.4542, -11.1425, -6.59761, 1.18 ) }
    dend_36 { pt3dadd( -45.1104, -8.46449, -10.2452, 1.55 ) }
    dend_36 { pt3dadd( -45.8793, -7.9374, -11.1853, 1.55 ) }
    dend_36 { pt3dadd( -46.796, -7.22656, -12.6002, 1.55 ) }
    dend_36 { pt3dadd( -47.4575, -6.68772, -13.7832, 1.55 ) }
    dend_36 { pt3dadd( -48.2959, -6.01281, -15.3919, 1.55 ) }
    dend_36 { pt3dadd( -48.9274, -5.51928, -16.6755, 1.55 ) }
    dend_36 { pt3dadd( -53.762, -2.02603, -26.2389, 0.96 ) }
    dend_36 { pt3dadd( -53.9848, -1.87163, -26.7281, 0.66 ) }
    dend_36 { pt3dadd( -54.1951, -1.72914, -27.2621, 0.66 ) }
    dend_36 { pt3dadd( -54.4485, -1.56815, -28.0115, 0.66 ) }
    dend_36 { pt3dadd( -54.5064, -1.53218, -28.2264, 0.66 ) }
    dend_36 { pt3dadd( -54.5809, -1.48677, -28.5768, 0.66 ) }
    dend_36 { pt3dadd( -53.9973, -1.55821, -28.5768, 0.66 ) }
    dend_36 { pt3dadd( -53.3167, -1.45052, -28.5768, 0.66 ) }
    dend_36 { pt3dadd( -52.5603, -1.17331, -28.5768, 0.66 ) }
    dend_36 { pt3dadd( -52.3688, -1.07523, -28.5768, 0.74 ) }
    dend_36 { pt3dadd( -51.7805, -0.644808, -28.5768, 0.74 ) }
    dend_36 { pt3dadd( -51.4607, -0.35112, -28.5768, 0.74 ) }
    dend_36 { pt3dadd( -51.1998, 0.145322, -28.9782, 0.66 ) }
    dend_36 { pt3dadd( -50.9915, 0.92141, -29.8253, 1.99 ) }
    dend_36 { pt3dadd( -50.9289, 1.42564, -30.407, 2.73 ) }
    dend_36 { pt3dadd( -50.9516, 2.07898, -31.2021, 2.73 ) }
    dend_36 { pt3dadd( -50.9681, 2.11168, -31.3504, 2.28 ) }
    dend_36 { pt3dadd( -51.6143, 3.07283, -36.649, 0.88 ) }
    dend_36 { pt3dadd( -51.6574, 3.13376, -37.0078, 0.52 ) }
    dend_36 { pt3dadd( -51.7292, 3.23107, -37.6254, 0.52 ) }
    dend_36 { pt3dadd( -51.872, 3.41122, -38.8395, 1.77 ) }
    dend_36 { pt3dadd( -54.6071, 6.60577, -61.0319, 0.88 ) }
    dend_36 { pt3dadd( -54.6704, 6.67695, -61.5287, 0.88 ) }
    dend_36 { pt3dadd( -54.8357, 6.85342, -62.7887, 0.88 ) }
    dend_36 { pt3dadd( -54.8971, 6.92163, -63.2614, 0.88 ) }
    dend_36 { pt3dadd( -55.0379, 7.09307, -64.3833, 1.84 ) }
    dend_36 { pt3dadd( -55.1399, 7.25151, -65.2559, 0.52 ) }
    dend_36 { pt3dadd( -55.4781, 7.81032, -66.121, 0.29 ) }
    dend_36 { pt3dadd( -55.6235, 8.03463, -66.5359, 0.29 ) }
    dend_36 { pt3dadd( -55.956, 8.49769, -67.5488, 1.11 ) }
    dend_36 { pt3dadd( -56.0868, 8.69045, -68.022, 0.07 ) }
    dend_36 { pt3dadd( -56.3319, 9.10814, -69.1822, 0.07 ) }
    dend_36 { pt3dadd( -56.6244, 9.58387, -70.7625, 0.07 ) }
    dend_36 { pt3dadd( -56.7435, 9.75344, -71.4016, 0.07 ) }
    dend_36 { pt3dadd( -56.8351, 9.86642, -71.9374, 0.07 ) }
    dend_36 { pt3dadd( -56.9182, 9.94951, -72.5056, 0.07 ) }
    dend_36 { pt3dadd( -56.9609, 9.98494, -72.8186, 0.15 ) }
    dend_36 { pt3dadd( -57.0903, 10.0716, -73.5209, 0.66 ) }
    dend_36 { pt3dadd( -57.2643, 10.1653, -74.1916, 0.66 ) }
    dend_36 { pt3dadd( -57.5441, 10.3033, -75.0138, 0.74 ) }
    dend_36 { pt3dadd( -58.1262, 10.5572, -76.4416, 0.74 ) }
    dend_36 { pt3dadd( -58.2427, 10.615, -76.6806, 0.74 ) }
    dend_36 { pt3dadd( -59.3718, 11.22, -78.3537, 0.29 ) }
    dend_36 { pt3dadd( -59.8754, 11.4786, -78.8571, 0.29 ) }
    dend_36 { pt3dadd( -60.4449, 11.7666, -79.2746, 0.29 ) }
    dend_36 { pt3dadd( -61.7365, 12.4156, -80.1034, 0.29 ) }
    dend_36 { pt3dadd( -62.3562, 12.7252, -80.5407, 0.29 ) }
    dend_36 { pt3dadd( -63.3772, 13.2362, -81.459, 1.77 ) }
    dend_36 { pt3dadd( -64.1696, 13.6416, -82.328, 0.74 ) }
    dend_36 { pt3dadd( -64.4083, 13.767, -82.5875, 0.22 ) }
    dend_36 { pt3dadd( -64.9328, 14.0478, -83.1336, 0.22 ) }
    dend_36 { pt3dadd( -65.8804, 14.5717, -84.0753, 0.22 ) }
    dend_36 { pt3dadd( -66.3637, 14.8585, -84.5677, 0.22 ) }
    dend_36 { pt3dadd( -66.7664, 15.1483, -85.0493, 0.22 ) }
    dend_36 { pt3dadd( -67.1921, 15.4903, -85.584, 0.22 ) }
    dend_36 { pt3dadd( -67.6181, 15.8414, -86.0834, 0.22 ) }
    dend_36 { pt3dadd( -68.0987, 16.2641, -86.5943, 1.55 ) }
    dend_36 { pt3dadd( -68.6311, 16.7529, -87.104, 0.44 ) }
    dend_36 { pt3dadd( -69.6292, 17.7162, -88.1347, 0.44 ) }
    dend_36 { pt3dadd( -70.113, 18.214, -88.7333, 0.44 ) }
    dend_36 { pt3dadd( -70.214, 18.3236, -88.8822, 0.44 ) }
    dend_36 { pt3dadd( -70.8992, 19.0884, -90.0959, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( -71.1872, 19.4218, -90.7095, 0.44 ) }
    dend_36 { pt3dadd( -71.4532, 19.7586, -91.3293, 0.44 ) }
    dend_36 { pt3dadd( -71.7598, 20.1856, -92.0126, 0.44 ) }
    dend_36 { pt3dadd( -71.9645, 20.5141, -92.491, 0.44 ) }
    dend_36 { pt3dadd( -72.1776, 20.8945, -93.0338, 0.44 ) }
    dend_36 { pt3dadd( -72.3522, 21.2636, -93.5989, 0.44 ) }
    dend_36 { pt3dadd( -72.5931, 21.8179, -94.4762, 1.4 ) }
    dend_36 { pt3dadd( -72.7182, 22.1002, -94.9595, 0.37 ) }
    dend_36 { pt3dadd( -72.8801, 22.4644, -95.724, 0.37 ) }
    dend_36 { pt3dadd( -72.9482, 22.6129, -96.0905, 0.37 ) }
    dend_36 { pt3dadd( -73.1595, 23.0251, -97.1059, 0.37 ) }
    dend_36 { pt3dadd( -73.2803, 23.233, -97.5638, 0.37 ) }
    dend_36 { pt3dadd( -73.6653, 23.8686, -98.8626, 0.37 ) }
    dend_36 { pt3dadd( -73.9931, 24.4058, -99.8678, 0.37 ) }
    dend_36 { pt3dadd( -74.1359, 24.6377, -100.263, 0.37 ) }
    dend_36 { pt3dadd( -74.6624, 25.4973, -101.688, 2.06 ) }
    dend_36 { pt3dadd( -75.0687, 26.1834, -102.763, 0.37 ) }
    dend_36 { pt3dadd( -75.1811, 26.3776, -103.066, 0.37 ) }
    dend_36 { pt3dadd( -75.5258, 26.9631, -103.949, 0.37 ) }
    dend_36 { pt3dadd( -75.8747, 27.5268, -104.793, 0.37 ) }
    dend_36 { pt3dadd( -76.2497, 28.1009, -105.682, 0.37 ) }
    dend_36 { pt3dadd( -76.537, 28.5127, -106.379, 0.37 ) }
    dend_36 { pt3dadd( -76.7178, 28.7498, -106.781, 0.37 ) }
    dend_36 { pt3dadd( -76.9418, 29.0301, -107.212, 0.37 ) }
    dend_36 { pt3dadd( -77.3577, 29.5451, -107.949, 1.03 ) }
    dend_36 { pt3dadd( -77.749, 30.0157, -108.57, 0.52 ) }
    dend_36 { pt3dadd( -77.8954, 30.1914, -108.776, 0.22 ) }
    dend_36 { pt3dadd( -78.3566, 30.732, -109.462, 0.22 ) }
    dend_36 { pt3dadd( -78.8992, 31.367, -110.353, 0.22 ) }
    dend_36 { pt3dadd( -79.4103, 31.9646, -111.319, 0.22 ) }
    dend_36 { pt3dadd( -79.7843, 32.3959, -112.141, 1.69 ) }
    dend_36 { pt3dadd( -80.1503, 32.8124, -112.999, 0.37 ) }
    dend_36 { pt3dadd( -80.6024, 33.3324, -114.152, 0.37 ) }
    dend_36 { pt3dadd( -80.8335, 33.5843, -114.74, 0.37 ) }
    dend_36 { pt3dadd( -81.0145, 33.7667, -115.167, 0.37 ) }
    dend_36 { pt3dadd( -81.3033, 34.0416, -115.83, 0.37 ) }
    dend_36 { pt3dadd( -81.5485, 34.2543, -116.474, 0.37 ) }
    dend_36 { pt3dadd( -81.9918, 34.5942, -117.656, 0.37 ) }
    dend_36 { pt3dadd( -82.1443, 34.7073, -118.054, 1.33 ) }
    dend_36 { pt3dadd( -82.4371, 34.9603, -118.808, 0.52 ) }
    dend_36 { pt3dadd( -82.5585, 35.0744, -119.075, 0.37 ) }
    dend_36 { pt3dadd( -83.1527, 35.6702, -120.267, 0.37 ) }
    dend_36 { pt3dadd( -83.2524, 35.7777, -120.464, 0.37 ) }
    dend_36 { pt3dadd( -83.8862, 36.5186, -121.698, 0.37 ) }
    dend_36 { pt3dadd( -84.4125, 37.2047, -122.864, 1.55 ) }
    dend_36 { pt3dadd( -84.8073, 37.7504, -123.839, 0.52 ) }
    dend_36 { pt3dadd( -84.861, 37.8269, -123.973, 0.52 ) }
    dend_36 { pt3dadd( -85.093, 38.1811, -124.61, 0.37 ) }
    dend_36 { pt3dadd( -85.2257, 38.4055, -125.043, 0.37 ) }
    dend_36 { pt3dadd( -85.4189, 38.8338, -125.814, 0.37 ) }
    dend_36 { pt3dadd( -85.4432, 38.9382, -125.985, 0.37 ) }
    dend_36 { pt3dadd( -85.4751, 39.3077, -126.547, 0.37 ) }
    dend_36 { pt3dadd( -85.5108, 40.1407, -127.702, 0.37 ) }
    dend_36 { pt3dadd( -85.5131, 40.2747, -127.894, 0.37 ) }
    dend_36 { pt3dadd( -85.5702, 40.8554, -128.923, 1.84 ) }
    dend_36 { pt3dadd( -85.6465, 41.3748, -129.956, 0.44 ) }
    dend_36 { pt3dadd( -85.6776, 41.5207, -130.301, 0.44 ) }
    dend_36 { pt3dadd( -85.7557, 41.7664, -130.938, 0.44 ) }
    dend_36 { pt3dadd( -86.044, 42.3577, -132.627, 0.44 ) }
    dend_36 { pt3dadd( -86.361, 42.824, -134.182, 0.44 ) }
    dend_36 { pt3dadd( -86.4354, 42.9098, -134.493, 0.44 ) }
    dend_36 { pt3dadd( -86.6706, 43.1907, -135.399, 0.66 ) }
    dend_36 { pt3dadd( -86.8042, 43.4324, -135.95, 0.66 ) }
    dend_36 { pt3dadd( -86.8584, 43.5648, -136.184, 0.66 ) }
    dend_36 { pt3dadd( -86.9394, 43.9142, -136.638, 0.66 ) }
    dend_36 { pt3dadd( -87.0138, 44.5577, -137.342, 0.66 ) }
    dend_36 { pt3dadd( -87.042, 44.9395, -137.775, 0.66 ) }
    dend_36 { pt3dadd( -87.051, 46.0904, -139.276, 1.25 ) }
    dend_36 { pt3dadd( -87.051, 46.0904, -139.276, 1.69 ) }
    dend_36 { pt3dadd( -87.0188, 46.5129, -140.214, 1.03 ) }
    dend_36 { pt3dadd( -87.0145, 46.6698, -140.648, 0.44 ) }
    dend_36 { pt3dadd( -87.0362, 46.9642, -141.628, 0.44 ) }
    dend_36 { pt3dadd( -87.1177, 47.3868, -143.124, 0.44 ) }
    dend_36 { pt3dadd( -87.3451, 48.0714, -145.478, 0.66 ) }
    dend_36 { pt3dadd( -87.4963, 48.4285, -146.606, 0.66 ) }
    dend_36 { pt3dadd( -87.7037, 48.858, -147.882, 0.66 ) }
    dend_36 { pt3dadd( -87.8818, 49.2158, -148.818, 0.66 ) }
    dend_36 { pt3dadd( -88.0736, 49.6124, -149.686, 0.66 ) }
    dend_36 { pt3dadd( -88.4815, 50.5256, -151.366, 1.18 ) }
    dend_36 { pt3dadd( -88.8128, 51.3154, -152.747, 1.18 ) }
    dend_36 { pt3dadd( -88.8777, 51.4927, -153.078, 1.18 ) }
    dend_36 { pt3dadd( -88.9809, 51.9212, -153.968, 1.18 ) }
    dend_36 { pt3dadd( -89.027, 52.2026, -154.669, 0.96 ) }
    dend_36 { pt3dadd( -89.0831, 52.5708, -155.794, 0.96 ) }
    dend_36 { pt3dadd( -89.1356, 53.0255, -157.548, 0.96 ) }
    dend_36 { pt3dadd( -89.2123, 53.3953, -159.351, 0.96 ) }
    dend_36 { pt3dadd( -89.2825, 53.5411, -160.221, 0.96 ) }
    dend_36 { pt3dadd( -89.327, 53.577, -160.588, 0.96 ) }
    dend_36 { pt3dadd( -89.6498, 53.622, -162.263, 0.96 ) }
    dend_36 { pt3dadd( -89.7477, 53.6227, -162.571, 0.96 ) }
    dend_36 { pt3dadd( -89.9673, 53.6463, -163.013, 0.74 ) }
    dend_36 { pt3dadd( -90.3369, 53.7518, -163.544, 0.74 ) }
    dend_36 { pt3dadd( -90.9296, 54.073, -164.279, 0.74 ) }
    dend_36 { pt3dadd( -91.2116, 54.268, -164.604, 0.74 ) }
    dend_36 { pt3dadd( -91.9966, 54.8587, -165.465, 0.74 ) }
    dend_36 { pt3dadd( -92.4444, 55.168, -165.948, 1.11 ) }
    dend_36 { pt3dadd( -93.1652, 55.6224, -166.715, 0.74 ) }
    dend_36 { pt3dadd( -93.4625, 55.7878, -167.056, 0.74 ) }
    dend_36 { pt3dadd( -93.9094, 55.9729, -167.603, 0.74 ) }
    dend_36 { pt3dadd( -94.42, 56.046, -168.32, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( -94.9104, 55.9926, -169.101, 0.74 ) }
    dend_36 { pt3dadd( -95.1998, 55.9345, -169.593, 0.74 ) }
    dend_36 { pt3dadd( -95.6757, 55.8485, -170.366, 0.74 ) }
    dend_36 { pt3dadd( -96.2283, 55.7994, -171.199, 0.74 ) }
    dend_36 { pt3dadd( -96.9697, 55.8291, -172.28, 1.4 ) }
    dend_36 { pt3dadd( -97.2881, 55.8862, -172.727, 1.4 ) }
    dend_36 { pt3dadd( -97.4926, 55.9495, -173.023, 1.77 ) }
    dend_36 { pt3dadd( -98.2539, 56.2165, -174.062, 0.74 ) }
    dend_36 { pt3dadd( -98.7204, 56.3959, -174.649, 0.74 ) }
    dend_36 { pt3dadd( -99.2737, 56.6328, -175.293, 0.74 ) }
    dend_36 { pt3dadd( -99.7707, 56.8646, -175.758, 0.74 ) }
    dend_36 { pt3dadd( -100.472, 57.2032, -176.298, 0.74 ) }
    dend_36 { pt3dadd( -101.149, 57.5363, -176.789, 0.74 ) }
    dend_36 { pt3dadd( -101.842, 57.8902, -177.263, 0.74 ) }
    dend_36 { pt3dadd( -102.297, 58.133, -177.556, 0.74 ) }
    dend_36 { pt3dadd( -103.508, 58.7785, -178.266, 1.47 ) }
    dend_36 { pt3dadd( -104.304, 59.1978, -178.709, 0.44 ) }
    dend_36 { pt3dadd( -105.185, 59.6395, -179.174, 0.44 ) }
    dend_36 { pt3dadd( -105.507, 59.7679, -179.35, 0.44 ) }
    dend_36 { pt3dadd( -106.35, 59.9591, -179.783, 0.44 ) }
    dend_36 { pt3dadd( -106.552, 59.9716, -179.883, 0.44 ) }
    dend_36 { pt3dadd( -106.753, 59.9486, -179.979, 0.44 ) }
    dend_36 { pt3dadd( -107.431, 59.833, -180.229, 1.25 ) }
    dend_36 { pt3dadd( -108.797, 59.653, -180.544, 0.44 ) }
    dend_36 { pt3dadd( -109.375, 59.6083, -180.642, 0.37 ) }
    dend_36 { pt3dadd( -109.899, 59.5913, -180.706, 0.37 ) }
    dend_36 { pt3dadd( -110.465, 59.622, -180.768, 0.37 ) }
    dend_36 { pt3dadd( -111.477, 59.769, -180.943, 0.88 ) }
    dend_36 { pt3dadd( -112.723, 60.0821, -181.236, 0.29 ) }
    dend_36 { pt3dadd( -113.29, 60.2819, -181.401, 0.29 ) }
    dend_36 { pt3dadd( -113.552, 60.3889, -181.492, 0.52 ) }
    dend_36 { pt3dadd( -114.796, 60.9425, -181.971, 1.47 ) }
    dend_36 { pt3dadd( -116.632, 61.7763, -182.733, 0.44 ) }
    dend_36 { pt3dadd( -117.317, 62.0609, -183.045, 0.44 ) }
    dend_36 { pt3dadd( -117.889, 62.2686, -183.322, 0.74 ) }
    dend_36 { pt3dadd( -118.496, 62.43, -183.597, 0.66 ) }
    dend_36 { pt3dadd( -119.111, 62.5251, -183.829, 0.66 ) }
    dend_36 { pt3dadd( -119.755, 62.5344, -183.992, 0.66 ) }
    dend_36 { pt3dadd( -120.741, 62.4637, -184.099, 0.88 ) }
    dend_36 { pt3dadd( -121.053, 62.4348, -184.119, 0.88 ) }
    dend_36 { pt3dadd( -122.032, 62.3665, -184.149, 1.25 ) }
    dend_36 { pt3dadd( -123.217, 62.3584, -184.154, 0.52 ) }
    dend_36 { pt3dadd( -124.255, 62.4486, -184.154, 0.29 ) }
    dend_36 { pt3dadd( -124.556, 62.5134, -184.154, 0.29 ) }
    dend_36 { pt3dadd( -124.999, 62.6417, -184.163, 0.29 ) }
    dend_36 { pt3dadd( -125.629, 62.8369, -184.194, 0.29 ) }
    dend_36 { pt3dadd( -126.342, 63.048, -184.257, 0.29 ) }
    dend_36 { pt3dadd( -127.188, 63.253, -184.363, 0.29 ) }
    dend_36 { pt3dadd( -128.285, 63.425, -184.525, 1.11 ) }
    dend_36 { pt3dadd( -129.508, 63.5159, -184.709, 0.52 ) }
    dend_36 { pt3dadd( -129.841, 63.5198, -184.759, 0.22 ) }
    dend_36 { pt3dadd( -130.526, 63.4967, -184.859, 0.22 ) }
    dend_36 { pt3dadd( -130.752, 63.483, -184.894, 0.22 ) }
    dend_36 { pt3dadd( -131.695, 63.3358, -185.067, 1.18 ) }
    dend_36 { pt3dadd( -132.609, 63.0659, -185.233, 0.59 ) }
    dend_36 { pt3dadd( -133.077, 62.8906, -185.338, 0.22 ) }
    dend_36 { pt3dadd( -133.408, 62.7597, -185.421, 0.22 ) }
    dend_36 { pt3dadd( -133.776, 62.6059, -185.54, 0.22 ) }
    dend_36 { pt3dadd( -135.102, 62.0206, -186.066, 0.96 ) }
    dend_36 { pt3dadd( -136.347, 61.4273, -186.679, 0.15 ) }
    dend_36 { pt3dadd( -137.028, 61.1025, -187.07, 0.37 ) }
    dend_36 { pt3dadd( -137.444, 60.9356, -187.34, 0.37 ) }
    dend_36 { pt3dadd( -138.017, 60.7809, -187.723, 0.59 ) }
    dend_36 { pt3dadd( -138.365, 60.7423, -187.969, 0.59 ) }
    dend_36 { pt3dadd( -138.769, 60.7851, -188.269, 0.59 ) }
    dend_36 { pt3dadd( -139.078, 60.825, -188.5, 0.59 ) }
    dend_36 { pt3dadd( -139.663, 60.7708, -188.849, 0.59 ) }
    dend_36 { pt3dadd( -140.656, 60.4924, -189.36, 0.59 ) }
    dend_36 { pt3dadd( -141.009, 60.3815, -189.512, 0.59 ) }
    dend_36 { pt3dadd( -141.646, 60.2189, -189.758, 0.59 ) }
    dend_36 { pt3dadd( -142.262, 60.0933, -189.985, 0.74 ) }
    dend_36 { pt3dadd( -142.92, 59.9777, -190.238, 0.74 ) }
    dend_36 { pt3dadd( -143.685, 59.892, -190.604, 0.74 ) }
    dend_36 { pt3dadd( -144.784, 59.8559, -191.23, 1.11 ) }
    dend_36 { pt3dadd( -146.135, 59.8409, -192.063, 0.44 ) }
    dend_36 { pt3dadd( -146.744, 59.8485, -192.472, 0.44 ) }
    dend_36 { pt3dadd( -147.216, 59.8532, -192.811, 1.18 ) }
    dend_36 { pt3dadd( -148.61, 59.8345, -193.878, 0.52 ) }
    dend_36 { pt3dadd( -148.927, 59.8179, -194.13, 0.52 ) }
    dend_36 { pt3dadd( -149.412, 59.8134, -194.473, 0.52 ) }
    dend_36 { pt3dadd( -149.693, 59.8482, -194.621, 0.29 ) }
    dend_36 { pt3dadd( -150.241, 59.9632, -194.796, 0.29 ) }
    dend_36 { pt3dadd( -150.846, 60.1112, -194.904, 0.29 ) }
    dend_36 { pt3dadd( -151.772, 60.3382, -194.962, 1.18 ) }
    dend_36 { pt3dadd( -153.207, 60.6815, -195.065, 0.29 ) }
    dend_36 { pt3dadd( -153.917, 60.8557, -195.141, 0.29 ) }
    dend_36 { pt3dadd( -154.563, 61.0074, -195.236, 0.29 ) }
    dend_36 { pt3dadd( -155.32, 61.1576, -195.374, 0.96 ) }
    dend_36 { pt3dadd( -156.537, 61.2732, -195.649, 0.44 ) }
    dend_36 { pt3dadd( -157.195, 61.2313, -195.851, 0.44 ) }
    dend_36 { pt3dadd( -157.671, 61.1299, -196.043, 0.44 ) }
    dend_36 { pt3dadd( -158.047, 61.039, -196.21, 0.44 ) }
    dend_36 { pt3dadd( -158.346, 60.9825, -196.312, 0.44 ) }
    dend_36 { pt3dadd( -158.85, 60.9242, -196.398, 0.44 ) }
    dend_36 { pt3dadd( -159.499, 60.9444, -196.381, 0.44 ) }
    dend_36 { pt3dadd( -160.413, 61.0684, -196.256, 1.03 ) }
    dend_36 { pt3dadd( -161.141, 61.2014, -196.122, 0.59 ) }
    dend_36 { pt3dadd( -162.743, 61.5288, -195.794, 0.59 ) }
    dend_36 { pt3dadd( -163.594, 61.7155, -195.612, 1.11 ) }
    dend_36 { pt3dadd( -164.773, 61.9659, -195.348, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( -165.647, 62.135, -195.143, 0.29 ) }
    dend_36 { pt3dadd( -166.029, 62.1951, -195.058, 0.29 ) }
    dend_36 { pt3dadd( -166.481, 62.2663, -194.991, 0.29 ) }
    dend_36 { pt3dadd( -166.881, 62.386, -194.986, 0.29 ) }
    dend_36 { pt3dadd( -167.422, 62.6408, -195.044, 0.29 ) }
    dend_36 { pt3dadd( -167.853, 62.911, -195.143, 0.29 ) }
    dend_36 { pt3dadd( -168.147, 63.0977, -195.234, 0.29 ) }
    dend_36 { pt3dadd( -169.002, 63.6254, -195.52, 1.18 ) }
    dend_36 { pt3dadd( -170.365, 64.4252, -195.991, 0.52 ) }
    dend_36 { pt3dadd( -171.421, 65.0356, -196.34, 0.37 ) }
    dend_36 { pt3dadd( -171.731, 65.2136, -196.432, 0.37 ) }
    dend_36 { pt3dadd( -172.646, 65.6844, -196.698, 0.37 ) }
    dend_36 { pt3dadd( -173.044, 65.8633, -196.811, 0.37 ) }
    dend_36 { pt3dadd( -173.713, 66.1268, -196.998, 0.37 ) }
    dend_36 { pt3dadd( -174.947, 66.6483, -197.339, 1.33 ) }
    dend_36 { pt3dadd( -176.017, 67.2292, -197.624, 0.59 ) }
    dend_36 { pt3dadd( -176.713, 67.7016, -197.864, 0.37 ) }
    dend_36 { pt3dadd( -176.945, 67.8979, -197.971, 0.37 ) }
    dend_36 { pt3dadd( -177.236, 68.1738, -198.138, 0.37 ) }
    dend_36 { pt3dadd( -177.9, 68.8817, -198.614, 0.37 ) }
    dend_36 { pt3dadd( -178.209, 69.2327, -198.857, 0.37 ) }
    dend_36 { pt3dadd( -178.653, 69.7804, -199.225, 0.37 ) }
    dend_36 { pt3dadd( -179.112, 70.3838, -199.621, 0.37 ) }
    dend_36 { pt3dadd( -179.486, 70.9083, -199.952, 0.37 ) }
    dend_36 { pt3dadd( -180.043, 71.7867, -200.485, 0.96 ) }
    dend_36 { pt3dadd( -180.725, 72.9984, -201.214, 0.52 ) }
    dend_36 { pt3dadd( -181.013, 73.6223, -201.57, 0.52 ) }
    dend_36 { pt3dadd( -181.174, 74.125, -201.839, 0.52 ) }
    dend_36 { pt3dadd( -181.27, 74.7563, -202.157, 1.03 ) }
    dend_36 { pt3dadd( -181.239, 75.6171, -202.585, 0.52 ) }
    dend_36 { pt3dadd( -181.171, 75.9746, -202.756, 0.52 ) }
    dend_36 { pt3dadd( -181.09, 76.2563, -202.887, 0.52 ) }
    dend_36 { pt3dadd( -180.987, 76.7693, -203.104, 0.52 ) }
    dend_36 { pt3dadd( -180.95, 77.1606, -203.252, 0.52 ) }
    dend_36 { pt3dadd( -180.983, 77.6688, -203.435, 0.52 ) }
    dend_36 { pt3dadd( -181.139, 78.3615, -203.671, 0.52 ) }
    dend_36 { pt3dadd( -181.251, 78.6943, -203.781, 0.52 ) }
    dend_36 { pt3dadd( -181.768, 79.7542, -204.133, 1.03 ) }
    dend_36 { pt3dadd( -182.059, 80.2202, -204.294, 0.37 ) }
    dend_36 { pt3dadd( -182.565, 80.9401, -204.544, 0.37 ) }
    dend_36 { pt3dadd( -182.833, 81.3087, -204.668, 0.37 ) }
    dend_36 { pt3dadd( -183.002, 81.5468, -204.742, 1.18 ) }
    dend_36 { pt3dadd( -183.467, 82.204, -204.987, 0.07 ) }
    dend_36 { pt3dadd( -183.69, 82.5078, -205.127, 0.07 ) }
    dend_36 { pt3dadd( -184.066, 83.0657, -205.417, 0.07 ) }
    dend_36 { pt3dadd( -184.301, 83.4717, -205.636, 0.74 ) }
    dend_36 { pt3dadd( -184.537, 83.9314, -205.882, 0.37 ) }
    dend_36 { pt3dadd( -184.956, 84.8282, -206.373, 0.37 ) }
    dend_36 { pt3dadd( -185.24, 85.4897, -206.757, 0.37 ) }
    dend_36 { pt3dadd( -185.502, 86.0254, -207.089, 0.96 ) }
    dend_36 { pt3dadd( -185.636, 86.2466, -207.248, 0.96 ) }
    // Section: dend_34, id: dend_34, parent: dend_1 (entry count 51/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.0742, -5.39302, -13.8752, 0.59 ) }
    dend_34 { pt3dadd( 28.3915, -8.49306, 13.6068, 0.59 ) }
    dend_34 { pt3dadd( 28.4613, -8.65192, 14.84, 0.59 ) }
    dend_34 { pt3dadd( 28.53, -8.81246, 15.9368, 0.59 ) }
    dend_34 { pt3dadd( 28.67, -9.14583, 18.1372, 0.59 ) }
    dend_34 { pt3dadd( 28.862, -9.61959, 21.1152, 0.59 ) }
    dend_34 { pt3dadd( 28.9956, -9.96669, 23.1553, 0.59 ) }
    dend_34 { pt3dadd( 29.3149, -11.4144, 22.3327, 0.59 ) }
    dend_34 { pt3dadd( 29.4981, -12.4321, 21.823, 0.59 ) }
    dend_34 { pt3dadd( 29.7955, -14.2129, 21.0716, 0.59 ) }
    dend_34 { pt3dadd( 30.0487, -15.2234, 20.7622, 0.59 ) }
    dend_34 { pt3dadd( 30.4089, -16.0427, 20.4994, 0.59 ) }
    dend_34 { pt3dadd( 30.9052, -16.8639, 20.1762, 0.44 ) }
    dend_34 { pt3dadd( 31.4562, -17.6369, 19.8069, 0.44 ) }
    dend_34 { pt3dadd( 32.4379, -18.8962, 19.1777, 0.44 ) }
    dend_34 { pt3dadd( 33.9532, -20.7096, 18.2868, 0.44 ) }
    dend_34 { pt3dadd( 35.072, -22.0838, 17.6063, 0.44 ) }
    dend_34 { pt3dadd( 35.515, -22.6996, 17.3277, 0.44 ) }
    dend_34 { pt3dadd( 36.2654, -23.8509, 16.8225, 0.44 ) }
    dend_34 { pt3dadd( 36.7256, -24.5752, 16.5145, 0.44 ) }
    dend_34 { pt3dadd( 37.1186, -25.1943, 16.2729, 0.44 ) }
    dend_34 { pt3dadd( 37.8388, -26.2706, 15.9191, 0.44 ) }
    dend_34 { pt3dadd( 40.2353, -29.6024, 14.9285, 0.44 ) }
    dend_34 { pt3dadd( 41.1069, -30.7213, 14.6029, 0.44 ) }
    dend_34 { pt3dadd( 41.8533, -31.6204, 14.3453, 0.44 ) }
    dend_34 { pt3dadd( 42.7607, -32.6952, 14.0177, 0.44 ) }
    dend_34 { pt3dadd( 43.6361, -33.7567, 13.6513, 0.44 ) }
    dend_34 { pt3dadd( 44.5583, -34.9008, 13.2252, 0.44 ) }
    dend_34 { pt3dadd( 45.131, -35.7047, 12.9028, 0.44 ) }
    dend_34 { pt3dadd( 45.6554, -36.6025, 12.4713, 0.44 ) }
    dend_34 { pt3dadd( 46.119, -37.5416, 11.916, 0.44 ) }
    dend_34 { pt3dadd( 46.7399, -39.0467, 10.9428, 0.44 ) }
    dend_34 { pt3dadd( 47.2453, -40.4251, 10.0888, 0.44 ) }
    dend_34 { pt3dadd( 47.8411, -42.1506, 9.10464, 0.44 ) }
    dend_34 { pt3dadd( 48.6201, -44.555, 7.79734, 0.44 ) }
    dend_34 { pt3dadd( 49.1099, -46.1023, 7.02059, 0.44 ) }
    dend_34 { pt3dadd( 50.0078, -48.8376, 5.76376, 0.44 ) }
    dend_34 { pt3dadd( 50.8603, -51.2843, 4.80736, 0.44 ) }
    dend_34 { pt3dadd( 51.4064, -52.7646, 4.35073, 0.44 ) }
    dend_34 { pt3dadd( 51.9191, -54.0899, 4.07117, 0.44 ) }
    dend_34 { pt3dadd( 52.5052, -55.5863, 3.90282, 0.44 ) }
    dend_34 { pt3dadd( 53.0976, -57.0489, 3.82451, 0.44 ) }
    dend_34 { pt3dadd( 54.4421, -60.2804, 3.77227, 0.44 ) }
    dend_34 { pt3dadd( 55.1732, -62.1086, 3.76987, 0.44 ) }
    dend_34 { pt3dadd( 55.5797, -63.1098, 3.7856, 0.44 ) }
    dend_34 { pt3dadd( 56.2833, -64.8294, 3.84552, 0.44 ) }
    dend_34 { pt3dadd( 56.7828, -66.0554, 3.88811, 0.44 ) }
    dend_34 { pt3dadd( 57.177, -67.0735, 3.92195, 0.44 ) }
    dend_34 { pt3dadd( 57.6737, -68.4247, 3.9615, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( 58.3034, -70.2111, 3.90303, 0.44 ) }
    dend_34 { pt3dadd( 58.9534, -72.1518, 3.79139, 0.44 ) }
    dend_34 { pt3dadd( 59.5773, -74.0814, 3.65306, 0.44 ) }
    dend_34 { pt3dadd( 60.0104, -75.3937, 3.52061, 0.44 ) }
    dend_34 { pt3dadd( 60.7565, -77.4308, 3.27823, 0.44 ) }
    dend_34 { pt3dadd( 61.6537, -79.6021, 2.99715, 0.44 ) }
    dend_34 { pt3dadd( 62.6202, -81.7395, 2.70553, 0.44 ) }
    dend_34 { pt3dadd( 63.9268, -84.325, 2.30741, 0.44 ) }
    dend_34 { pt3dadd( 65.0364, -86.333, 1.9512, 0.44 ) }
    dend_34 { pt3dadd( 66.3897, -88.5796, 1.5102, 0.44 ) }
    dend_34 { pt3dadd( 67.8983, -90.9441, 0.97552, 0.44 ) }
    dend_34 { pt3dadd( 69.2167, -92.9654, 0.50295, 0.44 ) }
    dend_34 { pt3dadd( 70.1124, -94.3674, 0.153289, 0.44 ) }
    dend_34 { pt3dadd( 71.45, -96.6123, -0.409548, 0.44 ) }
    dend_34 { pt3dadd( 72.5298, -98.5913, -0.872166, 0.44 ) }
    dend_34 { pt3dadd( 73.7664, -101.038, -1.58295, 0.44 ) }
    dend_34 { pt3dadd( 74.7432, -103.15, -2.27834, 0.44 ) }
    dend_34 { pt3dadd( 75.5474, -105.037, -2.92942, 0.44 ) }
    dend_34 { pt3dadd( 76.0831, -106.349, -3.41026, 0.44 ) }
    dend_34 { pt3dadd( 76.6632, -107.776, -3.9621, 0.44 ) }
    dend_34 { pt3dadd( 77.9115, -110.769, -5.00497, 0.44 ) }
    dend_34 { pt3dadd( 78.1908, -111.398, -5.19371, 0.44 ) }
    dend_34 { pt3dadd( 78.7783, -112.636, -5.48844, 0.44 ) }
    dend_34 { pt3dadd( 80.2349, -115.517, -5.93435, 0.44 ) }
    dend_34 { pt3dadd( 80.974, -116.972, -5.98691, 0.44 ) }
    dend_34 { pt3dadd( 82.1909, -119.431, -5.7335, 0.44 ) }
    dend_34 { pt3dadd( 82.721, -120.559, -5.48579, 0.44 ) }
    dend_34 { pt3dadd( 83.4899, -122.257, -5.05648, 0.44 ) }
    dend_34 { pt3dadd( 84.0084, -123.48, -4.67425, 0.44 ) }
    dend_34 { pt3dadd( 84.7778, -125.491, -3.83896, 0.44 ) }
    dend_34 { pt3dadd( 85.485, -127.463, -3.0028, 0.44 ) }
    dend_34 { pt3dadd( 85.7472, -128.215, -2.6804, 0.44 ) }
    dend_34 { pt3dadd( 86.1983, -129.537, -2.08084, 0.44 ) }
    dend_34 { pt3dadd( 86.8466, -131.404, -1.17356, 0.44 ) }
    dend_34 { pt3dadd( 87.4867, -133.197, -0.276404, 0.44 ) }
    dend_34 { pt3dadd( 88.2736, -135.049, 0.628934, 0.44 ) }
    dend_34 { pt3dadd( 88.9688, -136.393, 1.18158, 0.44 ) }
    dend_34 { pt3dadd( 89.5994, -137.39, 1.50793, 0.44 ) }
    dend_34 { pt3dadd( 91.4881, -139.778, 1.99005, 0.44 ) }
    dend_34 { pt3dadd( 92.6399, -140.979, 1.99835, 0.44 ) }
    dend_34 { pt3dadd( 94.5445, -142.685, 1.66167, 0.44 ) }
    dend_34 { pt3dadd( 96.7284, -144.42, 1.06497, 0.44 ) }
    dend_34 { pt3dadd( 98.3794, -145.623, 0.508569, 0.44 ) }
    dend_34 { pt3dadd( 100.438, -146.97, -0.235997, 0.44 ) }
    dend_34 { pt3dadd( 102.581, -148.204, -1.04878, 0.44 ) }
    dend_34 { pt3dadd( 104.246, -149.063, -1.59377, 0.44 ) }
    dend_34 { pt3dadd( 106.21, -149.982, -2.1518, 0.44 ) }
    dend_34 { pt3dadd( 107.906, -150.683, -2.58396, 0.44 ) }
    dend_34 { pt3dadd( 109.5, -151.271, -3.01944, 0.44 ) }
    dend_34 { pt3dadd( 111.409, -151.908, -3.53005, 0.44 ) }
    dend_34 { pt3dadd( 114.78, -152.889, -4.3838, 0.44 ) }
    dend_34 { pt3dadd( 117.754, -153.683, -5.10988, 0.44 ) }
    dend_34 { pt3dadd( 120.665, -154.436, -5.88372, 0.44 ) }
    dend_34 { pt3dadd( 122.777, -155.023, -6.50038, 0.44 ) }
    dend_34 { pt3dadd( 124.06, -155.441, -6.92215, 0.44 ) }
    dend_34 { pt3dadd( 125.848, -156.136, -7.64219, 0.44 ) }
    dend_34 { pt3dadd( 127.512, -156.919, -8.41254, 0.44 ) }
    dend_34 { pt3dadd( 129.869, -158.288, -9.60524, 0.44 ) }
    dend_34 { pt3dadd( 131.506, -159.423, -10.5315, 0.44 ) }
    dend_34 { pt3dadd( 133.018, -160.593, -11.5405, 0.44 ) }
    dend_34 { pt3dadd( 134.767, -162.126, -12.8946, 0.44 ) }
    dend_34 { pt3dadd( 135.72, -163.071, -13.7921, 0.44 ) }
    dend_34 { pt3dadd( 136.738, -164.166, -14.8846, 0.44 ) }
    dend_34 { pt3dadd( 137.909, -165.521, -16.202, 0.44 ) }
    dend_34 { pt3dadd( 138.709, -166.466, -17.0363, 0.44 ) }
    dend_34 { pt3dadd( 139.629, -167.548, -17.8566, 0.44 ) }
    dend_34 { pt3dadd( 141.621, -169.841, -19.2424, 0.44 ) }
    dend_34 { pt3dadd( 142.74, -171.131, -19.8772, 0.44 ) }
    dend_34 { pt3dadd( 143.853, -172.416, -20.3465, 0.44 ) }
    dend_34 { pt3dadd( 145.372, -174.207, -20.8004, 0.44 ) }
    dend_34 { pt3dadd( 146.647, -175.727, -21.0252, 0.44 ) }
    dend_34 { pt3dadd( 148.479, -177.919, -21.1269, 0.44 ) }
    dend_34 { pt3dadd( 150.078, -179.841, -21.0152, 0.44 ) }
    dend_34 { pt3dadd( 151.297, -181.316, -20.8536, 0.44 ) }
    dend_34 { pt3dadd( 152.234, -182.44, -20.705, 0.44 ) }
    dend_34 { pt3dadd( 153.766, -184.348, -20.4075, 0.44 ) }
    dend_34 { pt3dadd( 155.202, -186.25, -20.0527, 0.44 ) }
    dend_34 { pt3dadd( 156.13, -187.513, -19.7934, 0.44 ) }
    dend_34 { pt3dadd( 157.889, -189.932, -19.2581, 0.44 ) }
    dend_34 { pt3dadd( 159.006, -191.497, -18.8986, 0.44 ) }
    dend_34 { pt3dadd( 160.83, -194.098, -18.3059, 0.44 ) }
    dend_34 { pt3dadd( 162.282, -196.238, -17.8661, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.0742, -5.39302, -13.8752, 1.25 ) }
    dend_2 { pt3dadd( 30.6336, -4.89644, -15.3062, 1.25 ) }
    dend_2 { pt3dadd( 31.9476, -4.71312, -15.8345, 1.25 ) }
    dend_2 { pt3dadd( 33.2126, -4.53664, -16.3431, 1.69 ) }
    dend_2 { pt3dadd( 34.8507, -4.3081, -17.0016, 2.87 ) }
    dend_2 { pt3dadd( 35.8631, -4.16686, -17.4087, 2.87 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 88/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.2041, 24.577, -1.77581, 0.806721 ) }
    axon_1 { pt3dadd( 43.949, 33.9076, -1.77581, 0.806721 ) }
    axon_1 { pt3dadd( 55.6938, 43.2381, -1.77581, 0.806721 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 91/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -22.7694, 19.7216, 22.1183, 0.66 ) }
    dend_55 { pt3dadd( -24.9494, 19.3706, 22.1183, 0.66 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 93/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -22.7694, 19.7216, 22.1183, 0.66 ) }
    dend_54 { pt3dadd( -24.3394, 20.7746, 22.1183, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -42.1187, -19.9657, -3.87636, 1.84 ) }
    dend_45 { pt3dadd( -45.5251, -19.6021, 0.243508, 1.84 ) }
    dend_45 { pt3dadd( -46.3658, -19.567, 0.821522, 0.66 ) }
    dend_45 { pt3dadd( -46.9142, -19.5783, 1.05054, 1.11 ) }
    dend_45 { pt3dadd( -47.2638, -19.6155, 1.15447, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( -48.1536, -19.7765, 1.25401, 1.92 ) }
    dend_45 { pt3dadd( -49.3137, -20.0773, 1.2538, 1.4 ) }
    dend_45 { pt3dadd( -51.195, -20.8539, 0.731988, 1.4 ) }
    dend_45 { pt3dadd( -52.4997, -21.6022, 0.285796, 1.03 ) }
    dend_45 { pt3dadd( -53.5896, -22.4049, -0.35775, 1.03 ) }
    dend_45 { pt3dadd( -55.5, -24.1202, -1.86245, 1.4 ) }
    dend_45 { pt3dadd( -56.0092, -24.6636, -2.3577, 1.4 ) }
    dend_45 { pt3dadd( -56.6558, -25.4543, -3.0973, 1.11 ) }
    dend_45 { pt3dadd( -57.1424, -26.1124, -3.73461, 1.77 ) }
    dend_45 { pt3dadd( -58.9907, -28.6111, -6.20516, 2.06 ) }
    dend_45 { pt3dadd( -59.7887, -29.544, -7.12607, 1.33 ) }
    dend_45 { pt3dadd( -60.2166, -29.9354, -7.46778, 0.74 ) }
    dend_45 { pt3dadd( -60.6722, -30.2606, -7.77082, 0.44 ) }
    dend_45 { pt3dadd( -60.9961, -30.4401, -7.9918, 0.44 ) }
    dend_45 { pt3dadd( -61.3343, -30.5988, -8.20828, 1.25 ) }
    dend_45 { pt3dadd( -62.132, -30.9336, -8.58174, 0.96 ) }
    dend_45 { pt3dadd( -63.0131, -31.3338, -9.09459, 0.74 ) }
    dend_45 { pt3dadd( -63.5261, -31.6355, -9.41643, 0.37 ) }
    dend_45 { pt3dadd( -65.544, -33.1739, -10.6521, 0.07 ) }
    dend_45 { pt3dadd( -65.8987, -33.4943, -10.8457, 1.03 ) }
    dend_45 { pt3dadd( -66.5032, -34.0967, -11.1233, 1.55 ) }
    dend_45 { pt3dadd( -67.3826, -34.9912, -11.436, 2.06 ) }
    dend_45 { pt3dadd( -68.2568, -35.8648, -11.6409, 2.58 ) }
    dend_45 { pt3dadd( -69.3252, -36.8792, -11.7563, 1.77 ) }
    dend_45 { pt3dadd( -70.2239, -37.6774, -11.7403, 0.96 ) }
    dend_45 { pt3dadd( -71.0345, -38.3562, -11.9232, 0.96 ) }
    dend_45 { pt3dadd( -71.8633, -39.0286, -12.3001, 1.25 ) }
    dend_45 { pt3dadd( -72.5149, -39.5384, -12.7241, 1.25 ) }
    dend_45 { pt3dadd( -73.2171, -40.0829, -13.2768, 1.25 ) }
    dend_45 { pt3dadd( -74.0282, -40.7428, -14.001, 1.25 ) }
    dend_45 { pt3dadd( -77.2021, -43.4859, -16.9744, 0.66 ) }
    dend_45 { pt3dadd( -77.6363, -43.8888, -17.3769, 0.66 ) }
    dend_45 { pt3dadd( -78.2542, -44.5, -18.0303, 1.18 ) }
    dend_45 { pt3dadd( -78.9675, -45.2134, -18.8017, 2.14 ) }
    dend_45 { pt3dadd( -79.5678, -45.8237, -19.4312, 2.65 ) }
    dend_45 { pt3dadd( -80.2293, -46.5228, -20.0481, 2.65 ) }
    dend_45 { pt3dadd( -80.9286, -47.3164, -20.5272, 1.47 ) }
    dend_45 { pt3dadd( -82.9031, -49.7892, -22.0858, 0.96 ) }
    dend_45 { pt3dadd( -83.3804, -50.4795, -22.5282, 0.96 ) }
    dend_45 { pt3dadd( -83.6345, -50.915, -22.8025, 0.96 ) }
    dend_45 { pt3dadd( -83.9269, -51.5555, -23.1712, 0.96 ) }
    dend_45 { pt3dadd( -84.2067, -52.2834, -23.5334, 0.96 ) }
    dend_45 { pt3dadd( -84.3746, -52.7603, -23.6916, 0.96 ) }
    dend_45 { pt3dadd( -84.6068, -53.3551, -23.6916, 0.96 ) }
    dend_45 { pt3dadd( -84.9186, -53.8551, -23.6916, 0.96 ) }
    dend_45 { pt3dadd( -85.3977, -54.1231, -23.8587, 0.96 ) }
    dend_45 { pt3dadd( -86.5152, -54.4857, -24.4034, 0.96 ) }
    dend_45 { pt3dadd( -87.073, -54.6626, -24.8831, 0.96 ) }
    dend_45 { pt3dadd( -87.6319, -54.8638, -25.4473, 0.96 ) }
    dend_45 { pt3dadd( -88.0759, -55.0457, -25.9132, 0.96 ) }
    dend_45 { pt3dadd( -89.6755, -55.8312, -27.8964, 0.07 ) }
    dend_45 { pt3dadd( -90.1781, -56.1362, -28.6032, 1.77 ) }
    dend_45 { pt3dadd( -91.8177, -57.4287, -31.212, 1.25 ) }
    dend_45 { pt3dadd( -92.1169, -57.7024, -31.718, 0.81 ) }
    dend_45 { pt3dadd( -92.6298, -58.2378, -32.5941, 0.66 ) }
    dend_45 { pt3dadd( -93.6105, -59.4062, -34.1863, 0.29 ) }
    dend_45 { pt3dadd( -93.8181, -59.6747, -34.4762, 0.29 ) }
    dend_45 { pt3dadd( -94.1353, -60.1235, -34.8736, 0.29 ) }
    dend_45 { pt3dadd( -94.4038, -60.5022, -35.1044, 1.47 ) }
    dend_45 { pt3dadd( -94.9852, -61.2723, -35.6585, 1.92 ) }
    dend_45 { pt3dadd( -95.4341, -61.8593, -36.0955, 1.4 ) }
    dend_45 { pt3dadd( -96.3957, -63.0381, -37.2431, 1.4 ) }
    dend_45 { pt3dadd( -97.1014, -63.8715, -38.2046, 0.66 ) }
    dend_45 { pt3dadd( -97.6409, -64.4766, -38.969, 0.37 ) }
    dend_45 { pt3dadd( -99.0511, -65.9684, -40.9523, 0.07 ) }
    dend_45 { pt3dadd( -99.2718, -66.1939, -41.2602, 0.07 ) }
    dend_45 { pt3dadd( -101.291, -68.0581, -43.8467, 1.4 ) }
    dend_45 { pt3dadd( -101.909, -68.5973, -44.6804, 1.84 ) }
    dend_45 { pt3dadd( -102.496, -69.079, -45.4698, 1.18 ) }
    dend_45 { pt3dadd( -102.95, -69.459, -46.048, 0.15 ) }
    dend_45 { pt3dadd( -103.49, -69.8904, -46.6022, 0.15 ) }
    dend_45 { pt3dadd( -104.27, -70.5109, -47.2117, 0.15 ) }
    dend_45 { pt3dadd( -107.065, -72.8276, -48.6808, 1.55 ) }
    dend_45 { pt3dadd( -108.043, -73.672, -49.2213, 0.96 ) }
    dend_45 { pt3dadd( -108.539, -74.1421, -49.4842, 0.07 ) }
    dend_45 { pt3dadd( -108.856, -74.454, -49.8518, 1.4 ) }
    dend_45 { pt3dadd( -110.092, -75.6587, -51.5981, 1.4 ) }
    dend_45 { pt3dadd( -111.229, -76.8502, -53.389, 0.52 ) }
    dend_45 { pt3dadd( -111.587, -77.2358, -53.9837, 0.15 ) }
    dend_45 { pt3dadd( -112.014, -77.7186, -54.7387, 0.15 ) }
    dend_45 { pt3dadd( -114.56, -80.7392, -59.431, 1.62 ) }
    dend_45 { pt3dadd( -115.094, -81.4172, -60.4656, 0.52 ) }
    dend_45 { pt3dadd( -115.297, -81.6692, -60.8844, 0.15 ) }
    dend_45 { pt3dadd( -115.506, -81.9242, -61.2731, 0.15 ) }
    dend_45 { pt3dadd( -116.252, -82.7909, -62.5128, 0.15 ) }
    dend_45 { pt3dadd( -116.575, -83.1545, -62.9393, 1.33 ) }
    dend_45 { pt3dadd( -116.955, -83.5682, -63.2297, 1.33 ) }
    dend_45 { pt3dadd( -118.807, -85.411, -65.1155, 1.99 ) }
    dend_45 { pt3dadd( -119.193, -85.7527, -65.5358, 1.62 ) }
    dend_45 { pt3dadd( -119.897, -86.3315, -66.3033, 0.44 ) }
    dend_45 { pt3dadd( -120.441, -86.7618, -66.8881, 0.44 ) }
    dend_45 { pt3dadd( -120.87, -87.0883, -67.3058, 0.44 ) }
    dend_45 { pt3dadd( -122.947, -88.5272, -69.9152, 1.4 ) }
    dend_45 { pt3dadd( -123.378, -88.8109, -70.5086, 1.84 ) }
    dend_45 { pt3dadd( -123.97, -89.1756, -71.3406, 0.88 ) }
    dend_45 { pt3dadd( -124.589, -89.528, -72.2444, 0.88 ) }
    dend_45 { pt3dadd( -125.109, -89.8046, -73.0002, 0.88 ) }
    dend_45 { pt3dadd( -128.674, -91.6936, -78.0067, 0.29 ) }
    dend_45 { pt3dadd( -129.259, -91.9985, -78.784, 1.84 ) }
    dend_45 { pt3dadd( -130.323, -92.5479, -80.2124, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_45 { pt3dadd( -131.657, -93.2211, -81.9758, 0.07 ) }
    dend_45 { pt3dadd( -131.861, -93.3282, -82.2613, 0.81 ) }
    dend_45 { pt3dadd( -132.399, -93.629, -82.9435, 0.81 ) }
    dend_45 { pt3dadd( -133.712, -94.382, -84.2571, 0.07 ) }
    dend_45 { pt3dadd( -134.161, -94.6324, -84.7182, 1.03 ) }
    dend_45 { pt3dadd( -134.509, -94.8185, -85.059, 1.69 ) }
    dend_45 { pt3dadd( -137.672, -96.5127, -87.8455, 0.15 ) }
    dend_45 { pt3dadd( -139.096, -97.2639, -89.0213, 0.15 ) }
    dend_45 { pt3dadd( -139.679, -97.5687, -89.4546, 1.25 ) }
    dend_45 { pt3dadd( -140.243, -97.8663, -89.8204, 1.69 ) }
    dend_45 { pt3dadd( -141.334, -98.4531, -90.4471, 0.74 ) }
    dend_45 { pt3dadd( -142.508, -99.0947, -91.0064, 0.07 ) }
    dend_45 { pt3dadd( -143.214, -99.4828, -91.2294, 0.66 ) }
    dend_45 { pt3dadd( -144.038, -99.9449, -91.5132, 1.62 ) }
    dend_45 { pt3dadd( -145.167, -100.563, -91.8906, 1.62 ) }
    dend_45 { pt3dadd( -146.234, -101.115, -92.2184, 0.52 ) }
    dend_45 { pt3dadd( -147.805, -101.886, -92.7444, 0.52 ) }
    dend_45 { pt3dadd( -148.842, -102.389, -93.2069, 0.29 ) }
    dend_45 { pt3dadd( -149.551, -102.732, -93.5926, 0.59 ) }
    dend_45 { pt3dadd( -150.449, -103.152, -94.1071, 0.59 ) }
    dend_45 { pt3dadd( -151.191, -103.478, -94.5368, 1.11 ) }
    dend_45 { pt3dadd( -152.736, -104.136, -95.4482, 1.55 ) }
    dend_45 { pt3dadd( -155.018, -105.089, -96.7633, 1.55 ) }
    dend_45 { pt3dadd( -156.126, -105.555, -97.4372, 0.88 ) }
    dend_45 { pt3dadd( -157.791, -106.274, -98.4529, 0.59 ) }
    dend_45 { pt3dadd( -159.303, -106.962, -99.3205, 0.22 ) }
    dend_45 { pt3dadd( -160.292, -107.425, -99.8044, 0.22 ) }
    dend_45 { pt3dadd( -160.916, -107.712, -100.026, 0.66 ) }
    dend_45 { pt3dadd( -162.186, -108.292, -100.409, 1.18 ) }
    dend_45 { pt3dadd( -162.845, -108.601, -100.677, 1.11 ) }
    dend_45 { pt3dadd( -164.021, -109.132, -101.237, 0.59 ) }
    dend_45 { pt3dadd( -164.931, -109.517, -101.686, 0.59 ) }
    dend_45 { pt3dadd( -166.043, -109.903, -102.218, 0.29 ) }
    dend_45 { pt3dadd( -167.591, -110.315, -102.877, 1.18 ) }
    dend_45 { pt3dadd( -169.37, -110.673, -103.726, 1.55 ) }
    dend_45 { pt3dadd( -170.25, -110.799, -104.248, 1.55 ) }
    dend_45 { pt3dadd( -171.651, -110.96, -105.187, 0.44 ) }
    dend_45 { pt3dadd( -172.912, -111.066, -106.083, 0.37 ) }
    dend_45 { pt3dadd( -174.263, -111.147, -107.091, 0.37 ) }
    dend_45 { pt3dadd( -177.051, -111.256, -109.18, 1.4 ) }
    dend_45 { pt3dadd( -179.12, -111.297, -110.836, 0.15 ) }
    dend_45 { pt3dadd( -179.613, -111.306, -111.254, 0.15 ) }
    dend_45 { pt3dadd( -180.229, -111.315, -111.783, 0.15 ) }
    dend_45 { pt3dadd( -181.178, -111.327, -112.522, 1.55 ) }
    dend_45 { pt3dadd( -181.79, -111.35, -112.928, 1.55 ) }
    dend_45 { pt3dadd( -183.729, -111.466, -113.848, 0.07 ) }
    dend_45 { pt3dadd( -184.974, -111.545, -114.367, 1.47 ) }
    dend_45 { pt3dadd( -185.978, -111.61, -114.782, 1.18 ) }
    dend_45 { pt3dadd( -187.821, -111.786, -115.517, 1.69 ) }
    dend_45 { pt3dadd( -189.557, -111.974, -116.124, 0.59 ) }
    dend_45 { pt3dadd( -190.127, -112.045, -116.309, 1.18 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -42.1187, -19.9657, -3.87636, 1.4 ) }
    dend_40 { pt3dadd( -42.4971, -22.2396, -2.38308, 1.4 ) }
    dend_40 { pt3dadd( -42.6367, -22.8587, -2.03918, 0.96 ) }
    dend_40 { pt3dadd( -42.7279, -23.1967, -1.88263, 0.66 ) }
    dend_40 { pt3dadd( -42.8882, -23.712, -1.69091, 0.66 ) }
    dend_40 { pt3dadd( -43.0454, -24.1813, -1.55786, 0.52 ) }
    dend_40 { pt3dadd( -43.237, -24.7365, -1.43754, 0.44 ) }
    dend_40 { pt3dadd( -43.3367, -24.982, -1.43383, 0.81 ) }
    dend_40 { pt3dadd( -43.5163, -25.4564, -1.42705, 1.69 ) }
    dend_40 { pt3dadd( -43.7456, -26.1456, -1.41562, 1.99 ) }
    dend_40 { pt3dadd( -44.0218, -27.102, -1.39901, 1.69 ) }
    dend_40 { pt3dadd( -44.2547, -28.0088, -1.3842, 0.66 ) }
    dend_40 { pt3dadd( -44.4051, -28.6426, -1.37544, 0.66 ) }
    dend_40 { pt3dadd( -44.484, -28.993, -1.37179, 0.66 ) }
    dend_40 { pt3dadd( -44.5477, -29.2831, -1.36666, 0.66 ) }
    dend_40 { pt3dadd( -44.7837, -30.332, -1.34298, 1.47 ) }
    dend_40 { pt3dadd( -45.0014, -31.2541, -1.31942, 2.14 ) }
    dend_40 { pt3dadd( -45.2252, -32.1561, -1.29627, 2.14 ) }
    dend_40 { pt3dadd( -45.3769, -32.7871, -1.28141, 2.14 ) }
    dend_40 { pt3dadd( -45.6435, -33.9031, -1.25908, 1.33 ) }
    dend_40 { pt3dadd( -45.8297, -34.7511, -1.24549, 0.81 ) }
    dend_40 { pt3dadd( -45.9309, -35.3103, -1.23734, 1.18 ) }
    dend_40 { pt3dadd( -46.0977, -36.3649, -1.22432, 1.62 ) }
    dend_40 { pt3dadd( -46.2804, -37.4116, -1.21432, 1.62 ) }
    dend_40 { pt3dadd( -46.53, -38.6733, -1.20712, 1.62 ) }
    dend_40 { pt3dadd( -46.7627, -39.6616, -1.20712, 0.81 ) }
    dend_40 { pt3dadd( -46.9418, -40.2583, -1.22439, 0.59 ) }
    dend_40 { pt3dadd( -47.2121, -40.9461, -1.26677, 1.03 ) }
    dend_40 { pt3dadd( -47.5922, -41.6916, -1.3401, 1.03 ) }
    dend_40 { pt3dadd( -47.8308, -42.0692, -1.39272, 1.03 ) }
    dend_40 { pt3dadd( -48.09, -42.4387, -1.45913, 1.03 ) }
    dend_40 { pt3dadd( -48.6219, -43.242, -1.61688, 0.66 ) }
    dend_40 { pt3dadd( -48.8732, -43.7645, -1.71082, 0.44 ) }
    dend_40 { pt3dadd( -48.989, -44.3288, -1.78696, 0.44 ) }
    dend_40 { pt3dadd( -48.991, -44.6732, -1.81928, 1.25 ) }
    dend_40 { pt3dadd( -48.9433, -45.2661, -1.851, 1.25 ) }
    dend_40 { pt3dadd( -48.8614, -45.9724, -1.86496, 1.69 ) }
    dend_40 { pt3dadd( -48.7749, -46.7648, -1.85321, 1.69 ) }
    dend_40 { pt3dadd( -48.6881, -47.7582, -1.83981, 1.11 ) }
    dend_40 { pt3dadd( -48.6498, -48.3109, -1.83369, 0.81 ) }
    dend_40 { pt3dadd( -48.61, -49.2374, -1.82366, 0.81 ) }
    dend_40 { pt3dadd( -48.5853, -50.0263, -1.81577, 0.81 ) }
    dend_40 { pt3dadd( -48.5694, -50.6318, -1.81045, 0.81 ) }
    dend_40 { pt3dadd( -48.5541, -51.2082, -1.80629, 0.81 ) }
    dend_40 { pt3dadd( -48.5436, -51.9629, -1.80245, 0.81 ) }
    dend_40 { pt3dadd( -48.5493, -53.1436, -1.79925, 0.81 ) }
    dend_40 { pt3dadd( -48.5582, -54.2731, -1.79925, 0.81 ) }
    dend_40 { pt3dadd( -48.5774, -55.0675, -1.79925, 0.81 ) }
    dend_40 { pt3dadd( -48.6217, -55.7822, -1.79925, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -48.7628, -56.8496, -1.79925, 1.92 ) }
    dend_40 { pt3dadd( -48.9166, -57.6395, -1.79925, 2.43 ) }
    dend_40 { pt3dadd( -49.0424, -58.1843, -1.79925, 2.43 ) }
    dend_40 { pt3dadd( -49.3712, -59.4344, -1.79925, 1.18 ) }
    dend_40 { pt3dadd( -49.5689, -60.1115, -1.79925, 1.11 ) }
    dend_40 { pt3dadd( -49.8176, -60.878, -1.79925, 0.88 ) }
    dend_40 { pt3dadd( -50.0623, -61.4774, -1.83704, 0.88 ) }
    dend_40 { pt3dadd( -50.2209, -61.792, -1.87251, 0.88 ) }
    dend_40 { pt3dadd( -50.4805, -62.226, -1.93144, 0.74 ) }
    dend_40 { pt3dadd( -50.7354, -62.6071, -1.98804, 0.74 ) }
    dend_40 { pt3dadd( -51.5253, -63.7329, -2.1556, 2.06 ) }
    dend_40 { pt3dadd( -52.5618, -65.1938, -2.36713, 2.43 ) }
    dend_40 { pt3dadd( -53.3501, -66.322, -2.52476, 2.43 ) }
    dend_40 { pt3dadd( -54.172, -67.5542, -2.68814, 1.47 ) }
    dend_40 { pt3dadd( -54.61, -68.2643, -2.77646, 0.96 ) }
    dend_40 { pt3dadd( -54.9419, -68.8796, -2.84243, 0.96 ) }
    dend_40 { pt3dadd( -55.2072, -69.5145, -2.88775, 0.88 ) }
    dend_40 { pt3dadd( -55.3013, -69.95, -2.88225, 0.88 ) }
    dend_40 { pt3dadd( -55.3062, -70.4047, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.2781, -70.6134, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.2121, -71.0369, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.2004, -71.4027, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.2843, -71.9551, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.4371, -72.513, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.6095, -72.9929, -2.87847, 0.88 ) }
    dend_40 { pt3dadd( -55.8459, -73.5586, -2.87847, 1.4 ) }
    dend_40 { pt3dadd( -56.3208, -74.5376, -2.86124, 1.84 ) }
    dend_40 { pt3dadd( -56.7637, -75.4099, -2.84452, 2.65 ) }
    dend_40 { pt3dadd( -57.3375, -76.5085, -2.82109, 2.65 ) }
    dend_40 { pt3dadd( -58.0732, -77.8851, -2.78816, 1.33 ) }
    dend_40 { pt3dadd( -58.5939, -78.8497, -2.76204, 1.33 ) }
    dend_40 { pt3dadd( -59.4259, -80.2812, -2.71567, 1.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -185.636, 86.2466, -207.248, 0.22 ) }
    dend_38 { pt3dadd( -185.531, 86.7261, -208.235, 0.22 ) }
    dend_38 { pt3dadd( -185.467, 87.0166, -208.833, 0.22 ) }
    dend_38 { pt3dadd( -185.365, 87.4798, -209.787, 0.22 ) }
    dend_38 { pt3dadd( -185.207, 88.1991, -211.267, 0.22 ) }
    dend_38 { pt3dadd( -185.113, 88.6241, -212.142, 0.22 ) }
    dend_38 { pt3dadd( -185.022, 89.0388, -212.995, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -185.636, 86.2466, -207.248, 0.22 ) }
    dend_37 { pt3dadd( -186.095, 84.8589, -207.12, 0.22 ) }
    dend_37 { pt3dadd( -186.369, 84.0324, -207.043, 0.22 ) }
    dend_37 { pt3dadd( -186.75, 82.8818, -206.936, 0.22 ) }
    dend_37 { pt3dadd( -187.308, 81.1949, -206.779, 0.22 ) }
    dend_37 { pt3dadd( -187.711, 79.977, -206.666, 0.22 ) }
    dend_37 { pt3dadd( -187.824, 79.6361, -206.634, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_2 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 35.8631, -4.16686, -17.4087, 0.88 ) }
    dend_33 { pt3dadd( 37.4895, -8.25504, 3.60151, 0.88 ) }
    dend_33 { pt3dadd( 37.5861, -8.49638, 4.83309, 0.88 ) }
    dend_33 { pt3dadd( 37.7392, -8.88171, 6.96997, 0.44 ) }
    dend_33 { pt3dadd( 37.7763, -8.96189, 7.72704, 0.44 ) }
    dend_33 { pt3dadd( 37.7289, -8.75403, 9.22851, 0.44 ) }
    dend_33 { pt3dadd( 37.5481, -8.12815, 11.059, 0.44 ) }
    dend_33 { pt3dadd( 38.1335, -10.1004, 8.47742, 0.44 ) }
    dend_33 { pt3dadd( 38.5367, -11.5424, 6.38829, 0.44 ) }
    dend_33 { pt3dadd( 38.9479, -13.0983, 4.08084, 0.44 ) }
    dend_33 { pt3dadd( 39.6351, -16.3743, -0.996736, 0.44 ) }
    dend_33 { pt3dadd( 39.7689, -17.2924, -2.53618, 0.44 ) }
    dend_33 { pt3dadd( 39.9522, -18.9457, -5.62898, 0.44 ) }
    dend_33 { pt3dadd( 40.1404, -21.1591, -10.1356, 0.44 ) }
    dend_33 { pt3dadd( 40.1787, -21.54, -11.0031, 0.44 ) }
    dend_33 { pt3dadd( 40.3394, -23.0072, -14.4948, 0.44 ) }
    dend_33 { pt3dadd( 40.4961, -24.7224, -18.7431, 0.44 ) }
    dend_33 { pt3dadd( 40.6747, -26.6118, -23.6387, 0.44 ) }
    dend_33 { pt3dadd( 40.7759, -27.5432, -25.9688, 0.44 ) }
    dend_33 { pt3dadd( 40.9599, -29.0877, -29.7512, 0.44 ) }
    dend_33 { pt3dadd( 41.0175, -29.4561, -30.6788, 0.44 ) }
    dend_33 { pt3dadd( 41.2503, -30.5755, -33.4524, 0.44 ) }
    dend_33 { pt3dadd( 41.49, -31.8522, -36.2405, 0.44 ) }
    dend_33 { pt3dadd( 41.6357, -32.6686, -37.6809, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 35.8631, -4.16686, -17.4087, 2.14 ) }
    dend_3 { pt3dadd( 38.9611, -4.38015, -16.652, 2.14 ) }
    dend_3 { pt3dadd( 40.14, -4.40417, -16.4259, 0.81 ) }
    dend_3 { pt3dadd( 42.1043, -4.38889, -16.1116, 1.77 ) }
    dend_3 { pt3dadd( 43.1354, -4.35247, -15.9744, 1.77 ) }
    dend_3 { pt3dadd( 44.7421, -4.24294, -15.2557, 0.66 ) }
    dend_3 { pt3dadd( 45.7088, -4.15305, -14.7374, 1.47 ) }
    dend_3 { pt3dadd( 46.7984, -4.03609, -14.1844, 1.47 ) }
    dend_3 { pt3dadd( 47.7024, -3.91127, -13.6188, 1.47 ) }
    dend_3 { pt3dadd( 48.8263, -3.70822, -12.7244, 2.28 ) }
    dend_3 { pt3dadd( 54.0795, -2.61977, -7.62364, 2.28 ) }
    dend_3 { pt3dadd( 55.0708, -2.39334, -6.41452, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -190.127, -112.045, -116.309, 0.66 ) }
    dend_46 { pt3dadd( -192.408, -112.109, -119.957, 0.66 ) }
    dend_46 { pt3dadd( -192.878, -112.189, -120.507, 0.66 ) }
    dend_46 { pt3dadd( -193.345, -112.291, -120.921, 0.07 ) }
    dend_46 { pt3dadd( -193.653, -112.359, -121.139, 0.96 ) }
    dend_46 { pt3dadd( -194.156, -112.453, -121.409, 1.4 ) }
    dend_46 { pt3dadd( -194.734, -112.519, -121.866, 1.18 ) }
    dend_46 { pt3dadd( -195.467, -112.578, -122.371, 0.52 ) }
    dend_46 { pt3dadd( -196.285, -112.596, -122.982, 0.07 ) }
    dend_46 { pt3dadd( -196.815, -112.577, -123.381, 1.62 ) }
    dend_46 { pt3dadd( -197.822, -112.523, -124.128, 2.14 ) }
    dend_46 { pt3dadd( -201.819, -112.158, -126.995, 0.81 ) }
    dend_46 { pt3dadd( -202.73, -112.042, -127.619, 0.81 ) }
    dend_46 { pt3dadd( -203.545, -111.917, -128.134, 1.25 ) }
    dend_46 { pt3dadd( -204.542, -111.764, -128.619, 0.07 ) }
    dend_46 { pt3dadd( -205.296, -111.639, -128.962, 0.07 ) }
    dend_46 { pt3dadd( -206.223, -111.455, -129.308, 0.07 ) }
    dend_46 { pt3dadd( -206.791, -111.341, -129.438, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -207.692, -111.171, -129.681, 1.69 ) }
    dend_46 { pt3dadd( -210.028, -110.761, -130.355, 0.52 ) }
    dend_46 { pt3dadd( -212.652, -110.301, -131.173, 0.07 ) }
    dend_46 { pt3dadd( -213.953, -110.118, -131.588, 0.07 ) }
    dend_46 { pt3dadd( -214.789, -110.033, -131.849, 0.07 ) }
    dend_46 { pt3dadd( -215.458, -109.972, -132.043, 1.55 ) }
    dend_46 { pt3dadd( -216.787, -109.861, -132.469, 1.55 ) }
    dend_46 { pt3dadd( -218.566, -109.668, -133.043, 0.29 ) }
    dend_46 { pt3dadd( -219.826, -109.488, -133.372, 0.29 ) }
    dend_46 { pt3dadd( -220.873, -109.287, -133.74, 0.52 ) }
    dend_46 { pt3dadd( -221.891, -108.991, -134.168, 1.55 ) }
    dend_46 { pt3dadd( -223.355, -108.42, -134.862, 1.55 ) }
    dend_46 { pt3dadd( -224.431, -107.864, -135.712, 0.22 ) }
    dend_46 { pt3dadd( -224.667, -107.717, -135.952, 1.62 ) }
    dend_46 { pt3dadd( -225.838, -106.882, -137.332, 0.37 ) }
    dend_46 { pt3dadd( -226.267, -106.565, -137.89, 0.96 ) }
    dend_46 { pt3dadd( -226.812, -106.166, -138.559, 1.47 ) }
    dend_46 { pt3dadd( -229.478, -104.492, -141.613, 1.11 ) }
    dend_46 { pt3dadd( -230.265, -104.066, -142.487, 0.15 ) }
    dend_46 { pt3dadd( -230.539, -103.939, -142.756, 0.74 ) }
    dend_46 { pt3dadd( -230.837, -103.822, -142.994, 1.55 ) }
    dend_46 { pt3dadd( -232.435, -103.294, -144.215, 1.55 ) }
    dend_46 { pt3dadd( -235.247, -102.636, -146.1, 0.52 ) }
    dend_46 { pt3dadd( -236.181, -102.479, -146.603, 1.33 ) }
    dend_46 { pt3dadd( -236.989, -102.375, -147.066, 0.74 ) }
    dend_46 { pt3dadd( -237.96, -102.28, -147.871, 0.15 ) }
    dend_46 { pt3dadd( -239.819, -102.114, -149.715, 0.15 ) }
    dend_46 { pt3dadd( -240.743, -101.989, -150.757, 0.15 ) }
    dend_46 { pt3dadd( -241.484, -101.871, -151.616, 1.62 ) }
    dend_46 { pt3dadd( -242.25, -101.753, -152.606, 1.62 ) }
    dend_46 { pt3dadd( -245.264, -101.236, -156.935, 0.37 ) }
    dend_46 { pt3dadd( -245.782, -101.143, -157.755, 1.62 ) }
    dend_46 { pt3dadd( -246.538, -100.957, -158.984, 0.07 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -59.4259, -80.2812, -2.71567, 1.11 ) }
    dend_42 { pt3dadd( -60.9991, -80.8357, -2.66141, 1.11 ) }
    dend_42 { pt3dadd( -62.0572, -81.1979, -2.71541, 1.55 ) }
    dend_42 { pt3dadd( -63.0509, -81.5311, -2.80602, 1.55 ) }
    dend_42 { pt3dadd( -63.8615, -81.8162, -2.89648, 0.52 ) }
    dend_42 { pt3dadd( -64.2304, -81.9458, -2.94113, 0.52 ) }
    dend_42 { pt3dadd( -65.149, -82.2599, -3.05601, 1.69 ) }
    dend_42 { pt3dadd( -66.3901, -82.6607, -3.26739, 1.03 ) }
    dend_42 { pt3dadd( -66.937, -82.866, -3.36949, 0.15 ) }
    dend_42 { pt3dadd( -67.3399, -83.0507, -3.4305, 0.15 ) }
    dend_42 { pt3dadd( -67.9222, -83.3701, -3.48153, 0.15 ) }
    dend_42 { pt3dadd( -68.2381, -83.5557, -3.48286, 0.15 ) }
    dend_42 { pt3dadd( -68.6983, -83.8247, -3.45029, 0.15 ) }
    dend_42 { pt3dadd( -69.5279, -84.28, -3.51023, 1.55 ) }
    dend_42 { pt3dadd( -70.3635, -84.7122, -3.69184, 1.55 ) }
    dend_42 { pt3dadd( -71.1343, -85.0997, -3.93548, 0.81 ) }
    dend_42 { pt3dadd( -72.2965, -85.6872, -4.39207, 0.81 ) }
    dend_42 { pt3dadd( -72.9192, -85.988, -4.67433, 0.66 ) }
    dend_42 { pt3dadd( -75.3094, -87.0029, -5.84586, 0.07 ) }
    dend_42 { pt3dadd( -75.7503, -87.1744, -6.07134, 0.81 ) }
    dend_42 { pt3dadd( -76.1374, -87.3317, -6.27576, 1.18 ) }
    dend_42 { pt3dadd( -76.6163, -87.5494, -6.50758, 0.81 ) }
    dend_42 { pt3dadd( -77.4723, -87.9676, -6.82122, 0.29 ) }
    dend_42 { pt3dadd( -78.206, -88.3385, -6.97948, 0.29 ) }
    dend_42 { pt3dadd( -78.997, -88.7375, -7.0179, 1.77 ) }
    dend_42 { pt3dadd( -79.6412, -89.0735, -7.04331, 1.77 ) }
    dend_42 { pt3dadd( -80.3137, -89.459, -7.06243, 1.11 ) }
    dend_42 { pt3dadd( -81.4601, -90.2021, -7.07766, 0.29 ) }
    dend_42 { pt3dadd( -81.7555, -90.4195, -7.07618, 0.07 ) }
    dend_42 { pt3dadd( -82.3782, -90.9658, -7.07424, 1.69 ) }
    dend_42 { pt3dadd( -83.2028, -91.8138, -7.07007, 1.69 ) }
    dend_42 { pt3dadd( -84.0831, -92.8829, -7.06423, 0.29 ) }
    dend_42 { pt3dadd( -84.4265, -93.376, -7.06153, 0.96 ) }
    dend_42 { pt3dadd( -84.7317, -93.9098, -7.05703, 0.96 ) }
    dend_42 { pt3dadd( -85.5189, -95.5014, -7.04436, 0.22 ) }
    dend_42 { pt3dadd( -85.8662, -96.363, -7.03818, 0.07 ) }
    dend_42 { pt3dadd( -85.9872, -96.7484, -7.03594, 0.07 ) }
    dend_42 { pt3dadd( -86.2154, -97.5831, -7.03225, 0.07 ) }
    dend_42 { pt3dadd( -86.3585, -98.1613, -7.03123, 1.62 ) }
    dend_42 { pt3dadd( -86.5496, -99.0678, -7.02834, 1.62 ) }
    dend_42 { pt3dadd( -86.6774, -99.8579, -7.02317, 1.4 ) }
    dend_42 { pt3dadd( -86.8558, -100.919, -7.02317, 0.81 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 75/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -59.4259, -80.2812, -2.71567, 0.88 ) }
    dend_41 { pt3dadd( -59.9625, -81.0508, -2.71567, 0.88 ) }
    dend_41 { pt3dadd( -60.3816, -81.7001, -2.62492, 0.66 ) }
    dend_41 { pt3dadd( -60.776, -82.3226, -2.50143, 1.18 ) }
    dend_41 { pt3dadd( -61.2697, -83.0373, -2.3369, 1.18 ) }
    dend_41 { pt3dadd( -61.3606, -83.1599, -2.30639, 1.47 ) }
    dend_41 { pt3dadd( -61.8028, -83.7512, -2.15671, 1.47 ) }
    dend_41 { pt3dadd( -62.5745, -84.8459, -1.84342, 0.22 ) }
    dend_41 { pt3dadd( -62.9023, -85.3795, -1.68616, 0.22 ) }
    dend_41 { pt3dadd( -63.1489, -85.922, -1.54679, 0.22 ) }
    dend_41 { pt3dadd( -63.2318, -86.1636, -1.49866, 0.22 ) }
    dend_41 { pt3dadd( -63.3697, -86.6694, -1.42749, 0.74 ) }
    dend_41 { pt3dadd( -63.5204, -87.416, -1.36875, 1.55 ) }
    dend_41 { pt3dadd( -63.6136, -88.0431, -1.36032, 1.55 ) }
    dend_41 { pt3dadd( -63.7784, -89.1782, -0.922904, 0.88 ) }
    dend_41 { pt3dadd( -63.8729, -89.8078, -0.53691, 0.22 ) }
    dend_41 { pt3dadd( -63.9537, -90.2912, -0.221028, 0.15 ) }
    dend_41 { pt3dadd( -64.0371, -90.7139, 0.07493, 0.15 ) }
    dend_41 { pt3dadd( -64.1899, -91.3902, 0.572117, 1.25 ) }
    dend_41 { pt3dadd( -65.0505, -94.9, 3.26614, 1.62 ) }
    dend_41 { pt3dadd( -65.2002, -95.5146, 3.74392, 1.62 ) }
    dend_41 { pt3dadd( -65.4593, -96.7542, 4.62674, 0.66 ) }
    dend_41 { pt3dadd( -65.5361, -97.118, 4.84554, 0.66 ) }
    dend_41 { pt3dadd( -65.6577, -97.6321, 5.06138, 0.66 ) }
    dend_41 { pt3dadd( -65.7096, -97.8346, 5.08883, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_41 { pt3dadd( -65.9056, -98.5326, 4.98109, 1.33 ) }
    dend_41 { pt3dadd( -66.1223, -99.2157, 4.92529, 1.33 ) }
    dend_41 { pt3dadd( -66.3579, -99.8809, 4.92529, 0.52 ) }
    dend_41 { pt3dadd( -66.6121, -100.585, 4.92529, 0.52 ) }
    dend_41 { pt3dadd( -66.8725, -101.256, 4.92529, 0.52 ) }
    dend_41 { pt3dadd( -67.1024, -101.751, 4.92529, 0.96 ) }
    dend_41 { pt3dadd( -67.5492, -102.568, 4.92529, 0.96 ) }
    dend_41 { pt3dadd( -67.9009, -103.158, 4.92529, 0.44 ) }
    dend_41 { pt3dadd( -68.4261, -104.01, 4.92883, 0.44 ) }
    dend_41 { pt3dadd( -68.6698, -104.401, 4.9318, 0.44 ) }
    dend_41 { pt3dadd( -69.1782, -105.234, 4.93975, 0.44 ) }
    dend_41 { pt3dadd( -69.4146, -105.653, 4.9441, 0.44 ) }
    dend_41 { pt3dadd( -69.7115, -106.231, 4.9501, 1.33 ) }
    dend_41 { pt3dadd( -70.1293, -107.146, 4.9592, 1.77 ) }
    dend_41 { pt3dadd( -70.6585, -108.425, 4.97518, 1.77 ) }
    dend_41 { pt3dadd( -71.0724, -109.499, 4.98979, 0.88 ) }
    dend_41 { pt3dadd( -71.3704, -110.313, 5.00123, 0.74 ) }
    dend_41 { pt3dadd( -71.7811, -111.378, 5.01608, 0.74 ) }
    dend_41 { pt3dadd( -71.9731, -111.839, 5.02063, 0.74 ) }
    dend_41 { pt3dadd( -72.3364, -112.648, 5.02454, 0.74 ) }
    dend_41 { pt3dadd( -72.7382, -113.482, 5.02656, 0.44 ) }
    dend_41 { pt3dadd( -73.0483, -114.088, 5.02638, 0.96 ) }
    dend_41 { pt3dadd( -73.4257, -114.801, 5.02427, 1.99 ) }
    dend_41 { pt3dadd( -73.8887, -115.705, 5.01933, 1.18 ) }
    dend_41 { pt3dadd( -74.2452, -116.437, 5.01382, 0.66 ) }
    dend_41 { pt3dadd( -74.6073, -117.233, 4.99657, 0.66 ) }
    dend_41 { pt3dadd( -75.0047, -118.173, 4.96892, 0.66 ) }
    dend_41 { pt3dadd( -75.2782, -118.828, 4.85684, 1.18 ) }
    dend_41 { pt3dadd( -75.7493, -119.908, 4.53237, 1.18 ) }
    dend_41 { pt3dadd( -76.0335, -120.551, 4.28032, 1.18 ) }
    dend_41 { pt3dadd( -76.3073, -121.154, 4.00981, 0.59 ) }
    dend_41 { pt3dadd( -76.5964, -121.758, 3.71714, 0.59 ) }
    dend_41 { pt3dadd( -77.7274, -124.053, 2.47293, 0.59 ) }
    dend_41 { pt3dadd( -78.3015, -125.17, 1.80387, 2.14 ) }
    dend_41 { pt3dadd( -78.7437, -125.99, 1.25985, 0.81 ) }
    dend_41 { pt3dadd( -79.1431, -126.727, 0.753914, 0.66 ) }
    dend_41 { pt3dadd( -79.448, -127.284, 0.388133, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 37/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 55.0708, -2.39334, -6.41452, 1.69 ) }
    dend_4 { pt3dadd( 55.9178, -2.23233, -6.82696, 1.69 ) }
    dend_4 { pt3dadd( 56.8961, -2.2669, -7.34029, 1.4 ) }
    dend_4 { pt3dadd( 57.4516, -2.28653, -7.63179, 1.4 ) }
    dend_4 { pt3dadd( 58.8077, -2.33445, -8.34334, 0.74 ) }
    dend_4 { pt3dadd( 59.6752, -2.36511, -8.79855, 0.74 ) }
    dend_4 { pt3dadd( 60.0659, -2.37892, -9.00358, 0.74 ) }
    dend_4 { pt3dadd( 60.8258, -2.76511, -9.58343, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 45/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -246.538, -100.957, -158.984, 0.29 ) }
    dend_48 { pt3dadd( -248.226, -101.119, -159.27, 0.29 ) }
    dend_48 { pt3dadd( -248.599, -101.148, -159.344, 1.11 ) }
    dend_48 { pt3dadd( -249.664, -101.25, -159.65, 1.11 ) }
    dend_48 { pt3dadd( -250.533, -101.36, -159.924, 0.37 ) }
    dend_48 { pt3dadd( -251.72, -101.528, -160.3, 1.84 ) }
    dend_48 { pt3dadd( -253.807, -101.858, -161.248, 0.07 ) }
    dend_48 { pt3dadd( -254.245, -101.917, -161.475, 1.18 ) }
    dend_48 { pt3dadd( -255.389, -102.083, -162.1, 1.18 ) }
    dend_48 { pt3dadd( -256.472, -102.275, -162.719, 0.44 ) }
    dend_48 { pt3dadd( -257.376, -102.448, -163.268, 1.33 ) }
    dend_48 { pt3dadd( -260.105, -102.882, -165.053, 1.25 ) }
    dend_48 { pt3dadd( -261.403, -103.058, -165.841, 0.29 ) }
    dend_48 { pt3dadd( -262.49, -103.16, -166.444, 0.29 ) }
    dend_48 { pt3dadd( -263.324, -103.206, -166.832, 0.29 ) }
    dend_48 { pt3dadd( -264.333, -103.189, -167.287, 1.4 ) }
    dend_48 { pt3dadd( -266.945, -103.142, -168.343, 0.66 ) }
    dend_48 { pt3dadd( -268.787, -103.084, -168.986, 0.66 ) }
    dend_48 { pt3dadd( -269.682, -103.047, -169.339, 0.88 ) }
    dend_48 { pt3dadd( -271.436, -102.961, -170.041, 0.88 ) }
    dend_48 { pt3dadd( -273.696, -102.796, -170.897, 0.44 ) }
    dend_48 { pt3dadd( -275.367, -102.695, -171.419, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -246.538, -100.957, -158.984, 0.07 ) }
    dend_47 { pt3dadd( -246.662, -99.8429, -158.06, 0.07 ) }
    dend_47 { pt3dadd( -246.761, -98.9473, -157.317, 0.07 ) }
    dend_47 { pt3dadd( -246.968, -97.0814, -155.769, 0.88 ) }
    dend_47 { pt3dadd( -247.047, -96.3765, -155.185, 0.59 ) }
    dend_47 { pt3dadd( -247.131, -95.6211, -154.558, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 73/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -86.8558, -100.919, -7.02317, 0.88 ) }
    dend_44 { pt3dadd( -88.2321, -101.874, -7.55522, 0.88 ) }
    dend_44 { pt3dadd( -88.8251, -102.297, -7.75482, 0.88 ) }
    dend_44 { pt3dadd( -89.3446, -102.709, -7.90279, 0.44 ) }
    dend_44 { pt3dadd( -89.8232, -103.096, -8.00563, 0.15 ) }
    dend_44 { pt3dadd( -90.173, -103.403, -8.06631, 0.15 ) }
    dend_44 { pt3dadd( -90.474, -103.676, -8.11135, 0.15 ) }
    dend_44 { pt3dadd( -90.5669, -103.773, -8.15338, 0.15 ) }
    dend_44 { pt3dadd( -90.9811, -104.258, -8.5196, 1.4 ) }
    dend_44 { pt3dadd( -91.4582, -104.966, -9.10256, 1.4 ) }
    dend_44 { pt3dadd( -91.7668, -105.455, -9.54104, 1.4 ) }
    dend_44 { pt3dadd( -91.8454, -105.587, -9.66912, 1.4 ) }
    dend_44 { pt3dadd( -93.1604, -107.919, -12.1171, 0.74 ) }
    dend_44 { pt3dadd( -93.545, -108.629, -12.9361, 0.44 ) }
    dend_44 { pt3dadd( -93.9225, -109.394, -13.9587, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 88/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -86.8558, -100.919, -7.02317, 0.22 ) }
    dend_43 { pt3dadd( -86.9333, -101.605, -7.19952, 0.22 ) }
    dend_43 { pt3dadd( -87.0073, -102.206, -7.3414, 0.22 ) }
    dend_43 { pt3dadd( -87.0959, -103.018, -7.51091, 0.22 ) }
    dend_43 { pt3dadd( -87.1519, -103.56, -7.61467, 1.4 ) }
    dend_43 { pt3dadd( -87.2452, -104.563, -7.78971, 0.15 ) }
    dend_43 { pt3dadd( -87.2766, -104.918, -7.84683, 0.15 ) }
    dend_43 { pt3dadd( -87.3332, -105.619, -7.9322, 0.81 ) }
    dend_43 { pt3dadd( -87.357, -106.102, -7.9835, 0.07 ) }
    dend_43 { pt3dadd( -87.3595, -106.309, -8.00324, 0.07 ) }
    dend_43 { pt3dadd( -87.3688, -106.759, -8.03111, 0.59 ) }
    dend_43 { pt3dadd( -87.3598, -107.048, -8.02469, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_43 { pt3dadd( -87.3511, -107.208, -8.02123, 0.29 ) }
    dend_43 { pt3dadd( -87.2517, -108.182, -8.005, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 60.8258, -2.76511, -9.58343, 1.84 ) }
    dend_5 { pt3dadd( 62.7339, -2.70086, -9.89539, 1.84 ) }
    dend_5 { pt3dadd( 63.978, -2.65054, -10.0502, 1.84 ) }
    dend_5 { pt3dadd( 65.3225, -2.60671, -10.1835, 1.47 ) }
    dend_5 { pt3dadd( 66.3686, -2.57398, -10.2678, 1.11 ) }
    dend_5 { pt3dadd( 67.465, -2.55948, -10.3407, 1.25 ) }
    dend_5 { pt3dadd( 68.6834, -2.57623, -10.4065, 1.55 ) }
    dend_5 { pt3dadd( 69.9529, -2.62735, -10.4065, 1.33 ) }
    dend_5 { pt3dadd( 71.0514, -2.68759, -10.4065, 1.33 ) }
    dend_5 { pt3dadd( 72.283, -2.76479, -10.4065, 1.77 ) }
    dend_5 { pt3dadd( 73.6154, -2.83765, -10.4065, 2.06 ) }
    dend_5 { pt3dadd( 75.4531, -2.89139, -10.4065, 1.47 ) }
    dend_5 { pt3dadd( 76.6468, -2.85904, -10.4065, 1.47 ) }
    dend_5 { pt3dadd( 77.9197, -2.72664, -10.4065, 1.47 ) }
    dend_5 { pt3dadd( 79.2291, -2.4943, -10.4065, 1.11 ) }
    dend_5 { pt3dadd( 80.4072, -2.23528, -10.4065, 1.11 ) }
    dend_5 { pt3dadd( 81.3945, -1.99126, -10.3708, 1.11 ) }
    dend_5 { pt3dadd( 82.7206, -1.66719, -10.2813, 1.11 ) }
    dend_5 { pt3dadd( 83.9825, -1.4296, -10.1672, 1.11 ) }
    dend_5 { pt3dadd( 85.7806, -1.12551, -9.97974, 1.11 ) }
    dend_5 { pt3dadd( 87.098, -0.960315, -9.82112, 1.11 ) }
    dend_5 { pt3dadd( 88.62, -0.879805, -9.61203, 1.77 ) }
    dend_5 { pt3dadd( 89.7898, -0.921215, -9.43066, 1.92 ) }
    dend_5 { pt3dadd( 91.4312, -1.14443, -9.13622, 2.87 ) }
    // Section: dend_10, id: dend_10, parent: dend_5 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 91.4312, -1.14443, -9.13622, 1.03 ) }
    dend_10 { pt3dadd( 93.5607, -1.86475, -9.65678, 1.03 ) }
    dend_10 { pt3dadd( 94.0279, -2.0156, -9.78145, 1.03 ) }
    dend_10 { pt3dadd( 94.5847, -2.21158, -9.92163, 1.03 ) }
    dend_10 { pt3dadd( 95.4366, -2.53868, -10.1208, 1.03 ) }
    dend_10 { pt3dadd( 96.5988, -3.05236, -10.3416, 1.03 ) }
    dend_10 { pt3dadd( 97.4727, -3.48945, -10.4805, 0.96 ) }
    dend_10 { pt3dadd( 98.2853, -3.96161, -10.6565, 0.96 ) }
    dend_10 { pt3dadd( 98.9186, -4.42269, -10.7422, 1.18 ) }
    dend_10 { pt3dadd( 99.4185, -4.83366, -10.7685, 1.18 ) }
    dend_10 { pt3dadd( 100.074, -5.36899, -10.805, 0.96 ) }
    dend_10 { pt3dadd( 100.651, -5.81845, -10.8399, 0.96 ) }
    dend_10 { pt3dadd( 101.275, -6.27129, -10.8919, 0.74 ) }
    dend_10 { pt3dadd( 102.307, -6.95684, -10.9942, 0.74 ) }
    dend_10 { pt3dadd( 103.375, -7.61442, -11.1109, 0.74 ) }
    dend_10 { pt3dadd( 108.417, -10.4257, -11.8471, 0.74 ) }
    dend_10 { pt3dadd( 109.626, -11.0607, -12.0708, 0.74 ) }
    dend_10 { pt3dadd( 110.361, -11.432, -12.2217, 1.18 ) }
    dend_10 { pt3dadd( 110.82, -11.6532, -12.324, 1.84 ) }
    dend_10 { pt3dadd( 111.141, -11.8041, -12.4088, 2.21 ) }
    dend_10 { pt3dadd( 113.634, -13.0179, -13.0539, 0.66 ) }
    dend_10 { pt3dadd( 114.832, -13.5763, -13.2335, 0.66 ) }
    dend_10 { pt3dadd( 115.414, -13.8665, -13.2269, 1.11 ) }
    dend_10 { pt3dadd( 115.797, -14.0655, -13.1559, 1.47 ) }
    dend_10 { pt3dadd( 116.87, -14.6456, -12.7565, 1.03 ) }
    dend_10 { pt3dadd( 118.402, -15.4909, -11.8751, 1.11 ) }
    dend_10 { pt3dadd( 120.388, -16.6063, -10.2823, 0.81 ) }
    dend_10 { pt3dadd( 120.86, -16.8607, -9.91098, 0.81 ) }
    dend_10 { pt3dadd( 121.237, -17.0583, -9.65536, 0.81 ) }
    dend_10 { pt3dadd( 121.773, -17.3309, -9.36363, 0.81 ) }
    dend_10 { pt3dadd( 122.582, -17.681, -9.05951, 1.11 ) }
    dend_10 { pt3dadd( 123.628, -18.0534, -8.92974, 1.77 ) }
    dend_10 { pt3dadd( 124.493, -18.3054, -8.91471, 1.33 ) }
    dend_10 { pt3dadd( 125.574, -18.5512, -8.88271, 0.96 ) }
    dend_10 { pt3dadd( 126.441, -18.6653, -8.78105, 0.96 ) }
    dend_10 { pt3dadd( 127.69, -18.7289, -8.60278, 1.4 ) }
    dend_10 { pt3dadd( 128.667, -18.7269, -8.44069, 1.4 ) }
    dend_10 { pt3dadd( 129.486, -18.6776, -8.27972, 0.52 ) }
    dend_10 { pt3dadd( 129.922, -18.6324, -8.17698, 0.52 ) }
    dend_10 { pt3dadd( 132.02, -18.3472, -7.55784, 1.92 ) }
    dend_10 { pt3dadd( 133.211, -18.1608, -7.11621, 1.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 91.4312, -1.14443, -9.13622, 0.96 ) }
    dend_6 { pt3dadd( 92.9698, -0.918225, -9.13622, 0.96 ) }
    dend_6 { pt3dadd( 94.16, -0.655575, -9.13622, 0.96 ) }
    dend_6 { pt3dadd( 95.2747, -0.293775, -9.13622, 0.96 ) }
    dend_6 { pt3dadd( 95.9086, 0.0298738, -9.13622, 0.66 ) }
    dend_6 { pt3dadd( 96.0853, 0.151547, -9.13622, 0.66 ) }
    dend_6 { pt3dadd( 96.3966, 0.416829, -9.13622, 0.66 ) }
    dend_6 { pt3dadd( 96.8963, 1.05171, -9.13622, 1.25 ) }
    dend_6 { pt3dadd( 97.3308, 1.74332, -9.13622, 1.69 ) }
    dend_6 { pt3dadd( 98.0312, 2.91412, -9.13622, 1.69 ) }
    dend_6 { pt3dadd( 98.4235, 3.51866, -9.13622, 1.69 ) }
    dend_6 { pt3dadd( 98.9748, 4.24636, -9.13622, 0.74 ) }
    dend_6 { pt3dadd( 99.3593, 4.63273, -9.13622, 0.74 ) }
    dend_6 { pt3dadd( 99.9391, 4.98791, -9.13622, 0.74 ) }
    dend_6 { pt3dadd( 100.644, 5.19841, -9.13622, 0.74 ) }
    dend_6 { pt3dadd( 101.152, 5.24605, -9.13622, 0.74 ) }
    dend_6 { pt3dadd( 101.857, 5.25466, -9.19585, 0.74 ) }
    dend_6 { pt3dadd( 102.798, 5.20361, -9.33084, 0.74 ) }
    dend_6 { pt3dadd( 103.455, 5.13531, -9.45561, 0.74 ) }
    dend_6 { pt3dadd( 104.211, 5.0205, -9.63422, 0.74 ) }
    dend_6 { pt3dadd( 104.792, 4.92979, -9.79404, 0.74 ) }
    dend_6 { pt3dadd( 106.303, 4.8012, -10.2565, 0.74 ) }
    dend_6 { pt3dadd( 106.754, 4.83525, -10.446, 0.74 ) }
    dend_6 { pt3dadd( 107.141, 4.94599, -10.6449, 0.74 ) }
    dend_6 { pt3dadd( 107.531, 5.15123, -10.8428, 0.74 ) }
    dend_6 { pt3dadd( 108.143, 5.60601, -11.117, 0.74 ) }
    dend_6 { pt3dadd( 109.113, 6.39915, -11.4548, 0.74 ) }
    dend_6 { pt3dadd( 110.316, 7.42769, -11.7612, 1.18 ) }
    dend_6 { pt3dadd( 110.998, 7.96986, -11.9074, 1.92 ) }
    dend_6 { pt3dadd( 112.154, 8.82619, -12.1188, 1.92 ) }
    dend_6 { pt3dadd( 113.157, 9.4887, -12.268, 1.03 ) }
    dend_6 { pt3dadd( 114.079, 9.99539, -12.369, 0.74 ) }
    dend_6 { pt3dadd( 114.766, 10.2413, -12.4069, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_6 { pt3dadd( 115.993, 10.463, -12.396, 0.66 ) }
    dend_6 { pt3dadd( 116.373, 10.4597, -12.3953, 0.44 ) }
    dend_6 { pt3dadd( 117.174, 10.29, -12.4003, 1.4 ) }
    dend_6 { pt3dadd( 117.612, 10.1401, -12.4064, 1.84 ) }
    dend_6 { pt3dadd( 118.785, 9.70017, -12.4312, 1.18 ) }
    dend_6 { pt3dadd( 119.666, 9.38517, -12.4508, 0.81 ) }
    dend_6 { pt3dadd( 120.385, 9.19798, -12.4665, 0.81 ) }
    dend_6 { pt3dadd( 120.986, 9.10964, -12.4783, 0.81 ) }
    dend_6 { pt3dadd( 121.701, 9.07446, -12.4905, 0.81 ) }
    dend_6 { pt3dadd( 123.02, 9.08961, -12.5089, 1.62 ) }
    dend_6 { pt3dadd( 124.171, 9.15594, -12.5207, 1.62 ) }
    dend_6 { pt3dadd( 125.36, 9.233, -12.5275, 0.81 ) }
    dend_6 { pt3dadd( 126.24, 9.29322, -12.5275, 0.59 ) }
    dend_6 { pt3dadd( 126.973, 9.34349, -12.5275, 0.59 ) }
    dend_6 { pt3dadd( 127.701, 9.39758, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 128.65, 9.49699, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 129.386, 9.61764, -12.5275, 0.66 ) }
    dend_6 { pt3dadd( 130.179, 9.83473, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 130.85, 10.1649, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 131.458, 10.5711, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 132.027, 10.9951, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 132.313, 11.222, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 133.077, 11.7806, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 133.731, 12.1413, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 134.211, 12.3096, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 134.948, 12.427, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 135.176, 12.4345, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 135.771, 12.4165, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 136.364, 12.3836, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 136.731, 12.3696, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 137.385, 12.4071, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 137.649, 12.457, -12.5275, 0.96 ) }
    dend_6 { pt3dadd( 138.194, 12.6196, -12.5275, 1.25 ) }
    dend_6 { pt3dadd( 138.852, 12.9268, -12.4964, 1.25 ) }
    dend_6 { pt3dadd( 138.922, 12.9687, -12.4905, 1.55 ) }
    dend_6 { pt3dadd( 139.28, 13.1889, -12.4556, 1.55 ) }
    dend_6 { pt3dadd( 139.96, 13.5425, -12.3896, 1.55 ) }
    dend_6 { pt3dadd( 140.093, 13.5948, -12.3777, 1.55 ) }
    dend_6 { pt3dadd( 141.197, 13.8878, -12.2871, 0.81 ) }
    dend_6 { pt3dadd( 142.017, 14.0138, -12.2287, 0.81 ) }
    dend_6 { pt3dadd( 143.387, 14.1033, -12.1486, 0.81 ) }
    dend_6 { pt3dadd( 144.608, 14.0708, -12.1634, 0.96 ) }
    dend_6 { pt3dadd( 145.409, 13.9992, -12.2154, 1.18 ) }
    dend_6 { pt3dadd( 146.26, 13.8934, -12.3067, 1.47 ) }
    dend_6 { pt3dadd( 147.125, 13.7487, -12.4438, 1.4 ) }
    dend_6 { pt3dadd( 148.123, 13.5654, -12.6396, 1.03 ) }
    dend_6 { pt3dadd( 149.675, 13.3176, -13.0275, 0.15 ) }
    dend_6 { pt3dadd( 150.243, 13.2898, -13.2001, 0.15 ) }
    dend_6 { pt3dadd( 150.534, 13.3162, -13.2972, 0.44 ) }
    dend_6 { pt3dadd( 151.33, 13.548, -13.5423, 0.44 ) }
    dend_6 { pt3dadd( 151.604, 13.6838, -13.6315, 0.44 ) }
    dend_6 { pt3dadd( 152.082, 13.9538, -13.7659, 0.44 ) }
    dend_6 { pt3dadd( 152.497, 14.2021, -13.8522, 0.74 ) }
    dend_6 { pt3dadd( 153.111, 14.5802, -13.9725, 1.11 ) }
    dend_6 { pt3dadd( 153.959, 15.0974, -14.1256, 1.55 ) }
    dend_6 { pt3dadd( 155.719, 16.0894, -14.4137, 0.88 ) }
    dend_6 { pt3dadd( 156.563, 16.5165, -14.5375, 0.88 ) }
    dend_6 { pt3dadd( 158.021, 17.2028, -14.7703, 1.69 ) }
    dend_6 { pt3dadd( 159.0, 17.6255, -14.9289, 0.88 ) }
    dend_6 { pt3dadd( 159.724, 17.8838, -15.0417, 0.88 ) }
    dend_6 { pt3dadd( 160.647, 18.1402, -15.1667, 0.88 ) }
    dend_6 { pt3dadd( 162.006, 18.4424, -15.3011, 0.88 ) }
    dend_6 { pt3dadd( 163.105, 18.6803, -15.4162, 1.47 ) }
    dend_6 { pt3dadd( 164.01, 18.8951, -15.5086, 1.47 ) }
    dend_6 { pt3dadd( 165.041, 19.2147, -15.6013, 1.11 ) }
    dend_6 { pt3dadd( 166.173, 19.7091, -15.6838, 1.25 ) }
    dend_6 { pt3dadd( 167.333, 20.2971, -15.7391, 1.25 ) }
    dend_6 { pt3dadd( 168.056, 20.7016, -15.7567, 1.25 ) }
    dend_6 { pt3dadd( 169.454, 21.4658, -15.7567, 0.66 ) }
    dend_6 { pt3dadd( 170.685, 22.117, -15.7567, 1.4 ) }
    dend_6 { pt3dadd( 171.897, 22.7742, -15.7567, 0.96 ) }
    dend_6 { pt3dadd( 174.099, 23.9554, -15.7567, 0.59 ) }
    dend_6 { pt3dadd( 174.755, 24.2991, -15.7567, 0.59 ) }
    dend_6 { pt3dadd( 176.158, 25.0532, -15.809, 0.59 ) }
    dend_6 { pt3dadd( 176.813, 25.4057, -15.8561, 0.59 ) }
    dend_6 { pt3dadd( 178.278, 26.1785, -16.0077, 0.59 ) }
    dend_6 { pt3dadd( 179.309, 26.6826, -16.1428, 1.03 ) }
    dend_6 { pt3dadd( 179.924, 26.9502, -16.3077, 1.03 ) }
    dend_6 { pt3dadd( 181.607, 27.6153, -16.9325, 1.03 ) }
    dend_6 { pt3dadd( 182.496, 27.9489, -17.3463, 1.03 ) }
    dend_6 { pt3dadd( 183.328, 28.1983, -17.755, 1.4 ) }
    dend_6 { pt3dadd( 184.458, 28.4338, -18.2685, 1.4 ) }
    dend_6 { pt3dadd( 187.028, 28.8912, -19.3455, 0.44 ) }
    dend_6 { pt3dadd( 188.331, 29.0893, -19.8108, 0.44 ) }
    dend_6 { pt3dadd( 188.801, 29.1478, -19.9424, 0.74 ) }
    dend_6 { pt3dadd( 190.502, 29.3686, -20.3427, 0.74 ) }
    dend_6 { pt3dadd( 192.64, 29.5593, -20.8304, 0.74 ) }
    dend_6 { pt3dadd( 192.945, 29.5668, -20.8886, 1.18 ) }
    dend_6 { pt3dadd( 194.397, 29.4701, -21.1165, 1.18 ) }
    dend_6 { pt3dadd( 195.396, 29.2808, -21.3315, 1.18 ) }
    dend_6 { pt3dadd( 195.94, 29.1395, -21.5171, 1.18 ) }
    dend_6 { pt3dadd( 197.534, 28.6252, -22.2402, 0.29 ) }
    dend_6 { pt3dadd( 198.302, 28.3723, -22.629, 0.29 ) }
    dend_6 { pt3dadd( 199.368, 28.096, -23.1447, 1.62 ) }
    dend_6 { pt3dadd( 200.377, 27.9543, -23.5923, 1.62 ) }
    dend_6 { pt3dadd( 202.196, 27.9356, -24.277, 0.88 ) }
    dend_6 { pt3dadd( 203.814, 28.1136, -24.753, 0.88 ) }
    dend_6 { pt3dadd( 204.789, 28.334, -24.957, 0.88 ) }
    dend_6 { pt3dadd( 206.03, 28.7266, -25.15, 0.88 ) }
    dend_6 { pt3dadd( 207.564, 29.2968, -25.2976, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( 208.75, 29.797, -25.3676, 2.36 ) }
    dend_6 { pt3dadd( 210.198, 30.4265, -25.3718, 1.18 ) }
    dend_6 { pt3dadd( 211.379, 30.9712, -25.3739, 1.69 ) }
    dend_6 { pt3dadd( 212.79, 31.5927, -25.3741, 0.07 ) }
    dend_6 { pt3dadd( 213.417, 31.8362, -25.3726, 0.07 ) }
    dend_6 { pt3dadd( 213.924, 31.9869, -25.3695, 0.07 ) }
    dend_6 { pt3dadd( 214.994, 32.2081, -25.3586, 0.07 ) }
    dend_6 { pt3dadd( 215.251, 32.2458, -25.3547, 0.59 ) }
    dend_6 { pt3dadd( 216.55, 32.3804, -25.3452, 0.88 ) }
    dend_6 { pt3dadd( 217.444, 32.4479, -25.4385, 1.25 ) }
    dend_6 { pt3dadd( 218.289, 32.4887, -25.5704, 0.59 ) }
    dend_6 { pt3dadd( 218.653, 32.512, -25.6368, 0.59 ) }
    dend_6 { pt3dadd( 219.597, 32.5779, -25.8312, 1.33 ) }
    dend_6 { pt3dadd( 221.097, 32.6323, -26.1551, 2.28 ) }
    dend_6 { pt3dadd( 223.239, 32.6399, -26.6583, 0.74 ) }
    dend_6 { pt3dadd( 224.067, 32.6317, -26.9512, 0.74 ) }
    dend_6 { pt3dadd( 224.959, 32.6198, -27.3436, 1.25 ) }
    dend_6 { pt3dadd( 225.56, 32.6237, -27.6398, 1.25 ) }
    dend_6 { pt3dadd( 226.344, 32.6721, -28.0596, 1.25 ) }
    dend_6 { pt3dadd( 226.476, 32.6971, -28.1321, 1.25 ) }
    dend_6 { pt3dadd( 228.843, 33.5248, -29.3097, 0.96 ) }
    dend_6 { pt3dadd( 229.804, 33.9642, -29.7712, 0.96 ) }
    dend_6 { pt3dadd( 230.509, 34.3249, -30.087, 0.96 ) }
    dend_6 { pt3dadd( 231.365, 34.8143, -30.406, 0.96 ) }
    dend_6 { pt3dadd( 232.441, 35.4575, -30.7062, 0.96 ) }
    dend_6 { pt3dadd( 233.035, 35.796, -30.8023, 0.96 ) }
    dend_6 { pt3dadd( 233.591, 36.0988, -30.8023, 0.88 ) }
    dend_6 { pt3dadd( 234.182, 36.3467, -30.8023, 0.88 ) }
    dend_6 { pt3dadd( 235.356, 36.5636, -30.8647, 0.88 ) }
    dend_6 { pt3dadd( 236.018, 36.5505, -30.931, 0.88 ) }
    dend_6 { pt3dadd( 236.574, 36.476, -31.0035, 0.88 ) }
    dend_6 { pt3dadd( 236.769, 36.4414, -31.0318, 0.88 ) }
    dend_6 { pt3dadd( 237.753, 36.2313, -31.1838, 0.88 ) }
    dend_6 { pt3dadd( 239.182, 35.9068, -31.4038, 0.88 ) }
    dend_6 { pt3dadd( 239.772, 35.7764, -31.5461, 0.88 ) }
    dend_6 { pt3dadd( 240.761, 35.5605, -31.8321, 0.88 ) }
    dend_6 { pt3dadd( 241.521, 35.397, -32.0727, 0.88 ) }
    dend_6 { pt3dadd( 242.325, 35.2239, -32.3326, 1.69 ) }
    dend_6 { pt3dadd( 243.149, 35.0516, -32.6033, 1.69 ) }
    dend_6 { pt3dadd( 245.048, 34.6577, -33.1698, 0.74 ) }
    dend_6 { pt3dadd( 245.742, 34.5133, -33.3718, 0.74 ) }
    dend_6 { pt3dadd( 246.054, 34.4612, -33.4596, 0.74 ) }
    dend_6 { pt3dadd( 246.915, 34.4176, -33.6722, 0.74 ) }
    dend_6 { pt3dadd( 247.228, 34.4478, -33.7331, 0.74 ) }
    dend_6 { pt3dadd( 248.464, 34.7591, -33.8749, 0.74 ) }
    dend_6 { pt3dadd( 249.205, 35.0596, -33.8839, 0.74 ) }
    dend_6 { pt3dadd( 249.814, 35.3583, -33.8909, 0.74 ) }
    dend_6 { pt3dadd( 250.81, 35.8494, -33.9015, 0.74 ) }
    dend_6 { pt3dadd( 251.269, 36.0644, -33.906, 0.74 ) }
    dend_6 { pt3dadd( 251.798, 36.2727, -33.9102, 0.74 ) }
    dend_6 { pt3dadd( 252.772, 36.5728, -33.9158, 1.47 ) }
    dend_6 { pt3dadd( 253.965, 36.7634, -33.9676, 2.43 ) }
    dend_6 { pt3dadd( 254.931, 36.7526, -34.0366, 1.69 ) }
    dend_6 { pt3dadd( 255.593, 36.6464, -34.0315, 1.47 ) }
    dend_6 { pt3dadd( 256.317, 36.4691, -33.9877, 1.11 ) }
    dend_6 { pt3dadd( 256.809, 36.3057, -33.939, 1.11 ) }
    dend_6 { pt3dadd( 258.147, 35.7723, -33.7651, 0.15 ) }
    dend_6 { pt3dadd( 259.427, 35.2157, -33.5689, 2.36 ) }
    dend_6 { pt3dadd( 261.553, 34.2696, -33.2123, 0.88 ) }
    dend_6 { pt3dadd( 262.275, 33.9428, -33.0838, 0.88 ) }
    dend_6 { pt3dadd( 263.565, 33.3189, -32.8413, 0.88 ) }
    dend_6 { pt3dadd( 263.882, 33.1481, -32.7777, 0.88 ) }
    dend_6 { pt3dadd( 264.547, 32.7233, -32.6325, 0.88 ) }
    dend_6 { pt3dadd( 265.195, 32.2099, -32.5352, 0.88 ) }
    dend_6 { pt3dadd( 265.743, 31.6733, -32.5272, 0.52 ) }
    dend_6 { pt3dadd( 266.252, 31.0785, -32.519, 1.33 ) }
    dend_6 { pt3dadd( 266.73, 30.4464, -32.5109, 1.33 ) }
    dend_6 { pt3dadd( 267.311, 29.6361, -32.5025, 0.37 ) }
    dend_6 { pt3dadd( 267.713, 29.0585, -32.498, 1.33 ) }
    dend_6 { pt3dadd( 268.125, 28.4539, -32.4954, 1.33 ) }
    dend_6 { pt3dadd( 268.322, 28.1572, -32.4954, 1.33 ) }
    dend_6 { pt3dadd( 268.661, 27.6647, -32.4954, 1.33 ) }
    dend_6 { pt3dadd( 269.236, 26.8443, -32.4954, 0.96 ) }
    dend_6 { pt3dadd( 269.594, 26.3083, -32.4954, 0.96 ) }
    dend_6 { pt3dadd( 269.967, 25.6601, -32.4922, 0.29 ) }
    dend_6 { pt3dadd( 270.193, 25.234, -32.4883, 0.29 ) }
    dend_6 { pt3dadd( 270.287, 25.0445, -32.4859, 0.29 ) }
    dend_6 { pt3dadd( 270.491, 24.6054, -32.4797, 0.88 ) }
    dend_6 { pt3dadd( 270.77, 24.0467, -32.4708, 1.33 ) }
    dend_6 { pt3dadd( 271.08, 23.5633, -32.4628, 1.33 ) }
    dend_6 { pt3dadd( 271.39, 23.2088, -32.4567, 1.33 ) }
    dend_6 { pt3dadd( 272.138, 22.5512, -32.4454, 0.74 ) }
    dend_6 { pt3dadd( 272.683, 22.171, -32.4397, 0.74 ) }
    dend_6 { pt3dadd( 273.261, 21.872, -32.436, 0.74 ) }
    dend_6 { pt3dadd( 274.1, 21.5273, -32.4336, 0.74 ) }
    dend_6 { pt3dadd( 274.733, 21.3365, -32.4336, 0.74 ) }
    dend_6 { pt3dadd( 275.462, 21.1813, -32.4336, 0.96 ) }
    dend_6 { pt3dadd( 276.59, 21.016, -32.4336, 1.92 ) }
    dend_6 { pt3dadd( 277.984, 20.831, -32.4336, 2.43 ) }
    dend_6 { pt3dadd( 278.801, 20.7211, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 280.188, 20.5407, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 280.805, 20.4496, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 281.681, 20.3021, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 282.61, 20.1011, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 283.097, 19.9466, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 284.544, 19.3256, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 285.055, 19.0522, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 285.779, 18.6416, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 286.41, 18.2855, -32.4336, 0.66 ) }
    dend_6 { pt3dadd( 287.038, 17.9235, -32.4336, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( 287.992, 17.3273, -32.4336, 1.62 ) }
    dend_6 { pt3dadd( 288.856, 16.7777, -32.4336, 1.62 ) }
    dend_6 { pt3dadd( 289.686, 16.3056, -32.4336, 1.62 ) }
    dend_6 { pt3dadd( 290.552, 15.8597, -32.4336, 1.25 ) }
    dend_6 { pt3dadd( 291.592, 15.375, -32.4336, 0.88 ) }
    dend_6 { pt3dadd( 292.292, 15.0783, -32.4336, 0.88 ) }
    dend_6 { pt3dadd( 293.118, 14.7401, -32.4336, 1.84 ) }
    dend_6 { pt3dadd( 294.207, 14.3206, -32.6062, 1.03 ) }
    dend_6 { pt3dadd( 295.008, 14.0417, -32.8349, 1.03 ) }
    dend_6 { pt3dadd( 296.076, 13.7332, -33.2377, 1.03 ) }
    dend_6 { pt3dadd( 296.717, 13.5954, -33.5174, 0.74 ) }
    dend_6 { pt3dadd( 297.771, 13.4338, -33.9962, 0.74 ) }
    dend_6 { pt3dadd( 300.827, 13.0681, -35.463, 0.74 ) }
    dend_6 { pt3dadd( 301.691, 12.9883, -35.8908, 0.74 ) }
    dend_6 { pt3dadd( 302.148, 12.9522, -36.1036, 0.74 ) }
    dend_6 { pt3dadd( 303.004, 12.898, -36.4544, 0.74 ) }
    dend_6 { pt3dadd( 304.377, 12.8463, -36.8909, 0.74 ) }
    dend_6 { pt3dadd( 304.902, 12.8501, -36.9889, 0.74 ) }
    dend_6 { pt3dadd( 305.431, 12.8831, -37.0331, 0.96 ) }
    dend_6 { pt3dadd( 306.672, 12.9856, -37.2083, 0.96 ) }
    dend_6 { pt3dadd( 307.494, 13.064, -37.3637, 0.66 ) }
    dend_6 { pt3dadd( 308.145, 13.1589, -37.5178, 1.25 ) }
    dend_6 { pt3dadd( 308.745, 13.2949, -37.6784, 1.47 ) }
    dend_6 { pt3dadd( 310.379, 13.7412, -38.1151, 0.59 ) }
    dend_6 { pt3dadd( 311.161, 13.954, -38.3167, 0.59 ) }
    dend_6 { pt3dadd( 311.597, 14.0587, -38.4517, 0.96 ) }
    dend_6 { pt3dadd( 312.387, 14.1787, -38.7032, 1.4 ) }
    dend_6 { pt3dadd( 313.456, 14.2169, -39.023, 0.59 ) }
    dend_6 { pt3dadd( 314.095, 14.1752, -39.205, 0.59 ) }
    dend_6 { pt3dadd( 315.148, 14.0086, -39.4676, 1.92 ) }
    dend_6 { pt3dadd( 317.065, 13.6935, -39.969, 0.07 ) }
    dend_6 { pt3dadd( 317.889, 13.5231, -40.2419, 0.07 ) }
    dend_6 { pt3dadd( 318.818, 13.2981, -40.5938, 1.84 ) }
    dend_6 { pt3dadd( 319.986, 12.9814, -41.0782, 0.96 ) }
    dend_6 { pt3dadd( 320.85, 12.7518, -41.4648, 0.96 ) }
    dend_6 { pt3dadd( 321.749, 12.5022, -41.8667, 0.96 ) }
    dend_6 { pt3dadd( 323.429, 12.0177, -42.8713, 0.88 ) }
    dend_6 { pt3dadd( 324.071, 11.8376, -43.327, 0.88 ) }
    dend_6 { pt3dadd( 324.513, 11.7208, -43.6533, 1.11 ) }
    dend_6 { pt3dadd( 325.478, 11.4882, -44.4089, 1.33 ) }
    dend_6 { pt3dadd( 326.534, 11.271, -45.2248, 1.33 ) }
    dend_6 { pt3dadd( 329.176, 10.8191, -47.2194, 0.88 ) }
    dend_6 { pt3dadd( 330.479, 10.6849, -48.1064, 1.18 ) }
    dend_6 { pt3dadd( 331.668, 10.6092, -48.897, 0.81 ) }
    dend_6 { pt3dadd( 333.115, 10.5312, -49.8498, 1.92 ) }
    dend_6 { pt3dadd( 334.126, 10.4714, -50.4868, 0.88 ) }
    dend_6 { pt3dadd( 335.604, 10.3739, -51.353, 0.88 ) }
    dend_6 { pt3dadd( 337.02, 10.2289, -52.038, 0.88 ) }
    dend_6 { pt3dadd( 337.653, 10.1348, -52.3568, 1.55 ) }
    dend_6 { pt3dadd( 339.536, 9.68207, -53.3511, 0.07 ) }
    dend_6 { pt3dadd( 340.044, 9.50766, -53.6057, 0.66 ) }
    dend_6 { pt3dadd( 340.544, 9.29725, -53.8663, 1.25 ) }
    dend_6 { pt3dadd( 341.152, 9.03026, -54.2021, 1.25 ) }
    dend_6 { pt3dadd( 341.814, 8.75286, -54.6139, 0.22 ) }
    dend_6 { pt3dadd( 342.841, 8.4031, -55.1633, 0.22 ) }
    dend_6 { pt3dadd( 343.307, 8.32691, -55.3612, 0.96 ) }
    dend_6 { pt3dadd( 343.678, 8.32471, -55.5034, 0.22 ) }
    dend_6 { pt3dadd( 345.247, 8.53273, -55.9968, 0.22 ) }
    dend_6 { pt3dadd( 345.894, 8.70224, -56.1168, 1.11 ) }
    dend_6 { pt3dadd( 347.116, 9.10036, -56.1885, 1.11 ) }
    dend_6 { pt3dadd( 347.714, 9.29191, -56.1554, 1.11 ) }
    dend_6 { pt3dadd( 348.206, 9.43962, -56.1113, 1.18 ) }
    dend_6 { pt3dadd( 348.626, 9.55459, -56.0592, 0.29 ) }
    dend_6 { pt3dadd( 349.64, 9.7979, -55.9087, 0.29 ) }
    dend_6 { pt3dadd( 350.298, 9.9599, -55.8698, 0.88 ) }
    dend_6 { pt3dadd( 350.655, 10.0449, -55.8811, 0.29 ) }
    dend_6 { pt3dadd( 351.059, 10.1442, -55.8959, 0.29 ) }
    dend_6 { pt3dadd( 351.669, 10.2953, -55.9197, 1.62 ) }
    dend_6 { pt3dadd( 352.351, 10.4436, -55.9465, 1.62 ) }
    dend_6 { pt3dadd( 353.18, 10.5811, -55.9774, 0.07 ) }
    dend_6 { pt3dadd( 353.945, 10.6627, -56.0019, 0.07 ) }
    dend_6 { pt3dadd( 354.669, 10.6817, -56.021, 0.07 ) }
    dend_6 { pt3dadd( 355.331, 10.6409, -56.0627, 1.62 ) }
    dend_6 { pt3dadd( 356.207, 10.5172, -56.1437, 1.62 ) }
    dend_6 { pt3dadd( 357.082, 10.3316, -56.245, 0.66 ) }
    dend_6 { pt3dadd( 357.781, 10.1399, -56.3457, 0.66 ) }
    dend_6 { pt3dadd( 358.366, 9.95675, -56.4411, 0.96 ) }
    dend_6 { pt3dadd( 359.232, 9.67171, -56.5901, 0.29 ) }
    dend_6 { pt3dadd( 359.715, 9.52615, -56.6736, 0.29 ) }
    dend_6 { pt3dadd( 360.295, 9.37212, -56.7272, 0.29 ) }
    dend_6 { pt3dadd( 360.987, 9.1986, -56.733, 0.29 ) }
    dend_6 { pt3dadd( 361.402, 9.12216, -56.7034, 0.29 ) }
    dend_6 { pt3dadd( 362.207, 8.98446, -56.5946, 1.03 ) }
    dend_6 { pt3dadd( 362.695, 8.87261, -56.5015, 1.47 ) }
    dend_6 { pt3dadd( 363.841, 8.45348, -56.2728, 0.15 ) }
    dend_6 { pt3dadd( 364.284, 8.22044, -56.1352, 0.15 ) }
    dend_6 { pt3dadd( 365.036, 7.71628, -55.841, 0.15 ) }
    dend_6 { pt3dadd( 365.602, 7.26861, -55.5925, 0.15 ) }
    dend_6 { pt3dadd( 366.544, 6.42977, -55.1579, 2.06 ) }
    dend_6 { pt3dadd( 367.483, 5.53249, -54.7354, 1.25 ) }
    dend_6 { pt3dadd( 368.624, 4.3965, -54.2709, 0.66 ) }
    dend_6 { pt3dadd( 369.077, 3.95843, -54.0872, 0.66 ) }
    dend_6 { pt3dadd( 369.576, 3.52462, -53.9046, 0.66 ) }
    dend_6 { pt3dadd( 370.137, 3.09908, -53.7065, 0.66 ) }
    dend_6 { pt3dadd( 370.558, 2.84643, -53.5789, 0.66 ) }
    dend_6 { pt3dadd( 371.095, 2.62736, -53.4777, 0.66 ) }
    dend_6 { pt3dadd( 371.689, 2.42813, -53.4777, 0.66 ) }
    dend_6 { pt3dadd( 372.755, 2.12262, -53.4777, 1.47 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 133.211, -18.1608, -7.11621, 0.66 ) }
    dend_12 { pt3dadd( 133.618, -19.9958, -3.37604, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_12 { pt3dadd( 133.744, -20.4655, -2.49231, 0.66 ) }
    dend_12 { pt3dadd( 133.811, -20.6819, -2.09181, 0.81 ) }
    dend_12 { pt3dadd( 133.91, -20.9546, -1.58423, 0.81 ) }
    dend_12 { pt3dadd( 133.975, -21.0516, -1.36526, 0.81 ) }
    dend_12 { pt3dadd( 134.107, -21.1702, -1.04442, 0.81 ) }
    dend_12 { pt3dadd( 134.268, -21.1885, -0.901298, 0.81 ) }
    dend_12 { pt3dadd( 134.62, -21.1946, -0.637623, 0.81 ) }
    dend_12 { pt3dadd( 135.015, -21.197, -0.371579, 0.81 ) }
    dend_12 { pt3dadd( 136.789, -21.2441, 0.673311, 0.81 ) }
    dend_12 { pt3dadd( 137.345, -21.2814, 0.965401, 0.81 ) }
    dend_12 { pt3dadd( 137.984, -21.3583, 1.26085, 1.11 ) }
    dend_12 { pt3dadd( 138.792, -21.508, 1.57956, 1.4 ) }
    dend_12 { pt3dadd( 139.535, -21.7145, 1.83202, 1.55 ) }
    dend_12 { pt3dadd( 140.351, -22.0178, 2.04457, 1.25 ) }
    dend_12 { pt3dadd( 140.936, -22.2881, 2.13166, 1.03 ) }
    dend_12 { pt3dadd( 141.659, -22.658, 2.23509, 1.03 ) }
    dend_12 { pt3dadd( 142.242, -22.9537, 2.31522, 1.03 ) }
    dend_12 { pt3dadd( 143.028, -23.3225, 2.4221, 0.96 ) }
    dend_12 { pt3dadd( 143.924, -23.6963, 2.53455, 0.88 ) }
    dend_12 { pt3dadd( 144.978, -24.072, 2.65233, 0.81 ) }
    dend_12 { pt3dadd( 145.686, -24.3037, 2.72206, 0.88 ) }
    dend_12 { pt3dadd( 146.74, -24.6047, 2.81922, 0.88 ) }
    dend_12 { pt3dadd( 147.543, -24.7842, 2.88396, 1.11 ) }
    dend_12 { pt3dadd( 148.644, -24.9391, 2.94312, 1.11 ) }
    dend_12 { pt3dadd( 149.005, -24.955, 2.96314, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 25/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 133.211, -18.1608, -7.11621, 0.66 ) }
    dend_11 { pt3dadd( 134.311, -17.6636, -2.98621, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_6 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 372.755, 2.12262, -53.4777, 0.22 ) }
    dend_9 { pt3dadd( 373.205, 1.8198, -53.4737, 0.22 ) }
    dend_9 { pt3dadd( 374.296, 0.976585, -53.2265, 0.22 ) }
    dend_9 { pt3dadd( 375.208, 0.286416, -52.9552, 1.62 ) }
    dend_9 { pt3dadd( 375.699, -0.0688941, -52.8043, 0.15 ) }
    dend_9 { pt3dadd( 376.121, -0.355549, -52.6761, 0.15 ) }
    dend_9 { pt3dadd( 376.839, -0.844595, -52.4363, 1.47 ) }
    dend_9 { pt3dadd( 378.593, -2.03781, -51.7777, 0.37 ) }
    dend_9 { pt3dadd( 379.803, -2.87451, -51.2705, 0.37 ) }
    dend_9 { pt3dadd( 380.412, -3.31723, -51.0001, 1.25 ) }
    dend_9 { pt3dadd( 380.814, -3.6141, -50.8226, 1.77 ) }
    dend_9 { pt3dadd( 381.868, -4.4086, -50.3776, 0.07 ) }
    dend_9 { pt3dadd( 382.447, -4.85585, -50.1715, 0.88 ) }
    dend_9 { pt3dadd( 382.831, -5.15138, -50.0945, 0.44 ) }
    dend_9 { pt3dadd( 383.175, -5.44457, -50.031, 0.44 ) }
    dend_9 { pt3dadd( 383.413, -5.65246, -50.0069, 0.96 ) }
    dend_9 { pt3dadd( 383.693, -5.88927, -50.0026, 0.29 ) }
    dend_9 { pt3dadd( 384.469, -6.48551, -50.0653, 0.29 ) }
    dend_9 { pt3dadd( 385.065, -6.95123, -50.1212, 1.18 ) }
    dend_9 { pt3dadd( 385.524, -7.3261, -50.1666, 1.18 ) }
    dend_9 { pt3dadd( 386.187, -7.87521, -50.232, 0.44 ) }
    dend_9 { pt3dadd( 386.472, -8.10239, -50.2585, 0.44 ) }
    dend_9 { pt3dadd( 387.132, -8.61357, -50.3161, 0.96 ) }
    dend_9 { pt3dadd( 387.597, -8.9628, -50.3509, 0.15 ) }
    dend_9 { pt3dadd( 388.278, -9.41273, -50.3886, 0.15 ) }
    dend_9 { pt3dadd( 388.861, -9.73357, -50.468, 0.15 ) }
    dend_9 { pt3dadd( 389.47, -9.9909, -50.5822, 0.88 ) }
    dend_9 { pt3dadd( 389.774, -10.0885, -50.6529, 1.25 ) }
    dend_9 { pt3dadd( 390.625, -10.2781, -50.8684, 0.37 ) }
    dend_9 { pt3dadd( 391.265, -10.4085, -51.0226, 0.07 ) }
    dend_9 { pt3dadd( 392.834, -10.6781, -51.3817, 1.33 ) }
    dend_9 { pt3dadd( 393.476, -10.7721, -51.5191, 0.37 ) }
    dend_9 { pt3dadd( 394.482, -10.895, -51.7117, 0.37 ) }
    dend_9 { pt3dadd( 395.213, -10.9693, -51.8288, 1.47 ) }
    dend_9 { pt3dadd( 396.521, -11.0755, -51.9877, 0.22 ) }
    dend_9 { pt3dadd( 397.239, -11.1381, -52.0512, 0.22 ) }
    dend_9 { pt3dadd( 397.913, -11.1875, -52.0673, 1.11 ) }
    dend_9 { pt3dadd( 398.443, -11.2136, -52.0936, 0.29 ) }
    dend_9 { pt3dadd( 399.024, -11.229, -52.1393, 0.29 ) }
    dend_9 { pt3dadd( 399.336, -11.2416, -52.173, 0.74 ) }
    dend_9 { pt3dadd( 399.908, -11.2756, -52.2522, 0.07 ) }
    dend_9 { pt3dadd( 400.581, -11.4165, -52.2877, 0.07 ) }
    dend_9 { pt3dadd( 401.145, -11.578, -52.2853, 0.96 ) }
    dend_9 { pt3dadd( 401.565, -11.7059, -52.2756, 0.15 ) }
    dend_9 { pt3dadd( 402.023, -11.8534, -52.2533, 0.15 ) }
    dend_9 { pt3dadd( 402.369, -11.9705, -52.2253, 0.59 ) }
    dend_9 { pt3dadd( 404.518, -12.7066, -51.9438, 0.07 ) }
    dend_9 { pt3dadd( 405.552, -13.0717, -51.7893, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 75/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 372.755, 2.12262, -53.4777, 0.07 ) }
    dend_8 { pt3dadd( 372.303, 1.52043, -53.4777, 0.07 ) }
    dend_8 { pt3dadd( 371.889, 0.969614, -53.4777, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 78/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 372.755, 2.12262, -53.4777, 0.22 ) }
    dend_7 { pt3dadd( 372.691, 3.07838, -53.4777, 0.22 ) }
    dend_7 { pt3dadd( 372.653, 3.65374, -53.4777, 0.74 ) }
    // Section: dend_21, id: dend_21, parent: dend_12 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 149.005, -24.955, 2.96314, 0.07 ) }
    dend_21 { pt3dadd( 150.63, -26.1492, 2.46223, 0.07 ) }
    dend_21 { pt3dadd( 151.804, -27.044, 2.14757, 0.07 ) }
    dend_21 { pt3dadd( 152.806, -27.8884, 1.90275, 0.07 ) }
    dend_21 { pt3dadd( 153.407, -28.4508, 1.7689, 0.07 ) }
    dend_21 { pt3dadd( 154.273, -29.314, 1.66891, 0.07 ) }
    dend_21 { pt3dadd( 154.731, -29.8097, 1.65645, 0.07 ) }
    dend_21 { pt3dadd( 155.171, -30.4033, 1.78575, 0.07 ) }
    dend_21 { pt3dadd( 155.533, -31.0059, 1.97304, 0.37 ) }
    dend_21 { pt3dadd( 155.843, -31.5852, 2.18199, 0.37 ) }
    dend_21 { pt3dadd( 156.415, -32.7856, 2.63613, 0.37 ) }
    dend_21 { pt3dadd( 156.673, -33.4036, 2.8745, 0.37 ) }
    dend_21 { pt3dadd( 157.035, -34.2518, 3.23348, 0.37 ) }
    dend_21 { pt3dadd( 157.852, -35.9946, 4.04376, 0.37 ) }
    dend_21 { pt3dadd( 158.129, -36.5433, 4.31521, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 96/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 149.005, -24.955, 2.96314, 0.96 ) }
    dend_18 { pt3dadd( 151.369, -25.8505, 1.64884, 0.96 ) }
    dend_18 { pt3dadd( 152.279, -26.1951, 1.14289, 0.88 ) }
    dend_18 { pt3dadd( 153.023, -26.4768, 0.729419, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_18 { pt3dadd( 153.301, -26.582, 0.575112, 0.88 ) }
    dend_18 { pt3dadd( 153.796, -26.7695, 0.299764, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 2/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 149.005, -24.955, 2.96314, 0.59 ) }
    dend_13 { pt3dadd( 148.068, -24.7149, 3.06883, 0.59 ) }
    dend_13 { pt3dadd( 147.511, -24.5151, 3.10976, 0.59 ) }
    dend_13 { pt3dadd( 146.871, -24.1644, 3.13888, 0.59 ) }
    dend_13 { pt3dadd( 146.377, -23.7426, 3.15296, 0.44 ) }
    dend_13 { pt3dadd( 145.875, -23.2212, 3.16388, 0.44 ) }
    dend_13 { pt3dadd( 145.74, -23.0596, 3.16616, 0.22 ) }
    dend_13 { pt3dadd( 145.415, -22.6655, 3.1863, 0.22 ) }
    dend_13 { pt3dadd( 144.974, -22.0887, 3.21036, 0.22 ) }
    dend_13 { pt3dadd( 144.497, -21.3558, 3.2307, 0.22 ) }
    dend_13 { pt3dadd( 144.343, -21.0926, 3.23459, 0.22 ) }
    dend_13 { pt3dadd( 143.949, -20.4375, 3.24432, 0.22 ) }
    dend_13 { pt3dadd( 143.467, -19.7105, 3.25487, 0.22 ) }
    dend_13 { pt3dadd( 143.467, -19.7105, 3.25487, 0.22 ) }
    dend_13 { pt3dadd( 142.955, -19.1388, 3.26612, 0.22 ) }
    dend_13 { pt3dadd( 142.436, -18.6826, 3.22709, 0.22 ) }
    dend_13 { pt3dadd( 141.712, -18.1325, 3.13024, 0.22 ) }
    dend_13 { pt3dadd( 140.979, -17.5883, 2.97036, 0.22 ) }
    dend_13 { pt3dadd( 140.658, -17.3605, 2.89133, 0.22 ) }
    dend_13 { pt3dadd( 139.951, -16.8734, 2.70135, 0.22 ) }
    dend_13 { pt3dadd( 138.585, -15.9872, 2.27486, 0.22 ) }
    dend_13 { pt3dadd( 138.072, -15.6678, 2.08449, 0.22 ) }
    dend_13 { pt3dadd( 137.061, -15.0644, 1.62543, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 158.129, -36.5433, 4.31521, 1.11 ) }
    dend_22 { pt3dadd( 158.736, -37.2385, 4.45133, 1.11 ) }
    dend_22 { pt3dadd( 159.079, -37.8823, 4.48983, 0.66 ) }
    dend_22 { pt3dadd( 159.225, -38.2125, 4.5014, 0.37 ) }
    dend_22 { pt3dadd( 159.575, -38.9298, 4.52265, 0.74 ) }
    dend_22 { pt3dadd( 159.868, -39.4816, 4.56919, 0.88 ) }
    dend_22 { pt3dadd( 160.247, -40.2048, 4.65201, 0.88 ) }
    dend_22 { pt3dadd( 160.615, -41.1461, 4.76863, 0.88 ) }
    dend_22 { pt3dadd( 160.79, -41.6169, 4.85673, 0.66 ) }
    dend_22 { pt3dadd( 161.063, -42.2017, 5.00454, 0.66 ) }
    dend_22 { pt3dadd( 161.447, -42.8278, 5.21431, 0.81 ) }
    dend_22 { pt3dadd( 161.805, -43.3254, 5.44192, 0.81 ) }
    dend_22 { pt3dadd( 162.253, -43.9134, 5.78539, 0.81 ) }
    dend_22 { pt3dadd( 162.605, -44.4047, 6.07502, 0.81 ) }
    dend_22 { pt3dadd( 162.98, -45.0633, 6.41416, 0.74 ) }
    dend_22 { pt3dadd( 163.133, -45.384, 6.55138, 0.22 ) }
    dend_22 { pt3dadd( 163.423, -45.9746, 6.74709, 0.22 ) }
    dend_22 { pt3dadd( 163.783, -46.6032, 6.93892, 0.22 ) }
    dend_22 { pt3dadd( 164.172, -47.1929, 7.08613, 0.22 ) }
    dend_22 { pt3dadd( 164.407, -47.5635, 7.2065, 0.44 ) }
    dend_22 { pt3dadd( 164.723, -48.0966, 7.40538, 0.74 ) }
    dend_22 { pt3dadd( 165.102, -48.7878, 7.6778, 0.74 ) }
    dend_22 { pt3dadd( 165.488, -49.41, 7.94712, 0.44 ) }
    dend_22 { pt3dadd( 165.873, -49.9857, 8.22514, 0.44 ) }
    dend_22 { pt3dadd( 166.644, -51.1267, 8.8028, 1.11 ) }
    dend_22 { pt3dadd( 166.914, -51.5534, 9.01288, 1.11 ) }
    dend_22 { pt3dadd( 167.316, -52.2772, 9.34719, 0.29 ) }
    dend_22 { pt3dadd( 167.698, -53.0464, 9.66091, 0.29 ) }
    dend_22 { pt3dadd( 168.15, -54.0309, 9.97943, 0.29 ) }
    dend_22 { pt3dadd( 168.35, -54.4612, 10.0823, 1.11 ) }
    dend_22 { pt3dadd( 168.65, -55.0568, 10.1554, 0.81 ) }
    dend_22 { pt3dadd( 168.838, -55.3937, 10.1875, 0.81 ) }
    dend_22 { pt3dadd( 169.133, -55.8667, 10.2091, 0.81 ) }
    dend_22 { pt3dadd( 169.445, -56.3402, 10.2083, 0.81 ) }
    dend_22 { pt3dadd( 169.691, -56.6602, 10.1978, 0.81 ) }
    dend_22 { pt3dadd( 170.079, -57.1191, 10.1736, 0.44 ) }
    dend_22 { pt3dadd( 170.481, -57.5641, 10.1477, 0.44 ) }
    dend_22 { pt3dadd( 170.987, -58.1284, 10.1222, 1.03 ) }
    dend_22 { pt3dadd( 171.479, -58.7172, 10.1031, 1.25 ) }
    dend_22 { pt3dadd( 171.944, -59.35, 10.0938, 0.81 ) }
    dend_22 { pt3dadd( 172.186, -59.7298, 10.137, 0.66 ) }
    dend_22 { pt3dadd( 172.443, -60.2241, 10.2422, 0.66 ) }
    dend_22 { pt3dadd( 172.749, -60.9511, 10.4246, 0.66 ) }
    dend_22 { pt3dadd( 172.948, -61.5734, 10.6123, 1.03 ) }
    dend_22 { pt3dadd( 173.076, -62.0995, 10.8021, 0.81 ) }
    dend_22 { pt3dadd( 173.348, -63.4743, 11.4178, 0.66 ) }
    dend_22 { pt3dadd( 173.403, -63.844, 11.6171, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 153.796, -26.7695, 0.299764, 1.03 ) }
    dend_20 { pt3dadd( 154.319, -27.0309, 0.311072, 1.03 ) }
    dend_20 { pt3dadd( 154.928, -27.326, 0.341742, 1.03 ) }
    dend_20 { pt3dadd( 155.694, -27.6704, 0.38945, 1.03 ) }
    dend_20 { pt3dadd( 156.665, -28.0608, 0.452934, 1.03 ) }
    dend_20 { pt3dadd( 157.361, -28.2959, 0.497564, 0.59 ) }
    dend_20 { pt3dadd( 158.205, -28.5507, 0.549041, 0.59 ) }
    dend_20 { pt3dadd( 158.562, -28.6377, 0.571261, 0.74 ) }
    dend_20 { pt3dadd( 159.35, -28.802, 0.600482, 0.81 ) }
    dend_20 { pt3dadd( 159.969, -28.9444, 0.612813, 0.81 ) }
    dend_20 { pt3dadd( 160.73, -29.1654, 0.590116, 0.81 ) }
    dend_20 { pt3dadd( 161.356, -29.4196, 0.529185, 0.44 ) }
    dend_20 { pt3dadd( 161.854, -29.7152, 0.424981, 0.44 ) }
    dend_20 { pt3dadd( 162.409, -30.1297, 0.327428, 0.44 ) }
    dend_20 { pt3dadd( 163.67, -31.0861, 0.156051, 0.44 ) }
    dend_20 { pt3dadd( 164.297, -31.4973, 0.108656, 0.74 ) }
    dend_20 { pt3dadd( 164.796, -31.763, 0.10096, 1.18 ) }
    dend_20 { pt3dadd( 165.442, -32.0237, 0.124051, 0.88 ) }
    dend_20 { pt3dadd( 166.476, -32.3493, 0.204301, 0.59 ) }
    dend_20 { pt3dadd( 167.548, -32.6158, 0.293485, 0.59 ) }
    dend_20 { pt3dadd( 168.369, -32.7895, 0.34645, 0.37 ) }
    dend_20 { pt3dadd( 169.042, -32.9489, 0.391173, 0.37 ) }
    dend_20 { pt3dadd( 169.258, -33.0141, 0.397913, 0.74 ) }
    dend_20 { pt3dadd( 169.587, -33.1723, 0.396236, 1.03 ) }
    dend_20 { pt3dadd( 170.257, -33.613, 0.34218, 1.03 ) }
    dend_20 { pt3dadd( 170.743, -34.0411, 0.2975, 0.52 ) }
    dend_20 { pt3dadd( 170.938, -34.242, 0.277867, 0.37 ) }
    dend_20 { pt3dadd( 171.133, -34.4456, 0.259928, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_20 { pt3dadd( 172.034, -35.3312, 0.203664, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 153.796, -26.7695, 0.299764, 0.15 ) }
    dend_19 { pt3dadd( 154.185, -27.375, 0.299764, 0.15 ) }
    dend_19 { pt3dadd( 154.414, -27.7331, 0.299764, 0.15 ) }
    dend_19 { pt3dadd( 154.635, -28.0771, 0.299764, 0.15 ) }
    dend_19 { pt3dadd( 155.063, -28.7437, 0.299764, 0.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 137.061, -15.0644, 1.62543, 0.22 ) }
    dend_15 { pt3dadd( 136.217, -14.4365, 1.59698, 0.22 ) }
    dend_15 { pt3dadd( 135.294, -13.7502, 1.56589, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 9/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 137.061, -15.0644, 1.62543, 0.22 ) }
    dend_14 { pt3dadd( 136.283, -14.9335, 1.59346, 0.22 ) }
    dend_14 { pt3dadd( 135.43, -14.7899, 1.55838, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_22 (entry count 12/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 173.403, -63.844, 11.6171, 0.07 ) }
    dend_32 { pt3dadd( 173.408, -64.3349, 11.6621, 0.07 ) }
    dend_32 { pt3dadd( 173.418, -65.1178, 11.7337, 0.07 ) }
    dend_32 { pt3dadd( 173.427, -65.879, 11.8034, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 16/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 173.403, -63.844, 11.6171, 0.88 ) }
    dend_23 { pt3dadd( 173.493, -64.075, 11.5902, 0.88 ) }
    dend_23 { pt3dadd( 173.755, -64.7535, 11.6411, 0.07 ) }
    dend_23 { pt3dadd( 173.911, -65.2349, 11.7114, 0.07 ) }
    dend_23 { pt3dadd( 174.062, -66.1347, 11.8625, 0.07 ) }
    dend_23 { pt3dadd( 174.074, -66.4374, 12.0468, 0.66 ) }
    dend_23 { pt3dadd( 174.093, -66.9099, 12.405, 1.11 ) }
    dend_23 { pt3dadd( 174.137, -67.6975, 13.0991, 0.07 ) }
    dend_23 { pt3dadd( 174.15, -68.1081, 13.5053, 0.07 ) }
    dend_23 { pt3dadd( 174.142, -68.8389, 14.2941, 0.07 ) }
    dend_23 { pt3dadd( 174.059, -70.887, 16.8442, 0.07 ) }
    dend_23 { pt3dadd( 174.023, -71.465, 17.6335, 0.07 ) }
    dend_23 { pt3dadd( 174.007, -71.7584, 18.0887, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 29/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 135.294, -13.7502, 1.56589, 0.22 ) }
    dend_17 { pt3dadd( 134.941, -13.1923, 1.38503, 0.22 ) }
    dend_17 { pt3dadd( 134.651, -12.7335, 1.23631, 0.22 ) }
    dend_17 { pt3dadd( 134.413, -12.3579, 1.11457, 0.22 ) }
    dend_17 { pt3dadd( 134.144, -11.9312, 0.976271, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 135.294, -13.7502, 1.56589, 0.22 ) }
    dend_16 { pt3dadd( 134.826, -14.2435, 1.74486, 0.22 ) }
    dend_16 { pt3dadd( 134.737, -14.6149, 1.80827, 0.22 ) }
    dend_16 { pt3dadd( 134.732, -14.9742, 1.85612, 0.22 ) }
    dend_16 { pt3dadd( 134.751, -15.4692, 1.91929, 0.22 ) }
    dend_16 { pt3dadd( 134.763, -15.7924, 1.96053, 0.22 ) }
    dend_16 { pt3dadd( 134.774, -16.0902, 1.99854, 0.22 ) }
    dend_16 { pt3dadd( 134.988, -16.6312, 1.99854, 0.22 ) }
    dend_16 { pt3dadd( 135.241, -16.9932, 1.99854, 0.22 ) }
    dend_16 { pt3dadd( 135.512, -17.24, 1.99854, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 44/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 174.007, -71.7584, 18.0887, 0.07 ) }
    dend_24 { pt3dadd( 173.877, -72.8304, 17.8458, 0.07 ) }
    dend_24 { pt3dadd( 173.825, -73.2662, 17.7471, 0.88 ) }
    dend_24 { pt3dadd( 173.716, -74.1732, 17.5416, 0.88 ) }
    dend_24 { pt3dadd( 173.574, -75.3438, 17.2764, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 49/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 173.574, -75.3438, 17.2764, 0.44 ) }
    dend_26 { pt3dadd( 173.874, -76.008, 17.2414, 0.44 ) }
    dend_26 { pt3dadd( 174.068, -76.3067, 17.2253, 0.66 ) }
    dend_26 { pt3dadd( 174.519, -76.7294, 17.1999, 0.37 ) }
    dend_26 { pt3dadd( 174.912, -76.6571, 17.1953, 0.29 ) }
    dend_26 { pt3dadd( 175.189, -76.5198, 17.1941, 0.44 ) }
    dend_26 { pt3dadd( 175.468, -76.3677, 17.1928, 0.66 ) }
    dend_26 { pt3dadd( 175.777, -76.1826, 17.1928, 0.66 ) }
    dend_26 { pt3dadd( 176.195, -75.9178, 17.1928, 0.29 ) }
    dend_26 { pt3dadd( 176.733, -75.6097, 17.25, 0.29 ) }
    dend_26 { pt3dadd( 177.001, -75.4526, 17.2819, 0.66 ) }
    dend_26 { pt3dadd( 177.555, -75.1475, 17.3574, 0.66 ) }
    dend_26 { pt3dadd( 178.074, -74.8906, 17.4396, 0.44 ) }
    dend_26 { pt3dadd( 178.405, -74.7496, 17.5029, 0.44 ) }
    dend_26 { pt3dadd( 179.606, -74.3932, 17.789, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 64/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 173.574, -75.3438, 17.2764, 0.22 ) }
    dend_25 { pt3dadd( 172.813, -75.9101, 17.2344, 0.22 ) }
    dend_25 { pt3dadd( 171.983, -76.5277, 17.1886, 0.22 ) }
    dend_25 { pt3dadd( 171.271, -77.0568, 17.1494, 0.22 ) }
    dend_25 { pt3dadd( 170.905, -77.3293, 17.1291, 0.22 ) }
    dend_25 { pt3dadd( 170.435, -77.6787, 17.1032, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 179.606, -74.3932, 17.789, 1.11 ) }
    dend_28 { pt3dadd( 180.226, -74.6565, 17.789, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 179.606, -74.3932, 17.789, 0.07 ) }
    dend_27 { pt3dadd( 179.463, -75.3798, 17.789, 0.07 ) }
    dend_27 { pt3dadd( 179.356, -76.1158, 17.789, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_28 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 180.226, -74.6565, 17.789, 0.52 ) }
    dend_31 { pt3dadd( 180.26, -75.4382, 17.6951, 0.52 ) }
    dend_31 { pt3dadd( 180.28, -75.8855, 17.6414, 0.52 ) }
    dend_31 { pt3dadd( 180.315, -76.6825, 17.5458, 0.29 ) }
    dend_31 { pt3dadd( 180.384, -78.2639, 17.3559, 0.29 ) }
    dend_31 { pt3dadd( 180.45, -79.7806, 17.1739, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 81/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 180.226, -74.6565, 17.789, 0.07 ) }
    dend_30 { pt3dadd( 181.914, -75.108, 17.7264, 0.07 ) }
    dend_30 { pt3dadd( 182.817, -75.3493, 17.693, 0.07 ) }
    dend_30 { pt3dadd( 183.897, -75.6381, 17.653, 0.07 ) }
    dend_30 { pt3dadd( 185.955, -76.1885, 17.5768, 0.07 ) }
    dend_30 { pt3dadd( 186.947, -76.4537, 17.5401, 0.07 ) }
    dend_30 { pt3dadd( 187.267, -76.5394, 17.5282, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 88/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 180.226, -74.6565, 17.789, 0.66 ) }
    dend_29 { pt3dadd( 180.946, -74.6921, 17.7969, 0.66 ) }
    dend_29 { pt3dadd( 181.608, -74.7249, 17.8042, 0.44 ) }
    dend_29 { pt3dadd( 182.783, -74.7832, 17.8172, 0.07 ) }
    dend_29 { pt3dadd( 183.661, -74.8267, 17.8269, 0.07 ) }
    dend_29 { pt3dadd( 184.21, -74.8539, 17.833, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_49 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_45 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_40 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_53 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_54 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_55 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_3 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_50 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_15 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_32 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_25 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_26 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_30 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_55, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_14, dend_14, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_28, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_14 all.append()
    dend_14 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 7
    dend_0 nseg = 15
    dend_56 nseg = 5
    dend_51 nseg = 5
    dend_36 nseg = 17
    dend_34 nseg = 15
    dend_45 nseg = 11
    dend_40 nseg = 3
    dend_33 nseg = 5
    dend_46 nseg = 3
    dend_41 nseg = 3
    dend_10 nseg = 3
    dend_6 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_ChC_feef7b2013_0_0


