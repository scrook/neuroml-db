// Cell: bAC217_L5_LBC_c2cff91741_0_0
/*
{
  "id" : "bAC217_L5_LBC_c2cff91741_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-15.6431, -2.66144, 0.0, 3.30324", "-14.0603, -2.4613, 0.0, 5.78525", "-12.4774, -2.26116, 0.0, 7.9612", "-10.8946, -2.06102, 0.0, 9.78332", "-9.31178, -1.86088, 0.0, 11.2789", "-7.72896, -1.66074, 0.0, 12.7179", "-6.14614, -1.4606, 0.0, 13.968", "-4.56331, -1.26046, 0.0, 15.126", "-2.98049, -1.06032, 0.0, 16.024", "-1.39766, -0.860182, 0.0, 16.3577", "0.185161, -0.660042, 0.0, 16.6168", "1.76798, -0.459902, 0.0, 16.4395", "3.35081, -0.259762, 0.0, 16.1401", "4.93363, -0.0596226, 0.0, 15.4809", "6.51646, 0.140517, 0.0, 14.5881", "8.09928, 0.340657, 0.0, 13.7036", "9.6821, 0.540797, 0.0, 12.5552", "11.2649, 0.740937, 0.0, 10.9185", "12.8478, 0.941077, 0.0, 9.17326", "14.4306, 1.14122, 0.0, 6.97209", "16.0134, 1.34136, 0.0, 4.21565" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "12.1654, 2.42565, 1.3, 6.82", "16.5103, 3.37648, 2.37177, 6.82", "20.444, 4.23732, 3.3421, 6.14", "21.9806, 4.57357, 3.72112, 6.14", "24.7092, 5.17071, 4.3942, 6.82", "28.1405, 5.92158, 5.24058, 6.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500004585168592
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-13.7947, -3.41463, -1.22, 6.59", "-17.6806, -5.6581, -2.95833, 5.23", "-21.9905, -8.14636, -4.88632, 5.45", "-24.8872, -9.81872, -6.18213, 5.45", "-28.5748, -11.9477, -7.83177, 6.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500004585168592
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "16.0134, 1.34136, 0.0, 1.29544", "30.8949, 3.22305, 0.0, 1.29544", "45.7764, 5.10474, 0.0, 1.29544" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "28.1405, 5.92158, 5.24058, 3.64", "30.0183, 6.07524, 5.68567, 3.64", "33.9579, 6.3976, 6.61946, 3.64", "37.8841, 6.71886, 7.55006, 3.64", "43.5706, 7.18416, 8.89791, 3.64", "47.5692, 7.51136, 9.84569, 3.64", "53.9699, 8.0351, 11.3628, 5.0" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "28.1405, 5.92158, 5.24058, 0.91", "30.2836, 6.04752, 6.56848, 0.91", "31.8573, 6.13999, 7.54348, 1.36", "33.4629, 6.23435, 8.53832, 1.36", "34.9648, 6.3226, 9.46888, 1.36" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-28.5748, -11.9477, -7.83177, 2.27", "-29.1638, -9.41048, -8.89139, 2.27", "-29.8785, -6.33169, -10.1772, 1.59", "-30.4315, -3.9495, -11.172, 1.59", "-30.7786, -2.45428, -11.7964, 1.59", "-31.3931, 0.192763, -12.9019, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-28.5748, -11.9477, -7.83177, 4.55", "-31.0557, -13.4428, -7.7633, 4.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "45.7764, 5.10474, 0.0, 0.153104", "60.6579, 6.98643, 0.0, 0.153104", "75.5394, 8.86812, 0.0, 0.153104" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "53.9699, 8.0351, 11.3628, 2.73", "57.346, 8.9126, 10.835, 2.73", "61.0271, 9.86938, 10.2596, 2.73", "64.6738, 10.8173, 9.68952, 2.73", "68.9342, 11.9246, 9.02351, 3.41" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "53.9699, 8.0351, 11.3628, 1.82", "55.5176, 6.7752, 11.9854, 1.82", "56.8904, 5.7504, 12.5769, 1.36", "58.279, 4.70345, 13.2943, 1.59", "59.5348, 3.76912, 13.9767, 1.59", "60.6404, 2.9507, 14.5919, 1.59", "61.6258, 2.1992, 15.1595, 1.36", "62.5502, 1.47004, 15.7513, 1.36", "63.6839, 0.423255, 16.5649, 2.27", "64.7048, -0.571813, 17.3368, 2.05", "65.9666, -1.88485, 18.3477, 0.91", "66.6851, -2.68512, 18.9238, 1.14", "67.6088, -3.8552, 19.6842, 1.14", "68.6468, -5.35882, 20.533, 1.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "34.9648, 6.3226, 9.46888, 0.68", "36.8935, 6.33787, 9.34558, 0.68", "39.1759, 6.35016, 9.22536, 0.68", "42.1579, 6.35384, 9.08353, 0.45", "44.0206, 6.36921, 9.02634, 0.91", "46.1605, 6.43419, 8.98905, 0.91", "47.9282, 6.51425, 9.00062, 0.23", "49.5646, 6.68006, 9.05592, 1.14", "50.8308, 6.87113, 9.13664, 1.82", "52.9738, 7.26356, 9.32546, 0.91", "55.1479, 7.67709, 9.59021, 0.68", "57.8352, 8.2155, 10.1425, 0.68", "59.3885, 8.5451, 10.6767, 0.45", "60.2794, 8.73364, 11.0865, 1.14", "61.2822, 8.96013, 11.6677, 0.23", "62.0924, 9.13771, 12.2888, 2.27", "64.2644, 9.57138, 14.3407, 1.14", "66.494, 9.97112, 16.6742, 0.45", "66.9773, 10.0403, 17.2131, 1.36", "67.9981, 10.1851, 18.4138, 1.36", "69.6339, 10.4875, 20.4509, 0.23", "70.3479, 10.6522, 21.3295, 0.23", "70.9996, 10.8321, 22.0649, 2.27" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "34.9648, 6.3226, 9.46888, 1.14", "36.6676, 6.83425, 9.58402, 1.14", "39.8734, 7.7975, 9.8008, 2.27" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-31.3931, 0.192763, -12.9019, 0.45", "-32.555, 1.73699, -12.7036, 0.45", "-33.8274, 3.43155, -12.5495, 0.45", "-34.2466, 4.04055, -12.5131, 1.14", "-35.3756, 5.85609, -12.4668, 0.23", "-35.9996, 6.9485, -12.4639, 0.23", "-36.6813, 8.19041, -12.3863, 1.14", "-37.411, 9.70636, -12.2267, 1.14", "-37.765, 10.5939, -12.1449, 0.23", "-38.153, 11.6938, -12.0828, 0.68", "-39.0298, 14.3975, -12.0161, 0.23", "-39.7535, 17.0055, -12.0666, 0.68", "-40.2081, 18.8632, -12.1662, 1.59", "-40.7094, 21.1061, -12.3662, 0.45", "-41.2333, 23.3389, -12.6519, 1.14", "-41.5166, 24.5084, -12.8838, 0.23", "-42.0483, 26.6569, -13.3923, 1.59", "-42.7784, 29.1115, -14.054, 0.23", "-43.3256, 30.5729, -14.4206, 1.14", "-43.9899, 31.9734, -14.712, 0.23", "-45.0296, 33.7337, -15.0074, 1.14", "-46.5269, 35.8399, -15.353, 0.68", "-47.7567, 37.3566, -15.528, 1.14", "-48.6854, 38.482, -15.6229, 2.5", "-50.0119, 40.1637, -15.6934, 2.73", "-52.0478, 42.8811, -15.7538, 1.14", "-53.6871, 45.2164, -15.7248, 0.23", "-55.0022, 47.2038, -15.7055, 0.91", "-56.5961, 49.9479, -15.5881, 0.23", "-57.7155, 52.1306, -15.4185, 0.23", "-58.7552, 54.4508, -15.1909, 0.91", "-59.4804, 56.2266, -15.0455, 0.23", "-59.8422, 57.1229, -15.0079, 0.91", "-60.677, 59.1053, -15.0316, 0.23", "-61.5687, 61.155, -15.074, 1.82", "-62.4838, 63.137, -15.1756, 3.86", "-64.4658, 67.2693, -15.458, 1.36", "-65.7117, 69.7505, -15.7299, 0.68", "-66.7372, 71.6706, -15.9707, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-31.3931, 0.192763, -12.9019, 1.59", "-31.5395, 2.02828, -14.2259, 1.59", "-31.5582, 3.45553, -15.2283, 1.59", "-31.4604, 4.70223, -16.11, 1.59", "-31.2356, 6.12532, -17.0765, 0.91", "-30.6895, 8.62304, -18.6364, 0.45", "-30.5027, 9.2946, -19.0122, 0.45", "-30.0144, 10.6303, -19.6067, 0.45", "-29.4233, 11.9771, -20.0098, 1.14", "-28.7837, 13.1566, -20.2192, 1.82", "-27.7513, 14.7824, -20.2902, 0.68", "-26.6623, 16.3889, -20.2669, 1.36", "-25.7513, 17.8215, -20.2834, 0.45", "-24.9942, 19.0702, -20.3217, 1.14", "-24.245, 20.3176, -20.4289, 0.23", "-23.5722, 21.3255, -20.6206, 1.82", "-21.7795, 23.6334, -21.3056, 0.68", "-20.7163, 24.8432, -21.7876, 1.59", "-19.9364, 25.648, -22.1687, 1.59", "-18.61, 26.9479, -22.7956, 0.45", "-17.4255, 28.1763, -23.3254, 0.68", "-16.6738, 28.9358, -23.6087, 0.23", "-15.6503, 29.9127, -23.8308, 1.14", "-14.8011, 30.7177, -23.9592, 0.23", "-13.7624, 31.7508, -24.0785, 0.23", "-12.6862, 32.9485, -24.1082, 0.68", "-12.0769, 33.7488, -24.0831, 0.23", "-10.6478, 35.9044, -24.0205, 0.23", "-6.74355, 42.8708, -24.6582, 0.23", "-2.8689, 49.8063, -23.6231, 0.23", "2.09513, 55.7566, -21.4338, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-31.0557, -13.4428, -7.7633, 0.68", "-33.2086, -13.7227, -9.60296, 0.68", "-35.3718, -13.9983, -11.4757, 0.45", "-37.757, -14.405, -13.5181, 0.45", "-39.3102, -14.7203, -14.8258, 0.45", "-41.6326, -15.2412, -16.727, 1.36", "-44.6376, -15.9575, -19.0944, 1.36", "-45.9142, -16.2978, -20.0636, 1.14", "-47.8924, -16.8784, -21.381, 0.68", "-48.488, -17.0765, -21.6983, 0.68", "-49.3129, -17.3339, -22.0281, 0.68", "-50.3762, -17.632, -22.2988, 0.68", "-52.4978, -18.1022, -22.6402, 0.68", "-54.5704, -18.5225, -23.0533, 2.05", "-56.657, -18.8985, -23.5159, 0.23", "-58.1439, -19.2003, -23.8774, 1.14", "-60.7084, -19.7406, -24.5398, 0.23", "-61.986, -20.0006, -24.8819, 2.05", "-65.217, -20.4924, -25.6442, 0.23", "-67.1293, -20.5965, -26.0056, 1.14", "-68.5348, -20.6394, -26.2229, 0.23", "-69.9498, -20.6865, -26.4296, 0.23", "-71.3746, -20.6146, -26.5799, 0.23", "-74.3372, -20.0351, -26.5242, 0.23", "-76.0209, -19.0987, -26.0423, 0.23", "-84.9028, -19.4534, -29.932, 0.23", "-94.0871, -19.2051, -33.0518, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-31.0557, -13.4428, -7.7633, 3.18", "-34.2641, -15.6076, -6.95526, 3.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "68.9342, 11.9246, 9.02351, 0.68", "70.3722, 10.7875, 9.32369, 0.68", "71.5162, 9.63407, 9.36244, 0.68", "72.2543, 8.72322, 9.33067, 0.68", "73.1097, 7.54719, 9.26668, 0.68", "73.5897, 6.86373, 9.21349, 0.68", "74.7768, 5.13193, 9.0729, 0.68", "76.1, 2.91993, 8.81171, 1.36", "76.9606, 1.14107, 8.60297, 0.45", "77.21, 0.550796, 8.52489, 1.14", "77.6498, -0.587753, 8.35546, 0.68", "77.8821, -1.20708, 8.2594, 2.27", "78.6469, -3.27476, 7.96064, 0.91", "79.0507, -4.43947, 7.77446, 0.23", "79.5296, -5.74531, 7.5048, 0.23", "80.1728, -7.28093, 7.12015, 1.14", "80.7126, -8.43525, 6.82328, 2.27", "81.4751, -9.80581, 6.5286, 1.14", "82.7251, -11.6168, 6.29615, 1.14", "83.4178, -12.4753, 6.24773, 1.14", "84.7862, -14.0534, 6.24731, 0.68", "85.8807, -15.1148, 6.2903, 1.14", "87.5833, -16.4881, 6.37067, 0.23", "89.105, -17.55, 6.51671, 1.59", "90.8936, -18.7137, 6.81607, 0.68", "91.9441, -19.3978, 6.97942, 2.27", "93.7031, -20.472, 7.23001, 1.14", "95.0917, -21.318, 7.29158, 0.23", "96.0702, -21.9611, 7.23467, 0.68", "97.4528, -22.9032, 7.0367, 0.23", "98.819, -23.8815, 6.80334, 1.59", "99.707, -24.5533, 6.61478, 2.05", "101.294, -25.8796, 6.13174, 0.68", "102.055, -26.5276, 5.86616, 1.36", "103.753, -27.9717, 5.2879, 0.23", "104.489, -28.6023, 5.07756, 0.68", "105.48, -29.4709, 4.89448, 0.68", "106.252, -30.1328, 4.80834, 0.68", "106.925, -30.7031, 4.80781, 1.59", "108.267, -31.8666, 4.90663, 0.91", "109.625, -33.1178, 5.07335, 0.91", "110.717, -34.1528, 5.2116, 1.59", "111.889, -35.28, 5.33133, 0.45", "112.953, -36.2875, 5.43647, 0.45", "113.87, -37.1117, 5.50911, 0.68", "115.066, -38.0979, 5.60579, 1.82", "116.22, -39.0332, 5.71873, 0.91", "117.562, -40.0919, 5.8756, 0.23", "118.567, -40.8145, 5.98657, 0.68", "120.123, -41.8656, 6.1288, 0.68", "121.795, -42.9697, 6.2813, 0.23", "122.779, -43.6025, 6.39388, 0.91", "124.056, -44.3902, 6.54975, 0.23", "125.106, -45.018, 6.74692, 0.23", "129.924, -49.9523, 5.7566, 0.23", "134.796, -54.7391, 4.33941, 0.23", "139.828, -59.2086, 2.46516, 0.23", "145.114, -63.4083, 0.647561, 0.23", "149.942, -68.0838, -1.24448, 0.23", "153.961, -73.1406, -3.88962, 0.23", "158.183, -78.1779, -6.2332, 0.23", "162.589, -82.8814, -8.93533, 0.23" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "68.9342, 11.9246, 9.02351, 0.68", "72.3582, 13.9241, 7.87783, 0.68", "74.855, 15.1754, 6.96057, 0.68", "76.9966, 16.1359, 6.10083, 1.82", "78.2751, 16.6745, 5.55763, 1.36", "79.2097, 17.0597, 5.16312, 2.05", "81.2544, 17.8958, 4.32785, 2.05", "84.1327, 18.9164, 3.12748, 0.91", "85.7575, 19.4928, 2.53958, 1.59", "87.3258, 20.0905, 2.01395, 2.05", "89.2564, 20.8335, 1.35387, 2.5", "90.8808, 21.467, 0.805745, 2.73", "92.5009, 22.1317, 0.297892, 2.05", "93.827, 22.7553, 0.0108352, 2.95", "94.615, 23.1498, -0.107394, 2.5" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "68.6468, -5.35882, 20.533, 0.91", "68.1387, -8.36754, 21.0239, 0.91", "67.8093, -10.6287, 21.3946, 0.45", "67.5188, -13.0908, 21.8003, 0.91", "67.4002, -14.1399, 22.0038, 0.91", "67.0395, -17.0408, 22.6062, 0.23", "66.8241, -18.7735, 22.9771, 1.59", "66.5872, -20.9526, 23.4701, 0.45", "66.442, -22.4534, 23.8206, 1.82", "66.2074, -25.5781, 24.5565, 0.45", "66.0231, -28.1065, 25.1548, 0.68", "65.9334, -29.5821, 25.466, 2.27", "65.8916, -30.5588, 25.6368, 2.27", "65.8448, -32.7829, 25.9485, 1.14", "65.8368, -35.8521, 26.2826, 0.68", "65.8841, -38.6506, 26.5279, 1.14", "65.8898, -40.618, 26.708, 0.23", "65.8234, -42.472, 26.9128, 1.82", "65.6, -45.2242, 27.3584, 0.23", "65.3548, -47.153, 27.8071, 0.23", "65.0414, -48.9147, 28.3256, 2.05", "64.5647, -51.4133, 29.1799, 0.68", "64.1018, -53.6174, 30.0265, 3.41", "63.3628, -57.1471, 31.4324, 0.45", "62.8903, -59.5387, 32.3162, 1.14", "62.5391, -61.7689, 33.0548, 1.59", "62.3218, -64.188, 33.7363, 0.68", "62.3213, -65.1736, 33.9682, 1.36", "62.5155, -67.5061, 34.3663, 0.23", "62.908, -69.6677, 34.5878, 2.05", "63.3174, -71.1514, 34.6966, 2.05", "63.9866, -72.9482, 34.8226, 0.68", "64.8349, -74.9397, 35.0009, 1.36", "65.4926, -76.3428, 35.1621, 1.82", "65.9351, -77.2284, 35.288, 1.82", "66.8663, -78.9717, 35.6217, 0.23", "67.9636, -80.9822, 35.9937, 2.73", "68.9609, -82.85, 36.3131, 0.23", "69.414, -83.6805, 36.4333, 1.14" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "68.6468, -5.35882, 20.533, 3.41", "68.7056, -5.45703, 20.5802, 3.41", "70.3239, -8.71574, 21.8561, 0.91", "71.3379, -11.0521, 22.6975, 0.91", "71.9136, -12.5315, 23.2169, 1.36", "72.4707, -14.1413, 23.7794, 1.36", "73.5365, -17.504, 24.9604, 0.91", "74.0923, -19.7258, 25.7228, 1.36", "74.5928, -22.4077, 26.6061, 1.14", "74.8638, -24.1105, 27.1703, 1.36", "75.0492, -25.3269, 27.5848, 0.68", "75.2643, -26.7847, 28.1142, 1.36", "75.5803, -29.0277, 28.9631, 0.23", "75.8099, -30.5817, 29.5786, 0.91", "76.1993, -32.842, 30.456, 0.23", "76.5995, -34.7931, 31.2531, 2.05", "76.9244, -36.1578, 31.8481, 2.05", "77.6687, -38.8843, 33.1072, 0.91", "78.0888, -40.1746, 33.7362, 0.91", "78.6629, -41.7649, 34.5508, 0.68", "79.5428, -43.9728, 35.7457, 0.68", "80.1497, -45.3598, 36.5567, 0.68", "80.957, -47.007, 37.5446, 0.68", "82.2267, -49.2591, 38.9402, 1.36", "82.5857, -49.85, 39.3075, 2.05" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "70.9996, 10.8321, 22.0649, 1.36", "72.4652, 12.576, 22.4741, 1.36", "73.5695, 13.916, 22.793, 0.23", "74.2307, 14.6851, 22.9671, 1.36", "75.5853, 16.3886, 23.3946, 0.45", "76.3447, 17.371, 23.711, 0.91", "77.208, 18.4132, 24.0804, 0.91", "78.8046, 20.3253, 24.9681, 0.23", "79.6592, 21.3708, 25.5182, 1.14", "81.0018, 23.0884, 26.6114, 1.14", "82.3556, 24.918, 27.9322, 0.68", "83.4921, 26.5239, 29.1669, 0.68", "84.6127, 28.1329, 30.4646, 0.68", "85.3574, 29.2649, 31.4015, 0.68", "86.5754, 31.3506, 33.017, 2.05", "87.9741, 33.955, 34.8141, 0.68", "89.3618, 37.0094, 36.5969, 1.82", "90.3089, 39.4048, 37.8724, 0.45", "90.7371, 40.5128, 38.3877, 1.59", "91.8579, 43.719, 39.7401, 0.23", "92.437, 45.6638, 40.4076, 1.36", "93.0303, 48.2577, 41.2112, 0.45", "93.656, 51.5262, 42.1785, 2.27", "93.9703, 53.1678, 42.6325, 0.68", "94.685, 56.4431, 43.566, 0.23", "95.3949, 59.3319, 44.3737, 0.91", "95.9845, 61.5729, 44.9866, 0.23", "96.6083, 63.713, 45.5204, 1.36", "97.4818, 66.339, 46.1197, 0.23", "98.728, 69.3893, 46.9029, 0.91", "99.314, 70.5628, 47.211, 0.23", "99.9489, 71.7066, 47.5491, 1.36", "100.538, 72.7045, 47.8412, 1.36", "102.308, 75.413, 48.6212, 0.23", "103.71, 77.3295, 49.1737, 1.14", "104.964, 78.9153, 49.6068, 0.23", "106.581, 80.792, 50.1096, 1.82", "107.525, 81.8613, 50.4031, 2.05", "109.435, 83.9834, 50.9496, 0.23", "111.164, 85.8452, 51.406, 0.23", "111.793, 86.4996, 51.574, 1.36", "112.99, 87.68, 51.9236, 1.36", "114.325, 88.9806, 52.3216, 0.23", "115.11, 89.7557, 52.579, 0.91", "116.56, 91.2187, 53.155, 0.23", "117.248, 91.841, 53.4489, 1.14", "118.028, 92.4857, 53.7767, 0.23", "118.786, 93.0518, 54.0107, 0.91", "120.937, 94.4807, 54.406, 0.23", "122.232, 95.3245, 54.5579, 1.14", "124.314, 96.7136, 54.6801, 0.23", "125.929, 97.8605, 54.7335, 0.23", "128.324, 99.7028, 54.7301, 0.68", "129.308, 100.589, 54.6635, 0.23", "129.846, 101.179, 54.5825, 1.36", "131.225, 102.956, 54.2567, 0.23", "132.33, 104.669, 53.9037, 0.91", "133.943, 107.466, 53.3707, 0.23", "134.838, 109.178, 53.1436, 2.27", "135.758, 111.021, 52.998, 0.23", "136.463, 112.51, 52.9231, 1.14", "137.215, 114.255, 52.9167, 0.23", "137.923, 116.09, 53.0265, 0.91", "138.541, 117.796, 53.348, 0.23", "139.391, 119.963, 53.98, 2.05", "139.786, 120.887, 54.2986, 0.23", "140.415, 122.334, 54.8419, 1.59", "141.049, 123.645, 55.3389, 0.23", "142.3, 126.0, 56.2418, 0.23", "142.883, 126.963, 56.5914, 1.36", "143.793, 128.199, 57.016, 0.23", "144.427, 128.957, 57.3063, 1.59", "146.104, 130.788, 58.0837, 0.23", "147.081, 131.78, 58.5907, 0.91", "148.932, 133.531, 59.7479, 0.23", "149.808, 134.35, 60.3627, 2.05", "152.389, 136.704, 62.3749, 0.23", "153.278, 137.474, 63.1058, 0.91", "154.393, 138.426, 64.1106, 0.23", "156.571, 140.235, 66.0509, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "70.9996, 10.8321, 22.0649, 1.14", "72.3524, 10.4014, 23.4504, 1.14", "74.2026, 9.83076, 25.3099, 0.45", "76.0729, 9.15289, 27.5155, 0.91", "76.9939, 8.79714, 28.5686, 0.23", "78.4353, 8.23552, 30.2326, 1.14", "79.2351, 7.9561, 31.1086, 1.59", "80.9039, 7.3713, 32.9408, 1.59", "84.5622, 6.27995, 36.3692, 0.23", "86.0002, 5.91468, 37.5103, 2.05", "88.1034, 5.44515, 39.034, 0.23", "89.9429, 5.10123, 40.2079, 0.23", "93.003, 4.60368, 41.9933, 2.05", "96.3559, 4.17458, 43.6867, 0.68", "99.8169, 3.79317, 45.2462, 0.23", "102.362, 3.49712, 46.3872, 1.14", "103.447, 3.33301, 46.83, 1.14", "106.678, 2.74846, 48.1901, 0.23", "107.583, 2.58, 48.549, 0.23", "109.969, 2.03931, 49.4853, 0.68", "111.174, 1.71241, 49.9215, 1.82", "113.114, 1.10016, 50.5534, 1.82", "115.146, 0.422603, 51.1671, 0.23", "116.885, -0.245169, 51.5698, 1.14", "119.078, -1.2006, 51.9434, 0.23", "120.851, -2.21298, 52.2198, 1.14", "121.768, -2.8176, 52.3553, 0.23", "122.667, -3.45102, 52.4641, 2.27", "124.755, -5.02929, 52.6097, 0.23", "126.347, -6.26628, 52.665, 1.36", "131.316, -10.1632, 52.7917, 0.23", "133.634, -11.9406, 52.7982, 0.23", "135.277, -13.1968, 52.8293, 1.82", "137.46, -14.8577, 52.8798, 1.82", "140.534, -17.1596, 52.9657, 0.23", "143.086, -19.0916, 53.1062, 2.73", "144.992, -20.5133, 53.2173, 2.73", "148.218, -22.9932, 53.5259, 0.23", "149.699, -24.1303, 53.7513, 0.23", "151.227, -25.2617, 54.0339, 1.36", "154.301, -27.4845, 54.5914, 0.23", "156.271, -28.8371, 54.9266, 1.59", "158.621, -30.3035, 55.3185, 0.23", "161.638, -31.949, 55.7211, 1.36", "164.315, -33.21, 56.0403, 0.23", "167.601, -34.5112, 56.3333, 0.23", "168.929, -34.9815, 56.4542, 2.05", "171.179, -35.7115, 56.7192, 1.59", "174.092, -36.568, 57.09, 0.23", "177.701, -37.607, 57.507, 0.68", "179.961, -38.2159, 57.8291, 1.36", "183.768, -39.1763, 58.4506, 0.23", "185.149, -39.5632, 58.6704, 1.59", "186.578, -40.0301, 58.9395, 0.91", "188.444, -40.6932, 59.37, 1.59" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "39.8734, 7.7975, 9.8008, 0.23", "41.5554, 6.22737, 11.1669, 0.23", "43.5865, 4.03287, 12.6855, 0.68", "44.7688, 2.67417, 13.5031, 0.68", "46.0691, 1.11209, 14.3962, 1.59", "47.0219, -0.0535799, 15.0566, 1.59", "48.3808, -1.79317, 16.1136, 0.68", "49.1159, -2.92264, 16.8199, 0.23", "49.4809, -3.53765, 17.1843, 0.91", "50.6839, -5.66415, 18.4495, 1.59", "51.653, -7.48042, 19.5903, 1.36", "52.5013, -9.1784, 20.7009, 0.23", "53.1394, -10.5736, 21.6034, 1.82", "53.799, -12.2321, 22.6452, 2.27", "54.4605, -14.3795, 23.882, 1.14", "54.9336, -16.6227, 24.9819, 0.23", "55.1709, -18.1294, 25.5919, 1.14", "55.347, -19.5739, 26.0658, 1.59", "55.5152, -21.6223, 26.6646, 0.45", "55.6077, -23.2924, 27.1965, 0.45", "55.7231, -24.7487, 27.6672, 0.91", "55.9038, -26.6899, 28.2946, 0.91", "56.1645, -28.6578, 28.9679, 0.91", "56.466, -30.4116, 29.5494, 1.82", "56.8129, -31.976, 29.9963, 0.91", "57.3096, -33.7959, 30.4847, 0.23", "57.8471, -35.5349, 30.9053, 2.05", "58.384, -37.0535, 31.2128, 2.05", "59.2632, -39.1473, 31.5215, 0.68", "59.8743, -40.501, 31.6441, 1.82", "60.4383, -41.7067, 31.6905, 1.82", "61.2126, -43.2889, 31.7165, 1.82", "62.0238, -44.8405, 31.7935, 0.23", "62.6122, -45.9947, 31.9294, 0.23", "63.2869, -47.4485, 32.2902, 1.14", "63.5955, -48.2204, 32.5482, 1.14", "64.0459, -49.5798, 33.1141, 0.23", "64.6441, -51.7718, 34.1389, 1.82", "65.1265, -53.8135, 35.1491, 0.68", "65.6918, -56.4945, 36.4736, 0.68", "65.9887, -58.014, 37.2419, 0.68", "66.3686, -60.1136, 38.2608, 0.68", "66.529, -60.8813, 38.6276, 1.82", "66.738, -61.867, 39.0586, 1.82", "67.1946, -63.6983, 39.8386, 0.45", "67.702, -65.5122, 40.4863, 0.45", "68.2977, -67.3794, 41.1222, 1.59", "69.0264, -69.6084, 41.7757, 0.23", "69.25, -70.3093, 41.9912, 0.23", "69.7189, -71.8017, 42.4491, 1.36", "70.4982, -74.2055, 43.141, 0.45", "71.2748, -76.6128, 43.7803, 0.45", "72.0828, -79.2127, 44.4547, 2.73", "72.9565, -82.3803, 45.2212, 0.23", "73.2794, -83.5811, 45.5286, 0.23", "73.8673, -86.0185, 46.2032, 2.27" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "39.8734, 7.7975, 9.8008, 1.14", "42.3028, 9.6924, 11.7942, 1.14", "44.4577, 11.1924, 13.5258, 1.14", "46.9591, 12.6679, 15.4212, 0.68", "50.0479, 14.1723, 17.7359, 0.91", "52.9303, 15.1577, 19.9487, 0.45", "54.6208, 15.5933, 21.2255, 0.91", "56.739, 15.7775, 22.7998, 0.68", "58.5732, 15.6257, 24.1913, 0.68", "60.3451, 15.1821, 25.6077, 0.68", "63.5601, 13.7762, 28.5929, 0.68", "64.503, 13.2525, 29.6107, 1.59", "65.2422, 12.775, 30.5763, 1.59", "66.7508, 11.7531, 32.8496, 0.91", "68.5089, 10.5407, 35.7269, 1.36", "71.1152, 8.72006, 40.2679, 1.82", "73.1792, 7.15796, 44.2599, 0.91", "74.2232, 6.28311, 46.4681, 0.91", "75.4597, 5.18037, 49.2776, 1.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-66.7372, 71.6706, -15.9707, 0.23", "-68.322, 73.4427, -15.8815, 0.23", "-69.5341, 74.7961, -15.7805, 0.23", "-70.1481, 75.4723, -15.7305, 1.59", "-70.7509, 76.1586, -15.6946, 2.5", "-71.9506, 77.5843, -15.6302, 2.5", "-73.2998, 79.2818, -15.544, 0.23", "-73.7979, 79.9786, -15.5275, 0.23", "-74.376, 80.8369, -15.5052, 0.23", "-75.1092, 81.9645, -15.4579, 1.59", "-76.1682, 83.6086, -15.3888, 1.14", "-77.1528, 85.1459, -15.372, 0.23", "-77.8945, 86.3413, -15.4245, 1.59", "-78.5513, 87.4477, -15.5018, 2.27", "-79.3937, 88.8454, -15.6428, 0.23", "-80.0538, 89.9444, -15.7734, 1.14", "-80.6107, 90.896, -15.8896, 0.23", "-81.1171, 91.8128, -15.978, 0.91", "-82.0692, 93.5885, -16.0754, 0.23", "-82.9258, 95.1852, -16.1252, 2.95", "-84.3863, 97.9491, -16.1324, 0.23", "-85.1779, 99.4405, -16.0778, 1.82", "-86.2055, 101.36, -15.9303, 0.23", "-86.8442, 102.488, -15.8207, 0.23", "-87.5174, 103.618, -15.6938, 0.91", "-88.2097, 104.73, -15.5922, 1.14", "-88.9433, 105.8, -15.5553, 0.23", "-89.7757, 106.948, -15.575, 1.36", "-90.7927, 108.314, -15.6592, 0.68", "-92.3104, 110.389, -15.8467, 0.68", "-93.4194, 111.96, -16.0256, 2.05", "-94.7585, 113.866, -16.2967, 0.23", "-95.9386, 115.613, -16.5565, 1.82", "-96.8847, 117.075, -16.7947, 0.23", "-97.2386, 117.672, -16.897, 1.14", "-98.0409, 119.182, -17.1746, 0.23", "-98.4836, 120.13, -17.3178, 1.14", "-98.843, 121.079, -17.4341, 1.14", "-99.089, 121.885, -17.5257, 0.23", "-99.3374, 122.807, -17.6092, 1.14", "-99.737, 124.351, -17.8178, 0.23", "-100.127, 125.923, -18.1028, 2.05", "-100.36, 126.926, -18.3338, 0.23", "-100.838, 128.923, -18.8739, 0.23", "-101.055, 129.794, -19.1343, 1.14", "-101.565, 131.64, -19.8278, 0.23", "-102.007, 133.171, -20.4888, 1.14", "-102.552, 135.033, -21.3542, 0.23", "-102.788, 135.814, -21.7199, 3.18", "-103.127, 136.94, -22.2417, 3.18", "-104.382, 141.07, -24.1819, 1.14", "-104.711, 142.156, -24.6708, 1.82", "-105.169, 143.729, -25.3661, 0.23", "-105.38, 144.52, -25.7011, 0.68", "-105.511, 145.085, -25.9207, 0.23", "-105.883, 146.904, -26.5439, 0.68", "-106.059, 147.935, -26.8206, 0.23", "-106.285, 149.461, -27.2104, 2.27", "-106.459, 150.862, -27.5415, 2.5", "-106.673, 152.532, -27.91, 0.23", "-106.787, 153.352, -28.0296, 0.45", "-106.916, 154.482, -28.1286, 0.23", "-107.047, 155.613, -28.2174, 0.23", "-107.186, 156.628, -28.3012, 0.23", "-107.436, 158.448, -28.3995, 1.59", "-107.827, 161.193, -28.4552, 0.23", "-107.994, 162.232, -28.4581, 0.23", "-108.16, 163.111, -28.4587, 0.45", "-108.485, 164.47, -28.4666, 0.23", "-108.562, 164.778, -28.4742, 0.91", "-108.944, 166.259, -28.5612, 0.23", "-109.151, 167.018, -28.6519, 0.23", "-109.574, 168.54, -28.8036, 2.73", "-110.018, 170.367, -28.9744, 0.23", "-110.146, 170.97, -29.0443, 0.23", "-110.362, 172.171, -29.2213, 0.23", "-110.484, 172.972, -29.3612, 0.91", "-110.668, 174.486, -29.6526, 0.23", "-110.784, 175.487, -29.8651, 1.14", "-110.989, 177.101, -30.2494, 0.23", "-111.162, 178.292, -30.5145, 1.82", "-111.261, 178.915, -30.6486, 1.82", "-111.612, 181.107, -31.1197, 0.23", "-111.794, 182.276, -31.4241, 1.14", "-112.1, 184.099, -31.9288, 0.23", "-112.321, 185.333, -32.2822, 2.05", "-112.479, 186.113, -32.5451, 2.73", "-112.764, 187.456, -33.018, 0.23", "-113.245, 189.491, -33.7728, 1.14", "-113.726, 191.494, -34.6052, 0.23", "-113.923, 192.348, -34.9928, 0.68", "-114.201, 193.565, -35.5718, 0.23", "-114.479, 194.858, -36.1949, 2.27", "-114.679, 195.811, -36.6669, 2.27", "-115.084, 198.063, -37.7684, 0.23", "-115.203, 199.075, -38.2822, 0.91", "-115.278, 200.491, -38.988, 0.23", "-115.257, 201.568, -39.5043, 1.36", "-115.096, 203.641, -40.5775, 0.45", "-115.041, 204.105, -40.8218, 0.45", "-114.798, 205.427, -41.5383, 1.59", "-114.476, 206.844, -42.3902, 0.91", "-114.224, 207.834, -43.057, 0.23", "-113.908, 209.143, -43.9571, 0.23", "-113.552, 211.073, -45.3731, 2.05", "-113.432, 212.12, -46.2055, 0.23", "-113.367, 213.043, -46.9812, 1.14", "-113.347, 214.532, -48.2488, 1.14", "-113.486, 216.556, -50.0053, 0.23", "-113.75, 218.545, -51.6922, 1.82", "-114.099, 220.249, -53.1093, 0.45", "-114.255, 220.782, -53.5405, 1.36", "-114.64, 221.782, -54.3112, 1.36", "-115.353, 223.277, -55.3909, 0.23", "-115.852, 224.066, -55.9555, 1.14", "-116.293, 224.706, -56.345, 1.14", "-116.916, 225.558, -56.8609, 0.68", "-118.05, 227.175, -57.9048, 0.23", "-118.967, 228.531, -58.7713, 1.82", "-120.15, 230.383, -59.8926, 0.23", "-120.771, 231.355, -60.4966, 0.91", "-121.651, 232.803, -61.3952, 0.23", "-122.208, 233.814, -62.0427, 1.82" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-66.7372, 71.6706, -15.9707, 0.23", "-67.0495, 72.7416, -16.7626, 0.23", "-67.3411, 73.4881, -17.2939, 0.68", "-67.8034, 74.6148, -18.0337, 0.23", "-68.2078, 75.4882, -18.5676, 0.23", "-68.9571, 77.0433, -19.4839, 0.68", "-69.79, 78.7388, -20.4347, 0.23", "-70.1705, 79.4542, -20.7898, 0.68", "-71.815, 82.4371, -22.2031, 0.23", "-72.4972, 83.6556, -22.7461, 2.05", "-72.829, 84.2673, -22.9975, 2.73", "-74.4226, 87.3726, -24.0763, 0.23", "-75.2702, 89.0554, -24.6317, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "2.09513, 55.7566, -21.4338, 0.23", "5.22237, 60.5738, -22.6536, 0.23", "9.45683, 64.5995, -23.4693, 0.23", "14.1396, 68.203, -23.6752, 0.23", "18.6811, 71.9392, -23.1214, 0.23", "23.3308, 75.5317, -22.4736, 0.23", "28.1055, 78.948, -21.737, 0.23", "32.0497, 83.1276, -20.443, 0.23", "35.6848, 87.1692, -18.161, 0.23", "39.9432, 90.4215, -15.6411, 0.23", "43.3, 94.8516, -13.7189, 0.23", "46.8357, 99.3246, -12.2827, 0.23", "50.1356, 104.145, -11.7366, 0.23", "53.2968, 109.063, -12.2112, 0.23", "56.5993, 113.895, -11.8113, 0.23", "60.1441, 118.465, -10.7711, 0.23", "64.6468, 122.123, -9.64882, 0.23", "69.1122, 125.966, -9.26847, 0.23", "74.2028, 128.946, -9.8939, 0.23", "79.426, 131.751, -10.1842, 0.23", "84.1948, 135.25, -10.0886, 0.23", "88.9216, 138.794, -10.3646, 0.23", "93.8264, 142.111, -10.3963, 0.23", "99.1139, 144.742, -9.76521, 0.23", "104.397, 147.447, -9.58189, 0.23", "109.391, 150.634, -9.69207, 0.23", "114.569, 153.519, -9.95802, 0.23", "120.157, 155.347, -10.9282, 0.23", "126.05, 156.312, -11.0143, 0.23", "131.913, 157.417, -10.793, 0.23", "137.318, 159.61, -9.6235, 0.23" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.09513, 55.7566, -21.4338, 0.68", "5.79696, 62.2201, -22.0746, 0.23", "10.4393, 68.1128, -22.193, 0.23" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-94.0871, -19.2051, -33.0518, 0.23", "-98.3704, -17.0141, -36.102, 0.23", "-103.19, -14.8154, -38.2112, 0.23", "-108.311, -12.7994, -39.7236, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-94.0871, -19.2051, -33.0518, 0.68", "-102.973, -25.5886, -35.3661, 0.23", "-112.641, -30.7172, -37.8278, 0.23", "-121.443, -36.9108, -40.8865, 0.23", "-129.55, -43.0802, -45.5181, 0.23", "-138.284, -49.073, -49.1436, 0.23", "-146.621, -55.5228, -52.8771, 0.23", "-155.976, -60.7906, -56.114, 0.23", "-164.759, -66.9452, -59.309, 0.23", "-173.685, -71.4453, -64.4308, 0.23", "-183.13, -74.1854, -69.9172, 0.23", "-193.098, -76.8464, -74.4302, 0.23", "-201.157, -81.1609, -80.964, 0.23", "-207.701, -84.0766, -89.6498, 0.23", "-215.439, -88.163, -96.7045, 0.23", "-223.806, -91.8713, -103.242, 0.23", "-232.409, -94.3456, -110.08, 0.23", "-239.574, -96.1476, -118.592, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-34.2641, -15.6076, -6.95526, 1.36", "-37.024, -17.2346, -9.73017, 1.36", "-39.2687, -18.6445, -12.0004, 0.23", "-40.4398, -19.472, -13.1647, 1.14", "-42.991, -21.3441, -15.6118, 0.23", "-44.8266, -22.6914, -17.2562, 1.14", "-45.8314, -23.4375, -18.1064, 1.14", "-46.5254, -24.0018, -18.593, 1.14", "-48.0402, -25.4067, -19.5333, 0.23", "-48.6967, -26.019, -19.8573, 1.14", "-50.0049, -27.1402, -20.2665, 1.14", "-50.9502, -27.9108, -20.4723, 0.23", "-52.4933, -29.1139, -20.7403, 0.91", "-54.9191, -30.9821, -21.205, 1.59", "-56.552, -32.2781, -21.5342, 1.59", "-57.4578, -33.0335, -21.7241, 0.23", "-58.7843, -34.1681, -22.0188, 1.36", "-60.3382, -35.4727, -22.3687, 0.45", "-61.6721, -36.5824, -22.6942, 0.45", "-63.0042, -37.7428, -22.8588, 1.59", "-63.6635, -38.4193, -22.9685, 2.05" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-34.2641, -15.6076, -6.95526, 3.18", "-36.4312, -17.7646, -7.71767, 3.18", "-39.683, -21.1792, -8.78818, 2.73", "-41.9277, -23.5363, -9.52716, 2.5", "-44.1081, -25.8258, -10.245, 2.5", "-45.5796, -27.3709, -10.7294, 2.5", "-47.2204, -29.0939, -11.2695, 3.41", "-49.1741, -31.1733, -11.988, 3.86" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "162.589, -82.8814, -8.93533, 0.23", "170.674, -91.8496, -9.36153, 0.23" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "162.589, -82.8814, -8.93533, 0.68", "169.659, -90.0788, -10.2838, 0.23", "176.655, -97.2914, -11.9382, 0.23", "183.491, -104.796, -12.0383, 0.23" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "94.615, 23.1498, -0.107394, 1.14", "96.7104, 23.6557, 0.322048, 1.14", "99.4005, 24.3925, 0.625503, 0.68", "102.575, 25.3474, 0.791955, 0.68", "105.099, 26.1231, 0.838187, 0.68", "107.307, 26.8149, 0.829408, 0.68", "109.212, 27.4912, 0.798705, 1.36", "111.93, 28.6039, 0.680193, 2.27", "113.884, 29.4377, 0.563628, 1.36", "114.779, 29.7857, 0.478831, 2.27", "116.22, 30.3725, 0.299464, 2.05", "118.616, 31.3386, -0.00165826, 1.59", "121.092, 32.3116, -0.179442, 0.91", "123.274, 33.1004, -0.12464, 0.91", "125.756, 33.9631, -0.0467085, 1.36" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "94.615, 23.1498, -0.107394, 0.45", "95.718, 23.6874, 1.1726, 0.45", "97.5669, 24.6078, 3.14057, 0.45", "99.06, 25.3511, 4.72977, 1.36", "100.734, 26.1843, 6.51117, 0.45", "102.345, 26.9865, 8.22622, 0.91", "103.395, 27.509, 9.3432, 0.23", "104.008, 27.8549, 9.98251, 2.05" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "69.414, -83.6805, 36.4333, 0.23", "67.3471, -85.5052, 37.2692, 0.23", "66.5993, -86.1092, 37.688, 0.23", "66.0518, -86.4929, 38.0242, 1.36", "65.4898, -86.856, 38.3667, 1.36", "63.7414, -87.832, 39.2962, 0.23", "62.7535, -88.3441, 39.7839, 0.91", "60.5094, -89.3801, 40.838, 0.23", "58.5171, -90.205, 41.7065, 1.14", "57.8123, -90.474, 41.9996, 1.14", "55.2398, -91.4066, 43.0499, 0.23", "54.1005, -91.8151, 43.4919, 1.36", "52.1248, -92.5946, 44.2538, 0.23", "49.6501, -93.6503, 45.1984, 1.14", "46.7313, -95.0052, 46.3736, 0.23", "45.0506, -95.8494, 47.0976, 1.36", "44.4389, -96.1801, 47.3787, 1.36", "41.9986, -97.5424, 48.5809, 0.23", "41.398, -97.9004, 48.8991, 1.14", "40.753, -98.3391, 49.2439, 1.14", "39.957, -98.9049, 49.6446, 0.23", "39.3667, -99.2966, 49.9404, 0.68", "37.7946, -100.156, 50.6927, 0.23", "36.9529, -100.597, 51.132, 0.91", "36.4722, -100.899, 51.4103, 0.23", "35.5065, -101.63, 52.0203, 0.91", "34.2875, -102.84, 52.873, 0.23", "33.3162, -104.066, 53.5827, 1.14", "32.3111, -105.634, 54.2715, 0.23", "31.6721, -106.845, 54.7426, 2.27", "31.4038, -107.468, 54.9479, 2.27", "30.4545, -110.007, 55.8126, 0.23", "30.0613, -111.125, 56.1822, 1.36", "29.1043, -113.971, 57.1269, 0.23", "28.6509, -115.258, 57.5957, 2.27", "27.7356, -117.796, 58.6728, 0.23", "27.0805, -119.583, 59.5133, 0.91", "26.6367, -120.866, 60.1915, 0.23", "26.2545, -122.079, 60.8812, 1.59", "25.6773, -124.425, 62.2703, 0.23", "25.3875, -125.894, 63.1177, 1.82", "25.1924, -127.297, 63.8867, 1.82", "25.0092, -129.177, 64.7757, 0.23", "24.912, -130.488, 65.3449, 1.14", "24.7481, -132.269, 66.0234, 0.23", "24.6728, -133.174, 66.2919, 1.14", "24.5839, -134.656, 66.7047, 0.23", "24.4487, -135.857, 67.0141, 1.14", "24.1188, -137.97, 67.5597, 0.23", "23.9546, -138.816, 67.7926, 1.14", "23.6171, -140.426, 68.2396, 0.23", "23.3739, -141.633, 68.5644, 0.23", "22.9357, -143.833, 69.1195, 1.14", "22.5816, -145.682, 69.573, 0.23", "22.3132, -147.051, 69.8925, 0.23", "21.8273, -149.556, 70.432, 0.91", "21.5142, -151.036, 70.7181, 0.23", "21.1189, -152.734, 70.9158, 0.91", "20.6936, -154.612, 71.0543, 0.23", "20.2558, -156.312, 71.0977, 1.59", "19.7333, -158.383, 71.1084, 0.45", "18.9971, -161.105, 71.106, 2.27", "18.1228, -164.211, 71.1381, 0.23", "17.6457, -165.816, 71.0774, 0.23", "17.3003, -166.774, 71.0092, 0.23", "16.461, -168.746, 70.8383, 1.14", "15.7042, -170.33, 70.6916, 0.23", "14.7708, -172.181, 70.537, 0.23", "12.8564, -175.824, 70.3252, 1.36", "11.2844, -178.689, 70.1362, 0.23", "10.1468, -180.596, 69.9971, 2.05", "8.25482, -183.576, 69.7444, 0.23", "7.72881, -184.389, 69.674, 0.45", "7.04909, -185.4, 69.6084, 0.45", "6.15209, -186.663, 69.6506, 0.23", "4.85711, -188.547, 69.6937, 0.91", "4.36602, -189.172, 69.7025, 0.23", "3.58075, -189.873, 69.7234, 1.14" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "69.414, -83.6805, 36.4333, 0.45", "70.0467, -85.5668, 37.5651, 0.45", "70.6601, -87.2066, 38.575, 0.45", "71.095, -88.4285, 39.3179, 0.45", "71.8645, -90.584, 40.5922, 0.45", "72.4377, -92.0591, 41.4309, 0.68", "73.053, -93.5028, 42.1864, 0.23", "73.4747, -94.3086, 42.6186, 0.91", "73.9929, -95.1525, 43.059, 0.23", "74.4875, -95.916, 43.3954, 1.36", "75.2208, -97.0645, 43.8057, 1.82", "76.5979, -99.2478, 44.4979, 0.45", "78.3641, -102.075, 45.3035, 1.82", "79.3954, -103.661, 45.7551, 0.23", "80.5979, -105.462, 46.2641, 0.68", "81.4577, -106.782, 46.6311, 0.91", "82.1916, -107.964, 46.9428, 1.59", "83.2515, -109.691, 47.3162, 2.73" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "82.5857, -49.85, 39.3075, 0.23", "85.4264, -51.3159, 39.2181, 0.23", "87.0788, -51.9914, 39.1725, 0.91", "88.7983, -52.5754, 39.1451, 0.23", "89.908, -52.8961, 39.1491, 0.68", "91.9124, -53.4148, 39.2777, 0.23", "94.4172, -54.0004, 39.5353, 0.45", "95.6527, -54.1472, 39.746, 0.23", "96.8709, -54.1736, 39.9949, 1.14", "98.6812, -54.0953, 40.4588, 0.23", "100.839, -53.9064, 41.1015, 0.23", "101.998, -53.7408, 41.4921, 1.82", "104.35, -53.27, 42.2983, 0.68", "106.555, -52.7601, 42.8373, 1.14", "107.477, -52.5131, 42.98, 0.23", "108.485, -52.2076, 43.0379, 1.14", "110.848, -51.4263, 42.9322, 0.23", "113.119, -50.6517, 42.7108, 0.23", "116.085, -49.6468, 42.2928, 0.23", "118.144, -48.9708, 41.9537, 1.14", "120.572, -48.1379, 41.5873, 0.23", "122.263, -47.5346, 41.381, 1.14", "123.879, -46.966, 41.2651, 0.23", "125.082, -46.5705, 41.3223, 0.91", "126.713, -46.1054, 41.6592, 0.23", "128.279, -45.8578, 42.16, 0.91", "129.054, -45.8735, 42.5417, 0.23", "130.367, -46.0674, 43.3083, 2.27", "132.419, -46.5863, 44.52, 0.23", "133.106, -46.8109, 44.8524, 0.91", "135.036, -47.544, 45.5928, 0.23", "137.011, -48.3861, 46.1661, 0.91", "138.496, -49.0521, 46.5212, 0.23", "140.831, -50.0805, 46.8978, 0.91", "143.432, -51.1567, 47.1312, 0.23", "144.877, -51.654, 47.2015, 1.36", "147.064, -52.2364, 47.2548, 0.23", "149.222, -52.6976, 47.2312, 0.23", "150.955, -53.0254, 47.2303, 0.45", "152.202, -53.2078, 47.2554, 1.14", "154.916, -53.5078, 47.4155, 0.23", "156.966, -53.6803, 47.5328, 0.45", "159.693, -53.8464, 47.6999, 0.23", "161.494, -53.9342, 47.9039, 0.23", "162.512, -53.9933, 48.0812, 1.14", "163.942, -54.1008, 48.3931, 2.5", "165.351, -54.2363, 48.769, 2.73", "166.569, -54.3719, 49.104, 1.82", "169.052, -54.7196, 49.8171, 0.23", "169.878, -54.8763, 50.0139, 0.68", "172.258, -55.3667, 50.5552, 0.68", "174.676, -55.9125, 51.0552, 0.23", "176.15, -56.2921, 51.3052, 0.91", "177.836, -56.8124, 51.479, 0.23", "179.733, -57.5742, 51.4432, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "82.5857, -49.85, 39.3075, 0.68", "83.4313, -52.6949, 40.5104, 0.68", "84.2815, -54.8616, 41.5172, 1.14", "85.1434, -56.8286, 42.5895, 0.45", "86.0855, -58.7251, 43.7119, 0.45", "86.9475, -60.2713, 44.7308, 1.14", "87.6187, -61.407, 45.5117, 1.14", "88.3574, -62.3812, 46.3432, 0.23", "89.4151, -63.5847, 47.4341, 0.68", "90.1767, -64.4057, 48.156, 0.68", "91.3101, -65.7632, 49.1532, 0.23", "92.1986, -66.9354, 49.8902, 1.36", "92.8076, -67.7646, 50.3201, 2.05", "93.7376, -69.0398, 50.8555, 2.05", "94.5722, -70.2086, 51.3002, 0.91", "95.387, -71.3904, 51.7456, 1.36", "96.5459, -72.9756, 52.3311, 0.23", "97.9905, -74.8929, 53.124, 1.36", "98.579, -75.6349, 53.4714, 1.36", "100.431, -77.7472, 54.6775, 0.68", "101.001, -78.346, 55.0902, 0.68", "102.189, -79.6163, 56.0491, 0.45", "103.246, -80.8803, 57.0536, 0.45", "104.177, -82.2164, 58.1111, 0.23", "104.99, -83.548, 59.0547, 0.23", "105.821, -85.1855, 60.1543, 1.59", "106.464, -86.825, 61.3587, 0.23", "106.725, -87.7111, 62.0267, 2.5", "107.051, -89.1379, 63.0334, 2.5", "107.386, -91.2208, 64.3604, 2.5", "107.896, -94.5124, 66.2934, 0.23", "108.335, -97.4076, 68.0193, 0.23", "108.498, -98.396, 68.6351, 0.23", "108.863, -100.362, 69.8782, 1.36", "109.309, -102.863, 71.4533, 2.27", "109.485, -104.292, 72.2647, 2.27" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "188.444, -40.6932, 59.37, 0.23", "190.546, -41.6117, 60.5176, 0.23", "193.247, -42.6666, 61.8258, 1.36", "195.695, -43.4578, 62.8194, 0.23", "196.863, -43.799, 63.2276, 0.91", "199.062, -44.4065, 63.8911, 0.23", "199.843, -44.6093, 64.0921, 0.68", "200.419, -44.7156, 64.1756, 0.23", "202.372, -45.0146, 64.1346, 0.68", "203.129, -45.1359, 64.0497, 0.23", "204.035, -45.3249, 63.9325, 1.36", "205.203, -45.6187, 63.7716, 1.36", "206.266, -45.8926, 63.6605, 0.23", "208.231, -46.4063, 63.4974, 1.14", "210.089, -46.8775, 63.3769, 0.23", "211.46, -47.1836, 63.3126, 0.91", "213.033, -47.501, 63.2593, 0.23", "215.36, -47.9337, 63.199, 1.59", "216.371, -48.0937, 63.1825, 1.59", "218.585, -48.3775, 63.1623, 0.23", "219.762, -48.4994, 63.1469, 1.59", "220.592, -48.5604, 63.1238, 1.59", "222.059, -48.6366, 63.0528, 0.23", "223.048, -48.6945, 62.9952, 0.91", "224.253, -48.7939, 62.9543, 0.23", "226.045, -48.9784, 62.9184, 1.36", "229.204, -49.3336, 62.8811, 0.23", "230.77, -49.5082, 62.8741, 1.59", "234.204, -49.8688, 62.8885, 0.23", "236.297, -50.0564, 62.9196, 1.14", "238.136, -50.1578, 63.0339, 0.23", "239.513, -50.1573, 63.1899, 1.36", "240.871, -50.0572, 63.4418, 1.36", "242.04, -49.8611, 63.7313, 0.23", "243.03, -49.5712, 64.0322, 1.59", "245.952, -48.4825, 64.9988, 0.23", "247.65, -47.7997, 65.5883, 1.36", "249.479, -47.1266, 66.1785, 0.23", "250.255, -46.8787, 66.3977, 1.59", "252.019, -46.491, 66.8102, 0.23", "253.284, -46.3821, 67.009, 1.36", "254.481, -46.4791, 67.1722, 1.36", "256.406, -46.9359, 67.5453, 0.23", "257.364, -47.2193, 67.7597, 1.14", "259.208, -47.7864, 68.273, 0.23", "260.755, -48.2621, 68.8225, 1.36", "263.655, -49.0639, 69.9993, 0.23", "265.958, -49.5887, 71.0148, 0.23", "267.956, -49.936, 71.9574, 1.14", "269.631, -50.1961, 72.7435, 0.23", "271.441, -50.4018, 73.5535, 1.36", "272.554, -50.49, 74.0213, 0.23", "273.696, -50.5496, 74.4417, 1.59", "275.458, -50.6491, 75.0616, 0.23", "278.297, -50.9777, 76.0334, 0.23", "279.456, -51.1655, 76.3646, 0.23", "280.25, -51.3177, 76.5576, 1.36" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "188.444, -40.6932, 59.37, 0.23", "189.444, -43.3446, 56.1948, 0.23", "190.107, -45.1214, 54.2766, 0.23", "190.718, -46.8284, 52.5831, 1.14", "191.278, -48.4872, 51.0665, 0.23", "192.084, -50.9183, 49.0992, 1.14", "192.842, -53.2971, 47.3939, 0.23", "193.113, -54.1506, 46.9337, 0.68", "193.44, -55.3317, 46.4073, 0.23", "193.89, -56.8237, 45.7972, 1.14", "195.172, -60.56, 44.5468, 0.23", "195.847, -62.2803, 44.0715, 1.36", "196.773, -64.3796, 43.5196, 0.23", "197.954, -66.7712, 42.8925, 1.59", "199.697, -69.922, 41.7574, 0.23", "202.17, -73.9026, 39.9475, 0.23", "203.088, -75.1936, 39.1923, 0.23", "203.993, -76.3424, 38.3163, 2.05", "205.924, -78.5191, 36.2622, 0.23", "209.099, -81.8292, 32.4893, 0.23", "209.957, -82.7016, 31.2761, 1.59", "211.018, -83.6552, 29.5836, 0.23", "212.319, -84.6221, 27.5355, 2.27", "212.855, -84.9944, 26.6755, 0.91", "214.095, -85.8288, 24.7565, 0.23", "215.497, -86.8498, 22.8365, 1.36", "217.2, -88.2068, 20.4403, 0.23", "218.775, -89.6063, 18.3858, 1.82", "219.759, -90.4961, 17.2714, 0.23", "220.954, -91.6676, 16.0112, 0.23", "221.535, -92.2804, 15.4493, 1.14", "223.719, -95.0261, 13.4888, 0.23", "225.713, -97.6864, 11.8556, 1.36", "227.073, -99.5511, 10.8164, 0.91", "228.619, -101.587, 9.67902, 0.23", "229.926, -103.381, 8.69666, 1.59", "232.327, -106.698, 6.96438, 0.23" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "73.8673, -86.0185, 46.2032, 0.23", "75.8113, -88.4793, 47.9164, 0.23", "76.917, -90.0898, 48.9306, 2.05", "79.2611, -93.4351, 51.0002, 0.45", "80.5268, -95.2113, 52.0428, 0.45", "82.1394, -97.4665, 53.3731, 0.45", "83.7278, -99.6761, 54.6496, 1.82", "85.5902, -102.391, 56.0438, 0.45", "87.0821, -104.574, 57.1016, 0.45", "88.2616, -106.274, 57.8199, 1.59", "89.899, -108.791, 58.9349, 0.23", "90.775, -110.193, 59.5418, 0.91", "92.1884, -112.3, 60.3651, 0.23", "93.1333, -113.693, 60.882, 1.36", "94.1182, -115.261, 61.4112, 1.36", "95.7388, -117.863, 62.2766, 0.45", "97.2094, -120.215, 62.9931, 2.27", "99.0314, -123.114, 63.9258, 0.23", "100.341, -125.131, 64.5997, 0.23", "101.486, -126.869, 65.1897, 2.05" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "73.8673, -86.0185, 46.2032, 0.91", "73.171, -88.6213, 45.5098, 0.91", "72.5736, -90.8676, 44.9956, 0.23", "72.1227, -92.3284, 44.6402, 1.36", "71.5677, -93.9325, 44.2316, 0.23", "71.0094, -95.471, 43.8483, 0.91", "70.5371, -96.718, 43.5192, 0.23", "69.7657, -98.463, 43.0193, 1.36", "68.5899, -100.69, 42.1506, 0.23", "67.5297, -102.396, 41.266, 0.23", "67.0252, -103.047, 40.8263, 1.14", "65.5772, -104.586, 39.4938, 0.23", "63.5785, -106.417, 37.6781, 1.82", "61.3643, -108.146, 35.7327, 0.23", "60.0193, -109.032, 34.6268, 0.23", "57.7011, -110.313, 32.8584, 0.68", "56.0393, -111.125, 31.6448, 0.23", "54.9685, -111.581, 30.9166, 1.36", "53.0437, -112.339, 29.7044, 0.23", "50.8595, -113.24, 28.4729, 1.59", "48.4238, -114.312, 27.2242, 0.23", "46.7972, -115.061, 26.4878, 0.23", "44.9295, -115.961, 25.7792, 1.36", "42.9007, -117.0, 25.1448, 0.23", "41.467, -117.808, 24.7917, 0.23", "39.0805, -119.298, 24.3931, 1.82", "37.5376, -120.35, 24.1841, 0.45", "35.4773, -121.853, 23.8621, 0.23", "34.5589, -122.548, 23.6693, 0.91", "32.8923, -123.78, 23.225, 0.23", "31.7234, -124.565, 22.8086, 1.14", "29.1446, -126.136, 21.6731, 0.23", "27.3204, -127.195, 20.7766, 1.36", "25.7954, -128.064, 19.9795, 0.23", "24.8419, -128.583, 19.5307, 0.91", "23.4759, -129.317, 18.9415, 0.23", "22.5229, -129.829, 18.5572, 0.23", "21.7727, -130.218, 18.3161, 1.14", "19.2889, -131.45, 17.5601, 0.23", "17.4808, -132.351, 17.0084, 0.91", "15.9142, -133.168, 16.488, 0.23", "15.2469, -133.523, 16.2664, 1.14", "14.2991, -134.041, 15.9626, 1.14", "13.0007, -134.798, 15.6318, 0.23", "11.6588, -135.644, 15.3335, 0.91", "9.98118, -136.772, 14.9723, 0.23", "9.14887, -137.362, 14.8177, 0.23", "7.44702, -138.618, 14.5055, 1.14", "5.56653, -140.167, 14.1473, 0.23", "4.10543, -141.447, 13.8938, 1.36", "2.33433, -142.994, 13.4943, 0.23", "1.44415, -143.736, 13.2834, 1.36", "0.855234, -144.2, 13.1288, 1.36", "-0.813038, -145.472, 12.5641, 0.23", "-1.69658, -146.123, 12.2384, 1.14", "-3.2252, -147.15, 11.7666, 0.23", "-4.39969, -147.886, 11.3698, 0.91", "-5.52997, -148.548, 10.9947, 0.23", "-7.06548, -149.414, 10.5627, 0.23", "-8.03901, -149.941, 10.3816, 0.45", "-9.63881, -150.825, 10.1361, 1.14", "-10.9846, -151.591, 10.0903, 0.23", "-11.7756, -152.028, 10.0497, 0.23", "-13.1697, -152.802, 9.98898, 1.14", "-14.6972, -153.674, 9.91215, 0.23", "-16.9915, -155.082, 9.72688, 1.14", "-18.6175, -156.161, 9.59827, 0.23", "-20.4155, -157.407, 9.49508, 0.23", "-21.4676, -158.17, 9.42906, 0.23", "-23.7474, -159.931, 9.25087, 0.23", "-24.5292, -160.559, 9.19176, 0.68", "-26.512, -162.293, 9.09762, 0.23", "-27.6564, -163.339, 9.01944, 1.14", "-28.4889, -164.157, 9.04284, 0.23", "-30.1317, -165.813, 9.12073, 1.36", "-35.0529, -171.539, 6.42076, 1.36", "-39.8914, -177.465, 4.04944, 1.36", "-45.5143, -182.89, 2.23517, 1.36", "-50.2968, -189.154, 0.920125, 1.36", "-55.5668, -194.89, -0.954205, 1.36" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "75.4597, 5.18037, 49.2776, 1.14", "75.8247, 3.85569, 51.7537, 1.14", "76.2974, 1.63069, 55.1986, 0.45", "76.6321, -0.402282, 58.3212, 0.91", "76.7206, -1.55113, 60.013, 0.23", "76.7231, -2.04777, 60.7952, 1.14", "76.4897, -3.5302, 63.5063, 0.23", "75.6925, -4.93769, 66.8229, 0.91", "74.6275, -5.9192, 69.6778, 0.91", "73.7277, -6.41715, 71.5992, 2.05", "72.1459, -6.93739, 74.5684, 0.68", "69.7166, -7.4839, 78.7404, 1.59", "67.0951, -7.85763, 82.7711, 0.23", "66.3119, -7.93953, 83.8265, 1.36", "64.3298, -8.16764, 86.1958, 0.45", "63.4749, -8.29162, 87.0991, 1.14", "60.7411, -8.91215, 89.5516, 0.23", "58.8846, -9.47357, 91.0341, 1.14", "57.7226, -9.82755, 91.81, 0.45", "56.0651, -10.3262, 92.8546, 2.27", "52.0736, -11.5576, 95.2131, 0.23", "49.6436, -12.2657, 96.6721, 1.14", "48.8513, -12.4538, 97.1451, 0.23", "46.5205, -12.816, 98.672, 1.14", "43.4962, -13.0522, 101.026, 0.23", "41.635, -13.079, 102.663, 0.23", "40.4584, -13.0397, 103.876, 0.23", "38.55, -12.9465, 106.094, 1.14", "35.9354, -12.8704, 109.653, 2.05", "33.9268, -12.8892, 112.895, 0.68", "33.2477, -12.935, 114.007, 0.68", "31.1728, -13.1706, 117.143, 0.68", "30.4183, -13.2807, 118.199, 1.36", "28.6029, -13.6154, 120.548, 0.23", "25.9816, -14.2623, 123.754, 1.14", "24.0567, -14.7668, 126.072, 0.23", "21.2206, -15.5042, 129.671, 0.91", "18.9962, -16.1282, 132.493, 0.23", "18.2124, -16.418, 133.531, 1.14", "16.554, -17.3969, 135.898, 0.45", "15.2578, -18.6876, 138.106, 1.14", "14.2905, -20.105, 140.049, 0.23", "13.6264, -21.2872, 141.421, 1.14", "12.7993, -22.8744, 143.088, 0.23", "11.8486, -24.64, 144.897, 1.36", "9.90182, -27.8297, 147.995, 0.23", "8.94493, -29.2589, 149.279, 0.91", "7.57078, -31.2252, 150.957, 0.91" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "75.4597, 5.18037, 49.2776, 0.91", "78.0316, 7.42778, 50.1862, 0.91", "79.6017, 8.79982, 50.7409, 0.91", "82.2503, 11.1143, 51.6765, 1.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-122.208, 233.814, -62.0427, 0.23", "-120.804, 234.905, -63.3058, 0.23", "-120.119, 235.631, -63.9574, 1.14", "-119.058, 237.051, -65.0338, 0.23", "-118.367, 238.182, -65.7735, 0.91", "-117.867, 239.193, -66.3318, 0.23", "-117.448, 240.191, -66.7689, 0.91", "-116.666, 242.761, -67.4883, 0.23", "-116.396, 244.084, -67.728, 0.23", "-116.21, 245.7, -67.8147, 0.23", "-116.032, 248.399, -67.6427, 0.91", "-115.942, 250.59, -67.3307, 0.23", "-115.935, 252.078, -67.003, 1.59", "-115.965, 254.579, -66.2796, 0.23", "-115.965, 256.85, -65.5285, 0.91", "-115.927, 259.044, -64.7094, 0.23", "-115.845, 260.597, -64.0559, 1.36", "-115.667, 263.278, -62.9679, 0.23", "-115.604, 263.924, -62.7081, 0.23", "-115.453, 264.699, -62.3454, 0.23", "-115.213, 265.509, -62.0297, 0.23", "-114.566, 267.166, -61.4417, 0.23" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-122.208, 233.814, -62.0427, 0.23", "-119.9, 231.85, -64.2924, 0.23", "-118.418, 230.589, -65.7365, 0.23", "-117.14, 229.501, -66.9818, 0.23", "-115.646, 228.23, -68.4381, 1.14", "-114.725, 227.446, -69.3357, 1.82", "-106.924, 221.91, -74.2368, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "137.318, 159.61, -9.6235, 0.23", "144.943, 165.158, -9.36654, 0.23", "152.863, 170.197, -10.451, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "137.318, 159.61, -9.6235, 0.68", "146.945, 167.626, -8.05907, 0.23", "156.284, 176.007, -6.79645, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "10.4393, 68.1128, -22.193, 0.23", "16.4935, 74.6272, -24.6392, 0.23", "21.0262, 82.4285, -26.2802, 0.23", "26.1085, 89.8983, -27.9385, 0.23", "31.1796, 97.4605, -29.1259, 0.23", "37.1964, 103.943, -31.748, 0.23", "41.9484, 110.685, -35.8499, 0.23", "47.3596, 116.804, -40.1577, 0.23", "53.4219, 123.033, -43.2714, 0.23", "59.375, 128.79, -47.3861, 0.23", "64.4569, 134.296, -52.8148, 0.23", "70.1886, 138.672, -58.6608, 0.23", "76.677, 142.041, -64.4152, 0.23", "83.3972, 146.944, -68.5108, 0.23", "88.7904, 151.976, -74.1195, 0.23", "93.2422, 157.143, -80.3849, 0.23", "98.1351, 162.152, -86.4543, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.4393, 68.1128, -22.193, 0.68", "14.2038, 74.4686, -21.9009, 0.23", "18.4676, 80.5235, -21.7792, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-63.6635, -38.4193, -22.9685, 0.23", "-61.4305, -40.8462, -21.5838, 0.23", "-59.3647, -43.1655, -20.3091, 0.23", "-57.9642, -44.7351, -19.4705, 0.23", "-55.8333, -47.302, -18.189, 0.23", "-53.5868, -50.0079, -16.838, 0.23", "-51.1803, -52.9067, -15.3908, 0.23", "-49.4713, -54.9725, -14.4062, 0.23", "-46.8324, -58.3198, -12.8507, 0.23", "-44.9297, -60.8674, -11.7358, 0.23", "-39.8448, -68.1469, -8.60272, 0.23", "-33.1688, -73.4197, -4.41992, 0.23", "-25.7925, -78.4378, -1.16747, 0.23", "-17.6388, -81.2123, 2.93353, 0.23", "-9.0364, -84.1529, 5.83298, 0.23", "-0.0964093, -86.0859, 8.5967, 0.23", "9.11279, -86.8038, 11.0703, 0.23", "18.1076, -86.6509, 14.3143, 0.23", "27.015, -86.0169, 17.7343, 0.23", "36.3519, -85.0437, 19.5332, 0.23", "45.8449, -85.8066, 20.402, 0.23", "55.0051, -86.7546, 22.975, 0.23", "63.9669, -86.1624, 26.2575, 0.23", "73.0154, -86.2699, 29.3505, 0.23", "82.2649, -87.6377, 31.3462, 0.23", "91.6421, -88.7729, 32.835, 0.23", "100.679, -91.426, 34.4196, 0.23", "109.365, -94.6072, 36.7604, 0.23", "118.255, -97.931, 37.7658, 0.23", "127.184, -101.311, 37.7066, 0.23", "136.395, -103.735, 36.8968, 0.23", "145.792, -105.362, 36.1944, 0.23", "155.015, -105.98, 33.7535, 0.23", "164.175, -105.275, 31.1435, 0.23", "172.972, -102.849, 28.4228, 0.23", "181.623, -99.3403, 26.6407, 0.23", "190.022, -94.996, 25.832, 0.23", "198.584, -91.0932, 24.5384, 0.23", "206.777, -87.1012, 21.9057, 0.23", "214.969, -83.6681, 18.5451, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-63.6635, -38.4193, -22.9685, 0.23", "-66.7318, -39.1156, -23.3546, 0.23", "-69.2522, -39.4119, -23.5312, 0.23", "-71.3939, -39.6636, -23.6813, 0.23", "-72.9862, -39.8508, -23.7929, 0.23", "-74.7533, -40.0585, -23.9167, 0.23", "-75.6165, -40.16, -23.9772, 0.23", "-78.0008, -40.2083, -24.1136, 0.23", "-87.6679, -40.0853, -25.8334, 0.23", "-97.4142, -40.7985, -26.7988, 0.23", "-106.812, -43.1647, -28.319, 0.23", "-116.18, -45.068, -30.5366, 0.23", "-125.753, -46.674, -31.9948, 0.23", "-135.085, -49.6765, -32.1187, 0.23", "-144.031, -53.6438, -32.2575, 0.23", "-153.505, -56.0622, -31.4455, 0.23", "-162.876, -58.761, -30.3902, 0.23", "-171.751, -62.3834, -28.368, 0.23", "-179.759, -66.7882, -24.8731, 0.23", "-187.464, -72.2253, -22.3582, 0.23", "-194.792, -77.2374, -18.2725, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-49.1741, -31.1733, -11.988, 0.91", "-52.1724, -33.3726, -11.437, 0.91", "-53.9934, -34.7103, -11.1176, 0.91", "-55.3192, -35.6866, -10.8367, 1.36", "-57.4468, -37.241, -10.3627, 2.05", "-59.2876, -38.5996, -9.96749, 1.36", "-59.8119, -38.9832, -9.84254, 1.36", "-61.3899, -40.1369, -9.31269, 0.68", "-63.1909, -41.3908, -8.65514, 1.36", "-64.3735, -42.1633, -8.25597, 2.5", "-67.15, -43.8997, -7.26333, 1.59", "-69.7469, -45.4155, -6.31011, 2.05", "-72.2611, -46.8443, -5.38981, 2.05", "-74.8858, -48.2718, -4.44459, 3.86", "-77.8085, -49.7809, -3.45192, 2.73", "-81.1222, -51.4171, -2.3794, 1.59", "-83.681, -52.6426, -1.60575, 0.68", "-84.6983, -53.1331, -1.35113, 0.68", "-87.5032, -54.4849, -0.790797, 1.82", "-88.556, -54.9575, -0.620171, 1.82", "-90.5371, -55.7726, -0.46054, 0.23", "-91.2723, -56.0558, -0.481068, 0.23", "-93.2697, -56.8141, -0.629715, 1.59", "-95.0878, -57.4789, -0.889477, 1.59", "-97.087, -58.1493, -1.24494, 2.73", "-98.8848, -58.6872, -1.47935, 2.73", "-100.481, -59.1214, -1.5436, 2.73", "-102.571, -59.6458, -1.43655, 1.59", "-104.671, -60.1438, -1.13357, 2.5", "-108.193, -60.9628, -0.38045, 0.68", "-111.229, -61.6792, 0.430293, 0.68", "-114.034, -62.3218, 1.28715, 1.14", "-116.411, -62.8234, 2.12412, 2.27", "-119.06, -63.3369, 3.22921, 2.27", "-120.365, -63.5863, 3.88985, 2.27" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-49.1741, -31.1733, -11.988, 0.91", "-50.4388, -36.1598, -12.8139, 0.91", "-51.1894, -39.047, -13.3054, 0.45", "-51.8473, -41.6629, -13.7774, 1.14", "-52.3719, -43.7112, -14.1792, 0.23", "-52.8235, -45.3741, -14.5118, 0.23", "-53.2007, -46.6863, -14.7996, 1.14", "-54.0064, -49.3291, -15.446, 0.45", "-54.5297, -51.0871, -15.9653, 0.68", "-55.2547, -53.5501, -16.8643, 0.23", "-55.6262, -54.9338, -17.4157, 0.91", "-56.0439, -56.8486, -18.1974, 0.23", "-56.5119, -59.5148, -19.3357, 1.36", "-56.9198, -62.3582, -20.5861, 0.23", "-57.2353, -65.1317, -21.7463, 0.23", "-57.3601, -66.5408, -22.3049, 1.14", "-57.4955, -68.4801, -22.967, 0.23", "-57.6303, -70.8037, -23.6943, 0.23", "-57.7206, -72.3722, -24.1447, 1.14", "-57.9982, -75.8914, -25.008, 0.45", "-58.1986, -78.1656, -25.4806, 0.45", "-58.667, -82.544, -26.382, 1.82", "-61.555, -92.0863, -29.7055, 1.82", "-64.7759, -101.023, -34.2651, 1.82", "-69.4596, -109.358, -38.7545, 1.82", "-73.0657, -118.506, -42.5118, 1.82", "-75.1525, -128.335, -45.5452, 1.82", "-76.3387, -138.497, -47.8159, 1.82", "-77.5364, -148.68, -49.973, 1.82", "-78.6104, -158.77, -52.6059, 1.82", "-78.3897, -168.417, -56.7603, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "125.756, 33.9631, -0.0467085, 0.23", "128.807, 33.2273, -2.15241, 0.23", "130.064, 32.9629, -2.95027, 0.68", "132.109, 32.5326, -4.24874, 0.23", "133.051, 32.3344, -4.84663, 0.68", "134.955, 31.9338, -6.05556, 0.23", "135.491, 31.8209, -6.39596, 0.91", "136.679, 31.7547, -7.04099, 0.23", "146.937, 29.0481, -12.3356, 0.23", "157.482, 28.1871, -17.717, 0.23", "168.544, 26.6041, -21.7136, 0.23", "180.164, 25.6512, -23.9456, 0.23", "191.934, 24.2108, -24.4639, 0.23", "203.587, 22.922, -26.319, 0.23", "215.003, 23.783, -29.4515, 0.23" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "125.756, 33.9631, -0.0467085, 0.68", "127.273, 34.7675, 0.0498189, 0.68", "129.897, 35.928, 0.121536, 2.05", "131.548, 36.6525, 0.266534, 2.05", "134.391, 37.9936, 0.652397, 0.68", "136.175, 38.869, 0.937518, 1.36", "139.35, 40.4252, 1.46496, 2.27", "141.941, 41.6831, 1.92771, 0.68", "144.709, 42.8938, 2.41357, 0.68", "146.495, 43.633, 2.71283, 1.59", "147.929, 44.2218, 2.96465, 2.73", "150.319, 45.2671, 3.38419, 2.5", "152.924, 46.4818, 3.82122, 1.14", "156.573, 48.0704, 4.39729, 0.68", "159.694, 49.2775, 4.69612, 1.14", "162.434, 50.2343, 4.93306, 0.45" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "104.008, 27.8549, 9.98251, 0.23", "106.263, 27.4322, 11.3406, 0.23", "108.36, 27.2815, 12.6605, 0.68", "109.752, 27.3272, 13.655, 0.68", "111.218, 27.4922, 14.8062, 1.59", "112.395, 27.7435, 15.7836, 0.45", "113.686, 28.0363, 16.8583, 0.45", "114.574, 28.3242, 17.6005, 0.45", "116.211, 28.9034, 18.834, 1.14", "117.999, 29.4688, 20.032, 0.23", "119.547, 29.8966, 20.9869, 1.36", "120.932, 30.1884, 21.7449, 0.23", "122.116, 30.3113, 22.2933, 0.68", "123.529, 30.3671, 22.9435, 0.23", "124.898, 30.3627, 23.5291, 1.36", "127.44, 30.3009, 24.5787, 0.23", "128.694, 30.2459, 25.0837, 1.14", "131.988, 30.1367, 26.481, 0.23", "133.329, 30.0592, 27.149, 0.23", "134.096, 30.0275, 27.5748, 0.23", "135.562, 30.0186, 28.5144, 2.27", "137.096, 30.0974, 29.6048, 1.36", "139.523, 30.2655, 31.4632, 0.23", "141.615, 30.4931, 33.1253, 0.23", "143.152, 30.7271, 34.3325, 0.68", "145.702, 31.2183, 36.3704, 0.23", "147.006, 31.5389, 37.4652, 0.23", "148.103, 31.9061, 38.3912, 1.14", "149.807, 32.6059, 39.7553, 0.23", "151.131, 33.1928, 40.6887, 2.27", "152.25, 33.6509, 41.4197, 2.27", "154.537, 34.616, 42.7826, 0.23", "155.66, 35.0596, 43.4274, 0.91", "157.481, 35.7856, 44.4162, 0.23", "159.133, 36.3827, 45.2836, 1.36", "161.386, 37.1057, 46.404, 0.23", "162.882, 37.514, 47.115, 1.14", "165.306, 38.0761, 48.3123, 0.23", "167.192, 38.3315, 49.5046, 1.36", "168.97, 38.427, 50.8235, 0.23", "170.288, 38.3053, 52.003, 1.36", "172.411, 37.7567, 54.3118, 0.23", "174.258, 36.9843, 56.7614, 1.82", "177.048, 35.488, 61.2797, 0.23", "178.087, 34.8477, 63.1686, 2.05", "179.693, 33.7868, 66.2872, 0.68", "181.847, 32.3642, 70.611, 1.14", "183.557, 31.3917, 73.8498, 1.36", "184.634, 30.8927, 75.7165, 0.23", "185.601, 30.555, 77.4188, 0.23", "186.432, 30.2905, 79.0588, 0.23", "187.424, 30.1152, 81.2601, 0.91", "188.189, 29.9734, 83.4489, 0.91", "189.058, 29.739, 86.7488, 0.23", "189.544, 29.5075, 89.3474, 0.23", "189.759, 29.3405, 91.5617, 1.82", "189.851, 29.198, 93.6026, 0.45", "189.933, 28.9897, 96.1233, 1.36", "190.089, 28.6695, 98.5941, 0.23", "190.254, 28.5372, 99.8492, 1.36", "190.586, 28.328, 101.687, 0.23", "191.063, 28.0717, 104.052, 1.36", "191.771, 27.6081, 107.43, 0.23", "192.297, 27.1215, 110.461, 2.05", "192.72, 26.5113, 113.385, 0.68", "193.257, 25.6104, 117.517, 1.59", "193.401, 25.3006, 118.866, 1.59", "193.678, 24.4526, 122.524, 0.23", "193.738, 23.9403, 124.628, 0.23", "193.682, 22.9523, 128.549, 0.23" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "104.008, 27.8549, 9.98251, 0.23", "103.248, 30.811, 11.2303, 0.23", "102.888, 32.294, 11.8303, 1.14", "102.548, 33.7928, 12.4338, 0.23", "101.962, 36.2465, 13.4297, 1.14", "101.45, 38.2887, 14.2638, 0.23", "100.828, 40.6903, 15.2498, 0.68", "100.091, 43.697, 16.4424, 0.23", "99.8192, 44.8779, 16.9138, 2.27", "99.1031, 48.3997, 18.3844, 0.91", "98.9184, 49.3872, 18.8167, 0.91", "98.6632, 50.9148, 19.5083, 1.59", "98.303, 53.8056, 20.9161, 0.23", "98.2072, 55.0518, 21.5153, 0.23", "98.1404, 57.2742, 22.5784, 2.05", "98.1787, 58.4709, 23.0557, 2.05", "98.3537, 60.9247, 23.8632, 0.23", "98.5625, 62.7805, 24.2905, 0.91", "98.8152, 64.2772, 24.4537, 0.68", "99.3967, 66.8623, 24.5104, 0.23", "100.472, 70.3267, 24.2919, 1.14", "101.383, 72.5271, 23.9294, 0.23", "102.596, 74.6819, 23.327, 0.23", "104.316, 77.0653, 22.4659, 1.36", "105.033, 77.8332, 22.158, 1.82", "106.222, 78.8018, 21.6907, 0.45", "108.562, 80.348, 21.0038, 0.91", "110.108, 81.2544, 20.6059, 0.23", "111.933, 82.2419, 20.2652, 0.91", "113.379, 82.9905, 20.0693, 0.23", "115.554, 84.1718, 19.8758, 1.36", "117.333, 85.2922, 19.731, 0.23", "118.531, 86.1181, 19.6672, 1.36", "119.897, 87.1345, 19.5426, 1.82", "121.573, 88.4041, 19.4093, 1.82", "123.797, 90.2182, 19.291, 0.45", "126.424, 92.6649, 19.2768, 1.14", "129.013, 95.5865, 19.4156, 0.23", "130.827, 98.2112, 19.7676, 1.14", "131.684, 100.036, 20.1869, 2.05", "132.075, 101.607, 20.7056, 2.05", "132.216, 103.917, 21.6097, 2.05", "132.061, 106.368, 22.7087, 0.91", "131.751, 108.373, 23.5213, 1.59", "131.353, 110.679, 24.3614, 0.23", "131.014, 112.863, 25.0271, 1.36", "130.663, 115.399, 25.7589, 0.23", "130.53, 116.357, 26.0283, 0.91", "130.083, 119.285, 26.8448, 0.23", "129.862, 120.538, 27.1809, 1.36", "129.115, 124.261, 28.1901, 0.23", "128.331, 127.417, 29.178, 2.27", "127.764, 129.404, 29.924, 0.23", "127.293, 130.913, 30.547, 1.14", "126.928, 132.056, 31.0716, 0.23", "126.561, 133.303, 31.6412, 1.14", "126.108, 135.545, 32.6434, 0.23", "125.921, 137.667, 33.5246, 0.91", "125.961, 139.195, 34.1105, 0.23", "126.104, 140.808, 34.5879, 2.05", "126.357, 142.998, 35.1581, 0.68", "126.641, 144.953, 35.5936, 0.68", "127.017, 147.419, 36.0425, 1.59", "127.419, 150.054, 36.4368, 0.23", "127.996, 153.458, 36.7869, 1.36", "128.37, 155.353, 36.9227, 0.23", "128.997, 157.984, 37.0822, 1.36", "129.658, 160.478, 37.2609, 0.23", "130.397, 163.168, 37.563, 1.36", "131.358, 166.621, 38.0589, 0.23", "131.851, 168.351, 38.3781, 0.91", "132.752, 171.656, 39.0159, 0.23", "133.395, 174.215, 39.5762, 0.91", "134.347, 178.614, 40.7161, 0.23", "134.6, 180.367, 41.2491, 0.23", "134.738, 181.888, 41.7796, 1.14", "134.797, 183.711, 42.4209, 0.23", "134.772, 184.752, 42.7842, 1.36", "134.693, 186.172, 43.2623, 1.36", "134.613, 188.936, 44.0761, 0.23", "137.451, 199.569, 46.7447, 0.23", "139.279, 210.629, 48.344, 0.23", "140.02, 221.835, 49.7782, 0.23", "142.621, 232.862, 48.8332, 0.23", "146.215, 243.484, 50.5286, 0.23", "148.964, 254.386, 51.9544, 0.23", "150.288, 265.627, 52.5422, 0.23", "153.244, 276.519, 53.6479, 0.23", "158.283, 286.441, 55.9324, 0.23", "163.799, 296.363, 56.7709, 0.23", "170.148, 305.356, 59.6892, 0.23" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "83.2515, -109.691, 47.3162, 0.91", "83.6699, -112.304, 48.8374, 0.91", "83.9926, -114.171, 49.9343, 1.36", "84.2172, -115.406, 50.64, 0.23", "84.5117, -116.823, 51.4379, 1.14", "85.0958, -119.138, 52.7167, 0.23", "85.9414, -122.163, 54.3462, 1.82", "87.0432, -125.59, 56.0413, 0.23", "87.5539, -126.805, 56.6271, 0.91", "87.924, -127.513, 56.986, 0.91", "88.7258, -128.761, 57.6545, 0.23", "89.3708, -129.547, 58.1284, 0.23", "90.0129, -130.101, 58.5477, 0.23", "91.8893, -131.268, 59.526, 0.91", "92.9497, -131.834, 60.0417, 0.23", "94.188, -132.442, 60.6014, 1.14", "96.7723, -133.487, 61.6048, 0.23", "97.6178, -133.778, 61.8726, 0.91", "100.157, -134.543, 62.4791, 0.23", "101.467, -134.906, 62.6347, 0.23", "102.934, -135.287, 62.6568, 0.91", "104.936, -135.853, 62.55, 0.23", "105.733, -136.113, 62.472, 1.14", "107.404, -136.773, 62.3318, 0.23", "109.233, -137.605, 62.2049, 1.14", "111.222, -138.617, 62.1126, 0.23", "113.962, -140.116, 62.0584, 1.82", "115.942, -141.256, 62.1588, 0.23", "117.892, -142.371, 62.3687, 0.23", "119.236, -143.145, 62.597, 1.14", "120.85, -144.09, 62.9663, 0.23", "123.001, -145.388, 63.5282, 1.59", "125.445, -146.887, 64.1179, 0.23", "127.661, -148.307, 64.5892, 1.36", "129.399, -149.469, 64.9093, 0.23", "130.821, -150.509, 65.1066, 0.91", "131.91, -151.407, 65.2102, 0.23", "134.153, -153.493, 65.3142, 1.82", "136.211, -155.594, 65.3012, 0.23", "137.038, -156.471, 65.2821, 0.91", "138.802, -158.388, 65.237, 0.23", "140.29, -160.041, 65.252, 0.91", "141.762, -161.726, 65.3395, 0.23", "143.201, -163.456, 65.5143, 1.36", "144.76, -165.418, 65.7931, 0.23", "146.185, -167.233, 66.1891, 1.14", "148.123, -169.754, 66.9248, 0.23", "149.556, -171.683, 67.4751, 1.36", "149.887, -172.156, 67.6072, 1.36", "151.563, -174.511, 68.3117, 0.23", "153.204, -176.84, 69.0288, 2.95", "155.064, -179.4, 69.8519, 0.23", "156.746, -181.545, 70.6271, 0.68", "158.123, -183.177, 71.2497, 0.23", "159.99, -185.153, 72.048, 0.23", "161.688, -186.726, 72.6969, 2.27", "163.883, -188.482, 73.4733, 0.23", "166.189, -190.073, 74.2934, 0.91", "167.616, -190.947, 74.8364, 0.91", "170.427, -192.531, 75.8405, 0.23", "172.512, -193.691, 76.5808, 1.59", "174.255, -194.63, 77.2004, 0.23", "176.005, -195.586, 77.8225, 0.91", "178.266, -196.874, 78.6249, 0.23", "179.259, -197.465, 79.0134, 1.14", "181.755, -199.095, 80.1268, 0.23", "182.71, -199.792, 80.6433, 0.23", "184.36, -201.112, 81.6905, 1.82" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "83.2515, -109.691, 47.3162, 0.23", "84.227, -112.732, 48.278, 0.23", "84.5723, -113.811, 48.6195, 0.68", "85.1049, -115.505, 49.1596, 0.23", "85.3793, -116.4, 49.4474, 0.91", "85.6954, -117.465, 49.7439, 0.23", "85.8349, -118.054, 49.8779, 1.14", "85.9452, -118.766, 50.0072, 0.23", "86.1157, -120.253, 50.2348, 0.91", "86.1928, -121.138, 50.3617, 0.23", "86.3664, -123.623, 50.6669, 1.36", "86.4389, -126.236, 50.9258, 1.36", "86.3921, -127.112, 50.9876, 0.23", "86.3256, -127.975, 51.0419, 0.91", "86.1077, -130.095, 51.1531, 0.23", "85.7735, -132.723, 51.2863, 0.91", "85.3421, -135.37, 51.4496, 0.23", "84.8688, -138.285, 51.5997, 0.68" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "109.485, -104.292, 72.2647, 0.23", "110.291, -106.922, 72.2934, 0.23", "110.904, -108.924, 72.3153, 1.36", "111.406, -110.562, 72.3332, 0.23", "112.233, -113.264, 72.3628, 2.73" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "109.485, -104.292, 72.2647, 0.23", "113.161, -104.602, 72.19, 0.23", "115.226, -104.835, 72.1117, 0.23", "117.429, -105.077, 71.809, 0.91", "119.104, -105.252, 71.4596, 0.23", "120.458, -105.374, 71.1537, 1.36", "123.258, -105.615, 70.5345, 0.23", "125.231, -105.806, 70.1065, 0.91", "128.741, -106.302, 69.3434, 0.23", "132.163, -106.918, 68.6555, 0.68", "133.816, -107.245, 68.378, 0.23", "135.476, -107.635, 68.1503, 0.91", "137.152, -108.068, 68.0362, 0.91", "139.459, -108.786, 68.1681, 0.23", "141.078, -109.359, 68.4627, 0.91", "142.14, -109.762, 68.7243, 0.91", "144.203, -110.516, 69.2547, 0.23", "146.743, -111.261, 70.0138, 0.23", "148.918, -111.793, 70.6947, 0.91", "149.525, -111.908, 70.9002, 1.14", "150.611, -112.077, 71.297, 1.14", "152.688, -112.377, 72.144, 1.14", "154.879, -112.543, 73.1815, 0.45" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "101.486, -126.869, 65.1897, 0.45", "98.606, -127.119, 69.7852, 0.45", "94.9563, -127.138, 74.3569, 0.45", "93.8761, -127.063, 75.4719, 0.45", "92.4927, -126.846, 76.7809, 0.45", "89.9775, -126.193, 78.9884, 0.45", "88.2207, -125.536, 80.8301, 1.14", "86.2071, -124.552, 83.1533, 0.23", "85.1582, -123.885, 84.9031, 0.68", "83.5831, -122.628, 88.0182, 0.23", "82.1949, -121.109, 91.7469, 2.05", "80.8434, -118.769, 97.7653, 0.45", "80.4297, -117.391, 101.829, 0.91", "80.4922, -116.344, 106.183, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "101.486, -126.869, 65.1897, 0.23", "103.238, -128.702, 65.535, 0.23", "105.364, -130.623, 66.0665, 0.23", "107.585, -132.514, 66.6554, 1.36", "109.427, -134.084, 67.2713, 0.23", "110.058, -134.629, 67.5059, 0.91", "112.504, -136.838, 68.6637, 0.23", "113.153, -137.429, 69.0359, 1.14", "114.395, -138.654, 69.8788, 0.23", "115.44, -139.827, 70.6581, 2.5", "116.113, -140.688, 71.2145, 2.5", "118.721, -144.311, 73.3835, 0.23", "120.296, -146.72, 74.7583, 0.23", "121.005, -147.867, 75.3783, 2.5", "122.486, -150.474, 76.6512, 0.68", "123.648, -152.573, 77.5447, 0.68", "124.19, -153.594, 77.9345, 1.82", "125.653, -156.537, 78.8335, 0.45", "126.61, -158.519, 79.3666, 1.59", "127.684, -160.877, 79.9236, 0.23", "128.075, -161.894, 80.1209, 0.23", "128.469, -163.201, 80.3645, 0.91", "128.747, -164.325, 80.6292, 0.91", "129.069, -165.774, 81.024, 0.91", "129.531, -168.265, 81.9251, 1.82", "129.805, -170.229, 82.7018, 0.45", "129.94, -171.529, 83.2155, 0.91", "130.108, -173.031, 83.8323, 0.23", "130.419, -174.847, 84.6143, 1.14", "130.775, -176.287, 85.2707, 0.23", "131.142, -177.506, 85.8082, 0.91", "131.778, -179.237, 86.565, 0.23", "132.608, -181.154, 87.4466, 2.5", "133.799, -183.515, 88.5027, 0.23", "134.591, -184.915, 89.1263, 1.14", "135.961, -187.154, 90.0769, 0.23", "136.592, -188.125, 90.4689, 0.23", "138.2, -190.415, 91.3229, 0.91", "139.833, -192.564, 91.9883, 0.23", "140.96, -193.909, 92.3477, 0.23", "142.081, -195.117, 92.6309, 2.5", "144.716, -197.71, 93.1768, 0.23", "145.332, -198.326, 93.2862, 0.91", "147.295, -200.343, 93.5443, 0.23", "148.583, -201.698, 93.7141, 1.36", "149.705, -202.912, 93.8533, 1.36", "151.099, -204.525, 94.0528, 0.23", "152.132, -205.998, 94.0783, 0.91", "153.067, -207.684, 93.942, 0.23", "153.668, -209.089, 93.7282, 0.68", "154.078, -210.188, 93.5036, 0.23", "154.831, -212.256, 93.0236, 2.27", "156.848, -217.142, 91.7032, 0.23", "158.229, -220.117, 90.8157, 1.36", "159.02, -221.663, 90.3782, 0.23", "159.441, -222.421, 90.1817, 0.91", "160.923, -224.935, 89.6583, 0.23", "162.567, -227.582, 89.2747, 2.5", "163.053, -228.3, 89.3026, 2.5", "165.883, -232.208, 89.8282, 0.23", "166.774, -233.357, 90.0447, 1.59", "168.964, -236.07, 90.6975, 0.68", "170.194, -237.437, 91.17, 2.5", "173.036, -240.537, 92.4567, 0.23", "174.106, -241.592, 92.9664, 1.36", "175.485, -242.657, 93.6643, 0.23", "177.196, -243.734, 94.5299, 0.23", "179.794, -244.867, 95.8414, 0.91" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "82.2503, 11.1143, 51.6765, 0.68", "83.0121, 13.4564, 51.7634, 0.68", "83.6517, 15.1767, 51.8529, 0.68", "83.9206, 15.9131, 51.895, 1.59", "84.3533, 17.2922, 52.0201, 0.23", "85.2809, 21.0937, 52.4121, 0.23", "85.8303, 24.4292, 53.0343, 1.36", "85.9784, 25.8121, 53.4656, 0.23", "86.097, 27.2164, 54.0046, 1.14", "86.3134, 29.4417, 54.9452, 0.23", "86.4971, 31.1826, 55.7021, 1.36", "87.1657, 35.7543, 57.6732, 0.23", "87.9879, 39.9888, 59.4678, 1.14", "88.1895, 40.7141, 59.7682, 0.23", "88.8032, 42.348, 60.3833, 1.14", "90.0398, 45.0279, 61.1691, 0.23", "90.5698, 46.0222, 61.3818, 0.23", "91.6257, 47.8519, 61.463, 0.91", "92.639, 49.7996, 61.3487, 0.23", "92.9734, 50.5313, 61.2814, 0.91", "93.5313, 52.0657, 61.0473, 0.23", "94.0826, 53.7182, 60.6666, 1.14", "94.4086, 54.9225, 60.3116, 1.82", "94.925, 57.4762, 59.3344, 0.68", "95.0908, 58.4375, 58.9657, 1.14", "95.3642, 59.9823, 58.4483, 0.23", "95.4772, 60.7591, 58.2536, 1.36", "95.5575, 61.8519, 58.0291, 0.23", "95.6181, 63.3097, 57.8159, 1.14", "95.661, 65.4536, 57.5507, 0.23", "95.6613, 67.2639, 57.3778, 1.36", "95.6256, 69.0444, 57.194, 0.23", "95.5775, 70.2556, 57.0871, 2.05", "95.4927, 71.8083, 56.9425, 2.05", "95.3514, 73.4192, 56.7867, 0.68", "94.967, 76.6608, 56.4196, 0.23", "94.6873, 78.3007, 56.2426, 0.23", "94.2233, 80.7601, 56.0168, 1.59", "94.0693, 81.5556, 55.9566, 0.23", "93.7208, 83.3584, 55.802, 1.14", "93.22, 86.1204, 55.4464, 0.23", "93.0095, 87.535, 55.1943, 0.23", "92.6621, 90.4237, 54.7429, 1.36", "92.3774, 92.7838, 54.5265, 0.23", "92.1839, 94.6406, 54.364, 0.23", "92.0054, 96.7281, 54.1764, 1.14", "91.7202, 100.265, 53.9296, 0.23", "91.5258, 103.78, 53.8127, 0.91", "91.2355, 107.596, 53.9646, 0.23" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "82.2503, 11.1143, 51.6765, 0.23", "85.273, 11.6176, 52.3523, 0.23", "86.7085, 12.0354, 52.805, 1.36", "89.7187, 13.0569, 53.8129, 0.23", "90.5632, 13.4555, 54.1941, 0.68", "93.3233, 14.8546, 55.561, 0.23", "95.7252, 16.011, 56.7619, 1.59", "98.6376, 17.5458, 58.4065, 0.23", "99.2432, 17.8624, 58.7763, 1.14", "103.261, 19.9609, 61.4507, 0.23", "104.535, 20.7002, 62.3253, 1.36", "106.53, 21.8929, 63.6376, 0.23", "107.755, 22.5458, 64.3934, 0.91", "110.703, 23.96, 66.0135, 0.23", "114.544, 25.8532, 67.9708, 1.14", "115.892, 26.4909, 68.5662, 0.23", "117.86, 27.6587, 69.533, 2.27", "119.565, 28.8231, 70.3713, 0.23", "121.292, 30.1581, 71.1514, 1.14", "123.389, 31.9931, 72.0974, 0.23", "124.362, 32.9649, 72.51, 1.36", "128.351, 37.6099, 74.5835, 0.23", "129.274, 38.8627, 75.2101, 1.59", "130.931, 41.4347, 76.6818, 0.23", "132.419, 44.2235, 78.5212, 1.36", "133.151, 45.9095, 79.692, 1.36", "134.35, 49.5639, 82.4005, 0.23", "134.997, 51.8919, 84.329, 0.23", "135.541, 54.0436, 86.2475, 0.23", "135.933, 55.9706, 88.01, 0.23", "136.081, 57.112, 88.9838, 0.23", "136.178, 59.1102, 90.651, 0.23", "136.188, 61.3439, 92.2286, 0.23", "136.169, 63.2316, 93.3428, 0.23", "136.244, 66.7644, 95.1893, 0.23", "136.3, 68.0445, 95.8745, 0.23", "136.271, 71.5398, 97.8779, 0.45" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "18.4676, 80.5235, -21.7792, 0.23", "22.7537, 89.0828, -20.5532, 0.23", "27.09, 97.409, -18.2612, 0.23", "31.2363, 106.049, -17.1583, 0.23", "36.0799, 113.924, -14.275, 0.23", "39.6897, 122.081, -10.5382, 0.23", "44.3349, 129.024, -5.5637, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "18.4676, 80.5235, -21.7792, 0.68", "25.9905, 90.3043, -22.796, 0.23", "32.0168, 100.541, -26.2179, 0.23", "37.4472, 111.219, -29.1855, 0.23", "42.674, 121.301, -34.0829, 0.23", "47.1612, 131.665, -39.093, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-120.365, -63.5863, 3.88985, 0.23", "-121.638, -65.4658, 3.85383, 0.23", "-121.908, -65.8736, 3.87492, 0.91", "-123.339, -68.147, 4.07346, 0.23", "-123.956, -69.1332, 4.1784, 0.23", "-124.727, -70.3475, 4.32196, 1.59", "-125.885, -72.2228, 4.58713, 0.23", "-126.514, -73.2418, 4.8106, 0.45", "-126.863, -73.8397, 4.95226, 1.14", "-127.119, -74.3527, 5.08101, 1.14", "-127.522, -75.2318, 5.28949, 1.14", "-128.096, -76.5262, 5.56111, 0.91", "-128.612, -77.6484, 5.75924, 0.23", "-128.916, -78.2809, 5.84918, 0.23", "-129.699, -79.9252, 6.00504, 0.45", "-130.478, -81.4813, 6.08858, 0.23", "-131.358, -83.0761, 6.23578, 0.91", "-131.964, -84.0602, 6.35203, 1.14", "-132.458, -84.8438, 6.47112, 0.23", "-133.405, -86.3302, 6.76539, 2.5", "-134.957, -88.6645, 7.31847, 0.23", "-136.352, -90.7453, 7.85128, 1.82", "-137.105, -91.8249, 8.15825, 1.82", "-138.293, -93.4597, 8.65715, 0.23", "-139.343, -94.8654, 9.10593, 0.23", "-140.08, -95.8647, 9.4313, 1.82", "-142.111, -98.6887, 10.229, 0.45", "-143.287, -100.258, 10.573, 1.59", "-144.733, -102.091, 10.9536, 0.23", "-145.194, -102.624, 11.054, 1.14", "-146.295, -103.824, 11.2432, 0.23", "-147.757, -105.403, 11.4633, 1.82", "-149.434, -107.159, 11.6243, 0.23", "-150.501, -108.279, 11.7312, 0.23", "-151.824, -109.693, 11.8867, 2.05", "-153.283, -111.276, 12.0922, 0.68", "-154.638, -112.783, 12.3137, 0.68", "-156.26, -114.707, 12.6263, 0.68", "-157.723, -116.569, 12.9813, 2.05", "-158.407, -117.48, 13.1739, 2.5", "-159.763, -119.327, 13.5836, 0.23", "-160.241, -119.922, 13.7151, 0.91", "-161.185, -121.026, 13.8738, 0.23", "-162.368, -122.334, 13.9639, 0.45", "-163.054, -123.04, 13.9423, 0.23", "-165.195, -125.126, 13.7883, 2.05", "-167.255, -127.103, 13.5631, 0.23", "-168.97, -128.76, 13.2886, 0.23", "-169.566, -129.368, 13.1654, 0.23", "-170.051, -129.944, 13.0498, 0.23", "-170.688, -130.796, 12.9658, 0.23", "-171.19, -131.632, 12.9758, 0.23", "-172.638, -134.437, 13.2383, 3.41", "-173.193, -135.662, 13.4317, 2.73", "-174.223, -138.391, 13.973, 0.23", "-175.018, -140.64, 14.5689, 1.14", "-175.474, -142.087, 15.0348, 1.14", "-175.983, -144.083, 15.8171, 0.23", "-176.225, -145.575, 16.549, 1.82", "-176.422, -147.351, 17.4635, 1.82", "-176.564, -149.394, 18.4623, 0.68", "-176.602, -150.734, 19.0401, 0.23", "-176.622, -152.475, 19.7713, 0.91", "-176.601, -154.4, 20.5438, 0.23", "-176.597, -156.549, 21.2851, 2.5", "-176.581, -159.677, 22.1532, 0.23", "-176.57, -161.048, 22.4357, 0.91", "-176.582, -162.612, 22.68, 0.23", "-176.593, -163.525, 22.7983, 1.82", "-176.575, -165.332, 23.0192, 0.23", "-176.535, -166.0, 23.0929, 0.23", "-176.333, -167.972, 23.2891, 0.91", "-176.181, -169.606, 23.4374, 0.23", "-176.017, -171.445, 23.624, 1.14", "-175.852, -172.932, 23.7908, 0.23", "-175.54, -175.018, 23.8517, 1.82", "-175.37, -176.13, 23.7975, 2.5", "-174.999, -179.033, 23.3866, 0.23", "-174.856, -181.068, 22.8856, 2.05", "-174.816, -182.553, 22.3802, 2.05", "-174.976, -186.132, 20.996, 0.23", "-175.17, -187.617, 20.3833, 1.14", "-175.594, -189.439, 19.5522, 0.23", "-175.911, -190.448, 19.0057, 0.91", "-176.229, -191.204, 18.5668, 0.23", "-177.142, -192.826, 17.7222, 1.14", "-178.117, -194.202, 17.3106, 0.23", "-178.803, -195.12, 17.098, 1.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-120.365, -63.5863, 3.88985, 0.68", "-123.646, -63.9174, 4.94869, 0.68", "-125.935, -64.0158, 5.69473, 0.68", "-126.799, -64.0102, 5.94538, 0.68", "-127.665, -64.0014, 6.18467, 0.68", "-128.387, -63.9923, 6.36975, 0.68", "-131.124, -64.0278, 7.06331, 1.59", "-132.687, -64.0658, 7.45164, 1.59", "-134.952, -64.1247, 7.93865, 0.91", "-137.853, -64.2504, 8.5014, 1.59", "-139.418, -64.357, 8.86616, 0.23", "-141.433, -64.5922, 9.40035, 2.05", "-142.561, -64.8141, 9.70881, 2.05", "-144.051, -65.2209, 10.1551, 2.05", "-146.385, -66.067, 10.8929, 0.45", "-149.411, -67.4678, 11.7213, 0.23", "-151.425, -68.5788, 12.1831, 0.23", "-154.073, -70.3444, 12.6507, 0.23", "-155.787, -71.6948, 12.8781, 1.36", "-156.943, -72.7738, 12.9741, 1.36", "-159.25, -75.2563, 13.0741, 2.73", "-160.731, -77.0176, 13.0908, 1.59", "-162.639, -79.4083, 13.1772, 0.45", "-163.769, -80.8341, 13.2938, 0.45", "-164.693, -81.9342, 13.4377, 0.45", "-166.136, -83.5599, 13.7417, 1.59", "-167.773, -85.3688, 14.1316, 1.59", "-168.557, -86.2287, 14.2919, 2.95", "-169.527, -87.2557, 14.4459, 2.95", "-170.981, -88.8313, 14.604, 2.95", "-173.741, -91.9835, 14.7601, 0.45", "-174.883, -93.4111, 14.757, 1.59", "-176.043, -94.9642, 14.7967, 2.27", "-177.087, -96.4495, 14.9328, 2.27", "-178.532, -98.6375, 15.2534, 0.45", "-179.789, -100.613, 15.6771, 2.5", "-180.936, -102.402, 16.1761, 3.41", "-182.635, -105.003, 16.9954, 0.23", "-183.651, -106.531, 17.5432, 1.36", "-184.57, -107.937, 18.1143, 0.45", "-186.121, -110.297, 19.1868, 3.41", "-186.882, -111.413, 19.7484, 3.41", "-188.546, -113.851, 21.1256, 2.05", "-189.947, -115.855, 22.2794, 0.45", "-191.083, -117.386, 23.2121, 1.59", "-192.557, -119.248, 24.4207, 1.14", "-194.26, -121.269, 25.7707, 0.91", "-195.778, -123.004, 27.0053, 1.36", "-197.275, -124.594, 28.2148, 0.23", "-198.089, -125.394, 28.787, 1.82", "-199.347, -126.501, 29.5348, 2.95", "-200.515, -127.453, 30.1, 2.95" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-78.3897, -168.417, -56.7603, 0.23", "-80.2383, -177.878, -61.3622, 0.23", "-83.7407, -187.408, -64.6559, 0.23", "-85.3599, -197.4, -67.9826, 0.23", "-85.4352, -207.773, -70.337, 0.23", "-86.8476, -217.952, -73.1119, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-78.3897, -168.417, -56.7603, 0.23", "-80.451, -177.932, -59.3504, 0.23", "-82.1642, -187.518, -61.9173, 0.23", "-85.3569, -196.515, -65.2051, 0.23", "-86.9161, -205.867, -68.6422, 0.23", "-86.8299, -215.048, -72.8451, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "162.434, 50.2343, 4.93306, 0.45", "164.464, 51.3002, 5.11567, 0.45", "167.014, 52.576, 5.32428, 0.68", "168.934, 53.4841, 5.6588, 0.68", "172.325, 54.962, 6.32903, 0.68", "176.443, 56.7733, 7.19052, 0.68", "179.857, 58.2791, 7.8987, 0.68", "183.479, 59.8447, 8.70084, 0.45", "187.652, 61.6263, 9.62854, 0.45", "190.445, 62.7542, 10.1913, 0.68", "193.547, 64.0137, 10.8564, 0.23", "196.29, 65.2105, 11.535, 1.14", "198.408, 66.2378, 11.9678, 0.23", "199.84, 67.0277, 12.1611, 1.14", "202.754, 68.8254, 12.308, 0.45", "204.614, 70.07, 12.3732, 0.23", "206.25, 71.1745, 12.3901, 0.23", "208.509, 72.7771, 12.3869, 1.36", "212.457, 75.7134, 12.3494, 0.23", "214.807, 77.5452, 12.3537, 1.82", "215.879, 78.4284, 12.3723, 2.5", "218.703, 80.7218, 12.4469, 0.23", "220.275, 82.003, 12.5212, 0.68", "221.719, 83.1855, 12.6478, 1.36", "223.365, 84.5552, 12.9087, 0.23", "224.61, 85.6326, 13.1304, 1.36", "225.832, 86.7077, 13.3612, 1.36", "227.584, 88.2325, 13.6936, 0.23", "228.389, 88.8868, 13.8307, 0.23", "230.832, 90.7492, 14.202, 2.05", "231.787, 91.4949, 14.2911, 2.73", "234.246, 93.4916, 14.4212, 1.14", "236.24, 95.1685, 14.5269, 1.14", "238.199, 96.8025, 14.6114, 0.23", "239.302, 97.6954, 14.6427, 0.91", "242.465, 100.239, 14.7189, 1.59", "245.071, 102.354, 14.8259, 0.45", "246.961, 103.926, 15.0037, 1.14", "248.108, 104.889, 15.1797, 0.23", "248.727, 105.388, 15.3083, 0.23", "249.972, 106.296, 15.684, 0.23", "251.568, 107.384, 16.3173, 0.91", "253.472, 108.824, 17.1534, 0.91", "254.864, 109.928, 17.7528, 2.05", "256.359, 111.088, 18.4253, 2.73", "259.294, 113.238, 19.7084, 0.23", "260.821, 114.281, 20.3668, 0.23", "262.84, 115.596, 21.2968, 0.23", "264.253, 116.476, 21.9644, 1.36", "266.477, 117.688, 23.0432, 0.23", "267.808, 118.31, 23.652, 1.59", "269.922, 119.16, 24.5542, 0.23", "272.782, 120.187, 25.73, 0.23", "273.854, 120.542, 26.1341, 2.05", "277.266, 121.718, 27.4062, 0.45", "279.576, 122.545, 28.2902, 0.45", "281.903, 123.343, 29.281, 1.36", "283.32, 123.822, 29.9071, 2.27", "285.804, 124.694, 31.0368, 0.91", "287.883, 125.514, 32.095, 0.23", "289.709, 126.359, 33.1291, 0.23", "291.576, 127.2, 34.2346, 1.14", "292.917, 127.781, 35.0078, 1.14", "294.538, 128.448, 35.9242, 1.14", "296.899, 129.393, 37.1731, 0.23", "297.634, 129.643, 37.4585, 0.91", "300.319, 130.359, 38.2873, 0.23", "301.038, 130.524, 38.4739, 1.14", "303.466, 130.89, 39.0965, 0.45", "305.282, 131.036, 39.4773, 2.5", "308.781, 131.201, 40.1425, 1.14", "312.441, 131.324, 40.8058, 0.23", "315.125, 131.392, 41.2517, 0.23", "318.95, 131.456, 41.8677, 1.14", "321.961, 131.447, 42.2922, 1.14" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "162.434, 50.2343, 4.93306, 0.91", "164.016, 51.5542, 4.68348, 0.91", "164.889, 52.2018, 4.61561, 1.36", "165.835, 52.7692, 4.61831, 0.23", "166.94, 53.3487, 4.72853, 0.45", "167.96, 53.8459, 4.89828, 0.91", "168.611, 54.1442, 5.02683, 0.45", "169.378, 54.4463, 5.23161, 1.14", "170.755, 54.9451, 5.57844, 1.14", "171.753, 55.2998, 5.79651, 0.23", "172.512, 55.601, 5.88047, 0.45", "173.62, 56.1091, 5.90814, 0.23", "174.581, 56.604, 5.81528, 1.14", "175.371, 57.0555, 5.63606, 2.05", "176.194, 57.5417, 5.37697, 1.14", "178.027, 58.6287, 4.72746, 0.23", "178.685, 59.0357, 4.48444, 0.23", "179.608, 59.5777, 4.19004, 1.36", "180.285, 59.9352, 4.03313, 2.5", "181.873, 60.691, 3.83179, 0.23", "182.442, 60.9274, 3.8345, 0.23", "183.304, 61.2609, 4.00162, 0.23", "184.706, 61.8123, 4.41219, 1.14", "185.477, 62.1122, 4.70066, 1.36", "186.76, 62.5838, 5.24321, 0.23", "187.991, 63.0321, 5.80944, 0.68", "188.997, 63.4067, 6.27512, 0.23", "189.722, 63.704, 6.60131, 1.82", "190.205, 63.9371, 6.79659, 1.82", "191.363, 64.5252, 7.23208, 0.23", "192.292, 65.0078, 7.53578, 0.23", "192.97, 65.3641, 7.72185, 0.91", "194.511, 66.2248, 8.01504, 0.23", "195.236, 66.653, 8.1136, 1.36", "196.134, 67.2249, 8.19888, 0.23", "197.11, 67.8715, 8.26821, 1.36", "197.94, 68.3963, 8.3098, 0.23", "198.931, 69.0078, 8.36787, 1.14", "199.882, 69.5811, 8.43542, 0.23", "200.347, 69.8538, 8.48087, 0.23", "201.32, 70.41, 8.61437, 2.05", "201.807, 70.6915, 8.70981, 2.05", "202.768, 71.2703, 8.96866, 0.45", "203.325, 71.6283, 9.12337, 1.82", "204.109, 72.1799, 9.31428, 1.82", "205.191, 72.9651, 9.51265, 0.23", "205.729, 73.3515, 9.56694, 0.68", "206.68, 74.0007, 9.6171, 0.23", "207.608, 74.5654, 9.60429, 1.36", "208.027, 74.7922, 9.5582, 1.82", "208.763, 75.1025, 9.39854, 0.91", "209.511, 75.3459, 9.1828, 0.23", "210.312, 75.5723, 8.93795, 1.36", "210.839, 75.721, 8.76399, 2.27", "212.264, 76.1811, 8.34339, 0.23", "213.097, 76.5119, 8.10009, 1.14", "213.576, 76.7346, 7.96859, 0.23", "214.157, 77.0342, 7.82872, 0.23", "215.048, 77.5215, 7.62903, 1.14", "215.97, 78.0538, 7.44677, 0.23", "217.169, 78.7691, 7.26521, 0.45", "217.705, 79.104, 7.17302, 2.05", "218.508, 79.6057, 7.0246, 2.05", "219.189, 80.0088, 6.89952, 0.23", "219.51, 80.1959, 6.84073, 0.91", "220.281, 80.6524, 6.68435, 0.23", "221.434, 81.3594, 6.42649, 1.36", "221.89, 81.6516, 6.32406, 2.27", "222.873, 82.2626, 6.1086, 0.91", "223.951, 82.9183, 5.90734, 0.91", "224.765, 83.4148, 5.77197, 2.73", "226.147, 84.3051, 5.56291, 0.23", "226.905, 84.8158, 5.477, 0.68", "227.98, 85.6457, 5.35311, 0.23", "228.809, 86.4668, 5.23965, 0.23", "229.272, 87.0542, 5.15818, 1.14", "229.875, 88.0203, 5.02142, 0.23", "230.178, 88.602, 4.93334, 1.36", "230.686, 89.6862, 4.72286, 0.23", "231.314, 91.1213, 4.42534, 1.82", "231.771, 92.0341, 4.15999, 0.68", "232.137, 92.636, 3.95394, 1.82", "233.154, 93.9603, 3.45056, 0.23", "233.823, 94.6529, 3.15853, 0.23", "234.364, 95.0838, 2.96694, 2.05", "236.082, 96.1252, 2.43507, 0.23", "236.966, 96.5531, 2.18101, 1.36", "237.978, 96.9424, 1.89772, 0.23", "238.939, 97.2287, 1.66838, 1.36", "239.845, 97.4893, 1.47713, 0.23", "241.174, 97.8824, 1.22773, 0.91", "242.603, 98.343, 1.03206, 0.23", "243.472, 98.6456, 0.916752, 2.5", "245.299, 99.3524, 0.710824, 0.23", "246.645, 99.9638, 0.582101, 0.23", "247.371, 100.328, 0.54347, 0.23", "248.227, 100.787, 0.58294, 2.05", "249.318, 101.382, 0.73992, 2.05", "250.395, 101.945, 1.02147, 0.45", "251.463, 102.462, 1.42381, 0.45", "252.441, 102.896, 1.88262, 1.14", "253.933, 103.541, 2.68484, 0.23", "254.605, 103.849, 3.06853, 1.82", "255.484, 104.294, 3.61146, 0.23", "256.001, 104.578, 3.91928, 0.23", "256.513, 104.896, 4.20193, 1.14", "257.634, 105.789, 4.70305, 0.23", "258.434, 106.641, 4.98162, 1.59", "258.751, 107.058, 5.08394, 1.59", "259.231, 107.829, 5.24866, 1.59", "259.599, 108.506, 5.39641, 0.45", "259.863, 109.025, 5.54993, 1.82", "260.368, 110.123, 6.0147, 0.23", "260.65, 110.688, 6.35106, 0.91", "260.935, 111.226, 6.72547, 1.14", "261.35, 111.897, 7.27311, 0.23", "262.088, 112.935, 8.1798, 1.36", "262.772, 113.782, 8.95981, 0.23", "263.427, 114.5, 9.66404, 0.68", "263.706, 114.777, 9.94096, 2.27", "264.659, 115.63, 10.7836, 0.23", "265.137, 116.024, 11.1602, 1.36", "266.112, 116.814, 11.8203, 0.23", "266.767, 117.294, 12.2033, 0.68", "267.288, 117.659, 12.49, 0.68", "268.081, 118.223, 12.9237, 0.23", "268.474, 118.525, 13.1249, 1.59", "268.989, 118.956, 13.3848, 0.23", "269.721, 119.615, 13.7407, 1.14", "270.558, 120.489, 14.1813, 0.23", "271.311, 121.427, 14.5646, 0.23", "271.885, 122.225, 14.8681, 0.23", "272.399, 122.992, 15.1456, 2.05", "272.534, 123.21, 15.2211, 2.73", "273.392, 124.738, 15.7333, 0.45", "274.115, 126.079, 16.2004, 0.45", "274.678, 127.224, 16.6807, 2.27", "275.193, 128.376, 17.2534, 0.23", "275.373, 128.882, 17.5391, 0.68", "275.595, 129.684, 18.0423, 0.23", "275.74, 130.416, 18.5587, 1.14", "275.92, 131.744, 19.5935, 0.23", "275.943, 132.09, 19.8534, 1.14", "276.03, 133.58, 20.9654, 0.23", "276.056, 134.041, 21.2845, 0.91", "276.091, 134.753, 21.7457, 0.23", "276.132, 135.248, 22.0401, 2.27", "276.3, 136.361, 22.6301, 0.23", "276.496, 137.25, 23.0736, 1.14", "276.874, 138.508, 23.6347, 0.23", "277.066, 139.032, 23.8731, 1.14", "277.347, 139.759, 24.2251, 0.91", "277.48, 140.14, 24.4029, 0.23", "277.685, 140.835, 24.7254, 1.36", "277.829, 141.576, 25.0871, 0.23", "277.91, 142.652, 25.6594, 0.68", "277.768, 143.823, 26.311, 0.23", "277.416, 144.995, 26.9965, 0.23", "277.263, 145.376, 27.2291, 0.91", "276.969, 145.998, 27.6253, 0.23", "276.593, 146.667, 28.0602, 0.23", "276.17, 147.327, 28.4673, 0.23", "275.828, 147.849, 28.8226, 0.23", "275.442, 148.486, 29.3479, 0.23", "275.11, 149.223, 29.928, 2.05", "278.303, 153.029, 30.2925, 2.05", "281.331, 156.806, 31.4016, 2.05", "283.986, 160.757, 32.7769, 2.05", "287.544, 163.965, 34.1316, 2.05", "291.545, 166.422, 35.8315, 2.05", "295.165, 168.673, 38.4111, 2.05", "297.892, 171.407, 41.5204, 2.05", "300.041, 173.768, 45.3117, 2.05", "301.555, 175.773, 49.5884, 2.05", "302.552, 177.558, 54.1116, 2.05", "304.315, 179.022, 58.5271, 2.05", "306.506, 180.252, 62.8301, 2.05", "307.848, 180.844, 67.6051, 2.05", "309.931, 182.079, 71.9593, 2.05" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "170.148, 305.356, 59.6892, 0.23", "171.888, 312.087, 60.1598, 0.23", "174.223, 318.615, 60.9124, 0.23", "177.266, 324.904, 61.1627, 0.23", "180.071, 331.297, 61.4249, 0.23", "183.13, 337.359, 63.0683, 0.23", "186.142, 343.638, 63.6426, 0.23", "188.925, 350.013, 64.2559, 0.23", "192.542, 355.984, 63.571, 0.23" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "170.148, 305.356, 59.6892, 0.68", "172.414, 314.93, 61.96, 0.23", "174.901, 324.734, 62.284, 0.23", "176.408, 334.57, 63.9846, 0.23", "179.139, 344.323, 63.79, 0.23", "180.293, 354.343, 62.8183, 0.23", "179.574, 364.314, 61.0718, 0.23" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "184.36, -201.112, 81.6905, 0.23", "185.558, -202.442, 81.9364, 0.23", "186.715, -203.713, 82.2175, 2.27", "188.648, -205.757, 82.6986, 0.23", "190.18, -207.339, 83.0843, 1.82", "192.481, -209.676, 83.6608, 0.23", "193.951, -211.124, 84.0367, 1.14", "195.53, -212.645, 84.4541, 0.23", "196.954, -213.963, 84.8332, 2.27", "198.542, -215.295, 85.2334, 0.23", "199.715, -216.196, 85.5079, 0.91", "202.411, -218.096, 86.141, 0.23", "203.227, -218.637, 86.3274, 0.68", "203.89, -219.07, 86.4731, 0.23", "205.025, -219.782, 86.7237, 1.59", "206.943, -220.931, 87.1282, 0.23", "208.357, -221.807, 87.4233, 0.23", "209.838, -222.815, 87.7317, 1.59", "210.952, -223.671, 87.9986, 0.68", "211.958, -224.519, 88.2622, 0.23", "213.275, -225.708, 88.6226, 0.23", "214.372, -226.772, 88.9293, 0.23", "215.476, -227.935, 89.2248, 2.5", "216.658, -229.263, 89.5774, 0.23", "217.13, -229.819, 89.7335, 0.91", "217.841, -230.79, 90.0223, 0.23" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "184.36, -201.112, 81.6905, 0.23", "185.559, -204.157, 82.7988, 0.23", "185.868, -204.941, 83.0844, 0.68", "186.34, -206.139, 83.5206, 0.23", "187.151, -208.197, 84.2696, 0.68" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "112.233, -113.264, 72.3628, 0.23", "113.519, -116.322, 73.1886, 0.23", "114.58, -118.942, 74.0634, 0.23", "115.268, -120.599, 74.6665, 0.23", "116.25, -122.857, 75.5499, 1.59", "117.476, -125.557, 76.6398, 0.23", "118.399, -127.555, 77.4395, 0.91", "119.756, -130.179, 78.5885, 0.23", "120.348, -131.272, 79.0791, 0.91", "121.206, -132.679, 79.7327, 0.23", "122.522, -134.564, 80.617, 1.59", "124.252, -136.707, 81.5867, 0.23", "125.476, -138.101, 82.1885, 0.45", "126.707, -139.39, 82.68, 0.23", "127.691, -140.399, 83.099, 0.91", "128.963, -141.706, 83.6675, 0.23", "129.732, -142.481, 84.0384, 0.91", "130.345, -143.127, 84.3551, 0.23", "131.536, -144.486, 84.9949, 1.14", "132.819, -145.975, 85.6928, 0.23", "133.762, -147.171, 86.208, 1.82", "134.327, -147.877, 86.4994, 1.82", "135.847, -149.809, 87.3119, 0.23", "136.907, -151.065, 87.86, 0.68", "137.288, -151.502, 88.0541, 0.23", "139.003, -153.337, 88.6965, 2.05", "140.954, -155.336, 89.291, 0.23", "142.758, -157.147, 89.7077, 1.36", "144.955, -159.3, 89.9952, 0.23", "147.013, -161.387, 90.086, 0.23", "149.621, -164.1, 90.0067, 0.91", "150.264, -164.798, 89.9258, 0.23", "151.011, -165.708, 89.7621, 0.23", "152.278, -167.439, 89.4145, 0.91", "153.403, -169.3, 89.1489, 0.23", "153.986, -170.47, 89.0716, 1.14", "154.469, -171.531, 89.1091, 1.14", "155.312, -173.527, 89.2225, 0.23", "155.93, -175.096, 89.3152, 1.36", "156.808, -177.392, 89.4566, 0.23", "157.618, -179.458, 89.5428, 2.05", "157.993, -180.401, 89.5768, 2.05", "159.29, -183.517, 89.6975, 0.68", "160.302, -185.806, 89.8104, 1.14", "161.301, -187.915, 89.9694, 0.23", "162.344, -190.061, 90.1641, 1.14", "163.793, -192.97, 90.5992, 0.23", "164.453, -194.299, 90.8531, 1.36", "165.528, -196.32, 91.3445, 2.05", "167.452, -199.715, 92.2619, 0.23", "168.555, -201.549, 92.7454, 0.91", "170.765, -205.062, 93.6546, 0.23", "171.956, -206.852, 94.0961, 0.23", "173.033, -208.417, 94.4448, 2.5", "175.193, -211.38, 94.9783, 0.23", "176.129, -212.562, 95.1419, 0.91", "177.22, -213.846, 95.2738, 0.23", "178.616, -215.433, 95.3183, 0.68", "180.75, -217.899, 95.3843, 0.23", "181.694, -219.061, 95.4171, 1.82", "182.875, -220.589, 95.5037, 0.23", "183.888, -221.941, 95.6179, 0.91", "185.529, -224.238, 95.8267, 0.23", "186.383, -225.532, 95.9609, 1.14", "187.047, -226.608, 96.1026, 0.23", "188.113, -228.366, 96.3892, 0.91", "189.436, -230.712, 96.7894, 0.23", "190.193, -232.017, 97.0651, 1.36", "190.959, -233.401, 97.319, 0.23", "191.647, -234.621, 97.5148, 0.91", "193.372, -237.514, 97.9346, 0.23", "194.683, -239.644, 98.1541, 1.14", "195.924, -241.654, 98.3069, 1.82", "197.807, -244.683, 98.53, 0.68", "198.641, -245.945, 98.6322, 1.36", "200.771, -249.034, 98.9099, 0.23", "203.121, -252.34, 99.2052, 1.82", "204.474, -254.14, 99.3805, 0.23", "206.149, -256.295, 99.6476, 2.05", "207.7, -258.146, 100.003, 0.23", "208.696, -259.335, 100.176, 0.91", "210.329, -261.196, 100.309, 0.23", "211.104, -262.087, 100.312, 0.91", "212.666, -264.034, 100.186, 0.23", "213.618, -265.46, 100.028, 0.91", "215.339, -268.88, 99.5593, 0.23", "216.221, -271.257, 99.1815, 0.23", "216.673, -273.027, 98.9347, 1.82", "217.133, -275.74, 98.6183, 0.23", "217.396, -278.485, 98.3808, 0.68", "217.581, -280.754, 98.3344, 0.23", "217.788, -282.861, 98.468, 0.91", "218.119, -284.892, 98.678, 0.23", "218.527, -286.389, 98.8043, 1.59", "218.895, -287.331, 98.8586, 1.59", "220.726, -290.969, 99.0301, 0.23", "222.463, -293.985, 99.0905, 1.14", "224.02, -296.548, 99.0455, 0.23", "225.238, -298.545, 98.9333, 0.23", "226.551, -300.667, 98.8173, 0.23", "227.505, -302.1, 98.7741, 0.45", "229.075, -304.34, 98.7059, 0.23", "230.1, -305.701, 98.6844, 1.36", "231.853, -307.948, 98.6986, 0.23", "233.74, -310.354, 98.8764, 0.23", "235.861, -313.041, 99.1823, 1.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "112.233, -113.264, 72.3628, 0.23", "110.037, -114.692, 72.9079, 0.23", "108.896, -115.512, 73.2747, 0.68", "107.08, -117.003, 74.0274, 0.23", "106.122, -117.791, 74.4249, 0.68", "105.48, -118.318, 74.6907, 0.23", "104.501, -119.123, 75.0968, 0.91", "103.008, -120.617, 75.7133, 0.23", "102.121, -121.809, 76.1031, 0.91" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "154.879, -112.543, 73.1815, 0.23", "156.057, -112.831, 73.6249, 0.23", "157.986, -113.424, 74.334, 2.05", "159.022, -113.811, 74.7052, 2.05", "162.172, -115.174, 75.8081, 0.45", "163.215, -115.668, 76.1336, 0.68", "165.112, -116.618, 76.6796, 0.23", "166.913, -117.63, 77.1412, 1.14", "168.571, -118.749, 77.5012, 0.23", "169.613, -119.609, 77.6444, 0.68", "170.692, -120.683, 77.6918, 0.23", "171.428, -121.499, 77.6811, 0.91", "172.211, -122.493, 77.6174, 0.23", "173.593, -124.368, 77.3836, 0.68", "174.822, -126.229, 77.0809, 0.23", "175.471, -127.49, 76.8231, 0.23", "175.927, -128.628, 76.4996, 0.23", "176.355, -129.93, 76.0331, 1.82", "177.106, -132.471, 75.041, 0.23", "177.387, -133.532, 74.592, 0.91", "178.1, -136.407, 73.3518, 0.23", "178.784, -139.886, 71.6927, 0.68", "179.124, -142.029, 70.5818, 0.23" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "154.879, -112.543, 73.1815, 0.23", "155.198, -111.4, 73.416, 0.23", "155.387, -110.546, 73.5651, 1.59", "155.542, -109.844, 73.6876, 1.59", "155.815, -108.605, 73.9039, 0.23", "156.216, -106.792, 74.2204, 0.23", "156.64, -104.876, 74.555, 0.23", "156.869, -103.611, 74.7786, 1.14" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "44.3349, 129.024, -5.5637, 0.23", "50.1794, 141.361, -0.629714, 0.23", "54.4338, 154.988, 1.65379, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.3349, 129.024, -5.5637, 0.68", "49.9783, 135.562, -4.26718, 0.23", "55.6901, 142.162, -4.0724, 0.23", "60.5577, 149.224, -2.54675, 0.23", "65.3077, 156.514, -2.51775, 0.23", "68.9981, 164.362, -2.40653, 0.23", "73.7301, 171.649, -1.94588, 0.23", "78.8199, 178.717, -2.10224, 0.23", "84.3438, 185.388, -1.02802, 0.23", "91.2226, 190.706, 0.160455, 0.23", "97.728, 195.889, 2.96883, 0.23", "103.447, 202.152, 5.09708, 0.23", "109.799, 208.02, 6.48343, 0.23", "116.979, 212.224, 9.36149, 0.23", "123.989, 217.295, 10.8703, 0.23", "131.027, 222.173, 12.8438, 0.23", "137.585, 226.846, 16.3747, 0.23", "144.3, 231.002, 20.2681, 0.23", "151.671, 233.444, 24.4749, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "47.1612, 131.665, -39.093, 0.23", "52.2016, 140.641, -42.0338, 0.23", "57.0161, 150.133, -42.9756, 0.23", "59.9796, 160.324, -43.8122, 0.23", "62.0307, 170.74, -44.4211, 0.23", "65.1102, 180.908, -45.1298, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "47.1612, 131.665, -39.093, 0.68", "52.5506, 141.188, -42.2246, 0.23", "55.6698, 151.617, -45.3903, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-200.515, -127.453, 30.1, 2.73", "-202.282, -128.212, 29.9762, 2.73", "-203.59, -128.83, 29.8001, 1.59", "-204.9, -129.547, 29.5705, 0.68", "-206.096, -130.327, 29.3209, 0.68", "-207.12, -131.088, 29.0826, 0.45", "-208.112, -131.919, 28.8266, 0.45", "-208.966, -132.787, 28.5709, 0.45", "-210.006, -133.979, 28.2745, 1.14", "-211.037, -135.273, 28.0625, 0.23", "-211.676, -136.102, 27.9929, 0.23", "-212.528, -137.318, 28.0032, 1.59", "-213.161, -138.248, 28.0936, 1.59", "-214.276, -139.788, 28.3652, 0.23", "-215.382, -141.17, 28.7004, 2.27", "-216.445, -142.349, 29.0437, 0.91", "-217.504, -143.454, 29.3928, 0.23", "-218.202, -144.174, 29.6157, 1.14", "-218.978, -144.972, 29.8469, 1.82", "-219.701, -145.698, 30.0114, 1.14", "-220.904, -146.806, 30.2279, 0.23", "-222.383, -148.134, 30.4737, 2.05", "-223.005, -148.639, 30.5431, 2.05" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-200.515, -127.453, 30.1, 0.45", "-203.964, -128.389, 30.4581, 0.45", "-205.613, -128.821, 30.6619, 0.45", "-206.637, -129.105, 30.8032, 0.45", "-209.706, -129.988, 31.2408, 1.82", "-212.425, -130.775, 31.6191, 0.23", "-213.752, -131.164, 31.7958, 1.36", "-215.615, -131.792, 32.1289, 2.05", "-217.441, -132.448, 32.4997, 0.23", "-218.133, -132.678, 32.6574, 1.36", "-219.629, -133.148, 33.0232, 0.23", "-220.992, -133.56, 33.4067, 1.36", "-222.972, -134.108, 33.9767, 0.23", "-225.018, -134.598, 34.5161, 0.23", "-227.242, -135.001, 35.1128, 1.36", "-228.463, -135.175, 35.431, 0.91", "-229.915, -135.348, 35.8194, 0.91", "-231.462, -135.474, 36.2254, 0.23", "-233.653, -135.618, 36.9018, 0.23", "-235.899, -135.793, 37.8097, 1.36", "-237.126, -135.884, 38.4114, 1.36", "-239.329, -135.976, 39.6589, 0.23", "-242.599, -136.056, 41.6545, 1.14", "-245.498, -136.09, 43.5359, 0.23", "-247.575, -136.119, 44.9208, 1.14", "-249.089, -136.146, 45.9065, 0.23", "-250.932, -136.181, 47.0629, 0.23", "-252.54, -136.209, 47.9613, 2.05", "-253.358, -136.257, 48.3559, 2.5", "-256.583, -136.549, 49.5456, 0.23", "-257.756, -136.692, 49.9024, 0.23", "-259.158, -136.931, 50.3551, 2.05", "-261.633, -137.469, 51.2769, 2.05", "-263.152, -137.851, 51.9446, 0.23", "-264.359, -138.221, 52.5376, 0.91", "-265.808, -138.834, 53.4176, 0.23", "-267.19, -139.626, 54.5107, 1.59", "-268.939, -141.06, 56.8679, 0.23", "-269.158, -141.273, 57.3458, 0.23", "-269.525, -141.563, 58.3812, 1.36", "-270.32, -142.014, 60.9448, 0.23", "-270.961, -142.172, 63.1555, 1.36", "-272.365, -141.997, 67.7168, 0.23", "-273.378, -141.634, 71.0652, 0.23", "-274.396, -141.107, 74.2793, 0.23", "-274.819, -140.804, 75.5148, 0.91", "-275.654, -140.028, 77.6118, 0.23", "-276.139, -139.515, 78.6333, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "321.961, 131.447, 42.2922, 0.23", "324.004, 132.09, 42.7571, 0.23", "325.759, 132.718, 43.2314, 1.36", "328.262, 133.583, 43.8938, 0.23", "329.997, 134.165, 44.3292, 0.68", "331.894, 134.755, 44.7535, 0.23", "333.976, 135.361, 45.2578, 1.82", "335.437, 135.755, 45.563, 2.5", "338.503, 136.447, 46.0371, 0.23", "339.732, 136.656, 46.1652, 0.91", "341.882, 136.948, 46.3642, 0.91", "344.489, 137.233, 46.599, 0.23", "347.181, 137.505, 46.8011, 2.05", "350.37, 137.769, 47.0544, 0.23", "352.295, 137.943, 47.2765, 0.91", "354.963, 138.213, 47.6293, 0.23", "356.653, 138.418, 47.9144, 2.05", "358.53, 138.671, 48.2581, 0.23", "360.163, 138.936, 48.636, 1.14", "362.864, 139.602, 49.3165, 0.91", "365.408, 140.395, 49.9144, 0.23", "367.223, 140.965, 50.2919, 0.23", "368.604, 141.428, 50.6098, 0.23", "370.361, 142.065, 51.0487, 2.5", "372.752, 143.093, 51.6888, 0.23", "374.887, 144.236, 52.2299, 1.14" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "321.961, 131.447, 42.2922, 0.45", "322.047, 130.576, 44.324, 0.45", "322.273, 129.578, 46.4348, 0.45", "322.668, 127.834, 50.1249, 0.45", "322.771, 127.378, 51.089, 0.91", "322.849, 127.034, 51.8164, 0.23", "323.047, 126.16, 53.6636, 0.23", "323.132, 125.476, 55.2388, 0.68" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "179.574, 364.314, 61.0718, 0.23", "181.847, 375.113, 60.1828, 0.23", "184.847, 385.581, 62.048, 0.23" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "179.574, 364.314, 61.0718, 0.68", "180.68, 372.698, 62.2974, 0.23", "181.023, 380.749, 65.0954, 0.23", "180.979, 388.659, 68.284, 0.23", "181.616, 396.615, 71.2893, 0.23", "181.747, 404.395, 74.7778, 0.23", "182.245, 412.721, 76.5983, 0.23", "184.055, 420.512, 79.5745, 0.23" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "217.841, -230.79, 90.0223, 0.23", "218.566, -232.819, 89.1393, 0.23", "219.045, -234.005, 88.6687, 1.14", "219.827, -235.943, 87.8999, 0.23", "220.986, -238.813, 86.7609, 1.14", "222.102, -241.576, 85.6648, 0.23", "222.421, -242.366, 85.3512, 1.14", "223.033, -243.789, 84.8063, 0.23" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "217.841, -230.79, 90.0223, 0.68", "219.643, -229.313, 90.9118, 0.68", "221.772, -227.708, 92.3683, 0.23", "222.55, -227.214, 92.8841, 0.23", "223.547, -226.581, 93.5445, 0.91", "225.11, -225.589, 94.5798, 0.23", "226.597, -224.645, 95.5649, 1.14", "229.956, -222.062, 97.9115, 0.23", "231.095, -221.197, 98.7254, 0.68" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "151.671, 233.444, 24.4749, 0.23", "161.45, 237.361, 22.9824, 0.23", "171.176, 241.362, 21.3864, 0.23", "180.574, 246.294, 20.9836, 0.23", "190.437, 250.136, 22.0885, 0.23", "200.693, 252.461, 23.8304, 0.23", "211.279, 253.595, 24.4357, 0.23", "221.742, 255.007, 22.9426, 0.23", "232.345, 254.55, 23.9371, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "151.671, 233.444, 24.4749, 0.68", "156.478, 239.955, 27.46, 0.23", "160.799, 245.977, 31.8998, 0.23", "165.064, 251.562, 36.95, 0.23", "169.396, 255.999, 43.0316, 0.23", "173.864, 259.424, 49.6748, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-223.005, -148.639, 30.5431, 0.68", "-224.46, -150.471, 31.3154, 0.68", "-225.339, -151.455, 31.7712, 0.68", "-226.497, -152.732, 32.351, 1.36", "-227.32, -153.702, 32.8385, 1.82", "-228.005, -154.553, 33.3034, 1.82", "-228.742, -155.529, 33.8362, 0.45", "-230.047, -157.345, 34.8318, 1.36", "-230.447, -157.957, 35.1335, 1.36", "-231.761, -160.066, 36.113, 0.23", "-232.538, -161.319, 36.6404, 0.91", "-233.056, -162.139, 36.9576, 0.91", "-233.919, -163.461, 37.3833, 0.23", "-234.811, -164.776, 37.6877, 0.23", "-235.733, -165.962, 37.8868, 1.36", "-237.105, -167.513, 38.094, 0.23", "-238.001, -168.443, 38.2217, 0.91", "-239.41, -169.761, 38.4796, 0.23", "-240.587, -170.808, 38.7259, 0.23", "-242.08, -172.184, 39.0539, 1.36", "-243.953, -174.012, 39.5364, 0.23", "-244.801, -174.915, 39.7952, 0.23", "-245.916, -176.171, 40.1617, 1.82", "-246.562, -176.948, 40.3825, 2.27", "-247.746, -178.555, 40.7601, 0.23", "-248.918, -180.364, 41.0665, 1.14", "-249.689, -181.645, 41.1831, 0.23", "-250.404, -182.868, 41.2526, 1.36", "-250.893, -183.706, 41.265, 1.36", "-252.109, -185.718, 41.2637, 0.23", "-252.838, -186.83, 41.2406, 0.23", "-253.697, -188.198, 41.1626, 1.82", "-254.208, -189.014, 41.1161, 1.82", "-255.072, -190.5, 41.0758, 0.45", "-255.57, -191.377, 41.0937, 1.14", "-256.217, -192.506, 41.1807, 1.14", "-257.199, -194.263, 41.4035, 0.23", "-258.096, -195.91, 41.7099, 1.59", "-259.193, -197.97, 42.209, 0.23", "-260.043, -199.555, 42.6368, 2.05", "-260.927, -201.17, 43.092, 0.23", "-261.591, -202.462, 43.4604, 0.68", "-262.509, -204.251, 43.972, 0.23", "-263.15, -205.599, 44.3218, 1.14", "-264.119, -207.701, 44.78, 0.23", "-264.481, -208.585, 44.9366, 1.14", "-265.639, -211.536, 45.351, 0.23", "-265.945, -212.332, 45.4319, 0.23", "-266.383, -213.512, 45.5059, 1.36", "-266.726, -214.476, 45.5428, 1.36", "-267.495, -216.75, 45.6378, 0.23", "-268.053, -218.386, 45.6874, 1.82", "-268.521, -219.613, 45.688, 0.23", "-268.902, -220.575, 45.6928, 0.23", "-269.516, -221.953, 45.7066, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-223.005, -148.639, 30.5431, 0.23", "-226.651, -150.784, 30.9942, 0.23", "-229.494, -152.276, 31.4555, 0.68", "-230.7, -152.853, 31.6627, 0.23", "-232.92, -153.892, 32.0464, 1.36", "-235.283, -154.945, 32.4438, 0.45", "-236.696, -155.549, 32.6729, 0.23", "-238.763, -156.319, 33.0284, 1.14", "-241.123, -157.106, 33.3953, 0.23", "-242.294, -157.502, 33.5443, 1.36", "-243.762, -157.993, 33.7033, 1.36", "-244.774, -158.352, 33.8283, 2.05", "-247.864, -159.635, 34.268, 0.45", "-249.152, -160.26, 34.4562, 0.91", "-250.39, -160.914, 34.6746, 0.23", "-252.034, -161.817, 35.0507, 1.59", "-255.257, -163.565, 35.8867, 0.23", "-257.789, -164.884, 36.5806, 1.36", "-259.573, -165.78, 37.0754, 0.23", "-261.407, -166.691, 37.5767, 1.59", "-264.811, -168.395, 38.444, 0.23", "-266.701, -169.364, 38.8567, 0.91", "-268.397, -170.213, 39.1358, 0.23", "-270.582, -171.269, 39.3079, 1.36", "-271.828, -171.88, 39.2782, 0.45", "-274.317, -173.187, 38.9077, 1.59", "-276.895, -174.626, 38.2225, 0.23", "-278.217, -175.395, 37.8115, 1.14", "-281.532, -177.279, 36.6894, 0.23", "-284.174, -178.669, 35.7695, 0.23", "-287.59, -180.279, 34.6507, 2.05", "-290.016, -181.329, 33.9055, 0.45", "-292.192, -182.247, 33.3232, 1.36", "-293.396, -182.754, 33.0683, 0.23", "-295.536, -183.613, 32.759, 1.14", "-299.297, -185.145, 32.3825, 0.23", "-300.837, -185.797, 32.2651, 1.36", "-303.581, -187.033, 32.0464, 0.23", "-305.028, -187.739, 31.8901, 0.23", "-306.785, -188.708, 31.6649, 1.14", "-310.391, -190.946, 31.1223, 0.23", "-312.765, -192.515, 30.683, 0.23", "-314.593, -193.797, 30.25, 0.23", "-315.652, -194.583, 29.9597, 0.23", "-318.413, -196.796, 29.1272, 1.36", "-319.75, -197.969, 28.7056, 0.23", "-321.578, -199.606, 28.1284, 1.36", "-324.161, -201.901, 27.3657, 0.23", "-325.709, -203.178, 26.9702, 1.14", "-328.438, -205.085, 26.4082, 0.23", "-330.084, -206.033, 26.1495, 1.36", "-333.418, -207.63, 25.7882, 0.23", "-335.777, -208.5, 25.6378, 0.91", "-338.026, -209.064, 25.5651, 0.23", "-341.651, -209.717, 25.3855, 2.5", "-344.97, -210.165, 25.1443, 0.23", "-346.256, -210.341, 25.0086, 1.14", "-349.569, -210.876, 24.478, 0.23", "-351.826, -211.324, 23.9802, 1.36", "-355.791, -212.3, 22.901, 0.23", "-357.522, -212.764, 22.3385, 0.23", "-359.82, -213.347, 21.4318, 1.36", "-362.345, -213.927, 20.3279, 0.23", "-364.486, -214.336, 19.3076, 0.68", "-365.68, -214.499, 18.7484, 0.23", "-367.364, -214.622, 18.0278, 1.36", "-369.24, -214.69, 17.3557, 0.23", "-371.323, -214.711, 16.7389, 2.27", "-374.522, -214.73, 16.0081, 0.23", "-376.989, -214.712, 15.5053, 0.23", "-379.466, -214.662, 15.1095, 0.91", "-382.3, -214.655, 14.8322, 0.23", "-384.111, -214.646, 14.77, 0.23", "-386.035, -214.628, 14.7648, 1.14", "-388.344, -214.517, 14.8295, 0.23", "-390.732, -214.299, 14.95, 0.23", "-393.298, -213.976, 15.1747, 1.36", "-396.128, -213.655, 15.4895, 0.23", "-397.568, -213.548, 15.6873, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-276.139, -139.515, 78.6333, 0.23", "-277.722, -140.406, 78.9303, 0.23", "-278.971, -141.215, 79.378, 1.14", "-281.208, -142.831, 80.3385, 0.23", "-282.339, -143.747, 80.8578, 0.23", "-283.487, -144.798, 81.4128, 0.23", "-285.345, -146.678, 82.3244, 0.91", "-287.076, -148.854, 83.475, 0.23", "-287.695, -149.731, 83.9558, 0.68", "-288.513, -151.099, 84.7194, 0.23", "-289.095, -152.201, 85.2966, 1.14", "-289.661, -153.429, 85.9718, 0.23", "-290.458, -155.746, 86.916, 2.05" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-276.139, -139.515, 78.6333, 0.23", "-277.322, -136.595, 79.5587, 0.23", "-278.482, -133.285, 80.6167, 0.23", "-279.106, -131.505, 81.1857, 1.14", "-279.78, -129.582, 81.8002, 0.23", "-280.504, -127.515, 82.4609, 0.23", "-281.354, -125.088, 83.2363, 0.23", "-281.634, -124.182, 83.6275, 0.91" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "374.887, 144.236, 52.2299, 0.23", "378.046, 145.515, 51.994, 0.23", "381.925, 147.066, 51.7166, 0.68", "384.49, 148.154, 51.6384, 0.23", "386.337, 148.966, 51.6298, 0.91", "389.767, 150.54, 51.5448, 0.23", "392.854, 152.038, 51.3558, 0.91", "394.771, 153.034, 51.2186, 0.23", "398.243, 154.93, 50.8744, 0.23", "401.386, 156.757, 50.4204, 1.14", "405.006, 158.859, 49.8124, 0.23", "407.9, 160.615, 49.234, 0.23", "409.572, 161.653, 48.8399, 0.23", "411.0, 162.599, 48.4215, 0.23", "413.754, 164.439, 47.2834, 1.14" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "374.887, 144.236, 52.2299, 0.23", "376.745, 144.619, 52.6623, 0.23", "378.403, 144.961, 53.048, 2.27" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "184.847, 385.581, 62.048, 0.23", "188.019, 399.72, 63.6485, 0.23" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "184.847, 385.581, 62.048, 0.68", "186.995, 394.256, 62.3556, 0.23" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "232.345, 254.55, 23.9371, 0.23", "238.469, 256.108, 24.0571, 0.23", "244.469, 258.005, 23.5257, 0.23", "250.398, 259.648, 22.0963, 0.23", "256.452, 260.652, 20.5751, 0.23", "262.383, 262.181, 19.0259, 0.23", "267.972, 264.088, 16.8008, 0.23", "273.969, 265.472, 15.3665, 0.23", "279.541, 268.002, 13.8622, 0.23", "284.816, 270.974, 12.1527, 0.23", "289.983, 273.263, 9.3624, 0.23", "295.383, 275.682, 7.19585, 0.23", "300.808, 278.262, 5.29871, 0.23", "305.976, 279.697, 1.9641, 0.23", "310.92, 281.91, -1.25706, 0.23", "315.677, 283.698, -4.99416, 0.23", "319.865, 285.89, -9.15676, 0.23", "323.459, 288.644, -13.5151, 0.23", "327.366, 291.571, -17.4678, 0.23", "331.278, 294.361, -21.5186, 0.23", "335.139, 297.859, -25.0039, 0.23", "337.863, 302.479, -28.1671, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "232.345, 254.55, 23.9371, 0.68", "243.486, 257.391, 24.9905, 0.23", "254.368, 260.272, 27.56, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-269.516, -221.953, 45.7066, 0.23", "-270.329, -222.949, 45.6407, 0.23", "-272.052, -224.836, 45.5366, 2.5", "-274.922, -227.785, 45.3946, 0.23", "-276.042, -228.909, 45.3436, 1.36", "-277.45, -230.296, 45.2835, 0.23", "-278.696, -231.453, 45.2714, 0.68", "-280.954, -233.383, 45.3262, 0.23", "-282.509, -234.613, 45.4134, 0.91", "-283.306, -235.181, 45.4835, 0.23", "-284.317, -235.916, 45.5781, 1.36", "-286.725, -237.75, 45.7981, 0.23", "-287.559, -238.439, 45.8623, 0.23", "-288.458, -239.293, 45.9397, 1.59", "-289.344, -240.198, 46.0169, 1.59", "-292.024, -243.156, 46.3153, 0.23", "-293.255, -244.683, 46.4596, 2.05", "-294.833, -246.968, 46.6538, 0.23", "-296.105, -248.97, 46.8363, 1.59", "-296.837, -250.214, 46.9569, 1.59", "-298.11, -252.59, 47.178, 0.23", "-298.885, -254.114, 47.2831, 1.36", "-300.409, -257.068, 47.2658, 0.23", "-301.338, -258.753, 47.1244, 0.68", "-301.804, -259.46, 46.9885, 0.68", "-303.906, -262.178, 46.2233, 0.23", "-305.065, -263.554, 45.7881, 1.14", "-306.872, -265.603, 45.1303, 0.23", "-308.126, -267.048, 44.6441, 0.23", "-309.679, -269.073, 44.0048, 0.23", "-310.374, -270.261, 43.6787, 1.59", "-310.976, -273.956, 43.0204, 0.23", "-310.803, -275.184, 42.9443, 0.23", "-310.365, -276.718, 42.8812, 0.23", "-309.8, -278.525, 42.766, 1.36", "-309.13, -280.753, 42.6042, 1.36", "-308.475, -283.498, 42.2786, 0.23", "-308.403, -284.747, 42.0153, 1.14", "-308.621, -286.547, 41.6132, 0.23", "-309.24, -288.933, 41.0698, 0.68", "-309.689, -290.171, 40.7263, 0.68", "-310.226, -291.428, 40.335, 0.23", "-311.126, -293.568, 39.6038, 1.14", "-311.989, -295.563, 38.9208, 0.23", "-312.818, -297.631, 38.275, 1.14", "-313.792, -300.207, 37.5019, 0.23", "-314.451, -302.131, 36.9719, 0.23", "-314.912, -303.453, 36.6447, 1.14", "-315.944, -306.413, 36.027, 0.23", "-316.81, -308.783, 35.5853, 0.23", "-317.409, -310.502, 35.3136, 1.36", "-318.332, -313.167, 34.9895, 0.23", "-318.774, -314.551, 34.9015, 1.14", "-319.579, -317.065, 34.8691, 0.23", "-319.871, -317.974, 34.9195, 0.91", "-320.834, -320.633, 35.224, 0.23", "-321.632, -322.638, 35.5392, 1.14", "-323.186, -325.924, 36.0531, 0.68", "-324.028, -327.488, 36.1927, 0.23", "-325.767, -330.184, 36.2192, 1.14", "-326.495, -331.168, 36.1919, 0.23", "-327.679, -332.56, 36.1222, 0.68", "-329.684, -334.826, 35.9054, 0.23", "-331.724, -336.924, 35.5808, 0.23", "-333.35, -338.589, 35.3504, 2.95", "-335.539, -340.696, 35.0143, 0.23", "-337.269, -342.347, 34.8055, 0.68", "-338.512, -343.554, 34.6553, 0.68", "-339.487, -344.499, 34.5336, 0.23", "-340.181, -345.165, 34.4164, 0.91", "-342.056, -346.925, 33.8634, 0.23", "-343.175, -347.95, 33.4286, 0.91", "-345.41, -349.957, 32.519, 0.23", "-346.78, -351.188, 32.0118, 0.23", "-348.248, -352.55, 31.5235, 0.91", "-349.92, -354.065, 31.0795, 0.23", "-351.368, -355.389, 30.8174, 2.73", "-351.913, -355.889, 30.7646, 2.73", "-353.841, -357.794, 30.7325, 0.23", "-354.826, -358.823, 30.757, 1.14", "-356.071, -360.137, 30.8064, 0.23", "-357.959, -362.181, 30.8994, 0.23", "-359.571, -364.109, 30.9671, 0.23", "-360.607, -365.497, 30.9825, 1.14", "-361.406, -366.668, 30.9662, 0.23", "-362.165, -367.857, 30.8337, 1.82", "-362.667, -368.669, 30.6805, 1.82", "-364.007, -370.841, 30.1723, 0.23", "-365.104, -372.58, 29.6673, 1.14", "-366.824, -375.24, 28.8272, 0.23", "-368.471, -377.925, 27.8976, 2.73", "-369.18, -379.11, 27.4438, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-269.516, -221.953, 45.7066, 0.23", "-268.329, -222.197, 45.2684, 0.23", "-266.731, -222.524, 44.679, 0.91", "-265.779, -222.719, 44.3278, 0.23", "-264.031, -223.078, 43.6828, 0.68", "-262.202, -223.453, 43.0077, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "378.403, 144.961, 53.048, 0.23", "379.698, 144.375, 53.0442, 0.23", "380.64, 143.98, 53.0321, 0.45", "381.68, 143.597, 53.0062, 0.23", "382.947, 143.176, 52.9545, 0.91", "383.627, 142.944, 52.9121, 0.23", "384.554, 142.61, 52.8403, 1.14", "385.342, 142.329, 52.7904, 0.23", "386.46, 141.963, 52.7523, 0.23", "387.738, 141.594, 52.7275, 1.14", "389.084, 141.266, 52.7209, 0.23", "389.992, 141.079, 52.7402, 0.68", "391.413, 140.825, 52.7982, 0.23", "393.047, 140.615, 52.8922, 0.68", "394.303, 140.525, 53.0007, 0.23", "395.761, 140.527, 53.1616, 0.68", "397.079, 140.634, 53.3222, 0.23", "397.567, 140.695, 53.3804, 0.91", "398.837, 140.901, 53.5034, 0.23", "399.827, 141.099, 53.5887, 0.68", "400.37, 141.208, 53.6425, 0.23", "401.218, 141.406, 53.7319, 0.91" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "378.403, 144.961, 53.048, 0.23", "380.586, 146.814, 55.1336, 0.23", "382.336, 148.35, 56.6898, 0.23", "383.779, 149.653, 57.8851, 1.14", "386.49, 152.065, 60.0959, 0.23", "388.767, 154.133, 62.0531, 0.23", "389.863, 155.13, 62.9961, 1.14", "392.054, 157.065, 64.8116, 0.23", "393.347, 158.224, 65.9391, 0.23", "394.947, 159.706, 67.3193, 1.59", "396.587, 161.336, 68.6797, 2.27" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_0", "dend_65", "dend_48", "dend_24", "dend_1", "dend_85", "dend_66", "dend_60", "dend_49", "dend_42", "dend_25", "dend_21", "dend_2", "dend_107", "dend_86", "dend_76", "dend_67", "dend_64", "dend_61", "dend_55", "dend_50", "dend_44", "dend_43", "dend_39", "dend_26", "dend_23", "dend_22", "dend_18", "dend_3", "dend_109", "dend_108", "dend_96", "dend_87", "dend_84", "dend_77", "dend_75", "dend_68", "dend_63", "dend_62", "dend_57", "dend_56", "dend_54", "dend_51", "dend_46", "dend_45", "dend_41", "dend_40", "dend_38", "dend_27", "dend_20", "dend_19", "dend_7", "dend_4", "dend_106", "dend_97", "dend_95", "dend_88", "dend_79", "dend_78", "dend_72", "dend_69", "dend_59", "dend_58", "dend_53", "dend_52", "dend_31", "dend_28", "dend_17", "dend_8", "dend_6", "dend_5", "dend_99", "dend_98", "dend_94", "dend_89", "dend_81", "dend_80", "dend_74", "dend_73", "dend_71", "dend_70", "dend_37", "dend_32", "dend_30", "dend_29", "dend_12", "dend_9", "dend_101", "dend_100", "dend_91", "dend_90", "dend_83", "dend_82", "dend_34", "dend_33", "dend_14", "dend_13", "dend_11", "dend_10", "dend_105", "dend_102", "dend_93", "dend_92", "dend_36", "dend_35", "dend_16", "dend_15", "dend_104", "dend_103" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_0", "dend_65", "dend_48", "dend_24", "dend_1", "dend_85", "dend_66", "dend_60", "dend_49", "dend_42", "dend_25", "dend_21", "dend_2", "dend_107", "dend_86", "dend_76", "dend_67", "dend_64", "dend_61", "dend_55", "dend_50", "dend_44", "dend_43", "dend_39", "dend_26", "dend_23", "dend_22", "dend_18", "dend_3", "dend_109", "dend_108", "dend_96", "dend_87", "dend_84", "dend_77", "dend_75", "dend_68", "dend_63", "dend_62", "dend_57", "dend_56", "dend_54", "dend_51", "dend_46", "dend_45", "dend_41", "dend_40", "dend_38", "dend_27", "dend_20", "dend_19", "dend_7", "dend_4", "dend_106", "dend_97", "dend_95", "dend_88", "dend_79", "dend_78", "dend_72", "dend_69", "dend_59", "dend_58", "dend_53", "dend_52", "dend_31", "dend_28", "dend_17", "dend_8", "dend_6", "dend_5", "dend_99", "dend_98", "dend_94", "dend_89", "dend_81", "dend_80", "dend_74", "dend_73", "dend_71", "dend_70", "dend_37", "dend_32", "dend_30", "dend_29", "dend_12", "dend_9", "dend_101", "dend_100", "dend_91", "dend_90", "dend_83", "dend_82", "dend_34", "dend_33", "dend_14", "dend_13", "dend_11", "dend_10", "dend_105", "dend_102", "dend_93", "dend_92", "dend_36", "dend_35", "dend_16", "dend_15", "dend_104", "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_48", "dend_48", "dend_48", "dend_48", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_2", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_109", "dend_108", "dend_108", "dend_108", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_102", "dend_102", "dend_93", "dend_92", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_LBC_c2cff91741_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_65, id: dend_65, parent: dend_47
create dend_65
public dend_65
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_65
create dend_85
public dend_85
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_48
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_24
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_1
create dend_21
public dend_21
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_107, id: dend_107, parent: dend_85
create dend_107
public dend_107
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_76, id: dend_76, parent: dend_66
create dend_76
public dend_76
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_25
create dend_39
public dend_39
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_2
create dend_18
public dend_18
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_96, id: dend_96, parent: dend_86
create dend_96
public dend_96
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_84, id: dend_84, parent: dend_76
create dend_84
public dend_84
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_75, id: dend_75, parent: dend_67
create dend_75
public dend_75
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_26
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_106, id: dend_106, parent: dend_96
create dend_106
public dend_106
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_95, id: dend_95, parent: dend_87
create dend_95
public dend_95
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_94, id: dend_94, parent: dend_88
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_105, id: dend_105, parent: dend_101
create dend_105
public dend_105
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_106
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_48, dend_48, dend_48, dend_48, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_109, dend_108, dend_108, dend_108, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_93, dend_92, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4500004585168592)
    connect dend_0(0), soma_0(0.4500004585168592)
    connect axon_0(0), soma_0(1.0)
    connect dend_65(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_107(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_76(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_96(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_84(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_75(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_106(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_95(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_94(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_105(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -15.6431, -2.66144, 0.0, 3.30324 ) }
    soma_0 { pt3dadd( -14.0603, -2.4613, 0.0, 5.78525 ) }
    soma_0 { pt3dadd( -12.4774, -2.26116, 0.0, 7.9612 ) }
    soma_0 { pt3dadd( -10.8946, -2.06102, 0.0, 9.78332 ) }
    soma_0 { pt3dadd( -9.31178, -1.86088, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -7.72896, -1.66074, 0.0, 12.7179 ) }
    soma_0 { pt3dadd( -6.14614, -1.4606, 0.0, 13.968 ) }
    soma_0 { pt3dadd( -4.56331, -1.26046, 0.0, 15.126 ) }
    soma_0 { pt3dadd( -2.98049, -1.06032, 0.0, 16.024 ) }
    soma_0 { pt3dadd( -1.39766, -0.860182, 0.0, 16.3577 ) }
    soma_0 { pt3dadd( 0.185161, -0.660042, 0.0, 16.6168 ) }
    soma_0 { pt3dadd( 1.76798, -0.459902, 0.0, 16.4395 ) }
    soma_0 { pt3dadd( 3.35081, -0.259762, 0.0, 16.1401 ) }
    soma_0 { pt3dadd( 4.93363, -0.0596226, 0.0, 15.4809 ) }
    soma_0 { pt3dadd( 6.51646, 0.140517, 0.0, 14.5881 ) }
    soma_0 { pt3dadd( 8.09928, 0.340657, 0.0, 13.7036 ) }
    soma_0 { pt3dadd( 9.6821, 0.540797, 0.0, 12.5552 ) }
    soma_0 { pt3dadd( 11.2649, 0.740937, 0.0, 10.9185 ) }
    soma_0 { pt3dadd( 12.8478, 0.941077, 0.0, 9.17326 ) }
    soma_0 { pt3dadd( 14.4306, 1.14122, 0.0, 6.97209 ) }
    soma_0 { pt3dadd( 16.0134, 1.34136, 0.0, 4.21565 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 12.1654, 2.42565, 1.3, 6.82 ) }
    dend_47 { pt3dadd( 16.5103, 3.37648, 2.37177, 6.82 ) }
    dend_47 { pt3dadd( 20.444, 4.23732, 3.3421, 6.14 ) }
    dend_47 { pt3dadd( 21.9806, 4.57357, 3.72112, 6.14 ) }
    dend_47 { pt3dadd( 24.7092, 5.17071, 4.3942, 6.82 ) }
    dend_47 { pt3dadd( 28.1405, 5.92158, 5.24058, 6.82 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -13.7947, -3.41463, -1.22, 6.59 ) }
    dend_0 { pt3dadd( -17.6806, -5.6581, -2.95833, 5.23 ) }
    dend_0 { pt3dadd( -21.9905, -8.14636, -4.88632, 5.45 ) }
    dend_0 { pt3dadd( -24.8872, -9.81872, -6.18213, 5.45 ) }
    dend_0 { pt3dadd( -28.5748, -11.9477, -7.83177, 6.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 16.0134, 1.34136, 0.0, 1.29544 ) }
    axon_0 { pt3dadd( 30.8949, 3.22305, 0.0, 1.29544 ) }
    axon_0 { pt3dadd( 45.7764, 5.10474, 0.0, 1.29544 ) }
    // Section: dend_65, id: dend_65, parent: dend_47 (entry count 35/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 28.1405, 5.92158, 5.24058, 3.64 ) }
    dend_65 { pt3dadd( 30.0183, 6.07524, 5.68567, 3.64 ) }
    dend_65 { pt3dadd( 33.9579, 6.3976, 6.61946, 3.64 ) }
    dend_65 { pt3dadd( 37.8841, 6.71886, 7.55006, 3.64 ) }
    dend_65 { pt3dadd( 43.5706, 7.18416, 8.89791, 3.64 ) }
    dend_65 { pt3dadd( 47.5692, 7.51136, 9.84569, 3.64 ) }
    dend_65 { pt3dadd( 53.9699, 8.0351, 11.3628, 5.0 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 42/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 28.1405, 5.92158, 5.24058, 0.91 ) }
    dend_48 { pt3dadd( 30.2836, 6.04752, 6.56848, 0.91 ) }
    dend_48 { pt3dadd( 31.8573, 6.13999, 7.54348, 1.36 ) }
    dend_48 { pt3dadd( 33.4629, 6.23435, 8.53832, 1.36 ) }
    dend_48 { pt3dadd( 34.9648, 6.3226, 9.46888, 1.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -28.5748, -11.9477, -7.83177, 2.27 ) }
    dend_24 { pt3dadd( -29.1638, -9.41048, -8.89139, 2.27 ) }
    dend_24 { pt3dadd( -29.8785, -6.33169, -10.1772, 1.59 ) }
    dend_24 { pt3dadd( -30.4315, -3.9495, -11.172, 1.59 ) }
    dend_24 { pt3dadd( -30.7786, -2.45428, -11.7964, 1.59 ) }
    dend_24 { pt3dadd( -31.3931, 0.192763, -12.9019, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 53/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -28.5748, -11.9477, -7.83177, 4.55 ) }
    dend_1 { pt3dadd( -31.0557, -13.4428, -7.7633, 4.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 45.7764, 5.10474, 0.0, 0.153104 ) }
    axon_1 { pt3dadd( 60.6579, 6.98643, 0.0, 0.153104 ) }
    axon_1 { pt3dadd( 75.5394, 8.86812, 0.0, 0.153104 ) }
    // Section: dend_85, id: dend_85, parent: dend_65 (entry count 58/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 53.9699, 8.0351, 11.3628, 2.73 ) }
    dend_85 { pt3dadd( 57.346, 8.9126, 10.835, 2.73 ) }
    dend_85 { pt3dadd( 61.0271, 9.86938, 10.2596, 2.73 ) }
    dend_85 { pt3dadd( 64.6738, 10.8173, 9.68952, 2.73 ) }
    dend_85 { pt3dadd( 68.9342, 11.9246, 9.02351, 3.41 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 63/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 53.9699, 8.0351, 11.3628, 1.82 ) }
    dend_66 { pt3dadd( 55.5176, 6.7752, 11.9854, 1.82 ) }
    dend_66 { pt3dadd( 56.8904, 5.7504, 12.5769, 1.36 ) }
    dend_66 { pt3dadd( 58.279, 4.70345, 13.2943, 1.59 ) }
    dend_66 { pt3dadd( 59.5348, 3.76912, 13.9767, 1.59 ) }
    dend_66 { pt3dadd( 60.6404, 2.9507, 14.5919, 1.59 ) }
    dend_66 { pt3dadd( 61.6258, 2.1992, 15.1595, 1.36 ) }
    dend_66 { pt3dadd( 62.5502, 1.47004, 15.7513, 1.36 ) }
    dend_66 { pt3dadd( 63.6839, 0.423255, 16.5649, 2.27 ) }
    dend_66 { pt3dadd( 64.7048, -0.571813, 17.3368, 2.05 ) }
    dend_66 { pt3dadd( 65.9666, -1.88485, 18.3477, 0.91 ) }
    dend_66 { pt3dadd( 66.6851, -2.68512, 18.9238, 1.14 ) }
    dend_66 { pt3dadd( 67.6088, -3.8552, 19.6842, 1.14 ) }
    dend_66 { pt3dadd( 68.6468, -5.35882, 20.533, 1.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_48 (entry count 77/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 34.9648, 6.3226, 9.46888, 0.68 ) }
    dend_60 { pt3dadd( 36.8935, 6.33787, 9.34558, 0.68 ) }
    dend_60 { pt3dadd( 39.1759, 6.35016, 9.22536, 0.68 ) }
    dend_60 { pt3dadd( 42.1579, 6.35384, 9.08353, 0.45 ) }
    dend_60 { pt3dadd( 44.0206, 6.36921, 9.02634, 0.91 ) }
    dend_60 { pt3dadd( 46.1605, 6.43419, 8.98905, 0.91 ) }
    dend_60 { pt3dadd( 47.9282, 6.51425, 9.00062, 0.23 ) }
    dend_60 { pt3dadd( 49.5646, 6.68006, 9.05592, 1.14 ) }
    dend_60 { pt3dadd( 50.8308, 6.87113, 9.13664, 1.82 ) }
    dend_60 { pt3dadd( 52.9738, 7.26356, 9.32546, 0.91 ) }
    dend_60 { pt3dadd( 55.1479, 7.67709, 9.59021, 0.68 ) }
    dend_60 { pt3dadd( 57.8352, 8.2155, 10.1425, 0.68 ) }
    dend_60 { pt3dadd( 59.3885, 8.5451, 10.6767, 0.45 ) }
    dend_60 { pt3dadd( 60.2794, 8.73364, 11.0865, 1.14 ) }
    dend_60 { pt3dadd( 61.2822, 8.96013, 11.6677, 0.23 ) }
    dend_60 { pt3dadd( 62.0924, 9.13771, 12.2888, 2.27 ) }
    dend_60 { pt3dadd( 64.2644, 9.57138, 14.3407, 1.14 ) }
    dend_60 { pt3dadd( 66.494, 9.97112, 16.6742, 0.45 ) }
    dend_60 { pt3dadd( 66.9773, 10.0403, 17.2131, 1.36 ) }
    dend_60 { pt3dadd( 67.9981, 10.1851, 18.4138, 1.36 ) }
    dend_60 { pt3dadd( 69.6339, 10.4875, 20.4509, 0.23 ) }
    dend_60 { pt3dadd( 70.3479, 10.6522, 21.3295, 0.23 ) }
    dend_60 { pt3dadd( 70.9996, 10.8321, 22.0649, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 0/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 34.9648, 6.3226, 9.46888, 1.14 ) }
    dend_49 { pt3dadd( 36.6676, 6.83425, 9.58402, 1.14 ) }
    dend_49 { pt3dadd( 39.8734, 7.7975, 9.8008, 2.27 ) }
    // Section: dend_42, id: dend_42, parent: dend_24 (entry count 3/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -31.3931, 0.192763, -12.9019, 0.45 ) }
    dend_42 { pt3dadd( -32.555, 1.73699, -12.7036, 0.45 ) }
    dend_42 { pt3dadd( -33.8274, 3.43155, -12.5495, 0.45 ) }
    dend_42 { pt3dadd( -34.2466, 4.04055, -12.5131, 1.14 ) }
    dend_42 { pt3dadd( -35.3756, 5.85609, -12.4668, 0.23 ) }
    dend_42 { pt3dadd( -35.9996, 6.9485, -12.4639, 0.23 ) }
    dend_42 { pt3dadd( -36.6813, 8.19041, -12.3863, 1.14 ) }
    dend_42 { pt3dadd( -37.411, 9.70636, -12.2267, 1.14 ) }
    dend_42 { pt3dadd( -37.765, 10.5939, -12.1449, 0.23 ) }
    dend_42 { pt3dadd( -38.153, 11.6938, -12.0828, 0.68 ) }
    dend_42 { pt3dadd( -39.0298, 14.3975, -12.0161, 0.23 ) }
    dend_42 { pt3dadd( -39.7535, 17.0055, -12.0666, 0.68 ) }
    dend_42 { pt3dadd( -40.2081, 18.8632, -12.1662, 1.59 ) }
    dend_42 { pt3dadd( -40.7094, 21.1061, -12.3662, 0.45 ) }
    dend_42 { pt3dadd( -41.2333, 23.3389, -12.6519, 1.14 ) }
    dend_42 { pt3dadd( -41.5166, 24.5084, -12.8838, 0.23 ) }
    dend_42 { pt3dadd( -42.0483, 26.6569, -13.3923, 1.59 ) }
    dend_42 { pt3dadd( -42.7784, 29.1115, -14.054, 0.23 ) }
    dend_42 { pt3dadd( -43.3256, 30.5729, -14.4206, 1.14 ) }
    dend_42 { pt3dadd( -43.9899, 31.9734, -14.712, 0.23 ) }
    dend_42 { pt3dadd( -45.0296, 33.7337, -15.0074, 1.14 ) }
    dend_42 { pt3dadd( -46.5269, 35.8399, -15.353, 0.68 ) }
    dend_42 { pt3dadd( -47.7567, 37.3566, -15.528, 1.14 ) }
    dend_42 { pt3dadd( -48.6854, 38.482, -15.6229, 2.5 ) }
    dend_42 { pt3dadd( -50.0119, 40.1637, -15.6934, 2.73 ) }
    dend_42 { pt3dadd( -52.0478, 42.8811, -15.7538, 1.14 ) }
    dend_42 { pt3dadd( -53.6871, 45.2164, -15.7248, 0.23 ) }
    dend_42 { pt3dadd( -55.0022, 47.2038, -15.7055, 0.91 ) }
    dend_42 { pt3dadd( -56.5961, 49.9479, -15.5881, 0.23 ) }
    dend_42 { pt3dadd( -57.7155, 52.1306, -15.4185, 0.23 ) }
    dend_42 { pt3dadd( -58.7552, 54.4508, -15.1909, 0.91 ) }
    dend_42 { pt3dadd( -59.4804, 56.2266, -15.0455, 0.23 ) }
    dend_42 { pt3dadd( -59.8422, 57.1229, -15.0079, 0.91 ) }
    dend_42 { pt3dadd( -60.677, 59.1053, -15.0316, 0.23 ) }
    dend_42 { pt3dadd( -61.5687, 61.155, -15.074, 1.82 ) }
    dend_42 { pt3dadd( -62.4838, 63.137, -15.1756, 3.86 ) }
    dend_42 { pt3dadd( -64.4658, 67.2693, -15.458, 1.36 ) }
    dend_42 { pt3dadd( -65.7117, 69.7505, -15.7299, 0.68 ) }
    dend_42 { pt3dadd( -66.7372, 71.6706, -15.9707, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -31.3931, 0.192763, -12.9019, 1.59 ) }
    dend_25 { pt3dadd( -31.5395, 2.02828, -14.2259, 1.59 ) }
    dend_25 { pt3dadd( -31.5582, 3.45553, -15.2283, 1.59 ) }
    dend_25 { pt3dadd( -31.4604, 4.70223, -16.11, 1.59 ) }
    dend_25 { pt3dadd( -31.2356, 6.12532, -17.0765, 0.91 ) }
    dend_25 { pt3dadd( -30.6895, 8.62304, -18.6364, 0.45 ) }
    dend_25 { pt3dadd( -30.5027, 9.2946, -19.0122, 0.45 ) }
    dend_25 { pt3dadd( -30.0144, 10.6303, -19.6067, 0.45 ) }
    dend_25 { pt3dadd( -29.4233, 11.9771, -20.0098, 1.14 ) }
    dend_25 { pt3dadd( -28.7837, 13.1566, -20.2192, 1.82 ) }
    dend_25 { pt3dadd( -27.7513, 14.7824, -20.2902, 0.68 ) }
    dend_25 { pt3dadd( -26.6623, 16.3889, -20.2669, 1.36 ) }
    dend_25 { pt3dadd( -25.7513, 17.8215, -20.2834, 0.45 ) }
    dend_25 { pt3dadd( -24.9942, 19.0702, -20.3217, 1.14 ) }
    dend_25 { pt3dadd( -24.245, 20.3176, -20.4289, 0.23 ) }
    dend_25 { pt3dadd( -23.5722, 21.3255, -20.6206, 1.82 ) }
    dend_25 { pt3dadd( -21.7795, 23.6334, -21.3056, 0.68 ) }
    dend_25 { pt3dadd( -20.7163, 24.8432, -21.7876, 1.59 ) }
    dend_25 { pt3dadd( -19.9364, 25.648, -22.1687, 1.59 ) }
    dend_25 { pt3dadd( -18.61, 26.9479, -22.7956, 0.45 ) }
    dend_25 { pt3dadd( -17.4255, 28.1763, -23.3254, 0.68 ) }
    dend_25 { pt3dadd( -16.6738, 28.9358, -23.6087, 0.23 ) }
    dend_25 { pt3dadd( -15.6503, 29.9127, -23.8308, 1.14 ) }
    dend_25 { pt3dadd( -14.8011, 30.7177, -23.9592, 0.23 ) }
    dend_25 { pt3dadd( -13.7624, 31.7508, -24.0785, 0.23 ) }
    dend_25 { pt3dadd( -12.6862, 32.9485, -24.1082, 0.68 ) }
    dend_25 { pt3dadd( -12.0769, 33.7488, -24.0831, 0.23 ) }
    dend_25 { pt3dadd( -10.6478, 35.9044, -24.0205, 0.23 ) }
    dend_25 { pt3dadd( -6.74355, 42.8708, -24.6582, 0.23 ) }
    dend_25 { pt3dadd( -2.8689, 49.8063, -23.6231, 0.23 ) }
    dend_25 { pt3dadd( 2.09513, 55.7566, -21.4338, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_1 (entry count 73/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -31.0557, -13.4428, -7.7633, 0.68 ) }
    dend_21 { pt3dadd( -33.2086, -13.7227, -9.60296, 0.68 ) }
    dend_21 { pt3dadd( -35.3718, -13.9983, -11.4757, 0.45 ) }
    dend_21 { pt3dadd( -37.757, -14.405, -13.5181, 0.45 ) }
    dend_21 { pt3dadd( -39.3102, -14.7203, -14.8258, 0.45 ) }
    dend_21 { pt3dadd( -41.6326, -15.2412, -16.727, 1.36 ) }
    dend_21 { pt3dadd( -44.6376, -15.9575, -19.0944, 1.36 ) }
    dend_21 { pt3dadd( -45.9142, -16.2978, -20.0636, 1.14 ) }
    dend_21 { pt3dadd( -47.8924, -16.8784, -21.381, 0.68 ) }
    dend_21 { pt3dadd( -48.488, -17.0765, -21.6983, 0.68 ) }
    dend_21 { pt3dadd( -49.3129, -17.3339, -22.0281, 0.68 ) }
    dend_21 { pt3dadd( -50.3762, -17.632, -22.2988, 0.68 ) }
    dend_21 { pt3dadd( -52.4978, -18.1022, -22.6402, 0.68 ) }
    dend_21 { pt3dadd( -54.5704, -18.5225, -23.0533, 2.05 ) }
    dend_21 { pt3dadd( -56.657, -18.8985, -23.5159, 0.23 ) }
    dend_21 { pt3dadd( -58.1439, -19.2003, -23.8774, 1.14 ) }
    dend_21 { pt3dadd( -60.7084, -19.7406, -24.5398, 0.23 ) }
    dend_21 { pt3dadd( -61.986, -20.0006, -24.8819, 2.05 ) }
    dend_21 { pt3dadd( -65.217, -20.4924, -25.6442, 0.23 ) }
    dend_21 { pt3dadd( -67.1293, -20.5965, -26.0056, 1.14 ) }
    dend_21 { pt3dadd( -68.5348, -20.6394, -26.2229, 0.23 ) }
    dend_21 { pt3dadd( -69.9498, -20.6865, -26.4296, 0.23 ) }
    dend_21 { pt3dadd( -71.3746, -20.6146, -26.5799, 0.23 ) }
    dend_21 { pt3dadd( -74.3372, -20.0351, -26.5242, 0.23 ) }
    dend_21 { pt3dadd( -76.0209, -19.0987, -26.0423, 0.23 ) }
    dend_21 { pt3dadd( -84.9028, -19.4534, -29.932, 0.23 ) }
    dend_21 { pt3dadd( -94.0871, -19.2051, -33.0518, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 0/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -31.0557, -13.4428, -7.7633, 3.18 ) }
    dend_2 { pt3dadd( -34.2641, -15.6076, -6.95526, 3.18 ) }
    // Section: dend_107, id: dend_107, parent: dend_85 (entry count 2/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 68.9342, 11.9246, 9.02351, 0.68 ) }
    dend_107 { pt3dadd( 70.3722, 10.7875, 9.32369, 0.68 ) }
    dend_107 { pt3dadd( 71.5162, 9.63407, 9.36244, 0.68 ) }
    dend_107 { pt3dadd( 72.2543, 8.72322, 9.33067, 0.68 ) }
    dend_107 { pt3dadd( 73.1097, 7.54719, 9.26668, 0.68 ) }
    dend_107 { pt3dadd( 73.5897, 6.86373, 9.21349, 0.68 ) }
    dend_107 { pt3dadd( 74.7768, 5.13193, 9.0729, 0.68 ) }
    dend_107 { pt3dadd( 76.1, 2.91993, 8.81171, 1.36 ) }
    dend_107 { pt3dadd( 76.9606, 1.14107, 8.60297, 0.45 ) }
    dend_107 { pt3dadd( 77.21, 0.550796, 8.52489, 1.14 ) }
    dend_107 { pt3dadd( 77.6498, -0.587753, 8.35546, 0.68 ) }
    dend_107 { pt3dadd( 77.8821, -1.20708, 8.2594, 2.27 ) }
    dend_107 { pt3dadd( 78.6469, -3.27476, 7.96064, 0.91 ) }
    dend_107 { pt3dadd( 79.0507, -4.43947, 7.77446, 0.23 ) }
    dend_107 { pt3dadd( 79.5296, -5.74531, 7.5048, 0.23 ) }
    dend_107 { pt3dadd( 80.1728, -7.28093, 7.12015, 1.14 ) }
    dend_107 { pt3dadd( 80.7126, -8.43525, 6.82328, 2.27 ) }
    dend_107 { pt3dadd( 81.4751, -9.80581, 6.5286, 1.14 ) }
    dend_107 { pt3dadd( 82.7251, -11.6168, 6.29615, 1.14 ) }
    dend_107 { pt3dadd( 83.4178, -12.4753, 6.24773, 1.14 ) }
    dend_107 { pt3dadd( 84.7862, -14.0534, 6.24731, 0.68 ) }
    dend_107 { pt3dadd( 85.8807, -15.1148, 6.2903, 1.14 ) }
    dend_107 { pt3dadd( 87.5833, -16.4881, 6.37067, 0.23 ) }
    dend_107 { pt3dadd( 89.105, -17.55, 6.51671, 1.59 ) }
    dend_107 { pt3dadd( 90.8936, -18.7137, 6.81607, 0.68 ) }
    dend_107 { pt3dadd( 91.9441, -19.3978, 6.97942, 2.27 ) }
    dend_107 { pt3dadd( 93.7031, -20.472, 7.23001, 1.14 ) }
    dend_107 { pt3dadd( 95.0917, -21.318, 7.29158, 0.23 ) }
    dend_107 { pt3dadd( 96.0702, -21.9611, 7.23467, 0.68 ) }
    dend_107 { pt3dadd( 97.4528, -22.9032, 7.0367, 0.23 ) }
    dend_107 { pt3dadd( 98.819, -23.8815, 6.80334, 1.59 ) }
    dend_107 { pt3dadd( 99.707, -24.5533, 6.61478, 2.05 ) }
    dend_107 { pt3dadd( 101.294, -25.8796, 6.13174, 0.68 ) }
    dend_107 { pt3dadd( 102.055, -26.5276, 5.86616, 1.36 ) }
    dend_107 { pt3dadd( 103.753, -27.9717, 5.2879, 0.23 ) }
    dend_107 { pt3dadd( 104.489, -28.6023, 5.07756, 0.68 ) }
    dend_107 { pt3dadd( 105.48, -29.4709, 4.89448, 0.68 ) }
    dend_107 { pt3dadd( 106.252, -30.1328, 4.80834, 0.68 ) }
    dend_107 { pt3dadd( 106.925, -30.7031, 4.80781, 1.59 ) }
    dend_107 { pt3dadd( 108.267, -31.8666, 4.90663, 0.91 ) }
    dend_107 { pt3dadd( 109.625, -33.1178, 5.07335, 0.91 ) }
    dend_107 { pt3dadd( 110.717, -34.1528, 5.2116, 1.59 ) }
    dend_107 { pt3dadd( 111.889, -35.28, 5.33133, 0.45 ) }
    dend_107 { pt3dadd( 112.953, -36.2875, 5.43647, 0.45 ) }
    dend_107 { pt3dadd( 113.87, -37.1117, 5.50911, 0.68 ) }
    dend_107 { pt3dadd( 115.066, -38.0979, 5.60579, 1.82 ) }
    dend_107 { pt3dadd( 116.22, -39.0332, 5.71873, 0.91 ) }
    dend_107 { pt3dadd( 117.562, -40.0919, 5.8756, 0.23 ) }
    dend_107 { pt3dadd( 118.567, -40.8145, 5.98657, 0.68 ) }
    dend_107 { pt3dadd( 120.123, -41.8656, 6.1288, 0.68 ) }
    dend_107 { pt3dadd( 121.795, -42.9697, 6.2813, 0.23 ) }
    dend_107 { pt3dadd( 122.779, -43.6025, 6.39388, 0.91 ) }
    dend_107 { pt3dadd( 124.056, -44.3902, 6.54975, 0.23 ) }
    dend_107 { pt3dadd( 125.106, -45.018, 6.74692, 0.23 ) }
    dend_107 { pt3dadd( 129.924, -49.9523, 5.7566, 0.23 ) }
    dend_107 { pt3dadd( 134.796, -54.7391, 4.33941, 0.23 ) }
    dend_107 { pt3dadd( 139.828, -59.2086, 2.46516, 0.23 ) }
    dend_107 { pt3dadd( 145.114, -63.4083, 0.647561, 0.23 ) }
    dend_107 { pt3dadd( 149.942, -68.0838, -1.24448, 0.23 ) }
    dend_107 { pt3dadd( 153.961, -73.1406, -3.88962, 0.23 ) }
    dend_107 { pt3dadd( 158.183, -78.1779, -6.2332, 0.23 ) }
    dend_107 { pt3dadd( 162.589, -82.8814, -8.93533, 0.23 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 64/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 68.9342, 11.9246, 9.02351, 0.68 ) }
    dend_86 { pt3dadd( 72.3582, 13.9241, 7.87783, 0.68 ) }
    dend_86 { pt3dadd( 74.855, 15.1754, 6.96057, 0.68 ) }
    dend_86 { pt3dadd( 76.9966, 16.1359, 6.10083, 1.82 ) }
    dend_86 { pt3dadd( 78.2751, 16.6745, 5.55763, 1.36 ) }
    dend_86 { pt3dadd( 79.2097, 17.0597, 5.16312, 2.05 ) }
    dend_86 { pt3dadd( 81.2544, 17.8958, 4.32785, 2.05 ) }
    dend_86 { pt3dadd( 84.1327, 18.9164, 3.12748, 0.91 ) }
    dend_86 { pt3dadd( 85.7575, 19.4928, 2.53958, 1.59 ) }
    dend_86 { pt3dadd( 87.3258, 20.0905, 2.01395, 2.05 ) }
    dend_86 { pt3dadd( 89.2564, 20.8335, 1.35387, 2.5 ) }
    dend_86 { pt3dadd( 90.8808, 21.467, 0.805745, 2.73 ) }
    dend_86 { pt3dadd( 92.5009, 22.1317, 0.297892, 2.05 ) }
    dend_86 { pt3dadd( 93.827, 22.7553, 0.0108352, 2.95 ) }
    dend_86 { pt3dadd( 94.615, 23.1498, -0.107394, 2.5 ) }
    // Section: dend_76, id: dend_76, parent: dend_66 (entry count 79/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 68.6468, -5.35882, 20.533, 0.91 ) }
    dend_76 { pt3dadd( 68.1387, -8.36754, 21.0239, 0.91 ) }
    dend_76 { pt3dadd( 67.8093, -10.6287, 21.3946, 0.45 ) }
    dend_76 { pt3dadd( 67.5188, -13.0908, 21.8003, 0.91 ) }
    dend_76 { pt3dadd( 67.4002, -14.1399, 22.0038, 0.91 ) }
    dend_76 { pt3dadd( 67.0395, -17.0408, 22.6062, 0.23 ) }
    dend_76 { pt3dadd( 66.8241, -18.7735, 22.9771, 1.59 ) }
    dend_76 { pt3dadd( 66.5872, -20.9526, 23.4701, 0.45 ) }
    dend_76 { pt3dadd( 66.442, -22.4534, 23.8206, 1.82 ) }
    dend_76 { pt3dadd( 66.2074, -25.5781, 24.5565, 0.45 ) }
    dend_76 { pt3dadd( 66.0231, -28.1065, 25.1548, 0.68 ) }
    dend_76 { pt3dadd( 65.9334, -29.5821, 25.466, 2.27 ) }
    dend_76 { pt3dadd( 65.8916, -30.5588, 25.6368, 2.27 ) }
    dend_76 { pt3dadd( 65.8448, -32.7829, 25.9485, 1.14 ) }
    dend_76 { pt3dadd( 65.8368, -35.8521, 26.2826, 0.68 ) }
    dend_76 { pt3dadd( 65.8841, -38.6506, 26.5279, 1.14 ) }
    dend_76 { pt3dadd( 65.8898, -40.618, 26.708, 0.23 ) }
    dend_76 { pt3dadd( 65.8234, -42.472, 26.9128, 1.82 ) }
    dend_76 { pt3dadd( 65.6, -45.2242, 27.3584, 0.23 ) }
    dend_76 { pt3dadd( 65.3548, -47.153, 27.8071, 0.23 ) }
    dend_76 { pt3dadd( 65.0414, -48.9147, 28.3256, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_76 { pt3dadd( 64.5647, -51.4133, 29.1799, 0.68 ) }
    dend_76 { pt3dadd( 64.1018, -53.6174, 30.0265, 3.41 ) }
    dend_76 { pt3dadd( 63.3628, -57.1471, 31.4324, 0.45 ) }
    dend_76 { pt3dadd( 62.8903, -59.5387, 32.3162, 1.14 ) }
    dend_76 { pt3dadd( 62.5391, -61.7689, 33.0548, 1.59 ) }
    dend_76 { pt3dadd( 62.3218, -64.188, 33.7363, 0.68 ) }
    dend_76 { pt3dadd( 62.3213, -65.1736, 33.9682, 1.36 ) }
    dend_76 { pt3dadd( 62.5155, -67.5061, 34.3663, 0.23 ) }
    dend_76 { pt3dadd( 62.908, -69.6677, 34.5878, 2.05 ) }
    dend_76 { pt3dadd( 63.3174, -71.1514, 34.6966, 2.05 ) }
    dend_76 { pt3dadd( 63.9866, -72.9482, 34.8226, 0.68 ) }
    dend_76 { pt3dadd( 64.8349, -74.9397, 35.0009, 1.36 ) }
    dend_76 { pt3dadd( 65.4926, -76.3428, 35.1621, 1.82 ) }
    dend_76 { pt3dadd( 65.9351, -77.2284, 35.288, 1.82 ) }
    dend_76 { pt3dadd( 66.8663, -78.9717, 35.6217, 0.23 ) }
    dend_76 { pt3dadd( 67.9636, -80.9822, 35.9937, 2.73 ) }
    dend_76 { pt3dadd( 68.9609, -82.85, 36.3131, 0.23 ) }
    dend_76 { pt3dadd( 69.414, -83.6805, 36.4333, 1.14 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 68.6468, -5.35882, 20.533, 3.41 ) }
    dend_67 { pt3dadd( 68.7056, -5.45703, 20.5802, 3.41 ) }
    dend_67 { pt3dadd( 70.3239, -8.71574, 21.8561, 0.91 ) }
    dend_67 { pt3dadd( 71.3379, -11.0521, 22.6975, 0.91 ) }
    dend_67 { pt3dadd( 71.9136, -12.5315, 23.2169, 1.36 ) }
    dend_67 { pt3dadd( 72.4707, -14.1413, 23.7794, 1.36 ) }
    dend_67 { pt3dadd( 73.5365, -17.504, 24.9604, 0.91 ) }
    dend_67 { pt3dadd( 74.0923, -19.7258, 25.7228, 1.36 ) }
    dend_67 { pt3dadd( 74.5928, -22.4077, 26.6061, 1.14 ) }
    dend_67 { pt3dadd( 74.8638, -24.1105, 27.1703, 1.36 ) }
    dend_67 { pt3dadd( 75.0492, -25.3269, 27.5848, 0.68 ) }
    dend_67 { pt3dadd( 75.2643, -26.7847, 28.1142, 1.36 ) }
    dend_67 { pt3dadd( 75.5803, -29.0277, 28.9631, 0.23 ) }
    dend_67 { pt3dadd( 75.8099, -30.5817, 29.5786, 0.91 ) }
    dend_67 { pt3dadd( 76.1993, -32.842, 30.456, 0.23 ) }
    dend_67 { pt3dadd( 76.5995, -34.7931, 31.2531, 2.05 ) }
    dend_67 { pt3dadd( 76.9244, -36.1578, 31.8481, 2.05 ) }
    dend_67 { pt3dadd( 77.6687, -38.8843, 33.1072, 0.91 ) }
    dend_67 { pt3dadd( 78.0888, -40.1746, 33.7362, 0.91 ) }
    dend_67 { pt3dadd( 78.6629, -41.7649, 34.5508, 0.68 ) }
    dend_67 { pt3dadd( 79.5428, -43.9728, 35.7457, 0.68 ) }
    dend_67 { pt3dadd( 80.1497, -45.3598, 36.5567, 0.68 ) }
    dend_67 { pt3dadd( 80.957, -47.007, 37.5446, 0.68 ) }
    dend_67 { pt3dadd( 82.2267, -49.2591, 38.9402, 1.36 ) }
    dend_67 { pt3dadd( 82.5857, -49.85, 39.3075, 2.05 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 43/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 70.9996, 10.8321, 22.0649, 1.36 ) }
    dend_64 { pt3dadd( 72.4652, 12.576, 22.4741, 1.36 ) }
    dend_64 { pt3dadd( 73.5695, 13.916, 22.793, 0.23 ) }
    dend_64 { pt3dadd( 74.2307, 14.6851, 22.9671, 1.36 ) }
    dend_64 { pt3dadd( 75.5853, 16.3886, 23.3946, 0.45 ) }
    dend_64 { pt3dadd( 76.3447, 17.371, 23.711, 0.91 ) }
    dend_64 { pt3dadd( 77.208, 18.4132, 24.0804, 0.91 ) }
    dend_64 { pt3dadd( 78.8046, 20.3253, 24.9681, 0.23 ) }
    dend_64 { pt3dadd( 79.6592, 21.3708, 25.5182, 1.14 ) }
    dend_64 { pt3dadd( 81.0018, 23.0884, 26.6114, 1.14 ) }
    dend_64 { pt3dadd( 82.3556, 24.918, 27.9322, 0.68 ) }
    dend_64 { pt3dadd( 83.4921, 26.5239, 29.1669, 0.68 ) }
    dend_64 { pt3dadd( 84.6127, 28.1329, 30.4646, 0.68 ) }
    dend_64 { pt3dadd( 85.3574, 29.2649, 31.4015, 0.68 ) }
    dend_64 { pt3dadd( 86.5754, 31.3506, 33.017, 2.05 ) }
    dend_64 { pt3dadd( 87.9741, 33.955, 34.8141, 0.68 ) }
    dend_64 { pt3dadd( 89.3618, 37.0094, 36.5969, 1.82 ) }
    dend_64 { pt3dadd( 90.3089, 39.4048, 37.8724, 0.45 ) }
    dend_64 { pt3dadd( 90.7371, 40.5128, 38.3877, 1.59 ) }
    dend_64 { pt3dadd( 91.8579, 43.719, 39.7401, 0.23 ) }
    dend_64 { pt3dadd( 92.437, 45.6638, 40.4076, 1.36 ) }
    dend_64 { pt3dadd( 93.0303, 48.2577, 41.2112, 0.45 ) }
    dend_64 { pt3dadd( 93.656, 51.5262, 42.1785, 2.27 ) }
    dend_64 { pt3dadd( 93.9703, 53.1678, 42.6325, 0.68 ) }
    dend_64 { pt3dadd( 94.685, 56.4431, 43.566, 0.23 ) }
    dend_64 { pt3dadd( 95.3949, 59.3319, 44.3737, 0.91 ) }
    dend_64 { pt3dadd( 95.9845, 61.5729, 44.9866, 0.23 ) }
    dend_64 { pt3dadd( 96.6083, 63.713, 45.5204, 1.36 ) }
    dend_64 { pt3dadd( 97.4818, 66.339, 46.1197, 0.23 ) }
    dend_64 { pt3dadd( 98.728, 69.3893, 46.9029, 0.91 ) }
    dend_64 { pt3dadd( 99.314, 70.5628, 47.211, 0.23 ) }
    dend_64 { pt3dadd( 99.9489, 71.7066, 47.5491, 1.36 ) }
    dend_64 { pt3dadd( 100.538, 72.7045, 47.8412, 1.36 ) }
    dend_64 { pt3dadd( 102.308, 75.413, 48.6212, 0.23 ) }
    dend_64 { pt3dadd( 103.71, 77.3295, 49.1737, 1.14 ) }
    dend_64 { pt3dadd( 104.964, 78.9153, 49.6068, 0.23 ) }
    dend_64 { pt3dadd( 106.581, 80.792, 50.1096, 1.82 ) }
    dend_64 { pt3dadd( 107.525, 81.8613, 50.4031, 2.05 ) }
    dend_64 { pt3dadd( 109.435, 83.9834, 50.9496, 0.23 ) }
    dend_64 { pt3dadd( 111.164, 85.8452, 51.406, 0.23 ) }
    dend_64 { pt3dadd( 111.793, 86.4996, 51.574, 1.36 ) }
    dend_64 { pt3dadd( 112.99, 87.68, 51.9236, 1.36 ) }
    dend_64 { pt3dadd( 114.325, 88.9806, 52.3216, 0.23 ) }
    dend_64 { pt3dadd( 115.11, 89.7557, 52.579, 0.91 ) }
    dend_64 { pt3dadd( 116.56, 91.2187, 53.155, 0.23 ) }
    dend_64 { pt3dadd( 117.248, 91.841, 53.4489, 1.14 ) }
    dend_64 { pt3dadd( 118.028, 92.4857, 53.7767, 0.23 ) }
    dend_64 { pt3dadd( 118.786, 93.0518, 54.0107, 0.91 ) }
    dend_64 { pt3dadd( 120.937, 94.4807, 54.406, 0.23 ) }
    dend_64 { pt3dadd( 122.232, 95.3245, 54.5579, 1.14 ) }
    dend_64 { pt3dadd( 124.314, 96.7136, 54.6801, 0.23 ) }
    dend_64 { pt3dadd( 125.929, 97.8605, 54.7335, 0.23 ) }
    dend_64 { pt3dadd( 128.324, 99.7028, 54.7301, 0.68 ) }
    dend_64 { pt3dadd( 129.308, 100.589, 54.6635, 0.23 ) }
    dend_64 { pt3dadd( 129.846, 101.179, 54.5825, 1.36 ) }
    dend_64 { pt3dadd( 131.225, 102.956, 54.2567, 0.23 ) }
    dend_64 { pt3dadd( 132.33, 104.669, 53.9037, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_64 { pt3dadd( 133.943, 107.466, 53.3707, 0.23 ) }
    dend_64 { pt3dadd( 134.838, 109.178, 53.1436, 2.27 ) }
    dend_64 { pt3dadd( 135.758, 111.021, 52.998, 0.23 ) }
    dend_64 { pt3dadd( 136.463, 112.51, 52.9231, 1.14 ) }
    dend_64 { pt3dadd( 137.215, 114.255, 52.9167, 0.23 ) }
    dend_64 { pt3dadd( 137.923, 116.09, 53.0265, 0.91 ) }
    dend_64 { pt3dadd( 138.541, 117.796, 53.348, 0.23 ) }
    dend_64 { pt3dadd( 139.391, 119.963, 53.98, 2.05 ) }
    dend_64 { pt3dadd( 139.786, 120.887, 54.2986, 0.23 ) }
    dend_64 { pt3dadd( 140.415, 122.334, 54.8419, 1.59 ) }
    dend_64 { pt3dadd( 141.049, 123.645, 55.3389, 0.23 ) }
    dend_64 { pt3dadd( 142.3, 126.0, 56.2418, 0.23 ) }
    dend_64 { pt3dadd( 142.883, 126.963, 56.5914, 1.36 ) }
    dend_64 { pt3dadd( 143.793, 128.199, 57.016, 0.23 ) }
    dend_64 { pt3dadd( 144.427, 128.957, 57.3063, 1.59 ) }
    dend_64 { pt3dadd( 146.104, 130.788, 58.0837, 0.23 ) }
    dend_64 { pt3dadd( 147.081, 131.78, 58.5907, 0.91 ) }
    dend_64 { pt3dadd( 148.932, 133.531, 59.7479, 0.23 ) }
    dend_64 { pt3dadd( 149.808, 134.35, 60.3627, 2.05 ) }
    dend_64 { pt3dadd( 152.389, 136.704, 62.3749, 0.23 ) }
    dend_64 { pt3dadd( 153.278, 137.474, 63.1058, 0.91 ) }
    dend_64 { pt3dadd( 154.393, 138.426, 64.1106, 0.23 ) }
    dend_64 { pt3dadd( 156.571, 140.235, 66.0509, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 23/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 70.9996, 10.8321, 22.0649, 1.14 ) }
    dend_61 { pt3dadd( 72.3524, 10.4014, 23.4504, 1.14 ) }
    dend_61 { pt3dadd( 74.2026, 9.83076, 25.3099, 0.45 ) }
    dend_61 { pt3dadd( 76.0729, 9.15289, 27.5155, 0.91 ) }
    dend_61 { pt3dadd( 76.9939, 8.79714, 28.5686, 0.23 ) }
    dend_61 { pt3dadd( 78.4353, 8.23552, 30.2326, 1.14 ) }
    dend_61 { pt3dadd( 79.2351, 7.9561, 31.1086, 1.59 ) }
    dend_61 { pt3dadd( 80.9039, 7.3713, 32.9408, 1.59 ) }
    dend_61 { pt3dadd( 84.5622, 6.27995, 36.3692, 0.23 ) }
    dend_61 { pt3dadd( 86.0002, 5.91468, 37.5103, 2.05 ) }
    dend_61 { pt3dadd( 88.1034, 5.44515, 39.034, 0.23 ) }
    dend_61 { pt3dadd( 89.9429, 5.10123, 40.2079, 0.23 ) }
    dend_61 { pt3dadd( 93.003, 4.60368, 41.9933, 2.05 ) }
    dend_61 { pt3dadd( 96.3559, 4.17458, 43.6867, 0.68 ) }
    dend_61 { pt3dadd( 99.8169, 3.79317, 45.2462, 0.23 ) }
    dend_61 { pt3dadd( 102.362, 3.49712, 46.3872, 1.14 ) }
    dend_61 { pt3dadd( 103.447, 3.33301, 46.83, 1.14 ) }
    dend_61 { pt3dadd( 106.678, 2.74846, 48.1901, 0.23 ) }
    dend_61 { pt3dadd( 107.583, 2.58, 48.549, 0.23 ) }
    dend_61 { pt3dadd( 109.969, 2.03931, 49.4853, 0.68 ) }
    dend_61 { pt3dadd( 111.174, 1.71241, 49.9215, 1.82 ) }
    dend_61 { pt3dadd( 113.114, 1.10016, 50.5534, 1.82 ) }
    dend_61 { pt3dadd( 115.146, 0.422603, 51.1671, 0.23 ) }
    dend_61 { pt3dadd( 116.885, -0.245169, 51.5698, 1.14 ) }
    dend_61 { pt3dadd( 119.078, -1.2006, 51.9434, 0.23 ) }
    dend_61 { pt3dadd( 120.851, -2.21298, 52.2198, 1.14 ) }
    dend_61 { pt3dadd( 121.768, -2.8176, 52.3553, 0.23 ) }
    dend_61 { pt3dadd( 122.667, -3.45102, 52.4641, 2.27 ) }
    dend_61 { pt3dadd( 124.755, -5.02929, 52.6097, 0.23 ) }
    dend_61 { pt3dadd( 126.347, -6.26628, 52.665, 1.36 ) }
    dend_61 { pt3dadd( 131.316, -10.1632, 52.7917, 0.23 ) }
    dend_61 { pt3dadd( 133.634, -11.9406, 52.7982, 0.23 ) }
    dend_61 { pt3dadd( 135.277, -13.1968, 52.8293, 1.82 ) }
    dend_61 { pt3dadd( 137.46, -14.8577, 52.8798, 1.82 ) }
    dend_61 { pt3dadd( 140.534, -17.1596, 52.9657, 0.23 ) }
    dend_61 { pt3dadd( 143.086, -19.0916, 53.1062, 2.73 ) }
    dend_61 { pt3dadd( 144.992, -20.5133, 53.2173, 2.73 ) }
    dend_61 { pt3dadd( 148.218, -22.9932, 53.5259, 0.23 ) }
    dend_61 { pt3dadd( 149.699, -24.1303, 53.7513, 0.23 ) }
    dend_61 { pt3dadd( 151.227, -25.2617, 54.0339, 1.36 ) }
    dend_61 { pt3dadd( 154.301, -27.4845, 54.5914, 0.23 ) }
    dend_61 { pt3dadd( 156.271, -28.8371, 54.9266, 1.59 ) }
    dend_61 { pt3dadd( 158.621, -30.3035, 55.3185, 0.23 ) }
    dend_61 { pt3dadd( 161.638, -31.949, 55.7211, 1.36 ) }
    dend_61 { pt3dadd( 164.315, -33.21, 56.0403, 0.23 ) }
    dend_61 { pt3dadd( 167.601, -34.5112, 56.3333, 0.23 ) }
    dend_61 { pt3dadd( 168.929, -34.9815, 56.4542, 2.05 ) }
    dend_61 { pt3dadd( 171.179, -35.7115, 56.7192, 1.59 ) }
    dend_61 { pt3dadd( 174.092, -36.568, 57.09, 0.23 ) }
    dend_61 { pt3dadd( 177.701, -37.607, 57.507, 0.68 ) }
    dend_61 { pt3dadd( 179.961, -38.2159, 57.8291, 1.36 ) }
    dend_61 { pt3dadd( 183.768, -39.1763, 58.4506, 0.23 ) }
    dend_61 { pt3dadd( 185.149, -39.5632, 58.6704, 1.59 ) }
    dend_61 { pt3dadd( 186.578, -40.0301, 58.9395, 0.91 ) }
    dend_61 { pt3dadd( 188.444, -40.6932, 59.37, 1.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 39.8734, 7.7975, 9.8008, 0.23 ) }
    dend_55 { pt3dadd( 41.5554, 6.22737, 11.1669, 0.23 ) }
    dend_55 { pt3dadd( 43.5865, 4.03287, 12.6855, 0.68 ) }
    dend_55 { pt3dadd( 44.7688, 2.67417, 13.5031, 0.68 ) }
    dend_55 { pt3dadd( 46.0691, 1.11209, 14.3962, 1.59 ) }
    dend_55 { pt3dadd( 47.0219, -0.0535799, 15.0566, 1.59 ) }
    dend_55 { pt3dadd( 48.3808, -1.79317, 16.1136, 0.68 ) }
    dend_55 { pt3dadd( 49.1159, -2.92264, 16.8199, 0.23 ) }
    dend_55 { pt3dadd( 49.4809, -3.53765, 17.1843, 0.91 ) }
    dend_55 { pt3dadd( 50.6839, -5.66415, 18.4495, 1.59 ) }
    dend_55 { pt3dadd( 51.653, -7.48042, 19.5903, 1.36 ) }
    dend_55 { pt3dadd( 52.5013, -9.1784, 20.7009, 0.23 ) }
    dend_55 { pt3dadd( 53.1394, -10.5736, 21.6034, 1.82 ) }
    dend_55 { pt3dadd( 53.799, -12.2321, 22.6452, 2.27 ) }
    dend_55 { pt3dadd( 54.4605, -14.3795, 23.882, 1.14 ) }
    dend_55 { pt3dadd( 54.9336, -16.6227, 24.9819, 0.23 ) }
    dend_55 { pt3dadd( 55.1709, -18.1294, 25.5919, 1.14 ) }
    dend_55 { pt3dadd( 55.347, -19.5739, 26.0658, 1.59 ) }
    dend_55 { pt3dadd( 55.5152, -21.6223, 26.6646, 0.45 ) }
    dend_55 { pt3dadd( 55.6077, -23.2924, 27.1965, 0.45 ) }
    dend_55 { pt3dadd( 55.7231, -24.7487, 27.6672, 0.91 ) }
    dend_55 { pt3dadd( 55.9038, -26.6899, 28.2946, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_55 { pt3dadd( 56.1645, -28.6578, 28.9679, 0.91 ) }
    dend_55 { pt3dadd( 56.466, -30.4116, 29.5494, 1.82 ) }
    dend_55 { pt3dadd( 56.8129, -31.976, 29.9963, 0.91 ) }
    dend_55 { pt3dadd( 57.3096, -33.7959, 30.4847, 0.23 ) }
    dend_55 { pt3dadd( 57.8471, -35.5349, 30.9053, 2.05 ) }
    dend_55 { pt3dadd( 58.384, -37.0535, 31.2128, 2.05 ) }
    dend_55 { pt3dadd( 59.2632, -39.1473, 31.5215, 0.68 ) }
    dend_55 { pt3dadd( 59.8743, -40.501, 31.6441, 1.82 ) }
    dend_55 { pt3dadd( 60.4383, -41.7067, 31.6905, 1.82 ) }
    dend_55 { pt3dadd( 61.2126, -43.2889, 31.7165, 1.82 ) }
    dend_55 { pt3dadd( 62.0238, -44.8405, 31.7935, 0.23 ) }
    dend_55 { pt3dadd( 62.6122, -45.9947, 31.9294, 0.23 ) }
    dend_55 { pt3dadd( 63.2869, -47.4485, 32.2902, 1.14 ) }
    dend_55 { pt3dadd( 63.5955, -48.2204, 32.5482, 1.14 ) }
    dend_55 { pt3dadd( 64.0459, -49.5798, 33.1141, 0.23 ) }
    dend_55 { pt3dadd( 64.6441, -51.7718, 34.1389, 1.82 ) }
    dend_55 { pt3dadd( 65.1265, -53.8135, 35.1491, 0.68 ) }
    dend_55 { pt3dadd( 65.6918, -56.4945, 36.4736, 0.68 ) }
    dend_55 { pt3dadd( 65.9887, -58.014, 37.2419, 0.68 ) }
    dend_55 { pt3dadd( 66.3686, -60.1136, 38.2608, 0.68 ) }
    dend_55 { pt3dadd( 66.529, -60.8813, 38.6276, 1.82 ) }
    dend_55 { pt3dadd( 66.738, -61.867, 39.0586, 1.82 ) }
    dend_55 { pt3dadd( 67.1946, -63.6983, 39.8386, 0.45 ) }
    dend_55 { pt3dadd( 67.702, -65.5122, 40.4863, 0.45 ) }
    dend_55 { pt3dadd( 68.2977, -67.3794, 41.1222, 1.59 ) }
    dend_55 { pt3dadd( 69.0264, -69.6084, 41.7757, 0.23 ) }
    dend_55 { pt3dadd( 69.25, -70.3093, 41.9912, 0.23 ) }
    dend_55 { pt3dadd( 69.7189, -71.8017, 42.4491, 1.36 ) }
    dend_55 { pt3dadd( 70.4982, -74.2055, 43.141, 0.45 ) }
    dend_55 { pt3dadd( 71.2748, -76.6128, 43.7803, 0.45 ) }
    dend_55 { pt3dadd( 72.0828, -79.2127, 44.4547, 2.73 ) }
    dend_55 { pt3dadd( 72.9565, -82.3803, 45.2212, 0.23 ) }
    dend_55 { pt3dadd( 73.2794, -83.5811, 45.5286, 0.23 ) }
    dend_55 { pt3dadd( 73.8673, -86.0185, 46.2032, 2.27 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 34/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 39.8734, 7.7975, 9.8008, 1.14 ) }
    dend_50 { pt3dadd( 42.3028, 9.6924, 11.7942, 1.14 ) }
    dend_50 { pt3dadd( 44.4577, 11.1924, 13.5258, 1.14 ) }
    dend_50 { pt3dadd( 46.9591, 12.6679, 15.4212, 0.68 ) }
    dend_50 { pt3dadd( 50.0479, 14.1723, 17.7359, 0.91 ) }
    dend_50 { pt3dadd( 52.9303, 15.1577, 19.9487, 0.45 ) }
    dend_50 { pt3dadd( 54.6208, 15.5933, 21.2255, 0.91 ) }
    dend_50 { pt3dadd( 56.739, 15.7775, 22.7998, 0.68 ) }
    dend_50 { pt3dadd( 58.5732, 15.6257, 24.1913, 0.68 ) }
    dend_50 { pt3dadd( 60.3451, 15.1821, 25.6077, 0.68 ) }
    dend_50 { pt3dadd( 63.5601, 13.7762, 28.5929, 0.68 ) }
    dend_50 { pt3dadd( 64.503, 13.2525, 29.6107, 1.59 ) }
    dend_50 { pt3dadd( 65.2422, 12.775, 30.5763, 1.59 ) }
    dend_50 { pt3dadd( 66.7508, 11.7531, 32.8496, 0.91 ) }
    dend_50 { pt3dadd( 68.5089, 10.5407, 35.7269, 1.36 ) }
    dend_50 { pt3dadd( 71.1152, 8.72006, 40.2679, 1.82 ) }
    dend_50 { pt3dadd( 73.1792, 7.15796, 44.2599, 0.91 ) }
    dend_50 { pt3dadd( 74.2232, 6.28311, 46.4681, 0.91 ) }
    dend_50 { pt3dadd( 75.4597, 5.18037, 49.2776, 1.59 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 53/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -66.7372, 71.6706, -15.9707, 0.23 ) }
    dend_44 { pt3dadd( -68.322, 73.4427, -15.8815, 0.23 ) }
    dend_44 { pt3dadd( -69.5341, 74.7961, -15.7805, 0.23 ) }
    dend_44 { pt3dadd( -70.1481, 75.4723, -15.7305, 1.59 ) }
    dend_44 { pt3dadd( -70.7509, 76.1586, -15.6946, 2.5 ) }
    dend_44 { pt3dadd( -71.9506, 77.5843, -15.6302, 2.5 ) }
    dend_44 { pt3dadd( -73.2998, 79.2818, -15.544, 0.23 ) }
    dend_44 { pt3dadd( -73.7979, 79.9786, -15.5275, 0.23 ) }
    dend_44 { pt3dadd( -74.376, 80.8369, -15.5052, 0.23 ) }
    dend_44 { pt3dadd( -75.1092, 81.9645, -15.4579, 1.59 ) }
    dend_44 { pt3dadd( -76.1682, 83.6086, -15.3888, 1.14 ) }
    dend_44 { pt3dadd( -77.1528, 85.1459, -15.372, 0.23 ) }
    dend_44 { pt3dadd( -77.8945, 86.3413, -15.4245, 1.59 ) }
    dend_44 { pt3dadd( -78.5513, 87.4477, -15.5018, 2.27 ) }
    dend_44 { pt3dadd( -79.3937, 88.8454, -15.6428, 0.23 ) }
    dend_44 { pt3dadd( -80.0538, 89.9444, -15.7734, 1.14 ) }
    dend_44 { pt3dadd( -80.6107, 90.896, -15.8896, 0.23 ) }
    dend_44 { pt3dadd( -81.1171, 91.8128, -15.978, 0.91 ) }
    dend_44 { pt3dadd( -82.0692, 93.5885, -16.0754, 0.23 ) }
    dend_44 { pt3dadd( -82.9258, 95.1852, -16.1252, 2.95 ) }
    dend_44 { pt3dadd( -84.3863, 97.9491, -16.1324, 0.23 ) }
    dend_44 { pt3dadd( -85.1779, 99.4405, -16.0778, 1.82 ) }
    dend_44 { pt3dadd( -86.2055, 101.36, -15.9303, 0.23 ) }
    dend_44 { pt3dadd( -86.8442, 102.488, -15.8207, 0.23 ) }
    dend_44 { pt3dadd( -87.5174, 103.618, -15.6938, 0.91 ) }
    dend_44 { pt3dadd( -88.2097, 104.73, -15.5922, 1.14 ) }
    dend_44 { pt3dadd( -88.9433, 105.8, -15.5553, 0.23 ) }
    dend_44 { pt3dadd( -89.7757, 106.948, -15.575, 1.36 ) }
    dend_44 { pt3dadd( -90.7927, 108.314, -15.6592, 0.68 ) }
    dend_44 { pt3dadd( -92.3104, 110.389, -15.8467, 0.68 ) }
    dend_44 { pt3dadd( -93.4194, 111.96, -16.0256, 2.05 ) }
    dend_44 { pt3dadd( -94.7585, 113.866, -16.2967, 0.23 ) }
    dend_44 { pt3dadd( -95.9386, 115.613, -16.5565, 1.82 ) }
    dend_44 { pt3dadd( -96.8847, 117.075, -16.7947, 0.23 ) }
    dend_44 { pt3dadd( -97.2386, 117.672, -16.897, 1.14 ) }
    dend_44 { pt3dadd( -98.0409, 119.182, -17.1746, 0.23 ) }
    dend_44 { pt3dadd( -98.4836, 120.13, -17.3178, 1.14 ) }
    dend_44 { pt3dadd( -98.843, 121.079, -17.4341, 1.14 ) }
    dend_44 { pt3dadd( -99.089, 121.885, -17.5257, 0.23 ) }
    dend_44 { pt3dadd( -99.3374, 122.807, -17.6092, 1.14 ) }
    dend_44 { pt3dadd( -99.737, 124.351, -17.8178, 0.23 ) }
    dend_44 { pt3dadd( -100.127, 125.923, -18.1028, 2.05 ) }
    dend_44 { pt3dadd( -100.36, 126.926, -18.3338, 0.23 ) }
    dend_44 { pt3dadd( -100.838, 128.923, -18.8739, 0.23 ) }
    dend_44 { pt3dadd( -101.055, 129.794, -19.1343, 1.14 ) }
    dend_44 { pt3dadd( -101.565, 131.64, -19.8278, 0.23 ) }
    dend_44 { pt3dadd( -102.007, 133.171, -20.4888, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_44 { pt3dadd( -102.552, 135.033, -21.3542, 0.23 ) }
    dend_44 { pt3dadd( -102.788, 135.814, -21.7199, 3.18 ) }
    dend_44 { pt3dadd( -103.127, 136.94, -22.2417, 3.18 ) }
    dend_44 { pt3dadd( -104.382, 141.07, -24.1819, 1.14 ) }
    dend_44 { pt3dadd( -104.711, 142.156, -24.6708, 1.82 ) }
    dend_44 { pt3dadd( -105.169, 143.729, -25.3661, 0.23 ) }
    dend_44 { pt3dadd( -105.38, 144.52, -25.7011, 0.68 ) }
    dend_44 { pt3dadd( -105.511, 145.085, -25.9207, 0.23 ) }
    dend_44 { pt3dadd( -105.883, 146.904, -26.5439, 0.68 ) }
    dend_44 { pt3dadd( -106.059, 147.935, -26.8206, 0.23 ) }
    dend_44 { pt3dadd( -106.285, 149.461, -27.2104, 2.27 ) }
    dend_44 { pt3dadd( -106.459, 150.862, -27.5415, 2.5 ) }
    dend_44 { pt3dadd( -106.673, 152.532, -27.91, 0.23 ) }
    dend_44 { pt3dadd( -106.787, 153.352, -28.0296, 0.45 ) }
    dend_44 { pt3dadd( -106.916, 154.482, -28.1286, 0.23 ) }
    dend_44 { pt3dadd( -107.047, 155.613, -28.2174, 0.23 ) }
    dend_44 { pt3dadd( -107.186, 156.628, -28.3012, 0.23 ) }
    dend_44 { pt3dadd( -107.436, 158.448, -28.3995, 1.59 ) }
    dend_44 { pt3dadd( -107.827, 161.193, -28.4552, 0.23 ) }
    dend_44 { pt3dadd( -107.994, 162.232, -28.4581, 0.23 ) }
    dend_44 { pt3dadd( -108.16, 163.111, -28.4587, 0.45 ) }
    dend_44 { pt3dadd( -108.485, 164.47, -28.4666, 0.23 ) }
    dend_44 { pt3dadd( -108.562, 164.778, -28.4742, 0.91 ) }
    dend_44 { pt3dadd( -108.944, 166.259, -28.5612, 0.23 ) }
    dend_44 { pt3dadd( -109.151, 167.018, -28.6519, 0.23 ) }
    dend_44 { pt3dadd( -109.574, 168.54, -28.8036, 2.73 ) }
    dend_44 { pt3dadd( -110.018, 170.367, -28.9744, 0.23 ) }
    dend_44 { pt3dadd( -110.146, 170.97, -29.0443, 0.23 ) }
    dend_44 { pt3dadd( -110.362, 172.171, -29.2213, 0.23 ) }
    dend_44 { pt3dadd( -110.484, 172.972, -29.3612, 0.91 ) }
    dend_44 { pt3dadd( -110.668, 174.486, -29.6526, 0.23 ) }
    dend_44 { pt3dadd( -110.784, 175.487, -29.8651, 1.14 ) }
    dend_44 { pt3dadd( -110.989, 177.101, -30.2494, 0.23 ) }
    dend_44 { pt3dadd( -111.162, 178.292, -30.5145, 1.82 ) }
    dend_44 { pt3dadd( -111.261, 178.915, -30.6486, 1.82 ) }
    dend_44 { pt3dadd( -111.612, 181.107, -31.1197, 0.23 ) }
    dend_44 { pt3dadd( -111.794, 182.276, -31.4241, 1.14 ) }
    dend_44 { pt3dadd( -112.1, 184.099, -31.9288, 0.23 ) }
    dend_44 { pt3dadd( -112.321, 185.333, -32.2822, 2.05 ) }
    dend_44 { pt3dadd( -112.479, 186.113, -32.5451, 2.73 ) }
    dend_44 { pt3dadd( -112.764, 187.456, -33.018, 0.23 ) }
    dend_44 { pt3dadd( -113.245, 189.491, -33.7728, 1.14 ) }
    dend_44 { pt3dadd( -113.726, 191.494, -34.6052, 0.23 ) }
    dend_44 { pt3dadd( -113.923, 192.348, -34.9928, 0.68 ) }
    dend_44 { pt3dadd( -114.201, 193.565, -35.5718, 0.23 ) }
    dend_44 { pt3dadd( -114.479, 194.858, -36.1949, 2.27 ) }
    dend_44 { pt3dadd( -114.679, 195.811, -36.6669, 2.27 ) }
    dend_44 { pt3dadd( -115.084, 198.063, -37.7684, 0.23 ) }
    dend_44 { pt3dadd( -115.203, 199.075, -38.2822, 0.91 ) }
    dend_44 { pt3dadd( -115.278, 200.491, -38.988, 0.23 ) }
    dend_44 { pt3dadd( -115.257, 201.568, -39.5043, 1.36 ) }
    dend_44 { pt3dadd( -115.096, 203.641, -40.5775, 0.45 ) }
    dend_44 { pt3dadd( -115.041, 204.105, -40.8218, 0.45 ) }
    dend_44 { pt3dadd( -114.798, 205.427, -41.5383, 1.59 ) }
    dend_44 { pt3dadd( -114.476, 206.844, -42.3902, 0.91 ) }
    dend_44 { pt3dadd( -114.224, 207.834, -43.057, 0.23 ) }
    dend_44 { pt3dadd( -113.908, 209.143, -43.9571, 0.23 ) }
    dend_44 { pt3dadd( -113.552, 211.073, -45.3731, 2.05 ) }
    dend_44 { pt3dadd( -113.432, 212.12, -46.2055, 0.23 ) }
    dend_44 { pt3dadd( -113.367, 213.043, -46.9812, 1.14 ) }
    dend_44 { pt3dadd( -113.347, 214.532, -48.2488, 1.14 ) }
    dend_44 { pt3dadd( -113.486, 216.556, -50.0053, 0.23 ) }
    dend_44 { pt3dadd( -113.75, 218.545, -51.6922, 1.82 ) }
    dend_44 { pt3dadd( -114.099, 220.249, -53.1093, 0.45 ) }
    dend_44 { pt3dadd( -114.255, 220.782, -53.5405, 1.36 ) }
    dend_44 { pt3dadd( -114.64, 221.782, -54.3112, 1.36 ) }
    dend_44 { pt3dadd( -115.353, 223.277, -55.3909, 0.23 ) }
    dend_44 { pt3dadd( -115.852, 224.066, -55.9555, 1.14 ) }
    dend_44 { pt3dadd( -116.293, 224.706, -56.345, 1.14 ) }
    dend_44 { pt3dadd( -116.916, 225.558, -56.8609, 0.68 ) }
    dend_44 { pt3dadd( -118.05, 227.175, -57.9048, 0.23 ) }
    dend_44 { pt3dadd( -118.967, 228.531, -58.7713, 1.82 ) }
    dend_44 { pt3dadd( -120.15, 230.383, -59.8926, 0.23 ) }
    dend_44 { pt3dadd( -120.771, 231.355, -60.4966, 0.91 ) }
    dend_44 { pt3dadd( -121.651, 232.803, -61.3952, 0.23 ) }
    dend_44 { pt3dadd( -122.208, 233.814, -62.0427, 1.82 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 76/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -66.7372, 71.6706, -15.9707, 0.23 ) }
    dend_43 { pt3dadd( -67.0495, 72.7416, -16.7626, 0.23 ) }
    dend_43 { pt3dadd( -67.3411, 73.4881, -17.2939, 0.68 ) }
    dend_43 { pt3dadd( -67.8034, 74.6148, -18.0337, 0.23 ) }
    dend_43 { pt3dadd( -68.2078, 75.4882, -18.5676, 0.23 ) }
    dend_43 { pt3dadd( -68.9571, 77.0433, -19.4839, 0.68 ) }
    dend_43 { pt3dadd( -69.79, 78.7388, -20.4347, 0.23 ) }
    dend_43 { pt3dadd( -70.1705, 79.4542, -20.7898, 0.68 ) }
    dend_43 { pt3dadd( -71.815, 82.4371, -22.2031, 0.23 ) }
    dend_43 { pt3dadd( -72.4972, 83.6556, -22.7461, 2.05 ) }
    dend_43 { pt3dadd( -72.829, 84.2673, -22.9975, 2.73 ) }
    dend_43 { pt3dadd( -74.4226, 87.3726, -24.0763, 0.23 ) }
    dend_43 { pt3dadd( -75.2702, 89.0554, -24.6317, 0.23 ) }
    // Section: dend_39, id: dend_39, parent: dend_25 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 2.09513, 55.7566, -21.4338, 0.23 ) }
    dend_39 { pt3dadd( 5.22237, 60.5738, -22.6536, 0.23 ) }
    dend_39 { pt3dadd( 9.45683, 64.5995, -23.4693, 0.23 ) }
    dend_39 { pt3dadd( 14.1396, 68.203, -23.6752, 0.23 ) }
    dend_39 { pt3dadd( 18.6811, 71.9392, -23.1214, 0.23 ) }
    dend_39 { pt3dadd( 23.3308, 75.5317, -22.4736, 0.23 ) }
    dend_39 { pt3dadd( 28.1055, 78.948, -21.737, 0.23 ) }
    dend_39 { pt3dadd( 32.0497, 83.1276, -20.443, 0.23 ) }
    dend_39 { pt3dadd( 35.6848, 87.1692, -18.161, 0.23 ) }
    dend_39 { pt3dadd( 39.9432, 90.4215, -15.6411, 0.23 ) }
    dend_39 { pt3dadd( 43.3, 94.8516, -13.7189, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_39 { pt3dadd( 46.8357, 99.3246, -12.2827, 0.23 ) }
    dend_39 { pt3dadd( 50.1356, 104.145, -11.7366, 0.23 ) }
    dend_39 { pt3dadd( 53.2968, 109.063, -12.2112, 0.23 ) }
    dend_39 { pt3dadd( 56.5993, 113.895, -11.8113, 0.23 ) }
    dend_39 { pt3dadd( 60.1441, 118.465, -10.7711, 0.23 ) }
    dend_39 { pt3dadd( 64.6468, 122.123, -9.64882, 0.23 ) }
    dend_39 { pt3dadd( 69.1122, 125.966, -9.26847, 0.23 ) }
    dend_39 { pt3dadd( 74.2028, 128.946, -9.8939, 0.23 ) }
    dend_39 { pt3dadd( 79.426, 131.751, -10.1842, 0.23 ) }
    dend_39 { pt3dadd( 84.1948, 135.25, -10.0886, 0.23 ) }
    dend_39 { pt3dadd( 88.9216, 138.794, -10.3646, 0.23 ) }
    dend_39 { pt3dadd( 93.8264, 142.111, -10.3963, 0.23 ) }
    dend_39 { pt3dadd( 99.1139, 144.742, -9.76521, 0.23 ) }
    dend_39 { pt3dadd( 104.397, 147.447, -9.58189, 0.23 ) }
    dend_39 { pt3dadd( 109.391, 150.634, -9.69207, 0.23 ) }
    dend_39 { pt3dadd( 114.569, 153.519, -9.95802, 0.23 ) }
    dend_39 { pt3dadd( 120.157, 155.347, -10.9282, 0.23 ) }
    dend_39 { pt3dadd( 126.05, 156.312, -11.0143, 0.23 ) }
    dend_39 { pt3dadd( 131.913, 157.417, -10.793, 0.23 ) }
    dend_39 { pt3dadd( 137.318, 159.61, -9.6235, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 20/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.09513, 55.7566, -21.4338, 0.68 ) }
    dend_26 { pt3dadd( 5.79696, 62.2201, -22.0746, 0.23 ) }
    dend_26 { pt3dadd( 10.4393, 68.1128, -22.193, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -94.0871, -19.2051, -33.0518, 0.23 ) }
    dend_23 { pt3dadd( -98.3704, -17.0141, -36.102, 0.23 ) }
    dend_23 { pt3dadd( -103.19, -14.8154, -38.2112, 0.23 ) }
    dend_23 { pt3dadd( -108.311, -12.7994, -39.7236, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -94.0871, -19.2051, -33.0518, 0.68 ) }
    dend_22 { pt3dadd( -102.973, -25.5886, -35.3661, 0.23 ) }
    dend_22 { pt3dadd( -112.641, -30.7172, -37.8278, 0.23 ) }
    dend_22 { pt3dadd( -121.443, -36.9108, -40.8865, 0.23 ) }
    dend_22 { pt3dadd( -129.55, -43.0802, -45.5181, 0.23 ) }
    dend_22 { pt3dadd( -138.284, -49.073, -49.1436, 0.23 ) }
    dend_22 { pt3dadd( -146.621, -55.5228, -52.8771, 0.23 ) }
    dend_22 { pt3dadd( -155.976, -60.7906, -56.114, 0.23 ) }
    dend_22 { pt3dadd( -164.759, -66.9452, -59.309, 0.23 ) }
    dend_22 { pt3dadd( -173.685, -71.4453, -64.4308, 0.23 ) }
    dend_22 { pt3dadd( -183.13, -74.1854, -69.9172, 0.23 ) }
    dend_22 { pt3dadd( -193.098, -76.8464, -74.4302, 0.23 ) }
    dend_22 { pt3dadd( -201.157, -81.1609, -80.964, 0.23 ) }
    dend_22 { pt3dadd( -207.701, -84.0766, -89.6498, 0.23 ) }
    dend_22 { pt3dadd( -215.439, -88.163, -96.7045, 0.23 ) }
    dend_22 { pt3dadd( -223.806, -91.8713, -103.242, 0.23 ) }
    dend_22 { pt3dadd( -232.409, -94.3456, -110.08, 0.23 ) }
    dend_22 { pt3dadd( -239.574, -96.1476, -118.592, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_2 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -34.2641, -15.6076, -6.95526, 1.36 ) }
    dend_18 { pt3dadd( -37.024, -17.2346, -9.73017, 1.36 ) }
    dend_18 { pt3dadd( -39.2687, -18.6445, -12.0004, 0.23 ) }
    dend_18 { pt3dadd( -40.4398, -19.472, -13.1647, 1.14 ) }
    dend_18 { pt3dadd( -42.991, -21.3441, -15.6118, 0.23 ) }
    dend_18 { pt3dadd( -44.8266, -22.6914, -17.2562, 1.14 ) }
    dend_18 { pt3dadd( -45.8314, -23.4375, -18.1064, 1.14 ) }
    dend_18 { pt3dadd( -46.5254, -24.0018, -18.593, 1.14 ) }
    dend_18 { pt3dadd( -48.0402, -25.4067, -19.5333, 0.23 ) }
    dend_18 { pt3dadd( -48.6967, -26.019, -19.8573, 1.14 ) }
    dend_18 { pt3dadd( -50.0049, -27.1402, -20.2665, 1.14 ) }
    dend_18 { pt3dadd( -50.9502, -27.9108, -20.4723, 0.23 ) }
    dend_18 { pt3dadd( -52.4933, -29.1139, -20.7403, 0.91 ) }
    dend_18 { pt3dadd( -54.9191, -30.9821, -21.205, 1.59 ) }
    dend_18 { pt3dadd( -56.552, -32.2781, -21.5342, 1.59 ) }
    dend_18 { pt3dadd( -57.4578, -33.0335, -21.7241, 0.23 ) }
    dend_18 { pt3dadd( -58.7843, -34.1681, -22.0188, 1.36 ) }
    dend_18 { pt3dadd( -60.3382, -35.4727, -22.3687, 0.45 ) }
    dend_18 { pt3dadd( -61.6721, -36.5824, -22.6942, 0.45 ) }
    dend_18 { pt3dadd( -63.0042, -37.7428, -22.8588, 1.59 ) }
    dend_18 { pt3dadd( -63.6635, -38.4193, -22.9685, 2.05 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 66/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -34.2641, -15.6076, -6.95526, 3.18 ) }
    dend_3 { pt3dadd( -36.4312, -17.7646, -7.71767, 3.18 ) }
    dend_3 { pt3dadd( -39.683, -21.1792, -8.78818, 2.73 ) }
    dend_3 { pt3dadd( -41.9277, -23.5363, -9.52716, 2.5 ) }
    dend_3 { pt3dadd( -44.1081, -25.8258, -10.245, 2.5 ) }
    dend_3 { pt3dadd( -45.5796, -27.3709, -10.7294, 2.5 ) }
    dend_3 { pt3dadd( -47.2204, -29.0939, -11.2695, 3.41 ) }
    dend_3 { pt3dadd( -49.1741, -31.1733, -11.988, 3.86 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 74/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 162.589, -82.8814, -8.93533, 0.23 ) }
    dend_109 { pt3dadd( 170.674, -91.8496, -9.36153, 0.23 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 76/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 162.589, -82.8814, -8.93533, 0.68 ) }
    dend_108 { pt3dadd( 169.659, -90.0788, -10.2838, 0.23 ) }
    dend_108 { pt3dadd( 176.655, -97.2914, -11.9382, 0.23 ) }
    dend_108 { pt3dadd( 183.491, -104.796, -12.0383, 0.23 ) }
    // Section: dend_96, id: dend_96, parent: dend_86 (entry count 80/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 94.615, 23.1498, -0.107394, 1.14 ) }
    dend_96 { pt3dadd( 96.7104, 23.6557, 0.322048, 1.14 ) }
    dend_96 { pt3dadd( 99.4005, 24.3925, 0.625503, 0.68 ) }
    dend_96 { pt3dadd( 102.575, 25.3474, 0.791955, 0.68 ) }
    dend_96 { pt3dadd( 105.099, 26.1231, 0.838187, 0.68 ) }
    dend_96 { pt3dadd( 107.307, 26.8149, 0.829408, 0.68 ) }
    dend_96 { pt3dadd( 109.212, 27.4912, 0.798705, 1.36 ) }
    dend_96 { pt3dadd( 111.93, 28.6039, 0.680193, 2.27 ) }
    dend_96 { pt3dadd( 113.884, 29.4377, 0.563628, 1.36 ) }
    dend_96 { pt3dadd( 114.779, 29.7857, 0.478831, 2.27 ) }
    dend_96 { pt3dadd( 116.22, 30.3725, 0.299464, 2.05 ) }
    dend_96 { pt3dadd( 118.616, 31.3386, -0.00165826, 1.59 ) }
    dend_96 { pt3dadd( 121.092, 32.3116, -0.179442, 0.91 ) }
    dend_96 { pt3dadd( 123.274, 33.1004, -0.12464, 0.91 ) }
    dend_96 { pt3dadd( 125.756, 33.9631, -0.0467085, 1.36 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 95/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 94.615, 23.1498, -0.107394, 0.45 ) }
    dend_87 { pt3dadd( 95.718, 23.6874, 1.1726, 0.45 ) }
    dend_87 { pt3dadd( 97.5669, 24.6078, 3.14057, 0.45 ) }
    dend_87 { pt3dadd( 99.06, 25.3511, 4.72977, 1.36 ) }
    dend_87 { pt3dadd( 100.734, 26.1843, 6.51117, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_87 { pt3dadd( 102.345, 26.9865, 8.22622, 0.91 ) }
    dend_87 { pt3dadd( 103.395, 27.509, 9.3432, 0.23 ) }
    dend_87 { pt3dadd( 104.008, 27.8549, 9.98251, 2.05 ) }
    // Section: dend_84, id: dend_84, parent: dend_76 (entry count 3/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 69.414, -83.6805, 36.4333, 0.23 ) }
    dend_84 { pt3dadd( 67.3471, -85.5052, 37.2692, 0.23 ) }
    dend_84 { pt3dadd( 66.5993, -86.1092, 37.688, 0.23 ) }
    dend_84 { pt3dadd( 66.0518, -86.4929, 38.0242, 1.36 ) }
    dend_84 { pt3dadd( 65.4898, -86.856, 38.3667, 1.36 ) }
    dend_84 { pt3dadd( 63.7414, -87.832, 39.2962, 0.23 ) }
    dend_84 { pt3dadd( 62.7535, -88.3441, 39.7839, 0.91 ) }
    dend_84 { pt3dadd( 60.5094, -89.3801, 40.838, 0.23 ) }
    dend_84 { pt3dadd( 58.5171, -90.205, 41.7065, 1.14 ) }
    dend_84 { pt3dadd( 57.8123, -90.474, 41.9996, 1.14 ) }
    dend_84 { pt3dadd( 55.2398, -91.4066, 43.0499, 0.23 ) }
    dend_84 { pt3dadd( 54.1005, -91.8151, 43.4919, 1.36 ) }
    dend_84 { pt3dadd( 52.1248, -92.5946, 44.2538, 0.23 ) }
    dend_84 { pt3dadd( 49.6501, -93.6503, 45.1984, 1.14 ) }
    dend_84 { pt3dadd( 46.7313, -95.0052, 46.3736, 0.23 ) }
    dend_84 { pt3dadd( 45.0506, -95.8494, 47.0976, 1.36 ) }
    dend_84 { pt3dadd( 44.4389, -96.1801, 47.3787, 1.36 ) }
    dend_84 { pt3dadd( 41.9986, -97.5424, 48.5809, 0.23 ) }
    dend_84 { pt3dadd( 41.398, -97.9004, 48.8991, 1.14 ) }
    dend_84 { pt3dadd( 40.753, -98.3391, 49.2439, 1.14 ) }
    dend_84 { pt3dadd( 39.957, -98.9049, 49.6446, 0.23 ) }
    dend_84 { pt3dadd( 39.3667, -99.2966, 49.9404, 0.68 ) }
    dend_84 { pt3dadd( 37.7946, -100.156, 50.6927, 0.23 ) }
    dend_84 { pt3dadd( 36.9529, -100.597, 51.132, 0.91 ) }
    dend_84 { pt3dadd( 36.4722, -100.899, 51.4103, 0.23 ) }
    dend_84 { pt3dadd( 35.5065, -101.63, 52.0203, 0.91 ) }
    dend_84 { pt3dadd( 34.2875, -102.84, 52.873, 0.23 ) }
    dend_84 { pt3dadd( 33.3162, -104.066, 53.5827, 1.14 ) }
    dend_84 { pt3dadd( 32.3111, -105.634, 54.2715, 0.23 ) }
    dend_84 { pt3dadd( 31.6721, -106.845, 54.7426, 2.27 ) }
    dend_84 { pt3dadd( 31.4038, -107.468, 54.9479, 2.27 ) }
    dend_84 { pt3dadd( 30.4545, -110.007, 55.8126, 0.23 ) }
    dend_84 { pt3dadd( 30.0613, -111.125, 56.1822, 1.36 ) }
    dend_84 { pt3dadd( 29.1043, -113.971, 57.1269, 0.23 ) }
    dend_84 { pt3dadd( 28.6509, -115.258, 57.5957, 2.27 ) }
    dend_84 { pt3dadd( 27.7356, -117.796, 58.6728, 0.23 ) }
    dend_84 { pt3dadd( 27.0805, -119.583, 59.5133, 0.91 ) }
    dend_84 { pt3dadd( 26.6367, -120.866, 60.1915, 0.23 ) }
    dend_84 { pt3dadd( 26.2545, -122.079, 60.8812, 1.59 ) }
    dend_84 { pt3dadd( 25.6773, -124.425, 62.2703, 0.23 ) }
    dend_84 { pt3dadd( 25.3875, -125.894, 63.1177, 1.82 ) }
    dend_84 { pt3dadd( 25.1924, -127.297, 63.8867, 1.82 ) }
    dend_84 { pt3dadd( 25.0092, -129.177, 64.7757, 0.23 ) }
    dend_84 { pt3dadd( 24.912, -130.488, 65.3449, 1.14 ) }
    dend_84 { pt3dadd( 24.7481, -132.269, 66.0234, 0.23 ) }
    dend_84 { pt3dadd( 24.6728, -133.174, 66.2919, 1.14 ) }
    dend_84 { pt3dadd( 24.5839, -134.656, 66.7047, 0.23 ) }
    dend_84 { pt3dadd( 24.4487, -135.857, 67.0141, 1.14 ) }
    dend_84 { pt3dadd( 24.1188, -137.97, 67.5597, 0.23 ) }
    dend_84 { pt3dadd( 23.9546, -138.816, 67.7926, 1.14 ) }
    dend_84 { pt3dadd( 23.6171, -140.426, 68.2396, 0.23 ) }
    dend_84 { pt3dadd( 23.3739, -141.633, 68.5644, 0.23 ) }
    dend_84 { pt3dadd( 22.9357, -143.833, 69.1195, 1.14 ) }
    dend_84 { pt3dadd( 22.5816, -145.682, 69.573, 0.23 ) }
    dend_84 { pt3dadd( 22.3132, -147.051, 69.8925, 0.23 ) }
    dend_84 { pt3dadd( 21.8273, -149.556, 70.432, 0.91 ) }
    dend_84 { pt3dadd( 21.5142, -151.036, 70.7181, 0.23 ) }
    dend_84 { pt3dadd( 21.1189, -152.734, 70.9158, 0.91 ) }
    dend_84 { pt3dadd( 20.6936, -154.612, 71.0543, 0.23 ) }
    dend_84 { pt3dadd( 20.2558, -156.312, 71.0977, 1.59 ) }
    dend_84 { pt3dadd( 19.7333, -158.383, 71.1084, 0.45 ) }
    dend_84 { pt3dadd( 18.9971, -161.105, 71.106, 2.27 ) }
    dend_84 { pt3dadd( 18.1228, -164.211, 71.1381, 0.23 ) }
    dend_84 { pt3dadd( 17.6457, -165.816, 71.0774, 0.23 ) }
    dend_84 { pt3dadd( 17.3003, -166.774, 71.0092, 0.23 ) }
    dend_84 { pt3dadd( 16.461, -168.746, 70.8383, 1.14 ) }
    dend_84 { pt3dadd( 15.7042, -170.33, 70.6916, 0.23 ) }
    dend_84 { pt3dadd( 14.7708, -172.181, 70.537, 0.23 ) }
    dend_84 { pt3dadd( 12.8564, -175.824, 70.3252, 1.36 ) }
    dend_84 { pt3dadd( 11.2844, -178.689, 70.1362, 0.23 ) }
    dend_84 { pt3dadd( 10.1468, -180.596, 69.9971, 2.05 ) }
    dend_84 { pt3dadd( 8.25482, -183.576, 69.7444, 0.23 ) }
    dend_84 { pt3dadd( 7.72881, -184.389, 69.674, 0.45 ) }
    dend_84 { pt3dadd( 7.04909, -185.4, 69.6084, 0.45 ) }
    dend_84 { pt3dadd( 6.15209, -186.663, 69.6506, 0.23 ) }
    dend_84 { pt3dadd( 4.85711, -188.547, 69.6937, 0.91 ) }
    dend_84 { pt3dadd( 4.36602, -189.172, 69.7025, 0.23 ) }
    dend_84 { pt3dadd( 3.58075, -189.873, 69.7234, 1.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 81/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 69.414, -83.6805, 36.4333, 0.45 ) }
    dend_77 { pt3dadd( 70.0467, -85.5668, 37.5651, 0.45 ) }
    dend_77 { pt3dadd( 70.6601, -87.2066, 38.575, 0.45 ) }
    dend_77 { pt3dadd( 71.095, -88.4285, 39.3179, 0.45 ) }
    dend_77 { pt3dadd( 71.8645, -90.584, 40.5922, 0.45 ) }
    dend_77 { pt3dadd( 72.4377, -92.0591, 41.4309, 0.68 ) }
    dend_77 { pt3dadd( 73.053, -93.5028, 42.1864, 0.23 ) }
    dend_77 { pt3dadd( 73.4747, -94.3086, 42.6186, 0.91 ) }
    dend_77 { pt3dadd( 73.9929, -95.1525, 43.059, 0.23 ) }
    dend_77 { pt3dadd( 74.4875, -95.916, 43.3954, 1.36 ) }
    dend_77 { pt3dadd( 75.2208, -97.0645, 43.8057, 1.82 ) }
    dend_77 { pt3dadd( 76.5979, -99.2478, 44.4979, 0.45 ) }
    dend_77 { pt3dadd( 78.3641, -102.075, 45.3035, 1.82 ) }
    dend_77 { pt3dadd( 79.3954, -103.661, 45.7551, 0.23 ) }
    dend_77 { pt3dadd( 80.5979, -105.462, 46.2641, 0.68 ) }
    dend_77 { pt3dadd( 81.4577, -106.782, 46.6311, 0.91 ) }
    dend_77 { pt3dadd( 82.1916, -107.964, 46.9428, 1.59 ) }
    dend_77 { pt3dadd( 83.2515, -109.691, 47.3162, 2.73 ) }
    // Section: dend_75, id: dend_75, parent: dend_67 (entry count 99/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 82.5857, -49.85, 39.3075, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_75 { pt3dadd( 85.4264, -51.3159, 39.2181, 0.23 ) }
    dend_75 { pt3dadd( 87.0788, -51.9914, 39.1725, 0.91 ) }
    dend_75 { pt3dadd( 88.7983, -52.5754, 39.1451, 0.23 ) }
    dend_75 { pt3dadd( 89.908, -52.8961, 39.1491, 0.68 ) }
    dend_75 { pt3dadd( 91.9124, -53.4148, 39.2777, 0.23 ) }
    dend_75 { pt3dadd( 94.4172, -54.0004, 39.5353, 0.45 ) }
    dend_75 { pt3dadd( 95.6527, -54.1472, 39.746, 0.23 ) }
    dend_75 { pt3dadd( 96.8709, -54.1736, 39.9949, 1.14 ) }
    dend_75 { pt3dadd( 98.6812, -54.0953, 40.4588, 0.23 ) }
    dend_75 { pt3dadd( 100.839, -53.9064, 41.1015, 0.23 ) }
    dend_75 { pt3dadd( 101.998, -53.7408, 41.4921, 1.82 ) }
    dend_75 { pt3dadd( 104.35, -53.27, 42.2983, 0.68 ) }
    dend_75 { pt3dadd( 106.555, -52.7601, 42.8373, 1.14 ) }
    dend_75 { pt3dadd( 107.477, -52.5131, 42.98, 0.23 ) }
    dend_75 { pt3dadd( 108.485, -52.2076, 43.0379, 1.14 ) }
    dend_75 { pt3dadd( 110.848, -51.4263, 42.9322, 0.23 ) }
    dend_75 { pt3dadd( 113.119, -50.6517, 42.7108, 0.23 ) }
    dend_75 { pt3dadd( 116.085, -49.6468, 42.2928, 0.23 ) }
    dend_75 { pt3dadd( 118.144, -48.9708, 41.9537, 1.14 ) }
    dend_75 { pt3dadd( 120.572, -48.1379, 41.5873, 0.23 ) }
    dend_75 { pt3dadd( 122.263, -47.5346, 41.381, 1.14 ) }
    dend_75 { pt3dadd( 123.879, -46.966, 41.2651, 0.23 ) }
    dend_75 { pt3dadd( 125.082, -46.5705, 41.3223, 0.91 ) }
    dend_75 { pt3dadd( 126.713, -46.1054, 41.6592, 0.23 ) }
    dend_75 { pt3dadd( 128.279, -45.8578, 42.16, 0.91 ) }
    dend_75 { pt3dadd( 129.054, -45.8735, 42.5417, 0.23 ) }
    dend_75 { pt3dadd( 130.367, -46.0674, 43.3083, 2.27 ) }
    dend_75 { pt3dadd( 132.419, -46.5863, 44.52, 0.23 ) }
    dend_75 { pt3dadd( 133.106, -46.8109, 44.8524, 0.91 ) }
    dend_75 { pt3dadd( 135.036, -47.544, 45.5928, 0.23 ) }
    dend_75 { pt3dadd( 137.011, -48.3861, 46.1661, 0.91 ) }
    dend_75 { pt3dadd( 138.496, -49.0521, 46.5212, 0.23 ) }
    dend_75 { pt3dadd( 140.831, -50.0805, 46.8978, 0.91 ) }
    dend_75 { pt3dadd( 143.432, -51.1567, 47.1312, 0.23 ) }
    dend_75 { pt3dadd( 144.877, -51.654, 47.2015, 1.36 ) }
    dend_75 { pt3dadd( 147.064, -52.2364, 47.2548, 0.23 ) }
    dend_75 { pt3dadd( 149.222, -52.6976, 47.2312, 0.23 ) }
    dend_75 { pt3dadd( 150.955, -53.0254, 47.2303, 0.45 ) }
    dend_75 { pt3dadd( 152.202, -53.2078, 47.2554, 1.14 ) }
    dend_75 { pt3dadd( 154.916, -53.5078, 47.4155, 0.23 ) }
    dend_75 { pt3dadd( 156.966, -53.6803, 47.5328, 0.45 ) }
    dend_75 { pt3dadd( 159.693, -53.8464, 47.6999, 0.23 ) }
    dend_75 { pt3dadd( 161.494, -53.9342, 47.9039, 0.23 ) }
    dend_75 { pt3dadd( 162.512, -53.9933, 48.0812, 1.14 ) }
    dend_75 { pt3dadd( 163.942, -54.1008, 48.3931, 2.5 ) }
    dend_75 { pt3dadd( 165.351, -54.2363, 48.769, 2.73 ) }
    dend_75 { pt3dadd( 166.569, -54.3719, 49.104, 1.82 ) }
    dend_75 { pt3dadd( 169.052, -54.7196, 49.8171, 0.23 ) }
    dend_75 { pt3dadd( 169.878, -54.8763, 50.0139, 0.68 ) }
    dend_75 { pt3dadd( 172.258, -55.3667, 50.5552, 0.68 ) }
    dend_75 { pt3dadd( 174.676, -55.9125, 51.0552, 0.23 ) }
    dend_75 { pt3dadd( 176.15, -56.2921, 51.3052, 0.91 ) }
    dend_75 { pt3dadd( 177.836, -56.8124, 51.479, 0.23 ) }
    dend_75 { pt3dadd( 179.733, -57.5742, 51.4432, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 54/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 82.5857, -49.85, 39.3075, 0.68 ) }
    dend_68 { pt3dadd( 83.4313, -52.6949, 40.5104, 0.68 ) }
    dend_68 { pt3dadd( 84.2815, -54.8616, 41.5172, 1.14 ) }
    dend_68 { pt3dadd( 85.1434, -56.8286, 42.5895, 0.45 ) }
    dend_68 { pt3dadd( 86.0855, -58.7251, 43.7119, 0.45 ) }
    dend_68 { pt3dadd( 86.9475, -60.2713, 44.7308, 1.14 ) }
    dend_68 { pt3dadd( 87.6187, -61.407, 45.5117, 1.14 ) }
    dend_68 { pt3dadd( 88.3574, -62.3812, 46.3432, 0.23 ) }
    dend_68 { pt3dadd( 89.4151, -63.5847, 47.4341, 0.68 ) }
    dend_68 { pt3dadd( 90.1767, -64.4057, 48.156, 0.68 ) }
    dend_68 { pt3dadd( 91.3101, -65.7632, 49.1532, 0.23 ) }
    dend_68 { pt3dadd( 92.1986, -66.9354, 49.8902, 1.36 ) }
    dend_68 { pt3dadd( 92.8076, -67.7646, 50.3201, 2.05 ) }
    dend_68 { pt3dadd( 93.7376, -69.0398, 50.8555, 2.05 ) }
    dend_68 { pt3dadd( 94.5722, -70.2086, 51.3002, 0.91 ) }
    dend_68 { pt3dadd( 95.387, -71.3904, 51.7456, 1.36 ) }
    dend_68 { pt3dadd( 96.5459, -72.9756, 52.3311, 0.23 ) }
    dend_68 { pt3dadd( 97.9905, -74.8929, 53.124, 1.36 ) }
    dend_68 { pt3dadd( 98.579, -75.6349, 53.4714, 1.36 ) }
    dend_68 { pt3dadd( 100.431, -77.7472, 54.6775, 0.68 ) }
    dend_68 { pt3dadd( 101.001, -78.346, 55.0902, 0.68 ) }
    dend_68 { pt3dadd( 102.189, -79.6163, 56.0491, 0.45 ) }
    dend_68 { pt3dadd( 103.246, -80.8803, 57.0536, 0.45 ) }
    dend_68 { pt3dadd( 104.177, -82.2164, 58.1111, 0.23 ) }
    dend_68 { pt3dadd( 104.99, -83.548, 59.0547, 0.23 ) }
    dend_68 { pt3dadd( 105.821, -85.1855, 60.1543, 1.59 ) }
    dend_68 { pt3dadd( 106.464, -86.825, 61.3587, 0.23 ) }
    dend_68 { pt3dadd( 106.725, -87.7111, 62.0267, 2.5 ) }
    dend_68 { pt3dadd( 107.051, -89.1379, 63.0334, 2.5 ) }
    dend_68 { pt3dadd( 107.386, -91.2208, 64.3604, 2.5 ) }
    dend_68 { pt3dadd( 107.896, -94.5124, 66.2934, 0.23 ) }
    dend_68 { pt3dadd( 108.335, -97.4076, 68.0193, 0.23 ) }
    dend_68 { pt3dadd( 108.498, -98.396, 68.6351, 0.23 ) }
    dend_68 { pt3dadd( 108.863, -100.362, 69.8782, 1.36 ) }
    dend_68 { pt3dadd( 109.309, -102.863, 71.4533, 2.27 ) }
    dend_68 { pt3dadd( 109.485, -104.292, 72.2647, 2.27 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 90/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 188.444, -40.6932, 59.37, 0.23 ) }
    dend_63 { pt3dadd( 190.546, -41.6117, 60.5176, 0.23 ) }
    dend_63 { pt3dadd( 193.247, -42.6666, 61.8258, 1.36 ) }
    dend_63 { pt3dadd( 195.695, -43.4578, 62.8194, 0.23 ) }
    dend_63 { pt3dadd( 196.863, -43.799, 63.2276, 0.91 ) }
    dend_63 { pt3dadd( 199.062, -44.4065, 63.8911, 0.23 ) }
    dend_63 { pt3dadd( 199.843, -44.6093, 64.0921, 0.68 ) }
    dend_63 { pt3dadd( 200.419, -44.7156, 64.1756, 0.23 ) }
    dend_63 { pt3dadd( 202.372, -45.0146, 64.1346, 0.68 ) }
    dend_63 { pt3dadd( 203.129, -45.1359, 64.0497, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 204.035, -45.3249, 63.9325, 1.36 ) }
    dend_63 { pt3dadd( 205.203, -45.6187, 63.7716, 1.36 ) }
    dend_63 { pt3dadd( 206.266, -45.8926, 63.6605, 0.23 ) }
    dend_63 { pt3dadd( 208.231, -46.4063, 63.4974, 1.14 ) }
    dend_63 { pt3dadd( 210.089, -46.8775, 63.3769, 0.23 ) }
    dend_63 { pt3dadd( 211.46, -47.1836, 63.3126, 0.91 ) }
    dend_63 { pt3dadd( 213.033, -47.501, 63.2593, 0.23 ) }
    dend_63 { pt3dadd( 215.36, -47.9337, 63.199, 1.59 ) }
    dend_63 { pt3dadd( 216.371, -48.0937, 63.1825, 1.59 ) }
    dend_63 { pt3dadd( 218.585, -48.3775, 63.1623, 0.23 ) }
    dend_63 { pt3dadd( 219.762, -48.4994, 63.1469, 1.59 ) }
    dend_63 { pt3dadd( 220.592, -48.5604, 63.1238, 1.59 ) }
    dend_63 { pt3dadd( 222.059, -48.6366, 63.0528, 0.23 ) }
    dend_63 { pt3dadd( 223.048, -48.6945, 62.9952, 0.91 ) }
    dend_63 { pt3dadd( 224.253, -48.7939, 62.9543, 0.23 ) }
    dend_63 { pt3dadd( 226.045, -48.9784, 62.9184, 1.36 ) }
    dend_63 { pt3dadd( 229.204, -49.3336, 62.8811, 0.23 ) }
    dend_63 { pt3dadd( 230.77, -49.5082, 62.8741, 1.59 ) }
    dend_63 { pt3dadd( 234.204, -49.8688, 62.8885, 0.23 ) }
    dend_63 { pt3dadd( 236.297, -50.0564, 62.9196, 1.14 ) }
    dend_63 { pt3dadd( 238.136, -50.1578, 63.0339, 0.23 ) }
    dend_63 { pt3dadd( 239.513, -50.1573, 63.1899, 1.36 ) }
    dend_63 { pt3dadd( 240.871, -50.0572, 63.4418, 1.36 ) }
    dend_63 { pt3dadd( 242.04, -49.8611, 63.7313, 0.23 ) }
    dend_63 { pt3dadd( 243.03, -49.5712, 64.0322, 1.59 ) }
    dend_63 { pt3dadd( 245.952, -48.4825, 64.9988, 0.23 ) }
    dend_63 { pt3dadd( 247.65, -47.7997, 65.5883, 1.36 ) }
    dend_63 { pt3dadd( 249.479, -47.1266, 66.1785, 0.23 ) }
    dend_63 { pt3dadd( 250.255, -46.8787, 66.3977, 1.59 ) }
    dend_63 { pt3dadd( 252.019, -46.491, 66.8102, 0.23 ) }
    dend_63 { pt3dadd( 253.284, -46.3821, 67.009, 1.36 ) }
    dend_63 { pt3dadd( 254.481, -46.4791, 67.1722, 1.36 ) }
    dend_63 { pt3dadd( 256.406, -46.9359, 67.5453, 0.23 ) }
    dend_63 { pt3dadd( 257.364, -47.2193, 67.7597, 1.14 ) }
    dend_63 { pt3dadd( 259.208, -47.7864, 68.273, 0.23 ) }
    dend_63 { pt3dadd( 260.755, -48.2621, 68.8225, 1.36 ) }
    dend_63 { pt3dadd( 263.655, -49.0639, 69.9993, 0.23 ) }
    dend_63 { pt3dadd( 265.958, -49.5887, 71.0148, 0.23 ) }
    dend_63 { pt3dadd( 267.956, -49.936, 71.9574, 1.14 ) }
    dend_63 { pt3dadd( 269.631, -50.1961, 72.7435, 0.23 ) }
    dend_63 { pt3dadd( 271.441, -50.4018, 73.5535, 1.36 ) }
    dend_63 { pt3dadd( 272.554, -50.49, 74.0213, 0.23 ) }
    dend_63 { pt3dadd( 273.696, -50.5496, 74.4417, 1.59 ) }
    dend_63 { pt3dadd( 275.458, -50.6491, 75.0616, 0.23 ) }
    dend_63 { pt3dadd( 278.297, -50.9777, 76.0334, 0.23 ) }
    dend_63 { pt3dadd( 279.456, -51.1655, 76.3646, 0.23 ) }
    dend_63 { pt3dadd( 280.25, -51.3177, 76.5576, 1.36 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 188.444, -40.6932, 59.37, 0.23 ) }
    dend_62 { pt3dadd( 189.444, -43.3446, 56.1948, 0.23 ) }
    dend_62 { pt3dadd( 190.107, -45.1214, 54.2766, 0.23 ) }
    dend_62 { pt3dadd( 190.718, -46.8284, 52.5831, 1.14 ) }
    dend_62 { pt3dadd( 191.278, -48.4872, 51.0665, 0.23 ) }
    dend_62 { pt3dadd( 192.084, -50.9183, 49.0992, 1.14 ) }
    dend_62 { pt3dadd( 192.842, -53.2971, 47.3939, 0.23 ) }
    dend_62 { pt3dadd( 193.113, -54.1506, 46.9337, 0.68 ) }
    dend_62 { pt3dadd( 193.44, -55.3317, 46.4073, 0.23 ) }
    dend_62 { pt3dadd( 193.89, -56.8237, 45.7972, 1.14 ) }
    dend_62 { pt3dadd( 195.172, -60.56, 44.5468, 0.23 ) }
    dend_62 { pt3dadd( 195.847, -62.2803, 44.0715, 1.36 ) }
    dend_62 { pt3dadd( 196.773, -64.3796, 43.5196, 0.23 ) }
    dend_62 { pt3dadd( 197.954, -66.7712, 42.8925, 1.59 ) }
    dend_62 { pt3dadd( 199.697, -69.922, 41.7574, 0.23 ) }
    dend_62 { pt3dadd( 202.17, -73.9026, 39.9475, 0.23 ) }
    dend_62 { pt3dadd( 203.088, -75.1936, 39.1923, 0.23 ) }
    dend_62 { pt3dadd( 203.993, -76.3424, 38.3163, 2.05 ) }
    dend_62 { pt3dadd( 205.924, -78.5191, 36.2622, 0.23 ) }
    dend_62 { pt3dadd( 209.099, -81.8292, 32.4893, 0.23 ) }
    dend_62 { pt3dadd( 209.957, -82.7016, 31.2761, 1.59 ) }
    dend_62 { pt3dadd( 211.018, -83.6552, 29.5836, 0.23 ) }
    dend_62 { pt3dadd( 212.319, -84.6221, 27.5355, 2.27 ) }
    dend_62 { pt3dadd( 212.855, -84.9944, 26.6755, 0.91 ) }
    dend_62 { pt3dadd( 214.095, -85.8288, 24.7565, 0.23 ) }
    dend_62 { pt3dadd( 215.497, -86.8498, 22.8365, 1.36 ) }
    dend_62 { pt3dadd( 217.2, -88.2068, 20.4403, 0.23 ) }
    dend_62 { pt3dadd( 218.775, -89.6063, 18.3858, 1.82 ) }
    dend_62 { pt3dadd( 219.759, -90.4961, 17.2714, 0.23 ) }
    dend_62 { pt3dadd( 220.954, -91.6676, 16.0112, 0.23 ) }
    dend_62 { pt3dadd( 221.535, -92.2804, 15.4493, 1.14 ) }
    dend_62 { pt3dadd( 223.719, -95.0261, 13.4888, 0.23 ) }
    dend_62 { pt3dadd( 225.713, -97.6864, 11.8556, 1.36 ) }
    dend_62 { pt3dadd( 227.073, -99.5511, 10.8164, 0.91 ) }
    dend_62 { pt3dadd( 228.619, -101.587, 9.67902, 0.23 ) }
    dend_62 { pt3dadd( 229.926, -103.381, 8.69666, 1.59 ) }
    dend_62 { pt3dadd( 232.327, -106.698, 6.96438, 0.23 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 84/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 73.8673, -86.0185, 46.2032, 0.23 ) }
    dend_57 { pt3dadd( 75.8113, -88.4793, 47.9164, 0.23 ) }
    dend_57 { pt3dadd( 76.917, -90.0898, 48.9306, 2.05 ) }
    dend_57 { pt3dadd( 79.2611, -93.4351, 51.0002, 0.45 ) }
    dend_57 { pt3dadd( 80.5268, -95.2113, 52.0428, 0.45 ) }
    dend_57 { pt3dadd( 82.1394, -97.4665, 53.3731, 0.45 ) }
    dend_57 { pt3dadd( 83.7278, -99.6761, 54.6496, 1.82 ) }
    dend_57 { pt3dadd( 85.5902, -102.391, 56.0438, 0.45 ) }
    dend_57 { pt3dadd( 87.0821, -104.574, 57.1016, 0.45 ) }
    dend_57 { pt3dadd( 88.2616, -106.274, 57.8199, 1.59 ) }
    dend_57 { pt3dadd( 89.899, -108.791, 58.9349, 0.23 ) }
    dend_57 { pt3dadd( 90.775, -110.193, 59.5418, 0.91 ) }
    dend_57 { pt3dadd( 92.1884, -112.3, 60.3651, 0.23 ) }
    dend_57 { pt3dadd( 93.1333, -113.693, 60.882, 1.36 ) }
    dend_57 { pt3dadd( 94.1182, -115.261, 61.4112, 1.36 ) }
    dend_57 { pt3dadd( 95.7388, -117.863, 62.2766, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_57 { pt3dadd( 97.2094, -120.215, 62.9931, 2.27 ) }
    dend_57 { pt3dadd( 99.0314, -123.114, 63.9258, 0.23 ) }
    dend_57 { pt3dadd( 100.341, -125.131, 64.5997, 0.23 ) }
    dend_57 { pt3dadd( 101.486, -126.869, 65.1897, 2.05 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 4/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 73.8673, -86.0185, 46.2032, 0.91 ) }
    dend_56 { pt3dadd( 73.171, -88.6213, 45.5098, 0.91 ) }
    dend_56 { pt3dadd( 72.5736, -90.8676, 44.9956, 0.23 ) }
    dend_56 { pt3dadd( 72.1227, -92.3284, 44.6402, 1.36 ) }
    dend_56 { pt3dadd( 71.5677, -93.9325, 44.2316, 0.23 ) }
    dend_56 { pt3dadd( 71.0094, -95.471, 43.8483, 0.91 ) }
    dend_56 { pt3dadd( 70.5371, -96.718, 43.5192, 0.23 ) }
    dend_56 { pt3dadd( 69.7657, -98.463, 43.0193, 1.36 ) }
    dend_56 { pt3dadd( 68.5899, -100.69, 42.1506, 0.23 ) }
    dend_56 { pt3dadd( 67.5297, -102.396, 41.266, 0.23 ) }
    dend_56 { pt3dadd( 67.0252, -103.047, 40.8263, 1.14 ) }
    dend_56 { pt3dadd( 65.5772, -104.586, 39.4938, 0.23 ) }
    dend_56 { pt3dadd( 63.5785, -106.417, 37.6781, 1.82 ) }
    dend_56 { pt3dadd( 61.3643, -108.146, 35.7327, 0.23 ) }
    dend_56 { pt3dadd( 60.0193, -109.032, 34.6268, 0.23 ) }
    dend_56 { pt3dadd( 57.7011, -110.313, 32.8584, 0.68 ) }
    dend_56 { pt3dadd( 56.0393, -111.125, 31.6448, 0.23 ) }
    dend_56 { pt3dadd( 54.9685, -111.581, 30.9166, 1.36 ) }
    dend_56 { pt3dadd( 53.0437, -112.339, 29.7044, 0.23 ) }
    dend_56 { pt3dadd( 50.8595, -113.24, 28.4729, 1.59 ) }
    dend_56 { pt3dadd( 48.4238, -114.312, 27.2242, 0.23 ) }
    dend_56 { pt3dadd( 46.7972, -115.061, 26.4878, 0.23 ) }
    dend_56 { pt3dadd( 44.9295, -115.961, 25.7792, 1.36 ) }
    dend_56 { pt3dadd( 42.9007, -117.0, 25.1448, 0.23 ) }
    dend_56 { pt3dadd( 41.467, -117.808, 24.7917, 0.23 ) }
    dend_56 { pt3dadd( 39.0805, -119.298, 24.3931, 1.82 ) }
    dend_56 { pt3dadd( 37.5376, -120.35, 24.1841, 0.45 ) }
    dend_56 { pt3dadd( 35.4773, -121.853, 23.8621, 0.23 ) }
    dend_56 { pt3dadd( 34.5589, -122.548, 23.6693, 0.91 ) }
    dend_56 { pt3dadd( 32.8923, -123.78, 23.225, 0.23 ) }
    dend_56 { pt3dadd( 31.7234, -124.565, 22.8086, 1.14 ) }
    dend_56 { pt3dadd( 29.1446, -126.136, 21.6731, 0.23 ) }
    dend_56 { pt3dadd( 27.3204, -127.195, 20.7766, 1.36 ) }
    dend_56 { pt3dadd( 25.7954, -128.064, 19.9795, 0.23 ) }
    dend_56 { pt3dadd( 24.8419, -128.583, 19.5307, 0.91 ) }
    dend_56 { pt3dadd( 23.4759, -129.317, 18.9415, 0.23 ) }
    dend_56 { pt3dadd( 22.5229, -129.829, 18.5572, 0.23 ) }
    dend_56 { pt3dadd( 21.7727, -130.218, 18.3161, 1.14 ) }
    dend_56 { pt3dadd( 19.2889, -131.45, 17.5601, 0.23 ) }
    dend_56 { pt3dadd( 17.4808, -132.351, 17.0084, 0.91 ) }
    dend_56 { pt3dadd( 15.9142, -133.168, 16.488, 0.23 ) }
    dend_56 { pt3dadd( 15.2469, -133.523, 16.2664, 1.14 ) }
    dend_56 { pt3dadd( 14.2991, -134.041, 15.9626, 1.14 ) }
    dend_56 { pt3dadd( 13.0007, -134.798, 15.6318, 0.23 ) }
    dend_56 { pt3dadd( 11.6588, -135.644, 15.3335, 0.91 ) }
    dend_56 { pt3dadd( 9.98118, -136.772, 14.9723, 0.23 ) }
    dend_56 { pt3dadd( 9.14887, -137.362, 14.8177, 0.23 ) }
    dend_56 { pt3dadd( 7.44702, -138.618, 14.5055, 1.14 ) }
    dend_56 { pt3dadd( 5.56653, -140.167, 14.1473, 0.23 ) }
    dend_56 { pt3dadd( 4.10543, -141.447, 13.8938, 1.36 ) }
    dend_56 { pt3dadd( 2.33433, -142.994, 13.4943, 0.23 ) }
    dend_56 { pt3dadd( 1.44415, -143.736, 13.2834, 1.36 ) }
    dend_56 { pt3dadd( 0.855234, -144.2, 13.1288, 1.36 ) }
    dend_56 { pt3dadd( -0.813038, -145.472, 12.5641, 0.23 ) }
    dend_56 { pt3dadd( -1.69658, -146.123, 12.2384, 1.14 ) }
    dend_56 { pt3dadd( -3.2252, -147.15, 11.7666, 0.23 ) }
    dend_56 { pt3dadd( -4.39969, -147.886, 11.3698, 0.91 ) }
    dend_56 { pt3dadd( -5.52997, -148.548, 10.9947, 0.23 ) }
    dend_56 { pt3dadd( -7.06548, -149.414, 10.5627, 0.23 ) }
    dend_56 { pt3dadd( -8.03901, -149.941, 10.3816, 0.45 ) }
    dend_56 { pt3dadd( -9.63881, -150.825, 10.1361, 1.14 ) }
    dend_56 { pt3dadd( -10.9846, -151.591, 10.0903, 0.23 ) }
    dend_56 { pt3dadd( -11.7756, -152.028, 10.0497, 0.23 ) }
    dend_56 { pt3dadd( -13.1697, -152.802, 9.98898, 1.14 ) }
    dend_56 { pt3dadd( -14.6972, -153.674, 9.91215, 0.23 ) }
    dend_56 { pt3dadd( -16.9915, -155.082, 9.72688, 1.14 ) }
    dend_56 { pt3dadd( -18.6175, -156.161, 9.59827, 0.23 ) }
    dend_56 { pt3dadd( -20.4155, -157.407, 9.49508, 0.23 ) }
    dend_56 { pt3dadd( -21.4676, -158.17, 9.42906, 0.23 ) }
    dend_56 { pt3dadd( -23.7474, -159.931, 9.25087, 0.23 ) }
    dend_56 { pt3dadd( -24.5292, -160.559, 9.19176, 0.68 ) }
    dend_56 { pt3dadd( -26.512, -162.293, 9.09762, 0.23 ) }
    dend_56 { pt3dadd( -27.6564, -163.339, 9.01944, 1.14 ) }
    dend_56 { pt3dadd( -28.4889, -164.157, 9.04284, 0.23 ) }
    dend_56 { pt3dadd( -30.1317, -165.813, 9.12073, 1.36 ) }
    dend_56 { pt3dadd( -35.0529, -171.539, 6.42076, 1.36 ) }
    dend_56 { pt3dadd( -39.8914, -177.465, 4.04944, 1.36 ) }
    dend_56 { pt3dadd( -45.5143, -182.89, 2.23517, 1.36 ) }
    dend_56 { pt3dadd( -50.2968, -189.154, 0.920125, 1.36 ) }
    dend_56 { pt3dadd( -55.5668, -194.89, -0.954205, 1.36 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 84/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 75.4597, 5.18037, 49.2776, 1.14 ) }
    dend_54 { pt3dadd( 75.8247, 3.85569, 51.7537, 1.14 ) }
    dend_54 { pt3dadd( 76.2974, 1.63069, 55.1986, 0.45 ) }
    dend_54 { pt3dadd( 76.6321, -0.402282, 58.3212, 0.91 ) }
    dend_54 { pt3dadd( 76.7206, -1.55113, 60.013, 0.23 ) }
    dend_54 { pt3dadd( 76.7231, -2.04777, 60.7952, 1.14 ) }
    dend_54 { pt3dadd( 76.4897, -3.5302, 63.5063, 0.23 ) }
    dend_54 { pt3dadd( 75.6925, -4.93769, 66.8229, 0.91 ) }
    dend_54 { pt3dadd( 74.6275, -5.9192, 69.6778, 0.91 ) }
    dend_54 { pt3dadd( 73.7277, -6.41715, 71.5992, 2.05 ) }
    dend_54 { pt3dadd( 72.1459, -6.93739, 74.5684, 0.68 ) }
    dend_54 { pt3dadd( 69.7166, -7.4839, 78.7404, 1.59 ) }
    dend_54 { pt3dadd( 67.0951, -7.85763, 82.7711, 0.23 ) }
    dend_54 { pt3dadd( 66.3119, -7.93953, 83.8265, 1.36 ) }
    dend_54 { pt3dadd( 64.3298, -8.16764, 86.1958, 0.45 ) }
    dend_54 { pt3dadd( 63.4749, -8.29162, 87.0991, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_54 { pt3dadd( 60.7411, -8.91215, 89.5516, 0.23 ) }
    dend_54 { pt3dadd( 58.8846, -9.47357, 91.0341, 1.14 ) }
    dend_54 { pt3dadd( 57.7226, -9.82755, 91.81, 0.45 ) }
    dend_54 { pt3dadd( 56.0651, -10.3262, 92.8546, 2.27 ) }
    dend_54 { pt3dadd( 52.0736, -11.5576, 95.2131, 0.23 ) }
    dend_54 { pt3dadd( 49.6436, -12.2657, 96.6721, 1.14 ) }
    dend_54 { pt3dadd( 48.8513, -12.4538, 97.1451, 0.23 ) }
    dend_54 { pt3dadd( 46.5205, -12.816, 98.672, 1.14 ) }
    dend_54 { pt3dadd( 43.4962, -13.0522, 101.026, 0.23 ) }
    dend_54 { pt3dadd( 41.635, -13.079, 102.663, 0.23 ) }
    dend_54 { pt3dadd( 40.4584, -13.0397, 103.876, 0.23 ) }
    dend_54 { pt3dadd( 38.55, -12.9465, 106.094, 1.14 ) }
    dend_54 { pt3dadd( 35.9354, -12.8704, 109.653, 2.05 ) }
    dend_54 { pt3dadd( 33.9268, -12.8892, 112.895, 0.68 ) }
    dend_54 { pt3dadd( 33.2477, -12.935, 114.007, 0.68 ) }
    dend_54 { pt3dadd( 31.1728, -13.1706, 117.143, 0.68 ) }
    dend_54 { pt3dadd( 30.4183, -13.2807, 118.199, 1.36 ) }
    dend_54 { pt3dadd( 28.6029, -13.6154, 120.548, 0.23 ) }
    dend_54 { pt3dadd( 25.9816, -14.2623, 123.754, 1.14 ) }
    dend_54 { pt3dadd( 24.0567, -14.7668, 126.072, 0.23 ) }
    dend_54 { pt3dadd( 21.2206, -15.5042, 129.671, 0.91 ) }
    dend_54 { pt3dadd( 18.9962, -16.1282, 132.493, 0.23 ) }
    dend_54 { pt3dadd( 18.2124, -16.418, 133.531, 1.14 ) }
    dend_54 { pt3dadd( 16.554, -17.3969, 135.898, 0.45 ) }
    dend_54 { pt3dadd( 15.2578, -18.6876, 138.106, 1.14 ) }
    dend_54 { pt3dadd( 14.2905, -20.105, 140.049, 0.23 ) }
    dend_54 { pt3dadd( 13.6264, -21.2872, 141.421, 1.14 ) }
    dend_54 { pt3dadd( 12.7993, -22.8744, 143.088, 0.23 ) }
    dend_54 { pt3dadd( 11.8486, -24.64, 144.897, 1.36 ) }
    dend_54 { pt3dadd( 9.90182, -27.8297, 147.995, 0.23 ) }
    dend_54 { pt3dadd( 8.94493, -29.2589, 149.279, 0.91 ) }
    dend_54 { pt3dadd( 7.57078, -31.2252, 150.957, 0.91 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 32/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 75.4597, 5.18037, 49.2776, 0.91 ) }
    dend_51 { pt3dadd( 78.0316, 7.42778, 50.1862, 0.91 ) }
    dend_51 { pt3dadd( 79.6017, 8.79982, 50.7409, 0.91 ) }
    dend_51 { pt3dadd( 82.2503, 11.1143, 51.6765, 1.59 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -122.208, 233.814, -62.0427, 0.23 ) }
    dend_46 { pt3dadd( -120.804, 234.905, -63.3058, 0.23 ) }
    dend_46 { pt3dadd( -120.119, 235.631, -63.9574, 1.14 ) }
    dend_46 { pt3dadd( -119.058, 237.051, -65.0338, 0.23 ) }
    dend_46 { pt3dadd( -118.367, 238.182, -65.7735, 0.91 ) }
    dend_46 { pt3dadd( -117.867, 239.193, -66.3318, 0.23 ) }
    dend_46 { pt3dadd( -117.448, 240.191, -66.7689, 0.91 ) }
    dend_46 { pt3dadd( -116.666, 242.761, -67.4883, 0.23 ) }
    dend_46 { pt3dadd( -116.396, 244.084, -67.728, 0.23 ) }
    dend_46 { pt3dadd( -116.21, 245.7, -67.8147, 0.23 ) }
    dend_46 { pt3dadd( -116.032, 248.399, -67.6427, 0.91 ) }
    dend_46 { pt3dadd( -115.942, 250.59, -67.3307, 0.23 ) }
    dend_46 { pt3dadd( -115.935, 252.078, -67.003, 1.59 ) }
    dend_46 { pt3dadd( -115.965, 254.579, -66.2796, 0.23 ) }
    dend_46 { pt3dadd( -115.965, 256.85, -65.5285, 0.91 ) }
    dend_46 { pt3dadd( -115.927, 259.044, -64.7094, 0.23 ) }
    dend_46 { pt3dadd( -115.845, 260.597, -64.0559, 1.36 ) }
    dend_46 { pt3dadd( -115.667, 263.278, -62.9679, 0.23 ) }
    dend_46 { pt3dadd( -115.604, 263.924, -62.7081, 0.23 ) }
    dend_46 { pt3dadd( -115.453, 264.699, -62.3454, 0.23 ) }
    dend_46 { pt3dadd( -115.213, 265.509, -62.0297, 0.23 ) }
    dend_46 { pt3dadd( -114.566, 267.166, -61.4417, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 58/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -122.208, 233.814, -62.0427, 0.23 ) }
    dend_45 { pt3dadd( -119.9, 231.85, -64.2924, 0.23 ) }
    dend_45 { pt3dadd( -118.418, 230.589, -65.7365, 0.23 ) }
    dend_45 { pt3dadd( -117.14, 229.501, -66.9818, 0.23 ) }
    dend_45 { pt3dadd( -115.646, 228.23, -68.4381, 1.14 ) }
    dend_45 { pt3dadd( -114.725, 227.446, -69.3357, 1.82 ) }
    dend_45 { pt3dadd( -106.924, 221.91, -74.2368, 1.82 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 137.318, 159.61, -9.6235, 0.23 ) }
    dend_41 { pt3dadd( 144.943, 165.158, -9.36654, 0.23 ) }
    dend_41 { pt3dadd( 152.863, 170.197, -10.451, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 137.318, 159.61, -9.6235, 0.68 ) }
    dend_40 { pt3dadd( 146.945, 167.626, -8.05907, 0.23 ) }
    dend_40 { pt3dadd( 156.284, 176.007, -6.79645, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_26 (entry count 71/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 10.4393, 68.1128, -22.193, 0.23 ) }
    dend_38 { pt3dadd( 16.4935, 74.6272, -24.6392, 0.23 ) }
    dend_38 { pt3dadd( 21.0262, 82.4285, -26.2802, 0.23 ) }
    dend_38 { pt3dadd( 26.1085, 89.8983, -27.9385, 0.23 ) }
    dend_38 { pt3dadd( 31.1796, 97.4605, -29.1259, 0.23 ) }
    dend_38 { pt3dadd( 37.1964, 103.943, -31.748, 0.23 ) }
    dend_38 { pt3dadd( 41.9484, 110.685, -35.8499, 0.23 ) }
    dend_38 { pt3dadd( 47.3596, 116.804, -40.1577, 0.23 ) }
    dend_38 { pt3dadd( 53.4219, 123.033, -43.2714, 0.23 ) }
    dend_38 { pt3dadd( 59.375, 128.79, -47.3861, 0.23 ) }
    dend_38 { pt3dadd( 64.4569, 134.296, -52.8148, 0.23 ) }
    dend_38 { pt3dadd( 70.1886, 138.672, -58.6608, 0.23 ) }
    dend_38 { pt3dadd( 76.677, 142.041, -64.4152, 0.23 ) }
    dend_38 { pt3dadd( 83.3972, 146.944, -68.5108, 0.23 ) }
    dend_38 { pt3dadd( 88.7904, 151.976, -74.1195, 0.23 ) }
    dend_38 { pt3dadd( 93.2422, 157.143, -80.3849, 0.23 ) }
    dend_38 { pt3dadd( 98.1351, 162.152, -86.4543, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.4393, 68.1128, -22.193, 0.68 ) }
    dend_27 { pt3dadd( 14.2038, 74.4686, -21.9009, 0.23 ) }
    dend_27 { pt3dadd( 18.4676, 80.5235, -21.7792, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 91/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -63.6635, -38.4193, -22.9685, 0.23 ) }
    dend_20 { pt3dadd( -61.4305, -40.8462, -21.5838, 0.23 ) }
    dend_20 { pt3dadd( -59.3647, -43.1655, -20.3091, 0.23 ) }
    dend_20 { pt3dadd( -57.9642, -44.7351, -19.4705, 0.23 ) }
    dend_20 { pt3dadd( -55.8333, -47.302, -18.189, 0.23 ) }
    dend_20 { pt3dadd( -53.5868, -50.0079, -16.838, 0.23 ) }
    dend_20 { pt3dadd( -51.1803, -52.9067, -15.3908, 0.23 ) }
    dend_20 { pt3dadd( -49.4713, -54.9725, -14.4062, 0.23 ) }
    dend_20 { pt3dadd( -46.8324, -58.3198, -12.8507, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_20 { pt3dadd( -44.9297, -60.8674, -11.7358, 0.23 ) }
    dend_20 { pt3dadd( -39.8448, -68.1469, -8.60272, 0.23 ) }
    dend_20 { pt3dadd( -33.1688, -73.4197, -4.41992, 0.23 ) }
    dend_20 { pt3dadd( -25.7925, -78.4378, -1.16747, 0.23 ) }
    dend_20 { pt3dadd( -17.6388, -81.2123, 2.93353, 0.23 ) }
    dend_20 { pt3dadd( -9.0364, -84.1529, 5.83298, 0.23 ) }
    dend_20 { pt3dadd( -0.0964093, -86.0859, 8.5967, 0.23 ) }
    dend_20 { pt3dadd( 9.11279, -86.8038, 11.0703, 0.23 ) }
    dend_20 { pt3dadd( 18.1076, -86.6509, 14.3143, 0.23 ) }
    dend_20 { pt3dadd( 27.015, -86.0169, 17.7343, 0.23 ) }
    dend_20 { pt3dadd( 36.3519, -85.0437, 19.5332, 0.23 ) }
    dend_20 { pt3dadd( 45.8449, -85.8066, 20.402, 0.23 ) }
    dend_20 { pt3dadd( 55.0051, -86.7546, 22.975, 0.23 ) }
    dend_20 { pt3dadd( 63.9669, -86.1624, 26.2575, 0.23 ) }
    dend_20 { pt3dadd( 73.0154, -86.2699, 29.3505, 0.23 ) }
    dend_20 { pt3dadd( 82.2649, -87.6377, 31.3462, 0.23 ) }
    dend_20 { pt3dadd( 91.6421, -88.7729, 32.835, 0.23 ) }
    dend_20 { pt3dadd( 100.679, -91.426, 34.4196, 0.23 ) }
    dend_20 { pt3dadd( 109.365, -94.6072, 36.7604, 0.23 ) }
    dend_20 { pt3dadd( 118.255, -97.931, 37.7658, 0.23 ) }
    dend_20 { pt3dadd( 127.184, -101.311, 37.7066, 0.23 ) }
    dend_20 { pt3dadd( 136.395, -103.735, 36.8968, 0.23 ) }
    dend_20 { pt3dadd( 145.792, -105.362, 36.1944, 0.23 ) }
    dend_20 { pt3dadd( 155.015, -105.98, 33.7535, 0.23 ) }
    dend_20 { pt3dadd( 164.175, -105.275, 31.1435, 0.23 ) }
    dend_20 { pt3dadd( 172.972, -102.849, 28.4228, 0.23 ) }
    dend_20 { pt3dadd( 181.623, -99.3403, 26.6407, 0.23 ) }
    dend_20 { pt3dadd( 190.022, -94.996, 25.832, 0.23 ) }
    dend_20 { pt3dadd( 198.584, -91.0932, 24.5384, 0.23 ) }
    dend_20 { pt3dadd( 206.777, -87.1012, 21.9057, 0.23 ) }
    dend_20 { pt3dadd( 214.969, -83.6681, 18.5451, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -63.6635, -38.4193, -22.9685, 0.23 ) }
    dend_19 { pt3dadd( -66.7318, -39.1156, -23.3546, 0.23 ) }
    dend_19 { pt3dadd( -69.2522, -39.4119, -23.5312, 0.23 ) }
    dend_19 { pt3dadd( -71.3939, -39.6636, -23.6813, 0.23 ) }
    dend_19 { pt3dadd( -72.9862, -39.8508, -23.7929, 0.23 ) }
    dend_19 { pt3dadd( -74.7533, -40.0585, -23.9167, 0.23 ) }
    dend_19 { pt3dadd( -75.6165, -40.16, -23.9772, 0.23 ) }
    dend_19 { pt3dadd( -78.0008, -40.2083, -24.1136, 0.23 ) }
    dend_19 { pt3dadd( -87.6679, -40.0853, -25.8334, 0.23 ) }
    dend_19 { pt3dadd( -97.4142, -40.7985, -26.7988, 0.23 ) }
    dend_19 { pt3dadd( -106.812, -43.1647, -28.319, 0.23 ) }
    dend_19 { pt3dadd( -116.18, -45.068, -30.5366, 0.23 ) }
    dend_19 { pt3dadd( -125.753, -46.674, -31.9948, 0.23 ) }
    dend_19 { pt3dadd( -135.085, -49.6765, -32.1187, 0.23 ) }
    dend_19 { pt3dadd( -144.031, -53.6438, -32.2575, 0.23 ) }
    dend_19 { pt3dadd( -153.505, -56.0622, -31.4455, 0.23 ) }
    dend_19 { pt3dadd( -162.876, -58.761, -30.3902, 0.23 ) }
    dend_19 { pt3dadd( -171.751, -62.3834, -28.368, 0.23 ) }
    dend_19 { pt3dadd( -179.759, -66.7882, -24.8731, 0.23 ) }
    dend_19 { pt3dadd( -187.464, -72.2253, -22.3582, 0.23 ) }
    dend_19 { pt3dadd( -194.792, -77.2374, -18.2725, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -49.1741, -31.1733, -11.988, 0.91 ) }
    dend_7 { pt3dadd( -52.1724, -33.3726, -11.437, 0.91 ) }
    dend_7 { pt3dadd( -53.9934, -34.7103, -11.1176, 0.91 ) }
    dend_7 { pt3dadd( -55.3192, -35.6866, -10.8367, 1.36 ) }
    dend_7 { pt3dadd( -57.4468, -37.241, -10.3627, 2.05 ) }
    dend_7 { pt3dadd( -59.2876, -38.5996, -9.96749, 1.36 ) }
    dend_7 { pt3dadd( -59.8119, -38.9832, -9.84254, 1.36 ) }
    dend_7 { pt3dadd( -61.3899, -40.1369, -9.31269, 0.68 ) }
    dend_7 { pt3dadd( -63.1909, -41.3908, -8.65514, 1.36 ) }
    dend_7 { pt3dadd( -64.3735, -42.1633, -8.25597, 2.5 ) }
    dend_7 { pt3dadd( -67.15, -43.8997, -7.26333, 1.59 ) }
    dend_7 { pt3dadd( -69.7469, -45.4155, -6.31011, 2.05 ) }
    dend_7 { pt3dadd( -72.2611, -46.8443, -5.38981, 2.05 ) }
    dend_7 { pt3dadd( -74.8858, -48.2718, -4.44459, 3.86 ) }
    dend_7 { pt3dadd( -77.8085, -49.7809, -3.45192, 2.73 ) }
    dend_7 { pt3dadd( -81.1222, -51.4171, -2.3794, 1.59 ) }
    dend_7 { pt3dadd( -83.681, -52.6426, -1.60575, 0.68 ) }
    dend_7 { pt3dadd( -84.6983, -53.1331, -1.35113, 0.68 ) }
    dend_7 { pt3dadd( -87.5032, -54.4849, -0.790797, 1.82 ) }
    dend_7 { pt3dadd( -88.556, -54.9575, -0.620171, 1.82 ) }
    dend_7 { pt3dadd( -90.5371, -55.7726, -0.46054, 0.23 ) }
    dend_7 { pt3dadd( -91.2723, -56.0558, -0.481068, 0.23 ) }
    dend_7 { pt3dadd( -93.2697, -56.8141, -0.629715, 1.59 ) }
    dend_7 { pt3dadd( -95.0878, -57.4789, -0.889477, 1.59 ) }
    dend_7 { pt3dadd( -97.087, -58.1493, -1.24494, 2.73 ) }
    dend_7 { pt3dadd( -98.8848, -58.6872, -1.47935, 2.73 ) }
    dend_7 { pt3dadd( -100.481, -59.1214, -1.5436, 2.73 ) }
    dend_7 { pt3dadd( -102.571, -59.6458, -1.43655, 1.59 ) }
    dend_7 { pt3dadd( -104.671, -60.1438, -1.13357, 2.5 ) }
    dend_7 { pt3dadd( -108.193, -60.9628, -0.38045, 0.68 ) }
    dend_7 { pt3dadd( -111.229, -61.6792, 0.430293, 0.68 ) }
    dend_7 { pt3dadd( -114.034, -62.3218, 1.28715, 1.14 ) }
    dend_7 { pt3dadd( -116.411, -62.8234, 2.12412, 2.27 ) }
    dend_7 { pt3dadd( -119.06, -63.3369, 3.22921, 2.27 ) }
    dend_7 { pt3dadd( -120.365, -63.5863, 3.88985, 2.27 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 87/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -49.1741, -31.1733, -11.988, 0.91 ) }
    dend_4 { pt3dadd( -50.4388, -36.1598, -12.8139, 0.91 ) }
    dend_4 { pt3dadd( -51.1894, -39.047, -13.3054, 0.45 ) }
    dend_4 { pt3dadd( -51.8473, -41.6629, -13.7774, 1.14 ) }
    dend_4 { pt3dadd( -52.3719, -43.7112, -14.1792, 0.23 ) }
    dend_4 { pt3dadd( -52.8235, -45.3741, -14.5118, 0.23 ) }
    dend_4 { pt3dadd( -53.2007, -46.6863, -14.7996, 1.14 ) }
    dend_4 { pt3dadd( -54.0064, -49.3291, -15.446, 0.45 ) }
    dend_4 { pt3dadd( -54.5297, -51.0871, -15.9653, 0.68 ) }
    dend_4 { pt3dadd( -55.2547, -53.5501, -16.8643, 0.23 ) }
    dend_4 { pt3dadd( -55.6262, -54.9338, -17.4157, 0.91 ) }
    dend_4 { pt3dadd( -56.0439, -56.8486, -18.1974, 0.23 ) }
    dend_4 { pt3dadd( -56.5119, -59.5148, -19.3357, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( -56.9198, -62.3582, -20.5861, 0.23 ) }
    dend_4 { pt3dadd( -57.2353, -65.1317, -21.7463, 0.23 ) }
    dend_4 { pt3dadd( -57.3601, -66.5408, -22.3049, 1.14 ) }
    dend_4 { pt3dadd( -57.4955, -68.4801, -22.967, 0.23 ) }
    dend_4 { pt3dadd( -57.6303, -70.8037, -23.6943, 0.23 ) }
    dend_4 { pt3dadd( -57.7206, -72.3722, -24.1447, 1.14 ) }
    dend_4 { pt3dadd( -57.9982, -75.8914, -25.008, 0.45 ) }
    dend_4 { pt3dadd( -58.1986, -78.1656, -25.4806, 0.45 ) }
    dend_4 { pt3dadd( -58.667, -82.544, -26.382, 1.82 ) }
    dend_4 { pt3dadd( -61.555, -92.0863, -29.7055, 1.82 ) }
    dend_4 { pt3dadd( -64.7759, -101.023, -34.2651, 1.82 ) }
    dend_4 { pt3dadd( -69.4596, -109.358, -38.7545, 1.82 ) }
    dend_4 { pt3dadd( -73.0657, -118.506, -42.5118, 1.82 ) }
    dend_4 { pt3dadd( -75.1525, -128.335, -45.5452, 1.82 ) }
    dend_4 { pt3dadd( -76.3387, -138.497, -47.8159, 1.82 ) }
    dend_4 { pt3dadd( -77.5364, -148.68, -49.973, 1.82 ) }
    dend_4 { pt3dadd( -78.6104, -158.77, -52.6059, 1.82 ) }
    dend_4 { pt3dadd( -78.3897, -168.417, -56.7603, 1.82 ) }
    // Section: dend_106, id: dend_106, parent: dend_96 (entry count 18/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 125.756, 33.9631, -0.0467085, 0.23 ) }
    dend_106 { pt3dadd( 128.807, 33.2273, -2.15241, 0.23 ) }
    dend_106 { pt3dadd( 130.064, 32.9629, -2.95027, 0.68 ) }
    dend_106 { pt3dadd( 132.109, 32.5326, -4.24874, 0.23 ) }
    dend_106 { pt3dadd( 133.051, 32.3344, -4.84663, 0.68 ) }
    dend_106 { pt3dadd( 134.955, 31.9338, -6.05556, 0.23 ) }
    dend_106 { pt3dadd( 135.491, 31.8209, -6.39596, 0.91 ) }
    dend_106 { pt3dadd( 136.679, 31.7547, -7.04099, 0.23 ) }
    dend_106 { pt3dadd( 146.937, 29.0481, -12.3356, 0.23 ) }
    dend_106 { pt3dadd( 157.482, 28.1871, -17.717, 0.23 ) }
    dend_106 { pt3dadd( 168.544, 26.6041, -21.7136, 0.23 ) }
    dend_106 { pt3dadd( 180.164, 25.6512, -23.9456, 0.23 ) }
    dend_106 { pt3dadd( 191.934, 24.2108, -24.4639, 0.23 ) }
    dend_106 { pt3dadd( 203.587, 22.922, -26.319, 0.23 ) }
    dend_106 { pt3dadd( 215.003, 23.783, -29.4515, 0.23 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 33/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 125.756, 33.9631, -0.0467085, 0.68 ) }
    dend_97 { pt3dadd( 127.273, 34.7675, 0.0498189, 0.68 ) }
    dend_97 { pt3dadd( 129.897, 35.928, 0.121536, 2.05 ) }
    dend_97 { pt3dadd( 131.548, 36.6525, 0.266534, 2.05 ) }
    dend_97 { pt3dadd( 134.391, 37.9936, 0.652397, 0.68 ) }
    dend_97 { pt3dadd( 136.175, 38.869, 0.937518, 1.36 ) }
    dend_97 { pt3dadd( 139.35, 40.4252, 1.46496, 2.27 ) }
    dend_97 { pt3dadd( 141.941, 41.6831, 1.92771, 0.68 ) }
    dend_97 { pt3dadd( 144.709, 42.8938, 2.41357, 0.68 ) }
    dend_97 { pt3dadd( 146.495, 43.633, 2.71283, 1.59 ) }
    dend_97 { pt3dadd( 147.929, 44.2218, 2.96465, 2.73 ) }
    dend_97 { pt3dadd( 150.319, 45.2671, 3.38419, 2.5 ) }
    dend_97 { pt3dadd( 152.924, 46.4818, 3.82122, 1.14 ) }
    dend_97 { pt3dadd( 156.573, 48.0704, 4.39729, 0.68 ) }
    dend_97 { pt3dadd( 159.694, 49.2775, 4.69612, 1.14 ) }
    dend_97 { pt3dadd( 162.434, 50.2343, 4.93306, 0.45 ) }
    // Section: dend_95, id: dend_95, parent: dend_87 (entry count 49/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 104.008, 27.8549, 9.98251, 0.23 ) }
    dend_95 { pt3dadd( 106.263, 27.4322, 11.3406, 0.23 ) }
    dend_95 { pt3dadd( 108.36, 27.2815, 12.6605, 0.68 ) }
    dend_95 { pt3dadd( 109.752, 27.3272, 13.655, 0.68 ) }
    dend_95 { pt3dadd( 111.218, 27.4922, 14.8062, 1.59 ) }
    dend_95 { pt3dadd( 112.395, 27.7435, 15.7836, 0.45 ) }
    dend_95 { pt3dadd( 113.686, 28.0363, 16.8583, 0.45 ) }
    dend_95 { pt3dadd( 114.574, 28.3242, 17.6005, 0.45 ) }
    dend_95 { pt3dadd( 116.211, 28.9034, 18.834, 1.14 ) }
    dend_95 { pt3dadd( 117.999, 29.4688, 20.032, 0.23 ) }
    dend_95 { pt3dadd( 119.547, 29.8966, 20.9869, 1.36 ) }
    dend_95 { pt3dadd( 120.932, 30.1884, 21.7449, 0.23 ) }
    dend_95 { pt3dadd( 122.116, 30.3113, 22.2933, 0.68 ) }
    dend_95 { pt3dadd( 123.529, 30.3671, 22.9435, 0.23 ) }
    dend_95 { pt3dadd( 124.898, 30.3627, 23.5291, 1.36 ) }
    dend_95 { pt3dadd( 127.44, 30.3009, 24.5787, 0.23 ) }
    dend_95 { pt3dadd( 128.694, 30.2459, 25.0837, 1.14 ) }
    dend_95 { pt3dadd( 131.988, 30.1367, 26.481, 0.23 ) }
    dend_95 { pt3dadd( 133.329, 30.0592, 27.149, 0.23 ) }
    dend_95 { pt3dadd( 134.096, 30.0275, 27.5748, 0.23 ) }
    dend_95 { pt3dadd( 135.562, 30.0186, 28.5144, 2.27 ) }
    dend_95 { pt3dadd( 137.096, 30.0974, 29.6048, 1.36 ) }
    dend_95 { pt3dadd( 139.523, 30.2655, 31.4632, 0.23 ) }
    dend_95 { pt3dadd( 141.615, 30.4931, 33.1253, 0.23 ) }
    dend_95 { pt3dadd( 143.152, 30.7271, 34.3325, 0.68 ) }
    dend_95 { pt3dadd( 145.702, 31.2183, 36.3704, 0.23 ) }
    dend_95 { pt3dadd( 147.006, 31.5389, 37.4652, 0.23 ) }
    dend_95 { pt3dadd( 148.103, 31.9061, 38.3912, 1.14 ) }
    dend_95 { pt3dadd( 149.807, 32.6059, 39.7553, 0.23 ) }
    dend_95 { pt3dadd( 151.131, 33.1928, 40.6887, 2.27 ) }
    dend_95 { pt3dadd( 152.25, 33.6509, 41.4197, 2.27 ) }
    dend_95 { pt3dadd( 154.537, 34.616, 42.7826, 0.23 ) }
    dend_95 { pt3dadd( 155.66, 35.0596, 43.4274, 0.91 ) }
    dend_95 { pt3dadd( 157.481, 35.7856, 44.4162, 0.23 ) }
    dend_95 { pt3dadd( 159.133, 36.3827, 45.2836, 1.36 ) }
    dend_95 { pt3dadd( 161.386, 37.1057, 46.404, 0.23 ) }
    dend_95 { pt3dadd( 162.882, 37.514, 47.115, 1.14 ) }
    dend_95 { pt3dadd( 165.306, 38.0761, 48.3123, 0.23 ) }
    dend_95 { pt3dadd( 167.192, 38.3315, 49.5046, 1.36 ) }
    dend_95 { pt3dadd( 168.97, 38.427, 50.8235, 0.23 ) }
    dend_95 { pt3dadd( 170.288, 38.3053, 52.003, 1.36 ) }
    dend_95 { pt3dadd( 172.411, 37.7567, 54.3118, 0.23 ) }
    dend_95 { pt3dadd( 174.258, 36.9843, 56.7614, 1.82 ) }
    dend_95 { pt3dadd( 177.048, 35.488, 61.2797, 0.23 ) }
    dend_95 { pt3dadd( 178.087, 34.8477, 63.1686, 2.05 ) }
    dend_95 { pt3dadd( 179.693, 33.7868, 66.2872, 0.68 ) }
    dend_95 { pt3dadd( 181.847, 32.3642, 70.611, 1.14 ) }
    dend_95 { pt3dadd( 183.557, 31.3917, 73.8498, 1.36 ) }
    dend_95 { pt3dadd( 184.634, 30.8927, 75.7165, 0.23 ) }
    dend_95 { pt3dadd( 185.601, 30.555, 77.4188, 0.23 ) }
    dend_95 { pt3dadd( 186.432, 30.2905, 79.0588, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_95 { pt3dadd( 187.424, 30.1152, 81.2601, 0.91 ) }
    dend_95 { pt3dadd( 188.189, 29.9734, 83.4489, 0.91 ) }
    dend_95 { pt3dadd( 189.058, 29.739, 86.7488, 0.23 ) }
    dend_95 { pt3dadd( 189.544, 29.5075, 89.3474, 0.23 ) }
    dend_95 { pt3dadd( 189.759, 29.3405, 91.5617, 1.82 ) }
    dend_95 { pt3dadd( 189.851, 29.198, 93.6026, 0.45 ) }
    dend_95 { pt3dadd( 189.933, 28.9897, 96.1233, 1.36 ) }
    dend_95 { pt3dadd( 190.089, 28.6695, 98.5941, 0.23 ) }
    dend_95 { pt3dadd( 190.254, 28.5372, 99.8492, 1.36 ) }
    dend_95 { pt3dadd( 190.586, 28.328, 101.687, 0.23 ) }
    dend_95 { pt3dadd( 191.063, 28.0717, 104.052, 1.36 ) }
    dend_95 { pt3dadd( 191.771, 27.6081, 107.43, 0.23 ) }
    dend_95 { pt3dadd( 192.297, 27.1215, 110.461, 2.05 ) }
    dend_95 { pt3dadd( 192.72, 26.5113, 113.385, 0.68 ) }
    dend_95 { pt3dadd( 193.257, 25.6104, 117.517, 1.59 ) }
    dend_95 { pt3dadd( 193.401, 25.3006, 118.866, 1.59 ) }
    dend_95 { pt3dadd( 193.678, 24.4526, 122.524, 0.23 ) }
    dend_95 { pt3dadd( 193.738, 23.9403, 124.628, 0.23 ) }
    dend_95 { pt3dadd( 193.682, 22.9523, 128.549, 0.23 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 19/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 104.008, 27.8549, 9.98251, 0.23 ) }
    dend_88 { pt3dadd( 103.248, 30.811, 11.2303, 0.23 ) }
    dend_88 { pt3dadd( 102.888, 32.294, 11.8303, 1.14 ) }
    dend_88 { pt3dadd( 102.548, 33.7928, 12.4338, 0.23 ) }
    dend_88 { pt3dadd( 101.962, 36.2465, 13.4297, 1.14 ) }
    dend_88 { pt3dadd( 101.45, 38.2887, 14.2638, 0.23 ) }
    dend_88 { pt3dadd( 100.828, 40.6903, 15.2498, 0.68 ) }
    dend_88 { pt3dadd( 100.091, 43.697, 16.4424, 0.23 ) }
    dend_88 { pt3dadd( 99.8192, 44.8779, 16.9138, 2.27 ) }
    dend_88 { pt3dadd( 99.1031, 48.3997, 18.3844, 0.91 ) }
    dend_88 { pt3dadd( 98.9184, 49.3872, 18.8167, 0.91 ) }
    dend_88 { pt3dadd( 98.6632, 50.9148, 19.5083, 1.59 ) }
    dend_88 { pt3dadd( 98.303, 53.8056, 20.9161, 0.23 ) }
    dend_88 { pt3dadd( 98.2072, 55.0518, 21.5153, 0.23 ) }
    dend_88 { pt3dadd( 98.1404, 57.2742, 22.5784, 2.05 ) }
    dend_88 { pt3dadd( 98.1787, 58.4709, 23.0557, 2.05 ) }
    dend_88 { pt3dadd( 98.3537, 60.9247, 23.8632, 0.23 ) }
    dend_88 { pt3dadd( 98.5625, 62.7805, 24.2905, 0.91 ) }
    dend_88 { pt3dadd( 98.8152, 64.2772, 24.4537, 0.68 ) }
    dend_88 { pt3dadd( 99.3967, 66.8623, 24.5104, 0.23 ) }
    dend_88 { pt3dadd( 100.472, 70.3267, 24.2919, 1.14 ) }
    dend_88 { pt3dadd( 101.383, 72.5271, 23.9294, 0.23 ) }
    dend_88 { pt3dadd( 102.596, 74.6819, 23.327, 0.23 ) }
    dend_88 { pt3dadd( 104.316, 77.0653, 22.4659, 1.36 ) }
    dend_88 { pt3dadd( 105.033, 77.8332, 22.158, 1.82 ) }
    dend_88 { pt3dadd( 106.222, 78.8018, 21.6907, 0.45 ) }
    dend_88 { pt3dadd( 108.562, 80.348, 21.0038, 0.91 ) }
    dend_88 { pt3dadd( 110.108, 81.2544, 20.6059, 0.23 ) }
    dend_88 { pt3dadd( 111.933, 82.2419, 20.2652, 0.91 ) }
    dend_88 { pt3dadd( 113.379, 82.9905, 20.0693, 0.23 ) }
    dend_88 { pt3dadd( 115.554, 84.1718, 19.8758, 1.36 ) }
    dend_88 { pt3dadd( 117.333, 85.2922, 19.731, 0.23 ) }
    dend_88 { pt3dadd( 118.531, 86.1181, 19.6672, 1.36 ) }
    dend_88 { pt3dadd( 119.897, 87.1345, 19.5426, 1.82 ) }
    dend_88 { pt3dadd( 121.573, 88.4041, 19.4093, 1.82 ) }
    dend_88 { pt3dadd( 123.797, 90.2182, 19.291, 0.45 ) }
    dend_88 { pt3dadd( 126.424, 92.6649, 19.2768, 1.14 ) }
    dend_88 { pt3dadd( 129.013, 95.5865, 19.4156, 0.23 ) }
    dend_88 { pt3dadd( 130.827, 98.2112, 19.7676, 1.14 ) }
    dend_88 { pt3dadd( 131.684, 100.036, 20.1869, 2.05 ) }
    dend_88 { pt3dadd( 132.075, 101.607, 20.7056, 2.05 ) }
    dend_88 { pt3dadd( 132.216, 103.917, 21.6097, 2.05 ) }
    dend_88 { pt3dadd( 132.061, 106.368, 22.7087, 0.91 ) }
    dend_88 { pt3dadd( 131.751, 108.373, 23.5213, 1.59 ) }
    dend_88 { pt3dadd( 131.353, 110.679, 24.3614, 0.23 ) }
    dend_88 { pt3dadd( 131.014, 112.863, 25.0271, 1.36 ) }
    dend_88 { pt3dadd( 130.663, 115.399, 25.7589, 0.23 ) }
    dend_88 { pt3dadd( 130.53, 116.357, 26.0283, 0.91 ) }
    dend_88 { pt3dadd( 130.083, 119.285, 26.8448, 0.23 ) }
    dend_88 { pt3dadd( 129.862, 120.538, 27.1809, 1.36 ) }
    dend_88 { pt3dadd( 129.115, 124.261, 28.1901, 0.23 ) }
    dend_88 { pt3dadd( 128.331, 127.417, 29.178, 2.27 ) }
    dend_88 { pt3dadd( 127.764, 129.404, 29.924, 0.23 ) }
    dend_88 { pt3dadd( 127.293, 130.913, 30.547, 1.14 ) }
    dend_88 { pt3dadd( 126.928, 132.056, 31.0716, 0.23 ) }
    dend_88 { pt3dadd( 126.561, 133.303, 31.6412, 1.14 ) }
    dend_88 { pt3dadd( 126.108, 135.545, 32.6434, 0.23 ) }
    dend_88 { pt3dadd( 125.921, 137.667, 33.5246, 0.91 ) }
    dend_88 { pt3dadd( 125.961, 139.195, 34.1105, 0.23 ) }
    dend_88 { pt3dadd( 126.104, 140.808, 34.5879, 2.05 ) }
    dend_88 { pt3dadd( 126.357, 142.998, 35.1581, 0.68 ) }
    dend_88 { pt3dadd( 126.641, 144.953, 35.5936, 0.68 ) }
    dend_88 { pt3dadd( 127.017, 147.419, 36.0425, 1.59 ) }
    dend_88 { pt3dadd( 127.419, 150.054, 36.4368, 0.23 ) }
    dend_88 { pt3dadd( 127.996, 153.458, 36.7869, 1.36 ) }
    dend_88 { pt3dadd( 128.37, 155.353, 36.9227, 0.23 ) }
    dend_88 { pt3dadd( 128.997, 157.984, 37.0822, 1.36 ) }
    dend_88 { pt3dadd( 129.658, 160.478, 37.2609, 0.23 ) }
    dend_88 { pt3dadd( 130.397, 163.168, 37.563, 1.36 ) }
    dend_88 { pt3dadd( 131.358, 166.621, 38.0589, 0.23 ) }
    dend_88 { pt3dadd( 131.851, 168.351, 38.3781, 0.91 ) }
    dend_88 { pt3dadd( 132.752, 171.656, 39.0159, 0.23 ) }
    dend_88 { pt3dadd( 133.395, 174.215, 39.5762, 0.91 ) }
    dend_88 { pt3dadd( 134.347, 178.614, 40.7161, 0.23 ) }
    dend_88 { pt3dadd( 134.6, 180.367, 41.2491, 0.23 ) }
    dend_88 { pt3dadd( 134.738, 181.888, 41.7796, 1.14 ) }
    dend_88 { pt3dadd( 134.797, 183.711, 42.4209, 0.23 ) }
    dend_88 { pt3dadd( 134.772, 184.752, 42.7842, 1.36 ) }
    dend_88 { pt3dadd( 134.693, 186.172, 43.2623, 1.36 ) }
    dend_88 { pt3dadd( 134.613, 188.936, 44.0761, 0.23 ) }
    dend_88 { pt3dadd( 137.451, 199.569, 46.7447, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_88 { pt3dadd( 139.279, 210.629, 48.344, 0.23 ) }
    dend_88 { pt3dadd( 140.02, 221.835, 49.7782, 0.23 ) }
    dend_88 { pt3dadd( 142.621, 232.862, 48.8332, 0.23 ) }
    dend_88 { pt3dadd( 146.215, 243.484, 50.5286, 0.23 ) }
    dend_88 { pt3dadd( 148.964, 254.386, 51.9544, 0.23 ) }
    dend_88 { pt3dadd( 150.288, 265.627, 52.5422, 0.23 ) }
    dend_88 { pt3dadd( 153.244, 276.519, 53.6479, 0.23 ) }
    dend_88 { pt3dadd( 158.283, 286.441, 55.9324, 0.23 ) }
    dend_88 { pt3dadd( 163.799, 296.363, 56.7709, 0.23 ) }
    dend_88 { pt3dadd( 170.148, 305.356, 59.6892, 0.23 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 10/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 83.2515, -109.691, 47.3162, 0.91 ) }
    dend_79 { pt3dadd( 83.6699, -112.304, 48.8374, 0.91 ) }
    dend_79 { pt3dadd( 83.9926, -114.171, 49.9343, 1.36 ) }
    dend_79 { pt3dadd( 84.2172, -115.406, 50.64, 0.23 ) }
    dend_79 { pt3dadd( 84.5117, -116.823, 51.4379, 1.14 ) }
    dend_79 { pt3dadd( 85.0958, -119.138, 52.7167, 0.23 ) }
    dend_79 { pt3dadd( 85.9414, -122.163, 54.3462, 1.82 ) }
    dend_79 { pt3dadd( 87.0432, -125.59, 56.0413, 0.23 ) }
    dend_79 { pt3dadd( 87.5539, -126.805, 56.6271, 0.91 ) }
    dend_79 { pt3dadd( 87.924, -127.513, 56.986, 0.91 ) }
    dend_79 { pt3dadd( 88.7258, -128.761, 57.6545, 0.23 ) }
    dend_79 { pt3dadd( 89.3708, -129.547, 58.1284, 0.23 ) }
    dend_79 { pt3dadd( 90.0129, -130.101, 58.5477, 0.23 ) }
    dend_79 { pt3dadd( 91.8893, -131.268, 59.526, 0.91 ) }
    dend_79 { pt3dadd( 92.9497, -131.834, 60.0417, 0.23 ) }
    dend_79 { pt3dadd( 94.188, -132.442, 60.6014, 1.14 ) }
    dend_79 { pt3dadd( 96.7723, -133.487, 61.6048, 0.23 ) }
    dend_79 { pt3dadd( 97.6178, -133.778, 61.8726, 0.91 ) }
    dend_79 { pt3dadd( 100.157, -134.543, 62.4791, 0.23 ) }
    dend_79 { pt3dadd( 101.467, -134.906, 62.6347, 0.23 ) }
    dend_79 { pt3dadd( 102.934, -135.287, 62.6568, 0.91 ) }
    dend_79 { pt3dadd( 104.936, -135.853, 62.55, 0.23 ) }
    dend_79 { pt3dadd( 105.733, -136.113, 62.472, 1.14 ) }
    dend_79 { pt3dadd( 107.404, -136.773, 62.3318, 0.23 ) }
    dend_79 { pt3dadd( 109.233, -137.605, 62.2049, 1.14 ) }
    dend_79 { pt3dadd( 111.222, -138.617, 62.1126, 0.23 ) }
    dend_79 { pt3dadd( 113.962, -140.116, 62.0584, 1.82 ) }
    dend_79 { pt3dadd( 115.942, -141.256, 62.1588, 0.23 ) }
    dend_79 { pt3dadd( 117.892, -142.371, 62.3687, 0.23 ) }
    dend_79 { pt3dadd( 119.236, -143.145, 62.597, 1.14 ) }
    dend_79 { pt3dadd( 120.85, -144.09, 62.9663, 0.23 ) }
    dend_79 { pt3dadd( 123.001, -145.388, 63.5282, 1.59 ) }
    dend_79 { pt3dadd( 125.445, -146.887, 64.1179, 0.23 ) }
    dend_79 { pt3dadd( 127.661, -148.307, 64.5892, 1.36 ) }
    dend_79 { pt3dadd( 129.399, -149.469, 64.9093, 0.23 ) }
    dend_79 { pt3dadd( 130.821, -150.509, 65.1066, 0.91 ) }
    dend_79 { pt3dadd( 131.91, -151.407, 65.2102, 0.23 ) }
    dend_79 { pt3dadd( 134.153, -153.493, 65.3142, 1.82 ) }
    dend_79 { pt3dadd( 136.211, -155.594, 65.3012, 0.23 ) }
    dend_79 { pt3dadd( 137.038, -156.471, 65.2821, 0.91 ) }
    dend_79 { pt3dadd( 138.802, -158.388, 65.237, 0.23 ) }
    dend_79 { pt3dadd( 140.29, -160.041, 65.252, 0.91 ) }
    dend_79 { pt3dadd( 141.762, -161.726, 65.3395, 0.23 ) }
    dend_79 { pt3dadd( 143.201, -163.456, 65.5143, 1.36 ) }
    dend_79 { pt3dadd( 144.76, -165.418, 65.7931, 0.23 ) }
    dend_79 { pt3dadd( 146.185, -167.233, 66.1891, 1.14 ) }
    dend_79 { pt3dadd( 148.123, -169.754, 66.9248, 0.23 ) }
    dend_79 { pt3dadd( 149.556, -171.683, 67.4751, 1.36 ) }
    dend_79 { pt3dadd( 149.887, -172.156, 67.6072, 1.36 ) }
    dend_79 { pt3dadd( 151.563, -174.511, 68.3117, 0.23 ) }
    dend_79 { pt3dadd( 153.204, -176.84, 69.0288, 2.95 ) }
    dend_79 { pt3dadd( 155.064, -179.4, 69.8519, 0.23 ) }
    dend_79 { pt3dadd( 156.746, -181.545, 70.6271, 0.68 ) }
    dend_79 { pt3dadd( 158.123, -183.177, 71.2497, 0.23 ) }
    dend_79 { pt3dadd( 159.99, -185.153, 72.048, 0.23 ) }
    dend_79 { pt3dadd( 161.688, -186.726, 72.6969, 2.27 ) }
    dend_79 { pt3dadd( 163.883, -188.482, 73.4733, 0.23 ) }
    dend_79 { pt3dadd( 166.189, -190.073, 74.2934, 0.91 ) }
    dend_79 { pt3dadd( 167.616, -190.947, 74.8364, 0.91 ) }
    dend_79 { pt3dadd( 170.427, -192.531, 75.8405, 0.23 ) }
    dend_79 { pt3dadd( 172.512, -193.691, 76.5808, 1.59 ) }
    dend_79 { pt3dadd( 174.255, -194.63, 77.2004, 0.23 ) }
    dend_79 { pt3dadd( 176.005, -195.586, 77.8225, 0.91 ) }
    dend_79 { pt3dadd( 178.266, -196.874, 78.6249, 0.23 ) }
    dend_79 { pt3dadd( 179.259, -197.465, 79.0134, 1.14 ) }
    dend_79 { pt3dadd( 181.755, -199.095, 80.1268, 0.23 ) }
    dend_79 { pt3dadd( 182.71, -199.792, 80.6433, 0.23 ) }
    dend_79 { pt3dadd( 184.36, -201.112, 81.6905, 1.82 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 78/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 83.2515, -109.691, 47.3162, 0.23 ) }
    dend_78 { pt3dadd( 84.227, -112.732, 48.278, 0.23 ) }
    dend_78 { pt3dadd( 84.5723, -113.811, 48.6195, 0.68 ) }
    dend_78 { pt3dadd( 85.1049, -115.505, 49.1596, 0.23 ) }
    dend_78 { pt3dadd( 85.3793, -116.4, 49.4474, 0.91 ) }
    dend_78 { pt3dadd( 85.6954, -117.465, 49.7439, 0.23 ) }
    dend_78 { pt3dadd( 85.8349, -118.054, 49.8779, 1.14 ) }
    dend_78 { pt3dadd( 85.9452, -118.766, 50.0072, 0.23 ) }
    dend_78 { pt3dadd( 86.1157, -120.253, 50.2348, 0.91 ) }
    dend_78 { pt3dadd( 86.1928, -121.138, 50.3617, 0.23 ) }
    dend_78 { pt3dadd( 86.3664, -123.623, 50.6669, 1.36 ) }
    dend_78 { pt3dadd( 86.4389, -126.236, 50.9258, 1.36 ) }
    dend_78 { pt3dadd( 86.3921, -127.112, 50.9876, 0.23 ) }
    dend_78 { pt3dadd( 86.3256, -127.975, 51.0419, 0.91 ) }
    dend_78 { pt3dadd( 86.1077, -130.095, 51.1531, 0.23 ) }
    dend_78 { pt3dadd( 85.7735, -132.723, 51.2863, 0.91 ) }
    dend_78 { pt3dadd( 85.3421, -135.37, 51.4496, 0.23 ) }
    dend_78 { pt3dadd( 84.8688, -138.285, 51.5997, 0.68 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 96/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 109.485, -104.292, 72.2647, 0.23 ) }
    dend_72 { pt3dadd( 110.291, -106.922, 72.2934, 0.23 ) }
    dend_72 { pt3dadd( 110.904, -108.924, 72.3153, 1.36 ) }
    dend_72 { pt3dadd( 111.406, -110.562, 72.3332, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_72 { pt3dadd( 112.233, -113.264, 72.3628, 2.73 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 1/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 109.485, -104.292, 72.2647, 0.23 ) }
    dend_69 { pt3dadd( 113.161, -104.602, 72.19, 0.23 ) }
    dend_69 { pt3dadd( 115.226, -104.835, 72.1117, 0.23 ) }
    dend_69 { pt3dadd( 117.429, -105.077, 71.809, 0.91 ) }
    dend_69 { pt3dadd( 119.104, -105.252, 71.4596, 0.23 ) }
    dend_69 { pt3dadd( 120.458, -105.374, 71.1537, 1.36 ) }
    dend_69 { pt3dadd( 123.258, -105.615, 70.5345, 0.23 ) }
    dend_69 { pt3dadd( 125.231, -105.806, 70.1065, 0.91 ) }
    dend_69 { pt3dadd( 128.741, -106.302, 69.3434, 0.23 ) }
    dend_69 { pt3dadd( 132.163, -106.918, 68.6555, 0.68 ) }
    dend_69 { pt3dadd( 133.816, -107.245, 68.378, 0.23 ) }
    dend_69 { pt3dadd( 135.476, -107.635, 68.1503, 0.91 ) }
    dend_69 { pt3dadd( 137.152, -108.068, 68.0362, 0.91 ) }
    dend_69 { pt3dadd( 139.459, -108.786, 68.1681, 0.23 ) }
    dend_69 { pt3dadd( 141.078, -109.359, 68.4627, 0.91 ) }
    dend_69 { pt3dadd( 142.14, -109.762, 68.7243, 0.91 ) }
    dend_69 { pt3dadd( 144.203, -110.516, 69.2547, 0.23 ) }
    dend_69 { pt3dadd( 146.743, -111.261, 70.0138, 0.23 ) }
    dend_69 { pt3dadd( 148.918, -111.793, 70.6947, 0.91 ) }
    dend_69 { pt3dadd( 149.525, -111.908, 70.9002, 1.14 ) }
    dend_69 { pt3dadd( 150.611, -112.077, 71.297, 1.14 ) }
    dend_69 { pt3dadd( 152.688, -112.377, 72.144, 1.14 ) }
    dend_69 { pt3dadd( 154.879, -112.543, 73.1815, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 101.486, -126.869, 65.1897, 0.45 ) }
    dend_59 { pt3dadd( 98.606, -127.119, 69.7852, 0.45 ) }
    dend_59 { pt3dadd( 94.9563, -127.138, 74.3569, 0.45 ) }
    dend_59 { pt3dadd( 93.8761, -127.063, 75.4719, 0.45 ) }
    dend_59 { pt3dadd( 92.4927, -126.846, 76.7809, 0.45 ) }
    dend_59 { pt3dadd( 89.9775, -126.193, 78.9884, 0.45 ) }
    dend_59 { pt3dadd( 88.2207, -125.536, 80.8301, 1.14 ) }
    dend_59 { pt3dadd( 86.2071, -124.552, 83.1533, 0.23 ) }
    dend_59 { pt3dadd( 85.1582, -123.885, 84.9031, 0.68 ) }
    dend_59 { pt3dadd( 83.5831, -122.628, 88.0182, 0.23 ) }
    dend_59 { pt3dadd( 82.1949, -121.109, 91.7469, 2.05 ) }
    dend_59 { pt3dadd( 80.8434, -118.769, 97.7653, 0.45 ) }
    dend_59 { pt3dadd( 80.4297, -117.391, 101.829, 0.91 ) }
    dend_59 { pt3dadd( 80.4922, -116.344, 106.183, 0.23 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 38/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 101.486, -126.869, 65.1897, 0.23 ) }
    dend_58 { pt3dadd( 103.238, -128.702, 65.535, 0.23 ) }
    dend_58 { pt3dadd( 105.364, -130.623, 66.0665, 0.23 ) }
    dend_58 { pt3dadd( 107.585, -132.514, 66.6554, 1.36 ) }
    dend_58 { pt3dadd( 109.427, -134.084, 67.2713, 0.23 ) }
    dend_58 { pt3dadd( 110.058, -134.629, 67.5059, 0.91 ) }
    dend_58 { pt3dadd( 112.504, -136.838, 68.6637, 0.23 ) }
    dend_58 { pt3dadd( 113.153, -137.429, 69.0359, 1.14 ) }
    dend_58 { pt3dadd( 114.395, -138.654, 69.8788, 0.23 ) }
    dend_58 { pt3dadd( 115.44, -139.827, 70.6581, 2.5 ) }
    dend_58 { pt3dadd( 116.113, -140.688, 71.2145, 2.5 ) }
    dend_58 { pt3dadd( 118.721, -144.311, 73.3835, 0.23 ) }
    dend_58 { pt3dadd( 120.296, -146.72, 74.7583, 0.23 ) }
    dend_58 { pt3dadd( 121.005, -147.867, 75.3783, 2.5 ) }
    dend_58 { pt3dadd( 122.486, -150.474, 76.6512, 0.68 ) }
    dend_58 { pt3dadd( 123.648, -152.573, 77.5447, 0.68 ) }
    dend_58 { pt3dadd( 124.19, -153.594, 77.9345, 1.82 ) }
    dend_58 { pt3dadd( 125.653, -156.537, 78.8335, 0.45 ) }
    dend_58 { pt3dadd( 126.61, -158.519, 79.3666, 1.59 ) }
    dend_58 { pt3dadd( 127.684, -160.877, 79.9236, 0.23 ) }
    dend_58 { pt3dadd( 128.075, -161.894, 80.1209, 0.23 ) }
    dend_58 { pt3dadd( 128.469, -163.201, 80.3645, 0.91 ) }
    dend_58 { pt3dadd( 128.747, -164.325, 80.6292, 0.91 ) }
    dend_58 { pt3dadd( 129.069, -165.774, 81.024, 0.91 ) }
    dend_58 { pt3dadd( 129.531, -168.265, 81.9251, 1.82 ) }
    dend_58 { pt3dadd( 129.805, -170.229, 82.7018, 0.45 ) }
    dend_58 { pt3dadd( 129.94, -171.529, 83.2155, 0.91 ) }
    dend_58 { pt3dadd( 130.108, -173.031, 83.8323, 0.23 ) }
    dend_58 { pt3dadd( 130.419, -174.847, 84.6143, 1.14 ) }
    dend_58 { pt3dadd( 130.775, -176.287, 85.2707, 0.23 ) }
    dend_58 { pt3dadd( 131.142, -177.506, 85.8082, 0.91 ) }
    dend_58 { pt3dadd( 131.778, -179.237, 86.565, 0.23 ) }
    dend_58 { pt3dadd( 132.608, -181.154, 87.4466, 2.5 ) }
    dend_58 { pt3dadd( 133.799, -183.515, 88.5027, 0.23 ) }
    dend_58 { pt3dadd( 134.591, -184.915, 89.1263, 1.14 ) }
    dend_58 { pt3dadd( 135.961, -187.154, 90.0769, 0.23 ) }
    dend_58 { pt3dadd( 136.592, -188.125, 90.4689, 0.23 ) }
    dend_58 { pt3dadd( 138.2, -190.415, 91.3229, 0.91 ) }
    dend_58 { pt3dadd( 139.833, -192.564, 91.9883, 0.23 ) }
    dend_58 { pt3dadd( 140.96, -193.909, 92.3477, 0.23 ) }
    dend_58 { pt3dadd( 142.081, -195.117, 92.6309, 2.5 ) }
    dend_58 { pt3dadd( 144.716, -197.71, 93.1768, 0.23 ) }
    dend_58 { pt3dadd( 145.332, -198.326, 93.2862, 0.91 ) }
    dend_58 { pt3dadd( 147.295, -200.343, 93.5443, 0.23 ) }
    dend_58 { pt3dadd( 148.583, -201.698, 93.7141, 1.36 ) }
    dend_58 { pt3dadd( 149.705, -202.912, 93.8533, 1.36 ) }
    dend_58 { pt3dadd( 151.099, -204.525, 94.0528, 0.23 ) }
    dend_58 { pt3dadd( 152.132, -205.998, 94.0783, 0.91 ) }
    dend_58 { pt3dadd( 153.067, -207.684, 93.942, 0.23 ) }
    dend_58 { pt3dadd( 153.668, -209.089, 93.7282, 0.68 ) }
    dend_58 { pt3dadd( 154.078, -210.188, 93.5036, 0.23 ) }
    dend_58 { pt3dadd( 154.831, -212.256, 93.0236, 2.27 ) }
    dend_58 { pt3dadd( 156.848, -217.142, 91.7032, 0.23 ) }
    dend_58 { pt3dadd( 158.229, -220.117, 90.8157, 1.36 ) }
    dend_58 { pt3dadd( 159.02, -221.663, 90.3782, 0.23 ) }
    dend_58 { pt3dadd( 159.441, -222.421, 90.1817, 0.91 ) }
    dend_58 { pt3dadd( 160.923, -224.935, 89.6583, 0.23 ) }
    dend_58 { pt3dadd( 162.567, -227.582, 89.2747, 2.5 ) }
    dend_58 { pt3dadd( 163.053, -228.3, 89.3026, 2.5 ) }
    dend_58 { pt3dadd( 165.883, -232.208, 89.8282, 0.23 ) }
    dend_58 { pt3dadd( 166.774, -233.357, 90.0447, 1.59 ) }
    dend_58 { pt3dadd( 168.964, -236.07, 90.6975, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_58 { pt3dadd( 170.194, -237.437, 91.17, 2.5 ) }
    dend_58 { pt3dadd( 173.036, -240.537, 92.4567, 0.23 ) }
    dend_58 { pt3dadd( 174.106, -241.592, 92.9664, 1.36 ) }
    dend_58 { pt3dadd( 175.485, -242.657, 93.6643, 0.23 ) }
    dend_58 { pt3dadd( 177.196, -243.734, 94.5299, 0.23 ) }
    dend_58 { pt3dadd( 179.794, -244.867, 95.8414, 0.91 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 82.2503, 11.1143, 51.6765, 0.68 ) }
    dend_53 { pt3dadd( 83.0121, 13.4564, 51.7634, 0.68 ) }
    dend_53 { pt3dadd( 83.6517, 15.1767, 51.8529, 0.68 ) }
    dend_53 { pt3dadd( 83.9206, 15.9131, 51.895, 1.59 ) }
    dend_53 { pt3dadd( 84.3533, 17.2922, 52.0201, 0.23 ) }
    dend_53 { pt3dadd( 85.2809, 21.0937, 52.4121, 0.23 ) }
    dend_53 { pt3dadd( 85.8303, 24.4292, 53.0343, 1.36 ) }
    dend_53 { pt3dadd( 85.9784, 25.8121, 53.4656, 0.23 ) }
    dend_53 { pt3dadd( 86.097, 27.2164, 54.0046, 1.14 ) }
    dend_53 { pt3dadd( 86.3134, 29.4417, 54.9452, 0.23 ) }
    dend_53 { pt3dadd( 86.4971, 31.1826, 55.7021, 1.36 ) }
    dend_53 { pt3dadd( 87.1657, 35.7543, 57.6732, 0.23 ) }
    dend_53 { pt3dadd( 87.9879, 39.9888, 59.4678, 1.14 ) }
    dend_53 { pt3dadd( 88.1895, 40.7141, 59.7682, 0.23 ) }
    dend_53 { pt3dadd( 88.8032, 42.348, 60.3833, 1.14 ) }
    dend_53 { pt3dadd( 90.0398, 45.0279, 61.1691, 0.23 ) }
    dend_53 { pt3dadd( 90.5698, 46.0222, 61.3818, 0.23 ) }
    dend_53 { pt3dadd( 91.6257, 47.8519, 61.463, 0.91 ) }
    dend_53 { pt3dadd( 92.639, 49.7996, 61.3487, 0.23 ) }
    dend_53 { pt3dadd( 92.9734, 50.5313, 61.2814, 0.91 ) }
    dend_53 { pt3dadd( 93.5313, 52.0657, 61.0473, 0.23 ) }
    dend_53 { pt3dadd( 94.0826, 53.7182, 60.6666, 1.14 ) }
    dend_53 { pt3dadd( 94.4086, 54.9225, 60.3116, 1.82 ) }
    dend_53 { pt3dadd( 94.925, 57.4762, 59.3344, 0.68 ) }
    dend_53 { pt3dadd( 95.0908, 58.4375, 58.9657, 1.14 ) }
    dend_53 { pt3dadd( 95.3642, 59.9823, 58.4483, 0.23 ) }
    dend_53 { pt3dadd( 95.4772, 60.7591, 58.2536, 1.36 ) }
    dend_53 { pt3dadd( 95.5575, 61.8519, 58.0291, 0.23 ) }
    dend_53 { pt3dadd( 95.6181, 63.3097, 57.8159, 1.14 ) }
    dend_53 { pt3dadd( 95.661, 65.4536, 57.5507, 0.23 ) }
    dend_53 { pt3dadd( 95.6613, 67.2639, 57.3778, 1.36 ) }
    dend_53 { pt3dadd( 95.6256, 69.0444, 57.194, 0.23 ) }
    dend_53 { pt3dadd( 95.5775, 70.2556, 57.0871, 2.05 ) }
    dend_53 { pt3dadd( 95.4927, 71.8083, 56.9425, 2.05 ) }
    dend_53 { pt3dadd( 95.3514, 73.4192, 56.7867, 0.68 ) }
    dend_53 { pt3dadd( 94.967, 76.6608, 56.4196, 0.23 ) }
    dend_53 { pt3dadd( 94.6873, 78.3007, 56.2426, 0.23 ) }
    dend_53 { pt3dadd( 94.2233, 80.7601, 56.0168, 1.59 ) }
    dend_53 { pt3dadd( 94.0693, 81.5556, 55.9566, 0.23 ) }
    dend_53 { pt3dadd( 93.7208, 83.3584, 55.802, 1.14 ) }
    dend_53 { pt3dadd( 93.22, 86.1204, 55.4464, 0.23 ) }
    dend_53 { pt3dadd( 93.0095, 87.535, 55.1943, 0.23 ) }
    dend_53 { pt3dadd( 92.6621, 90.4237, 54.7429, 1.36 ) }
    dend_53 { pt3dadd( 92.3774, 92.7838, 54.5265, 0.23 ) }
    dend_53 { pt3dadd( 92.1839, 94.6406, 54.364, 0.23 ) }
    dend_53 { pt3dadd( 92.0054, 96.7281, 54.1764, 1.14 ) }
    dend_53 { pt3dadd( 91.7202, 100.265, 53.9296, 0.23 ) }
    dend_53 { pt3dadd( 91.5258, 103.78, 53.8127, 0.91 ) }
    dend_53 { pt3dadd( 91.2355, 107.596, 53.9646, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 55/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 82.2503, 11.1143, 51.6765, 0.23 ) }
    dend_52 { pt3dadd( 85.273, 11.6176, 52.3523, 0.23 ) }
    dend_52 { pt3dadd( 86.7085, 12.0354, 52.805, 1.36 ) }
    dend_52 { pt3dadd( 89.7187, 13.0569, 53.8129, 0.23 ) }
    dend_52 { pt3dadd( 90.5632, 13.4555, 54.1941, 0.68 ) }
    dend_52 { pt3dadd( 93.3233, 14.8546, 55.561, 0.23 ) }
    dend_52 { pt3dadd( 95.7252, 16.011, 56.7619, 1.59 ) }
    dend_52 { pt3dadd( 98.6376, 17.5458, 58.4065, 0.23 ) }
    dend_52 { pt3dadd( 99.2432, 17.8624, 58.7763, 1.14 ) }
    dend_52 { pt3dadd( 103.261, 19.9609, 61.4507, 0.23 ) }
    dend_52 { pt3dadd( 104.535, 20.7002, 62.3253, 1.36 ) }
    dend_52 { pt3dadd( 106.53, 21.8929, 63.6376, 0.23 ) }
    dend_52 { pt3dadd( 107.755, 22.5458, 64.3934, 0.91 ) }
    dend_52 { pt3dadd( 110.703, 23.96, 66.0135, 0.23 ) }
    dend_52 { pt3dadd( 114.544, 25.8532, 67.9708, 1.14 ) }
    dend_52 { pt3dadd( 115.892, 26.4909, 68.5662, 0.23 ) }
    dend_52 { pt3dadd( 117.86, 27.6587, 69.533, 2.27 ) }
    dend_52 { pt3dadd( 119.565, 28.8231, 70.3713, 0.23 ) }
    dend_52 { pt3dadd( 121.292, 30.1581, 71.1514, 1.14 ) }
    dend_52 { pt3dadd( 123.389, 31.9931, 72.0974, 0.23 ) }
    dend_52 { pt3dadd( 124.362, 32.9649, 72.51, 1.36 ) }
    dend_52 { pt3dadd( 128.351, 37.6099, 74.5835, 0.23 ) }
    dend_52 { pt3dadd( 129.274, 38.8627, 75.2101, 1.59 ) }
    dend_52 { pt3dadd( 130.931, 41.4347, 76.6818, 0.23 ) }
    dend_52 { pt3dadd( 132.419, 44.2235, 78.5212, 1.36 ) }
    dend_52 { pt3dadd( 133.151, 45.9095, 79.692, 1.36 ) }
    dend_52 { pt3dadd( 134.35, 49.5639, 82.4005, 0.23 ) }
    dend_52 { pt3dadd( 134.997, 51.8919, 84.329, 0.23 ) }
    dend_52 { pt3dadd( 135.541, 54.0436, 86.2475, 0.23 ) }
    dend_52 { pt3dadd( 135.933, 55.9706, 88.01, 0.23 ) }
    dend_52 { pt3dadd( 136.081, 57.112, 88.9838, 0.23 ) }
    dend_52 { pt3dadd( 136.178, 59.1102, 90.651, 0.23 ) }
    dend_52 { pt3dadd( 136.188, 61.3439, 92.2286, 0.23 ) }
    dend_52 { pt3dadd( 136.169, 63.2316, 93.3428, 0.23 ) }
    dend_52 { pt3dadd( 136.244, 66.7644, 95.1893, 0.23 ) }
    dend_52 { pt3dadd( 136.3, 68.0445, 95.8745, 0.23 ) }
    dend_52 { pt3dadd( 136.271, 71.5398, 97.8779, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 92/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 18.4676, 80.5235, -21.7792, 0.23 ) }
    dend_31 { pt3dadd( 22.7537, 89.0828, -20.5532, 0.23 ) }
    dend_31 { pt3dadd( 27.09, 97.409, -18.2612, 0.23 ) }
    dend_31 { pt3dadd( 31.2363, 106.049, -17.1583, 0.23 ) }
    dend_31 { pt3dadd( 36.0799, 113.924, -14.275, 0.23 ) }
    dend_31 { pt3dadd( 39.6897, 122.081, -10.5382, 0.23 ) }
    dend_31 { pt3dadd( 44.3349, 129.024, -5.5637, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 18.4676, 80.5235, -21.7792, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_28 { pt3dadd( 25.9905, 90.3043, -22.796, 0.23 ) }
    dend_28 { pt3dadd( 32.0168, 100.541, -26.2179, 0.23 ) }
    dend_28 { pt3dadd( 37.4472, 111.219, -29.1855, 0.23 ) }
    dend_28 { pt3dadd( 42.674, 121.301, -34.0829, 0.23 ) }
    dend_28 { pt3dadd( 47.1612, 131.665, -39.093, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -120.365, -63.5863, 3.88985, 0.23 ) }
    dend_17 { pt3dadd( -121.638, -65.4658, 3.85383, 0.23 ) }
    dend_17 { pt3dadd( -121.908, -65.8736, 3.87492, 0.91 ) }
    dend_17 { pt3dadd( -123.339, -68.147, 4.07346, 0.23 ) }
    dend_17 { pt3dadd( -123.956, -69.1332, 4.1784, 0.23 ) }
    dend_17 { pt3dadd( -124.727, -70.3475, 4.32196, 1.59 ) }
    dend_17 { pt3dadd( -125.885, -72.2228, 4.58713, 0.23 ) }
    dend_17 { pt3dadd( -126.514, -73.2418, 4.8106, 0.45 ) }
    dend_17 { pt3dadd( -126.863, -73.8397, 4.95226, 1.14 ) }
    dend_17 { pt3dadd( -127.119, -74.3527, 5.08101, 1.14 ) }
    dend_17 { pt3dadd( -127.522, -75.2318, 5.28949, 1.14 ) }
    dend_17 { pt3dadd( -128.096, -76.5262, 5.56111, 0.91 ) }
    dend_17 { pt3dadd( -128.612, -77.6484, 5.75924, 0.23 ) }
    dend_17 { pt3dadd( -128.916, -78.2809, 5.84918, 0.23 ) }
    dend_17 { pt3dadd( -129.699, -79.9252, 6.00504, 0.45 ) }
    dend_17 { pt3dadd( -130.478, -81.4813, 6.08858, 0.23 ) }
    dend_17 { pt3dadd( -131.358, -83.0761, 6.23578, 0.91 ) }
    dend_17 { pt3dadd( -131.964, -84.0602, 6.35203, 1.14 ) }
    dend_17 { pt3dadd( -132.458, -84.8438, 6.47112, 0.23 ) }
    dend_17 { pt3dadd( -133.405, -86.3302, 6.76539, 2.5 ) }
    dend_17 { pt3dadd( -134.957, -88.6645, 7.31847, 0.23 ) }
    dend_17 { pt3dadd( -136.352, -90.7453, 7.85128, 1.82 ) }
    dend_17 { pt3dadd( -137.105, -91.8249, 8.15825, 1.82 ) }
    dend_17 { pt3dadd( -138.293, -93.4597, 8.65715, 0.23 ) }
    dend_17 { pt3dadd( -139.343, -94.8654, 9.10593, 0.23 ) }
    dend_17 { pt3dadd( -140.08, -95.8647, 9.4313, 1.82 ) }
    dend_17 { pt3dadd( -142.111, -98.6887, 10.229, 0.45 ) }
    dend_17 { pt3dadd( -143.287, -100.258, 10.573, 1.59 ) }
    dend_17 { pt3dadd( -144.733, -102.091, 10.9536, 0.23 ) }
    dend_17 { pt3dadd( -145.194, -102.624, 11.054, 1.14 ) }
    dend_17 { pt3dadd( -146.295, -103.824, 11.2432, 0.23 ) }
    dend_17 { pt3dadd( -147.757, -105.403, 11.4633, 1.82 ) }
    dend_17 { pt3dadd( -149.434, -107.159, 11.6243, 0.23 ) }
    dend_17 { pt3dadd( -150.501, -108.279, 11.7312, 0.23 ) }
    dend_17 { pt3dadd( -151.824, -109.693, 11.8867, 2.05 ) }
    dend_17 { pt3dadd( -153.283, -111.276, 12.0922, 0.68 ) }
    dend_17 { pt3dadd( -154.638, -112.783, 12.3137, 0.68 ) }
    dend_17 { pt3dadd( -156.26, -114.707, 12.6263, 0.68 ) }
    dend_17 { pt3dadd( -157.723, -116.569, 12.9813, 2.05 ) }
    dend_17 { pt3dadd( -158.407, -117.48, 13.1739, 2.5 ) }
    dend_17 { pt3dadd( -159.763, -119.327, 13.5836, 0.23 ) }
    dend_17 { pt3dadd( -160.241, -119.922, 13.7151, 0.91 ) }
    dend_17 { pt3dadd( -161.185, -121.026, 13.8738, 0.23 ) }
    dend_17 { pt3dadd( -162.368, -122.334, 13.9639, 0.45 ) }
    dend_17 { pt3dadd( -163.054, -123.04, 13.9423, 0.23 ) }
    dend_17 { pt3dadd( -165.195, -125.126, 13.7883, 2.05 ) }
    dend_17 { pt3dadd( -167.255, -127.103, 13.5631, 0.23 ) }
    dend_17 { pt3dadd( -168.97, -128.76, 13.2886, 0.23 ) }
    dend_17 { pt3dadd( -169.566, -129.368, 13.1654, 0.23 ) }
    dend_17 { pt3dadd( -170.051, -129.944, 13.0498, 0.23 ) }
    dend_17 { pt3dadd( -170.688, -130.796, 12.9658, 0.23 ) }
    dend_17 { pt3dadd( -171.19, -131.632, 12.9758, 0.23 ) }
    dend_17 { pt3dadd( -172.638, -134.437, 13.2383, 3.41 ) }
    dend_17 { pt3dadd( -173.193, -135.662, 13.4317, 2.73 ) }
    dend_17 { pt3dadd( -174.223, -138.391, 13.973, 0.23 ) }
    dend_17 { pt3dadd( -175.018, -140.64, 14.5689, 1.14 ) }
    dend_17 { pt3dadd( -175.474, -142.087, 15.0348, 1.14 ) }
    dend_17 { pt3dadd( -175.983, -144.083, 15.8171, 0.23 ) }
    dend_17 { pt3dadd( -176.225, -145.575, 16.549, 1.82 ) }
    dend_17 { pt3dadd( -176.422, -147.351, 17.4635, 1.82 ) }
    dend_17 { pt3dadd( -176.564, -149.394, 18.4623, 0.68 ) }
    dend_17 { pt3dadd( -176.602, -150.734, 19.0401, 0.23 ) }
    dend_17 { pt3dadd( -176.622, -152.475, 19.7713, 0.91 ) }
    dend_17 { pt3dadd( -176.601, -154.4, 20.5438, 0.23 ) }
    dend_17 { pt3dadd( -176.597, -156.549, 21.2851, 2.5 ) }
    dend_17 { pt3dadd( -176.581, -159.677, 22.1532, 0.23 ) }
    dend_17 { pt3dadd( -176.57, -161.048, 22.4357, 0.91 ) }
    dend_17 { pt3dadd( -176.582, -162.612, 22.68, 0.23 ) }
    dend_17 { pt3dadd( -176.593, -163.525, 22.7983, 1.82 ) }
    dend_17 { pt3dadd( -176.575, -165.332, 23.0192, 0.23 ) }
    dend_17 { pt3dadd( -176.535, -166.0, 23.0929, 0.23 ) }
    dend_17 { pt3dadd( -176.333, -167.972, 23.2891, 0.91 ) }
    dend_17 { pt3dadd( -176.181, -169.606, 23.4374, 0.23 ) }
    dend_17 { pt3dadd( -176.017, -171.445, 23.624, 1.14 ) }
    dend_17 { pt3dadd( -175.852, -172.932, 23.7908, 0.23 ) }
    dend_17 { pt3dadd( -175.54, -175.018, 23.8517, 1.82 ) }
    dend_17 { pt3dadd( -175.37, -176.13, 23.7975, 2.5 ) }
    dend_17 { pt3dadd( -174.999, -179.033, 23.3866, 0.23 ) }
    dend_17 { pt3dadd( -174.856, -181.068, 22.8856, 2.05 ) }
    dend_17 { pt3dadd( -174.816, -182.553, 22.3802, 2.05 ) }
    dend_17 { pt3dadd( -174.976, -186.132, 20.996, 0.23 ) }
    dend_17 { pt3dadd( -175.17, -187.617, 20.3833, 1.14 ) }
    dend_17 { pt3dadd( -175.594, -189.439, 19.5522, 0.23 ) }
    dend_17 { pt3dadd( -175.911, -190.448, 19.0057, 0.91 ) }
    dend_17 { pt3dadd( -176.229, -191.204, 18.5668, 0.23 ) }
    dend_17 { pt3dadd( -177.142, -192.826, 17.7222, 1.14 ) }
    dend_17 { pt3dadd( -178.117, -194.202, 17.3106, 0.23 ) }
    dend_17 { pt3dadd( -178.803, -195.12, 17.098, 1.14 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 93/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -120.365, -63.5863, 3.88985, 0.68 ) }
    dend_8 { pt3dadd( -123.646, -63.9174, 4.94869, 0.68 ) }
    dend_8 { pt3dadd( -125.935, -64.0158, 5.69473, 0.68 ) }
    dend_8 { pt3dadd( -126.799, -64.0102, 5.94538, 0.68 ) }
    dend_8 { pt3dadd( -127.665, -64.0014, 6.18467, 0.68 ) }
    dend_8 { pt3dadd( -128.387, -63.9923, 6.36975, 0.68 ) }
    dend_8 { pt3dadd( -131.124, -64.0278, 7.06331, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( -132.687, -64.0658, 7.45164, 1.59 ) }
    dend_8 { pt3dadd( -134.952, -64.1247, 7.93865, 0.91 ) }
    dend_8 { pt3dadd( -137.853, -64.2504, 8.5014, 1.59 ) }
    dend_8 { pt3dadd( -139.418, -64.357, 8.86616, 0.23 ) }
    dend_8 { pt3dadd( -141.433, -64.5922, 9.40035, 2.05 ) }
    dend_8 { pt3dadd( -142.561, -64.8141, 9.70881, 2.05 ) }
    dend_8 { pt3dadd( -144.051, -65.2209, 10.1551, 2.05 ) }
    dend_8 { pt3dadd( -146.385, -66.067, 10.8929, 0.45 ) }
    dend_8 { pt3dadd( -149.411, -67.4678, 11.7213, 0.23 ) }
    dend_8 { pt3dadd( -151.425, -68.5788, 12.1831, 0.23 ) }
    dend_8 { pt3dadd( -154.073, -70.3444, 12.6507, 0.23 ) }
    dend_8 { pt3dadd( -155.787, -71.6948, 12.8781, 1.36 ) }
    dend_8 { pt3dadd( -156.943, -72.7738, 12.9741, 1.36 ) }
    dend_8 { pt3dadd( -159.25, -75.2563, 13.0741, 2.73 ) }
    dend_8 { pt3dadd( -160.731, -77.0176, 13.0908, 1.59 ) }
    dend_8 { pt3dadd( -162.639, -79.4083, 13.1772, 0.45 ) }
    dend_8 { pt3dadd( -163.769, -80.8341, 13.2938, 0.45 ) }
    dend_8 { pt3dadd( -164.693, -81.9342, 13.4377, 0.45 ) }
    dend_8 { pt3dadd( -166.136, -83.5599, 13.7417, 1.59 ) }
    dend_8 { pt3dadd( -167.773, -85.3688, 14.1316, 1.59 ) }
    dend_8 { pt3dadd( -168.557, -86.2287, 14.2919, 2.95 ) }
    dend_8 { pt3dadd( -169.527, -87.2557, 14.4459, 2.95 ) }
    dend_8 { pt3dadd( -170.981, -88.8313, 14.604, 2.95 ) }
    dend_8 { pt3dadd( -173.741, -91.9835, 14.7601, 0.45 ) }
    dend_8 { pt3dadd( -174.883, -93.4111, 14.757, 1.59 ) }
    dend_8 { pt3dadd( -176.043, -94.9642, 14.7967, 2.27 ) }
    dend_8 { pt3dadd( -177.087, -96.4495, 14.9328, 2.27 ) }
    dend_8 { pt3dadd( -178.532, -98.6375, 15.2534, 0.45 ) }
    dend_8 { pt3dadd( -179.789, -100.613, 15.6771, 2.5 ) }
    dend_8 { pt3dadd( -180.936, -102.402, 16.1761, 3.41 ) }
    dend_8 { pt3dadd( -182.635, -105.003, 16.9954, 0.23 ) }
    dend_8 { pt3dadd( -183.651, -106.531, 17.5432, 1.36 ) }
    dend_8 { pt3dadd( -184.57, -107.937, 18.1143, 0.45 ) }
    dend_8 { pt3dadd( -186.121, -110.297, 19.1868, 3.41 ) }
    dend_8 { pt3dadd( -186.882, -111.413, 19.7484, 3.41 ) }
    dend_8 { pt3dadd( -188.546, -113.851, 21.1256, 2.05 ) }
    dend_8 { pt3dadd( -189.947, -115.855, 22.2794, 0.45 ) }
    dend_8 { pt3dadd( -191.083, -117.386, 23.2121, 1.59 ) }
    dend_8 { pt3dadd( -192.557, -119.248, 24.4207, 1.14 ) }
    dend_8 { pt3dadd( -194.26, -121.269, 25.7707, 0.91 ) }
    dend_8 { pt3dadd( -195.778, -123.004, 27.0053, 1.36 ) }
    dend_8 { pt3dadd( -197.275, -124.594, 28.2148, 0.23 ) }
    dend_8 { pt3dadd( -198.089, -125.394, 28.787, 1.82 ) }
    dend_8 { pt3dadd( -199.347, -126.501, 29.5348, 2.95 ) }
    dend_8 { pt3dadd( -200.515, -127.453, 30.1, 2.95 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -78.3897, -168.417, -56.7603, 0.23 ) }
    dend_6 { pt3dadd( -80.2383, -177.878, -61.3622, 0.23 ) }
    dend_6 { pt3dadd( -83.7407, -187.408, -64.6559, 0.23 ) }
    dend_6 { pt3dadd( -85.3599, -197.4, -67.9826, 0.23 ) }
    dend_6 { pt3dadd( -85.4352, -207.773, -70.337, 0.23 ) }
    dend_6 { pt3dadd( -86.8476, -217.952, -73.1119, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 51/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -78.3897, -168.417, -56.7603, 0.23 ) }
    dend_5 { pt3dadd( -80.451, -177.932, -59.3504, 0.23 ) }
    dend_5 { pt3dadd( -82.1642, -187.518, -61.9173, 0.23 ) }
    dend_5 { pt3dadd( -85.3569, -196.515, -65.2051, 0.23 ) }
    dend_5 { pt3dadd( -86.9161, -205.867, -68.6422, 0.23 ) }
    dend_5 { pt3dadd( -86.8299, -215.048, -72.8451, 0.23 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 57/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 162.434, 50.2343, 4.93306, 0.45 ) }
    dend_99 { pt3dadd( 164.464, 51.3002, 5.11567, 0.45 ) }
    dend_99 { pt3dadd( 167.014, 52.576, 5.32428, 0.68 ) }
    dend_99 { pt3dadd( 168.934, 53.4841, 5.6588, 0.68 ) }
    dend_99 { pt3dadd( 172.325, 54.962, 6.32903, 0.68 ) }
    dend_99 { pt3dadd( 176.443, 56.7733, 7.19052, 0.68 ) }
    dend_99 { pt3dadd( 179.857, 58.2791, 7.8987, 0.68 ) }
    dend_99 { pt3dadd( 183.479, 59.8447, 8.70084, 0.45 ) }
    dend_99 { pt3dadd( 187.652, 61.6263, 9.62854, 0.45 ) }
    dend_99 { pt3dadd( 190.445, 62.7542, 10.1913, 0.68 ) }
    dend_99 { pt3dadd( 193.547, 64.0137, 10.8564, 0.23 ) }
    dend_99 { pt3dadd( 196.29, 65.2105, 11.535, 1.14 ) }
    dend_99 { pt3dadd( 198.408, 66.2378, 11.9678, 0.23 ) }
    dend_99 { pt3dadd( 199.84, 67.0277, 12.1611, 1.14 ) }
    dend_99 { pt3dadd( 202.754, 68.8254, 12.308, 0.45 ) }
    dend_99 { pt3dadd( 204.614, 70.07, 12.3732, 0.23 ) }
    dend_99 { pt3dadd( 206.25, 71.1745, 12.3901, 0.23 ) }
    dend_99 { pt3dadd( 208.509, 72.7771, 12.3869, 1.36 ) }
    dend_99 { pt3dadd( 212.457, 75.7134, 12.3494, 0.23 ) }
    dend_99 { pt3dadd( 214.807, 77.5452, 12.3537, 1.82 ) }
    dend_99 { pt3dadd( 215.879, 78.4284, 12.3723, 2.5 ) }
    dend_99 { pt3dadd( 218.703, 80.7218, 12.4469, 0.23 ) }
    dend_99 { pt3dadd( 220.275, 82.003, 12.5212, 0.68 ) }
    dend_99 { pt3dadd( 221.719, 83.1855, 12.6478, 1.36 ) }
    dend_99 { pt3dadd( 223.365, 84.5552, 12.9087, 0.23 ) }
    dend_99 { pt3dadd( 224.61, 85.6326, 13.1304, 1.36 ) }
    dend_99 { pt3dadd( 225.832, 86.7077, 13.3612, 1.36 ) }
    dend_99 { pt3dadd( 227.584, 88.2325, 13.6936, 0.23 ) }
    dend_99 { pt3dadd( 228.389, 88.8868, 13.8307, 0.23 ) }
    dend_99 { pt3dadd( 230.832, 90.7492, 14.202, 2.05 ) }
    dend_99 { pt3dadd( 231.787, 91.4949, 14.2911, 2.73 ) }
    dend_99 { pt3dadd( 234.246, 93.4916, 14.4212, 1.14 ) }
    dend_99 { pt3dadd( 236.24, 95.1685, 14.5269, 1.14 ) }
    dend_99 { pt3dadd( 238.199, 96.8025, 14.6114, 0.23 ) }
    dend_99 { pt3dadd( 239.302, 97.6954, 14.6427, 0.91 ) }
    dend_99 { pt3dadd( 242.465, 100.239, 14.7189, 1.59 ) }
    dend_99 { pt3dadd( 245.071, 102.354, 14.8259, 0.45 ) }
    dend_99 { pt3dadd( 246.961, 103.926, 15.0037, 1.14 ) }
    dend_99 { pt3dadd( 248.108, 104.889, 15.1797, 0.23 ) }
    dend_99 { pt3dadd( 248.727, 105.388, 15.3083, 0.23 ) }
    dend_99 { pt3dadd( 249.972, 106.296, 15.684, 0.23 ) }
    dend_99 { pt3dadd( 251.568, 107.384, 16.3173, 0.91 ) }
    dend_99 { pt3dadd( 253.472, 108.824, 17.1534, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_99 { pt3dadd( 254.864, 109.928, 17.7528, 2.05 ) }
    dend_99 { pt3dadd( 256.359, 111.088, 18.4253, 2.73 ) }
    dend_99 { pt3dadd( 259.294, 113.238, 19.7084, 0.23 ) }
    dend_99 { pt3dadd( 260.821, 114.281, 20.3668, 0.23 ) }
    dend_99 { pt3dadd( 262.84, 115.596, 21.2968, 0.23 ) }
    dend_99 { pt3dadd( 264.253, 116.476, 21.9644, 1.36 ) }
    dend_99 { pt3dadd( 266.477, 117.688, 23.0432, 0.23 ) }
    dend_99 { pt3dadd( 267.808, 118.31, 23.652, 1.59 ) }
    dend_99 { pt3dadd( 269.922, 119.16, 24.5542, 0.23 ) }
    dend_99 { pt3dadd( 272.782, 120.187, 25.73, 0.23 ) }
    dend_99 { pt3dadd( 273.854, 120.542, 26.1341, 2.05 ) }
    dend_99 { pt3dadd( 277.266, 121.718, 27.4062, 0.45 ) }
    dend_99 { pt3dadd( 279.576, 122.545, 28.2902, 0.45 ) }
    dend_99 { pt3dadd( 281.903, 123.343, 29.281, 1.36 ) }
    dend_99 { pt3dadd( 283.32, 123.822, 29.9071, 2.27 ) }
    dend_99 { pt3dadd( 285.804, 124.694, 31.0368, 0.91 ) }
    dend_99 { pt3dadd( 287.883, 125.514, 32.095, 0.23 ) }
    dend_99 { pt3dadd( 289.709, 126.359, 33.1291, 0.23 ) }
    dend_99 { pt3dadd( 291.576, 127.2, 34.2346, 1.14 ) }
    dend_99 { pt3dadd( 292.917, 127.781, 35.0078, 1.14 ) }
    dend_99 { pt3dadd( 294.538, 128.448, 35.9242, 1.14 ) }
    dend_99 { pt3dadd( 296.899, 129.393, 37.1731, 0.23 ) }
    dend_99 { pt3dadd( 297.634, 129.643, 37.4585, 0.91 ) }
    dend_99 { pt3dadd( 300.319, 130.359, 38.2873, 0.23 ) }
    dend_99 { pt3dadd( 301.038, 130.524, 38.4739, 1.14 ) }
    dend_99 { pt3dadd( 303.466, 130.89, 39.0965, 0.45 ) }
    dend_99 { pt3dadd( 305.282, 131.036, 39.4773, 2.5 ) }
    dend_99 { pt3dadd( 308.781, 131.201, 40.1425, 1.14 ) }
    dend_99 { pt3dadd( 312.441, 131.324, 40.8058, 0.23 ) }
    dend_99 { pt3dadd( 315.125, 131.392, 41.2517, 0.23 ) }
    dend_99 { pt3dadd( 318.95, 131.456, 41.8677, 1.14 ) }
    dend_99 { pt3dadd( 321.961, 131.447, 42.2922, 1.14 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 32/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 162.434, 50.2343, 4.93306, 0.91 ) }
    dend_98 { pt3dadd( 164.016, 51.5542, 4.68348, 0.91 ) }
    dend_98 { pt3dadd( 164.889, 52.2018, 4.61561, 1.36 ) }
    dend_98 { pt3dadd( 165.835, 52.7692, 4.61831, 0.23 ) }
    dend_98 { pt3dadd( 166.94, 53.3487, 4.72853, 0.45 ) }
    dend_98 { pt3dadd( 167.96, 53.8459, 4.89828, 0.91 ) }
    dend_98 { pt3dadd( 168.611, 54.1442, 5.02683, 0.45 ) }
    dend_98 { pt3dadd( 169.378, 54.4463, 5.23161, 1.14 ) }
    dend_98 { pt3dadd( 170.755, 54.9451, 5.57844, 1.14 ) }
    dend_98 { pt3dadd( 171.753, 55.2998, 5.79651, 0.23 ) }
    dend_98 { pt3dadd( 172.512, 55.601, 5.88047, 0.45 ) }
    dend_98 { pt3dadd( 173.62, 56.1091, 5.90814, 0.23 ) }
    dend_98 { pt3dadd( 174.581, 56.604, 5.81528, 1.14 ) }
    dend_98 { pt3dadd( 175.371, 57.0555, 5.63606, 2.05 ) }
    dend_98 { pt3dadd( 176.194, 57.5417, 5.37697, 1.14 ) }
    dend_98 { pt3dadd( 178.027, 58.6287, 4.72746, 0.23 ) }
    dend_98 { pt3dadd( 178.685, 59.0357, 4.48444, 0.23 ) }
    dend_98 { pt3dadd( 179.608, 59.5777, 4.19004, 1.36 ) }
    dend_98 { pt3dadd( 180.285, 59.9352, 4.03313, 2.5 ) }
    dend_98 { pt3dadd( 181.873, 60.691, 3.83179, 0.23 ) }
    dend_98 { pt3dadd( 182.442, 60.9274, 3.8345, 0.23 ) }
    dend_98 { pt3dadd( 183.304, 61.2609, 4.00162, 0.23 ) }
    dend_98 { pt3dadd( 184.706, 61.8123, 4.41219, 1.14 ) }
    dend_98 { pt3dadd( 185.477, 62.1122, 4.70066, 1.36 ) }
    dend_98 { pt3dadd( 186.76, 62.5838, 5.24321, 0.23 ) }
    dend_98 { pt3dadd( 187.991, 63.0321, 5.80944, 0.68 ) }
    dend_98 { pt3dadd( 188.997, 63.4067, 6.27512, 0.23 ) }
    dend_98 { pt3dadd( 189.722, 63.704, 6.60131, 1.82 ) }
    dend_98 { pt3dadd( 190.205, 63.9371, 6.79659, 1.82 ) }
    dend_98 { pt3dadd( 191.363, 64.5252, 7.23208, 0.23 ) }
    dend_98 { pt3dadd( 192.292, 65.0078, 7.53578, 0.23 ) }
    dend_98 { pt3dadd( 192.97, 65.3641, 7.72185, 0.91 ) }
    dend_98 { pt3dadd( 194.511, 66.2248, 8.01504, 0.23 ) }
    dend_98 { pt3dadd( 195.236, 66.653, 8.1136, 1.36 ) }
    dend_98 { pt3dadd( 196.134, 67.2249, 8.19888, 0.23 ) }
    dend_98 { pt3dadd( 197.11, 67.8715, 8.26821, 1.36 ) }
    dend_98 { pt3dadd( 197.94, 68.3963, 8.3098, 0.23 ) }
    dend_98 { pt3dadd( 198.931, 69.0078, 8.36787, 1.14 ) }
    dend_98 { pt3dadd( 199.882, 69.5811, 8.43542, 0.23 ) }
    dend_98 { pt3dadd( 200.347, 69.8538, 8.48087, 0.23 ) }
    dend_98 { pt3dadd( 201.32, 70.41, 8.61437, 2.05 ) }
    dend_98 { pt3dadd( 201.807, 70.6915, 8.70981, 2.05 ) }
    dend_98 { pt3dadd( 202.768, 71.2703, 8.96866, 0.45 ) }
    dend_98 { pt3dadd( 203.325, 71.6283, 9.12337, 1.82 ) }
    dend_98 { pt3dadd( 204.109, 72.1799, 9.31428, 1.82 ) }
    dend_98 { pt3dadd( 205.191, 72.9651, 9.51265, 0.23 ) }
    dend_98 { pt3dadd( 205.729, 73.3515, 9.56694, 0.68 ) }
    dend_98 { pt3dadd( 206.68, 74.0007, 9.6171, 0.23 ) }
    dend_98 { pt3dadd( 207.608, 74.5654, 9.60429, 1.36 ) }
    dend_98 { pt3dadd( 208.027, 74.7922, 9.5582, 1.82 ) }
    dend_98 { pt3dadd( 208.763, 75.1025, 9.39854, 0.91 ) }
    dend_98 { pt3dadd( 209.511, 75.3459, 9.1828, 0.23 ) }
    dend_98 { pt3dadd( 210.312, 75.5723, 8.93795, 1.36 ) }
    dend_98 { pt3dadd( 210.839, 75.721, 8.76399, 2.27 ) }
    dend_98 { pt3dadd( 212.264, 76.1811, 8.34339, 0.23 ) }
    dend_98 { pt3dadd( 213.097, 76.5119, 8.10009, 1.14 ) }
    dend_98 { pt3dadd( 213.576, 76.7346, 7.96859, 0.23 ) }
    dend_98 { pt3dadd( 214.157, 77.0342, 7.82872, 0.23 ) }
    dend_98 { pt3dadd( 215.048, 77.5215, 7.62903, 1.14 ) }
    dend_98 { pt3dadd( 215.97, 78.0538, 7.44677, 0.23 ) }
    dend_98 { pt3dadd( 217.169, 78.7691, 7.26521, 0.45 ) }
    dend_98 { pt3dadd( 217.705, 79.104, 7.17302, 2.05 ) }
    dend_98 { pt3dadd( 218.508, 79.6057, 7.0246, 2.05 ) }
    dend_98 { pt3dadd( 219.189, 80.0088, 6.89952, 0.23 ) }
    dend_98 { pt3dadd( 219.51, 80.1959, 6.84073, 0.91 ) }
    dend_98 { pt3dadd( 220.281, 80.6524, 6.68435, 0.23 ) }
    dend_98 { pt3dadd( 221.434, 81.3594, 6.42649, 1.36 ) }
    dend_98 { pt3dadd( 221.89, 81.6516, 6.32406, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_98 { pt3dadd( 222.873, 82.2626, 6.1086, 0.91 ) }
    dend_98 { pt3dadd( 223.951, 82.9183, 5.90734, 0.91 ) }
    dend_98 { pt3dadd( 224.765, 83.4148, 5.77197, 2.73 ) }
    dend_98 { pt3dadd( 226.147, 84.3051, 5.56291, 0.23 ) }
    dend_98 { pt3dadd( 226.905, 84.8158, 5.477, 0.68 ) }
    dend_98 { pt3dadd( 227.98, 85.6457, 5.35311, 0.23 ) }
    dend_98 { pt3dadd( 228.809, 86.4668, 5.23965, 0.23 ) }
    dend_98 { pt3dadd( 229.272, 87.0542, 5.15818, 1.14 ) }
    dend_98 { pt3dadd( 229.875, 88.0203, 5.02142, 0.23 ) }
    dend_98 { pt3dadd( 230.178, 88.602, 4.93334, 1.36 ) }
    dend_98 { pt3dadd( 230.686, 89.6862, 4.72286, 0.23 ) }
    dend_98 { pt3dadd( 231.314, 91.1213, 4.42534, 1.82 ) }
    dend_98 { pt3dadd( 231.771, 92.0341, 4.15999, 0.68 ) }
    dend_98 { pt3dadd( 232.137, 92.636, 3.95394, 1.82 ) }
    dend_98 { pt3dadd( 233.154, 93.9603, 3.45056, 0.23 ) }
    dend_98 { pt3dadd( 233.823, 94.6529, 3.15853, 0.23 ) }
    dend_98 { pt3dadd( 234.364, 95.0838, 2.96694, 2.05 ) }
    dend_98 { pt3dadd( 236.082, 96.1252, 2.43507, 0.23 ) }
    dend_98 { pt3dadd( 236.966, 96.5531, 2.18101, 1.36 ) }
    dend_98 { pt3dadd( 237.978, 96.9424, 1.89772, 0.23 ) }
    dend_98 { pt3dadd( 238.939, 97.2287, 1.66838, 1.36 ) }
    dend_98 { pt3dadd( 239.845, 97.4893, 1.47713, 0.23 ) }
    dend_98 { pt3dadd( 241.174, 97.8824, 1.22773, 0.91 ) }
    dend_98 { pt3dadd( 242.603, 98.343, 1.03206, 0.23 ) }
    dend_98 { pt3dadd( 243.472, 98.6456, 0.916752, 2.5 ) }
    dend_98 { pt3dadd( 245.299, 99.3524, 0.710824, 0.23 ) }
    dend_98 { pt3dadd( 246.645, 99.9638, 0.582101, 0.23 ) }
    dend_98 { pt3dadd( 247.371, 100.328, 0.54347, 0.23 ) }
    dend_98 { pt3dadd( 248.227, 100.787, 0.58294, 2.05 ) }
    dend_98 { pt3dadd( 249.318, 101.382, 0.73992, 2.05 ) }
    dend_98 { pt3dadd( 250.395, 101.945, 1.02147, 0.45 ) }
    dend_98 { pt3dadd( 251.463, 102.462, 1.42381, 0.45 ) }
    dend_98 { pt3dadd( 252.441, 102.896, 1.88262, 1.14 ) }
    dend_98 { pt3dadd( 253.933, 103.541, 2.68484, 0.23 ) }
    dend_98 { pt3dadd( 254.605, 103.849, 3.06853, 1.82 ) }
    dend_98 { pt3dadd( 255.484, 104.294, 3.61146, 0.23 ) }
    dend_98 { pt3dadd( 256.001, 104.578, 3.91928, 0.23 ) }
    dend_98 { pt3dadd( 256.513, 104.896, 4.20193, 1.14 ) }
    dend_98 { pt3dadd( 257.634, 105.789, 4.70305, 0.23 ) }
    dend_98 { pt3dadd( 258.434, 106.641, 4.98162, 1.59 ) }
    dend_98 { pt3dadd( 258.751, 107.058, 5.08394, 1.59 ) }
    dend_98 { pt3dadd( 259.231, 107.829, 5.24866, 1.59 ) }
    dend_98 { pt3dadd( 259.599, 108.506, 5.39641, 0.45 ) }
    dend_98 { pt3dadd( 259.863, 109.025, 5.54993, 1.82 ) }
    dend_98 { pt3dadd( 260.368, 110.123, 6.0147, 0.23 ) }
    dend_98 { pt3dadd( 260.65, 110.688, 6.35106, 0.91 ) }
    dend_98 { pt3dadd( 260.935, 111.226, 6.72547, 1.14 ) }
    dend_98 { pt3dadd( 261.35, 111.897, 7.27311, 0.23 ) }
    dend_98 { pt3dadd( 262.088, 112.935, 8.1798, 1.36 ) }
    dend_98 { pt3dadd( 262.772, 113.782, 8.95981, 0.23 ) }
    dend_98 { pt3dadd( 263.427, 114.5, 9.66404, 0.68 ) }
    dend_98 { pt3dadd( 263.706, 114.777, 9.94096, 2.27 ) }
    dend_98 { pt3dadd( 264.659, 115.63, 10.7836, 0.23 ) }
    dend_98 { pt3dadd( 265.137, 116.024, 11.1602, 1.36 ) }
    dend_98 { pt3dadd( 266.112, 116.814, 11.8203, 0.23 ) }
    dend_98 { pt3dadd( 266.767, 117.294, 12.2033, 0.68 ) }
    dend_98 { pt3dadd( 267.288, 117.659, 12.49, 0.68 ) }
    dend_98 { pt3dadd( 268.081, 118.223, 12.9237, 0.23 ) }
    dend_98 { pt3dadd( 268.474, 118.525, 13.1249, 1.59 ) }
    dend_98 { pt3dadd( 268.989, 118.956, 13.3848, 0.23 ) }
    dend_98 { pt3dadd( 269.721, 119.615, 13.7407, 1.14 ) }
    dend_98 { pt3dadd( 270.558, 120.489, 14.1813, 0.23 ) }
    dend_98 { pt3dadd( 271.311, 121.427, 14.5646, 0.23 ) }
    dend_98 { pt3dadd( 271.885, 122.225, 14.8681, 0.23 ) }
    dend_98 { pt3dadd( 272.399, 122.992, 15.1456, 2.05 ) }
    dend_98 { pt3dadd( 272.534, 123.21, 15.2211, 2.73 ) }
    dend_98 { pt3dadd( 273.392, 124.738, 15.7333, 0.45 ) }
    dend_98 { pt3dadd( 274.115, 126.079, 16.2004, 0.45 ) }
    dend_98 { pt3dadd( 274.678, 127.224, 16.6807, 2.27 ) }
    dend_98 { pt3dadd( 275.193, 128.376, 17.2534, 0.23 ) }
    dend_98 { pt3dadd( 275.373, 128.882, 17.5391, 0.68 ) }
    dend_98 { pt3dadd( 275.595, 129.684, 18.0423, 0.23 ) }
    dend_98 { pt3dadd( 275.74, 130.416, 18.5587, 1.14 ) }
    dend_98 { pt3dadd( 275.92, 131.744, 19.5935, 0.23 ) }
    dend_98 { pt3dadd( 275.943, 132.09, 19.8534, 1.14 ) }
    dend_98 { pt3dadd( 276.03, 133.58, 20.9654, 0.23 ) }
    dend_98 { pt3dadd( 276.056, 134.041, 21.2845, 0.91 ) }
    dend_98 { pt3dadd( 276.091, 134.753, 21.7457, 0.23 ) }
    dend_98 { pt3dadd( 276.132, 135.248, 22.0401, 2.27 ) }
    dend_98 { pt3dadd( 276.3, 136.361, 22.6301, 0.23 ) }
    dend_98 { pt3dadd( 276.496, 137.25, 23.0736, 1.14 ) }
    dend_98 { pt3dadd( 276.874, 138.508, 23.6347, 0.23 ) }
    dend_98 { pt3dadd( 277.066, 139.032, 23.8731, 1.14 ) }
    dend_98 { pt3dadd( 277.347, 139.759, 24.2251, 0.91 ) }
    dend_98 { pt3dadd( 277.48, 140.14, 24.4029, 0.23 ) }
    dend_98 { pt3dadd( 277.685, 140.835, 24.7254, 1.36 ) }
    dend_98 { pt3dadd( 277.829, 141.576, 25.0871, 0.23 ) }
    dend_98 { pt3dadd( 277.91, 142.652, 25.6594, 0.68 ) }
    dend_98 { pt3dadd( 277.768, 143.823, 26.311, 0.23 ) }
    dend_98 { pt3dadd( 277.416, 144.995, 26.9965, 0.23 ) }
    dend_98 { pt3dadd( 277.263, 145.376, 27.2291, 0.91 ) }
    dend_98 { pt3dadd( 276.969, 145.998, 27.6253, 0.23 ) }
    dend_98 { pt3dadd( 276.593, 146.667, 28.0602, 0.23 ) }
    dend_98 { pt3dadd( 276.17, 147.327, 28.4673, 0.23 ) }
    dend_98 { pt3dadd( 275.828, 147.849, 28.8226, 0.23 ) }
    dend_98 { pt3dadd( 275.442, 148.486, 29.3479, 0.23 ) }
    dend_98 { pt3dadd( 275.11, 149.223, 29.928, 2.05 ) }
    dend_98 { pt3dadd( 278.303, 153.029, 30.2925, 2.05 ) }
    dend_98 { pt3dadd( 281.331, 156.806, 31.4016, 2.05 ) }
    dend_98 { pt3dadd( 283.986, 160.757, 32.7769, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_98 { pt3dadd( 287.544, 163.965, 34.1316, 2.05 ) }
    dend_98 { pt3dadd( 291.545, 166.422, 35.8315, 2.05 ) }
    dend_98 { pt3dadd( 295.165, 168.673, 38.4111, 2.05 ) }
    dend_98 { pt3dadd( 297.892, 171.407, 41.5204, 2.05 ) }
    dend_98 { pt3dadd( 300.041, 173.768, 45.3117, 2.05 ) }
    dend_98 { pt3dadd( 301.555, 175.773, 49.5884, 2.05 ) }
    dend_98 { pt3dadd( 302.552, 177.558, 54.1116, 2.05 ) }
    dend_98 { pt3dadd( 304.315, 179.022, 58.5271, 2.05 ) }
    dend_98 { pt3dadd( 306.506, 180.252, 62.8301, 2.05 ) }
    dend_98 { pt3dadd( 307.848, 180.844, 67.6051, 2.05 ) }
    dend_98 { pt3dadd( 309.931, 182.079, 71.9593, 2.05 ) }
    // Section: dend_94, id: dend_94, parent: dend_88 (entry count 11/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 170.148, 305.356, 59.6892, 0.23 ) }
    dend_94 { pt3dadd( 171.888, 312.087, 60.1598, 0.23 ) }
    dend_94 { pt3dadd( 174.223, 318.615, 60.9124, 0.23 ) }
    dend_94 { pt3dadd( 177.266, 324.904, 61.1627, 0.23 ) }
    dend_94 { pt3dadd( 180.071, 331.297, 61.4249, 0.23 ) }
    dend_94 { pt3dadd( 183.13, 337.359, 63.0683, 0.23 ) }
    dend_94 { pt3dadd( 186.142, 343.638, 63.6426, 0.23 ) }
    dend_94 { pt3dadd( 188.925, 350.013, 64.2559, 0.23 ) }
    dend_94 { pt3dadd( 192.542, 355.984, 63.571, 0.23 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 20/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 170.148, 305.356, 59.6892, 0.68 ) }
    dend_89 { pt3dadd( 172.414, 314.93, 61.96, 0.23 ) }
    dend_89 { pt3dadd( 174.901, 324.734, 62.284, 0.23 ) }
    dend_89 { pt3dadd( 176.408, 334.57, 63.9846, 0.23 ) }
    dend_89 { pt3dadd( 179.139, 344.323, 63.79, 0.23 ) }
    dend_89 { pt3dadd( 180.293, 354.343, 62.8183, 0.23 ) }
    dend_89 { pt3dadd( 179.574, 364.314, 61.0718, 0.23 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 27/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 184.36, -201.112, 81.6905, 0.23 ) }
    dend_81 { pt3dadd( 185.558, -202.442, 81.9364, 0.23 ) }
    dend_81 { pt3dadd( 186.715, -203.713, 82.2175, 2.27 ) }
    dend_81 { pt3dadd( 188.648, -205.757, 82.6986, 0.23 ) }
    dend_81 { pt3dadd( 190.18, -207.339, 83.0843, 1.82 ) }
    dend_81 { pt3dadd( 192.481, -209.676, 83.6608, 0.23 ) }
    dend_81 { pt3dadd( 193.951, -211.124, 84.0367, 1.14 ) }
    dend_81 { pt3dadd( 195.53, -212.645, 84.4541, 0.23 ) }
    dend_81 { pt3dadd( 196.954, -213.963, 84.8332, 2.27 ) }
    dend_81 { pt3dadd( 198.542, -215.295, 85.2334, 0.23 ) }
    dend_81 { pt3dadd( 199.715, -216.196, 85.5079, 0.91 ) }
    dend_81 { pt3dadd( 202.411, -218.096, 86.141, 0.23 ) }
    dend_81 { pt3dadd( 203.227, -218.637, 86.3274, 0.68 ) }
    dend_81 { pt3dadd( 203.89, -219.07, 86.4731, 0.23 ) }
    dend_81 { pt3dadd( 205.025, -219.782, 86.7237, 1.59 ) }
    dend_81 { pt3dadd( 206.943, -220.931, 87.1282, 0.23 ) }
    dend_81 { pt3dadd( 208.357, -221.807, 87.4233, 0.23 ) }
    dend_81 { pt3dadd( 209.838, -222.815, 87.7317, 1.59 ) }
    dend_81 { pt3dadd( 210.952, -223.671, 87.9986, 0.68 ) }
    dend_81 { pt3dadd( 211.958, -224.519, 88.2622, 0.23 ) }
    dend_81 { pt3dadd( 213.275, -225.708, 88.6226, 0.23 ) }
    dend_81 { pt3dadd( 214.372, -226.772, 88.9293, 0.23 ) }
    dend_81 { pt3dadd( 215.476, -227.935, 89.2248, 2.5 ) }
    dend_81 { pt3dadd( 216.658, -229.263, 89.5774, 0.23 ) }
    dend_81 { pt3dadd( 217.13, -229.819, 89.7335, 0.91 ) }
    dend_81 { pt3dadd( 217.841, -230.79, 90.0223, 0.23 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 184.36, -201.112, 81.6905, 0.23 ) }
    dend_80 { pt3dadd( 185.559, -204.157, 82.7988, 0.23 ) }
    dend_80 { pt3dadd( 185.868, -204.941, 83.0844, 0.68 ) }
    dend_80 { pt3dadd( 186.34, -206.139, 83.5206, 0.23 ) }
    dend_80 { pt3dadd( 187.151, -208.197, 84.2696, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 58/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 112.233, -113.264, 72.3628, 0.23 ) }
    dend_74 { pt3dadd( 113.519, -116.322, 73.1886, 0.23 ) }
    dend_74 { pt3dadd( 114.58, -118.942, 74.0634, 0.23 ) }
    dend_74 { pt3dadd( 115.268, -120.599, 74.6665, 0.23 ) }
    dend_74 { pt3dadd( 116.25, -122.857, 75.5499, 1.59 ) }
    dend_74 { pt3dadd( 117.476, -125.557, 76.6398, 0.23 ) }
    dend_74 { pt3dadd( 118.399, -127.555, 77.4395, 0.91 ) }
    dend_74 { pt3dadd( 119.756, -130.179, 78.5885, 0.23 ) }
    dend_74 { pt3dadd( 120.348, -131.272, 79.0791, 0.91 ) }
    dend_74 { pt3dadd( 121.206, -132.679, 79.7327, 0.23 ) }
    dend_74 { pt3dadd( 122.522, -134.564, 80.617, 1.59 ) }
    dend_74 { pt3dadd( 124.252, -136.707, 81.5867, 0.23 ) }
    dend_74 { pt3dadd( 125.476, -138.101, 82.1885, 0.45 ) }
    dend_74 { pt3dadd( 126.707, -139.39, 82.68, 0.23 ) }
    dend_74 { pt3dadd( 127.691, -140.399, 83.099, 0.91 ) }
    dend_74 { pt3dadd( 128.963, -141.706, 83.6675, 0.23 ) }
    dend_74 { pt3dadd( 129.732, -142.481, 84.0384, 0.91 ) }
    dend_74 { pt3dadd( 130.345, -143.127, 84.3551, 0.23 ) }
    dend_74 { pt3dadd( 131.536, -144.486, 84.9949, 1.14 ) }
    dend_74 { pt3dadd( 132.819, -145.975, 85.6928, 0.23 ) }
    dend_74 { pt3dadd( 133.762, -147.171, 86.208, 1.82 ) }
    dend_74 { pt3dadd( 134.327, -147.877, 86.4994, 1.82 ) }
    dend_74 { pt3dadd( 135.847, -149.809, 87.3119, 0.23 ) }
    dend_74 { pt3dadd( 136.907, -151.065, 87.86, 0.68 ) }
    dend_74 { pt3dadd( 137.288, -151.502, 88.0541, 0.23 ) }
    dend_74 { pt3dadd( 139.003, -153.337, 88.6965, 2.05 ) }
    dend_74 { pt3dadd( 140.954, -155.336, 89.291, 0.23 ) }
    dend_74 { pt3dadd( 142.758, -157.147, 89.7077, 1.36 ) }
    dend_74 { pt3dadd( 144.955, -159.3, 89.9952, 0.23 ) }
    dend_74 { pt3dadd( 147.013, -161.387, 90.086, 0.23 ) }
    dend_74 { pt3dadd( 149.621, -164.1, 90.0067, 0.91 ) }
    dend_74 { pt3dadd( 150.264, -164.798, 89.9258, 0.23 ) }
    dend_74 { pt3dadd( 151.011, -165.708, 89.7621, 0.23 ) }
    dend_74 { pt3dadd( 152.278, -167.439, 89.4145, 0.91 ) }
    dend_74 { pt3dadd( 153.403, -169.3, 89.1489, 0.23 ) }
    dend_74 { pt3dadd( 153.986, -170.47, 89.0716, 1.14 ) }
    dend_74 { pt3dadd( 154.469, -171.531, 89.1091, 1.14 ) }
    dend_74 { pt3dadd( 155.312, -173.527, 89.2225, 0.23 ) }
    dend_74 { pt3dadd( 155.93, -175.096, 89.3152, 1.36 ) }
    dend_74 { pt3dadd( 156.808, -177.392, 89.4566, 0.23 ) }
    dend_74 { pt3dadd( 157.618, -179.458, 89.5428, 2.05 ) }
    dend_74 { pt3dadd( 157.993, -180.401, 89.5768, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_74 { pt3dadd( 159.29, -183.517, 89.6975, 0.68 ) }
    dend_74 { pt3dadd( 160.302, -185.806, 89.8104, 1.14 ) }
    dend_74 { pt3dadd( 161.301, -187.915, 89.9694, 0.23 ) }
    dend_74 { pt3dadd( 162.344, -190.061, 90.1641, 1.14 ) }
    dend_74 { pt3dadd( 163.793, -192.97, 90.5992, 0.23 ) }
    dend_74 { pt3dadd( 164.453, -194.299, 90.8531, 1.36 ) }
    dend_74 { pt3dadd( 165.528, -196.32, 91.3445, 2.05 ) }
    dend_74 { pt3dadd( 167.452, -199.715, 92.2619, 0.23 ) }
    dend_74 { pt3dadd( 168.555, -201.549, 92.7454, 0.91 ) }
    dend_74 { pt3dadd( 170.765, -205.062, 93.6546, 0.23 ) }
    dend_74 { pt3dadd( 171.956, -206.852, 94.0961, 0.23 ) }
    dend_74 { pt3dadd( 173.033, -208.417, 94.4448, 2.5 ) }
    dend_74 { pt3dadd( 175.193, -211.38, 94.9783, 0.23 ) }
    dend_74 { pt3dadd( 176.129, -212.562, 95.1419, 0.91 ) }
    dend_74 { pt3dadd( 177.22, -213.846, 95.2738, 0.23 ) }
    dend_74 { pt3dadd( 178.616, -215.433, 95.3183, 0.68 ) }
    dend_74 { pt3dadd( 180.75, -217.899, 95.3843, 0.23 ) }
    dend_74 { pt3dadd( 181.694, -219.061, 95.4171, 1.82 ) }
    dend_74 { pt3dadd( 182.875, -220.589, 95.5037, 0.23 ) }
    dend_74 { pt3dadd( 183.888, -221.941, 95.6179, 0.91 ) }
    dend_74 { pt3dadd( 185.529, -224.238, 95.8267, 0.23 ) }
    dend_74 { pt3dadd( 186.383, -225.532, 95.9609, 1.14 ) }
    dend_74 { pt3dadd( 187.047, -226.608, 96.1026, 0.23 ) }
    dend_74 { pt3dadd( 188.113, -228.366, 96.3892, 0.91 ) }
    dend_74 { pt3dadd( 189.436, -230.712, 96.7894, 0.23 ) }
    dend_74 { pt3dadd( 190.193, -232.017, 97.0651, 1.36 ) }
    dend_74 { pt3dadd( 190.959, -233.401, 97.319, 0.23 ) }
    dend_74 { pt3dadd( 191.647, -234.621, 97.5148, 0.91 ) }
    dend_74 { pt3dadd( 193.372, -237.514, 97.9346, 0.23 ) }
    dend_74 { pt3dadd( 194.683, -239.644, 98.1541, 1.14 ) }
    dend_74 { pt3dadd( 195.924, -241.654, 98.3069, 1.82 ) }
    dend_74 { pt3dadd( 197.807, -244.683, 98.53, 0.68 ) }
    dend_74 { pt3dadd( 198.641, -245.945, 98.6322, 1.36 ) }
    dend_74 { pt3dadd( 200.771, -249.034, 98.9099, 0.23 ) }
    dend_74 { pt3dadd( 203.121, -252.34, 99.2052, 1.82 ) }
    dend_74 { pt3dadd( 204.474, -254.14, 99.3805, 0.23 ) }
    dend_74 { pt3dadd( 206.149, -256.295, 99.6476, 2.05 ) }
    dend_74 { pt3dadd( 207.7, -258.146, 100.003, 0.23 ) }
    dend_74 { pt3dadd( 208.696, -259.335, 100.176, 0.91 ) }
    dend_74 { pt3dadd( 210.329, -261.196, 100.309, 0.23 ) }
    dend_74 { pt3dadd( 211.104, -262.087, 100.312, 0.91 ) }
    dend_74 { pt3dadd( 212.666, -264.034, 100.186, 0.23 ) }
    dend_74 { pt3dadd( 213.618, -265.46, 100.028, 0.91 ) }
    dend_74 { pt3dadd( 215.339, -268.88, 99.5593, 0.23 ) }
    dend_74 { pt3dadd( 216.221, -271.257, 99.1815, 0.23 ) }
    dend_74 { pt3dadd( 216.673, -273.027, 98.9347, 1.82 ) }
    dend_74 { pt3dadd( 217.133, -275.74, 98.6183, 0.23 ) }
    dend_74 { pt3dadd( 217.396, -278.485, 98.3808, 0.68 ) }
    dend_74 { pt3dadd( 217.581, -280.754, 98.3344, 0.23 ) }
    dend_74 { pt3dadd( 217.788, -282.861, 98.468, 0.91 ) }
    dend_74 { pt3dadd( 218.119, -284.892, 98.678, 0.23 ) }
    dend_74 { pt3dadd( 218.527, -286.389, 98.8043, 1.59 ) }
    dend_74 { pt3dadd( 218.895, -287.331, 98.8586, 1.59 ) }
    dend_74 { pt3dadd( 220.726, -290.969, 99.0301, 0.23 ) }
    dend_74 { pt3dadd( 222.463, -293.985, 99.0905, 1.14 ) }
    dend_74 { pt3dadd( 224.02, -296.548, 99.0455, 0.23 ) }
    dend_74 { pt3dadd( 225.238, -298.545, 98.9333, 0.23 ) }
    dend_74 { pt3dadd( 226.551, -300.667, 98.8173, 0.23 ) }
    dend_74 { pt3dadd( 227.505, -302.1, 98.7741, 0.45 ) }
    dend_74 { pt3dadd( 229.075, -304.34, 98.7059, 0.23 ) }
    dend_74 { pt3dadd( 230.1, -305.701, 98.6844, 1.36 ) }
    dend_74 { pt3dadd( 231.853, -307.948, 98.6986, 0.23 ) }
    dend_74 { pt3dadd( 233.74, -310.354, 98.8764, 0.23 ) }
    dend_74 { pt3dadd( 235.861, -313.041, 99.1823, 1.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 64/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 112.233, -113.264, 72.3628, 0.23 ) }
    dend_73 { pt3dadd( 110.037, -114.692, 72.9079, 0.23 ) }
    dend_73 { pt3dadd( 108.896, -115.512, 73.2747, 0.68 ) }
    dend_73 { pt3dadd( 107.08, -117.003, 74.0274, 0.23 ) }
    dend_73 { pt3dadd( 106.122, -117.791, 74.4249, 0.68 ) }
    dend_73 { pt3dadd( 105.48, -118.318, 74.6907, 0.23 ) }
    dend_73 { pt3dadd( 104.501, -119.123, 75.0968, 0.91 ) }
    dend_73 { pt3dadd( 103.008, -120.617, 75.7133, 0.23 ) }
    dend_73 { pt3dadd( 102.121, -121.809, 76.1031, 0.91 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 73/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 154.879, -112.543, 73.1815, 0.23 ) }
    dend_71 { pt3dadd( 156.057, -112.831, 73.6249, 0.23 ) }
    dend_71 { pt3dadd( 157.986, -113.424, 74.334, 2.05 ) }
    dend_71 { pt3dadd( 159.022, -113.811, 74.7052, 2.05 ) }
    dend_71 { pt3dadd( 162.172, -115.174, 75.8081, 0.45 ) }
    dend_71 { pt3dadd( 163.215, -115.668, 76.1336, 0.68 ) }
    dend_71 { pt3dadd( 165.112, -116.618, 76.6796, 0.23 ) }
    dend_71 { pt3dadd( 166.913, -117.63, 77.1412, 1.14 ) }
    dend_71 { pt3dadd( 168.571, -118.749, 77.5012, 0.23 ) }
    dend_71 { pt3dadd( 169.613, -119.609, 77.6444, 0.68 ) }
    dend_71 { pt3dadd( 170.692, -120.683, 77.6918, 0.23 ) }
    dend_71 { pt3dadd( 171.428, -121.499, 77.6811, 0.91 ) }
    dend_71 { pt3dadd( 172.211, -122.493, 77.6174, 0.23 ) }
    dend_71 { pt3dadd( 173.593, -124.368, 77.3836, 0.68 ) }
    dend_71 { pt3dadd( 174.822, -126.229, 77.0809, 0.23 ) }
    dend_71 { pt3dadd( 175.471, -127.49, 76.8231, 0.23 ) }
    dend_71 { pt3dadd( 175.927, -128.628, 76.4996, 0.23 ) }
    dend_71 { pt3dadd( 176.355, -129.93, 76.0331, 1.82 ) }
    dend_71 { pt3dadd( 177.106, -132.471, 75.041, 0.23 ) }
    dend_71 { pt3dadd( 177.387, -133.532, 74.592, 0.91 ) }
    dend_71 { pt3dadd( 178.1, -136.407, 73.3518, 0.23 ) }
    dend_71 { pt3dadd( 178.784, -139.886, 71.6927, 0.68 ) }
    dend_71 { pt3dadd( 179.124, -142.029, 70.5818, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 96/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 154.879, -112.543, 73.1815, 0.23 ) }
    dend_70 { pt3dadd( 155.198, -111.4, 73.416, 0.23 ) }
    dend_70 { pt3dadd( 155.387, -110.546, 73.5651, 1.59 ) }
    dend_70 { pt3dadd( 155.542, -109.844, 73.6876, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_70 { pt3dadd( 155.815, -108.605, 73.9039, 0.23 ) }
    dend_70 { pt3dadd( 156.216, -106.792, 74.2204, 0.23 ) }
    dend_70 { pt3dadd( 156.64, -104.876, 74.555, 0.23 ) }
    dend_70 { pt3dadd( 156.869, -103.611, 74.7786, 1.14 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 44.3349, 129.024, -5.5637, 0.23 ) }
    dend_37 { pt3dadd( 50.1794, 141.361, -0.629714, 0.23 ) }
    dend_37 { pt3dadd( 54.4338, 154.988, 1.65379, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 7/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.3349, 129.024, -5.5637, 0.68 ) }
    dend_32 { pt3dadd( 49.9783, 135.562, -4.26718, 0.23 ) }
    dend_32 { pt3dadd( 55.6901, 142.162, -4.0724, 0.23 ) }
    dend_32 { pt3dadd( 60.5577, 149.224, -2.54675, 0.23 ) }
    dend_32 { pt3dadd( 65.3077, 156.514, -2.51775, 0.23 ) }
    dend_32 { pt3dadd( 68.9981, 164.362, -2.40653, 0.23 ) }
    dend_32 { pt3dadd( 73.7301, 171.649, -1.94588, 0.23 ) }
    dend_32 { pt3dadd( 78.8199, 178.717, -2.10224, 0.23 ) }
    dend_32 { pt3dadd( 84.3438, 185.388, -1.02802, 0.23 ) }
    dend_32 { pt3dadd( 91.2226, 190.706, 0.160455, 0.23 ) }
    dend_32 { pt3dadd( 97.728, 195.889, 2.96883, 0.23 ) }
    dend_32 { pt3dadd( 103.447, 202.152, 5.09708, 0.23 ) }
    dend_32 { pt3dadd( 109.799, 208.02, 6.48343, 0.23 ) }
    dend_32 { pt3dadd( 116.979, 212.224, 9.36149, 0.23 ) }
    dend_32 { pt3dadd( 123.989, 217.295, 10.8703, 0.23 ) }
    dend_32 { pt3dadd( 131.027, 222.173, 12.8438, 0.23 ) }
    dend_32 { pt3dadd( 137.585, 226.846, 16.3747, 0.23 ) }
    dend_32 { pt3dadd( 144.3, 231.002, 20.2681, 0.23 ) }
    dend_32 { pt3dadd( 151.671, 233.444, 24.4749, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 47.1612, 131.665, -39.093, 0.23 ) }
    dend_30 { pt3dadd( 52.2016, 140.641, -42.0338, 0.23 ) }
    dend_30 { pt3dadd( 57.0161, 150.133, -42.9756, 0.23 ) }
    dend_30 { pt3dadd( 59.9796, 160.324, -43.8122, 0.23 ) }
    dend_30 { pt3dadd( 62.0307, 170.74, -44.4211, 0.23 ) }
    dend_30 { pt3dadd( 65.1102, 180.908, -45.1298, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 47.1612, 131.665, -39.093, 0.68 ) }
    dend_29 { pt3dadd( 52.5506, 141.188, -42.2246, 0.23 ) }
    dend_29 { pt3dadd( 55.6698, 151.617, -45.3903, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 35/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -200.515, -127.453, 30.1, 2.73 ) }
    dend_12 { pt3dadd( -202.282, -128.212, 29.9762, 2.73 ) }
    dend_12 { pt3dadd( -203.59, -128.83, 29.8001, 1.59 ) }
    dend_12 { pt3dadd( -204.9, -129.547, 29.5705, 0.68 ) }
    dend_12 { pt3dadd( -206.096, -130.327, 29.3209, 0.68 ) }
    dend_12 { pt3dadd( -207.12, -131.088, 29.0826, 0.45 ) }
    dend_12 { pt3dadd( -208.112, -131.919, 28.8266, 0.45 ) }
    dend_12 { pt3dadd( -208.966, -132.787, 28.5709, 0.45 ) }
    dend_12 { pt3dadd( -210.006, -133.979, 28.2745, 1.14 ) }
    dend_12 { pt3dadd( -211.037, -135.273, 28.0625, 0.23 ) }
    dend_12 { pt3dadd( -211.676, -136.102, 27.9929, 0.23 ) }
    dend_12 { pt3dadd( -212.528, -137.318, 28.0032, 1.59 ) }
    dend_12 { pt3dadd( -213.161, -138.248, 28.0936, 1.59 ) }
    dend_12 { pt3dadd( -214.276, -139.788, 28.3652, 0.23 ) }
    dend_12 { pt3dadd( -215.382, -141.17, 28.7004, 2.27 ) }
    dend_12 { pt3dadd( -216.445, -142.349, 29.0437, 0.91 ) }
    dend_12 { pt3dadd( -217.504, -143.454, 29.3928, 0.23 ) }
    dend_12 { pt3dadd( -218.202, -144.174, 29.6157, 1.14 ) }
    dend_12 { pt3dadd( -218.978, -144.972, 29.8469, 1.82 ) }
    dend_12 { pt3dadd( -219.701, -145.698, 30.0114, 1.14 ) }
    dend_12 { pt3dadd( -220.904, -146.806, 30.2279, 0.23 ) }
    dend_12 { pt3dadd( -222.383, -148.134, 30.4737, 2.05 ) }
    dend_12 { pt3dadd( -223.005, -148.639, 30.5431, 2.05 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -200.515, -127.453, 30.1, 0.45 ) }
    dend_9 { pt3dadd( -203.964, -128.389, 30.4581, 0.45 ) }
    dend_9 { pt3dadd( -205.613, -128.821, 30.6619, 0.45 ) }
    dend_9 { pt3dadd( -206.637, -129.105, 30.8032, 0.45 ) }
    dend_9 { pt3dadd( -209.706, -129.988, 31.2408, 1.82 ) }
    dend_9 { pt3dadd( -212.425, -130.775, 31.6191, 0.23 ) }
    dend_9 { pt3dadd( -213.752, -131.164, 31.7958, 1.36 ) }
    dend_9 { pt3dadd( -215.615, -131.792, 32.1289, 2.05 ) }
    dend_9 { pt3dadd( -217.441, -132.448, 32.4997, 0.23 ) }
    dend_9 { pt3dadd( -218.133, -132.678, 32.6574, 1.36 ) }
    dend_9 { pt3dadd( -219.629, -133.148, 33.0232, 0.23 ) }
    dend_9 { pt3dadd( -220.992, -133.56, 33.4067, 1.36 ) }
    dend_9 { pt3dadd( -222.972, -134.108, 33.9767, 0.23 ) }
    dend_9 { pt3dadd( -225.018, -134.598, 34.5161, 0.23 ) }
    dend_9 { pt3dadd( -227.242, -135.001, 35.1128, 1.36 ) }
    dend_9 { pt3dadd( -228.463, -135.175, 35.431, 0.91 ) }
    dend_9 { pt3dadd( -229.915, -135.348, 35.8194, 0.91 ) }
    dend_9 { pt3dadd( -231.462, -135.474, 36.2254, 0.23 ) }
    dend_9 { pt3dadd( -233.653, -135.618, 36.9018, 0.23 ) }
    dend_9 { pt3dadd( -235.899, -135.793, 37.8097, 1.36 ) }
    dend_9 { pt3dadd( -237.126, -135.884, 38.4114, 1.36 ) }
    dend_9 { pt3dadd( -239.329, -135.976, 39.6589, 0.23 ) }
    dend_9 { pt3dadd( -242.599, -136.056, 41.6545, 1.14 ) }
    dend_9 { pt3dadd( -245.498, -136.09, 43.5359, 0.23 ) }
    dend_9 { pt3dadd( -247.575, -136.119, 44.9208, 1.14 ) }
    dend_9 { pt3dadd( -249.089, -136.146, 45.9065, 0.23 ) }
    dend_9 { pt3dadd( -250.932, -136.181, 47.0629, 0.23 ) }
    dend_9 { pt3dadd( -252.54, -136.209, 47.9613, 2.05 ) }
    dend_9 { pt3dadd( -253.358, -136.257, 48.3559, 2.5 ) }
    dend_9 { pt3dadd( -256.583, -136.549, 49.5456, 0.23 ) }
    dend_9 { pt3dadd( -257.756, -136.692, 49.9024, 0.23 ) }
    dend_9 { pt3dadd( -259.158, -136.931, 50.3551, 2.05 ) }
    dend_9 { pt3dadd( -261.633, -137.469, 51.2769, 2.05 ) }
    dend_9 { pt3dadd( -263.152, -137.851, 51.9446, 0.23 ) }
    dend_9 { pt3dadd( -264.359, -138.221, 52.5376, 0.91 ) }
    dend_9 { pt3dadd( -265.808, -138.834, 53.4176, 0.23 ) }
    dend_9 { pt3dadd( -267.19, -139.626, 54.5107, 1.59 ) }
    dend_9 { pt3dadd( -268.939, -141.06, 56.8679, 0.23 ) }
    dend_9 { pt3dadd( -269.158, -141.273, 57.3458, 0.23 ) }
    dend_9 { pt3dadd( -269.525, -141.563, 58.3812, 1.36 ) }
    dend_9 { pt3dadd( -270.32, -142.014, 60.9448, 0.23 ) }
    dend_9 { pt3dadd( -270.961, -142.172, 63.1555, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( -272.365, -141.997, 67.7168, 0.23 ) }
    dend_9 { pt3dadd( -273.378, -141.634, 71.0652, 0.23 ) }
    dend_9 { pt3dadd( -274.396, -141.107, 74.2793, 0.23 ) }
    dend_9 { pt3dadd( -274.819, -140.804, 75.5148, 0.91 ) }
    dend_9 { pt3dadd( -275.654, -140.028, 77.6118, 0.23 ) }
    dend_9 { pt3dadd( -276.139, -139.515, 78.6333, 0.91 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 6/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 321.961, 131.447, 42.2922, 0.23 ) }
    dend_101 { pt3dadd( 324.004, 132.09, 42.7571, 0.23 ) }
    dend_101 { pt3dadd( 325.759, 132.718, 43.2314, 1.36 ) }
    dend_101 { pt3dadd( 328.262, 133.583, 43.8938, 0.23 ) }
    dend_101 { pt3dadd( 329.997, 134.165, 44.3292, 0.68 ) }
    dend_101 { pt3dadd( 331.894, 134.755, 44.7535, 0.23 ) }
    dend_101 { pt3dadd( 333.976, 135.361, 45.2578, 1.82 ) }
    dend_101 { pt3dadd( 335.437, 135.755, 45.563, 2.5 ) }
    dend_101 { pt3dadd( 338.503, 136.447, 46.0371, 0.23 ) }
    dend_101 { pt3dadd( 339.732, 136.656, 46.1652, 0.91 ) }
    dend_101 { pt3dadd( 341.882, 136.948, 46.3642, 0.91 ) }
    dend_101 { pt3dadd( 344.489, 137.233, 46.599, 0.23 ) }
    dend_101 { pt3dadd( 347.181, 137.505, 46.8011, 2.05 ) }
    dend_101 { pt3dadd( 350.37, 137.769, 47.0544, 0.23 ) }
    dend_101 { pt3dadd( 352.295, 137.943, 47.2765, 0.91 ) }
    dend_101 { pt3dadd( 354.963, 138.213, 47.6293, 0.23 ) }
    dend_101 { pt3dadd( 356.653, 138.418, 47.9144, 2.05 ) }
    dend_101 { pt3dadd( 358.53, 138.671, 48.2581, 0.23 ) }
    dend_101 { pt3dadd( 360.163, 138.936, 48.636, 1.14 ) }
    dend_101 { pt3dadd( 362.864, 139.602, 49.3165, 0.91 ) }
    dend_101 { pt3dadd( 365.408, 140.395, 49.9144, 0.23 ) }
    dend_101 { pt3dadd( 367.223, 140.965, 50.2919, 0.23 ) }
    dend_101 { pt3dadd( 368.604, 141.428, 50.6098, 0.23 ) }
    dend_101 { pt3dadd( 370.361, 142.065, 51.0487, 2.5 ) }
    dend_101 { pt3dadd( 372.752, 143.093, 51.6888, 0.23 ) }
    dend_101 { pt3dadd( 374.887, 144.236, 52.2299, 1.14 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 32/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 321.961, 131.447, 42.2922, 0.45 ) }
    dend_100 { pt3dadd( 322.047, 130.576, 44.324, 0.45 ) }
    dend_100 { pt3dadd( 322.273, 129.578, 46.4348, 0.45 ) }
    dend_100 { pt3dadd( 322.668, 127.834, 50.1249, 0.45 ) }
    dend_100 { pt3dadd( 322.771, 127.378, 51.089, 0.91 ) }
    dend_100 { pt3dadd( 322.849, 127.034, 51.8164, 0.23 ) }
    dend_100 { pt3dadd( 323.047, 126.16, 53.6636, 0.23 ) }
    dend_100 { pt3dadd( 323.132, 125.476, 55.2388, 0.68 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 40/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 179.574, 364.314, 61.0718, 0.23 ) }
    dend_91 { pt3dadd( 181.847, 375.113, 60.1828, 0.23 ) }
    dend_91 { pt3dadd( 184.847, 385.581, 62.048, 0.23 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 43/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 179.574, 364.314, 61.0718, 0.68 ) }
    dend_90 { pt3dadd( 180.68, 372.698, 62.2974, 0.23 ) }
    dend_90 { pt3dadd( 181.023, 380.749, 65.0954, 0.23 ) }
    dend_90 { pt3dadd( 180.979, 388.659, 68.284, 0.23 ) }
    dend_90 { pt3dadd( 181.616, 396.615, 71.2893, 0.23 ) }
    dend_90 { pt3dadd( 181.747, 404.395, 74.7778, 0.23 ) }
    dend_90 { pt3dadd( 182.245, 412.721, 76.5983, 0.23 ) }
    dend_90 { pt3dadd( 184.055, 420.512, 79.5745, 0.23 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 51/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 217.841, -230.79, 90.0223, 0.23 ) }
    dend_83 { pt3dadd( 218.566, -232.819, 89.1393, 0.23 ) }
    dend_83 { pt3dadd( 219.045, -234.005, 88.6687, 1.14 ) }
    dend_83 { pt3dadd( 219.827, -235.943, 87.8999, 0.23 ) }
    dend_83 { pt3dadd( 220.986, -238.813, 86.7609, 1.14 ) }
    dend_83 { pt3dadd( 222.102, -241.576, 85.6648, 0.23 ) }
    dend_83 { pt3dadd( 222.421, -242.366, 85.3512, 1.14 ) }
    dend_83 { pt3dadd( 223.033, -243.789, 84.8063, 0.23 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 59/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 217.841, -230.79, 90.0223, 0.68 ) }
    dend_82 { pt3dadd( 219.643, -229.313, 90.9118, 0.68 ) }
    dend_82 { pt3dadd( 221.772, -227.708, 92.3683, 0.23 ) }
    dend_82 { pt3dadd( 222.55, -227.214, 92.8841, 0.23 ) }
    dend_82 { pt3dadd( 223.547, -226.581, 93.5445, 0.91 ) }
    dend_82 { pt3dadd( 225.11, -225.589, 94.5798, 0.23 ) }
    dend_82 { pt3dadd( 226.597, -224.645, 95.5649, 1.14 ) }
    dend_82 { pt3dadd( 229.956, -222.062, 97.9115, 0.23 ) }
    dend_82 { pt3dadd( 231.095, -221.197, 98.7254, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 68/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 151.671, 233.444, 24.4749, 0.23 ) }
    dend_34 { pt3dadd( 161.45, 237.361, 22.9824, 0.23 ) }
    dend_34 { pt3dadd( 171.176, 241.362, 21.3864, 0.23 ) }
    dend_34 { pt3dadd( 180.574, 246.294, 20.9836, 0.23 ) }
    dend_34 { pt3dadd( 190.437, 250.136, 22.0885, 0.23 ) }
    dend_34 { pt3dadd( 200.693, 252.461, 23.8304, 0.23 ) }
    dend_34 { pt3dadd( 211.279, 253.595, 24.4357, 0.23 ) }
    dend_34 { pt3dadd( 221.742, 255.007, 22.9426, 0.23 ) }
    dend_34 { pt3dadd( 232.345, 254.55, 23.9371, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 151.671, 233.444, 24.4749, 0.68 ) }
    dend_33 { pt3dadd( 156.478, 239.955, 27.46, 0.23 ) }
    dend_33 { pt3dadd( 160.799, 245.977, 31.8998, 0.23 ) }
    dend_33 { pt3dadd( 165.064, 251.562, 36.95, 0.23 ) }
    dend_33 { pt3dadd( 169.396, 255.999, 43.0316, 0.23 ) }
    dend_33 { pt3dadd( 173.864, 259.424, 49.6748, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -223.005, -148.639, 30.5431, 0.68 ) }
    dend_14 { pt3dadd( -224.46, -150.471, 31.3154, 0.68 ) }
    dend_14 { pt3dadd( -225.339, -151.455, 31.7712, 0.68 ) }
    dend_14 { pt3dadd( -226.497, -152.732, 32.351, 1.36 ) }
    dend_14 { pt3dadd( -227.32, -153.702, 32.8385, 1.82 ) }
    dend_14 { pt3dadd( -228.005, -154.553, 33.3034, 1.82 ) }
    dend_14 { pt3dadd( -228.742, -155.529, 33.8362, 0.45 ) }
    dend_14 { pt3dadd( -230.047, -157.345, 34.8318, 1.36 ) }
    dend_14 { pt3dadd( -230.447, -157.957, 35.1335, 1.36 ) }
    dend_14 { pt3dadd( -231.761, -160.066, 36.113, 0.23 ) }
    dend_14 { pt3dadd( -232.538, -161.319, 36.6404, 0.91 ) }
    dend_14 { pt3dadd( -233.056, -162.139, 36.9576, 0.91 ) }
    dend_14 { pt3dadd( -233.919, -163.461, 37.3833, 0.23 ) }
    dend_14 { pt3dadd( -234.811, -164.776, 37.6877, 0.23 ) }
    dend_14 { pt3dadd( -235.733, -165.962, 37.8868, 1.36 ) }
    dend_14 { pt3dadd( -237.105, -167.513, 38.094, 0.23 ) }
    dend_14 { pt3dadd( -238.001, -168.443, 38.2217, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( -239.41, -169.761, 38.4796, 0.23 ) }
    dend_14 { pt3dadd( -240.587, -170.808, 38.7259, 0.23 ) }
    dend_14 { pt3dadd( -242.08, -172.184, 39.0539, 1.36 ) }
    dend_14 { pt3dadd( -243.953, -174.012, 39.5364, 0.23 ) }
    dend_14 { pt3dadd( -244.801, -174.915, 39.7952, 0.23 ) }
    dend_14 { pt3dadd( -245.916, -176.171, 40.1617, 1.82 ) }
    dend_14 { pt3dadd( -246.562, -176.948, 40.3825, 2.27 ) }
    dend_14 { pt3dadd( -247.746, -178.555, 40.7601, 0.23 ) }
    dend_14 { pt3dadd( -248.918, -180.364, 41.0665, 1.14 ) }
    dend_14 { pt3dadd( -249.689, -181.645, 41.1831, 0.23 ) }
    dend_14 { pt3dadd( -250.404, -182.868, 41.2526, 1.36 ) }
    dend_14 { pt3dadd( -250.893, -183.706, 41.265, 1.36 ) }
    dend_14 { pt3dadd( -252.109, -185.718, 41.2637, 0.23 ) }
    dend_14 { pt3dadd( -252.838, -186.83, 41.2406, 0.23 ) }
    dend_14 { pt3dadd( -253.697, -188.198, 41.1626, 1.82 ) }
    dend_14 { pt3dadd( -254.208, -189.014, 41.1161, 1.82 ) }
    dend_14 { pt3dadd( -255.072, -190.5, 41.0758, 0.45 ) }
    dend_14 { pt3dadd( -255.57, -191.377, 41.0937, 1.14 ) }
    dend_14 { pt3dadd( -256.217, -192.506, 41.1807, 1.14 ) }
    dend_14 { pt3dadd( -257.199, -194.263, 41.4035, 0.23 ) }
    dend_14 { pt3dadd( -258.096, -195.91, 41.7099, 1.59 ) }
    dend_14 { pt3dadd( -259.193, -197.97, 42.209, 0.23 ) }
    dend_14 { pt3dadd( -260.043, -199.555, 42.6368, 2.05 ) }
    dend_14 { pt3dadd( -260.927, -201.17, 43.092, 0.23 ) }
    dend_14 { pt3dadd( -261.591, -202.462, 43.4604, 0.68 ) }
    dend_14 { pt3dadd( -262.509, -204.251, 43.972, 0.23 ) }
    dend_14 { pt3dadd( -263.15, -205.599, 44.3218, 1.14 ) }
    dend_14 { pt3dadd( -264.119, -207.701, 44.78, 0.23 ) }
    dend_14 { pt3dadd( -264.481, -208.585, 44.9366, 1.14 ) }
    dend_14 { pt3dadd( -265.639, -211.536, 45.351, 0.23 ) }
    dend_14 { pt3dadd( -265.945, -212.332, 45.4319, 0.23 ) }
    dend_14 { pt3dadd( -266.383, -213.512, 45.5059, 1.36 ) }
    dend_14 { pt3dadd( -266.726, -214.476, 45.5428, 1.36 ) }
    dend_14 { pt3dadd( -267.495, -216.75, 45.6378, 0.23 ) }
    dend_14 { pt3dadd( -268.053, -218.386, 45.6874, 1.82 ) }
    dend_14 { pt3dadd( -268.521, -219.613, 45.688, 0.23 ) }
    dend_14 { pt3dadd( -268.902, -220.575, 45.6928, 0.23 ) }
    dend_14 { pt3dadd( -269.516, -221.953, 45.7066, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -223.005, -148.639, 30.5431, 0.23 ) }
    dend_13 { pt3dadd( -226.651, -150.784, 30.9942, 0.23 ) }
    dend_13 { pt3dadd( -229.494, -152.276, 31.4555, 0.68 ) }
    dend_13 { pt3dadd( -230.7, -152.853, 31.6627, 0.23 ) }
    dend_13 { pt3dadd( -232.92, -153.892, 32.0464, 1.36 ) }
    dend_13 { pt3dadd( -235.283, -154.945, 32.4438, 0.45 ) }
    dend_13 { pt3dadd( -236.696, -155.549, 32.6729, 0.23 ) }
    dend_13 { pt3dadd( -238.763, -156.319, 33.0284, 1.14 ) }
    dend_13 { pt3dadd( -241.123, -157.106, 33.3953, 0.23 ) }
    dend_13 { pt3dadd( -242.294, -157.502, 33.5443, 1.36 ) }
    dend_13 { pt3dadd( -243.762, -157.993, 33.7033, 1.36 ) }
    dend_13 { pt3dadd( -244.774, -158.352, 33.8283, 2.05 ) }
    dend_13 { pt3dadd( -247.864, -159.635, 34.268, 0.45 ) }
    dend_13 { pt3dadd( -249.152, -160.26, 34.4562, 0.91 ) }
    dend_13 { pt3dadd( -250.39, -160.914, 34.6746, 0.23 ) }
    dend_13 { pt3dadd( -252.034, -161.817, 35.0507, 1.59 ) }
    dend_13 { pt3dadd( -255.257, -163.565, 35.8867, 0.23 ) }
    dend_13 { pt3dadd( -257.789, -164.884, 36.5806, 1.36 ) }
    dend_13 { pt3dadd( -259.573, -165.78, 37.0754, 0.23 ) }
    dend_13 { pt3dadd( -261.407, -166.691, 37.5767, 1.59 ) }
    dend_13 { pt3dadd( -264.811, -168.395, 38.444, 0.23 ) }
    dend_13 { pt3dadd( -266.701, -169.364, 38.8567, 0.91 ) }
    dend_13 { pt3dadd( -268.397, -170.213, 39.1358, 0.23 ) }
    dend_13 { pt3dadd( -270.582, -171.269, 39.3079, 1.36 ) }
    dend_13 { pt3dadd( -271.828, -171.88, 39.2782, 0.45 ) }
    dend_13 { pt3dadd( -274.317, -173.187, 38.9077, 1.59 ) }
    dend_13 { pt3dadd( -276.895, -174.626, 38.2225, 0.23 ) }
    dend_13 { pt3dadd( -278.217, -175.395, 37.8115, 1.14 ) }
    dend_13 { pt3dadd( -281.532, -177.279, 36.6894, 0.23 ) }
    dend_13 { pt3dadd( -284.174, -178.669, 35.7695, 0.23 ) }
    dend_13 { pt3dadd( -287.59, -180.279, 34.6507, 2.05 ) }
    dend_13 { pt3dadd( -290.016, -181.329, 33.9055, 0.45 ) }
    dend_13 { pt3dadd( -292.192, -182.247, 33.3232, 1.36 ) }
    dend_13 { pt3dadd( -293.396, -182.754, 33.0683, 0.23 ) }
    dend_13 { pt3dadd( -295.536, -183.613, 32.759, 1.14 ) }
    dend_13 { pt3dadd( -299.297, -185.145, 32.3825, 0.23 ) }
    dend_13 { pt3dadd( -300.837, -185.797, 32.2651, 1.36 ) }
    dend_13 { pt3dadd( -303.581, -187.033, 32.0464, 0.23 ) }
    dend_13 { pt3dadd( -305.028, -187.739, 31.8901, 0.23 ) }
    dend_13 { pt3dadd( -306.785, -188.708, 31.6649, 1.14 ) }
    dend_13 { pt3dadd( -310.391, -190.946, 31.1223, 0.23 ) }
    dend_13 { pt3dadd( -312.765, -192.515, 30.683, 0.23 ) }
    dend_13 { pt3dadd( -314.593, -193.797, 30.25, 0.23 ) }
    dend_13 { pt3dadd( -315.652, -194.583, 29.9597, 0.23 ) }
    dend_13 { pt3dadd( -318.413, -196.796, 29.1272, 1.36 ) }
    dend_13 { pt3dadd( -319.75, -197.969, 28.7056, 0.23 ) }
    dend_13 { pt3dadd( -321.578, -199.606, 28.1284, 1.36 ) }
    dend_13 { pt3dadd( -324.161, -201.901, 27.3657, 0.23 ) }
    dend_13 { pt3dadd( -325.709, -203.178, 26.9702, 1.14 ) }
    dend_13 { pt3dadd( -328.438, -205.085, 26.4082, 0.23 ) }
    dend_13 { pt3dadd( -330.084, -206.033, 26.1495, 1.36 ) }
    dend_13 { pt3dadd( -333.418, -207.63, 25.7882, 0.23 ) }
    dend_13 { pt3dadd( -335.777, -208.5, 25.6378, 0.91 ) }
    dend_13 { pt3dadd( -338.026, -209.064, 25.5651, 0.23 ) }
    dend_13 { pt3dadd( -341.651, -209.717, 25.3855, 2.5 ) }
    dend_13 { pt3dadd( -344.97, -210.165, 25.1443, 0.23 ) }
    dend_13 { pt3dadd( -346.256, -210.341, 25.0086, 1.14 ) }
    dend_13 { pt3dadd( -349.569, -210.876, 24.478, 0.23 ) }
    dend_13 { pt3dadd( -351.826, -211.324, 23.9802, 1.36 ) }
    dend_13 { pt3dadd( -355.791, -212.3, 22.901, 0.23 ) }
    dend_13 { pt3dadd( -357.522, -212.764, 22.3385, 0.23 ) }
    dend_13 { pt3dadd( -359.82, -213.347, 21.4318, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_13 { pt3dadd( -362.345, -213.927, 20.3279, 0.23 ) }
    dend_13 { pt3dadd( -364.486, -214.336, 19.3076, 0.68 ) }
    dend_13 { pt3dadd( -365.68, -214.499, 18.7484, 0.23 ) }
    dend_13 { pt3dadd( -367.364, -214.622, 18.0278, 1.36 ) }
    dend_13 { pt3dadd( -369.24, -214.69, 17.3557, 0.23 ) }
    dend_13 { pt3dadd( -371.323, -214.711, 16.7389, 2.27 ) }
    dend_13 { pt3dadd( -374.522, -214.73, 16.0081, 0.23 ) }
    dend_13 { pt3dadd( -376.989, -214.712, 15.5053, 0.23 ) }
    dend_13 { pt3dadd( -379.466, -214.662, 15.1095, 0.91 ) }
    dend_13 { pt3dadd( -382.3, -214.655, 14.8322, 0.23 ) }
    dend_13 { pt3dadd( -384.111, -214.646, 14.77, 0.23 ) }
    dend_13 { pt3dadd( -386.035, -214.628, 14.7648, 1.14 ) }
    dend_13 { pt3dadd( -388.344, -214.517, 14.8295, 0.23 ) }
    dend_13 { pt3dadd( -390.732, -214.299, 14.95, 0.23 ) }
    dend_13 { pt3dadd( -393.298, -213.976, 15.1747, 1.36 ) }
    dend_13 { pt3dadd( -396.128, -213.655, 15.4895, 0.23 ) }
    dend_13 { pt3dadd( -397.568, -213.548, 15.6873, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -276.139, -139.515, 78.6333, 0.23 ) }
    dend_11 { pt3dadd( -277.722, -140.406, 78.9303, 0.23 ) }
    dend_11 { pt3dadd( -278.971, -141.215, 79.378, 1.14 ) }
    dend_11 { pt3dadd( -281.208, -142.831, 80.3385, 0.23 ) }
    dend_11 { pt3dadd( -282.339, -143.747, 80.8578, 0.23 ) }
    dend_11 { pt3dadd( -283.487, -144.798, 81.4128, 0.23 ) }
    dend_11 { pt3dadd( -285.345, -146.678, 82.3244, 0.91 ) }
    dend_11 { pt3dadd( -287.076, -148.854, 83.475, 0.23 ) }
    dend_11 { pt3dadd( -287.695, -149.731, 83.9558, 0.68 ) }
    dend_11 { pt3dadd( -288.513, -151.099, 84.7194, 0.23 ) }
    dend_11 { pt3dadd( -289.095, -152.201, 85.2966, 1.14 ) }
    dend_11 { pt3dadd( -289.661, -153.429, 85.9718, 0.23 ) }
    dend_11 { pt3dadd( -290.458, -155.746, 86.916, 2.05 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -276.139, -139.515, 78.6333, 0.23 ) }
    dend_10 { pt3dadd( -277.322, -136.595, 79.5587, 0.23 ) }
    dend_10 { pt3dadd( -278.482, -133.285, 80.6167, 0.23 ) }
    dend_10 { pt3dadd( -279.106, -131.505, 81.1857, 1.14 ) }
    dend_10 { pt3dadd( -279.78, -129.582, 81.8002, 0.23 ) }
    dend_10 { pt3dadd( -280.504, -127.515, 82.4609, 0.23 ) }
    dend_10 { pt3dadd( -281.354, -125.088, 83.2363, 0.23 ) }
    dend_10 { pt3dadd( -281.634, -124.182, 83.6275, 0.91 ) }
    // Section: dend_105, id: dend_105, parent: dend_101 (entry count 38/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 374.887, 144.236, 52.2299, 0.23 ) }
    dend_105 { pt3dadd( 378.046, 145.515, 51.994, 0.23 ) }
    dend_105 { pt3dadd( 381.925, 147.066, 51.7166, 0.68 ) }
    dend_105 { pt3dadd( 384.49, 148.154, 51.6384, 0.23 ) }
    dend_105 { pt3dadd( 386.337, 148.966, 51.6298, 0.91 ) }
    dend_105 { pt3dadd( 389.767, 150.54, 51.5448, 0.23 ) }
    dend_105 { pt3dadd( 392.854, 152.038, 51.3558, 0.91 ) }
    dend_105 { pt3dadd( 394.771, 153.034, 51.2186, 0.23 ) }
    dend_105 { pt3dadd( 398.243, 154.93, 50.8744, 0.23 ) }
    dend_105 { pt3dadd( 401.386, 156.757, 50.4204, 1.14 ) }
    dend_105 { pt3dadd( 405.006, 158.859, 49.8124, 0.23 ) }
    dend_105 { pt3dadd( 407.9, 160.615, 49.234, 0.23 ) }
    dend_105 { pt3dadd( 409.572, 161.653, 48.8399, 0.23 ) }
    dend_105 { pt3dadd( 411.0, 162.599, 48.4215, 0.23 ) }
    dend_105 { pt3dadd( 413.754, 164.439, 47.2834, 1.14 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 53/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 374.887, 144.236, 52.2299, 0.23 ) }
    dend_102 { pt3dadd( 376.745, 144.619, 52.6623, 0.23 ) }
    dend_102 { pt3dadd( 378.403, 144.961, 53.048, 2.27 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 56/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 184.847, 385.581, 62.048, 0.23 ) }
    dend_93 { pt3dadd( 188.019, 399.72, 63.6485, 0.23 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 58/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 184.847, 385.581, 62.048, 0.68 ) }
    dend_92 { pt3dadd( 186.995, 394.256, 62.3556, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 60/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 232.345, 254.55, 23.9371, 0.23 ) }
    dend_36 { pt3dadd( 238.469, 256.108, 24.0571, 0.23 ) }
    dend_36 { pt3dadd( 244.469, 258.005, 23.5257, 0.23 ) }
    dend_36 { pt3dadd( 250.398, 259.648, 22.0963, 0.23 ) }
    dend_36 { pt3dadd( 256.452, 260.652, 20.5751, 0.23 ) }
    dend_36 { pt3dadd( 262.383, 262.181, 19.0259, 0.23 ) }
    dend_36 { pt3dadd( 267.972, 264.088, 16.8008, 0.23 ) }
    dend_36 { pt3dadd( 273.969, 265.472, 15.3665, 0.23 ) }
    dend_36 { pt3dadd( 279.541, 268.002, 13.8622, 0.23 ) }
    dend_36 { pt3dadd( 284.816, 270.974, 12.1527, 0.23 ) }
    dend_36 { pt3dadd( 289.983, 273.263, 9.3624, 0.23 ) }
    dend_36 { pt3dadd( 295.383, 275.682, 7.19585, 0.23 ) }
    dend_36 { pt3dadd( 300.808, 278.262, 5.29871, 0.23 ) }
    dend_36 { pt3dadd( 305.976, 279.697, 1.9641, 0.23 ) }
    dend_36 { pt3dadd( 310.92, 281.91, -1.25706, 0.23 ) }
    dend_36 { pt3dadd( 315.677, 283.698, -4.99416, 0.23 ) }
    dend_36 { pt3dadd( 319.865, 285.89, -9.15676, 0.23 ) }
    dend_36 { pt3dadd( 323.459, 288.644, -13.5151, 0.23 ) }
    dend_36 { pt3dadd( 327.366, 291.571, -17.4678, 0.23 ) }
    dend_36 { pt3dadd( 331.278, 294.361, -21.5186, 0.23 ) }
    dend_36 { pt3dadd( 335.139, 297.859, -25.0039, 0.23 ) }
    dend_36 { pt3dadd( 337.863, 302.479, -28.1671, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 82/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 232.345, 254.55, 23.9371, 0.68 ) }
    dend_35 { pt3dadd( 243.486, 257.391, 24.9905, 0.23 ) }
    dend_35 { pt3dadd( 254.368, 260.272, 27.56, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -269.516, -221.953, 45.7066, 0.23 ) }
    dend_16 { pt3dadd( -270.329, -222.949, 45.6407, 0.23 ) }
    dend_16 { pt3dadd( -272.052, -224.836, 45.5366, 2.5 ) }
    dend_16 { pt3dadd( -274.922, -227.785, 45.3946, 0.23 ) }
    dend_16 { pt3dadd( -276.042, -228.909, 45.3436, 1.36 ) }
    dend_16 { pt3dadd( -277.45, -230.296, 45.2835, 0.23 ) }
    dend_16 { pt3dadd( -278.696, -231.453, 45.2714, 0.68 ) }
    dend_16 { pt3dadd( -280.954, -233.383, 45.3262, 0.23 ) }
    dend_16 { pt3dadd( -282.509, -234.613, 45.4134, 0.91 ) }
    dend_16 { pt3dadd( -283.306, -235.181, 45.4835, 0.23 ) }
    dend_16 { pt3dadd( -284.317, -235.916, 45.5781, 1.36 ) }
    dend_16 { pt3dadd( -286.725, -237.75, 45.7981, 0.23 ) }
    dend_16 { pt3dadd( -287.559, -238.439, 45.8623, 0.23 ) }
    dend_16 { pt3dadd( -288.458, -239.293, 45.9397, 1.59 ) }
    dend_16 { pt3dadd( -289.344, -240.198, 46.0169, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_16 { pt3dadd( -292.024, -243.156, 46.3153, 0.23 ) }
    dend_16 { pt3dadd( -293.255, -244.683, 46.4596, 2.05 ) }
    dend_16 { pt3dadd( -294.833, -246.968, 46.6538, 0.23 ) }
    dend_16 { pt3dadd( -296.105, -248.97, 46.8363, 1.59 ) }
    dend_16 { pt3dadd( -296.837, -250.214, 46.9569, 1.59 ) }
    dend_16 { pt3dadd( -298.11, -252.59, 47.178, 0.23 ) }
    dend_16 { pt3dadd( -298.885, -254.114, 47.2831, 1.36 ) }
    dend_16 { pt3dadd( -300.409, -257.068, 47.2658, 0.23 ) }
    dend_16 { pt3dadd( -301.338, -258.753, 47.1244, 0.68 ) }
    dend_16 { pt3dadd( -301.804, -259.46, 46.9885, 0.68 ) }
    dend_16 { pt3dadd( -303.906, -262.178, 46.2233, 0.23 ) }
    dend_16 { pt3dadd( -305.065, -263.554, 45.7881, 1.14 ) }
    dend_16 { pt3dadd( -306.872, -265.603, 45.1303, 0.23 ) }
    dend_16 { pt3dadd( -308.126, -267.048, 44.6441, 0.23 ) }
    dend_16 { pt3dadd( -309.679, -269.073, 44.0048, 0.23 ) }
    dend_16 { pt3dadd( -310.374, -270.261, 43.6787, 1.59 ) }
    dend_16 { pt3dadd( -310.976, -273.956, 43.0204, 0.23 ) }
    dend_16 { pt3dadd( -310.803, -275.184, 42.9443, 0.23 ) }
    dend_16 { pt3dadd( -310.365, -276.718, 42.8812, 0.23 ) }
    dend_16 { pt3dadd( -309.8, -278.525, 42.766, 1.36 ) }
    dend_16 { pt3dadd( -309.13, -280.753, 42.6042, 1.36 ) }
    dend_16 { pt3dadd( -308.475, -283.498, 42.2786, 0.23 ) }
    dend_16 { pt3dadd( -308.403, -284.747, 42.0153, 1.14 ) }
    dend_16 { pt3dadd( -308.621, -286.547, 41.6132, 0.23 ) }
    dend_16 { pt3dadd( -309.24, -288.933, 41.0698, 0.68 ) }
    dend_16 { pt3dadd( -309.689, -290.171, 40.7263, 0.68 ) }
    dend_16 { pt3dadd( -310.226, -291.428, 40.335, 0.23 ) }
    dend_16 { pt3dadd( -311.126, -293.568, 39.6038, 1.14 ) }
    dend_16 { pt3dadd( -311.989, -295.563, 38.9208, 0.23 ) }
    dend_16 { pt3dadd( -312.818, -297.631, 38.275, 1.14 ) }
    dend_16 { pt3dadd( -313.792, -300.207, 37.5019, 0.23 ) }
    dend_16 { pt3dadd( -314.451, -302.131, 36.9719, 0.23 ) }
    dend_16 { pt3dadd( -314.912, -303.453, 36.6447, 1.14 ) }
    dend_16 { pt3dadd( -315.944, -306.413, 36.027, 0.23 ) }
    dend_16 { pt3dadd( -316.81, -308.783, 35.5853, 0.23 ) }
    dend_16 { pt3dadd( -317.409, -310.502, 35.3136, 1.36 ) }
    dend_16 { pt3dadd( -318.332, -313.167, 34.9895, 0.23 ) }
    dend_16 { pt3dadd( -318.774, -314.551, 34.9015, 1.14 ) }
    dend_16 { pt3dadd( -319.579, -317.065, 34.8691, 0.23 ) }
    dend_16 { pt3dadd( -319.871, -317.974, 34.9195, 0.91 ) }
    dend_16 { pt3dadd( -320.834, -320.633, 35.224, 0.23 ) }
    dend_16 { pt3dadd( -321.632, -322.638, 35.5392, 1.14 ) }
    dend_16 { pt3dadd( -323.186, -325.924, 36.0531, 0.68 ) }
    dend_16 { pt3dadd( -324.028, -327.488, 36.1927, 0.23 ) }
    dend_16 { pt3dadd( -325.767, -330.184, 36.2192, 1.14 ) }
    dend_16 { pt3dadd( -326.495, -331.168, 36.1919, 0.23 ) }
    dend_16 { pt3dadd( -327.679, -332.56, 36.1222, 0.68 ) }
    dend_16 { pt3dadd( -329.684, -334.826, 35.9054, 0.23 ) }
    dend_16 { pt3dadd( -331.724, -336.924, 35.5808, 0.23 ) }
    dend_16 { pt3dadd( -333.35, -338.589, 35.3504, 2.95 ) }
    dend_16 { pt3dadd( -335.539, -340.696, 35.0143, 0.23 ) }
    dend_16 { pt3dadd( -337.269, -342.347, 34.8055, 0.68 ) }
    dend_16 { pt3dadd( -338.512, -343.554, 34.6553, 0.68 ) }
    dend_16 { pt3dadd( -339.487, -344.499, 34.5336, 0.23 ) }
    dend_16 { pt3dadd( -340.181, -345.165, 34.4164, 0.91 ) }
    dend_16 { pt3dadd( -342.056, -346.925, 33.8634, 0.23 ) }
    dend_16 { pt3dadd( -343.175, -347.95, 33.4286, 0.91 ) }
    dend_16 { pt3dadd( -345.41, -349.957, 32.519, 0.23 ) }
    dend_16 { pt3dadd( -346.78, -351.188, 32.0118, 0.23 ) }
    dend_16 { pt3dadd( -348.248, -352.55, 31.5235, 0.91 ) }
    dend_16 { pt3dadd( -349.92, -354.065, 31.0795, 0.23 ) }
    dend_16 { pt3dadd( -351.368, -355.389, 30.8174, 2.73 ) }
    dend_16 { pt3dadd( -351.913, -355.889, 30.7646, 2.73 ) }
    dend_16 { pt3dadd( -353.841, -357.794, 30.7325, 0.23 ) }
    dend_16 { pt3dadd( -354.826, -358.823, 30.757, 1.14 ) }
    dend_16 { pt3dadd( -356.071, -360.137, 30.8064, 0.23 ) }
    dend_16 { pt3dadd( -357.959, -362.181, 30.8994, 0.23 ) }
    dend_16 { pt3dadd( -359.571, -364.109, 30.9671, 0.23 ) }
    dend_16 { pt3dadd( -360.607, -365.497, 30.9825, 1.14 ) }
    dend_16 { pt3dadd( -361.406, -366.668, 30.9662, 0.23 ) }
    dend_16 { pt3dadd( -362.165, -367.857, 30.8337, 1.82 ) }
    dend_16 { pt3dadd( -362.667, -368.669, 30.6805, 1.82 ) }
    dend_16 { pt3dadd( -364.007, -370.841, 30.1723, 0.23 ) }
    dend_16 { pt3dadd( -365.104, -372.58, 29.6673, 1.14 ) }
    dend_16 { pt3dadd( -366.824, -375.24, 28.8272, 0.23 ) }
    dend_16 { pt3dadd( -368.471, -377.925, 27.8976, 2.73 ) }
    dend_16 { pt3dadd( -369.18, -379.11, 27.4438, 2.73 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -269.516, -221.953, 45.7066, 0.23 ) }
    dend_15 { pt3dadd( -268.329, -222.197, 45.2684, 0.23 ) }
    dend_15 { pt3dadd( -266.731, -222.524, 44.679, 0.91 ) }
    dend_15 { pt3dadd( -265.779, -222.719, 44.3278, 0.23 ) }
    dend_15 { pt3dadd( -264.031, -223.078, 43.6828, 0.68 ) }
    dend_15 { pt3dadd( -262.202, -223.453, 43.0077, 0.23 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 83/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 378.403, 144.961, 53.048, 0.23 ) }
    dend_104 { pt3dadd( 379.698, 144.375, 53.0442, 0.23 ) }
    dend_104 { pt3dadd( 380.64, 143.98, 53.0321, 0.45 ) }
    dend_104 { pt3dadd( 381.68, 143.597, 53.0062, 0.23 ) }
    dend_104 { pt3dadd( 382.947, 143.176, 52.9545, 0.91 ) }
    dend_104 { pt3dadd( 383.627, 142.944, 52.9121, 0.23 ) }
    dend_104 { pt3dadd( 384.554, 142.61, 52.8403, 1.14 ) }
    dend_104 { pt3dadd( 385.342, 142.329, 52.7904, 0.23 ) }
    dend_104 { pt3dadd( 386.46, 141.963, 52.7523, 0.23 ) }
    dend_104 { pt3dadd( 387.738, 141.594, 52.7275, 1.14 ) }
    dend_104 { pt3dadd( 389.084, 141.266, 52.7209, 0.23 ) }
    dend_104 { pt3dadd( 389.992, 141.079, 52.7402, 0.68 ) }
    dend_104 { pt3dadd( 391.413, 140.825, 52.7982, 0.23 ) }
    dend_104 { pt3dadd( 393.047, 140.615, 52.8922, 0.68 ) }
    dend_104 { pt3dadd( 394.303, 140.525, 53.0007, 0.23 ) }
    dend_104 { pt3dadd( 395.761, 140.527, 53.1616, 0.68 ) }
    dend_104 { pt3dadd( 397.079, 140.634, 53.3222, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_104 { pt3dadd( 397.567, 140.695, 53.3804, 0.91 ) }
    dend_104 { pt3dadd( 398.837, 140.901, 53.5034, 0.23 ) }
    dend_104 { pt3dadd( 399.827, 141.099, 53.5887, 0.68 ) }
    dend_104 { pt3dadd( 400.37, 141.208, 53.6425, 0.23 ) }
    dend_104 { pt3dadd( 401.218, 141.406, 53.7319, 0.91 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 5/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 378.403, 144.961, 53.048, 0.23 ) }
    dend_103 { pt3dadd( 380.586, 146.814, 55.1336, 0.23 ) }
    dend_103 { pt3dadd( 382.336, 148.35, 56.6898, 0.23 ) }
    dend_103 { pt3dadd( 383.779, 149.653, 57.8851, 1.14 ) }
    dend_103 { pt3dadd( 386.49, 152.065, 60.0959, 0.23 ) }
    dend_103 { pt3dadd( 388.767, 154.133, 62.0531, 0.23 ) }
    dend_103 { pt3dadd( 389.863, 155.13, 62.9961, 1.14 ) }
    dend_103 { pt3dadd( 392.054, 157.065, 64.8116, 0.23 ) }
    dend_103 { pt3dadd( 393.347, 158.224, 65.9391, 0.23 ) }
    dend_103 { pt3dadd( 394.947, 159.706, 67.3193, 1.59 ) }
    dend_103 { pt3dadd( 396.587, 161.336, 68.6797, 2.27 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_60 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_42 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_107 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_76 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_67 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_64 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_61 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_50 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_44 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_84 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_75 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_68 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_63 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_62 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_57 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_54 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_38 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_4 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_106 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_97 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_95 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_88 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_79 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_69 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_59 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_58 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_52 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_28 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_17 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_8 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_6 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_5 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_99 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_98 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_94 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_89 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_81 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_74 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_71 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_32 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_30 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_9 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_101 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_90 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_34 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_33 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_14 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_13 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_105 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_36 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_16 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_49 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_24 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_65 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_85 OneSecGrp_SectionRef_10.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_66 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_86 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_51 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_87 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_96 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_27 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_77 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_72 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_78 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_109 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_73 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_29 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_37 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_108 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_70 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_12 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_41 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_80 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_46 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_10 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_100 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_11 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_15 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_83 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_102 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_104 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_103 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_35 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_91 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_92 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_93 OneSecGrp_SectionRef_106.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_48, dend_48, dend_48, dend_48, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_109, dend_108, dend_108, dend_108, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_93, dend_92, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_2 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_102 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_60 nseg = 3
    dend_42 nseg = 5
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_107 nseg = 7
    dend_76 nseg = 5
    dend_67 nseg = 3
    dend_64 nseg = 9
    dend_61 nseg = 7
    dend_55 nseg = 5
    dend_50 nseg = 3
    dend_44 nseg = 9
    dend_39 nseg = 9
    dend_22 nseg = 9
    dend_18 nseg = 3
    dend_84 nseg = 7
    dend_75 nseg = 5
    dend_68 nseg = 3
    dend_63 nseg = 5
    dend_62 nseg = 5
    dend_57 nseg = 3
    dend_56 nseg = 9
    dend_54 nseg = 7
    dend_38 nseg = 7
    dend_20 nseg = 15
    dend_19 nseg = 7
    dend_7 nseg = 5
    dend_4 nseg = 7
    dend_106 nseg = 5
    dend_97 nseg = 3
    dend_95 nseg = 9
    dend_88 nseg = 15
    dend_79 nseg = 7
    dend_69 nseg = 3
    dend_59 nseg = 3
    dend_58 nseg = 7
    dend_53 nseg = 5
    dend_52 nseg = 5
    dend_31 nseg = 3
    dend_28 nseg = 3
    dend_17 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_99 nseg = 9
    dend_98 nseg = 13
    dend_94 nseg = 3
    dend_89 nseg = 3
    dend_81 nseg = 3
    dend_74 nseg = 13
    dend_71 nseg = 3
    dend_32 nseg = 7
    dend_30 nseg = 3
    dend_9 nseg = 5
    dend_101 nseg = 3
    dend_90 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 9
    dend_105 nseg = 3
    dend_36 nseg = 7
    dend_16 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_LBC_c2cff91741_0_0


