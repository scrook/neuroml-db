// Cell: bSTUT213_L4_DBC_23ffe29c8b_0_0
/*
{
  "id" : "bSTUT213_L4_DBC_23ffe29c8b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.3653, -2.34, 2.22", "-0.994739, -14.7775, -0.933754, 2.22", "-1.34369, -18.2593, 0.387571, 2.49", "-1.86744, -24.3073, 2.49053, 2.49", "-2.17388, -30.1517, 4.22006, 2.49", "-2.25999, -32.8039, 4.9117, 1.94", "-2.29854, -35.6624, 5.57657, 1.38", "-2.21505, -39.1394, 6.28213, 1.11", "-2.10541, -41.4846, 6.64764, 0.83", "-1.80609, -47.3679, 7.19734, 1.11", "-1.71012, -49.7417, 7.22895, 1.11", "-1.59012, -52.5826, 7.19212, 1.38", "-1.4546, -55.3014, 7.11146, 0.83", "-1.31178, -57.6152, 7.05567, 1.66", "-1.14356, -59.8048, 7.02049, 1.11", "-0.738168, -64.5459, 6.89753, 1.66", "-0.494244, -67.1443, 6.82383, 1.38", "-0.144544, -70.4862, 6.72021, 1.94", "0.313641, -74.0101, 6.60275, 1.38", "0.944384, -77.6717, 6.4755, 1.38", "1.90389, -82.1882, 6.31883, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.23473, -0.86, 2.22", "-0.987629, 14.036, -0.831846, 1.94", "-0.643127, 17.7903, -0.710307, 1.94", "-0.294113, 23.4099, -0.346538, 1.94", "-0.201769, 25.459, -0.187309, 1.38", "0.0834483, 30.0907, 0.155094, 2.22", "0.363382, 34.6366, 0.491154, 1.94", "0.727644, 40.7839, 0.970921, 1.94", "0.937178, 45.213, 1.41383, 1.94", "1.02178, 49.4995, 1.98216, 1.94", "1.08533, 55.3063, 2.75953, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.90389, -82.1882, 6.31883, 0.55", "2.68087, -83.5315, 6.58015, 0.55", "3.48071, -84.6813, 6.95266, 0.55", "4.6861, -86.2449, 7.67805, 0.28", "6.07638, -87.7393, 8.43138, 0.55", "7.741, -89.3726, 9.24067, 0.28", "9.15683, -90.6453, 9.97493, 1.11", "11.4366, -92.5546, 11.2383, 0.28", "12.9572, -93.7016, 12.2563, 0.83", "15.2394, -95.2712, 13.9046, 0.83", "16.6118, -96.1811, 14.9448, 0.83", "18.9324, -97.7428, 16.7315, 0.83", "20.1413, -98.5479, 17.6693, 1.11", "23.8087, -101.18, 20.3464, 0.28", "24.6065, -101.813, 20.8597, 0.28", "25.2885, -102.392, 21.2535, 0.55", "26.2739, -103.228, 21.684, 0.55", "28.2798, -104.933, 22.1998, 0.55", "30.1355, -106.42, 22.4532, 0.55", "32.1166, -108.012, 22.4567, 0.83", "33.9766, -109.375, 22.4349, 1.11", "35.603, -110.536, 22.42, 0.55", "36.4904, -111.185, 22.4227, 1.38", "37.6526, -112.025, 22.443, 0.55", "38.9707, -112.821, 22.4578, 1.11", "41.7854, -114.384, 22.4185, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.90389, -82.1882, 6.31883, 1.38", "1.72778, -83.1852, 6.16001, 1.38", "1.15164, -86.1107, 5.94564, 1.38", "0.792595, -87.9338, 5.81204, 1.11", "0.0122583, -91.8961, 5.52168, 1.66", "-0.485016, -94.4211, 5.33665, 2.22", "-0.738585, -95.7087, 5.2423, 2.22", "-1.37752, -99.4041, 4.88733, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.08533, 55.3063, 2.75953, 1.38", "1.01339, 58.4546, 2.73653, 1.38", "1.04484, 60.5882, 2.71511, 1.38", "1.14913, 63.706, 2.67184, 1.11", "1.38819, 68.5019, 2.67956, 1.38", "1.49942, 70.8975, 2.67579, 1.38", "1.59591, 75.0826, 2.67387, 1.38", "1.65396, 80.3794, 2.66325, 1.38", "1.60042, 84.2399, 2.64247, 1.38", "1.51123, 87.8339, 2.62445, 1.38", "1.32042, 91.1913, 2.60035, 1.38", "0.734704, 96.7974, 2.53197, 1.66", "0.257662, 100.019, 2.47886, 1.38", "-0.33787, 103.684, 2.30365, 1.38", "-1.0077, 107.893, 1.97179, 1.38", "-1.46166, 111.25, 1.61807, 1.38", "-1.63087, 113.031, 1.42209, 1.38", "-1.79168, 115.787, 1.112, 1.11", "-1.94969, 119.954, 0.674726, 1.11", "-1.92211, 124.343, 0.267778, 1.11", "-1.8127, 128.774, -0.0757044, 1.38", "-1.70562, 131.751, -0.219607, 1.11", "-1.63344, 134.608, -0.278471, 1.38", "-1.61018, 136.45, -0.222692, 1.38", "-1.60425, 139.395, 0.108102, 1.38", "-1.67544, 143.613, 0.70932, 1.94", "-1.70324, 145.844, 1.06637, 1.66", "-1.70677, 146.782, 1.21183, 1.66", "-1.71104, 149.706, 1.62367, 1.66", "-1.7169, 154.318, 2.22742, 1.66", "-1.76979, 156.725, 2.50507, 1.38", "-1.89316, 160.524, 2.86714, 1.66", "-1.96367, 163.873, 3.09537, 1.11", "-2.01478, 167.583, 3.30408, 1.11", "-2.04859, 169.649, 3.37148, 1.11", "-2.05743, 171.93, 3.42147, 1.11", "-2.02197, 173.638, 3.48277, 1.11", "-1.83686, 177.261, 3.66325, 1.38", "-1.62591, 180.022, 3.82779, 1.11", "-1.45048, 182.09, 3.94831, 1.38", "-1.25077, 184.44, 4.07266, 1.38", "-1.06913, 187.118, 4.18527, 0.83", "-0.93385, 190.363, 4.27977, 1.38", "-0.915119, 192.954, 4.31072, 0.83", "-0.949483, 195.585, 4.29552, 1.38", "-1.05339, 197.66, 4.27155, 1.38", "-1.30769, 201.065, 4.19082, 1.38", "-1.4046, 202.567, 4.14779, 1.38", "-1.49487, 204.897, 4.0773, 1.11", "-1.49048, 207.794, 3.99559, 1.11", "-1.33385, 211.977, 3.88329, 1.66", "-1.1087, 214.666, 3.819, 1.11", "-0.999469, 215.729, 3.85867, 1.11", "-0.872575, 217.576, 4.00863, 1.38", "-0.769785, 219.913, 4.29446, 1.38", "-0.751001, 222.549, 4.70346, 1.94", "-0.859954, 225.282, 5.19055, 1.94", "-1.25039, 229.742, 5.98969, 1.11", "-1.58177, 232.227, 6.38205, 1.11", "-1.99235, 234.583, 6.70478, 1.38", "-2.57655, 237.417, 7.01102, 1.38", "-3.06919, 239.788, 7.18662, 1.11", "-3.52669, 242.394, 7.27407, 0.83", "-3.943, 245.372, 7.21637, 0.83", "-4.16598, 247.09, 7.18391, 0.83", "-4.55911, 250.074, 7.12245, 1.11", "-4.83965, 252.694, 7.05357, 1.11", "-5.12178, 255.39, 6.96109, 1.38", "-5.55817, 259.491, 6.79967, 1.38", "-5.79235, 262.003, 6.6967, 1.11", "-6.05281, 264.982, 6.57016, 1.38", "-6.29069, 267.427, 6.4239, 0.83", "-6.67421, 270.693, 6.19504, 0.83", "-6.95665, 273.283, 5.98548, 1.38", "-7.01813, 274.448, 5.89026, 1.38", "-7.09968, 276.581, 5.70487, 1.11", "-7.23845, 280.108, 5.37743, 1.38", "-7.29598, 282.254, 5.17614, 1.11", "-7.26232, 284.362, 4.97057, 1.11", "-7.20513, 286.472, 4.76699, 1.11", "-7.13962, 289.103, 4.51138, 1.11", "-6.99647, 293.628, 4.05578, 1.11", "-6.87351, 296.283, 3.80155, 1.11", "-6.77646, 299.215, 3.58443, 1.38", "-6.74094, 302.225, 3.44224, 1.38", "-6.76268, 305.043, 3.37288, 0.83", "-6.77396, 307.209, 3.38743, 1.38", "-6.77507, 309.255, 3.47464, 1.38", "-6.80103, 312.033, 3.66664, 1.11", "-6.80741, 313.879, 3.83622, 0.55", "-6.71648, 315.717, 4.03014, 1.11", "-6.61301, 317.455, 4.21236, 1.11", "-6.48664, 319.312, 4.37383, 0.83", "-6.32861, 321.274, 4.47207, 0.83", "-6.17571, 323.056, 4.48925, 0.83", "-5.99753, 326.304, 4.5049, 1.11", "-5.87211, 328.424, 4.47861, 1.66", "-5.82422, 330.463, 4.41655, 1.66", "-5.87669, 333.107, 4.30526, 0.83", "-5.93857, 335.23, 4.19561, 0.83", "-5.98873, 338.226, 4.03499, 1.11", "-6.09766, 341.793, 3.82576, 0.83", "-6.19252, 345.777, 3.59922, 0.83", "-6.24477, 348.057, 3.46863, 0.83", "-6.37162, 352.769, 3.20003, 1.38", "-6.55071, 357.478, 2.94137, 1.38", "-6.64705, 359.576, 2.83737, 1.11", "-6.91329, 362.831, 2.69886, 1.11", "-7.10646, 364.899, 2.60581, 0.83", "-7.31032, 366.353, 2.53322, 0.83", "-7.81781, 368.788, 2.51055, 1.38", "-8.10067, 370.056, 2.59552, 1.38", "-8.61746, 373.024, 2.95772, 0.83", "-8.87343, 375.051, 3.29529, 0.83", "-9.14868, 378.287, 3.72633, 0.83", "-9.30814, 381.311, 4.17436, 0.83", "-9.38907, 385.192, 4.81565, 1.38", "-9.40541, 387.827, 5.2807, 1.38", "-9.29198, 389.66, 5.64466, 1.38", "-8.73862, 393.904, 6.49521, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.08533, 55.3063, 2.75953, 1.11", "1.32093, 59.6673, -1.803, 1.11", "1.42049, 61.0146, -3.02338, 1.11", "1.51903, 63.3349, -5.16701, 1.11", "1.68473, 69.9865, -11.081, 1.11", "1.71413, 72.4517, -13.0227, 1.11", "1.6972, 75.9135, -15.5091, 0.83", "1.62044, 77.9834, -16.7683, 0.83", "1.43347, 83.8984, -19.9851, 1.11", "1.36083, 86.6033, -21.1775, 1.11", "1.07623, 90.8534, -22.4204, 1.11", "0.644442, 94.7465, -23.2112, 1.11", "0.28886, 97.46, -23.4832, 1.38", "0.0830916, 99.363, -23.4221, 1.38", "-0.081668, 101.57, -23.1298, 1.11", "-0.375196, 105.774, -22.5489, 1.11", "-0.632439, 110.218, -22.0511, 0.83", "-0.659207, 110.921, -21.9534, 0.83", "-0.754558, 115.21, -21.4994, 1.66", "-0.867368, 118.885, -21.3286, 0.83", "-0.892419, 119.592, -21.3433, 0.83", "-0.964357, 122.59, -21.5946, 1.66", "-1.03323, 124.474, -21.8376, 1.66", "-1.13802, 126.859, -22.0666, 1.11", "-1.3321, 129.67, -22.2902, 1.11", "-1.55843, 132.686, -22.4138, 1.11", "-1.79427, 136.283, -22.5923, 1.66", "-1.99462, 139.683, -22.7167, 1.66", "-2.23594, 143.235, -22.9215, 0.83", "-2.45117, 146.361, -23.2309, 0.83", "-2.56851, 148.569, -23.5534, 0.83", "-2.66129, 151.736, -24.0978, 1.66", "-2.71234, 154.769, -24.6769, 0.55", "-2.75352, 157.726, -25.2336, 0.55", "-2.72233, 161.031, -25.7916, 1.38", "-2.61328, 163.784, -26.1363, 1.94", "-2.47027, 167.106, -26.4299, 0.83", "-2.40655, 168.954, -26.5182, 0.83", "-2.35092, 172.075, -26.5979, 1.94", "-2.31049, 176.001, -26.5199, 1.94", "-2.33454, 178.558, -26.432, 1.11", "-2.34301, 181.56, -26.1515, 1.11", "-2.3628, 184.278, -25.8004, 1.11", "-2.36981, 185.845, -25.5474, 1.11", "-2.39136, 187.447, -25.2821, 1.11", "-2.58028, 193.408, -24.2809, 2.22", "-2.74499, 200.228, -23.1763, 0.83", "-2.76065, 202.218, -22.8946, 0.83", "-2.71356, 204.907, -22.5841, 1.11", "-2.64787, 208.257, -22.3177, 0.55", "-2.68895, 210.864, -22.2317, 2.22", "-2.77444, 212.493, -22.3199, 1.94", "-2.91573, 214.856, -22.6744, 0.83", "-3.00901, 217.373, -23.0443, 0.83", "-3.05335, 219.903, -23.3815, 0.83", "-3.13468, 222.575, -23.6503, 1.66", "-3.24698, 225.514, -23.9183, 0.83", "-3.31531, 227.195, -24.0365, 0.83", "-3.37636, 228.621, -24.1387, 1.11", "-3.50203, 230.825, -24.314, 0.83", "-3.67519, 234.678, -24.6653, 0.83", "-3.71049, 235.375, -24.7284, 0.83", "-4.00784, 239.219, -25.0382, 1.94", "-4.2358, 242.087, -25.2727, 0.55", "-4.47619, 245.326, -25.6131, 0.55", "-4.52693, 245.909, -25.7003, 0.55", "-4.983, 250.521, -26.5251, 2.22", "-5.26076, 254.044, -27.1916, 0.83", "-5.34138, 255.64, -27.4831, 0.83", "-5.42917, 259.418, -28.1111, 1.38", "-5.38123, 262.748, -28.6327, 0.55", "-5.28623, 265.704, -29.0279, 0.55", "-5.04316, 269.813, -29.6011, 0.83", "-4.54688, 275.593, -30.0777, 0.83", "-4.3789, 277.218, -30.1246, 2.49", "-4.01663, 280.357, -30.0306, 2.49", "-3.4522, 285.236, -29.6976, 0.83", "-3.14637, 287.984, -29.4751, 0.83", "-2.8111, 293.435, -28.9822, 0.83", "-2.74433, 295.05, -28.8276, 0.83", "-2.74761, 298.559, -28.5173, 1.66", "-2.811, 302.106, -28.2474, 0.83", "-2.87659, 304.697, -28.0872, 0.83", "-2.99647, 308.572, -27.9173, 0.83", "-3.07385, 311.564, -27.9159, 1.94", "-3.08503, 316.515, -27.9148, 0.83", "-3.01698, 321.62, -27.9145, 0.83", "-2.96353, 323.911, -27.9146, 0.83", "-2.90585, 326.796, -27.9147, 1.11", "-2.86729, 329.031, -27.9146, 2.49", "-2.89904, 332.858, -27.9136, 0.83", "-2.95908, 334.176, -27.9127, 0.83", "-3.12788, 336.401, -27.9105, 0.83", "-3.41301, 340.089, -27.9068, 0.83", "-3.6519, 343.691, -27.9813, 0.83", "-3.95718, 347.908, -28.1431, 1.11", "-4.17955, 351.598, -28.3803, 1.66", "-4.31181, 355.134, -28.6525, 0.83", "-4.37789, 358.025, -28.9247, 0.83", "-4.30513, 361.352, -29.2911, 0.83", "-4.18637, 363.795, -29.5899, 0.83", "-4.06985, 366.488, -29.9432, 0.83", "-3.88422, 370.696, -30.4904, 1.66", "-3.75228, 374.038, -30.9121, 0.83", "-3.68957, 375.808, -31.1097, 0.83", "-3.58772, 380.102, -31.4581, 1.38", "-3.42282, 384.132, -31.7701, 0.83", "-3.35021, 386.368, -31.925, 0.83", "-3.31027, 387.708, -32.0339, 1.66", "-3.26895, 390.422, -32.2233, 1.66", "-3.35323, 393.157, -32.4054, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "41.7854, -114.384, 22.4185, 0.83", "43.081, -114.321, 23.2607, 0.83", "43.9423, -114.259, 23.8818, 0.28", "46.0155, -114.111, 25.3767, 0.55", "46.8328, -114.053, 25.9661, 0.55", "48.0115, -113.969, 26.816, 0.55", "51.801, -113.698, 29.5486, 0.28", "52.2927, -113.696, 29.977, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "41.7854, -114.384, 22.4185, 0.55", "43.2812, -115.86, 23.9398, 0.55", "43.6859, -116.107, 24.3582, 0.83", "44.6769, -116.785, 25.4529, 0.28", "45.0793, -117.083, 25.9632, 0.83", "45.8743, -117.651, 26.9529, 0.83", "47.7954, -119.004, 29.2873, 0.83", "50.3376, -120.585, 32.0999, 0.83", "51.3045, -121.103, 33.2584, 0.83", "53.7414, -122.03, 36.2622, 1.11", "54.4936, -122.206, 37.3566, 0.83", "54.7386, -122.212, 37.7807, 0.83", "55.4374, -121.896, 39.3772, 0.83", "56.4096, -120.64, 42.5925, 0.83", "57.021, -119.464, 44.8167, 0.83", "57.5891, -117.579, 47.5118, 0.83", "57.7723, -116.613, 48.8756, 1.11", "57.9296, -115.118, 50.9401, 0.28", "57.9198, -114.828, 51.3344, 0.55", "57.8418, -113.483, 52.7874, 0.28", "57.5433, -112.767, 53.6937, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.37752, -99.4041, 4.88733, 1.11", "-2.36233, -100.677, 5.83733, 1.11", "-3.47273, -102.433, 7.011, 1.11", "-6.01792, -107.368, 9.8103, 1.38", "-7.30408, -110.311, 11.4998, 1.38", "-8.25159, -112.48, 12.7444, 1.66", "-9.75423, -115.92, 14.7182, 1.11", "-10.4853, -117.913, 15.8331, 1.11", "-11.3247, -121.02, 17.4269, 1.38", "-12.2417, -126.341, 19.7147, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.37752, -99.4041, 4.88733, 1.38", "-1.35579, -104.06, 4.95084, 1.38", "-1.27091, -107.822, 5.10772, 1.94", "-1.11064, -110.554, 5.01774, 1.38", "-0.569453, -115.081, 4.27446, 1.94", "0.0648372, -118.593, 3.438, 0.83", "0.559885, -120.714, 2.81445, 0.83", "1.4074, -123.432, 1.89513, 1.38", "3.13103, -127.508, 0.155842, 1.94", "5.49615, -131.821, -2.16478, 0.83", "6.37467, -133.141, -3.03949, 0.83", "8.7982, -136.353, -5.67601, 1.11", "10.2615, -138.19, -7.26046, 0.55", "11.0125, -139.154, -8.16164, 0.55", "12.4592, -141.143, -10.0267, 0.55", "13.1488, -142.177, -11.1181, 0.83", "14.6445, -144.493, -13.7915, 0.55", "16.1301, -146.775, -16.7096, 1.66", "18.3375, -150.377, -21.4763, 0.55", "19.1782, -151.94, -23.5261, 1.66", "20.7297, -155.318, -27.7941, 0.55", "21.4346, -156.799, -29.6929, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.73862, 393.904, 6.49521, 0.83", "-8.54485, 395.366, 5.38053, 0.83", "-8.41113, 396.981, 4.14816, 0.83", "-8.23126, 399.095, 2.71601, 0.55", "-7.98189, 401.189, 1.39462, 0.83", "-7.71679, 403.306, 0.179402, 0.28", "-7.6008, 404.289, -0.333968, 0.55", "-7.56653, 404.963, -0.677467, 0.55", "-7.4448, 406.932, -1.56061, 1.11", "-7.31003, 408.619, -2.13888, 0.55", "-7.19169, 410.069, -2.55247, 1.11", "-7.09762, 411.323, -2.83435, 1.11", "-6.97663, 413.213, -3.1753, 0.28", "-6.88968, 415.668, -3.69613, 0.55", "-6.8877, 418.546, -4.36517, 0.55", "-6.87912, 420.019, -4.66215, 0.55", "-6.86039, 421.1, -4.85598, 0.28", "-6.79534, 422.677, -5.00716, 0.83", "-6.64641, 425.765, -5.00729, 1.38", "-6.62768, 427.238, -4.92412, 1.38", "-6.54703, 430.61, -4.56226, 0.83", "-6.52465, 432.218, -4.34305, 0.83", "-6.47928, 436.676, -3.5569, 0.83", "-6.47865, 438.211, -3.24817, 0.83", "-6.47468, 440.664, -2.61227, 0.83", "-6.48342, 441.288, -2.44415, 0.83", "-6.51422, 443.43, -1.88531, 1.38", "-6.49859, 444.929, -1.54108, 0.55", "-6.45791, 446.741, -1.25957, 0.55", "-6.36045, 447.738, -1.15554, 0.55", "-6.24812, 448.467, -1.11149, 0.28", "-5.86895, 450.484, -1.08411, 0.83", "-5.49844, 452.037, -1.17037, 0.55", "-5.03226, 453.707, -1.33867, 0.83", "-4.34778, 456.105, -1.62522, 0.55", "-3.96605, 457.498, -1.80595, 1.66", "-3.39675, 459.676, -2.10105, 1.66", "-2.8356, 462.061, -2.42183, 0.83", "-2.44019, 463.981, -2.66837, 0.83", "-2.17605, 465.559, -2.84929, 0.83", "-2.06896, 466.503, -2.93648, 0.28", "-1.9628, 468.103, -3.02541, 1.11", "-1.96631, 470.511, -3.08525, 0.55", "-2.02462, 471.897, -3.08542, 0.55", "-2.10467, 473.346, -3.10623, 0.55", "-2.17967, 474.304, -3.1407, 0.55", "-2.36134, 475.689, -3.22011, 1.11", "-2.62625, 477.214, -3.33661, 0.28", "-2.75964, 477.928, -3.39883, 0.55", "-2.96771, 479.628, -3.53741, 0.55", "-3.14345, 482.333, -3.73842, 0.55", "-3.14701, 483.286, -3.79352, 0.83", "-3.09115, 484.795, -3.89871, 0.83", "-2.94964, 486.958, -4.00829, 0.83", "-2.74063, 489.009, -4.04397, 0.83", "-2.48507, 490.584, -4.03634, 0.83", "-1.63951, 494.038, -3.96461, 1.11", "-1.11897, 495.804, -3.91415, 0.28", "-0.743223, 496.85, -3.89169, 0.55", "-0.312742, 497.986, -3.74498, 0.55", "0.0644385, 498.948, -3.51649, 0.55", "0.371833, 499.597, -3.28565, 0.55", "1.5438, 501.569, -2.43432, 0.55", "2.35582, 502.969, -1.84024, 0.83", "4.39154, 506.509, -0.683592, 0.55", "4.72115, 507.116, -0.496458, 0.83", "5.31779, 508.323, -0.156697, 0.83", "5.99819, 509.838, 0.199824, 0.55", "6.56151, 511.226, 0.428548, 0.83", "7.35263, 513.481, 0.601745, 0.83", "7.9714, 515.466, 0.632425, 0.55", "8.15711, 516.199, 0.689262, 0.55", "8.50965, 517.843, 0.899252, 0.55", "8.65245, 518.639, 1.03773, 0.83", "8.90667, 520.042, 1.32363, 0.83", "9.24942, 522.533, 1.79964, 0.55", "9.41835, 523.743, 1.97562, 0.55", "9.65395, 525.562, 2.25225, 0.55", "9.82199, 527.059, 2.46938, 0.55", "10.164, 529.842, 2.86304, 0.55", "10.4149, 531.81, 3.08636, 0.83", "10.5484, 532.829, 3.14557, 1.11", "10.7348, 534.855, 3.266, 0.55", "10.8442, 537.761, 3.4897, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.73862, 393.904, 6.49521, 0.55", "-10.0064, 396.894, 5.93499, 0.55", "-10.8406, 399.039, 5.60998, 0.55", "-11.4582, 400.861, 5.38607, 0.55", "-11.9635, 402.505, 5.20784, 0.55", "-12.9654, 405.873, 4.87671, 0.55", "-13.5454, 407.828, 4.68963, 0.83", "-14.3047, 410.286, 4.54293, 0.83", "-15.0537, 412.843, 4.38885, 0.83", "-15.5605, 414.981, 4.26866, 0.55", "-15.9053, 416.775, 4.17721, 0.55", "-16.3935, 419.241, 4.07999, 0.83", "-16.7904, 421.225, 4.01809, 0.83", "-17.479, 424.338, 3.92512, 0.83", "-17.9451, 426.374, 3.8752, 0.83", "-18.2859, 427.959, 3.85595, 0.55", "-18.662, 430.006, 3.85853, 0.83", "-19.0047, 432.28, 3.92539, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.35323, 393.157, -32.4054, 0.55", "-3.36536, 395.003, -32.4043, 0.55", "-3.38292, 397.673, -32.4029, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.35323, 393.157, -32.4054, 0.55", "-7.04609, 393.449, -32.3618, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "52.2927, -113.696, 29.977, 0.28", "52.0463, -116.056, 28.8342, 0.28", "52.0008, -116.491, 28.6236, 1.11", "51.7851, -118.557, 27.6235, 0.28", "51.7634, -118.764, 27.523, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "52.2927, -113.696, 29.977, 1.66", "52.6634, -112.944, 30.6268, 1.66", "53.3607, -110.895, 32.0754, 0.83", "53.9885, -108.852, 33.4405, 0.28", "54.1436, -108.16, 33.8744, 0.55", "54.4925, -105.772, 35.2352, 0.28", "54.6756, -104.343, 36.0229, 0.83", "54.8422, -102.486, 37.0637, 0.83", "54.8669, -101.317, 37.653, 0.28", "54.8346, -99.6288, 38.4251, 0.55", "54.6158, -98.0995, 39.0706, 0.55", "54.1202, -96.2404, 39.7913, 0.28", "53.9172, -95.6843, 40.0112, 0.83", "53.3111, -94.1285, 40.6183, 0.28", "52.5146, -92.3179, 41.286, 0.55", "51.4703, -90.1301, 42.0839, 0.28", "50.6254, -88.6203, 42.6206, 1.11", "49.8703, -87.5001, 42.9612, 0.28", "48.8633, -86.075, 43.3605, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-12.2417, -126.341, 19.7147, 0.83", "-11.4433, -130.402, 19.7536, 0.83", "-10.9817, -132.39, 19.7423, 0.83", "-10.2511, -135.917, 19.7195, 0.83", "-9.8052, -138.526, 19.9129, 0.55", "-9.4927, -140.941, 20.3021, 0.83", "-9.27197, -143.261, 20.8758, 0.83", "-9.13074, -144.986, 21.5705, 0.83", "-9.01724, -147.811, 23.0178, 0.83", "-9.02369, -151.213, 25.0484, 0.83", "-9.15786, -153.43, 26.4584, 0.83", "-9.52775, -156.95, 28.8694, 1.11", "-9.88113, -159.584, 30.7388, 0.55", "-10.1177, -161.477, 31.994, 0.55", "-10.3895, -163.842, 33.3758, 0.83", "-10.5846, -165.379, 34.0726, 0.83", "-10.7365, -166.715, 34.5689, 0.28", "-10.9106, -168.116, 35.0203, 0.55", "-11.2893, -171.078, 35.8606, 1.11", "-11.5126, -173.166, 36.3708, 0.28", "-11.6441, -174.343, 36.6266, 0.55", "-12.1282, -177.69, 37.3161, 0.28", "-12.2213, -178.332, 37.4575, 0.83", "-12.53, -180.907, 38.0459, 0.83", "-12.8336, -183.581, 38.6653, 0.28", "-12.8635, -183.982, 38.7428, 1.11", "-12.9749, -185.782, 38.997, 1.11", "-13.2206, -188.447, 39.2644, 0.55", "-13.3748, -190.516, 39.5167, 1.11", "-13.4554, -192.244, 39.7836, 1.11", "-13.49, -193.453, 40.057, 1.11", "-13.5471, -195.053, 40.4289, 0.28", "-13.5143, -196.048, 40.7186, 0.55", "-13.3928, -197.594, 41.2151, 0.28", "-13.273, -198.368, 41.5795, 0.83", "-12.9945, -199.884, 42.4051, 0.28", "-12.8411, -200.688, 42.8447, 0.83", "-12.1856, -203.705, 44.4165, 0.28", "-12.0232, -204.632, 44.8336, 0.83", "-11.7134, -207.233, 45.7997, 0.55", "-11.5861, -208.98, 46.3586, 1.11", "-11.5406, -210.869, 46.832, 0.28", "-11.5513, -211.883, 47.0157, 0.83", "-11.7483, -214.614, 47.283, 0.83", "-11.8123, -216.086, 47.4817, 0.28", "-11.8087, -216.995, 47.6079, 0.28", "-11.7218, -218.014, 47.8326, 0.83", "-11.5116, -219.254, 48.1823, 0.83", "-11.1145, -220.917, 48.7222, 0.55", "-10.2109, -223.95, 49.7731, 0.28", "-9.98624, -224.793, 50.0877, 1.11", "-9.70494, -226.031, 50.5183, 0.83", "-9.23889, -228.55, 51.2841, 0.28", "-9.174, -228.938, 51.37, 0.55", "-8.90063, -230.649, 51.5671, 0.55", "-8.58754, -232.502, 51.5514, 0.55", "-8.32956, -234.02, 51.4735, 0.55", "-8.13189, -235.309, 51.3709, 0.55", "-7.89592, -236.979, 51.2451, 0.55", "-7.53281, -239.097, 51.0507, 0.55", "-7.12601, -241.148, 50.8324, 0.55", "-6.6995, -243.154, 50.5962, 0.55", "-6.41252, -244.596, 50.4696, 0.28", "-6.10961, -246.344, 50.3396, 0.83", "-5.81844, -248.792, 50.2106, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-12.2417, -126.341, 19.7147, 1.38", "-14.9183, -126.948, 20.2881, 1.38", "-18.139, -127.679, 20.9781, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.4346, -156.799, -29.6929, 0.55", "22.0008, -161.478, -30.0813, 0.55", "22.2131, -163.804, -30.3741, 0.55", "22.4814, -166.585, -30.7757, 2.49", "22.6939, -168.829, -31.1937, 0.55", "22.8848, -170.998, -31.6436, 0.55", "23.1264, -173.743, -32.2128, 0.83", "23.1608, -176.132, -32.7873, 0.28", "23.2098, -177.247, -33.1068, 0.55", "23.3236, -179.031, -33.7129, 0.28", "23.4046, -180.145, -34.1227, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "21.4346, -156.799, -29.6929, 0.83", "24.0, -157.179, -29.1316, 0.83", "26.1992, -157.35, -28.4844, 0.83", "28.5755, -157.446, -27.7803, 0.55", "31.5177, -157.598, -26.895, 0.55", "32.5379, -157.718, -26.6407, 0.83", "34.601, -158.175, -26.1277, 0.55", "36.4206, -158.77, -25.6425, 1.11", "38.2932, -159.691, -25.1333, 0.28", "39.5877, -160.548, -24.7739, 0.83", "42.1321, -162.63, -24.2036, 0.28", "44.5427, -164.836, -23.8057, 1.38", "45.9085, -166.243, -23.4968, 0.55", "46.9046, -167.421, -23.1603, 0.55", "48.1915, -169.228, -22.3958, 0.83", "49.0355, -170.606, -21.6659, 0.28", "50.0999, -172.444, -20.5444, 0.55", "52.0956, -176.046, -17.9368, 0.28", "53.0085, -177.653, -16.5836, 0.83", "54.4392, -179.965, -14.3138, 0.55", "54.9346, -180.689, -13.475, 0.55", "56.4465, -182.683, -10.9316, 1.94", "58.3394, -185.008, -8.03001, 0.55", "59.271, -186.011, -6.76991, 0.55", "60.094, -186.833, -5.6523, 0.55", "61.7578, -188.603, -3.46431, 0.28", "62.3232, -189.327, -2.71423, 1.38", "63.3981, -191.05, -1.23101, 1.38", "64.9086, -193.866, 0.366113, 0.55", "65.4071, -195.387, 1.38492, 0.55", "66.1393, -198.475, 3.6201, 1.11", "66.6483, -201.162, 5.52838, 0.28", "66.7207, -201.682, 5.90768, 0.83", "66.9515, -204.529, 8.12428, 0.28", "67.1535, -213.862, 15.6316, 0.83", "66.9836, -215.161, 17.0787, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.0047, 432.28, 3.92539, 0.55", "-19.084, 433.793, 3.99536, 0.55", "-19.232, 435.263, 4.28847, 0.28", "-19.4871, 436.579, 4.60575, 0.55", "-19.7982, 437.509, 4.84598, 0.28", "-20.3231, 438.864, 5.13413, 0.83", "-20.8425, 440.244, 5.38071, 0.83", "-21.8378, 442.373, 6.15489, 0.55", "-22.459, 443.588, 6.75622, 0.55", "-23.6965, 445.885, 8.09277, 0.83", "-24.4319, 447.155, 8.88687, 0.83", "-25.2954, 448.597, 9.91594, 0.83", "-28.1399, 453.175, 13.0162, 0.55", "-28.6623, 454.107, 13.6056, 0.55", "-28.8724, 454.542, 13.8771, 0.83", "-29.2789, 455.534, 14.4805, 0.55", "-30.3063, 458.606, 16.0868, 1.11", "-30.9975, 461.296, 17.1485, 0.83", "-31.3095, 463.196, 17.6062, 0.55", "-31.4816, 464.614, 17.9428, 1.11", "-31.6374, 466.189, 18.3442, 0.55", "-31.7995, 468.784, 19.0479, 1.11", "-31.9181, 470.779, 19.5585, 0.55", "-32.049, 472.564, 20.0891, 0.55", "-32.187, 473.535, 20.3679, 0.28", "-32.4859, 475.269, 20.8594, 0.83", "-32.8162, 477.029, 21.2859, 0.55", "-33.1328, 478.608, 21.5921, 0.83", "-33.4615, 480.107, 21.812, 0.83", "-34.0091, 482.268, 22.0547, 0.55", "-34.5699, 484.422, 22.2163, 0.55", "-35.3213, 487.198, 22.3147, 0.83", "-36.1007, 489.945, 22.3675, 0.83", "-36.8263, 492.511, 22.4015, 0.83", "-37.2847, 494.109, 22.4047, 0.83", "-37.8587, 496.24, 22.3839, 0.83", "-38.384, 498.107, 22.3657, 0.83", "-38.9054, 500.136, 22.439, 0.83", "-39.1966, 501.327, 22.5138, 0.83", "-39.5633, 502.978, 22.6873, 0.55", "-39.8678, 504.383, 22.7872, 0.83", "-40.2693, 506.104, 22.9205, 0.83", "-40.9211, 508.897, 23.1562, 0.55", "-41.6102, 511.589, 23.3972, 0.83", "-42.4184, 514.461, 23.6561, 0.55", "-43.463, 517.546, 23.8943, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-19.0047, 432.28, 3.92539, 0.55", "-21.025, 435.315, 5.13938, 0.55", "-22.6236, 437.745, 5.72646, 0.28", "-23.382, 438.861, 5.89902, 0.83", "-24.4782, 440.411, 6.06314, 0.28", "-25.0233, 441.186, 6.12348, 0.28", "-25.912, 442.437, 6.18356, 0.83", "-27.5484, 444.97, 6.08508, 0.83", "-28.3569, 446.295, 5.93216, 0.28", "-29.5074, 448.276, 5.75237, 0.83", "-30.1001, 449.288, 5.66288, 0.55", "-31.2377, 451.258, 5.55287, 1.11", "-32.2912, 453.176, 5.47275, 0.55", "-33.1023, 454.802, 5.422, 1.11", "-33.9416, 456.648, 5.37984, 0.55", "-35.0193, 459.24, 5.33651, 1.11", "-35.666, 460.797, 5.32835, 0.28", "-36.1688, 462.032, 5.34874, 0.55", "-36.8021, 463.448, 5.4022, 0.28", "-37.2531, 464.451, 5.46567, 0.83", "-37.7409, 465.785, 5.49227, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.38292, 397.673, -32.4029, 0.83", "-2.72853, 400.485, -32.9016, 0.83", "-2.42122, 402.016, -33.1825, 0.83", "-1.97724, 404.301, -33.5942, 2.22", "-1.56862, 406.617, -34.0208, 1.66", "-1.03807, 409.437, -34.4317, 0.83", "-0.864939, 410.368, -34.5423, 0.83", "-0.548903, 412.445, -34.7453, 0.83", "-0.155019, 415.311, -34.9302, 1.66", "0.054029, 417.542, -34.9981, 0.55", "0.116607, 419.791, -35.0642, 0.55", "0.0908577, 421.194, -35.1272, 1.11", "-0.0229032, 423.602, -35.3368, 0.55", "-0.340338, 427.545, -35.871, 1.66", "-0.454091, 429.548, -36.2201, 0.83", "-0.547264, 432.817, -36.8745, 0.83", "-0.564149, 434.4, -37.2374, 0.83", "-0.484039, 436.162, -37.6322, 1.66", "-0.241498, 438.554, -38.1361, 0.83", "0.314329, 442.223, -38.7961, 0.83", "0.86177, 444.968, -39.1734, 0.83", "1.12182, 446.009, -39.2565, 0.83", "1.71134, 448.347, -39.3853, 0.83", "2.07321, 449.89, -39.4655, 1.38", "2.61892, 452.296, -39.5735, 0.55", "3.00149, 453.891, -39.6504, 1.38", "3.76907, 456.938, -39.8009, 1.38", "4.39157, 459.548, -39.9245, 0.83", "5.02938, 462.383, -40.046, 0.83", "5.75749, 465.481, -40.1747, 1.11", "6.34703, 468.025, -40.2698, 0.55", "6.77123, 470.072, -40.3298, 0.55", "7.07934, 471.693, -40.4257, 0.55", "7.77068, 475.287, -40.7314, 2.22", "8.07612, 476.895, -40.909, 0.55", "8.39424, 478.503, -41.1192, 0.55", "8.54411, 479.297, -41.2287, 1.11", "9.27039, 483.07, -41.7531, 0.55", "9.6267, 485.155, -42.031, 0.55", "9.73534, 485.974, -42.1309, 0.55", "9.95041, 488.531, -42.3759, 1.11", "10.0534, 490.992, -42.6058, 1.11", "10.0943, 493.016, -42.7576, 0.83", "10.0391, 495.132, -42.8349, 0.83", "9.96971, 496.469, -42.8921, 0.83", "9.72189, 499.14, -43.0229, 0.83", "9.25893, 502.166, -43.2104, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.38292, 397.673, -32.4029, 0.55", "-4.58611, 397.736, -31.1054, 0.55", "-5.84454, 397.801, -29.7484, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-18.139, -127.679, 20.9781, 1.11", "-18.1078, -128.995, 20.975, 1.11", "-18.055, -131.219, 20.9699, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-18.139, -127.679, 20.9781, 1.11", "-21.0502, -126.157, 19.2487, 1.11", "-22.0105, -125.532, 18.7421, 0.28", "-22.6619, -125.123, 18.591, 0.83", "-25.1074, -123.619, 18.3817, 0.55", "-26.2325, -122.98, 18.3676, 0.55", "-27.3232, -122.384, 18.3225, 0.55", "-28.8407, -121.637, 18.3003, 0.55", "-32.6132, -119.982, 18.129, 1.11", "-34.8378, -119.034, 18.0041, 0.55", "-36.2842, -118.432, 17.9321, 0.55", "-39.6091, -117.258, 17.6871, 0.83", "-41.6223, -116.642, 17.5165, 0.55", "-43.5927, -116.126, 17.3294, 1.11", "-46.7823, -115.417, 16.9264, 0.83", "-47.9074, -115.223, 16.8192, 0.83", "-49.4764, -114.979, 16.7614, 0.83", "-51.9207, -114.715, 16.8624, 0.83", "-55.0068, -114.497, 17.035, 1.11", "-56.4496, -114.465, 17.0689, 0.83", "-58.5244, -114.508, 17.0446, 0.83", "-61.5852, -114.639, 16.917, 0.83", "-63.5919, -114.796, 16.7311, 0.55", "-65.0893, -115.032, 16.5259, 1.38", "-67.2453, -115.407, 16.0869, 0.55", "-69.2019, -115.667, 15.6086, 0.55", "-70.3959, -115.839, 15.2534, 0.55", "-72.1725, -116.102, 14.6039, 0.55", "-73.1348, -116.204, 14.2024, 0.83", "-76.3497, -116.316, 12.7367, 0.55", "-77.4771, -116.321, 12.1924, 0.55", "-78.7556, -116.265, 11.5612, 0.55", "-81.2197, -116.068, 10.5229, 0.55", "-83.7953, -115.798, 9.63004, 1.11", "-86.4095, -115.522, 8.86459, 0.55", "-87.1108, -115.475, 8.71603, 0.55", "-89.4719, -115.42, 8.38796, 0.55", "-92.1683, -115.397, 8.28919, 1.94", "-94.0855, -115.495, 8.50472, 0.83", "-94.7766, -115.563, 8.61876, 0.28", "-95.9923, -115.773, 8.82607, 0.55", "-97.7435, -116.154, 9.09972, 0.55", "-99.2627, -116.556, 9.31062, 0.28", "-101.937, -117.303, 9.73051, 1.11", "-103.918, -117.916, 10.1456, 0.28", "-106.081, -118.487, 10.6704, 0.83", "-107.75, -118.846, 11.1539, 0.28", "-108.467, -118.95, 11.4017, 0.28", "-110.235, -119.075, 12.137, 0.28", "-111.185, -119.044, 12.6084, 0.55", "-113.068, -118.762, 13.615, 0.55", "-113.852, -118.504, 13.9638, 0.83", "-115.135, -117.981, 14.4074, 0.28", "-115.454, -117.855, 14.4949, 0.83", "-117.512, -117.057, 14.9206, 0.83", "-119.195, -116.412, 15.2442, 0.83", "-121.124, -115.776, 15.5913, 0.55", "-122.104, -115.492, 15.7573, 0.55", "-123.94, -115.072, 16.0742, 1.38", "-125.904, -114.724, 16.4257, 1.38", "-127.539, -114.526, 16.7314, 0.28", "-128.866, -114.513, 16.9591, 0.83", "-129.917, -114.622, 17.13, 0.28", "-130.917, -114.836, 17.2742, 1.38", "-132.434, -115.29, 17.4591, 0.28", "-132.963, -115.523, 17.51, 0.83", "-134.419, -116.335, 17.6132, 0.55", "-135.196, -116.795, 17.6444, 0.55", "-136.561, -117.586, 17.6592, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "23.4046, -180.145, -34.1227, 0.83", "23.5857, -182.026, -34.1794, 0.83", "23.6567, -183.825, -34.4313, 1.94", "23.7218, -185.637, -34.7619, 1.94", "23.7205, -189.246, -35.5416, 0.83", "23.6886, -191.763, -36.0938, 1.38", "23.4354, -198.312, -37.6731, 0.28", "23.4079, -198.888, -37.8333, 0.83", "23.2902, -200.545, -38.3869, 0.55", "23.0064, -202.846, -39.3124, 0.28", "22.5606, -205.041, -40.3829, 0.55", "21.8939, -208.003, -41.7701, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "23.4046, -180.145, -34.1227, 0.28", "22.7555, -179.51, -31.7887, 0.28", "22.6628, -179.419, -31.4556, 1.38", "21.9976, -178.768, -29.0638, 0.55", "21.6169, -178.396, -27.6952, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "66.9836, -215.161, 17.0787, 1.38", "67.2839, -217.31, 17.1403, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "66.9836, -215.161, 17.0787, 0.55", "68.1005, -214.399, 17.1245, 0.55", "68.8199, -213.908, 17.154, 0.55", "70.7171, -212.612, 17.2317, 0.28", "71.3319, -212.193, 17.2569, 1.11", "73.2146, -210.907, 17.3341, 0.28", "74.7911, -209.831, 17.3987, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-43.463, 517.546, 23.8943, 1.38", "-43.2796, 519.579, 24.402, 1.38", "-43.2865, 521.403, 24.9255, 0.55", "-43.4846, 522.939, 25.6258, 0.55", "-43.657, 524.275, 26.2351, 0.55", "-43.8571, 525.826, 26.9425, 1.11", "-44.2579, 528.933, 28.3591, 0.55", "-44.7448, 531.149, 29.5595, 1.11", "-45.657, 534.369, 31.6021, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-43.463, 517.546, 23.8943, 0.55", "-43.6724, 519.892, 23.3827, 0.55", "-43.8971, 520.874, 23.1538, 0.28", "-44.1821, 521.811, 22.8236, 0.83", "-44.7364, 523.466, 22.1735, 0.28", "-45.285, 524.881, 21.579, 0.55", "-45.8409, 526.199, 21.0142, 0.55", "-47.021, 528.483, 19.8853, 1.11", "-48.182, 530.364, 18.8949, 0.55", "-48.6239, 531.063, 18.4886, 0.55", "-49.6196, 532.619, 17.5623, 0.83", "-50.2901, 533.679, 16.887, 0.83", "-51.1745, 535.25, 15.7789, 0.83", "-51.6015, 536.09, 15.1496, 0.83", "-52.5108, 538.305, 13.5749, 0.55", "-53.0194, 540.166, 12.232, 0.83", "-53.216, 541.371, 11.296, 0.83", "-53.4363, 543.492, 9.6083, 0.55", "-53.5356, 545.302, 8.20377, 0.55", "-53.5796, 546.422, 7.32707, 0.83", "-53.77, 549.001, 5.29373, 0.83", "-53.8665, 550.582, 4.03082, 0.83", "-53.936, 551.716, 3.11667, 0.28", "-53.9599, 552.564, 2.37937, 0.55", "-53.7446, 554.017, 0.736777, 0.55", "-53.5714, 554.809, -0.277542, 0.55", "-53.3848, 555.453, -1.19517, 0.55", "-52.8424, 557.024, -3.63287, 0.55", "-52.2361, 558.498, -6.30027, 0.83", "-51.3417, 560.642, -10.6971, 0.28", "-51.0495, 561.223, -12.1601, 0.28", "-50.8596, 561.512, -13.0197, 0.55", "-50.5558, 561.852, -14.1878, 0.28", "-50.3246, 562.064, -14.9473, 0.83", "-49.935, 562.436, -16.1202, 0.83", "-48.4339, 563.784, -20.0264, 0.83", "-47.1839, 564.78, -23.0042, 0.28", "-45.9364, 565.693, -25.8906, 1.11", "-44.0758, 567.002, -30.1562, 0.55", "-43.614, 567.334, -31.2885, 0.55", "-42.8465, 567.868, -33.3629, 0.55", "-42.4267, 568.194, -34.797, 0.55", "-42.0798, 568.49, -36.3918, 0.83", "-41.6498, 568.943, -39.2623, 0.55", "-41.3968, 569.25, -41.3674, 1.11", "-40.6957, 570.209, -47.885, 0.28", "-40.5887, 570.348, -48.6822, 0.55", "-40.1884, 570.935, -51.4391, 0.28", "-39.8447, 571.409, -53.5173, 1.11", "-39.2013, 572.181, -56.8553, 0.55", "-38.7937, 572.57, -58.3923, 1.11", "-37.6218, 573.563, -61.9959, 0.55", "-37.2442, 573.853, -62.9654, 0.55", "-36.1601, 574.625, -65.4119, 1.11", "-35.5462, 575.033, -66.6373, 1.11", "-33.1826, 576.536, -70.8868, 0.28", "-32.4613, 576.978, -72.1216, 0.83", "-30.7765, 578.025, -75.1366, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-37.7409, 465.785, 5.49227, 0.55", "-38.1114, 466.93, 5.91052, 0.55", "-38.6065, 468.353, 6.38436, 0.28", "-39.3637, 470.362, 6.98474, 1.38", "-40.5562, 473.246, 7.76829, 0.28", "-41.6276, 475.679, 8.37635, 0.55", "-42.2099, 476.993, 8.67954, 0.55", "-42.7145, 478.105, 8.9071, 0.83", "-43.4843, 479.707, 9.18688, 0.28", "-44.1401, 481.008, 9.32001, 0.83", "-44.5919, 481.953, 9.33434, 0.28", "-45.0047, 482.894, 9.36428, 0.28", "-45.6372, 484.341, 9.4126, 0.83", "-46.3673, 486.061, 9.46844, 0.28", "-46.7201, 486.926, 9.49361, 0.55", "-47.5264, 488.925, 9.54513, 0.55", "-48.1356, 490.414, 9.59091, 0.28", "-48.4546, 491.158, 9.6168, 0.28", "-49.0076, 492.497, 9.66295, 1.11", "-49.6332, 494.206, 9.61344, 0.28", "-50.0422, 495.389, 9.48591, 0.83", "-50.4351, 496.692, 9.22712, 0.28", "-50.7545, 498.223, 8.81861, 0.83", "-50.8947, 499.168, 8.54162, 0.83", "-51.1518, 501.662, 7.75752, 0.55", "-51.2811, 503.345, 7.23534, 0.55", "-51.3674, 504.42, 6.92618, 0.55", "-51.5382, 506.371, 6.42156, 0.83", "-51.6935, 508.021, 6.07051, 0.55", "-51.9865, 510.44, 5.68328, 1.11", "-52.2161, 512.125, 5.50101, 0.55", "-52.4505, 513.708, 5.356, 0.55", "-52.6168, 514.713, 5.23316, 0.83", "-52.7496, 515.483, 5.07723, 0.55", "-53.1274, 518.162, 4.36634, 0.83", "-53.249, 519.249, 3.91831, 0.28", "-53.2717, 519.469, 3.80018, 0.28", "-53.3485, 520.412, 3.21795, 0.55", "-53.5227, 522.821, 1.631, 0.28", "-53.5581, 523.275, 1.35296, 0.55", "-53.7354, 525.629, -0.00784314, 0.28", "-53.8052, 526.588, -0.47959, 0.83", "-54.0006, 528.255, -1.16546, 0.83", "-54.0992, 528.96, -1.38839, 0.28", "-54.3196, 531.079, -1.86832, 0.55", "-54.4492, 532.459, -2.10594, 0.28", "-54.5749, 534.258, -2.15153, 0.83", "-54.6856, 536.637, -2.05477, 0.28", "-54.6951, 537.669, -1.92106, 0.28", "-54.6749, 539.109, -1.62608, 0.55", "-54.6457, 541.314, -1.15068, 0.83", "-54.6662, 544.232, -0.480843, 0.28", "-54.6588, 545.463, -0.25069, 0.83", "-54.6449, 547.499, -0.0517268, 0.28", "-54.5988, 550.172, -0.183904, 1.38", "-54.5542, 552.55, -0.57048, 0.28", "-54.4524, 554.626, -1.09882, 0.83", "-54.3264, 556.619, -1.77572, 0.83", "-54.0942, 559.75, -2.91792, 0.55", "-53.935, 562.948, -4.14609, 0.55", "-53.8244, 565.204, -4.90349, 0.83", "-53.7549, 566.947, -5.24151, 0.83", "-53.7048, 569.211, -5.41271, 0.55", "-53.7235, 570.714, -5.21428, 0.55", "-53.7519, 572.927, -4.51152, 1.38", "-53.8844, 575.667, -3.31898, 0.83", "-54.0375, 578.818, -1.64803, 1.11", "-54.1218, 580.37, -0.666381, 1.11", "-54.2164, 583.509, 1.7182, 0.83", "-54.195, 584.188, 2.29289, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-37.7409, 465.785, 5.49227, 0.28", "-36.0326, 465.652, 6.19327, 0.28", "-35.5977, 465.618, 6.37173, 0.83", "-34.2573, 465.514, 6.92177, 0.28", "-34.0609, 465.499, 7.00236, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.25893, 502.166, -43.2104, 0.55", "10.1477, 504.471, -43.2896, 0.55", "11.0917, 507.043, -43.4369, 0.55", "11.5929, 508.525, -43.5416, 0.55", "12.3255, 510.452, -43.6883, 0.28", "13.0859, 512.215, -43.8357, 0.83", "14.2724, 514.898, -44.0644, 0.28", "14.7324, 515.975, -44.1666, 0.83", "15.3745, 517.632, -44.3326, 0.55", "16.2845, 519.963, -44.6133, 0.55", "16.7989, 521.347, -44.7987, 0.83", "17.3488, 523.1, -45.0352, 0.28", "17.763, 524.536, -45.1819, 0.83", "18.1896, 526.169, -45.3604, 0.83", "18.4619, 527.37, -45.574, 0.28", "18.6788, 529.102, -45.9436, 0.83", "18.7352, 530.55, -46.3357, 0.83", "18.6277, 532.351, -47.147, 0.83", "18.2961, 534.362, -48.3432, 1.11", "17.6901, 536.671, -50.2977, 0.55", "16.9601, 538.329, -52.0305, 0.55", "16.079, 539.827, -53.8503, 1.11", "14.2784, 542.32, -57.4258, 0.28", "13.7764, 542.959, -58.4536, 0.28", "12.1451, 544.933, -61.8261, 0.83", "11.2154, 546.068, -63.9037, 0.55", "10.9223, 546.45, -64.6834, 0.55", "10.0584, 547.703, -67.1528, 0.55", "9.43125, 548.658, -68.9622, 0.83", "8.2152, 550.405, -72.4519, 0.55", "5.92678, 553.526, -78.7682, 1.94", "3.98123, 556.159, -84.5883, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.25893, 502.166, -43.2104, 0.55", "8.69427, 503.887, -43.3125, 0.55", "8.18487, 505.482, -43.4561, 0.83", "7.93734, 506.259, -43.5817, 0.55", "7.51303, 507.986, -43.9378, 0.83", "6.98698, 510.478, -44.5232, 0.55", "6.71215, 511.561, -44.8157, 0.55", "6.42029, 512.576, -45.2147, 1.11", "6.03858, 513.999, -45.8929, 0.83", "5.53552, 515.768, -46.8625, 0.83", "4.85886, 517.825, -48.1209, 0.83", "4.1104, 519.539, -49.2211, 0.55", "3.18077, 521.462, -50.4468, 0.28", "2.02148, 523.318, -52.0544, 0.83", "1.0241, 524.707, -53.4362, 0.55", "-0.224524, 526.281, -55.1583, 1.38", "-1.38015, 527.748, -56.8499, 0.55", "-2.03263, 528.634, -57.8504, 0.55", "-6.18253, 534.521, -64.2353, 0.83", "-6.81756, 535.396, -65.1895, 0.55", "-6.95375, 535.608, -65.4114, 0.55", "-7.69493, 536.951, -66.6869, 1.38", "-8.12557, 538.013, -67.4988, 1.38", "-8.70208, 540.185, -68.3973, 0.28", "-8.77565, 541.141, -68.2875, 0.55", "-8.78235, 542.778, -68.0029, 0.28", "-8.77223, 544.54, -67.6262, 0.55", "-8.72405, 547.626, -66.7365, 0.55", "-8.68372, 549.515, -66.1201, 0.55", "-8.60338, 551.753, -65.3059, 0.55", "-8.42078, 553.585, -64.5813, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.055, -131.219, 20.9699, 0.55", "-19.2024, -131.851, 22.5809, 0.55", "-20.1136, -132.357, 23.8865, 0.28", "-20.9492, -132.822, 25.0838, 1.11", "-24.0044, -134.52, 29.4614, 0.28", "-24.4025, -134.741, 30.0319, 1.11", "-26.465, -135.887, 32.9872, 0.28", "-26.9437, -136.173, 33.8501, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-18.055, -131.219, 20.9699, 0.83", "-20.0828, -133.094, 21.7909, 0.83", "-22.0491, -134.638, 22.5411, 0.83", "-23.8751, -135.674, 23.2918, 0.83", "-27.0913, -137.346, 24.6018, 0.83", "-29.4124, -138.6, 25.9133, 0.83", "-32.4869, -140.409, 28.0234, 0.83", "-34.1601, -141.459, 29.3479, 0.83", "-37.8206, -144.264, 32.7887, 1.11", "-38.5717, -144.99, 33.6949, 1.11", "-41.4084, -148.688, 38.0636, 1.11", "-42.9358, -151.272, 40.8669, 1.11", "-44.023, -153.668, 43.2253, 1.11", "-44.8016, -155.895, 45.3064, 1.38", "-45.6824, -159.508, 48.3471, 0.55", "-46.0427, -161.043, 49.5539, 0.83", "-46.4073, -162.577, 50.529, 0.83", "-46.6701, -163.879, 51.3983, 0.83", "-46.976, -165.117, 52.2715, 0.83", "-47.4625, -167.534, 53.6989, 0.55", "-47.7585, -169.219, 54.304, 0.55", "-47.9352, -170.171, 54.5213, 1.11", "-48.243, -171.96, 54.7435, 0.28", "-48.4251, -172.933, 54.8034, 1.11", "-48.9067, -175.095, 54.6979, 0.55", "-49.3574, -177.227, 54.2585, 0.55", "-49.9976, -179.631, 53.5334, 0.28", "-50.2107, -180.402, 53.228, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-136.561, -117.586, 17.6592, 1.11", "-138.265, -117.366, 17.8747, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-136.561, -117.586, 17.6592, 0.28", "-137.272, -119.102, 17.1423, 0.28", "-137.407, -119.389, 17.0443, 0.83", "-138.073, -120.806, 16.5613, 0.28", "-138.26, -121.205, 16.4252, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "21.8939, -208.003, -41.7701, 0.55", "20.6431, -209.319, -40.6165, 0.55", "19.7351, -210.237, -39.8994, 0.55", "18.1017, -211.865, -38.253, 0.28", "17.645, -212.377, -37.7673, 0.55", "16.941, -213.165, -37.0199, 1.11", "16.0395, -214.201, -36.0675, 0.28", "15.306, -214.969, -35.3124, 0.55", "13.1607, -217.083, -33.3253, 0.28", "11.3291, -218.841, -31.7597, 0.83", "9.50962, -220.633, -30.1263, 0.28", "9.00137, -221.153, -29.6466, 0.83", "7.70695, -222.463, -28.4242, 0.83", "6.31858, -223.765, -27.2552, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "21.8939, -208.003, -41.7701, 0.28", "21.746, -211.395, -41.589, 0.28", "21.7057, -212.587, -41.4648, 0.55", "21.6579, -214.595, -41.209, 0.28", "21.6194, -217.011, -40.8765, 1.11", "21.5989, -219.885, -40.4682, 0.28", "21.6113, -220.65, -40.3606, 0.55", "21.6088, -221.837, -40.0872, 0.28", "21.6146, -222.578, -39.8902, 0.55", "21.5814, -223.524, -39.6026, 0.28", "21.5528, -224.049, -39.4617, 0.55", "21.4603, -225.771, -39.2282, 0.28", "21.3883, -227.293, -39.1004, 1.11", "21.1646, -230.508, -38.6686, 0.28", "21.042, -232.368, -38.3663, 1.11", "20.9361, -233.849, -38.1182, 1.11", "20.7241, -236.6, -37.6498, 0.28", "20.5861, -238.342, -37.3501, 0.83", "20.4621, -242.053, -36.7582, 0.55", "20.4807, -244.112, -36.5539, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "67.2839, -217.31, 17.1403, 0.28", "68.6483, -218.436, 18.2422, 0.28", "69.1293, -218.822, 18.6264, 0.83", "69.8907, -219.437, 19.2172, 0.28", "70.963, -220.313, 20.0271, 0.83", "72.0355, -221.234, 20.8175, 0.28", "72.838, -221.907, 21.395, 0.55", "73.2731, -222.239, 21.7048, 0.28", "74.2464, -222.901, 22.3655, 0.55", "74.8997, -223.322, 22.7902, 0.28", "75.6393, -223.772, 23.2638, 0.55", "76.612, -224.296, 23.8668, 0.55", "77.6246, -224.791, 24.4151, 0.55", "79.0245, -225.475, 25.0951, 0.83", "79.9128, -225.899, 25.4185, 0.28", "80.7725, -226.349, 25.6589, 0.83", "81.5798, -226.852, 26.0079, 1.38", "83.2278, -228.089, 26.9555, 0.28", "84.11, -228.846, 27.4807, 0.83", "85.453, -230.064, 28.314, 0.28", "86.2794, -230.841, 28.8763, 1.11", "89.2667, -233.848, 31.2632, 0.28", "89.6302, -234.236, 31.598, 0.55", "91.3887, -236.177, 33.3862, 0.28", "92.5629, -237.512, 34.5756, 0.28", "93.0642, -238.141, 35.0791, 0.55", "93.9158, -239.148, 35.7672, 0.28", "94.4823, -239.788, 36.0146, 0.28", "95.1725, -240.639, 36.3531, 0.55", "95.8559, -241.712, 36.9291, 0.55", "96.2648, -242.611, 37.1878, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "67.2839, -217.31, 17.1403, 0.55", "64.5872, -218.987, 14.8415, 0.55", "63.4695, -219.682, 13.8887, 0.55", "62.0918, -220.539, 12.7143, 0.28", "60.2696, -221.672, 11.1609, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-45.657, 534.369, 31.6021, 0.83", "-45.717, 536.264, 32.3386, 0.83", "-45.7707, 539.191, 33.4526, 0.83", "-45.7863, 541.191, 34.225, 0.83", "-45.9531, 545.333, 35.8044, 0.83", "-45.9795, 545.811, 35.9529, 1.11", "-46.0742, 547.055, 36.2687, 0.55", "-46.1624, 547.79, 36.4186, 0.83", "-46.4587, 548.338, 35.0142, 0.28", "-46.6095, 548.871, 33.5034, 0.55", "-46.7884, 550.612, 28.7588, 0.28", "-46.8134, 551.189, 27.3954, 0.83", "-46.802, 551.671, 26.3527, 0.83", "-46.4918, 555.001, 20.0042, 0.55", "-46.3132, 556.012, 18.3235, 0.55", "-46.0319, 557.049, 17.1384, 1.11", "-45.0529, 560.82, 15.3697, 0.55", "-44.9197, 561.358, 15.271, 0.83", "-44.7341, 562.231, 15.3871, 0.28", "-44.6652, 562.699, 15.5558, 0.55", "-44.6442, 563.447, 15.7351, 0.28", "-44.6783, 564.476, 15.8023, 0.83", "-44.6581, 565.553, 15.6905, 0.28", "-44.6552, 566.267, 15.605, 0.83", "-44.6741, 568.553, 15.1108, 0.55", "-44.6941, 570.623, 14.5228, 0.55", "-44.7242, 572.152, 14.0274, 0.55", "-44.7645, 574.284, 13.3207, 0.55", "-44.8107, 575.714, 12.8058, 0.55", "-44.9439, 578.808, 11.7208, 0.55", "-44.9715, 579.77, 11.3757, 0.28", "-44.9878, 580.623, 11.0418, 0.55", "-45.0436, 581.802, 10.57, 0.28", "-45.2307, 583.626, 9.79365, 0.55", "-45.3093, 584.382, 9.49252, 0.55", "-45.421, 585.817, 8.9945, 0.28", "-45.4811, 587.171, 8.43527, 0.28", "-45.4503, 587.866, 8.12361, 0.55", "-45.2098, 589.402, 7.03737, 0.28", "-44.9478, 590.194, 6.25782, 0.83", "-44.636, 591.029, 5.36504, 0.83", "-43.9955, 592.49, 3.66797, 0.55", "-43.4432, 593.552, 2.28862, 0.55", "-41.6499, 596.623, -2.07114, 0.28", "-40.361, 598.515, -5.03343, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-45.657, 534.369, 31.6021, 0.55", "-46.6041, 535.81, 31.8697, 0.55", "-47.8505, 537.707, 32.2219, 0.55", "-48.7272, 539.042, 32.4697, 0.55", "-49.4884, 540.2, 32.6848, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-54.195, 584.188, 2.29289, 0.28", "-54.1513, 585.086, -0.67736, 0.28", "-54.1392, 585.336, -1.50351, 0.55", "-54.0198, 587.791, -9.62973, 0.28", "-54.0063, 588.069, -10.552, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-54.195, 584.188, 2.29289, 0.28", "-55.5268, 585.512, 2.56436, 0.28", "-56.35, 586.33, 2.73217, 0.83", "-56.9656, 586.942, 2.85764, 0.83", "-57.3551, 587.329, 2.93703, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "3.98123, 556.159, -84.5883, 0.55", "1.71784, 556.981, -84.9453, 0.55", "-0.95281, 557.98, -85.5512, 0.55", "-2.94686, 558.727, -86.0036, 0.55", "-5.26232, 559.594, -86.5289, 0.28", "-7.35661, 560.378, -87.0041, 0.83", "-8.97054, 560.982, -87.3702, 0.83", "-10.6669, 561.72, -87.9257, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.98123, 556.159, -84.5883, 0.55", "2.84708, 559.059, -85.1619, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-138.265, -117.366, 17.8747, 0.28", "-140.38, -117.15, 18.1508, 0.28", "-142.483, -116.83, 18.453, 0.55", "-144.826, -116.44, 18.8134, 0.28", "-146.129, -116.241, 19.0554, 1.11", "-148.111, -115.938, 19.4793, 0.28", "-148.624, -115.852, 19.5698, 0.55", "-151.53, -115.369, 19.9921, 0.28", "-152.361, -115.215, 20.1066, 1.11", "-154.244, -114.901, 20.3576, 0.28", "-155.357, -114.724, 20.5163, 1.11", "-157.983, -114.321, 20.9872, 1.11", "-159.818, -114.091, 21.2249, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-138.265, -117.366, 17.8747, 0.83", "-140.291, -119.518, 17.4228, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.31858, -223.765, -27.2552, 0.83", "5.77159, -224.6, -27.9484, 0.83", "4.85564, -225.999, -29.1091, 0.28", "4.08739, -227.172, -30.0827, 1.11", "1.91653, -230.487, -32.8337, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.31858, -223.765, -27.2552, 1.11", "4.3532, -222.0, -26.6924, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-57.3551, 587.329, 2.93703, 0.55", "-57.6188, 588.074, 1.24902, 0.55", "-57.7185, 588.775, -0.352672, 0.28", "-57.817, 588.932, -0.840403, 0.55", "-58.5124, 590.038, -4.28278, 0.28", "-58.8385, 590.556, -5.89712, 0.55", "-59.2818, 591.262, -8.09181, 0.28", "-59.8013, 591.752, -9.76473, 0.55", "-61.8299, 593.216, -15.0073, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-57.3551, 587.329, 2.93703, 0.28", "-58.3968, 587.571, 3.73838, 0.28", "-60.0045, 587.944, 4.97513, 0.55", "-61.369, 588.261, 6.02473, 0.55", "-62.8086, 588.595, 7.13215, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.6669, 561.72, -87.9257, 0.55", "-11.2081, 562.635, -87.8974, 0.55", "-11.7312, 563.519, -87.87, 0.55", "-12.2067, 564.322, -87.8451, 0.83", "-12.7837, 565.297, -87.8149, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.6669, 561.72, -87.9257, 0.28", "-12.5068, 562.536, -88.9948, 0.28", "-13.0116, 562.76, -89.2882, 0.28", "-14.0326, 563.214, -89.8815, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.91653, -230.487, -32.8337, 1.11", "2.7785, -232.07, -31.8551, 1.11", "3.67366, -233.685, -30.7642, 0.28", "4.26717, -234.809, -29.9754, 1.11", "5.90534, -237.908, -27.5425, 0.28", "6.29913, -238.68, -26.9138, 1.94", "7.3568, -240.944, -25.1633, 1.11", "7.56943, -241.448, -24.7627, 0.28", "7.78755, -242.031, -24.293, 0.83", "8.23381, -243.612, -23.1639, 0.28", "8.32519, -244.365, -22.7807, 1.11", "8.47321, -246.387, -21.9215, 0.28", "8.47705, -248.016, -21.3656, 0.28", "8.49304, -248.87, -21.1011, 1.11", "8.49304, -248.87, -21.1011, 1.11", "8.47451, -249.943, -20.893, 0.55", "8.46692, -250.413, -20.7858, 1.38", "8.43021, -252.195, -20.2111, 0.28", "8.43627, -252.385, -20.1376, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "1.91653, -230.487, -32.8337, 0.55", "1.06571, -230.499, -30.6976, 0.55", "0.538509, -230.506, -29.374, 0.55", "0.0868437, -230.512, -28.24, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-62.8086, 588.595, 7.13215, 0.55", "-63.0475, 589.78, 7.56301, 0.55", "-63.3187, 591.954, 8.29236, 0.55", "-63.4211, 593.407, 8.66923, 0.55", "-63.5606, 595.2, 9.05707, 0.55", "-63.6322, 596.856, 9.42976, 0.28", "-63.6842, 597.61, 9.56124, 0.83", "-63.829, 599.753, 9.79416, 0.83", "-63.8872, 601.59, 9.88412, 0.83", "-63.9321, 602.529, 9.8869, 0.55", "-63.9842, 604.911, 9.72301, 0.83", "-64.0491, 607.589, 9.27914, 0.28", "-64.1657, 608.861, 8.98397, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-62.8086, 588.595, 7.13215, 0.55", "-65.2952, 587.405, 9.25639, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_DBC_23ffe29c8b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.3653, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -0.994739, -14.7775, -0.933754, 2.22 ) }
    dend_29 { pt3dadd( -1.34369, -18.2593, 0.387571, 2.49 ) }
    dend_29 { pt3dadd( -1.86744, -24.3073, 2.49053, 2.49 ) }
    dend_29 { pt3dadd( -2.17388, -30.1517, 4.22006, 2.49 ) }
    dend_29 { pt3dadd( -2.25999, -32.8039, 4.9117, 1.94 ) }
    dend_29 { pt3dadd( -2.29854, -35.6624, 5.57657, 1.38 ) }
    dend_29 { pt3dadd( -2.21505, -39.1394, 6.28213, 1.11 ) }
    dend_29 { pt3dadd( -2.10541, -41.4846, 6.64764, 0.83 ) }
    dend_29 { pt3dadd( -1.80609, -47.3679, 7.19734, 1.11 ) }
    dend_29 { pt3dadd( -1.71012, -49.7417, 7.22895, 1.11 ) }
    dend_29 { pt3dadd( -1.59012, -52.5826, 7.19212, 1.38 ) }
    dend_29 { pt3dadd( -1.4546, -55.3014, 7.11146, 0.83 ) }
    dend_29 { pt3dadd( -1.31178, -57.6152, 7.05567, 1.66 ) }
    dend_29 { pt3dadd( -1.14356, -59.8048, 7.02049, 1.11 ) }
    dend_29 { pt3dadd( -0.738168, -64.5459, 6.89753, 1.66 ) }
    dend_29 { pt3dadd( -0.494244, -67.1443, 6.82383, 1.38 ) }
    dend_29 { pt3dadd( -0.144544, -70.4862, 6.72021, 1.94 ) }
    dend_29 { pt3dadd( 0.313641, -74.0101, 6.60275, 1.38 ) }
    dend_29 { pt3dadd( 0.944384, -77.6717, 6.4755, 1.38 ) }
    dend_29 { pt3dadd( 1.90389, -82.1882, 6.31883, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.23473, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -0.987629, 14.036, -0.831846, 1.94 ) }
    dend_0 { pt3dadd( -0.643127, 17.7903, -0.710307, 1.94 ) }
    dend_0 { pt3dadd( -0.294113, 23.4099, -0.346538, 1.94 ) }
    dend_0 { pt3dadd( -0.201769, 25.459, -0.187309, 1.38 ) }
    dend_0 { pt3dadd( 0.0834483, 30.0907, 0.155094, 2.22 ) }
    dend_0 { pt3dadd( 0.363382, 34.6366, 0.491154, 1.94 ) }
    dend_0 { pt3dadd( 0.727644, 40.7839, 0.970921, 1.94 ) }
    dend_0 { pt3dadd( 0.937178, 45.213, 1.41383, 1.94 ) }
    dend_0 { pt3dadd( 1.02178, 49.4995, 1.98216, 1.94 ) }
    dend_0 { pt3dadd( 1.08533, 55.3063, 2.75953, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.90389, -82.1882, 6.31883, 0.55 ) }
    dend_57 { pt3dadd( 2.68087, -83.5315, 6.58015, 0.55 ) }
    dend_57 { pt3dadd( 3.48071, -84.6813, 6.95266, 0.55 ) }
    dend_57 { pt3dadd( 4.6861, -86.2449, 7.67805, 0.28 ) }
    dend_57 { pt3dadd( 6.07638, -87.7393, 8.43138, 0.55 ) }
    dend_57 { pt3dadd( 7.741, -89.3726, 9.24067, 0.28 ) }
    dend_57 { pt3dadd( 9.15683, -90.6453, 9.97493, 1.11 ) }
    dend_57 { pt3dadd( 11.4366, -92.5546, 11.2383, 0.28 ) }
    dend_57 { pt3dadd( 12.9572, -93.7016, 12.2563, 0.83 ) }
    dend_57 { pt3dadd( 15.2394, -95.2712, 13.9046, 0.83 ) }
    dend_57 { pt3dadd( 16.6118, -96.1811, 14.9448, 0.83 ) }
    dend_57 { pt3dadd( 18.9324, -97.7428, 16.7315, 0.83 ) }
    dend_57 { pt3dadd( 20.1413, -98.5479, 17.6693, 1.11 ) }
    dend_57 { pt3dadd( 23.8087, -101.18, 20.3464, 0.28 ) }
    dend_57 { pt3dadd( 24.6065, -101.813, 20.8597, 0.28 ) }
    dend_57 { pt3dadd( 25.2885, -102.392, 21.2535, 0.55 ) }
    dend_57 { pt3dadd( 26.2739, -103.228, 21.684, 0.55 ) }
    dend_57 { pt3dadd( 28.2798, -104.933, 22.1998, 0.55 ) }
    dend_57 { pt3dadd( 30.1355, -106.42, 22.4532, 0.55 ) }
    dend_57 { pt3dadd( 32.1166, -108.012, 22.4567, 0.83 ) }
    dend_57 { pt3dadd( 33.9766, -109.375, 22.4349, 1.11 ) }
    dend_57 { pt3dadd( 35.603, -110.536, 22.42, 0.55 ) }
    dend_57 { pt3dadd( 36.4904, -111.185, 22.4227, 1.38 ) }
    dend_57 { pt3dadd( 37.6526, -112.025, 22.443, 0.55 ) }
    dend_57 { pt3dadd( 38.9707, -112.821, 22.4578, 1.11 ) }
    dend_57 { pt3dadd( 41.7854, -114.384, 22.4185, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.90389, -82.1882, 6.31883, 1.38 ) }
    dend_30 { pt3dadd( 1.72778, -83.1852, 6.16001, 1.38 ) }
    dend_30 { pt3dadd( 1.15164, -86.1107, 5.94564, 1.38 ) }
    dend_30 { pt3dadd( 0.792595, -87.9338, 5.81204, 1.11 ) }
    dend_30 { pt3dadd( 0.0122583, -91.8961, 5.52168, 1.66 ) }
    dend_30 { pt3dadd( -0.485016, -94.4211, 5.33665, 2.22 ) }
    dend_30 { pt3dadd( -0.738585, -95.7087, 5.2423, 2.22 ) }
    dend_30 { pt3dadd( -1.37752, -99.4041, 4.88733, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.08533, 55.3063, 2.75953, 1.38 ) }
    dend_12 { pt3dadd( 1.01339, 58.4546, 2.73653, 1.38 ) }
    dend_12 { pt3dadd( 1.04484, 60.5882, 2.71511, 1.38 ) }
    dend_12 { pt3dadd( 1.14913, 63.706, 2.67184, 1.11 ) }
    dend_12 { pt3dadd( 1.38819, 68.5019, 2.67956, 1.38 ) }
    dend_12 { pt3dadd( 1.49942, 70.8975, 2.67579, 1.38 ) }
    dend_12 { pt3dadd( 1.59591, 75.0826, 2.67387, 1.38 ) }
    dend_12 { pt3dadd( 1.65396, 80.3794, 2.66325, 1.38 ) }
    dend_12 { pt3dadd( 1.60042, 84.2399, 2.64247, 1.38 ) }
    dend_12 { pt3dadd( 1.51123, 87.8339, 2.62445, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 1.32042, 91.1913, 2.60035, 1.38 ) }
    dend_12 { pt3dadd( 0.734704, 96.7974, 2.53197, 1.66 ) }
    dend_12 { pt3dadd( 0.257662, 100.019, 2.47886, 1.38 ) }
    dend_12 { pt3dadd( -0.33787, 103.684, 2.30365, 1.38 ) }
    dend_12 { pt3dadd( -1.0077, 107.893, 1.97179, 1.38 ) }
    dend_12 { pt3dadd( -1.46166, 111.25, 1.61807, 1.38 ) }
    dend_12 { pt3dadd( -1.63087, 113.031, 1.42209, 1.38 ) }
    dend_12 { pt3dadd( -1.79168, 115.787, 1.112, 1.11 ) }
    dend_12 { pt3dadd( -1.94969, 119.954, 0.674726, 1.11 ) }
    dend_12 { pt3dadd( -1.92211, 124.343, 0.267778, 1.11 ) }
    dend_12 { pt3dadd( -1.8127, 128.774, -0.0757044, 1.38 ) }
    dend_12 { pt3dadd( -1.70562, 131.751, -0.219607, 1.11 ) }
    dend_12 { pt3dadd( -1.63344, 134.608, -0.278471, 1.38 ) }
    dend_12 { pt3dadd( -1.61018, 136.45, -0.222692, 1.38 ) }
    dend_12 { pt3dadd( -1.60425, 139.395, 0.108102, 1.38 ) }
    dend_12 { pt3dadd( -1.67544, 143.613, 0.70932, 1.94 ) }
    dend_12 { pt3dadd( -1.70324, 145.844, 1.06637, 1.66 ) }
    dend_12 { pt3dadd( -1.70677, 146.782, 1.21183, 1.66 ) }
    dend_12 { pt3dadd( -1.71104, 149.706, 1.62367, 1.66 ) }
    dend_12 { pt3dadd( -1.7169, 154.318, 2.22742, 1.66 ) }
    dend_12 { pt3dadd( -1.76979, 156.725, 2.50507, 1.38 ) }
    dend_12 { pt3dadd( -1.89316, 160.524, 2.86714, 1.66 ) }
    dend_12 { pt3dadd( -1.96367, 163.873, 3.09537, 1.11 ) }
    dend_12 { pt3dadd( -2.01478, 167.583, 3.30408, 1.11 ) }
    dend_12 { pt3dadd( -2.04859, 169.649, 3.37148, 1.11 ) }
    dend_12 { pt3dadd( -2.05743, 171.93, 3.42147, 1.11 ) }
    dend_12 { pt3dadd( -2.02197, 173.638, 3.48277, 1.11 ) }
    dend_12 { pt3dadd( -1.83686, 177.261, 3.66325, 1.38 ) }
    dend_12 { pt3dadd( -1.62591, 180.022, 3.82779, 1.11 ) }
    dend_12 { pt3dadd( -1.45048, 182.09, 3.94831, 1.38 ) }
    dend_12 { pt3dadd( -1.25077, 184.44, 4.07266, 1.38 ) }
    dend_12 { pt3dadd( -1.06913, 187.118, 4.18527, 0.83 ) }
    dend_12 { pt3dadd( -0.93385, 190.363, 4.27977, 1.38 ) }
    dend_12 { pt3dadd( -0.915119, 192.954, 4.31072, 0.83 ) }
    dend_12 { pt3dadd( -0.949483, 195.585, 4.29552, 1.38 ) }
    dend_12 { pt3dadd( -1.05339, 197.66, 4.27155, 1.38 ) }
    dend_12 { pt3dadd( -1.30769, 201.065, 4.19082, 1.38 ) }
    dend_12 { pt3dadd( -1.4046, 202.567, 4.14779, 1.38 ) }
    dend_12 { pt3dadd( -1.49487, 204.897, 4.0773, 1.11 ) }
    dend_12 { pt3dadd( -1.49048, 207.794, 3.99559, 1.11 ) }
    dend_12 { pt3dadd( -1.33385, 211.977, 3.88329, 1.66 ) }
    dend_12 { pt3dadd( -1.1087, 214.666, 3.819, 1.11 ) }
    dend_12 { pt3dadd( -0.999469, 215.729, 3.85867, 1.11 ) }
    dend_12 { pt3dadd( -0.872575, 217.576, 4.00863, 1.38 ) }
    dend_12 { pt3dadd( -0.769785, 219.913, 4.29446, 1.38 ) }
    dend_12 { pt3dadd( -0.751001, 222.549, 4.70346, 1.94 ) }
    dend_12 { pt3dadd( -0.859954, 225.282, 5.19055, 1.94 ) }
    dend_12 { pt3dadd( -1.25039, 229.742, 5.98969, 1.11 ) }
    dend_12 { pt3dadd( -1.58177, 232.227, 6.38205, 1.11 ) }
    dend_12 { pt3dadd( -1.99235, 234.583, 6.70478, 1.38 ) }
    dend_12 { pt3dadd( -2.57655, 237.417, 7.01102, 1.38 ) }
    dend_12 { pt3dadd( -3.06919, 239.788, 7.18662, 1.11 ) }
    dend_12 { pt3dadd( -3.52669, 242.394, 7.27407, 0.83 ) }
    dend_12 { pt3dadd( -3.943, 245.372, 7.21637, 0.83 ) }
    dend_12 { pt3dadd( -4.16598, 247.09, 7.18391, 0.83 ) }
    dend_12 { pt3dadd( -4.55911, 250.074, 7.12245, 1.11 ) }
    dend_12 { pt3dadd( -4.83965, 252.694, 7.05357, 1.11 ) }
    dend_12 { pt3dadd( -5.12178, 255.39, 6.96109, 1.38 ) }
    dend_12 { pt3dadd( -5.55817, 259.491, 6.79967, 1.38 ) }
    dend_12 { pt3dadd( -5.79235, 262.003, 6.6967, 1.11 ) }
    dend_12 { pt3dadd( -6.05281, 264.982, 6.57016, 1.38 ) }
    dend_12 { pt3dadd( -6.29069, 267.427, 6.4239, 0.83 ) }
    dend_12 { pt3dadd( -6.67421, 270.693, 6.19504, 0.83 ) }
    dend_12 { pt3dadd( -6.95665, 273.283, 5.98548, 1.38 ) }
    dend_12 { pt3dadd( -7.01813, 274.448, 5.89026, 1.38 ) }
    dend_12 { pt3dadd( -7.09968, 276.581, 5.70487, 1.11 ) }
    dend_12 { pt3dadd( -7.23845, 280.108, 5.37743, 1.38 ) }
    dend_12 { pt3dadd( -7.29598, 282.254, 5.17614, 1.11 ) }
    dend_12 { pt3dadd( -7.26232, 284.362, 4.97057, 1.11 ) }
    dend_12 { pt3dadd( -7.20513, 286.472, 4.76699, 1.11 ) }
    dend_12 { pt3dadd( -7.13962, 289.103, 4.51138, 1.11 ) }
    dend_12 { pt3dadd( -6.99647, 293.628, 4.05578, 1.11 ) }
    dend_12 { pt3dadd( -6.87351, 296.283, 3.80155, 1.11 ) }
    dend_12 { pt3dadd( -6.77646, 299.215, 3.58443, 1.38 ) }
    dend_12 { pt3dadd( -6.74094, 302.225, 3.44224, 1.38 ) }
    dend_12 { pt3dadd( -6.76268, 305.043, 3.37288, 0.83 ) }
    dend_12 { pt3dadd( -6.77396, 307.209, 3.38743, 1.38 ) }
    dend_12 { pt3dadd( -6.77507, 309.255, 3.47464, 1.38 ) }
    dend_12 { pt3dadd( -6.80103, 312.033, 3.66664, 1.11 ) }
    dend_12 { pt3dadd( -6.80741, 313.879, 3.83622, 0.55 ) }
    dend_12 { pt3dadd( -6.71648, 315.717, 4.03014, 1.11 ) }
    dend_12 { pt3dadd( -6.61301, 317.455, 4.21236, 1.11 ) }
    dend_12 { pt3dadd( -6.48664, 319.312, 4.37383, 0.83 ) }
    dend_12 { pt3dadd( -6.32861, 321.274, 4.47207, 0.83 ) }
    dend_12 { pt3dadd( -6.17571, 323.056, 4.48925, 0.83 ) }
    dend_12 { pt3dadd( -5.99753, 326.304, 4.5049, 1.11 ) }
    dend_12 { pt3dadd( -5.87211, 328.424, 4.47861, 1.66 ) }
    dend_12 { pt3dadd( -5.82422, 330.463, 4.41655, 1.66 ) }
    dend_12 { pt3dadd( -5.87669, 333.107, 4.30526, 0.83 ) }
    dend_12 { pt3dadd( -5.93857, 335.23, 4.19561, 0.83 ) }
    dend_12 { pt3dadd( -5.98873, 338.226, 4.03499, 1.11 ) }
    dend_12 { pt3dadd( -6.09766, 341.793, 3.82576, 0.83 ) }
    dend_12 { pt3dadd( -6.19252, 345.777, 3.59922, 0.83 ) }
    dend_12 { pt3dadd( -6.24477, 348.057, 3.46863, 0.83 ) }
    dend_12 { pt3dadd( -6.37162, 352.769, 3.20003, 1.38 ) }
    dend_12 { pt3dadd( -6.55071, 357.478, 2.94137, 1.38 ) }
    dend_12 { pt3dadd( -6.64705, 359.576, 2.83737, 1.11 ) }
    dend_12 { pt3dadd( -6.91329, 362.831, 2.69886, 1.11 ) }
    dend_12 { pt3dadd( -7.10646, 364.899, 2.60581, 0.83 ) }
    dend_12 { pt3dadd( -7.31032, 366.353, 2.53322, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -7.81781, 368.788, 2.51055, 1.38 ) }
    dend_12 { pt3dadd( -8.10067, 370.056, 2.59552, 1.38 ) }
    dend_12 { pt3dadd( -8.61746, 373.024, 2.95772, 0.83 ) }
    dend_12 { pt3dadd( -8.87343, 375.051, 3.29529, 0.83 ) }
    dend_12 { pt3dadd( -9.14868, 378.287, 3.72633, 0.83 ) }
    dend_12 { pt3dadd( -9.30814, 381.311, 4.17436, 0.83 ) }
    dend_12 { pt3dadd( -9.38907, 385.192, 4.81565, 1.38 ) }
    dend_12 { pt3dadd( -9.40541, 387.827, 5.2807, 1.38 ) }
    dend_12 { pt3dadd( -9.29198, 389.66, 5.64466, 1.38 ) }
    dend_12 { pt3dadd( -8.73862, 393.904, 6.49521, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.08533, 55.3063, 2.75953, 1.11 ) }
    dend_1 { pt3dadd( 1.32093, 59.6673, -1.803, 1.11 ) }
    dend_1 { pt3dadd( 1.42049, 61.0146, -3.02338, 1.11 ) }
    dend_1 { pt3dadd( 1.51903, 63.3349, -5.16701, 1.11 ) }
    dend_1 { pt3dadd( 1.68473, 69.9865, -11.081, 1.11 ) }
    dend_1 { pt3dadd( 1.71413, 72.4517, -13.0227, 1.11 ) }
    dend_1 { pt3dadd( 1.6972, 75.9135, -15.5091, 0.83 ) }
    dend_1 { pt3dadd( 1.62044, 77.9834, -16.7683, 0.83 ) }
    dend_1 { pt3dadd( 1.43347, 83.8984, -19.9851, 1.11 ) }
    dend_1 { pt3dadd( 1.36083, 86.6033, -21.1775, 1.11 ) }
    dend_1 { pt3dadd( 1.07623, 90.8534, -22.4204, 1.11 ) }
    dend_1 { pt3dadd( 0.644442, 94.7465, -23.2112, 1.11 ) }
    dend_1 { pt3dadd( 0.28886, 97.46, -23.4832, 1.38 ) }
    dend_1 { pt3dadd( 0.0830916, 99.363, -23.4221, 1.38 ) }
    dend_1 { pt3dadd( -0.081668, 101.57, -23.1298, 1.11 ) }
    dend_1 { pt3dadd( -0.375196, 105.774, -22.5489, 1.11 ) }
    dend_1 { pt3dadd( -0.632439, 110.218, -22.0511, 0.83 ) }
    dend_1 { pt3dadd( -0.659207, 110.921, -21.9534, 0.83 ) }
    dend_1 { pt3dadd( -0.754558, 115.21, -21.4994, 1.66 ) }
    dend_1 { pt3dadd( -0.867368, 118.885, -21.3286, 0.83 ) }
    dend_1 { pt3dadd( -0.892419, 119.592, -21.3433, 0.83 ) }
    dend_1 { pt3dadd( -0.964357, 122.59, -21.5946, 1.66 ) }
    dend_1 { pt3dadd( -1.03323, 124.474, -21.8376, 1.66 ) }
    dend_1 { pt3dadd( -1.13802, 126.859, -22.0666, 1.11 ) }
    dend_1 { pt3dadd( -1.3321, 129.67, -22.2902, 1.11 ) }
    dend_1 { pt3dadd( -1.55843, 132.686, -22.4138, 1.11 ) }
    dend_1 { pt3dadd( -1.79427, 136.283, -22.5923, 1.66 ) }
    dend_1 { pt3dadd( -1.99462, 139.683, -22.7167, 1.66 ) }
    dend_1 { pt3dadd( -2.23594, 143.235, -22.9215, 0.83 ) }
    dend_1 { pt3dadd( -2.45117, 146.361, -23.2309, 0.83 ) }
    dend_1 { pt3dadd( -2.56851, 148.569, -23.5534, 0.83 ) }
    dend_1 { pt3dadd( -2.66129, 151.736, -24.0978, 1.66 ) }
    dend_1 { pt3dadd( -2.71234, 154.769, -24.6769, 0.55 ) }
    dend_1 { pt3dadd( -2.75352, 157.726, -25.2336, 0.55 ) }
    dend_1 { pt3dadd( -2.72233, 161.031, -25.7916, 1.38 ) }
    dend_1 { pt3dadd( -2.61328, 163.784, -26.1363, 1.94 ) }
    dend_1 { pt3dadd( -2.47027, 167.106, -26.4299, 0.83 ) }
    dend_1 { pt3dadd( -2.40655, 168.954, -26.5182, 0.83 ) }
    dend_1 { pt3dadd( -2.35092, 172.075, -26.5979, 1.94 ) }
    dend_1 { pt3dadd( -2.31049, 176.001, -26.5199, 1.94 ) }
    dend_1 { pt3dadd( -2.33454, 178.558, -26.432, 1.11 ) }
    dend_1 { pt3dadd( -2.34301, 181.56, -26.1515, 1.11 ) }
    dend_1 { pt3dadd( -2.3628, 184.278, -25.8004, 1.11 ) }
    dend_1 { pt3dadd( -2.36981, 185.845, -25.5474, 1.11 ) }
    dend_1 { pt3dadd( -2.39136, 187.447, -25.2821, 1.11 ) }
    dend_1 { pt3dadd( -2.58028, 193.408, -24.2809, 2.22 ) }
    dend_1 { pt3dadd( -2.74499, 200.228, -23.1763, 0.83 ) }
    dend_1 { pt3dadd( -2.76065, 202.218, -22.8946, 0.83 ) }
    dend_1 { pt3dadd( -2.71356, 204.907, -22.5841, 1.11 ) }
    dend_1 { pt3dadd( -2.64787, 208.257, -22.3177, 0.55 ) }
    dend_1 { pt3dadd( -2.68895, 210.864, -22.2317, 2.22 ) }
    dend_1 { pt3dadd( -2.77444, 212.493, -22.3199, 1.94 ) }
    dend_1 { pt3dadd( -2.91573, 214.856, -22.6744, 0.83 ) }
    dend_1 { pt3dadd( -3.00901, 217.373, -23.0443, 0.83 ) }
    dend_1 { pt3dadd( -3.05335, 219.903, -23.3815, 0.83 ) }
    dend_1 { pt3dadd( -3.13468, 222.575, -23.6503, 1.66 ) }
    dend_1 { pt3dadd( -3.24698, 225.514, -23.9183, 0.83 ) }
    dend_1 { pt3dadd( -3.31531, 227.195, -24.0365, 0.83 ) }
    dend_1 { pt3dadd( -3.37636, 228.621, -24.1387, 1.11 ) }
    dend_1 { pt3dadd( -3.50203, 230.825, -24.314, 0.83 ) }
    dend_1 { pt3dadd( -3.67519, 234.678, -24.6653, 0.83 ) }
    dend_1 { pt3dadd( -3.71049, 235.375, -24.7284, 0.83 ) }
    dend_1 { pt3dadd( -4.00784, 239.219, -25.0382, 1.94 ) }
    dend_1 { pt3dadd( -4.2358, 242.087, -25.2727, 0.55 ) }
    dend_1 { pt3dadd( -4.47619, 245.326, -25.6131, 0.55 ) }
    dend_1 { pt3dadd( -4.52693, 245.909, -25.7003, 0.55 ) }
    dend_1 { pt3dadd( -4.983, 250.521, -26.5251, 2.22 ) }
    dend_1 { pt3dadd( -5.26076, 254.044, -27.1916, 0.83 ) }
    dend_1 { pt3dadd( -5.34138, 255.64, -27.4831, 0.83 ) }
    dend_1 { pt3dadd( -5.42917, 259.418, -28.1111, 1.38 ) }
    dend_1 { pt3dadd( -5.38123, 262.748, -28.6327, 0.55 ) }
    dend_1 { pt3dadd( -5.28623, 265.704, -29.0279, 0.55 ) }
    dend_1 { pt3dadd( -5.04316, 269.813, -29.6011, 0.83 ) }
    dend_1 { pt3dadd( -4.54688, 275.593, -30.0777, 0.83 ) }
    dend_1 { pt3dadd( -4.3789, 277.218, -30.1246, 2.49 ) }
    dend_1 { pt3dadd( -4.01663, 280.357, -30.0306, 2.49 ) }
    dend_1 { pt3dadd( -3.4522, 285.236, -29.6976, 0.83 ) }
    dend_1 { pt3dadd( -3.14637, 287.984, -29.4751, 0.83 ) }
    dend_1 { pt3dadd( -2.8111, 293.435, -28.9822, 0.83 ) }
    dend_1 { pt3dadd( -2.74433, 295.05, -28.8276, 0.83 ) }
    dend_1 { pt3dadd( -2.74761, 298.559, -28.5173, 1.66 ) }
    dend_1 { pt3dadd( -2.811, 302.106, -28.2474, 0.83 ) }
    dend_1 { pt3dadd( -2.87659, 304.697, -28.0872, 0.83 ) }
    dend_1 { pt3dadd( -2.99647, 308.572, -27.9173, 0.83 ) }
    dend_1 { pt3dadd( -3.07385, 311.564, -27.9159, 1.94 ) }
    dend_1 { pt3dadd( -3.08503, 316.515, -27.9148, 0.83 ) }
    dend_1 { pt3dadd( -3.01698, 321.62, -27.9145, 0.83 ) }
    dend_1 { pt3dadd( -2.96353, 323.911, -27.9146, 0.83 ) }
    dend_1 { pt3dadd( -2.90585, 326.796, -27.9147, 1.11 ) }
    dend_1 { pt3dadd( -2.86729, 329.031, -27.9146, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -2.89904, 332.858, -27.9136, 0.83 ) }
    dend_1 { pt3dadd( -2.95908, 334.176, -27.9127, 0.83 ) }
    dend_1 { pt3dadd( -3.12788, 336.401, -27.9105, 0.83 ) }
    dend_1 { pt3dadd( -3.41301, 340.089, -27.9068, 0.83 ) }
    dend_1 { pt3dadd( -3.6519, 343.691, -27.9813, 0.83 ) }
    dend_1 { pt3dadd( -3.95718, 347.908, -28.1431, 1.11 ) }
    dend_1 { pt3dadd( -4.17955, 351.598, -28.3803, 1.66 ) }
    dend_1 { pt3dadd( -4.31181, 355.134, -28.6525, 0.83 ) }
    dend_1 { pt3dadd( -4.37789, 358.025, -28.9247, 0.83 ) }
    dend_1 { pt3dadd( -4.30513, 361.352, -29.2911, 0.83 ) }
    dend_1 { pt3dadd( -4.18637, 363.795, -29.5899, 0.83 ) }
    dend_1 { pt3dadd( -4.06985, 366.488, -29.9432, 0.83 ) }
    dend_1 { pt3dadd( -3.88422, 370.696, -30.4904, 1.66 ) }
    dend_1 { pt3dadd( -3.75228, 374.038, -30.9121, 0.83 ) }
    dend_1 { pt3dadd( -3.68957, 375.808, -31.1097, 0.83 ) }
    dend_1 { pt3dadd( -3.58772, 380.102, -31.4581, 1.38 ) }
    dend_1 { pt3dadd( -3.42282, 384.132, -31.7701, 0.83 ) }
    dend_1 { pt3dadd( -3.35021, 386.368, -31.925, 0.83 ) }
    dend_1 { pt3dadd( -3.31027, 387.708, -32.0339, 1.66 ) }
    dend_1 { pt3dadd( -3.26895, 390.422, -32.2233, 1.66 ) }
    dend_1 { pt3dadd( -3.35323, 393.157, -32.4054, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 41.7854, -114.384, 22.4185, 0.83 ) }
    dend_59 { pt3dadd( 43.081, -114.321, 23.2607, 0.83 ) }
    dend_59 { pt3dadd( 43.9423, -114.259, 23.8818, 0.28 ) }
    dend_59 { pt3dadd( 46.0155, -114.111, 25.3767, 0.55 ) }
    dend_59 { pt3dadd( 46.8328, -114.053, 25.9661, 0.55 ) }
    dend_59 { pt3dadd( 48.0115, -113.969, 26.816, 0.55 ) }
    dend_59 { pt3dadd( 51.801, -113.698, 29.5486, 0.28 ) }
    dend_59 { pt3dadd( 52.2927, -113.696, 29.977, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 41.7854, -114.384, 22.4185, 0.55 ) }
    dend_58 { pt3dadd( 43.2812, -115.86, 23.9398, 0.55 ) }
    dend_58 { pt3dadd( 43.6859, -116.107, 24.3582, 0.83 ) }
    dend_58 { pt3dadd( 44.6769, -116.785, 25.4529, 0.28 ) }
    dend_58 { pt3dadd( 45.0793, -117.083, 25.9632, 0.83 ) }
    dend_58 { pt3dadd( 45.8743, -117.651, 26.9529, 0.83 ) }
    dend_58 { pt3dadd( 47.7954, -119.004, 29.2873, 0.83 ) }
    dend_58 { pt3dadd( 50.3376, -120.585, 32.0999, 0.83 ) }
    dend_58 { pt3dadd( 51.3045, -121.103, 33.2584, 0.83 ) }
    dend_58 { pt3dadd( 53.7414, -122.03, 36.2622, 1.11 ) }
    dend_58 { pt3dadd( 54.4936, -122.206, 37.3566, 0.83 ) }
    dend_58 { pt3dadd( 54.7386, -122.212, 37.7807, 0.83 ) }
    dend_58 { pt3dadd( 55.4374, -121.896, 39.3772, 0.83 ) }
    dend_58 { pt3dadd( 56.4096, -120.64, 42.5925, 0.83 ) }
    dend_58 { pt3dadd( 57.021, -119.464, 44.8167, 0.83 ) }
    dend_58 { pt3dadd( 57.5891, -117.579, 47.5118, 0.83 ) }
    dend_58 { pt3dadd( 57.7723, -116.613, 48.8756, 1.11 ) }
    dend_58 { pt3dadd( 57.9296, -115.118, 50.9401, 0.28 ) }
    dend_58 { pt3dadd( 57.9198, -114.828, 51.3344, 0.55 ) }
    dend_58 { pt3dadd( 57.8418, -113.483, 52.7874, 0.28 ) }
    dend_58 { pt3dadd( 57.5433, -112.767, 53.6937, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.37752, -99.4041, 4.88733, 1.11 ) }
    dend_46 { pt3dadd( -2.36233, -100.677, 5.83733, 1.11 ) }
    dend_46 { pt3dadd( -3.47273, -102.433, 7.011, 1.11 ) }
    dend_46 { pt3dadd( -6.01792, -107.368, 9.8103, 1.38 ) }
    dend_46 { pt3dadd( -7.30408, -110.311, 11.4998, 1.38 ) }
    dend_46 { pt3dadd( -8.25159, -112.48, 12.7444, 1.66 ) }
    dend_46 { pt3dadd( -9.75423, -115.92, 14.7182, 1.11 ) }
    dend_46 { pt3dadd( -10.4853, -117.913, 15.8331, 1.11 ) }
    dend_46 { pt3dadd( -11.3247, -121.02, 17.4269, 1.38 ) }
    dend_46 { pt3dadd( -12.2417, -126.341, 19.7147, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.37752, -99.4041, 4.88733, 1.38 ) }
    dend_31 { pt3dadd( -1.35579, -104.06, 4.95084, 1.38 ) }
    dend_31 { pt3dadd( -1.27091, -107.822, 5.10772, 1.94 ) }
    dend_31 { pt3dadd( -1.11064, -110.554, 5.01774, 1.38 ) }
    dend_31 { pt3dadd( -0.569453, -115.081, 4.27446, 1.94 ) }
    dend_31 { pt3dadd( 0.0648372, -118.593, 3.438, 0.83 ) }
    dend_31 { pt3dadd( 0.559885, -120.714, 2.81445, 0.83 ) }
    dend_31 { pt3dadd( 1.4074, -123.432, 1.89513, 1.38 ) }
    dend_31 { pt3dadd( 3.13103, -127.508, 0.155842, 1.94 ) }
    dend_31 { pt3dadd( 5.49615, -131.821, -2.16478, 0.83 ) }
    dend_31 { pt3dadd( 6.37467, -133.141, -3.03949, 0.83 ) }
    dend_31 { pt3dadd( 8.7982, -136.353, -5.67601, 1.11 ) }
    dend_31 { pt3dadd( 10.2615, -138.19, -7.26046, 0.55 ) }
    dend_31 { pt3dadd( 11.0125, -139.154, -8.16164, 0.55 ) }
    dend_31 { pt3dadd( 12.4592, -141.143, -10.0267, 0.55 ) }
    dend_31 { pt3dadd( 13.1488, -142.177, -11.1181, 0.83 ) }
    dend_31 { pt3dadd( 14.6445, -144.493, -13.7915, 0.55 ) }
    dend_31 { pt3dadd( 16.1301, -146.775, -16.7096, 1.66 ) }
    dend_31 { pt3dadd( 18.3375, -150.377, -21.4763, 0.55 ) }
    dend_31 { pt3dadd( 19.1782, -151.94, -23.5261, 1.66 ) }
    dend_31 { pt3dadd( 20.7297, -155.318, -27.7941, 0.55 ) }
    dend_31 { pt3dadd( 21.4346, -156.799, -29.6929, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.73862, 393.904, 6.49521, 0.83 ) }
    dend_28 { pt3dadd( -8.54485, 395.366, 5.38053, 0.83 ) }
    dend_28 { pt3dadd( -8.41113, 396.981, 4.14816, 0.83 ) }
    dend_28 { pt3dadd( -8.23126, 399.095, 2.71601, 0.55 ) }
    dend_28 { pt3dadd( -7.98189, 401.189, 1.39462, 0.83 ) }
    dend_28 { pt3dadd( -7.71679, 403.306, 0.179402, 0.28 ) }
    dend_28 { pt3dadd( -7.6008, 404.289, -0.333968, 0.55 ) }
    dend_28 { pt3dadd( -7.56653, 404.963, -0.677467, 0.55 ) }
    dend_28 { pt3dadd( -7.4448, 406.932, -1.56061, 1.11 ) }
    dend_28 { pt3dadd( -7.31003, 408.619, -2.13888, 0.55 ) }
    dend_28 { pt3dadd( -7.19169, 410.069, -2.55247, 1.11 ) }
    dend_28 { pt3dadd( -7.09762, 411.323, -2.83435, 1.11 ) }
    dend_28 { pt3dadd( -6.97663, 413.213, -3.1753, 0.28 ) }
    dend_28 { pt3dadd( -6.88968, 415.668, -3.69613, 0.55 ) }
    dend_28 { pt3dadd( -6.8877, 418.546, -4.36517, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -6.87912, 420.019, -4.66215, 0.55 ) }
    dend_28 { pt3dadd( -6.86039, 421.1, -4.85598, 0.28 ) }
    dend_28 { pt3dadd( -6.79534, 422.677, -5.00716, 0.83 ) }
    dend_28 { pt3dadd( -6.64641, 425.765, -5.00729, 1.38 ) }
    dend_28 { pt3dadd( -6.62768, 427.238, -4.92412, 1.38 ) }
    dend_28 { pt3dadd( -6.54703, 430.61, -4.56226, 0.83 ) }
    dend_28 { pt3dadd( -6.52465, 432.218, -4.34305, 0.83 ) }
    dend_28 { pt3dadd( -6.47928, 436.676, -3.5569, 0.83 ) }
    dend_28 { pt3dadd( -6.47865, 438.211, -3.24817, 0.83 ) }
    dend_28 { pt3dadd( -6.47468, 440.664, -2.61227, 0.83 ) }
    dend_28 { pt3dadd( -6.48342, 441.288, -2.44415, 0.83 ) }
    dend_28 { pt3dadd( -6.51422, 443.43, -1.88531, 1.38 ) }
    dend_28 { pt3dadd( -6.49859, 444.929, -1.54108, 0.55 ) }
    dend_28 { pt3dadd( -6.45791, 446.741, -1.25957, 0.55 ) }
    dend_28 { pt3dadd( -6.36045, 447.738, -1.15554, 0.55 ) }
    dend_28 { pt3dadd( -6.24812, 448.467, -1.11149, 0.28 ) }
    dend_28 { pt3dadd( -5.86895, 450.484, -1.08411, 0.83 ) }
    dend_28 { pt3dadd( -5.49844, 452.037, -1.17037, 0.55 ) }
    dend_28 { pt3dadd( -5.03226, 453.707, -1.33867, 0.83 ) }
    dend_28 { pt3dadd( -4.34778, 456.105, -1.62522, 0.55 ) }
    dend_28 { pt3dadd( -3.96605, 457.498, -1.80595, 1.66 ) }
    dend_28 { pt3dadd( -3.39675, 459.676, -2.10105, 1.66 ) }
    dend_28 { pt3dadd( -2.8356, 462.061, -2.42183, 0.83 ) }
    dend_28 { pt3dadd( -2.44019, 463.981, -2.66837, 0.83 ) }
    dend_28 { pt3dadd( -2.17605, 465.559, -2.84929, 0.83 ) }
    dend_28 { pt3dadd( -2.06896, 466.503, -2.93648, 0.28 ) }
    dend_28 { pt3dadd( -1.9628, 468.103, -3.02541, 1.11 ) }
    dend_28 { pt3dadd( -1.96631, 470.511, -3.08525, 0.55 ) }
    dend_28 { pt3dadd( -2.02462, 471.897, -3.08542, 0.55 ) }
    dend_28 { pt3dadd( -2.10467, 473.346, -3.10623, 0.55 ) }
    dend_28 { pt3dadd( -2.17967, 474.304, -3.1407, 0.55 ) }
    dend_28 { pt3dadd( -2.36134, 475.689, -3.22011, 1.11 ) }
    dend_28 { pt3dadd( -2.62625, 477.214, -3.33661, 0.28 ) }
    dend_28 { pt3dadd( -2.75964, 477.928, -3.39883, 0.55 ) }
    dend_28 { pt3dadd( -2.96771, 479.628, -3.53741, 0.55 ) }
    dend_28 { pt3dadd( -3.14345, 482.333, -3.73842, 0.55 ) }
    dend_28 { pt3dadd( -3.14701, 483.286, -3.79352, 0.83 ) }
    dend_28 { pt3dadd( -3.09115, 484.795, -3.89871, 0.83 ) }
    dend_28 { pt3dadd( -2.94964, 486.958, -4.00829, 0.83 ) }
    dend_28 { pt3dadd( -2.74063, 489.009, -4.04397, 0.83 ) }
    dend_28 { pt3dadd( -2.48507, 490.584, -4.03634, 0.83 ) }
    dend_28 { pt3dadd( -1.63951, 494.038, -3.96461, 1.11 ) }
    dend_28 { pt3dadd( -1.11897, 495.804, -3.91415, 0.28 ) }
    dend_28 { pt3dadd( -0.743223, 496.85, -3.89169, 0.55 ) }
    dend_28 { pt3dadd( -0.312742, 497.986, -3.74498, 0.55 ) }
    dend_28 { pt3dadd( 0.0644385, 498.948, -3.51649, 0.55 ) }
    dend_28 { pt3dadd( 0.371833, 499.597, -3.28565, 0.55 ) }
    dend_28 { pt3dadd( 1.5438, 501.569, -2.43432, 0.55 ) }
    dend_28 { pt3dadd( 2.35582, 502.969, -1.84024, 0.83 ) }
    dend_28 { pt3dadd( 4.39154, 506.509, -0.683592, 0.55 ) }
    dend_28 { pt3dadd( 4.72115, 507.116, -0.496458, 0.83 ) }
    dend_28 { pt3dadd( 5.31779, 508.323, -0.156697, 0.83 ) }
    dend_28 { pt3dadd( 5.99819, 509.838, 0.199824, 0.55 ) }
    dend_28 { pt3dadd( 6.56151, 511.226, 0.428548, 0.83 ) }
    dend_28 { pt3dadd( 7.35263, 513.481, 0.601745, 0.83 ) }
    dend_28 { pt3dadd( 7.9714, 515.466, 0.632425, 0.55 ) }
    dend_28 { pt3dadd( 8.15711, 516.199, 0.689262, 0.55 ) }
    dend_28 { pt3dadd( 8.50965, 517.843, 0.899252, 0.55 ) }
    dend_28 { pt3dadd( 8.65245, 518.639, 1.03773, 0.83 ) }
    dend_28 { pt3dadd( 8.90667, 520.042, 1.32363, 0.83 ) }
    dend_28 { pt3dadd( 9.24942, 522.533, 1.79964, 0.55 ) }
    dend_28 { pt3dadd( 9.41835, 523.743, 1.97562, 0.55 ) }
    dend_28 { pt3dadd( 9.65395, 525.562, 2.25225, 0.55 ) }
    dend_28 { pt3dadd( 9.82199, 527.059, 2.46938, 0.55 ) }
    dend_28 { pt3dadd( 10.164, 529.842, 2.86304, 0.55 ) }
    dend_28 { pt3dadd( 10.4149, 531.81, 3.08636, 0.83 ) }
    dend_28 { pt3dadd( 10.5484, 532.829, 3.14557, 1.11 ) }
    dend_28 { pt3dadd( 10.7348, 534.855, 3.266, 0.55 ) }
    dend_28 { pt3dadd( 10.8442, 537.761, 3.4897, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.73862, 393.904, 6.49521, 0.55 ) }
    dend_13 { pt3dadd( -10.0064, 396.894, 5.93499, 0.55 ) }
    dend_13 { pt3dadd( -10.8406, 399.039, 5.60998, 0.55 ) }
    dend_13 { pt3dadd( -11.4582, 400.861, 5.38607, 0.55 ) }
    dend_13 { pt3dadd( -11.9635, 402.505, 5.20784, 0.55 ) }
    dend_13 { pt3dadd( -12.9654, 405.873, 4.87671, 0.55 ) }
    dend_13 { pt3dadd( -13.5454, 407.828, 4.68963, 0.83 ) }
    dend_13 { pt3dadd( -14.3047, 410.286, 4.54293, 0.83 ) }
    dend_13 { pt3dadd( -15.0537, 412.843, 4.38885, 0.83 ) }
    dend_13 { pt3dadd( -15.5605, 414.981, 4.26866, 0.55 ) }
    dend_13 { pt3dadd( -15.9053, 416.775, 4.17721, 0.55 ) }
    dend_13 { pt3dadd( -16.3935, 419.241, 4.07999, 0.83 ) }
    dend_13 { pt3dadd( -16.7904, 421.225, 4.01809, 0.83 ) }
    dend_13 { pt3dadd( -17.479, 424.338, 3.92512, 0.83 ) }
    dend_13 { pt3dadd( -17.9451, 426.374, 3.8752, 0.83 ) }
    dend_13 { pt3dadd( -18.2859, 427.959, 3.85595, 0.55 ) }
    dend_13 { pt3dadd( -18.662, 430.006, 3.85853, 0.83 ) }
    dend_13 { pt3dadd( -19.0047, 432.28, 3.92539, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.35323, 393.157, -32.4054, 0.55 ) }
    dend_3 { pt3dadd( -3.36536, 395.003, -32.4043, 0.55 ) }
    dend_3 { pt3dadd( -3.38292, 397.673, -32.4029, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.35323, 393.157, -32.4054, 0.55 ) }
    dend_2 { pt3dadd( -7.04609, 393.449, -32.3618, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 52.2927, -113.696, 29.977, 0.28 ) }
    dend_61 { pt3dadd( 52.0463, -116.056, 28.8342, 0.28 ) }
    dend_61 { pt3dadd( 52.0008, -116.491, 28.6236, 1.11 ) }
    dend_61 { pt3dadd( 51.7851, -118.557, 27.6235, 0.28 ) }
    dend_61 { pt3dadd( 51.7634, -118.764, 27.523, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 52.2927, -113.696, 29.977, 1.66 ) }
    dend_60 { pt3dadd( 52.6634, -112.944, 30.6268, 1.66 ) }
    dend_60 { pt3dadd( 53.3607, -110.895, 32.0754, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 53.9885, -108.852, 33.4405, 0.28 ) }
    dend_60 { pt3dadd( 54.1436, -108.16, 33.8744, 0.55 ) }
    dend_60 { pt3dadd( 54.4925, -105.772, 35.2352, 0.28 ) }
    dend_60 { pt3dadd( 54.6756, -104.343, 36.0229, 0.83 ) }
    dend_60 { pt3dadd( 54.8422, -102.486, 37.0637, 0.83 ) }
    dend_60 { pt3dadd( 54.8669, -101.317, 37.653, 0.28 ) }
    dend_60 { pt3dadd( 54.8346, -99.6288, 38.4251, 0.55 ) }
    dend_60 { pt3dadd( 54.6158, -98.0995, 39.0706, 0.55 ) }
    dend_60 { pt3dadd( 54.1202, -96.2404, 39.7913, 0.28 ) }
    dend_60 { pt3dadd( 53.9172, -95.6843, 40.0112, 0.83 ) }
    dend_60 { pt3dadd( 53.3111, -94.1285, 40.6183, 0.28 ) }
    dend_60 { pt3dadd( 52.5146, -92.3179, 41.286, 0.55 ) }
    dend_60 { pt3dadd( 51.4703, -90.1301, 42.0839, 0.28 ) }
    dend_60 { pt3dadd( 50.6254, -88.6203, 42.6206, 1.11 ) }
    dend_60 { pt3dadd( 49.8703, -87.5001, 42.9612, 0.28 ) }
    dend_60 { pt3dadd( 48.8633, -86.075, 43.3605, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -12.2417, -126.341, 19.7147, 0.83 ) }
    dend_56 { pt3dadd( -11.4433, -130.402, 19.7536, 0.83 ) }
    dend_56 { pt3dadd( -10.9817, -132.39, 19.7423, 0.83 ) }
    dend_56 { pt3dadd( -10.2511, -135.917, 19.7195, 0.83 ) }
    dend_56 { pt3dadd( -9.8052, -138.526, 19.9129, 0.55 ) }
    dend_56 { pt3dadd( -9.4927, -140.941, 20.3021, 0.83 ) }
    dend_56 { pt3dadd( -9.27197, -143.261, 20.8758, 0.83 ) }
    dend_56 { pt3dadd( -9.13074, -144.986, 21.5705, 0.83 ) }
    dend_56 { pt3dadd( -9.01724, -147.811, 23.0178, 0.83 ) }
    dend_56 { pt3dadd( -9.02369, -151.213, 25.0484, 0.83 ) }
    dend_56 { pt3dadd( -9.15786, -153.43, 26.4584, 0.83 ) }
    dend_56 { pt3dadd( -9.52775, -156.95, 28.8694, 1.11 ) }
    dend_56 { pt3dadd( -9.88113, -159.584, 30.7388, 0.55 ) }
    dend_56 { pt3dadd( -10.1177, -161.477, 31.994, 0.55 ) }
    dend_56 { pt3dadd( -10.3895, -163.842, 33.3758, 0.83 ) }
    dend_56 { pt3dadd( -10.5846, -165.379, 34.0726, 0.83 ) }
    dend_56 { pt3dadd( -10.7365, -166.715, 34.5689, 0.28 ) }
    dend_56 { pt3dadd( -10.9106, -168.116, 35.0203, 0.55 ) }
    dend_56 { pt3dadd( -11.2893, -171.078, 35.8606, 1.11 ) }
    dend_56 { pt3dadd( -11.5126, -173.166, 36.3708, 0.28 ) }
    dend_56 { pt3dadd( -11.6441, -174.343, 36.6266, 0.55 ) }
    dend_56 { pt3dadd( -12.1282, -177.69, 37.3161, 0.28 ) }
    dend_56 { pt3dadd( -12.2213, -178.332, 37.4575, 0.83 ) }
    dend_56 { pt3dadd( -12.53, -180.907, 38.0459, 0.83 ) }
    dend_56 { pt3dadd( -12.8336, -183.581, 38.6653, 0.28 ) }
    dend_56 { pt3dadd( -12.8635, -183.982, 38.7428, 1.11 ) }
    dend_56 { pt3dadd( -12.9749, -185.782, 38.997, 1.11 ) }
    dend_56 { pt3dadd( -13.2206, -188.447, 39.2644, 0.55 ) }
    dend_56 { pt3dadd( -13.3748, -190.516, 39.5167, 1.11 ) }
    dend_56 { pt3dadd( -13.4554, -192.244, 39.7836, 1.11 ) }
    dend_56 { pt3dadd( -13.49, -193.453, 40.057, 1.11 ) }
    dend_56 { pt3dadd( -13.5471, -195.053, 40.4289, 0.28 ) }
    dend_56 { pt3dadd( -13.5143, -196.048, 40.7186, 0.55 ) }
    dend_56 { pt3dadd( -13.3928, -197.594, 41.2151, 0.28 ) }
    dend_56 { pt3dadd( -13.273, -198.368, 41.5795, 0.83 ) }
    dend_56 { pt3dadd( -12.9945, -199.884, 42.4051, 0.28 ) }
    dend_56 { pt3dadd( -12.8411, -200.688, 42.8447, 0.83 ) }
    dend_56 { pt3dadd( -12.1856, -203.705, 44.4165, 0.28 ) }
    dend_56 { pt3dadd( -12.0232, -204.632, 44.8336, 0.83 ) }
    dend_56 { pt3dadd( -11.7134, -207.233, 45.7997, 0.55 ) }
    dend_56 { pt3dadd( -11.5861, -208.98, 46.3586, 1.11 ) }
    dend_56 { pt3dadd( -11.5406, -210.869, 46.832, 0.28 ) }
    dend_56 { pt3dadd( -11.5513, -211.883, 47.0157, 0.83 ) }
    dend_56 { pt3dadd( -11.7483, -214.614, 47.283, 0.83 ) }
    dend_56 { pt3dadd( -11.8123, -216.086, 47.4817, 0.28 ) }
    dend_56 { pt3dadd( -11.8087, -216.995, 47.6079, 0.28 ) }
    dend_56 { pt3dadd( -11.7218, -218.014, 47.8326, 0.83 ) }
    dend_56 { pt3dadd( -11.5116, -219.254, 48.1823, 0.83 ) }
    dend_56 { pt3dadd( -11.1145, -220.917, 48.7222, 0.55 ) }
    dend_56 { pt3dadd( -10.2109, -223.95, 49.7731, 0.28 ) }
    dend_56 { pt3dadd( -9.98624, -224.793, 50.0877, 1.11 ) }
    dend_56 { pt3dadd( -9.70494, -226.031, 50.5183, 0.83 ) }
    dend_56 { pt3dadd( -9.23889, -228.55, 51.2841, 0.28 ) }
    dend_56 { pt3dadd( -9.174, -228.938, 51.37, 0.55 ) }
    dend_56 { pt3dadd( -8.90063, -230.649, 51.5671, 0.55 ) }
    dend_56 { pt3dadd( -8.58754, -232.502, 51.5514, 0.55 ) }
    dend_56 { pt3dadd( -8.32956, -234.02, 51.4735, 0.55 ) }
    dend_56 { pt3dadd( -8.13189, -235.309, 51.3709, 0.55 ) }
    dend_56 { pt3dadd( -7.89592, -236.979, 51.2451, 0.55 ) }
    dend_56 { pt3dadd( -7.53281, -239.097, 51.0507, 0.55 ) }
    dend_56 { pt3dadd( -7.12601, -241.148, 50.8324, 0.55 ) }
    dend_56 { pt3dadd( -6.6995, -243.154, 50.5962, 0.55 ) }
    dend_56 { pt3dadd( -6.41252, -244.596, 50.4696, 0.28 ) }
    dend_56 { pt3dadd( -6.10961, -246.344, 50.3396, 0.83 ) }
    dend_56 { pt3dadd( -5.81844, -248.792, 50.2106, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -12.2417, -126.341, 19.7147, 1.38 ) }
    dend_47 { pt3dadd( -14.9183, -126.948, 20.2881, 1.38 ) }
    dend_47 { pt3dadd( -18.139, -127.679, 20.9781, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.4346, -156.799, -29.6929, 0.55 ) }
    dend_37 { pt3dadd( 22.0008, -161.478, -30.0813, 0.55 ) }
    dend_37 { pt3dadd( 22.2131, -163.804, -30.3741, 0.55 ) }
    dend_37 { pt3dadd( 22.4814, -166.585, -30.7757, 2.49 ) }
    dend_37 { pt3dadd( 22.6939, -168.829, -31.1937, 0.55 ) }
    dend_37 { pt3dadd( 22.8848, -170.998, -31.6436, 0.55 ) }
    dend_37 { pt3dadd( 23.1264, -173.743, -32.2128, 0.83 ) }
    dend_37 { pt3dadd( 23.1608, -176.132, -32.7873, 0.28 ) }
    dend_37 { pt3dadd( 23.2098, -177.247, -33.1068, 0.55 ) }
    dend_37 { pt3dadd( 23.3236, -179.031, -33.7129, 0.28 ) }
    dend_37 { pt3dadd( 23.4046, -180.145, -34.1227, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 21.4346, -156.799, -29.6929, 0.83 ) }
    dend_32 { pt3dadd( 24.0, -157.179, -29.1316, 0.83 ) }
    dend_32 { pt3dadd( 26.1992, -157.35, -28.4844, 0.83 ) }
    dend_32 { pt3dadd( 28.5755, -157.446, -27.7803, 0.55 ) }
    dend_32 { pt3dadd( 31.5177, -157.598, -26.895, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 32.5379, -157.718, -26.6407, 0.83 ) }
    dend_32 { pt3dadd( 34.601, -158.175, -26.1277, 0.55 ) }
    dend_32 { pt3dadd( 36.4206, -158.77, -25.6425, 1.11 ) }
    dend_32 { pt3dadd( 38.2932, -159.691, -25.1333, 0.28 ) }
    dend_32 { pt3dadd( 39.5877, -160.548, -24.7739, 0.83 ) }
    dend_32 { pt3dadd( 42.1321, -162.63, -24.2036, 0.28 ) }
    dend_32 { pt3dadd( 44.5427, -164.836, -23.8057, 1.38 ) }
    dend_32 { pt3dadd( 45.9085, -166.243, -23.4968, 0.55 ) }
    dend_32 { pt3dadd( 46.9046, -167.421, -23.1603, 0.55 ) }
    dend_32 { pt3dadd( 48.1915, -169.228, -22.3958, 0.83 ) }
    dend_32 { pt3dadd( 49.0355, -170.606, -21.6659, 0.28 ) }
    dend_32 { pt3dadd( 50.0999, -172.444, -20.5444, 0.55 ) }
    dend_32 { pt3dadd( 52.0956, -176.046, -17.9368, 0.28 ) }
    dend_32 { pt3dadd( 53.0085, -177.653, -16.5836, 0.83 ) }
    dend_32 { pt3dadd( 54.4392, -179.965, -14.3138, 0.55 ) }
    dend_32 { pt3dadd( 54.9346, -180.689, -13.475, 0.55 ) }
    dend_32 { pt3dadd( 56.4465, -182.683, -10.9316, 1.94 ) }
    dend_32 { pt3dadd( 58.3394, -185.008, -8.03001, 0.55 ) }
    dend_32 { pt3dadd( 59.271, -186.011, -6.76991, 0.55 ) }
    dend_32 { pt3dadd( 60.094, -186.833, -5.6523, 0.55 ) }
    dend_32 { pt3dadd( 61.7578, -188.603, -3.46431, 0.28 ) }
    dend_32 { pt3dadd( 62.3232, -189.327, -2.71423, 1.38 ) }
    dend_32 { pt3dadd( 63.3981, -191.05, -1.23101, 1.38 ) }
    dend_32 { pt3dadd( 64.9086, -193.866, 0.366113, 0.55 ) }
    dend_32 { pt3dadd( 65.4071, -195.387, 1.38492, 0.55 ) }
    dend_32 { pt3dadd( 66.1393, -198.475, 3.6201, 1.11 ) }
    dend_32 { pt3dadd( 66.6483, -201.162, 5.52838, 0.28 ) }
    dend_32 { pt3dadd( 66.7207, -201.682, 5.90768, 0.83 ) }
    dend_32 { pt3dadd( 66.9515, -204.529, 8.12428, 0.28 ) }
    dend_32 { pt3dadd( 67.1535, -213.862, 15.6316, 0.83 ) }
    dend_32 { pt3dadd( 66.9836, -215.161, 17.0787, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.0047, 432.28, 3.92539, 0.55 ) }
    dend_23 { pt3dadd( -19.084, 433.793, 3.99536, 0.55 ) }
    dend_23 { pt3dadd( -19.232, 435.263, 4.28847, 0.28 ) }
    dend_23 { pt3dadd( -19.4871, 436.579, 4.60575, 0.55 ) }
    dend_23 { pt3dadd( -19.7982, 437.509, 4.84598, 0.28 ) }
    dend_23 { pt3dadd( -20.3231, 438.864, 5.13413, 0.83 ) }
    dend_23 { pt3dadd( -20.8425, 440.244, 5.38071, 0.83 ) }
    dend_23 { pt3dadd( -21.8378, 442.373, 6.15489, 0.55 ) }
    dend_23 { pt3dadd( -22.459, 443.588, 6.75622, 0.55 ) }
    dend_23 { pt3dadd( -23.6965, 445.885, 8.09277, 0.83 ) }
    dend_23 { pt3dadd( -24.4319, 447.155, 8.88687, 0.83 ) }
    dend_23 { pt3dadd( -25.2954, 448.597, 9.91594, 0.83 ) }
    dend_23 { pt3dadd( -28.1399, 453.175, 13.0162, 0.55 ) }
    dend_23 { pt3dadd( -28.6623, 454.107, 13.6056, 0.55 ) }
    dend_23 { pt3dadd( -28.8724, 454.542, 13.8771, 0.83 ) }
    dend_23 { pt3dadd( -29.2789, 455.534, 14.4805, 0.55 ) }
    dend_23 { pt3dadd( -30.3063, 458.606, 16.0868, 1.11 ) }
    dend_23 { pt3dadd( -30.9975, 461.296, 17.1485, 0.83 ) }
    dend_23 { pt3dadd( -31.3095, 463.196, 17.6062, 0.55 ) }
    dend_23 { pt3dadd( -31.4816, 464.614, 17.9428, 1.11 ) }
    dend_23 { pt3dadd( -31.6374, 466.189, 18.3442, 0.55 ) }
    dend_23 { pt3dadd( -31.7995, 468.784, 19.0479, 1.11 ) }
    dend_23 { pt3dadd( -31.9181, 470.779, 19.5585, 0.55 ) }
    dend_23 { pt3dadd( -32.049, 472.564, 20.0891, 0.55 ) }
    dend_23 { pt3dadd( -32.187, 473.535, 20.3679, 0.28 ) }
    dend_23 { pt3dadd( -32.4859, 475.269, 20.8594, 0.83 ) }
    dend_23 { pt3dadd( -32.8162, 477.029, 21.2859, 0.55 ) }
    dend_23 { pt3dadd( -33.1328, 478.608, 21.5921, 0.83 ) }
    dend_23 { pt3dadd( -33.4615, 480.107, 21.812, 0.83 ) }
    dend_23 { pt3dadd( -34.0091, 482.268, 22.0547, 0.55 ) }
    dend_23 { pt3dadd( -34.5699, 484.422, 22.2163, 0.55 ) }
    dend_23 { pt3dadd( -35.3213, 487.198, 22.3147, 0.83 ) }
    dend_23 { pt3dadd( -36.1007, 489.945, 22.3675, 0.83 ) }
    dend_23 { pt3dadd( -36.8263, 492.511, 22.4015, 0.83 ) }
    dend_23 { pt3dadd( -37.2847, 494.109, 22.4047, 0.83 ) }
    dend_23 { pt3dadd( -37.8587, 496.24, 22.3839, 0.83 ) }
    dend_23 { pt3dadd( -38.384, 498.107, 22.3657, 0.83 ) }
    dend_23 { pt3dadd( -38.9054, 500.136, 22.439, 0.83 ) }
    dend_23 { pt3dadd( -39.1966, 501.327, 22.5138, 0.83 ) }
    dend_23 { pt3dadd( -39.5633, 502.978, 22.6873, 0.55 ) }
    dend_23 { pt3dadd( -39.8678, 504.383, 22.7872, 0.83 ) }
    dend_23 { pt3dadd( -40.2693, 506.104, 22.9205, 0.83 ) }
    dend_23 { pt3dadd( -40.9211, 508.897, 23.1562, 0.55 ) }
    dend_23 { pt3dadd( -41.6102, 511.589, 23.3972, 0.83 ) }
    dend_23 { pt3dadd( -42.4184, 514.461, 23.6561, 0.55 ) }
    dend_23 { pt3dadd( -43.463, 517.546, 23.8943, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -19.0047, 432.28, 3.92539, 0.55 ) }
    dend_14 { pt3dadd( -21.025, 435.315, 5.13938, 0.55 ) }
    dend_14 { pt3dadd( -22.6236, 437.745, 5.72646, 0.28 ) }
    dend_14 { pt3dadd( -23.382, 438.861, 5.89902, 0.83 ) }
    dend_14 { pt3dadd( -24.4782, 440.411, 6.06314, 0.28 ) }
    dend_14 { pt3dadd( -25.0233, 441.186, 6.12348, 0.28 ) }
    dend_14 { pt3dadd( -25.912, 442.437, 6.18356, 0.83 ) }
    dend_14 { pt3dadd( -27.5484, 444.97, 6.08508, 0.83 ) }
    dend_14 { pt3dadd( -28.3569, 446.295, 5.93216, 0.28 ) }
    dend_14 { pt3dadd( -29.5074, 448.276, 5.75237, 0.83 ) }
    dend_14 { pt3dadd( -30.1001, 449.288, 5.66288, 0.55 ) }
    dend_14 { pt3dadd( -31.2377, 451.258, 5.55287, 1.11 ) }
    dend_14 { pt3dadd( -32.2912, 453.176, 5.47275, 0.55 ) }
    dend_14 { pt3dadd( -33.1023, 454.802, 5.422, 1.11 ) }
    dend_14 { pt3dadd( -33.9416, 456.648, 5.37984, 0.55 ) }
    dend_14 { pt3dadd( -35.0193, 459.24, 5.33651, 1.11 ) }
    dend_14 { pt3dadd( -35.666, 460.797, 5.32835, 0.28 ) }
    dend_14 { pt3dadd( -36.1688, 462.032, 5.34874, 0.55 ) }
    dend_14 { pt3dadd( -36.8021, 463.448, 5.4022, 0.28 ) }
    dend_14 { pt3dadd( -37.2531, 464.451, 5.46567, 0.83 ) }
    dend_14 { pt3dadd( -37.7409, 465.785, 5.49227, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.38292, 397.673, -32.4029, 0.83 ) }
    dend_5 { pt3dadd( -2.72853, 400.485, -32.9016, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( -2.42122, 402.016, -33.1825, 0.83 ) }
    dend_5 { pt3dadd( -1.97724, 404.301, -33.5942, 2.22 ) }
    dend_5 { pt3dadd( -1.56862, 406.617, -34.0208, 1.66 ) }
    dend_5 { pt3dadd( -1.03807, 409.437, -34.4317, 0.83 ) }
    dend_5 { pt3dadd( -0.864939, 410.368, -34.5423, 0.83 ) }
    dend_5 { pt3dadd( -0.548903, 412.445, -34.7453, 0.83 ) }
    dend_5 { pt3dadd( -0.155019, 415.311, -34.9302, 1.66 ) }
    dend_5 { pt3dadd( 0.054029, 417.542, -34.9981, 0.55 ) }
    dend_5 { pt3dadd( 0.116607, 419.791, -35.0642, 0.55 ) }
    dend_5 { pt3dadd( 0.0908577, 421.194, -35.1272, 1.11 ) }
    dend_5 { pt3dadd( -0.0229032, 423.602, -35.3368, 0.55 ) }
    dend_5 { pt3dadd( -0.340338, 427.545, -35.871, 1.66 ) }
    dend_5 { pt3dadd( -0.454091, 429.548, -36.2201, 0.83 ) }
    dend_5 { pt3dadd( -0.547264, 432.817, -36.8745, 0.83 ) }
    dend_5 { pt3dadd( -0.564149, 434.4, -37.2374, 0.83 ) }
    dend_5 { pt3dadd( -0.484039, 436.162, -37.6322, 1.66 ) }
    dend_5 { pt3dadd( -0.241498, 438.554, -38.1361, 0.83 ) }
    dend_5 { pt3dadd( 0.314329, 442.223, -38.7961, 0.83 ) }
    dend_5 { pt3dadd( 0.86177, 444.968, -39.1734, 0.83 ) }
    dend_5 { pt3dadd( 1.12182, 446.009, -39.2565, 0.83 ) }
    dend_5 { pt3dadd( 1.71134, 448.347, -39.3853, 0.83 ) }
    dend_5 { pt3dadd( 2.07321, 449.89, -39.4655, 1.38 ) }
    dend_5 { pt3dadd( 2.61892, 452.296, -39.5735, 0.55 ) }
    dend_5 { pt3dadd( 3.00149, 453.891, -39.6504, 1.38 ) }
    dend_5 { pt3dadd( 3.76907, 456.938, -39.8009, 1.38 ) }
    dend_5 { pt3dadd( 4.39157, 459.548, -39.9245, 0.83 ) }
    dend_5 { pt3dadd( 5.02938, 462.383, -40.046, 0.83 ) }
    dend_5 { pt3dadd( 5.75749, 465.481, -40.1747, 1.11 ) }
    dend_5 { pt3dadd( 6.34703, 468.025, -40.2698, 0.55 ) }
    dend_5 { pt3dadd( 6.77123, 470.072, -40.3298, 0.55 ) }
    dend_5 { pt3dadd( 7.07934, 471.693, -40.4257, 0.55 ) }
    dend_5 { pt3dadd( 7.77068, 475.287, -40.7314, 2.22 ) }
    dend_5 { pt3dadd( 8.07612, 476.895, -40.909, 0.55 ) }
    dend_5 { pt3dadd( 8.39424, 478.503, -41.1192, 0.55 ) }
    dend_5 { pt3dadd( 8.54411, 479.297, -41.2287, 1.11 ) }
    dend_5 { pt3dadd( 9.27039, 483.07, -41.7531, 0.55 ) }
    dend_5 { pt3dadd( 9.6267, 485.155, -42.031, 0.55 ) }
    dend_5 { pt3dadd( 9.73534, 485.974, -42.1309, 0.55 ) }
    dend_5 { pt3dadd( 9.95041, 488.531, -42.3759, 1.11 ) }
    dend_5 { pt3dadd( 10.0534, 490.992, -42.6058, 1.11 ) }
    dend_5 { pt3dadd( 10.0943, 493.016, -42.7576, 0.83 ) }
    dend_5 { pt3dadd( 10.0391, 495.132, -42.8349, 0.83 ) }
    dend_5 { pt3dadd( 9.96971, 496.469, -42.8921, 0.83 ) }
    dend_5 { pt3dadd( 9.72189, 499.14, -43.0229, 0.83 ) }
    dend_5 { pt3dadd( 9.25893, 502.166, -43.2104, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.38292, 397.673, -32.4029, 0.55 ) }
    dend_4 { pt3dadd( -4.58611, 397.736, -31.1054, 0.55 ) }
    dend_4 { pt3dadd( -5.84454, 397.801, -29.7484, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -18.139, -127.679, 20.9781, 1.11 ) }
    dend_53 { pt3dadd( -18.1078, -128.995, 20.975, 1.11 ) }
    dend_53 { pt3dadd( -18.055, -131.219, 20.9699, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -18.139, -127.679, 20.9781, 1.11 ) }
    dend_48 { pt3dadd( -21.0502, -126.157, 19.2487, 1.11 ) }
    dend_48 { pt3dadd( -22.0105, -125.532, 18.7421, 0.28 ) }
    dend_48 { pt3dadd( -22.6619, -125.123, 18.591, 0.83 ) }
    dend_48 { pt3dadd( -25.1074, -123.619, 18.3817, 0.55 ) }
    dend_48 { pt3dadd( -26.2325, -122.98, 18.3676, 0.55 ) }
    dend_48 { pt3dadd( -27.3232, -122.384, 18.3225, 0.55 ) }
    dend_48 { pt3dadd( -28.8407, -121.637, 18.3003, 0.55 ) }
    dend_48 { pt3dadd( -32.6132, -119.982, 18.129, 1.11 ) }
    dend_48 { pt3dadd( -34.8378, -119.034, 18.0041, 0.55 ) }
    dend_48 { pt3dadd( -36.2842, -118.432, 17.9321, 0.55 ) }
    dend_48 { pt3dadd( -39.6091, -117.258, 17.6871, 0.83 ) }
    dend_48 { pt3dadd( -41.6223, -116.642, 17.5165, 0.55 ) }
    dend_48 { pt3dadd( -43.5927, -116.126, 17.3294, 1.11 ) }
    dend_48 { pt3dadd( -46.7823, -115.417, 16.9264, 0.83 ) }
    dend_48 { pt3dadd( -47.9074, -115.223, 16.8192, 0.83 ) }
    dend_48 { pt3dadd( -49.4764, -114.979, 16.7614, 0.83 ) }
    dend_48 { pt3dadd( -51.9207, -114.715, 16.8624, 0.83 ) }
    dend_48 { pt3dadd( -55.0068, -114.497, 17.035, 1.11 ) }
    dend_48 { pt3dadd( -56.4496, -114.465, 17.0689, 0.83 ) }
    dend_48 { pt3dadd( -58.5244, -114.508, 17.0446, 0.83 ) }
    dend_48 { pt3dadd( -61.5852, -114.639, 16.917, 0.83 ) }
    dend_48 { pt3dadd( -63.5919, -114.796, 16.7311, 0.55 ) }
    dend_48 { pt3dadd( -65.0893, -115.032, 16.5259, 1.38 ) }
    dend_48 { pt3dadd( -67.2453, -115.407, 16.0869, 0.55 ) }
    dend_48 { pt3dadd( -69.2019, -115.667, 15.6086, 0.55 ) }
    dend_48 { pt3dadd( -70.3959, -115.839, 15.2534, 0.55 ) }
    dend_48 { pt3dadd( -72.1725, -116.102, 14.6039, 0.55 ) }
    dend_48 { pt3dadd( -73.1348, -116.204, 14.2024, 0.83 ) }
    dend_48 { pt3dadd( -76.3497, -116.316, 12.7367, 0.55 ) }
    dend_48 { pt3dadd( -77.4771, -116.321, 12.1924, 0.55 ) }
    dend_48 { pt3dadd( -78.7556, -116.265, 11.5612, 0.55 ) }
    dend_48 { pt3dadd( -81.2197, -116.068, 10.5229, 0.55 ) }
    dend_48 { pt3dadd( -83.7953, -115.798, 9.63004, 1.11 ) }
    dend_48 { pt3dadd( -86.4095, -115.522, 8.86459, 0.55 ) }
    dend_48 { pt3dadd( -87.1108, -115.475, 8.71603, 0.55 ) }
    dend_48 { pt3dadd( -89.4719, -115.42, 8.38796, 0.55 ) }
    dend_48 { pt3dadd( -92.1683, -115.397, 8.28919, 1.94 ) }
    dend_48 { pt3dadd( -94.0855, -115.495, 8.50472, 0.83 ) }
    dend_48 { pt3dadd( -94.7766, -115.563, 8.61876, 0.28 ) }
    dend_48 { pt3dadd( -95.9923, -115.773, 8.82607, 0.55 ) }
    dend_48 { pt3dadd( -97.7435, -116.154, 9.09972, 0.55 ) }
    dend_48 { pt3dadd( -99.2627, -116.556, 9.31062, 0.28 ) }
    dend_48 { pt3dadd( -101.937, -117.303, 9.73051, 1.11 ) }
    dend_48 { pt3dadd( -103.918, -117.916, 10.1456, 0.28 ) }
    dend_48 { pt3dadd( -106.081, -118.487, 10.6704, 0.83 ) }
    dend_48 { pt3dadd( -107.75, -118.846, 11.1539, 0.28 ) }
    dend_48 { pt3dadd( -108.467, -118.95, 11.4017, 0.28 ) }
    dend_48 { pt3dadd( -110.235, -119.075, 12.137, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -111.185, -119.044, 12.6084, 0.55 ) }
    dend_48 { pt3dadd( -113.068, -118.762, 13.615, 0.55 ) }
    dend_48 { pt3dadd( -113.852, -118.504, 13.9638, 0.83 ) }
    dend_48 { pt3dadd( -115.135, -117.981, 14.4074, 0.28 ) }
    dend_48 { pt3dadd( -115.454, -117.855, 14.4949, 0.83 ) }
    dend_48 { pt3dadd( -117.512, -117.057, 14.9206, 0.83 ) }
    dend_48 { pt3dadd( -119.195, -116.412, 15.2442, 0.83 ) }
    dend_48 { pt3dadd( -121.124, -115.776, 15.5913, 0.55 ) }
    dend_48 { pt3dadd( -122.104, -115.492, 15.7573, 0.55 ) }
    dend_48 { pt3dadd( -123.94, -115.072, 16.0742, 1.38 ) }
    dend_48 { pt3dadd( -125.904, -114.724, 16.4257, 1.38 ) }
    dend_48 { pt3dadd( -127.539, -114.526, 16.7314, 0.28 ) }
    dend_48 { pt3dadd( -128.866, -114.513, 16.9591, 0.83 ) }
    dend_48 { pt3dadd( -129.917, -114.622, 17.13, 0.28 ) }
    dend_48 { pt3dadd( -130.917, -114.836, 17.2742, 1.38 ) }
    dend_48 { pt3dadd( -132.434, -115.29, 17.4591, 0.28 ) }
    dend_48 { pt3dadd( -132.963, -115.523, 17.51, 0.83 ) }
    dend_48 { pt3dadd( -134.419, -116.335, 17.6132, 0.55 ) }
    dend_48 { pt3dadd( -135.196, -116.795, 17.6444, 0.55 ) }
    dend_48 { pt3dadd( -136.561, -117.586, 17.6592, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 23.4046, -180.145, -34.1227, 0.83 ) }
    dend_39 { pt3dadd( 23.5857, -182.026, -34.1794, 0.83 ) }
    dend_39 { pt3dadd( 23.6567, -183.825, -34.4313, 1.94 ) }
    dend_39 { pt3dadd( 23.7218, -185.637, -34.7619, 1.94 ) }
    dend_39 { pt3dadd( 23.7205, -189.246, -35.5416, 0.83 ) }
    dend_39 { pt3dadd( 23.6886, -191.763, -36.0938, 1.38 ) }
    dend_39 { pt3dadd( 23.4354, -198.312, -37.6731, 0.28 ) }
    dend_39 { pt3dadd( 23.4079, -198.888, -37.8333, 0.83 ) }
    dend_39 { pt3dadd( 23.2902, -200.545, -38.3869, 0.55 ) }
    dend_39 { pt3dadd( 23.0064, -202.846, -39.3124, 0.28 ) }
    dend_39 { pt3dadd( 22.5606, -205.041, -40.3829, 0.55 ) }
    dend_39 { pt3dadd( 21.8939, -208.003, -41.7701, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 23.4046, -180.145, -34.1227, 0.28 ) }
    dend_38 { pt3dadd( 22.7555, -179.51, -31.7887, 0.28 ) }
    dend_38 { pt3dadd( 22.6628, -179.419, -31.4556, 1.38 ) }
    dend_38 { pt3dadd( 21.9976, -178.768, -29.0638, 0.55 ) }
    dend_38 { pt3dadd( 21.6169, -178.396, -27.6952, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 66.9836, -215.161, 17.0787, 1.38 ) }
    dend_34 { pt3dadd( 67.2839, -217.31, 17.1403, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 66.9836, -215.161, 17.0787, 0.55 ) }
    dend_33 { pt3dadd( 68.1005, -214.399, 17.1245, 0.55 ) }
    dend_33 { pt3dadd( 68.8199, -213.908, 17.154, 0.55 ) }
    dend_33 { pt3dadd( 70.7171, -212.612, 17.2317, 0.28 ) }
    dend_33 { pt3dadd( 71.3319, -212.193, 17.2569, 1.11 ) }
    dend_33 { pt3dadd( 73.2146, -210.907, 17.3341, 0.28 ) }
    dend_33 { pt3dadd( 74.7911, -209.831, 17.3987, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -43.463, 517.546, 23.8943, 1.38 ) }
    dend_25 { pt3dadd( -43.2796, 519.579, 24.402, 1.38 ) }
    dend_25 { pt3dadd( -43.2865, 521.403, 24.9255, 0.55 ) }
    dend_25 { pt3dadd( -43.4846, 522.939, 25.6258, 0.55 ) }
    dend_25 { pt3dadd( -43.657, 524.275, 26.2351, 0.55 ) }
    dend_25 { pt3dadd( -43.8571, 525.826, 26.9425, 1.11 ) }
    dend_25 { pt3dadd( -44.2579, 528.933, 28.3591, 0.55 ) }
    dend_25 { pt3dadd( -44.7448, 531.149, 29.5595, 1.11 ) }
    dend_25 { pt3dadd( -45.657, 534.369, 31.6021, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -43.463, 517.546, 23.8943, 0.55 ) }
    dend_24 { pt3dadd( -43.6724, 519.892, 23.3827, 0.55 ) }
    dend_24 { pt3dadd( -43.8971, 520.874, 23.1538, 0.28 ) }
    dend_24 { pt3dadd( -44.1821, 521.811, 22.8236, 0.83 ) }
    dend_24 { pt3dadd( -44.7364, 523.466, 22.1735, 0.28 ) }
    dend_24 { pt3dadd( -45.285, 524.881, 21.579, 0.55 ) }
    dend_24 { pt3dadd( -45.8409, 526.199, 21.0142, 0.55 ) }
    dend_24 { pt3dadd( -47.021, 528.483, 19.8853, 1.11 ) }
    dend_24 { pt3dadd( -48.182, 530.364, 18.8949, 0.55 ) }
    dend_24 { pt3dadd( -48.6239, 531.063, 18.4886, 0.55 ) }
    dend_24 { pt3dadd( -49.6196, 532.619, 17.5623, 0.83 ) }
    dend_24 { pt3dadd( -50.2901, 533.679, 16.887, 0.83 ) }
    dend_24 { pt3dadd( -51.1745, 535.25, 15.7789, 0.83 ) }
    dend_24 { pt3dadd( -51.6015, 536.09, 15.1496, 0.83 ) }
    dend_24 { pt3dadd( -52.5108, 538.305, 13.5749, 0.55 ) }
    dend_24 { pt3dadd( -53.0194, 540.166, 12.232, 0.83 ) }
    dend_24 { pt3dadd( -53.216, 541.371, 11.296, 0.83 ) }
    dend_24 { pt3dadd( -53.4363, 543.492, 9.6083, 0.55 ) }
    dend_24 { pt3dadd( -53.5356, 545.302, 8.20377, 0.55 ) }
    dend_24 { pt3dadd( -53.5796, 546.422, 7.32707, 0.83 ) }
    dend_24 { pt3dadd( -53.77, 549.001, 5.29373, 0.83 ) }
    dend_24 { pt3dadd( -53.8665, 550.582, 4.03082, 0.83 ) }
    dend_24 { pt3dadd( -53.936, 551.716, 3.11667, 0.28 ) }
    dend_24 { pt3dadd( -53.9599, 552.564, 2.37937, 0.55 ) }
    dend_24 { pt3dadd( -53.7446, 554.017, 0.736777, 0.55 ) }
    dend_24 { pt3dadd( -53.5714, 554.809, -0.277542, 0.55 ) }
    dend_24 { pt3dadd( -53.3848, 555.453, -1.19517, 0.55 ) }
    dend_24 { pt3dadd( -52.8424, 557.024, -3.63287, 0.55 ) }
    dend_24 { pt3dadd( -52.2361, 558.498, -6.30027, 0.83 ) }
    dend_24 { pt3dadd( -51.3417, 560.642, -10.6971, 0.28 ) }
    dend_24 { pt3dadd( -51.0495, 561.223, -12.1601, 0.28 ) }
    dend_24 { pt3dadd( -50.8596, 561.512, -13.0197, 0.55 ) }
    dend_24 { pt3dadd( -50.5558, 561.852, -14.1878, 0.28 ) }
    dend_24 { pt3dadd( -50.3246, 562.064, -14.9473, 0.83 ) }
    dend_24 { pt3dadd( -49.935, 562.436, -16.1202, 0.83 ) }
    dend_24 { pt3dadd( -48.4339, 563.784, -20.0264, 0.83 ) }
    dend_24 { pt3dadd( -47.1839, 564.78, -23.0042, 0.28 ) }
    dend_24 { pt3dadd( -45.9364, 565.693, -25.8906, 1.11 ) }
    dend_24 { pt3dadd( -44.0758, 567.002, -30.1562, 0.55 ) }
    dend_24 { pt3dadd( -43.614, 567.334, -31.2885, 0.55 ) }
    dend_24 { pt3dadd( -42.8465, 567.868, -33.3629, 0.55 ) }
    dend_24 { pt3dadd( -42.4267, 568.194, -34.797, 0.55 ) }
    dend_24 { pt3dadd( -42.0798, 568.49, -36.3918, 0.83 ) }
    dend_24 { pt3dadd( -41.6498, 568.943, -39.2623, 0.55 ) }
    dend_24 { pt3dadd( -41.3968, 569.25, -41.3674, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -40.6957, 570.209, -47.885, 0.28 ) }
    dend_24 { pt3dadd( -40.5887, 570.348, -48.6822, 0.55 ) }
    dend_24 { pt3dadd( -40.1884, 570.935, -51.4391, 0.28 ) }
    dend_24 { pt3dadd( -39.8447, 571.409, -53.5173, 1.11 ) }
    dend_24 { pt3dadd( -39.2013, 572.181, -56.8553, 0.55 ) }
    dend_24 { pt3dadd( -38.7937, 572.57, -58.3923, 1.11 ) }
    dend_24 { pt3dadd( -37.6218, 573.563, -61.9959, 0.55 ) }
    dend_24 { pt3dadd( -37.2442, 573.853, -62.9654, 0.55 ) }
    dend_24 { pt3dadd( -36.1601, 574.625, -65.4119, 1.11 ) }
    dend_24 { pt3dadd( -35.5462, 575.033, -66.6373, 1.11 ) }
    dend_24 { pt3dadd( -33.1826, 576.536, -70.8868, 0.28 ) }
    dend_24 { pt3dadd( -32.4613, 576.978, -72.1216, 0.83 ) }
    dend_24 { pt3dadd( -30.7765, 578.025, -75.1366, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -37.7409, 465.785, 5.49227, 0.55 ) }
    dend_16 { pt3dadd( -38.1114, 466.93, 5.91052, 0.55 ) }
    dend_16 { pt3dadd( -38.6065, 468.353, 6.38436, 0.28 ) }
    dend_16 { pt3dadd( -39.3637, 470.362, 6.98474, 1.38 ) }
    dend_16 { pt3dadd( -40.5562, 473.246, 7.76829, 0.28 ) }
    dend_16 { pt3dadd( -41.6276, 475.679, 8.37635, 0.55 ) }
    dend_16 { pt3dadd( -42.2099, 476.993, 8.67954, 0.55 ) }
    dend_16 { pt3dadd( -42.7145, 478.105, 8.9071, 0.83 ) }
    dend_16 { pt3dadd( -43.4843, 479.707, 9.18688, 0.28 ) }
    dend_16 { pt3dadd( -44.1401, 481.008, 9.32001, 0.83 ) }
    dend_16 { pt3dadd( -44.5919, 481.953, 9.33434, 0.28 ) }
    dend_16 { pt3dadd( -45.0047, 482.894, 9.36428, 0.28 ) }
    dend_16 { pt3dadd( -45.6372, 484.341, 9.4126, 0.83 ) }
    dend_16 { pt3dadd( -46.3673, 486.061, 9.46844, 0.28 ) }
    dend_16 { pt3dadd( -46.7201, 486.926, 9.49361, 0.55 ) }
    dend_16 { pt3dadd( -47.5264, 488.925, 9.54513, 0.55 ) }
    dend_16 { pt3dadd( -48.1356, 490.414, 9.59091, 0.28 ) }
    dend_16 { pt3dadd( -48.4546, 491.158, 9.6168, 0.28 ) }
    dend_16 { pt3dadd( -49.0076, 492.497, 9.66295, 1.11 ) }
    dend_16 { pt3dadd( -49.6332, 494.206, 9.61344, 0.28 ) }
    dend_16 { pt3dadd( -50.0422, 495.389, 9.48591, 0.83 ) }
    dend_16 { pt3dadd( -50.4351, 496.692, 9.22712, 0.28 ) }
    dend_16 { pt3dadd( -50.7545, 498.223, 8.81861, 0.83 ) }
    dend_16 { pt3dadd( -50.8947, 499.168, 8.54162, 0.83 ) }
    dend_16 { pt3dadd( -51.1518, 501.662, 7.75752, 0.55 ) }
    dend_16 { pt3dadd( -51.2811, 503.345, 7.23534, 0.55 ) }
    dend_16 { pt3dadd( -51.3674, 504.42, 6.92618, 0.55 ) }
    dend_16 { pt3dadd( -51.5382, 506.371, 6.42156, 0.83 ) }
    dend_16 { pt3dadd( -51.6935, 508.021, 6.07051, 0.55 ) }
    dend_16 { pt3dadd( -51.9865, 510.44, 5.68328, 1.11 ) }
    dend_16 { pt3dadd( -52.2161, 512.125, 5.50101, 0.55 ) }
    dend_16 { pt3dadd( -52.4505, 513.708, 5.356, 0.55 ) }
    dend_16 { pt3dadd( -52.6168, 514.713, 5.23316, 0.83 ) }
    dend_16 { pt3dadd( -52.7496, 515.483, 5.07723, 0.55 ) }
    dend_16 { pt3dadd( -53.1274, 518.162, 4.36634, 0.83 ) }
    dend_16 { pt3dadd( -53.249, 519.249, 3.91831, 0.28 ) }
    dend_16 { pt3dadd( -53.2717, 519.469, 3.80018, 0.28 ) }
    dend_16 { pt3dadd( -53.3485, 520.412, 3.21795, 0.55 ) }
    dend_16 { pt3dadd( -53.5227, 522.821, 1.631, 0.28 ) }
    dend_16 { pt3dadd( -53.5581, 523.275, 1.35296, 0.55 ) }
    dend_16 { pt3dadd( -53.7354, 525.629, -0.00784314, 0.28 ) }
    dend_16 { pt3dadd( -53.8052, 526.588, -0.47959, 0.83 ) }
    dend_16 { pt3dadd( -54.0006, 528.255, -1.16546, 0.83 ) }
    dend_16 { pt3dadd( -54.0992, 528.96, -1.38839, 0.28 ) }
    dend_16 { pt3dadd( -54.3196, 531.079, -1.86832, 0.55 ) }
    dend_16 { pt3dadd( -54.4492, 532.459, -2.10594, 0.28 ) }
    dend_16 { pt3dadd( -54.5749, 534.258, -2.15153, 0.83 ) }
    dend_16 { pt3dadd( -54.6856, 536.637, -2.05477, 0.28 ) }
    dend_16 { pt3dadd( -54.6951, 537.669, -1.92106, 0.28 ) }
    dend_16 { pt3dadd( -54.6749, 539.109, -1.62608, 0.55 ) }
    dend_16 { pt3dadd( -54.6457, 541.314, -1.15068, 0.83 ) }
    dend_16 { pt3dadd( -54.6662, 544.232, -0.480843, 0.28 ) }
    dend_16 { pt3dadd( -54.6588, 545.463, -0.25069, 0.83 ) }
    dend_16 { pt3dadd( -54.6449, 547.499, -0.0517268, 0.28 ) }
    dend_16 { pt3dadd( -54.5988, 550.172, -0.183904, 1.38 ) }
    dend_16 { pt3dadd( -54.5542, 552.55, -0.57048, 0.28 ) }
    dend_16 { pt3dadd( -54.4524, 554.626, -1.09882, 0.83 ) }
    dend_16 { pt3dadd( -54.3264, 556.619, -1.77572, 0.83 ) }
    dend_16 { pt3dadd( -54.0942, 559.75, -2.91792, 0.55 ) }
    dend_16 { pt3dadd( -53.935, 562.948, -4.14609, 0.55 ) }
    dend_16 { pt3dadd( -53.8244, 565.204, -4.90349, 0.83 ) }
    dend_16 { pt3dadd( -53.7549, 566.947, -5.24151, 0.83 ) }
    dend_16 { pt3dadd( -53.7048, 569.211, -5.41271, 0.55 ) }
    dend_16 { pt3dadd( -53.7235, 570.714, -5.21428, 0.55 ) }
    dend_16 { pt3dadd( -53.7519, 572.927, -4.51152, 1.38 ) }
    dend_16 { pt3dadd( -53.8844, 575.667, -3.31898, 0.83 ) }
    dend_16 { pt3dadd( -54.0375, 578.818, -1.64803, 1.11 ) }
    dend_16 { pt3dadd( -54.1218, 580.37, -0.666381, 1.11 ) }
    dend_16 { pt3dadd( -54.2164, 583.509, 1.7182, 0.83 ) }
    dend_16 { pt3dadd( -54.195, 584.188, 2.29289, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -37.7409, 465.785, 5.49227, 0.28 ) }
    dend_15 { pt3dadd( -36.0326, 465.652, 6.19327, 0.28 ) }
    dend_15 { pt3dadd( -35.5977, 465.618, 6.37173, 0.83 ) }
    dend_15 { pt3dadd( -34.2573, 465.514, 6.92177, 0.28 ) }
    dend_15 { pt3dadd( -34.0609, 465.499, 7.00236, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.25893, 502.166, -43.2104, 0.55 ) }
    dend_7 { pt3dadd( 10.1477, 504.471, -43.2896, 0.55 ) }
    dend_7 { pt3dadd( 11.0917, 507.043, -43.4369, 0.55 ) }
    dend_7 { pt3dadd( 11.5929, 508.525, -43.5416, 0.55 ) }
    dend_7 { pt3dadd( 12.3255, 510.452, -43.6883, 0.28 ) }
    dend_7 { pt3dadd( 13.0859, 512.215, -43.8357, 0.83 ) }
    dend_7 { pt3dadd( 14.2724, 514.898, -44.0644, 0.28 ) }
    dend_7 { pt3dadd( 14.7324, 515.975, -44.1666, 0.83 ) }
    dend_7 { pt3dadd( 15.3745, 517.632, -44.3326, 0.55 ) }
    dend_7 { pt3dadd( 16.2845, 519.963, -44.6133, 0.55 ) }
    dend_7 { pt3dadd( 16.7989, 521.347, -44.7987, 0.83 ) }
    dend_7 { pt3dadd( 17.3488, 523.1, -45.0352, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 17.763, 524.536, -45.1819, 0.83 ) }
    dend_7 { pt3dadd( 18.1896, 526.169, -45.3604, 0.83 ) }
    dend_7 { pt3dadd( 18.4619, 527.37, -45.574, 0.28 ) }
    dend_7 { pt3dadd( 18.6788, 529.102, -45.9436, 0.83 ) }
    dend_7 { pt3dadd( 18.7352, 530.55, -46.3357, 0.83 ) }
    dend_7 { pt3dadd( 18.6277, 532.351, -47.147, 0.83 ) }
    dend_7 { pt3dadd( 18.2961, 534.362, -48.3432, 1.11 ) }
    dend_7 { pt3dadd( 17.6901, 536.671, -50.2977, 0.55 ) }
    dend_7 { pt3dadd( 16.9601, 538.329, -52.0305, 0.55 ) }
    dend_7 { pt3dadd( 16.079, 539.827, -53.8503, 1.11 ) }
    dend_7 { pt3dadd( 14.2784, 542.32, -57.4258, 0.28 ) }
    dend_7 { pt3dadd( 13.7764, 542.959, -58.4536, 0.28 ) }
    dend_7 { pt3dadd( 12.1451, 544.933, -61.8261, 0.83 ) }
    dend_7 { pt3dadd( 11.2154, 546.068, -63.9037, 0.55 ) }
    dend_7 { pt3dadd( 10.9223, 546.45, -64.6834, 0.55 ) }
    dend_7 { pt3dadd( 10.0584, 547.703, -67.1528, 0.55 ) }
    dend_7 { pt3dadd( 9.43125, 548.658, -68.9622, 0.83 ) }
    dend_7 { pt3dadd( 8.2152, 550.405, -72.4519, 0.55 ) }
    dend_7 { pt3dadd( 5.92678, 553.526, -78.7682, 1.94 ) }
    dend_7 { pt3dadd( 3.98123, 556.159, -84.5883, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.25893, 502.166, -43.2104, 0.55 ) }
    dend_6 { pt3dadd( 8.69427, 503.887, -43.3125, 0.55 ) }
    dend_6 { pt3dadd( 8.18487, 505.482, -43.4561, 0.83 ) }
    dend_6 { pt3dadd( 7.93734, 506.259, -43.5817, 0.55 ) }
    dend_6 { pt3dadd( 7.51303, 507.986, -43.9378, 0.83 ) }
    dend_6 { pt3dadd( 6.98698, 510.478, -44.5232, 0.55 ) }
    dend_6 { pt3dadd( 6.71215, 511.561, -44.8157, 0.55 ) }
    dend_6 { pt3dadd( 6.42029, 512.576, -45.2147, 1.11 ) }
    dend_6 { pt3dadd( 6.03858, 513.999, -45.8929, 0.83 ) }
    dend_6 { pt3dadd( 5.53552, 515.768, -46.8625, 0.83 ) }
    dend_6 { pt3dadd( 4.85886, 517.825, -48.1209, 0.83 ) }
    dend_6 { pt3dadd( 4.1104, 519.539, -49.2211, 0.55 ) }
    dend_6 { pt3dadd( 3.18077, 521.462, -50.4468, 0.28 ) }
    dend_6 { pt3dadd( 2.02148, 523.318, -52.0544, 0.83 ) }
    dend_6 { pt3dadd( 1.0241, 524.707, -53.4362, 0.55 ) }
    dend_6 { pt3dadd( -0.224524, 526.281, -55.1583, 1.38 ) }
    dend_6 { pt3dadd( -1.38015, 527.748, -56.8499, 0.55 ) }
    dend_6 { pt3dadd( -2.03263, 528.634, -57.8504, 0.55 ) }
    dend_6 { pt3dadd( -6.18253, 534.521, -64.2353, 0.83 ) }
    dend_6 { pt3dadd( -6.81756, 535.396, -65.1895, 0.55 ) }
    dend_6 { pt3dadd( -6.95375, 535.608, -65.4114, 0.55 ) }
    dend_6 { pt3dadd( -7.69493, 536.951, -66.6869, 1.38 ) }
    dend_6 { pt3dadd( -8.12557, 538.013, -67.4988, 1.38 ) }
    dend_6 { pt3dadd( -8.70208, 540.185, -68.3973, 0.28 ) }
    dend_6 { pt3dadd( -8.77565, 541.141, -68.2875, 0.55 ) }
    dend_6 { pt3dadd( -8.78235, 542.778, -68.0029, 0.28 ) }
    dend_6 { pt3dadd( -8.77223, 544.54, -67.6262, 0.55 ) }
    dend_6 { pt3dadd( -8.72405, 547.626, -66.7365, 0.55 ) }
    dend_6 { pt3dadd( -8.68372, 549.515, -66.1201, 0.55 ) }
    dend_6 { pt3dadd( -8.60338, 551.753, -65.3059, 0.55 ) }
    dend_6 { pt3dadd( -8.42078, 553.585, -64.5813, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.055, -131.219, 20.9699, 0.55 ) }
    dend_55 { pt3dadd( -19.2024, -131.851, 22.5809, 0.55 ) }
    dend_55 { pt3dadd( -20.1136, -132.357, 23.8865, 0.28 ) }
    dend_55 { pt3dadd( -20.9492, -132.822, 25.0838, 1.11 ) }
    dend_55 { pt3dadd( -24.0044, -134.52, 29.4614, 0.28 ) }
    dend_55 { pt3dadd( -24.4025, -134.741, 30.0319, 1.11 ) }
    dend_55 { pt3dadd( -26.465, -135.887, 32.9872, 0.28 ) }
    dend_55 { pt3dadd( -26.9437, -136.173, 33.8501, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -18.055, -131.219, 20.9699, 0.83 ) }
    dend_54 { pt3dadd( -20.0828, -133.094, 21.7909, 0.83 ) }
    dend_54 { pt3dadd( -22.0491, -134.638, 22.5411, 0.83 ) }
    dend_54 { pt3dadd( -23.8751, -135.674, 23.2918, 0.83 ) }
    dend_54 { pt3dadd( -27.0913, -137.346, 24.6018, 0.83 ) }
    dend_54 { pt3dadd( -29.4124, -138.6, 25.9133, 0.83 ) }
    dend_54 { pt3dadd( -32.4869, -140.409, 28.0234, 0.83 ) }
    dend_54 { pt3dadd( -34.1601, -141.459, 29.3479, 0.83 ) }
    dend_54 { pt3dadd( -37.8206, -144.264, 32.7887, 1.11 ) }
    dend_54 { pt3dadd( -38.5717, -144.99, 33.6949, 1.11 ) }
    dend_54 { pt3dadd( -41.4084, -148.688, 38.0636, 1.11 ) }
    dend_54 { pt3dadd( -42.9358, -151.272, 40.8669, 1.11 ) }
    dend_54 { pt3dadd( -44.023, -153.668, 43.2253, 1.11 ) }
    dend_54 { pt3dadd( -44.8016, -155.895, 45.3064, 1.38 ) }
    dend_54 { pt3dadd( -45.6824, -159.508, 48.3471, 0.55 ) }
    dend_54 { pt3dadd( -46.0427, -161.043, 49.5539, 0.83 ) }
    dend_54 { pt3dadd( -46.4073, -162.577, 50.529, 0.83 ) }
    dend_54 { pt3dadd( -46.6701, -163.879, 51.3983, 0.83 ) }
    dend_54 { pt3dadd( -46.976, -165.117, 52.2715, 0.83 ) }
    dend_54 { pt3dadd( -47.4625, -167.534, 53.6989, 0.55 ) }
    dend_54 { pt3dadd( -47.7585, -169.219, 54.304, 0.55 ) }
    dend_54 { pt3dadd( -47.9352, -170.171, 54.5213, 1.11 ) }
    dend_54 { pt3dadd( -48.243, -171.96, 54.7435, 0.28 ) }
    dend_54 { pt3dadd( -48.4251, -172.933, 54.8034, 1.11 ) }
    dend_54 { pt3dadd( -48.9067, -175.095, 54.6979, 0.55 ) }
    dend_54 { pt3dadd( -49.3574, -177.227, 54.2585, 0.55 ) }
    dend_54 { pt3dadd( -49.9976, -179.631, 53.5334, 0.28 ) }
    dend_54 { pt3dadd( -50.2107, -180.402, 53.228, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -136.561, -117.586, 17.6592, 1.11 ) }
    dend_50 { pt3dadd( -138.265, -117.366, 17.8747, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -136.561, -117.586, 17.6592, 0.28 ) }
    dend_49 { pt3dadd( -137.272, -119.102, 17.1423, 0.28 ) }
    dend_49 { pt3dadd( -137.407, -119.389, 17.0443, 0.83 ) }
    dend_49 { pt3dadd( -138.073, -120.806, 16.5613, 0.28 ) }
    dend_49 { pt3dadd( -138.26, -121.205, 16.4252, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 21.8939, -208.003, -41.7701, 0.55 ) }
    dend_41 { pt3dadd( 20.6431, -209.319, -40.6165, 0.55 ) }
    dend_41 { pt3dadd( 19.7351, -210.237, -39.8994, 0.55 ) }
    dend_41 { pt3dadd( 18.1017, -211.865, -38.253, 0.28 ) }
    dend_41 { pt3dadd( 17.645, -212.377, -37.7673, 0.55 ) }
    dend_41 { pt3dadd( 16.941, -213.165, -37.0199, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 16.0395, -214.201, -36.0675, 0.28 ) }
    dend_41 { pt3dadd( 15.306, -214.969, -35.3124, 0.55 ) }
    dend_41 { pt3dadd( 13.1607, -217.083, -33.3253, 0.28 ) }
    dend_41 { pt3dadd( 11.3291, -218.841, -31.7597, 0.83 ) }
    dend_41 { pt3dadd( 9.50962, -220.633, -30.1263, 0.28 ) }
    dend_41 { pt3dadd( 9.00137, -221.153, -29.6466, 0.83 ) }
    dend_41 { pt3dadd( 7.70695, -222.463, -28.4242, 0.83 ) }
    dend_41 { pt3dadd( 6.31858, -223.765, -27.2552, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 21.8939, -208.003, -41.7701, 0.28 ) }
    dend_40 { pt3dadd( 21.746, -211.395, -41.589, 0.28 ) }
    dend_40 { pt3dadd( 21.7057, -212.587, -41.4648, 0.55 ) }
    dend_40 { pt3dadd( 21.6579, -214.595, -41.209, 0.28 ) }
    dend_40 { pt3dadd( 21.6194, -217.011, -40.8765, 1.11 ) }
    dend_40 { pt3dadd( 21.5989, -219.885, -40.4682, 0.28 ) }
    dend_40 { pt3dadd( 21.6113, -220.65, -40.3606, 0.55 ) }
    dend_40 { pt3dadd( 21.6088, -221.837, -40.0872, 0.28 ) }
    dend_40 { pt3dadd( 21.6146, -222.578, -39.8902, 0.55 ) }
    dend_40 { pt3dadd( 21.5814, -223.524, -39.6026, 0.28 ) }
    dend_40 { pt3dadd( 21.5528, -224.049, -39.4617, 0.55 ) }
    dend_40 { pt3dadd( 21.4603, -225.771, -39.2282, 0.28 ) }
    dend_40 { pt3dadd( 21.3883, -227.293, -39.1004, 1.11 ) }
    dend_40 { pt3dadd( 21.1646, -230.508, -38.6686, 0.28 ) }
    dend_40 { pt3dadd( 21.042, -232.368, -38.3663, 1.11 ) }
    dend_40 { pt3dadd( 20.9361, -233.849, -38.1182, 1.11 ) }
    dend_40 { pt3dadd( 20.7241, -236.6, -37.6498, 0.28 ) }
    dend_40 { pt3dadd( 20.5861, -238.342, -37.3501, 0.83 ) }
    dend_40 { pt3dadd( 20.4621, -242.053, -36.7582, 0.55 ) }
    dend_40 { pt3dadd( 20.4807, -244.112, -36.5539, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 67.2839, -217.31, 17.1403, 0.28 ) }
    dend_36 { pt3dadd( 68.6483, -218.436, 18.2422, 0.28 ) }
    dend_36 { pt3dadd( 69.1293, -218.822, 18.6264, 0.83 ) }
    dend_36 { pt3dadd( 69.8907, -219.437, 19.2172, 0.28 ) }
    dend_36 { pt3dadd( 70.963, -220.313, 20.0271, 0.83 ) }
    dend_36 { pt3dadd( 72.0355, -221.234, 20.8175, 0.28 ) }
    dend_36 { pt3dadd( 72.838, -221.907, 21.395, 0.55 ) }
    dend_36 { pt3dadd( 73.2731, -222.239, 21.7048, 0.28 ) }
    dend_36 { pt3dadd( 74.2464, -222.901, 22.3655, 0.55 ) }
    dend_36 { pt3dadd( 74.8997, -223.322, 22.7902, 0.28 ) }
    dend_36 { pt3dadd( 75.6393, -223.772, 23.2638, 0.55 ) }
    dend_36 { pt3dadd( 76.612, -224.296, 23.8668, 0.55 ) }
    dend_36 { pt3dadd( 77.6246, -224.791, 24.4151, 0.55 ) }
    dend_36 { pt3dadd( 79.0245, -225.475, 25.0951, 0.83 ) }
    dend_36 { pt3dadd( 79.9128, -225.899, 25.4185, 0.28 ) }
    dend_36 { pt3dadd( 80.7725, -226.349, 25.6589, 0.83 ) }
    dend_36 { pt3dadd( 81.5798, -226.852, 26.0079, 1.38 ) }
    dend_36 { pt3dadd( 83.2278, -228.089, 26.9555, 0.28 ) }
    dend_36 { pt3dadd( 84.11, -228.846, 27.4807, 0.83 ) }
    dend_36 { pt3dadd( 85.453, -230.064, 28.314, 0.28 ) }
    dend_36 { pt3dadd( 86.2794, -230.841, 28.8763, 1.11 ) }
    dend_36 { pt3dadd( 89.2667, -233.848, 31.2632, 0.28 ) }
    dend_36 { pt3dadd( 89.6302, -234.236, 31.598, 0.55 ) }
    dend_36 { pt3dadd( 91.3887, -236.177, 33.3862, 0.28 ) }
    dend_36 { pt3dadd( 92.5629, -237.512, 34.5756, 0.28 ) }
    dend_36 { pt3dadd( 93.0642, -238.141, 35.0791, 0.55 ) }
    dend_36 { pt3dadd( 93.9158, -239.148, 35.7672, 0.28 ) }
    dend_36 { pt3dadd( 94.4823, -239.788, 36.0146, 0.28 ) }
    dend_36 { pt3dadd( 95.1725, -240.639, 36.3531, 0.55 ) }
    dend_36 { pt3dadd( 95.8559, -241.712, 36.9291, 0.55 ) }
    dend_36 { pt3dadd( 96.2648, -242.611, 37.1878, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 67.2839, -217.31, 17.1403, 0.55 ) }
    dend_35 { pt3dadd( 64.5872, -218.987, 14.8415, 0.55 ) }
    dend_35 { pt3dadd( 63.4695, -219.682, 13.8887, 0.55 ) }
    dend_35 { pt3dadd( 62.0918, -220.539, 12.7143, 0.28 ) }
    dend_35 { pt3dadd( 60.2696, -221.672, 11.1609, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -45.657, 534.369, 31.6021, 0.83 ) }
    dend_27 { pt3dadd( -45.717, 536.264, 32.3386, 0.83 ) }
    dend_27 { pt3dadd( -45.7707, 539.191, 33.4526, 0.83 ) }
    dend_27 { pt3dadd( -45.7863, 541.191, 34.225, 0.83 ) }
    dend_27 { pt3dadd( -45.9531, 545.333, 35.8044, 0.83 ) }
    dend_27 { pt3dadd( -45.9795, 545.811, 35.9529, 1.11 ) }
    dend_27 { pt3dadd( -46.0742, 547.055, 36.2687, 0.55 ) }
    dend_27 { pt3dadd( -46.1624, 547.79, 36.4186, 0.83 ) }
    dend_27 { pt3dadd( -46.4587, 548.338, 35.0142, 0.28 ) }
    dend_27 { pt3dadd( -46.6095, 548.871, 33.5034, 0.55 ) }
    dend_27 { pt3dadd( -46.7884, 550.612, 28.7588, 0.28 ) }
    dend_27 { pt3dadd( -46.8134, 551.189, 27.3954, 0.83 ) }
    dend_27 { pt3dadd( -46.802, 551.671, 26.3527, 0.83 ) }
    dend_27 { pt3dadd( -46.4918, 555.001, 20.0042, 0.55 ) }
    dend_27 { pt3dadd( -46.3132, 556.012, 18.3235, 0.55 ) }
    dend_27 { pt3dadd( -46.0319, 557.049, 17.1384, 1.11 ) }
    dend_27 { pt3dadd( -45.0529, 560.82, 15.3697, 0.55 ) }
    dend_27 { pt3dadd( -44.9197, 561.358, 15.271, 0.83 ) }
    dend_27 { pt3dadd( -44.7341, 562.231, 15.3871, 0.28 ) }
    dend_27 { pt3dadd( -44.6652, 562.699, 15.5558, 0.55 ) }
    dend_27 { pt3dadd( -44.6442, 563.447, 15.7351, 0.28 ) }
    dend_27 { pt3dadd( -44.6783, 564.476, 15.8023, 0.83 ) }
    dend_27 { pt3dadd( -44.6581, 565.553, 15.6905, 0.28 ) }
    dend_27 { pt3dadd( -44.6552, 566.267, 15.605, 0.83 ) }
    dend_27 { pt3dadd( -44.6741, 568.553, 15.1108, 0.55 ) }
    dend_27 { pt3dadd( -44.6941, 570.623, 14.5228, 0.55 ) }
    dend_27 { pt3dadd( -44.7242, 572.152, 14.0274, 0.55 ) }
    dend_27 { pt3dadd( -44.7645, 574.284, 13.3207, 0.55 ) }
    dend_27 { pt3dadd( -44.8107, 575.714, 12.8058, 0.55 ) }
    dend_27 { pt3dadd( -44.9439, 578.808, 11.7208, 0.55 ) }
    dend_27 { pt3dadd( -44.9715, 579.77, 11.3757, 0.28 ) }
    dend_27 { pt3dadd( -44.9878, 580.623, 11.0418, 0.55 ) }
    dend_27 { pt3dadd( -45.0436, 581.802, 10.57, 0.28 ) }
    dend_27 { pt3dadd( -45.2307, 583.626, 9.79365, 0.55 ) }
    dend_27 { pt3dadd( -45.3093, 584.382, 9.49252, 0.55 ) }
    dend_27 { pt3dadd( -45.421, 585.817, 8.9945, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -45.4811, 587.171, 8.43527, 0.28 ) }
    dend_27 { pt3dadd( -45.4503, 587.866, 8.12361, 0.55 ) }
    dend_27 { pt3dadd( -45.2098, 589.402, 7.03737, 0.28 ) }
    dend_27 { pt3dadd( -44.9478, 590.194, 6.25782, 0.83 ) }
    dend_27 { pt3dadd( -44.636, 591.029, 5.36504, 0.83 ) }
    dend_27 { pt3dadd( -43.9955, 592.49, 3.66797, 0.55 ) }
    dend_27 { pt3dadd( -43.4432, 593.552, 2.28862, 0.55 ) }
    dend_27 { pt3dadd( -41.6499, 596.623, -2.07114, 0.28 ) }
    dend_27 { pt3dadd( -40.361, 598.515, -5.03343, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -45.657, 534.369, 31.6021, 0.55 ) }
    dend_26 { pt3dadd( -46.6041, 535.81, 31.8697, 0.55 ) }
    dend_26 { pt3dadd( -47.8505, 537.707, 32.2219, 0.55 ) }
    dend_26 { pt3dadd( -48.7272, 539.042, 32.4697, 0.55 ) }
    dend_26 { pt3dadd( -49.4884, 540.2, 32.6848, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -54.195, 584.188, 2.29289, 0.28 ) }
    dend_22 { pt3dadd( -54.1513, 585.086, -0.67736, 0.28 ) }
    dend_22 { pt3dadd( -54.1392, 585.336, -1.50351, 0.55 ) }
    dend_22 { pt3dadd( -54.0198, 587.791, -9.62973, 0.28 ) }
    dend_22 { pt3dadd( -54.0063, 588.069, -10.552, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -54.195, 584.188, 2.29289, 0.28 ) }
    dend_17 { pt3dadd( -55.5268, 585.512, 2.56436, 0.28 ) }
    dend_17 { pt3dadd( -56.35, 586.33, 2.73217, 0.83 ) }
    dend_17 { pt3dadd( -56.9656, 586.942, 2.85764, 0.83 ) }
    dend_17 { pt3dadd( -57.3551, 587.329, 2.93703, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 3.98123, 556.159, -84.5883, 0.55 ) }
    dend_9 { pt3dadd( 1.71784, 556.981, -84.9453, 0.55 ) }
    dend_9 { pt3dadd( -0.95281, 557.98, -85.5512, 0.55 ) }
    dend_9 { pt3dadd( -2.94686, 558.727, -86.0036, 0.55 ) }
    dend_9 { pt3dadd( -5.26232, 559.594, -86.5289, 0.28 ) }
    dend_9 { pt3dadd( -7.35661, 560.378, -87.0041, 0.83 ) }
    dend_9 { pt3dadd( -8.97054, 560.982, -87.3702, 0.83 ) }
    dend_9 { pt3dadd( -10.6669, 561.72, -87.9257, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.98123, 556.159, -84.5883, 0.55 ) }
    dend_8 { pt3dadd( 2.84708, 559.059, -85.1619, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -138.265, -117.366, 17.8747, 0.28 ) }
    dend_52 { pt3dadd( -140.38, -117.15, 18.1508, 0.28 ) }
    dend_52 { pt3dadd( -142.483, -116.83, 18.453, 0.55 ) }
    dend_52 { pt3dadd( -144.826, -116.44, 18.8134, 0.28 ) }
    dend_52 { pt3dadd( -146.129, -116.241, 19.0554, 1.11 ) }
    dend_52 { pt3dadd( -148.111, -115.938, 19.4793, 0.28 ) }
    dend_52 { pt3dadd( -148.624, -115.852, 19.5698, 0.55 ) }
    dend_52 { pt3dadd( -151.53, -115.369, 19.9921, 0.28 ) }
    dend_52 { pt3dadd( -152.361, -115.215, 20.1066, 1.11 ) }
    dend_52 { pt3dadd( -154.244, -114.901, 20.3576, 0.28 ) }
    dend_52 { pt3dadd( -155.357, -114.724, 20.5163, 1.11 ) }
    dend_52 { pt3dadd( -157.983, -114.321, 20.9872, 1.11 ) }
    dend_52 { pt3dadd( -159.818, -114.091, 21.2249, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -138.265, -117.366, 17.8747, 0.83 ) }
    dend_51 { pt3dadd( -140.291, -119.518, 17.4228, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.31858, -223.765, -27.2552, 0.83 ) }
    dend_43 { pt3dadd( 5.77159, -224.6, -27.9484, 0.83 ) }
    dend_43 { pt3dadd( 4.85564, -225.999, -29.1091, 0.28 ) }
    dend_43 { pt3dadd( 4.08739, -227.172, -30.0827, 1.11 ) }
    dend_43 { pt3dadd( 1.91653, -230.487, -32.8337, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.31858, -223.765, -27.2552, 1.11 ) }
    dend_42 { pt3dadd( 4.3532, -222.0, -26.6924, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -57.3551, 587.329, 2.93703, 0.55 ) }
    dend_21 { pt3dadd( -57.6188, 588.074, 1.24902, 0.55 ) }
    dend_21 { pt3dadd( -57.7185, 588.775, -0.352672, 0.28 ) }
    dend_21 { pt3dadd( -57.817, 588.932, -0.840403, 0.55 ) }
    dend_21 { pt3dadd( -58.5124, 590.038, -4.28278, 0.28 ) }
    dend_21 { pt3dadd( -58.8385, 590.556, -5.89712, 0.55 ) }
    dend_21 { pt3dadd( -59.2818, 591.262, -8.09181, 0.28 ) }
    dend_21 { pt3dadd( -59.8013, 591.752, -9.76473, 0.55 ) }
    dend_21 { pt3dadd( -61.8299, 593.216, -15.0073, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -57.3551, 587.329, 2.93703, 0.28 ) }
    dend_18 { pt3dadd( -58.3968, 587.571, 3.73838, 0.28 ) }
    dend_18 { pt3dadd( -60.0045, 587.944, 4.97513, 0.55 ) }
    dend_18 { pt3dadd( -61.369, 588.261, 6.02473, 0.55 ) }
    dend_18 { pt3dadd( -62.8086, 588.595, 7.13215, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.6669, 561.72, -87.9257, 0.55 ) }
    dend_11 { pt3dadd( -11.2081, 562.635, -87.8974, 0.55 ) }
    dend_11 { pt3dadd( -11.7312, 563.519, -87.87, 0.55 ) }
    dend_11 { pt3dadd( -12.2067, 564.322, -87.8451, 0.83 ) }
    dend_11 { pt3dadd( -12.7837, 565.297, -87.8149, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.6669, 561.72, -87.9257, 0.28 ) }
    dend_10 { pt3dadd( -12.5068, 562.536, -88.9948, 0.28 ) }
    dend_10 { pt3dadd( -13.0116, 562.76, -89.2882, 0.28 ) }
    dend_10 { pt3dadd( -14.0326, 563.214, -89.8815, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.91653, -230.487, -32.8337, 1.11 ) }
    dend_45 { pt3dadd( 2.7785, -232.07, -31.8551, 1.11 ) }
    dend_45 { pt3dadd( 3.67366, -233.685, -30.7642, 0.28 ) }
    dend_45 { pt3dadd( 4.26717, -234.809, -29.9754, 1.11 ) }
    dend_45 { pt3dadd( 5.90534, -237.908, -27.5425, 0.28 ) }
    dend_45 { pt3dadd( 6.29913, -238.68, -26.9138, 1.94 ) }
    dend_45 { pt3dadd( 7.3568, -240.944, -25.1633, 1.11 ) }
    dend_45 { pt3dadd( 7.56943, -241.448, -24.7627, 0.28 ) }
    dend_45 { pt3dadd( 7.78755, -242.031, -24.293, 0.83 ) }
    dend_45 { pt3dadd( 8.23381, -243.612, -23.1639, 0.28 ) }
    dend_45 { pt3dadd( 8.32519, -244.365, -22.7807, 1.11 ) }
    dend_45 { pt3dadd( 8.47321, -246.387, -21.9215, 0.28 ) }
    dend_45 { pt3dadd( 8.47705, -248.016, -21.3656, 0.28 ) }
    dend_45 { pt3dadd( 8.49304, -248.87, -21.1011, 1.11 ) }
    dend_45 { pt3dadd( 8.49304, -248.87, -21.1011, 1.11 ) }
    dend_45 { pt3dadd( 8.47451, -249.943, -20.893, 0.55 ) }
    dend_45 { pt3dadd( 8.46692, -250.413, -20.7858, 1.38 ) }
    dend_45 { pt3dadd( 8.43021, -252.195, -20.2111, 0.28 ) }
    dend_45 { pt3dadd( 8.43627, -252.385, -20.1376, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 1.91653, -230.487, -32.8337, 0.55 ) }
    dend_44 { pt3dadd( 1.06571, -230.499, -30.6976, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( 0.538509, -230.506, -29.374, 0.55 ) }
    dend_44 { pt3dadd( 0.0868437, -230.512, -28.24, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -62.8086, 588.595, 7.13215, 0.55 ) }
    dend_20 { pt3dadd( -63.0475, 589.78, 7.56301, 0.55 ) }
    dend_20 { pt3dadd( -63.3187, 591.954, 8.29236, 0.55 ) }
    dend_20 { pt3dadd( -63.4211, 593.407, 8.66923, 0.55 ) }
    dend_20 { pt3dadd( -63.5606, 595.2, 9.05707, 0.55 ) }
    dend_20 { pt3dadd( -63.6322, 596.856, 9.42976, 0.28 ) }
    dend_20 { pt3dadd( -63.6842, 597.61, 9.56124, 0.83 ) }
    dend_20 { pt3dadd( -63.829, 599.753, 9.79416, 0.83 ) }
    dend_20 { pt3dadd( -63.8872, 601.59, 9.88412, 0.83 ) }
    dend_20 { pt3dadd( -63.9321, 602.529, 9.8869, 0.55 ) }
    dend_20 { pt3dadd( -63.9842, 604.911, 9.72301, 0.83 ) }
    dend_20 { pt3dadd( -64.0491, 607.589, 9.27914, 0.28 ) }
    dend_20 { pt3dadd( -64.1657, 608.861, 8.98397, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -62.8086, 588.595, 7.13215, 0.55 ) }
    dend_19 { pt3dadd( -65.2952, 587.405, 9.25639, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 17
    dend_1 nseg = 17
    dend_58 nseg = 3
    dend_31 nseg = 3
    dend_28 nseg = 7
    dend_56 nseg = 7
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_5 nseg = 5
    dend_48 nseg = 7
    dend_24 nseg = 7
    dend_16 nseg = 7
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_54 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_DBC_23ffe29c8b_0_0


