// Cell: dNAC222_L23_SBC_48c120ddd5_0_0
/*
{
  "id" : "dNAC222_L23_SBC_48c120ddd5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33595, 9.86266, -2.58258, 3.10392", "-1.10693, 8.70666, -2.27545, 5.13149", "-0.877919, 7.55065, -1.96833, 5.9409", "-0.648905, 6.39464, -1.66121, 6.21705", "-0.419891, 5.23864, -1.35409, 6.94548", "-0.190877, 4.08263, -1.04697, 7.90278", "0.0381366, 2.92662, -0.739853, 8.68773", "0.267151, 1.77062, -0.432733, 9.13726", "0.496164, 0.614609, -0.125613, 9.57756", "0.725178, -0.541398, 0.181507, 10.0179", "0.954192, -1.69741, 0.488628, 10.4496", "1.18321, -2.85341, 0.795748, 10.783", "1.41222, -4.00942, 1.10287, 11.0771", "1.64123, -5.16543, 1.40999, 10.6686", "1.87025, -6.32143, 1.71711, 9.98139", "2.09926, -7.47744, 2.02423, 9.29419", "2.32828, -8.63345, 2.33135, 8.60698", "2.55729, -9.78945, 2.63847, 7.32288", "2.7863, -10.9455, 2.94559, 6.0067", "3.01532, -12.1015, 3.25271, 3.27186", "3.24433, -13.2575, 3.55983, 2.03515" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.869971, -13.1821, 3.91359, 2.77", "0.368415, -16.0795, 3.96901, 2.22", "-0.350569, -20.233, 4.04844, 2.49", "-0.971134, -23.8178, 4.11701, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.909968, 10.2379, -2.65641, 1.94", "1.9048, 11.8696, -3.8117, 1.94", "3.46066, 14.4215, -5.61851, 1.11", "4.61579, 16.3162, -6.95997, 0.83", "6.45814, 19.338, -9.09948, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.44003, 9.80785, -5.44641, 1.11", "-4.56049, 14.6831, -3.39622, 1.11", "-5.00203, 15.6982, -2.9693, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.58997, -6.94215, -9.93641, 1.11", "3.82686, -7.85328, -12.732, 1.11", "4.39275, -10.0297, -19.41, 1.11", "5.15858, -12.9752, -28.4476, 1.11", "5.6024, -14.6821, -33.6852, 1.11", "6.14392, -16.7649, -40.0758, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.05997, -1.95215, -13.4864, 1.39", "5.73472, -1.7484, -15.2551, 1.39", "9.32051, -1.50332, -18.5416, 1.11", "12.9723, -1.39711, -21.4262, 1.11", "16.3196, -1.34087, -23.8272, 1.11", "19.689, -1.28427, -26.244, 0.83", "22.5402, -1.23637, -28.289, 0.83", "26.3647, -1.30394, -30.9576, 0.83", "28.7442, -1.493, -32.3431, 0.83", "31.6141, -1.70384, -33.5593, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.70003, 8.50785, -8.35641, 1.39", "-6.77689, 9.26572, -10.1578, 1.11", "-9.01955, 10.0841, -12.103, 1.11", "-10.3616, 10.5738, -13.267, 1.11", "-13.1999, 11.6095, -15.7288, 1.11", "-16.635, 12.863, -18.7083, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.58997, -3.04215, 15.3936, 1.66", "6.76514, -3.68073, 15.3936, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.24433, -13.2575, 3.55983, 0.83", "6.15929, -27.9715, 3.55983, 0.83", "9.07426, -42.6856, 3.55983, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-0.971134, -23.8178, 4.11701, 2.77", "-1.25064, -25.1825, 6.6819, 2.77" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.45814, 19.338, -9.09948, 0.83", "8.43642, 20.8315, -10.1678, 0.83", "10.5066, 22.6008, -10.8948, 0.83", "12.2411, 24.0932, -11.3111, 0.28", "13.1463, 24.8598, -11.4951, 0.83", "14.7003, 26.1447, -11.7581, 0.55", "17.9346, 28.7575, -12.1556, 0.55", "19.8903, 30.3723, -12.1514, 0.28", "20.7434, 31.0851, -12.092, 0.83", "22.1063, 32.051, -11.9677, 0.28", "23.3577, 32.8459, -11.8543, 0.83", "24.7779, 33.6012, -11.7403, 0.28", "25.7958, 34.0832, -11.7754, 0.83", "27.376, 34.8403, -11.9829, 0.55", "29.1755, 35.748, -12.2687, 0.55", "31.267, 36.8393, -12.7314, 0.28", "32.9324, 37.7351, -13.1483, 0.55", "35.832, 39.3343, -14.008, 0.28", "37.08, 40.0466, -14.3937, 0.55", "37.601, 40.334, -14.6305, 0.55", "40.0719, 41.707, -16.1218, 0.28", "41.3005, 42.3139, -17.071, 0.55", "42.4161, 42.8498, -18.0071, 0.28", "43.1179, 43.1634, -18.63, 0.55", "46.9828, 44.7958, -22.5022, 0.28", "48.1303, 45.2448, -23.7665, 0.55", "49.439, 45.7041, -25.4294, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "6.45814, 19.338, -9.09948, 0.55", "10.2273, 22.1555, -5.51558, 0.55", "12.6558, 23.8783, -3.48045, 0.55", "17.3343, 27.2332, 0.511324, 0.55", "20.2321, 29.2323, 2.91298, 0.55", "21.1613, 29.859, 3.65302, 0.55", "23.6361, 31.4956, 5.52497, 0.55", "27.585, 33.8692, 7.97818, 0.55", "30.944, 35.8384, 9.81038, 0.55", "32.8622, 37.0038, 10.7757, 0.55", "34.2245, 37.8202, 11.3311, 0.83", "35.8143, 38.7991, 11.9468, 0.55", "37.3904, 39.7789, 12.4546, 1.11", "41.4438, 42.4983, 13.5891, 0.55", "42.6427, 43.3628, 13.8634, 0.55", "44.5726, 45.0958, 14.2969, 0.55", "46.714, 47.2113, 14.7567, 0.55", "48.6757, 49.2462, 15.1167, 0.55", "50.4273, 51.0538, 15.3742, 0.55", "53.0493, 53.8036, 15.6632, 0.55", "57.3761, 58.2835, 15.8635, 0.55", "60.6527, 61.5285, 15.9075, 0.55", "64.6903, 65.2152, 15.6647, 0.55", "67.1855, 67.3628, 15.3288, 0.28", "69.7531, 69.4212, 14.9094, 0.55", "73.2679, 71.9749, 14.1027, 0.28", "78.091, 75.0549, 12.9399, 0.28", "81.5718, 77.2522, 12.0043, 0.55", "84.2562, 78.9583, 11.3835, 0.55", "87.2728, 80.9946, 10.8203, 0.83", "91.1817, 83.5744, 10.2172, 0.28", "95.1318, 86.2261, 10.2653, 0.28", "95.8618, 86.8187, 10.3693, 0.55", "98.2634, 89.0511, 11.5905, 0.28", "99.169, 89.8611, 12.2499, 0.55", "109.227, 96.0372, 15.0434, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.00203, 15.6982, -2.9693, 1.11", "-6.69484, 15.8615, -1.02909, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.00203, 15.6982, -2.9693, 0.83", "-5.66621, 17.0661, -5.16335, 0.83", "-6.43433, 18.7916, -7.72789, 0.83", "-7.38988, 21.5948, -11.1348, 0.83", "-8.29333, 24.9187, -14.6351, 0.83", "-9.28768, 28.9898, -18.8567, 0.83", "-9.9038, 31.6469, -21.5738, 0.83", "-10.5095, 34.5747, -24.4139, 0.83", "-11.5943, 40.7907, -29.971, 0.83", "-12.3799, 45.4405, -33.8821, 0.83", "-12.9632, 49.3802, -36.812, 0.28", "-13.0217, 49.8751, -37.1454, 0.55", "-13.7654, 56.2387, -41.362, 0.55", "-13.9932, 58.2758, -42.6899, 0.55", "-14.4417, 62.1439, -45.1084, 0.28", "-15.0742, 68.2317, -48.5315, 0.55", "-15.4167, 71.8072, -50.3136, 0.55", "-15.6414, 74.2711, -51.4876, 0.28", "-15.7223, 75.2598, -51.915, 0.55", "-15.9681, 78.0367, -53.0541, 0.28", "-16.154, 80.0575, -53.8033, 0.55", "-16.7357, 84.4354, -55.4913, 0.28", "-17.0028, 85.9994, -56.1255, 0.55", "-17.5318, 88.9374, -57.4736, 0.28", "-17.7696, 90.1098, -58.0793, 0.55", "-18.2751, 93.0105, -59.5903, 0.28", "-18.5479, 94.8194, -60.5465, 0.55", "-18.8725, 97.5637, -62.0239, 0.28", "-19.0569, 99.4957, -63.0827, 0.55", "-19.1361, 101.191, -64.0675, 0.55", "-18.9717, 106.84, -67.3348, 0.28", "-18.8494, 108.036, -68.0109, 0.55", "-18.3362, 111.252, -69.9934, 0.28", "-18.0985, 112.376, -70.754, 0.55", "-17.2779, 115.58, -73.512, 0.55", "-16.4385, 118.456, -76.3294, 0.28", "-16.3084, 118.843, -76.7804, 0.55", "-14.8852, 122.646, -81.4072, 0.28", "-14.3151, 123.947, -83.1651, 0.28", "-13.0633, 126.829, -87.4933, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.14392, -16.7649, -40.0758, 0.83", "7.42846, -17.9069, -41.8248, 0.83", "9.37816, -19.3227, -43.9439, 0.83", "11.0895, -20.4627, -45.597, 0.83", "15.3997, -23.0485, -49.5036, 0.83", "17.6479, -24.3055, -51.5152, 0.83", "20.499, -25.7756, -54.1096, 0.83", "25.4331, -27.9854, -58.5435, 0.28", "26.4661, -28.3719, -59.4882, 0.55", "30.3649, -29.7357, -63.0571, 0.28", "32.2733, -30.3692, -64.7806, 0.55", "35.6657, -31.5802, -68.1403, 0.28", "36.638, -31.9502, -69.2047, 0.55", "40.12, -33.2785, -73.462, 0.55", "42.8466, -34.379, -76.9404, 0.28", "43.8, -34.8074, -78.1899, 0.55", "47.2313, -36.5027, -82.6864, 0.28", "47.4718, -36.6394, -83.0083, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "6.14392, -16.7649, -40.0758, 0.55", "7.23098, -18.8176, -45.5529, 0.55", "7.81071, -19.8699, -48.3948, 0.55", "8.6151, -21.3247, -52.3566, 0.55", "9.05468, -22.1254, -54.4858, 0.83", "9.75307, -23.3941, -57.7155, 0.28", "9.92164, -23.7086, -58.4916, 0.28", "10.0233, -23.9153, -58.9311, 0.55", "11.4141, -27.0655, -65.1514, 0.28", "11.5174, -27.3458, -65.6455, 0.55", "11.9002, -28.4818, -67.487, 0.28", "12.1619, -29.3492, -68.8303, 0.55", "12.5742, -30.7413, -70.9555, 0.28", "12.7518, -31.3658, -71.8652, 0.55", "13.344, -33.6343, -74.9502, 0.28", "13.4569, -34.0714, -75.5698, 0.55", "13.9761, -36.087, -78.5415, 0.28", "14.2557, -36.9971, -79.9545, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "31.6141, -1.70384, -33.5593, 0.55", "35.3452, 0.94626, -37.1633, 0.55", "38.2309, 3.01842, -39.7946, 0.28", "40.115, 4.36327, -41.5559, 0.83", "46.1269, 8.80908, -47.6023, 0.28", "46.3973, 9.01144, -47.8786, 0.55", "48.903, 10.9484, -50.5451, 0.28", "51.5953, 13.0782, -53.7205, 0.28", "53.0032, 14.2401, -55.3754, 0.83", "56.3814, 17.2507, -58.9918, 0.28", "56.9433, 17.7969, -59.5698, 0.83", "58.6239, 19.6147, -61.4508, 0.28", "61.0595, 22.5426, -65.0758, 0.55", "61.9548, 23.5109, -66.3374, 0.28", "62.8929, 24.4515, -67.54, 0.55", "67.2519, 28.3553, -72.2096, 0.28", "69.2915, 30.052, -74.1414, 0.55", "76.6696, 35.9161, -79.8578, 0.55", "83.2861, 41.1091, -84.1947, 0.28", "86.2191, 43.415, -85.7044, 0.55", "93.6661, 49.2218, -88.5109, 0.28", "95.9263, 50.9374, -89.0411, 0.55", "101.862, 55.3455, -89.9298, 0.28", "104.812, 57.5811, -90.0481, 0.55", "110.819, 62.3007, -90.136, 0.28", "113.988, 64.8473, -90.0462, 0.55", "117.875, 68.0527, -89.8155, 0.28", "119.258, 69.1732, -89.7769, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "31.6141, -1.70384, -33.5593, 0.55", "34.7205, -0.394558, -35.1829, 0.55", "36.0782, 0.322592, -36.4885, 0.55", "38.0064, 1.23031, -38.5029, 0.28", "38.7553, 1.57974, -39.3579, 0.55", "41.1573, 2.79499, -42.6385, 0.55", "42.6213, 3.49051, -44.7256, 0.55", "46.0946, 5.08296, -50.2768, 0.55", "48.4387, 5.99286, -54.0905, 0.55", "50.7514, 6.66441, -57.8219, 0.55", "54.3368, 7.64228, -63.6254, 0.55", "56.4362, 8.1159, -66.9348, 0.55", "58.0146, 8.41644, -69.3676, 0.55", "60.8767, 8.72143, -73.6242, 0.28", "63.8759, 8.93938, -78.2022, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.635, 12.863, -18.7083, 0.83", "-19.8891, 15.6799, -17.7432, 0.83", "-21.8726, 17.2103, -17.0908, 0.83", "-24.4316, 19.1529, -16.1266, 0.55", "-27.2394, 21.178, -15.3268, 0.55", "-28.508, 22.0871, -15.1157, 0.55", "-30.7995, 23.7048, -14.953, 0.55", "-33.9691, 25.8019, -15.1749, 0.55", "-35.886, 27.0446, -15.4898, 0.55", "-39.6923, 29.4046, -16.3004, 0.55", "-42.8521, 31.3431, -17.1741, 0.55", "-44.7886, 32.4985, -17.7232, 0.55", "-46.0853, 33.2494, -18.0763, 0.55", "-47.8915, 34.3012, -18.5545, 0.83", "-50.1938, 35.4879, -18.9493, 0.28", "-51.2661, 36.0383, -19.0622, 0.55", "-54.0113, 37.4219, -19.304, 0.55", "-56.8937, 38.9709, -19.6798, 0.55", "-58.051, 39.6111, -19.8684, 0.55", "-62.6457, 42.3564, -20.5337, 0.55", "-67.4315, 45.3295, -21.1477, 0.28", "-68.2276, 45.8404, -21.2138, 0.55", "-75.0412, 50.2852, -21.597, 0.28", "-75.723, 50.7497, -21.6291, 0.55", "-79.3954, 53.2625, -21.6398, 0.28", "-81.185, 54.5814, -21.4516, 0.55", "-84.3351, 56.8284, -20.6399, 0.28", "-85.4878, 57.6466, -20.2492, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.635, 12.863, -18.7083, 0.55", "-18.932, 14.6412, -22.9029, 0.55", "-23.3382, 18.082, -30.5703, 0.55", "-27.0167, 21.0352, -36.665, 0.55", "-28.507, 22.2649, -39.092, 0.83", "-32.9777, 26.0666, -46.2417, 0.28", "-35.1487, 27.924, -49.6244, 0.55", "-37.3237, 29.8088, -52.9684, 0.28", "-38.3603, 30.707, -54.3833, 0.55", "-39.6058, 31.7997, -56.0349, 0.28", "-40.3248, 32.4166, -57.0695, 0.55", "-43.4109, 34.9108, -61.4646, 0.28", "-44.3848, 35.5584, -63.0096, 0.55", "-46.7988, 36.9039, -66.7921, 0.28", "-48.0277, 37.4909, -68.7157, 0.55", "-51.0624, 38.7452, -73.3823, 0.28", "-52.3123, 39.1706, -75.2761, 0.55", "-57.8838, 40.7614, -83.5417, 0.28", "-58.6715, 40.9522, -84.7041, 0.55", "-61.8411, 41.6097, -89.1319, 0.28", "-63.5346, 41.9305, -91.36, 0.55", "-65.3588, 42.2901, -93.5158, 0.55", "-67.0109, 42.6898, -95.3152, 0.55", "-73.1721, 44.6605, -100.619, 0.28", "-74.6632, 45.2166, -101.776, 0.55", "-77.2391, 46.2839, -103.643, 0.28", "-78.3268, 46.7836, -104.412, 0.55", "-81.5274, 48.3501, -107.094, 0.28", "-85.8076, 50.4921, -110.975, 0.28", "-90.0099, 52.6618, -114.883, 0.83", "-94.4676, 54.9454, -119.519, 0.28", "-95.6477, 55.5176, -120.906, 0.55", "-102.101, 58.4719, -129.364, 0.28", "-102.61, 58.6738, -130.144, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.76514, -3.68073, 15.3936, 0.83", "8.32321, -4.95439, 17.1027, 0.83", "9.61908, -6.01371, 18.5242, 0.83", "10.4322, -6.67839, 19.4161, 0.83", "12.9287, -8.71919, 22.1546, 0.83", "14.0877, -9.66663, 23.4259, 0.83", "16.4295, -11.5809, 25.9947, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.76514, -3.68073, 15.3936, 0.83", "7.37234, -4.35415, 16.6515, 0.83", "8.69599, -5.60107, 19.1762, 0.83", "11.6515, -8.28754, 25.2246, 0.83", "12.5701, -9.08299, 27.1227, 0.83", "13.4801, -9.82311, 28.9745, 0.83", "14.8483, -10.8119, 31.6799, 0.83", "15.8011, -11.4393, 33.5969, 0.83", "18.0604, -12.667, 37.9548, 0.55", "18.52, -12.8495, 38.8632, 0.55", "19.3999, -13.1854, 40.5992, 0.83", "21.0983, -13.7718, 43.8862, 0.55", "24.4702, -14.9306, 50.917, 0.55", "29.2318, -16.0365, 57.1015, 0.55", "34.0822, -17.8357, 63.0497, 0.55", "39.1672, -19.4018, 68.8664, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.07426, -42.6856, 3.55983, 0.83", "11.9892, -57.3996, 3.55983, 0.83", "14.9042, -72.1137, 3.55983, 0.83" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-1.25064, -25.1825, 6.6819, 0.83", "-5.54632, -28.7283, 7.13539, 0.83", "-7.67846, -30.5591, 7.42735, 0.55", "-11.1457, -33.6574, 8.11228, 0.55", "-15.4187, -37.5776, 9.11492, 0.55", "-19.5927, -41.5391, 10.1371, 0.55", "-23.5461, -45.3356, 11.1406, 0.55", "-27.1262, -48.9406, 12.2345, 0.55", "-30.0175, -51.8345, 13.1362, 0.55", "-31.8542, -53.6934, 13.7134, 0.55", "-34.8467, -56.7562, 14.5879, 0.28", "-35.2814, -57.1858, 14.6816, 1.11", "-37.7474, -59.3689, 15.0173, 0.55", "-39.4006, -60.6968, 15.1497, 0.55", "-41.1201, -61.9152, 15.1601, 0.28", "-42.7429, -62.8537, 15.1804, 0.55", "-44.0895, -63.4957, 15.1721, 0.28", "-44.7099, -63.7535, 15.1836, 0.55", "-46.3312, -64.2541, 15.2805, 0.28", "-47.6325, -64.5582, 15.3677, 0.55", "-50.0067, -64.9438, 15.5403, 0.28", "-52.7778, -65.3415, 15.7494, 0.55", "-55.3241, -65.8023, 15.9387, 0.28", "-57.3094, -66.15, 16.0686, 0.55" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-1.25064, -25.1825, 6.6819, 0.83", "-5.13235, -27.8161, 12.3785, 0.83", "-6.58714, -28.7547, 14.4345, 0.83", "-8.04006, -29.6083, 16.4189, 0.83", "-9.03658, -30.1841, 17.7657, 0.83", "-10.1983, -30.8226, 19.2547, 0.83", "-11.9728, -31.7725, 21.4841, 0.83", "-13.3124, -32.4364, 23.0734, 0.83", "-15.7018, -33.7076, 25.8653, 0.83", "-17.1219, -34.5553, 27.5236, 0.83", "-18.5471, -35.4561, 29.2132, 0.83", "-20.1483, -36.5059, 31.1702, 0.83", "-21.1126, -37.1763, 32.3761, 0.83", "-22.1496, -37.9899, 33.6623, 0.83", "-23.0375, -38.8681, 34.81, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.25064, -25.1825, 6.6819, 1.66", "-0.676756, -27.6694, 7.27906, 1.66", "-0.192961, -29.766, 7.78248, 1.39" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.69484, 15.8615, -1.02909, 0.83", "-9.45536, 16.9369, 0.341109, 0.83", "-11.3526, 17.9608, 1.26184, 0.55", "-12.2888, 18.5064, 1.68396, 0.83", "-14.6855, 20.0518, 2.59619, 0.55", "-17.0684, 21.6121, 3.34051, 0.55", "-21.0577, 24.1862, 4.45796, 0.55", "-25.8218, 27.4239, 5.28359, 0.55", "-27.2394, 28.3747, 5.42305, 0.55", "-30.9967, 30.8655, 5.3444, 0.55", "-33.9074, 32.7477, 4.91246, 0.55", "-37.1733, 34.7366, 4.20518, 0.55", "-42.1727, 37.4502, 2.85866, 0.55", "-45.7503, 39.117, 1.91777, 0.55", "-49.6556, 40.7899, 1.11989, 0.55", "-53.7354, 42.3382, 0.595613, 0.55", "-57.0382, 43.5351, 0.358476, 0.55", "-59.4175, 44.2995, 0.419026, 0.55", "-62.1957, 45.0186, 0.911899, 0.55", "-64.8157, 45.6159, 1.46829, 0.28", "-67.4856, 46.1878, 2.24653, 0.28", "-68.8118, 46.4702, 2.66961, 0.55", "-71.6358, 47.0747, 3.41587, 0.28", "-76.1163, 47.9867, 4.39604, 0.55", "-79.9266, 48.728, 4.89841, 0.55", "-86.8206, 52.7319, 6.43117, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.69484, 15.8615, -1.02909, 0.28", "-6.95774, 16.6431, 0.598353, 0.28", "-7.34869, 17.8055, 3.01858, 0.28", "-8.53617, 21.336, 10.3697, 0.55", "-9.39176, 23.8798, 15.6662, 0.55", "-10.2221, 26.3486, 20.8064, 0.55", "-10.672, 27.6859, 23.591, 0.55", "-10.2278, 30.9085, 32.8473, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "16.4295, -11.5809, 25.9947, 0.55", "18.786, -14.8458, 25.4195, 0.55", "21.3126, -18.2601, 24.7942, 0.55", "22.2811, -19.5512, 24.5832, 0.55", "24.2436, -22.2998, 24.1503, 0.55", "25.5426, -24.3657, 24.0134, 0.55", "27.8315, -28.1475, 23.9353, 0.55", "29.0083, -30.2456, 23.9564, 0.55", "29.8191, -31.8318, 24.0275, 0.55", "31.3215, -34.918, 24.219, 0.55", "33.9266, -40.4977, 24.695, 0.55", "35.9448, -45.23, 25.2304, 0.55", "36.5293, -46.8156, 25.431, 0.28", "36.7798, -47.5421, 25.5193, 0.55", "39.3655, -55.1613, 26.3473, 0.28", "39.6268, -55.9152, 26.4202, 0.55", "40.6991, -59.0603, 26.4733, 0.28", "41.0163, -60.3881, 26.5455, 0.28", "43.8365, -68.641, 27.4137, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "16.4295, -11.5809, 25.9947, 0.55", "18.7356, -10.6766, 27.8826, 0.55", "19.7325, -10.2797, 28.733, 0.55", "20.4812, -9.93571, 29.4053, 0.55", "21.2841, -9.52859, 30.1835, 0.55", "23.5493, -8.30423, 32.525, 0.55", "25.014, -7.41961, 34.1645, 0.55", "25.5355, -7.04213, 34.8775, 0.83", "26.962, -5.93257, 36.9261, 0.55", "28.5863, -4.62779, 39.4141, 0.55", "29.234, -4.08125, 40.4712, 0.83", "30.9942, -2.41448, 43.5248, 0.55", "32.6617, -0.77237, 46.4882, 1.39", "37.59, 3.04188, 52.386, 1.39", "42.8586, 6.74789, 58.0541, 1.39", "49.2468, 9.02423, 63.3103, 1.39", "56.4057, 10.0613, 67.9249, 1.39", "63.1458, 12.9366, 72.3885, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-23.0375, -38.8681, 34.81, 0.55", "-24.9282, -39.5045, 35.672, 0.55", "-27.3904, -40.3333, 36.7946, 0.55", "-29.6248, -41.0855, 37.8134, 0.55", "-32.0576, -41.9044, 38.9226, 0.55", "-35.0834, -42.9229, 40.3022, 0.55", "-39.5405, -44.4233, 42.3344, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-23.0375, -38.8681, 34.81, 0.55", "-21.8203, -43.3144, 38.3502, 0.55", "-20.7156, -47.3494, 41.5629, 0.55", "-19.6586, -51.2102, 44.637, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-0.192961, -29.766, 7.78248, 0.55", "-0.475612, -30.3422, 9.18637, 0.55", "-0.640626, -30.6441, 9.96677, 0.55", "-1.27325, -31.658, 12.723, 0.83", "-1.80252, -32.5282, 15.0815, 0.83", "-2.53263, -33.7121, 18.264, 0.83", "-2.9787, -34.4234, 20.1423, 0.83", "-3.30795, -34.9655, 21.5262, 0.83", "-3.68168, -35.556, 23.0387, 0.83", "-4.16776, -36.2669, 24.7538, 0.83", "-4.53467, -36.7421, 25.7958, 0.83", "-5.08046, -37.4615, 27.1896, 0.83", "-5.70701, -38.3393, 28.7665, 0.83", "-6.24945, -39.1154, 30.1036, 0.83", "-6.57034, -39.5738, 30.8616, 0.83", "-7.45932, -40.7243, 32.7633, 0.83", "-8.10193, -41.582, 34.1691, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-0.192961, -29.766, 7.78248, 1.11", "-0.297546, -35.318, 7.52148, 1.11", "-0.345664, -37.8723, 7.40139, 1.11", "-0.444452, -43.1165, 7.15486, 1.11", "-0.502733, -46.2104, 7.00941, 1.11", "-0.533381, -47.8373, 6.93292, 1.11", "-0.55603, -49.0397, 6.8764, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.2278, 30.9085, 32.8473, 0.28", "-11.5724, 36.4224, 45.2818, 0.28", "-13.1466, 39.7069, 58.4562, 0.28", "-12.1283, 44.2139, 71.32, 0.28", "-10.5784, 47.6196, 84.4664, 0.28", "-9.42088, 52.2509, 97.2742, 0.28", "-9.44975, 59.1292, 109.086, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-10.2278, 30.9085, 32.8473, 0.83", "-10.6568, 35.9292, 43.4908, 0.28", "-11.4083, 41.2675, 53.9603, 0.28", "-10.5054, 48.0437, 63.549, 0.28", "-9.51814, 56.3842, 71.8034, 0.28", "-11.3453, 64.9493, 79.6759, 0.28", "-11.1173, 74.0795, 87.1097, 0.28", "-10.327, 82.4656, 95.3391, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-0.55603, -49.0397, 6.8764, 1.11", "-1.0047, -54.4517, 7.49832, 1.11", "-1.30493, -59.2106, 8.01452, 1.11", "-1.8039, -67.2862, 8.56193, 1.11", "-1.93411, -70.1243, 8.65822, 1.11", "-2.1134, -74.7289, 8.85218, 1.11", "-2.18526, -81.5162, 9.15913, 1.11", "-2.14818, -83.98, 9.23903, 1.11", "-2.00566, -88.4473, 9.50675, 1.11", "-1.487, -97.9084, 10.291, 1.11", "-1.16206, -102.321, 10.7507, 1.11", "-0.72197, -107.622, 11.442, 1.11", "-0.549608, -109.724, 11.7802, 1.11", "-0.186877, -115.038, 12.8854, 1.11", "0.157614, -119.013, 13.8615, 1.11", "0.861421, -126.299, 15.6559, 1.11", "1.23001, -131.105, 16.566, 1.11", "1.4118, -133.856, 16.99, 1.11", "1.68676, -138.131, 17.4816, 1.11", "2.10299, -143.932, 18.061, 1.11", "2.39776, -148.182, 18.4627, 1.11", "3.40811, -162.636, 19.7949, 1.11", "3.95005, -169.366, 20.4043, 1.11", "4.43765, -174.739, 20.903, 1.11", "5.0556, -180.799, 21.4356, 1.11", "5.68507, -188.198, 22.2227, 0.83", "6.06331, -192.113, 22.7194, 0.83", "6.46096, -195.032, 23.1505, 0.83", "6.83403, -197.794, 23.6212, 0.83", "7.38529, -201.801, 24.3427, 0.83", "7.87253, -205.807, 25.1314, 0.83", "8.24146, -208.936, 25.9214, 0.83", "8.52399, -211.169, 26.5432, 0.83", "9.05575, -216.091, 27.9626, 0.83", "10.289, -226.982, 31.2848, 0.83", "10.7946, -231.101, 32.5575, 0.83", "11.3173, -234.757, 33.6947, 0.83", "11.7951, -237.96, 34.7614, 0.83", "12.4338, -241.725, 36.1324, 0.83", "13.1681, -245.886, 37.7352, 0.83", "13.7882, -249.017, 39.0867, 0.83", "14.455, -252.238, 40.5012, 0.83", "15.8563, -258.406, 43.3576, 0.83", "16.8661, -262.611, 45.238, 0.83", "17.9624, -266.76, 46.9981, 0.83", "18.8396, -270.442, 48.3536, 0.83", "19.7142, -274.312, 49.6437, 0.83", "20.3925, -277.692, 50.5408, 0.83", "21.5599, -285.051, 51.8526, 0.83", "22.4879, -290.679, 52.4594, 0.83", "23.1486, -294.485, 52.6945, 0.83", "24.3204, -301.51, 52.9347, 0.83", "25.353, -306.958, 53.0992, 0.83", "26.2213, -311.618, 53.2064, 0.83", "27.5424, -318.211, 53.3928, 0.55", "28.005, -320.296, 53.4209, 0.55", "30.6001, -329.731, 53.5526, 0.55", "31.7373, -333.474, 53.4872, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-0.55603, -49.0397, 6.8764, 0.83", "0.0502788, -58.0026, 9.31684, 0.83", "0.0974558, -59.7592, 9.77709, 0.83", "0.142346, -62.8867, 10.6058, 0.83", "0.161718, -64.7219, 11.0583, 0.83", "0.282474, -69.4223, 12.1455, 0.83", "0.479061, -74.8214, 13.4339, 0.83", "0.739743, -80.9757, 14.4693, 0.83", "0.915694, -85.2921, 15.3488, 0.83", "1.02517, -89.6274, 16.5074, 0.83", "1.14582, -94.9113, 18.3035, 0.83", "1.18171, -97.759, 19.5368, 0.83", "1.24047, -101.056, 21.3672, 0.83", "1.29206, -104.608, 23.4945, 0.83", "1.27213, -109.087, 26.6145, 0.55", "1.17198, -111.682, 28.8128, 0.55", "0.97474, -113.625, 30.7995, 0.55", "0.662561, -115.993, 33.5039, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "31.7373, -333.474, 53.4872, 0.28", "34.3468, -333.193, 54.4773, 0.28", "34.6278, -333.162, 54.5839, 0.55", "36.3051, -332.981, 55.2203, 0.28", "37.8547, -332.814, 55.8083, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "31.7373, -333.474, 53.4872, 0.83", "30.9913, -335.607, 53.6605, 0.83", "29.6357, -339.482, 53.9754, 0.55", "28.9474, -341.45, 54.1352, 0.55", "28.569, -342.532, 54.2231, 0.55", "27.7627, -344.837, 54.4104, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "axon_0", "axon_0", "apic_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_2", "apic_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_SBC_48c120ddd5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_12, id: apic_12, parent: apic_1
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_1
create apic_9
public apic_9
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999996567799549)
    connect dend_21(0), soma_0(0.4999996567799549)
    connect dend_14(0), soma_0(0.4999996567799549)
    connect dend_11(0), soma_0(0.4999996567799549)
    connect dend_8(0), soma_0(0.4999996567799549)
    connect dend_5(0), soma_0(0.4999996567799549)
    connect dend_0(0), soma_0(0.4999996567799549)
    connect axon_0(0), soma_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_12(0), apic_1(1.0)
    connect apic_9(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33595, 9.86266, -2.58258, 3.10392 ) }
    soma_0 { pt3dadd( -1.10693, 8.70666, -2.27545, 5.13149 ) }
    soma_0 { pt3dadd( -0.877919, 7.55065, -1.96833, 5.9409 ) }
    soma_0 { pt3dadd( -0.648905, 6.39464, -1.66121, 6.21705 ) }
    soma_0 { pt3dadd( -0.419891, 5.23864, -1.35409, 6.94548 ) }
    soma_0 { pt3dadd( -0.190877, 4.08263, -1.04697, 7.90278 ) }
    soma_0 { pt3dadd( 0.0381366, 2.92662, -0.739853, 8.68773 ) }
    soma_0 { pt3dadd( 0.267151, 1.77062, -0.432733, 9.13726 ) }
    soma_0 { pt3dadd( 0.496164, 0.614609, -0.125613, 9.57756 ) }
    soma_0 { pt3dadd( 0.725178, -0.541398, 0.181507, 10.0179 ) }
    soma_0 { pt3dadd( 0.954192, -1.69741, 0.488628, 10.4496 ) }
    soma_0 { pt3dadd( 1.18321, -2.85341, 0.795748, 10.783 ) }
    soma_0 { pt3dadd( 1.41222, -4.00942, 1.10287, 11.0771 ) }
    soma_0 { pt3dadd( 1.64123, -5.16543, 1.40999, 10.6686 ) }
    soma_0 { pt3dadd( 1.87025, -6.32143, 1.71711, 9.98139 ) }
    soma_0 { pt3dadd( 2.09926, -7.47744, 2.02423, 9.29419 ) }
    soma_0 { pt3dadd( 2.32828, -8.63345, 2.33135, 8.60698 ) }
    soma_0 { pt3dadd( 2.55729, -9.78945, 2.63847, 7.32288 ) }
    soma_0 { pt3dadd( 2.7863, -10.9455, 2.94559, 6.0067 ) }
    soma_0 { pt3dadd( 3.01532, -12.1015, 3.25271, 3.27186 ) }
    soma_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 2.03515 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.869971, -13.1821, 3.91359, 2.77 ) }
    apic_0 { pt3dadd( 0.368415, -16.0795, 3.96901, 2.22 ) }
    apic_0 { pt3dadd( -0.350569, -20.233, 4.04844, 2.49 ) }
    apic_0 { pt3dadd( -0.971134, -23.8178, 4.11701, 2.77 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 25/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.909968, 10.2379, -2.65641, 1.94 ) }
    dend_21 { pt3dadd( 1.9048, 11.8696, -3.8117, 1.94 ) }
    dend_21 { pt3dadd( 3.46066, 14.4215, -5.61851, 1.11 ) }
    dend_21 { pt3dadd( 4.61579, 16.3162, -6.95997, 0.83 ) }
    dend_21 { pt3dadd( 6.45814, 19.338, -9.09948, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.44003, 9.80785, -5.44641, 1.11 ) }
    dend_14 { pt3dadd( -4.56049, 14.6831, -3.39622, 1.11 ) }
    dend_14 { pt3dadd( -5.00203, 15.6982, -2.9693, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.58997, -6.94215, -9.93641, 1.11 ) }
    dend_11 { pt3dadd( 3.82686, -7.85328, -12.732, 1.11 ) }
    dend_11 { pt3dadd( 4.39275, -10.0297, -19.41, 1.11 ) }
    dend_11 { pt3dadd( 5.15858, -12.9752, -28.4476, 1.11 ) }
    dend_11 { pt3dadd( 5.6024, -14.6821, -33.6852, 1.11 ) }
    dend_11 { pt3dadd( 6.14392, -16.7649, -40.0758, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.05997, -1.95215, -13.4864, 1.39 ) }
    dend_8 { pt3dadd( 5.73472, -1.7484, -15.2551, 1.39 ) }
    dend_8 { pt3dadd( 9.32051, -1.50332, -18.5416, 1.11 ) }
    dend_8 { pt3dadd( 12.9723, -1.39711, -21.4262, 1.11 ) }
    dend_8 { pt3dadd( 16.3196, -1.34087, -23.8272, 1.11 ) }
    dend_8 { pt3dadd( 19.689, -1.28427, -26.244, 0.83 ) }
    dend_8 { pt3dadd( 22.5402, -1.23637, -28.289, 0.83 ) }
    dend_8 { pt3dadd( 26.3647, -1.30394, -30.9576, 0.83 ) }
    dend_8 { pt3dadd( 28.7442, -1.493, -32.3431, 0.83 ) }
    dend_8 { pt3dadd( 31.6141, -1.70384, -33.5593, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.70003, 8.50785, -8.35641, 1.39 ) }
    dend_5 { pt3dadd( -6.77689, 9.26572, -10.1578, 1.11 ) }
    dend_5 { pt3dadd( -9.01955, 10.0841, -12.103, 1.11 ) }
    dend_5 { pt3dadd( -10.3616, 10.5738, -13.267, 1.11 ) }
    dend_5 { pt3dadd( -13.1999, 11.6095, -15.7288, 1.11 ) }
    dend_5 { pt3dadd( -16.635, 12.863, -18.7083, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.58997, -3.04215, 15.3936, 1.66 ) }
    dend_0 { pt3dadd( 6.76514, -3.68073, 15.3936, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 0.83 ) }
    axon_0 { pt3dadd( 6.15929, -27.9715, 3.55983, 0.83 ) }
    axon_0 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.83 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 60/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -0.971134, -23.8178, 4.11701, 2.77 ) }
    apic_1 { pt3dadd( -1.25064, -25.1825, 6.6819, 2.77 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.45814, 19.338, -9.09948, 0.83 ) }
    dend_23 { pt3dadd( 8.43642, 20.8315, -10.1678, 0.83 ) }
    dend_23 { pt3dadd( 10.5066, 22.6008, -10.8948, 0.83 ) }
    dend_23 { pt3dadd( 12.2411, 24.0932, -11.3111, 0.28 ) }
    dend_23 { pt3dadd( 13.1463, 24.8598, -11.4951, 0.83 ) }
    dend_23 { pt3dadd( 14.7003, 26.1447, -11.7581, 0.55 ) }
    dend_23 { pt3dadd( 17.9346, 28.7575, -12.1556, 0.55 ) }
    dend_23 { pt3dadd( 19.8903, 30.3723, -12.1514, 0.28 ) }
    dend_23 { pt3dadd( 20.7434, 31.0851, -12.092, 0.83 ) }
    dend_23 { pt3dadd( 22.1063, 32.051, -11.9677, 0.28 ) }
    dend_23 { pt3dadd( 23.3577, 32.8459, -11.8543, 0.83 ) }
    dend_23 { pt3dadd( 24.7779, 33.6012, -11.7403, 0.28 ) }
    dend_23 { pt3dadd( 25.7958, 34.0832, -11.7754, 0.83 ) }
    dend_23 { pt3dadd( 27.376, 34.8403, -11.9829, 0.55 ) }
    dend_23 { pt3dadd( 29.1755, 35.748, -12.2687, 0.55 ) }
    dend_23 { pt3dadd( 31.267, 36.8393, -12.7314, 0.28 ) }
    dend_23 { pt3dadd( 32.9324, 37.7351, -13.1483, 0.55 ) }
    dend_23 { pt3dadd( 35.832, 39.3343, -14.008, 0.28 ) }
    dend_23 { pt3dadd( 37.08, 40.0466, -14.3937, 0.55 ) }
    dend_23 { pt3dadd( 37.601, 40.334, -14.6305, 0.55 ) }
    dend_23 { pt3dadd( 40.0719, 41.707, -16.1218, 0.28 ) }
    dend_23 { pt3dadd( 41.3005, 42.3139, -17.071, 0.55 ) }
    dend_23 { pt3dadd( 42.4161, 42.8498, -18.0071, 0.28 ) }
    dend_23 { pt3dadd( 43.1179, 43.1634, -18.63, 0.55 ) }
    dend_23 { pt3dadd( 46.9828, 44.7958, -22.5022, 0.28 ) }
    dend_23 { pt3dadd( 48.1303, 45.2448, -23.7665, 0.55 ) }
    dend_23 { pt3dadd( 49.439, 45.7041, -25.4294, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 89/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 6.45814, 19.338, -9.09948, 0.55 ) }
    dend_22 { pt3dadd( 10.2273, 22.1555, -5.51558, 0.55 ) }
    dend_22 { pt3dadd( 12.6558, 23.8783, -3.48045, 0.55 ) }
    dend_22 { pt3dadd( 17.3343, 27.2332, 0.511324, 0.55 ) }
    dend_22 { pt3dadd( 20.2321, 29.2323, 2.91298, 0.55 ) }
    dend_22 { pt3dadd( 21.1613, 29.859, 3.65302, 0.55 ) }
    dend_22 { pt3dadd( 23.6361, 31.4956, 5.52497, 0.55 ) }
    dend_22 { pt3dadd( 27.585, 33.8692, 7.97818, 0.55 ) }
    dend_22 { pt3dadd( 30.944, 35.8384, 9.81038, 0.55 ) }
    dend_22 { pt3dadd( 32.8622, 37.0038, 10.7757, 0.55 ) }
    dend_22 { pt3dadd( 34.2245, 37.8202, 11.3311, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 35.8143, 38.7991, 11.9468, 0.55 ) }
    dend_22 { pt3dadd( 37.3904, 39.7789, 12.4546, 1.11 ) }
    dend_22 { pt3dadd( 41.4438, 42.4983, 13.5891, 0.55 ) }
    dend_22 { pt3dadd( 42.6427, 43.3628, 13.8634, 0.55 ) }
    dend_22 { pt3dadd( 44.5726, 45.0958, 14.2969, 0.55 ) }
    dend_22 { pt3dadd( 46.714, 47.2113, 14.7567, 0.55 ) }
    dend_22 { pt3dadd( 48.6757, 49.2462, 15.1167, 0.55 ) }
    dend_22 { pt3dadd( 50.4273, 51.0538, 15.3742, 0.55 ) }
    dend_22 { pt3dadd( 53.0493, 53.8036, 15.6632, 0.55 ) }
    dend_22 { pt3dadd( 57.3761, 58.2835, 15.8635, 0.55 ) }
    dend_22 { pt3dadd( 60.6527, 61.5285, 15.9075, 0.55 ) }
    dend_22 { pt3dadd( 64.6903, 65.2152, 15.6647, 0.55 ) }
    dend_22 { pt3dadd( 67.1855, 67.3628, 15.3288, 0.28 ) }
    dend_22 { pt3dadd( 69.7531, 69.4212, 14.9094, 0.55 ) }
    dend_22 { pt3dadd( 73.2679, 71.9749, 14.1027, 0.28 ) }
    dend_22 { pt3dadd( 78.091, 75.0549, 12.9399, 0.28 ) }
    dend_22 { pt3dadd( 81.5718, 77.2522, 12.0043, 0.55 ) }
    dend_22 { pt3dadd( 84.2562, 78.9583, 11.3835, 0.55 ) }
    dend_22 { pt3dadd( 87.2728, 80.9946, 10.8203, 0.83 ) }
    dend_22 { pt3dadd( 91.1817, 83.5744, 10.2172, 0.28 ) }
    dend_22 { pt3dadd( 95.1318, 86.2261, 10.2653, 0.28 ) }
    dend_22 { pt3dadd( 95.8618, 86.8187, 10.3693, 0.55 ) }
    dend_22 { pt3dadd( 98.2634, 89.0511, 11.5905, 0.28 ) }
    dend_22 { pt3dadd( 99.169, 89.8611, 12.2499, 0.55 ) }
    dend_22 { pt3dadd( 109.227, 96.0372, 15.0434, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.00203, 15.6982, -2.9693, 1.11 ) }
    dend_16 { pt3dadd( -6.69484, 15.8615, -1.02909, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.00203, 15.6982, -2.9693, 0.83 ) }
    dend_15 { pt3dadd( -5.66621, 17.0661, -5.16335, 0.83 ) }
    dend_15 { pt3dadd( -6.43433, 18.7916, -7.72789, 0.83 ) }
    dend_15 { pt3dadd( -7.38988, 21.5948, -11.1348, 0.83 ) }
    dend_15 { pt3dadd( -8.29333, 24.9187, -14.6351, 0.83 ) }
    dend_15 { pt3dadd( -9.28768, 28.9898, -18.8567, 0.83 ) }
    dend_15 { pt3dadd( -9.9038, 31.6469, -21.5738, 0.83 ) }
    dend_15 { pt3dadd( -10.5095, 34.5747, -24.4139, 0.83 ) }
    dend_15 { pt3dadd( -11.5943, 40.7907, -29.971, 0.83 ) }
    dend_15 { pt3dadd( -12.3799, 45.4405, -33.8821, 0.83 ) }
    dend_15 { pt3dadd( -12.9632, 49.3802, -36.812, 0.28 ) }
    dend_15 { pt3dadd( -13.0217, 49.8751, -37.1454, 0.55 ) }
    dend_15 { pt3dadd( -13.7654, 56.2387, -41.362, 0.55 ) }
    dend_15 { pt3dadd( -13.9932, 58.2758, -42.6899, 0.55 ) }
    dend_15 { pt3dadd( -14.4417, 62.1439, -45.1084, 0.28 ) }
    dend_15 { pt3dadd( -15.0742, 68.2317, -48.5315, 0.55 ) }
    dend_15 { pt3dadd( -15.4167, 71.8072, -50.3136, 0.55 ) }
    dend_15 { pt3dadd( -15.6414, 74.2711, -51.4876, 0.28 ) }
    dend_15 { pt3dadd( -15.7223, 75.2598, -51.915, 0.55 ) }
    dend_15 { pt3dadd( -15.9681, 78.0367, -53.0541, 0.28 ) }
    dend_15 { pt3dadd( -16.154, 80.0575, -53.8033, 0.55 ) }
    dend_15 { pt3dadd( -16.7357, 84.4354, -55.4913, 0.28 ) }
    dend_15 { pt3dadd( -17.0028, 85.9994, -56.1255, 0.55 ) }
    dend_15 { pt3dadd( -17.5318, 88.9374, -57.4736, 0.28 ) }
    dend_15 { pt3dadd( -17.7696, 90.1098, -58.0793, 0.55 ) }
    dend_15 { pt3dadd( -18.2751, 93.0105, -59.5903, 0.28 ) }
    dend_15 { pt3dadd( -18.5479, 94.8194, -60.5465, 0.55 ) }
    dend_15 { pt3dadd( -18.8725, 97.5637, -62.0239, 0.28 ) }
    dend_15 { pt3dadd( -19.0569, 99.4957, -63.0827, 0.55 ) }
    dend_15 { pt3dadd( -19.1361, 101.191, -64.0675, 0.55 ) }
    dend_15 { pt3dadd( -18.9717, 106.84, -67.3348, 0.28 ) }
    dend_15 { pt3dadd( -18.8494, 108.036, -68.0109, 0.55 ) }
    dend_15 { pt3dadd( -18.3362, 111.252, -69.9934, 0.28 ) }
    dend_15 { pt3dadd( -18.0985, 112.376, -70.754, 0.55 ) }
    dend_15 { pt3dadd( -17.2779, 115.58, -73.512, 0.55 ) }
    dend_15 { pt3dadd( -16.4385, 118.456, -76.3294, 0.28 ) }
    dend_15 { pt3dadd( -16.3084, 118.843, -76.7804, 0.55 ) }
    dend_15 { pt3dadd( -14.8852, 122.646, -81.4072, 0.28 ) }
    dend_15 { pt3dadd( -14.3151, 123.947, -83.1651, 0.28 ) }
    dend_15 { pt3dadd( -13.0633, 126.829, -87.4933, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.14392, -16.7649, -40.0758, 0.83 ) }
    dend_13 { pt3dadd( 7.42846, -17.9069, -41.8248, 0.83 ) }
    dend_13 { pt3dadd( 9.37816, -19.3227, -43.9439, 0.83 ) }
    dend_13 { pt3dadd( 11.0895, -20.4627, -45.597, 0.83 ) }
    dend_13 { pt3dadd( 15.3997, -23.0485, -49.5036, 0.83 ) }
    dend_13 { pt3dadd( 17.6479, -24.3055, -51.5152, 0.83 ) }
    dend_13 { pt3dadd( 20.499, -25.7756, -54.1096, 0.83 ) }
    dend_13 { pt3dadd( 25.4331, -27.9854, -58.5435, 0.28 ) }
    dend_13 { pt3dadd( 26.4661, -28.3719, -59.4882, 0.55 ) }
    dend_13 { pt3dadd( 30.3649, -29.7357, -63.0571, 0.28 ) }
    dend_13 { pt3dadd( 32.2733, -30.3692, -64.7806, 0.55 ) }
    dend_13 { pt3dadd( 35.6657, -31.5802, -68.1403, 0.28 ) }
    dend_13 { pt3dadd( 36.638, -31.9502, -69.2047, 0.55 ) }
    dend_13 { pt3dadd( 40.12, -33.2785, -73.462, 0.55 ) }
    dend_13 { pt3dadd( 42.8466, -34.379, -76.9404, 0.28 ) }
    dend_13 { pt3dadd( 43.8, -34.8074, -78.1899, 0.55 ) }
    dend_13 { pt3dadd( 47.2313, -36.5027, -82.6864, 0.28 ) }
    dend_13 { pt3dadd( 47.4718, -36.6394, -83.0083, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 6.14392, -16.7649, -40.0758, 0.55 ) }
    dend_12 { pt3dadd( 7.23098, -18.8176, -45.5529, 0.55 ) }
    dend_12 { pt3dadd( 7.81071, -19.8699, -48.3948, 0.55 ) }
    dend_12 { pt3dadd( 8.6151, -21.3247, -52.3566, 0.55 ) }
    dend_12 { pt3dadd( 9.05468, -22.1254, -54.4858, 0.83 ) }
    dend_12 { pt3dadd( 9.75307, -23.3941, -57.7155, 0.28 ) }
    dend_12 { pt3dadd( 9.92164, -23.7086, -58.4916, 0.28 ) }
    dend_12 { pt3dadd( 10.0233, -23.9153, -58.9311, 0.55 ) }
    dend_12 { pt3dadd( 11.4141, -27.0655, -65.1514, 0.28 ) }
    dend_12 { pt3dadd( 11.5174, -27.3458, -65.6455, 0.55 ) }
    dend_12 { pt3dadd( 11.9002, -28.4818, -67.487, 0.28 ) }
    dend_12 { pt3dadd( 12.1619, -29.3492, -68.8303, 0.55 ) }
    dend_12 { pt3dadd( 12.5742, -30.7413, -70.9555, 0.28 ) }
    dend_12 { pt3dadd( 12.7518, -31.3658, -71.8652, 0.55 ) }
    dend_12 { pt3dadd( 13.344, -33.6343, -74.9502, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( 13.4569, -34.0714, -75.5698, 0.55 ) }
    dend_12 { pt3dadd( 13.9761, -36.087, -78.5415, 0.28 ) }
    dend_12 { pt3dadd( 14.2557, -36.9971, -79.9545, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 3/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 31.6141, -1.70384, -33.5593, 0.55 ) }
    dend_10 { pt3dadd( 35.3452, 0.94626, -37.1633, 0.55 ) }
    dend_10 { pt3dadd( 38.2309, 3.01842, -39.7946, 0.28 ) }
    dend_10 { pt3dadd( 40.115, 4.36327, -41.5559, 0.83 ) }
    dend_10 { pt3dadd( 46.1269, 8.80908, -47.6023, 0.28 ) }
    dend_10 { pt3dadd( 46.3973, 9.01144, -47.8786, 0.55 ) }
    dend_10 { pt3dadd( 48.903, 10.9484, -50.5451, 0.28 ) }
    dend_10 { pt3dadd( 51.5953, 13.0782, -53.7205, 0.28 ) }
    dend_10 { pt3dadd( 53.0032, 14.2401, -55.3754, 0.83 ) }
    dend_10 { pt3dadd( 56.3814, 17.2507, -58.9918, 0.28 ) }
    dend_10 { pt3dadd( 56.9433, 17.7969, -59.5698, 0.83 ) }
    dend_10 { pt3dadd( 58.6239, 19.6147, -61.4508, 0.28 ) }
    dend_10 { pt3dadd( 61.0595, 22.5426, -65.0758, 0.55 ) }
    dend_10 { pt3dadd( 61.9548, 23.5109, -66.3374, 0.28 ) }
    dend_10 { pt3dadd( 62.8929, 24.4515, -67.54, 0.55 ) }
    dend_10 { pt3dadd( 67.2519, 28.3553, -72.2096, 0.28 ) }
    dend_10 { pt3dadd( 69.2915, 30.052, -74.1414, 0.55 ) }
    dend_10 { pt3dadd( 76.6696, 35.9161, -79.8578, 0.55 ) }
    dend_10 { pt3dadd( 83.2861, 41.1091, -84.1947, 0.28 ) }
    dend_10 { pt3dadd( 86.2191, 43.415, -85.7044, 0.55 ) }
    dend_10 { pt3dadd( 93.6661, 49.2218, -88.5109, 0.28 ) }
    dend_10 { pt3dadd( 95.9263, 50.9374, -89.0411, 0.55 ) }
    dend_10 { pt3dadd( 101.862, 55.3455, -89.9298, 0.28 ) }
    dend_10 { pt3dadd( 104.812, 57.5811, -90.0481, 0.55 ) }
    dend_10 { pt3dadd( 110.819, 62.3007, -90.136, 0.28 ) }
    dend_10 { pt3dadd( 113.988, 64.8473, -90.0462, 0.55 ) }
    dend_10 { pt3dadd( 117.875, 68.0527, -89.8155, 0.28 ) }
    dend_10 { pt3dadd( 119.258, 69.1732, -89.7769, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 31.6141, -1.70384, -33.5593, 0.55 ) }
    dend_9 { pt3dadd( 34.7205, -0.394558, -35.1829, 0.55 ) }
    dend_9 { pt3dadd( 36.0782, 0.322592, -36.4885, 0.55 ) }
    dend_9 { pt3dadd( 38.0064, 1.23031, -38.5029, 0.28 ) }
    dend_9 { pt3dadd( 38.7553, 1.57974, -39.3579, 0.55 ) }
    dend_9 { pt3dadd( 41.1573, 2.79499, -42.6385, 0.55 ) }
    dend_9 { pt3dadd( 42.6213, 3.49051, -44.7256, 0.55 ) }
    dend_9 { pt3dadd( 46.0946, 5.08296, -50.2768, 0.55 ) }
    dend_9 { pt3dadd( 48.4387, 5.99286, -54.0905, 0.55 ) }
    dend_9 { pt3dadd( 50.7514, 6.66441, -57.8219, 0.55 ) }
    dend_9 { pt3dadd( 54.3368, 7.64228, -63.6254, 0.55 ) }
    dend_9 { pt3dadd( 56.4362, 8.1159, -66.9348, 0.55 ) }
    dend_9 { pt3dadd( 58.0146, 8.41644, -69.3676, 0.55 ) }
    dend_9 { pt3dadd( 60.8767, 8.72143, -73.6242, 0.28 ) }
    dend_9 { pt3dadd( 63.8759, 8.93938, -78.2022, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.635, 12.863, -18.7083, 0.83 ) }
    dend_7 { pt3dadd( -19.8891, 15.6799, -17.7432, 0.83 ) }
    dend_7 { pt3dadd( -21.8726, 17.2103, -17.0908, 0.83 ) }
    dend_7 { pt3dadd( -24.4316, 19.1529, -16.1266, 0.55 ) }
    dend_7 { pt3dadd( -27.2394, 21.178, -15.3268, 0.55 ) }
    dend_7 { pt3dadd( -28.508, 22.0871, -15.1157, 0.55 ) }
    dend_7 { pt3dadd( -30.7995, 23.7048, -14.953, 0.55 ) }
    dend_7 { pt3dadd( -33.9691, 25.8019, -15.1749, 0.55 ) }
    dend_7 { pt3dadd( -35.886, 27.0446, -15.4898, 0.55 ) }
    dend_7 { pt3dadd( -39.6923, 29.4046, -16.3004, 0.55 ) }
    dend_7 { pt3dadd( -42.8521, 31.3431, -17.1741, 0.55 ) }
    dend_7 { pt3dadd( -44.7886, 32.4985, -17.7232, 0.55 ) }
    dend_7 { pt3dadd( -46.0853, 33.2494, -18.0763, 0.55 ) }
    dend_7 { pt3dadd( -47.8915, 34.3012, -18.5545, 0.83 ) }
    dend_7 { pt3dadd( -50.1938, 35.4879, -18.9493, 0.28 ) }
    dend_7 { pt3dadd( -51.2661, 36.0383, -19.0622, 0.55 ) }
    dend_7 { pt3dadd( -54.0113, 37.4219, -19.304, 0.55 ) }
    dend_7 { pt3dadd( -56.8937, 38.9709, -19.6798, 0.55 ) }
    dend_7 { pt3dadd( -58.051, 39.6111, -19.8684, 0.55 ) }
    dend_7 { pt3dadd( -62.6457, 42.3564, -20.5337, 0.55 ) }
    dend_7 { pt3dadd( -67.4315, 45.3295, -21.1477, 0.28 ) }
    dend_7 { pt3dadd( -68.2276, 45.8404, -21.2138, 0.55 ) }
    dend_7 { pt3dadd( -75.0412, 50.2852, -21.597, 0.28 ) }
    dend_7 { pt3dadd( -75.723, 50.7497, -21.6291, 0.55 ) }
    dend_7 { pt3dadd( -79.3954, 53.2625, -21.6398, 0.28 ) }
    dend_7 { pt3dadd( -81.185, 54.5814, -21.4516, 0.55 ) }
    dend_7 { pt3dadd( -84.3351, 56.8284, -20.6399, 0.28 ) }
    dend_7 { pt3dadd( -85.4878, 57.6466, -20.2492, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.635, 12.863, -18.7083, 0.55 ) }
    dend_6 { pt3dadd( -18.932, 14.6412, -22.9029, 0.55 ) }
    dend_6 { pt3dadd( -23.3382, 18.082, -30.5703, 0.55 ) }
    dend_6 { pt3dadd( -27.0167, 21.0352, -36.665, 0.55 ) }
    dend_6 { pt3dadd( -28.507, 22.2649, -39.092, 0.83 ) }
    dend_6 { pt3dadd( -32.9777, 26.0666, -46.2417, 0.28 ) }
    dend_6 { pt3dadd( -35.1487, 27.924, -49.6244, 0.55 ) }
    dend_6 { pt3dadd( -37.3237, 29.8088, -52.9684, 0.28 ) }
    dend_6 { pt3dadd( -38.3603, 30.707, -54.3833, 0.55 ) }
    dend_6 { pt3dadd( -39.6058, 31.7997, -56.0349, 0.28 ) }
    dend_6 { pt3dadd( -40.3248, 32.4166, -57.0695, 0.55 ) }
    dend_6 { pt3dadd( -43.4109, 34.9108, -61.4646, 0.28 ) }
    dend_6 { pt3dadd( -44.3848, 35.5584, -63.0096, 0.55 ) }
    dend_6 { pt3dadd( -46.7988, 36.9039, -66.7921, 0.28 ) }
    dend_6 { pt3dadd( -48.0277, 37.4909, -68.7157, 0.55 ) }
    dend_6 { pt3dadd( -51.0624, 38.7452, -73.3823, 0.28 ) }
    dend_6 { pt3dadd( -52.3123, 39.1706, -75.2761, 0.55 ) }
    dend_6 { pt3dadd( -57.8838, 40.7614, -83.5417, 0.28 ) }
    dend_6 { pt3dadd( -58.6715, 40.9522, -84.7041, 0.55 ) }
    dend_6 { pt3dadd( -61.8411, 41.6097, -89.1319, 0.28 ) }
    dend_6 { pt3dadd( -63.5346, 41.9305, -91.36, 0.55 ) }
    dend_6 { pt3dadd( -65.3588, 42.2901, -93.5158, 0.55 ) }
    dend_6 { pt3dadd( -67.0109, 42.6898, -95.3152, 0.55 ) }
    dend_6 { pt3dadd( -73.1721, 44.6605, -100.619, 0.28 ) }
    dend_6 { pt3dadd( -74.6632, 45.2166, -101.776, 0.55 ) }
    dend_6 { pt3dadd( -77.2391, 46.2839, -103.643, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( -78.3268, 46.7836, -104.412, 0.55 ) }
    dend_6 { pt3dadd( -81.5274, 48.3501, -107.094, 0.28 ) }
    dend_6 { pt3dadd( -85.8076, 50.4921, -110.975, 0.28 ) }
    dend_6 { pt3dadd( -90.0099, 52.6618, -114.883, 0.83 ) }
    dend_6 { pt3dadd( -94.4676, 54.9454, -119.519, 0.28 ) }
    dend_6 { pt3dadd( -95.6477, 55.5176, -120.906, 0.55 ) }
    dend_6 { pt3dadd( -102.101, 58.4719, -129.364, 0.28 ) }
    dend_6 { pt3dadd( -102.61, 58.6738, -130.144, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.76514, -3.68073, 15.3936, 0.83 ) }
    dend_2 { pt3dadd( 8.32321, -4.95439, 17.1027, 0.83 ) }
    dend_2 { pt3dadd( 9.61908, -6.01371, 18.5242, 0.83 ) }
    dend_2 { pt3dadd( 10.4322, -6.67839, 19.4161, 0.83 ) }
    dend_2 { pt3dadd( 12.9287, -8.71919, 22.1546, 0.83 ) }
    dend_2 { pt3dadd( 14.0877, -9.66663, 23.4259, 0.83 ) }
    dend_2 { pt3dadd( 16.4295, -11.5809, 25.9947, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.76514, -3.68073, 15.3936, 0.83 ) }
    dend_1 { pt3dadd( 7.37234, -4.35415, 16.6515, 0.83 ) }
    dend_1 { pt3dadd( 8.69599, -5.60107, 19.1762, 0.83 ) }
    dend_1 { pt3dadd( 11.6515, -8.28754, 25.2246, 0.83 ) }
    dend_1 { pt3dadd( 12.5701, -9.08299, 27.1227, 0.83 ) }
    dend_1 { pt3dadd( 13.4801, -9.82311, 28.9745, 0.83 ) }
    dend_1 { pt3dadd( 14.8483, -10.8119, 31.6799, 0.83 ) }
    dend_1 { pt3dadd( 15.8011, -11.4393, 33.5969, 0.83 ) }
    dend_1 { pt3dadd( 18.0604, -12.667, 37.9548, 0.55 ) }
    dend_1 { pt3dadd( 18.52, -12.8495, 38.8632, 0.55 ) }
    dend_1 { pt3dadd( 19.3999, -13.1854, 40.5992, 0.83 ) }
    dend_1 { pt3dadd( 21.0983, -13.7718, 43.8862, 0.55 ) }
    dend_1 { pt3dadd( 24.4702, -14.9306, 50.917, 0.55 ) }
    dend_1 { pt3dadd( 29.2318, -16.0365, 57.1015, 0.55 ) }
    dend_1 { pt3dadd( 34.0822, -17.8357, 63.0497, 0.55 ) }
    dend_1 { pt3dadd( 39.1672, -19.4018, 68.8664, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.83 ) }
    axon_1 { pt3dadd( 11.9892, -57.3996, 3.55983, 0.83 ) }
    axon_1 { pt3dadd( 14.9042, -72.1137, 3.55983, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_1 (entry count 34/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -1.25064, -25.1825, 6.6819, 0.83 ) }
    apic_12 { pt3dadd( -5.54632, -28.7283, 7.13539, 0.83 ) }
    apic_12 { pt3dadd( -7.67846, -30.5591, 7.42735, 0.55 ) }
    apic_12 { pt3dadd( -11.1457, -33.6574, 8.11228, 0.55 ) }
    apic_12 { pt3dadd( -15.4187, -37.5776, 9.11492, 0.55 ) }
    apic_12 { pt3dadd( -19.5927, -41.5391, 10.1371, 0.55 ) }
    apic_12 { pt3dadd( -23.5461, -45.3356, 11.1406, 0.55 ) }
    apic_12 { pt3dadd( -27.1262, -48.9406, 12.2345, 0.55 ) }
    apic_12 { pt3dadd( -30.0175, -51.8345, 13.1362, 0.55 ) }
    apic_12 { pt3dadd( -31.8542, -53.6934, 13.7134, 0.55 ) }
    apic_12 { pt3dadd( -34.8467, -56.7562, 14.5879, 0.28 ) }
    apic_12 { pt3dadd( -35.2814, -57.1858, 14.6816, 1.11 ) }
    apic_12 { pt3dadd( -37.7474, -59.3689, 15.0173, 0.55 ) }
    apic_12 { pt3dadd( -39.4006, -60.6968, 15.1497, 0.55 ) }
    apic_12 { pt3dadd( -41.1201, -61.9152, 15.1601, 0.28 ) }
    apic_12 { pt3dadd( -42.7429, -62.8537, 15.1804, 0.55 ) }
    apic_12 { pt3dadd( -44.0895, -63.4957, 15.1721, 0.28 ) }
    apic_12 { pt3dadd( -44.7099, -63.7535, 15.1836, 0.55 ) }
    apic_12 { pt3dadd( -46.3312, -64.2541, 15.2805, 0.28 ) }
    apic_12 { pt3dadd( -47.6325, -64.5582, 15.3677, 0.55 ) }
    apic_12 { pt3dadd( -50.0067, -64.9438, 15.5403, 0.28 ) }
    apic_12 { pt3dadd( -52.7778, -65.3415, 15.7494, 0.55 ) }
    apic_12 { pt3dadd( -55.3241, -65.8023, 15.9387, 0.28 ) }
    apic_12 { pt3dadd( -57.3094, -66.15, 16.0686, 0.55 ) }
    // Section: apic_9, id: apic_9, parent: apic_1 (entry count 58/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -1.25064, -25.1825, 6.6819, 0.83 ) }
    apic_9 { pt3dadd( -5.13235, -27.8161, 12.3785, 0.83 ) }
    apic_9 { pt3dadd( -6.58714, -28.7547, 14.4345, 0.83 ) }
    apic_9 { pt3dadd( -8.04006, -29.6083, 16.4189, 0.83 ) }
    apic_9 { pt3dadd( -9.03658, -30.1841, 17.7657, 0.83 ) }
    apic_9 { pt3dadd( -10.1983, -30.8226, 19.2547, 0.83 ) }
    apic_9 { pt3dadd( -11.9728, -31.7725, 21.4841, 0.83 ) }
    apic_9 { pt3dadd( -13.3124, -32.4364, 23.0734, 0.83 ) }
    apic_9 { pt3dadd( -15.7018, -33.7076, 25.8653, 0.83 ) }
    apic_9 { pt3dadd( -17.1219, -34.5553, 27.5236, 0.83 ) }
    apic_9 { pt3dadd( -18.5471, -35.4561, 29.2132, 0.83 ) }
    apic_9 { pt3dadd( -20.1483, -36.5059, 31.1702, 0.83 ) }
    apic_9 { pt3dadd( -21.1126, -37.1763, 32.3761, 0.83 ) }
    apic_9 { pt3dadd( -22.1496, -37.9899, 33.6623, 0.83 ) }
    apic_9 { pt3dadd( -23.0375, -38.8681, 34.81, 0.83 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 73/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.25064, -25.1825, 6.6819, 1.66 ) }
    apic_2 { pt3dadd( -0.676756, -27.6694, 7.27906, 1.66 ) }
    apic_2 { pt3dadd( -0.192961, -29.766, 7.78248, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 76/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.69484, 15.8615, -1.02909, 0.83 ) }
    dend_20 { pt3dadd( -9.45536, 16.9369, 0.341109, 0.83 ) }
    dend_20 { pt3dadd( -11.3526, 17.9608, 1.26184, 0.55 ) }
    dend_20 { pt3dadd( -12.2888, 18.5064, 1.68396, 0.83 ) }
    dend_20 { pt3dadd( -14.6855, 20.0518, 2.59619, 0.55 ) }
    dend_20 { pt3dadd( -17.0684, 21.6121, 3.34051, 0.55 ) }
    dend_20 { pt3dadd( -21.0577, 24.1862, 4.45796, 0.55 ) }
    dend_20 { pt3dadd( -25.8218, 27.4239, 5.28359, 0.55 ) }
    dend_20 { pt3dadd( -27.2394, 28.3747, 5.42305, 0.55 ) }
    dend_20 { pt3dadd( -30.9967, 30.8655, 5.3444, 0.55 ) }
    dend_20 { pt3dadd( -33.9074, 32.7477, 4.91246, 0.55 ) }
    dend_20 { pt3dadd( -37.1733, 34.7366, 4.20518, 0.55 ) }
    dend_20 { pt3dadd( -42.1727, 37.4502, 2.85866, 0.55 ) }
    dend_20 { pt3dadd( -45.7503, 39.117, 1.91777, 0.55 ) }
    dend_20 { pt3dadd( -49.6556, 40.7899, 1.11989, 0.55 ) }
    dend_20 { pt3dadd( -53.7354, 42.3382, 0.595613, 0.55 ) }
    dend_20 { pt3dadd( -57.0382, 43.5351, 0.358476, 0.55 ) }
    dend_20 { pt3dadd( -59.4175, 44.2995, 0.419026, 0.55 ) }
    dend_20 { pt3dadd( -62.1957, 45.0186, 0.911899, 0.55 ) }
    dend_20 { pt3dadd( -64.8157, 45.6159, 1.46829, 0.28 ) }
    dend_20 { pt3dadd( -67.4856, 46.1878, 2.24653, 0.28 ) }
    dend_20 { pt3dadd( -68.8118, 46.4702, 2.66961, 0.55 ) }
    dend_20 { pt3dadd( -71.6358, 47.0747, 3.41587, 0.28 ) }
    dend_20 { pt3dadd( -76.1163, 47.9867, 4.39604, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( -79.9266, 48.728, 4.89841, 0.55 ) }
    dend_20 { pt3dadd( -86.8206, 52.7319, 6.43117, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.69484, 15.8615, -1.02909, 0.28 ) }
    dend_17 { pt3dadd( -6.95774, 16.6431, 0.598353, 0.28 ) }
    dend_17 { pt3dadd( -7.34869, 17.8055, 3.01858, 0.28 ) }
    dend_17 { pt3dadd( -8.53617, 21.336, 10.3697, 0.55 ) }
    dend_17 { pt3dadd( -9.39176, 23.8798, 15.6662, 0.55 ) }
    dend_17 { pt3dadd( -10.2221, 26.3486, 20.8064, 0.55 ) }
    dend_17 { pt3dadd( -10.672, 27.6859, 23.591, 0.55 ) }
    dend_17 { pt3dadd( -10.2278, 30.9085, 32.8473, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 10/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 16.4295, -11.5809, 25.9947, 0.55 ) }
    dend_4 { pt3dadd( 18.786, -14.8458, 25.4195, 0.55 ) }
    dend_4 { pt3dadd( 21.3126, -18.2601, 24.7942, 0.55 ) }
    dend_4 { pt3dadd( 22.2811, -19.5512, 24.5832, 0.55 ) }
    dend_4 { pt3dadd( 24.2436, -22.2998, 24.1503, 0.55 ) }
    dend_4 { pt3dadd( 25.5426, -24.3657, 24.0134, 0.55 ) }
    dend_4 { pt3dadd( 27.8315, -28.1475, 23.9353, 0.55 ) }
    dend_4 { pt3dadd( 29.0083, -30.2456, 23.9564, 0.55 ) }
    dend_4 { pt3dadd( 29.8191, -31.8318, 24.0275, 0.55 ) }
    dend_4 { pt3dadd( 31.3215, -34.918, 24.219, 0.55 ) }
    dend_4 { pt3dadd( 33.9266, -40.4977, 24.695, 0.55 ) }
    dend_4 { pt3dadd( 35.9448, -45.23, 25.2304, 0.55 ) }
    dend_4 { pt3dadd( 36.5293, -46.8156, 25.431, 0.28 ) }
    dend_4 { pt3dadd( 36.7798, -47.5421, 25.5193, 0.55 ) }
    dend_4 { pt3dadd( 39.3655, -55.1613, 26.3473, 0.28 ) }
    dend_4 { pt3dadd( 39.6268, -55.9152, 26.4202, 0.55 ) }
    dend_4 { pt3dadd( 40.6991, -59.0603, 26.4733, 0.28 ) }
    dend_4 { pt3dadd( 41.0163, -60.3881, 26.5455, 0.28 ) }
    dend_4 { pt3dadd( 43.8365, -68.641, 27.4137, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 16.4295, -11.5809, 25.9947, 0.55 ) }
    dend_3 { pt3dadd( 18.7356, -10.6766, 27.8826, 0.55 ) }
    dend_3 { pt3dadd( 19.7325, -10.2797, 28.733, 0.55 ) }
    dend_3 { pt3dadd( 20.4812, -9.93571, 29.4053, 0.55 ) }
    dend_3 { pt3dadd( 21.2841, -9.52859, 30.1835, 0.55 ) }
    dend_3 { pt3dadd( 23.5493, -8.30423, 32.525, 0.55 ) }
    dend_3 { pt3dadd( 25.014, -7.41961, 34.1645, 0.55 ) }
    dend_3 { pt3dadd( 25.5355, -7.04213, 34.8775, 0.83 ) }
    dend_3 { pt3dadd( 26.962, -5.93257, 36.9261, 0.55 ) }
    dend_3 { pt3dadd( 28.5863, -4.62779, 39.4141, 0.55 ) }
    dend_3 { pt3dadd( 29.234, -4.08125, 40.4712, 0.83 ) }
    dend_3 { pt3dadd( 30.9942, -2.41448, 43.5248, 0.55 ) }
    dend_3 { pt3dadd( 32.6617, -0.77237, 46.4882, 1.39 ) }
    dend_3 { pt3dadd( 37.59, 3.04188, 52.386, 1.39 ) }
    dend_3 { pt3dadd( 42.8586, 6.74789, 58.0541, 1.39 ) }
    dend_3 { pt3dadd( 49.2468, 9.02423, 63.3103, 1.39 ) }
    dend_3 { pt3dadd( 56.4057, 10.0613, 67.9249, 1.39 ) }
    dend_3 { pt3dadd( 63.1458, 12.9366, 72.3885, 1.39 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 47/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -23.0375, -38.8681, 34.81, 0.55 ) }
    apic_11 { pt3dadd( -24.9282, -39.5045, 35.672, 0.55 ) }
    apic_11 { pt3dadd( -27.3904, -40.3333, 36.7946, 0.55 ) }
    apic_11 { pt3dadd( -29.6248, -41.0855, 37.8134, 0.55 ) }
    apic_11 { pt3dadd( -32.0576, -41.9044, 38.9226, 0.55 ) }
    apic_11 { pt3dadd( -35.0834, -42.9229, 40.3022, 0.55 ) }
    apic_11 { pt3dadd( -39.5405, -44.4233, 42.3344, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 54/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -23.0375, -38.8681, 34.81, 0.55 ) }
    apic_10 { pt3dadd( -21.8203, -43.3144, 38.3502, 0.55 ) }
    apic_10 { pt3dadd( -20.7156, -47.3494, 41.5629, 0.55 ) }
    apic_10 { pt3dadd( -19.6586, -51.2102, 44.637, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 58/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -0.192961, -29.766, 7.78248, 0.55 ) }
    apic_8 { pt3dadd( -0.475612, -30.3422, 9.18637, 0.55 ) }
    apic_8 { pt3dadd( -0.640626, -30.6441, 9.96677, 0.55 ) }
    apic_8 { pt3dadd( -1.27325, -31.658, 12.723, 0.83 ) }
    apic_8 { pt3dadd( -1.80252, -32.5282, 15.0815, 0.83 ) }
    apic_8 { pt3dadd( -2.53263, -33.7121, 18.264, 0.83 ) }
    apic_8 { pt3dadd( -2.9787, -34.4234, 20.1423, 0.83 ) }
    apic_8 { pt3dadd( -3.30795, -34.9655, 21.5262, 0.83 ) }
    apic_8 { pt3dadd( -3.68168, -35.556, 23.0387, 0.83 ) }
    apic_8 { pt3dadd( -4.16776, -36.2669, 24.7538, 0.83 ) }
    apic_8 { pt3dadd( -4.53467, -36.7421, 25.7958, 0.83 ) }
    apic_8 { pt3dadd( -5.08046, -37.4615, 27.1896, 0.83 ) }
    apic_8 { pt3dadd( -5.70701, -38.3393, 28.7665, 0.83 ) }
    apic_8 { pt3dadd( -6.24945, -39.1154, 30.1036, 0.83 ) }
    apic_8 { pt3dadd( -6.57034, -39.5738, 30.8616, 0.83 ) }
    apic_8 { pt3dadd( -7.45932, -40.7243, 32.7633, 0.83 ) }
    apic_8 { pt3dadd( -8.10193, -41.582, 34.1691, 0.83 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 75/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -0.192961, -29.766, 7.78248, 1.11 ) }
    apic_3 { pt3dadd( -0.297546, -35.318, 7.52148, 1.11 ) }
    apic_3 { pt3dadd( -0.345664, -37.8723, 7.40139, 1.11 ) }
    apic_3 { pt3dadd( -0.444452, -43.1165, 7.15486, 1.11 ) }
    apic_3 { pt3dadd( -0.502733, -46.2104, 7.00941, 1.11 ) }
    apic_3 { pt3dadd( -0.533381, -47.8373, 6.93292, 1.11 ) }
    apic_3 { pt3dadd( -0.55603, -49.0397, 6.8764, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.2278, 30.9085, 32.8473, 0.28 ) }
    dend_19 { pt3dadd( -11.5724, 36.4224, 45.2818, 0.28 ) }
    dend_19 { pt3dadd( -13.1466, 39.7069, 58.4562, 0.28 ) }
    dend_19 { pt3dadd( -12.1283, 44.2139, 71.32, 0.28 ) }
    dend_19 { pt3dadd( -10.5784, 47.6196, 84.4664, 0.28 ) }
    dend_19 { pt3dadd( -9.42088, 52.2509, 97.2742, 0.28 ) }
    dend_19 { pt3dadd( -9.44975, 59.1292, 109.086, 0.28 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -10.2278, 30.9085, 32.8473, 0.83 ) }
    dend_18 { pt3dadd( -10.6568, 35.9292, 43.4908, 0.28 ) }
    dend_18 { pt3dadd( -11.4083, 41.2675, 53.9603, 0.28 ) }
    dend_18 { pt3dadd( -10.5054, 48.0437, 63.549, 0.28 ) }
    dend_18 { pt3dadd( -9.51814, 56.3842, 71.8034, 0.28 ) }
    dend_18 { pt3dadd( -11.3453, 64.9493, 79.6759, 0.28 ) }
    dend_18 { pt3dadd( -11.1173, 74.0795, 87.1097, 0.28 ) }
    dend_18 { pt3dadd( -10.327, 82.4656, 95.3391, 0.28 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 97/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -0.55603, -49.0397, 6.8764, 1.11 ) }
    apic_5 { pt3dadd( -1.0047, -54.4517, 7.49832, 1.11 ) }
    apic_5 { pt3dadd( -1.30493, -59.2106, 8.01452, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_5 { pt3dadd( -1.8039, -67.2862, 8.56193, 1.11 ) }
    apic_5 { pt3dadd( -1.93411, -70.1243, 8.65822, 1.11 ) }
    apic_5 { pt3dadd( -2.1134, -74.7289, 8.85218, 1.11 ) }
    apic_5 { pt3dadd( -2.18526, -81.5162, 9.15913, 1.11 ) }
    apic_5 { pt3dadd( -2.14818, -83.98, 9.23903, 1.11 ) }
    apic_5 { pt3dadd( -2.00566, -88.4473, 9.50675, 1.11 ) }
    apic_5 { pt3dadd( -1.487, -97.9084, 10.291, 1.11 ) }
    apic_5 { pt3dadd( -1.16206, -102.321, 10.7507, 1.11 ) }
    apic_5 { pt3dadd( -0.72197, -107.622, 11.442, 1.11 ) }
    apic_5 { pt3dadd( -0.549608, -109.724, 11.7802, 1.11 ) }
    apic_5 { pt3dadd( -0.186877, -115.038, 12.8854, 1.11 ) }
    apic_5 { pt3dadd( 0.157614, -119.013, 13.8615, 1.11 ) }
    apic_5 { pt3dadd( 0.861421, -126.299, 15.6559, 1.11 ) }
    apic_5 { pt3dadd( 1.23001, -131.105, 16.566, 1.11 ) }
    apic_5 { pt3dadd( 1.4118, -133.856, 16.99, 1.11 ) }
    apic_5 { pt3dadd( 1.68676, -138.131, 17.4816, 1.11 ) }
    apic_5 { pt3dadd( 2.10299, -143.932, 18.061, 1.11 ) }
    apic_5 { pt3dadd( 2.39776, -148.182, 18.4627, 1.11 ) }
    apic_5 { pt3dadd( 3.40811, -162.636, 19.7949, 1.11 ) }
    apic_5 { pt3dadd( 3.95005, -169.366, 20.4043, 1.11 ) }
    apic_5 { pt3dadd( 4.43765, -174.739, 20.903, 1.11 ) }
    apic_5 { pt3dadd( 5.0556, -180.799, 21.4356, 1.11 ) }
    apic_5 { pt3dadd( 5.68507, -188.198, 22.2227, 0.83 ) }
    apic_5 { pt3dadd( 6.06331, -192.113, 22.7194, 0.83 ) }
    apic_5 { pt3dadd( 6.46096, -195.032, 23.1505, 0.83 ) }
    apic_5 { pt3dadd( 6.83403, -197.794, 23.6212, 0.83 ) }
    apic_5 { pt3dadd( 7.38529, -201.801, 24.3427, 0.83 ) }
    apic_5 { pt3dadd( 7.87253, -205.807, 25.1314, 0.83 ) }
    apic_5 { pt3dadd( 8.24146, -208.936, 25.9214, 0.83 ) }
    apic_5 { pt3dadd( 8.52399, -211.169, 26.5432, 0.83 ) }
    apic_5 { pt3dadd( 9.05575, -216.091, 27.9626, 0.83 ) }
    apic_5 { pt3dadd( 10.289, -226.982, 31.2848, 0.83 ) }
    apic_5 { pt3dadd( 10.7946, -231.101, 32.5575, 0.83 ) }
    apic_5 { pt3dadd( 11.3173, -234.757, 33.6947, 0.83 ) }
    apic_5 { pt3dadd( 11.7951, -237.96, 34.7614, 0.83 ) }
    apic_5 { pt3dadd( 12.4338, -241.725, 36.1324, 0.83 ) }
    apic_5 { pt3dadd( 13.1681, -245.886, 37.7352, 0.83 ) }
    apic_5 { pt3dadd( 13.7882, -249.017, 39.0867, 0.83 ) }
    apic_5 { pt3dadd( 14.455, -252.238, 40.5012, 0.83 ) }
    apic_5 { pt3dadd( 15.8563, -258.406, 43.3576, 0.83 ) }
    apic_5 { pt3dadd( 16.8661, -262.611, 45.238, 0.83 ) }
    apic_5 { pt3dadd( 17.9624, -266.76, 46.9981, 0.83 ) }
    apic_5 { pt3dadd( 18.8396, -270.442, 48.3536, 0.83 ) }
    apic_5 { pt3dadd( 19.7142, -274.312, 49.6437, 0.83 ) }
    apic_5 { pt3dadd( 20.3925, -277.692, 50.5408, 0.83 ) }
    apic_5 { pt3dadd( 21.5599, -285.051, 51.8526, 0.83 ) }
    apic_5 { pt3dadd( 22.4879, -290.679, 52.4594, 0.83 ) }
    apic_5 { pt3dadd( 23.1486, -294.485, 52.6945, 0.83 ) }
    apic_5 { pt3dadd( 24.3204, -301.51, 52.9347, 0.83 ) }
    apic_5 { pt3dadd( 25.353, -306.958, 53.0992, 0.83 ) }
    apic_5 { pt3dadd( 26.2213, -311.618, 53.2064, 0.83 ) }
    apic_5 { pt3dadd( 27.5424, -318.211, 53.3928, 0.55 ) }
    apic_5 { pt3dadd( 28.005, -320.296, 53.4209, 0.55 ) }
    apic_5 { pt3dadd( 30.6001, -329.731, 53.5526, 0.55 ) }
    apic_5 { pt3dadd( 31.7373, -333.474, 53.4872, 0.55 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 55/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -0.55603, -49.0397, 6.8764, 0.83 ) }
    apic_4 { pt3dadd( 0.0502788, -58.0026, 9.31684, 0.83 ) }
    apic_4 { pt3dadd( 0.0974558, -59.7592, 9.77709, 0.83 ) }
    apic_4 { pt3dadd( 0.142346, -62.8867, 10.6058, 0.83 ) }
    apic_4 { pt3dadd( 0.161718, -64.7219, 11.0583, 0.83 ) }
    apic_4 { pt3dadd( 0.282474, -69.4223, 12.1455, 0.83 ) }
    apic_4 { pt3dadd( 0.479061, -74.8214, 13.4339, 0.83 ) }
    apic_4 { pt3dadd( 0.739743, -80.9757, 14.4693, 0.83 ) }
    apic_4 { pt3dadd( 0.915694, -85.2921, 15.3488, 0.83 ) }
    apic_4 { pt3dadd( 1.02517, -89.6274, 16.5074, 0.83 ) }
    apic_4 { pt3dadd( 1.14582, -94.9113, 18.3035, 0.83 ) }
    apic_4 { pt3dadd( 1.18171, -97.759, 19.5368, 0.83 ) }
    apic_4 { pt3dadd( 1.24047, -101.056, 21.3672, 0.83 ) }
    apic_4 { pt3dadd( 1.29206, -104.608, 23.4945, 0.83 ) }
    apic_4 { pt3dadd( 1.27213, -109.087, 26.6145, 0.55 ) }
    apic_4 { pt3dadd( 1.17198, -111.682, 28.8128, 0.55 ) }
    apic_4 { pt3dadd( 0.97474, -113.625, 30.7995, 0.55 ) }
    apic_4 { pt3dadd( 0.662561, -115.993, 33.5039, 0.55 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 73/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 31.7373, -333.474, 53.4872, 0.28 ) }
    apic_7 { pt3dadd( 34.3468, -333.193, 54.4773, 0.28 ) }
    apic_7 { pt3dadd( 34.6278, -333.162, 54.5839, 0.55 ) }
    apic_7 { pt3dadd( 36.3051, -332.981, 55.2203, 0.28 ) }
    apic_7 { pt3dadd( 37.8547, -332.814, 55.8083, 0.83 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 31.7373, -333.474, 53.4872, 0.83 ) }
    apic_6 { pt3dadd( 30.9913, -335.607, 53.6605, 0.83 ) }
    apic_6 { pt3dadd( 29.6357, -339.482, 53.9754, 0.55 ) }
    apic_6 { pt3dadd( 28.9474, -341.45, 54.1352, 0.55 ) }
    apic_6 { pt3dadd( 28.569, -342.532, 54.2231, 0.55 ) }
    apic_6 { pt3dadd( 27.7627, -344.837, 54.4104, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_12 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_9 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_7 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_12 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_20 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_19 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_5 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_8 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_9 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_22 nseg = 7
    dend_15 nseg = 7
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_10 nseg = 7
    dend_9 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 7
    dend_1 nseg = 3
    apic_12 nseg = 3
    dend_20 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_19 nseg = 5
    dend_18 nseg = 5
    apic_5 nseg = 15
    apic_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_SBC_48c120ddd5_0_0


