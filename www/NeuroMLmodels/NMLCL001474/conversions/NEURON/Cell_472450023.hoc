// Cell: Cell_472450023
/*
{
  "id" : "Cell_472450023",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "421.553, 352.823, 25.1663, 12.094", "427.6, 352.823, 25.1663, 12.094", "433.647, 352.823, 25.1663, 12.094" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "427.6, 352.823, 25.1663, 1.0", "433.441, 366.639, 25.1663, 1.0", "439.283, 380.455, 25.1663, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000023
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "426.404, 358.384, 23.7021, 0.9804", "426.695, 359.468, 23.4756, 0.754", "427.23, 360.475, 23.3803, 0.8534", "427.62, 361.546, 23.1758, 0.9344", "427.97, 362.63, 22.9243, 0.964", "428.509, 363.632, 22.663, 0.8956", "429.093, 364.605, 22.3174, 0.769", "429.573, 365.628, 21.8775, 0.661", "430.373, 366.435, 21.5522, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000023
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "424.711, 348.18, 27.3772, 0.7928", "424.021, 347.269, 27.3934, 0.7202", "423.253, 346.423, 27.3788, 0.8982", "422.597, 345.486, 27.3598, 1.0304", "422.143, 344.439, 27.3311, 1.1344", "421.775, 343.356, 27.2877, 1.167", "421.504, 342.245, 27.228, 1.1694", "420.959, 341.245, 27.1512, 1.1234", "420.539, 340.183, 27.0444, 1.1186", "420.072, 339.142, 26.8361, 1.0222", "419.715, 338.062, 26.5541, 0.8644" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000023
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "431.497, 349.365, 26.7781, 0.6218", "432.117, 348.456, 27.4779, 0.3788", "433.054, 347.867, 28.1428, 0.5028", "433.923, 347.143, 28.5622, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000023
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "439.283, 380.455, 25.1663, 1.0", "445.124, 394.271, 25.1663, 1.0", "450.965, 408.087, 25.1663, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "430.373, 366.435, 21.5522, 0.6102", "430.449, 367.098, 20.9621, 0.6264", "430.206, 368.144, 20.28, 0.6696", "429.921, 369.234, 19.8903, 0.7234", "429.651, 370.341, 19.6769, 0.7764", "429.373, 371.45, 19.5464, 0.808", "428.859, 372.461, 19.4487, 0.7934", "428.243, 373.424, 19.4053, 0.727", "427.859, 374.494, 19.3629, 0.6298", "428.168, 375.549, 19.1714, 0.632", "428.886, 376.417, 18.7951, 0.682", "429.564, 377.318, 18.3225, 0.7588", "430.31, 378.156, 17.7822, 0.7118" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "430.373, 366.435, 21.5522, 0.6102", "431.311, 366.732, 21.4255, 0.5876", "432.411, 367.041, 21.3179, 0.7236", "433.55, 367.09, 21.1807, 0.9048", "434.686, 367.222, 21.093, 0.9888", "435.817, 367.392, 21.0719, 0.9914", "436.934, 367.639, 21.0137, 0.9164", "438.074, 367.718, 20.9448, 0.839" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "419.715, 338.062, 26.5541, 0.8644", "419.15, 336.921, 26.3941, 0.6838", "418.488, 335.992, 26.3459, 0.683", "417.737, 335.133, 26.5159, 0.7092", "417.058, 334.225, 26.8777, 0.7826", "416.39, 333.318, 27.3606, 0.8596", "415.548, 332.578, 27.9037, 0.9124", "414.702, 331.844, 28.4732, 0.891", "414.074, 330.919, 29.0553, 0.8652", "413.469, 329.97, 29.5445, 0.8154", "412.644, 329.202, 30.014, 0.714", "412.094, 328.215, 30.4237, 0.637", "411.926, 327.091, 30.7345, 0.536", "411.515, 326.03, 30.9764, 0.5586", "410.913, 325.061, 31.1822, 0.5344", "410.096, 324.266, 31.3928, 0.6576", "409.16, 323.62, 31.694, 0.7116", "408.281, 322.901, 32.0219, 0.7372" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "419.715, 338.062, 26.5541, 0.8644", "418.931, 336.765, 24.3679, 0.601", "418.068, 336.309, 23.0992, 0.6142", "417.001, 336.111, 22.2961, 0.6162", "415.992, 335.697, 21.545, 0.5664", "415.022, 335.195, 20.7096, 0.4866", "414.004, 334.802, 19.9599, 0.4838", "413.602, 333.771, 19.2704, 0.513", "413.327, 332.689, 18.7089, 0.562", "412.73, 331.727, 18.4322, 0.596", "411.951, 330.894, 18.2458, 0.6298", "411.155, 330.087, 17.9638, 0.604", "410.211, 329.511, 17.3905, 0.5492", "409.164, 329.207, 16.549, 0.459", "408.808, 328.582, 15.7561, 0.4322", "409.473, 327.884, 14.6237, 0.536", "409.343, 327.011, 13.6207, 0.4008", "410.395, 326.664, 12.9247, 0.3286", "410.595, 325.826, 12.154, 0.305", "410.105, 324.873, 11.2659, 0.2808", "410.998, 324.26, 10.7939, 0.3008", "412.055, 323.857, 10.4566, 0.3278", "413.134, 323.499, 10.1458, 0.356" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "433.923, 347.143, 28.5622, 0.9152", "434.38, 347.872, 27.8597, 0.6652", "434.958, 348.792, 26.9741, 0.3502", "435.487, 349.601, 25.557, 0.2288", "435.746, 350.486, 24.0733, 0.2288", "435.171, 351.345, 22.9991, 0.2288", "434.566, 352.184, 22.2796, 0.2288", "433.563, 352.702, 21.8162, 0.2288", "434.122, 353.343, 20.3695, 0.2288", "435.071, 353.692, 19.0782, 0.2288", "435.254, 354.656, 17.8862, 0.2288", "435.149, 355.739, 17.2026, 0.2288", "435.331, 356.76, 16.3305, 0.2288", "436.188, 356.405, 15.566, 0.2288", "436.983, 355.644, 14.8964, 0.2288", "437.88, 355.431, 13.6963, 0.2288", "438.683, 355.016, 12.489, 0.2288", "439.516, 354.483, 11.2538, 0.2288", "440.511, 354.147, 10.1458, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "433.923, 347.143, 28.5622, 0.9152", "434.718, 347.074, 28.9719, 0.5994", "435.747, 346.631, 29.3863, 0.6658", "436.675, 345.973, 29.6562, 0.7742", "437.415, 345.112, 29.8648, 0.832", "437.869, 344.072, 30.0902, 0.839", "437.834, 342.947, 30.3436, 0.8168", "437.951, 341.815, 30.5379, 0.7682", "438.678, 340.967, 30.7829, 0.7398", "439.68, 340.45, 31.1335, 0.7146", "440.745, 340.138, 31.7926, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "433.923, 347.143, 28.5622, 0.9152", "434.889, 346.819, 26.609, 0.6424", "435.983, 346.709, 26.0451, 0.7516", "437.101, 346.48, 25.8938, 0.8582", "438.229, 346.29, 25.8882, 0.9136", "439.367, 346.173, 25.9412, 1.0144", "440.441, 345.784, 25.9848, 1.0916", "441.568, 345.59, 26.006, 1.143", "442.711, 345.529, 25.999, 1.144", "443.845, 345.378, 25.935, 1.119", "444.986, 345.355, 25.8066, 1.0936", "446.122, 345.25, 25.5746, 1.0176", "447.146, 344.763, 25.2344, 0.8882", "448.218, 344.386, 24.8956, 0.661" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "430.31, 378.156, 17.7822, 0.7118", "429.478, 379.314, 16.6793, 0.5002", "429.233, 380.38, 16.8277, 0.4156", "429.317, 381.518, 16.9032, 0.4662", "429.644, 382.608, 16.7877, 0.507", "429.467, 383.731, 16.6762, 0.4316", "429.792, 384.818, 16.3926, 0.356", "429.683, 385.8, 16.1364, 0.439", "429.72, 386.926, 15.7651, 0.4966", "430.38, 387.702, 16.1568, 0.4322" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "430.31, 378.156, 17.7822, 0.7118", "430.706, 378.893, 17.4174, 0.4332", "431.198, 379.922, 17.2449, 0.4862", "431.83, 380.874, 17.1901, 0.587", "432.204, 381.954, 17.19, 0.6414", "432.486, 383.063, 17.1683, 0.7388", "432.971, 384.098, 17.1161, 0.761", "433.571, 385.069, 17.0147, 0.7322", "434.324, 385.928, 16.8644, 0.6558", "435.112, 386.752, 16.6544, 0.5812", "435.792, 387.656, 16.2903, 0.5212", "436.132, 388.699, 15.847, 0.419", "435.81, 389.775, 15.474, 0.351", "435.294, 390.759, 15.1637, 0.3408", "435.414, 391.838, 14.8613, 0.3996", "436.167, 392.686, 14.6676, 0.4774", "437.04, 393.423, 14.6317, 0.5408", "437.756, 394.302, 14.6355, 0.552", "438.28, 395.319, 14.593, 0.5114", "438.782, 396.347, 14.5545, 0.4426", "439.448, 397.243, 14.5336, 0.4068", "440.424, 397.831, 14.4327, 0.4148", "441.431, 398.353, 14.2092, 0.4406", "442.278, 399.094, 13.8808, 0.4394", "443.063, 399.899, 13.5485, 0.3782", "444.022, 400.508, 13.2633, 0.3208", "444.953, 401.141, 12.9762, 0.3344", "445.765, 401.94, 12.721, 0.4204", "446.596, 402.719, 12.4647, 0.4932", "447.492, 403.419, 12.2077, 0.4766", "448.434, 404.061, 12.011, 0.411", "449.248, 404.839, 11.8676, 0.3814", "449.783, 405.839, 11.7781, 0.414", "450.183, 406.909, 11.724, 0.4904", "450.652, 407.952, 11.6666, 0.5448", "451.082, 409.004, 11.5702, 0.5478", "451.286, 410.123, 11.4202, 0.5046", "451.775, 411.111, 11.3373, 0.483", "451.738, 412.175, 11.1944, 0.598", "452.565, 412.966, 11.197, 0.717", "453.343, 413.79, 11.2709, 0.7788", "454.122, 414.583, 11.3973, 0.751", "455.143, 415.084, 11.6479, 0.6614", "455.613, 415.979, 11.8682, 0.5264", "456.138, 416.982, 12.0392, 0.3822", "457.178, 417.411, 12.403, 0.3354", "458.155, 417.896, 12.9946, 0.3838", "459.12, 418.437, 13.3855, 0.44", "460.175, 418.704, 13.7115, 0.4348", "460.478, 419.731, 13.385, 0.4068", "461.203, 420.512, 13.0297, 0.4458", "461.957, 421.293, 13.3201, 0.5436", "463.026, 421.659, 13.6755, 0.5592", "464.076, 422.099, 13.8681, 0.5238", "465.165, 422.059, 13.9354, 0.5296", "466.294, 422.136, 13.72, 0.5592" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "438.074, 367.718, 20.9448, 0.839", "438.912, 366.872, 19.8457, 0.3914", "439.52, 365.954, 19.498, 0.2288", "440.161, 365.012, 19.5418, 0.2288", "440.87, 364.115, 19.5986, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "438.074, 367.718, 20.9448, 0.839", "439.003, 367.531, 20.915, 0.733", "440.138, 367.398, 20.9123, 0.6048", "441.246, 367.634, 21.0007, 0.5174", "442.083, 368.391, 21.0516, 0.5536", "443.032, 369.023, 21.0274, 0.6724", "444.039, 369.561, 20.841, 0.7806", "445.146, 369.782, 20.4537, 0.8126", "446.247, 370.063, 20.1277, 0.7364", "447.385, 370.084, 19.8673, 0.61", "448.527, 370.085, 19.68, 0.5338", "449.669, 370.093, 19.5028, 0.5094", "450.81, 370.15, 19.4134, 0.5592", "451.921, 370.418, 19.5168, 0.556", "452.988, 370.817, 19.6835, 0.501", "453.921, 371.457, 19.9247, 0.3992", "454.465, 372.437, 20.1248, 0.3336", "454.563, 373.555, 20.2287, 0.3742", "455.267, 374.357, 20.3667, 0.496", "456.383, 374.421, 20.489, 0.6316", "457.468, 374.067, 20.6109, 0.7084", "458.538, 373.669, 20.7519, 0.7702", "459.634, 373.345, 20.8717, 0.812", "460.729, 373.014, 20.8946, 0.848", "461.821, 372.679, 20.8516, 0.7794", "462.941, 372.521, 20.7984, 0.6588", "464.081, 372.619, 20.7413, 0.5318", "465.217, 372.752, 20.6856, 0.483", "466.292, 373.07, 20.6385, 0.504", "467.302, 373.605, 20.5976, 0.5656", "468.372, 373.987, 20.5493, 0.621", "469.502, 374.109, 20.4861, 0.6356", "470.622, 373.943, 20.3881, 0.6244", "471.72, 373.633, 20.2237, 0.6348", "472.841, 373.574, 20.029, 0.6872", "473.978, 373.69, 19.8679, 0.725", "475.118, 373.701, 19.7523, 0.7108", "476.255, 373.591, 19.6783, 0.6466", "477.391, 373.589, 19.6419, 0.5688", "478.461, 373.94, 19.6372, 0.491", "479.509, 374.393, 19.649, 0.443", "480.622, 374.6, 19.6643, 0.447", "481.759, 374.542, 19.6846, 0.4726", "482.898, 374.467, 19.7455, 0.4676", "484.012, 374.661, 19.8231, 0.4414", "485.137, 374.833, 19.8242, 0.4752", "486.273, 374.742, 19.6655, 0.5848" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "408.281, 322.901, 32.0219, 0.7372", "408.493, 321.578, 32.557, 0.4102", "408.716, 320.466, 32.9263, 0.4766", "408.845, 319.34, 33.2245, 0.5466", "408.86, 318.203, 33.5149, 0.5894", "408.789, 317.084, 34.0239, 0.545", "408.365, 316.065, 34.5346, 0.4692", "408.04, 314.997, 34.8645, 0.416", "408.099, 313.879, 35.229, 0.3886", "408.044, 312.751, 35.5043, 0.3618", "407.747, 311.654, 35.7342, 0.3344", "406.997, 310.813, 35.7501, 0.3544", "406.44, 309.82, 35.5807, 0.4094", "405.753, 308.918, 35.2831, 0.4576", "405.398, 307.893, 35.4578, 0.4814", "405.159, 306.805, 35.5354, 0.5582", "405.395, 305.7, 35.7353, 0.631", "405.586, 304.648, 36.4658, 0.6836", "405.919, 303.581, 36.9793, 0.6606", "406.278, 302.529, 37.592, 0.6316", "406.531, 301.574, 38.9239, 0.5492", "406.88, 300.573, 39.9417, 0.4832", "407.583, 299.737, 40.6798, 0.4836", "407.264, 298.681, 41.3084, 0.5134", "406.951, 297.731, 41.8984, 0.5524", "407.242, 296.664, 42.516, 0.6188", "407.614, 295.645, 43.2922, 0.6316", "407.642, 294.507, 43.5714, 0.5474", "407.67, 293.365, 43.6904, 0.4882", "407.584, 292.233, 43.8329, 0.5084", "407.275, 291.131, 43.9118, 0.5008", "407.008, 290.027, 43.876, 0.4454", "406.996, 288.889, 43.6948, 0.3564", "406.794, 287.797, 43.5806, 0.3304", "406.53, 286.688, 43.5375, 0.3574", "406.234, 285.608, 43.3521, 0.3814", "406.152, 284.47, 43.4095, 0.3702", "406.019, 283.337, 43.4871, 0.356", "405.978, 282.196, 43.6346, 0.356", "406.06, 281.061, 43.8388, 0.3882", "406.278, 279.941, 44.0322, 0.4236", "406.495, 278.82, 44.1286, 0.4514", "406.413, 277.695, 44.2562, 0.4576", "407.04, 276.75, 44.5774, 0.4576", "407.64, 275.799, 44.709, 0.4576", "407.918, 274.748, 44.8417, 0.4578", "408.645, 273.87, 44.9635, 0.4838", "408.868, 272.757, 45.2012, 0.5084", "408.922, 271.619, 45.446, 0.499", "408.922, 270.484, 45.6854, 0.4708", "408.557, 269.425, 45.8332, 0.4804", "408.242, 268.328, 45.8982, 0.4578", "407.941, 267.254, 46.0001, 0.4522", "407.329, 266.337, 46.128, 0.4574", "407.075, 265.228, 46.3123, 0.483", "406.742, 264.144, 46.5486, 0.463", "406.216, 263.136, 46.8124, 0.408", "405.371, 262.375, 47.0868, 0.3814", "404.456, 261.695, 47.2769, 0.3814", "403.555, 260.991, 47.3091, 0.3814", "402.809, 260.135, 47.3337, 0.3814", "401.945, 259.519, 47.5353, 0.3814", "401.148, 258.897, 48.1054, 0.4062", "400.323, 258.132, 48.594, 0.4322", "399.572, 257.284, 48.9779, 0.424", "398.781, 256.492, 49.4458, 0.3456", "398.262, 255.505, 50.083, 0.2694", "397.776, 254.517, 50.8374, 0.2288", "397.294, 253.537, 51.669, 0.2288", "396.817, 252.562, 52.5535, 0.2288", "396.338, 251.587, 53.4352, 0.2288", "395.807, 250.633, 54.2438, 0.2288", "395.126, 249.756, 54.8702, 0.2288", "394.256, 249.062, 55.2762, 0.2288", "393.184, 248.745, 55.5248, 0.2288", "392.047, 248.639, 55.6545, 0.2288", "390.939, 248.381, 55.7077, 0.2288", "389.945, 247.844, 55.72, 0.2288", "389.016, 247.18, 55.72, 0.2288", "387.951, 246.887, 55.72, 0.2288", "387.012, 246.405, 55.72, 0.2288", "386.119, 245.699, 55.72, 0.2288", "385.125, 245.133, 55.72, 0.2288", "384.331, 244.314, 55.72, 0.2288", "383.481, 243.548, 55.72, 0.2288", "382.594, 242.828, 55.72, 0.2288", "382.064, 241.815, 55.72, 0.2288", "381.982, 240.675, 55.72, 0.2288", "381.982, 239.531, 55.72, 0.2288", "381.978, 238.387, 55.72, 0.2794", "381.753, 237.266, 55.72, 0.356" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "408.281, 322.901, 32.0219, 0.7372", "407.095, 322.656, 33.2542, 0.4766", "406.039, 322.976, 33.6647, 0.5138", "404.899, 322.981, 33.7389, 0.5338", "403.798, 323.247, 33.7072, 0.5234", "402.728, 323.651, 33.6972, 0.4968", "401.615, 323.874, 33.7341, 0.471", "400.481, 324.003, 33.8752, 0.4712", "399.465, 324.165, 34.7665, 0.5338", "398.47, 323.766, 35.595, 0.5474", "397.509, 323.441, 36.7094, 0.5616", "396.431, 323.205, 37.4097, 0.6322", "395.326, 323.371, 37.9358, 0.5764", "394.316, 323.885, 38.3141, 0.4928", "393.305, 324.306, 38.738, 0.4534", "392.309, 323.988, 39.384, 0.5662", "391.249, 324.087, 40.0988, 0.6102", "390.145, 324.103, 40.472, 0.5902", "389.01, 324.117, 40.7632, 0.5362", "388.205, 323.483, 40.7305, 0.4018", "387.086, 323.512, 40.7702, 0.3344", "385.967, 323.664, 40.8738, 0.3164", "384.849, 323.552, 41.2658, 0.407", "383.841, 323.067, 41.7505, 0.545", "382.835, 322.543, 42.1103, 0.678", "381.711, 322.384, 42.3441, 0.7118", "380.719, 321.832, 42.698, 0.709", "379.698, 321.343, 42.9778, 0.6864", "378.587, 321.08, 43.0248, 0.6864", "377.491, 320.756, 43.1491, 0.656", "376.363, 320.629, 43.3216, 0.5778", "375.286, 320.296, 43.5974, 0.4918", "374.213, 319.908, 43.7993, 0.508", "373.324, 319.195, 44.0003, 0.611", "372.342, 318.611, 44.1311, 0.7386", "371.309, 318.122, 44.2044, 0.7846", "370.202, 317.837, 44.2361, 0.721", "369.156, 317.431, 44.312, 0.6552", "368.244, 316.789, 44.4926, 0.6502", "367.128, 316.61, 44.7664, 0.6864", "366.016, 316.481, 45.2001, 0.6592", "364.926, 316.371, 45.9214, 0.5778", "363.865, 316.073, 46.5786, 0.5378", "362.792, 315.747, 47.1195, 0.5826", "361.877, 315.084, 47.5154, 0.6372", "361.009, 314.356, 47.8957, 0.6806", "360.068, 313.713, 48.1687, 0.6018", "359.068, 313.322, 48.3818, 0.5222", "358.015, 313.407, 48.6889, 0.4922", "357.004, 312.914, 49.0857, 0.4946", "355.966, 312.445, 49.3074, 0.43", "354.877, 312.127, 49.497, 0.3338", "353.75, 311.997, 49.413, 0.3338", "352.633, 312.152, 49.4074, 0.3848", "351.493, 312.109, 49.3534, 0.4668", "350.35, 312.102, 49.3592, 0.539", "349.209, 312.15, 49.2758, 0.5592", "348.068, 312.161, 49.1546, 0.5372", "346.968, 311.87, 48.9846, 0.5792", "345.9, 311.465, 48.907, 0.5848", "344.861, 311.042, 48.7228, 0.562", "343.72, 310.975, 48.841, 0.4954", "342.659, 310.638, 49.0809, 0.4674", "341.683, 310.065, 49.4757, 0.4344", "340.618, 310.391, 49.7188, 0.4014", "339.531, 310.701, 49.9649, 0.3212", "338.388, 310.688, 50.0394, 0.2664", "337.247, 310.713, 50.1021, 0.2356", "336.119, 310.893, 50.1329, 0.2696", "335.068, 311.295, 50.2706, 0.325", "334.072, 311.821, 50.5884, 0.368", "332.976, 312.032, 50.9726, 0.3814", "331.893, 311.774, 51.373, 0.3814", "330.828, 311.373, 51.6482, 0.3626", "330.063, 310.58, 51.954, 0.3352", "329.384, 309.678, 52.4012, 0.3532", "328.454, 309.093, 53.1059, 0.5058", "327.499, 308.524, 53.758, 0.6184", "326.529, 308.003, 54.4289, 0.5812", "325.457, 307.901, 55.1712, 0.4444", "324.353, 307.906, 55.8785, 0.3688", "323.242, 307.856, 56.5396, 0.401", "322.128, 307.694, 57.0189, 0.4294", "321.001, 307.696, 57.4899, 0.5022", "319.977, 307.965, 58.52, 0.5848" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "440.745, 340.138, 31.7926, 0.6864", "441.849, 340.643, 33.2156, 0.6098", "442.852, 340.973, 34.2588, 0.6166", "443.856, 340.708, 35.2022, 0.6504", "444.738, 340.054, 35.915, 0.6014", "445.392, 339.15, 36.4031, 0.5036", "445.681, 338.07, 36.8298, 0.3778", "446.401, 337.256, 37.4091, 0.3318", "447.487, 337.065, 38.0682, 0.432", "448.517, 336.698, 38.8576, 0.5656", "449.356, 335.974, 39.5508, 0.6598", "450.123, 335.164, 40.1764, 0.6344", "450.807, 334.286, 40.8089, 0.5836", "451.674, 333.581, 41.3874, 0.5334", "452.783, 333.405, 41.9241, 0.5084" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "440.745, 340.138, 31.7926, 0.6864", "441.229, 338.991, 32.3226, 0.3794", "441.699, 337.959, 32.5836, 0.4676", "442.146, 336.929, 32.6872, 0.5338", "442.217, 335.796, 32.7174, 0.5146", "441.982, 334.688, 32.7197, 0.4512", "441.681, 333.593, 32.7922, 0.3926", "441.995, 332.554, 32.8194, 0.4144", "442.681, 331.648, 32.6418, 0.4688", "443.131, 330.632, 32.1773, 0.5502", "443.186, 329.514, 31.6546, 0.5592", "443.191, 328.386, 31.1875, 0.5592", "443.242, 327.258, 30.7328, 0.5592", "443.453, 326.144, 30.375, 0.5592", "443.626, 325.016, 30.2123, 0.584", "443.68, 323.874, 30.1112, 0.5848", "443.87, 322.746, 30.0101, 0.6618", "444.055, 321.618, 29.9536, 0.7128", "444.117, 320.476, 29.9418, 0.7616", "444.206, 319.335, 29.9622, 0.7106", "444.187, 318.192, 30.0311, 0.6602", "444.133, 317.052, 30.1885, 0.6384", "444.213, 315.913, 30.3556, 0.6898", "444.451, 314.796, 30.49, 0.7372", "444.645, 313.669, 30.5494, 0.7352", "444.886, 312.551, 30.4858, 0.7064", "445.007, 311.415, 30.3677, 0.6578", "445.024, 310.273, 30.2249, 0.6322", "445.08, 309.133, 30.1465, 0.614", "445.237, 308.008, 30.2215, 0.6408", "445.054, 306.887, 30.331, 0.667", "444.643, 305.82, 30.3923, 0.6802", "444.23, 304.754, 30.3694, 0.6408", "443.802, 303.695, 30.3713, 0.5542", "443.482, 302.598, 30.4881, 0.4442", "443.421, 301.494, 30.497, 0.3814", "443.886, 300.462, 30.408, 0.41", "444.358, 299.428, 30.3568, 0.5056", "444.529, 298.312, 30.338, 0.6042", "444.45, 297.173, 30.3366, 0.666", "444.252, 296.048, 30.3064, 0.656", "444.32, 294.934, 30.217, 0.6032", "444.831, 293.928, 30.1008, 0.5486", "445.384, 292.938, 29.9785, 0.5218", "445.762, 291.864, 29.82, 0.5734", "446.128, 290.804, 29.6509, 0.6344", "446.106, 289.664, 29.6377, 0.6768", "446.079, 288.534, 29.8206, 0.6496", "446.341, 287.43, 30.0258, 0.6232", "446.668, 286.336, 30.1588, 0.6102", "446.848, 285.212, 30.2982, 0.6102", "447.011, 284.084, 30.4928, 0.6242", "447.303, 282.983, 30.6978, 0.6214", "447.663, 281.9, 30.8874, 0.596", "448.103, 280.85, 31.0912, 0.5562", "448.539, 279.798, 31.344, 0.5632", "448.936, 278.731, 31.6128, 0.5998", "449.468, 277.73, 31.8447, 0.6254", "450.159, 276.825, 32.0698, 0.62", "450.813, 275.895, 32.2972, 0.5942", "451.183, 274.832, 32.471, 0.5682", "451.291, 273.697, 32.5469, 0.5258", "451.584, 272.608, 32.4976, 0.5084", "452.014, 271.549, 32.4212, 0.49", "452.449, 270.492, 32.2846, 0.5022", "452.748, 269.394, 32.1003, 0.5084", "453.022, 268.285, 31.9281, 0.5084", "453.401, 267.209, 31.7789, 0.4886", "453.643, 266.097, 31.633, 0.4632", "453.707, 264.96, 31.4199, 0.4576", "453.722, 263.819, 31.2119, 0.416", "453.786, 262.678, 31.0531, 0.386", "453.897, 261.541, 30.9392, 0.3814", "453.801, 260.406, 30.8633, 0.4648", "453.906, 259.274, 30.821, 0.504", "454.374, 258.24, 30.8174, 0.5296", "455.222, 257.493, 30.8764, 0.4896", "456.069, 256.726, 30.8165, 0.5062", "456.849, 255.891, 30.7045, 0.4618", "457.488, 254.945, 30.5642, 0.4342", "458.021, 253.938, 30.3358, 0.3844", "458.545, 252.926, 30.1048, 0.4054", "459.093, 251.924, 29.9253, 0.4548", "459.648, 250.924, 29.8108, 0.4816", "460.134, 249.89, 29.7413, 0.459", "460.533, 248.818, 29.7088, 0.3858", "460.641, 247.682, 29.7055, 0.3574", "460.942, 246.579, 29.7167, 0.38", "461.212, 245.467, 29.7318, 0.4054", "461.828, 244.508, 29.7472, 0.4068", "462.367, 243.499, 29.7651, 0.3828", "462.633, 242.388, 29.8071, 0.3814", "462.862, 241.27, 29.9631, 0.4322" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "448.218, 344.386, 24.8956, 0.661", "448.949, 345.025, 25.1061, 0.529", "449.911, 345.624, 24.7909, 0.4142", "450.916, 346.156, 24.6312, 0.3682", "451.766, 346.904, 24.4095, 0.4392", "452.414, 347.834, 24.085, 0.5544", "452.988, 348.799, 23.573, 0.6102", "453.752, 349.566, 22.916, 0.59", "454.787, 349.88, 22.1915, 0.5474", "455.885, 349.82, 21.4897, 0.5594", "456.953, 349.509, 20.9005, 0.611", "458.044, 349.311, 20.4936, 0.6766", "459.172, 349.44, 20.3167, 0.7262", "460.277, 349.729, 20.3024, 0.782", "461.362, 350.093, 20.3385, 0.8736", "462.429, 350.504, 20.3671, 0.9752", "463.52, 350.834, 20.3552, 1.0168", "464.621, 351.143, 20.2826, 0.9564", "465.709, 351.489, 20.1386, 0.8548", "466.816, 351.749, 19.8888, 0.7828", "467.917, 352.018, 19.5352, 0.7782", "468.978, 352.405, 19.1285, 0.788", "470.035, 352.79, 18.6311, 0.7718", "471.115, 353.065, 18.0153, 0.728", "472.215, 353.216, 17.352, 0.6936", "473.284, 353.506, 16.7114, 0.6864", "474.296, 353.984, 16.1517, 0.6484", "475.226, 354.621, 15.7312, 0.5788", "476.078, 355.374, 15.4597, 0.5216", "476.866, 356.2, 15.3308, 0.5084", "477.617, 357.063, 15.2501, 0.5464", "478.44, 357.855, 15.2554, 0.5394", "479.153, 358.745, 15.2524, 0.5338", "480.099, 359.345, 15.1115, 0.492", "481.179, 359.159, 14.9132, 0.5042", "482.23, 358.726, 14.6087, 0.5084", "483.355, 358.622, 14.3225, 0.5312", "484.437, 358.344, 13.9771, 0.5274", "485.552, 358.488, 13.855, 0.4918", "486.507, 359.07, 13.7919, 0.4474", "487.411, 359.715, 13.7634, 0.4198", "488.518, 359.896, 13.677, 0.42", "489.647, 359.777, 13.4317, 0.4146", "490.609, 359.211, 13.1821, 0.4292", "491.707, 359.002, 12.801, 0.4372", "492.845, 359.051, 12.5999, 0.4904", "493.96, 359.286, 12.6521, 0.5528", "495.035, 359.666, 12.8136, 0.6102", "496.141, 359.952, 12.9251, 0.5842", "497.271, 360.088, 13.0115, 0.4832", "498.362, 360.362, 12.9471, 0.4164", "499.319, 360.958, 12.6735, 0.4068", "500.149, 361.729, 12.3018, 0.452", "501.087, 362.346, 11.7908, 0.4288", "502.043, 362.945, 11.3392, 0.4014", "502.992, 363.553, 10.8735, 0.3708", "504.002, 364.045, 10.3487, 0.3392", "505.095, 364.312, 10.0126, 0.312", "506.229, 364.278, 9.8416, 0.3432", "507.021, 364.936, 10.08, 0.4322" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "448.218, 344.386, 24.8956, 0.661", "449.377, 343.977, 24.4377, 0.5084", "450.392, 343.489, 23.9497, 0.501", "451.379, 342.979, 23.2879, 0.483", "452.366, 342.467, 22.6439, 0.5042", "453.281, 341.831, 22.1097, 0.5654", "453.915, 340.937, 21.6592, 0.6532", "454.145, 339.839, 21.2647, 0.7564", "454.206, 338.707, 20.8701, 0.8362", "454.354, 337.593, 20.4182, 0.8526", "454.582, 336.492, 19.9025, 0.8014", "454.848, 335.406, 19.3355, 0.7496", "455.311, 334.397, 18.7542, 0.7508", "455.987, 333.506, 18.218, 0.7904", "456.748, 332.671, 17.7842, 0.7998", "457.422, 331.762, 17.4644, 0.7196", "457.849, 330.719, 17.2323, 0.592", "458.406, 329.764, 17.0159, 0.504", "459.355, 329.177, 16.797, 0.5466", "460.43, 328.795, 16.6198, 0.6328", "461.539, 328.526, 16.5033, 0.6932", "462.659, 328.29, 16.4663, 0.6788", "463.654, 327.771, 16.4593, 0.6256", "464.315, 326.867, 16.3857, 0.554", "464.63, 325.779, 16.2529, 0.4954", "465.161, 324.784, 16.0895, 0.483", "466.181, 324.364, 15.9004, 0.5274", "467.311, 324.234, 15.6376, 0.5796", "468.392, 323.889, 15.3411, 0.6316", "469.343, 323.268, 15.0766, 0.6356", "470.199, 322.517, 14.8341, 0.6122", "471.086, 321.803, 14.5648, 0.5866", "472.054, 321.209, 14.2531, 0.5848", "472.986, 320.56, 13.9028, 0.6096", "473.84, 319.811, 13.5843, 0.5852", "474.759, 319.135, 13.3757, 0.61", "475.866, 318.859, 13.282, 0.6616", "477.007, 318.788, 13.157, 0.6838", "478.13, 318.586, 13.0012, 0.6306", "479.226, 318.262, 12.8561, 0.5626", "480.296, 317.863, 12.7086, 0.6152", "481.297, 317.315, 12.5451, 0.6898", "482.224, 316.651, 12.349, 0.7354", "483.028, 315.85, 12.0733, 0.7118", "484.031, 315.325, 11.7682, 0.7154", "485.024, 315.298, 11.4216, 0.7372", "485.76, 316.151, 11.1439, 0.7188", "486.749, 316.323, 10.9181, 0.6596", "487.64, 315.665, 10.7554, 0.5966", "488.385, 314.837, 10.7886, 0.5034", "489.438, 315.117, 11.0603, 0.3698", "490.459, 314.735, 11.7918, 0.3088", "491.457, 314.241, 12.4302, 0.305", "492.18, 313.567, 13.4919, 0.27", "492.378, 312.486, 14.1018, 0.2426", "492.401, 311.354, 14.5009, 0.2404", "492.806, 310.403, 15.0445, 0.2944", "493.476, 309.502, 15.4557, 0.356", "493.669, 308.615, 15.1125, 0.3324", "494.715, 308.938, 14.7904, 0.305", "495.814, 308.833, 14.2506, 0.305", "496.927, 309.02, 13.8287, 0.3126", "498.058, 309.089, 13.43, 0.3456", "499.134, 308.931, 12.9838, 0.399", "500.085, 308.364, 12.2906, 0.4322", "501.013, 308.618, 11.553, 0.3942", "501.86, 309.336, 10.9083, 0.3594", "502.445, 310.253, 10.08, 0.4322" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "440.87, 364.115, 19.5986, 0.2288", "441.147, 363.607, 19.6202, 0.2288", "441.68, 362.595, 19.6651, 0.2288", "442.106, 361.534, 19.7266, 0.2288", "442.911, 360.735, 19.788, 0.2288", "443.863, 360.132, 19.9125, 0.2288", "444.915, 359.693, 20.0976, 0.2288", "446.011, 359.492, 20.403, 0.2288", "447.147, 359.501, 20.552, 0.2288", "448.263, 359.318, 20.6344, 0.2288", "449.174, 358.708, 20.7144, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "440.87, 364.115, 19.5986, 0.2288", "441.91, 364.029, 17.9646, 0.2288", "442.871, 363.949, 16.4559, 0.2288", "443.421, 363.389, 15.4156, 0.2288", "443.489, 362.265, 14.9245, 0.2288", "444.109, 362.118, 14.2134, 0.2288", "444.668, 361.299, 13.1051, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "486.273, 374.742, 19.6655, 0.5848", "486.675, 374.99, 19.6433, 0.609", "487.706, 375.338, 20.0737, 0.5282", "488.815, 375.233, 20.696, 0.454", "489.91, 375.313, 21.3616, 0.4322", "490.906, 375.779, 22.1216, 0.448", "491.776, 376.43, 22.8731, 0.483", "492.606, 377.176, 23.4215, 0.483", "493.638, 377.579, 23.8816, 0.464", "494.761, 377.726, 24.2495, 0.4576", "495.288, 378.647, 24.4709, 0.4576", "495.842, 379.643, 24.6405, 0.4344", "496.568, 380.521, 24.8723, 0.3846", "497.399, 381.287, 25.2913, 0.3044", "498.323, 381.942, 25.6436, 0.2804", "498.96, 382.879, 25.9965, 0.3108", "499.776, 383.652, 26.5206, 0.3874", "500.593, 384.426, 27.0001, 0.4002", "501.439, 385.142, 27.4619, 0.3668", "502.451, 385.187, 28.0974, 0.3188", "503.479, 385.078, 28.758, 0.305", "504.501, 385.51, 29.3426, 0.2894", "505.155, 386.335, 30.0714, 0.26", "505.876, 387.15, 30.8582, 0.23", "506.715, 387.89, 31.4208, 0.2288", "507.513, 388.658, 31.9343, 0.2288", "508.498, 389.217, 32.3196, 0.2288", "509.421, 389.875, 32.6231, 0.2288", "510.225, 390.681, 32.8499, 0.2288", "511.093, 391.335, 33.0504, 0.2288", "511.938, 391.934, 33.2909, 0.2288", "512.466, 392.942, 33.5605, 0.2288", "513.161, 393.828, 33.8579, 0.2444", "514.141, 394.341, 34.1933, 0.287", "514.881, 395.099, 34.6402, 0.367", "515.639, 395.923, 35.1473, 0.4056", "516.411, 396.74, 35.6255, 0.3696", "517.149, 397.585, 36.0167, 0.3304", "517.98, 398.321, 36.4031, 0.3492", "518.692, 399.176, 36.9107, 0.398", "519.373, 400.062, 37.3271, 0.3664", "519.945, 401.012, 37.8482, 0.3458", "520.717, 401.833, 38.3166, 0.3934", "521.396, 402.736, 38.6929, 0.4474", "521.761, 403.795, 39.1272, 0.4576", "522.255, 404.753, 39.6211, 0.4956", "523.303, 404.889, 39.9056, 0.5338", "524.316, 405.121, 40.2702, 0.5338", "525.321, 405.61, 40.8408, 0.5088", "526.296, 406.137, 41.3384, 0.5918", "526.982, 407.034, 41.6094, 0.6452", "527.834, 407.779, 42.0036, 0.6172", "528.726, 408.469, 42.4796, 0.4972", "529.834, 408.558, 42.8327, 0.4108", "530.681, 409.283, 43.1312, 0.383", "531.096, 410.312, 43.5772, 0.4178", "531.951, 410.998, 44.2848, 0.517", "532.652, 411.832, 44.9047, 0.6206", "533.286, 412.771, 45.2379, 0.661", "534.1, 413.558, 45.5974, 0.661", "534.833, 414.433, 45.7783, 0.6904", "535.339, 415.433, 45.9738, 0.7372", "535.735, 416.488, 46.4232, 0.7372", "535.737, 417.568, 47.1416, 0.6404", "536.284, 418.535, 47.5703, 0.601", "536.562, 419.626, 47.9623, 0.6344", "537.023, 420.605, 48.5573, 0.7118", "536.864, 421.696, 49.3108, 0.6762", "536.851, 422.798, 49.9747, 0.5494", "537.413, 423.563, 50.6859, 0.445", "538.21, 424.326, 51.2632, 0.4558", "539.133, 424.965, 51.6183, 0.5098", "539.68, 425.938, 51.8244, 0.5296", "540.454, 426.664, 52.0374, 0.4896", "540.912, 427.692, 52.1777, 0.4268", "541.412, 428.712, 52.3936, 0.3872", "542.098, 429.524, 53.0645, 0.449", "542.557, 430.523, 53.6659, 0.5464", "543.066, 431.495, 54.3497, 0.6084", "543.159, 432.588, 55.0836, 0.6134", "543.405, 433.575, 55.8771, 0.6356", "543.955, 434.563, 56.287, 0.6356", "544.218, 435.583, 57.1802, 0.5294", "544.551, 436.622, 57.9776, 0.4016", "545.277, 437.378, 58.6362, 0.3192", "546.06, 438.169, 59.1973, 0.325", "546.44, 439.206, 59.7584, 0.4196", "547.069, 440.068, 60.671, 0.5084", "547.739, 440.928, 61.5068, 0.4684", "548.434, 441.809, 62.0208, 0.3844", "549.24, 442.586, 62.5716, 0.3632", "549.758, 443.506, 63.4956, 0.4672", "550.018, 444.576, 64.2519, 0.5078", "550.247, 445.638, 64.897, 0.4164", "550.97, 446.49, 65.4668, 0.3166", "551.676, 447.381, 65.7784, 0.2618", "552.109, 448.405, 66.2091, 0.2314", "552.831, 449.269, 66.6411, 0.34", "553.624, 450.058, 67.2045, 0.5028", "554.456, 450.828, 67.5774, 0.5108", "554.89, 451.853, 67.762, 0.392", "555.721, 452.59, 67.8138, 0.3304", "556.478, 453.236, 68.2909, 0.3934", "557.477, 453.566, 68.8201, 0.443", "558.35, 454.259, 69.286, 0.4576", "559.4, 454.684, 69.631, 0.4332", "560.154, 455.43, 70.3755, 0.3468", "560.888, 456.195, 71.0606, 0.2852", "561.974, 456.342, 71.3986, 0.3002", "562.967, 456.845, 71.6016, 0.3554", "563.904, 457.489, 71.787, 0.351", "564.709, 458.244, 72.2672, 0.2784", "565.718, 458.744, 72.676, 0.2542", "566.561, 459.457, 73.092, 0.273", "567.424, 460.002, 74.2, 0.3304" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "486.273, 374.742, 19.6655, 0.5848", "486.638, 374.834, 18.824, 0.49", "487.535, 374.949, 17.34, 0.3304", "488.663, 374.792, 17.1063, 0.337", "489.796, 374.661, 16.9785, 0.383", "490.937, 374.66, 16.7935, 0.4856", "492.079, 374.661, 16.5942, 0.552", "493.221, 374.667, 16.4194, 0.505", "494.361, 374.708, 16.2565, 0.4104", "495.487, 374.877, 16.1212, 0.356", "496.579, 375.211, 16.0004, 0.3634", "497.68, 375.491, 15.8595, 0.3814", "498.816, 375.504, 15.6707, 0.3814", "499.938, 375.312, 15.4806, 0.3728", "501.048, 375.039, 15.3466, 0.3388", "502.17, 374.959, 15.2573, 0.2958", "503.264, 375.264, 15.1839, 0.2796", "504.344, 375.592, 15.1169, 0.29", "505.475, 375.566, 15.0745, 0.305", "506.567, 375.685, 15.0381, 0.305", "507.668, 375.786, 14.9869, 0.336", "508.712, 375.37, 14.7825, 0.375", "509.74, 374.884, 14.4961, 0.4264", "510.759, 374.38, 14.196, 0.4076", "511.865, 374.12, 13.917, 0.3962", "512.991, 373.982, 13.6133, 0.348", "514.114, 373.856, 13.2541, 0.3304", "515.124, 374.241, 12.9945, 0.421", "516.233, 374.445, 12.7021, 0.5938", "517.368, 374.542, 12.4552, 0.7748", "518.5, 374.525, 12.0639, 0.8462", "519.632, 374.492, 11.7311, 0.846", "520.759, 374.467, 11.4514, 0.7898", "521.838, 374.8, 11.2106, 0.7484", "522.905, 375.2, 11.0673, 0.7372", "524.026, 375.346, 11.0513, 0.798", "525.164, 375.413, 11.2313, 0.8556", "526.288, 375.579, 11.5447, 0.904", "527.419, 375.581, 11.892, 0.8498", "528.549, 375.725, 12.0819, 0.8614", "529.69, 375.717, 12.0657, 0.8174", "530.824, 375.852, 11.923, 0.8136", "531.894, 376.238, 11.6537, 0.7374", "532.914, 376.692, 11.513, 0.7322", "534.037, 376.774, 11.3602, 0.7118", "535.117, 377.004, 11.1655, 0.695", "536.251, 376.854, 11.1265, 0.6714", "537.392, 376.837, 11.1276, 0.6726", "538.433, 377.216, 11.1187, 0.6432", "539.377, 377.852, 11.3533, 0.5372", "540.426, 378.206, 12.04, 0.5084" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "452.783, 333.405, 41.9241, 0.5084", "452.454, 333.009, 42.4662, 0.5882", "452.155, 332.001, 43.3308, 0.6176", "452.719, 331.232, 44.261, 0.5406", "453.564, 330.87, 45.6033, 0.4234", "453.956, 329.907, 46.6752, 0.4432", "453.362, 329.17, 47.3432, 0.5276", "453.975, 328.404, 48.3344, 0.5674", "454.886, 327.803, 49.1112, 0.5506", "455.517, 327.019, 49.7722, 0.4828", "455.796, 325.952, 50.4949, 0.395", "456.022, 324.957, 51.6222, 0.3304", "456.918, 324.361, 52.5627, 0.34", "457.64, 323.555, 53.2986, 0.383", "458.167, 322.563, 53.8045, 0.4212", "458.658, 321.553, 54.3362, 0.4712", "458.663, 320.439, 54.5902, 0.506", "458.784, 319.309, 54.8246, 0.5084", "459.093, 318.25, 55.1452, 0.5426", "459.807, 317.402, 55.7631, 0.6926", "460.291, 316.378, 56.1313, 0.7282", "460.574, 315.288, 56.5048, 0.6604", "460.784, 314.192, 56.7672, 0.5848", "461.113, 313.125, 56.9811, 0.6192", "461.008, 312.002, 57.1231, 0.6922", "460.84, 310.875, 57.293, 0.6742", "461.212, 309.833, 57.4109, 0.6026", "461.79, 308.847, 57.51, 0.5848", "462.389, 307.887, 57.878, 0.6454", "463.078, 306.98, 58.1554, 0.7078", "463.767, 306.079, 58.427, 0.6864", "464.623, 305.341, 58.795, 0.6656", "465.464, 304.622, 59.2701, 0.6102", "466.187, 303.788, 59.845, 0.5974", "467.022, 303.039, 60.3688, 0.614", "467.806, 302.246, 60.9938, 0.6544", "468.507, 301.365, 61.4527, 0.661", "468.915, 300.314, 61.8134, 0.5894", "469.511, 299.353, 62.2017, 0.5082", "470.441, 298.733, 62.6844, 0.4978", "471.14, 297.839, 62.9482, 0.5772", "471.826, 296.939, 63.1529, 0.5954", "472.528, 296.051, 63.4813, 0.4714", "472.833, 294.959, 63.6412, 0.356", "473.173, 293.909, 63.9727, 0.3938", "473.884, 293.02, 64.2253, 0.4686", "474.687, 292.207, 64.2827, 0.4614", "475.514, 291.417, 64.2174, 0.4122", "476.341, 290.629, 64.0976, 0.4068", "477.15, 289.826, 63.8498, 0.4068", "477.932, 288.998, 63.5793, 0.3828", "478.408, 287.969, 63.3027, 0.3046", "479.121, 287.094, 62.9241, 0.2526", "479.444, 286.024, 62.3364, 0.2352", "479.82, 284.961, 61.8663, 0.271", "480.284, 283.943, 61.3094, 0.3258", "480.776, 282.955, 60.6032, 0.356", "481.392, 282.067, 59.8315, 0.326", "481.997, 281.16, 59.0764, 0.2708", "482.237, 280.098, 58.3388, 0.2356", "482.331, 278.985, 57.7391, 0.2288", "482.634, 277.903, 57.3264, 0.2288", "483.018, 276.831, 57.0676, 0.2288", "483.731, 275.968, 56.9162, 0.2288", "484.508, 275.13, 56.8422, 0.2288", "485.199, 274.219, 56.8173, 0.2288", "485.906, 273.32, 56.8058, 0.2288", "486.517, 272.354, 56.7918, 0.2288", "487.45, 271.715, 56.7717, 0.2288", "488.241, 270.892, 56.7437, 0.2288", "489.168, 270.224, 56.7031, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "452.783, 333.405, 41.9241, 0.5084", "452.223, 333.247, 40.6, 0.305" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "452.783, 333.405, 41.9241, 0.5084", "453.408, 333.606, 41.5573, 0.4566", "454.335, 333.502, 42.5992, 0.468", "455.272, 333.034, 43.5638, 0.518", "456.17, 332.427, 44.438, 0.4942", "457.046, 331.779, 45.2889, 0.4234", "457.876, 331.067, 46.0995, 0.3872", "458.88, 330.833, 47.0814, 0.4032", "459.941, 330.844, 48.1272, 0.4788", "460.977, 330.555, 49.0588, 0.483", "462.031, 330.807, 49.917, 0.5558", "463.06, 331.165, 50.7637, 0.5592", "464.118, 331.452, 51.5623, 0.5592", "465.101, 331.954, 52.2917, 0.4356", "466.179, 332.199, 52.9978, 0.3814", "467.283, 332.038, 53.6074, 0.3816", "468.382, 331.838, 54.2133, 0.408", "469.472, 331.575, 54.766, 0.4582", "470.55, 331.253, 55.2664, 0.4872", "471.559, 330.74, 55.6682, 0.5848", "472.613, 330.324, 56.0529, 0.5848", "473.643, 329.858, 56.4768, 0.5792", "474.707, 329.487, 56.9114, 0.4776", "475.832, 329.422, 57.3622, 0.3984", "476.946, 329.617, 57.7816, 0.3006", "478.056, 329.816, 58.217, 0.2512", "479.184, 329.848, 58.6645, 0.2288", "480.267, 330.108, 59.2248, 0.2288", "481.345, 330.418, 59.6574, 0.2288", "482.467, 330.582, 60.0314, 0.2288", "483.561, 330.838, 60.5189, 0.2288", "484.642, 331.028, 61.2352, 0.2288", "485.757, 331.034, 61.8411, 0.2288", "486.876, 331.154, 62.2964, 0.2288", "487.906, 331.551, 62.9594, 0.2288", "488.931, 332.003, 63.5113, 0.2288", "489.935, 332.507, 63.964, 0.2288", "490.847, 333.175, 64.3782, 0.2288", "491.73, 333.892, 64.6593, 0.2288", "492.742, 334.405, 64.8684, 0.2288", "493.803, 334.793, 65.0583, 0.2288", "494.945, 334.829, 65.2411, 0.2288", "495.993, 334.423, 65.4548, 0.2288", "497.028, 333.945, 65.6718, 0.2288", "498.076, 333.493, 65.8812, 0.2288", "499.161, 333.167, 66.0839, 0.2288", "500.283, 332.949, 66.2813, 0.2288", "501.194, 332.305, 66.5031, 0.2288", "502.108, 331.655, 66.7461, 0.2288", "503.201, 331.353, 67.0466, 0.2288", "504.073, 331.509, 67.6236, 0.2288", "504.787, 330.656, 68.2777, 0.2288", "505.574, 329.876, 68.9469, 0.2288", "506.456, 329.208, 69.5912, 0.2288", "507.457, 328.706, 70.1145, 0.2288", "508.547, 328.431, 70.3884, 0.2288", "509.69, 328.45, 70.492, 0.2288", "510.833, 328.47, 70.5956, 0.2288", "511.954, 328.656, 70.7977, 0.2288", "513.086, 328.5, 70.8686, 0.2288", "514.221, 328.386, 70.9708, 0.2288", "515.362, 328.417, 71.1738, 0.2288", "516.502, 328.447, 71.3768, 0.2288", "517.643, 328.477, 71.5798, 0.2288", "518.758, 328.662, 71.8631, 0.238", "519.861, 328.938, 72.1938, 0.2528", "520.829, 329.493, 72.7353, 0.2896", "521.763, 330.143, 72.9991, 0.3548", "522.901, 330.218, 73.0775, 0.3782", "524.042, 330.282, 73.1522, 0.4006", "525.157, 330.52, 73.1847, 0.4602", "526.259, 330.823, 73.2012, 0.5338" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "462.862, 241.27, 29.9631, 0.4322", "463.468, 241.258, 29.7878, 0.4576", "464.036, 240.268, 29.7441, 0.4518", "464.525, 239.233, 29.7312, 0.4112", "464.811, 238.145, 29.8158, 0.3814", "465.208, 237.102, 29.8152, 0.4218", "465.865, 236.169, 29.7083, 0.5216", "466.606, 235.3, 29.6951, 0.5122", "467.456, 234.544, 29.4711, 0.4136", "468.064, 233.664, 29.2018, 0.3428", "468.161, 232.542, 28.8554, 0.3608", "468.091, 231.408, 28.5368, 0.397", "468.108, 230.275, 28.2604, 0.391", "468.195, 229.136, 28.0582, 0.3334", "468.161, 227.997, 27.9702, 0.2726", "468.125, 226.855, 27.9881, 0.2378", "468.244, 225.721, 28.0972, 0.2288", "468.552, 224.627, 28.2808, 0.2288", "468.786, 223.516, 28.5466, 0.2644", "468.984, 222.394, 28.791, 0.3348", "468.953, 221.27, 29.1589, 0.4434", "469.378, 220.234, 29.4454, 0.4576", "469.745, 219.158, 29.7105, 0.4056", "470.456, 218.271, 29.9961, 0.3304", "471.131, 217.359, 30.3078, 0.3388", "471.514, 216.299, 30.5953, 0.427", "471.766, 215.208, 30.8482, 0.52", "472.164, 214.158, 31.1525, 0.6074", "472.354, 213.035, 31.4096, 0.6654", "472.656, 211.936, 31.5515, 0.6528", "472.995, 210.845, 31.6602, 0.5666", "473.188, 209.725, 31.8724, 0.4756", "473.688, 208.723, 32.06, 0.4098", "474.376, 207.864, 32.5116, 0.4322", "474.894, 206.863, 32.8765, 0.4572", "475.754, 206.112, 32.9168, 0.4234", "476.682, 205.475, 32.9269, 0.4068", "477.043, 204.456, 32.7886, 0.4538", "477.238, 203.329, 32.6516, 0.4826", "477.461, 202.226, 32.5175, 0.4468", "478.255, 201.428, 32.1423, 0.364", "479.014, 200.587, 31.8682, 0.3792", "479.522, 199.565, 31.8161, 0.4844", "480.023, 198.538, 31.7688, 0.5338", "480.36, 197.447, 31.5742, 0.5146", "480.907, 196.61, 31.4353, 0.448", "481.714, 195.989, 31.362, 0.4482", "481.641, 194.92, 31.2388, 0.497", "481.776, 193.811, 31.1074, 0.5084", "481.522, 192.739, 31.1492, 0.5084", "481.467, 191.621, 30.9537, 0.516", "481.253, 190.536, 30.6387, 0.523", "481.371, 189.453, 29.8841, 0.5084", "480.459, 189.018, 29.0648, 0.4834", "479.519, 188.488, 28.3279, 0.5084", "478.519, 188.172, 27.5478, 0.5194", "477.684, 187.511, 26.5436, 0.5174", "476.803, 186.977, 25.3374, 0.467", "476.399, 186.332, 23.472, 0.4654", "476.397, 185.434, 21.7711, 0.5156", "476.705, 184.508, 20.5047, 0.5338", "477.534, 183.809, 19.723, 0.5338", "478.559, 183.856, 18.9129, 0.5338", "479.329, 183.089, 18.0502, 0.5182", "479.401, 182.073, 17.5459, 0.4838", "479.394, 180.94, 17.2463, 0.4576", "479.553, 179.844, 17.2107, 0.4782", "480.203, 178.91, 17.3364, 0.4598", "480.709, 177.892, 17.08, 0.4322" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "462.862, 241.27, 29.9631, 0.4322", "462.56, 241.095, 30.4987, 0.4062", "461.931, 240.414, 31.6182, 0.348", "461.676, 239.313, 31.8371, 0.3304", "461.042, 238.387, 32.1258, 0.353", "460.059, 237.834, 32.51, 0.3814", "459.073, 237.294, 32.9344, 0.3814", "458.32, 236.453, 33.3421, 0.3912", "457.681, 235.528, 33.8481, 0.4068", "456.901, 234.714, 34.2079, 0.384", "456.164, 233.857, 34.6156, 0.3018", "455.447, 232.97, 34.8317, 0.2832", "454.759, 232.063, 34.9437, 0.314", "453.907, 231.301, 35.0582, 0.356", "453.133, 230.501, 35.2545, 0.3482", "452.704, 229.444, 35.4707, 0.319", "452.094, 228.507, 35.5387, 0.318", "451.554, 227.544, 35.5432, 0.3304", "450.91, 226.68, 35.4987, 0.3304", "449.975, 226.021, 35.4172, 0.293", "448.987, 225.448, 35.401, 0.26", "447.961, 224.944, 35.4623, 0.2342", "446.851, 224.711, 35.63, 0.2288", "445.728, 224.52, 35.8618, 0.2288", "444.633, 224.229, 36.2278, 0.2542", "443.529, 224.224, 36.96, 0.2796" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "489.168, 270.224, 56.7031, 0.2288", "490.005, 270.416, 57.3768, 0.2288", "491.018, 270.239, 58.5407, 0.2288", "492.111, 270.072, 59.2077, 0.2288", "493.061, 269.638, 59.9262, 0.2288", "494.051, 269.259, 60.6038, 0.2288", "495.067, 269.396, 61.3796, 0.2288", "496.027, 269.905, 62.1964, 0.2288", "497.057, 270.355, 62.718, 0.2288", "497.967, 270.967, 63.4119, 0.2288", "498.609, 271.817, 64.2575, 0.2288", "499.44, 272.305, 65.3338, 0.2288", "500.476, 272.556, 66.33, 0.2288", "501.536, 272.819, 67.1516, 0.2288", "502.358, 272.527, 68.4312, 0.2288", "503.316, 272.605, 69.428, 0.2288", "504.368, 272.908, 70.2453, 0.2288", "505.249, 272.278, 70.9139, 0.2288", "506.112, 271.581, 71.5837, 0.2288", "506.786, 270.963, 72.7255, 0.2288", "507.515, 271.678, 73.9743, 0.2288", "508.37, 272.369, 74.7485, 0.2288", "509.139, 272.958, 76.1729, 0.2288", "509.762, 273.674, 77.7356, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "489.168, 270.224, 56.7031, 0.2288", "489.22, 269.731, 56.6812, 0.2288", "489.559, 268.669, 56.6124, 0.2288", "489.958, 267.621, 56.5155, 0.2288", "490.456, 266.642, 56.3783, 0.2288", "491.258, 265.831, 56.2005, 0.2288", "492.144, 265.114, 56.0512, 0.2288", "492.982, 264.343, 55.9572, 0.2288", "493.763, 263.508, 55.9121, 0.2288", "494.79, 263.203, 55.9138, 0.2288", "495.845, 262.824, 55.9516, 0.2288", "496.674, 262.068, 56.1856, 0.2288", "497.484, 261.29, 56.4259, 0.2288", "498.401, 260.665, 56.56, 0.2288", "499.412, 260.237, 56.56, 0.2288", "500.08, 259.423, 56.56, 0.2288", "500.706, 258.475, 56.5603, 0.2288", "501.275, 257.55, 56.5606, 0.2288", "502.119, 256.837, 56.5614, 0.2288", "502.678, 255.844, 56.5631, 0.2288", "503.29, 254.895, 56.5656, 0.2288", "504.225, 254.26, 56.5729, 0.2288", "504.275, 253.119, 56.6051, 0.2288", "504.471, 251.996, 56.6454, 0.2288", "504.603, 250.861, 56.7028, 0.2288", "504.852, 249.745, 56.8215, 0.2288", "505.126, 248.682, 57.3549, 0.2288", "505.419, 247.637, 57.5271, 0.2288", "505.419, 246.497, 57.7086, 0.2288", "505.42, 245.373, 58.1829, 0.2288", "505.991, 244.569, 58.8048, 0.2288", "506.22, 243.463, 59.0092, 0.2288", "506.707, 242.544, 59.6145, 0.2288", "507.115, 241.54, 60.2154, 0.2288", "507.823, 240.743, 60.4814, 0.2288", "508.475, 239.82, 60.4845, 0.2288", "508.84, 238.737, 60.4881, 0.2288", "509.08, 237.625, 60.494, 0.2288", "509.172, 236.488, 60.5035, 0.2288", "509.728, 235.502, 60.5248, 0.2288", "510.404, 234.586, 60.5676, 0.2288", "510.988, 233.604, 60.6469, 0.2288", "511.617, 232.661, 60.8096, 0.2288", "512.629, 232.222, 61.0742, 0.2288", "513.677, 231.884, 61.4404, 0.2288", "514.639, 231.268, 61.5947, 0.2288", "515.601, 230.651, 61.7487, 0.2288", "516.562, 230.034, 61.903, 0.2288", "517.517, 229.413, 62.0822, 0.2288", "518.405, 228.838, 62.9521, 0.2288", "519.485, 228.592, 63.39, 0.2288", "520.486, 228.051, 63.56, 0.2288", "521.476, 227.495, 63.56, 0.2288", "522.41, 226.902, 63.56, 0.2288", "523.451, 226.567, 63.56, 0.2396", "524.364, 225.909, 63.56, 0.381", "525.034, 225.093, 63.56, 0.3888", "526.111, 224.727, 63.56, 0.358", "527.24, 224.623, 63.56, 0.314", "528.314, 224.296, 63.56, 0.394", "528.955, 223.384, 63.56, 0.2288", "530.092, 223.297, 63.56, 0.2288", "531.021, 222.747, 63.56, 0.2604", "532.141, 222.516, 63.56, 0.3032", "533.284, 222.508, 63.5603, 0.289", "534.428, 222.508, 63.5603, 0.3658", "535.57, 222.53, 63.5606, 0.5932", "536.486, 223.087, 63.5625, 0.548", "537.458, 223.657, 63.565, 0.3554", "538.501, 224.088, 63.5698, 0.3704", "539.643, 224.11, 63.5757, 0.5064", "540.787, 224.11, 63.5855, 0.503", "541.931, 224.11, 63.6006, 0.3392", "543.075, 224.11, 63.6264, 0.2392", "544.218, 224.11, 63.6664, 0.2288", "545.362, 224.11, 63.7277, 0.2288", "546.505, 224.11, 63.8518, 0.2288", "547.645, 224.11, 64.0662, 0.2288", "548.787, 224.11, 64.2429, 0.2288", "549.929, 224.11, 64.4218, 0.2288", "551.069, 224.11, 64.6408, 0.2288", "552.186, 224.285, 65.0376, 0.2288", "553.293, 224.453, 65.6006, 0.2288", "554.418, 224.428, 66.0509, 0.2288", "555.557, 224.351, 66.1853, 0.2288", "556.698, 224.274, 66.3197, 0.2288", "557.838, 224.198, 66.4538, 0.2288", "558.978, 224.12, 66.5882, 0.2288", "560.118, 224.043, 66.7226, 0.2288", "561.258, 223.967, 66.8567, 0.2288", "562.398, 223.89, 66.9911, 0.2288", "563.539, 223.813, 67.1255, 0.2288", "564.678, 223.737, 67.2599, 0.2288", "565.819, 223.66, 67.394, 0.2288", "566.82, 223.619, 68.6552, 0.2288", "567.806, 223.329, 69.8384, 0.2288", "568.758, 222.966, 70.56, 0.2288", "569.881, 222.803, 70.56, 0.2288", "570.895, 222.303, 70.56, 0.2288", "571.963, 221.908, 70.5603, 0.2288", "573.012, 221.465, 70.5603, 0.2288", "573.951, 220.834, 70.5608, 0.2288", "574.946, 220.284, 70.5614, 0.2288", "575.93, 219.813, 70.5656, 0.2288", "576.511, 218.876, 70.5771, 0.2288", "576.939, 217.815, 70.5914, 0.2288", "577.242, 216.724, 70.6171, 0.2288", "577.262, 215.581, 70.653, 0.2288", "577.262, 214.437, 70.7056, 0.2288", "577.262, 213.294, 70.8238, 0.2288", "577.262, 212.152, 70.9808, 0.2288", "577.262, 211.012, 71.1844, 0.2288", "577.06, 209.902, 71.3233, 0.2288", "576.78, 208.802, 71.3975, 0.2288", "576.004, 208.094, 71.4, 0.2796" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "526.259, 330.823, 73.2012, 0.5338", "527.091, 330.173, 73.9444, 0.4438", "527.957, 329.496, 74.7183, 0.3502", "528.766, 328.861, 75.922, 0.3424", "529.537, 328.204, 77.1756, 0.3594", "530.125, 327.265, 77.873, 0.3918", "530.871, 326.479, 78.6229, 0.3976", "531.723, 325.804, 79.4293, 0.3822", "532.191, 324.838, 80.388, 0.3948", "532.658, 323.869, 81.3425, 0.4062", "533.086, 322.866, 82.1999, 0.3936", "533.509, 321.864, 83.0631, 0.3818", "533.766, 320.839, 84.1324, 0.3988", "534.164, 319.836, 84.9708, 0.397", "534.687, 318.852, 85.603, 0.3784", "535.211, 317.868, 86.2352, 0.3598", "535.735, 316.885, 86.8675, 0.3412", "536.051, 315.895, 87.8122, 0.3236", "536.081, 314.9, 89.1884, 0.3072", "536.059, 313.86, 90.3507, 0.291", "535.919, 312.823, 91.3982, 0.284", "535.517, 311.811, 92.2491, 0.2992", "534.796, 311.195, 93.448, 0.2958", "533.881, 310.824, 94.8604, 0.281", "533.101, 310.673, 96.857, 0.2676", "532.335, 310.544, 98.9134, 0.2542" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "526.259, 330.823, 73.2012, 0.5338", "526.875, 330.955, 73.1657, 0.4398", "527.994, 331.195, 73.101, 0.269", "529.105, 331.465, 72.9957, 0.2288", "530.213, 331.744, 72.8781, 0.2288", "531.32, 332.024, 72.7602, 0.2288", "532.417, 332.334, 72.6362, 0.2306", "533.42, 332.88, 72.4637, 0.246", "534.394, 333.473, 72.3313, 0.2614", "535.336, 334.122, 72.2464, 0.2772", "536.316, 334.711, 72.2358, 0.2872", "537.304, 335.288, 72.2386, 0.2962", "538.295, 335.852, 72.2467, 0.305", "539.435, 335.918, 72.434, 0.305", "540.574, 335.986, 72.6214, 0.305", "541.713, 336.039, 72.8498, 0.31", "542.85, 336.06, 73.1651, 0.3256", "543.981, 336.109, 73.5608, 0.3454", "545.114, 336.081, 73.848, 0.356", "546.25, 335.964, 73.9945, 0.356", "547.386, 335.848, 74.1409, 0.356", "548.523, 335.73, 74.2871, 0.356", "549.658, 335.608, 74.454, 0.3518", "550.787, 335.462, 74.7214, 0.3262", "551.916, 335.335, 75.0257, 0.2956", "553.043, 335.343, 75.4496, 0.2516", "554.172, 335.499, 75.6913, 0.2406", "555.301, 335.655, 75.9329, 0.2298", "556.301, 336.187, 76.1897, 0.2288", "557.289, 336.755, 76.4478, 0.2288", "558.345, 337.179, 76.7046, 0.2288", "559.398, 337.608, 76.9779, 0.23", "560.337, 338.233, 77.4491, 0.2448", "561.281, 338.847, 77.9346, 0.2612", "562.235, 339.444, 78.4356, 0.28", "563.247, 339.966, 78.6993, 0.2918", "564.259, 340.489, 78.9631, 0.3034", "565.254, 341.031, 79.3377, 0.2944", "566.247, 341.577, 79.7289, 0.2824", "567.241, 342.119, 80.1192, 0.2676", "568.251, 342.625, 80.4944, 0.2518", "569.353, 342.912, 80.782, 0.2352", "570.451, 343.222, 80.96, 0.2288", "571.547, 343.544, 81.0695, 0.2288", "572.644, 343.868, 81.179, 0.2288", "573.74, 344.192, 81.2885, 0.2288", "574.863, 344.36, 81.4108, 0.2288", "576.004, 344.431, 81.5419, 0.2288", "577.143, 344.4, 81.6281, 0.2288", "578.282, 344.286, 81.6791, 0.2288", "579.42, 344.177, 81.711, 0.2288", "580.559, 344.076, 81.6995, 0.2288", "581.694, 344.137, 81.4484, 0.2288", "582.81, 344.061, 81.1507, 0.2288", "583.871, 343.669, 80.8903, 0.2288", "584.826, 343.043, 80.7419, 0.2288", "585.872, 342.787, 80.6005, 0.2288", "586.92, 343.159, 80.5605, 0.2288", "587.882, 343.778, 80.6114, 0.2288", "588.843, 344.397, 80.6624, 0.2288", "589.821, 344.988, 80.6481, 0.2288", "590.794, 345.581, 80.936, 0.2288", "591.821, 346.053, 81.216, 0.2288", "592.886, 346.453, 81.4797, 0.2288", "593.945, 346.829, 81.7099, 0.2288", "595.081, 346.932, 81.8728, 0.2288", "596.162, 347.263, 81.9896, 0.2288", "597.24, 347.641, 82.0126, 0.2288", "598.331, 347.982, 82.0126, 0.2288", "599.42, 347.721, 82.0126, 0.2288", "600.456, 347.267, 82.0126, 0.2386", "601.365, 346.573, 82.0126, 0.272", "602.127, 345.727, 82.0126, 0.3304" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_17", "dend_0", "dend_30", "dend_23", "dend_19", "dend_18", "dend_16", "dend_4", "dend_1", "dend_32", "dend_31", "dend_27", "dend_24", "dend_21", "dend_20", "dend_8", "dend_5", "dend_3", "dend_2", "dend_29", "dend_28", "dend_26", "dend_25", "dend_13", "dend_12", "dend_9", "dend_7", "dend_6", "dend_15", "dend_14", "dend_11", "dend_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16665",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.2075875"
  }, {
    "group" : "axon",
    "value" : "2.2075875"
  }, {
    "group" : "dend",
    "value" : "2.2075875"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "294.5774"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.007334181",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.8459915E-9",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.26291898",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0019604145",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.1290944E-4",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.816969E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.1475618E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.041603353",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.897852E-4",
    "erev" : "-80.975494"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.696629E-4",
    "erev" : "-80.975494"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.20465105E-4",
    "erev" : "-80.975494"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.8574013E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009555961",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472450023",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472450023

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_8
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_22, dend_17, dend_0, dend_30, dend_23, dend_19, dend_18, dend_16, dend_4, dend_1, dend_32, dend_31, dend_27, dend_24, dend_21, dend_20, dend_8, dend_5, dend_3, dend_2, dend_29, dend_28, dend_26, dend_25, dend_13, dend_12, dend_9, dend_7, dend_6, dend_15, dend_14, dend_11, dend_10]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_16665, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_16665
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472450023
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000023)
    connect dend_22(0), soma_0(0.5000000000000023)
    connect dend_17(0), soma_0(0.5000000000000023)
    connect dend_0(0), soma_0(0.5000000000000023)
    connect axon_1(0), axon_0(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_8(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 421.553, 352.823, 25.1663, 12.094 ) }
    soma_0 { pt3dadd( 427.6, 352.823, 25.1663, 12.094 ) }
    soma_0 { pt3dadd( 433.647, 352.823, 25.1663, 12.094 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 427.6, 352.823, 25.1663, 1.0 ) }
    axon_0 { pt3dadd( 433.441, 366.639, 25.1663, 1.0 ) }
    axon_0 { pt3dadd( 439.283, 380.455, 25.1663, 1.0 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 426.404, 358.384, 23.7021, 0.9804 ) }
    dend_22 { pt3dadd( 426.695, 359.468, 23.4756, 0.754 ) }
    dend_22 { pt3dadd( 427.23, 360.475, 23.3803, 0.8534 ) }
    dend_22 { pt3dadd( 427.62, 361.546, 23.1758, 0.9344 ) }
    dend_22 { pt3dadd( 427.97, 362.63, 22.9243, 0.964 ) }
    dend_22 { pt3dadd( 428.509, 363.632, 22.663, 0.8956 ) }
    dend_22 { pt3dadd( 429.093, 364.605, 22.3174, 0.769 ) }
    dend_22 { pt3dadd( 429.573, 365.628, 21.8775, 0.661 ) }
    dend_22 { pt3dadd( 430.373, 366.435, 21.5522, 0.6102 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 15/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 424.711, 348.18, 27.3772, 0.7928 ) }
    dend_17 { pt3dadd( 424.021, 347.269, 27.3934, 0.7202 ) }
    dend_17 { pt3dadd( 423.253, 346.423, 27.3788, 0.8982 ) }
    dend_17 { pt3dadd( 422.597, 345.486, 27.3598, 1.0304 ) }
    dend_17 { pt3dadd( 422.143, 344.439, 27.3311, 1.1344 ) }
    dend_17 { pt3dadd( 421.775, 343.356, 27.2877, 1.167 ) }
    dend_17 { pt3dadd( 421.504, 342.245, 27.228, 1.1694 ) }
    dend_17 { pt3dadd( 420.959, 341.245, 27.1512, 1.1234 ) }
    dend_17 { pt3dadd( 420.539, 340.183, 27.0444, 1.1186 ) }
    dend_17 { pt3dadd( 420.072, 339.142, 26.8361, 1.0222 ) }
    dend_17 { pt3dadd( 419.715, 338.062, 26.5541, 0.8644 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 431.497, 349.365, 26.7781, 0.6218 ) }
    dend_0 { pt3dadd( 432.117, 348.456, 27.4779, 0.3788 ) }
    dend_0 { pt3dadd( 433.054, 347.867, 28.1428, 0.5028 ) }
    dend_0 { pt3dadd( 433.923, 347.143, 28.5622, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 30/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 439.283, 380.455, 25.1663, 1.0 ) }
    axon_1 { pt3dadd( 445.124, 394.271, 25.1663, 1.0 ) }
    axon_1 { pt3dadd( 450.965, 408.087, 25.1663, 1.0 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 33/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 430.373, 366.435, 21.5522, 0.6102 ) }
    dend_30 { pt3dadd( 430.449, 367.098, 20.9621, 0.6264 ) }
    dend_30 { pt3dadd( 430.206, 368.144, 20.28, 0.6696 ) }
    dend_30 { pt3dadd( 429.921, 369.234, 19.8903, 0.7234 ) }
    dend_30 { pt3dadd( 429.651, 370.341, 19.6769, 0.7764 ) }
    dend_30 { pt3dadd( 429.373, 371.45, 19.5464, 0.808 ) }
    dend_30 { pt3dadd( 428.859, 372.461, 19.4487, 0.7934 ) }
    dend_30 { pt3dadd( 428.243, 373.424, 19.4053, 0.727 ) }
    dend_30 { pt3dadd( 427.859, 374.494, 19.3629, 0.6298 ) }
    dend_30 { pt3dadd( 428.168, 375.549, 19.1714, 0.632 ) }
    dend_30 { pt3dadd( 428.886, 376.417, 18.7951, 0.682 ) }
    dend_30 { pt3dadd( 429.564, 377.318, 18.3225, 0.7588 ) }
    dend_30 { pt3dadd( 430.31, 378.156, 17.7822, 0.7118 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 430.373, 366.435, 21.5522, 0.6102 ) }
    dend_23 { pt3dadd( 431.311, 366.732, 21.4255, 0.5876 ) }
    dend_23 { pt3dadd( 432.411, 367.041, 21.3179, 0.7236 ) }
    dend_23 { pt3dadd( 433.55, 367.09, 21.1807, 0.9048 ) }
    dend_23 { pt3dadd( 434.686, 367.222, 21.093, 0.9888 ) }
    dend_23 { pt3dadd( 435.817, 367.392, 21.0719, 0.9914 ) }
    dend_23 { pt3dadd( 436.934, 367.639, 21.0137, 0.9164 ) }
    dend_23 { pt3dadd( 438.074, 367.718, 20.9448, 0.839 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 419.715, 338.062, 26.5541, 0.8644 ) }
    dend_19 { pt3dadd( 419.15, 336.921, 26.3941, 0.6838 ) }
    dend_19 { pt3dadd( 418.488, 335.992, 26.3459, 0.683 ) }
    dend_19 { pt3dadd( 417.737, 335.133, 26.5159, 0.7092 ) }
    dend_19 { pt3dadd( 417.058, 334.225, 26.8777, 0.7826 ) }
    dend_19 { pt3dadd( 416.39, 333.318, 27.3606, 0.8596 ) }
    dend_19 { pt3dadd( 415.548, 332.578, 27.9037, 0.9124 ) }
    dend_19 { pt3dadd( 414.702, 331.844, 28.4732, 0.891 ) }
    dend_19 { pt3dadd( 414.074, 330.919, 29.0553, 0.8652 ) }
    dend_19 { pt3dadd( 413.469, 329.97, 29.5445, 0.8154 ) }
    dend_19 { pt3dadd( 412.644, 329.202, 30.014, 0.714 ) }
    dend_19 { pt3dadd( 412.094, 328.215, 30.4237, 0.637 ) }
    dend_19 { pt3dadd( 411.926, 327.091, 30.7345, 0.536 ) }
    dend_19 { pt3dadd( 411.515, 326.03, 30.9764, 0.5586 ) }
    dend_19 { pt3dadd( 410.913, 325.061, 31.1822, 0.5344 ) }
    dend_19 { pt3dadd( 410.096, 324.266, 31.3928, 0.6576 ) }
    dend_19 { pt3dadd( 409.16, 323.62, 31.694, 0.7116 ) }
    dend_19 { pt3dadd( 408.281, 322.901, 32.0219, 0.7372 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 419.715, 338.062, 26.5541, 0.8644 ) }
    dend_18 { pt3dadd( 418.931, 336.765, 24.3679, 0.601 ) }
    dend_18 { pt3dadd( 418.068, 336.309, 23.0992, 0.6142 ) }
    dend_18 { pt3dadd( 417.001, 336.111, 22.2961, 0.6162 ) }
    dend_18 { pt3dadd( 415.992, 335.697, 21.545, 0.5664 ) }
    dend_18 { pt3dadd( 415.022, 335.195, 20.7096, 0.4866 ) }
    dend_18 { pt3dadd( 414.004, 334.802, 19.9599, 0.4838 ) }
    dend_18 { pt3dadd( 413.602, 333.771, 19.2704, 0.513 ) }
    dend_18 { pt3dadd( 413.327, 332.689, 18.7089, 0.562 ) }
    dend_18 { pt3dadd( 412.73, 331.727, 18.4322, 0.596 ) }
    dend_18 { pt3dadd( 411.951, 330.894, 18.2458, 0.6298 ) }
    dend_18 { pt3dadd( 411.155, 330.087, 17.9638, 0.604 ) }
    dend_18 { pt3dadd( 410.211, 329.511, 17.3905, 0.5492 ) }
    dend_18 { pt3dadd( 409.164, 329.207, 16.549, 0.459 ) }
    dend_18 { pt3dadd( 408.808, 328.582, 15.7561, 0.4322 ) }
    dend_18 { pt3dadd( 409.473, 327.884, 14.6237, 0.536 ) }
    dend_18 { pt3dadd( 409.343, 327.011, 13.6207, 0.4008 ) }
    dend_18 { pt3dadd( 410.395, 326.664, 12.9247, 0.3286 ) }
    dend_18 { pt3dadd( 410.595, 325.826, 12.154, 0.305 ) }
    dend_18 { pt3dadd( 410.105, 324.873, 11.2659, 0.2808 ) }
    dend_18 { pt3dadd( 410.998, 324.26, 10.7939, 0.3008 ) }
    dend_18 { pt3dadd( 412.055, 323.857, 10.4566, 0.3278 ) }
    dend_18 { pt3dadd( 413.134, 323.499, 10.1458, 0.356 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 95/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 433.923, 347.143, 28.5622, 0.9152 ) }
    dend_16 { pt3dadd( 434.38, 347.872, 27.8597, 0.6652 ) }
    dend_16 { pt3dadd( 434.958, 348.792, 26.9741, 0.3502 ) }
    dend_16 { pt3dadd( 435.487, 349.601, 25.557, 0.2288 ) }
    dend_16 { pt3dadd( 435.746, 350.486, 24.0733, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_16 { pt3dadd( 435.171, 351.345, 22.9991, 0.2288 ) }
    dend_16 { pt3dadd( 434.566, 352.184, 22.2796, 0.2288 ) }
    dend_16 { pt3dadd( 433.563, 352.702, 21.8162, 0.2288 ) }
    dend_16 { pt3dadd( 434.122, 353.343, 20.3695, 0.2288 ) }
    dend_16 { pt3dadd( 435.071, 353.692, 19.0782, 0.2288 ) }
    dend_16 { pt3dadd( 435.254, 354.656, 17.8862, 0.2288 ) }
    dend_16 { pt3dadd( 435.149, 355.739, 17.2026, 0.2288 ) }
    dend_16 { pt3dadd( 435.331, 356.76, 16.3305, 0.2288 ) }
    dend_16 { pt3dadd( 436.188, 356.405, 15.566, 0.2288 ) }
    dend_16 { pt3dadd( 436.983, 355.644, 14.8964, 0.2288 ) }
    dend_16 { pt3dadd( 437.88, 355.431, 13.6963, 0.2288 ) }
    dend_16 { pt3dadd( 438.683, 355.016, 12.489, 0.2288 ) }
    dend_16 { pt3dadd( 439.516, 354.483, 11.2538, 0.2288 ) }
    dend_16 { pt3dadd( 440.511, 354.147, 10.1458, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 433.923, 347.143, 28.5622, 0.9152 ) }
    dend_4 { pt3dadd( 434.718, 347.074, 28.9719, 0.5994 ) }
    dend_4 { pt3dadd( 435.747, 346.631, 29.3863, 0.6658 ) }
    dend_4 { pt3dadd( 436.675, 345.973, 29.6562, 0.7742 ) }
    dend_4 { pt3dadd( 437.415, 345.112, 29.8648, 0.832 ) }
    dend_4 { pt3dadd( 437.869, 344.072, 30.0902, 0.839 ) }
    dend_4 { pt3dadd( 437.834, 342.947, 30.3436, 0.8168 ) }
    dend_4 { pt3dadd( 437.951, 341.815, 30.5379, 0.7682 ) }
    dend_4 { pt3dadd( 438.678, 340.967, 30.7829, 0.7398 ) }
    dend_4 { pt3dadd( 439.68, 340.45, 31.1335, 0.7146 ) }
    dend_4 { pt3dadd( 440.745, 340.138, 31.7926, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 25/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 433.923, 347.143, 28.5622, 0.9152 ) }
    dend_1 { pt3dadd( 434.889, 346.819, 26.609, 0.6424 ) }
    dend_1 { pt3dadd( 435.983, 346.709, 26.0451, 0.7516 ) }
    dend_1 { pt3dadd( 437.101, 346.48, 25.8938, 0.8582 ) }
    dend_1 { pt3dadd( 438.229, 346.29, 25.8882, 0.9136 ) }
    dend_1 { pt3dadd( 439.367, 346.173, 25.9412, 1.0144 ) }
    dend_1 { pt3dadd( 440.441, 345.784, 25.9848, 1.0916 ) }
    dend_1 { pt3dadd( 441.568, 345.59, 26.006, 1.143 ) }
    dend_1 { pt3dadd( 442.711, 345.529, 25.999, 1.144 ) }
    dend_1 { pt3dadd( 443.845, 345.378, 25.935, 1.119 ) }
    dend_1 { pt3dadd( 444.986, 345.355, 25.8066, 1.0936 ) }
    dend_1 { pt3dadd( 446.122, 345.25, 25.5746, 1.0176 ) }
    dend_1 { pt3dadd( 447.146, 344.763, 25.2344, 0.8882 ) }
    dend_1 { pt3dadd( 448.218, 344.386, 24.8956, 0.661 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 39/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 430.31, 378.156, 17.7822, 0.7118 ) }
    dend_32 { pt3dadd( 429.478, 379.314, 16.6793, 0.5002 ) }
    dend_32 { pt3dadd( 429.233, 380.38, 16.8277, 0.4156 ) }
    dend_32 { pt3dadd( 429.317, 381.518, 16.9032, 0.4662 ) }
    dend_32 { pt3dadd( 429.644, 382.608, 16.7877, 0.507 ) }
    dend_32 { pt3dadd( 429.467, 383.731, 16.6762, 0.4316 ) }
    dend_32 { pt3dadd( 429.792, 384.818, 16.3926, 0.356 ) }
    dend_32 { pt3dadd( 429.683, 385.8, 16.1364, 0.439 ) }
    dend_32 { pt3dadd( 429.72, 386.926, 15.7651, 0.4966 ) }
    dend_32 { pt3dadd( 430.38, 387.702, 16.1568, 0.4322 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 49/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 430.31, 378.156, 17.7822, 0.7118 ) }
    dend_31 { pt3dadd( 430.706, 378.893, 17.4174, 0.4332 ) }
    dend_31 { pt3dadd( 431.198, 379.922, 17.2449, 0.4862 ) }
    dend_31 { pt3dadd( 431.83, 380.874, 17.1901, 0.587 ) }
    dend_31 { pt3dadd( 432.204, 381.954, 17.19, 0.6414 ) }
    dend_31 { pt3dadd( 432.486, 383.063, 17.1683, 0.7388 ) }
    dend_31 { pt3dadd( 432.971, 384.098, 17.1161, 0.761 ) }
    dend_31 { pt3dadd( 433.571, 385.069, 17.0147, 0.7322 ) }
    dend_31 { pt3dadd( 434.324, 385.928, 16.8644, 0.6558 ) }
    dend_31 { pt3dadd( 435.112, 386.752, 16.6544, 0.5812 ) }
    dend_31 { pt3dadd( 435.792, 387.656, 16.2903, 0.5212 ) }
    dend_31 { pt3dadd( 436.132, 388.699, 15.847, 0.419 ) }
    dend_31 { pt3dadd( 435.81, 389.775, 15.474, 0.351 ) }
    dend_31 { pt3dadd( 435.294, 390.759, 15.1637, 0.3408 ) }
    dend_31 { pt3dadd( 435.414, 391.838, 14.8613, 0.3996 ) }
    dend_31 { pt3dadd( 436.167, 392.686, 14.6676, 0.4774 ) }
    dend_31 { pt3dadd( 437.04, 393.423, 14.6317, 0.5408 ) }
    dend_31 { pt3dadd( 437.756, 394.302, 14.6355, 0.552 ) }
    dend_31 { pt3dadd( 438.28, 395.319, 14.593, 0.5114 ) }
    dend_31 { pt3dadd( 438.782, 396.347, 14.5545, 0.4426 ) }
    dend_31 { pt3dadd( 439.448, 397.243, 14.5336, 0.4068 ) }
    dend_31 { pt3dadd( 440.424, 397.831, 14.4327, 0.4148 ) }
    dend_31 { pt3dadd( 441.431, 398.353, 14.2092, 0.4406 ) }
    dend_31 { pt3dadd( 442.278, 399.094, 13.8808, 0.4394 ) }
    dend_31 { pt3dadd( 443.063, 399.899, 13.5485, 0.3782 ) }
    dend_31 { pt3dadd( 444.022, 400.508, 13.2633, 0.3208 ) }
    dend_31 { pt3dadd( 444.953, 401.141, 12.9762, 0.3344 ) }
    dend_31 { pt3dadd( 445.765, 401.94, 12.721, 0.4204 ) }
    dend_31 { pt3dadd( 446.596, 402.719, 12.4647, 0.4932 ) }
    dend_31 { pt3dadd( 447.492, 403.419, 12.2077, 0.4766 ) }
    dend_31 { pt3dadd( 448.434, 404.061, 12.011, 0.411 ) }
    dend_31 { pt3dadd( 449.248, 404.839, 11.8676, 0.3814 ) }
    dend_31 { pt3dadd( 449.783, 405.839, 11.7781, 0.414 ) }
    dend_31 { pt3dadd( 450.183, 406.909, 11.724, 0.4904 ) }
    dend_31 { pt3dadd( 450.652, 407.952, 11.6666, 0.5448 ) }
    dend_31 { pt3dadd( 451.082, 409.004, 11.5702, 0.5478 ) }
    dend_31 { pt3dadd( 451.286, 410.123, 11.4202, 0.5046 ) }
    dend_31 { pt3dadd( 451.775, 411.111, 11.3373, 0.483 ) }
    dend_31 { pt3dadd( 451.738, 412.175, 11.1944, 0.598 ) }
    dend_31 { pt3dadd( 452.565, 412.966, 11.197, 0.717 ) }
    dend_31 { pt3dadd( 453.343, 413.79, 11.2709, 0.7788 ) }
    dend_31 { pt3dadd( 454.122, 414.583, 11.3973, 0.751 ) }
    dend_31 { pt3dadd( 455.143, 415.084, 11.6479, 0.6614 ) }
    dend_31 { pt3dadd( 455.613, 415.979, 11.8682, 0.5264 ) }
    dend_31 { pt3dadd( 456.138, 416.982, 12.0392, 0.3822 ) }
    dend_31 { pt3dadd( 457.178, 417.411, 12.403, 0.3354 ) }
    dend_31 { pt3dadd( 458.155, 417.896, 12.9946, 0.3838 ) }
    dend_31 { pt3dadd( 459.12, 418.437, 13.3855, 0.44 ) }
    dend_31 { pt3dadd( 460.175, 418.704, 13.7115, 0.4348 ) }
    dend_31 { pt3dadd( 460.478, 419.731, 13.385, 0.4068 ) }
    dend_31 { pt3dadd( 461.203, 420.512, 13.0297, 0.4458 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( 461.957, 421.293, 13.3201, 0.5436 ) }
    dend_31 { pt3dadd( 463.026, 421.659, 13.6755, 0.5592 ) }
    dend_31 { pt3dadd( 464.076, 422.099, 13.8681, 0.5238 ) }
    dend_31 { pt3dadd( 465.165, 422.059, 13.9354, 0.5296 ) }
    dend_31 { pt3dadd( 466.294, 422.136, 13.72, 0.5592 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 5/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 438.074, 367.718, 20.9448, 0.839 ) }
    dend_27 { pt3dadd( 438.912, 366.872, 19.8457, 0.3914 ) }
    dend_27 { pt3dadd( 439.52, 365.954, 19.498, 0.2288 ) }
    dend_27 { pt3dadd( 440.161, 365.012, 19.5418, 0.2288 ) }
    dend_27 { pt3dadd( 440.87, 364.115, 19.5986, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 438.074, 367.718, 20.9448, 0.839 ) }
    dend_24 { pt3dadd( 439.003, 367.531, 20.915, 0.733 ) }
    dend_24 { pt3dadd( 440.138, 367.398, 20.9123, 0.6048 ) }
    dend_24 { pt3dadd( 441.246, 367.634, 21.0007, 0.5174 ) }
    dend_24 { pt3dadd( 442.083, 368.391, 21.0516, 0.5536 ) }
    dend_24 { pt3dadd( 443.032, 369.023, 21.0274, 0.6724 ) }
    dend_24 { pt3dadd( 444.039, 369.561, 20.841, 0.7806 ) }
    dend_24 { pt3dadd( 445.146, 369.782, 20.4537, 0.8126 ) }
    dend_24 { pt3dadd( 446.247, 370.063, 20.1277, 0.7364 ) }
    dend_24 { pt3dadd( 447.385, 370.084, 19.8673, 0.61 ) }
    dend_24 { pt3dadd( 448.527, 370.085, 19.68, 0.5338 ) }
    dend_24 { pt3dadd( 449.669, 370.093, 19.5028, 0.5094 ) }
    dend_24 { pt3dadd( 450.81, 370.15, 19.4134, 0.5592 ) }
    dend_24 { pt3dadd( 451.921, 370.418, 19.5168, 0.556 ) }
    dend_24 { pt3dadd( 452.988, 370.817, 19.6835, 0.501 ) }
    dend_24 { pt3dadd( 453.921, 371.457, 19.9247, 0.3992 ) }
    dend_24 { pt3dadd( 454.465, 372.437, 20.1248, 0.3336 ) }
    dend_24 { pt3dadd( 454.563, 373.555, 20.2287, 0.3742 ) }
    dend_24 { pt3dadd( 455.267, 374.357, 20.3667, 0.496 ) }
    dend_24 { pt3dadd( 456.383, 374.421, 20.489, 0.6316 ) }
    dend_24 { pt3dadd( 457.468, 374.067, 20.6109, 0.7084 ) }
    dend_24 { pt3dadd( 458.538, 373.669, 20.7519, 0.7702 ) }
    dend_24 { pt3dadd( 459.634, 373.345, 20.8717, 0.812 ) }
    dend_24 { pt3dadd( 460.729, 373.014, 20.8946, 0.848 ) }
    dend_24 { pt3dadd( 461.821, 372.679, 20.8516, 0.7794 ) }
    dend_24 { pt3dadd( 462.941, 372.521, 20.7984, 0.6588 ) }
    dend_24 { pt3dadd( 464.081, 372.619, 20.7413, 0.5318 ) }
    dend_24 { pt3dadd( 465.217, 372.752, 20.6856, 0.483 ) }
    dend_24 { pt3dadd( 466.292, 373.07, 20.6385, 0.504 ) }
    dend_24 { pt3dadd( 467.302, 373.605, 20.5976, 0.5656 ) }
    dend_24 { pt3dadd( 468.372, 373.987, 20.5493, 0.621 ) }
    dend_24 { pt3dadd( 469.502, 374.109, 20.4861, 0.6356 ) }
    dend_24 { pt3dadd( 470.622, 373.943, 20.3881, 0.6244 ) }
    dend_24 { pt3dadd( 471.72, 373.633, 20.2237, 0.6348 ) }
    dend_24 { pt3dadd( 472.841, 373.574, 20.029, 0.6872 ) }
    dend_24 { pt3dadd( 473.978, 373.69, 19.8679, 0.725 ) }
    dend_24 { pt3dadd( 475.118, 373.701, 19.7523, 0.7108 ) }
    dend_24 { pt3dadd( 476.255, 373.591, 19.6783, 0.6466 ) }
    dend_24 { pt3dadd( 477.391, 373.589, 19.6419, 0.5688 ) }
    dend_24 { pt3dadd( 478.461, 373.94, 19.6372, 0.491 ) }
    dend_24 { pt3dadd( 479.509, 374.393, 19.649, 0.443 ) }
    dend_24 { pt3dadd( 480.622, 374.6, 19.6643, 0.447 ) }
    dend_24 { pt3dadd( 481.759, 374.542, 19.6846, 0.4726 ) }
    dend_24 { pt3dadd( 482.898, 374.467, 19.7455, 0.4676 ) }
    dend_24 { pt3dadd( 484.012, 374.661, 19.8231, 0.4414 ) }
    dend_24 { pt3dadd( 485.137, 374.833, 19.8242, 0.4752 ) }
    dend_24 { pt3dadd( 486.273, 374.742, 19.6655, 0.5848 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 408.281, 322.901, 32.0219, 0.7372 ) }
    dend_21 { pt3dadd( 408.493, 321.578, 32.557, 0.4102 ) }
    dend_21 { pt3dadd( 408.716, 320.466, 32.9263, 0.4766 ) }
    dend_21 { pt3dadd( 408.845, 319.34, 33.2245, 0.5466 ) }
    dend_21 { pt3dadd( 408.86, 318.203, 33.5149, 0.5894 ) }
    dend_21 { pt3dadd( 408.789, 317.084, 34.0239, 0.545 ) }
    dend_21 { pt3dadd( 408.365, 316.065, 34.5346, 0.4692 ) }
    dend_21 { pt3dadd( 408.04, 314.997, 34.8645, 0.416 ) }
    dend_21 { pt3dadd( 408.099, 313.879, 35.229, 0.3886 ) }
    dend_21 { pt3dadd( 408.044, 312.751, 35.5043, 0.3618 ) }
    dend_21 { pt3dadd( 407.747, 311.654, 35.7342, 0.3344 ) }
    dend_21 { pt3dadd( 406.997, 310.813, 35.7501, 0.3544 ) }
    dend_21 { pt3dadd( 406.44, 309.82, 35.5807, 0.4094 ) }
    dend_21 { pt3dadd( 405.753, 308.918, 35.2831, 0.4576 ) }
    dend_21 { pt3dadd( 405.398, 307.893, 35.4578, 0.4814 ) }
    dend_21 { pt3dadd( 405.159, 306.805, 35.5354, 0.5582 ) }
    dend_21 { pt3dadd( 405.395, 305.7, 35.7353, 0.631 ) }
    dend_21 { pt3dadd( 405.586, 304.648, 36.4658, 0.6836 ) }
    dend_21 { pt3dadd( 405.919, 303.581, 36.9793, 0.6606 ) }
    dend_21 { pt3dadd( 406.278, 302.529, 37.592, 0.6316 ) }
    dend_21 { pt3dadd( 406.531, 301.574, 38.9239, 0.5492 ) }
    dend_21 { pt3dadd( 406.88, 300.573, 39.9417, 0.4832 ) }
    dend_21 { pt3dadd( 407.583, 299.737, 40.6798, 0.4836 ) }
    dend_21 { pt3dadd( 407.264, 298.681, 41.3084, 0.5134 ) }
    dend_21 { pt3dadd( 406.951, 297.731, 41.8984, 0.5524 ) }
    dend_21 { pt3dadd( 407.242, 296.664, 42.516, 0.6188 ) }
    dend_21 { pt3dadd( 407.614, 295.645, 43.2922, 0.6316 ) }
    dend_21 { pt3dadd( 407.642, 294.507, 43.5714, 0.5474 ) }
    dend_21 { pt3dadd( 407.67, 293.365, 43.6904, 0.4882 ) }
    dend_21 { pt3dadd( 407.584, 292.233, 43.8329, 0.5084 ) }
    dend_21 { pt3dadd( 407.275, 291.131, 43.9118, 0.5008 ) }
    dend_21 { pt3dadd( 407.008, 290.027, 43.876, 0.4454 ) }
    dend_21 { pt3dadd( 406.996, 288.889, 43.6948, 0.3564 ) }
    dend_21 { pt3dadd( 406.794, 287.797, 43.5806, 0.3304 ) }
    dend_21 { pt3dadd( 406.53, 286.688, 43.5375, 0.3574 ) }
    dend_21 { pt3dadd( 406.234, 285.608, 43.3521, 0.3814 ) }
    dend_21 { pt3dadd( 406.152, 284.47, 43.4095, 0.3702 ) }
    dend_21 { pt3dadd( 406.019, 283.337, 43.4871, 0.356 ) }
    dend_21 { pt3dadd( 405.978, 282.196, 43.6346, 0.356 ) }
    dend_21 { pt3dadd( 406.06, 281.061, 43.8388, 0.3882 ) }
    dend_21 { pt3dadd( 406.278, 279.941, 44.0322, 0.4236 ) }
    dend_21 { pt3dadd( 406.495, 278.82, 44.1286, 0.4514 ) }
    dend_21 { pt3dadd( 406.413, 277.695, 44.2562, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( 407.04, 276.75, 44.5774, 0.4576 ) }
    dend_21 { pt3dadd( 407.64, 275.799, 44.709, 0.4576 ) }
    dend_21 { pt3dadd( 407.918, 274.748, 44.8417, 0.4578 ) }
    dend_21 { pt3dadd( 408.645, 273.87, 44.9635, 0.4838 ) }
    dend_21 { pt3dadd( 408.868, 272.757, 45.2012, 0.5084 ) }
    dend_21 { pt3dadd( 408.922, 271.619, 45.446, 0.499 ) }
    dend_21 { pt3dadd( 408.922, 270.484, 45.6854, 0.4708 ) }
    dend_21 { pt3dadd( 408.557, 269.425, 45.8332, 0.4804 ) }
    dend_21 { pt3dadd( 408.242, 268.328, 45.8982, 0.4578 ) }
    dend_21 { pt3dadd( 407.941, 267.254, 46.0001, 0.4522 ) }
    dend_21 { pt3dadd( 407.329, 266.337, 46.128, 0.4574 ) }
    dend_21 { pt3dadd( 407.075, 265.228, 46.3123, 0.483 ) }
    dend_21 { pt3dadd( 406.742, 264.144, 46.5486, 0.463 ) }
    dend_21 { pt3dadd( 406.216, 263.136, 46.8124, 0.408 ) }
    dend_21 { pt3dadd( 405.371, 262.375, 47.0868, 0.3814 ) }
    dend_21 { pt3dadd( 404.456, 261.695, 47.2769, 0.3814 ) }
    dend_21 { pt3dadd( 403.555, 260.991, 47.3091, 0.3814 ) }
    dend_21 { pt3dadd( 402.809, 260.135, 47.3337, 0.3814 ) }
    dend_21 { pt3dadd( 401.945, 259.519, 47.5353, 0.3814 ) }
    dend_21 { pt3dadd( 401.148, 258.897, 48.1054, 0.4062 ) }
    dend_21 { pt3dadd( 400.323, 258.132, 48.594, 0.4322 ) }
    dend_21 { pt3dadd( 399.572, 257.284, 48.9779, 0.424 ) }
    dend_21 { pt3dadd( 398.781, 256.492, 49.4458, 0.3456 ) }
    dend_21 { pt3dadd( 398.262, 255.505, 50.083, 0.2694 ) }
    dend_21 { pt3dadd( 397.776, 254.517, 50.8374, 0.2288 ) }
    dend_21 { pt3dadd( 397.294, 253.537, 51.669, 0.2288 ) }
    dend_21 { pt3dadd( 396.817, 252.562, 52.5535, 0.2288 ) }
    dend_21 { pt3dadd( 396.338, 251.587, 53.4352, 0.2288 ) }
    dend_21 { pt3dadd( 395.807, 250.633, 54.2438, 0.2288 ) }
    dend_21 { pt3dadd( 395.126, 249.756, 54.8702, 0.2288 ) }
    dend_21 { pt3dadd( 394.256, 249.062, 55.2762, 0.2288 ) }
    dend_21 { pt3dadd( 393.184, 248.745, 55.5248, 0.2288 ) }
    dend_21 { pt3dadd( 392.047, 248.639, 55.6545, 0.2288 ) }
    dend_21 { pt3dadd( 390.939, 248.381, 55.7077, 0.2288 ) }
    dend_21 { pt3dadd( 389.945, 247.844, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 389.016, 247.18, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 387.951, 246.887, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 387.012, 246.405, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 386.119, 245.699, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 385.125, 245.133, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 384.331, 244.314, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 383.481, 243.548, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 382.594, 242.828, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 382.064, 241.815, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 381.982, 240.675, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 381.982, 239.531, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 381.978, 238.387, 55.72, 0.2794 ) }
    dend_21 { pt3dadd( 381.753, 237.266, 55.72, 0.356 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 408.281, 322.901, 32.0219, 0.7372 ) }
    dend_20 { pt3dadd( 407.095, 322.656, 33.2542, 0.4766 ) }
    dend_20 { pt3dadd( 406.039, 322.976, 33.6647, 0.5138 ) }
    dend_20 { pt3dadd( 404.899, 322.981, 33.7389, 0.5338 ) }
    dend_20 { pt3dadd( 403.798, 323.247, 33.7072, 0.5234 ) }
    dend_20 { pt3dadd( 402.728, 323.651, 33.6972, 0.4968 ) }
    dend_20 { pt3dadd( 401.615, 323.874, 33.7341, 0.471 ) }
    dend_20 { pt3dadd( 400.481, 324.003, 33.8752, 0.4712 ) }
    dend_20 { pt3dadd( 399.465, 324.165, 34.7665, 0.5338 ) }
    dend_20 { pt3dadd( 398.47, 323.766, 35.595, 0.5474 ) }
    dend_20 { pt3dadd( 397.509, 323.441, 36.7094, 0.5616 ) }
    dend_20 { pt3dadd( 396.431, 323.205, 37.4097, 0.6322 ) }
    dend_20 { pt3dadd( 395.326, 323.371, 37.9358, 0.5764 ) }
    dend_20 { pt3dadd( 394.316, 323.885, 38.3141, 0.4928 ) }
    dend_20 { pt3dadd( 393.305, 324.306, 38.738, 0.4534 ) }
    dend_20 { pt3dadd( 392.309, 323.988, 39.384, 0.5662 ) }
    dend_20 { pt3dadd( 391.249, 324.087, 40.0988, 0.6102 ) }
    dend_20 { pt3dadd( 390.145, 324.103, 40.472, 0.5902 ) }
    dend_20 { pt3dadd( 389.01, 324.117, 40.7632, 0.5362 ) }
    dend_20 { pt3dadd( 388.205, 323.483, 40.7305, 0.4018 ) }
    dend_20 { pt3dadd( 387.086, 323.512, 40.7702, 0.3344 ) }
    dend_20 { pt3dadd( 385.967, 323.664, 40.8738, 0.3164 ) }
    dend_20 { pt3dadd( 384.849, 323.552, 41.2658, 0.407 ) }
    dend_20 { pt3dadd( 383.841, 323.067, 41.7505, 0.545 ) }
    dend_20 { pt3dadd( 382.835, 322.543, 42.1103, 0.678 ) }
    dend_20 { pt3dadd( 381.711, 322.384, 42.3441, 0.7118 ) }
    dend_20 { pt3dadd( 380.719, 321.832, 42.698, 0.709 ) }
    dend_20 { pt3dadd( 379.698, 321.343, 42.9778, 0.6864 ) }
    dend_20 { pt3dadd( 378.587, 321.08, 43.0248, 0.6864 ) }
    dend_20 { pt3dadd( 377.491, 320.756, 43.1491, 0.656 ) }
    dend_20 { pt3dadd( 376.363, 320.629, 43.3216, 0.5778 ) }
    dend_20 { pt3dadd( 375.286, 320.296, 43.5974, 0.4918 ) }
    dend_20 { pt3dadd( 374.213, 319.908, 43.7993, 0.508 ) }
    dend_20 { pt3dadd( 373.324, 319.195, 44.0003, 0.611 ) }
    dend_20 { pt3dadd( 372.342, 318.611, 44.1311, 0.7386 ) }
    dend_20 { pt3dadd( 371.309, 318.122, 44.2044, 0.7846 ) }
    dend_20 { pt3dadd( 370.202, 317.837, 44.2361, 0.721 ) }
    dend_20 { pt3dadd( 369.156, 317.431, 44.312, 0.6552 ) }
    dend_20 { pt3dadd( 368.244, 316.789, 44.4926, 0.6502 ) }
    dend_20 { pt3dadd( 367.128, 316.61, 44.7664, 0.6864 ) }
    dend_20 { pt3dadd( 366.016, 316.481, 45.2001, 0.6592 ) }
    dend_20 { pt3dadd( 364.926, 316.371, 45.9214, 0.5778 ) }
    dend_20 { pt3dadd( 363.865, 316.073, 46.5786, 0.5378 ) }
    dend_20 { pt3dadd( 362.792, 315.747, 47.1195, 0.5826 ) }
    dend_20 { pt3dadd( 361.877, 315.084, 47.5154, 0.6372 ) }
    dend_20 { pt3dadd( 361.009, 314.356, 47.8957, 0.6806 ) }
    dend_20 { pt3dadd( 360.068, 313.713, 48.1687, 0.6018 ) }
    dend_20 { pt3dadd( 359.068, 313.322, 48.3818, 0.5222 ) }
    dend_20 { pt3dadd( 358.015, 313.407, 48.6889, 0.4922 ) }
    dend_20 { pt3dadd( 357.004, 312.914, 49.0857, 0.4946 ) }
    dend_20 { pt3dadd( 355.966, 312.445, 49.3074, 0.43 ) }
    dend_20 { pt3dadd( 354.877, 312.127, 49.497, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( 353.75, 311.997, 49.413, 0.3338 ) }
    dend_20 { pt3dadd( 352.633, 312.152, 49.4074, 0.3848 ) }
    dend_20 { pt3dadd( 351.493, 312.109, 49.3534, 0.4668 ) }
    dend_20 { pt3dadd( 350.35, 312.102, 49.3592, 0.539 ) }
    dend_20 { pt3dadd( 349.209, 312.15, 49.2758, 0.5592 ) }
    dend_20 { pt3dadd( 348.068, 312.161, 49.1546, 0.5372 ) }
    dend_20 { pt3dadd( 346.968, 311.87, 48.9846, 0.5792 ) }
    dend_20 { pt3dadd( 345.9, 311.465, 48.907, 0.5848 ) }
    dend_20 { pt3dadd( 344.861, 311.042, 48.7228, 0.562 ) }
    dend_20 { pt3dadd( 343.72, 310.975, 48.841, 0.4954 ) }
    dend_20 { pt3dadd( 342.659, 310.638, 49.0809, 0.4674 ) }
    dend_20 { pt3dadd( 341.683, 310.065, 49.4757, 0.4344 ) }
    dend_20 { pt3dadd( 340.618, 310.391, 49.7188, 0.4014 ) }
    dend_20 { pt3dadd( 339.531, 310.701, 49.9649, 0.3212 ) }
    dend_20 { pt3dadd( 338.388, 310.688, 50.0394, 0.2664 ) }
    dend_20 { pt3dadd( 337.247, 310.713, 50.1021, 0.2356 ) }
    dend_20 { pt3dadd( 336.119, 310.893, 50.1329, 0.2696 ) }
    dend_20 { pt3dadd( 335.068, 311.295, 50.2706, 0.325 ) }
    dend_20 { pt3dadd( 334.072, 311.821, 50.5884, 0.368 ) }
    dend_20 { pt3dadd( 332.976, 312.032, 50.9726, 0.3814 ) }
    dend_20 { pt3dadd( 331.893, 311.774, 51.373, 0.3814 ) }
    dend_20 { pt3dadd( 330.828, 311.373, 51.6482, 0.3626 ) }
    dend_20 { pt3dadd( 330.063, 310.58, 51.954, 0.3352 ) }
    dend_20 { pt3dadd( 329.384, 309.678, 52.4012, 0.3532 ) }
    dend_20 { pt3dadd( 328.454, 309.093, 53.1059, 0.5058 ) }
    dend_20 { pt3dadd( 327.499, 308.524, 53.758, 0.6184 ) }
    dend_20 { pt3dadd( 326.529, 308.003, 54.4289, 0.5812 ) }
    dend_20 { pt3dadd( 325.457, 307.901, 55.1712, 0.4444 ) }
    dend_20 { pt3dadd( 324.353, 307.906, 55.8785, 0.3688 ) }
    dend_20 { pt3dadd( 323.242, 307.856, 56.5396, 0.401 ) }
    dend_20 { pt3dadd( 322.128, 307.694, 57.0189, 0.4294 ) }
    dend_20 { pt3dadd( 321.001, 307.696, 57.4899, 0.5022 ) }
    dend_20 { pt3dadd( 319.977, 307.965, 58.52, 0.5848 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 33/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 440.745, 340.138, 31.7926, 0.6864 ) }
    dend_8 { pt3dadd( 441.849, 340.643, 33.2156, 0.6098 ) }
    dend_8 { pt3dadd( 442.852, 340.973, 34.2588, 0.6166 ) }
    dend_8 { pt3dadd( 443.856, 340.708, 35.2022, 0.6504 ) }
    dend_8 { pt3dadd( 444.738, 340.054, 35.915, 0.6014 ) }
    dend_8 { pt3dadd( 445.392, 339.15, 36.4031, 0.5036 ) }
    dend_8 { pt3dadd( 445.681, 338.07, 36.8298, 0.3778 ) }
    dend_8 { pt3dadd( 446.401, 337.256, 37.4091, 0.3318 ) }
    dend_8 { pt3dadd( 447.487, 337.065, 38.0682, 0.432 ) }
    dend_8 { pt3dadd( 448.517, 336.698, 38.8576, 0.5656 ) }
    dend_8 { pt3dadd( 449.356, 335.974, 39.5508, 0.6598 ) }
    dend_8 { pt3dadd( 450.123, 335.164, 40.1764, 0.6344 ) }
    dend_8 { pt3dadd( 450.807, 334.286, 40.8089, 0.5836 ) }
    dend_8 { pt3dadd( 451.674, 333.581, 41.3874, 0.5334 ) }
    dend_8 { pt3dadd( 452.783, 333.405, 41.9241, 0.5084 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 48/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 440.745, 340.138, 31.7926, 0.6864 ) }
    dend_5 { pt3dadd( 441.229, 338.991, 32.3226, 0.3794 ) }
    dend_5 { pt3dadd( 441.699, 337.959, 32.5836, 0.4676 ) }
    dend_5 { pt3dadd( 442.146, 336.929, 32.6872, 0.5338 ) }
    dend_5 { pt3dadd( 442.217, 335.796, 32.7174, 0.5146 ) }
    dend_5 { pt3dadd( 441.982, 334.688, 32.7197, 0.4512 ) }
    dend_5 { pt3dadd( 441.681, 333.593, 32.7922, 0.3926 ) }
    dend_5 { pt3dadd( 441.995, 332.554, 32.8194, 0.4144 ) }
    dend_5 { pt3dadd( 442.681, 331.648, 32.6418, 0.4688 ) }
    dend_5 { pt3dadd( 443.131, 330.632, 32.1773, 0.5502 ) }
    dend_5 { pt3dadd( 443.186, 329.514, 31.6546, 0.5592 ) }
    dend_5 { pt3dadd( 443.191, 328.386, 31.1875, 0.5592 ) }
    dend_5 { pt3dadd( 443.242, 327.258, 30.7328, 0.5592 ) }
    dend_5 { pt3dadd( 443.453, 326.144, 30.375, 0.5592 ) }
    dend_5 { pt3dadd( 443.626, 325.016, 30.2123, 0.584 ) }
    dend_5 { pt3dadd( 443.68, 323.874, 30.1112, 0.5848 ) }
    dend_5 { pt3dadd( 443.87, 322.746, 30.0101, 0.6618 ) }
    dend_5 { pt3dadd( 444.055, 321.618, 29.9536, 0.7128 ) }
    dend_5 { pt3dadd( 444.117, 320.476, 29.9418, 0.7616 ) }
    dend_5 { pt3dadd( 444.206, 319.335, 29.9622, 0.7106 ) }
    dend_5 { pt3dadd( 444.187, 318.192, 30.0311, 0.6602 ) }
    dend_5 { pt3dadd( 444.133, 317.052, 30.1885, 0.6384 ) }
    dend_5 { pt3dadd( 444.213, 315.913, 30.3556, 0.6898 ) }
    dend_5 { pt3dadd( 444.451, 314.796, 30.49, 0.7372 ) }
    dend_5 { pt3dadd( 444.645, 313.669, 30.5494, 0.7352 ) }
    dend_5 { pt3dadd( 444.886, 312.551, 30.4858, 0.7064 ) }
    dend_5 { pt3dadd( 445.007, 311.415, 30.3677, 0.6578 ) }
    dend_5 { pt3dadd( 445.024, 310.273, 30.2249, 0.6322 ) }
    dend_5 { pt3dadd( 445.08, 309.133, 30.1465, 0.614 ) }
    dend_5 { pt3dadd( 445.237, 308.008, 30.2215, 0.6408 ) }
    dend_5 { pt3dadd( 445.054, 306.887, 30.331, 0.667 ) }
    dend_5 { pt3dadd( 444.643, 305.82, 30.3923, 0.6802 ) }
    dend_5 { pt3dadd( 444.23, 304.754, 30.3694, 0.6408 ) }
    dend_5 { pt3dadd( 443.802, 303.695, 30.3713, 0.5542 ) }
    dend_5 { pt3dadd( 443.482, 302.598, 30.4881, 0.4442 ) }
    dend_5 { pt3dadd( 443.421, 301.494, 30.497, 0.3814 ) }
    dend_5 { pt3dadd( 443.886, 300.462, 30.408, 0.41 ) }
    dend_5 { pt3dadd( 444.358, 299.428, 30.3568, 0.5056 ) }
    dend_5 { pt3dadd( 444.529, 298.312, 30.338, 0.6042 ) }
    dend_5 { pt3dadd( 444.45, 297.173, 30.3366, 0.666 ) }
    dend_5 { pt3dadd( 444.252, 296.048, 30.3064, 0.656 ) }
    dend_5 { pt3dadd( 444.32, 294.934, 30.217, 0.6032 ) }
    dend_5 { pt3dadd( 444.831, 293.928, 30.1008, 0.5486 ) }
    dend_5 { pt3dadd( 445.384, 292.938, 29.9785, 0.5218 ) }
    dend_5 { pt3dadd( 445.762, 291.864, 29.82, 0.5734 ) }
    dend_5 { pt3dadd( 446.128, 290.804, 29.6509, 0.6344 ) }
    dend_5 { pt3dadd( 446.106, 289.664, 29.6377, 0.6768 ) }
    dend_5 { pt3dadd( 446.079, 288.534, 29.8206, 0.6496 ) }
    dend_5 { pt3dadd( 446.341, 287.43, 30.0258, 0.6232 ) }
    dend_5 { pt3dadd( 446.668, 286.336, 30.1588, 0.6102 ) }
    dend_5 { pt3dadd( 446.848, 285.212, 30.2982, 0.6102 ) }
    dend_5 { pt3dadd( 447.011, 284.084, 30.4928, 0.6242 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_5 { pt3dadd( 447.303, 282.983, 30.6978, 0.6214 ) }
    dend_5 { pt3dadd( 447.663, 281.9, 30.8874, 0.596 ) }
    dend_5 { pt3dadd( 448.103, 280.85, 31.0912, 0.5562 ) }
    dend_5 { pt3dadd( 448.539, 279.798, 31.344, 0.5632 ) }
    dend_5 { pt3dadd( 448.936, 278.731, 31.6128, 0.5998 ) }
    dend_5 { pt3dadd( 449.468, 277.73, 31.8447, 0.6254 ) }
    dend_5 { pt3dadd( 450.159, 276.825, 32.0698, 0.62 ) }
    dend_5 { pt3dadd( 450.813, 275.895, 32.2972, 0.5942 ) }
    dend_5 { pt3dadd( 451.183, 274.832, 32.471, 0.5682 ) }
    dend_5 { pt3dadd( 451.291, 273.697, 32.5469, 0.5258 ) }
    dend_5 { pt3dadd( 451.584, 272.608, 32.4976, 0.5084 ) }
    dend_5 { pt3dadd( 452.014, 271.549, 32.4212, 0.49 ) }
    dend_5 { pt3dadd( 452.449, 270.492, 32.2846, 0.5022 ) }
    dend_5 { pt3dadd( 452.748, 269.394, 32.1003, 0.5084 ) }
    dend_5 { pt3dadd( 453.022, 268.285, 31.9281, 0.5084 ) }
    dend_5 { pt3dadd( 453.401, 267.209, 31.7789, 0.4886 ) }
    dend_5 { pt3dadd( 453.643, 266.097, 31.633, 0.4632 ) }
    dend_5 { pt3dadd( 453.707, 264.96, 31.4199, 0.4576 ) }
    dend_5 { pt3dadd( 453.722, 263.819, 31.2119, 0.416 ) }
    dend_5 { pt3dadd( 453.786, 262.678, 31.0531, 0.386 ) }
    dend_5 { pt3dadd( 453.897, 261.541, 30.9392, 0.3814 ) }
    dend_5 { pt3dadd( 453.801, 260.406, 30.8633, 0.4648 ) }
    dend_5 { pt3dadd( 453.906, 259.274, 30.821, 0.504 ) }
    dend_5 { pt3dadd( 454.374, 258.24, 30.8174, 0.5296 ) }
    dend_5 { pt3dadd( 455.222, 257.493, 30.8764, 0.4896 ) }
    dend_5 { pt3dadd( 456.069, 256.726, 30.8165, 0.5062 ) }
    dend_5 { pt3dadd( 456.849, 255.891, 30.7045, 0.4618 ) }
    dend_5 { pt3dadd( 457.488, 254.945, 30.5642, 0.4342 ) }
    dend_5 { pt3dadd( 458.021, 253.938, 30.3358, 0.3844 ) }
    dend_5 { pt3dadd( 458.545, 252.926, 30.1048, 0.4054 ) }
    dend_5 { pt3dadd( 459.093, 251.924, 29.9253, 0.4548 ) }
    dend_5 { pt3dadd( 459.648, 250.924, 29.8108, 0.4816 ) }
    dend_5 { pt3dadd( 460.134, 249.89, 29.7413, 0.459 ) }
    dend_5 { pt3dadd( 460.533, 248.818, 29.7088, 0.3858 ) }
    dend_5 { pt3dadd( 460.641, 247.682, 29.7055, 0.3574 ) }
    dend_5 { pt3dadd( 460.942, 246.579, 29.7167, 0.38 ) }
    dend_5 { pt3dadd( 461.212, 245.467, 29.7318, 0.4054 ) }
    dend_5 { pt3dadd( 461.828, 244.508, 29.7472, 0.4068 ) }
    dend_5 { pt3dadd( 462.367, 243.499, 29.7651, 0.3828 ) }
    dend_5 { pt3dadd( 462.633, 242.388, 29.8071, 0.3814 ) }
    dend_5 { pt3dadd( 462.862, 241.27, 29.9631, 0.4322 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 41/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 448.218, 344.386, 24.8956, 0.661 ) }
    dend_3 { pt3dadd( 448.949, 345.025, 25.1061, 0.529 ) }
    dend_3 { pt3dadd( 449.911, 345.624, 24.7909, 0.4142 ) }
    dend_3 { pt3dadd( 450.916, 346.156, 24.6312, 0.3682 ) }
    dend_3 { pt3dadd( 451.766, 346.904, 24.4095, 0.4392 ) }
    dend_3 { pt3dadd( 452.414, 347.834, 24.085, 0.5544 ) }
    dend_3 { pt3dadd( 452.988, 348.799, 23.573, 0.6102 ) }
    dend_3 { pt3dadd( 453.752, 349.566, 22.916, 0.59 ) }
    dend_3 { pt3dadd( 454.787, 349.88, 22.1915, 0.5474 ) }
    dend_3 { pt3dadd( 455.885, 349.82, 21.4897, 0.5594 ) }
    dend_3 { pt3dadd( 456.953, 349.509, 20.9005, 0.611 ) }
    dend_3 { pt3dadd( 458.044, 349.311, 20.4936, 0.6766 ) }
    dend_3 { pt3dadd( 459.172, 349.44, 20.3167, 0.7262 ) }
    dend_3 { pt3dadd( 460.277, 349.729, 20.3024, 0.782 ) }
    dend_3 { pt3dadd( 461.362, 350.093, 20.3385, 0.8736 ) }
    dend_3 { pt3dadd( 462.429, 350.504, 20.3671, 0.9752 ) }
    dend_3 { pt3dadd( 463.52, 350.834, 20.3552, 1.0168 ) }
    dend_3 { pt3dadd( 464.621, 351.143, 20.2826, 0.9564 ) }
    dend_3 { pt3dadd( 465.709, 351.489, 20.1386, 0.8548 ) }
    dend_3 { pt3dadd( 466.816, 351.749, 19.8888, 0.7828 ) }
    dend_3 { pt3dadd( 467.917, 352.018, 19.5352, 0.7782 ) }
    dend_3 { pt3dadd( 468.978, 352.405, 19.1285, 0.788 ) }
    dend_3 { pt3dadd( 470.035, 352.79, 18.6311, 0.7718 ) }
    dend_3 { pt3dadd( 471.115, 353.065, 18.0153, 0.728 ) }
    dend_3 { pt3dadd( 472.215, 353.216, 17.352, 0.6936 ) }
    dend_3 { pt3dadd( 473.284, 353.506, 16.7114, 0.6864 ) }
    dend_3 { pt3dadd( 474.296, 353.984, 16.1517, 0.6484 ) }
    dend_3 { pt3dadd( 475.226, 354.621, 15.7312, 0.5788 ) }
    dend_3 { pt3dadd( 476.078, 355.374, 15.4597, 0.5216 ) }
    dend_3 { pt3dadd( 476.866, 356.2, 15.3308, 0.5084 ) }
    dend_3 { pt3dadd( 477.617, 357.063, 15.2501, 0.5464 ) }
    dend_3 { pt3dadd( 478.44, 357.855, 15.2554, 0.5394 ) }
    dend_3 { pt3dadd( 479.153, 358.745, 15.2524, 0.5338 ) }
    dend_3 { pt3dadd( 480.099, 359.345, 15.1115, 0.492 ) }
    dend_3 { pt3dadd( 481.179, 359.159, 14.9132, 0.5042 ) }
    dend_3 { pt3dadd( 482.23, 358.726, 14.6087, 0.5084 ) }
    dend_3 { pt3dadd( 483.355, 358.622, 14.3225, 0.5312 ) }
    dend_3 { pt3dadd( 484.437, 358.344, 13.9771, 0.5274 ) }
    dend_3 { pt3dadd( 485.552, 358.488, 13.855, 0.4918 ) }
    dend_3 { pt3dadd( 486.507, 359.07, 13.7919, 0.4474 ) }
    dend_3 { pt3dadd( 487.411, 359.715, 13.7634, 0.4198 ) }
    dend_3 { pt3dadd( 488.518, 359.896, 13.677, 0.42 ) }
    dend_3 { pt3dadd( 489.647, 359.777, 13.4317, 0.4146 ) }
    dend_3 { pt3dadd( 490.609, 359.211, 13.1821, 0.4292 ) }
    dend_3 { pt3dadd( 491.707, 359.002, 12.801, 0.4372 ) }
    dend_3 { pt3dadd( 492.845, 359.051, 12.5999, 0.4904 ) }
    dend_3 { pt3dadd( 493.96, 359.286, 12.6521, 0.5528 ) }
    dend_3 { pt3dadd( 495.035, 359.666, 12.8136, 0.6102 ) }
    dend_3 { pt3dadd( 496.141, 359.952, 12.9251, 0.5842 ) }
    dend_3 { pt3dadd( 497.271, 360.088, 13.0115, 0.4832 ) }
    dend_3 { pt3dadd( 498.362, 360.362, 12.9471, 0.4164 ) }
    dend_3 { pt3dadd( 499.319, 360.958, 12.6735, 0.4068 ) }
    dend_3 { pt3dadd( 500.149, 361.729, 12.3018, 0.452 ) }
    dend_3 { pt3dadd( 501.087, 362.346, 11.7908, 0.4288 ) }
    dend_3 { pt3dadd( 502.043, 362.945, 11.3392, 0.4014 ) }
    dend_3 { pt3dadd( 502.992, 363.553, 10.8735, 0.3708 ) }
    dend_3 { pt3dadd( 504.002, 364.045, 10.3487, 0.3392 ) }
    dend_3 { pt3dadd( 505.095, 364.312, 10.0126, 0.312 ) }
    dend_3 { pt3dadd( 506.229, 364.278, 9.8416, 0.3432 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 507.021, 364.936, 10.08, 0.4322 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 448.218, 344.386, 24.8956, 0.661 ) }
    dend_2 { pt3dadd( 449.377, 343.977, 24.4377, 0.5084 ) }
    dend_2 { pt3dadd( 450.392, 343.489, 23.9497, 0.501 ) }
    dend_2 { pt3dadd( 451.379, 342.979, 23.2879, 0.483 ) }
    dend_2 { pt3dadd( 452.366, 342.467, 22.6439, 0.5042 ) }
    dend_2 { pt3dadd( 453.281, 341.831, 22.1097, 0.5654 ) }
    dend_2 { pt3dadd( 453.915, 340.937, 21.6592, 0.6532 ) }
    dend_2 { pt3dadd( 454.145, 339.839, 21.2647, 0.7564 ) }
    dend_2 { pt3dadd( 454.206, 338.707, 20.8701, 0.8362 ) }
    dend_2 { pt3dadd( 454.354, 337.593, 20.4182, 0.8526 ) }
    dend_2 { pt3dadd( 454.582, 336.492, 19.9025, 0.8014 ) }
    dend_2 { pt3dadd( 454.848, 335.406, 19.3355, 0.7496 ) }
    dend_2 { pt3dadd( 455.311, 334.397, 18.7542, 0.7508 ) }
    dend_2 { pt3dadd( 455.987, 333.506, 18.218, 0.7904 ) }
    dend_2 { pt3dadd( 456.748, 332.671, 17.7842, 0.7998 ) }
    dend_2 { pt3dadd( 457.422, 331.762, 17.4644, 0.7196 ) }
    dend_2 { pt3dadd( 457.849, 330.719, 17.2323, 0.592 ) }
    dend_2 { pt3dadd( 458.406, 329.764, 17.0159, 0.504 ) }
    dend_2 { pt3dadd( 459.355, 329.177, 16.797, 0.5466 ) }
    dend_2 { pt3dadd( 460.43, 328.795, 16.6198, 0.6328 ) }
    dend_2 { pt3dadd( 461.539, 328.526, 16.5033, 0.6932 ) }
    dend_2 { pt3dadd( 462.659, 328.29, 16.4663, 0.6788 ) }
    dend_2 { pt3dadd( 463.654, 327.771, 16.4593, 0.6256 ) }
    dend_2 { pt3dadd( 464.315, 326.867, 16.3857, 0.554 ) }
    dend_2 { pt3dadd( 464.63, 325.779, 16.2529, 0.4954 ) }
    dend_2 { pt3dadd( 465.161, 324.784, 16.0895, 0.483 ) }
    dend_2 { pt3dadd( 466.181, 324.364, 15.9004, 0.5274 ) }
    dend_2 { pt3dadd( 467.311, 324.234, 15.6376, 0.5796 ) }
    dend_2 { pt3dadd( 468.392, 323.889, 15.3411, 0.6316 ) }
    dend_2 { pt3dadd( 469.343, 323.268, 15.0766, 0.6356 ) }
    dend_2 { pt3dadd( 470.199, 322.517, 14.8341, 0.6122 ) }
    dend_2 { pt3dadd( 471.086, 321.803, 14.5648, 0.5866 ) }
    dend_2 { pt3dadd( 472.054, 321.209, 14.2531, 0.5848 ) }
    dend_2 { pt3dadd( 472.986, 320.56, 13.9028, 0.6096 ) }
    dend_2 { pt3dadd( 473.84, 319.811, 13.5843, 0.5852 ) }
    dend_2 { pt3dadd( 474.759, 319.135, 13.3757, 0.61 ) }
    dend_2 { pt3dadd( 475.866, 318.859, 13.282, 0.6616 ) }
    dend_2 { pt3dadd( 477.007, 318.788, 13.157, 0.6838 ) }
    dend_2 { pt3dadd( 478.13, 318.586, 13.0012, 0.6306 ) }
    dend_2 { pt3dadd( 479.226, 318.262, 12.8561, 0.5626 ) }
    dend_2 { pt3dadd( 480.296, 317.863, 12.7086, 0.6152 ) }
    dend_2 { pt3dadd( 481.297, 317.315, 12.5451, 0.6898 ) }
    dend_2 { pt3dadd( 482.224, 316.651, 12.349, 0.7354 ) }
    dend_2 { pt3dadd( 483.028, 315.85, 12.0733, 0.7118 ) }
    dend_2 { pt3dadd( 484.031, 315.325, 11.7682, 0.7154 ) }
    dend_2 { pt3dadd( 485.024, 315.298, 11.4216, 0.7372 ) }
    dend_2 { pt3dadd( 485.76, 316.151, 11.1439, 0.7188 ) }
    dend_2 { pt3dadd( 486.749, 316.323, 10.9181, 0.6596 ) }
    dend_2 { pt3dadd( 487.64, 315.665, 10.7554, 0.5966 ) }
    dend_2 { pt3dadd( 488.385, 314.837, 10.7886, 0.5034 ) }
    dend_2 { pt3dadd( 489.438, 315.117, 11.0603, 0.3698 ) }
    dend_2 { pt3dadd( 490.459, 314.735, 11.7918, 0.3088 ) }
    dend_2 { pt3dadd( 491.457, 314.241, 12.4302, 0.305 ) }
    dend_2 { pt3dadd( 492.18, 313.567, 13.4919, 0.27 ) }
    dend_2 { pt3dadd( 492.378, 312.486, 14.1018, 0.2426 ) }
    dend_2 { pt3dadd( 492.401, 311.354, 14.5009, 0.2404 ) }
    dend_2 { pt3dadd( 492.806, 310.403, 15.0445, 0.2944 ) }
    dend_2 { pt3dadd( 493.476, 309.502, 15.4557, 0.356 ) }
    dend_2 { pt3dadd( 493.669, 308.615, 15.1125, 0.3324 ) }
    dend_2 { pt3dadd( 494.715, 308.938, 14.7904, 0.305 ) }
    dend_2 { pt3dadd( 495.814, 308.833, 14.2506, 0.305 ) }
    dend_2 { pt3dadd( 496.927, 309.02, 13.8287, 0.3126 ) }
    dend_2 { pt3dadd( 498.058, 309.089, 13.43, 0.3456 ) }
    dend_2 { pt3dadd( 499.134, 308.931, 12.9838, 0.399 ) }
    dend_2 { pt3dadd( 500.085, 308.364, 12.2906, 0.4322 ) }
    dend_2 { pt3dadd( 501.013, 308.618, 11.553, 0.3942 ) }
    dend_2 { pt3dadd( 501.86, 309.336, 10.9083, 0.3594 ) }
    dend_2 { pt3dadd( 502.445, 310.253, 10.08, 0.4322 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 440.87, 364.115, 19.5986, 0.2288 ) }
    dend_29 { pt3dadd( 441.147, 363.607, 19.6202, 0.2288 ) }
    dend_29 { pt3dadd( 441.68, 362.595, 19.6651, 0.2288 ) }
    dend_29 { pt3dadd( 442.106, 361.534, 19.7266, 0.2288 ) }
    dend_29 { pt3dadd( 442.911, 360.735, 19.788, 0.2288 ) }
    dend_29 { pt3dadd( 443.863, 360.132, 19.9125, 0.2288 ) }
    dend_29 { pt3dadd( 444.915, 359.693, 20.0976, 0.2288 ) }
    dend_29 { pt3dadd( 446.011, 359.492, 20.403, 0.2288 ) }
    dend_29 { pt3dadd( 447.147, 359.501, 20.552, 0.2288 ) }
    dend_29 { pt3dadd( 448.263, 359.318, 20.6344, 0.2288 ) }
    dend_29 { pt3dadd( 449.174, 358.708, 20.7144, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 80/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 440.87, 364.115, 19.5986, 0.2288 ) }
    dend_28 { pt3dadd( 441.91, 364.029, 17.9646, 0.2288 ) }
    dend_28 { pt3dadd( 442.871, 363.949, 16.4559, 0.2288 ) }
    dend_28 { pt3dadd( 443.421, 363.389, 15.4156, 0.2288 ) }
    dend_28 { pt3dadd( 443.489, 362.265, 14.9245, 0.2288 ) }
    dend_28 { pt3dadd( 444.109, 362.118, 14.2134, 0.2288 ) }
    dend_28 { pt3dadd( 444.668, 361.299, 13.1051, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 486.273, 374.742, 19.6655, 0.5848 ) }
    dend_26 { pt3dadd( 486.675, 374.99, 19.6433, 0.609 ) }
    dend_26 { pt3dadd( 487.706, 375.338, 20.0737, 0.5282 ) }
    dend_26 { pt3dadd( 488.815, 375.233, 20.696, 0.454 ) }
    dend_26 { pt3dadd( 489.91, 375.313, 21.3616, 0.4322 ) }
    dend_26 { pt3dadd( 490.906, 375.779, 22.1216, 0.448 ) }
    dend_26 { pt3dadd( 491.776, 376.43, 22.8731, 0.483 ) }
    dend_26 { pt3dadd( 492.606, 377.176, 23.4215, 0.483 ) }
    dend_26 { pt3dadd( 493.638, 377.579, 23.8816, 0.464 ) }
    dend_26 { pt3dadd( 494.761, 377.726, 24.2495, 0.4576 ) }
    dend_26 { pt3dadd( 495.288, 378.647, 24.4709, 0.4576 ) }
    dend_26 { pt3dadd( 495.842, 379.643, 24.6405, 0.4344 ) }
    dend_26 { pt3dadd( 496.568, 380.521, 24.8723, 0.3846 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_26 { pt3dadd( 497.399, 381.287, 25.2913, 0.3044 ) }
    dend_26 { pt3dadd( 498.323, 381.942, 25.6436, 0.2804 ) }
    dend_26 { pt3dadd( 498.96, 382.879, 25.9965, 0.3108 ) }
    dend_26 { pt3dadd( 499.776, 383.652, 26.5206, 0.3874 ) }
    dend_26 { pt3dadd( 500.593, 384.426, 27.0001, 0.4002 ) }
    dend_26 { pt3dadd( 501.439, 385.142, 27.4619, 0.3668 ) }
    dend_26 { pt3dadd( 502.451, 385.187, 28.0974, 0.3188 ) }
    dend_26 { pt3dadd( 503.479, 385.078, 28.758, 0.305 ) }
    dend_26 { pt3dadd( 504.501, 385.51, 29.3426, 0.2894 ) }
    dend_26 { pt3dadd( 505.155, 386.335, 30.0714, 0.26 ) }
    dend_26 { pt3dadd( 505.876, 387.15, 30.8582, 0.23 ) }
    dend_26 { pt3dadd( 506.715, 387.89, 31.4208, 0.2288 ) }
    dend_26 { pt3dadd( 507.513, 388.658, 31.9343, 0.2288 ) }
    dend_26 { pt3dadd( 508.498, 389.217, 32.3196, 0.2288 ) }
    dend_26 { pt3dadd( 509.421, 389.875, 32.6231, 0.2288 ) }
    dend_26 { pt3dadd( 510.225, 390.681, 32.8499, 0.2288 ) }
    dend_26 { pt3dadd( 511.093, 391.335, 33.0504, 0.2288 ) }
    dend_26 { pt3dadd( 511.938, 391.934, 33.2909, 0.2288 ) }
    dend_26 { pt3dadd( 512.466, 392.942, 33.5605, 0.2288 ) }
    dend_26 { pt3dadd( 513.161, 393.828, 33.8579, 0.2444 ) }
    dend_26 { pt3dadd( 514.141, 394.341, 34.1933, 0.287 ) }
    dend_26 { pt3dadd( 514.881, 395.099, 34.6402, 0.367 ) }
    dend_26 { pt3dadd( 515.639, 395.923, 35.1473, 0.4056 ) }
    dend_26 { pt3dadd( 516.411, 396.74, 35.6255, 0.3696 ) }
    dend_26 { pt3dadd( 517.149, 397.585, 36.0167, 0.3304 ) }
    dend_26 { pt3dadd( 517.98, 398.321, 36.4031, 0.3492 ) }
    dend_26 { pt3dadd( 518.692, 399.176, 36.9107, 0.398 ) }
    dend_26 { pt3dadd( 519.373, 400.062, 37.3271, 0.3664 ) }
    dend_26 { pt3dadd( 519.945, 401.012, 37.8482, 0.3458 ) }
    dend_26 { pt3dadd( 520.717, 401.833, 38.3166, 0.3934 ) }
    dend_26 { pt3dadd( 521.396, 402.736, 38.6929, 0.4474 ) }
    dend_26 { pt3dadd( 521.761, 403.795, 39.1272, 0.4576 ) }
    dend_26 { pt3dadd( 522.255, 404.753, 39.6211, 0.4956 ) }
    dend_26 { pt3dadd( 523.303, 404.889, 39.9056, 0.5338 ) }
    dend_26 { pt3dadd( 524.316, 405.121, 40.2702, 0.5338 ) }
    dend_26 { pt3dadd( 525.321, 405.61, 40.8408, 0.5088 ) }
    dend_26 { pt3dadd( 526.296, 406.137, 41.3384, 0.5918 ) }
    dend_26 { pt3dadd( 526.982, 407.034, 41.6094, 0.6452 ) }
    dend_26 { pt3dadd( 527.834, 407.779, 42.0036, 0.6172 ) }
    dend_26 { pt3dadd( 528.726, 408.469, 42.4796, 0.4972 ) }
    dend_26 { pt3dadd( 529.834, 408.558, 42.8327, 0.4108 ) }
    dend_26 { pt3dadd( 530.681, 409.283, 43.1312, 0.383 ) }
    dend_26 { pt3dadd( 531.096, 410.312, 43.5772, 0.4178 ) }
    dend_26 { pt3dadd( 531.951, 410.998, 44.2848, 0.517 ) }
    dend_26 { pt3dadd( 532.652, 411.832, 44.9047, 0.6206 ) }
    dend_26 { pt3dadd( 533.286, 412.771, 45.2379, 0.661 ) }
    dend_26 { pt3dadd( 534.1, 413.558, 45.5974, 0.661 ) }
    dend_26 { pt3dadd( 534.833, 414.433, 45.7783, 0.6904 ) }
    dend_26 { pt3dadd( 535.339, 415.433, 45.9738, 0.7372 ) }
    dend_26 { pt3dadd( 535.735, 416.488, 46.4232, 0.7372 ) }
    dend_26 { pt3dadd( 535.737, 417.568, 47.1416, 0.6404 ) }
    dend_26 { pt3dadd( 536.284, 418.535, 47.5703, 0.601 ) }
    dend_26 { pt3dadd( 536.562, 419.626, 47.9623, 0.6344 ) }
    dend_26 { pt3dadd( 537.023, 420.605, 48.5573, 0.7118 ) }
    dend_26 { pt3dadd( 536.864, 421.696, 49.3108, 0.6762 ) }
    dend_26 { pt3dadd( 536.851, 422.798, 49.9747, 0.5494 ) }
    dend_26 { pt3dadd( 537.413, 423.563, 50.6859, 0.445 ) }
    dend_26 { pt3dadd( 538.21, 424.326, 51.2632, 0.4558 ) }
    dend_26 { pt3dadd( 539.133, 424.965, 51.6183, 0.5098 ) }
    dend_26 { pt3dadd( 539.68, 425.938, 51.8244, 0.5296 ) }
    dend_26 { pt3dadd( 540.454, 426.664, 52.0374, 0.4896 ) }
    dend_26 { pt3dadd( 540.912, 427.692, 52.1777, 0.4268 ) }
    dend_26 { pt3dadd( 541.412, 428.712, 52.3936, 0.3872 ) }
    dend_26 { pt3dadd( 542.098, 429.524, 53.0645, 0.449 ) }
    dend_26 { pt3dadd( 542.557, 430.523, 53.6659, 0.5464 ) }
    dend_26 { pt3dadd( 543.066, 431.495, 54.3497, 0.6084 ) }
    dend_26 { pt3dadd( 543.159, 432.588, 55.0836, 0.6134 ) }
    dend_26 { pt3dadd( 543.405, 433.575, 55.8771, 0.6356 ) }
    dend_26 { pt3dadd( 543.955, 434.563, 56.287, 0.6356 ) }
    dend_26 { pt3dadd( 544.218, 435.583, 57.1802, 0.5294 ) }
    dend_26 { pt3dadd( 544.551, 436.622, 57.9776, 0.4016 ) }
    dend_26 { pt3dadd( 545.277, 437.378, 58.6362, 0.3192 ) }
    dend_26 { pt3dadd( 546.06, 438.169, 59.1973, 0.325 ) }
    dend_26 { pt3dadd( 546.44, 439.206, 59.7584, 0.4196 ) }
    dend_26 { pt3dadd( 547.069, 440.068, 60.671, 0.5084 ) }
    dend_26 { pt3dadd( 547.739, 440.928, 61.5068, 0.4684 ) }
    dend_26 { pt3dadd( 548.434, 441.809, 62.0208, 0.3844 ) }
    dend_26 { pt3dadd( 549.24, 442.586, 62.5716, 0.3632 ) }
    dend_26 { pt3dadd( 549.758, 443.506, 63.4956, 0.4672 ) }
    dend_26 { pt3dadd( 550.018, 444.576, 64.2519, 0.5078 ) }
    dend_26 { pt3dadd( 550.247, 445.638, 64.897, 0.4164 ) }
    dend_26 { pt3dadd( 550.97, 446.49, 65.4668, 0.3166 ) }
    dend_26 { pt3dadd( 551.676, 447.381, 65.7784, 0.2618 ) }
    dend_26 { pt3dadd( 552.109, 448.405, 66.2091, 0.2314 ) }
    dend_26 { pt3dadd( 552.831, 449.269, 66.6411, 0.34 ) }
    dend_26 { pt3dadd( 553.624, 450.058, 67.2045, 0.5028 ) }
    dend_26 { pt3dadd( 554.456, 450.828, 67.5774, 0.5108 ) }
    dend_26 { pt3dadd( 554.89, 451.853, 67.762, 0.392 ) }
    dend_26 { pt3dadd( 555.721, 452.59, 67.8138, 0.3304 ) }
    dend_26 { pt3dadd( 556.478, 453.236, 68.2909, 0.3934 ) }
    dend_26 { pt3dadd( 557.477, 453.566, 68.8201, 0.443 ) }
    dend_26 { pt3dadd( 558.35, 454.259, 69.286, 0.4576 ) }
    dend_26 { pt3dadd( 559.4, 454.684, 69.631, 0.4332 ) }
    dend_26 { pt3dadd( 560.154, 455.43, 70.3755, 0.3468 ) }
    dend_26 { pt3dadd( 560.888, 456.195, 71.0606, 0.2852 ) }
    dend_26 { pt3dadd( 561.974, 456.342, 71.3986, 0.3002 ) }
    dend_26 { pt3dadd( 562.967, 456.845, 71.6016, 0.3554 ) }
    dend_26 { pt3dadd( 563.904, 457.489, 71.787, 0.351 ) }
    dend_26 { pt3dadd( 564.709, 458.244, 72.2672, 0.2784 ) }
    dend_26 { pt3dadd( 565.718, 458.744, 72.676, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_26 { pt3dadd( 566.561, 459.457, 73.092, 0.273 ) }
    dend_26 { pt3dadd( 567.424, 460.002, 74.2, 0.3304 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 486.273, 374.742, 19.6655, 0.5848 ) }
    dend_25 { pt3dadd( 486.638, 374.834, 18.824, 0.49 ) }
    dend_25 { pt3dadd( 487.535, 374.949, 17.34, 0.3304 ) }
    dend_25 { pt3dadd( 488.663, 374.792, 17.1063, 0.337 ) }
    dend_25 { pt3dadd( 489.796, 374.661, 16.9785, 0.383 ) }
    dend_25 { pt3dadd( 490.937, 374.66, 16.7935, 0.4856 ) }
    dend_25 { pt3dadd( 492.079, 374.661, 16.5942, 0.552 ) }
    dend_25 { pt3dadd( 493.221, 374.667, 16.4194, 0.505 ) }
    dend_25 { pt3dadd( 494.361, 374.708, 16.2565, 0.4104 ) }
    dend_25 { pt3dadd( 495.487, 374.877, 16.1212, 0.356 ) }
    dend_25 { pt3dadd( 496.579, 375.211, 16.0004, 0.3634 ) }
    dend_25 { pt3dadd( 497.68, 375.491, 15.8595, 0.3814 ) }
    dend_25 { pt3dadd( 498.816, 375.504, 15.6707, 0.3814 ) }
    dend_25 { pt3dadd( 499.938, 375.312, 15.4806, 0.3728 ) }
    dend_25 { pt3dadd( 501.048, 375.039, 15.3466, 0.3388 ) }
    dend_25 { pt3dadd( 502.17, 374.959, 15.2573, 0.2958 ) }
    dend_25 { pt3dadd( 503.264, 375.264, 15.1839, 0.2796 ) }
    dend_25 { pt3dadd( 504.344, 375.592, 15.1169, 0.29 ) }
    dend_25 { pt3dadd( 505.475, 375.566, 15.0745, 0.305 ) }
    dend_25 { pt3dadd( 506.567, 375.685, 15.0381, 0.305 ) }
    dend_25 { pt3dadd( 507.668, 375.786, 14.9869, 0.336 ) }
    dend_25 { pt3dadd( 508.712, 375.37, 14.7825, 0.375 ) }
    dend_25 { pt3dadd( 509.74, 374.884, 14.4961, 0.4264 ) }
    dend_25 { pt3dadd( 510.759, 374.38, 14.196, 0.4076 ) }
    dend_25 { pt3dadd( 511.865, 374.12, 13.917, 0.3962 ) }
    dend_25 { pt3dadd( 512.991, 373.982, 13.6133, 0.348 ) }
    dend_25 { pt3dadd( 514.114, 373.856, 13.2541, 0.3304 ) }
    dend_25 { pt3dadd( 515.124, 374.241, 12.9945, 0.421 ) }
    dend_25 { pt3dadd( 516.233, 374.445, 12.7021, 0.5938 ) }
    dend_25 { pt3dadd( 517.368, 374.542, 12.4552, 0.7748 ) }
    dend_25 { pt3dadd( 518.5, 374.525, 12.0639, 0.8462 ) }
    dend_25 { pt3dadd( 519.632, 374.492, 11.7311, 0.846 ) }
    dend_25 { pt3dadd( 520.759, 374.467, 11.4514, 0.7898 ) }
    dend_25 { pt3dadd( 521.838, 374.8, 11.2106, 0.7484 ) }
    dend_25 { pt3dadd( 522.905, 375.2, 11.0673, 0.7372 ) }
    dend_25 { pt3dadd( 524.026, 375.346, 11.0513, 0.798 ) }
    dend_25 { pt3dadd( 525.164, 375.413, 11.2313, 0.8556 ) }
    dend_25 { pt3dadd( 526.288, 375.579, 11.5447, 0.904 ) }
    dend_25 { pt3dadd( 527.419, 375.581, 11.892, 0.8498 ) }
    dend_25 { pt3dadd( 528.549, 375.725, 12.0819, 0.8614 ) }
    dend_25 { pt3dadd( 529.69, 375.717, 12.0657, 0.8174 ) }
    dend_25 { pt3dadd( 530.824, 375.852, 11.923, 0.8136 ) }
    dend_25 { pt3dadd( 531.894, 376.238, 11.6537, 0.7374 ) }
    dend_25 { pt3dadd( 532.914, 376.692, 11.513, 0.7322 ) }
    dend_25 { pt3dadd( 534.037, 376.774, 11.3602, 0.7118 ) }
    dend_25 { pt3dadd( 535.117, 377.004, 11.1655, 0.695 ) }
    dend_25 { pt3dadd( 536.251, 376.854, 11.1265, 0.6714 ) }
    dend_25 { pt3dadd( 537.392, 376.837, 11.1276, 0.6726 ) }
    dend_25 { pt3dadd( 538.433, 377.216, 11.1187, 0.6432 ) }
    dend_25 { pt3dadd( 539.377, 377.852, 11.3533, 0.5372 ) }
    dend_25 { pt3dadd( 540.426, 378.206, 12.04, 0.5084 ) }
    // Section: dend_13, id: dend_13, parent: dend_8 (entry count 53/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 452.783, 333.405, 41.9241, 0.5084 ) }
    dend_13 { pt3dadd( 452.454, 333.009, 42.4662, 0.5882 ) }
    dend_13 { pt3dadd( 452.155, 332.001, 43.3308, 0.6176 ) }
    dend_13 { pt3dadd( 452.719, 331.232, 44.261, 0.5406 ) }
    dend_13 { pt3dadd( 453.564, 330.87, 45.6033, 0.4234 ) }
    dend_13 { pt3dadd( 453.956, 329.907, 46.6752, 0.4432 ) }
    dend_13 { pt3dadd( 453.362, 329.17, 47.3432, 0.5276 ) }
    dend_13 { pt3dadd( 453.975, 328.404, 48.3344, 0.5674 ) }
    dend_13 { pt3dadd( 454.886, 327.803, 49.1112, 0.5506 ) }
    dend_13 { pt3dadd( 455.517, 327.019, 49.7722, 0.4828 ) }
    dend_13 { pt3dadd( 455.796, 325.952, 50.4949, 0.395 ) }
    dend_13 { pt3dadd( 456.022, 324.957, 51.6222, 0.3304 ) }
    dend_13 { pt3dadd( 456.918, 324.361, 52.5627, 0.34 ) }
    dend_13 { pt3dadd( 457.64, 323.555, 53.2986, 0.383 ) }
    dend_13 { pt3dadd( 458.167, 322.563, 53.8045, 0.4212 ) }
    dend_13 { pt3dadd( 458.658, 321.553, 54.3362, 0.4712 ) }
    dend_13 { pt3dadd( 458.663, 320.439, 54.5902, 0.506 ) }
    dend_13 { pt3dadd( 458.784, 319.309, 54.8246, 0.5084 ) }
    dend_13 { pt3dadd( 459.093, 318.25, 55.1452, 0.5426 ) }
    dend_13 { pt3dadd( 459.807, 317.402, 55.7631, 0.6926 ) }
    dend_13 { pt3dadd( 460.291, 316.378, 56.1313, 0.7282 ) }
    dend_13 { pt3dadd( 460.574, 315.288, 56.5048, 0.6604 ) }
    dend_13 { pt3dadd( 460.784, 314.192, 56.7672, 0.5848 ) }
    dend_13 { pt3dadd( 461.113, 313.125, 56.9811, 0.6192 ) }
    dend_13 { pt3dadd( 461.008, 312.002, 57.1231, 0.6922 ) }
    dend_13 { pt3dadd( 460.84, 310.875, 57.293, 0.6742 ) }
    dend_13 { pt3dadd( 461.212, 309.833, 57.4109, 0.6026 ) }
    dend_13 { pt3dadd( 461.79, 308.847, 57.51, 0.5848 ) }
    dend_13 { pt3dadd( 462.389, 307.887, 57.878, 0.6454 ) }
    dend_13 { pt3dadd( 463.078, 306.98, 58.1554, 0.7078 ) }
    dend_13 { pt3dadd( 463.767, 306.079, 58.427, 0.6864 ) }
    dend_13 { pt3dadd( 464.623, 305.341, 58.795, 0.6656 ) }
    dend_13 { pt3dadd( 465.464, 304.622, 59.2701, 0.6102 ) }
    dend_13 { pt3dadd( 466.187, 303.788, 59.845, 0.5974 ) }
    dend_13 { pt3dadd( 467.022, 303.039, 60.3688, 0.614 ) }
    dend_13 { pt3dadd( 467.806, 302.246, 60.9938, 0.6544 ) }
    dend_13 { pt3dadd( 468.507, 301.365, 61.4527, 0.661 ) }
    dend_13 { pt3dadd( 468.915, 300.314, 61.8134, 0.5894 ) }
    dend_13 { pt3dadd( 469.511, 299.353, 62.2017, 0.5082 ) }
    dend_13 { pt3dadd( 470.441, 298.733, 62.6844, 0.4978 ) }
    dend_13 { pt3dadd( 471.14, 297.839, 62.9482, 0.5772 ) }
    dend_13 { pt3dadd( 471.826, 296.939, 63.1529, 0.5954 ) }
    dend_13 { pt3dadd( 472.528, 296.051, 63.4813, 0.4714 ) }
    dend_13 { pt3dadd( 472.833, 294.959, 63.6412, 0.356 ) }
    dend_13 { pt3dadd( 473.173, 293.909, 63.9727, 0.3938 ) }
    dend_13 { pt3dadd( 473.884, 293.02, 64.2253, 0.4686 ) }
    dend_13 { pt3dadd( 474.687, 292.207, 64.2827, 0.4614 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 475.514, 291.417, 64.2174, 0.4122 ) }
    dend_13 { pt3dadd( 476.341, 290.629, 64.0976, 0.4068 ) }
    dend_13 { pt3dadd( 477.15, 289.826, 63.8498, 0.4068 ) }
    dend_13 { pt3dadd( 477.932, 288.998, 63.5793, 0.3828 ) }
    dend_13 { pt3dadd( 478.408, 287.969, 63.3027, 0.3046 ) }
    dend_13 { pt3dadd( 479.121, 287.094, 62.9241, 0.2526 ) }
    dend_13 { pt3dadd( 479.444, 286.024, 62.3364, 0.2352 ) }
    dend_13 { pt3dadd( 479.82, 284.961, 61.8663, 0.271 ) }
    dend_13 { pt3dadd( 480.284, 283.943, 61.3094, 0.3258 ) }
    dend_13 { pt3dadd( 480.776, 282.955, 60.6032, 0.356 ) }
    dend_13 { pt3dadd( 481.392, 282.067, 59.8315, 0.326 ) }
    dend_13 { pt3dadd( 481.997, 281.16, 59.0764, 0.2708 ) }
    dend_13 { pt3dadd( 482.237, 280.098, 58.3388, 0.2356 ) }
    dend_13 { pt3dadd( 482.331, 278.985, 57.7391, 0.2288 ) }
    dend_13 { pt3dadd( 482.634, 277.903, 57.3264, 0.2288 ) }
    dend_13 { pt3dadd( 483.018, 276.831, 57.0676, 0.2288 ) }
    dend_13 { pt3dadd( 483.731, 275.968, 56.9162, 0.2288 ) }
    dend_13 { pt3dadd( 484.508, 275.13, 56.8422, 0.2288 ) }
    dend_13 { pt3dadd( 485.199, 274.219, 56.8173, 0.2288 ) }
    dend_13 { pt3dadd( 485.906, 273.32, 56.8058, 0.2288 ) }
    dend_13 { pt3dadd( 486.517, 272.354, 56.7918, 0.2288 ) }
    dend_13 { pt3dadd( 487.45, 271.715, 56.7717, 0.2288 ) }
    dend_13 { pt3dadd( 488.241, 270.892, 56.7437, 0.2288 ) }
    dend_13 { pt3dadd( 489.168, 270.224, 56.7031, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 24/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 452.783, 333.405, 41.9241, 0.5084 ) }
    dend_12 { pt3dadd( 452.223, 333.247, 40.6, 0.305 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 452.783, 333.405, 41.9241, 0.5084 ) }
    dend_9 { pt3dadd( 453.408, 333.606, 41.5573, 0.4566 ) }
    dend_9 { pt3dadd( 454.335, 333.502, 42.5992, 0.468 ) }
    dend_9 { pt3dadd( 455.272, 333.034, 43.5638, 0.518 ) }
    dend_9 { pt3dadd( 456.17, 332.427, 44.438, 0.4942 ) }
    dend_9 { pt3dadd( 457.046, 331.779, 45.2889, 0.4234 ) }
    dend_9 { pt3dadd( 457.876, 331.067, 46.0995, 0.3872 ) }
    dend_9 { pt3dadd( 458.88, 330.833, 47.0814, 0.4032 ) }
    dend_9 { pt3dadd( 459.941, 330.844, 48.1272, 0.4788 ) }
    dend_9 { pt3dadd( 460.977, 330.555, 49.0588, 0.483 ) }
    dend_9 { pt3dadd( 462.031, 330.807, 49.917, 0.5558 ) }
    dend_9 { pt3dadd( 463.06, 331.165, 50.7637, 0.5592 ) }
    dend_9 { pt3dadd( 464.118, 331.452, 51.5623, 0.5592 ) }
    dend_9 { pt3dadd( 465.101, 331.954, 52.2917, 0.4356 ) }
    dend_9 { pt3dadd( 466.179, 332.199, 52.9978, 0.3814 ) }
    dend_9 { pt3dadd( 467.283, 332.038, 53.6074, 0.3816 ) }
    dend_9 { pt3dadd( 468.382, 331.838, 54.2133, 0.408 ) }
    dend_9 { pt3dadd( 469.472, 331.575, 54.766, 0.4582 ) }
    dend_9 { pt3dadd( 470.55, 331.253, 55.2664, 0.4872 ) }
    dend_9 { pt3dadd( 471.559, 330.74, 55.6682, 0.5848 ) }
    dend_9 { pt3dadd( 472.613, 330.324, 56.0529, 0.5848 ) }
    dend_9 { pt3dadd( 473.643, 329.858, 56.4768, 0.5792 ) }
    dend_9 { pt3dadd( 474.707, 329.487, 56.9114, 0.4776 ) }
    dend_9 { pt3dadd( 475.832, 329.422, 57.3622, 0.3984 ) }
    dend_9 { pt3dadd( 476.946, 329.617, 57.7816, 0.3006 ) }
    dend_9 { pt3dadd( 478.056, 329.816, 58.217, 0.2512 ) }
    dend_9 { pt3dadd( 479.184, 329.848, 58.6645, 0.2288 ) }
    dend_9 { pt3dadd( 480.267, 330.108, 59.2248, 0.2288 ) }
    dend_9 { pt3dadd( 481.345, 330.418, 59.6574, 0.2288 ) }
    dend_9 { pt3dadd( 482.467, 330.582, 60.0314, 0.2288 ) }
    dend_9 { pt3dadd( 483.561, 330.838, 60.5189, 0.2288 ) }
    dend_9 { pt3dadd( 484.642, 331.028, 61.2352, 0.2288 ) }
    dend_9 { pt3dadd( 485.757, 331.034, 61.8411, 0.2288 ) }
    dend_9 { pt3dadd( 486.876, 331.154, 62.2964, 0.2288 ) }
    dend_9 { pt3dadd( 487.906, 331.551, 62.9594, 0.2288 ) }
    dend_9 { pt3dadd( 488.931, 332.003, 63.5113, 0.2288 ) }
    dend_9 { pt3dadd( 489.935, 332.507, 63.964, 0.2288 ) }
    dend_9 { pt3dadd( 490.847, 333.175, 64.3782, 0.2288 ) }
    dend_9 { pt3dadd( 491.73, 333.892, 64.6593, 0.2288 ) }
    dend_9 { pt3dadd( 492.742, 334.405, 64.8684, 0.2288 ) }
    dend_9 { pt3dadd( 493.803, 334.793, 65.0583, 0.2288 ) }
    dend_9 { pt3dadd( 494.945, 334.829, 65.2411, 0.2288 ) }
    dend_9 { pt3dadd( 495.993, 334.423, 65.4548, 0.2288 ) }
    dend_9 { pt3dadd( 497.028, 333.945, 65.6718, 0.2288 ) }
    dend_9 { pt3dadd( 498.076, 333.493, 65.8812, 0.2288 ) }
    dend_9 { pt3dadd( 499.161, 333.167, 66.0839, 0.2288 ) }
    dend_9 { pt3dadd( 500.283, 332.949, 66.2813, 0.2288 ) }
    dend_9 { pt3dadd( 501.194, 332.305, 66.5031, 0.2288 ) }
    dend_9 { pt3dadd( 502.108, 331.655, 66.7461, 0.2288 ) }
    dend_9 { pt3dadd( 503.201, 331.353, 67.0466, 0.2288 ) }
    dend_9 { pt3dadd( 504.073, 331.509, 67.6236, 0.2288 ) }
    dend_9 { pt3dadd( 504.787, 330.656, 68.2777, 0.2288 ) }
    dend_9 { pt3dadd( 505.574, 329.876, 68.9469, 0.2288 ) }
    dend_9 { pt3dadd( 506.456, 329.208, 69.5912, 0.2288 ) }
    dend_9 { pt3dadd( 507.457, 328.706, 70.1145, 0.2288 ) }
    dend_9 { pt3dadd( 508.547, 328.431, 70.3884, 0.2288 ) }
    dend_9 { pt3dadd( 509.69, 328.45, 70.492, 0.2288 ) }
    dend_9 { pt3dadd( 510.833, 328.47, 70.5956, 0.2288 ) }
    dend_9 { pt3dadd( 511.954, 328.656, 70.7977, 0.2288 ) }
    dend_9 { pt3dadd( 513.086, 328.5, 70.8686, 0.2288 ) }
    dend_9 { pt3dadd( 514.221, 328.386, 70.9708, 0.2288 ) }
    dend_9 { pt3dadd( 515.362, 328.417, 71.1738, 0.2288 ) }
    dend_9 { pt3dadd( 516.502, 328.447, 71.3768, 0.2288 ) }
    dend_9 { pt3dadd( 517.643, 328.477, 71.5798, 0.2288 ) }
    dend_9 { pt3dadd( 518.758, 328.662, 71.8631, 0.238 ) }
    dend_9 { pt3dadd( 519.861, 328.938, 72.1938, 0.2528 ) }
    dend_9 { pt3dadd( 520.829, 329.493, 72.7353, 0.2896 ) }
    dend_9 { pt3dadd( 521.763, 330.143, 72.9991, 0.3548 ) }
    dend_9 { pt3dadd( 522.901, 330.218, 73.0775, 0.3782 ) }
    dend_9 { pt3dadd( 524.042, 330.282, 73.1522, 0.4006 ) }
    dend_9 { pt3dadd( 525.157, 330.52, 73.1847, 0.4602 ) }
    dend_9 { pt3dadd( 526.259, 330.823, 73.2012, 0.5338 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 462.862, 241.27, 29.9631, 0.4322 ) }
    dend_7 { pt3dadd( 463.468, 241.258, 29.7878, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 464.036, 240.268, 29.7441, 0.4518 ) }
    dend_7 { pt3dadd( 464.525, 239.233, 29.7312, 0.4112 ) }
    dend_7 { pt3dadd( 464.811, 238.145, 29.8158, 0.3814 ) }
    dend_7 { pt3dadd( 465.208, 237.102, 29.8152, 0.4218 ) }
    dend_7 { pt3dadd( 465.865, 236.169, 29.7083, 0.5216 ) }
    dend_7 { pt3dadd( 466.606, 235.3, 29.6951, 0.5122 ) }
    dend_7 { pt3dadd( 467.456, 234.544, 29.4711, 0.4136 ) }
    dend_7 { pt3dadd( 468.064, 233.664, 29.2018, 0.3428 ) }
    dend_7 { pt3dadd( 468.161, 232.542, 28.8554, 0.3608 ) }
    dend_7 { pt3dadd( 468.091, 231.408, 28.5368, 0.397 ) }
    dend_7 { pt3dadd( 468.108, 230.275, 28.2604, 0.391 ) }
    dend_7 { pt3dadd( 468.195, 229.136, 28.0582, 0.3334 ) }
    dend_7 { pt3dadd( 468.161, 227.997, 27.9702, 0.2726 ) }
    dend_7 { pt3dadd( 468.125, 226.855, 27.9881, 0.2378 ) }
    dend_7 { pt3dadd( 468.244, 225.721, 28.0972, 0.2288 ) }
    dend_7 { pt3dadd( 468.552, 224.627, 28.2808, 0.2288 ) }
    dend_7 { pt3dadd( 468.786, 223.516, 28.5466, 0.2644 ) }
    dend_7 { pt3dadd( 468.984, 222.394, 28.791, 0.3348 ) }
    dend_7 { pt3dadd( 468.953, 221.27, 29.1589, 0.4434 ) }
    dend_7 { pt3dadd( 469.378, 220.234, 29.4454, 0.4576 ) }
    dend_7 { pt3dadd( 469.745, 219.158, 29.7105, 0.4056 ) }
    dend_7 { pt3dadd( 470.456, 218.271, 29.9961, 0.3304 ) }
    dend_7 { pt3dadd( 471.131, 217.359, 30.3078, 0.3388 ) }
    dend_7 { pt3dadd( 471.514, 216.299, 30.5953, 0.427 ) }
    dend_7 { pt3dadd( 471.766, 215.208, 30.8482, 0.52 ) }
    dend_7 { pt3dadd( 472.164, 214.158, 31.1525, 0.6074 ) }
    dend_7 { pt3dadd( 472.354, 213.035, 31.4096, 0.6654 ) }
    dend_7 { pt3dadd( 472.656, 211.936, 31.5515, 0.6528 ) }
    dend_7 { pt3dadd( 472.995, 210.845, 31.6602, 0.5666 ) }
    dend_7 { pt3dadd( 473.188, 209.725, 31.8724, 0.4756 ) }
    dend_7 { pt3dadd( 473.688, 208.723, 32.06, 0.4098 ) }
    dend_7 { pt3dadd( 474.376, 207.864, 32.5116, 0.4322 ) }
    dend_7 { pt3dadd( 474.894, 206.863, 32.8765, 0.4572 ) }
    dend_7 { pt3dadd( 475.754, 206.112, 32.9168, 0.4234 ) }
    dend_7 { pt3dadd( 476.682, 205.475, 32.9269, 0.4068 ) }
    dend_7 { pt3dadd( 477.043, 204.456, 32.7886, 0.4538 ) }
    dend_7 { pt3dadd( 477.238, 203.329, 32.6516, 0.4826 ) }
    dend_7 { pt3dadd( 477.461, 202.226, 32.5175, 0.4468 ) }
    dend_7 { pt3dadd( 478.255, 201.428, 32.1423, 0.364 ) }
    dend_7 { pt3dadd( 479.014, 200.587, 31.8682, 0.3792 ) }
    dend_7 { pt3dadd( 479.522, 199.565, 31.8161, 0.4844 ) }
    dend_7 { pt3dadd( 480.023, 198.538, 31.7688, 0.5338 ) }
    dend_7 { pt3dadd( 480.36, 197.447, 31.5742, 0.5146 ) }
    dend_7 { pt3dadd( 480.907, 196.61, 31.4353, 0.448 ) }
    dend_7 { pt3dadd( 481.714, 195.989, 31.362, 0.4482 ) }
    dend_7 { pt3dadd( 481.641, 194.92, 31.2388, 0.497 ) }
    dend_7 { pt3dadd( 481.776, 193.811, 31.1074, 0.5084 ) }
    dend_7 { pt3dadd( 481.522, 192.739, 31.1492, 0.5084 ) }
    dend_7 { pt3dadd( 481.467, 191.621, 30.9537, 0.516 ) }
    dend_7 { pt3dadd( 481.253, 190.536, 30.6387, 0.523 ) }
    dend_7 { pt3dadd( 481.371, 189.453, 29.8841, 0.5084 ) }
    dend_7 { pt3dadd( 480.459, 189.018, 29.0648, 0.4834 ) }
    dend_7 { pt3dadd( 479.519, 188.488, 28.3279, 0.5084 ) }
    dend_7 { pt3dadd( 478.519, 188.172, 27.5478, 0.5194 ) }
    dend_7 { pt3dadd( 477.684, 187.511, 26.5436, 0.5174 ) }
    dend_7 { pt3dadd( 476.803, 186.977, 25.3374, 0.467 ) }
    dend_7 { pt3dadd( 476.399, 186.332, 23.472, 0.4654 ) }
    dend_7 { pt3dadd( 476.397, 185.434, 21.7711, 0.5156 ) }
    dend_7 { pt3dadd( 476.705, 184.508, 20.5047, 0.5338 ) }
    dend_7 { pt3dadd( 477.534, 183.809, 19.723, 0.5338 ) }
    dend_7 { pt3dadd( 478.559, 183.856, 18.9129, 0.5338 ) }
    dend_7 { pt3dadd( 479.329, 183.089, 18.0502, 0.5182 ) }
    dend_7 { pt3dadd( 479.401, 182.073, 17.5459, 0.4838 ) }
    dend_7 { pt3dadd( 479.394, 180.94, 17.2463, 0.4576 ) }
    dend_7 { pt3dadd( 479.553, 179.844, 17.2107, 0.4782 ) }
    dend_7 { pt3dadd( 480.203, 178.91, 17.3364, 0.4598 ) }
    dend_7 { pt3dadd( 480.709, 177.892, 17.08, 0.4322 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 462.862, 241.27, 29.9631, 0.4322 ) }
    dend_6 { pt3dadd( 462.56, 241.095, 30.4987, 0.4062 ) }
    dend_6 { pt3dadd( 461.931, 240.414, 31.6182, 0.348 ) }
    dend_6 { pt3dadd( 461.676, 239.313, 31.8371, 0.3304 ) }
    dend_6 { pt3dadd( 461.042, 238.387, 32.1258, 0.353 ) }
    dend_6 { pt3dadd( 460.059, 237.834, 32.51, 0.3814 ) }
    dend_6 { pt3dadd( 459.073, 237.294, 32.9344, 0.3814 ) }
    dend_6 { pt3dadd( 458.32, 236.453, 33.3421, 0.3912 ) }
    dend_6 { pt3dadd( 457.681, 235.528, 33.8481, 0.4068 ) }
    dend_6 { pt3dadd( 456.901, 234.714, 34.2079, 0.384 ) }
    dend_6 { pt3dadd( 456.164, 233.857, 34.6156, 0.3018 ) }
    dend_6 { pt3dadd( 455.447, 232.97, 34.8317, 0.2832 ) }
    dend_6 { pt3dadd( 454.759, 232.063, 34.9437, 0.314 ) }
    dend_6 { pt3dadd( 453.907, 231.301, 35.0582, 0.356 ) }
    dend_6 { pt3dadd( 453.133, 230.501, 35.2545, 0.3482 ) }
    dend_6 { pt3dadd( 452.704, 229.444, 35.4707, 0.319 ) }
    dend_6 { pt3dadd( 452.094, 228.507, 35.5387, 0.318 ) }
    dend_6 { pt3dadd( 451.554, 227.544, 35.5432, 0.3304 ) }
    dend_6 { pt3dadd( 450.91, 226.68, 35.4987, 0.3304 ) }
    dend_6 { pt3dadd( 449.975, 226.021, 35.4172, 0.293 ) }
    dend_6 { pt3dadd( 448.987, 225.448, 35.401, 0.26 ) }
    dend_6 { pt3dadd( 447.961, 224.944, 35.4623, 0.2342 ) }
    dend_6 { pt3dadd( 446.851, 224.711, 35.63, 0.2288 ) }
    dend_6 { pt3dadd( 445.728, 224.52, 35.8618, 0.2288 ) }
    dend_6 { pt3dadd( 444.633, 224.229, 36.2278, 0.2542 ) }
    dend_6 { pt3dadd( 443.529, 224.224, 36.96, 0.2796 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 489.168, 270.224, 56.7031, 0.2288 ) }
    dend_15 { pt3dadd( 490.005, 270.416, 57.3768, 0.2288 ) }
    dend_15 { pt3dadd( 491.018, 270.239, 58.5407, 0.2288 ) }
    dend_15 { pt3dadd( 492.111, 270.072, 59.2077, 0.2288 ) }
    dend_15 { pt3dadd( 493.061, 269.638, 59.9262, 0.2288 ) }
    dend_15 { pt3dadd( 494.051, 269.259, 60.6038, 0.2288 ) }
    dend_15 { pt3dadd( 495.067, 269.396, 61.3796, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_15 { pt3dadd( 496.027, 269.905, 62.1964, 0.2288 ) }
    dend_15 { pt3dadd( 497.057, 270.355, 62.718, 0.2288 ) }
    dend_15 { pt3dadd( 497.967, 270.967, 63.4119, 0.2288 ) }
    dend_15 { pt3dadd( 498.609, 271.817, 64.2575, 0.2288 ) }
    dend_15 { pt3dadd( 499.44, 272.305, 65.3338, 0.2288 ) }
    dend_15 { pt3dadd( 500.476, 272.556, 66.33, 0.2288 ) }
    dend_15 { pt3dadd( 501.536, 272.819, 67.1516, 0.2288 ) }
    dend_15 { pt3dadd( 502.358, 272.527, 68.4312, 0.2288 ) }
    dend_15 { pt3dadd( 503.316, 272.605, 69.428, 0.2288 ) }
    dend_15 { pt3dadd( 504.368, 272.908, 70.2453, 0.2288 ) }
    dend_15 { pt3dadd( 505.249, 272.278, 70.9139, 0.2288 ) }
    dend_15 { pt3dadd( 506.112, 271.581, 71.5837, 0.2288 ) }
    dend_15 { pt3dadd( 506.786, 270.963, 72.7255, 0.2288 ) }
    dend_15 { pt3dadd( 507.515, 271.678, 73.9743, 0.2288 ) }
    dend_15 { pt3dadd( 508.37, 272.369, 74.7485, 0.2288 ) }
    dend_15 { pt3dadd( 509.139, 272.958, 76.1729, 0.2288 ) }
    dend_15 { pt3dadd( 509.762, 273.674, 77.7356, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 17/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 489.168, 270.224, 56.7031, 0.2288 ) }
    dend_14 { pt3dadd( 489.22, 269.731, 56.6812, 0.2288 ) }
    dend_14 { pt3dadd( 489.559, 268.669, 56.6124, 0.2288 ) }
    dend_14 { pt3dadd( 489.958, 267.621, 56.5155, 0.2288 ) }
    dend_14 { pt3dadd( 490.456, 266.642, 56.3783, 0.2288 ) }
    dend_14 { pt3dadd( 491.258, 265.831, 56.2005, 0.2288 ) }
    dend_14 { pt3dadd( 492.144, 265.114, 56.0512, 0.2288 ) }
    dend_14 { pt3dadd( 492.982, 264.343, 55.9572, 0.2288 ) }
    dend_14 { pt3dadd( 493.763, 263.508, 55.9121, 0.2288 ) }
    dend_14 { pt3dadd( 494.79, 263.203, 55.9138, 0.2288 ) }
    dend_14 { pt3dadd( 495.845, 262.824, 55.9516, 0.2288 ) }
    dend_14 { pt3dadd( 496.674, 262.068, 56.1856, 0.2288 ) }
    dend_14 { pt3dadd( 497.484, 261.29, 56.4259, 0.2288 ) }
    dend_14 { pt3dadd( 498.401, 260.665, 56.56, 0.2288 ) }
    dend_14 { pt3dadd( 499.412, 260.237, 56.56, 0.2288 ) }
    dend_14 { pt3dadd( 500.08, 259.423, 56.56, 0.2288 ) }
    dend_14 { pt3dadd( 500.706, 258.475, 56.5603, 0.2288 ) }
    dend_14 { pt3dadd( 501.275, 257.55, 56.5606, 0.2288 ) }
    dend_14 { pt3dadd( 502.119, 256.837, 56.5614, 0.2288 ) }
    dend_14 { pt3dadd( 502.678, 255.844, 56.5631, 0.2288 ) }
    dend_14 { pt3dadd( 503.29, 254.895, 56.5656, 0.2288 ) }
    dend_14 { pt3dadd( 504.225, 254.26, 56.5729, 0.2288 ) }
    dend_14 { pt3dadd( 504.275, 253.119, 56.6051, 0.2288 ) }
    dend_14 { pt3dadd( 504.471, 251.996, 56.6454, 0.2288 ) }
    dend_14 { pt3dadd( 504.603, 250.861, 56.7028, 0.2288 ) }
    dend_14 { pt3dadd( 504.852, 249.745, 56.8215, 0.2288 ) }
    dend_14 { pt3dadd( 505.126, 248.682, 57.3549, 0.2288 ) }
    dend_14 { pt3dadd( 505.419, 247.637, 57.5271, 0.2288 ) }
    dend_14 { pt3dadd( 505.419, 246.497, 57.7086, 0.2288 ) }
    dend_14 { pt3dadd( 505.42, 245.373, 58.1829, 0.2288 ) }
    dend_14 { pt3dadd( 505.991, 244.569, 58.8048, 0.2288 ) }
    dend_14 { pt3dadd( 506.22, 243.463, 59.0092, 0.2288 ) }
    dend_14 { pt3dadd( 506.707, 242.544, 59.6145, 0.2288 ) }
    dend_14 { pt3dadd( 507.115, 241.54, 60.2154, 0.2288 ) }
    dend_14 { pt3dadd( 507.823, 240.743, 60.4814, 0.2288 ) }
    dend_14 { pt3dadd( 508.475, 239.82, 60.4845, 0.2288 ) }
    dend_14 { pt3dadd( 508.84, 238.737, 60.4881, 0.2288 ) }
    dend_14 { pt3dadd( 509.08, 237.625, 60.494, 0.2288 ) }
    dend_14 { pt3dadd( 509.172, 236.488, 60.5035, 0.2288 ) }
    dend_14 { pt3dadd( 509.728, 235.502, 60.5248, 0.2288 ) }
    dend_14 { pt3dadd( 510.404, 234.586, 60.5676, 0.2288 ) }
    dend_14 { pt3dadd( 510.988, 233.604, 60.6469, 0.2288 ) }
    dend_14 { pt3dadd( 511.617, 232.661, 60.8096, 0.2288 ) }
    dend_14 { pt3dadd( 512.629, 232.222, 61.0742, 0.2288 ) }
    dend_14 { pt3dadd( 513.677, 231.884, 61.4404, 0.2288 ) }
    dend_14 { pt3dadd( 514.639, 231.268, 61.5947, 0.2288 ) }
    dend_14 { pt3dadd( 515.601, 230.651, 61.7487, 0.2288 ) }
    dend_14 { pt3dadd( 516.562, 230.034, 61.903, 0.2288 ) }
    dend_14 { pt3dadd( 517.517, 229.413, 62.0822, 0.2288 ) }
    dend_14 { pt3dadd( 518.405, 228.838, 62.9521, 0.2288 ) }
    dend_14 { pt3dadd( 519.485, 228.592, 63.39, 0.2288 ) }
    dend_14 { pt3dadd( 520.486, 228.051, 63.56, 0.2288 ) }
    dend_14 { pt3dadd( 521.476, 227.495, 63.56, 0.2288 ) }
    dend_14 { pt3dadd( 522.41, 226.902, 63.56, 0.2288 ) }
    dend_14 { pt3dadd( 523.451, 226.567, 63.56, 0.2396 ) }
    dend_14 { pt3dadd( 524.364, 225.909, 63.56, 0.381 ) }
    dend_14 { pt3dadd( 525.034, 225.093, 63.56, 0.3888 ) }
    dend_14 { pt3dadd( 526.111, 224.727, 63.56, 0.358 ) }
    dend_14 { pt3dadd( 527.24, 224.623, 63.56, 0.314 ) }
    dend_14 { pt3dadd( 528.314, 224.296, 63.56, 0.394 ) }
    dend_14 { pt3dadd( 528.955, 223.384, 63.56, 0.2288 ) }
    dend_14 { pt3dadd( 530.092, 223.297, 63.56, 0.2288 ) }
    dend_14 { pt3dadd( 531.021, 222.747, 63.56, 0.2604 ) }
    dend_14 { pt3dadd( 532.141, 222.516, 63.56, 0.3032 ) }
    dend_14 { pt3dadd( 533.284, 222.508, 63.5603, 0.289 ) }
    dend_14 { pt3dadd( 534.428, 222.508, 63.5603, 0.3658 ) }
    dend_14 { pt3dadd( 535.57, 222.53, 63.5606, 0.5932 ) }
    dend_14 { pt3dadd( 536.486, 223.087, 63.5625, 0.548 ) }
    dend_14 { pt3dadd( 537.458, 223.657, 63.565, 0.3554 ) }
    dend_14 { pt3dadd( 538.501, 224.088, 63.5698, 0.3704 ) }
    dend_14 { pt3dadd( 539.643, 224.11, 63.5757, 0.5064 ) }
    dend_14 { pt3dadd( 540.787, 224.11, 63.5855, 0.503 ) }
    dend_14 { pt3dadd( 541.931, 224.11, 63.6006, 0.3392 ) }
    dend_14 { pt3dadd( 543.075, 224.11, 63.6264, 0.2392 ) }
    dend_14 { pt3dadd( 544.218, 224.11, 63.6664, 0.2288 ) }
    dend_14 { pt3dadd( 545.362, 224.11, 63.7277, 0.2288 ) }
    dend_14 { pt3dadd( 546.505, 224.11, 63.8518, 0.2288 ) }
    dend_14 { pt3dadd( 547.645, 224.11, 64.0662, 0.2288 ) }
    dend_14 { pt3dadd( 548.787, 224.11, 64.2429, 0.2288 ) }
    dend_14 { pt3dadd( 549.929, 224.11, 64.4218, 0.2288 ) }
    dend_14 { pt3dadd( 551.069, 224.11, 64.6408, 0.2288 ) }
    dend_14 { pt3dadd( 552.186, 224.285, 65.0376, 0.2288 ) }
    dend_14 { pt3dadd( 553.293, 224.453, 65.6006, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 554.418, 224.428, 66.0509, 0.2288 ) }
    dend_14 { pt3dadd( 555.557, 224.351, 66.1853, 0.2288 ) }
    dend_14 { pt3dadd( 556.698, 224.274, 66.3197, 0.2288 ) }
    dend_14 { pt3dadd( 557.838, 224.198, 66.4538, 0.2288 ) }
    dend_14 { pt3dadd( 558.978, 224.12, 66.5882, 0.2288 ) }
    dend_14 { pt3dadd( 560.118, 224.043, 66.7226, 0.2288 ) }
    dend_14 { pt3dadd( 561.258, 223.967, 66.8567, 0.2288 ) }
    dend_14 { pt3dadd( 562.398, 223.89, 66.9911, 0.2288 ) }
    dend_14 { pt3dadd( 563.539, 223.813, 67.1255, 0.2288 ) }
    dend_14 { pt3dadd( 564.678, 223.737, 67.2599, 0.2288 ) }
    dend_14 { pt3dadd( 565.819, 223.66, 67.394, 0.2288 ) }
    dend_14 { pt3dadd( 566.82, 223.619, 68.6552, 0.2288 ) }
    dend_14 { pt3dadd( 567.806, 223.329, 69.8384, 0.2288 ) }
    dend_14 { pt3dadd( 568.758, 222.966, 70.56, 0.2288 ) }
    dend_14 { pt3dadd( 569.881, 222.803, 70.56, 0.2288 ) }
    dend_14 { pt3dadd( 570.895, 222.303, 70.56, 0.2288 ) }
    dend_14 { pt3dadd( 571.963, 221.908, 70.5603, 0.2288 ) }
    dend_14 { pt3dadd( 573.012, 221.465, 70.5603, 0.2288 ) }
    dend_14 { pt3dadd( 573.951, 220.834, 70.5608, 0.2288 ) }
    dend_14 { pt3dadd( 574.946, 220.284, 70.5614, 0.2288 ) }
    dend_14 { pt3dadd( 575.93, 219.813, 70.5656, 0.2288 ) }
    dend_14 { pt3dadd( 576.511, 218.876, 70.5771, 0.2288 ) }
    dend_14 { pt3dadd( 576.939, 217.815, 70.5914, 0.2288 ) }
    dend_14 { pt3dadd( 577.242, 216.724, 70.6171, 0.2288 ) }
    dend_14 { pt3dadd( 577.262, 215.581, 70.653, 0.2288 ) }
    dend_14 { pt3dadd( 577.262, 214.437, 70.7056, 0.2288 ) }
    dend_14 { pt3dadd( 577.262, 213.294, 70.8238, 0.2288 ) }
    dend_14 { pt3dadd( 577.262, 212.152, 70.9808, 0.2288 ) }
    dend_14 { pt3dadd( 577.262, 211.012, 71.1844, 0.2288 ) }
    dend_14 { pt3dadd( 577.06, 209.902, 71.3233, 0.2288 ) }
    dend_14 { pt3dadd( 576.78, 208.802, 71.3975, 0.2288 ) }
    dend_14 { pt3dadd( 576.004, 208.094, 71.4, 0.2796 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 32/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 526.259, 330.823, 73.2012, 0.5338 ) }
    dend_11 { pt3dadd( 527.091, 330.173, 73.9444, 0.4438 ) }
    dend_11 { pt3dadd( 527.957, 329.496, 74.7183, 0.3502 ) }
    dend_11 { pt3dadd( 528.766, 328.861, 75.922, 0.3424 ) }
    dend_11 { pt3dadd( 529.537, 328.204, 77.1756, 0.3594 ) }
    dend_11 { pt3dadd( 530.125, 327.265, 77.873, 0.3918 ) }
    dend_11 { pt3dadd( 530.871, 326.479, 78.6229, 0.3976 ) }
    dend_11 { pt3dadd( 531.723, 325.804, 79.4293, 0.3822 ) }
    dend_11 { pt3dadd( 532.191, 324.838, 80.388, 0.3948 ) }
    dend_11 { pt3dadd( 532.658, 323.869, 81.3425, 0.4062 ) }
    dend_11 { pt3dadd( 533.086, 322.866, 82.1999, 0.3936 ) }
    dend_11 { pt3dadd( 533.509, 321.864, 83.0631, 0.3818 ) }
    dend_11 { pt3dadd( 533.766, 320.839, 84.1324, 0.3988 ) }
    dend_11 { pt3dadd( 534.164, 319.836, 84.9708, 0.397 ) }
    dend_11 { pt3dadd( 534.687, 318.852, 85.603, 0.3784 ) }
    dend_11 { pt3dadd( 535.211, 317.868, 86.2352, 0.3598 ) }
    dend_11 { pt3dadd( 535.735, 316.885, 86.8675, 0.3412 ) }
    dend_11 { pt3dadd( 536.051, 315.895, 87.8122, 0.3236 ) }
    dend_11 { pt3dadd( 536.081, 314.9, 89.1884, 0.3072 ) }
    dend_11 { pt3dadd( 536.059, 313.86, 90.3507, 0.291 ) }
    dend_11 { pt3dadd( 535.919, 312.823, 91.3982, 0.284 ) }
    dend_11 { pt3dadd( 535.517, 311.811, 92.2491, 0.2992 ) }
    dend_11 { pt3dadd( 534.796, 311.195, 93.448, 0.2958 ) }
    dend_11 { pt3dadd( 533.881, 310.824, 94.8604, 0.281 ) }
    dend_11 { pt3dadd( 533.101, 310.673, 96.857, 0.2676 ) }
    dend_11 { pt3dadd( 532.335, 310.544, 98.9134, 0.2542 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 526.259, 330.823, 73.2012, 0.5338 ) }
    dend_10 { pt3dadd( 526.875, 330.955, 73.1657, 0.4398 ) }
    dend_10 { pt3dadd( 527.994, 331.195, 73.101, 0.269 ) }
    dend_10 { pt3dadd( 529.105, 331.465, 72.9957, 0.2288 ) }
    dend_10 { pt3dadd( 530.213, 331.744, 72.8781, 0.2288 ) }
    dend_10 { pt3dadd( 531.32, 332.024, 72.7602, 0.2288 ) }
    dend_10 { pt3dadd( 532.417, 332.334, 72.6362, 0.2306 ) }
    dend_10 { pt3dadd( 533.42, 332.88, 72.4637, 0.246 ) }
    dend_10 { pt3dadd( 534.394, 333.473, 72.3313, 0.2614 ) }
    dend_10 { pt3dadd( 535.336, 334.122, 72.2464, 0.2772 ) }
    dend_10 { pt3dadd( 536.316, 334.711, 72.2358, 0.2872 ) }
    dend_10 { pt3dadd( 537.304, 335.288, 72.2386, 0.2962 ) }
    dend_10 { pt3dadd( 538.295, 335.852, 72.2467, 0.305 ) }
    dend_10 { pt3dadd( 539.435, 335.918, 72.434, 0.305 ) }
    dend_10 { pt3dadd( 540.574, 335.986, 72.6214, 0.305 ) }
    dend_10 { pt3dadd( 541.713, 336.039, 72.8498, 0.31 ) }
    dend_10 { pt3dadd( 542.85, 336.06, 73.1651, 0.3256 ) }
    dend_10 { pt3dadd( 543.981, 336.109, 73.5608, 0.3454 ) }
    dend_10 { pt3dadd( 545.114, 336.081, 73.848, 0.356 ) }
    dend_10 { pt3dadd( 546.25, 335.964, 73.9945, 0.356 ) }
    dend_10 { pt3dadd( 547.386, 335.848, 74.1409, 0.356 ) }
    dend_10 { pt3dadd( 548.523, 335.73, 74.2871, 0.356 ) }
    dend_10 { pt3dadd( 549.658, 335.608, 74.454, 0.3518 ) }
    dend_10 { pt3dadd( 550.787, 335.462, 74.7214, 0.3262 ) }
    dend_10 { pt3dadd( 551.916, 335.335, 75.0257, 0.2956 ) }
    dend_10 { pt3dadd( 553.043, 335.343, 75.4496, 0.2516 ) }
    dend_10 { pt3dadd( 554.172, 335.499, 75.6913, 0.2406 ) }
    dend_10 { pt3dadd( 555.301, 335.655, 75.9329, 0.2298 ) }
    dend_10 { pt3dadd( 556.301, 336.187, 76.1897, 0.2288 ) }
    dend_10 { pt3dadd( 557.289, 336.755, 76.4478, 0.2288 ) }
    dend_10 { pt3dadd( 558.345, 337.179, 76.7046, 0.2288 ) }
    dend_10 { pt3dadd( 559.398, 337.608, 76.9779, 0.23 ) }
    dend_10 { pt3dadd( 560.337, 338.233, 77.4491, 0.2448 ) }
    dend_10 { pt3dadd( 561.281, 338.847, 77.9346, 0.2612 ) }
    dend_10 { pt3dadd( 562.235, 339.444, 78.4356, 0.28 ) }
    dend_10 { pt3dadd( 563.247, 339.966, 78.6993, 0.2918 ) }
    dend_10 { pt3dadd( 564.259, 340.489, 78.9631, 0.3034 ) }
    dend_10 { pt3dadd( 565.254, 341.031, 79.3377, 0.2944 ) }
    dend_10 { pt3dadd( 566.247, 341.577, 79.7289, 0.2824 ) }
    dend_10 { pt3dadd( 567.241, 342.119, 80.1192, 0.2676 ) }
    dend_10 { pt3dadd( 568.251, 342.625, 80.4944, 0.2518 ) }
    dend_10 { pt3dadd( 569.353, 342.912, 80.782, 0.2352 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 570.451, 343.222, 80.96, 0.2288 ) }
    dend_10 { pt3dadd( 571.547, 343.544, 81.0695, 0.2288 ) }
    dend_10 { pt3dadd( 572.644, 343.868, 81.179, 0.2288 ) }
    dend_10 { pt3dadd( 573.74, 344.192, 81.2885, 0.2288 ) }
    dend_10 { pt3dadd( 574.863, 344.36, 81.4108, 0.2288 ) }
    dend_10 { pt3dadd( 576.004, 344.431, 81.5419, 0.2288 ) }
    dend_10 { pt3dadd( 577.143, 344.4, 81.6281, 0.2288 ) }
    dend_10 { pt3dadd( 578.282, 344.286, 81.6791, 0.2288 ) }
    dend_10 { pt3dadd( 579.42, 344.177, 81.711, 0.2288 ) }
    dend_10 { pt3dadd( 580.559, 344.076, 81.6995, 0.2288 ) }
    dend_10 { pt3dadd( 581.694, 344.137, 81.4484, 0.2288 ) }
    dend_10 { pt3dadd( 582.81, 344.061, 81.1507, 0.2288 ) }
    dend_10 { pt3dadd( 583.871, 343.669, 80.8903, 0.2288 ) }
    dend_10 { pt3dadd( 584.826, 343.043, 80.7419, 0.2288 ) }
    dend_10 { pt3dadd( 585.872, 342.787, 80.6005, 0.2288 ) }
    dend_10 { pt3dadd( 586.92, 343.159, 80.5605, 0.2288 ) }
    dend_10 { pt3dadd( 587.882, 343.778, 80.6114, 0.2288 ) }
    dend_10 { pt3dadd( 588.843, 344.397, 80.6624, 0.2288 ) }
    dend_10 { pt3dadd( 589.821, 344.988, 80.6481, 0.2288 ) }
    dend_10 { pt3dadd( 590.794, 345.581, 80.936, 0.2288 ) }
    dend_10 { pt3dadd( 591.821, 346.053, 81.216, 0.2288 ) }
    dend_10 { pt3dadd( 592.886, 346.453, 81.4797, 0.2288 ) }
    dend_10 { pt3dadd( 593.945, 346.829, 81.7099, 0.2288 ) }
    dend_10 { pt3dadd( 595.081, 346.932, 81.8728, 0.2288 ) }
    dend_10 { pt3dadd( 596.162, 347.263, 81.9896, 0.2288 ) }
    dend_10 { pt3dadd( 597.24, 347.641, 82.0126, 0.2288 ) }
    dend_10 { pt3dadd( 598.331, 347.982, 82.0126, 0.2288 ) }
    dend_10 { pt3dadd( 599.42, 347.721, 82.0126, 0.2288 ) }
    dend_10 { pt3dadd( 600.456, 347.267, 82.0126, 0.2386 ) }
    dend_10 { pt3dadd( 601.365, 346.573, 82.0126, 0.272 ) }
    dend_10 { pt3dadd( 602.127, 345.727, 82.0126, 0.3304 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_22, dend_17, dend_0, dend_30, dend_23, dend_19, dend_18, dend_16, dend_4, dend_1, dend_32, dend_31, dend_27, dend_24, dend_21, dend_20, dend_8, dend_5, dend_3, dend_2, dend_29, dend_28, dend_26, dend_25, dend_13, dend_12, dend_9, dend_7, dend_6, dend_15, dend_14, dend_11, dend_10]}
    dend = new SectionList()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_0 dend.append()
    dend_30 dend.append()
    dend_23 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_16665, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_16665 = new SectionList()
    soma_0 OneSecGrp_SectionRef_16665.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.2075875  // units: uF/cm2
    forsec axon cm = 2.2075875  // units: uF/cm2
    forsec dend cm = 2.2075875  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 294.5774  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.007334181  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.8459915E-9  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.26291898  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0019604145  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 5.1290944E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 3.816969E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.1475618E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.041603353  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.897852E-4  // units: S cm-2
        e_pas_nml2 = -80.975494  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.696629E-4  // units: S cm-2
        e_pas_nml2 = -80.975494  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.20465105E-4  // units: S cm-2
        e_pas_nml2 = -80.975494  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.8574013E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009555961  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472450023
    forsec soma {
        insert CaDynamics_472450023
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 5
    dend_5 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_26 nseg = 7
    dend_25 nseg = 3
    dend_13 nseg = 5
    dend_9 nseg = 5
    dend_7 nseg = 5
    dend_14 nseg = 7
    dend_10 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472450023


