// Cell: cNAC187_L23_ChC_85582ca6d2_0_0
/*
{
  "id" : "cNAC187_L23_ChC_85582ca6d2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.247476, -12.3185, -1.01707, 2.36383", "0.272374, -11.1472, -0.92957, 3.66321", "0.297273, -9.97598, -0.842075, 5.22974", "0.322171, -8.80474, -0.75458, 6.26105", "0.34707, -7.63351, -0.667085, 6.92536", "0.371968, -6.46227, -0.57959, 7.55364", "0.396866, -5.29103, -0.492094, 8.36178", "0.421765, -4.1198, -0.404599, 9.09467", "0.446663, -2.94856, -0.317104, 9.82452", "0.471562, -1.77733, -0.229609, 10.5969", "0.49646, -0.606089, -0.142114, 10.9527", "0.521359, 0.565147, -0.0546186, 11.1935", "0.546257, 1.73638, 0.0328765, 11.3346", "0.571156, 2.90762, 0.120372, 11.3156", "0.596054, 4.07886, 0.207867, 11.2804", "0.620953, 5.25009, 0.295362, 11.0098", "0.645851, 6.42133, 0.382857, 10.6994", "0.67075, 7.59256, 0.470352, 10.2417", "0.695648, 8.7638, 0.557847, 9.96532", "0.720546, 9.93504, 0.645343, 4.49434", "0.745445, 11.1063, 0.732838, 2.79989" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.17534, 7.60086, -4.88165, 0.29", "5.67785, 8.43507, -4.58991, 0.29", "6.21793, 9.34349, -4.31321, 0.37", "6.79869, 10.334, -4.05273, 0.52", "7.13815, 10.9224, -3.91845, 0.52", "7.62148, 11.7388, -3.75448, 0.81", "7.90515, 12.2414, -3.66803, 0.81", "8.21704, 12.8669, -3.5628, 0.29", "8.49331, 13.5368, -3.46778, 0.59", "8.71858, 14.1664, -3.40249, 0.59", "8.95112, 14.8824, -3.32538, 0.59", "9.25562, 15.8526, -3.21459, 0.29", "9.69437, 17.2375, -3.06272, 0.29", "9.98347, 18.0916, -2.97406, 0.81", "10.1801, 18.6208, -2.92409, 0.81", "10.4614, 19.3183, -2.87105, 0.52", "10.9083, 20.2497, -2.82056, 0.29", "11.5512, 21.4377, -2.77873, 0.22", "11.9403, 22.0832, -2.77873, 0.29", "12.3628, 22.7482, -2.77873, 0.29", "13.2373, 24.0907, -2.77873, 0.22", "14.0818, 25.3416, -2.77873, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.00466, -10.0701, 5.49835, 1.11", "-1.00466, -10.0701, 5.49835, 1.11", "-1.59415, -10.8787, 5.49835, 1.11", "-2.33598, -12.0114, 5.53174, 0.88", "-2.87148, -12.9109, 5.62557, 0.88", "-3.63269, -14.3606, 5.88695, 1.18", "-4.11331, -15.4432, 6.18692, 1.18", "-4.64713, -17.1297, 6.81682, 0.81", "-4.76378, -17.9042, 7.18191, 1.11", "-4.67419, -19.0979, 7.82065, 1.11", "-4.40199, -20.1036, 8.43282, 0.96", "-3.85295, -21.4066, 9.29195, 1.11", "-3.40831, -22.3133, 9.89856, 1.25", "-3.03201, -23.0191, 10.3569, 0.96", "-2.46936, -24.3035, 11.0615, 1.03", "-2.15254, -25.337, 11.4914, 1.03", "-2.0706, -25.9988, 11.7115, 0.59", "-2.13156, -26.8893, 12.0015, 0.88", "-2.24297, -27.3023, 12.1571, 0.88", "-2.80771, -28.5592, 12.6819, 0.66", "-3.15442, -29.0835, 12.9478, 0.74", "-3.7233, -29.8729, 13.367, 0.66", "-4.41012, -30.9023, 13.9331, 0.88", "-4.86751, -31.7104, 14.3582, 0.81", "-5.14886, -32.3295, 14.6751, 0.44", "-5.57351, -33.5968, 15.3042, 0.81", "-5.86546, -34.7677, 15.8146, 0.81", "-6.06438, -36.0308, 16.2399, 0.59", "-6.155, -37.1809, 16.5263, 1.11", "-6.16272, -38.1414, 16.6908, 1.33", "-6.12703, -38.9653, 16.8005, 1.11", "-6.02577, -40.0909, 16.9247, 0.81", "-5.90634, -41.1402, 17.1054, 0.66", "-5.78268, -41.8437, 17.3212, 1.18", "-5.48544, -42.9598, 17.8576, 0.96", "-5.23879, -43.7176, 18.3207, 0.74", "-4.89646, -44.6745, 19.0214, 0.66", "-4.51367, -45.7185, 19.8799, 0.88", "-4.10513, -46.9574, 21.0193, 1.18", "-3.84117, -47.9919, 22.0152, 0.66", "-3.74553, -48.679, 22.6664, 0.59", "-3.72928, -49.3197, 23.1768, 0.74", "-3.78474, -50.0524, 23.6416, 0.44", "-3.96081, -51.1232, 24.1192, 0.44", "-4.12043, -51.788, 24.2876, 0.44", "-4.39867, -52.8119, 24.39, 0.37", "-4.61564, -53.8361, 24.615, 0.37", "-4.7489, -54.5364, 24.9041, 0.96", "-4.83651, -55.0017, 25.1765, 0.96", "-5.02557, -55.8793, 25.8534, 0.44", "-5.25947, -56.7121, 26.6097, 0.81", "-6.09813, -59.4446, 29.267, 0.88", "-6.41293, -60.459, 30.2648, 0.88", "-6.5312, -60.9138, 30.6841, 0.88", "-6.69984, -61.7678, 31.3843, 0.66", "-6.88404, -63.033, 32.2915, 0.52", "-6.9669, -63.9475, 32.7517, 0.59", "-6.99131, -64.8625, 32.968, 0.59", "-6.89844, -66.0061, 33.2205, 0.74", "-6.81212, -66.6736, 33.3811, 0.74", "-6.56448, -68.3618, 33.8508, 0.74", "-6.39064, -69.421, 34.2529, 0.52", "-6.27647, -70.0926, 34.5568, 0.66", "-6.14446, -70.7873, 34.8826, 0.66", "-5.91201, -71.7072, 35.3244, 0.37", "-5.70341, -72.322, 35.5746, 0.37", "-5.37806, -73.115, 35.7949, 0.37", "-5.02751, -73.9921, 35.9936, 0.37", "-4.74724, -74.7179, 36.1274, 0.37", "-4.25725, -75.8828, 36.3096, 0.37", "-3.95771, -76.5066, 36.4139, 0.52", "-3.745, -76.9534, 36.4853, 0.66", "-3.45893, -77.6273, 36.5971, 0.52", "-3.12631, -78.5297, 36.7668, 0.52", "-2.8043, -79.4467, 36.9556, 0.74", "-2.53214, -80.2261, 37.0956, 0.88", "-2.24012, -81.0422, 37.2518, 0.96", "-2.0576, -81.5435, 37.3517, 0.96", "-1.87029, -82.0533, 37.4556, 0.81", "-1.57749, -82.9666, 37.6302, 1.18", "-1.42024, -83.6155, 37.7551, 1.4", "-1.3156, -84.13, 37.8397, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.87466, -11.8024, -0.261648, 2.87", "-2.87466, -11.8024, -0.261648, 2.87", "-3.46007, -12.4115, -0.206396, 2.87", "-4.58606, -13.6022, -0.123213, 2.21", "-5.5695, -14.6421, -0.0505606, 2.21", "-6.28276, -15.3964, 0.00213236, 2.21", "-7.18739, -16.353, 0.0689624, 2.21", "-8.12867, -17.3421, 0.131608, 2.21", "-9.09693, -18.3451, 0.179983, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.71466, 9.84559, 3.05835, 3.83", "-4.07028, 10.3954, 3.3948, 3.83", "-4.90295, 11.6828, 4.18258, 3.32", "-5.60937, 12.7749, 4.85091, 3.32", "-6.24473, 13.7572, 5.45202, 3.39", "-7.11298, 15.0995, 6.27346, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.19534, 8.27736, -4.07165, 1.99", "4.19534, 8.27736, -4.07165, 1.99", "4.33833, 9.08169, -3.68919, 1.03", "4.45321, 9.81459, -3.29833, 1.03", "4.58928, 10.8421, -2.71096, 1.03", "4.66521, 11.5105, -2.32367, 1.03", "4.74044, 12.2774, -1.88792, 1.03", "4.83179, 13.402, -1.25713, 1.11", "4.87125, 14.0291, -0.878984, 1.33", "4.90413, 14.7709, -0.424892, 1.33", "4.92311, 15.1536, -0.19853, 1.47", "4.96471, 15.623, 0.0668144, 1.47", "5.05419, 16.3796, 0.445248, 1.25", "5.23536, 17.5499, 0.934823, 1.25", "5.35382, 18.1379, 1.1462, 1.4", "5.57913, 19.0163, 1.42943, 1.4", "5.87775, 20.0717, 1.69259, 1.18", "6.12232, 20.9305, 1.81997, 1.25", "6.32232, 21.6688, 1.85671, 1.11", "6.57512, 22.7209, 1.77833, 0.88", "6.77683, 23.688, 1.64298, 0.88", "6.9903, 25.0137, 1.39369, 0.88", "7.12333, 26.3059, 1.10551, 1.4", "7.18258, 27.3838, 0.853584, 1.55", "7.19338, 28.8214, 0.544409, 1.84", "7.17515, 29.4103, 0.432849, 1.84", "7.13095, 30.5078, 0.263192, 1.33", "7.10308, 31.7929, 0.139409, 0.96", "7.12999, 32.8805, 0.0798744, 0.96", "7.26009, 34.3463, 0.0430313, 1.03", "7.38711, 35.0422, 0.0521594, 1.25", "7.68142, 36.0503, 0.0791914, 1.47", "7.96924, 36.7217, 0.103099, 1.47", "8.50651, 37.6546, 0.142059, 1.03", "8.99623, 38.3314, 0.154979, 1.03", "9.62588, 39.0786, 0.163731, 1.47", "10.2293, 39.7428, 0.188495, 1.25", "10.6314, 40.1621, 0.222638, 1.55", "11.4056, 40.9514, 0.298757, 0.81", "12.1331, 41.6884, 0.385322, 0.81", "12.6989, 42.2665, 0.467392, 1.25", "13.2039, 42.8003, 0.560416, 1.47", "13.6789, 43.3258, 0.672309, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.745445, 11.1063, 0.732838, 0.885241", "1.06425, 26.1029, 0.732838, 0.885241", "1.38305, 41.0995, 0.732838, 0.885241" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.09693, -18.3451, 0.179983, 0.96", "-9.16725, -18.816, 0.62286, 0.96", "-9.37548, -19.9366, 1.63801, 0.74", "-9.78221, -21.952, 3.36102, 1.11", "-10.057, -23.1372, 4.30425, 0.81", "-10.2626, -23.9015, 4.85445, 0.66", "-10.4496, -24.5107, 5.2492, 0.44", "-10.696, -25.1731, 5.64335, 0.66", "-10.9066, -25.6194, 5.84367, 1.03", "-11.2412, -26.2938, 5.94577, 1.03", "-11.7048, -27.2294, 5.96082, 0.81", "-12.0455, -28.0201, 5.92477, 0.81", "-12.3075, -28.7803, 5.84863, 0.96", "-12.645, -30.1424, 5.65501, 0.74", "-12.9436, -31.9296, 5.36013, 0.52", "-13.0137, -32.6796, 5.20449, 0.88", "-13.0573, -33.8635, 4.88134, 0.74", "-13.0442, -35.3284, 4.39152, 0.59", "-12.9844, -36.6669, 3.87174, 0.74", "-12.899, -38.0027, 3.33829, 0.59", "-12.8189, -39.7246, 2.65471, 0.74", "-12.823, -41.1469, 2.10401, 0.81", "-12.8902, -42.2935, 1.68654, 0.52", "-12.9853, -43.2178, 1.38797, 0.66", "-13.1467, -44.3782, 1.07828, 0.59", "-13.3566, -45.6343, 0.859171, 0.74", "-13.5629, -46.6334, 0.798575, 0.74", "-13.8606, -47.8237, 0.82944, 0.52", "-14.1389, -48.7395, 0.889691, 0.96", "-14.3178, -49.3062, 0.929106, 1.11", "-14.5242, -50.0406, 0.963013, 1.25", "-14.7227, -50.8011, 0.989753, 0.96", "-14.9643, -51.7467, 1.00591, 0.96", "-15.2889, -52.97, 0.978863, 0.52", "-15.5313, -53.9735, 0.9213, 0.59", "-15.7396, -54.9883, 0.836163, 0.81", "-15.8904, -55.9582, 0.700092, 0.96", "-15.9711, -56.8579, 0.520825, 0.96", "-16.022, -58.1219, 0.192191, 0.74", "-16.0383, -59.5062, -0.227539, 0.74", "-16.0605, -60.4229, -0.535839, 1.03", "-16.1091, -61.6554, -0.973687, 1.25", "-16.1428, -62.7255, -1.3901, 0.66", "-16.1603, -63.466, -1.63939, 0.52", "-16.185, -64.2954, -1.85943, 0.74", "-16.2278, -65.3567, -2.0477, 0.74", "-16.2536, -66.351, -2.10533, 0.66", "-16.2655, -67.3824, -2.05507, 0.66", "-16.233, -69.4424, -1.80383, 0.66", "-16.1684, -70.5419, -1.62006, 0.74", "-16.0314, -72.0182, -1.34007, 0.74", "-15.8535, -73.7018, -0.970645, 0.88", "-15.7719, -74.7126, -0.733268, 1.11", "-15.716, -75.9014, -0.448601, 1.11", "-15.6663, -77.3276, -0.153244, 0.88", "-15.6224, -78.7009, 0.155374, 0.74", "-15.5634, -80.3068, 0.469667, 0.59", "-15.4767, -81.6353, 0.627604, 0.44", "-15.4205, -82.1403, 0.65462, 0.74", "-15.256, -83.1067, 0.647266, 0.88", "-15.0059, -84.0728, 0.62887, 0.88", "-14.5116, -85.5786, 0.603863, 0.66", "-14.1555, -86.5368, 0.620405, 0.81", "-13.8528, -87.4243, 0.700579, 0.81", "-13.667, -88.2943, 0.82599, 0.59", "-13.5646, -89.716, 1.05175, 0.74", "-13.6121, -90.5774, 1.16377, 0.96", "-13.7395, -91.4081, 1.21597, 0.96", "-13.9944, -92.5341, 1.14984, 0.66", "-14.3543, -93.916, 0.901495, 0.44", "-14.6382, -94.9635, 0.593444, 0.81", "-14.9401, -96.1829, 0.138512, 0.81", "-15.2713, -97.7885, -0.5153, 0.37", "-15.4407, -98.7983, -0.951385, 0.81", "-15.5446, -99.6842, -1.33042, 1.03", "-15.5906, -100.564, -1.65773, 0.52", "-15.5654, -101.626, -1.94178, 0.29", "-15.5119, -102.155, -2.03777, 0.88", "-15.4562, -102.551, -2.08309, 1.11", "-15.3623, -103.109, -2.15794, 1.18", "-15.221, -103.953, -2.29001, 0.81", "-15.034, -105.205, -2.51207, 0.44", "-14.9348, -106.015, -2.70111, 0.29", "-14.8618, -106.79, -2.88584, 0.29", "-14.8248, -107.645, -3.08536, 0.59", "-14.828, -107.972, -3.15506, 0.88", "-14.8623, -108.491, -3.23925, 0.88", "-14.9375, -109.158, -3.27883, 0.59", "-15.0357, -110.103, -3.21066, 0.29", "-15.0908, -110.658, -3.12304, 0.66", "-15.151, -111.292, -2.96562, 0.81", "-15.2111, -111.987, -2.77536, 1.03", "-15.2698, -112.552, -2.61844, 1.18", "-15.3637, -113.19, -2.43934, 1.18", "-15.4351, -113.575, -2.34227, 1.25", "-15.6253, -114.443, -2.16548, 0.96", "-15.8307, -115.267, -2.04253, 0.59", "-16.0853, -116.278, -1.9494, 0.37", "-16.2938, -117.108, -1.92298, 0.22", "-16.4096, -117.572, -1.93162, 0.29", "-16.6279, -118.492, -1.98248, 0.44", "-16.7639, -119.075, -2.03567, 1.03", "-16.934, -119.888, -2.11695, 1.18", "-17.0457, -120.492, -2.18797, 1.18", "-17.2513, -121.63, -2.32896, 0.59", "-17.4245, -122.488, -2.40326, 0.59", "-17.601, -123.276, -2.45089, 0.59", "-17.8905, -124.52, -2.54717, 0.81", "-18.0336, -125.121, -2.60151, 0.88", "-18.3531, -126.435, -2.72418, 0.52", "-18.6821, -127.843, -2.86005, 0.52", "-18.9624, -129.143, -2.96413, 0.59", "-19.1627, -130.159, -3.05606, 0.29", "-19.2725, -130.801, -3.13127, 0.29", "-19.3683, -131.472, -3.22266, 0.88", "-19.528, -132.775, -3.44166, 0.29", "-19.6501, -133.739, -3.63026, 1.03", "-19.7793, -134.63, -3.83061, 1.25", "-19.918, -135.498, -4.06027, 1.03", "-20.1315, -136.874, -4.51828, 0.44", "-20.2771, -137.794, -4.90141, 0.44", "-20.4674, -138.787, -5.38314, 0.44", "-20.7607, -140.056, -6.0708, 0.44", "-21.0725, -141.291, -6.74381, 0.66", "-21.3537, -142.367, -7.36407, 1.55", "-21.6001, -143.28, -7.91484, 1.92", "-21.8979, -144.425, -8.56823, 0.66", "-22.2505, -145.725, -9.23338, 0.59", "-22.5242, -146.64, -9.6192, 0.29", "-22.887, -147.744, -9.98423, 0.29", "-23.2051, -148.675, -10.2149, 0.29", "-23.7299, -150.222, -10.4869, 0.29", "-24.0517, -151.193, -10.6047, 1.25", "-24.3677, -152.217, -10.6823, 1.33", "-24.782, -153.639, -10.7669, 0.52", "-24.9416, -154.262, -10.792, 0.52", "-25.1072, -155.124, -10.8373, 0.66", "-25.2179, -155.972, -10.8893, 0.37", "-25.2544, -156.726, -10.9391, 0.29", "-25.2341, -157.384, -10.9812, 0.81", "-25.1569, -158.117, -11.0234, 0.96", "-25.0262, -159.003, -11.0643, 0.59", "-24.8919, -159.739, -11.0673, 0.44", "-24.8615, -159.889, -11.0627, 0.37", "-24.6074, -161.219, -10.9916, 0.22", "-24.4921, -161.803, -10.9492, 0.52", "-24.4484, -162.025, -10.9297, 0.52", "-24.0952, -163.797, -10.7388, 0.22", "-24.0178, -164.165, -10.6915, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.09693, -18.3451, 0.179983, 1.62", "-10.5805, -19.155, 0.72218, 1.62", "-11.6794, -19.7549, 1.12378, 1.62", "-12.5249, -20.2165, 1.43276, 1.84", "-13.2983, -20.6387, 1.7154, 2.06", "-14.0753, -21.0629, 1.9994, 2.36", "-14.5875, -21.3425, 2.18656, 2.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.11298, 15.0995, 6.27346, 1.25", "-7.72019, 17.5762, 6.34958, 1.25", "-8.04223, 18.9897, 6.66232, 1.4", "-8.2802, 20.0845, 7.01478, 1.4", "-8.58817, 21.6232, 7.59129, 1.47", "-8.70674, 22.2155, 7.81324, 1.69", "-8.89202, 23.1412, 8.16007, 1.69", "-9.18992, 24.8107, 9.1335, 1.62", "-9.33217, 25.8013, 9.85179, 1.55", "-9.45489, 26.7043, 10.5975, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.11298, 15.0995, 6.27346, 1.77", "-8.3915, 15.9949, 8.14019, 1.77", "-9.61704, 16.8532, 9.92957, 1.62", "-10.3791, 17.3869, 11.0423, 1.55", "-11.0935, 17.8873, 12.0854, 1.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.6789, 43.3258, 0.672309, 0.59", "14.2532, 45.3382, 0.145484, 0.59", "14.5239, 46.1331, -0.0397846, 0.59", "14.8703, 46.8992, -0.204294, 0.74", "15.2874, 47.6002, -0.342179, 0.74", "15.7793, 48.281, -0.48381, 0.88", "16.1945, 48.8138, -0.596506, 1.03", "16.9207, 49.6659, -0.735995, 0.59", "17.5594, 50.4374, -0.860274, 0.88", "18.1737, 51.2501, -1.01821, 0.88", "18.7202, 52.0749, -1.21814, 0.66", "19.1438, 52.9188, -1.49836, 0.52", "19.3088, 53.6324, -1.91381, 0.52", "19.3848, 54.5759, -2.69277, 0.52", "19.3273, 55.4918, -3.59529, 0.96", "19.2308, 55.9517, -4.10429, 1.18", "19.0701, 56.4253, -4.6718, 1.18", "18.389, 57.9466, -6.64112, 0.81", "18.0827, 58.6326, -7.51635, 0.59", "17.7591, 59.5116, -8.59791, 0.74", "17.603, 60.13, -9.26908, 0.66", "17.5422, 60.6924, -9.76806, 0.66", "17.6081, 61.4573, -10.3583, 0.66", "17.899, 62.6085, -11.095, 0.81", "18.3125, 63.709, -11.8013, 1.03", "18.689, 64.4519, -12.2845, 0.96", "19.1302, 65.25, -12.8057, 0.81", "19.9938, 66.8674, -13.83, 0.81", "20.2691, 67.4666, -14.163, 1.03", "20.5313, 68.2686, -14.5382, 1.03", "20.6717, 68.9673, -14.7894, 1.11", "20.761, 69.8676, -15.0548, 1.11", "20.7768, 70.8404, -15.2675, 0.81", "20.7275, 72.3737, -15.4731, 0.74", "20.6966, 73.4874, -15.6024, 0.88", "20.6947, 74.4507, -15.7109, 0.88", "20.7308, 75.1242, -15.7902, 0.52", "20.8691, 76.2187, -15.9208, 0.37", "20.9346, 76.529, -15.9628, 0.37", "21.1839, 77.4005, -16.1181, 0.37", "21.6477, 78.6599, -16.3673, 0.74", "21.9438, 79.4272, -16.516, 0.96", "22.1736, 80.0989, -16.6497, 1.18", "22.2786, 80.5149, -16.732, 1.18", "22.3873, 81.5724, -16.9132, 0.88", "22.3471, 82.5836, -17.0545, 0.29", "22.1491, 83.8632, -17.187, 0.88", "21.9062, 84.8185, -17.2727, 0.88", "21.5758, 85.8176, -17.3446, 0.88", "21.0767, 87.13, -17.4447, 0.59", "20.741, 87.9542, -17.5028, 0.59", "20.4501, 88.7297, -17.5648, 0.96", "20.128, 89.8725, -17.6673, 0.88", "19.9736, 90.8759, -17.8076, 0.52", "19.9459, 92.1705, -18.0564, 0.52", "20.0412, 93.1831, -18.3334, 0.52", "20.2474, 94.3158, -18.6994, 0.81", "20.478, 95.2185, -19.0098, 0.81", "20.9497, 96.6051, -19.5141, 0.81", "21.224, 97.3604, -19.7934, 0.59", "21.5937, 98.4683, -20.2032, 0.74", "21.7744, 99.1821, -20.4906, 0.88", "21.9226, 100.295, -20.9568, 0.37", "21.9764, 101.32, -21.3667, 0.37", "21.9975, 102.057, -21.6235, 0.37", "22.0393, 102.878, -21.923, 0.37", "22.1127, 103.459, -22.1545, 0.37", "22.2841, 104.202, -22.5052, 0.52", "22.4849, 104.772, -22.7914, 0.81", "22.7582, 105.411, -23.0794, 0.81", "23.0226, 105.96, -23.2976, 0.81", "23.3952, 106.764, -23.5785, 0.74", "23.6771, 107.466, -23.7836, 0.59", "23.9073, 108.225, -23.9769, 0.52", "24.0398, 108.893, -24.1375, 0.88", "24.1181, 109.69, -24.3235, 0.88", "24.1394, 110.69, -24.5549, 0.44", "24.1096, 111.572, -24.7854, 0.44", "24.0682, 112.341, -25.0339, 0.44", "24.0276, 113.25, -25.4117, 0.81", "24.0138, 114.11, -25.8246, 0.81", "24.0332, 114.958, -26.2655, 0.59", "24.097, 115.961, -26.8068, 0.59", "24.1582, 116.573, -27.1347, 0.88", "24.2729, 117.47, -27.6009, 0.88", "24.3842, 118.421, -28.0538, 0.88", "24.4203, 119.014, -28.2884, 0.96", "24.3986, 119.636, -28.4726, 0.96", "24.278, 120.404, -28.6127, 0.44", "24.063, 121.246, -28.7141, 0.44", "23.9012, 121.821, -28.7558, 0.44", "23.6086, 122.89, -28.8542, 0.81", "23.4161, 123.704, -28.9515, 0.81", "23.1695, 124.849, -29.1039, 1.11", "23.0613, 125.407, -29.1779, 1.11", "22.8637, 126.533, -29.3156, 0.37", "22.7474, 127.337, -29.4164, 0.37", "22.5703, 128.638, -29.5804, 0.52", "22.4585, 129.446, -29.6747, 0.52", "22.319, 130.607, -29.8471, 0.88", "22.2458, 131.345, -29.9934, 0.88", "22.1731, 132.4, -30.2463, 0.88", "22.1834, 132.99, -30.4142, 0.96", "22.3514, 134.06, -30.8407, 0.66", "22.7413, 135.488, -31.5703, 0.66", "23.0421, 136.375, -32.1225, 0.66", "23.2487, 136.982, -32.5492, 0.59", "23.4937, 137.767, -33.1588, 0.74", "23.7236, 138.641, -33.8687, 0.59", "23.8845, 139.365, -34.4607, 0.88", "24.0081, 140.12, -35.0399, 0.88", "24.1482, 140.876, -35.6305, 0.88", "24.2337, 141.234, -35.9139, 0.88", "24.5257, 142.149, -36.5668, 0.37", "24.8206, 142.821, -36.9679, 0.81", "25.0894, 143.267, -37.2038, 0.81", "25.8171, 144.3, -37.6412, 0.37", "26.2694, 144.922, -37.8449, 0.37", "26.7168, 145.576, -37.9954, 0.81", "27.0945, 146.231, -38.1015, 0.81", "27.3263, 146.775, -38.1691, 0.81", "27.5462, 147.505, -38.2777, 0.52", "27.6364, 148.023, -38.3782, 0.59", "27.7236, 148.778, -38.6007, 0.44", "27.8023, 149.579, -38.894, 0.59", "27.8753, 150.357, -39.2097, 0.66", "27.9797, 151.616, -39.7296, 0.44", "28.0644, 152.663, -40.1595, 1.33", "28.1162, 153.282, -40.397, 1.33", "28.1945, 154.374, -40.7692, 0.37", "28.2686, 155.28, -41.0186, 0.29", "28.3316, 156.103, -41.1967, 0.52", "28.3456, 156.54, -41.2525, 0.74", "28.2955, 157.397, -41.3235, 0.44", "28.1566, 158.092, -41.3559, 0.74", "27.9344, 158.641, -41.3802, 0.74", "27.5346, 159.345, -41.4226, 0.44", "27.0653, 160.036, -41.5299, 0.74", "26.6155, 160.618, -41.6779, 0.74", "26.283, 161.017, -41.8451, 0.88", "25.7629, 161.647, -42.1877, 0.59", "25.3923, 162.124, -42.4824, 0.44", "24.8998, 162.871, -42.9691, 0.74", "24.6311, 163.387, -43.2918, 0.59", "24.1484, 164.503, -43.9183, 1.25", "23.9992, 164.881, -44.1086, 1.4", "23.7268, 165.559, -44.4019, 0.88", "23.352, 166.337, -44.6825, 0.59", "22.9697, 167.007, -44.8721, 0.59", "22.4769, 167.739, -45.0412, 0.66", "21.9499, 168.334, -45.1375, 0.52", "21.3542, 168.906, -45.2325, 0.37", "20.7255, 169.464, -45.3281, 0.52", "20.4017, 169.74, -45.3779, 0.66", "20.0546, 170.057, -45.4501, 0.66", "19.5518, 170.794, -45.7043, 0.29", "19.3313, 171.536, -46.0848, 0.29", "19.2241, 172.212, -46.5531, 0.66", "19.154, 172.656, -46.9572, 0.66", "19.0119, 173.096, -47.4983, 0.52", "18.6666, 173.561, -48.3417, 0.66", "18.189, 173.842, -49.1498, 0.81", "17.7135, 173.979, -49.7349, 0.96", "17.1379, 174.089, -50.3078, 0.96", "16.3115, 174.235, -50.9928, 0.81", "15.4384, 174.403, -51.6006, 0.74", "14.6215, 174.647, -52.0746, 0.52", "13.9767, 174.952, -52.3842, 0.66", "13.5319, 175.253, -52.5553, 0.66", "12.7391, 175.944, -52.781, 0.37", "12.23, 176.479, -52.8948, 0.37", "11.2745, 177.628, -53.1086, 0.29", "10.8422, 178.211, -53.2367, 0.52", "10.5224, 178.693, -53.3711, 0.52", "10.1136, 179.358, -53.5916, 0.29", "9.78537, 179.898, -53.7903, 0.29", "9.25408, 180.756, -54.1655, 0.59", "8.77632, 181.48, -54.5767, 0.52", "8.38302, 182.127, -54.9905, 0.74", "8.22771, 182.419, -55.1936, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.6789, 43.3258, 0.672309, 0.96", "14.0212, 45.1432, 1.2553, 0.96", "14.1992, 45.9724, 1.4707, 0.96", "14.3572, 46.6119, 1.57667, 0.81", "14.6761, 47.9272, 1.65696, 0.88", "14.8863, 48.8521, 1.62593, 0.88", "15.0527, 49.7465, 1.54565, 0.81", "15.1892, 50.8017, 1.32106, 0.96", "15.2838, 51.9063, 1.04481, 0.74", "15.3642, 53.0192, 0.731784, 0.88", "15.3792, 54.0185, 0.436739, 0.88", "15.3144, 55.202, 0.116047, 0.88", "15.1634, 56.2941, -0.138414, 1.03", "14.8967, 57.3553, -0.323298, 1.03", "14.5791, 58.2243, -0.401468, 0.88", "13.9896, 59.4163, -0.434158, 0.96", "13.5509, 60.1169, -0.434158, 1.11", "13.045, 60.8158, -0.434158, 1.11", "12.3459, 61.7228, -0.434158, 1.11", "11.6622, 62.5931, -0.434158, 1.11", "10.7522, 63.8015, -0.443484, 1.03", "10.0978, 64.7961, -0.468555, 1.03", "9.42832, 65.9823, -0.511026, 0.96", "8.88629, 67.2067, -0.610268, 1.03", "8.52767, 68.3275, -0.764543, 0.88", "8.35686, 69.1397, -0.911552, 0.88", "8.24624, 70.1665, -1.12523, 1.11", "8.21595, 70.7968, -1.27279, 1.11", "8.19423, 72.5573, -1.62264, 1.03", "8.18383, 73.9444, -1.83968, 0.88", "8.15194, 75.2185, -1.95753, 0.88", "8.06724, 76.5911, -1.96024, 0.88", "7.94005, 77.7569, -1.85126, 1.03", "7.67262, 79.5054, -1.53994, 0.88", "7.46344, 80.6314, -1.22761, 0.96", "7.27428, 81.6335, -0.900699, 1.03", "7.10605, 82.645, -0.593498, 1.33", "6.97871, 83.7334, -0.318209, 0.74", "6.9569, 84.3943, -0.230163, 0.74", "7.00615, 85.2453, -0.251923, 0.88", "7.1799, 86.321, -0.369266, 0.88", "7.49756, 87.6008, -0.594369, 0.81", "7.79868, 88.5476, -0.797215, 0.88", "8.25152, 89.7516, -1.09303, 0.74", "8.58194, 90.555, -1.29715, 0.74", "9.019, 91.6101, -1.56521, 0.81", "9.40473, 92.5531, -1.81069, 0.81", "9.67471, 93.2607, -1.97933, 0.81", "10.0005, 94.276, -2.23849, 0.81", "10.2069, 95.193, -2.47358, 0.96", "10.3203, 96.1337, -2.72107, 0.96", "10.3635, 97.1009, -2.96282, 1.03", "10.3801, 98.3014, -3.28763, 0.96", "10.4066, 99.4701, -3.61869, 0.96", "10.4484, 100.872, -4.00387, 0.96", "10.494, 102.056, -4.34958, 0.96", "10.5653, 103.317, -4.72668, 0.88", "10.6553, 104.892, -5.19256, 0.81", "10.6959, 105.872, -5.48416, 0.81", "10.7079, 106.873, -5.77195, 0.74", "10.624, 108.022, -6.09821, 1.03", "10.4632, 108.93, -6.33903, 1.03", "10.1198, 110.099, -6.59175, 1.03", "9.73864, 111.149, -6.74842, 1.11", "9.4646, 111.845, -6.83637, 1.11", "8.94309, 113.207, -6.9539, 0.96", "8.56417, 114.296, -7.00627, 0.96", "8.2138, 115.502, -7.03852, 0.96", "7.85351, 117.073, -7.05434, 0.88", "7.64609, 118.252, -7.05521, 1.18", "7.44018, 119.606, -7.04188, 0.96", "7.27245, 120.723, -7.02148, 0.88", "7.09574, 121.873, -6.98039, 0.88", "6.91421, 123.046, -6.91114, 0.88", "6.77132, 123.969, -6.84138, 0.96", "6.59023, 125.148, -6.7447, 0.96", "6.40736, 126.327, -6.66034, 0.96", "6.23268, 127.615, -6.59354, 1.03", "6.1249, 128.705, -6.55958, 0.96", "6.07417, 130.043, -6.5558, 0.88", "6.11699, 131.232, -6.58557, 0.81", "6.22955, 132.295, -6.64313, 0.96", "6.45194, 133.841, -6.76964, 0.81", "6.55338, 134.541, -6.83527, 0.81", "6.64864, 135.354, -6.896, 0.81", "6.70983, 136.56, -6.93704, 0.88", "6.67992, 137.421, -6.92712, 0.88", "6.54794, 138.247, -6.87454, 0.88", "6.30559, 139.046, -6.78546, 0.74", "5.84947, 140.161, -6.65162, 0.88", "5.19038, 141.529, -6.45814, 1.33", "4.82591, 142.252, -6.35466, 1.33", "4.38149, 143.213, -6.22957, 1.11", "4.05866, 144.045, -6.15627, 0.96", "3.83517, 144.792, -6.12856, 0.96", "3.56585, 146.055, -6.11887, 0.74", "3.44099, 146.991, -6.14503, 0.74", "3.36219, 147.973, -6.21039, 0.74", "3.31099, 149.019, -6.3153, 0.74", "3.26376, 150.256, -6.47841, 1.03", "3.22114, 151.2, -6.64415, 1.03", "3.16192, 152.143, -6.84221, 1.03", "3.0807, 152.969, -7.0255, 0.88", "2.94179, 154.081, -7.27854, 0.88", "2.8116, 155.072, -7.49918, 1.03", "2.69365, 156.169, -7.76964, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.38305, 41.0995, 0.732838, 0.66", "1.70185, 56.0961, 0.732838, 0.66", "2.02065, 71.0928, 0.732838, 0.66" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-14.5875, -21.3425, 2.18656, 0.96", "-15.4862, -22.6775, 2.53825, 0.96", "-16.2629, -23.7111, 2.79532, 0.96", "-16.9028, -24.4933, 2.97344, 1.11", "-17.3471, -25.0144, 3.02599, 1.25", "-17.7332, -25.4637, 3.01922, 1.25", "-18.4594, -26.3339, 2.94184, 1.03", "-19.0546, -27.0079, 2.79666, 0.96", "-19.6029, -27.6635, 2.55591, 1.18", "-20.5591, -28.8424, 2.0199, 1.03", "-21.1236, -29.5674, 1.64719, 1.03", "-21.6502, -30.2851, 1.23376, 0.88", "-22.0533, -30.8844, 0.834348, 1.11", "-22.5123, -31.6361, 0.291364, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-14.5875, -21.3425, 2.18656, 1.92", "-15.8575, -20.174, 2.18656, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.45489, 26.7043, 10.5975, 0.88", "-9.88983, 27.5435, 9.74685, 0.88", "-10.1862, 28.3142, 8.91128, 0.81", "-10.3579, 28.8884, 8.32379, 0.81", "-10.6091, 29.9744, 7.25902, 0.66", "-10.7879, 30.751, 6.51543, 1.11", "-10.966, 31.3729, 5.92172, 1.11", "-11.432, 32.7519, 4.63317, 0.88", "-11.7391, 33.4173, 4.02663, 1.03", "-12.3872, 34.4113, 3.10486, 1.11", "-13.0702, 35.1354, 2.49564, 0.88", "-14.1494, 35.8349, 1.95049, 0.88", "-15.2895, 36.2775, 1.68933, 0.81", "-16.3326, 36.5288, 1.63414, 0.88", "-17.3705, 36.6852, 1.6211, 1.11", "-19.2721, 36.8929, 1.67094, 1.33", "-20.2637, 37.0169, 1.65451, 0.96", "-21.2494, 37.2078, 1.54942, 1.11", "-21.7806, 37.3633, 1.39855, 0.88", "-22.8229, 37.7931, 0.936847, 0.74", "-23.6424, 38.2403, 0.450069, 1.03", "-24.7598, 38.9859, -0.414472, 1.11", "-25.3615, 39.5125, -0.966746, 1.11", "-25.9349, 40.1578, -1.61093, 1.11", "-26.2907, 40.7632, -2.19602, 1.25", "-26.6211, 41.7366, -3.15717, 1.25", "-26.7964, 42.7358, -4.24321, 0.88", "-26.881, 43.5973, -5.23446, 0.81", "-26.9501, 44.2627, -6.02046, 0.81", "-27.1442, 45.7076, -7.7572, 1.03", "-27.3723, 46.8479, -9.18186, 1.18", "-27.6812, 47.7847, -10.3753, 1.33", "-28.1289, 48.5698, -11.369, 1.18", "-28.8234, 49.3301, -12.3127, 1.18", "-29.3174, 49.7371, -12.7611, 1.18", "-29.9866, 50.2082, -13.1625, 1.03", "-30.5855, 50.6411, -13.4329, 0.96", "-31.3465, 51.2059, -13.7059, 0.96", "-32.1496, 51.8624, -14.1152, 1.11", "-32.7118, 52.435, -14.5902, 1.11", "-33.4178, 53.2913, -15.3329, 1.03", "-34.0605, 54.1453, -16.0964, 1.47", "-34.5564, 54.8173, -16.6894, 1.84", "-36.2238, 56.9917, -18.5657, 1.33", "-37.5551, 58.5856, -19.913, 0.88", "-38.5211, 59.5933, -20.7456, 1.03", "-39.2898, 60.2746, -21.279, 0.88", "-40.3108, 61.0273, -21.76, 0.81", "-41.5136, 61.7508, -22.0591, 0.88", "-42.4217, 62.1871, -22.1447, 1.25", "-43.3506, 62.582, -22.2342, 1.4", "-43.9756, 62.8661, -22.35, 1.62", "-44.7234, 63.2928, -22.5899, 1.33", "-45.4635, 63.8513, -22.9701, 1.03", "-47.0685, 65.4596, -24.1665, 0.88", "-47.5982, 66.1743, -24.7007, 0.88", "-48.0445, 67.0209, -25.3086, 0.81", "-48.4926, 68.2988, -26.1706, 0.96", "-48.6808, 69.3866, -26.8321, 0.96", "-48.679, 70.2907, -27.2908, 1.11", "-48.5299, 71.1501, -27.6058, 1.11", "-48.326, 71.948, -27.826, 1.11", "-48.1449, 72.5815, -27.9583, 1.18", "-47.9579, 73.3264, -28.0536, 1.11", "-47.7714, 74.3925, -28.1647, 0.88", "-47.6989, 75.4627, -28.301, 0.81", "-47.7824, 76.1461, -28.4445, 0.81", "-48.1656, 76.9639, -28.7202, 0.81", "-48.7906, 77.5537, -29.057, 0.96", "-49.3421, 77.8375, -29.3192, 0.96", "-50.338, 78.1606, -29.7329, 0.74", "-50.9557, 78.3103, -29.9785, 0.74", "-51.5762, 78.4545, -30.2206, 1.03", "-52.2976, 78.6524, -30.5039, 1.25", "-52.8075, 78.8542, -30.6983, 1.4", "-53.7405, 79.3958, -31.0184, 1.18", "-54.7293, 80.1691, -31.3353, 0.88", "-55.4523, 80.8767, -31.5651, 0.81", "-56.0025, 81.5354, -31.6971, 0.81", "-56.8878, 82.7582, -31.8164, 0.81", "-57.6724, 83.9433, -31.8565, 1.03", "-58.0703, 84.5856, -31.8422, 1.25", "-58.5071, 85.3216, -31.7843, 1.4", "-59.2394, 86.5616, -31.6571, 1.03", "-59.931, 87.71, -31.5336, 0.88", "-60.3412, 88.3733, -31.4747, 1.11", "-60.8851, 89.2559, -31.4185, 1.11", "-61.5118, 90.2972, -31.3836, 0.96", "-62.0163, 91.1504, -31.3884, 1.33", "-62.4039, 91.8141, -31.4409, 1.33", "-62.8619, 92.6226, -31.5443, 1.11", "-63.4098, 93.565, -31.7204, 0.88", "-63.9524, 94.4191, -31.9247, 0.88", "-64.4269, 95.0806, -32.1045, 1.11", "-64.9789, 95.7872, -32.2918, 1.11", "-65.6379, 96.5864, -32.4895, 0.59", "-66.2064, 97.2553, -32.6397, 0.52", "-66.9351, 98.1026, -32.8026, 0.81", "-67.9369, 99.2907, -32.9783, 0.96", "-68.7024, 100.219, -33.0614, 1.25", "-69.2221, 100.855, -33.082, 1.47", "-69.7514, 101.501, -33.0785, 1.47", "-70.4923, 102.427, -33.0602, 1.03", "-70.9851, 103.07, -33.0511, 1.03", "-71.94, 104.411, -33.041, 1.03", "-72.6191, 105.5, -33.041, 0.96", "-73.1936, 106.632, -33.041, 0.74", "-73.6148, 107.855, -33.041, 0.74", "-73.8012, 109.054, -33.0384, 1.03", "-73.7845, 110.011, -33.0348, 1.03", "-73.5171, 111.371, -33.0276, 0.81", "-73.128, 112.592, -33.0202, 0.81", "-72.4743, 114.198, -33.0096, 0.74", "-71.9333, 115.363, -33.0016, 1.03", "-71.5315, 116.177, -32.9895, 1.03", "-70.911, 117.46, -32.9618, 0.96", "-70.4656, 118.49, -32.9434, 1.4", "-70.1124, 119.474, -32.9235, 1.25", "-69.8173, 120.585, -32.9126, 0.81", "-69.6704, 121.454, -32.9153, 0.59", "-69.5692, 122.571, -32.9294, 0.59", "-69.5554, 124.103, -32.9365, 0.74", "-69.5955, 125.098, -32.9278, 0.81", "-69.6888, 126.124, -32.8954, 0.81", "-69.8386, 127.285, -32.8393, 0.66", "-70.0504, 128.537, -32.7644, 0.88", "-70.3563, 129.92, -32.6567, 0.96", "-70.673, 131.054, -32.5465, 0.74", "-71.0853, 132.229, -32.4258, 0.96", "-71.5134, 133.231, -32.3066, 0.96", "-72.0223, 134.211, -32.1857, 0.88", "-72.7781, 135.42, -32.0496, 0.88", "-73.3525, 136.249, -31.9762, 0.74", "-73.9166, 137.035, -31.9156, 1.03", "-74.2178, 137.472, -31.8872, 1.03", "-74.8345, 138.443, -31.8139, 0.81", "-75.7035, 140.024, -31.7299, 1.03", "-76.117, 140.924, -31.7021, 0.88", "-76.4495, 141.808, -31.6942, 0.88", "-76.8009, 142.956, -31.7028, 1.11", "-77.0911, 144.071, -31.7279, 0.96", "-77.3452, 145.267, -31.769, 0.81", "-77.5322, 146.362, -31.8119, 0.81", "-77.8002, 148.209, -31.8841, 0.88", "-77.9692, 149.479, -31.9315, 1.11", "-78.0825, 150.349, -31.9579, 1.11", "-78.195, 151.142, -31.9742, 0.96", "-78.3403, 152.006, -31.9724, 0.96", "-78.5553, 153.063, -31.9685, 0.66", "-78.8468, 154.242, -31.9624, 0.81", "-79.3438, 155.91, -31.9523, 0.88", "-79.9182, 157.576, -31.9413, 1.11", "-80.2877, 158.508, -31.933, 1.03", "-80.5642, 159.126, -31.9095, 1.03", "-81.0734, 160.157, -31.8376, 0.96", "-81.5136, 161.01, -31.7482, 0.96", "-82.0965, 162.142, -31.5712, 1.18", "-82.4852, 163.013, -31.4007, 1.03", "-82.8776, 164.138, -31.1484, 0.96", "-83.0499, 164.887, -30.9562, 0.59", "-83.1381, 165.717, -30.7201, 0.59", "-83.1283, 166.506, -30.4878, 0.81", "-82.9698, 167.78, -30.1267, 1.11", "-82.8385, 168.411, -29.946, 1.11", "-82.5809, 169.338, -29.6914, 0.81", "-82.3051, 170.204, -29.4479, 0.96", "-81.953, 171.243, -29.1567, 0.81", "-81.6433, 172.134, -28.9162, 0.96", "-81.2904, 173.107, -28.6415, 0.96", "-80.9816, 173.892, -28.4312, 1.03", "-80.7669, 174.43, -28.2957, 1.03", "-80.5275, 175.082, -28.1466, 0.96", "-80.3213, 175.828, -28.0006, 0.96", "-80.1411, 176.892, -27.8193, 0.74", "-80.0796, 177.907, -27.686, 0.74", "-80.1208, 178.864, -27.5818, 0.96", "-80.2849, 180.089, -27.4768, 0.96", "-80.5761, 181.378, -27.4, 1.11", "-80.7492, 181.959, -27.3845, 1.11", "-81.128, 183.08, -27.3933, 0.74", "-81.4637, 184.044, -27.3974, 0.74", "-81.9051, 185.397, -27.3862, 0.74", "-82.3308, 186.854, -27.3533, 0.81", "-82.6485, 188.114, -27.3117, 0.96", "-82.9227, 189.389, -27.258, 1.03", "-83.1901, 190.759, -27.1826, 1.11", "-83.3782, 191.891, -27.0654, 0.88", "-83.5383, 193.059, -26.9029, 0.88", "-83.6515, 194.027, -26.7402, 0.81", "-83.7271, 194.748, -26.6078, 0.81", "-83.862, 195.998, -26.3861, 0.66", "-84.0515, 197.652, -26.0933, 0.66", "-84.1982, 198.802, -25.8731, 0.88", "-84.3225, 199.675, -25.6969, 1.11", "-84.5319, 200.957, -25.4364, 0.96", "-84.7638, 202.148, -25.1883, 0.96", "-84.9694, 203.044, -25.0015, 0.66", "-85.3463, 204.362, -24.7353, 0.59", "-85.7231, 205.528, -24.4678, 0.59", "-86.1058, 206.68, -24.1983, 0.74", "-86.4278, 207.679, -23.97, 0.74", "-86.6348, 208.414, -23.8362, 0.81", "-86.8029, 209.078, -23.7504, 0.81", "-87.0707, 210.265, -23.6111, 0.59", "-87.3824, 211.814, -23.3834, 0.74", "-87.5516, 212.712, -23.217, 0.74", "-87.8407, 214.327, -22.8712, 1.03", "-87.9968, 215.266, -22.6296, 0.52", "-88.1272, 216.147, -22.3629, 0.52", "-88.2792, 217.358, -21.9316, 0.88", "-88.409, 218.602, -21.4415, 0.59", "-88.4812, 219.58, -21.0161, 0.44", "-88.5131, 220.465, -20.6169, 0.74", "-88.5272, 221.337, -20.2563, 0.74", "-88.5692, 222.546, -19.8011, 0.66", "-88.6315, 223.566, -19.4644, 0.59", "-88.7704, 224.7, -19.0904, 0.59", "-88.9421, 225.508, -18.7916, 0.59", "-89.2839, 226.598, -18.3656, 0.59", "-89.7633, 227.835, -17.8679, 0.81", "-90.102, 228.641, -17.5473, 0.81", "-90.6739, 229.995, -17.0115, 0.74", "-91.2138, 231.361, -16.4417, 0.66", "-91.4914, 232.14, -16.0778, 0.59", "-91.8563, 233.313, -15.5114, 0.59", "-92.1493, 234.383, -14.9926, 0.96", "-92.3448, 235.128, -14.627, 0.96", "-92.8346, 236.928, -13.791, 0.88", "-93.1473, 237.936, -13.3389, 0.66", "-93.4443, 238.749, -12.9747, 0.37", "-93.6879, 239.341, -12.7291, 0.44", "-94.015, 240.078, -12.4797, 0.44", "-94.4288, 240.951, -12.2746, 0.44", "-94.9872, 241.997, -12.1343, 0.44", "-95.6568, 243.098, -12.0227, 0.44", "-96.3768, 244.155, -11.9102, 0.44", "-97.0619, 245.151, -11.8011, 0.52", "-97.4595, 245.796, -11.7323, 0.52", "-97.8662, 246.596, -11.6581, 0.52", "-98.2639, 247.536, -11.6131, 0.59", "-98.5072, 248.154, -11.5926, 0.59", "-98.9704, 249.212, -11.5711, 0.59", "-99.6251, 250.616, -11.5556, 0.44", "-100.314, 251.978, -11.5516, 0.44", "-101.254, 253.557, -11.5682, 0.44", "-101.72, 254.144, -11.589, 0.44", "-103.0, 254.822, -11.6804, 0.44", "-104.029, 254.833, -11.7552, 0.37", "-105.126, 254.578, -11.8277, 0.37", "-106.193, 254.161, -11.8914, 1.25", "-107.348, 253.599, -11.9562, 0.37", "-108.084, 253.224, -11.9623, 0.37", "-108.417, 253.059, -11.9375, 0.59", "-109.075, 252.762, -11.823, 0.59", "-109.633, 252.518, -11.6568, 0.29", "-110.52, 252.141, -11.3303, 0.29", "-111.532, 251.815, -10.8834, 0.66", "-112.25, 251.616, -10.5092, 1.11", "-112.854, 251.465, -10.1523, 1.33", "-113.577, 251.303, -9.64335, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.45489, 26.7043, 10.5975, 0.81", "-9.50609, 28.9914, 10.5121, 0.81", "-9.58993, 30.7642, 10.3989, 0.96", "-9.74259, 32.544, 10.2679, 0.88", "-9.86529, 33.436, 10.2006, 0.88", "-10.1199, 34.8031, 10.099, 1.03", "-10.33, 35.6689, 10.0376, 1.03", "-10.8903, 37.2472, 9.89794, 0.96", "-11.5007, 38.5599, 9.79719, 0.96", "-12.2592, 39.8344, 9.69268, 1.11", "-12.9651, 40.7842, 9.60348, 1.18", "-14.0569, 42.0046, 9.4812, 1.18", "-14.8447, 42.7921, 9.40402, 1.4", "-15.4106, 43.3293, 9.38132, 1.25", "-16.3001, 44.1757, 9.38216, 0.88", "-17.1708, 45.0558, 9.41239, 1.18", "-17.6558, 45.606, 9.47583, 1.47", "-18.2081, 46.3163, 9.60144, 1.33", "-19.3128, 47.8512, 9.93398, 0.96", "-19.8461, 48.6384, 10.125, 1.18", "-20.3427, 49.3951, 10.3279, 1.18", "-21.3256, 50.8205, 10.6969, 1.18", "-21.6747, 51.2794, 10.8057, 1.33", "-22.3205, 52.0253, 10.9534, 0.96", "-22.8546, 52.5628, 11.0226, 0.81", "-23.4526, 53.1105, 11.0836, 0.81", "-24.3237, 53.843, 11.1377, 1.11", "-24.8472, 54.2794, 11.1377, 1.11", "-25.4104, 54.8149, 11.117, 0.88", "-25.7384, 55.2206, 11.0904, 0.88", "-26.0714, 55.8052, 11.0426, 0.88", "-26.4954, 57.0128, 10.9142, 1.11", "-26.607, 57.7398, 10.7816, 1.11", "-26.6699, 58.9755, 10.512, 1.11", "-26.6748, 60.2385, 10.1677, 1.03", "-26.6604, 61.3691, 9.82473, 1.4", "-26.6515, 62.3544, 9.46972, 1.62", "-26.6686, 64.0649, 8.78597, 0.88", "-26.7418, 65.1462, 8.33101, 0.88", "-26.935, 66.4225, 7.84173, 0.88", "-27.189, 67.4568, 7.5131, 1.03", "-27.6152, 68.663, 7.23727, 0.81", "-27.9719, 69.3531, 7.24261, 0.96", "-28.4343, 69.9319, 7.46609, 0.81", "-29.536, 70.8943, 8.25164, 1.25", "-30.7231, 71.677, 9.25574, 1.25", "-31.3099, 71.9881, 9.75228, 0.96", "-32.441, 72.5221, 10.6872, 0.96", "-33.3019, 72.905, 11.3201, 0.96", "-33.9049, 73.1944, 11.6856, 0.96", "-34.8135, 73.7264, 12.0757, 0.81", "-35.51, 74.2695, 12.2865, 0.96", "-36.4087, 75.1525, 12.5068, 0.96", "-36.803, 75.5925, 12.5769, 1.11", "-37.5607, 76.4947, 12.704, 1.11", "-38.3324, 77.4859, 12.7892, 0.96", "-39.1488, 78.6153, 12.8413, 0.81", "-40.0562, 79.984, 12.8568, 1.03", "-40.7206, 81.0816, 12.8892, 1.18", "-41.4545, 82.3862, 12.9687, 1.18", "-42.2315, 83.9776, 13.1163, 1.03", "-42.6084, 84.9139, 13.2505, 1.11", "-42.8817, 85.8844, 13.4736, 1.11", "-43.1379, 87.516, 14.0339, 0.96", "-43.1988, 88.2419, 14.3588, 0.96", "-43.2622, 89.2186, 14.8937, 0.74", "-43.37, 90.0791, 15.447, 0.74", "-43.7227, 91.3785, 16.3184, 0.96", "-44.1241, 92.1598, 16.8235, 0.88", "-44.7445, 92.7977, 17.1275, 0.74", "-45.547, 93.271, 17.2501, 0.74", "-46.4301, 93.6522, 17.225, 0.81", "-47.5947, 94.1043, 17.0613, 0.88", "-48.3105, 94.3793, 16.9135, 0.88", "-48.9925, 94.6639, 16.7499, 1.03", "-49.959, 95.0992, 16.52, 1.03", "-51.3216, 95.7198, 16.2984, 0.96", "-52.1977, 96.1029, 16.2261, 0.96", "-53.2672, 96.5313, 16.2293, 0.81", "-54.0114, 96.8011, 16.2723, 0.81", "-55.0029, 97.1282, 16.3714, 0.81", "-56.4616, 97.5667, 16.5707, 0.88", "-57.29, 97.8038, 16.6803, 0.88", "-58.4283, 98.1671, 16.8177, 0.88", "-59.3377, 98.5358, 16.9281, 0.96", "-60.0708, 98.9332, 17.0377, 0.96", "-60.7992, 99.4331, 17.1656, 0.81", "-61.4202, 99.9371, 17.2832, 0.96", "-62.0613, 100.512, 17.4532, 0.96", "-62.7846, 101.216, 17.7512, 0.88", "-63.4801, 101.907, 18.1551, 0.88", "-63.9798, 102.433, 18.5271, 0.96", "-64.4592, 102.981, 18.9908, 0.96", "-65.0975, 103.824, 19.7585, 0.81", "-65.6889, 104.68, 20.569, 0.81", "-66.1647, 105.41, 21.1904, 0.88", "-66.5631, 106.074, 21.6577, 0.81", "-67.0475, 106.983, 22.1616, 0.81", "-67.5669, 108.049, 22.5497, 0.96", "-67.9559, 108.855, 22.7019, 0.81", "-68.6712, 110.267, 22.8003, 0.74", "-69.1717, 111.205, 22.7734, 0.74", "-69.776, 112.247, 22.6512, 0.74", "-70.4393, 113.373, 22.3899, 0.88", "-70.7612, 113.94, 22.2148, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.0935, 17.8873, 12.0854, 0.74", "-12.5638, 16.733, 13.6731, 0.74", "-12.976, 16.3456, 14.152, 0.88", "-13.7988, 15.5408, 15.0431, 0.81", "-14.783, 14.3394, 16.2863, 0.52", "-15.1913, 13.8715, 16.6964, 0.44", "-15.788, 13.251, 17.1571, 0.44", "-16.2703, 12.7816, 17.2715, 0.29", "-16.8009, 12.4529, 17.216, 0.29", "-18.4197, 12.0239, 16.5557, 1.4", "-20.5237, 11.6267, 15.4645, 0.29", "-21.1967, 11.5324, 15.0968, 0.29", "-22.2664, 11.4493, 14.453, 0.37", "-22.9383, 11.4556, 14.0146, 0.44", "-23.6931, 11.5276, 13.4809, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.0935, 17.8873, 12.0854, 2.28", "-12.1, 20.5584, 12.6889, 2.28", "-12.7848, 22.3759, 13.0995, 1.4", "-13.2296, 23.5564, 13.3663, 1.4", "-13.9025, 25.3423, 13.7698, 1.4", "-14.3381, 26.4984, 14.0309, 1.4", "-14.7863, 27.688, 14.2997, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.69365, 156.169, -7.76964, 0.59", "3.0259, 158.025, -8.63428, 0.59", "3.1463, 159.026, -9.03411, 0.59", "3.25234, 160.405, -9.47203, 0.59", "3.28216, 160.939, -9.6115, 0.59", "3.33461, 161.922, -9.87815, 0.81", "3.3777, 162.784, -10.1043, 0.88", "3.40329, 163.646, -10.2659, 0.88", "3.39482, 164.968, -10.5014, 0.66", "3.3562, 165.872, -10.6283, 0.88", "3.26474, 167.08, -10.7598, 0.96", "3.15509, 168.045, -10.847, 0.81", "3.04828, 168.644, -10.8873, 0.81", "2.75993, 169.665, -10.9352, 0.66", "2.38117, 170.525, -10.9506, 0.74", "1.74197, 171.527, -10.892, 0.44", "1.18089, 172.172, -10.7921, 0.44", "0.80454, 172.525, -10.7295, 0.81", "0.374811, 172.903, -10.6616, 0.96", "-0.0579168, 173.297, -10.5975, 0.74", "-0.614602, 173.895, -10.5031, 0.74", "-1.11655, 174.571, -10.4982, 0.88", "-1.6844, 175.542, -10.5937, 1.03", "-2.10265, 176.409, -10.7877, 0.88", "-2.49404, 177.342, -11.0615, 0.74", "-2.8394, 178.268, -11.3686, 0.88", "-3.53242, 180.336, -12.1014, 0.66", "-3.95098, 181.711, -12.5836, 1.03", "-4.34249, 183.131, -13.0624, 0.88", "-4.67901, 184.516, -13.4426, 1.03", "-4.88656, 185.483, -13.6417, 1.03", "-5.08999, 186.6, -13.7773, 0.88", "-5.26511, 187.664, -13.783, 0.81", "-5.43607, 188.657, -13.7586, 0.81", "-5.75879, 190.2, -13.6954, 0.66", "-5.96805, 191.002, -13.6871, 0.66", "-6.33347, 192.093, -13.7372, 1.03", "-6.61656, 192.784, -13.8077, 0.81", "-7.05889, 193.763, -13.977, 0.59", "-7.55795, 194.813, -14.2553, 0.59", "-7.86315, 195.446, -14.5079, 0.59", "-8.23014, 196.173, -14.8917, 0.59", "-8.59057, 196.843, -15.311, 0.59", "-9.21215, 197.938, -16.0423, 0.59", "-9.86084, 199.031, -16.7481, 1.18", "-10.4201, 199.914, -17.3014, 1.33", "-11.2314, 201.121, -18.0419, 0.74", "-11.6981, 201.796, -18.417, 0.74", "-12.1936, 202.524, -18.8033, 0.74", "-12.924, 203.697, -19.3987, 0.88", "-13.2875, 204.436, -19.7133, 0.88", "-13.4964, 204.984, -19.9119, 1.03", "-13.8115, 206.022, -20.2612, 0.74", "-14.0581, 206.884, -20.5342, 0.74", "-14.4604, 208.137, -20.8979, 0.59", "-14.8868, 209.163, -21.143, 0.74", "-15.4496, 210.201, -21.2863, 0.74", "-15.8377, 210.828, -21.3894, 0.74", "-16.5783, 211.909, -21.6212, 0.88", "-17.1032, 212.613, -21.7793, 1.03", "-17.7338, 213.372, -21.9665, 0.74", "-18.4796, 214.183, -22.285, 0.59", "-19.7824, 215.522, -22.9731, 0.59", "-20.5033, 216.245, -23.4908, 0.74", "-20.9336, 216.671, -23.8422, 0.96", "-21.4863, 217.183, -24.3184, 0.88", "-22.1876, 217.726, -24.8824, 0.74", "-23.2634, 218.495, -25.7409, 1.55", "-24.2183, 219.188, -26.4775, 1.99", "-25.1021, 219.948, -27.2643, 0.74", "-25.6876, 220.667, -27.9256, 0.59", "-26.1811, 221.667, -28.6884, 0.88", "-26.513, 222.832, -29.3885, 0.81", "-26.6342, 223.645, -29.8207, 0.81", "-26.6791, 224.637, -30.4364, 0.74", "-26.6746, 225.694, -31.1823, 0.74", "-26.7026, 226.549, -31.8685, 0.66", "-26.7461, 227.227, -32.465, 0.66", "-26.9166, 228.442, -33.5598, 1.47", "-27.3387, 230.706, -35.65, 1.18", "-27.5183, 231.521, -36.3973, 1.03", "-27.8983, 233.303, -37.9928, 1.03", "-28.081, 234.297, -38.7815, 0.74", "-28.2441, 235.463, -39.5363, 1.03", "-28.2878, 235.899, -39.7303, 1.25", "-28.4056, 237.26, -40.1278, 0.66", "-28.4812, 238.371, -40.4106, 0.66", "-28.5881, 239.711, -40.6687, 0.81", "-28.7321, 240.676, -40.8856, 0.66", "-28.9378, 241.571, -41.1301, 0.66", "-29.4543, 243.198, -41.6117, 0.66", "-29.8084, 244.085, -41.8893, 0.52", "-30.1676, 244.879, -42.1484, 0.66", "-30.4233, 245.448, -42.3438, 0.81", "-30.8591, 246.48, -42.5784, 0.52", "-31.1851, 247.343, -42.6318, 0.52", "-31.5181, 248.378, -42.5743, 0.88", "-31.7316, 249.174, -42.5019, 0.88", "-31.9372, 250.126, -42.4161, 0.59", "-32.1538, 251.646, -42.3193, 0.74", "-32.2002, 252.842, -42.5164, 0.44", "-32.1537, 253.766, -42.9941, 0.44", "-32.1027, 254.456, -43.508, 0.44", "-32.0205, 255.38, -44.3035, 0.44", "-31.9118, 256.327, -45.2216, 1.11", "-31.6417, 258.819, -47.7543, 0.88", "-31.5076, 260.064, -48.9712, 0.44", "-31.4443, 260.898, -49.703, 0.66", "-31.4321, 261.547, -50.1801, 0.44", "-31.4801, 262.676, -50.776, 0.44", "-31.5537, 263.809, -51.1245, 0.44", "-31.6465, 265.276, -51.2769, 0.59", "-31.749, 266.667, -51.3242, 0.59", "-31.8993, 267.983, -51.3419, 0.52", "-32.1163, 269.146, -51.3259, 0.37", "-32.4601, 270.34, -51.2679, 0.37", "-32.7799, 271.129, -51.2415, 0.37", "-33.3119, 271.979, -51.2351, 0.37", "-33.9426, 272.737, -51.2488, 0.37", "-34.5067, 273.302, -51.2846, 0.74", "-35.4113, 274.049, -51.3557, 0.66", "-36.1992, 274.605, -51.425, 0.66", "-37.3847, 275.361, -51.5402, 0.44", "-38.2073, 275.84, -51.626, 0.37", "-38.6838, 276.115, -51.6765, 0.37", "-39.5552, 276.583, -51.7816, 0.29", "-40.0379, 276.771, -51.8429, 0.29", "-40.7081, 276.846, -51.9293, 1.03", "-41.3438, 276.678, -52.0335, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.69365, 156.169, -7.76964, 0.59", "3.21269, 157.615, -7.30457, 0.59", "3.47686, 158.634, -7.05883, 0.81", "3.67409, 160.06, -6.82399, 0.88", "3.73185, 161.083, -6.70664, 0.59", "3.73274, 161.843, -6.67004, 0.59", "3.7229, 162.93, -6.65949, 0.96", "3.67823, 163.53, -6.68344, 1.11", "3.557, 164.804, -6.786, 0.66", "3.46951, 165.725, -6.91295, 0.66", "3.35603, 167.157, -7.02395, 0.66", "3.31497, 168.26, -7.04723, 0.59", "3.32508, 169.155, -7.00044, 0.59", "3.39912, 170.438, -6.8642, 0.59", "3.50856, 171.538, -6.70567, 0.59", "3.75232, 173.528, -6.35723, 0.66", "3.87815, 174.477, -6.16246, 0.66", "4.0178, 175.68, -5.91481, 0.52", "4.12938, 176.694, -5.7164, 0.52", "4.21791, 177.737, -5.52762, 0.52", "4.26779, 178.527, -5.41105, 0.74", "4.29819, 179.235, -5.36981, 0.74", "4.34271, 180.076, -5.33576, 0.88", "4.40773, 180.657, -5.32569, 0.88", "4.74367, 182.089, -5.31499, 0.59", "5.02383, 182.738, -5.33935, 0.81", "5.53489, 183.512, -5.40267, 0.59", "6.25737, 184.362, -5.4999, 0.74", "7.00924, 185.129, -5.62672, 0.74", "7.79641, 185.867, -5.79845, 0.74", "8.68187, 186.675, -6.02193, 0.59", "9.48941, 187.407, -6.23208, 0.59", "10.3371, 188.196, -6.4602, 0.81", "11.0938, 188.955, -6.69599, 0.81", "12.0886, 190.076, -7.05505, 0.59", "12.6568, 190.802, -7.28522, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.5123, -31.6361, 0.291364, 0.74", "-22.6485, -33.4011, -2.12632, 0.74", "-22.6976, -34.7398, -3.57412, 0.88", "-22.7674, -37.0886, -5.63136, 1.03", "-22.8161, -38.0613, -6.33259, 0.96", "-22.9223, -39.2912, -7.08244, 0.66", "-23.0697, -40.4406, -7.69156, 0.88", "-23.2377, -41.4673, -7.96672, 0.81", "-23.4865, -42.4058, -8.07703, 0.81", "-23.8895, -43.441, -8.09666, 0.66", "-24.3363, -44.3299, -8.13324, 0.66", "-24.7869, -45.1325, -8.20997, 0.74", "-25.4294, -46.2276, -8.36567, 0.59", "-25.7796, -46.8811, -8.46509, 0.52", "-26.0636, -47.5166, -8.56112, 0.52", "-26.5163, -48.8294, -8.74072, 0.88", "-26.7673, -49.7835, -8.85021, 0.88", "-26.9896, -50.807, -8.94117, 0.74", "-27.2942, -52.2697, -9.03577, 0.74", "-27.4863, -53.0962, -9.07814, 0.74", "-27.8527, -54.3831, -9.12277, 0.81", "-28.2357, -55.4361, -9.12361, 0.81", "-28.7027, -56.4774, -9.08136, 0.66", "-29.2314, -57.4843, -9.02087, 0.74", "-29.7745, -58.3992, -8.95441, 0.74", "-30.3357, -59.2947, -8.90347, 0.81", "-30.8411, -60.1023, -8.87199, 0.81", "-31.1977, -60.7018, -8.86029, 0.74", "-31.6621, -61.5985, -8.86452, 0.52", "-31.9885, -62.3569, -8.88638, 0.52", "-32.3764, -63.4528, -8.943, 0.52", "-32.6824, -64.479, -8.98852, 1.03", "-32.8522, -65.1248, -9.01518, 1.03", "-33.05, -65.9143, -9.02553, 0.81", "-33.2147, -66.5827, -9.01284, 0.88", "-33.4011, -67.4798, -8.96253, 1.03", "-33.59, -68.687, -8.85789, 0.74", "-33.6713, -69.4781, -8.82581, 0.74", "-33.7316, -70.4849, -8.82737, 0.74", "-33.7527, -71.3973, -8.91254, 0.59", "-33.7486, -72.617, -9.13266, 0.66", "-33.7226, -73.3466, -9.32552, 0.66", "-33.6299, -74.7013, -9.79742, 0.66", "-33.5886, -75.3975, -10.0764, 0.52", "-33.568, -76.7354, -10.6594, 0.59", "-33.6175, -77.4168, -10.9614, 0.81", "-33.727, -78.026, -11.2187, 0.81", "-33.9132, -78.7741, -11.4871, 0.29", "-34.1392, -79.5182, -11.6744, 0.29", "-34.4746, -80.4663, -11.8556, 0.74", "-34.7688, -81.2488, -11.9437, 1.25", "-34.9715, -81.7954, -11.9941, 1.47", "-35.1161, -82.2019, -12.0209, 1.62", "-35.3674, -82.9798, -12.0526, 1.25", "-35.6084, -83.8686, -12.0889, 0.44", "-35.8484, -84.8074, -12.1525, 0.29", "-36.1698, -86.0563, -12.2291, 0.66", "-36.39, -86.9006, -12.274, 0.96", "-36.524, -87.4095, -12.2965, 1.25", "-36.6679, -87.9757, -12.3155, 1.47", "-36.8917, -88.884, -12.3335, 1.03", "-37.2086, -90.013, -12.3372, 0.29", "-37.4329, -90.7202, -12.324, 0.44", "-37.6641, -91.327, -12.3003, 0.74", "-37.936, -91.9586, -12.2606, 0.96", "-38.2154, -92.5308, -12.2087, 1.25", "-38.4883, -92.9986, -12.1622, 1.25", "-39.019, -93.725, -12.1145, 1.03", "-39.5645, -94.3288, -12.0432, 0.81", "-39.8381, -94.5838, -12.0263, 0.81", "-40.1781, -94.8747, -12.0238, 0.59", "-40.7183, -95.3286, -12.0499, 0.52", "-41.0439, -95.6329, -12.0842, 0.52", "-41.6712, -96.323, -12.1903, 0.59", "-42.4252, -97.3739, -12.39, 0.44", "-42.791, -98.0369, -12.5383, 0.29", "-43.0049, -98.4986, -12.6488, 0.29", "-43.3129, -99.2257, -12.829, 0.66", "-43.5537, -99.8034, -12.9761, 1.03", "-43.7745, -100.322, -13.111, 1.03", "-44.2532, -101.277, -13.325, 0.29", "-44.6766, -101.961, -13.5047, 0.29", "-45.037, -102.44, -13.6343, 0.29", "-45.1954, -102.622, -13.6836, 0.44", "-45.4892, -102.957, -13.763, 0.44", "-46.1669, -103.765, -13.9206, 0.66", "-46.4259, -104.096, -13.9748, 0.66", "-47.0597, -104.945, -14.1075, 0.29", "-47.3811, -105.374, -14.1675, 0.29", "-47.8594, -106.007, -14.2378, 0.59", "-48.2589, -106.546, -14.278, 0.81", "-48.7459, -107.225, -14.3167, 0.29", "-49.1612, -107.842, -14.364, 0.52", "-49.5833, -108.548, -14.4455, 0.52", "-49.9265, -109.277, -14.5462, 0.44", "-50.2431, -110.195, -14.6487, 0.74", "-50.3964, -110.872, -14.8429, 0.88", "-50.4957, -111.655, -15.1548, 0.88", "-50.5324, -112.338, -15.4528, 0.29", "-50.5125, -113.377, -16.0432, 0.29", "-50.4654, -114.238, -16.5861, 0.29", "-50.2826, -117.162, -18.5182, 0.59", "-50.2474, -117.687, -18.8733, 0.81", "-50.1994, -118.349, -19.3362, 0.81", "-50.0185, -120.533, -20.8873, 0.29", "-49.9299, -121.313, -21.4359, 0.74", "-49.8624, -121.762, -21.7239, 0.74", "-49.6589, -123.205, -22.4317, 0.22", "-49.5212, -124.384, -22.9734, 1.11", "-49.4522, -125.086, -23.2642, 1.11", "-49.3417, -126.417, -23.6798, 0.22", "-49.2415, -127.396, -23.9554, 0.59", "-49.0593, -128.929, -24.3637, 0.22", "-48.9791, -129.747, -24.5482, 0.37", "-48.9563, -130.13, -24.6366, 0.37", "-48.9662, -130.887, -24.8161, 0.22", "-49.0328, -131.834, -25.0439, 0.22", "-49.1725, -133.375, -25.4278, 1.47", "-49.2775, -134.287, -25.6506, 1.62", "-49.4803, -135.41, -25.9007, 1.25", "-49.8942, -137.22, -26.2754, 0.15", "-50.1906, -138.269, -26.476, 0.22", "-50.3351, -138.722, -26.5413, 0.88", "-50.4951, -139.229, -26.604, 1.03", "-50.8345, -140.38, -26.7563, 0.15", "-51.0523, -141.197, -26.8718, 0.52", "-51.223, -141.843, -26.9773, 0.74", "-52.1194, -145.163, -27.5532, 0.22", "-52.4151, -146.248, -27.7483, 0.81", "-52.5422, -146.716, -27.8357, 0.81", "-53.0613, -148.7, -28.2158, 0.22", "-53.2668, -149.493, -28.3602, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-22.5123, -31.6361, 0.291364, 0.59", "-22.3258, -33.0994, -0.00577179, 0.59", "-22.1693, -33.977, -0.1863, 0.59", "-21.9637, -35.0377, -0.474449, 0.81", "-21.8152, -35.8331, -0.704649, 0.81", "-21.6037, -37.1757, -1.11928, 1.03", "-21.5246, -37.8938, -1.34787, 1.03", "-21.4735, -38.7425, -1.5943, 0.88", "-21.4871, -40.315, -1.93739, 0.88", "-21.6355, -41.357, -2.04097, 1.03", "-21.9526, -42.2578, -1.97625, 1.03", "-22.5898, -43.3704, -1.69755, 0.52", "-23.7023, -44.9092, -1.18135, 1.03", "-24.2836, -45.6306, -0.8989, 1.03", "-24.9499, -46.4617, -0.542395, 0.88", "-25.6016, -47.3243, -0.206238, 0.81", "-26.324, -48.3786, 0.163641, 0.59", "-26.9176, -49.3651, 0.439189, 0.59", "-27.5228, -50.557, 0.652555, 0.59", "-28.1352, -51.9647, 0.874676, 0.88", "-28.4907, -52.9354, 1.02827, 0.88", "-28.7171, -53.6582, 1.15, 0.74", "-29.0123, -54.6203, 1.32722, 0.96", "-29.2867, -55.4157, 1.48067, 1.03", "-29.5688, -56.1218, 1.62256, 1.03", "-30.1202, -57.3172, 1.86098, 0.59", "-30.5598, -58.2105, 1.99131, 0.37", "-31.0634, -59.1769, 2.07242, 0.37", "-31.5822, -60.1773, 2.10743, 0.81", "-32.1106, -61.2657, 2.10237, 0.81", "-32.4613, -62.0644, 2.07035, 0.81", "-32.9652, -63.3641, 2.01495, 0.96", "-33.3425, -64.4484, 1.97445, 0.96", "-33.6616, -65.5007, 1.95815, 0.66", "-33.9564, -66.5706, 1.98711, 0.66", "-34.2243, -67.4393, 2.06227, 0.59", "-34.6424, -68.5059, 2.24435, 0.66", "-34.9192, -69.0172, 2.41042, 0.88", "-35.3653, -69.6544, 2.67905, 0.88", "-35.8602, -70.2418, 2.96454, 0.74", "-36.5723, -71.039, 3.38149, 0.59", "-37.0206, -71.5645, 3.64462, 0.59", "-37.533, -72.2682, 3.9389, 0.59", "-38.1732, -73.3359, 4.2895, 0.44", "-38.5542, -74.0856, 4.46376, 0.66", "-38.9492, -74.9852, 4.6101, 0.81", "-39.2779, -75.8253, 4.71178, 0.88", "-39.7125, -76.9653, 4.81414, 0.88", "-40.1333, -77.9929, 4.86816, 0.88", "-40.7076, -79.2138, 4.9105, 0.66", "-41.1606, -80.0319, 4.92433, 0.66", "-41.5894, -80.6927, 4.92433, 0.81", "-42.1057, -81.3867, 4.92204, 0.96", "-42.699, -82.0664, 4.94718, 0.96", "-43.3098, -82.7287, 5.0107, 0.88", "-44.1437, -83.6761, 5.16379, 0.88", "-44.7955, -84.4943, 5.35101, 1.03", "-45.1157, -84.9789, 5.49214, 1.03", "-45.7461, -86.1794, 5.88374, 0.59", "-46.0713, -86.9644, 6.1476, 0.74", "-46.4493, -88.0222, 6.48484, 0.88", "-46.6523, -88.6561, 6.66524, 0.88", "-46.9985, -89.7539, 6.93224, 0.74", "-47.326, -90.8226, 7.15389, 0.88", "-47.5927, -91.6255, 7.27302, 0.88", "-48.0599, -92.7564, 7.40664, 0.66", "-48.4592, -93.5677, 7.48648, 0.66", "-48.798, -94.1961, 7.54765, 0.96", "-49.3421, -95.1375, 7.65588, 0.74", "-50.1021, -96.357, 7.82392, 0.74", "-50.6393, -97.175, 7.94348, 0.96", "-51.103, -97.8509, 8.0421, 0.96", "-51.6668, -98.6181, 8.15441, 0.88", "-52.2908, -99.395, 8.25977, 0.81", "-53.1567, -100.346, 8.37741, 0.66", "-54.1228, -101.307, 8.49983, 0.59", "-54.8254, -101.949, 8.58475, 0.81", "-55.4696, -102.525, 8.65639, 0.81", "-56.4328, -103.348, 8.74112, 0.66", "-57.2886, -104.029, 8.80441, 0.88", "-58.0216, -104.535, 8.8598, 1.47", "-58.5302, -104.806, 8.89894, 1.62" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-15.8575, -20.174, 2.18656, 0.66", "-17.3478, -20.014, 2.05831, 0.66", "-18.3185, -19.8441, 1.94034, 0.81", "-19.3781, -19.6128, 1.78229, 1.11", "-20.3634, -19.3675, 1.6199, 1.11", "-21.188, -19.1433, 1.48224, 1.11", "-22.3044, -18.8265, 1.28252, 1.03", "-23.4527, -18.4471, 1.02257, 1.18", "-24.0979, -18.2026, 0.876067, 1.18", "-24.7801, -17.9063, 0.734584, 1.18", "-25.634, -17.4777, 0.571868, 1.11", "-26.6992, -16.8713, 0.427301, 0.96", "-27.6716, -16.231, 0.33975, 0.96", "-28.7154, -15.4064, 0.285353, 0.96", "-29.5837, -14.5583, 0.264128, 0.88", "-30.254, -13.6858, 0.295473, 0.88", "-30.9563, -12.3763, 0.377394, 0.88", "-31.3242, -11.354, 0.452273, 0.81", "-31.5815, -10.2321, 0.520339, 0.88", "-31.7209, -9.28041, 0.55137, 0.88", "-31.8753, -7.75021, 0.543149, 0.81", "-32.0045, -6.32549, 0.47536, 0.88", "-32.1409, -4.97858, 0.343586, 0.88", "-32.3598, -3.33179, 0.156738, 0.96", "-32.5368, -2.3368, 0.0376399, 0.96", "-32.8087, -1.12073, -0.120414, 1.11", "-33.1521, 0.105166, -0.290545, 1.11", "-33.607, 1.44174, -0.449747, 1.03", "-34.0189, 2.42528, -0.537068, 0.88", "-34.6312, 3.64039, -0.616544, 0.88", "-35.2163, 4.64603, -0.608205, 1.03", "-36.2218, 6.12673, -0.528789, 1.11", "-36.841, 6.88793, -0.457272, 1.11", "-37.9332, 7.96124, -0.25648, 0.88", "-38.5801, 8.46541, -0.10632, 1.03", "-39.8225, 9.27223, 0.23769, 0.81", "-40.7232, 9.80899, 0.532392, 0.66", "-41.3611, 10.1922, 0.784164, 0.66", "-42.6093, 11.0638, 1.36176, 0.81", "-43.3109, 11.6882, 1.69137, 0.81", "-43.8954, 12.3706, 1.92664, 0.74", "-44.2632, 12.8965, 1.98049, 0.74", "-44.7588, 13.5688, 1.98903, 0.74", "-45.3592, 14.2739, 1.87704, 0.74", "-46.0681, 14.9107, 1.62782, 0.88", "-46.9951, 15.5242, 1.26205, 1.03", "-48.0226, 16.0199, 0.813237, 1.18", "-49.3089, 16.4759, 0.161929, 0.81", "-50.0545, 16.6695, -0.259752, 0.81", "-51.2155, 16.8783, -1.02243, 0.81", "-52.2136, 17.032, -1.76446, 1.03", "-53.2081, 17.2154, -2.60008, 0.88", "-54.6114, 17.5591, -3.87308, 0.96", "-55.2757, 17.7932, -4.52667, 1.18", "-56.4938, 18.371, -5.7306, 1.4", "-57.192, 18.8255, -6.38111, 1.18", "-58.1392, 19.5626, -7.23691, 0.88", "-58.792, 20.19, -7.77552, 0.88", "-59.505, 21.0331, -8.27251, 1.03", "-59.9671, 21.6618, -8.54351, 0.88", "-60.7512, 22.8921, -8.87272, 1.47" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.8575, -20.174, 2.18656, 1.4", "-16.96, -19.0896, 2.52651, 1.4", "-17.941, -18.1604, 2.80737, 1.25", "-18.8068, -17.3405, 3.08216, 1.03", "-19.6611, -16.5017, 3.32811, 1.03", "-20.2742, -15.8629, 3.50562, 0.88", "-20.8593, -15.1978, 3.71362, 0.88", "-21.3554, -14.5553, 3.96794, 1.03", "-21.7679, -13.8475, 4.2463, 1.03", "-22.1062, -13.0017, 4.57249, 0.74", "-22.307, -12.3253, 4.81415, 0.74", "-22.5947, -10.9895, 5.24383, 0.88", "-22.781, -9.7111, 5.6532, 1.03", "-22.9066, -8.41926, 6.05849, 1.03", "-22.9418, -7.64843, 6.27114, 1.03", "-22.9353, -6.61648, 6.56805, 0.74", "-22.8792, -5.51149, 6.83577, 1.11", "-22.8057, -4.60474, 7.03855, 0.96", "-22.7519, -3.94498, 7.19283, 0.88", "-22.6344, -2.69629, 7.51871, 0.81", "-22.5248, -1.31177, 7.87147, 0.74", "-22.4447, -0.0663878, 8.16464, 0.81", "-22.4218, 1.25117, 8.45354, 1.03", "-22.4432, 2.45669, 8.668, 1.03", "-22.4896, 3.73749, 8.85521, 0.88", "-22.5526, 4.87163, 8.9838, 0.88", "-22.6179, 5.9574, 9.04426, 1.11", "-22.6713, 6.74361, 9.05845, 1.11", "-22.7546, 7.80568, 9.03141, 0.74", "-22.8237, 8.83096, 9.00746, 0.81", "-22.9231, 10.1692, 8.96534, 0.81", "-22.992, 11.3421, 8.88263, 0.96", "-23.0479, 12.5014, 8.76536, 0.66", "-23.0804, 13.7743, 8.60997, 0.52", "-23.1057, 14.9319, 8.46008, 0.74", "-23.1264, 15.6065, 8.38502, 0.74", "-23.1965, 17.1155, 8.23626, 0.74", "-23.278, 18.2777, 8.14149, 0.74", "-23.4221, 19.4595, 8.075, 0.74", "-23.7007, 20.8074, 8.02883, 0.66", "-24.1131, 22.1279, 8.00928, 0.96", "-24.4325, 22.964, 8.02811, 0.96", "-24.7562, 23.7092, 8.08834, 0.96", "-25.4126, 25.1519, 8.22579, 0.81", "-25.9315, 26.3061, 8.34272, 0.96", "-26.3872, 27.4892, 8.45822, 1.11", "-26.7007, 28.505, 8.5719, 0.96", "-26.9968, 29.7382, 8.73999, 0.88", "-27.1939, 30.9379, 8.91629, 0.88", "-27.283, 31.937, 9.07059, 0.88", "-27.3515, 33.3662, 9.27209, 1.03", "-27.4058, 34.7352, 9.43398, 0.74", "-27.4462, 35.3204, 9.48537, 0.74", "-27.5833, 36.3526, 9.54278, 0.88", "-27.7194, 37.0248, 9.57651, 0.88", "-28.0588, 38.2203, 9.62324, 0.74", "-28.4588, 39.2809, 9.65599, 0.66", "-28.7822, 39.9641, 9.66896, 0.66", "-29.6489, 41.4374, 9.72351, 1.03", "-30.0625, 42.0502, 9.74066, 1.03", "-30.6673, 42.9077, 9.74996, 0.81", "-31.1093, 43.5526, 9.73883, 0.81", "-31.6722, 44.4038, 9.65856, 0.52", "-32.0643, 45.0408, 9.55426, 0.52", "-32.5939, 45.9863, 9.33839, 0.74", "-33.0399, 46.8936, 9.10509, 0.81", "-33.4487, 47.8851, 8.84594, 0.81", "-33.7936, 48.8966, 8.60234, 0.88", "-34.0288, 49.7126, 8.43436, 1.03", "-34.2267, 50.4566, 8.30637, 1.03", "-34.5232, 51.5376, 8.15538, 0.88", "-34.8481, 52.656, 7.99773, 0.74", "-35.2458, 53.9487, 7.81442, 0.96", "-35.5565, 54.9007, 7.6811, 1.03", "-35.8868, 55.7911, 7.54201, 1.03", "-36.306, 56.7556, 7.37986, 0.88", "-36.9551, 57.9743, 7.16273, 0.96", "-37.4013, 58.6364, 7.0262, 0.81", "-37.7806, 59.086, 6.9244, 0.96", "-38.3248, 59.6291, 6.8075, 1.18", "-38.7937, 60.0468, 6.74594, 1.18", "-39.3501, 60.5256, 6.7142, 1.11", "-39.9081, 61.0475, 6.71646, 1.25", "-40.4542, 61.6698, 6.73886, 1.25", "-41.0038, 62.4814, 6.77258, 1.03", "-41.4104, 63.2997, 6.80917, 0.88", "-41.7374, 64.2866, 6.85464, 0.74", "-41.9196, 65.2833, 6.90097, 0.74", "-41.9829, 66.6075, 6.95766, 0.81", "-41.9285, 67.5466, 6.9671, 0.81", "-41.8038, 68.4608, 6.92846, 0.96", "-41.6728, 69.3025, 6.8417, 0.96", "-41.5683, 69.9973, 6.7436, 0.88", "-41.4702, 70.9057, 6.61176, 0.88", "-41.412, 71.9978, 6.46324, 0.81", "-41.3998, 73.0542, 6.34067, 0.74", "-41.4245, 74.409, 6.22787, 0.88", "-41.4537, 75.2884, 6.19357, 0.88", "-41.4601, 76.2457, 6.18892, 1.03", "-41.4055, 77.2724, 6.21864, 0.96", "-41.2571, 78.125, 6.28104, 0.88", "-41.0223, 78.8264, 6.33685, 1.03", "-40.5641, 79.7376, 6.41226, 0.96", "-40.1249, 80.4917, 6.45593, 0.88", "-39.7103, 81.1521, 6.47209, 0.88", "-39.1372, 82.1257, 6.48773, 0.81", "-38.6085, 83.1665, 6.50275, 0.74", "-38.0262, 84.4788, 6.52703, 0.81", "-37.6462, 85.469, 6.54099, 1.03", "-37.4941, 85.9255, 6.5501, 1.03", "-37.0742, 87.3028, 6.57482, 0.81", "-36.742, 88.4459, 6.58468, 0.88", "-36.4254, 89.4551, 6.58275, 0.88", "-35.9578, 90.704, 6.54986, 0.88", "-35.6014, 91.4698, 6.52862, 0.88", "-35.1903, 92.1994, 6.51047, 1.11", "-34.6903, 92.9882, 6.49407, 1.11", "-34.0381, 94.0108, 6.47525, 0.81", "-33.4717, 94.9533, 6.46439, 0.96", "-32.8011, 96.1313, 6.46638, 0.96", "-32.2268, 97.1932, 6.43564, 0.88", "-31.5033, 98.6183, 6.36421, 0.88", "-31.0626, 99.5771, 6.28378, 1.03", "-30.6801, 100.587, 6.16951, 1.03", "-30.2786, 102.041, 5.97552, 0.88", "-30.0847, 103.094, 5.81997, 0.88", "-29.9855, 103.88, 5.69069, 0.74", "-29.9004, 104.768, 5.5444, 0.88", "-29.8201, 106.02, 5.36045, 0.81", "-29.7904, 107.583, 5.20661, 0.81", "-29.8252, 109.083, 5.15425, 0.88", "-29.8655, 109.772, 5.17874, 0.88", "-30.0223, 111.455, 5.30449, 0.81", "-30.2362, 112.999, 5.47621, 0.74", "-30.5491, 114.541, 5.70042, 0.88", "-30.8579, 115.585, 5.88444, 0.96", "-31.4143, 117.095, 6.18012, 1.03", "-31.8687, 118.266, 6.43979, 0.88", "-32.4127, 119.648, 6.75628, 1.11", "-32.7232, 120.499, 6.94256, 1.25", "-33.1102, 121.791, 7.18485, 0.81", "-33.4095, 123.133, 7.4075, 0.66", "-33.7188, 125.157, 7.73382, 0.66", "-33.8365, 126.214, 7.89013, 0.96", "-33.9061, 126.999, 7.98797, 0.96", "-33.9944, 127.97, 8.06633, 0.96", "-34.1119, 128.819, 8.09076, 0.81", "-34.3327, 129.643, 8.05671, 0.59", "-34.7007, 130.541, 7.95032, 0.66", "-35.0118, 131.18, 7.86757, 0.96", "-35.2748, 131.687, 7.80223, 0.96", "-35.9692, 133.026, 7.66065, 0.74", "-36.409, 133.97, 7.60942, 0.66", "-36.6645, 134.615, 7.62606, 0.88", "-36.9032, 135.308, 7.69862, 0.88", "-37.1946, 136.162, 7.82464, 0.74", "-37.4492, 136.883, 7.97595, 0.74", "-37.8121, 137.983, 8.25159, 0.81", "-38.1473, 139.064, 8.52903, 0.66", "-38.5084, 140.281, 8.8306, 0.81", "-38.9011, 141.614, 9.15215, 0.96", "-39.2619, 142.825, 9.41938, 1.11", "-39.6202, 144.053, 9.64709, 0.81", "-39.9468, 145.18, 9.82794, 0.59", "-40.2083, 146.079, 9.95496, 0.81", "-40.5789, 147.327, 10.133, 0.59", "-40.9103, 148.436, 10.2849, 0.74", "-41.2517, 149.515, 10.4111, 1.03", "-41.6191, 150.627, 10.5202, 1.03", "-41.9669, 151.776, 10.5735, 0.74", "-42.2021, 152.672, 10.5614, 0.74", "-42.5051, 153.959, 10.4645, 0.74", "-42.7858, 155.259, 10.3495, 0.59", "-42.9476, 156.068, 10.2798, 0.59", "-43.2368, 157.436, 10.1694, 0.66", "-43.4677, 158.329, 10.1157, 0.52", "-43.7998, 159.318, 10.0842, 0.74", "-44.2163, 160.314, 10.0934, 0.96", "-44.6774, 161.28, 10.1656, 0.74", "-45.4408, 162.666, 10.326, 0.74", "-46.0712, 163.666, 10.4484, 0.88", "-46.5775, 164.397, 10.4999, 0.88", "-47.3097, 165.384, 10.5044, 0.74", "-48.2664, 166.589, 10.4292, 0.74", "-49.1731, 167.697, 10.3252, 0.81", "-49.9744, 168.722, 10.2193, 0.96", "-50.7331, 169.788, 10.1064, 0.88", "-51.3229, 170.731, 10.0093, 0.88", "-52.039, 172.12, 9.87682, 0.81", "-52.4525, 173.144, 9.77389, 0.81", "-52.9051, 174.622, 9.63403, 0.96", "-53.2594, 175.965, 9.51756, 1.11", "-53.5897, 177.254, 9.41006, 0.81", "-53.9461, 178.571, 9.29101, 0.81", "-54.2341, 179.511, 9.19907, 0.81", "-54.6838, 180.698, 9.07962, 0.81", "-55.5957, 182.576, 8.89527, 0.96", "-56.2598, 183.645, 8.80012, 0.96", "-57.0348, 184.668, 8.72539, 1.03", "-57.8053, 185.562, 8.68088, 1.11", "-58.6546, 186.497, 8.66402, 0.88", "-59.4846, 187.396, 8.66608, 0.66", "-60.4501, 188.455, 8.67071, 0.66", "-61.501, 189.718, 8.70905, 0.74", "-62.1956, 190.679, 8.76856, 0.88", "-62.7504, 191.57, 8.84899, 0.81", "-63.1747, 192.357, 8.93848, 0.81", "-63.4904, 193.033, 9.01643, 0.81", "-64.1297, 194.508, 9.17591, 0.59", "-64.6053, 195.552, 9.27159, 0.74", "-65.0112, 196.318, 9.30826, 0.52", "-65.4312, 196.965, 9.29674, 0.74", "-66.0981, 197.785, 9.21813, 0.88", "-66.7157, 198.391, 9.10088, 0.88", "-67.5655, 199.06, 8.88917, 0.74", "-68.532, 199.749, 8.61457, 0.88", "-69.3538, 200.349, 8.36166, 0.66", "-70.0687, 200.895, 8.14269, 0.66", "-70.625, 201.34, 7.99394, 0.66", "-71.2619, 201.874, 7.85591, 0.59", "-71.9136, 202.459, 7.76555, 0.44", "-72.8253, 203.357, 7.73485, 0.88", "-73.5632, 204.199, 7.75322, 1.03", "-74.2414, 205.109, 7.79794, 0.74", "-74.906, 206.128, 7.86196, 0.74", "-75.5039, 207.116, 7.92656, 0.74", "-76.0079, 207.93, 7.98134, 0.74", "-76.6637, 209.0, 8.02868, 0.44", "-77.246, 209.999, 8.06153, 0.66", "-78.0587, 211.443, 8.0957, 0.81", "-78.7442, 212.682, 8.12344, 0.81", "-79.4893, 213.998, 8.15269, 0.66", "-80.1667, 215.182, 8.19324, 0.66", "-80.8725, 216.353, 8.28079, 0.66", "-81.4428, 217.247, 8.33822, 0.74", "-82.1142, 218.238, 8.36439, 0.74", "-82.8469, 219.264, 8.33777, 0.59", "-83.4501, 220.061, 8.25372, 0.81", "-84.2081, 220.972, 8.07804, 0.59", "-84.9566, 221.842, 7.82266, 0.74", "-85.5839, 222.644, 7.55541, 0.81", "-85.9012, 223.105, 7.39146, 0.81", "-86.4501, 224.035, 7.12345, 0.81", "-86.8032, 224.708, 6.98685, 0.81", "-87.2172, 225.584, 6.90449, 0.59", "-87.7601, 226.75, 6.93446, 0.59", "-88.3412, 227.89, 7.04869, 0.66", "-88.9708, 228.948, 7.25437, 0.66", "-89.6509, 229.866, 7.57064, 0.59", "-90.5201, 230.843, 8.05526, 0.81", "-91.2763, 231.601, 8.49624, 0.81", "-92.3651, 232.61, 9.14075, 0.52", "-93.3022, 233.473, 9.67804, 0.52", "-94.5882, 234.708, 10.2472, 0.74", "-95.2824, 235.43, 10.4598, 0.74", "-96.0444, 236.273, 10.564, 1.25", "-96.6503, 236.969, 10.5349, 1.25", "-97.4479, 237.862, 10.3146, 0.96", "-98.5865, 239.054, 9.81095, 0.81", "-99.3224, 239.715, 9.43212, 0.74", "-100.173, 240.303, 9.03822, 0.52", "-100.879, 240.648, 8.77587, 0.52", "-102.453, 241.144, 8.27901, 0.44", "-103.689, 241.334, 7.97014, 0.52", "-104.881, 241.319, 7.75719, 0.66", "-106.05, 241.142, 7.59522, 0.66", "-107.044, 240.883, 7.47493, 0.66", "-107.812, 240.618, 7.42257, 0.66", "-108.469, 240.33, 7.40038, 0.52", "-109.558, 239.803, 7.34894, 0.44", "-110.441, 239.364, 7.28765, 0.37", "-111.633, 238.74, 7.19568, 0.37", "-112.553, 238.226, 7.11693, 0.37", "-113.754, 237.472, 7.00215, 0.74", "-114.556, 236.896, 6.91424, 0.74", "-115.408, 236.184, 6.80108, 0.74", "-116.17, 235.46, 6.69942, 0.44", "-116.83, 234.79, 6.62037, 0.44", "-117.349, 234.285, 6.60049, 0.66", "-118.229, 233.472, 6.70765, 0.66", "-118.992, 232.774, 6.84525, 0.52", "-119.688, 232.12, 6.95164, 0.52", "-120.3, 231.484, 7.01513, 0.52", "-120.974, 230.649, 7.06, 0.66", "-121.733, 229.45, 7.06132, 0.59", "-122.281, 228.283, 7.00099, 0.37", "-122.698, 227.178, 6.90824, 0.37", "-123.039, 226.128, 6.75911, 0.29", "-123.283, 225.281, 6.60704, 0.29", "-123.627, 224.061, 6.31095, 0.44", "-123.907, 223.225, 6.06046, 0.44", "-124.292, 222.294, 5.81799, 0.66", "-124.762, 221.408, 5.61054, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-70.7612, 113.94, 22.2148, 0.66", "-69.6714, 114.635, 24.1325, 0.66", "-69.0774, 115.091, 25.099, 0.66", "-67.7024, 116.39, 27.3171, 0.66", "-67.1554, 117.014, 28.2556, 0.66", "-66.5094, 117.911, 29.4539, 0.44", "-66.2602, 118.351, 29.9694, 0.44", "-65.916, 118.945, 30.553, 0.74", "-65.7041, 119.489, 30.9686, 0.74", "-65.5863, 120.411, 31.3835, 0.66", "-65.542, 121.026, 31.6429, 0.44", "-65.4629, 121.868, 31.9885, 0.37", "-65.3279, 122.45, 32.2802, 0.37", "-64.9733, 123.168, 32.7947, 0.81", "-64.7403, 123.535, 33.0547, 0.81", "-64.2388, 124.245, 33.5088, 0.44", "-63.8144, 124.892, 33.8863, 0.44", "-63.4989, 125.536, 34.1995, 0.44", "-63.1389, 127.241, 34.7533, 0.52", "-63.1606, 128.785, 35.0622, 0.81", "-63.2656, 129.405, 35.1372, 0.81", "-63.6654, 130.878, 35.2294, 0.52", "-64.0784, 132.313, 35.26, 0.52", "-64.5109, 133.832, 35.2671, 0.52", "-64.7419, 134.717, 35.243, 0.81", "-64.9516, 135.738, 35.2695, 0.81", "-65.1489, 137.14, 35.33, 0.44", "-65.2199, 138.493, 35.4021, 0.44", "-65.192, 139.298, 35.4682, 0.44", "-65.0756, 140.597, 35.6059, 0.44", "-64.9549, 141.641, 35.7511, 0.74", "-64.8832, 142.238, 35.854, 0.74", "-64.8225, 142.936, 35.9937, 0.44", "-64.7995, 143.85, 36.1797, 0.29", "-64.7925, 144.792, 36.3764, 0.88", "-64.7853, 145.727, 36.6013, 0.88", "-64.7771, 146.386, 36.7408, 0.88", "-64.764, 147.115, 36.8959, 0.66", "-64.7461, 148.272, 37.12, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-70.7612, 113.94, 22.2148, 0.52", "-71.7292, 114.298, 22.6841, 0.52", "-72.7922, 114.845, 23.1717, 0.52", "-73.6927, 115.427, 23.5687, 0.66", "-74.8445, 116.338, 24.0538, 0.81", "-75.3288, 116.79, 24.2479, 0.81", "-76.2542, 117.788, 24.6006, 0.66", "-76.9534, 118.751, 24.9165, 0.88", "-77.3404, 119.386, 25.0852, 0.88", "-77.8047, 120.224, 25.2446, 0.66", "-78.2075, 121.021, 25.3776, 0.66", "-78.5873, 121.826, 25.5313, 0.66", "-79.0989, 123.018, 25.7962, 0.66", "-79.3733, 123.738, 25.988, 0.59", "-79.7413, 124.815, 26.3804, 0.52", "-80.0112, 125.7, 26.8119, 0.52", "-80.1983, 126.37, 27.2023, 0.44", "-80.4517, 127.312, 27.82, 0.44", "-80.6401, 128.077, 28.3451, 0.44", "-80.9238, 129.318, 29.2245, 0.59", "-81.1547, 130.345, 29.922, 0.74", "-81.3001, 130.935, 30.2828, 0.59", "-81.5697, 131.896, 30.8052, 0.81", "-81.7193, 132.327, 30.9962, 0.81", "-82.0593, 133.14, 31.2253, 0.81", "-82.5601, 134.122, 31.3829, 0.37", "-82.9177, 134.726, 31.449, 0.37", "-83.394, 135.47, 31.4952, 0.37", "-83.9435, 136.256, 31.5169, 0.37", "-84.491, 136.968, 31.5083, 0.37", "-85.4792, 138.057, 31.4741, 0.96", "-86.0279, 138.577, 31.4814, 1.11", "-87.0427, 139.464, 31.5006, 0.59", "-87.781, 140.083, 31.5171, 0.52", "-88.5567, 140.74, 31.5333, 0.52", "-89.6392, 141.694, 31.5495, 0.66", "-90.5912, 142.563, 31.5537, 1.25", "-91.0263, 142.995, 31.5692, 1.4", "-92.0854, 144.154, 31.6455, 0.52", "-92.7344, 144.956, 31.6956, 0.52", "-93.7646, 146.38, 31.7774, 0.52", "-94.3294, 147.252, 31.7988, 0.52", "-94.9584, 148.284, 31.7918, 0.52", "-95.6358, 149.443, 31.817, 0.66", "-96.0674, 150.236, 31.8544, 0.74", "-96.6695, 151.377, 31.935, 0.88", "-97.1802, 152.368, 32.0293, 0.37", "-97.6356, 153.289, 32.1086, 0.29", "-98.0942, 154.22, 32.1813, 0.37", "-98.457, 154.995, 32.2326, 0.52", "-98.6725, 155.443, 32.2429, 0.74", "-99.0294, 156.13, 32.2795, 0.74", "-99.5803, 156.986, 32.3434, 0.44", "-100.103, 157.633, 32.3971, 0.44", "-100.713, 158.287, 32.4484, 0.29", "-101.305, 158.887, 32.5468, 0.29", "-102.673, 160.304, 32.8693, 0.37", "-103.423, 161.133, 33.106, 0.37", "-104.21, 162.1, 33.4198, 0.37", "-104.508, 162.51, 33.5443, 0.37", "-105.071, 163.34, 33.7788, 0.29", "-105.412, 163.847, 33.9024, 0.29", "-105.791, 164.384, 33.9832, 0.29", "-106.458, 165.274, 34.168, 0.29", "-107.157, 166.094, 34.374, 0.37", "-107.761, 166.694, 34.5436, 0.37", "-108.657, 167.428, 34.7649, 0.37", "-109.479, 167.993, 34.9896, 0.29", "-110.549, 168.651, 35.3196, 0.29", "-111.074, 168.948, 35.5221, 0.29", "-111.947, 169.432, 35.9566, 0.88", "-112.115, 168.805, 36.187, 1.18", "-112.222, 168.307, 36.3517, 1.18" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.7863, 27.688, 14.2997, 0.66", "-15.6838, 26.5141, 15.0151, 0.66", "-16.2998, 25.8107, 15.4992, 0.66", "-16.7106, 25.4034, 15.7962, 0.88", "-17.3909, 24.8446, 16.2044, 0.74", "-17.9051, 24.4952, 16.4777, 0.88", "-18.5648, 24.1222, 16.7972, 1.18", "-19.3531, 23.8527, 17.1594, 1.18", "-19.8853, 23.7646, 17.3456, 1.18", "-21.0671, 23.7328, 17.6568, 0.66", "-21.7814, 23.7685, 17.8154, 0.59", "-22.2833, 23.8017, 17.9216, 0.59", "-23.2073, 23.8264, 18.0882, 0.52", "-23.8527, 23.7913, 18.2009, 0.52", "-24.6312, 23.712, 18.3685, 0.52", "-25.8178, 23.5921, 18.6583, 0.52", "-26.7342, 23.5127, 18.8889, 0.74", "-27.7641, 23.4683, 19.1543, 0.44", "-28.772, 23.4968, 19.4146, 0.44", "-30.0111, 23.5895, 19.7368, 0.66", "-30.8252, 23.7214, 19.9241, 0.81", "-31.5256, 23.9094, 20.0352, 0.96", "-31.9615, 24.0537, 20.0848, 0.96", "-32.5139, 24.2502, 20.1087, 0.59", "-32.996, 24.3978, 20.0869, 0.44", "-33.6229, 24.5034, 20.0645, 0.44", "-34.4723, 24.6112, 20.1044, 0.29", "-35.0529, 24.6918, 20.1768, 0.29", "-35.7392, 24.7935, 20.3084, 0.59", "-36.1881, 24.8612, 20.4505, 0.59", "-37.3823, 24.9807, 21.0521, 0.74", "-38.107, 25.0753, 21.5232, 0.59", "-38.7279, 25.1799, 22.0143, 0.59", "-39.2546, 25.2798, 22.4831, 0.66", "-39.9709, 25.4391, 23.1553, 0.66", "-41.03, 25.7072, 24.1569, 0.96", "-41.8784, 25.9066, 24.9183, 0.52", "-42.4064, 25.9829, 25.3959, 0.52", "-42.8638, 26.03, 25.8031, 0.59", "-43.6605, 26.1234, 26.4573, 0.37", "-44.1515, 26.1544, 26.7835, 0.37", "-44.9171, 26.1207, 27.2062, 0.37", "-45.8882, 25.9596, 27.7031, 0.59", "-46.3627, 25.8768, 27.9148, 0.59", "-46.7701, 25.814, 28.0749, 0.59", "-47.7739, 25.7034, 28.3976, 0.29", "-48.4979, 25.6729, 28.5727, 0.29", "-48.9947, 25.6904, 28.6611, 0.59", "-49.7971, 25.7579, 28.7677, 0.59", "-50.4295, 25.8026, 28.847, 0.52", "-51.2786, 25.8318, 28.9601, 0.52", "-52.1024, 25.8217, 29.0888, 0.52", "-52.7212, 25.7954, 29.1782, 0.52", "-53.6524, 25.6919, 29.31, 0.74", "-54.2831, 25.5684, 29.4115, 0.88", "-54.7406, 25.4569, 29.4975, 0.88", "-55.5227, 25.241, 29.6882, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.7863, 27.688, 14.2997, 1.18", "-13.9992, 28.9451, 14.468, 1.18", "-13.2237, 30.0824, 14.6121, 1.18", "-12.4199, 31.1854, 14.7428, 1.18", "-11.4763, 32.4461, 14.9422, 1.18", "-10.5991, 33.6467, 15.1541, 1.03", "-9.88995, 34.6925, 15.3423, 1.25", "-9.46969, 35.3369, 15.4788, 1.25", "-8.78348, 36.6002, 15.6088, 0.96", "-8.23544, 37.9713, 15.6083, 1.55", "-8.01431, 38.7896, 15.5203, 1.55", "-7.80677, 40.2493, 15.2669, 1.25", "-7.77008, 41.7343, 14.9523, 1.11", "-8.10091, 45.2459, 14.1111, 0.81", "-8.3407, 46.2729, 13.8269, 1.03", "-8.72541, 47.2414, 13.5092, 1.03", "-9.39634, 48.3705, 13.2118, 0.88", "-10.2025, 49.2475, 13.1286, 0.88", "-11.2155, 50.0337, 13.4441, 0.96", "-11.9317, 50.5557, 13.9009, 0.96", "-13.0151, 51.2629, 14.6621, 1.03", "-14.7113, 52.3024, 16.0537, 1.25", "-15.4881, 52.7846, 16.833, 1.18", "-17.1591, 53.9744, 18.9628, 1.25", "-17.8438, 54.5913, 20.1614, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-41.3438, 276.678, -52.0335, 0.22", "-42.1634, 277.083, -51.9703, 0.22", "-42.9583, 277.476, -51.909, 0.44", "-43.6627, 277.824, -51.8547, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-41.3438, 276.678, -52.0335, 0.22", "-42.8212, 276.525, -52.1865, 0.22", "-44.1469, 276.387, -52.3238, 0.22", "-45.1842, 276.279, -52.4312, 0.22", "-45.6715, 276.228, -52.4817, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.6568, 190.802, -7.28522, 0.37", "12.8952, 191.864, -7.24347, 0.37", "13.1102, 192.577, -7.1934, 0.66", "13.3316, 193.29, -7.13565, 0.66", "13.6327, 194.328, -7.05155, 0.44", "13.8082, 195.013, -6.99526, 0.44", "14.1167, 196.445, -6.88066, 0.88", "14.147, 196.61, -6.86473, 1.03", "14.2726, 197.575, -6.77731, 0.66", "14.3475, 198.472, -6.71219, 0.88", "14.3604, 199.017, -6.68434, 0.88", "14.3418, 199.723, -6.66649, 0.66", "14.2698, 200.647, -6.66712, 0.37", "14.204, 201.331, -6.65411, 0.37", "14.0667, 202.517, -6.61455, 0.59", "13.978, 203.253, -6.58275, 0.81", "13.8392, 204.581, -6.51858, 0.37", "13.7531, 205.433, -6.47551, 0.37", "13.6327, 206.596, -6.4178, 0.81", "13.5634, 207.182, -6.39334, 0.96", "13.4293, 208.303, -6.36365, 0.37", "13.3188, 209.259, -6.35796, 0.29", "13.1963, 210.355, -6.37443, 0.52", "13.0299, 211.711, -6.42232, 0.74", "12.9065, 212.523, -6.4661, 0.88", "12.7623, 213.342, -6.50879, 0.66", "12.5825, 214.326, -6.55674, 0.59", "12.4162, 215.288, -6.59688, 0.74", "12.2861, 216.173, -6.62545, 0.74", "12.1857, 217.263, -6.66528, 0.59", "12.1681, 218.057, -6.69323, 0.44", "12.2132, 219.226, -6.7373, 0.29", "12.3086, 220.077, -6.76914, 0.37", "12.5753, 221.499, -6.81828, 0.52", "12.8796, 222.747, -6.85651, 0.66", "13.1045, 223.601, -6.87954, 0.66", "13.2731, 224.331, -6.87149, 0.37", "13.4373, 225.181, -6.83391, 0.52", "13.6764, 226.376, -6.74591, 0.37", "13.9255, 227.595, -6.6209, 0.52", "14.0492, 228.357, -6.5268, 0.59", "14.2321, 229.938, -6.33592, 0.81", "14.2996, 230.947, -6.22623, 0.29", "14.2891, 231.696, -6.16051, 0.29", "14.2221, 232.39, -6.09923, 0.59", "14.0842, 233.293, -6.02421, 0.59", "13.821, 234.612, -5.93365, 0.44", "13.4662, 236.071, -5.86584, 0.29", "13.089, 237.4, -5.80209, 0.37", "12.8437, 238.188, -5.76387, 0.66", "12.5166, 239.246, -5.71319, 0.29", "12.123, 240.564, -5.65185, 0.29", "11.6231, 242.234, -5.57355, 0.29", "11.3588, 243.144, -5.53458, 0.44", "11.2914, 243.402, -5.52698, 0.44", "11.0705, 244.288, -5.52698, 0.22", "10.9439, 244.811, -5.52698, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.6568, 190.802, -7.28522, 0.52", "13.362, 190.354, -7.40535, 0.52", "13.8339, 190.005, -7.47988, 0.52", "14.4306, 189.572, -7.56439, 0.81", "14.9311, 189.234, -7.62497, 0.88", "15.7127, 188.752, -7.70398, 0.37", "16.5734, 188.22, -7.79098, 0.29", "17.6879, 187.503, -7.90477, 0.29", "18.2703, 187.147, -7.96075, 0.44", "19.2145, 186.601, -8.0373, 0.44", "20.275, 186.016, -8.08724, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-58.5302, -104.806, 8.89894, 0.74", "-59.3815, -104.572, 9.82016, 0.74", "-60.1238, -104.464, 10.6161, 0.88", "-60.8135, -104.478, 11.3169, 1.03", "-61.5408, -104.596, 12.0535, 0.88", "-62.9299, -104.961, 13.4397, 1.03", "-63.2254, -105.054, 13.7098, 1.03", "-64.0008, -105.439, 14.3705, 0.81", "-64.8698, -106.007, 15.017, 0.66", "-65.4814, -106.551, 15.3828, 0.66", "-65.9469, -107.055, 15.6314, 0.52", "-66.7432, -108.008, 16.0057, 0.52", "-67.356, -108.787, 16.3215, 0.52", "-67.8923, -109.504, 16.6345, 0.52", "-69.2031, -111.267, 17.4473, 0.52", "-69.9793, -112.312, 17.9344, 0.52", "-70.5911, -113.106, 18.3277, 0.52", "-71.4179, -114.068, 18.853, 0.74", "-71.957, -114.553, 19.1732, 0.96", "-72.6669, -114.989, 19.527, 0.66", "-73.1549, -115.175, 19.7146, 0.66", "-74.1672, -115.452, 19.9992, 0.59", "-75.4268, -115.682, 20.281, 0.44", "-76.3683, -115.761, 20.458, 0.44", "-77.3549, -115.778, 20.6145, 0.44", "-78.2346, -115.76, 20.7516, 0.44", "-79.2771, -115.731, 20.9031, 0.44", "-79.8951, -115.704, 20.9875, 0.44", "-80.8973, -115.665, 21.0742, 0.59", "-81.4456, -115.648, 21.0878, 0.52", "-82.3441, -115.627, 21.0868, 0.37", "-83.3649, -115.64, 21.0631, 0.52", "-83.9353, -115.685, 21.0379, 0.52", "-85.1408, -115.822, 20.9195, 0.74", "-85.9198, -115.912, 20.8044, 0.59", "-86.5719, -115.963, 20.6962, 0.59", "-87.2822, -115.981, 20.5505, 0.37", "-87.9699, -115.988, 20.4026, 0.29", "-88.9109, -116.009, 20.2261, 0.29", "-89.5604, -116.009, 20.1338, 0.37", "-90.0692, -116.024, 20.0746, 0.37", "-90.7293, -116.067, 20.0187, 0.37", "-91.4702, -116.145, 19.9491, 0.59", "-92.0921, -116.264, 19.8895, 0.74", "-92.4382, -116.36, 19.8444, 0.74", "-93.1339, -116.579, 19.7101, 0.44", "-93.9227, -116.803, 19.5276, 0.59", "-94.7672, -117.028, 19.3124, 0.74", "-95.7453, -117.273, 19.0576, 0.29", "-96.5621, -117.474, 18.8476, 0.29", "-97.6841, -117.798, 18.5804, 0.37", "-98.4181, -118.052, 18.3936, 0.37", "-99.0932, -118.297, 18.2317, 0.29", "-99.9528, -118.588, 18.0566, 0.29", "-100.555, -118.751, 17.9509, 0.29", "-101.354, -118.922, 17.8439, 0.29", "-102.316, -119.084, 17.7581, 0.29", "-103.32, -119.199, 17.6984, 0.29", "-104.082, -119.213, 17.672, 0.29", "-105.338, -119.134, 17.6292, 0.74", "-106.113, -119.022, 17.608, 0.81", "-107.136, -118.809, 17.5653, 0.29", "-107.581, -118.719, 17.5465, 0.29", "-108.408, -118.576, 17.471, 0.88", "-109.009, -118.479, 17.3882, 1.03", "-109.491, -118.4, 17.299, 0.52", "-110.367, -118.254, 17.1148, 0.29", "-111.377, -118.095, 16.9025, 0.29", "-111.785, -118.036, 16.8372, 0.52", "-112.182, -117.975, 16.7955, 0.52", "-113.042, -117.813, 16.7413, 0.44", "-113.806, -117.635, 16.6978, 0.59", "-114.704, -117.364, 16.6597, 0.81", "-115.302, -117.155, 16.628, 0.81", "-116.104, -116.873, 16.5817, 0.81", "-116.708, -116.664, 16.5356, 0.74", "-117.627, -116.36, 16.4969, 0.66", "-118.539, -116.092, 16.4665, 0.81", "-119.219, -115.938, 16.4509, 0.81", "-120.106, -115.813, 16.4447, 0.59", "-121.045, -115.764, 16.4547, 0.44", "-122.299, -115.797, 16.485, 0.37", "-123.216, -115.881, 16.5491, 0.59", "-124.018, -115.976, 16.6411, 0.66", "-124.711, -116.054, 16.7398, 0.66", "-125.11, -116.09, 16.8029, 0.59", "-125.836, -116.119, 16.9219, 0.59", "-126.728, -116.097, 17.0218, 0.29", "-127.465, -116.063, 17.1495, 0.29", "-128.036, -116.046, 17.2564, 0.29", "-128.738, -116.062, 17.386, 0.81", "-129.226, -116.117, 17.4831, 0.96", "-129.84, -116.26, 17.6098, 0.96", "-130.971, -116.668, 17.7461, 0.22", "-131.236, -116.789, 17.7741, 0.44", "-131.653, -117.004, 17.8328, 0.44", "-132.262, -117.334, 17.9482, 0.59", "-132.55, -117.483, 18.0131, 0.81", "-133.661, -118.0, 18.3462, 0.22", "-134.322, -118.255, 18.577, 0.81", "-134.939, -118.457, 18.8078, 0.96", "-135.444, -118.602, 19.0159, 0.96", "-136.188, -118.783, 19.3396, 0.52", "-137.69, -119.098, 20.0111, 1.92", "-138.442, -119.233, 20.3836, 2.58", "-139.106, -119.337, 20.6999, 2.73", "-140.134, -119.493, 21.1514, 1.92", "-141.268, -119.676, 21.5706, 1.11", "-142.087, -119.819, 21.8267, 0.74", "-143.175, -120.014, 22.065, 0.74", "-144.049, -120.194, 22.1859, 1.18", "-145.176, -120.445, 22.2652, 0.37", "-146.329, -120.711, 22.2335, 0.44", "-147.028, -120.892, 22.1587, 0.88", "-147.848, -121.144, 22.022, 0.88", "-148.746, -121.482, 21.8206, 0.81", "-149.177, -121.671, 21.7269, 0.88", "-149.709, -121.906, 21.6523, 0.74", "-150.389, -122.191, 21.635, 0.44", "-151.02, -122.419, 21.6958, 0.74", "-151.921, -122.671, 21.898, 0.29", "-152.326, -122.753, 22.0191, 0.29", "-153.354, -122.938, 22.3648, 0.66", "-153.795, -123.039, 22.5203, 0.66", "-154.472, -123.208, 22.6841, 0.59", "-154.921, -123.345, 22.7303, 0.37", "-155.545, -123.566, 22.7212, 0.29", "-156.259, -123.864, 22.6507, 0.29", "-157.294, -124.357, 22.4799, 0.29", "-158.538, -124.979, 22.2404, 0.29", "-159.569, -125.505, 22.0282, 0.29", "-160.314, -125.881, 21.8694, 0.22", "-160.939, -126.168, 21.7344, 0.22", "-160.939, -126.168, 21.7344, 0.52", "-161.341, -126.287, 21.6707, 0.52", "-162.132, -126.542, 21.679, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-58.5302, -104.806, 8.89894, 0.66", "-58.9702, -106.511, 9.10666, 0.66", "-59.2957, -107.913, 9.37248, 0.59", "-59.4971, -108.717, 9.55357, 0.74", "-59.7891, -109.699, 9.79419, 0.37", "-60.0558, -110.423, 9.98546, 0.59", "-60.4958, -111.44, 10.3013, 0.52", "-60.9123, -112.268, 10.6141, 0.59", "-61.3279, -113.018, 10.9127, 0.29", "-61.6747, -113.639, 11.1423, 0.29", "-62.1055, -114.453, 11.3833, 0.52", "-62.6204, -115.617, 11.5935, 0.52", "-63.0092, -116.754, 11.6924, 0.52", "-63.2329, -117.688, 11.7772, 0.74", "-63.4145, -118.627, 11.8842, 0.59", "-63.6354, -119.828, 12.0373, 0.52", "-63.8438, -120.895, 12.1945, 0.44", "-64.0593, -121.702, 12.338, 0.44", "-64.6621, -123.271, 12.7585, 0.66", "-65.1147, -124.151, 13.056, 0.29", "-65.4734, -124.707, 13.2684, 0.29", "-65.8396, -125.212, 13.4641, 0.29", "-66.2742, -125.798, 13.674, 0.66", "-66.6173, -126.298, 13.8279, 0.88", "-66.94, -126.845, 13.9533, 0.88", "-67.4119, -127.836, 14.1431, 0.59", "-67.7904, -128.759, 14.2728, 0.52", "-68.0032, -129.319, 14.3249, 0.52", "-68.3689, -130.311, 14.3486, 0.74", "-68.6641, -131.057, 14.3288, 0.88", "-68.9748, -131.761, 14.293, 0.74", "-69.4041, -132.7, 14.2332, 0.44", "-69.7244, -133.396, 14.1903, 0.66", "-70.2938, -134.704, 14.1252, 0.44", "-70.5766, -135.405, 14.1012, 0.44", "-70.8755, -136.193, 14.1081, 0.74", "-71.1774, -137.018, 14.1499, 0.74", "-71.5283, -137.992, 14.2244, 0.74", "-72.0256, -139.348, 14.3426, 0.52", "-72.4923, -140.569, 14.4646, 0.66", "-72.9176, -141.586, 14.5471, 0.66", "-73.2752, -142.354, 14.6006, 0.74", "-73.6997, -143.151, 14.6094, 0.52", "-74.1878, -144.001, 14.5667, 0.29", "-74.4567, -144.464, 14.5177, 0.29", "-74.7432, -144.978, 14.4335, 0.29", "-75.0605, -145.588, 14.3097, 0.59", "-75.7637, -147.007, 14.0104, 0.66", "-76.1124, -147.816, 13.8717, 0.52", "-76.4038, -148.622, 13.822, 0.96", "-76.6537, -149.477, 13.7636, 0.66", "-76.9264, -150.669, 13.7649, 0.44", "-77.0393, -151.347, 13.8583, 0.44", "-77.1042, -152.443, 14.278, 0.44", "-77.0035, -153.733, 14.9587, 0.66", "-76.6894, -155.368, 15.9548, 0.96", "-76.3134, -156.699, 16.8149, 0.81", "-75.9101, -157.921, 17.5975, 0.88", "-75.5138, -159.147, 18.3267, 0.66", "-75.2632, -160.129, 18.8468, 0.66", "-75.1306, -160.977, 19.2148, 0.59", "-75.0856, -161.817, 19.5458, 0.44", "-75.0975, -162.597, 19.7262, 0.81", "-75.1357, -163.304, 19.8162, 0.81", "-75.2268, -164.366, 19.9045, 0.44", "-75.3559, -165.285, 19.986, 0.44", "-75.5052, -166.227, 20.0786, 0.66", "-75.691, -167.356, 20.207, 0.59", "-75.7859, -168.262, 20.3078, 0.52", "-75.7877, -168.682, 20.3449, 0.74", "-75.6272, -170.437, 20.4766, 0.29", "-75.5247, -171.071, 20.5197, 0.29", "-75.3246, -172.051, 20.5733, 0.29", "-75.0058, -173.547, 20.644, 0.52", "-74.6314, -175.172, 20.7139, 0.37", "-74.3931, -176.076, 20.7571, 0.59", "-74.1902, -176.748, 20.8221, 0.59", "-73.9143, -177.645, 20.9746, 0.44", "-73.6128, -178.583, 21.233, 0.44", "-73.4521, -179.112, 21.4287, 0.81", "-73.2636, -179.693, 21.6777, 0.81", "-72.865, -180.823, 22.1518, 0.59", "-72.5633, -181.665, 22.4872, 0.52", "-72.261, -182.492, 22.8276, 0.52", "-71.972, -183.413, 23.1973, 0.52", "-71.8493, -184.043, 23.4115, 0.29", "-71.8075, -184.77, 23.6018, 0.29", "-71.8458, -185.473, 23.744, 0.52", "-71.9318, -186.237, 23.8903, 0.52", "-72.0578, -187.341, 24.1357, 0.29", "-72.1578, -188.411, 24.4354, 0.29", "-72.216, -189.252, 24.6793, 0.52", "-72.2489, -189.848, 24.8463, 0.52", "-72.3133, -190.762, 25.0971, 0.29", "-72.3969, -191.723, 25.3441, 0.52", "-72.4558, -192.211, 25.4841, 0.52", "-72.5906, -193.19, 25.8015, 0.52", "-72.7568, -194.281, 26.2059, 0.74", "-73.0323, -195.755, 26.7671, 0.22", "-73.2622, -196.747, 27.1536, 0.22", "-73.5069, -197.679, 27.5202, 0.22", "-73.7519, -198.671, 27.9355, 0.52", "-73.9208, -199.587, 28.3823, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-60.7512, 22.8921, -8.87272, 0.81", "-61.9961, 23.2533, -8.64181, 0.81", "-62.7796, 23.4157, -8.49791, 0.81", "-64.0584, 23.6321, -8.27518, 0.74", "-64.7681, 23.7673, -8.15913, 0.74", "-65.4119, 23.9144, -8.06016, 0.81", "-66.4876, 24.2242, -7.90595, 0.96", "-67.1673, 24.4762, -7.80342, 0.52", "-67.6803, 24.7277, -7.73507, 0.52", "-68.517, 25.351, -7.71457, 0.74", "-68.9828, 25.8306, -7.76462, 0.74", "-69.5638, 26.582, -7.90465, 0.44", "-70.1047, 27.3989, -8.08475, 0.44", "-70.507, 28.0067, -8.23698, 0.44", "-71.3408, 29.1461, -8.55564, 0.81", "-71.8097, 29.6882, -8.733, 0.96", "-72.5372, 30.3586, -8.99505, 0.96", "-73.0886, 30.7486, -9.1738, 0.88", "-73.8934, 31.1646, -9.38849, 0.96", "-74.6702, 31.4433, -9.54493, 1.11", "-75.2397, 31.5785, -9.62049, 1.11", "-75.828, 31.6773, -9.67752, 1.11", "-76.355, 31.7293, -9.70434, 0.74", "-76.9796, 31.7537, -9.71618, 0.29", "-77.8893, 31.7432, -9.67475, 0.29", "-78.6871, 31.7373, -9.5976, 0.88", "-79.3009, 31.7568, -9.49867, 1.03", "-79.9769, 31.8037, -9.34551, 1.03", "-80.6493, 31.8572, -9.16708, 1.11", "-81.8037, 31.975, -8.81837, 0.37", "-82.6483, 32.0753, -8.55074, 0.29", "-83.6043, 32.1857, -8.27581, 0.29", "-84.3922, 32.2664, -8.08934, 0.96", "-85.1439, 32.3249, -7.92926, 1.18", "-85.5366, 32.3265, -7.85896, 1.33", "-86.6753, 32.2281, -7.7003, 0.44", "-87.9199, 32.0174, -7.53716, 0.44", "-88.5329, 31.8909, -7.46626, 0.37", "-89.0458, 31.8017, -7.41113, 0.37", "-90.0026, 31.6991, -7.30172, 0.37", "-90.7681, 31.6845, -7.21001, 0.59", "-91.4909, 31.7487, -7.11588, 0.74", "-92.3652, 31.8791, -7.00153, 0.88", "-93.0964, 32.041, -6.90633, 0.88", "-93.7165, 32.2234, -6.81256, 0.74", "-94.6054, 32.5414, -6.65972, 0.29", "-95.0845, 32.7242, -6.54024, 0.22", "-96.0885, 33.1025, -6.23605, 0.22", "-97.0816, 33.4479, -5.87918, 0.59", "-97.7304, 33.6501, -5.62605, 0.81", "-98.6971, 33.9271, -5.23599, 0.81", "-99.9072, 34.2221, -4.71686, 0.96", "-100.819, 34.4314, -4.33084, 0.59", "-101.645, 34.6573, -4.00129, 0.22", "-102.321, 34.8494, -3.76524, 0.22", "-102.874, 35.0472, -3.58132, 0.44", "-103.743, 35.4519, -3.30303, 0.59", "-104.529, 35.8687, -3.07482, 0.52", "-105.694, 36.5179, -2.73313, 0.66", "-106.322, 36.8632, -2.56463, 0.66", "-107.598, 37.5206, -2.25835, 0.66", "-108.393, 37.9017, -2.08731, 0.59", "-109.114, 38.1918, -2.00321, 0.44", "-110.031, 38.42, -1.96623, 0.37", "-110.858, 38.4938, -1.96854, 0.29", "-111.483, 38.474, -1.99126, 0.29", "-112.116, 38.3905, -2.03723, 0.44", "-113.421, 38.1786, -2.11955, 0.59", "-113.832, 38.1262, -2.13848, 0.59", "-115.066, 38.0017, -2.15009, 0.37", "-116.095, 37.9039, -2.13532, 0.29", "-116.755, 37.8527, -2.11889, 0.29", "-117.085, 37.8361, -2.09683, 0.29", "-117.978, 37.8201, -1.97826, 0.59", "-118.435, 37.821, -1.9186, 0.59", "-118.895, 37.8518, -1.869, 0.52", "-119.444, 37.9387, -1.79834, 0.66", "-120.394, 38.1203, -1.65558, 0.29", "-120.826, 38.1859, -1.57896, 0.29", "-121.334, 38.2281, -1.46175, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-60.7512, 22.8921, -8.87272, 0.74", "-60.7804, 24.0029, -8.94156, 0.74", "-60.836, 25.3401, -9.0473, 0.74", "-60.9539, 26.9628, -9.18869, 0.74", "-61.0835, 27.9094, -9.3043, 0.74", "-61.5139, 29.9974, -9.58657, 0.88", "-61.7669, 30.9503, -9.72848, 0.88", "-62.0781, 31.7978, -9.90202, 0.96", "-62.5215, 32.7338, -10.1333, 0.81", "-63.4485, 34.3415, -10.5767, 0.74", "-64.2367, 35.6111, -10.9899, 0.96", "-64.8685, 36.5874, -11.3423, 0.96", "-65.6337, 37.8011, -11.8093, 0.81", "-66.1924, 38.768, -12.2128, 0.74", "-66.5612, 39.5153, -12.5462, 0.74", "-67.1451, 40.9406, -13.1867, 0.74", "-67.4608, 41.8021, -13.5807, 0.88", "-67.7711, 42.6272, -13.9274, 0.88", "-68.09, 43.392, -14.209, 0.66", "-68.4844, 44.1712, -14.4978, 0.66", "-68.972, 44.9777, -14.7858, 0.81", "-69.5183, 45.7509, -15.045, 0.81", "-70.2432, 46.7019, -15.4243, 0.66", "-70.7841, 47.3665, -15.6974, 0.81", "-71.4066, 48.1178, -16.0281, 0.81", "-71.868, 48.7342, -16.3131, 0.59", "-72.13, 49.1781, -16.512, 0.59", "-72.5675, 50.1171, -16.8699, 0.59", "-72.8987, 51.015, -17.1302, 0.59", "-73.1772, 51.8463, -17.3463, 0.74", "-73.473, 52.7052, -17.5856, 0.88", "-73.9416, 53.8567, -17.9512, 1.25", "-74.4213, 54.8352, -18.31, 0.66", "-74.9087, 55.6798, -18.6571, 0.66", "-75.7583, 56.9443, -19.2793, 0.81", "-76.4627, 57.816, -19.7561, 0.81", "-77.1483, 58.5127, -20.1862, 0.96", "-77.8178, 59.0747, -20.5452, 0.66", "-78.5279, 59.5898, -20.8448, 0.52", "-79.5969, 60.294, -21.1639, 0.52", "-80.4884, 60.8506, -21.3123, 1.11", "-81.0736, 61.2376, -21.341, 1.33", "-81.9224, 61.8626, -21.3056, 0.66", "-82.698, 62.5058, -21.2191, 0.52", "-83.2437, 63.015, -21.1345, 0.66", "-83.5288, 63.3231, -21.0801, 0.66", "-84.289, 64.2661, -20.9617, 0.44", "-84.8672, 65.0927, -20.8953, 0.81", "-85.2681, 65.7418, -20.8868, 0.81", "-85.8132, 66.6963, -20.9141, 0.88", "-86.3974, 67.7516, -20.9754, 0.88", "-87.0066, 68.8313, -21.0654, 0.59", "-87.464, 69.6003, -21.1527, 0.81", "-88.1138, 70.6124, -21.2769, 0.96", "-88.5979, 71.2766, -21.3499, 0.96", "-89.1453, 71.9716, -21.4411, 0.96", "-90.0665, 73.137, -21.5947, 0.96", "-90.8656, 74.204, -21.7191, 0.88", "-91.4969, 75.1334, -21.8339, 0.88", "-92.3773, 76.6526, -22.0636, 0.81", "-92.9483, 77.8685, -22.2783, 0.52", "-93.3052, 78.9074, -22.4907, 0.74", "-93.5183, 79.9278, -22.7292, 0.74", "-93.6288, 80.8976, -22.9856, 0.88", "-93.7077, 82.0053, -23.2924, 0.66", "-93.7712, 82.9416, -23.5675, 0.88", "-93.9005, 83.8005, -23.846, 0.88", "-94.1686, 84.6732, -24.1882, 0.66", "-94.6415, 85.6073, -24.6029, 0.66", "-95.2256, 86.4096, -24.9752, 0.96", "-95.7369, 86.9638, -25.2051, 0.96", "-96.4562, 87.6549, -25.4648, 0.74", "-97.2792, 88.4599, -25.696, 0.66", "-97.7505, 88.9711, -25.7923, 0.66", "-98.3116, 89.6478, -25.8713, 0.66", "-99.212, 90.8455, -25.9739, 1.03", "-99.6524, 91.5146, -26.0135, 1.03", "-100.435, 92.8303, -26.1299, 0.74", "-101.296, 94.3962, -26.3796, 0.88", "-101.844, 95.3694, -26.5865, 0.74", "-102.508, 96.4653, -26.8771, 0.96", "-103.412, 97.8069, -27.2967, 0.59", "-104.454, 99.2257, -27.7893, 0.52", "-105.161, 100.139, -28.1476, 0.66", "-106.056, 101.349, -28.6523, 0.81", "-106.605, 102.168, -28.9984, 1.03", "-107.141, 103.043, -29.3239, 0.74", "-107.454, 103.578, -29.4764, 0.96", "-107.911, 104.408, -29.6107, 0.96", "-108.504, 105.512, -29.7128, 0.59", "-108.92, 106.32, -29.7652, 0.59", "-109.553, 107.491, -29.8065, 0.74", "-110.124, 108.418, -29.8177, 0.81", "-110.893, 109.424, -29.8031, 0.96", "-111.728, 110.312, -29.7611, 1.18", "-112.631, 111.111, -29.7025, 0.59", "-113.382, 111.717, -29.7122, 0.66", "-114.107, 112.282, -29.7895, 0.66", "-115.176, 113.121, -29.9691, 0.52", "-115.908, 113.716, -30.1353, 0.81", "-116.727, 114.384, -30.3503, 0.81", "-118.357, 115.656, -30.8065, 0.88", "-119.226, 116.299, -31.0686, 0.59", "-120.056, 116.871, -31.3317, 0.81", "-120.946, 117.453, -31.624, 0.81", "-122.059, 118.143, -31.979, 0.81", "-122.726, 118.541, -32.1654, 0.81", "-123.574, 119.018, -32.3297, 0.74", "-124.416, 119.501, -32.5091, 0.59", "-125.23, 120.026, -32.6956, 0.59", "-125.994, 120.638, -32.884, 0.74", "-126.834, 121.542, -33.118, 0.81", "-127.385, 122.35, -33.2757, 0.88", "-127.723, 122.994, -33.3488, 0.88", "-128.046, 123.725, -33.3958, 0.74", "-128.421, 124.643, -33.4177, 0.74", "-128.742, 125.46, -33.4221, 0.52", "-129.226, 126.78, -33.4163, 0.44", "-129.634, 127.872, -33.3985, 0.74", "-129.867, 128.42, -33.3869, 0.74", "-130.343, 129.339, -33.4074, 0.59", "-130.74, 129.936, -33.4742, 0.59", "-131.171, 130.456, -33.5785, 0.59", "-132.012, 131.258, -33.8141, 0.66", "-133.089, 132.116, -34.1408, 0.37", "-134.286, 132.925, -34.4938, 0.37", "-135.658, 133.695, -34.863, 0.52", "-136.27, 134.002, -35.0073, 0.52", "-137.295, 134.495, -35.2262, 0.29", "-138.054, 134.867, -35.3881, 0.66", "-138.701, 135.225, -35.5134, 0.66", "-139.631, 135.851, -35.6615, 0.37", "-140.417, 136.504, -35.7706, 0.44", "-141.197, 137.259, -35.8921, 0.29", "-141.901, 138.042, -36.0294, 0.29", "-142.564, 138.842, -36.173, 0.29", "-143.167, 139.588, -36.3124, 0.74", "-143.459, 139.92, -36.3825, 0.74", "-143.892, 140.311, -36.4728, 0.37", "-144.721, 140.881, -36.6228, 0.29", "-145.309, 141.204, -36.7209, 0.29", "-145.783, 141.433, -36.817, 0.29", "-146.599, 141.778, -36.9916, 0.29", "-147.36, 142.059, -37.1552, 0.66", "-147.91, 142.228, -37.2698, 0.66", "-148.717, 142.433, -37.4175, 0.37", "-149.577, 142.672, -37.609, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-17.8438, 54.5913, 20.1614, 0.96", "-17.993, 56.0474, 20.5914, 0.96", "-18.2058, 57.1331, 20.8573, 0.81", "-18.4427, 58.0053, 21.0415, 0.74", "-18.7579, 58.9158, 21.2041, 0.74", "-19.2523, 60.1117, 21.3823, 0.81", "-19.7491, 61.1676, 21.5148, 0.66", "-20.1361, 61.8386, 21.5729, 0.81", "-20.5348, 62.4626, 21.6099, 0.81", "-21.1629, 63.3734, 21.677, 0.66", "-21.875, 64.3278, 21.7722, 0.81", "-22.3811, 64.9888, 21.8596, 0.96", "-22.8706, 65.7001, 21.9661, 1.03", "-23.3959, 66.5445, 22.096, 0.59", "-23.841, 67.3611, 22.1812, 0.59", "-24.2724, 68.2473, 22.2365, 0.44", "-24.5993, 68.9597, 22.2596, 0.44", "-25.2413, 70.3321, 22.2709, 0.81", "-25.5972, 71.0223, 22.2521, 1.03", "-26.3796, 72.285, 22.2738, 0.66", "-26.7914, 72.815, 22.3131, 0.66", "-27.3011, 73.3511, 22.413, 0.81", "-27.8451, 73.8556, 22.568, 0.59", "-28.5214, 74.4301, 22.8628, 0.44", "-29.7865, 75.5664, 23.6069, 0.44", "-30.6692, 76.4551, 24.2743, 0.37", "-31.4042, 77.3388, 24.8887, 0.37", "-31.9042, 78.1159, 25.341, 0.37", "-32.5595, 79.4872, 25.9466, 0.44", "-32.801, 80.2845, 26.448, 0.29", "-32.9469, 80.9535, 26.7711, 0.29", "-33.1545, 81.9826, 27.1678, 0.29", "-33.4026, 83.0142, 27.4689, 0.96", "-33.6598, 83.8679, 27.6668, 1.11", "-35.2469, 88.6644, 28.6304, 1.11", "-36.7921, 92.7003, 29.7662, 0.44", "-37.0294, 93.3591, 30.0947, 0.29", "-37.2138, 94.0797, 30.7731, 0.29", "-37.204, 94.3725, 31.3824, 0.29", "-37.065, 94.4899, 32.133, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.8438, 54.5913, 20.1614, 0.74", "-17.0724, 55.4406, 21.1513, 0.74", "-16.7246, 55.8236, 21.5976, 0.74", "-16.058, 56.5575, 22.453, 0.74", "-15.4671, 57.2082, 23.2114, 1.03", "-14.861, 57.8755, 23.9891, 1.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.861, 57.8755, 23.9891, 0.66", "-14.5345, 58.9514, 24.1746, 0.66", "-14.3618, 59.7808, 24.3361, 0.66", "-14.2161, 60.7827, 24.5251, 0.74", "-14.1008, 61.9283, 24.7423, 0.74", "-13.9963, 63.3939, 25.0286, 1.18", "-13.925, 64.7122, 25.3074, 0.96", "-13.8879, 65.8075, 25.5836, 0.81", "-13.8551, 66.956, 25.8879, 0.52", "-13.8218, 67.8906, 26.1719, 0.52", "-13.7865, 68.8942, 26.5135, 0.96", "-13.7717, 69.45, 26.7041, 0.96", "-13.7673, 70.2541, 27.0307, 0.96", "-13.7719, 70.9528, 27.3284, 0.59", "-13.7763, 71.7794, 27.6406, 0.37", "-13.7285, 72.5464, 27.9902, 0.37", "-13.6318, 73.1852, 28.3078, 0.37", "-13.3362, 74.2137, 28.7841, 0.37", "-12.7693, 75.4147, 29.2958, 0.37", "-12.1229, 76.2983, 29.6519, 0.74", "-10.6157, 78.0102, 30.3153, 0.22", "-10.0482, 78.5522, 30.5289, 0.22", "-8.93289, 79.4454, 30.8894, 0.22", "-7.82129, 80.1481, 31.1999, 0.22", "-7.00604, 80.5581, 31.418, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-14.861, 57.8755, 23.9891, 0.74", "-13.9374, 58.1986, 24.5971, 0.74", "-13.2879, 58.6679, 25.1056, 0.44", "-12.7262, 59.2416, 25.5895, 0.44", "-12.3397, 59.7181, 25.9313, 0.59", "-11.9133, 60.2748, 26.3057, 0.29", "-11.3717, 60.9632, 26.8241, 0.29", "-11.0346, 61.5219, 27.199, 0.44", "-10.8759, 61.8449, 27.3959, 0.44", "-10.5629, 62.57, 27.8327, 0.66", "-10.2785, 63.1939, 28.1851, 0.74", "-9.74075, 64.1469, 28.7881, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_ChC_85582ca6d2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000043190095856)
    connect dend_37(0), soma_0(0.45000043190095856)
    connect dend_24(0), soma_0(0.45000043190095856)
    connect dend_9(0), soma_0(0.45000043190095856)
    connect dend_0(0), soma_0(0.45000043190095856)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.247476, -12.3185, -1.01707, 2.36383 ) }
    soma_0 { pt3dadd( 0.272374, -11.1472, -0.92957, 3.66321 ) }
    soma_0 { pt3dadd( 0.297273, -9.97598, -0.842075, 5.22974 ) }
    soma_0 { pt3dadd( 0.322171, -8.80474, -0.75458, 6.26105 ) }
    soma_0 { pt3dadd( 0.34707, -7.63351, -0.667085, 6.92536 ) }
    soma_0 { pt3dadd( 0.371968, -6.46227, -0.57959, 7.55364 ) }
    soma_0 { pt3dadd( 0.396866, -5.29103, -0.492094, 8.36178 ) }
    soma_0 { pt3dadd( 0.421765, -4.1198, -0.404599, 9.09467 ) }
    soma_0 { pt3dadd( 0.446663, -2.94856, -0.317104, 9.82452 ) }
    soma_0 { pt3dadd( 0.471562, -1.77733, -0.229609, 10.5969 ) }
    soma_0 { pt3dadd( 0.49646, -0.606089, -0.142114, 10.9527 ) }
    soma_0 { pt3dadd( 0.521359, 0.565147, -0.0546186, 11.1935 ) }
    soma_0 { pt3dadd( 0.546257, 1.73638, 0.0328765, 11.3346 ) }
    soma_0 { pt3dadd( 0.571156, 2.90762, 0.120372, 11.3156 ) }
    soma_0 { pt3dadd( 0.596054, 4.07886, 0.207867, 11.2804 ) }
    soma_0 { pt3dadd( 0.620953, 5.25009, 0.295362, 11.0098 ) }
    soma_0 { pt3dadd( 0.645851, 6.42133, 0.382857, 10.6994 ) }
    soma_0 { pt3dadd( 0.67075, 7.59256, 0.470352, 10.2417 ) }
    soma_0 { pt3dadd( 0.695648, 8.7638, 0.557847, 9.96532 ) }
    soma_0 { pt3dadd( 0.720546, 9.93504, 0.645343, 4.49434 ) }
    soma_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 2.79989 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.17534, 7.60086, -4.88165, 0.29 ) }
    dend_38 { pt3dadd( 5.67785, 8.43507, -4.58991, 0.29 ) }
    dend_38 { pt3dadd( 6.21793, 9.34349, -4.31321, 0.37 ) }
    dend_38 { pt3dadd( 6.79869, 10.334, -4.05273, 0.52 ) }
    dend_38 { pt3dadd( 7.13815, 10.9224, -3.91845, 0.52 ) }
    dend_38 { pt3dadd( 7.62148, 11.7388, -3.75448, 0.81 ) }
    dend_38 { pt3dadd( 7.90515, 12.2414, -3.66803, 0.81 ) }
    dend_38 { pt3dadd( 8.21704, 12.8669, -3.5628, 0.29 ) }
    dend_38 { pt3dadd( 8.49331, 13.5368, -3.46778, 0.59 ) }
    dend_38 { pt3dadd( 8.71858, 14.1664, -3.40249, 0.59 ) }
    dend_38 { pt3dadd( 8.95112, 14.8824, -3.32538, 0.59 ) }
    dend_38 { pt3dadd( 9.25562, 15.8526, -3.21459, 0.29 ) }
    dend_38 { pt3dadd( 9.69437, 17.2375, -3.06272, 0.29 ) }
    dend_38 { pt3dadd( 9.98347, 18.0916, -2.97406, 0.81 ) }
    dend_38 { pt3dadd( 10.1801, 18.6208, -2.92409, 0.81 ) }
    dend_38 { pt3dadd( 10.4614, 19.3183, -2.87105, 0.52 ) }
    dend_38 { pt3dadd( 10.9083, 20.2497, -2.82056, 0.29 ) }
    dend_38 { pt3dadd( 11.5512, 21.4377, -2.77873, 0.22 ) }
    dend_38 { pt3dadd( 11.9403, 22.0832, -2.77873, 0.29 ) }
    dend_38 { pt3dadd( 12.3628, 22.7482, -2.77873, 0.29 ) }
    dend_38 { pt3dadd( 13.2373, 24.0907, -2.77873, 0.22 ) }
    dend_38 { pt3dadd( 14.0818, 25.3416, -2.77873, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.00466, -10.0701, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.00466, -10.0701, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.59415, -10.8787, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -2.33598, -12.0114, 5.53174, 0.88 ) }
    dend_37 { pt3dadd( -2.87148, -12.9109, 5.62557, 0.88 ) }
    dend_37 { pt3dadd( -3.63269, -14.3606, 5.88695, 1.18 ) }
    dend_37 { pt3dadd( -4.11331, -15.4432, 6.18692, 1.18 ) }
    dend_37 { pt3dadd( -4.64713, -17.1297, 6.81682, 0.81 ) }
    dend_37 { pt3dadd( -4.76378, -17.9042, 7.18191, 1.11 ) }
    dend_37 { pt3dadd( -4.67419, -19.0979, 7.82065, 1.11 ) }
    dend_37 { pt3dadd( -4.40199, -20.1036, 8.43282, 0.96 ) }
    dend_37 { pt3dadd( -3.85295, -21.4066, 9.29195, 1.11 ) }
    dend_37 { pt3dadd( -3.40831, -22.3133, 9.89856, 1.25 ) }
    dend_37 { pt3dadd( -3.03201, -23.0191, 10.3569, 0.96 ) }
    dend_37 { pt3dadd( -2.46936, -24.3035, 11.0615, 1.03 ) }
    dend_37 { pt3dadd( -2.15254, -25.337, 11.4914, 1.03 ) }
    dend_37 { pt3dadd( -2.0706, -25.9988, 11.7115, 0.59 ) }
    dend_37 { pt3dadd( -2.13156, -26.8893, 12.0015, 0.88 ) }
    dend_37 { pt3dadd( -2.24297, -27.3023, 12.1571, 0.88 ) }
    dend_37 { pt3dadd( -2.80771, -28.5592, 12.6819, 0.66 ) }
    dend_37 { pt3dadd( -3.15442, -29.0835, 12.9478, 0.74 ) }
    dend_37 { pt3dadd( -3.7233, -29.8729, 13.367, 0.66 ) }
    dend_37 { pt3dadd( -4.41012, -30.9023, 13.9331, 0.88 ) }
    dend_37 { pt3dadd( -4.86751, -31.7104, 14.3582, 0.81 ) }
    dend_37 { pt3dadd( -5.14886, -32.3295, 14.6751, 0.44 ) }
    dend_37 { pt3dadd( -5.57351, -33.5968, 15.3042, 0.81 ) }
    dend_37 { pt3dadd( -5.86546, -34.7677, 15.8146, 0.81 ) }
    dend_37 { pt3dadd( -6.06438, -36.0308, 16.2399, 0.59 ) }
    dend_37 { pt3dadd( -6.155, -37.1809, 16.5263, 1.11 ) }
    dend_37 { pt3dadd( -6.16272, -38.1414, 16.6908, 1.33 ) }
    dend_37 { pt3dadd( -6.12703, -38.9653, 16.8005, 1.11 ) }
    dend_37 { pt3dadd( -6.02577, -40.0909, 16.9247, 0.81 ) }
    dend_37 { pt3dadd( -5.90634, -41.1402, 17.1054, 0.66 ) }
    dend_37 { pt3dadd( -5.78268, -41.8437, 17.3212, 1.18 ) }
    dend_37 { pt3dadd( -5.48544, -42.9598, 17.8576, 0.96 ) }
    dend_37 { pt3dadd( -5.23879, -43.7176, 18.3207, 0.74 ) }
    dend_37 { pt3dadd( -4.89646, -44.6745, 19.0214, 0.66 ) }
    dend_37 { pt3dadd( -4.51367, -45.7185, 19.8799, 0.88 ) }
    dend_37 { pt3dadd( -4.10513, -46.9574, 21.0193, 1.18 ) }
    dend_37 { pt3dadd( -3.84117, -47.9919, 22.0152, 0.66 ) }
    dend_37 { pt3dadd( -3.74553, -48.679, 22.6664, 0.59 ) }
    dend_37 { pt3dadd( -3.72928, -49.3197, 23.1768, 0.74 ) }
    dend_37 { pt3dadd( -3.78474, -50.0524, 23.6416, 0.44 ) }
    dend_37 { pt3dadd( -3.96081, -51.1232, 24.1192, 0.44 ) }
    dend_37 { pt3dadd( -4.12043, -51.788, 24.2876, 0.44 ) }
    dend_37 { pt3dadd( -4.39867, -52.8119, 24.39, 0.37 ) }
    dend_37 { pt3dadd( -4.61564, -53.8361, 24.615, 0.37 ) }
    dend_37 { pt3dadd( -4.7489, -54.5364, 24.9041, 0.96 ) }
    dend_37 { pt3dadd( -4.83651, -55.0017, 25.1765, 0.96 ) }
    dend_37 { pt3dadd( -5.02557, -55.8793, 25.8534, 0.44 ) }
    dend_37 { pt3dadd( -5.25947, -56.7121, 26.6097, 0.81 ) }
    dend_37 { pt3dadd( -6.09813, -59.4446, 29.267, 0.88 ) }
    dend_37 { pt3dadd( -6.41293, -60.459, 30.2648, 0.88 ) }
    dend_37 { pt3dadd( -6.5312, -60.9138, 30.6841, 0.88 ) }
    dend_37 { pt3dadd( -6.69984, -61.7678, 31.3843, 0.66 ) }
    dend_37 { pt3dadd( -6.88404, -63.033, 32.2915, 0.52 ) }
    dend_37 { pt3dadd( -6.9669, -63.9475, 32.7517, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( -6.99131, -64.8625, 32.968, 0.59 ) }
    dend_37 { pt3dadd( -6.89844, -66.0061, 33.2205, 0.74 ) }
    dend_37 { pt3dadd( -6.81212, -66.6736, 33.3811, 0.74 ) }
    dend_37 { pt3dadd( -6.56448, -68.3618, 33.8508, 0.74 ) }
    dend_37 { pt3dadd( -6.39064, -69.421, 34.2529, 0.52 ) }
    dend_37 { pt3dadd( -6.27647, -70.0926, 34.5568, 0.66 ) }
    dend_37 { pt3dadd( -6.14446, -70.7873, 34.8826, 0.66 ) }
    dend_37 { pt3dadd( -5.91201, -71.7072, 35.3244, 0.37 ) }
    dend_37 { pt3dadd( -5.70341, -72.322, 35.5746, 0.37 ) }
    dend_37 { pt3dadd( -5.37806, -73.115, 35.7949, 0.37 ) }
    dend_37 { pt3dadd( -5.02751, -73.9921, 35.9936, 0.37 ) }
    dend_37 { pt3dadd( -4.74724, -74.7179, 36.1274, 0.37 ) }
    dend_37 { pt3dadd( -4.25725, -75.8828, 36.3096, 0.37 ) }
    dend_37 { pt3dadd( -3.95771, -76.5066, 36.4139, 0.52 ) }
    dend_37 { pt3dadd( -3.745, -76.9534, 36.4853, 0.66 ) }
    dend_37 { pt3dadd( -3.45893, -77.6273, 36.5971, 0.52 ) }
    dend_37 { pt3dadd( -3.12631, -78.5297, 36.7668, 0.52 ) }
    dend_37 { pt3dadd( -2.8043, -79.4467, 36.9556, 0.74 ) }
    dend_37 { pt3dadd( -2.53214, -80.2261, 37.0956, 0.88 ) }
    dend_37 { pt3dadd( -2.24012, -81.0422, 37.2518, 0.96 ) }
    dend_37 { pt3dadd( -2.0576, -81.5435, 37.3517, 0.96 ) }
    dend_37 { pt3dadd( -1.87029, -82.0533, 37.4556, 0.81 ) }
    dend_37 { pt3dadd( -1.57749, -82.9666, 37.6302, 1.18 ) }
    dend_37 { pt3dadd( -1.42024, -83.6155, 37.7551, 1.4 ) }
    dend_37 { pt3dadd( -1.3156, -84.13, 37.8397, 1.4 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.87466, -11.8024, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -2.87466, -11.8024, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -3.46007, -12.4115, -0.206396, 2.87 ) }
    dend_24 { pt3dadd( -4.58606, -13.6022, -0.123213, 2.21 ) }
    dend_24 { pt3dadd( -5.5695, -14.6421, -0.0505606, 2.21 ) }
    dend_24 { pt3dadd( -6.28276, -15.3964, 0.00213236, 2.21 ) }
    dend_24 { pt3dadd( -7.18739, -16.353, 0.0689624, 2.21 ) }
    dend_24 { pt3dadd( -8.12867, -17.3421, 0.131608, 2.21 ) }
    dend_24 { pt3dadd( -9.09693, -18.3451, 0.179983, 2.36 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.71466, 9.84559, 3.05835, 3.83 ) }
    dend_9 { pt3dadd( -4.07028, 10.3954, 3.3948, 3.83 ) }
    dend_9 { pt3dadd( -4.90295, 11.6828, 4.18258, 3.32 ) }
    dend_9 { pt3dadd( -5.60937, 12.7749, 4.85091, 3.32 ) }
    dend_9 { pt3dadd( -6.24473, 13.7572, 5.45202, 3.39 ) }
    dend_9 { pt3dadd( -7.11298, 15.0995, 6.27346, 3.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.19534, 8.27736, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.19534, 8.27736, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.33833, 9.08169, -3.68919, 1.03 ) }
    dend_0 { pt3dadd( 4.45321, 9.81459, -3.29833, 1.03 ) }
    dend_0 { pt3dadd( 4.58928, 10.8421, -2.71096, 1.03 ) }
    dend_0 { pt3dadd( 4.66521, 11.5105, -2.32367, 1.03 ) }
    dend_0 { pt3dadd( 4.74044, 12.2774, -1.88792, 1.03 ) }
    dend_0 { pt3dadd( 4.83179, 13.402, -1.25713, 1.11 ) }
    dend_0 { pt3dadd( 4.87125, 14.0291, -0.878984, 1.33 ) }
    dend_0 { pt3dadd( 4.90413, 14.7709, -0.424892, 1.33 ) }
    dend_0 { pt3dadd( 4.92311, 15.1536, -0.19853, 1.47 ) }
    dend_0 { pt3dadd( 4.96471, 15.623, 0.0668144, 1.47 ) }
    dend_0 { pt3dadd( 5.05419, 16.3796, 0.445248, 1.25 ) }
    dend_0 { pt3dadd( 5.23536, 17.5499, 0.934823, 1.25 ) }
    dend_0 { pt3dadd( 5.35382, 18.1379, 1.1462, 1.4 ) }
    dend_0 { pt3dadd( 5.57913, 19.0163, 1.42943, 1.4 ) }
    dend_0 { pt3dadd( 5.87775, 20.0717, 1.69259, 1.18 ) }
    dend_0 { pt3dadd( 6.12232, 20.9305, 1.81997, 1.25 ) }
    dend_0 { pt3dadd( 6.32232, 21.6688, 1.85671, 1.11 ) }
    dend_0 { pt3dadd( 6.57512, 22.7209, 1.77833, 0.88 ) }
    dend_0 { pt3dadd( 6.77683, 23.688, 1.64298, 0.88 ) }
    dend_0 { pt3dadd( 6.9903, 25.0137, 1.39369, 0.88 ) }
    dend_0 { pt3dadd( 7.12333, 26.3059, 1.10551, 1.4 ) }
    dend_0 { pt3dadd( 7.18258, 27.3838, 0.853584, 1.55 ) }
    dend_0 { pt3dadd( 7.19338, 28.8214, 0.544409, 1.84 ) }
    dend_0 { pt3dadd( 7.17515, 29.4103, 0.432849, 1.84 ) }
    dend_0 { pt3dadd( 7.13095, 30.5078, 0.263192, 1.33 ) }
    dend_0 { pt3dadd( 7.10308, 31.7929, 0.139409, 0.96 ) }
    dend_0 { pt3dadd( 7.12999, 32.8805, 0.0798744, 0.96 ) }
    dend_0 { pt3dadd( 7.26009, 34.3463, 0.0430313, 1.03 ) }
    dend_0 { pt3dadd( 7.38711, 35.0422, 0.0521594, 1.25 ) }
    dend_0 { pt3dadd( 7.68142, 36.0503, 0.0791914, 1.47 ) }
    dend_0 { pt3dadd( 7.96924, 36.7217, 0.103099, 1.47 ) }
    dend_0 { pt3dadd( 8.50651, 37.6546, 0.142059, 1.03 ) }
    dend_0 { pt3dadd( 8.99623, 38.3314, 0.154979, 1.03 ) }
    dend_0 { pt3dadd( 9.62588, 39.0786, 0.163731, 1.47 ) }
    dend_0 { pt3dadd( 10.2293, 39.7428, 0.188495, 1.25 ) }
    dend_0 { pt3dadd( 10.6314, 40.1621, 0.222638, 1.55 ) }
    dend_0 { pt3dadd( 11.4056, 40.9514, 0.298757, 0.81 ) }
    dend_0 { pt3dadd( 12.1331, 41.6884, 0.385322, 0.81 ) }
    dend_0 { pt3dadd( 12.6989, 42.2665, 0.467392, 1.25 ) }
    dend_0 { pt3dadd( 13.2039, 42.8003, 0.560416, 1.47 ) }
    dend_0 { pt3dadd( 13.6789, 43.3258, 0.672309, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 0.885241 ) }
    axon_0 { pt3dadd( 1.06425, 26.1029, 0.732838, 0.885241 ) }
    axon_0 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.885241 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 86/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.09693, -18.3451, 0.179983, 0.96 ) }
    dend_36 { pt3dadd( -9.16725, -18.816, 0.62286, 0.96 ) }
    dend_36 { pt3dadd( -9.37548, -19.9366, 1.63801, 0.74 ) }
    dend_36 { pt3dadd( -9.78221, -21.952, 3.36102, 1.11 ) }
    dend_36 { pt3dadd( -10.057, -23.1372, 4.30425, 0.81 ) }
    dend_36 { pt3dadd( -10.2626, -23.9015, 4.85445, 0.66 ) }
    dend_36 { pt3dadd( -10.4496, -24.5107, 5.2492, 0.44 ) }
    dend_36 { pt3dadd( -10.696, -25.1731, 5.64335, 0.66 ) }
    dend_36 { pt3dadd( -10.9066, -25.6194, 5.84367, 1.03 ) }
    dend_36 { pt3dadd( -11.2412, -26.2938, 5.94577, 1.03 ) }
    dend_36 { pt3dadd( -11.7048, -27.2294, 5.96082, 0.81 ) }
    dend_36 { pt3dadd( -12.0455, -28.0201, 5.92477, 0.81 ) }
    dend_36 { pt3dadd( -12.3075, -28.7803, 5.84863, 0.96 ) }
    dend_36 { pt3dadd( -12.645, -30.1424, 5.65501, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -12.9436, -31.9296, 5.36013, 0.52 ) }
    dend_36 { pt3dadd( -13.0137, -32.6796, 5.20449, 0.88 ) }
    dend_36 { pt3dadd( -13.0573, -33.8635, 4.88134, 0.74 ) }
    dend_36 { pt3dadd( -13.0442, -35.3284, 4.39152, 0.59 ) }
    dend_36 { pt3dadd( -12.9844, -36.6669, 3.87174, 0.74 ) }
    dend_36 { pt3dadd( -12.899, -38.0027, 3.33829, 0.59 ) }
    dend_36 { pt3dadd( -12.8189, -39.7246, 2.65471, 0.74 ) }
    dend_36 { pt3dadd( -12.823, -41.1469, 2.10401, 0.81 ) }
    dend_36 { pt3dadd( -12.8902, -42.2935, 1.68654, 0.52 ) }
    dend_36 { pt3dadd( -12.9853, -43.2178, 1.38797, 0.66 ) }
    dend_36 { pt3dadd( -13.1467, -44.3782, 1.07828, 0.59 ) }
    dend_36 { pt3dadd( -13.3566, -45.6343, 0.859171, 0.74 ) }
    dend_36 { pt3dadd( -13.5629, -46.6334, 0.798575, 0.74 ) }
    dend_36 { pt3dadd( -13.8606, -47.8237, 0.82944, 0.52 ) }
    dend_36 { pt3dadd( -14.1389, -48.7395, 0.889691, 0.96 ) }
    dend_36 { pt3dadd( -14.3178, -49.3062, 0.929106, 1.11 ) }
    dend_36 { pt3dadd( -14.5242, -50.0406, 0.963013, 1.25 ) }
    dend_36 { pt3dadd( -14.7227, -50.8011, 0.989753, 0.96 ) }
    dend_36 { pt3dadd( -14.9643, -51.7467, 1.00591, 0.96 ) }
    dend_36 { pt3dadd( -15.2889, -52.97, 0.978863, 0.52 ) }
    dend_36 { pt3dadd( -15.5313, -53.9735, 0.9213, 0.59 ) }
    dend_36 { pt3dadd( -15.7396, -54.9883, 0.836163, 0.81 ) }
    dend_36 { pt3dadd( -15.8904, -55.9582, 0.700092, 0.96 ) }
    dend_36 { pt3dadd( -15.9711, -56.8579, 0.520825, 0.96 ) }
    dend_36 { pt3dadd( -16.022, -58.1219, 0.192191, 0.74 ) }
    dend_36 { pt3dadd( -16.0383, -59.5062, -0.227539, 0.74 ) }
    dend_36 { pt3dadd( -16.0605, -60.4229, -0.535839, 1.03 ) }
    dend_36 { pt3dadd( -16.1091, -61.6554, -0.973687, 1.25 ) }
    dend_36 { pt3dadd( -16.1428, -62.7255, -1.3901, 0.66 ) }
    dend_36 { pt3dadd( -16.1603, -63.466, -1.63939, 0.52 ) }
    dend_36 { pt3dadd( -16.185, -64.2954, -1.85943, 0.74 ) }
    dend_36 { pt3dadd( -16.2278, -65.3567, -2.0477, 0.74 ) }
    dend_36 { pt3dadd( -16.2536, -66.351, -2.10533, 0.66 ) }
    dend_36 { pt3dadd( -16.2655, -67.3824, -2.05507, 0.66 ) }
    dend_36 { pt3dadd( -16.233, -69.4424, -1.80383, 0.66 ) }
    dend_36 { pt3dadd( -16.1684, -70.5419, -1.62006, 0.74 ) }
    dend_36 { pt3dadd( -16.0314, -72.0182, -1.34007, 0.74 ) }
    dend_36 { pt3dadd( -15.8535, -73.7018, -0.970645, 0.88 ) }
    dend_36 { pt3dadd( -15.7719, -74.7126, -0.733268, 1.11 ) }
    dend_36 { pt3dadd( -15.716, -75.9014, -0.448601, 1.11 ) }
    dend_36 { pt3dadd( -15.6663, -77.3276, -0.153244, 0.88 ) }
    dend_36 { pt3dadd( -15.6224, -78.7009, 0.155374, 0.74 ) }
    dend_36 { pt3dadd( -15.5634, -80.3068, 0.469667, 0.59 ) }
    dend_36 { pt3dadd( -15.4767, -81.6353, 0.627604, 0.44 ) }
    dend_36 { pt3dadd( -15.4205, -82.1403, 0.65462, 0.74 ) }
    dend_36 { pt3dadd( -15.256, -83.1067, 0.647266, 0.88 ) }
    dend_36 { pt3dadd( -15.0059, -84.0728, 0.62887, 0.88 ) }
    dend_36 { pt3dadd( -14.5116, -85.5786, 0.603863, 0.66 ) }
    dend_36 { pt3dadd( -14.1555, -86.5368, 0.620405, 0.81 ) }
    dend_36 { pt3dadd( -13.8528, -87.4243, 0.700579, 0.81 ) }
    dend_36 { pt3dadd( -13.667, -88.2943, 0.82599, 0.59 ) }
    dend_36 { pt3dadd( -13.5646, -89.716, 1.05175, 0.74 ) }
    dend_36 { pt3dadd( -13.6121, -90.5774, 1.16377, 0.96 ) }
    dend_36 { pt3dadd( -13.7395, -91.4081, 1.21597, 0.96 ) }
    dend_36 { pt3dadd( -13.9944, -92.5341, 1.14984, 0.66 ) }
    dend_36 { pt3dadd( -14.3543, -93.916, 0.901495, 0.44 ) }
    dend_36 { pt3dadd( -14.6382, -94.9635, 0.593444, 0.81 ) }
    dend_36 { pt3dadd( -14.9401, -96.1829, 0.138512, 0.81 ) }
    dend_36 { pt3dadd( -15.2713, -97.7885, -0.5153, 0.37 ) }
    dend_36 { pt3dadd( -15.4407, -98.7983, -0.951385, 0.81 ) }
    dend_36 { pt3dadd( -15.5446, -99.6842, -1.33042, 1.03 ) }
    dend_36 { pt3dadd( -15.5906, -100.564, -1.65773, 0.52 ) }
    dend_36 { pt3dadd( -15.5654, -101.626, -1.94178, 0.29 ) }
    dend_36 { pt3dadd( -15.5119, -102.155, -2.03777, 0.88 ) }
    dend_36 { pt3dadd( -15.4562, -102.551, -2.08309, 1.11 ) }
    dend_36 { pt3dadd( -15.3623, -103.109, -2.15794, 1.18 ) }
    dend_36 { pt3dadd( -15.221, -103.953, -2.29001, 0.81 ) }
    dend_36 { pt3dadd( -15.034, -105.205, -2.51207, 0.44 ) }
    dend_36 { pt3dadd( -14.9348, -106.015, -2.70111, 0.29 ) }
    dend_36 { pt3dadd( -14.8618, -106.79, -2.88584, 0.29 ) }
    dend_36 { pt3dadd( -14.8248, -107.645, -3.08536, 0.59 ) }
    dend_36 { pt3dadd( -14.828, -107.972, -3.15506, 0.88 ) }
    dend_36 { pt3dadd( -14.8623, -108.491, -3.23925, 0.88 ) }
    dend_36 { pt3dadd( -14.9375, -109.158, -3.27883, 0.59 ) }
    dend_36 { pt3dadd( -15.0357, -110.103, -3.21066, 0.29 ) }
    dend_36 { pt3dadd( -15.0908, -110.658, -3.12304, 0.66 ) }
    dend_36 { pt3dadd( -15.151, -111.292, -2.96562, 0.81 ) }
    dend_36 { pt3dadd( -15.2111, -111.987, -2.77536, 1.03 ) }
    dend_36 { pt3dadd( -15.2698, -112.552, -2.61844, 1.18 ) }
    dend_36 { pt3dadd( -15.3637, -113.19, -2.43934, 1.18 ) }
    dend_36 { pt3dadd( -15.4351, -113.575, -2.34227, 1.25 ) }
    dend_36 { pt3dadd( -15.6253, -114.443, -2.16548, 0.96 ) }
    dend_36 { pt3dadd( -15.8307, -115.267, -2.04253, 0.59 ) }
    dend_36 { pt3dadd( -16.0853, -116.278, -1.9494, 0.37 ) }
    dend_36 { pt3dadd( -16.2938, -117.108, -1.92298, 0.22 ) }
    dend_36 { pt3dadd( -16.4096, -117.572, -1.93162, 0.29 ) }
    dend_36 { pt3dadd( -16.6279, -118.492, -1.98248, 0.44 ) }
    dend_36 { pt3dadd( -16.7639, -119.075, -2.03567, 1.03 ) }
    dend_36 { pt3dadd( -16.934, -119.888, -2.11695, 1.18 ) }
    dend_36 { pt3dadd( -17.0457, -120.492, -2.18797, 1.18 ) }
    dend_36 { pt3dadd( -17.2513, -121.63, -2.32896, 0.59 ) }
    dend_36 { pt3dadd( -17.4245, -122.488, -2.40326, 0.59 ) }
    dend_36 { pt3dadd( -17.601, -123.276, -2.45089, 0.59 ) }
    dend_36 { pt3dadd( -17.8905, -124.52, -2.54717, 0.81 ) }
    dend_36 { pt3dadd( -18.0336, -125.121, -2.60151, 0.88 ) }
    dend_36 { pt3dadd( -18.3531, -126.435, -2.72418, 0.52 ) }
    dend_36 { pt3dadd( -18.6821, -127.843, -2.86005, 0.52 ) }
    dend_36 { pt3dadd( -18.9624, -129.143, -2.96413, 0.59 ) }
    dend_36 { pt3dadd( -19.1627, -130.159, -3.05606, 0.29 ) }
    dend_36 { pt3dadd( -19.2725, -130.801, -3.13127, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -19.3683, -131.472, -3.22266, 0.88 ) }
    dend_36 { pt3dadd( -19.528, -132.775, -3.44166, 0.29 ) }
    dend_36 { pt3dadd( -19.6501, -133.739, -3.63026, 1.03 ) }
    dend_36 { pt3dadd( -19.7793, -134.63, -3.83061, 1.25 ) }
    dend_36 { pt3dadd( -19.918, -135.498, -4.06027, 1.03 ) }
    dend_36 { pt3dadd( -20.1315, -136.874, -4.51828, 0.44 ) }
    dend_36 { pt3dadd( -20.2771, -137.794, -4.90141, 0.44 ) }
    dend_36 { pt3dadd( -20.4674, -138.787, -5.38314, 0.44 ) }
    dend_36 { pt3dadd( -20.7607, -140.056, -6.0708, 0.44 ) }
    dend_36 { pt3dadd( -21.0725, -141.291, -6.74381, 0.66 ) }
    dend_36 { pt3dadd( -21.3537, -142.367, -7.36407, 1.55 ) }
    dend_36 { pt3dadd( -21.6001, -143.28, -7.91484, 1.92 ) }
    dend_36 { pt3dadd( -21.8979, -144.425, -8.56823, 0.66 ) }
    dend_36 { pt3dadd( -22.2505, -145.725, -9.23338, 0.59 ) }
    dend_36 { pt3dadd( -22.5242, -146.64, -9.6192, 0.29 ) }
    dend_36 { pt3dadd( -22.887, -147.744, -9.98423, 0.29 ) }
    dend_36 { pt3dadd( -23.2051, -148.675, -10.2149, 0.29 ) }
    dend_36 { pt3dadd( -23.7299, -150.222, -10.4869, 0.29 ) }
    dend_36 { pt3dadd( -24.0517, -151.193, -10.6047, 1.25 ) }
    dend_36 { pt3dadd( -24.3677, -152.217, -10.6823, 1.33 ) }
    dend_36 { pt3dadd( -24.782, -153.639, -10.7669, 0.52 ) }
    dend_36 { pt3dadd( -24.9416, -154.262, -10.792, 0.52 ) }
    dend_36 { pt3dadd( -25.1072, -155.124, -10.8373, 0.66 ) }
    dend_36 { pt3dadd( -25.2179, -155.972, -10.8893, 0.37 ) }
    dend_36 { pt3dadd( -25.2544, -156.726, -10.9391, 0.29 ) }
    dend_36 { pt3dadd( -25.2341, -157.384, -10.9812, 0.81 ) }
    dend_36 { pt3dadd( -25.1569, -158.117, -11.0234, 0.96 ) }
    dend_36 { pt3dadd( -25.0262, -159.003, -11.0643, 0.59 ) }
    dend_36 { pt3dadd( -24.8919, -159.739, -11.0673, 0.44 ) }
    dend_36 { pt3dadd( -24.8615, -159.889, -11.0627, 0.37 ) }
    dend_36 { pt3dadd( -24.6074, -161.219, -10.9916, 0.22 ) }
    dend_36 { pt3dadd( -24.4921, -161.803, -10.9492, 0.52 ) }
    dend_36 { pt3dadd( -24.4484, -162.025, -10.9297, 0.52 ) }
    dend_36 { pt3dadd( -24.0952, -163.797, -10.7388, 0.22 ) }
    dend_36 { pt3dadd( -24.0178, -164.165, -10.6915, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.09693, -18.3451, 0.179983, 1.62 ) }
    dend_25 { pt3dadd( -10.5805, -19.155, 0.72218, 1.62 ) }
    dend_25 { pt3dadd( -11.6794, -19.7549, 1.12378, 1.62 ) }
    dend_25 { pt3dadd( -12.5249, -20.2165, 1.43276, 1.84 ) }
    dend_25 { pt3dadd( -13.2983, -20.6387, 1.7154, 2.06 ) }
    dend_25 { pt3dadd( -14.0753, -21.0629, 1.9994, 2.36 ) }
    dend_25 { pt3dadd( -14.5875, -21.3425, 2.18656, 2.8 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.11298, 15.0995, 6.27346, 1.25 ) }
    dend_19 { pt3dadd( -7.72019, 17.5762, 6.34958, 1.25 ) }
    dend_19 { pt3dadd( -8.04223, 18.9897, 6.66232, 1.4 ) }
    dend_19 { pt3dadd( -8.2802, 20.0845, 7.01478, 1.4 ) }
    dend_19 { pt3dadd( -8.58817, 21.6232, 7.59129, 1.47 ) }
    dend_19 { pt3dadd( -8.70674, 22.2155, 7.81324, 1.69 ) }
    dend_19 { pt3dadd( -8.89202, 23.1412, 8.16007, 1.69 ) }
    dend_19 { pt3dadd( -9.18992, 24.8107, 9.1335, 1.62 ) }
    dend_19 { pt3dadd( -9.33217, 25.8013, 9.85179, 1.55 ) }
    dend_19 { pt3dadd( -9.45489, 26.7043, 10.5975, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.11298, 15.0995, 6.27346, 1.77 ) }
    dend_10 { pt3dadd( -8.3915, 15.9949, 8.14019, 1.77 ) }
    dend_10 { pt3dadd( -9.61704, 16.8532, 9.92957, 1.62 ) }
    dend_10 { pt3dadd( -10.3791, 17.3869, 11.0423, 1.55 ) }
    dend_10 { pt3dadd( -11.0935, 17.8873, 12.0854, 1.77 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.6789, 43.3258, 0.672309, 0.59 ) }
    dend_8 { pt3dadd( 14.2532, 45.3382, 0.145484, 0.59 ) }
    dend_8 { pt3dadd( 14.5239, 46.1331, -0.0397846, 0.59 ) }
    dend_8 { pt3dadd( 14.8703, 46.8992, -0.204294, 0.74 ) }
    dend_8 { pt3dadd( 15.2874, 47.6002, -0.342179, 0.74 ) }
    dend_8 { pt3dadd( 15.7793, 48.281, -0.48381, 0.88 ) }
    dend_8 { pt3dadd( 16.1945, 48.8138, -0.596506, 1.03 ) }
    dend_8 { pt3dadd( 16.9207, 49.6659, -0.735995, 0.59 ) }
    dend_8 { pt3dadd( 17.5594, 50.4374, -0.860274, 0.88 ) }
    dend_8 { pt3dadd( 18.1737, 51.2501, -1.01821, 0.88 ) }
    dend_8 { pt3dadd( 18.7202, 52.0749, -1.21814, 0.66 ) }
    dend_8 { pt3dadd( 19.1438, 52.9188, -1.49836, 0.52 ) }
    dend_8 { pt3dadd( 19.3088, 53.6324, -1.91381, 0.52 ) }
    dend_8 { pt3dadd( 19.3848, 54.5759, -2.69277, 0.52 ) }
    dend_8 { pt3dadd( 19.3273, 55.4918, -3.59529, 0.96 ) }
    dend_8 { pt3dadd( 19.2308, 55.9517, -4.10429, 1.18 ) }
    dend_8 { pt3dadd( 19.0701, 56.4253, -4.6718, 1.18 ) }
    dend_8 { pt3dadd( 18.389, 57.9466, -6.64112, 0.81 ) }
    dend_8 { pt3dadd( 18.0827, 58.6326, -7.51635, 0.59 ) }
    dend_8 { pt3dadd( 17.7591, 59.5116, -8.59791, 0.74 ) }
    dend_8 { pt3dadd( 17.603, 60.13, -9.26908, 0.66 ) }
    dend_8 { pt3dadd( 17.5422, 60.6924, -9.76806, 0.66 ) }
    dend_8 { pt3dadd( 17.6081, 61.4573, -10.3583, 0.66 ) }
    dend_8 { pt3dadd( 17.899, 62.6085, -11.095, 0.81 ) }
    dend_8 { pt3dadd( 18.3125, 63.709, -11.8013, 1.03 ) }
    dend_8 { pt3dadd( 18.689, 64.4519, -12.2845, 0.96 ) }
    dend_8 { pt3dadd( 19.1302, 65.25, -12.8057, 0.81 ) }
    dend_8 { pt3dadd( 19.9938, 66.8674, -13.83, 0.81 ) }
    dend_8 { pt3dadd( 20.2691, 67.4666, -14.163, 1.03 ) }
    dend_8 { pt3dadd( 20.5313, 68.2686, -14.5382, 1.03 ) }
    dend_8 { pt3dadd( 20.6717, 68.9673, -14.7894, 1.11 ) }
    dend_8 { pt3dadd( 20.761, 69.8676, -15.0548, 1.11 ) }
    dend_8 { pt3dadd( 20.7768, 70.8404, -15.2675, 0.81 ) }
    dend_8 { pt3dadd( 20.7275, 72.3737, -15.4731, 0.74 ) }
    dend_8 { pt3dadd( 20.6966, 73.4874, -15.6024, 0.88 ) }
    dend_8 { pt3dadd( 20.6947, 74.4507, -15.7109, 0.88 ) }
    dend_8 { pt3dadd( 20.7308, 75.1242, -15.7902, 0.52 ) }
    dend_8 { pt3dadd( 20.8691, 76.2187, -15.9208, 0.37 ) }
    dend_8 { pt3dadd( 20.9346, 76.529, -15.9628, 0.37 ) }
    dend_8 { pt3dadd( 21.1839, 77.4005, -16.1181, 0.37 ) }
    dend_8 { pt3dadd( 21.6477, 78.6599, -16.3673, 0.74 ) }
    dend_8 { pt3dadd( 21.9438, 79.4272, -16.516, 0.96 ) }
    dend_8 { pt3dadd( 22.1736, 80.0989, -16.6497, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 22.2786, 80.5149, -16.732, 1.18 ) }
    dend_8 { pt3dadd( 22.3873, 81.5724, -16.9132, 0.88 ) }
    dend_8 { pt3dadd( 22.3471, 82.5836, -17.0545, 0.29 ) }
    dend_8 { pt3dadd( 22.1491, 83.8632, -17.187, 0.88 ) }
    dend_8 { pt3dadd( 21.9062, 84.8185, -17.2727, 0.88 ) }
    dend_8 { pt3dadd( 21.5758, 85.8176, -17.3446, 0.88 ) }
    dend_8 { pt3dadd( 21.0767, 87.13, -17.4447, 0.59 ) }
    dend_8 { pt3dadd( 20.741, 87.9542, -17.5028, 0.59 ) }
    dend_8 { pt3dadd( 20.4501, 88.7297, -17.5648, 0.96 ) }
    dend_8 { pt3dadd( 20.128, 89.8725, -17.6673, 0.88 ) }
    dend_8 { pt3dadd( 19.9736, 90.8759, -17.8076, 0.52 ) }
    dend_8 { pt3dadd( 19.9459, 92.1705, -18.0564, 0.52 ) }
    dend_8 { pt3dadd( 20.0412, 93.1831, -18.3334, 0.52 ) }
    dend_8 { pt3dadd( 20.2474, 94.3158, -18.6994, 0.81 ) }
    dend_8 { pt3dadd( 20.478, 95.2185, -19.0098, 0.81 ) }
    dend_8 { pt3dadd( 20.9497, 96.6051, -19.5141, 0.81 ) }
    dend_8 { pt3dadd( 21.224, 97.3604, -19.7934, 0.59 ) }
    dend_8 { pt3dadd( 21.5937, 98.4683, -20.2032, 0.74 ) }
    dend_8 { pt3dadd( 21.7744, 99.1821, -20.4906, 0.88 ) }
    dend_8 { pt3dadd( 21.9226, 100.295, -20.9568, 0.37 ) }
    dend_8 { pt3dadd( 21.9764, 101.32, -21.3667, 0.37 ) }
    dend_8 { pt3dadd( 21.9975, 102.057, -21.6235, 0.37 ) }
    dend_8 { pt3dadd( 22.0393, 102.878, -21.923, 0.37 ) }
    dend_8 { pt3dadd( 22.1127, 103.459, -22.1545, 0.37 ) }
    dend_8 { pt3dadd( 22.2841, 104.202, -22.5052, 0.52 ) }
    dend_8 { pt3dadd( 22.4849, 104.772, -22.7914, 0.81 ) }
    dend_8 { pt3dadd( 22.7582, 105.411, -23.0794, 0.81 ) }
    dend_8 { pt3dadd( 23.0226, 105.96, -23.2976, 0.81 ) }
    dend_8 { pt3dadd( 23.3952, 106.764, -23.5785, 0.74 ) }
    dend_8 { pt3dadd( 23.6771, 107.466, -23.7836, 0.59 ) }
    dend_8 { pt3dadd( 23.9073, 108.225, -23.9769, 0.52 ) }
    dend_8 { pt3dadd( 24.0398, 108.893, -24.1375, 0.88 ) }
    dend_8 { pt3dadd( 24.1181, 109.69, -24.3235, 0.88 ) }
    dend_8 { pt3dadd( 24.1394, 110.69, -24.5549, 0.44 ) }
    dend_8 { pt3dadd( 24.1096, 111.572, -24.7854, 0.44 ) }
    dend_8 { pt3dadd( 24.0682, 112.341, -25.0339, 0.44 ) }
    dend_8 { pt3dadd( 24.0276, 113.25, -25.4117, 0.81 ) }
    dend_8 { pt3dadd( 24.0138, 114.11, -25.8246, 0.81 ) }
    dend_8 { pt3dadd( 24.0332, 114.958, -26.2655, 0.59 ) }
    dend_8 { pt3dadd( 24.097, 115.961, -26.8068, 0.59 ) }
    dend_8 { pt3dadd( 24.1582, 116.573, -27.1347, 0.88 ) }
    dend_8 { pt3dadd( 24.2729, 117.47, -27.6009, 0.88 ) }
    dend_8 { pt3dadd( 24.3842, 118.421, -28.0538, 0.88 ) }
    dend_8 { pt3dadd( 24.4203, 119.014, -28.2884, 0.96 ) }
    dend_8 { pt3dadd( 24.3986, 119.636, -28.4726, 0.96 ) }
    dend_8 { pt3dadd( 24.278, 120.404, -28.6127, 0.44 ) }
    dend_8 { pt3dadd( 24.063, 121.246, -28.7141, 0.44 ) }
    dend_8 { pt3dadd( 23.9012, 121.821, -28.7558, 0.44 ) }
    dend_8 { pt3dadd( 23.6086, 122.89, -28.8542, 0.81 ) }
    dend_8 { pt3dadd( 23.4161, 123.704, -28.9515, 0.81 ) }
    dend_8 { pt3dadd( 23.1695, 124.849, -29.1039, 1.11 ) }
    dend_8 { pt3dadd( 23.0613, 125.407, -29.1779, 1.11 ) }
    dend_8 { pt3dadd( 22.8637, 126.533, -29.3156, 0.37 ) }
    dend_8 { pt3dadd( 22.7474, 127.337, -29.4164, 0.37 ) }
    dend_8 { pt3dadd( 22.5703, 128.638, -29.5804, 0.52 ) }
    dend_8 { pt3dadd( 22.4585, 129.446, -29.6747, 0.52 ) }
    dend_8 { pt3dadd( 22.319, 130.607, -29.8471, 0.88 ) }
    dend_8 { pt3dadd( 22.2458, 131.345, -29.9934, 0.88 ) }
    dend_8 { pt3dadd( 22.1731, 132.4, -30.2463, 0.88 ) }
    dend_8 { pt3dadd( 22.1834, 132.99, -30.4142, 0.96 ) }
    dend_8 { pt3dadd( 22.3514, 134.06, -30.8407, 0.66 ) }
    dend_8 { pt3dadd( 22.7413, 135.488, -31.5703, 0.66 ) }
    dend_8 { pt3dadd( 23.0421, 136.375, -32.1225, 0.66 ) }
    dend_8 { pt3dadd( 23.2487, 136.982, -32.5492, 0.59 ) }
    dend_8 { pt3dadd( 23.4937, 137.767, -33.1588, 0.74 ) }
    dend_8 { pt3dadd( 23.7236, 138.641, -33.8687, 0.59 ) }
    dend_8 { pt3dadd( 23.8845, 139.365, -34.4607, 0.88 ) }
    dend_8 { pt3dadd( 24.0081, 140.12, -35.0399, 0.88 ) }
    dend_8 { pt3dadd( 24.1482, 140.876, -35.6305, 0.88 ) }
    dend_8 { pt3dadd( 24.2337, 141.234, -35.9139, 0.88 ) }
    dend_8 { pt3dadd( 24.5257, 142.149, -36.5668, 0.37 ) }
    dend_8 { pt3dadd( 24.8206, 142.821, -36.9679, 0.81 ) }
    dend_8 { pt3dadd( 25.0894, 143.267, -37.2038, 0.81 ) }
    dend_8 { pt3dadd( 25.8171, 144.3, -37.6412, 0.37 ) }
    dend_8 { pt3dadd( 26.2694, 144.922, -37.8449, 0.37 ) }
    dend_8 { pt3dadd( 26.7168, 145.576, -37.9954, 0.81 ) }
    dend_8 { pt3dadd( 27.0945, 146.231, -38.1015, 0.81 ) }
    dend_8 { pt3dadd( 27.3263, 146.775, -38.1691, 0.81 ) }
    dend_8 { pt3dadd( 27.5462, 147.505, -38.2777, 0.52 ) }
    dend_8 { pt3dadd( 27.6364, 148.023, -38.3782, 0.59 ) }
    dend_8 { pt3dadd( 27.7236, 148.778, -38.6007, 0.44 ) }
    dend_8 { pt3dadd( 27.8023, 149.579, -38.894, 0.59 ) }
    dend_8 { pt3dadd( 27.8753, 150.357, -39.2097, 0.66 ) }
    dend_8 { pt3dadd( 27.9797, 151.616, -39.7296, 0.44 ) }
    dend_8 { pt3dadd( 28.0644, 152.663, -40.1595, 1.33 ) }
    dend_8 { pt3dadd( 28.1162, 153.282, -40.397, 1.33 ) }
    dend_8 { pt3dadd( 28.1945, 154.374, -40.7692, 0.37 ) }
    dend_8 { pt3dadd( 28.2686, 155.28, -41.0186, 0.29 ) }
    dend_8 { pt3dadd( 28.3316, 156.103, -41.1967, 0.52 ) }
    dend_8 { pt3dadd( 28.3456, 156.54, -41.2525, 0.74 ) }
    dend_8 { pt3dadd( 28.2955, 157.397, -41.3235, 0.44 ) }
    dend_8 { pt3dadd( 28.1566, 158.092, -41.3559, 0.74 ) }
    dend_8 { pt3dadd( 27.9344, 158.641, -41.3802, 0.74 ) }
    dend_8 { pt3dadd( 27.5346, 159.345, -41.4226, 0.44 ) }
    dend_8 { pt3dadd( 27.0653, 160.036, -41.5299, 0.74 ) }
    dend_8 { pt3dadd( 26.6155, 160.618, -41.6779, 0.74 ) }
    dend_8 { pt3dadd( 26.283, 161.017, -41.8451, 0.88 ) }
    dend_8 { pt3dadd( 25.7629, 161.647, -42.1877, 0.59 ) }
    dend_8 { pt3dadd( 25.3923, 162.124, -42.4824, 0.44 ) }
    dend_8 { pt3dadd( 24.8998, 162.871, -42.9691, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 24.6311, 163.387, -43.2918, 0.59 ) }
    dend_8 { pt3dadd( 24.1484, 164.503, -43.9183, 1.25 ) }
    dend_8 { pt3dadd( 23.9992, 164.881, -44.1086, 1.4 ) }
    dend_8 { pt3dadd( 23.7268, 165.559, -44.4019, 0.88 ) }
    dend_8 { pt3dadd( 23.352, 166.337, -44.6825, 0.59 ) }
    dend_8 { pt3dadd( 22.9697, 167.007, -44.8721, 0.59 ) }
    dend_8 { pt3dadd( 22.4769, 167.739, -45.0412, 0.66 ) }
    dend_8 { pt3dadd( 21.9499, 168.334, -45.1375, 0.52 ) }
    dend_8 { pt3dadd( 21.3542, 168.906, -45.2325, 0.37 ) }
    dend_8 { pt3dadd( 20.7255, 169.464, -45.3281, 0.52 ) }
    dend_8 { pt3dadd( 20.4017, 169.74, -45.3779, 0.66 ) }
    dend_8 { pt3dadd( 20.0546, 170.057, -45.4501, 0.66 ) }
    dend_8 { pt3dadd( 19.5518, 170.794, -45.7043, 0.29 ) }
    dend_8 { pt3dadd( 19.3313, 171.536, -46.0848, 0.29 ) }
    dend_8 { pt3dadd( 19.2241, 172.212, -46.5531, 0.66 ) }
    dend_8 { pt3dadd( 19.154, 172.656, -46.9572, 0.66 ) }
    dend_8 { pt3dadd( 19.0119, 173.096, -47.4983, 0.52 ) }
    dend_8 { pt3dadd( 18.6666, 173.561, -48.3417, 0.66 ) }
    dend_8 { pt3dadd( 18.189, 173.842, -49.1498, 0.81 ) }
    dend_8 { pt3dadd( 17.7135, 173.979, -49.7349, 0.96 ) }
    dend_8 { pt3dadd( 17.1379, 174.089, -50.3078, 0.96 ) }
    dend_8 { pt3dadd( 16.3115, 174.235, -50.9928, 0.81 ) }
    dend_8 { pt3dadd( 15.4384, 174.403, -51.6006, 0.74 ) }
    dend_8 { pt3dadd( 14.6215, 174.647, -52.0746, 0.52 ) }
    dend_8 { pt3dadd( 13.9767, 174.952, -52.3842, 0.66 ) }
    dend_8 { pt3dadd( 13.5319, 175.253, -52.5553, 0.66 ) }
    dend_8 { pt3dadd( 12.7391, 175.944, -52.781, 0.37 ) }
    dend_8 { pt3dadd( 12.23, 176.479, -52.8948, 0.37 ) }
    dend_8 { pt3dadd( 11.2745, 177.628, -53.1086, 0.29 ) }
    dend_8 { pt3dadd( 10.8422, 178.211, -53.2367, 0.52 ) }
    dend_8 { pt3dadd( 10.5224, 178.693, -53.3711, 0.52 ) }
    dend_8 { pt3dadd( 10.1136, 179.358, -53.5916, 0.29 ) }
    dend_8 { pt3dadd( 9.78537, 179.898, -53.7903, 0.29 ) }
    dend_8 { pt3dadd( 9.25408, 180.756, -54.1655, 0.59 ) }
    dend_8 { pt3dadd( 8.77632, 181.48, -54.5767, 0.52 ) }
    dend_8 { pt3dadd( 8.38302, 182.127, -54.9905, 0.74 ) }
    dend_8 { pt3dadd( 8.22771, 182.419, -55.1936, 0.74 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.6789, 43.3258, 0.672309, 0.96 ) }
    dend_1 { pt3dadd( 14.0212, 45.1432, 1.2553, 0.96 ) }
    dend_1 { pt3dadd( 14.1992, 45.9724, 1.4707, 0.96 ) }
    dend_1 { pt3dadd( 14.3572, 46.6119, 1.57667, 0.81 ) }
    dend_1 { pt3dadd( 14.6761, 47.9272, 1.65696, 0.88 ) }
    dend_1 { pt3dadd( 14.8863, 48.8521, 1.62593, 0.88 ) }
    dend_1 { pt3dadd( 15.0527, 49.7465, 1.54565, 0.81 ) }
    dend_1 { pt3dadd( 15.1892, 50.8017, 1.32106, 0.96 ) }
    dend_1 { pt3dadd( 15.2838, 51.9063, 1.04481, 0.74 ) }
    dend_1 { pt3dadd( 15.3642, 53.0192, 0.731784, 0.88 ) }
    dend_1 { pt3dadd( 15.3792, 54.0185, 0.436739, 0.88 ) }
    dend_1 { pt3dadd( 15.3144, 55.202, 0.116047, 0.88 ) }
    dend_1 { pt3dadd( 15.1634, 56.2941, -0.138414, 1.03 ) }
    dend_1 { pt3dadd( 14.8967, 57.3553, -0.323298, 1.03 ) }
    dend_1 { pt3dadd( 14.5791, 58.2243, -0.401468, 0.88 ) }
    dend_1 { pt3dadd( 13.9896, 59.4163, -0.434158, 0.96 ) }
    dend_1 { pt3dadd( 13.5509, 60.1169, -0.434158, 1.11 ) }
    dend_1 { pt3dadd( 13.045, 60.8158, -0.434158, 1.11 ) }
    dend_1 { pt3dadd( 12.3459, 61.7228, -0.434158, 1.11 ) }
    dend_1 { pt3dadd( 11.6622, 62.5931, -0.434158, 1.11 ) }
    dend_1 { pt3dadd( 10.7522, 63.8015, -0.443484, 1.03 ) }
    dend_1 { pt3dadd( 10.0978, 64.7961, -0.468555, 1.03 ) }
    dend_1 { pt3dadd( 9.42832, 65.9823, -0.511026, 0.96 ) }
    dend_1 { pt3dadd( 8.88629, 67.2067, -0.610268, 1.03 ) }
    dend_1 { pt3dadd( 8.52767, 68.3275, -0.764543, 0.88 ) }
    dend_1 { pt3dadd( 8.35686, 69.1397, -0.911552, 0.88 ) }
    dend_1 { pt3dadd( 8.24624, 70.1665, -1.12523, 1.11 ) }
    dend_1 { pt3dadd( 8.21595, 70.7968, -1.27279, 1.11 ) }
    dend_1 { pt3dadd( 8.19423, 72.5573, -1.62264, 1.03 ) }
    dend_1 { pt3dadd( 8.18383, 73.9444, -1.83968, 0.88 ) }
    dend_1 { pt3dadd( 8.15194, 75.2185, -1.95753, 0.88 ) }
    dend_1 { pt3dadd( 8.06724, 76.5911, -1.96024, 0.88 ) }
    dend_1 { pt3dadd( 7.94005, 77.7569, -1.85126, 1.03 ) }
    dend_1 { pt3dadd( 7.67262, 79.5054, -1.53994, 0.88 ) }
    dend_1 { pt3dadd( 7.46344, 80.6314, -1.22761, 0.96 ) }
    dend_1 { pt3dadd( 7.27428, 81.6335, -0.900699, 1.03 ) }
    dend_1 { pt3dadd( 7.10605, 82.645, -0.593498, 1.33 ) }
    dend_1 { pt3dadd( 6.97871, 83.7334, -0.318209, 0.74 ) }
    dend_1 { pt3dadd( 6.9569, 84.3943, -0.230163, 0.74 ) }
    dend_1 { pt3dadd( 7.00615, 85.2453, -0.251923, 0.88 ) }
    dend_1 { pt3dadd( 7.1799, 86.321, -0.369266, 0.88 ) }
    dend_1 { pt3dadd( 7.49756, 87.6008, -0.594369, 0.81 ) }
    dend_1 { pt3dadd( 7.79868, 88.5476, -0.797215, 0.88 ) }
    dend_1 { pt3dadd( 8.25152, 89.7516, -1.09303, 0.74 ) }
    dend_1 { pt3dadd( 8.58194, 90.555, -1.29715, 0.74 ) }
    dend_1 { pt3dadd( 9.019, 91.6101, -1.56521, 0.81 ) }
    dend_1 { pt3dadd( 9.40473, 92.5531, -1.81069, 0.81 ) }
    dend_1 { pt3dadd( 9.67471, 93.2607, -1.97933, 0.81 ) }
    dend_1 { pt3dadd( 10.0005, 94.276, -2.23849, 0.81 ) }
    dend_1 { pt3dadd( 10.2069, 95.193, -2.47358, 0.96 ) }
    dend_1 { pt3dadd( 10.3203, 96.1337, -2.72107, 0.96 ) }
    dend_1 { pt3dadd( 10.3635, 97.1009, -2.96282, 1.03 ) }
    dend_1 { pt3dadd( 10.3801, 98.3014, -3.28763, 0.96 ) }
    dend_1 { pt3dadd( 10.4066, 99.4701, -3.61869, 0.96 ) }
    dend_1 { pt3dadd( 10.4484, 100.872, -4.00387, 0.96 ) }
    dend_1 { pt3dadd( 10.494, 102.056, -4.34958, 0.96 ) }
    dend_1 { pt3dadd( 10.5653, 103.317, -4.72668, 0.88 ) }
    dend_1 { pt3dadd( 10.6553, 104.892, -5.19256, 0.81 ) }
    dend_1 { pt3dadd( 10.6959, 105.872, -5.48416, 0.81 ) }
    dend_1 { pt3dadd( 10.7079, 106.873, -5.77195, 0.74 ) }
    dend_1 { pt3dadd( 10.624, 108.022, -6.09821, 1.03 ) }
    dend_1 { pt3dadd( 10.4632, 108.93, -6.33903, 1.03 ) }
    dend_1 { pt3dadd( 10.1198, 110.099, -6.59175, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 9.73864, 111.149, -6.74842, 1.11 ) }
    dend_1 { pt3dadd( 9.4646, 111.845, -6.83637, 1.11 ) }
    dend_1 { pt3dadd( 8.94309, 113.207, -6.9539, 0.96 ) }
    dend_1 { pt3dadd( 8.56417, 114.296, -7.00627, 0.96 ) }
    dend_1 { pt3dadd( 8.2138, 115.502, -7.03852, 0.96 ) }
    dend_1 { pt3dadd( 7.85351, 117.073, -7.05434, 0.88 ) }
    dend_1 { pt3dadd( 7.64609, 118.252, -7.05521, 1.18 ) }
    dend_1 { pt3dadd( 7.44018, 119.606, -7.04188, 0.96 ) }
    dend_1 { pt3dadd( 7.27245, 120.723, -7.02148, 0.88 ) }
    dend_1 { pt3dadd( 7.09574, 121.873, -6.98039, 0.88 ) }
    dend_1 { pt3dadd( 6.91421, 123.046, -6.91114, 0.88 ) }
    dend_1 { pt3dadd( 6.77132, 123.969, -6.84138, 0.96 ) }
    dend_1 { pt3dadd( 6.59023, 125.148, -6.7447, 0.96 ) }
    dend_1 { pt3dadd( 6.40736, 126.327, -6.66034, 0.96 ) }
    dend_1 { pt3dadd( 6.23268, 127.615, -6.59354, 1.03 ) }
    dend_1 { pt3dadd( 6.1249, 128.705, -6.55958, 0.96 ) }
    dend_1 { pt3dadd( 6.07417, 130.043, -6.5558, 0.88 ) }
    dend_1 { pt3dadd( 6.11699, 131.232, -6.58557, 0.81 ) }
    dend_1 { pt3dadd( 6.22955, 132.295, -6.64313, 0.96 ) }
    dend_1 { pt3dadd( 6.45194, 133.841, -6.76964, 0.81 ) }
    dend_1 { pt3dadd( 6.55338, 134.541, -6.83527, 0.81 ) }
    dend_1 { pt3dadd( 6.64864, 135.354, -6.896, 0.81 ) }
    dend_1 { pt3dadd( 6.70983, 136.56, -6.93704, 0.88 ) }
    dend_1 { pt3dadd( 6.67992, 137.421, -6.92712, 0.88 ) }
    dend_1 { pt3dadd( 6.54794, 138.247, -6.87454, 0.88 ) }
    dend_1 { pt3dadd( 6.30559, 139.046, -6.78546, 0.74 ) }
    dend_1 { pt3dadd( 5.84947, 140.161, -6.65162, 0.88 ) }
    dend_1 { pt3dadd( 5.19038, 141.529, -6.45814, 1.33 ) }
    dend_1 { pt3dadd( 4.82591, 142.252, -6.35466, 1.33 ) }
    dend_1 { pt3dadd( 4.38149, 143.213, -6.22957, 1.11 ) }
    dend_1 { pt3dadd( 4.05866, 144.045, -6.15627, 0.96 ) }
    dend_1 { pt3dadd( 3.83517, 144.792, -6.12856, 0.96 ) }
    dend_1 { pt3dadd( 3.56585, 146.055, -6.11887, 0.74 ) }
    dend_1 { pt3dadd( 3.44099, 146.991, -6.14503, 0.74 ) }
    dend_1 { pt3dadd( 3.36219, 147.973, -6.21039, 0.74 ) }
    dend_1 { pt3dadd( 3.31099, 149.019, -6.3153, 0.74 ) }
    dend_1 { pt3dadd( 3.26376, 150.256, -6.47841, 1.03 ) }
    dend_1 { pt3dadd( 3.22114, 151.2, -6.64415, 1.03 ) }
    dend_1 { pt3dadd( 3.16192, 152.143, -6.84221, 1.03 ) }
    dend_1 { pt3dadd( 3.0807, 152.969, -7.0255, 0.88 ) }
    dend_1 { pt3dadd( 2.94179, 154.081, -7.27854, 0.88 ) }
    dend_1 { pt3dadd( 2.8116, 155.072, -7.49918, 1.03 ) }
    dend_1 { pt3dadd( 2.69365, 156.169, -7.76964, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 1.70185, 56.0961, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 2.02065, 71.0928, 0.732838, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -14.5875, -21.3425, 2.18656, 0.96 ) }
    dend_31 { pt3dadd( -15.4862, -22.6775, 2.53825, 0.96 ) }
    dend_31 { pt3dadd( -16.2629, -23.7111, 2.79532, 0.96 ) }
    dend_31 { pt3dadd( -16.9028, -24.4933, 2.97344, 1.11 ) }
    dend_31 { pt3dadd( -17.3471, -25.0144, 3.02599, 1.25 ) }
    dend_31 { pt3dadd( -17.7332, -25.4637, 3.01922, 1.25 ) }
    dend_31 { pt3dadd( -18.4594, -26.3339, 2.94184, 1.03 ) }
    dend_31 { pt3dadd( -19.0546, -27.0079, 2.79666, 0.96 ) }
    dend_31 { pt3dadd( -19.6029, -27.6635, 2.55591, 1.18 ) }
    dend_31 { pt3dadd( -20.5591, -28.8424, 2.0199, 1.03 ) }
    dend_31 { pt3dadd( -21.1236, -29.5674, 1.64719, 1.03 ) }
    dend_31 { pt3dadd( -21.6502, -30.2851, 1.23376, 0.88 ) }
    dend_31 { pt3dadd( -22.0533, -30.8844, 0.834348, 1.11 ) }
    dend_31 { pt3dadd( -22.5123, -31.6361, 0.291364, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -14.5875, -21.3425, 2.18656, 1.92 ) }
    dend_26 { pt3dadd( -15.8575, -20.174, 2.18656, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.45489, 26.7043, 10.5975, 0.88 ) }
    dend_23 { pt3dadd( -9.88983, 27.5435, 9.74685, 0.88 ) }
    dend_23 { pt3dadd( -10.1862, 28.3142, 8.91128, 0.81 ) }
    dend_23 { pt3dadd( -10.3579, 28.8884, 8.32379, 0.81 ) }
    dend_23 { pt3dadd( -10.6091, 29.9744, 7.25902, 0.66 ) }
    dend_23 { pt3dadd( -10.7879, 30.751, 6.51543, 1.11 ) }
    dend_23 { pt3dadd( -10.966, 31.3729, 5.92172, 1.11 ) }
    dend_23 { pt3dadd( -11.432, 32.7519, 4.63317, 0.88 ) }
    dend_23 { pt3dadd( -11.7391, 33.4173, 4.02663, 1.03 ) }
    dend_23 { pt3dadd( -12.3872, 34.4113, 3.10486, 1.11 ) }
    dend_23 { pt3dadd( -13.0702, 35.1354, 2.49564, 0.88 ) }
    dend_23 { pt3dadd( -14.1494, 35.8349, 1.95049, 0.88 ) }
    dend_23 { pt3dadd( -15.2895, 36.2775, 1.68933, 0.81 ) }
    dend_23 { pt3dadd( -16.3326, 36.5288, 1.63414, 0.88 ) }
    dend_23 { pt3dadd( -17.3705, 36.6852, 1.6211, 1.11 ) }
    dend_23 { pt3dadd( -19.2721, 36.8929, 1.67094, 1.33 ) }
    dend_23 { pt3dadd( -20.2637, 37.0169, 1.65451, 0.96 ) }
    dend_23 { pt3dadd( -21.2494, 37.2078, 1.54942, 1.11 ) }
    dend_23 { pt3dadd( -21.7806, 37.3633, 1.39855, 0.88 ) }
    dend_23 { pt3dadd( -22.8229, 37.7931, 0.936847, 0.74 ) }
    dend_23 { pt3dadd( -23.6424, 38.2403, 0.450069, 1.03 ) }
    dend_23 { pt3dadd( -24.7598, 38.9859, -0.414472, 1.11 ) }
    dend_23 { pt3dadd( -25.3615, 39.5125, -0.966746, 1.11 ) }
    dend_23 { pt3dadd( -25.9349, 40.1578, -1.61093, 1.11 ) }
    dend_23 { pt3dadd( -26.2907, 40.7632, -2.19602, 1.25 ) }
    dend_23 { pt3dadd( -26.6211, 41.7366, -3.15717, 1.25 ) }
    dend_23 { pt3dadd( -26.7964, 42.7358, -4.24321, 0.88 ) }
    dend_23 { pt3dadd( -26.881, 43.5973, -5.23446, 0.81 ) }
    dend_23 { pt3dadd( -26.9501, 44.2627, -6.02046, 0.81 ) }
    dend_23 { pt3dadd( -27.1442, 45.7076, -7.7572, 1.03 ) }
    dend_23 { pt3dadd( -27.3723, 46.8479, -9.18186, 1.18 ) }
    dend_23 { pt3dadd( -27.6812, 47.7847, -10.3753, 1.33 ) }
    dend_23 { pt3dadd( -28.1289, 48.5698, -11.369, 1.18 ) }
    dend_23 { pt3dadd( -28.8234, 49.3301, -12.3127, 1.18 ) }
    dend_23 { pt3dadd( -29.3174, 49.7371, -12.7611, 1.18 ) }
    dend_23 { pt3dadd( -29.9866, 50.2082, -13.1625, 1.03 ) }
    dend_23 { pt3dadd( -30.5855, 50.6411, -13.4329, 0.96 ) }
    dend_23 { pt3dadd( -31.3465, 51.2059, -13.7059, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -32.1496, 51.8624, -14.1152, 1.11 ) }
    dend_23 { pt3dadd( -32.7118, 52.435, -14.5902, 1.11 ) }
    dend_23 { pt3dadd( -33.4178, 53.2913, -15.3329, 1.03 ) }
    dend_23 { pt3dadd( -34.0605, 54.1453, -16.0964, 1.47 ) }
    dend_23 { pt3dadd( -34.5564, 54.8173, -16.6894, 1.84 ) }
    dend_23 { pt3dadd( -36.2238, 56.9917, -18.5657, 1.33 ) }
    dend_23 { pt3dadd( -37.5551, 58.5856, -19.913, 0.88 ) }
    dend_23 { pt3dadd( -38.5211, 59.5933, -20.7456, 1.03 ) }
    dend_23 { pt3dadd( -39.2898, 60.2746, -21.279, 0.88 ) }
    dend_23 { pt3dadd( -40.3108, 61.0273, -21.76, 0.81 ) }
    dend_23 { pt3dadd( -41.5136, 61.7508, -22.0591, 0.88 ) }
    dend_23 { pt3dadd( -42.4217, 62.1871, -22.1447, 1.25 ) }
    dend_23 { pt3dadd( -43.3506, 62.582, -22.2342, 1.4 ) }
    dend_23 { pt3dadd( -43.9756, 62.8661, -22.35, 1.62 ) }
    dend_23 { pt3dadd( -44.7234, 63.2928, -22.5899, 1.33 ) }
    dend_23 { pt3dadd( -45.4635, 63.8513, -22.9701, 1.03 ) }
    dend_23 { pt3dadd( -47.0685, 65.4596, -24.1665, 0.88 ) }
    dend_23 { pt3dadd( -47.5982, 66.1743, -24.7007, 0.88 ) }
    dend_23 { pt3dadd( -48.0445, 67.0209, -25.3086, 0.81 ) }
    dend_23 { pt3dadd( -48.4926, 68.2988, -26.1706, 0.96 ) }
    dend_23 { pt3dadd( -48.6808, 69.3866, -26.8321, 0.96 ) }
    dend_23 { pt3dadd( -48.679, 70.2907, -27.2908, 1.11 ) }
    dend_23 { pt3dadd( -48.5299, 71.1501, -27.6058, 1.11 ) }
    dend_23 { pt3dadd( -48.326, 71.948, -27.826, 1.11 ) }
    dend_23 { pt3dadd( -48.1449, 72.5815, -27.9583, 1.18 ) }
    dend_23 { pt3dadd( -47.9579, 73.3264, -28.0536, 1.11 ) }
    dend_23 { pt3dadd( -47.7714, 74.3925, -28.1647, 0.88 ) }
    dend_23 { pt3dadd( -47.6989, 75.4627, -28.301, 0.81 ) }
    dend_23 { pt3dadd( -47.7824, 76.1461, -28.4445, 0.81 ) }
    dend_23 { pt3dadd( -48.1656, 76.9639, -28.7202, 0.81 ) }
    dend_23 { pt3dadd( -48.7906, 77.5537, -29.057, 0.96 ) }
    dend_23 { pt3dadd( -49.3421, 77.8375, -29.3192, 0.96 ) }
    dend_23 { pt3dadd( -50.338, 78.1606, -29.7329, 0.74 ) }
    dend_23 { pt3dadd( -50.9557, 78.3103, -29.9785, 0.74 ) }
    dend_23 { pt3dadd( -51.5762, 78.4545, -30.2206, 1.03 ) }
    dend_23 { pt3dadd( -52.2976, 78.6524, -30.5039, 1.25 ) }
    dend_23 { pt3dadd( -52.8075, 78.8542, -30.6983, 1.4 ) }
    dend_23 { pt3dadd( -53.7405, 79.3958, -31.0184, 1.18 ) }
    dend_23 { pt3dadd( -54.7293, 80.1691, -31.3353, 0.88 ) }
    dend_23 { pt3dadd( -55.4523, 80.8767, -31.5651, 0.81 ) }
    dend_23 { pt3dadd( -56.0025, 81.5354, -31.6971, 0.81 ) }
    dend_23 { pt3dadd( -56.8878, 82.7582, -31.8164, 0.81 ) }
    dend_23 { pt3dadd( -57.6724, 83.9433, -31.8565, 1.03 ) }
    dend_23 { pt3dadd( -58.0703, 84.5856, -31.8422, 1.25 ) }
    dend_23 { pt3dadd( -58.5071, 85.3216, -31.7843, 1.4 ) }
    dend_23 { pt3dadd( -59.2394, 86.5616, -31.6571, 1.03 ) }
    dend_23 { pt3dadd( -59.931, 87.71, -31.5336, 0.88 ) }
    dend_23 { pt3dadd( -60.3412, 88.3733, -31.4747, 1.11 ) }
    dend_23 { pt3dadd( -60.8851, 89.2559, -31.4185, 1.11 ) }
    dend_23 { pt3dadd( -61.5118, 90.2972, -31.3836, 0.96 ) }
    dend_23 { pt3dadd( -62.0163, 91.1504, -31.3884, 1.33 ) }
    dend_23 { pt3dadd( -62.4039, 91.8141, -31.4409, 1.33 ) }
    dend_23 { pt3dadd( -62.8619, 92.6226, -31.5443, 1.11 ) }
    dend_23 { pt3dadd( -63.4098, 93.565, -31.7204, 0.88 ) }
    dend_23 { pt3dadd( -63.9524, 94.4191, -31.9247, 0.88 ) }
    dend_23 { pt3dadd( -64.4269, 95.0806, -32.1045, 1.11 ) }
    dend_23 { pt3dadd( -64.9789, 95.7872, -32.2918, 1.11 ) }
    dend_23 { pt3dadd( -65.6379, 96.5864, -32.4895, 0.59 ) }
    dend_23 { pt3dadd( -66.2064, 97.2553, -32.6397, 0.52 ) }
    dend_23 { pt3dadd( -66.9351, 98.1026, -32.8026, 0.81 ) }
    dend_23 { pt3dadd( -67.9369, 99.2907, -32.9783, 0.96 ) }
    dend_23 { pt3dadd( -68.7024, 100.219, -33.0614, 1.25 ) }
    dend_23 { pt3dadd( -69.2221, 100.855, -33.082, 1.47 ) }
    dend_23 { pt3dadd( -69.7514, 101.501, -33.0785, 1.47 ) }
    dend_23 { pt3dadd( -70.4923, 102.427, -33.0602, 1.03 ) }
    dend_23 { pt3dadd( -70.9851, 103.07, -33.0511, 1.03 ) }
    dend_23 { pt3dadd( -71.94, 104.411, -33.041, 1.03 ) }
    dend_23 { pt3dadd( -72.6191, 105.5, -33.041, 0.96 ) }
    dend_23 { pt3dadd( -73.1936, 106.632, -33.041, 0.74 ) }
    dend_23 { pt3dadd( -73.6148, 107.855, -33.041, 0.74 ) }
    dend_23 { pt3dadd( -73.8012, 109.054, -33.0384, 1.03 ) }
    dend_23 { pt3dadd( -73.7845, 110.011, -33.0348, 1.03 ) }
    dend_23 { pt3dadd( -73.5171, 111.371, -33.0276, 0.81 ) }
    dend_23 { pt3dadd( -73.128, 112.592, -33.0202, 0.81 ) }
    dend_23 { pt3dadd( -72.4743, 114.198, -33.0096, 0.74 ) }
    dend_23 { pt3dadd( -71.9333, 115.363, -33.0016, 1.03 ) }
    dend_23 { pt3dadd( -71.5315, 116.177, -32.9895, 1.03 ) }
    dend_23 { pt3dadd( -70.911, 117.46, -32.9618, 0.96 ) }
    dend_23 { pt3dadd( -70.4656, 118.49, -32.9434, 1.4 ) }
    dend_23 { pt3dadd( -70.1124, 119.474, -32.9235, 1.25 ) }
    dend_23 { pt3dadd( -69.8173, 120.585, -32.9126, 0.81 ) }
    dend_23 { pt3dadd( -69.6704, 121.454, -32.9153, 0.59 ) }
    dend_23 { pt3dadd( -69.5692, 122.571, -32.9294, 0.59 ) }
    dend_23 { pt3dadd( -69.5554, 124.103, -32.9365, 0.74 ) }
    dend_23 { pt3dadd( -69.5955, 125.098, -32.9278, 0.81 ) }
    dend_23 { pt3dadd( -69.6888, 126.124, -32.8954, 0.81 ) }
    dend_23 { pt3dadd( -69.8386, 127.285, -32.8393, 0.66 ) }
    dend_23 { pt3dadd( -70.0504, 128.537, -32.7644, 0.88 ) }
    dend_23 { pt3dadd( -70.3563, 129.92, -32.6567, 0.96 ) }
    dend_23 { pt3dadd( -70.673, 131.054, -32.5465, 0.74 ) }
    dend_23 { pt3dadd( -71.0853, 132.229, -32.4258, 0.96 ) }
    dend_23 { pt3dadd( -71.5134, 133.231, -32.3066, 0.96 ) }
    dend_23 { pt3dadd( -72.0223, 134.211, -32.1857, 0.88 ) }
    dend_23 { pt3dadd( -72.7781, 135.42, -32.0496, 0.88 ) }
    dend_23 { pt3dadd( -73.3525, 136.249, -31.9762, 0.74 ) }
    dend_23 { pt3dadd( -73.9166, 137.035, -31.9156, 1.03 ) }
    dend_23 { pt3dadd( -74.2178, 137.472, -31.8872, 1.03 ) }
    dend_23 { pt3dadd( -74.8345, 138.443, -31.8139, 0.81 ) }
    dend_23 { pt3dadd( -75.7035, 140.024, -31.7299, 1.03 ) }
    dend_23 { pt3dadd( -76.117, 140.924, -31.7021, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( -76.4495, 141.808, -31.6942, 0.88 ) }
    dend_23 { pt3dadd( -76.8009, 142.956, -31.7028, 1.11 ) }
    dend_23 { pt3dadd( -77.0911, 144.071, -31.7279, 0.96 ) }
    dend_23 { pt3dadd( -77.3452, 145.267, -31.769, 0.81 ) }
    dend_23 { pt3dadd( -77.5322, 146.362, -31.8119, 0.81 ) }
    dend_23 { pt3dadd( -77.8002, 148.209, -31.8841, 0.88 ) }
    dend_23 { pt3dadd( -77.9692, 149.479, -31.9315, 1.11 ) }
    dend_23 { pt3dadd( -78.0825, 150.349, -31.9579, 1.11 ) }
    dend_23 { pt3dadd( -78.195, 151.142, -31.9742, 0.96 ) }
    dend_23 { pt3dadd( -78.3403, 152.006, -31.9724, 0.96 ) }
    dend_23 { pt3dadd( -78.5553, 153.063, -31.9685, 0.66 ) }
    dend_23 { pt3dadd( -78.8468, 154.242, -31.9624, 0.81 ) }
    dend_23 { pt3dadd( -79.3438, 155.91, -31.9523, 0.88 ) }
    dend_23 { pt3dadd( -79.9182, 157.576, -31.9413, 1.11 ) }
    dend_23 { pt3dadd( -80.2877, 158.508, -31.933, 1.03 ) }
    dend_23 { pt3dadd( -80.5642, 159.126, -31.9095, 1.03 ) }
    dend_23 { pt3dadd( -81.0734, 160.157, -31.8376, 0.96 ) }
    dend_23 { pt3dadd( -81.5136, 161.01, -31.7482, 0.96 ) }
    dend_23 { pt3dadd( -82.0965, 162.142, -31.5712, 1.18 ) }
    dend_23 { pt3dadd( -82.4852, 163.013, -31.4007, 1.03 ) }
    dend_23 { pt3dadd( -82.8776, 164.138, -31.1484, 0.96 ) }
    dend_23 { pt3dadd( -83.0499, 164.887, -30.9562, 0.59 ) }
    dend_23 { pt3dadd( -83.1381, 165.717, -30.7201, 0.59 ) }
    dend_23 { pt3dadd( -83.1283, 166.506, -30.4878, 0.81 ) }
    dend_23 { pt3dadd( -82.9698, 167.78, -30.1267, 1.11 ) }
    dend_23 { pt3dadd( -82.8385, 168.411, -29.946, 1.11 ) }
    dend_23 { pt3dadd( -82.5809, 169.338, -29.6914, 0.81 ) }
    dend_23 { pt3dadd( -82.3051, 170.204, -29.4479, 0.96 ) }
    dend_23 { pt3dadd( -81.953, 171.243, -29.1567, 0.81 ) }
    dend_23 { pt3dadd( -81.6433, 172.134, -28.9162, 0.96 ) }
    dend_23 { pt3dadd( -81.2904, 173.107, -28.6415, 0.96 ) }
    dend_23 { pt3dadd( -80.9816, 173.892, -28.4312, 1.03 ) }
    dend_23 { pt3dadd( -80.7669, 174.43, -28.2957, 1.03 ) }
    dend_23 { pt3dadd( -80.5275, 175.082, -28.1466, 0.96 ) }
    dend_23 { pt3dadd( -80.3213, 175.828, -28.0006, 0.96 ) }
    dend_23 { pt3dadd( -80.1411, 176.892, -27.8193, 0.74 ) }
    dend_23 { pt3dadd( -80.0796, 177.907, -27.686, 0.74 ) }
    dend_23 { pt3dadd( -80.1208, 178.864, -27.5818, 0.96 ) }
    dend_23 { pt3dadd( -80.2849, 180.089, -27.4768, 0.96 ) }
    dend_23 { pt3dadd( -80.5761, 181.378, -27.4, 1.11 ) }
    dend_23 { pt3dadd( -80.7492, 181.959, -27.3845, 1.11 ) }
    dend_23 { pt3dadd( -81.128, 183.08, -27.3933, 0.74 ) }
    dend_23 { pt3dadd( -81.4637, 184.044, -27.3974, 0.74 ) }
    dend_23 { pt3dadd( -81.9051, 185.397, -27.3862, 0.74 ) }
    dend_23 { pt3dadd( -82.3308, 186.854, -27.3533, 0.81 ) }
    dend_23 { pt3dadd( -82.6485, 188.114, -27.3117, 0.96 ) }
    dend_23 { pt3dadd( -82.9227, 189.389, -27.258, 1.03 ) }
    dend_23 { pt3dadd( -83.1901, 190.759, -27.1826, 1.11 ) }
    dend_23 { pt3dadd( -83.3782, 191.891, -27.0654, 0.88 ) }
    dend_23 { pt3dadd( -83.5383, 193.059, -26.9029, 0.88 ) }
    dend_23 { pt3dadd( -83.6515, 194.027, -26.7402, 0.81 ) }
    dend_23 { pt3dadd( -83.7271, 194.748, -26.6078, 0.81 ) }
    dend_23 { pt3dadd( -83.862, 195.998, -26.3861, 0.66 ) }
    dend_23 { pt3dadd( -84.0515, 197.652, -26.0933, 0.66 ) }
    dend_23 { pt3dadd( -84.1982, 198.802, -25.8731, 0.88 ) }
    dend_23 { pt3dadd( -84.3225, 199.675, -25.6969, 1.11 ) }
    dend_23 { pt3dadd( -84.5319, 200.957, -25.4364, 0.96 ) }
    dend_23 { pt3dadd( -84.7638, 202.148, -25.1883, 0.96 ) }
    dend_23 { pt3dadd( -84.9694, 203.044, -25.0015, 0.66 ) }
    dend_23 { pt3dadd( -85.3463, 204.362, -24.7353, 0.59 ) }
    dend_23 { pt3dadd( -85.7231, 205.528, -24.4678, 0.59 ) }
    dend_23 { pt3dadd( -86.1058, 206.68, -24.1983, 0.74 ) }
    dend_23 { pt3dadd( -86.4278, 207.679, -23.97, 0.74 ) }
    dend_23 { pt3dadd( -86.6348, 208.414, -23.8362, 0.81 ) }
    dend_23 { pt3dadd( -86.8029, 209.078, -23.7504, 0.81 ) }
    dend_23 { pt3dadd( -87.0707, 210.265, -23.6111, 0.59 ) }
    dend_23 { pt3dadd( -87.3824, 211.814, -23.3834, 0.74 ) }
    dend_23 { pt3dadd( -87.5516, 212.712, -23.217, 0.74 ) }
    dend_23 { pt3dadd( -87.8407, 214.327, -22.8712, 1.03 ) }
    dend_23 { pt3dadd( -87.9968, 215.266, -22.6296, 0.52 ) }
    dend_23 { pt3dadd( -88.1272, 216.147, -22.3629, 0.52 ) }
    dend_23 { pt3dadd( -88.2792, 217.358, -21.9316, 0.88 ) }
    dend_23 { pt3dadd( -88.409, 218.602, -21.4415, 0.59 ) }
    dend_23 { pt3dadd( -88.4812, 219.58, -21.0161, 0.44 ) }
    dend_23 { pt3dadd( -88.5131, 220.465, -20.6169, 0.74 ) }
    dend_23 { pt3dadd( -88.5272, 221.337, -20.2563, 0.74 ) }
    dend_23 { pt3dadd( -88.5692, 222.546, -19.8011, 0.66 ) }
    dend_23 { pt3dadd( -88.6315, 223.566, -19.4644, 0.59 ) }
    dend_23 { pt3dadd( -88.7704, 224.7, -19.0904, 0.59 ) }
    dend_23 { pt3dadd( -88.9421, 225.508, -18.7916, 0.59 ) }
    dend_23 { pt3dadd( -89.2839, 226.598, -18.3656, 0.59 ) }
    dend_23 { pt3dadd( -89.7633, 227.835, -17.8679, 0.81 ) }
    dend_23 { pt3dadd( -90.102, 228.641, -17.5473, 0.81 ) }
    dend_23 { pt3dadd( -90.6739, 229.995, -17.0115, 0.74 ) }
    dend_23 { pt3dadd( -91.2138, 231.361, -16.4417, 0.66 ) }
    dend_23 { pt3dadd( -91.4914, 232.14, -16.0778, 0.59 ) }
    dend_23 { pt3dadd( -91.8563, 233.313, -15.5114, 0.59 ) }
    dend_23 { pt3dadd( -92.1493, 234.383, -14.9926, 0.96 ) }
    dend_23 { pt3dadd( -92.3448, 235.128, -14.627, 0.96 ) }
    dend_23 { pt3dadd( -92.8346, 236.928, -13.791, 0.88 ) }
    dend_23 { pt3dadd( -93.1473, 237.936, -13.3389, 0.66 ) }
    dend_23 { pt3dadd( -93.4443, 238.749, -12.9747, 0.37 ) }
    dend_23 { pt3dadd( -93.6879, 239.341, -12.7291, 0.44 ) }
    dend_23 { pt3dadd( -94.015, 240.078, -12.4797, 0.44 ) }
    dend_23 { pt3dadd( -94.4288, 240.951, -12.2746, 0.44 ) }
    dend_23 { pt3dadd( -94.9872, 241.997, -12.1343, 0.44 ) }
    dend_23 { pt3dadd( -95.6568, 243.098, -12.0227, 0.44 ) }
    dend_23 { pt3dadd( -96.3768, 244.155, -11.9102, 0.44 ) }
    dend_23 { pt3dadd( -97.0619, 245.151, -11.8011, 0.52 ) }
    dend_23 { pt3dadd( -97.4595, 245.796, -11.7323, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -97.8662, 246.596, -11.6581, 0.52 ) }
    dend_23 { pt3dadd( -98.2639, 247.536, -11.6131, 0.59 ) }
    dend_23 { pt3dadd( -98.5072, 248.154, -11.5926, 0.59 ) }
    dend_23 { pt3dadd( -98.9704, 249.212, -11.5711, 0.59 ) }
    dend_23 { pt3dadd( -99.6251, 250.616, -11.5556, 0.44 ) }
    dend_23 { pt3dadd( -100.314, 251.978, -11.5516, 0.44 ) }
    dend_23 { pt3dadd( -101.254, 253.557, -11.5682, 0.44 ) }
    dend_23 { pt3dadd( -101.72, 254.144, -11.589, 0.44 ) }
    dend_23 { pt3dadd( -103.0, 254.822, -11.6804, 0.44 ) }
    dend_23 { pt3dadd( -104.029, 254.833, -11.7552, 0.37 ) }
    dend_23 { pt3dadd( -105.126, 254.578, -11.8277, 0.37 ) }
    dend_23 { pt3dadd( -106.193, 254.161, -11.8914, 1.25 ) }
    dend_23 { pt3dadd( -107.348, 253.599, -11.9562, 0.37 ) }
    dend_23 { pt3dadd( -108.084, 253.224, -11.9623, 0.37 ) }
    dend_23 { pt3dadd( -108.417, 253.059, -11.9375, 0.59 ) }
    dend_23 { pt3dadd( -109.075, 252.762, -11.823, 0.59 ) }
    dend_23 { pt3dadd( -109.633, 252.518, -11.6568, 0.29 ) }
    dend_23 { pt3dadd( -110.52, 252.141, -11.3303, 0.29 ) }
    dend_23 { pt3dadd( -111.532, 251.815, -10.8834, 0.66 ) }
    dend_23 { pt3dadd( -112.25, 251.616, -10.5092, 1.11 ) }
    dend_23 { pt3dadd( -112.854, 251.465, -10.1523, 1.33 ) }
    dend_23 { pt3dadd( -113.577, 251.303, -9.64335, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.45489, 26.7043, 10.5975, 0.81 ) }
    dend_20 { pt3dadd( -9.50609, 28.9914, 10.5121, 0.81 ) }
    dend_20 { pt3dadd( -9.58993, 30.7642, 10.3989, 0.96 ) }
    dend_20 { pt3dadd( -9.74259, 32.544, 10.2679, 0.88 ) }
    dend_20 { pt3dadd( -9.86529, 33.436, 10.2006, 0.88 ) }
    dend_20 { pt3dadd( -10.1199, 34.8031, 10.099, 1.03 ) }
    dend_20 { pt3dadd( -10.33, 35.6689, 10.0376, 1.03 ) }
    dend_20 { pt3dadd( -10.8903, 37.2472, 9.89794, 0.96 ) }
    dend_20 { pt3dadd( -11.5007, 38.5599, 9.79719, 0.96 ) }
    dend_20 { pt3dadd( -12.2592, 39.8344, 9.69268, 1.11 ) }
    dend_20 { pt3dadd( -12.9651, 40.7842, 9.60348, 1.18 ) }
    dend_20 { pt3dadd( -14.0569, 42.0046, 9.4812, 1.18 ) }
    dend_20 { pt3dadd( -14.8447, 42.7921, 9.40402, 1.4 ) }
    dend_20 { pt3dadd( -15.4106, 43.3293, 9.38132, 1.25 ) }
    dend_20 { pt3dadd( -16.3001, 44.1757, 9.38216, 0.88 ) }
    dend_20 { pt3dadd( -17.1708, 45.0558, 9.41239, 1.18 ) }
    dend_20 { pt3dadd( -17.6558, 45.606, 9.47583, 1.47 ) }
    dend_20 { pt3dadd( -18.2081, 46.3163, 9.60144, 1.33 ) }
    dend_20 { pt3dadd( -19.3128, 47.8512, 9.93398, 0.96 ) }
    dend_20 { pt3dadd( -19.8461, 48.6384, 10.125, 1.18 ) }
    dend_20 { pt3dadd( -20.3427, 49.3951, 10.3279, 1.18 ) }
    dend_20 { pt3dadd( -21.3256, 50.8205, 10.6969, 1.18 ) }
    dend_20 { pt3dadd( -21.6747, 51.2794, 10.8057, 1.33 ) }
    dend_20 { pt3dadd( -22.3205, 52.0253, 10.9534, 0.96 ) }
    dend_20 { pt3dadd( -22.8546, 52.5628, 11.0226, 0.81 ) }
    dend_20 { pt3dadd( -23.4526, 53.1105, 11.0836, 0.81 ) }
    dend_20 { pt3dadd( -24.3237, 53.843, 11.1377, 1.11 ) }
    dend_20 { pt3dadd( -24.8472, 54.2794, 11.1377, 1.11 ) }
    dend_20 { pt3dadd( -25.4104, 54.8149, 11.117, 0.88 ) }
    dend_20 { pt3dadd( -25.7384, 55.2206, 11.0904, 0.88 ) }
    dend_20 { pt3dadd( -26.0714, 55.8052, 11.0426, 0.88 ) }
    dend_20 { pt3dadd( -26.4954, 57.0128, 10.9142, 1.11 ) }
    dend_20 { pt3dadd( -26.607, 57.7398, 10.7816, 1.11 ) }
    dend_20 { pt3dadd( -26.6699, 58.9755, 10.512, 1.11 ) }
    dend_20 { pt3dadd( -26.6748, 60.2385, 10.1677, 1.03 ) }
    dend_20 { pt3dadd( -26.6604, 61.3691, 9.82473, 1.4 ) }
    dend_20 { pt3dadd( -26.6515, 62.3544, 9.46972, 1.62 ) }
    dend_20 { pt3dadd( -26.6686, 64.0649, 8.78597, 0.88 ) }
    dend_20 { pt3dadd( -26.7418, 65.1462, 8.33101, 0.88 ) }
    dend_20 { pt3dadd( -26.935, 66.4225, 7.84173, 0.88 ) }
    dend_20 { pt3dadd( -27.189, 67.4568, 7.5131, 1.03 ) }
    dend_20 { pt3dadd( -27.6152, 68.663, 7.23727, 0.81 ) }
    dend_20 { pt3dadd( -27.9719, 69.3531, 7.24261, 0.96 ) }
    dend_20 { pt3dadd( -28.4343, 69.9319, 7.46609, 0.81 ) }
    dend_20 { pt3dadd( -29.536, 70.8943, 8.25164, 1.25 ) }
    dend_20 { pt3dadd( -30.7231, 71.677, 9.25574, 1.25 ) }
    dend_20 { pt3dadd( -31.3099, 71.9881, 9.75228, 0.96 ) }
    dend_20 { pt3dadd( -32.441, 72.5221, 10.6872, 0.96 ) }
    dend_20 { pt3dadd( -33.3019, 72.905, 11.3201, 0.96 ) }
    dend_20 { pt3dadd( -33.9049, 73.1944, 11.6856, 0.96 ) }
    dend_20 { pt3dadd( -34.8135, 73.7264, 12.0757, 0.81 ) }
    dend_20 { pt3dadd( -35.51, 74.2695, 12.2865, 0.96 ) }
    dend_20 { pt3dadd( -36.4087, 75.1525, 12.5068, 0.96 ) }
    dend_20 { pt3dadd( -36.803, 75.5925, 12.5769, 1.11 ) }
    dend_20 { pt3dadd( -37.5607, 76.4947, 12.704, 1.11 ) }
    dend_20 { pt3dadd( -38.3324, 77.4859, 12.7892, 0.96 ) }
    dend_20 { pt3dadd( -39.1488, 78.6153, 12.8413, 0.81 ) }
    dend_20 { pt3dadd( -40.0562, 79.984, 12.8568, 1.03 ) }
    dend_20 { pt3dadd( -40.7206, 81.0816, 12.8892, 1.18 ) }
    dend_20 { pt3dadd( -41.4545, 82.3862, 12.9687, 1.18 ) }
    dend_20 { pt3dadd( -42.2315, 83.9776, 13.1163, 1.03 ) }
    dend_20 { pt3dadd( -42.6084, 84.9139, 13.2505, 1.11 ) }
    dend_20 { pt3dadd( -42.8817, 85.8844, 13.4736, 1.11 ) }
    dend_20 { pt3dadd( -43.1379, 87.516, 14.0339, 0.96 ) }
    dend_20 { pt3dadd( -43.1988, 88.2419, 14.3588, 0.96 ) }
    dend_20 { pt3dadd( -43.2622, 89.2186, 14.8937, 0.74 ) }
    dend_20 { pt3dadd( -43.37, 90.0791, 15.447, 0.74 ) }
    dend_20 { pt3dadd( -43.7227, 91.3785, 16.3184, 0.96 ) }
    dend_20 { pt3dadd( -44.1241, 92.1598, 16.8235, 0.88 ) }
    dend_20 { pt3dadd( -44.7445, 92.7977, 17.1275, 0.74 ) }
    dend_20 { pt3dadd( -45.547, 93.271, 17.2501, 0.74 ) }
    dend_20 { pt3dadd( -46.4301, 93.6522, 17.225, 0.81 ) }
    dend_20 { pt3dadd( -47.5947, 94.1043, 17.0613, 0.88 ) }
    dend_20 { pt3dadd( -48.3105, 94.3793, 16.9135, 0.88 ) }
    dend_20 { pt3dadd( -48.9925, 94.6639, 16.7499, 1.03 ) }
    dend_20 { pt3dadd( -49.959, 95.0992, 16.52, 1.03 ) }
    dend_20 { pt3dadd( -51.3216, 95.7198, 16.2984, 0.96 ) }
    dend_20 { pt3dadd( -52.1977, 96.1029, 16.2261, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( -53.2672, 96.5313, 16.2293, 0.81 ) }
    dend_20 { pt3dadd( -54.0114, 96.8011, 16.2723, 0.81 ) }
    dend_20 { pt3dadd( -55.0029, 97.1282, 16.3714, 0.81 ) }
    dend_20 { pt3dadd( -56.4616, 97.5667, 16.5707, 0.88 ) }
    dend_20 { pt3dadd( -57.29, 97.8038, 16.6803, 0.88 ) }
    dend_20 { pt3dadd( -58.4283, 98.1671, 16.8177, 0.88 ) }
    dend_20 { pt3dadd( -59.3377, 98.5358, 16.9281, 0.96 ) }
    dend_20 { pt3dadd( -60.0708, 98.9332, 17.0377, 0.96 ) }
    dend_20 { pt3dadd( -60.7992, 99.4331, 17.1656, 0.81 ) }
    dend_20 { pt3dadd( -61.4202, 99.9371, 17.2832, 0.96 ) }
    dend_20 { pt3dadd( -62.0613, 100.512, 17.4532, 0.96 ) }
    dend_20 { pt3dadd( -62.7846, 101.216, 17.7512, 0.88 ) }
    dend_20 { pt3dadd( -63.4801, 101.907, 18.1551, 0.88 ) }
    dend_20 { pt3dadd( -63.9798, 102.433, 18.5271, 0.96 ) }
    dend_20 { pt3dadd( -64.4592, 102.981, 18.9908, 0.96 ) }
    dend_20 { pt3dadd( -65.0975, 103.824, 19.7585, 0.81 ) }
    dend_20 { pt3dadd( -65.6889, 104.68, 20.569, 0.81 ) }
    dend_20 { pt3dadd( -66.1647, 105.41, 21.1904, 0.88 ) }
    dend_20 { pt3dadd( -66.5631, 106.074, 21.6577, 0.81 ) }
    dend_20 { pt3dadd( -67.0475, 106.983, 22.1616, 0.81 ) }
    dend_20 { pt3dadd( -67.5669, 108.049, 22.5497, 0.96 ) }
    dend_20 { pt3dadd( -67.9559, 108.855, 22.7019, 0.81 ) }
    dend_20 { pt3dadd( -68.6712, 110.267, 22.8003, 0.74 ) }
    dend_20 { pt3dadd( -69.1717, 111.205, 22.7734, 0.74 ) }
    dend_20 { pt3dadd( -69.776, 112.247, 22.6512, 0.74 ) }
    dend_20 { pt3dadd( -70.4393, 113.373, 22.3899, 0.88 ) }
    dend_20 { pt3dadd( -70.7612, 113.94, 22.2148, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.0935, 17.8873, 12.0854, 0.74 ) }
    dend_18 { pt3dadd( -12.5638, 16.733, 13.6731, 0.74 ) }
    dend_18 { pt3dadd( -12.976, 16.3456, 14.152, 0.88 ) }
    dend_18 { pt3dadd( -13.7988, 15.5408, 15.0431, 0.81 ) }
    dend_18 { pt3dadd( -14.783, 14.3394, 16.2863, 0.52 ) }
    dend_18 { pt3dadd( -15.1913, 13.8715, 16.6964, 0.44 ) }
    dend_18 { pt3dadd( -15.788, 13.251, 17.1571, 0.44 ) }
    dend_18 { pt3dadd( -16.2703, 12.7816, 17.2715, 0.29 ) }
    dend_18 { pt3dadd( -16.8009, 12.4529, 17.216, 0.29 ) }
    dend_18 { pt3dadd( -18.4197, 12.0239, 16.5557, 1.4 ) }
    dend_18 { pt3dadd( -20.5237, 11.6267, 15.4645, 0.29 ) }
    dend_18 { pt3dadd( -21.1967, 11.5324, 15.0968, 0.29 ) }
    dend_18 { pt3dadd( -22.2664, 11.4493, 14.453, 0.37 ) }
    dend_18 { pt3dadd( -22.9383, 11.4556, 14.0146, 0.44 ) }
    dend_18 { pt3dadd( -23.6931, 11.5276, 13.4809, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.0935, 17.8873, 12.0854, 2.28 ) }
    dend_11 { pt3dadd( -12.1, 20.5584, 12.6889, 2.28 ) }
    dend_11 { pt3dadd( -12.7848, 22.3759, 13.0995, 1.4 ) }
    dend_11 { pt3dadd( -13.2296, 23.5564, 13.3663, 1.4 ) }
    dend_11 { pt3dadd( -13.9025, 25.3423, 13.7698, 1.4 ) }
    dend_11 { pt3dadd( -14.3381, 26.4984, 14.0309, 1.4 ) }
    dend_11 { pt3dadd( -14.7863, 27.688, 14.2997, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.69365, 156.169, -7.76964, 0.59 ) }
    dend_5 { pt3dadd( 3.0259, 158.025, -8.63428, 0.59 ) }
    dend_5 { pt3dadd( 3.1463, 159.026, -9.03411, 0.59 ) }
    dend_5 { pt3dadd( 3.25234, 160.405, -9.47203, 0.59 ) }
    dend_5 { pt3dadd( 3.28216, 160.939, -9.6115, 0.59 ) }
    dend_5 { pt3dadd( 3.33461, 161.922, -9.87815, 0.81 ) }
    dend_5 { pt3dadd( 3.3777, 162.784, -10.1043, 0.88 ) }
    dend_5 { pt3dadd( 3.40329, 163.646, -10.2659, 0.88 ) }
    dend_5 { pt3dadd( 3.39482, 164.968, -10.5014, 0.66 ) }
    dend_5 { pt3dadd( 3.3562, 165.872, -10.6283, 0.88 ) }
    dend_5 { pt3dadd( 3.26474, 167.08, -10.7598, 0.96 ) }
    dend_5 { pt3dadd( 3.15509, 168.045, -10.847, 0.81 ) }
    dend_5 { pt3dadd( 3.04828, 168.644, -10.8873, 0.81 ) }
    dend_5 { pt3dadd( 2.75993, 169.665, -10.9352, 0.66 ) }
    dend_5 { pt3dadd( 2.38117, 170.525, -10.9506, 0.74 ) }
    dend_5 { pt3dadd( 1.74197, 171.527, -10.892, 0.44 ) }
    dend_5 { pt3dadd( 1.18089, 172.172, -10.7921, 0.44 ) }
    dend_5 { pt3dadd( 0.80454, 172.525, -10.7295, 0.81 ) }
    dend_5 { pt3dadd( 0.374811, 172.903, -10.6616, 0.96 ) }
    dend_5 { pt3dadd( -0.0579168, 173.297, -10.5975, 0.74 ) }
    dend_5 { pt3dadd( -0.614602, 173.895, -10.5031, 0.74 ) }
    dend_5 { pt3dadd( -1.11655, 174.571, -10.4982, 0.88 ) }
    dend_5 { pt3dadd( -1.6844, 175.542, -10.5937, 1.03 ) }
    dend_5 { pt3dadd( -2.10265, 176.409, -10.7877, 0.88 ) }
    dend_5 { pt3dadd( -2.49404, 177.342, -11.0615, 0.74 ) }
    dend_5 { pt3dadd( -2.8394, 178.268, -11.3686, 0.88 ) }
    dend_5 { pt3dadd( -3.53242, 180.336, -12.1014, 0.66 ) }
    dend_5 { pt3dadd( -3.95098, 181.711, -12.5836, 1.03 ) }
    dend_5 { pt3dadd( -4.34249, 183.131, -13.0624, 0.88 ) }
    dend_5 { pt3dadd( -4.67901, 184.516, -13.4426, 1.03 ) }
    dend_5 { pt3dadd( -4.88656, 185.483, -13.6417, 1.03 ) }
    dend_5 { pt3dadd( -5.08999, 186.6, -13.7773, 0.88 ) }
    dend_5 { pt3dadd( -5.26511, 187.664, -13.783, 0.81 ) }
    dend_5 { pt3dadd( -5.43607, 188.657, -13.7586, 0.81 ) }
    dend_5 { pt3dadd( -5.75879, 190.2, -13.6954, 0.66 ) }
    dend_5 { pt3dadd( -5.96805, 191.002, -13.6871, 0.66 ) }
    dend_5 { pt3dadd( -6.33347, 192.093, -13.7372, 1.03 ) }
    dend_5 { pt3dadd( -6.61656, 192.784, -13.8077, 0.81 ) }
    dend_5 { pt3dadd( -7.05889, 193.763, -13.977, 0.59 ) }
    dend_5 { pt3dadd( -7.55795, 194.813, -14.2553, 0.59 ) }
    dend_5 { pt3dadd( -7.86315, 195.446, -14.5079, 0.59 ) }
    dend_5 { pt3dadd( -8.23014, 196.173, -14.8917, 0.59 ) }
    dend_5 { pt3dadd( -8.59057, 196.843, -15.311, 0.59 ) }
    dend_5 { pt3dadd( -9.21215, 197.938, -16.0423, 0.59 ) }
    dend_5 { pt3dadd( -9.86084, 199.031, -16.7481, 1.18 ) }
    dend_5 { pt3dadd( -10.4201, 199.914, -17.3014, 1.33 ) }
    dend_5 { pt3dadd( -11.2314, 201.121, -18.0419, 0.74 ) }
    dend_5 { pt3dadd( -11.6981, 201.796, -18.417, 0.74 ) }
    dend_5 { pt3dadd( -12.1936, 202.524, -18.8033, 0.74 ) }
    dend_5 { pt3dadd( -12.924, 203.697, -19.3987, 0.88 ) }
    dend_5 { pt3dadd( -13.2875, 204.436, -19.7133, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( -13.4964, 204.984, -19.9119, 1.03 ) }
    dend_5 { pt3dadd( -13.8115, 206.022, -20.2612, 0.74 ) }
    dend_5 { pt3dadd( -14.0581, 206.884, -20.5342, 0.74 ) }
    dend_5 { pt3dadd( -14.4604, 208.137, -20.8979, 0.59 ) }
    dend_5 { pt3dadd( -14.8868, 209.163, -21.143, 0.74 ) }
    dend_5 { pt3dadd( -15.4496, 210.201, -21.2863, 0.74 ) }
    dend_5 { pt3dadd( -15.8377, 210.828, -21.3894, 0.74 ) }
    dend_5 { pt3dadd( -16.5783, 211.909, -21.6212, 0.88 ) }
    dend_5 { pt3dadd( -17.1032, 212.613, -21.7793, 1.03 ) }
    dend_5 { pt3dadd( -17.7338, 213.372, -21.9665, 0.74 ) }
    dend_5 { pt3dadd( -18.4796, 214.183, -22.285, 0.59 ) }
    dend_5 { pt3dadd( -19.7824, 215.522, -22.9731, 0.59 ) }
    dend_5 { pt3dadd( -20.5033, 216.245, -23.4908, 0.74 ) }
    dend_5 { pt3dadd( -20.9336, 216.671, -23.8422, 0.96 ) }
    dend_5 { pt3dadd( -21.4863, 217.183, -24.3184, 0.88 ) }
    dend_5 { pt3dadd( -22.1876, 217.726, -24.8824, 0.74 ) }
    dend_5 { pt3dadd( -23.2634, 218.495, -25.7409, 1.55 ) }
    dend_5 { pt3dadd( -24.2183, 219.188, -26.4775, 1.99 ) }
    dend_5 { pt3dadd( -25.1021, 219.948, -27.2643, 0.74 ) }
    dend_5 { pt3dadd( -25.6876, 220.667, -27.9256, 0.59 ) }
    dend_5 { pt3dadd( -26.1811, 221.667, -28.6884, 0.88 ) }
    dend_5 { pt3dadd( -26.513, 222.832, -29.3885, 0.81 ) }
    dend_5 { pt3dadd( -26.6342, 223.645, -29.8207, 0.81 ) }
    dend_5 { pt3dadd( -26.6791, 224.637, -30.4364, 0.74 ) }
    dend_5 { pt3dadd( -26.6746, 225.694, -31.1823, 0.74 ) }
    dend_5 { pt3dadd( -26.7026, 226.549, -31.8685, 0.66 ) }
    dend_5 { pt3dadd( -26.7461, 227.227, -32.465, 0.66 ) }
    dend_5 { pt3dadd( -26.9166, 228.442, -33.5598, 1.47 ) }
    dend_5 { pt3dadd( -27.3387, 230.706, -35.65, 1.18 ) }
    dend_5 { pt3dadd( -27.5183, 231.521, -36.3973, 1.03 ) }
    dend_5 { pt3dadd( -27.8983, 233.303, -37.9928, 1.03 ) }
    dend_5 { pt3dadd( -28.081, 234.297, -38.7815, 0.74 ) }
    dend_5 { pt3dadd( -28.2441, 235.463, -39.5363, 1.03 ) }
    dend_5 { pt3dadd( -28.2878, 235.899, -39.7303, 1.25 ) }
    dend_5 { pt3dadd( -28.4056, 237.26, -40.1278, 0.66 ) }
    dend_5 { pt3dadd( -28.4812, 238.371, -40.4106, 0.66 ) }
    dend_5 { pt3dadd( -28.5881, 239.711, -40.6687, 0.81 ) }
    dend_5 { pt3dadd( -28.7321, 240.676, -40.8856, 0.66 ) }
    dend_5 { pt3dadd( -28.9378, 241.571, -41.1301, 0.66 ) }
    dend_5 { pt3dadd( -29.4543, 243.198, -41.6117, 0.66 ) }
    dend_5 { pt3dadd( -29.8084, 244.085, -41.8893, 0.52 ) }
    dend_5 { pt3dadd( -30.1676, 244.879, -42.1484, 0.66 ) }
    dend_5 { pt3dadd( -30.4233, 245.448, -42.3438, 0.81 ) }
    dend_5 { pt3dadd( -30.8591, 246.48, -42.5784, 0.52 ) }
    dend_5 { pt3dadd( -31.1851, 247.343, -42.6318, 0.52 ) }
    dend_5 { pt3dadd( -31.5181, 248.378, -42.5743, 0.88 ) }
    dend_5 { pt3dadd( -31.7316, 249.174, -42.5019, 0.88 ) }
    dend_5 { pt3dadd( -31.9372, 250.126, -42.4161, 0.59 ) }
    dend_5 { pt3dadd( -32.1538, 251.646, -42.3193, 0.74 ) }
    dend_5 { pt3dadd( -32.2002, 252.842, -42.5164, 0.44 ) }
    dend_5 { pt3dadd( -32.1537, 253.766, -42.9941, 0.44 ) }
    dend_5 { pt3dadd( -32.1027, 254.456, -43.508, 0.44 ) }
    dend_5 { pt3dadd( -32.0205, 255.38, -44.3035, 0.44 ) }
    dend_5 { pt3dadd( -31.9118, 256.327, -45.2216, 1.11 ) }
    dend_5 { pt3dadd( -31.6417, 258.819, -47.7543, 0.88 ) }
    dend_5 { pt3dadd( -31.5076, 260.064, -48.9712, 0.44 ) }
    dend_5 { pt3dadd( -31.4443, 260.898, -49.703, 0.66 ) }
    dend_5 { pt3dadd( -31.4321, 261.547, -50.1801, 0.44 ) }
    dend_5 { pt3dadd( -31.4801, 262.676, -50.776, 0.44 ) }
    dend_5 { pt3dadd( -31.5537, 263.809, -51.1245, 0.44 ) }
    dend_5 { pt3dadd( -31.6465, 265.276, -51.2769, 0.59 ) }
    dend_5 { pt3dadd( -31.749, 266.667, -51.3242, 0.59 ) }
    dend_5 { pt3dadd( -31.8993, 267.983, -51.3419, 0.52 ) }
    dend_5 { pt3dadd( -32.1163, 269.146, -51.3259, 0.37 ) }
    dend_5 { pt3dadd( -32.4601, 270.34, -51.2679, 0.37 ) }
    dend_5 { pt3dadd( -32.7799, 271.129, -51.2415, 0.37 ) }
    dend_5 { pt3dadd( -33.3119, 271.979, -51.2351, 0.37 ) }
    dend_5 { pt3dadd( -33.9426, 272.737, -51.2488, 0.37 ) }
    dend_5 { pt3dadd( -34.5067, 273.302, -51.2846, 0.74 ) }
    dend_5 { pt3dadd( -35.4113, 274.049, -51.3557, 0.66 ) }
    dend_5 { pt3dadd( -36.1992, 274.605, -51.425, 0.66 ) }
    dend_5 { pt3dadd( -37.3847, 275.361, -51.5402, 0.44 ) }
    dend_5 { pt3dadd( -38.2073, 275.84, -51.626, 0.37 ) }
    dend_5 { pt3dadd( -38.6838, 276.115, -51.6765, 0.37 ) }
    dend_5 { pt3dadd( -39.5552, 276.583, -51.7816, 0.29 ) }
    dend_5 { pt3dadd( -40.0379, 276.771, -51.8429, 0.29 ) }
    dend_5 { pt3dadd( -40.7081, 276.846, -51.9293, 1.03 ) }
    dend_5 { pt3dadd( -41.3438, 276.678, -52.0335, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 78/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.69365, 156.169, -7.76964, 0.59 ) }
    dend_2 { pt3dadd( 3.21269, 157.615, -7.30457, 0.59 ) }
    dend_2 { pt3dadd( 3.47686, 158.634, -7.05883, 0.81 ) }
    dend_2 { pt3dadd( 3.67409, 160.06, -6.82399, 0.88 ) }
    dend_2 { pt3dadd( 3.73185, 161.083, -6.70664, 0.59 ) }
    dend_2 { pt3dadd( 3.73274, 161.843, -6.67004, 0.59 ) }
    dend_2 { pt3dadd( 3.7229, 162.93, -6.65949, 0.96 ) }
    dend_2 { pt3dadd( 3.67823, 163.53, -6.68344, 1.11 ) }
    dend_2 { pt3dadd( 3.557, 164.804, -6.786, 0.66 ) }
    dend_2 { pt3dadd( 3.46951, 165.725, -6.91295, 0.66 ) }
    dend_2 { pt3dadd( 3.35603, 167.157, -7.02395, 0.66 ) }
    dend_2 { pt3dadd( 3.31497, 168.26, -7.04723, 0.59 ) }
    dend_2 { pt3dadd( 3.32508, 169.155, -7.00044, 0.59 ) }
    dend_2 { pt3dadd( 3.39912, 170.438, -6.8642, 0.59 ) }
    dend_2 { pt3dadd( 3.50856, 171.538, -6.70567, 0.59 ) }
    dend_2 { pt3dadd( 3.75232, 173.528, -6.35723, 0.66 ) }
    dend_2 { pt3dadd( 3.87815, 174.477, -6.16246, 0.66 ) }
    dend_2 { pt3dadd( 4.0178, 175.68, -5.91481, 0.52 ) }
    dend_2 { pt3dadd( 4.12938, 176.694, -5.7164, 0.52 ) }
    dend_2 { pt3dadd( 4.21791, 177.737, -5.52762, 0.52 ) }
    dend_2 { pt3dadd( 4.26779, 178.527, -5.41105, 0.74 ) }
    dend_2 { pt3dadd( 4.29819, 179.235, -5.36981, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 4.34271, 180.076, -5.33576, 0.88 ) }
    dend_2 { pt3dadd( 4.40773, 180.657, -5.32569, 0.88 ) }
    dend_2 { pt3dadd( 4.74367, 182.089, -5.31499, 0.59 ) }
    dend_2 { pt3dadd( 5.02383, 182.738, -5.33935, 0.81 ) }
    dend_2 { pt3dadd( 5.53489, 183.512, -5.40267, 0.59 ) }
    dend_2 { pt3dadd( 6.25737, 184.362, -5.4999, 0.74 ) }
    dend_2 { pt3dadd( 7.00924, 185.129, -5.62672, 0.74 ) }
    dend_2 { pt3dadd( 7.79641, 185.867, -5.79845, 0.74 ) }
    dend_2 { pt3dadd( 8.68187, 186.675, -6.02193, 0.59 ) }
    dend_2 { pt3dadd( 9.48941, 187.407, -6.23208, 0.59 ) }
    dend_2 { pt3dadd( 10.3371, 188.196, -6.4602, 0.81 ) }
    dend_2 { pt3dadd( 11.0938, 188.955, -6.69599, 0.81 ) }
    dend_2 { pt3dadd( 12.0886, 190.076, -7.05505, 0.59 ) }
    dend_2 { pt3dadd( 12.6568, 190.802, -7.28522, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.5123, -31.6361, 0.291364, 0.74 ) }
    dend_35 { pt3dadd( -22.6485, -33.4011, -2.12632, 0.74 ) }
    dend_35 { pt3dadd( -22.6976, -34.7398, -3.57412, 0.88 ) }
    dend_35 { pt3dadd( -22.7674, -37.0886, -5.63136, 1.03 ) }
    dend_35 { pt3dadd( -22.8161, -38.0613, -6.33259, 0.96 ) }
    dend_35 { pt3dadd( -22.9223, -39.2912, -7.08244, 0.66 ) }
    dend_35 { pt3dadd( -23.0697, -40.4406, -7.69156, 0.88 ) }
    dend_35 { pt3dadd( -23.2377, -41.4673, -7.96672, 0.81 ) }
    dend_35 { pt3dadd( -23.4865, -42.4058, -8.07703, 0.81 ) }
    dend_35 { pt3dadd( -23.8895, -43.441, -8.09666, 0.66 ) }
    dend_35 { pt3dadd( -24.3363, -44.3299, -8.13324, 0.66 ) }
    dend_35 { pt3dadd( -24.7869, -45.1325, -8.20997, 0.74 ) }
    dend_35 { pt3dadd( -25.4294, -46.2276, -8.36567, 0.59 ) }
    dend_35 { pt3dadd( -25.7796, -46.8811, -8.46509, 0.52 ) }
    dend_35 { pt3dadd( -26.0636, -47.5166, -8.56112, 0.52 ) }
    dend_35 { pt3dadd( -26.5163, -48.8294, -8.74072, 0.88 ) }
    dend_35 { pt3dadd( -26.7673, -49.7835, -8.85021, 0.88 ) }
    dend_35 { pt3dadd( -26.9896, -50.807, -8.94117, 0.74 ) }
    dend_35 { pt3dadd( -27.2942, -52.2697, -9.03577, 0.74 ) }
    dend_35 { pt3dadd( -27.4863, -53.0962, -9.07814, 0.74 ) }
    dend_35 { pt3dadd( -27.8527, -54.3831, -9.12277, 0.81 ) }
    dend_35 { pt3dadd( -28.2357, -55.4361, -9.12361, 0.81 ) }
    dend_35 { pt3dadd( -28.7027, -56.4774, -9.08136, 0.66 ) }
    dend_35 { pt3dadd( -29.2314, -57.4843, -9.02087, 0.74 ) }
    dend_35 { pt3dadd( -29.7745, -58.3992, -8.95441, 0.74 ) }
    dend_35 { pt3dadd( -30.3357, -59.2947, -8.90347, 0.81 ) }
    dend_35 { pt3dadd( -30.8411, -60.1023, -8.87199, 0.81 ) }
    dend_35 { pt3dadd( -31.1977, -60.7018, -8.86029, 0.74 ) }
    dend_35 { pt3dadd( -31.6621, -61.5985, -8.86452, 0.52 ) }
    dend_35 { pt3dadd( -31.9885, -62.3569, -8.88638, 0.52 ) }
    dend_35 { pt3dadd( -32.3764, -63.4528, -8.943, 0.52 ) }
    dend_35 { pt3dadd( -32.6824, -64.479, -8.98852, 1.03 ) }
    dend_35 { pt3dadd( -32.8522, -65.1248, -9.01518, 1.03 ) }
    dend_35 { pt3dadd( -33.05, -65.9143, -9.02553, 0.81 ) }
    dend_35 { pt3dadd( -33.2147, -66.5827, -9.01284, 0.88 ) }
    dend_35 { pt3dadd( -33.4011, -67.4798, -8.96253, 1.03 ) }
    dend_35 { pt3dadd( -33.59, -68.687, -8.85789, 0.74 ) }
    dend_35 { pt3dadd( -33.6713, -69.4781, -8.82581, 0.74 ) }
    dend_35 { pt3dadd( -33.7316, -70.4849, -8.82737, 0.74 ) }
    dend_35 { pt3dadd( -33.7527, -71.3973, -8.91254, 0.59 ) }
    dend_35 { pt3dadd( -33.7486, -72.617, -9.13266, 0.66 ) }
    dend_35 { pt3dadd( -33.7226, -73.3466, -9.32552, 0.66 ) }
    dend_35 { pt3dadd( -33.6299, -74.7013, -9.79742, 0.66 ) }
    dend_35 { pt3dadd( -33.5886, -75.3975, -10.0764, 0.52 ) }
    dend_35 { pt3dadd( -33.568, -76.7354, -10.6594, 0.59 ) }
    dend_35 { pt3dadd( -33.6175, -77.4168, -10.9614, 0.81 ) }
    dend_35 { pt3dadd( -33.727, -78.026, -11.2187, 0.81 ) }
    dend_35 { pt3dadd( -33.9132, -78.7741, -11.4871, 0.29 ) }
    dend_35 { pt3dadd( -34.1392, -79.5182, -11.6744, 0.29 ) }
    dend_35 { pt3dadd( -34.4746, -80.4663, -11.8556, 0.74 ) }
    dend_35 { pt3dadd( -34.7688, -81.2488, -11.9437, 1.25 ) }
    dend_35 { pt3dadd( -34.9715, -81.7954, -11.9941, 1.47 ) }
    dend_35 { pt3dadd( -35.1161, -82.2019, -12.0209, 1.62 ) }
    dend_35 { pt3dadd( -35.3674, -82.9798, -12.0526, 1.25 ) }
    dend_35 { pt3dadd( -35.6084, -83.8686, -12.0889, 0.44 ) }
    dend_35 { pt3dadd( -35.8484, -84.8074, -12.1525, 0.29 ) }
    dend_35 { pt3dadd( -36.1698, -86.0563, -12.2291, 0.66 ) }
    dend_35 { pt3dadd( -36.39, -86.9006, -12.274, 0.96 ) }
    dend_35 { pt3dadd( -36.524, -87.4095, -12.2965, 1.25 ) }
    dend_35 { pt3dadd( -36.6679, -87.9757, -12.3155, 1.47 ) }
    dend_35 { pt3dadd( -36.8917, -88.884, -12.3335, 1.03 ) }
    dend_35 { pt3dadd( -37.2086, -90.013, -12.3372, 0.29 ) }
    dend_35 { pt3dadd( -37.4329, -90.7202, -12.324, 0.44 ) }
    dend_35 { pt3dadd( -37.6641, -91.327, -12.3003, 0.74 ) }
    dend_35 { pt3dadd( -37.936, -91.9586, -12.2606, 0.96 ) }
    dend_35 { pt3dadd( -38.2154, -92.5308, -12.2087, 1.25 ) }
    dend_35 { pt3dadd( -38.4883, -92.9986, -12.1622, 1.25 ) }
    dend_35 { pt3dadd( -39.019, -93.725, -12.1145, 1.03 ) }
    dend_35 { pt3dadd( -39.5645, -94.3288, -12.0432, 0.81 ) }
    dend_35 { pt3dadd( -39.8381, -94.5838, -12.0263, 0.81 ) }
    dend_35 { pt3dadd( -40.1781, -94.8747, -12.0238, 0.59 ) }
    dend_35 { pt3dadd( -40.7183, -95.3286, -12.0499, 0.52 ) }
    dend_35 { pt3dadd( -41.0439, -95.6329, -12.0842, 0.52 ) }
    dend_35 { pt3dadd( -41.6712, -96.323, -12.1903, 0.59 ) }
    dend_35 { pt3dadd( -42.4252, -97.3739, -12.39, 0.44 ) }
    dend_35 { pt3dadd( -42.791, -98.0369, -12.5383, 0.29 ) }
    dend_35 { pt3dadd( -43.0049, -98.4986, -12.6488, 0.29 ) }
    dend_35 { pt3dadd( -43.3129, -99.2257, -12.829, 0.66 ) }
    dend_35 { pt3dadd( -43.5537, -99.8034, -12.9761, 1.03 ) }
    dend_35 { pt3dadd( -43.7745, -100.322, -13.111, 1.03 ) }
    dend_35 { pt3dadd( -44.2532, -101.277, -13.325, 0.29 ) }
    dend_35 { pt3dadd( -44.6766, -101.961, -13.5047, 0.29 ) }
    dend_35 { pt3dadd( -45.037, -102.44, -13.6343, 0.29 ) }
    dend_35 { pt3dadd( -45.1954, -102.622, -13.6836, 0.44 ) }
    dend_35 { pt3dadd( -45.4892, -102.957, -13.763, 0.44 ) }
    dend_35 { pt3dadd( -46.1669, -103.765, -13.9206, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -46.4259, -104.096, -13.9748, 0.66 ) }
    dend_35 { pt3dadd( -47.0597, -104.945, -14.1075, 0.29 ) }
    dend_35 { pt3dadd( -47.3811, -105.374, -14.1675, 0.29 ) }
    dend_35 { pt3dadd( -47.8594, -106.007, -14.2378, 0.59 ) }
    dend_35 { pt3dadd( -48.2589, -106.546, -14.278, 0.81 ) }
    dend_35 { pt3dadd( -48.7459, -107.225, -14.3167, 0.29 ) }
    dend_35 { pt3dadd( -49.1612, -107.842, -14.364, 0.52 ) }
    dend_35 { pt3dadd( -49.5833, -108.548, -14.4455, 0.52 ) }
    dend_35 { pt3dadd( -49.9265, -109.277, -14.5462, 0.44 ) }
    dend_35 { pt3dadd( -50.2431, -110.195, -14.6487, 0.74 ) }
    dend_35 { pt3dadd( -50.3964, -110.872, -14.8429, 0.88 ) }
    dend_35 { pt3dadd( -50.4957, -111.655, -15.1548, 0.88 ) }
    dend_35 { pt3dadd( -50.5324, -112.338, -15.4528, 0.29 ) }
    dend_35 { pt3dadd( -50.5125, -113.377, -16.0432, 0.29 ) }
    dend_35 { pt3dadd( -50.4654, -114.238, -16.5861, 0.29 ) }
    dend_35 { pt3dadd( -50.2826, -117.162, -18.5182, 0.59 ) }
    dend_35 { pt3dadd( -50.2474, -117.687, -18.8733, 0.81 ) }
    dend_35 { pt3dadd( -50.1994, -118.349, -19.3362, 0.81 ) }
    dend_35 { pt3dadd( -50.0185, -120.533, -20.8873, 0.29 ) }
    dend_35 { pt3dadd( -49.9299, -121.313, -21.4359, 0.74 ) }
    dend_35 { pt3dadd( -49.8624, -121.762, -21.7239, 0.74 ) }
    dend_35 { pt3dadd( -49.6589, -123.205, -22.4317, 0.22 ) }
    dend_35 { pt3dadd( -49.5212, -124.384, -22.9734, 1.11 ) }
    dend_35 { pt3dadd( -49.4522, -125.086, -23.2642, 1.11 ) }
    dend_35 { pt3dadd( -49.3417, -126.417, -23.6798, 0.22 ) }
    dend_35 { pt3dadd( -49.2415, -127.396, -23.9554, 0.59 ) }
    dend_35 { pt3dadd( -49.0593, -128.929, -24.3637, 0.22 ) }
    dend_35 { pt3dadd( -48.9791, -129.747, -24.5482, 0.37 ) }
    dend_35 { pt3dadd( -48.9563, -130.13, -24.6366, 0.37 ) }
    dend_35 { pt3dadd( -48.9662, -130.887, -24.8161, 0.22 ) }
    dend_35 { pt3dadd( -49.0328, -131.834, -25.0439, 0.22 ) }
    dend_35 { pt3dadd( -49.1725, -133.375, -25.4278, 1.47 ) }
    dend_35 { pt3dadd( -49.2775, -134.287, -25.6506, 1.62 ) }
    dend_35 { pt3dadd( -49.4803, -135.41, -25.9007, 1.25 ) }
    dend_35 { pt3dadd( -49.8942, -137.22, -26.2754, 0.15 ) }
    dend_35 { pt3dadd( -50.1906, -138.269, -26.476, 0.22 ) }
    dend_35 { pt3dadd( -50.3351, -138.722, -26.5413, 0.88 ) }
    dend_35 { pt3dadd( -50.4951, -139.229, -26.604, 1.03 ) }
    dend_35 { pt3dadd( -50.8345, -140.38, -26.7563, 0.15 ) }
    dend_35 { pt3dadd( -51.0523, -141.197, -26.8718, 0.52 ) }
    dend_35 { pt3dadd( -51.223, -141.843, -26.9773, 0.74 ) }
    dend_35 { pt3dadd( -52.1194, -145.163, -27.5532, 0.22 ) }
    dend_35 { pt3dadd( -52.4151, -146.248, -27.7483, 0.81 ) }
    dend_35 { pt3dadd( -52.5422, -146.716, -27.8357, 0.81 ) }
    dend_35 { pt3dadd( -53.0613, -148.7, -28.2158, 0.22 ) }
    dend_35 { pt3dadd( -53.2668, -149.493, -28.3602, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 46/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -22.5123, -31.6361, 0.291364, 0.59 ) }
    dend_32 { pt3dadd( -22.3258, -33.0994, -0.00577179, 0.59 ) }
    dend_32 { pt3dadd( -22.1693, -33.977, -0.1863, 0.59 ) }
    dend_32 { pt3dadd( -21.9637, -35.0377, -0.474449, 0.81 ) }
    dend_32 { pt3dadd( -21.8152, -35.8331, -0.704649, 0.81 ) }
    dend_32 { pt3dadd( -21.6037, -37.1757, -1.11928, 1.03 ) }
    dend_32 { pt3dadd( -21.5246, -37.8938, -1.34787, 1.03 ) }
    dend_32 { pt3dadd( -21.4735, -38.7425, -1.5943, 0.88 ) }
    dend_32 { pt3dadd( -21.4871, -40.315, -1.93739, 0.88 ) }
    dend_32 { pt3dadd( -21.6355, -41.357, -2.04097, 1.03 ) }
    dend_32 { pt3dadd( -21.9526, -42.2578, -1.97625, 1.03 ) }
    dend_32 { pt3dadd( -22.5898, -43.3704, -1.69755, 0.52 ) }
    dend_32 { pt3dadd( -23.7023, -44.9092, -1.18135, 1.03 ) }
    dend_32 { pt3dadd( -24.2836, -45.6306, -0.8989, 1.03 ) }
    dend_32 { pt3dadd( -24.9499, -46.4617, -0.542395, 0.88 ) }
    dend_32 { pt3dadd( -25.6016, -47.3243, -0.206238, 0.81 ) }
    dend_32 { pt3dadd( -26.324, -48.3786, 0.163641, 0.59 ) }
    dend_32 { pt3dadd( -26.9176, -49.3651, 0.439189, 0.59 ) }
    dend_32 { pt3dadd( -27.5228, -50.557, 0.652555, 0.59 ) }
    dend_32 { pt3dadd( -28.1352, -51.9647, 0.874676, 0.88 ) }
    dend_32 { pt3dadd( -28.4907, -52.9354, 1.02827, 0.88 ) }
    dend_32 { pt3dadd( -28.7171, -53.6582, 1.15, 0.74 ) }
    dend_32 { pt3dadd( -29.0123, -54.6203, 1.32722, 0.96 ) }
    dend_32 { pt3dadd( -29.2867, -55.4157, 1.48067, 1.03 ) }
    dend_32 { pt3dadd( -29.5688, -56.1218, 1.62256, 1.03 ) }
    dend_32 { pt3dadd( -30.1202, -57.3172, 1.86098, 0.59 ) }
    dend_32 { pt3dadd( -30.5598, -58.2105, 1.99131, 0.37 ) }
    dend_32 { pt3dadd( -31.0634, -59.1769, 2.07242, 0.37 ) }
    dend_32 { pt3dadd( -31.5822, -60.1773, 2.10743, 0.81 ) }
    dend_32 { pt3dadd( -32.1106, -61.2657, 2.10237, 0.81 ) }
    dend_32 { pt3dadd( -32.4613, -62.0644, 2.07035, 0.81 ) }
    dend_32 { pt3dadd( -32.9652, -63.3641, 2.01495, 0.96 ) }
    dend_32 { pt3dadd( -33.3425, -64.4484, 1.97445, 0.96 ) }
    dend_32 { pt3dadd( -33.6616, -65.5007, 1.95815, 0.66 ) }
    dend_32 { pt3dadd( -33.9564, -66.5706, 1.98711, 0.66 ) }
    dend_32 { pt3dadd( -34.2243, -67.4393, 2.06227, 0.59 ) }
    dend_32 { pt3dadd( -34.6424, -68.5059, 2.24435, 0.66 ) }
    dend_32 { pt3dadd( -34.9192, -69.0172, 2.41042, 0.88 ) }
    dend_32 { pt3dadd( -35.3653, -69.6544, 2.67905, 0.88 ) }
    dend_32 { pt3dadd( -35.8602, -70.2418, 2.96454, 0.74 ) }
    dend_32 { pt3dadd( -36.5723, -71.039, 3.38149, 0.59 ) }
    dend_32 { pt3dadd( -37.0206, -71.5645, 3.64462, 0.59 ) }
    dend_32 { pt3dadd( -37.533, -72.2682, 3.9389, 0.59 ) }
    dend_32 { pt3dadd( -38.1732, -73.3359, 4.2895, 0.44 ) }
    dend_32 { pt3dadd( -38.5542, -74.0856, 4.46376, 0.66 ) }
    dend_32 { pt3dadd( -38.9492, -74.9852, 4.6101, 0.81 ) }
    dend_32 { pt3dadd( -39.2779, -75.8253, 4.71178, 0.88 ) }
    dend_32 { pt3dadd( -39.7125, -76.9653, 4.81414, 0.88 ) }
    dend_32 { pt3dadd( -40.1333, -77.9929, 4.86816, 0.88 ) }
    dend_32 { pt3dadd( -40.7076, -79.2138, 4.9105, 0.66 ) }
    dend_32 { pt3dadd( -41.1606, -80.0319, 4.92433, 0.66 ) }
    dend_32 { pt3dadd( -41.5894, -80.6927, 4.92433, 0.81 ) }
    dend_32 { pt3dadd( -42.1057, -81.3867, 4.92204, 0.96 ) }
    dend_32 { pt3dadd( -42.699, -82.0664, 4.94718, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -43.3098, -82.7287, 5.0107, 0.88 ) }
    dend_32 { pt3dadd( -44.1437, -83.6761, 5.16379, 0.88 ) }
    dend_32 { pt3dadd( -44.7955, -84.4943, 5.35101, 1.03 ) }
    dend_32 { pt3dadd( -45.1157, -84.9789, 5.49214, 1.03 ) }
    dend_32 { pt3dadd( -45.7461, -86.1794, 5.88374, 0.59 ) }
    dend_32 { pt3dadd( -46.0713, -86.9644, 6.1476, 0.74 ) }
    dend_32 { pt3dadd( -46.4493, -88.0222, 6.48484, 0.88 ) }
    dend_32 { pt3dadd( -46.6523, -88.6561, 6.66524, 0.88 ) }
    dend_32 { pt3dadd( -46.9985, -89.7539, 6.93224, 0.74 ) }
    dend_32 { pt3dadd( -47.326, -90.8226, 7.15389, 0.88 ) }
    dend_32 { pt3dadd( -47.5927, -91.6255, 7.27302, 0.88 ) }
    dend_32 { pt3dadd( -48.0599, -92.7564, 7.40664, 0.66 ) }
    dend_32 { pt3dadd( -48.4592, -93.5677, 7.48648, 0.66 ) }
    dend_32 { pt3dadd( -48.798, -94.1961, 7.54765, 0.96 ) }
    dend_32 { pt3dadd( -49.3421, -95.1375, 7.65588, 0.74 ) }
    dend_32 { pt3dadd( -50.1021, -96.357, 7.82392, 0.74 ) }
    dend_32 { pt3dadd( -50.6393, -97.175, 7.94348, 0.96 ) }
    dend_32 { pt3dadd( -51.103, -97.8509, 8.0421, 0.96 ) }
    dend_32 { pt3dadd( -51.6668, -98.6181, 8.15441, 0.88 ) }
    dend_32 { pt3dadd( -52.2908, -99.395, 8.25977, 0.81 ) }
    dend_32 { pt3dadd( -53.1567, -100.346, 8.37741, 0.66 ) }
    dend_32 { pt3dadd( -54.1228, -101.307, 8.49983, 0.59 ) }
    dend_32 { pt3dadd( -54.8254, -101.949, 8.58475, 0.81 ) }
    dend_32 { pt3dadd( -55.4696, -102.525, 8.65639, 0.81 ) }
    dend_32 { pt3dadd( -56.4328, -103.348, 8.74112, 0.66 ) }
    dend_32 { pt3dadd( -57.2886, -104.029, 8.80441, 0.88 ) }
    dend_32 { pt3dadd( -58.0216, -104.535, 8.8598, 1.47 ) }
    dend_32 { pt3dadd( -58.5302, -104.806, 8.89894, 1.62 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -15.8575, -20.174, 2.18656, 0.66 ) }
    dend_28 { pt3dadd( -17.3478, -20.014, 2.05831, 0.66 ) }
    dend_28 { pt3dadd( -18.3185, -19.8441, 1.94034, 0.81 ) }
    dend_28 { pt3dadd( -19.3781, -19.6128, 1.78229, 1.11 ) }
    dend_28 { pt3dadd( -20.3634, -19.3675, 1.6199, 1.11 ) }
    dend_28 { pt3dadd( -21.188, -19.1433, 1.48224, 1.11 ) }
    dend_28 { pt3dadd( -22.3044, -18.8265, 1.28252, 1.03 ) }
    dend_28 { pt3dadd( -23.4527, -18.4471, 1.02257, 1.18 ) }
    dend_28 { pt3dadd( -24.0979, -18.2026, 0.876067, 1.18 ) }
    dend_28 { pt3dadd( -24.7801, -17.9063, 0.734584, 1.18 ) }
    dend_28 { pt3dadd( -25.634, -17.4777, 0.571868, 1.11 ) }
    dend_28 { pt3dadd( -26.6992, -16.8713, 0.427301, 0.96 ) }
    dend_28 { pt3dadd( -27.6716, -16.231, 0.33975, 0.96 ) }
    dend_28 { pt3dadd( -28.7154, -15.4064, 0.285353, 0.96 ) }
    dend_28 { pt3dadd( -29.5837, -14.5583, 0.264128, 0.88 ) }
    dend_28 { pt3dadd( -30.254, -13.6858, 0.295473, 0.88 ) }
    dend_28 { pt3dadd( -30.9563, -12.3763, 0.377394, 0.88 ) }
    dend_28 { pt3dadd( -31.3242, -11.354, 0.452273, 0.81 ) }
    dend_28 { pt3dadd( -31.5815, -10.2321, 0.520339, 0.88 ) }
    dend_28 { pt3dadd( -31.7209, -9.28041, 0.55137, 0.88 ) }
    dend_28 { pt3dadd( -31.8753, -7.75021, 0.543149, 0.81 ) }
    dend_28 { pt3dadd( -32.0045, -6.32549, 0.47536, 0.88 ) }
    dend_28 { pt3dadd( -32.1409, -4.97858, 0.343586, 0.88 ) }
    dend_28 { pt3dadd( -32.3598, -3.33179, 0.156738, 0.96 ) }
    dend_28 { pt3dadd( -32.5368, -2.3368, 0.0376399, 0.96 ) }
    dend_28 { pt3dadd( -32.8087, -1.12073, -0.120414, 1.11 ) }
    dend_28 { pt3dadd( -33.1521, 0.105166, -0.290545, 1.11 ) }
    dend_28 { pt3dadd( -33.607, 1.44174, -0.449747, 1.03 ) }
    dend_28 { pt3dadd( -34.0189, 2.42528, -0.537068, 0.88 ) }
    dend_28 { pt3dadd( -34.6312, 3.64039, -0.616544, 0.88 ) }
    dend_28 { pt3dadd( -35.2163, 4.64603, -0.608205, 1.03 ) }
    dend_28 { pt3dadd( -36.2218, 6.12673, -0.528789, 1.11 ) }
    dend_28 { pt3dadd( -36.841, 6.88793, -0.457272, 1.11 ) }
    dend_28 { pt3dadd( -37.9332, 7.96124, -0.25648, 0.88 ) }
    dend_28 { pt3dadd( -38.5801, 8.46541, -0.10632, 1.03 ) }
    dend_28 { pt3dadd( -39.8225, 9.27223, 0.23769, 0.81 ) }
    dend_28 { pt3dadd( -40.7232, 9.80899, 0.532392, 0.66 ) }
    dend_28 { pt3dadd( -41.3611, 10.1922, 0.784164, 0.66 ) }
    dend_28 { pt3dadd( -42.6093, 11.0638, 1.36176, 0.81 ) }
    dend_28 { pt3dadd( -43.3109, 11.6882, 1.69137, 0.81 ) }
    dend_28 { pt3dadd( -43.8954, 12.3706, 1.92664, 0.74 ) }
    dend_28 { pt3dadd( -44.2632, 12.8965, 1.98049, 0.74 ) }
    dend_28 { pt3dadd( -44.7588, 13.5688, 1.98903, 0.74 ) }
    dend_28 { pt3dadd( -45.3592, 14.2739, 1.87704, 0.74 ) }
    dend_28 { pt3dadd( -46.0681, 14.9107, 1.62782, 0.88 ) }
    dend_28 { pt3dadd( -46.9951, 15.5242, 1.26205, 1.03 ) }
    dend_28 { pt3dadd( -48.0226, 16.0199, 0.813237, 1.18 ) }
    dend_28 { pt3dadd( -49.3089, 16.4759, 0.161929, 0.81 ) }
    dend_28 { pt3dadd( -50.0545, 16.6695, -0.259752, 0.81 ) }
    dend_28 { pt3dadd( -51.2155, 16.8783, -1.02243, 0.81 ) }
    dend_28 { pt3dadd( -52.2136, 17.032, -1.76446, 1.03 ) }
    dend_28 { pt3dadd( -53.2081, 17.2154, -2.60008, 0.88 ) }
    dend_28 { pt3dadd( -54.6114, 17.5591, -3.87308, 0.96 ) }
    dend_28 { pt3dadd( -55.2757, 17.7932, -4.52667, 1.18 ) }
    dend_28 { pt3dadd( -56.4938, 18.371, -5.7306, 1.4 ) }
    dend_28 { pt3dadd( -57.192, 18.8255, -6.38111, 1.18 ) }
    dend_28 { pt3dadd( -58.1392, 19.5626, -7.23691, 0.88 ) }
    dend_28 { pt3dadd( -58.792, 20.19, -7.77552, 0.88 ) }
    dend_28 { pt3dadd( -59.505, 21.0331, -8.27251, 1.03 ) }
    dend_28 { pt3dadd( -59.9671, 21.6618, -8.54351, 0.88 ) }
    dend_28 { pt3dadd( -60.7512, 22.8921, -8.87272, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 89/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.8575, -20.174, 2.18656, 1.4 ) }
    dend_27 { pt3dadd( -16.96, -19.0896, 2.52651, 1.4 ) }
    dend_27 { pt3dadd( -17.941, -18.1604, 2.80737, 1.25 ) }
    dend_27 { pt3dadd( -18.8068, -17.3405, 3.08216, 1.03 ) }
    dend_27 { pt3dadd( -19.6611, -16.5017, 3.32811, 1.03 ) }
    dend_27 { pt3dadd( -20.2742, -15.8629, 3.50562, 0.88 ) }
    dend_27 { pt3dadd( -20.8593, -15.1978, 3.71362, 0.88 ) }
    dend_27 { pt3dadd( -21.3554, -14.5553, 3.96794, 1.03 ) }
    dend_27 { pt3dadd( -21.7679, -13.8475, 4.2463, 1.03 ) }
    dend_27 { pt3dadd( -22.1062, -13.0017, 4.57249, 0.74 ) }
    dend_27 { pt3dadd( -22.307, -12.3253, 4.81415, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -22.5947, -10.9895, 5.24383, 0.88 ) }
    dend_27 { pt3dadd( -22.781, -9.7111, 5.6532, 1.03 ) }
    dend_27 { pt3dadd( -22.9066, -8.41926, 6.05849, 1.03 ) }
    dend_27 { pt3dadd( -22.9418, -7.64843, 6.27114, 1.03 ) }
    dend_27 { pt3dadd( -22.9353, -6.61648, 6.56805, 0.74 ) }
    dend_27 { pt3dadd( -22.8792, -5.51149, 6.83577, 1.11 ) }
    dend_27 { pt3dadd( -22.8057, -4.60474, 7.03855, 0.96 ) }
    dend_27 { pt3dadd( -22.7519, -3.94498, 7.19283, 0.88 ) }
    dend_27 { pt3dadd( -22.6344, -2.69629, 7.51871, 0.81 ) }
    dend_27 { pt3dadd( -22.5248, -1.31177, 7.87147, 0.74 ) }
    dend_27 { pt3dadd( -22.4447, -0.0663878, 8.16464, 0.81 ) }
    dend_27 { pt3dadd( -22.4218, 1.25117, 8.45354, 1.03 ) }
    dend_27 { pt3dadd( -22.4432, 2.45669, 8.668, 1.03 ) }
    dend_27 { pt3dadd( -22.4896, 3.73749, 8.85521, 0.88 ) }
    dend_27 { pt3dadd( -22.5526, 4.87163, 8.9838, 0.88 ) }
    dend_27 { pt3dadd( -22.6179, 5.9574, 9.04426, 1.11 ) }
    dend_27 { pt3dadd( -22.6713, 6.74361, 9.05845, 1.11 ) }
    dend_27 { pt3dadd( -22.7546, 7.80568, 9.03141, 0.74 ) }
    dend_27 { pt3dadd( -22.8237, 8.83096, 9.00746, 0.81 ) }
    dend_27 { pt3dadd( -22.9231, 10.1692, 8.96534, 0.81 ) }
    dend_27 { pt3dadd( -22.992, 11.3421, 8.88263, 0.96 ) }
    dend_27 { pt3dadd( -23.0479, 12.5014, 8.76536, 0.66 ) }
    dend_27 { pt3dadd( -23.0804, 13.7743, 8.60997, 0.52 ) }
    dend_27 { pt3dadd( -23.1057, 14.9319, 8.46008, 0.74 ) }
    dend_27 { pt3dadd( -23.1264, 15.6065, 8.38502, 0.74 ) }
    dend_27 { pt3dadd( -23.1965, 17.1155, 8.23626, 0.74 ) }
    dend_27 { pt3dadd( -23.278, 18.2777, 8.14149, 0.74 ) }
    dend_27 { pt3dadd( -23.4221, 19.4595, 8.075, 0.74 ) }
    dend_27 { pt3dadd( -23.7007, 20.8074, 8.02883, 0.66 ) }
    dend_27 { pt3dadd( -24.1131, 22.1279, 8.00928, 0.96 ) }
    dend_27 { pt3dadd( -24.4325, 22.964, 8.02811, 0.96 ) }
    dend_27 { pt3dadd( -24.7562, 23.7092, 8.08834, 0.96 ) }
    dend_27 { pt3dadd( -25.4126, 25.1519, 8.22579, 0.81 ) }
    dend_27 { pt3dadd( -25.9315, 26.3061, 8.34272, 0.96 ) }
    dend_27 { pt3dadd( -26.3872, 27.4892, 8.45822, 1.11 ) }
    dend_27 { pt3dadd( -26.7007, 28.505, 8.5719, 0.96 ) }
    dend_27 { pt3dadd( -26.9968, 29.7382, 8.73999, 0.88 ) }
    dend_27 { pt3dadd( -27.1939, 30.9379, 8.91629, 0.88 ) }
    dend_27 { pt3dadd( -27.283, 31.937, 9.07059, 0.88 ) }
    dend_27 { pt3dadd( -27.3515, 33.3662, 9.27209, 1.03 ) }
    dend_27 { pt3dadd( -27.4058, 34.7352, 9.43398, 0.74 ) }
    dend_27 { pt3dadd( -27.4462, 35.3204, 9.48537, 0.74 ) }
    dend_27 { pt3dadd( -27.5833, 36.3526, 9.54278, 0.88 ) }
    dend_27 { pt3dadd( -27.7194, 37.0248, 9.57651, 0.88 ) }
    dend_27 { pt3dadd( -28.0588, 38.2203, 9.62324, 0.74 ) }
    dend_27 { pt3dadd( -28.4588, 39.2809, 9.65599, 0.66 ) }
    dend_27 { pt3dadd( -28.7822, 39.9641, 9.66896, 0.66 ) }
    dend_27 { pt3dadd( -29.6489, 41.4374, 9.72351, 1.03 ) }
    dend_27 { pt3dadd( -30.0625, 42.0502, 9.74066, 1.03 ) }
    dend_27 { pt3dadd( -30.6673, 42.9077, 9.74996, 0.81 ) }
    dend_27 { pt3dadd( -31.1093, 43.5526, 9.73883, 0.81 ) }
    dend_27 { pt3dadd( -31.6722, 44.4038, 9.65856, 0.52 ) }
    dend_27 { pt3dadd( -32.0643, 45.0408, 9.55426, 0.52 ) }
    dend_27 { pt3dadd( -32.5939, 45.9863, 9.33839, 0.74 ) }
    dend_27 { pt3dadd( -33.0399, 46.8936, 9.10509, 0.81 ) }
    dend_27 { pt3dadd( -33.4487, 47.8851, 8.84594, 0.81 ) }
    dend_27 { pt3dadd( -33.7936, 48.8966, 8.60234, 0.88 ) }
    dend_27 { pt3dadd( -34.0288, 49.7126, 8.43436, 1.03 ) }
    dend_27 { pt3dadd( -34.2267, 50.4566, 8.30637, 1.03 ) }
    dend_27 { pt3dadd( -34.5232, 51.5376, 8.15538, 0.88 ) }
    dend_27 { pt3dadd( -34.8481, 52.656, 7.99773, 0.74 ) }
    dend_27 { pt3dadd( -35.2458, 53.9487, 7.81442, 0.96 ) }
    dend_27 { pt3dadd( -35.5565, 54.9007, 7.6811, 1.03 ) }
    dend_27 { pt3dadd( -35.8868, 55.7911, 7.54201, 1.03 ) }
    dend_27 { pt3dadd( -36.306, 56.7556, 7.37986, 0.88 ) }
    dend_27 { pt3dadd( -36.9551, 57.9743, 7.16273, 0.96 ) }
    dend_27 { pt3dadd( -37.4013, 58.6364, 7.0262, 0.81 ) }
    dend_27 { pt3dadd( -37.7806, 59.086, 6.9244, 0.96 ) }
    dend_27 { pt3dadd( -38.3248, 59.6291, 6.8075, 1.18 ) }
    dend_27 { pt3dadd( -38.7937, 60.0468, 6.74594, 1.18 ) }
    dend_27 { pt3dadd( -39.3501, 60.5256, 6.7142, 1.11 ) }
    dend_27 { pt3dadd( -39.9081, 61.0475, 6.71646, 1.25 ) }
    dend_27 { pt3dadd( -40.4542, 61.6698, 6.73886, 1.25 ) }
    dend_27 { pt3dadd( -41.0038, 62.4814, 6.77258, 1.03 ) }
    dend_27 { pt3dadd( -41.4104, 63.2997, 6.80917, 0.88 ) }
    dend_27 { pt3dadd( -41.7374, 64.2866, 6.85464, 0.74 ) }
    dend_27 { pt3dadd( -41.9196, 65.2833, 6.90097, 0.74 ) }
    dend_27 { pt3dadd( -41.9829, 66.6075, 6.95766, 0.81 ) }
    dend_27 { pt3dadd( -41.9285, 67.5466, 6.9671, 0.81 ) }
    dend_27 { pt3dadd( -41.8038, 68.4608, 6.92846, 0.96 ) }
    dend_27 { pt3dadd( -41.6728, 69.3025, 6.8417, 0.96 ) }
    dend_27 { pt3dadd( -41.5683, 69.9973, 6.7436, 0.88 ) }
    dend_27 { pt3dadd( -41.4702, 70.9057, 6.61176, 0.88 ) }
    dend_27 { pt3dadd( -41.412, 71.9978, 6.46324, 0.81 ) }
    dend_27 { pt3dadd( -41.3998, 73.0542, 6.34067, 0.74 ) }
    dend_27 { pt3dadd( -41.4245, 74.409, 6.22787, 0.88 ) }
    dend_27 { pt3dadd( -41.4537, 75.2884, 6.19357, 0.88 ) }
    dend_27 { pt3dadd( -41.4601, 76.2457, 6.18892, 1.03 ) }
    dend_27 { pt3dadd( -41.4055, 77.2724, 6.21864, 0.96 ) }
    dend_27 { pt3dadd( -41.2571, 78.125, 6.28104, 0.88 ) }
    dend_27 { pt3dadd( -41.0223, 78.8264, 6.33685, 1.03 ) }
    dend_27 { pt3dadd( -40.5641, 79.7376, 6.41226, 0.96 ) }
    dend_27 { pt3dadd( -40.1249, 80.4917, 6.45593, 0.88 ) }
    dend_27 { pt3dadd( -39.7103, 81.1521, 6.47209, 0.88 ) }
    dend_27 { pt3dadd( -39.1372, 82.1257, 6.48773, 0.81 ) }
    dend_27 { pt3dadd( -38.6085, 83.1665, 6.50275, 0.74 ) }
    dend_27 { pt3dadd( -38.0262, 84.4788, 6.52703, 0.81 ) }
    dend_27 { pt3dadd( -37.6462, 85.469, 6.54099, 1.03 ) }
    dend_27 { pt3dadd( -37.4941, 85.9255, 6.5501, 1.03 ) }
    dend_27 { pt3dadd( -37.0742, 87.3028, 6.57482, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -36.742, 88.4459, 6.58468, 0.88 ) }
    dend_27 { pt3dadd( -36.4254, 89.4551, 6.58275, 0.88 ) }
    dend_27 { pt3dadd( -35.9578, 90.704, 6.54986, 0.88 ) }
    dend_27 { pt3dadd( -35.6014, 91.4698, 6.52862, 0.88 ) }
    dend_27 { pt3dadd( -35.1903, 92.1994, 6.51047, 1.11 ) }
    dend_27 { pt3dadd( -34.6903, 92.9882, 6.49407, 1.11 ) }
    dend_27 { pt3dadd( -34.0381, 94.0108, 6.47525, 0.81 ) }
    dend_27 { pt3dadd( -33.4717, 94.9533, 6.46439, 0.96 ) }
    dend_27 { pt3dadd( -32.8011, 96.1313, 6.46638, 0.96 ) }
    dend_27 { pt3dadd( -32.2268, 97.1932, 6.43564, 0.88 ) }
    dend_27 { pt3dadd( -31.5033, 98.6183, 6.36421, 0.88 ) }
    dend_27 { pt3dadd( -31.0626, 99.5771, 6.28378, 1.03 ) }
    dend_27 { pt3dadd( -30.6801, 100.587, 6.16951, 1.03 ) }
    dend_27 { pt3dadd( -30.2786, 102.041, 5.97552, 0.88 ) }
    dend_27 { pt3dadd( -30.0847, 103.094, 5.81997, 0.88 ) }
    dend_27 { pt3dadd( -29.9855, 103.88, 5.69069, 0.74 ) }
    dend_27 { pt3dadd( -29.9004, 104.768, 5.5444, 0.88 ) }
    dend_27 { pt3dadd( -29.8201, 106.02, 5.36045, 0.81 ) }
    dend_27 { pt3dadd( -29.7904, 107.583, 5.20661, 0.81 ) }
    dend_27 { pt3dadd( -29.8252, 109.083, 5.15425, 0.88 ) }
    dend_27 { pt3dadd( -29.8655, 109.772, 5.17874, 0.88 ) }
    dend_27 { pt3dadd( -30.0223, 111.455, 5.30449, 0.81 ) }
    dend_27 { pt3dadd( -30.2362, 112.999, 5.47621, 0.74 ) }
    dend_27 { pt3dadd( -30.5491, 114.541, 5.70042, 0.88 ) }
    dend_27 { pt3dadd( -30.8579, 115.585, 5.88444, 0.96 ) }
    dend_27 { pt3dadd( -31.4143, 117.095, 6.18012, 1.03 ) }
    dend_27 { pt3dadd( -31.8687, 118.266, 6.43979, 0.88 ) }
    dend_27 { pt3dadd( -32.4127, 119.648, 6.75628, 1.11 ) }
    dend_27 { pt3dadd( -32.7232, 120.499, 6.94256, 1.25 ) }
    dend_27 { pt3dadd( -33.1102, 121.791, 7.18485, 0.81 ) }
    dend_27 { pt3dadd( -33.4095, 123.133, 7.4075, 0.66 ) }
    dend_27 { pt3dadd( -33.7188, 125.157, 7.73382, 0.66 ) }
    dend_27 { pt3dadd( -33.8365, 126.214, 7.89013, 0.96 ) }
    dend_27 { pt3dadd( -33.9061, 126.999, 7.98797, 0.96 ) }
    dend_27 { pt3dadd( -33.9944, 127.97, 8.06633, 0.96 ) }
    dend_27 { pt3dadd( -34.1119, 128.819, 8.09076, 0.81 ) }
    dend_27 { pt3dadd( -34.3327, 129.643, 8.05671, 0.59 ) }
    dend_27 { pt3dadd( -34.7007, 130.541, 7.95032, 0.66 ) }
    dend_27 { pt3dadd( -35.0118, 131.18, 7.86757, 0.96 ) }
    dend_27 { pt3dadd( -35.2748, 131.687, 7.80223, 0.96 ) }
    dend_27 { pt3dadd( -35.9692, 133.026, 7.66065, 0.74 ) }
    dend_27 { pt3dadd( -36.409, 133.97, 7.60942, 0.66 ) }
    dend_27 { pt3dadd( -36.6645, 134.615, 7.62606, 0.88 ) }
    dend_27 { pt3dadd( -36.9032, 135.308, 7.69862, 0.88 ) }
    dend_27 { pt3dadd( -37.1946, 136.162, 7.82464, 0.74 ) }
    dend_27 { pt3dadd( -37.4492, 136.883, 7.97595, 0.74 ) }
    dend_27 { pt3dadd( -37.8121, 137.983, 8.25159, 0.81 ) }
    dend_27 { pt3dadd( -38.1473, 139.064, 8.52903, 0.66 ) }
    dend_27 { pt3dadd( -38.5084, 140.281, 8.8306, 0.81 ) }
    dend_27 { pt3dadd( -38.9011, 141.614, 9.15215, 0.96 ) }
    dend_27 { pt3dadd( -39.2619, 142.825, 9.41938, 1.11 ) }
    dend_27 { pt3dadd( -39.6202, 144.053, 9.64709, 0.81 ) }
    dend_27 { pt3dadd( -39.9468, 145.18, 9.82794, 0.59 ) }
    dend_27 { pt3dadd( -40.2083, 146.079, 9.95496, 0.81 ) }
    dend_27 { pt3dadd( -40.5789, 147.327, 10.133, 0.59 ) }
    dend_27 { pt3dadd( -40.9103, 148.436, 10.2849, 0.74 ) }
    dend_27 { pt3dadd( -41.2517, 149.515, 10.4111, 1.03 ) }
    dend_27 { pt3dadd( -41.6191, 150.627, 10.5202, 1.03 ) }
    dend_27 { pt3dadd( -41.9669, 151.776, 10.5735, 0.74 ) }
    dend_27 { pt3dadd( -42.2021, 152.672, 10.5614, 0.74 ) }
    dend_27 { pt3dadd( -42.5051, 153.959, 10.4645, 0.74 ) }
    dend_27 { pt3dadd( -42.7858, 155.259, 10.3495, 0.59 ) }
    dend_27 { pt3dadd( -42.9476, 156.068, 10.2798, 0.59 ) }
    dend_27 { pt3dadd( -43.2368, 157.436, 10.1694, 0.66 ) }
    dend_27 { pt3dadd( -43.4677, 158.329, 10.1157, 0.52 ) }
    dend_27 { pt3dadd( -43.7998, 159.318, 10.0842, 0.74 ) }
    dend_27 { pt3dadd( -44.2163, 160.314, 10.0934, 0.96 ) }
    dend_27 { pt3dadd( -44.6774, 161.28, 10.1656, 0.74 ) }
    dend_27 { pt3dadd( -45.4408, 162.666, 10.326, 0.74 ) }
    dend_27 { pt3dadd( -46.0712, 163.666, 10.4484, 0.88 ) }
    dend_27 { pt3dadd( -46.5775, 164.397, 10.4999, 0.88 ) }
    dend_27 { pt3dadd( -47.3097, 165.384, 10.5044, 0.74 ) }
    dend_27 { pt3dadd( -48.2664, 166.589, 10.4292, 0.74 ) }
    dend_27 { pt3dadd( -49.1731, 167.697, 10.3252, 0.81 ) }
    dend_27 { pt3dadd( -49.9744, 168.722, 10.2193, 0.96 ) }
    dend_27 { pt3dadd( -50.7331, 169.788, 10.1064, 0.88 ) }
    dend_27 { pt3dadd( -51.3229, 170.731, 10.0093, 0.88 ) }
    dend_27 { pt3dadd( -52.039, 172.12, 9.87682, 0.81 ) }
    dend_27 { pt3dadd( -52.4525, 173.144, 9.77389, 0.81 ) }
    dend_27 { pt3dadd( -52.9051, 174.622, 9.63403, 0.96 ) }
    dend_27 { pt3dadd( -53.2594, 175.965, 9.51756, 1.11 ) }
    dend_27 { pt3dadd( -53.5897, 177.254, 9.41006, 0.81 ) }
    dend_27 { pt3dadd( -53.9461, 178.571, 9.29101, 0.81 ) }
    dend_27 { pt3dadd( -54.2341, 179.511, 9.19907, 0.81 ) }
    dend_27 { pt3dadd( -54.6838, 180.698, 9.07962, 0.81 ) }
    dend_27 { pt3dadd( -55.5957, 182.576, 8.89527, 0.96 ) }
    dend_27 { pt3dadd( -56.2598, 183.645, 8.80012, 0.96 ) }
    dend_27 { pt3dadd( -57.0348, 184.668, 8.72539, 1.03 ) }
    dend_27 { pt3dadd( -57.8053, 185.562, 8.68088, 1.11 ) }
    dend_27 { pt3dadd( -58.6546, 186.497, 8.66402, 0.88 ) }
    dend_27 { pt3dadd( -59.4846, 187.396, 8.66608, 0.66 ) }
    dend_27 { pt3dadd( -60.4501, 188.455, 8.67071, 0.66 ) }
    dend_27 { pt3dadd( -61.501, 189.718, 8.70905, 0.74 ) }
    dend_27 { pt3dadd( -62.1956, 190.679, 8.76856, 0.88 ) }
    dend_27 { pt3dadd( -62.7504, 191.57, 8.84899, 0.81 ) }
    dend_27 { pt3dadd( -63.1747, 192.357, 8.93848, 0.81 ) }
    dend_27 { pt3dadd( -63.4904, 193.033, 9.01643, 0.81 ) }
    dend_27 { pt3dadd( -64.1297, 194.508, 9.17591, 0.59 ) }
    dend_27 { pt3dadd( -64.6053, 195.552, 9.27159, 0.74 ) }
    dend_27 { pt3dadd( -65.0112, 196.318, 9.30826, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( -65.4312, 196.965, 9.29674, 0.74 ) }
    dend_27 { pt3dadd( -66.0981, 197.785, 9.21813, 0.88 ) }
    dend_27 { pt3dadd( -66.7157, 198.391, 9.10088, 0.88 ) }
    dend_27 { pt3dadd( -67.5655, 199.06, 8.88917, 0.74 ) }
    dend_27 { pt3dadd( -68.532, 199.749, 8.61457, 0.88 ) }
    dend_27 { pt3dadd( -69.3538, 200.349, 8.36166, 0.66 ) }
    dend_27 { pt3dadd( -70.0687, 200.895, 8.14269, 0.66 ) }
    dend_27 { pt3dadd( -70.625, 201.34, 7.99394, 0.66 ) }
    dend_27 { pt3dadd( -71.2619, 201.874, 7.85591, 0.59 ) }
    dend_27 { pt3dadd( -71.9136, 202.459, 7.76555, 0.44 ) }
    dend_27 { pt3dadd( -72.8253, 203.357, 7.73485, 0.88 ) }
    dend_27 { pt3dadd( -73.5632, 204.199, 7.75322, 1.03 ) }
    dend_27 { pt3dadd( -74.2414, 205.109, 7.79794, 0.74 ) }
    dend_27 { pt3dadd( -74.906, 206.128, 7.86196, 0.74 ) }
    dend_27 { pt3dadd( -75.5039, 207.116, 7.92656, 0.74 ) }
    dend_27 { pt3dadd( -76.0079, 207.93, 7.98134, 0.74 ) }
    dend_27 { pt3dadd( -76.6637, 209.0, 8.02868, 0.44 ) }
    dend_27 { pt3dadd( -77.246, 209.999, 8.06153, 0.66 ) }
    dend_27 { pt3dadd( -78.0587, 211.443, 8.0957, 0.81 ) }
    dend_27 { pt3dadd( -78.7442, 212.682, 8.12344, 0.81 ) }
    dend_27 { pt3dadd( -79.4893, 213.998, 8.15269, 0.66 ) }
    dend_27 { pt3dadd( -80.1667, 215.182, 8.19324, 0.66 ) }
    dend_27 { pt3dadd( -80.8725, 216.353, 8.28079, 0.66 ) }
    dend_27 { pt3dadd( -81.4428, 217.247, 8.33822, 0.74 ) }
    dend_27 { pt3dadd( -82.1142, 218.238, 8.36439, 0.74 ) }
    dend_27 { pt3dadd( -82.8469, 219.264, 8.33777, 0.59 ) }
    dend_27 { pt3dadd( -83.4501, 220.061, 8.25372, 0.81 ) }
    dend_27 { pt3dadd( -84.2081, 220.972, 8.07804, 0.59 ) }
    dend_27 { pt3dadd( -84.9566, 221.842, 7.82266, 0.74 ) }
    dend_27 { pt3dadd( -85.5839, 222.644, 7.55541, 0.81 ) }
    dend_27 { pt3dadd( -85.9012, 223.105, 7.39146, 0.81 ) }
    dend_27 { pt3dadd( -86.4501, 224.035, 7.12345, 0.81 ) }
    dend_27 { pt3dadd( -86.8032, 224.708, 6.98685, 0.81 ) }
    dend_27 { pt3dadd( -87.2172, 225.584, 6.90449, 0.59 ) }
    dend_27 { pt3dadd( -87.7601, 226.75, 6.93446, 0.59 ) }
    dend_27 { pt3dadd( -88.3412, 227.89, 7.04869, 0.66 ) }
    dend_27 { pt3dadd( -88.9708, 228.948, 7.25437, 0.66 ) }
    dend_27 { pt3dadd( -89.6509, 229.866, 7.57064, 0.59 ) }
    dend_27 { pt3dadd( -90.5201, 230.843, 8.05526, 0.81 ) }
    dend_27 { pt3dadd( -91.2763, 231.601, 8.49624, 0.81 ) }
    dend_27 { pt3dadd( -92.3651, 232.61, 9.14075, 0.52 ) }
    dend_27 { pt3dadd( -93.3022, 233.473, 9.67804, 0.52 ) }
    dend_27 { pt3dadd( -94.5882, 234.708, 10.2472, 0.74 ) }
    dend_27 { pt3dadd( -95.2824, 235.43, 10.4598, 0.74 ) }
    dend_27 { pt3dadd( -96.0444, 236.273, 10.564, 1.25 ) }
    dend_27 { pt3dadd( -96.6503, 236.969, 10.5349, 1.25 ) }
    dend_27 { pt3dadd( -97.4479, 237.862, 10.3146, 0.96 ) }
    dend_27 { pt3dadd( -98.5865, 239.054, 9.81095, 0.81 ) }
    dend_27 { pt3dadd( -99.3224, 239.715, 9.43212, 0.74 ) }
    dend_27 { pt3dadd( -100.173, 240.303, 9.03822, 0.52 ) }
    dend_27 { pt3dadd( -100.879, 240.648, 8.77587, 0.52 ) }
    dend_27 { pt3dadd( -102.453, 241.144, 8.27901, 0.44 ) }
    dend_27 { pt3dadd( -103.689, 241.334, 7.97014, 0.52 ) }
    dend_27 { pt3dadd( -104.881, 241.319, 7.75719, 0.66 ) }
    dend_27 { pt3dadd( -106.05, 241.142, 7.59522, 0.66 ) }
    dend_27 { pt3dadd( -107.044, 240.883, 7.47493, 0.66 ) }
    dend_27 { pt3dadd( -107.812, 240.618, 7.42257, 0.66 ) }
    dend_27 { pt3dadd( -108.469, 240.33, 7.40038, 0.52 ) }
    dend_27 { pt3dadd( -109.558, 239.803, 7.34894, 0.44 ) }
    dend_27 { pt3dadd( -110.441, 239.364, 7.28765, 0.37 ) }
    dend_27 { pt3dadd( -111.633, 238.74, 7.19568, 0.37 ) }
    dend_27 { pt3dadd( -112.553, 238.226, 7.11693, 0.37 ) }
    dend_27 { pt3dadd( -113.754, 237.472, 7.00215, 0.74 ) }
    dend_27 { pt3dadd( -114.556, 236.896, 6.91424, 0.74 ) }
    dend_27 { pt3dadd( -115.408, 236.184, 6.80108, 0.74 ) }
    dend_27 { pt3dadd( -116.17, 235.46, 6.69942, 0.44 ) }
    dend_27 { pt3dadd( -116.83, 234.79, 6.62037, 0.44 ) }
    dend_27 { pt3dadd( -117.349, 234.285, 6.60049, 0.66 ) }
    dend_27 { pt3dadd( -118.229, 233.472, 6.70765, 0.66 ) }
    dend_27 { pt3dadd( -118.992, 232.774, 6.84525, 0.52 ) }
    dend_27 { pt3dadd( -119.688, 232.12, 6.95164, 0.52 ) }
    dend_27 { pt3dadd( -120.3, 231.484, 7.01513, 0.52 ) }
    dend_27 { pt3dadd( -120.974, 230.649, 7.06, 0.66 ) }
    dend_27 { pt3dadd( -121.733, 229.45, 7.06132, 0.59 ) }
    dend_27 { pt3dadd( -122.281, 228.283, 7.00099, 0.37 ) }
    dend_27 { pt3dadd( -122.698, 227.178, 6.90824, 0.37 ) }
    dend_27 { pt3dadd( -123.039, 226.128, 6.75911, 0.29 ) }
    dend_27 { pt3dadd( -123.283, 225.281, 6.60704, 0.29 ) }
    dend_27 { pt3dadd( -123.627, 224.061, 6.31095, 0.44 ) }
    dend_27 { pt3dadd( -123.907, 223.225, 6.06046, 0.44 ) }
    dend_27 { pt3dadd( -124.292, 222.294, 5.81799, 0.66 ) }
    dend_27 { pt3dadd( -124.762, 221.408, 5.61054, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 82/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -70.7612, 113.94, 22.2148, 0.66 ) }
    dend_22 { pt3dadd( -69.6714, 114.635, 24.1325, 0.66 ) }
    dend_22 { pt3dadd( -69.0774, 115.091, 25.099, 0.66 ) }
    dend_22 { pt3dadd( -67.7024, 116.39, 27.3171, 0.66 ) }
    dend_22 { pt3dadd( -67.1554, 117.014, 28.2556, 0.66 ) }
    dend_22 { pt3dadd( -66.5094, 117.911, 29.4539, 0.44 ) }
    dend_22 { pt3dadd( -66.2602, 118.351, 29.9694, 0.44 ) }
    dend_22 { pt3dadd( -65.916, 118.945, 30.553, 0.74 ) }
    dend_22 { pt3dadd( -65.7041, 119.489, 30.9686, 0.74 ) }
    dend_22 { pt3dadd( -65.5863, 120.411, 31.3835, 0.66 ) }
    dend_22 { pt3dadd( -65.542, 121.026, 31.6429, 0.44 ) }
    dend_22 { pt3dadd( -65.4629, 121.868, 31.9885, 0.37 ) }
    dend_22 { pt3dadd( -65.3279, 122.45, 32.2802, 0.37 ) }
    dend_22 { pt3dadd( -64.9733, 123.168, 32.7947, 0.81 ) }
    dend_22 { pt3dadd( -64.7403, 123.535, 33.0547, 0.81 ) }
    dend_22 { pt3dadd( -64.2388, 124.245, 33.5088, 0.44 ) }
    dend_22 { pt3dadd( -63.8144, 124.892, 33.8863, 0.44 ) }
    dend_22 { pt3dadd( -63.4989, 125.536, 34.1995, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( -63.1389, 127.241, 34.7533, 0.52 ) }
    dend_22 { pt3dadd( -63.1606, 128.785, 35.0622, 0.81 ) }
    dend_22 { pt3dadd( -63.2656, 129.405, 35.1372, 0.81 ) }
    dend_22 { pt3dadd( -63.6654, 130.878, 35.2294, 0.52 ) }
    dend_22 { pt3dadd( -64.0784, 132.313, 35.26, 0.52 ) }
    dend_22 { pt3dadd( -64.5109, 133.832, 35.2671, 0.52 ) }
    dend_22 { pt3dadd( -64.7419, 134.717, 35.243, 0.81 ) }
    dend_22 { pt3dadd( -64.9516, 135.738, 35.2695, 0.81 ) }
    dend_22 { pt3dadd( -65.1489, 137.14, 35.33, 0.44 ) }
    dend_22 { pt3dadd( -65.2199, 138.493, 35.4021, 0.44 ) }
    dend_22 { pt3dadd( -65.192, 139.298, 35.4682, 0.44 ) }
    dend_22 { pt3dadd( -65.0756, 140.597, 35.6059, 0.44 ) }
    dend_22 { pt3dadd( -64.9549, 141.641, 35.7511, 0.74 ) }
    dend_22 { pt3dadd( -64.8832, 142.238, 35.854, 0.74 ) }
    dend_22 { pt3dadd( -64.8225, 142.936, 35.9937, 0.44 ) }
    dend_22 { pt3dadd( -64.7995, 143.85, 36.1797, 0.29 ) }
    dend_22 { pt3dadd( -64.7925, 144.792, 36.3764, 0.88 ) }
    dend_22 { pt3dadd( -64.7853, 145.727, 36.6013, 0.88 ) }
    dend_22 { pt3dadd( -64.7771, 146.386, 36.7408, 0.88 ) }
    dend_22 { pt3dadd( -64.764, 147.115, 36.8959, 0.66 ) }
    dend_22 { pt3dadd( -64.7461, 148.272, 37.12, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -70.7612, 113.94, 22.2148, 0.52 ) }
    dend_21 { pt3dadd( -71.7292, 114.298, 22.6841, 0.52 ) }
    dend_21 { pt3dadd( -72.7922, 114.845, 23.1717, 0.52 ) }
    dend_21 { pt3dadd( -73.6927, 115.427, 23.5687, 0.66 ) }
    dend_21 { pt3dadd( -74.8445, 116.338, 24.0538, 0.81 ) }
    dend_21 { pt3dadd( -75.3288, 116.79, 24.2479, 0.81 ) }
    dend_21 { pt3dadd( -76.2542, 117.788, 24.6006, 0.66 ) }
    dend_21 { pt3dadd( -76.9534, 118.751, 24.9165, 0.88 ) }
    dend_21 { pt3dadd( -77.3404, 119.386, 25.0852, 0.88 ) }
    dend_21 { pt3dadd( -77.8047, 120.224, 25.2446, 0.66 ) }
    dend_21 { pt3dadd( -78.2075, 121.021, 25.3776, 0.66 ) }
    dend_21 { pt3dadd( -78.5873, 121.826, 25.5313, 0.66 ) }
    dend_21 { pt3dadd( -79.0989, 123.018, 25.7962, 0.66 ) }
    dend_21 { pt3dadd( -79.3733, 123.738, 25.988, 0.59 ) }
    dend_21 { pt3dadd( -79.7413, 124.815, 26.3804, 0.52 ) }
    dend_21 { pt3dadd( -80.0112, 125.7, 26.8119, 0.52 ) }
    dend_21 { pt3dadd( -80.1983, 126.37, 27.2023, 0.44 ) }
    dend_21 { pt3dadd( -80.4517, 127.312, 27.82, 0.44 ) }
    dend_21 { pt3dadd( -80.6401, 128.077, 28.3451, 0.44 ) }
    dend_21 { pt3dadd( -80.9238, 129.318, 29.2245, 0.59 ) }
    dend_21 { pt3dadd( -81.1547, 130.345, 29.922, 0.74 ) }
    dend_21 { pt3dadd( -81.3001, 130.935, 30.2828, 0.59 ) }
    dend_21 { pt3dadd( -81.5697, 131.896, 30.8052, 0.81 ) }
    dend_21 { pt3dadd( -81.7193, 132.327, 30.9962, 0.81 ) }
    dend_21 { pt3dadd( -82.0593, 133.14, 31.2253, 0.81 ) }
    dend_21 { pt3dadd( -82.5601, 134.122, 31.3829, 0.37 ) }
    dend_21 { pt3dadd( -82.9177, 134.726, 31.449, 0.37 ) }
    dend_21 { pt3dadd( -83.394, 135.47, 31.4952, 0.37 ) }
    dend_21 { pt3dadd( -83.9435, 136.256, 31.5169, 0.37 ) }
    dend_21 { pt3dadd( -84.491, 136.968, 31.5083, 0.37 ) }
    dend_21 { pt3dadd( -85.4792, 138.057, 31.4741, 0.96 ) }
    dend_21 { pt3dadd( -86.0279, 138.577, 31.4814, 1.11 ) }
    dend_21 { pt3dadd( -87.0427, 139.464, 31.5006, 0.59 ) }
    dend_21 { pt3dadd( -87.781, 140.083, 31.5171, 0.52 ) }
    dend_21 { pt3dadd( -88.5567, 140.74, 31.5333, 0.52 ) }
    dend_21 { pt3dadd( -89.6392, 141.694, 31.5495, 0.66 ) }
    dend_21 { pt3dadd( -90.5912, 142.563, 31.5537, 1.25 ) }
    dend_21 { pt3dadd( -91.0263, 142.995, 31.5692, 1.4 ) }
    dend_21 { pt3dadd( -92.0854, 144.154, 31.6455, 0.52 ) }
    dend_21 { pt3dadd( -92.7344, 144.956, 31.6956, 0.52 ) }
    dend_21 { pt3dadd( -93.7646, 146.38, 31.7774, 0.52 ) }
    dend_21 { pt3dadd( -94.3294, 147.252, 31.7988, 0.52 ) }
    dend_21 { pt3dadd( -94.9584, 148.284, 31.7918, 0.52 ) }
    dend_21 { pt3dadd( -95.6358, 149.443, 31.817, 0.66 ) }
    dend_21 { pt3dadd( -96.0674, 150.236, 31.8544, 0.74 ) }
    dend_21 { pt3dadd( -96.6695, 151.377, 31.935, 0.88 ) }
    dend_21 { pt3dadd( -97.1802, 152.368, 32.0293, 0.37 ) }
    dend_21 { pt3dadd( -97.6356, 153.289, 32.1086, 0.29 ) }
    dend_21 { pt3dadd( -98.0942, 154.22, 32.1813, 0.37 ) }
    dend_21 { pt3dadd( -98.457, 154.995, 32.2326, 0.52 ) }
    dend_21 { pt3dadd( -98.6725, 155.443, 32.2429, 0.74 ) }
    dend_21 { pt3dadd( -99.0294, 156.13, 32.2795, 0.74 ) }
    dend_21 { pt3dadd( -99.5803, 156.986, 32.3434, 0.44 ) }
    dend_21 { pt3dadd( -100.103, 157.633, 32.3971, 0.44 ) }
    dend_21 { pt3dadd( -100.713, 158.287, 32.4484, 0.29 ) }
    dend_21 { pt3dadd( -101.305, 158.887, 32.5468, 0.29 ) }
    dend_21 { pt3dadd( -102.673, 160.304, 32.8693, 0.37 ) }
    dend_21 { pt3dadd( -103.423, 161.133, 33.106, 0.37 ) }
    dend_21 { pt3dadd( -104.21, 162.1, 33.4198, 0.37 ) }
    dend_21 { pt3dadd( -104.508, 162.51, 33.5443, 0.37 ) }
    dend_21 { pt3dadd( -105.071, 163.34, 33.7788, 0.29 ) }
    dend_21 { pt3dadd( -105.412, 163.847, 33.9024, 0.29 ) }
    dend_21 { pt3dadd( -105.791, 164.384, 33.9832, 0.29 ) }
    dend_21 { pt3dadd( -106.458, 165.274, 34.168, 0.29 ) }
    dend_21 { pt3dadd( -107.157, 166.094, 34.374, 0.37 ) }
    dend_21 { pt3dadd( -107.761, 166.694, 34.5436, 0.37 ) }
    dend_21 { pt3dadd( -108.657, 167.428, 34.7649, 0.37 ) }
    dend_21 { pt3dadd( -109.479, 167.993, 34.9896, 0.29 ) }
    dend_21 { pt3dadd( -110.549, 168.651, 35.3196, 0.29 ) }
    dend_21 { pt3dadd( -111.074, 168.948, 35.5221, 0.29 ) }
    dend_21 { pt3dadd( -111.947, 169.432, 35.9566, 0.88 ) }
    dend_21 { pt3dadd( -112.115, 168.805, 36.187, 1.18 ) }
    dend_21 { pt3dadd( -112.222, 168.307, 36.3517, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.7863, 27.688, 14.2997, 0.66 ) }
    dend_17 { pt3dadd( -15.6838, 26.5141, 15.0151, 0.66 ) }
    dend_17 { pt3dadd( -16.2998, 25.8107, 15.4992, 0.66 ) }
    dend_17 { pt3dadd( -16.7106, 25.4034, 15.7962, 0.88 ) }
    dend_17 { pt3dadd( -17.3909, 24.8446, 16.2044, 0.74 ) }
    dend_17 { pt3dadd( -17.9051, 24.4952, 16.4777, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_17 { pt3dadd( -18.5648, 24.1222, 16.7972, 1.18 ) }
    dend_17 { pt3dadd( -19.3531, 23.8527, 17.1594, 1.18 ) }
    dend_17 { pt3dadd( -19.8853, 23.7646, 17.3456, 1.18 ) }
    dend_17 { pt3dadd( -21.0671, 23.7328, 17.6568, 0.66 ) }
    dend_17 { pt3dadd( -21.7814, 23.7685, 17.8154, 0.59 ) }
    dend_17 { pt3dadd( -22.2833, 23.8017, 17.9216, 0.59 ) }
    dend_17 { pt3dadd( -23.2073, 23.8264, 18.0882, 0.52 ) }
    dend_17 { pt3dadd( -23.8527, 23.7913, 18.2009, 0.52 ) }
    dend_17 { pt3dadd( -24.6312, 23.712, 18.3685, 0.52 ) }
    dend_17 { pt3dadd( -25.8178, 23.5921, 18.6583, 0.52 ) }
    dend_17 { pt3dadd( -26.7342, 23.5127, 18.8889, 0.74 ) }
    dend_17 { pt3dadd( -27.7641, 23.4683, 19.1543, 0.44 ) }
    dend_17 { pt3dadd( -28.772, 23.4968, 19.4146, 0.44 ) }
    dend_17 { pt3dadd( -30.0111, 23.5895, 19.7368, 0.66 ) }
    dend_17 { pt3dadd( -30.8252, 23.7214, 19.9241, 0.81 ) }
    dend_17 { pt3dadd( -31.5256, 23.9094, 20.0352, 0.96 ) }
    dend_17 { pt3dadd( -31.9615, 24.0537, 20.0848, 0.96 ) }
    dend_17 { pt3dadd( -32.5139, 24.2502, 20.1087, 0.59 ) }
    dend_17 { pt3dadd( -32.996, 24.3978, 20.0869, 0.44 ) }
    dend_17 { pt3dadd( -33.6229, 24.5034, 20.0645, 0.44 ) }
    dend_17 { pt3dadd( -34.4723, 24.6112, 20.1044, 0.29 ) }
    dend_17 { pt3dadd( -35.0529, 24.6918, 20.1768, 0.29 ) }
    dend_17 { pt3dadd( -35.7392, 24.7935, 20.3084, 0.59 ) }
    dend_17 { pt3dadd( -36.1881, 24.8612, 20.4505, 0.59 ) }
    dend_17 { pt3dadd( -37.3823, 24.9807, 21.0521, 0.74 ) }
    dend_17 { pt3dadd( -38.107, 25.0753, 21.5232, 0.59 ) }
    dend_17 { pt3dadd( -38.7279, 25.1799, 22.0143, 0.59 ) }
    dend_17 { pt3dadd( -39.2546, 25.2798, 22.4831, 0.66 ) }
    dend_17 { pt3dadd( -39.9709, 25.4391, 23.1553, 0.66 ) }
    dend_17 { pt3dadd( -41.03, 25.7072, 24.1569, 0.96 ) }
    dend_17 { pt3dadd( -41.8784, 25.9066, 24.9183, 0.52 ) }
    dend_17 { pt3dadd( -42.4064, 25.9829, 25.3959, 0.52 ) }
    dend_17 { pt3dadd( -42.8638, 26.03, 25.8031, 0.59 ) }
    dend_17 { pt3dadd( -43.6605, 26.1234, 26.4573, 0.37 ) }
    dend_17 { pt3dadd( -44.1515, 26.1544, 26.7835, 0.37 ) }
    dend_17 { pt3dadd( -44.9171, 26.1207, 27.2062, 0.37 ) }
    dend_17 { pt3dadd( -45.8882, 25.9596, 27.7031, 0.59 ) }
    dend_17 { pt3dadd( -46.3627, 25.8768, 27.9148, 0.59 ) }
    dend_17 { pt3dadd( -46.7701, 25.814, 28.0749, 0.59 ) }
    dend_17 { pt3dadd( -47.7739, 25.7034, 28.3976, 0.29 ) }
    dend_17 { pt3dadd( -48.4979, 25.6729, 28.5727, 0.29 ) }
    dend_17 { pt3dadd( -48.9947, 25.6904, 28.6611, 0.59 ) }
    dend_17 { pt3dadd( -49.7971, 25.7579, 28.7677, 0.59 ) }
    dend_17 { pt3dadd( -50.4295, 25.8026, 28.847, 0.52 ) }
    dend_17 { pt3dadd( -51.2786, 25.8318, 28.9601, 0.52 ) }
    dend_17 { pt3dadd( -52.1024, 25.8217, 29.0888, 0.52 ) }
    dend_17 { pt3dadd( -52.7212, 25.7954, 29.1782, 0.52 ) }
    dend_17 { pt3dadd( -53.6524, 25.6919, 29.31, 0.74 ) }
    dend_17 { pt3dadd( -54.2831, 25.5684, 29.4115, 0.88 ) }
    dend_17 { pt3dadd( -54.7406, 25.4569, 29.4975, 0.88 ) }
    dend_17 { pt3dadd( -55.5227, 25.241, 29.6882, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.7863, 27.688, 14.2997, 1.18 ) }
    dend_12 { pt3dadd( -13.9992, 28.9451, 14.468, 1.18 ) }
    dend_12 { pt3dadd( -13.2237, 30.0824, 14.6121, 1.18 ) }
    dend_12 { pt3dadd( -12.4199, 31.1854, 14.7428, 1.18 ) }
    dend_12 { pt3dadd( -11.4763, 32.4461, 14.9422, 1.18 ) }
    dend_12 { pt3dadd( -10.5991, 33.6467, 15.1541, 1.03 ) }
    dend_12 { pt3dadd( -9.88995, 34.6925, 15.3423, 1.25 ) }
    dend_12 { pt3dadd( -9.46969, 35.3369, 15.4788, 1.25 ) }
    dend_12 { pt3dadd( -8.78348, 36.6002, 15.6088, 0.96 ) }
    dend_12 { pt3dadd( -8.23544, 37.9713, 15.6083, 1.55 ) }
    dend_12 { pt3dadd( -8.01431, 38.7896, 15.5203, 1.55 ) }
    dend_12 { pt3dadd( -7.80677, 40.2493, 15.2669, 1.25 ) }
    dend_12 { pt3dadd( -7.77008, 41.7343, 14.9523, 1.11 ) }
    dend_12 { pt3dadd( -8.10091, 45.2459, 14.1111, 0.81 ) }
    dend_12 { pt3dadd( -8.3407, 46.2729, 13.8269, 1.03 ) }
    dend_12 { pt3dadd( -8.72541, 47.2414, 13.5092, 1.03 ) }
    dend_12 { pt3dadd( -9.39634, 48.3705, 13.2118, 0.88 ) }
    dend_12 { pt3dadd( -10.2025, 49.2475, 13.1286, 0.88 ) }
    dend_12 { pt3dadd( -11.2155, 50.0337, 13.4441, 0.96 ) }
    dend_12 { pt3dadd( -11.9317, 50.5557, 13.9009, 0.96 ) }
    dend_12 { pt3dadd( -13.0151, 51.2629, 14.6621, 1.03 ) }
    dend_12 { pt3dadd( -14.7113, 52.3024, 16.0537, 1.25 ) }
    dend_12 { pt3dadd( -15.4881, 52.7846, 16.833, 1.18 ) }
    dend_12 { pt3dadd( -17.1591, 53.9744, 18.9628, 1.25 ) }
    dend_12 { pt3dadd( -17.8438, 54.5913, 20.1614, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -41.3438, 276.678, -52.0335, 0.22 ) }
    dend_7 { pt3dadd( -42.1634, 277.083, -51.9703, 0.22 ) }
    dend_7 { pt3dadd( -42.9583, 277.476, -51.909, 0.44 ) }
    dend_7 { pt3dadd( -43.6627, 277.824, -51.8547, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -41.3438, 276.678, -52.0335, 0.22 ) }
    dend_6 { pt3dadd( -42.8212, 276.525, -52.1865, 0.22 ) }
    dend_6 { pt3dadd( -44.1469, 276.387, -52.3238, 0.22 ) }
    dend_6 { pt3dadd( -45.1842, 276.279, -52.4312, 0.22 ) }
    dend_6 { pt3dadd( -45.6715, 276.228, -52.4817, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.6568, 190.802, -7.28522, 0.37 ) }
    dend_4 { pt3dadd( 12.8952, 191.864, -7.24347, 0.37 ) }
    dend_4 { pt3dadd( 13.1102, 192.577, -7.1934, 0.66 ) }
    dend_4 { pt3dadd( 13.3316, 193.29, -7.13565, 0.66 ) }
    dend_4 { pt3dadd( 13.6327, 194.328, -7.05155, 0.44 ) }
    dend_4 { pt3dadd( 13.8082, 195.013, -6.99526, 0.44 ) }
    dend_4 { pt3dadd( 14.1167, 196.445, -6.88066, 0.88 ) }
    dend_4 { pt3dadd( 14.147, 196.61, -6.86473, 1.03 ) }
    dend_4 { pt3dadd( 14.2726, 197.575, -6.77731, 0.66 ) }
    dend_4 { pt3dadd( 14.3475, 198.472, -6.71219, 0.88 ) }
    dend_4 { pt3dadd( 14.3604, 199.017, -6.68434, 0.88 ) }
    dend_4 { pt3dadd( 14.3418, 199.723, -6.66649, 0.66 ) }
    dend_4 { pt3dadd( 14.2698, 200.647, -6.66712, 0.37 ) }
    dend_4 { pt3dadd( 14.204, 201.331, -6.65411, 0.37 ) }
    dend_4 { pt3dadd( 14.0667, 202.517, -6.61455, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( 13.978, 203.253, -6.58275, 0.81 ) }
    dend_4 { pt3dadd( 13.8392, 204.581, -6.51858, 0.37 ) }
    dend_4 { pt3dadd( 13.7531, 205.433, -6.47551, 0.37 ) }
    dend_4 { pt3dadd( 13.6327, 206.596, -6.4178, 0.81 ) }
    dend_4 { pt3dadd( 13.5634, 207.182, -6.39334, 0.96 ) }
    dend_4 { pt3dadd( 13.4293, 208.303, -6.36365, 0.37 ) }
    dend_4 { pt3dadd( 13.3188, 209.259, -6.35796, 0.29 ) }
    dend_4 { pt3dadd( 13.1963, 210.355, -6.37443, 0.52 ) }
    dend_4 { pt3dadd( 13.0299, 211.711, -6.42232, 0.74 ) }
    dend_4 { pt3dadd( 12.9065, 212.523, -6.4661, 0.88 ) }
    dend_4 { pt3dadd( 12.7623, 213.342, -6.50879, 0.66 ) }
    dend_4 { pt3dadd( 12.5825, 214.326, -6.55674, 0.59 ) }
    dend_4 { pt3dadd( 12.4162, 215.288, -6.59688, 0.74 ) }
    dend_4 { pt3dadd( 12.2861, 216.173, -6.62545, 0.74 ) }
    dend_4 { pt3dadd( 12.1857, 217.263, -6.66528, 0.59 ) }
    dend_4 { pt3dadd( 12.1681, 218.057, -6.69323, 0.44 ) }
    dend_4 { pt3dadd( 12.2132, 219.226, -6.7373, 0.29 ) }
    dend_4 { pt3dadd( 12.3086, 220.077, -6.76914, 0.37 ) }
    dend_4 { pt3dadd( 12.5753, 221.499, -6.81828, 0.52 ) }
    dend_4 { pt3dadd( 12.8796, 222.747, -6.85651, 0.66 ) }
    dend_4 { pt3dadd( 13.1045, 223.601, -6.87954, 0.66 ) }
    dend_4 { pt3dadd( 13.2731, 224.331, -6.87149, 0.37 ) }
    dend_4 { pt3dadd( 13.4373, 225.181, -6.83391, 0.52 ) }
    dend_4 { pt3dadd( 13.6764, 226.376, -6.74591, 0.37 ) }
    dend_4 { pt3dadd( 13.9255, 227.595, -6.6209, 0.52 ) }
    dend_4 { pt3dadd( 14.0492, 228.357, -6.5268, 0.59 ) }
    dend_4 { pt3dadd( 14.2321, 229.938, -6.33592, 0.81 ) }
    dend_4 { pt3dadd( 14.2996, 230.947, -6.22623, 0.29 ) }
    dend_4 { pt3dadd( 14.2891, 231.696, -6.16051, 0.29 ) }
    dend_4 { pt3dadd( 14.2221, 232.39, -6.09923, 0.59 ) }
    dend_4 { pt3dadd( 14.0842, 233.293, -6.02421, 0.59 ) }
    dend_4 { pt3dadd( 13.821, 234.612, -5.93365, 0.44 ) }
    dend_4 { pt3dadd( 13.4662, 236.071, -5.86584, 0.29 ) }
    dend_4 { pt3dadd( 13.089, 237.4, -5.80209, 0.37 ) }
    dend_4 { pt3dadd( 12.8437, 238.188, -5.76387, 0.66 ) }
    dend_4 { pt3dadd( 12.5166, 239.246, -5.71319, 0.29 ) }
    dend_4 { pt3dadd( 12.123, 240.564, -5.65185, 0.29 ) }
    dend_4 { pt3dadd( 11.6231, 242.234, -5.57355, 0.29 ) }
    dend_4 { pt3dadd( 11.3588, 243.144, -5.53458, 0.44 ) }
    dend_4 { pt3dadd( 11.2914, 243.402, -5.52698, 0.44 ) }
    dend_4 { pt3dadd( 11.0705, 244.288, -5.52698, 0.22 ) }
    dend_4 { pt3dadd( 10.9439, 244.811, -5.52698, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.6568, 190.802, -7.28522, 0.52 ) }
    dend_3 { pt3dadd( 13.362, 190.354, -7.40535, 0.52 ) }
    dend_3 { pt3dadd( 13.8339, 190.005, -7.47988, 0.52 ) }
    dend_3 { pt3dadd( 14.4306, 189.572, -7.56439, 0.81 ) }
    dend_3 { pt3dadd( 14.9311, 189.234, -7.62497, 0.88 ) }
    dend_3 { pt3dadd( 15.7127, 188.752, -7.70398, 0.37 ) }
    dend_3 { pt3dadd( 16.5734, 188.22, -7.79098, 0.29 ) }
    dend_3 { pt3dadd( 17.6879, 187.503, -7.90477, 0.29 ) }
    dend_3 { pt3dadd( 18.2703, 187.147, -7.96075, 0.44 ) }
    dend_3 { pt3dadd( 19.2145, 186.601, -8.0373, 0.44 ) }
    dend_3 { pt3dadd( 20.275, 186.016, -8.08724, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 53/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -58.5302, -104.806, 8.89894, 0.74 ) }
    dend_34 { pt3dadd( -59.3815, -104.572, 9.82016, 0.74 ) }
    dend_34 { pt3dadd( -60.1238, -104.464, 10.6161, 0.88 ) }
    dend_34 { pt3dadd( -60.8135, -104.478, 11.3169, 1.03 ) }
    dend_34 { pt3dadd( -61.5408, -104.596, 12.0535, 0.88 ) }
    dend_34 { pt3dadd( -62.9299, -104.961, 13.4397, 1.03 ) }
    dend_34 { pt3dadd( -63.2254, -105.054, 13.7098, 1.03 ) }
    dend_34 { pt3dadd( -64.0008, -105.439, 14.3705, 0.81 ) }
    dend_34 { pt3dadd( -64.8698, -106.007, 15.017, 0.66 ) }
    dend_34 { pt3dadd( -65.4814, -106.551, 15.3828, 0.66 ) }
    dend_34 { pt3dadd( -65.9469, -107.055, 15.6314, 0.52 ) }
    dend_34 { pt3dadd( -66.7432, -108.008, 16.0057, 0.52 ) }
    dend_34 { pt3dadd( -67.356, -108.787, 16.3215, 0.52 ) }
    dend_34 { pt3dadd( -67.8923, -109.504, 16.6345, 0.52 ) }
    dend_34 { pt3dadd( -69.2031, -111.267, 17.4473, 0.52 ) }
    dend_34 { pt3dadd( -69.9793, -112.312, 17.9344, 0.52 ) }
    dend_34 { pt3dadd( -70.5911, -113.106, 18.3277, 0.52 ) }
    dend_34 { pt3dadd( -71.4179, -114.068, 18.853, 0.74 ) }
    dend_34 { pt3dadd( -71.957, -114.553, 19.1732, 0.96 ) }
    dend_34 { pt3dadd( -72.6669, -114.989, 19.527, 0.66 ) }
    dend_34 { pt3dadd( -73.1549, -115.175, 19.7146, 0.66 ) }
    dend_34 { pt3dadd( -74.1672, -115.452, 19.9992, 0.59 ) }
    dend_34 { pt3dadd( -75.4268, -115.682, 20.281, 0.44 ) }
    dend_34 { pt3dadd( -76.3683, -115.761, 20.458, 0.44 ) }
    dend_34 { pt3dadd( -77.3549, -115.778, 20.6145, 0.44 ) }
    dend_34 { pt3dadd( -78.2346, -115.76, 20.7516, 0.44 ) }
    dend_34 { pt3dadd( -79.2771, -115.731, 20.9031, 0.44 ) }
    dend_34 { pt3dadd( -79.8951, -115.704, 20.9875, 0.44 ) }
    dend_34 { pt3dadd( -80.8973, -115.665, 21.0742, 0.59 ) }
    dend_34 { pt3dadd( -81.4456, -115.648, 21.0878, 0.52 ) }
    dend_34 { pt3dadd( -82.3441, -115.627, 21.0868, 0.37 ) }
    dend_34 { pt3dadd( -83.3649, -115.64, 21.0631, 0.52 ) }
    dend_34 { pt3dadd( -83.9353, -115.685, 21.0379, 0.52 ) }
    dend_34 { pt3dadd( -85.1408, -115.822, 20.9195, 0.74 ) }
    dend_34 { pt3dadd( -85.9198, -115.912, 20.8044, 0.59 ) }
    dend_34 { pt3dadd( -86.5719, -115.963, 20.6962, 0.59 ) }
    dend_34 { pt3dadd( -87.2822, -115.981, 20.5505, 0.37 ) }
    dend_34 { pt3dadd( -87.9699, -115.988, 20.4026, 0.29 ) }
    dend_34 { pt3dadd( -88.9109, -116.009, 20.2261, 0.29 ) }
    dend_34 { pt3dadd( -89.5604, -116.009, 20.1338, 0.37 ) }
    dend_34 { pt3dadd( -90.0692, -116.024, 20.0746, 0.37 ) }
    dend_34 { pt3dadd( -90.7293, -116.067, 20.0187, 0.37 ) }
    dend_34 { pt3dadd( -91.4702, -116.145, 19.9491, 0.59 ) }
    dend_34 { pt3dadd( -92.0921, -116.264, 19.8895, 0.74 ) }
    dend_34 { pt3dadd( -92.4382, -116.36, 19.8444, 0.74 ) }
    dend_34 { pt3dadd( -93.1339, -116.579, 19.7101, 0.44 ) }
    dend_34 { pt3dadd( -93.9227, -116.803, 19.5276, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_34 { pt3dadd( -94.7672, -117.028, 19.3124, 0.74 ) }
    dend_34 { pt3dadd( -95.7453, -117.273, 19.0576, 0.29 ) }
    dend_34 { pt3dadd( -96.5621, -117.474, 18.8476, 0.29 ) }
    dend_34 { pt3dadd( -97.6841, -117.798, 18.5804, 0.37 ) }
    dend_34 { pt3dadd( -98.4181, -118.052, 18.3936, 0.37 ) }
    dend_34 { pt3dadd( -99.0932, -118.297, 18.2317, 0.29 ) }
    dend_34 { pt3dadd( -99.9528, -118.588, 18.0566, 0.29 ) }
    dend_34 { pt3dadd( -100.555, -118.751, 17.9509, 0.29 ) }
    dend_34 { pt3dadd( -101.354, -118.922, 17.8439, 0.29 ) }
    dend_34 { pt3dadd( -102.316, -119.084, 17.7581, 0.29 ) }
    dend_34 { pt3dadd( -103.32, -119.199, 17.6984, 0.29 ) }
    dend_34 { pt3dadd( -104.082, -119.213, 17.672, 0.29 ) }
    dend_34 { pt3dadd( -105.338, -119.134, 17.6292, 0.74 ) }
    dend_34 { pt3dadd( -106.113, -119.022, 17.608, 0.81 ) }
    dend_34 { pt3dadd( -107.136, -118.809, 17.5653, 0.29 ) }
    dend_34 { pt3dadd( -107.581, -118.719, 17.5465, 0.29 ) }
    dend_34 { pt3dadd( -108.408, -118.576, 17.471, 0.88 ) }
    dend_34 { pt3dadd( -109.009, -118.479, 17.3882, 1.03 ) }
    dend_34 { pt3dadd( -109.491, -118.4, 17.299, 0.52 ) }
    dend_34 { pt3dadd( -110.367, -118.254, 17.1148, 0.29 ) }
    dend_34 { pt3dadd( -111.377, -118.095, 16.9025, 0.29 ) }
    dend_34 { pt3dadd( -111.785, -118.036, 16.8372, 0.52 ) }
    dend_34 { pt3dadd( -112.182, -117.975, 16.7955, 0.52 ) }
    dend_34 { pt3dadd( -113.042, -117.813, 16.7413, 0.44 ) }
    dend_34 { pt3dadd( -113.806, -117.635, 16.6978, 0.59 ) }
    dend_34 { pt3dadd( -114.704, -117.364, 16.6597, 0.81 ) }
    dend_34 { pt3dadd( -115.302, -117.155, 16.628, 0.81 ) }
    dend_34 { pt3dadd( -116.104, -116.873, 16.5817, 0.81 ) }
    dend_34 { pt3dadd( -116.708, -116.664, 16.5356, 0.74 ) }
    dend_34 { pt3dadd( -117.627, -116.36, 16.4969, 0.66 ) }
    dend_34 { pt3dadd( -118.539, -116.092, 16.4665, 0.81 ) }
    dend_34 { pt3dadd( -119.219, -115.938, 16.4509, 0.81 ) }
    dend_34 { pt3dadd( -120.106, -115.813, 16.4447, 0.59 ) }
    dend_34 { pt3dadd( -121.045, -115.764, 16.4547, 0.44 ) }
    dend_34 { pt3dadd( -122.299, -115.797, 16.485, 0.37 ) }
    dend_34 { pt3dadd( -123.216, -115.881, 16.5491, 0.59 ) }
    dend_34 { pt3dadd( -124.018, -115.976, 16.6411, 0.66 ) }
    dend_34 { pt3dadd( -124.711, -116.054, 16.7398, 0.66 ) }
    dend_34 { pt3dadd( -125.11, -116.09, 16.8029, 0.59 ) }
    dend_34 { pt3dadd( -125.836, -116.119, 16.9219, 0.59 ) }
    dend_34 { pt3dadd( -126.728, -116.097, 17.0218, 0.29 ) }
    dend_34 { pt3dadd( -127.465, -116.063, 17.1495, 0.29 ) }
    dend_34 { pt3dadd( -128.036, -116.046, 17.2564, 0.29 ) }
    dend_34 { pt3dadd( -128.738, -116.062, 17.386, 0.81 ) }
    dend_34 { pt3dadd( -129.226, -116.117, 17.4831, 0.96 ) }
    dend_34 { pt3dadd( -129.84, -116.26, 17.6098, 0.96 ) }
    dend_34 { pt3dadd( -130.971, -116.668, 17.7461, 0.22 ) }
    dend_34 { pt3dadd( -131.236, -116.789, 17.7741, 0.44 ) }
    dend_34 { pt3dadd( -131.653, -117.004, 17.8328, 0.44 ) }
    dend_34 { pt3dadd( -132.262, -117.334, 17.9482, 0.59 ) }
    dend_34 { pt3dadd( -132.55, -117.483, 18.0131, 0.81 ) }
    dend_34 { pt3dadd( -133.661, -118.0, 18.3462, 0.22 ) }
    dend_34 { pt3dadd( -134.322, -118.255, 18.577, 0.81 ) }
    dend_34 { pt3dadd( -134.939, -118.457, 18.8078, 0.96 ) }
    dend_34 { pt3dadd( -135.444, -118.602, 19.0159, 0.96 ) }
    dend_34 { pt3dadd( -136.188, -118.783, 19.3396, 0.52 ) }
    dend_34 { pt3dadd( -137.69, -119.098, 20.0111, 1.92 ) }
    dend_34 { pt3dadd( -138.442, -119.233, 20.3836, 2.58 ) }
    dend_34 { pt3dadd( -139.106, -119.337, 20.6999, 2.73 ) }
    dend_34 { pt3dadd( -140.134, -119.493, 21.1514, 1.92 ) }
    dend_34 { pt3dadd( -141.268, -119.676, 21.5706, 1.11 ) }
    dend_34 { pt3dadd( -142.087, -119.819, 21.8267, 0.74 ) }
    dend_34 { pt3dadd( -143.175, -120.014, 22.065, 0.74 ) }
    dend_34 { pt3dadd( -144.049, -120.194, 22.1859, 1.18 ) }
    dend_34 { pt3dadd( -145.176, -120.445, 22.2652, 0.37 ) }
    dend_34 { pt3dadd( -146.329, -120.711, 22.2335, 0.44 ) }
    dend_34 { pt3dadd( -147.028, -120.892, 22.1587, 0.88 ) }
    dend_34 { pt3dadd( -147.848, -121.144, 22.022, 0.88 ) }
    dend_34 { pt3dadd( -148.746, -121.482, 21.8206, 0.81 ) }
    dend_34 { pt3dadd( -149.177, -121.671, 21.7269, 0.88 ) }
    dend_34 { pt3dadd( -149.709, -121.906, 21.6523, 0.74 ) }
    dend_34 { pt3dadd( -150.389, -122.191, 21.635, 0.44 ) }
    dend_34 { pt3dadd( -151.02, -122.419, 21.6958, 0.74 ) }
    dend_34 { pt3dadd( -151.921, -122.671, 21.898, 0.29 ) }
    dend_34 { pt3dadd( -152.326, -122.753, 22.0191, 0.29 ) }
    dend_34 { pt3dadd( -153.354, -122.938, 22.3648, 0.66 ) }
    dend_34 { pt3dadd( -153.795, -123.039, 22.5203, 0.66 ) }
    dend_34 { pt3dadd( -154.472, -123.208, 22.6841, 0.59 ) }
    dend_34 { pt3dadd( -154.921, -123.345, 22.7303, 0.37 ) }
    dend_34 { pt3dadd( -155.545, -123.566, 22.7212, 0.29 ) }
    dend_34 { pt3dadd( -156.259, -123.864, 22.6507, 0.29 ) }
    dend_34 { pt3dadd( -157.294, -124.357, 22.4799, 0.29 ) }
    dend_34 { pt3dadd( -158.538, -124.979, 22.2404, 0.29 ) }
    dend_34 { pt3dadd( -159.569, -125.505, 22.0282, 0.29 ) }
    dend_34 { pt3dadd( -160.314, -125.881, 21.8694, 0.22 ) }
    dend_34 { pt3dadd( -160.939, -126.168, 21.7344, 0.22 ) }
    dend_34 { pt3dadd( -160.939, -126.168, 21.7344, 0.52 ) }
    dend_34 { pt3dadd( -161.341, -126.287, 21.6707, 0.52 ) }
    dend_34 { pt3dadd( -162.132, -126.542, 21.679, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -58.5302, -104.806, 8.89894, 0.66 ) }
    dend_33 { pt3dadd( -58.9702, -106.511, 9.10666, 0.66 ) }
    dend_33 { pt3dadd( -59.2957, -107.913, 9.37248, 0.59 ) }
    dend_33 { pt3dadd( -59.4971, -108.717, 9.55357, 0.74 ) }
    dend_33 { pt3dadd( -59.7891, -109.699, 9.79419, 0.37 ) }
    dend_33 { pt3dadd( -60.0558, -110.423, 9.98546, 0.59 ) }
    dend_33 { pt3dadd( -60.4958, -111.44, 10.3013, 0.52 ) }
    dend_33 { pt3dadd( -60.9123, -112.268, 10.6141, 0.59 ) }
    dend_33 { pt3dadd( -61.3279, -113.018, 10.9127, 0.29 ) }
    dend_33 { pt3dadd( -61.6747, -113.639, 11.1423, 0.29 ) }
    dend_33 { pt3dadd( -62.1055, -114.453, 11.3833, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_33 { pt3dadd( -62.6204, -115.617, 11.5935, 0.52 ) }
    dend_33 { pt3dadd( -63.0092, -116.754, 11.6924, 0.52 ) }
    dend_33 { pt3dadd( -63.2329, -117.688, 11.7772, 0.74 ) }
    dend_33 { pt3dadd( -63.4145, -118.627, 11.8842, 0.59 ) }
    dend_33 { pt3dadd( -63.6354, -119.828, 12.0373, 0.52 ) }
    dend_33 { pt3dadd( -63.8438, -120.895, 12.1945, 0.44 ) }
    dend_33 { pt3dadd( -64.0593, -121.702, 12.338, 0.44 ) }
    dend_33 { pt3dadd( -64.6621, -123.271, 12.7585, 0.66 ) }
    dend_33 { pt3dadd( -65.1147, -124.151, 13.056, 0.29 ) }
    dend_33 { pt3dadd( -65.4734, -124.707, 13.2684, 0.29 ) }
    dend_33 { pt3dadd( -65.8396, -125.212, 13.4641, 0.29 ) }
    dend_33 { pt3dadd( -66.2742, -125.798, 13.674, 0.66 ) }
    dend_33 { pt3dadd( -66.6173, -126.298, 13.8279, 0.88 ) }
    dend_33 { pt3dadd( -66.94, -126.845, 13.9533, 0.88 ) }
    dend_33 { pt3dadd( -67.4119, -127.836, 14.1431, 0.59 ) }
    dend_33 { pt3dadd( -67.7904, -128.759, 14.2728, 0.52 ) }
    dend_33 { pt3dadd( -68.0032, -129.319, 14.3249, 0.52 ) }
    dend_33 { pt3dadd( -68.3689, -130.311, 14.3486, 0.74 ) }
    dend_33 { pt3dadd( -68.6641, -131.057, 14.3288, 0.88 ) }
    dend_33 { pt3dadd( -68.9748, -131.761, 14.293, 0.74 ) }
    dend_33 { pt3dadd( -69.4041, -132.7, 14.2332, 0.44 ) }
    dend_33 { pt3dadd( -69.7244, -133.396, 14.1903, 0.66 ) }
    dend_33 { pt3dadd( -70.2938, -134.704, 14.1252, 0.44 ) }
    dend_33 { pt3dadd( -70.5766, -135.405, 14.1012, 0.44 ) }
    dend_33 { pt3dadd( -70.8755, -136.193, 14.1081, 0.74 ) }
    dend_33 { pt3dadd( -71.1774, -137.018, 14.1499, 0.74 ) }
    dend_33 { pt3dadd( -71.5283, -137.992, 14.2244, 0.74 ) }
    dend_33 { pt3dadd( -72.0256, -139.348, 14.3426, 0.52 ) }
    dend_33 { pt3dadd( -72.4923, -140.569, 14.4646, 0.66 ) }
    dend_33 { pt3dadd( -72.9176, -141.586, 14.5471, 0.66 ) }
    dend_33 { pt3dadd( -73.2752, -142.354, 14.6006, 0.74 ) }
    dend_33 { pt3dadd( -73.6997, -143.151, 14.6094, 0.52 ) }
    dend_33 { pt3dadd( -74.1878, -144.001, 14.5667, 0.29 ) }
    dend_33 { pt3dadd( -74.4567, -144.464, 14.5177, 0.29 ) }
    dend_33 { pt3dadd( -74.7432, -144.978, 14.4335, 0.29 ) }
    dend_33 { pt3dadd( -75.0605, -145.588, 14.3097, 0.59 ) }
    dend_33 { pt3dadd( -75.7637, -147.007, 14.0104, 0.66 ) }
    dend_33 { pt3dadd( -76.1124, -147.816, 13.8717, 0.52 ) }
    dend_33 { pt3dadd( -76.4038, -148.622, 13.822, 0.96 ) }
    dend_33 { pt3dadd( -76.6537, -149.477, 13.7636, 0.66 ) }
    dend_33 { pt3dadd( -76.9264, -150.669, 13.7649, 0.44 ) }
    dend_33 { pt3dadd( -77.0393, -151.347, 13.8583, 0.44 ) }
    dend_33 { pt3dadd( -77.1042, -152.443, 14.278, 0.44 ) }
    dend_33 { pt3dadd( -77.0035, -153.733, 14.9587, 0.66 ) }
    dend_33 { pt3dadd( -76.6894, -155.368, 15.9548, 0.96 ) }
    dend_33 { pt3dadd( -76.3134, -156.699, 16.8149, 0.81 ) }
    dend_33 { pt3dadd( -75.9101, -157.921, 17.5975, 0.88 ) }
    dend_33 { pt3dadd( -75.5138, -159.147, 18.3267, 0.66 ) }
    dend_33 { pt3dadd( -75.2632, -160.129, 18.8468, 0.66 ) }
    dend_33 { pt3dadd( -75.1306, -160.977, 19.2148, 0.59 ) }
    dend_33 { pt3dadd( -75.0856, -161.817, 19.5458, 0.44 ) }
    dend_33 { pt3dadd( -75.0975, -162.597, 19.7262, 0.81 ) }
    dend_33 { pt3dadd( -75.1357, -163.304, 19.8162, 0.81 ) }
    dend_33 { pt3dadd( -75.2268, -164.366, 19.9045, 0.44 ) }
    dend_33 { pt3dadd( -75.3559, -165.285, 19.986, 0.44 ) }
    dend_33 { pt3dadd( -75.5052, -166.227, 20.0786, 0.66 ) }
    dend_33 { pt3dadd( -75.691, -167.356, 20.207, 0.59 ) }
    dend_33 { pt3dadd( -75.7859, -168.262, 20.3078, 0.52 ) }
    dend_33 { pt3dadd( -75.7877, -168.682, 20.3449, 0.74 ) }
    dend_33 { pt3dadd( -75.6272, -170.437, 20.4766, 0.29 ) }
    dend_33 { pt3dadd( -75.5247, -171.071, 20.5197, 0.29 ) }
    dend_33 { pt3dadd( -75.3246, -172.051, 20.5733, 0.29 ) }
    dend_33 { pt3dadd( -75.0058, -173.547, 20.644, 0.52 ) }
    dend_33 { pt3dadd( -74.6314, -175.172, 20.7139, 0.37 ) }
    dend_33 { pt3dadd( -74.3931, -176.076, 20.7571, 0.59 ) }
    dend_33 { pt3dadd( -74.1902, -176.748, 20.8221, 0.59 ) }
    dend_33 { pt3dadd( -73.9143, -177.645, 20.9746, 0.44 ) }
    dend_33 { pt3dadd( -73.6128, -178.583, 21.233, 0.44 ) }
    dend_33 { pt3dadd( -73.4521, -179.112, 21.4287, 0.81 ) }
    dend_33 { pt3dadd( -73.2636, -179.693, 21.6777, 0.81 ) }
    dend_33 { pt3dadd( -72.865, -180.823, 22.1518, 0.59 ) }
    dend_33 { pt3dadd( -72.5633, -181.665, 22.4872, 0.52 ) }
    dend_33 { pt3dadd( -72.261, -182.492, 22.8276, 0.52 ) }
    dend_33 { pt3dadd( -71.972, -183.413, 23.1973, 0.52 ) }
    dend_33 { pt3dadd( -71.8493, -184.043, 23.4115, 0.29 ) }
    dend_33 { pt3dadd( -71.8075, -184.77, 23.6018, 0.29 ) }
    dend_33 { pt3dadd( -71.8458, -185.473, 23.744, 0.52 ) }
    dend_33 { pt3dadd( -71.9318, -186.237, 23.8903, 0.52 ) }
    dend_33 { pt3dadd( -72.0578, -187.341, 24.1357, 0.29 ) }
    dend_33 { pt3dadd( -72.1578, -188.411, 24.4354, 0.29 ) }
    dend_33 { pt3dadd( -72.216, -189.252, 24.6793, 0.52 ) }
    dend_33 { pt3dadd( -72.2489, -189.848, 24.8463, 0.52 ) }
    dend_33 { pt3dadd( -72.3133, -190.762, 25.0971, 0.29 ) }
    dend_33 { pt3dadd( -72.3969, -191.723, 25.3441, 0.52 ) }
    dend_33 { pt3dadd( -72.4558, -192.211, 25.4841, 0.52 ) }
    dend_33 { pt3dadd( -72.5906, -193.19, 25.8015, 0.52 ) }
    dend_33 { pt3dadd( -72.7568, -194.281, 26.2059, 0.74 ) }
    dend_33 { pt3dadd( -73.0323, -195.755, 26.7671, 0.22 ) }
    dend_33 { pt3dadd( -73.2622, -196.747, 27.1536, 0.22 ) }
    dend_33 { pt3dadd( -73.5069, -197.679, 27.5202, 0.22 ) }
    dend_33 { pt3dadd( -73.7519, -198.671, 27.9355, 0.52 ) }
    dend_33 { pt3dadd( -73.9208, -199.587, 28.3823, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -60.7512, 22.8921, -8.87272, 0.81 ) }
    dend_30 { pt3dadd( -61.9961, 23.2533, -8.64181, 0.81 ) }
    dend_30 { pt3dadd( -62.7796, 23.4157, -8.49791, 0.81 ) }
    dend_30 { pt3dadd( -64.0584, 23.6321, -8.27518, 0.74 ) }
    dend_30 { pt3dadd( -64.7681, 23.7673, -8.15913, 0.74 ) }
    dend_30 { pt3dadd( -65.4119, 23.9144, -8.06016, 0.81 ) }
    dend_30 { pt3dadd( -66.4876, 24.2242, -7.90595, 0.96 ) }
    dend_30 { pt3dadd( -67.1673, 24.4762, -7.80342, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_30 { pt3dadd( -67.6803, 24.7277, -7.73507, 0.52 ) }
    dend_30 { pt3dadd( -68.517, 25.351, -7.71457, 0.74 ) }
    dend_30 { pt3dadd( -68.9828, 25.8306, -7.76462, 0.74 ) }
    dend_30 { pt3dadd( -69.5638, 26.582, -7.90465, 0.44 ) }
    dend_30 { pt3dadd( -70.1047, 27.3989, -8.08475, 0.44 ) }
    dend_30 { pt3dadd( -70.507, 28.0067, -8.23698, 0.44 ) }
    dend_30 { pt3dadd( -71.3408, 29.1461, -8.55564, 0.81 ) }
    dend_30 { pt3dadd( -71.8097, 29.6882, -8.733, 0.96 ) }
    dend_30 { pt3dadd( -72.5372, 30.3586, -8.99505, 0.96 ) }
    dend_30 { pt3dadd( -73.0886, 30.7486, -9.1738, 0.88 ) }
    dend_30 { pt3dadd( -73.8934, 31.1646, -9.38849, 0.96 ) }
    dend_30 { pt3dadd( -74.6702, 31.4433, -9.54493, 1.11 ) }
    dend_30 { pt3dadd( -75.2397, 31.5785, -9.62049, 1.11 ) }
    dend_30 { pt3dadd( -75.828, 31.6773, -9.67752, 1.11 ) }
    dend_30 { pt3dadd( -76.355, 31.7293, -9.70434, 0.74 ) }
    dend_30 { pt3dadd( -76.9796, 31.7537, -9.71618, 0.29 ) }
    dend_30 { pt3dadd( -77.8893, 31.7432, -9.67475, 0.29 ) }
    dend_30 { pt3dadd( -78.6871, 31.7373, -9.5976, 0.88 ) }
    dend_30 { pt3dadd( -79.3009, 31.7568, -9.49867, 1.03 ) }
    dend_30 { pt3dadd( -79.9769, 31.8037, -9.34551, 1.03 ) }
    dend_30 { pt3dadd( -80.6493, 31.8572, -9.16708, 1.11 ) }
    dend_30 { pt3dadd( -81.8037, 31.975, -8.81837, 0.37 ) }
    dend_30 { pt3dadd( -82.6483, 32.0753, -8.55074, 0.29 ) }
    dend_30 { pt3dadd( -83.6043, 32.1857, -8.27581, 0.29 ) }
    dend_30 { pt3dadd( -84.3922, 32.2664, -8.08934, 0.96 ) }
    dend_30 { pt3dadd( -85.1439, 32.3249, -7.92926, 1.18 ) }
    dend_30 { pt3dadd( -85.5366, 32.3265, -7.85896, 1.33 ) }
    dend_30 { pt3dadd( -86.6753, 32.2281, -7.7003, 0.44 ) }
    dend_30 { pt3dadd( -87.9199, 32.0174, -7.53716, 0.44 ) }
    dend_30 { pt3dadd( -88.5329, 31.8909, -7.46626, 0.37 ) }
    dend_30 { pt3dadd( -89.0458, 31.8017, -7.41113, 0.37 ) }
    dend_30 { pt3dadd( -90.0026, 31.6991, -7.30172, 0.37 ) }
    dend_30 { pt3dadd( -90.7681, 31.6845, -7.21001, 0.59 ) }
    dend_30 { pt3dadd( -91.4909, 31.7487, -7.11588, 0.74 ) }
    dend_30 { pt3dadd( -92.3652, 31.8791, -7.00153, 0.88 ) }
    dend_30 { pt3dadd( -93.0964, 32.041, -6.90633, 0.88 ) }
    dend_30 { pt3dadd( -93.7165, 32.2234, -6.81256, 0.74 ) }
    dend_30 { pt3dadd( -94.6054, 32.5414, -6.65972, 0.29 ) }
    dend_30 { pt3dadd( -95.0845, 32.7242, -6.54024, 0.22 ) }
    dend_30 { pt3dadd( -96.0885, 33.1025, -6.23605, 0.22 ) }
    dend_30 { pt3dadd( -97.0816, 33.4479, -5.87918, 0.59 ) }
    dend_30 { pt3dadd( -97.7304, 33.6501, -5.62605, 0.81 ) }
    dend_30 { pt3dadd( -98.6971, 33.9271, -5.23599, 0.81 ) }
    dend_30 { pt3dadd( -99.9072, 34.2221, -4.71686, 0.96 ) }
    dend_30 { pt3dadd( -100.819, 34.4314, -4.33084, 0.59 ) }
    dend_30 { pt3dadd( -101.645, 34.6573, -4.00129, 0.22 ) }
    dend_30 { pt3dadd( -102.321, 34.8494, -3.76524, 0.22 ) }
    dend_30 { pt3dadd( -102.874, 35.0472, -3.58132, 0.44 ) }
    dend_30 { pt3dadd( -103.743, 35.4519, -3.30303, 0.59 ) }
    dend_30 { pt3dadd( -104.529, 35.8687, -3.07482, 0.52 ) }
    dend_30 { pt3dadd( -105.694, 36.5179, -2.73313, 0.66 ) }
    dend_30 { pt3dadd( -106.322, 36.8632, -2.56463, 0.66 ) }
    dend_30 { pt3dadd( -107.598, 37.5206, -2.25835, 0.66 ) }
    dend_30 { pt3dadd( -108.393, 37.9017, -2.08731, 0.59 ) }
    dend_30 { pt3dadd( -109.114, 38.1918, -2.00321, 0.44 ) }
    dend_30 { pt3dadd( -110.031, 38.42, -1.96623, 0.37 ) }
    dend_30 { pt3dadd( -110.858, 38.4938, -1.96854, 0.29 ) }
    dend_30 { pt3dadd( -111.483, 38.474, -1.99126, 0.29 ) }
    dend_30 { pt3dadd( -112.116, 38.3905, -2.03723, 0.44 ) }
    dend_30 { pt3dadd( -113.421, 38.1786, -2.11955, 0.59 ) }
    dend_30 { pt3dadd( -113.832, 38.1262, -2.13848, 0.59 ) }
    dend_30 { pt3dadd( -115.066, 38.0017, -2.15009, 0.37 ) }
    dend_30 { pt3dadd( -116.095, 37.9039, -2.13532, 0.29 ) }
    dend_30 { pt3dadd( -116.755, 37.8527, -2.11889, 0.29 ) }
    dend_30 { pt3dadd( -117.085, 37.8361, -2.09683, 0.29 ) }
    dend_30 { pt3dadd( -117.978, 37.8201, -1.97826, 0.59 ) }
    dend_30 { pt3dadd( -118.435, 37.821, -1.9186, 0.59 ) }
    dend_30 { pt3dadd( -118.895, 37.8518, -1.869, 0.52 ) }
    dend_30 { pt3dadd( -119.444, 37.9387, -1.79834, 0.66 ) }
    dend_30 { pt3dadd( -120.394, 38.1203, -1.65558, 0.29 ) }
    dend_30 { pt3dadd( -120.826, 38.1859, -1.57896, 0.29 ) }
    dend_30 { pt3dadd( -121.334, 38.2281, -1.46175, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 72/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -60.7512, 22.8921, -8.87272, 0.74 ) }
    dend_29 { pt3dadd( -60.7804, 24.0029, -8.94156, 0.74 ) }
    dend_29 { pt3dadd( -60.836, 25.3401, -9.0473, 0.74 ) }
    dend_29 { pt3dadd( -60.9539, 26.9628, -9.18869, 0.74 ) }
    dend_29 { pt3dadd( -61.0835, 27.9094, -9.3043, 0.74 ) }
    dend_29 { pt3dadd( -61.5139, 29.9974, -9.58657, 0.88 ) }
    dend_29 { pt3dadd( -61.7669, 30.9503, -9.72848, 0.88 ) }
    dend_29 { pt3dadd( -62.0781, 31.7978, -9.90202, 0.96 ) }
    dend_29 { pt3dadd( -62.5215, 32.7338, -10.1333, 0.81 ) }
    dend_29 { pt3dadd( -63.4485, 34.3415, -10.5767, 0.74 ) }
    dend_29 { pt3dadd( -64.2367, 35.6111, -10.9899, 0.96 ) }
    dend_29 { pt3dadd( -64.8685, 36.5874, -11.3423, 0.96 ) }
    dend_29 { pt3dadd( -65.6337, 37.8011, -11.8093, 0.81 ) }
    dend_29 { pt3dadd( -66.1924, 38.768, -12.2128, 0.74 ) }
    dend_29 { pt3dadd( -66.5612, 39.5153, -12.5462, 0.74 ) }
    dend_29 { pt3dadd( -67.1451, 40.9406, -13.1867, 0.74 ) }
    dend_29 { pt3dadd( -67.4608, 41.8021, -13.5807, 0.88 ) }
    dend_29 { pt3dadd( -67.7711, 42.6272, -13.9274, 0.88 ) }
    dend_29 { pt3dadd( -68.09, 43.392, -14.209, 0.66 ) }
    dend_29 { pt3dadd( -68.4844, 44.1712, -14.4978, 0.66 ) }
    dend_29 { pt3dadd( -68.972, 44.9777, -14.7858, 0.81 ) }
    dend_29 { pt3dadd( -69.5183, 45.7509, -15.045, 0.81 ) }
    dend_29 { pt3dadd( -70.2432, 46.7019, -15.4243, 0.66 ) }
    dend_29 { pt3dadd( -70.7841, 47.3665, -15.6974, 0.81 ) }
    dend_29 { pt3dadd( -71.4066, 48.1178, -16.0281, 0.81 ) }
    dend_29 { pt3dadd( -71.868, 48.7342, -16.3131, 0.59 ) }
    dend_29 { pt3dadd( -72.13, 49.1781, -16.512, 0.59 ) }
    dend_29 { pt3dadd( -72.5675, 50.1171, -16.8699, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_29 { pt3dadd( -72.8987, 51.015, -17.1302, 0.59 ) }
    dend_29 { pt3dadd( -73.1772, 51.8463, -17.3463, 0.74 ) }
    dend_29 { pt3dadd( -73.473, 52.7052, -17.5856, 0.88 ) }
    dend_29 { pt3dadd( -73.9416, 53.8567, -17.9512, 1.25 ) }
    dend_29 { pt3dadd( -74.4213, 54.8352, -18.31, 0.66 ) }
    dend_29 { pt3dadd( -74.9087, 55.6798, -18.6571, 0.66 ) }
    dend_29 { pt3dadd( -75.7583, 56.9443, -19.2793, 0.81 ) }
    dend_29 { pt3dadd( -76.4627, 57.816, -19.7561, 0.81 ) }
    dend_29 { pt3dadd( -77.1483, 58.5127, -20.1862, 0.96 ) }
    dend_29 { pt3dadd( -77.8178, 59.0747, -20.5452, 0.66 ) }
    dend_29 { pt3dadd( -78.5279, 59.5898, -20.8448, 0.52 ) }
    dend_29 { pt3dadd( -79.5969, 60.294, -21.1639, 0.52 ) }
    dend_29 { pt3dadd( -80.4884, 60.8506, -21.3123, 1.11 ) }
    dend_29 { pt3dadd( -81.0736, 61.2376, -21.341, 1.33 ) }
    dend_29 { pt3dadd( -81.9224, 61.8626, -21.3056, 0.66 ) }
    dend_29 { pt3dadd( -82.698, 62.5058, -21.2191, 0.52 ) }
    dend_29 { pt3dadd( -83.2437, 63.015, -21.1345, 0.66 ) }
    dend_29 { pt3dadd( -83.5288, 63.3231, -21.0801, 0.66 ) }
    dend_29 { pt3dadd( -84.289, 64.2661, -20.9617, 0.44 ) }
    dend_29 { pt3dadd( -84.8672, 65.0927, -20.8953, 0.81 ) }
    dend_29 { pt3dadd( -85.2681, 65.7418, -20.8868, 0.81 ) }
    dend_29 { pt3dadd( -85.8132, 66.6963, -20.9141, 0.88 ) }
    dend_29 { pt3dadd( -86.3974, 67.7516, -20.9754, 0.88 ) }
    dend_29 { pt3dadd( -87.0066, 68.8313, -21.0654, 0.59 ) }
    dend_29 { pt3dadd( -87.464, 69.6003, -21.1527, 0.81 ) }
    dend_29 { pt3dadd( -88.1138, 70.6124, -21.2769, 0.96 ) }
    dend_29 { pt3dadd( -88.5979, 71.2766, -21.3499, 0.96 ) }
    dend_29 { pt3dadd( -89.1453, 71.9716, -21.4411, 0.96 ) }
    dend_29 { pt3dadd( -90.0665, 73.137, -21.5947, 0.96 ) }
    dend_29 { pt3dadd( -90.8656, 74.204, -21.7191, 0.88 ) }
    dend_29 { pt3dadd( -91.4969, 75.1334, -21.8339, 0.88 ) }
    dend_29 { pt3dadd( -92.3773, 76.6526, -22.0636, 0.81 ) }
    dend_29 { pt3dadd( -92.9483, 77.8685, -22.2783, 0.52 ) }
    dend_29 { pt3dadd( -93.3052, 78.9074, -22.4907, 0.74 ) }
    dend_29 { pt3dadd( -93.5183, 79.9278, -22.7292, 0.74 ) }
    dend_29 { pt3dadd( -93.6288, 80.8976, -22.9856, 0.88 ) }
    dend_29 { pt3dadd( -93.7077, 82.0053, -23.2924, 0.66 ) }
    dend_29 { pt3dadd( -93.7712, 82.9416, -23.5675, 0.88 ) }
    dend_29 { pt3dadd( -93.9005, 83.8005, -23.846, 0.88 ) }
    dend_29 { pt3dadd( -94.1686, 84.6732, -24.1882, 0.66 ) }
    dend_29 { pt3dadd( -94.6415, 85.6073, -24.6029, 0.66 ) }
    dend_29 { pt3dadd( -95.2256, 86.4096, -24.9752, 0.96 ) }
    dend_29 { pt3dadd( -95.7369, 86.9638, -25.2051, 0.96 ) }
    dend_29 { pt3dadd( -96.4562, 87.6549, -25.4648, 0.74 ) }
    dend_29 { pt3dadd( -97.2792, 88.4599, -25.696, 0.66 ) }
    dend_29 { pt3dadd( -97.7505, 88.9711, -25.7923, 0.66 ) }
    dend_29 { pt3dadd( -98.3116, 89.6478, -25.8713, 0.66 ) }
    dend_29 { pt3dadd( -99.212, 90.8455, -25.9739, 1.03 ) }
    dend_29 { pt3dadd( -99.6524, 91.5146, -26.0135, 1.03 ) }
    dend_29 { pt3dadd( -100.435, 92.8303, -26.1299, 0.74 ) }
    dend_29 { pt3dadd( -101.296, 94.3962, -26.3796, 0.88 ) }
    dend_29 { pt3dadd( -101.844, 95.3694, -26.5865, 0.74 ) }
    dend_29 { pt3dadd( -102.508, 96.4653, -26.8771, 0.96 ) }
    dend_29 { pt3dadd( -103.412, 97.8069, -27.2967, 0.59 ) }
    dend_29 { pt3dadd( -104.454, 99.2257, -27.7893, 0.52 ) }
    dend_29 { pt3dadd( -105.161, 100.139, -28.1476, 0.66 ) }
    dend_29 { pt3dadd( -106.056, 101.349, -28.6523, 0.81 ) }
    dend_29 { pt3dadd( -106.605, 102.168, -28.9984, 1.03 ) }
    dend_29 { pt3dadd( -107.141, 103.043, -29.3239, 0.74 ) }
    dend_29 { pt3dadd( -107.454, 103.578, -29.4764, 0.96 ) }
    dend_29 { pt3dadd( -107.911, 104.408, -29.6107, 0.96 ) }
    dend_29 { pt3dadd( -108.504, 105.512, -29.7128, 0.59 ) }
    dend_29 { pt3dadd( -108.92, 106.32, -29.7652, 0.59 ) }
    dend_29 { pt3dadd( -109.553, 107.491, -29.8065, 0.74 ) }
    dend_29 { pt3dadd( -110.124, 108.418, -29.8177, 0.81 ) }
    dend_29 { pt3dadd( -110.893, 109.424, -29.8031, 0.96 ) }
    dend_29 { pt3dadd( -111.728, 110.312, -29.7611, 1.18 ) }
    dend_29 { pt3dadd( -112.631, 111.111, -29.7025, 0.59 ) }
    dend_29 { pt3dadd( -113.382, 111.717, -29.7122, 0.66 ) }
    dend_29 { pt3dadd( -114.107, 112.282, -29.7895, 0.66 ) }
    dend_29 { pt3dadd( -115.176, 113.121, -29.9691, 0.52 ) }
    dend_29 { pt3dadd( -115.908, 113.716, -30.1353, 0.81 ) }
    dend_29 { pt3dadd( -116.727, 114.384, -30.3503, 0.81 ) }
    dend_29 { pt3dadd( -118.357, 115.656, -30.8065, 0.88 ) }
    dend_29 { pt3dadd( -119.226, 116.299, -31.0686, 0.59 ) }
    dend_29 { pt3dadd( -120.056, 116.871, -31.3317, 0.81 ) }
    dend_29 { pt3dadd( -120.946, 117.453, -31.624, 0.81 ) }
    dend_29 { pt3dadd( -122.059, 118.143, -31.979, 0.81 ) }
    dend_29 { pt3dadd( -122.726, 118.541, -32.1654, 0.81 ) }
    dend_29 { pt3dadd( -123.574, 119.018, -32.3297, 0.74 ) }
    dend_29 { pt3dadd( -124.416, 119.501, -32.5091, 0.59 ) }
    dend_29 { pt3dadd( -125.23, 120.026, -32.6956, 0.59 ) }
    dend_29 { pt3dadd( -125.994, 120.638, -32.884, 0.74 ) }
    dend_29 { pt3dadd( -126.834, 121.542, -33.118, 0.81 ) }
    dend_29 { pt3dadd( -127.385, 122.35, -33.2757, 0.88 ) }
    dend_29 { pt3dadd( -127.723, 122.994, -33.3488, 0.88 ) }
    dend_29 { pt3dadd( -128.046, 123.725, -33.3958, 0.74 ) }
    dend_29 { pt3dadd( -128.421, 124.643, -33.4177, 0.74 ) }
    dend_29 { pt3dadd( -128.742, 125.46, -33.4221, 0.52 ) }
    dend_29 { pt3dadd( -129.226, 126.78, -33.4163, 0.44 ) }
    dend_29 { pt3dadd( -129.634, 127.872, -33.3985, 0.74 ) }
    dend_29 { pt3dadd( -129.867, 128.42, -33.3869, 0.74 ) }
    dend_29 { pt3dadd( -130.343, 129.339, -33.4074, 0.59 ) }
    dend_29 { pt3dadd( -130.74, 129.936, -33.4742, 0.59 ) }
    dend_29 { pt3dadd( -131.171, 130.456, -33.5785, 0.59 ) }
    dend_29 { pt3dadd( -132.012, 131.258, -33.8141, 0.66 ) }
    dend_29 { pt3dadd( -133.089, 132.116, -34.1408, 0.37 ) }
    dend_29 { pt3dadd( -134.286, 132.925, -34.4938, 0.37 ) }
    dend_29 { pt3dadd( -135.658, 133.695, -34.863, 0.52 ) }
    dend_29 { pt3dadd( -136.27, 134.002, -35.0073, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_29 { pt3dadd( -137.295, 134.495, -35.2262, 0.29 ) }
    dend_29 { pt3dadd( -138.054, 134.867, -35.3881, 0.66 ) }
    dend_29 { pt3dadd( -138.701, 135.225, -35.5134, 0.66 ) }
    dend_29 { pt3dadd( -139.631, 135.851, -35.6615, 0.37 ) }
    dend_29 { pt3dadd( -140.417, 136.504, -35.7706, 0.44 ) }
    dend_29 { pt3dadd( -141.197, 137.259, -35.8921, 0.29 ) }
    dend_29 { pt3dadd( -141.901, 138.042, -36.0294, 0.29 ) }
    dend_29 { pt3dadd( -142.564, 138.842, -36.173, 0.29 ) }
    dend_29 { pt3dadd( -143.167, 139.588, -36.3124, 0.74 ) }
    dend_29 { pt3dadd( -143.459, 139.92, -36.3825, 0.74 ) }
    dend_29 { pt3dadd( -143.892, 140.311, -36.4728, 0.37 ) }
    dend_29 { pt3dadd( -144.721, 140.881, -36.6228, 0.29 ) }
    dend_29 { pt3dadd( -145.309, 141.204, -36.7209, 0.29 ) }
    dend_29 { pt3dadd( -145.783, 141.433, -36.817, 0.29 ) }
    dend_29 { pt3dadd( -146.599, 141.778, -36.9916, 0.29 ) }
    dend_29 { pt3dadd( -147.36, 142.059, -37.1552, 0.66 ) }
    dend_29 { pt3dadd( -147.91, 142.228, -37.2698, 0.66 ) }
    dend_29 { pt3dadd( -148.717, 142.433, -37.4175, 0.37 ) }
    dend_29 { pt3dadd( -149.577, 142.672, -37.609, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -17.8438, 54.5913, 20.1614, 0.96 ) }
    dend_16 { pt3dadd( -17.993, 56.0474, 20.5914, 0.96 ) }
    dend_16 { pt3dadd( -18.2058, 57.1331, 20.8573, 0.81 ) }
    dend_16 { pt3dadd( -18.4427, 58.0053, 21.0415, 0.74 ) }
    dend_16 { pt3dadd( -18.7579, 58.9158, 21.2041, 0.74 ) }
    dend_16 { pt3dadd( -19.2523, 60.1117, 21.3823, 0.81 ) }
    dend_16 { pt3dadd( -19.7491, 61.1676, 21.5148, 0.66 ) }
    dend_16 { pt3dadd( -20.1361, 61.8386, 21.5729, 0.81 ) }
    dend_16 { pt3dadd( -20.5348, 62.4626, 21.6099, 0.81 ) }
    dend_16 { pt3dadd( -21.1629, 63.3734, 21.677, 0.66 ) }
    dend_16 { pt3dadd( -21.875, 64.3278, 21.7722, 0.81 ) }
    dend_16 { pt3dadd( -22.3811, 64.9888, 21.8596, 0.96 ) }
    dend_16 { pt3dadd( -22.8706, 65.7001, 21.9661, 1.03 ) }
    dend_16 { pt3dadd( -23.3959, 66.5445, 22.096, 0.59 ) }
    dend_16 { pt3dadd( -23.841, 67.3611, 22.1812, 0.59 ) }
    dend_16 { pt3dadd( -24.2724, 68.2473, 22.2365, 0.44 ) }
    dend_16 { pt3dadd( -24.5993, 68.9597, 22.2596, 0.44 ) }
    dend_16 { pt3dadd( -25.2413, 70.3321, 22.2709, 0.81 ) }
    dend_16 { pt3dadd( -25.5972, 71.0223, 22.2521, 1.03 ) }
    dend_16 { pt3dadd( -26.3796, 72.285, 22.2738, 0.66 ) }
    dend_16 { pt3dadd( -26.7914, 72.815, 22.3131, 0.66 ) }
    dend_16 { pt3dadd( -27.3011, 73.3511, 22.413, 0.81 ) }
    dend_16 { pt3dadd( -27.8451, 73.8556, 22.568, 0.59 ) }
    dend_16 { pt3dadd( -28.5214, 74.4301, 22.8628, 0.44 ) }
    dend_16 { pt3dadd( -29.7865, 75.5664, 23.6069, 0.44 ) }
    dend_16 { pt3dadd( -30.6692, 76.4551, 24.2743, 0.37 ) }
    dend_16 { pt3dadd( -31.4042, 77.3388, 24.8887, 0.37 ) }
    dend_16 { pt3dadd( -31.9042, 78.1159, 25.341, 0.37 ) }
    dend_16 { pt3dadd( -32.5595, 79.4872, 25.9466, 0.44 ) }
    dend_16 { pt3dadd( -32.801, 80.2845, 26.448, 0.29 ) }
    dend_16 { pt3dadd( -32.9469, 80.9535, 26.7711, 0.29 ) }
    dend_16 { pt3dadd( -33.1545, 81.9826, 27.1678, 0.29 ) }
    dend_16 { pt3dadd( -33.4026, 83.0142, 27.4689, 0.96 ) }
    dend_16 { pt3dadd( -33.6598, 83.8679, 27.6668, 1.11 ) }
    dend_16 { pt3dadd( -35.2469, 88.6644, 28.6304, 1.11 ) }
    dend_16 { pt3dadd( -36.7921, 92.7003, 29.7662, 0.44 ) }
    dend_16 { pt3dadd( -37.0294, 93.3591, 30.0947, 0.29 ) }
    dend_16 { pt3dadd( -37.2138, 94.0797, 30.7731, 0.29 ) }
    dend_16 { pt3dadd( -37.204, 94.3725, 31.3824, 0.29 ) }
    dend_16 { pt3dadd( -37.065, 94.4899, 32.133, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.8438, 54.5913, 20.1614, 0.74 ) }
    dend_13 { pt3dadd( -17.0724, 55.4406, 21.1513, 0.74 ) }
    dend_13 { pt3dadd( -16.7246, 55.8236, 21.5976, 0.74 ) }
    dend_13 { pt3dadd( -16.058, 56.5575, 22.453, 0.74 ) }
    dend_13 { pt3dadd( -15.4671, 57.2082, 23.2114, 1.03 ) }
    dend_13 { pt3dadd( -14.861, 57.8755, 23.9891, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.861, 57.8755, 23.9891, 0.66 ) }
    dend_15 { pt3dadd( -14.5345, 58.9514, 24.1746, 0.66 ) }
    dend_15 { pt3dadd( -14.3618, 59.7808, 24.3361, 0.66 ) }
    dend_15 { pt3dadd( -14.2161, 60.7827, 24.5251, 0.74 ) }
    dend_15 { pt3dadd( -14.1008, 61.9283, 24.7423, 0.74 ) }
    dend_15 { pt3dadd( -13.9963, 63.3939, 25.0286, 1.18 ) }
    dend_15 { pt3dadd( -13.925, 64.7122, 25.3074, 0.96 ) }
    dend_15 { pt3dadd( -13.8879, 65.8075, 25.5836, 0.81 ) }
    dend_15 { pt3dadd( -13.8551, 66.956, 25.8879, 0.52 ) }
    dend_15 { pt3dadd( -13.8218, 67.8906, 26.1719, 0.52 ) }
    dend_15 { pt3dadd( -13.7865, 68.8942, 26.5135, 0.96 ) }
    dend_15 { pt3dadd( -13.7717, 69.45, 26.7041, 0.96 ) }
    dend_15 { pt3dadd( -13.7673, 70.2541, 27.0307, 0.96 ) }
    dend_15 { pt3dadd( -13.7719, 70.9528, 27.3284, 0.59 ) }
    dend_15 { pt3dadd( -13.7763, 71.7794, 27.6406, 0.37 ) }
    dend_15 { pt3dadd( -13.7285, 72.5464, 27.9902, 0.37 ) }
    dend_15 { pt3dadd( -13.6318, 73.1852, 28.3078, 0.37 ) }
    dend_15 { pt3dadd( -13.3362, 74.2137, 28.7841, 0.37 ) }
    dend_15 { pt3dadd( -12.7693, 75.4147, 29.2958, 0.37 ) }
    dend_15 { pt3dadd( -12.1229, 76.2983, 29.6519, 0.74 ) }
    dend_15 { pt3dadd( -10.6157, 78.0102, 30.3153, 0.22 ) }
    dend_15 { pt3dadd( -10.0482, 78.5522, 30.5289, 0.22 ) }
    dend_15 { pt3dadd( -8.93289, 79.4454, 30.8894, 0.22 ) }
    dend_15 { pt3dadd( -7.82129, 80.1481, 31.1999, 0.22 ) }
    dend_15 { pt3dadd( -7.00604, 80.5581, 31.418, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -14.861, 57.8755, 23.9891, 0.74 ) }
    dend_14 { pt3dadd( -13.9374, 58.1986, 24.5971, 0.74 ) }
    dend_14 { pt3dadd( -13.2879, 58.6679, 25.1056, 0.44 ) }
    dend_14 { pt3dadd( -12.7262, 59.2416, 25.5895, 0.44 ) }
    dend_14 { pt3dadd( -12.3397, 59.7181, 25.9313, 0.59 ) }
    dend_14 { pt3dadd( -11.9133, 60.2748, 26.3057, 0.29 ) }
    dend_14 { pt3dadd( -11.3717, 60.9632, 26.8241, 0.29 ) }
    dend_14 { pt3dadd( -11.0346, 61.5219, 27.199, 0.44 ) }
    dend_14 { pt3dadd( -10.8759, 61.8449, 27.3959, 0.44 ) }
    dend_14 { pt3dadd( -10.5629, 62.57, 27.8327, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -10.2785, 63.1939, 28.1851, 0.74 ) }
    dend_14 { pt3dadd( -9.74075, 64.1469, 28.7881, 0.52 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_8 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_4 OneSecGrp_SectionRef_33.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_29 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 5
    dend_36 nseg = 7
    dend_8 nseg = 9
    dend_1 nseg = 5
    dend_23 nseg = 15
    dend_20 nseg = 5
    dend_5 nseg = 7
    dend_35 nseg = 7
    dend_32 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 17
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_4 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_30 nseg = 3
    dend_29 nseg = 7
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_ChC_85582ca6d2_0_0


