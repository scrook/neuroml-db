// Cell: cNAC187_L4_ChC_38a9a8850a_0_0
/*
{
  "id" : "cNAC187_L4_ChC_38a9a8850a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.1147, -3.45834, 0.37", "-0.0589178, 12.7564, -3.57672, 0.37", "-0.134843, 13.2025, -3.66223, 0.74", "-0.0859169, 13.5539, -3.79342, 0.74", "0.325891, 14.6333, -4.29246, 0.37", "0.730992, 15.4962, -4.66343, 0.66", "1.20447, 16.3869, -5.05971, 1.33", "1.65047, 17.0509, -5.36878, 1.33", "2.40102, 18.1479, -5.88804, 0.74", "2.96166, 19.0248, -6.27908, 0.74", "3.81601, 20.4744, -6.92429, 1.25", "4.3544, 21.6399, -7.42093, 2.06", "4.62752, 22.5101, -7.75266, 2.06", "4.81566, 23.6885, -8.16259, 1.4", "4.74424, 25.0494, -8.6191, 0.74", "4.42941, 25.942, -8.92128, 1.11", "3.8816, 26.6261, -9.1552, 1.11", "3.09177, 27.2107, -9.34041, 0.81", "2.05156, 27.7044, -9.59567, 0.81", "0.780476, 28.1057, -9.93142, 0.81", "-0.458806, 28.3999, -10.2942, 0.96", "-1.48193, 28.6416, -10.6057, 1.11", "-2.40105, 28.8867, -10.9381, 1.11", "-4.39768, 29.5498, -11.8102, 1.11", "-4.98761, 29.8223, -12.1308, 1.11", "-5.93923, 30.5471, -12.7898, 0.59", "-6.50157, 31.3244, -13.2659, 0.96", "-6.83417, 32.0421, -13.5811, 1.25", "-7.06891, 32.6893, -13.797, 1.55", "-7.21131, 33.097, -13.8899, 1.55", "-7.71984, 34.3489, -14.1489, 0.74", "-8.5188, 35.8628, -14.4573, 0.96", "-9.18048, 36.7807, -14.6798, 0.66", "-9.72961, 37.3581, -14.8533, 0.66", "-10.6114, 38.0756, -15.1284, 0.81", "-11.3433, 38.5471, -15.3641, 0.96", "-12.3064, 39.0533, -15.6992, 1.47", "-13.1937, 39.4904, -16.0253, 1.62", "-14.0315, 39.9668, -16.3422, 1.47", "-14.8115, 40.5012, -16.6527, 1.11", "-15.6925, 41.2361, -17.0289, 0.81", "-16.7298, 42.3302, -17.5385, 0.66", "-17.2873, 43.0852, -17.848, 0.81", "-18.0041, 44.3593, -18.3111, 1.03", "-18.2812, 45.0232, -18.545, 1.25", "-18.4786, 45.6409, -18.7728, 1.25", "-18.8352, 46.9744, -19.3133, 0.96", "-19.1009, 48.0035, -19.7901, 0.81", "-19.4713, 49.2733, -20.4582, 0.59", "-19.7767, 50.1555, -20.9544, 0.59", "-20.1968, 51.2008, -21.5492, 0.59", "-20.6584, 52.227, -22.1129, 0.59", "-21.1055, 53.1878, -22.5501, 0.44", "-21.5292, 54.1909, -22.8854, 0.66", "-21.8577, 55.2626, -23.069, 0.74", "-21.964, 55.9352, -23.1014, 0.96", "-21.9741, 56.6878, -23.0771, 0.96", "-21.8097, 58.3582, -23.0448, 0.52", "-21.5825, 59.7127, -23.0636, 0.59", "-21.2816, 61.2489, -23.145, 0.59", "-21.1265, 62.1072, -23.2293, 0.96", "-21.0074, 63.0976, -23.3764, 0.96", "-20.9701, 64.856, -23.7476, 0.66", "-21.159, 66.0648, -24.1298, 0.66", "-21.5758, 67.0439, -24.5276, 0.96", "-22.0577, 67.6377, -24.7918, 1.03", "-22.6729, 68.1171, -25.0428, 1.03", "-23.4907, 68.5532, -25.3444, 1.03", "-24.5928, 68.963, -25.7817, 0.74", "-25.4602, 69.2151, -26.2129, 0.74", "-26.0388, 69.3507, -26.5639, 0.52", "-27.319, 69.5939, -27.5094, 0.52", "-28.4024, 69.7567, -28.4063, 0.52", "-29.5072, 69.8858, -29.3636, 1.11", "-30.108, 69.9413, -29.8672, 1.4", "-30.7902, 69.9847, -30.3793, 1.4", "-31.9562, 70.0152, -31.1064, 0.81", "-32.6752, 70.0305, -31.4004, 0.59", "-33.7578, 70.0833, -31.6316, 0.44", "-34.8455, 70.1865, -31.6944, 0.44", "-35.9484, 70.3596, -31.6621, 0.74", "-37.0024, 70.6483, -31.5796, 1.33", "-38.2842, 71.217, -31.5051, 0.88", "-38.8524, 71.5973, -31.5846, 0.59", "-39.2043, 71.9308, -31.7286, 0.59", "-39.6996, 72.521, -32.0908, 0.74", "-40.3123, 73.3487, -32.7244, 0.96", "-41.1032, 74.426, -33.6941, 0.59", "-41.9218, 75.4778, -34.7722, 0.59", "-42.3476, 76.0061, -35.3103, 0.81", "-42.8856, 76.6105, -35.9003, 0.96", "-43.4012, 77.1009, -36.3419, 1.03", "-44.2743, 77.8465, -36.9014, 0.66", "-44.5418, 78.0827, -37.0402, 0.66", "-45.2601, 78.8261, -37.3861, 0.81", "-45.8939, 79.6308, -37.7593, 0.81", "-46.3758, 80.4615, -38.126, 0.66", "-46.7684, 81.346, -38.5003, 0.66", "-47.2571, 82.7218, -39.072, 0.52", "-47.5367, 83.5809, -39.4406, 0.81", "-47.7424, 84.2214, -39.7272, 0.74", "-48.2397, 85.5956, -40.3349, 0.59", "-48.5432, 86.2674, -40.6072, 0.74", "-48.9488, 86.9323, -40.8428, 0.96", "-49.5751, 87.7309, -41.0293, 0.96", "-50.1232, 88.3475, -41.1193, 0.74", "-50.882, 89.1486, -41.1814, 1.03", "-51.4296, 89.7097, -41.1324, 1.25", "-51.8137, 90.1344, -41.0538, 0.81", "-52.6287, 91.1373, -40.8011, 0.59", "-53.1254, 91.8178, -40.592, 0.66", "-53.5376, 92.4347, -40.3825, 0.66", "-54.6063, 94.1422, -39.759, 0.88", "-55.1483, 95.0168, -39.4146, 1.11", "-55.5207, 95.6149, -39.1554, 1.03", "-55.9739, 96.3369, -38.8328, 1.25", "-56.1431, 96.6053, -38.7021, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.92519, -4.39834, 1.11", "5.13651, 10.8781, -4.9973, 1.11", "5.87618, 11.639, -5.49089, 1.11", "7.05627, 12.9117, -6.27759, 1.11", "7.8657, 13.8284, -6.86983, 0.96", "9.20639, 15.1896, -7.74497, 1.55", "10.3725, 16.2777, -8.4493, 1.62", "11.0592, 16.8494, -8.83385, 1.62", "12.1204, 17.6425, -9.30102, 1.25", "13.8995, 18.8348, -9.84717, 0.96", "16.6174, 20.4731, -10.3427, 0.88", "17.8932, 21.1389, -10.4202, 1.55", "19.2863, 21.7657, -10.3865, 1.84", "21.3756, 22.6075, -10.2229, 1.11", "22.4724, 23.0304, -10.0793, 1.03", "23.6997, 23.5523, -9.84028, 1.25", "24.8869, 24.207, -9.59146, 0.88", "25.9817, 24.9561, -9.36295, 0.88", "27.0069, 25.7742, -9.15192, 0.88", "28.2106, 26.7923, -8.89584, 0.88", "29.24, 27.7193, -8.56432, 0.96", "30.3051, 28.7575, -8.16633, 0.96", "31.277, 29.8087, -7.73295, 0.81", "32.7073, 31.4506, -6.96926, 1.11", "33.6453, 32.4912, -6.37564, 1.4", "34.7259, 33.5351, -5.57271, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.55044, 2.16166, 1.62", "4.53703, 8.99433, 2.76262, 1.62", "5.45056, 9.52592, 3.58534, 1.25", "7.11249, 10.2679, 5.25385, 1.25", "7.99133, 10.6053, 6.19538, 1.25", "8.90833, 10.8448, 7.29528, 1.92", "9.29636, 10.9106, 7.78944, 2.5", "10.1402, 10.933, 8.95745, 2.5", "11.8856, 10.7228, 11.555, 1.77", "13.0962, 10.3538, 13.3526, 0.96", "14.8044, 9.6516, 15.8828, 0.88", "15.2927, 9.42405, 16.6176, 0.88", "15.6779, 9.25156, 17.1799, 1.4", "16.0587, 9.10983, 17.6713, 1.4", "17.4477, 8.80495, 19.0782, 0.66", "18.0368, 8.83899, 19.5481, 0.66", "19.4359, 9.38297, 20.3763, 0.88", "20.315, 9.86581, 20.8254, 0.88", "21.419, 10.5867, 21.2627, 0.74", "22.2419, 11.1971, 21.5093, 1.4", "23.189, 11.9599, 21.6817, 2.06", "24.1217, 12.6875, 21.7543, 1.84", "25.2402, 13.5197, 21.6906, 1.18", "26.4039, 14.3229, 21.6554, 1.18", "26.8764, 14.6077, 21.7222, 1.03", "27.6663, 14.9901, 22.0502, 1.03", "28.1889, 15.1974, 22.5772, 0.59", "28.6742, 15.4169, 23.3544, 0.59", "29.6251, 15.9247, 25.291, 0.88", "30.7312, 16.6132, 27.8385, 1.62", "31.2064, 16.9507, 28.9463, 1.62", "32.3124, 17.8017, 31.5083, 0.88", "32.8276, 18.197, 32.6248, 0.88", "33.3028, 18.5739, 33.5481, 1.47", "33.6367, 18.8424, 34.0776, 1.47", "34.4956, 19.48, 35.1101, 0.81", "34.9746, 19.7726, 35.5724, 0.59", "35.487, 20.0098, 35.9761, 0.59", "36.7369, 20.525, 36.9722, 1.25", "38.7026, 21.3624, 38.6113, 0.74", "39.3183, 21.6847, 39.1857, 0.29", "39.8663, 21.9965, 39.7663, 0.29", "40.18, 22.1756, 40.145, 0.59", "41.0109, 22.6665, 41.169, 1.11", "41.4307, 22.8842, 41.6714, 1.11", "42.3317, 23.66, 42.75, 1.11", "42.8407, 24.3659, 43.6075, 0.59", "42.8546, 22.3416, 43.7486, 0.59", "43.029, 20.2543, 44.2736, 0.52", "43.1495, 18.7965, 44.6365, 0.59", "50.8954, 21.2167, 51.541, 0.59", "59.019, 24.5649, 57.5448, 0.59", "65.7327, 29.4112, 64.1819, 0.59", "72.3842, 35.2374, 70.0027, 0.59", "80.1183, 41.4892, 73.5943, 0.59", "87.086, 48.0692, 78.0369, 0.59", "94.4378, 53.49, 83.4102, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.27869, 1.60166, 1.69", "-3.56761, 6.27869, 1.60166, 1.69", "-4.07602, 6.59128, 1.9637, 1.69", "-4.69782, 6.90605, 2.45115, 1.4", "-5.13345, 7.11269, 2.895, 1.03", "-5.7269, 7.41314, 3.5719, 0.88", "-6.13483, 7.63958, 4.06819, 0.88", "-6.64494, 7.90983, 4.77912, 0.59", "-7.10526, 8.15301, 5.49274, 0.44", "-7.94809, 8.59948, 6.8971, 0.37", "-8.23766, 8.75576, 7.39937, 0.37", "-8.70839, 9.01729, 8.23767, 0.37", "-9.81497, 9.67102, 10.3134, 1.03", "-10.0659, 9.83598, 10.8019, 1.62", "-17.0018, 10.7225, 16.8373, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.17031, -14.5883, 0.74", "-5.05598, -1.94702, -14.5804, 0.74", "-6.44195, -2.82455, -14.5729, 1.03", "-7.65419, -3.577, -14.5915, 1.25", "-8.62354, -4.18764, -14.6169, 1.62", "-9.41788, -4.67959, -14.6419, 1.84", "-10.4595, -5.28669, -14.6488, 1.84", "-11.3821, -5.7611, -14.6069, 1.99", "-12.3516, -6.19067, -14.5146, 2.21", "-13.4843, -6.60733, -14.3508, 2.65", "-14.2878, -6.85439, -14.222, 2.5", "-15.6455, -7.21952, -14.0156, 1.77", "-17.0835, -7.58794, -13.8435, 1.33", "-18.0611, -7.84511, -13.7973, 1.18", "-19.2202, -8.16189, -13.8709, 1.11", "-20.044, -8.41562, -14.1037, 1.11", "-20.8926, -8.71376, -14.6221, 1.11", "-21.7033, -9.02254, -15.4174, 1.4", "-22.5103, -9.31284, -16.4456, 1.03", "-23.1899, -9.52953, -17.4418, 0.88", "-24.2012, -9.77797, -19.0738, 0.88", "-25.294, -9.95055, -21.0012, 1.47", "-26.1206, -10.0275, -22.5298, 1.77", "-27.046, -10.0427, -24.3081, 1.84", "-27.3733, -10.0234, -24.9535, 2.06", "-27.9661, -9.95021, -26.1542, 1.77", "-28.8794, -9.76158, -27.9582, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.96006, 9.10166, 2.06", "-5.36761, -1.96006, 9.10166, 2.06", "-6.46519, -1.85311, 9.68221, 2.06", "-7.29036, -1.8108, 10.0854, 2.06", "-9.43149, -1.84256, 11.0811, 1.84", "-10.6235, -1.94978, 11.6193, 1.84", "-11.5354, -2.09873, 12.0267, 1.99", "-13.1763, -2.50075, 12.7577, 1.55", "-14.5114, -2.97843, 13.3374, 1.03", "-15.5906, -3.49011, 13.7701, 0.88", "-16.6385, -4.13066, 14.074, 1.18", "-17.4854, -4.71427, 14.2589, 1.18", "-18.1345, -5.20298, 14.3663, 1.47", "-19.098, -6.00161, 14.4503, 1.25", "-20.0465, -6.82096, 14.5755, 1.03", "-20.9019, -7.55098, 14.767, 1.62", "-21.7587, -8.26554, 15.0853, 1.69", "-22.4192, -8.78366, 15.4253, 1.33", "-23.5992, -9.63571, 16.2282, 1.03", "-25.0525, -10.5144, 17.4925, 0.88", "-26.0687, -10.9814, 18.6184, 1.11", "-26.9492, -11.2144, 19.7746, 1.33", "-27.4982, -11.238, 20.5872, 1.33", "-28.0394, -11.1009, 21.4266, 1.18", "-28.6835, -10.7394, 22.3969, 0.88", "-29.5995, -10.0682, 23.5807, 1.18", "-30.1708, -9.66391, 24.2235, 1.33", "-30.6742, -9.39915, 24.7251, 1.33", "-31.5424, -9.15235, 25.5382, 0.59", "-32.733, -9.21387, 26.5501, 0.52", "-33.3372, -9.57194, 26.9918, 0.59", "-34.1795, -10.6874, 27.6567, 0.59", "-34.9906, -12.2214, 28.4654, 0.59", "-35.4112, -13.1359, 28.9378, 1.03", "-35.8927, -14.2779, 29.5818, 1.03", "-36.2907, -15.2278, 30.1713, 1.03", "-37.0412, -16.8148, 31.3737, 1.03", "-37.7525, -17.8617, 32.5121, 0.66", "-38.3518, -18.3448, 33.3879, 0.66", "-39.4078, -18.7447, 34.7755, 0.74", "-40.1544, -18.8715, 35.6912, 0.81", "-40.8489, -18.9185, 36.5111, 0.52", "-42.1075, -18.9363, 37.8803, 0.52", "-42.6467, -18.9745, 38.4726, 0.44", "-43.4314, -19.3109, 39.5162, 0.37", "-43.8088, -19.8319, 40.1281, 0.37", "-44.1589, -20.6223, 40.7535, 1.11", "-44.4578, -21.4332, 41.2423, 1.4", "-44.7456, -22.5012, 41.769, 1.4", "-45.0993, -24.1225, 42.4953, 0.81", "-45.3375, -25.3433, 42.9815, 0.29", "-45.5498, -26.1508, 43.3165, 0.29", "-45.8007, -26.799, 43.6028, 0.29", "-52.7055, -31.3428, 51.2815, 0.29", "-61.0615, -36.0003, 57.2576, 0.29", "-68.7064, -40.6474, 64.1275, 0.29", "-75.8008, -43.8557, 72.3249, 0.29", "-82.9122, -47.2064, 80.4474, 0.29", "-91.094, -52.182, 86.3946, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.61631, 6.85166, 1.77", "-2.19761, -5.61631, 6.85166, 1.77", "-2.18422, -6.43959, 6.95631, 1.77", "-2.16293, -7.85105, 7.12818, 1.47", "-2.15119, -9.27152, 7.28369, 1.25", "-2.17124, -10.3566, 7.38877, 1.62", "-2.21131, -11.2722, 7.46795, 1.92", "-2.26624, -12.0708, 7.53803, 2.14", "-2.36576, -13.0651, 7.6236, 2.14", "-2.57094, -14.4454, 7.74244, 1.55", "-2.8321, -15.7435, 7.84643, 1.33", "-3.06862, -16.727, 7.934, 1.55", "-3.24428, -17.3482, 7.99139, 1.92", "-3.49388, -18.1016, 8.08749, 2.21", "-3.68083, -18.5982, 8.16542, 2.5", "-3.89942, -19.1843, 8.27728, 2.5", "-4.10035, -19.8308, 8.41089, 2.36", "-4.31652, -20.7177, 8.59934, 1.69", "-4.5243, -21.8806, 8.83667, 1.25", "-4.62999, -22.9673, 9.05061, 1.4", "-4.63446, -23.9316, 9.21734, 1.62", "-4.5258, -25.1086, 9.39373, 2.06", "-4.39351, -25.8339, 9.49414, 2.36", "-4.2597, -26.3042, 9.55073, 2.36", "-3.92958, -27.2005, 9.64161, 2.14", "-3.39201, -28.4582, 9.75863, 1.62", "-2.91765, -29.5175, 9.84538, 1.25", "-2.43109, -30.6104, 9.94644, 1.03", "-1.91174, -31.8392, 10.0849, 1.03", "-1.52488, -32.8682, 10.2267, 1.03", "-1.1037, -34.2001, 10.458, 1.03", "-0.920053, -34.9934, 10.6266, 0.96", "-0.864341, -35.6201, 10.7812, 0.96", "-0.939953, -36.1787, 10.9357, 0.96", "-1.28764, -36.9144, 11.1929, 0.96", "-1.62769, -37.3142, 11.3546, 0.88", "-1.98441, -37.6098, 11.4812, 1.18", "-2.56027, -38.0201, 11.6428, 1.18", "-3.11811, -38.3949, 11.786, 1.33", "-3.7604, -38.8202, 11.9645, 1.33", "-4.31263, -39.191, 12.1375, 1.4", "-4.90462, -39.6138, 12.3513, 1.55", "-5.47167, -40.0616, 12.603, 1.55", "-6.11349, -40.6735, 12.9645, 1.84", "-6.50217, -41.1203, 13.2209, 2.14", "-6.88285, -41.6589, 13.4959, 1.99", "-7.41381, -42.6318, 13.9356, 0.88", "-7.77637, -43.5302, 14.2813, 0.88", "-8.08203, -44.5915, 14.6262, 0.81", "-8.25311, -45.5297, 14.8602, 0.74", "-8.41191, -46.7144, 15.1173, 0.74", "-8.48975, -47.8211, 15.3222, 1.03", "-8.48671, -48.8154, 15.4539, 1.4", "-8.45203, -49.4341, 15.5021, 1.69", "-8.38027, -50.1277, 15.5212, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.75031, -2.20834, 3.39", "1.44239, -9.75031, -2.20834, 3.39", "1.83795, -10.9592, -2.32008, 3.39", "2.15736, -11.9344, -2.45677, 3.02", "2.48076, -12.9219, -2.59516, 3.02", "2.90602, -14.2203, -2.77714, 3.02", "3.36283, -15.6151, -2.97263, 3.24", "3.70731, -16.6436, -3.13217, 3.54", "4.09842, -17.7518, -3.34433, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-56.1431, 96.6053, -38.7021, 0.44", "-57.8433, 98.2068, -39.6587, 0.44", "-58.605, 98.9932, -40.0789, 0.37", "-58.9393, 99.4388, -40.2317, 0.66", "-59.4432, 100.256, -40.4343, 0.66", "-59.9141, 101.183, -40.6094, 0.59", "-60.1961, 101.88, -40.7213, 0.81", "-60.3903, 102.756, -40.7695, 0.81", "-60.5018, 104.759, -40.8785, 0.52", "-60.3862, 105.694, -40.957, 0.52", "-59.952, 107.108, -41.1634, 0.44", "-59.3094, 108.417, -41.4782, 0.44", "-58.4695, 109.644, -41.9134, 0.74", "-57.7362, 110.478, -42.2963, 0.74", "-56.5409, 111.594, -42.9631, 0.44", "-55.6299, 112.366, -43.4308, 0.59", "-54.7149, 113.118, -43.9048, 0.59", "-53.8015, 113.898, -44.4183, 0.59", "-53.0919, 114.59, -44.8834, 0.37", "-52.5782, 115.144, -45.2623, 0.37", "-51.8071, 116.021, -45.8724, 0.59", "-51.0495, 116.855, -46.4848, 0.37", "-50.3662, 117.573, -47.0314, 0.81", "-49.6533, 118.293, -47.6074, 0.81", "-48.3565, 119.614, -48.707, 0.44", "-47.3629, 120.655, -49.5804, 0.44", "-46.6702, 121.371, -50.2306, 0.81", "-45.9701, 122.102, -50.907, 0.44", "-45.594, 122.523, -51.3043, 0.59", "-44.7115, 123.596, -52.3614, 0.59", "-44.2134, 124.365, -53.2045, 0.44", "-43.7341, 125.444, -54.4134, 0.44", "-43.4882, 126.363, -55.5633, 0.96", "-43.4417, 126.791, -56.17, 1.18", "-43.465, 127.18, -56.7818, 1.18", "-43.8215, 128.164, -58.903, 0.44", "-44.2501, 128.848, -60.5854, 0.37", "-44.7284, 129.353, -62.3108, 0.66", "-44.9628, 129.55, -63.1182, 0.66", "-45.3507, 129.832, -64.4055, 0.66", "-46.805, 130.823, -69.5468, 0.44", "-47.0514, 130.977, -70.4642, 0.44", "-48.3089, 131.757, -75.35, 0.29", "-48.572, 131.951, -76.3893, 0.29", "-48.8597, 132.212, -77.5761, 0.29", "-49.4444, 132.896, -80.0999, 0.74", "-50.0764, 133.939, -82.9686, 0.44", "-50.2014, 134.227, -83.5969, 0.44", "-50.4357, 135.002, -84.7656, 0.37", "-50.6464, 135.84, -85.8102, 0.88", "-50.9628, 137.299, -87.1504, 0.29", "-51.114, 137.917, -87.548, 0.52", "-51.4536, 139.063, -88.1374, 0.15", "-51.8164, 140.072, -88.6761, 0.22", "-52.4374, 141.651, -89.5203, 0.22", "-53.0466, 143.032, -90.2103, 0.22", "-53.624, 144.334, -90.8157, 0.22", "-54.5326, 146.235, -91.7644, 1.47", "-55.2345, 147.623, -92.5314, 0.66", "-55.669, 148.511, -93.0478, 0.96", "-56.3274, 149.981, -93.9029, 0.22", "-56.7322, 150.981, -94.4118, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-56.1431, 96.6053, -38.7021, 0.37", "-56.0066, 98.3092, -38.3565, 0.37", "-55.851, 99.1546, -38.2656, 0.37", "-55.7227, 99.955, -38.1004, 0.37", "-55.6221, 101.152, -37.7522, 0.74", "-55.6332, 102.164, -37.4129, 0.29", "-55.7777, 103.353, -36.9868, 0.29", "-55.8704, 103.912, -36.7773, 0.52", "-56.1776, 105.138, -36.1144, 0.44", "-56.4166, 105.918, -35.6055, 0.29", "-56.6265, 106.598, -35.1304, 0.29", "-56.8351, 107.353, -34.5725, 0.29", "-57.0941, 108.628, -33.6632, 0.44", "-57.2377, 109.663, -32.9459, 0.44", "-57.2806, 110.981, -32.1272, 0.52", "-57.1906, 112.031, -31.496, 0.37", "-57.0237, 112.87, -30.9996, 0.37", "-56.7414, 113.774, -30.5032, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "34.7259, 33.5351, -5.57271, 0.29", "35.676, 33.4241, -3.65071, 0.29", "36.5979, 33.3467, -2.05723, 0.59", "37.5278, 33.2482, -0.660701, 0.74", "38.0454, 33.1944, 0.052759, 0.37", "38.8306, 33.1475, 1.21003, 0.37", "39.2594, 33.1406, 1.89203, 0.66", "39.5739, 33.1837, 2.41934, 0.96", "39.9883, 33.33, 3.39017, 1.25", "40.5509, 33.7011, 5.19162, 0.37", "41.014, 34.2068, 7.05078, 0.37", "41.1586, 34.4145, 7.69568, 0.37", "41.4899, 34.8778, 9.00689, 0.74", "42.1448, 35.6261, 11.0131, 0.66", "42.7386, 36.1702, 12.3812, 0.52", "43.2618, 36.484, 13.1793, 0.66", "43.9623, 36.7369, 13.894, 0.66", "44.9591, 36.9769, 14.6719, 0.37", "46.1518, 37.1368, 15.3919, 0.52", "46.8286, 37.1675, 15.7353, 0.52", "48.0165, 37.1725, 16.3082, 0.66", "48.686, 37.1511, 16.6223, 0.88", "49.5811, 37.1231, 17.0184, 0.88", "50.6114, 37.1341, 17.5211, 0.66", "51.896, 37.2218, 18.1654, 0.29", "53.0205, 37.3665, 18.7127, 0.29", "54.7234, 37.7375, 19.4986, 0.88", "55.1948, 37.8617, 19.7109, 0.88", "57.0861, 38.4272, 20.5219, 0.29", "58.5499, 38.9166, 21.0987, 0.29", "59.9544, 39.4296, 21.6034, 0.96", "61.6286, 40.0789, 22.1666, 0.29", "62.8467, 40.5591, 22.5692, 0.29", "63.979, 40.9773, 22.9183, 0.81", "64.8776, 41.2789, 23.1426, 0.81", "65.6758, 41.5327, 23.3374, 0.81", "66.8871, 41.8886, 23.6296, 0.59", "68.2973, 42.2468, 23.9796, 0.29", "69.5382, 42.6092, 24.2991, 0.81", "70.7617, 42.9725, 24.6254, 0.22", "71.8482, 43.2737, 24.916, 0.22", "72.5398, 43.4348, 25.0903, 0.52", "73.5035, 43.6082, 25.2769, 0.22", "82.5993, 46.469, 32.5321, 0.22", "90.8325, 49.7407, 40.594, 0.22", "100.718, 50.826, 47.2903, 0.22", "110.603, 49.8263, 53.9868, 0.22", "120.364, 50.3294, 60.929, 0.22", "128.026, 49.6174, 70.1135, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "34.7259, 33.5351, -5.57271, 0.81", "36.0656, 33.7697, -4.92499, 0.81", "36.7075, 33.8021, -4.64579, 1.03", "38.4395, 33.7865, -4.06397, 0.96", "39.3962, 33.78, -3.79891, 0.96", "40.5164, 33.8174, -3.53397, 0.59", "41.2977, 33.8823, -3.37409, 0.66", "42.3507, 33.9717, -3.19531, 0.66", "43.615, 34.1725, -3.07383, 0.59", "44.2869, 34.374, -3.10178, 0.81", "45.1373, 34.7729, -3.18357, 0.96", "45.9192, 35.2364, -3.2795, 1.25", "46.4831, 35.5868, -3.34362, 1.4", "47.1882, 36.0169, -3.3907, 1.4", "48.3331, 36.6209, -3.38701, 0.59", "48.7992, 36.7883, -3.3621, 0.59", "49.7699, 36.954, -3.25885, 0.59", "50.8309, 36.9809, -3.09939, 1.03", "51.5844, 36.9253, -2.96007, 1.18", "52.2358, 36.8291, -2.79324, 1.18", "53.2807, 36.6195, -2.45214, 0.74", "54.2767, 36.4033, -2.05245, 0.66", "54.747, 36.3057, -1.84188, 0.96", "55.3596, 36.2064, -1.56674, 0.96", "56.4592, 36.0815, -1.09136, 1.03", "56.9781, 36.0565, -0.873986, 1.03", "58.422, 36.148, -0.320757, 0.59", "59.2069, 36.2828, -0.0570703, 0.59", "60.6124, 36.6227, 0.345853, 0.59", "61.3035, 36.8333, 0.506134, 0.81", "61.9532, 37.0831, 0.609715, 0.81", "63.2854, 37.6838, 0.728851, 0.37", "64.1305, 38.0815, 0.747287, 0.66", "64.8818, 38.4062, 0.761132, 0.74", "65.3551, 38.5789, 0.764314, 0.74", "66.2845, 38.8185, 0.766577, 0.74", "67.2852, 38.942, 0.774441, 0.52", "68.6817, 38.9355, 0.799253, 0.74", "69.7314, 38.8709, 0.850073, 0.88", "70.3026, 38.8307, 0.910172, 0.96", "70.8653, 38.8022, 1.0042, 1.18", "71.7123, 38.7953, 1.20401, 1.18", "72.3467, 38.8554, 1.40996, 0.66", "73.4506, 39.1729, 1.87819, 0.59", "74.1554, 39.5158, 2.30486, 0.59", "74.6128, 39.8033, 2.64349, 0.74", "74.9639, 40.0717, 2.9459, 0.74", "75.3048, 40.3662, 3.27622, 0.74", "75.9453, 40.9676, 3.96874, 0.59", "76.7815, 41.812, 4.97195, 0.96", "77.1794, 42.2073, 5.45627, 1.25", "77.3931, 42.4171, 5.73884, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "94.4378, 53.49, 83.4102, 0.29", "101.156, 57.163, 90.372, 0.29", "108.813, 60.955, 96.2072, 0.29", "116.635, 65.5913, 101.107, 0.29", "123.508, 69.5947, 107.717, 0.29", "129.871, 74.7256, 114.01, 0.29", "134.792, 80.3738, 121.081, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "94.4378, 53.49, 83.4102, 0.29", "100.982, 56.5414, 89.0367, 0.29", "106.696, 61.3344, 94.283, 0.29", "111.383, 66.9512, 99.6998, 0.29", "116.383, 71.1893, 106.07, 0.29", "121.177, 75.9317, 112.224, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-28.8794, -9.76158, -27.9582, 0.74", "-30.4436, -11.0088, -28.3943, 0.74", "-31.2965, -11.5183, -28.5795, 0.74", "-32.0263, -11.8546, -28.7371, 0.74", "-33.1997, -12.1693, -29.1078, 0.66", "-34.0646, -12.2715, -29.4559, 0.66", "-34.9875, -12.3091, -29.8708, 0.59", "-35.6337, -12.2183, -30.1532, 1.25", "-36.1632, -12.0956, -30.4124, 1.25", "-37.7818, -11.689, -31.2794, 0.66", "-38.585, -11.5141, -31.7353, 0.66", "-39.0142, -11.4806, -31.9967, 0.96", "-39.6414, -11.5588, -32.3941, 0.96", "-40.0729, -11.7211, -32.7844, 0.96", "-40.7192, -12.2063, -33.7719, 0.74", "-41.0559, -12.6048, -34.5429, 0.52", "-41.3893, -13.0944, -35.5109, 0.81", "-41.6026, -13.4519, -36.2291, 1.03", "-42.3741, -14.8793, -39.1681, 1.25", "-42.8966, -15.8825, -41.3007, 0.66", "-43.1572, -16.3613, -42.3542, 0.66", "-43.3247, -16.6039, -42.9053, 1.11", "-43.4815, -16.753, -43.2333, 1.33", "-43.7177, -16.914, -43.5098, 1.18", "-44.1046, -17.134, -43.666, 1.18", "-44.995, -17.6297, -43.8919, 0.59", "-45.9075, -18.2025, -44.1594, 0.52", "-46.6218, -18.7218, -44.4401, 0.52", "-47.2076, -19.2239, -44.7908, 0.81", "-47.774, -19.8046, -45.2948, 0.66", "-48.3012, -20.4051, -45.8809, 0.66", "-48.6788, -20.8769, -46.3925, 1.33", "-48.931, -21.2078, -46.7637, 1.33", "-49.7177, -22.2443, -47.9422, 0.66", "-50.4122, -23.1284, -48.9436, 0.52", "-50.7433, -23.5152, -49.3903, 0.52", "-51.1788, -23.9556, -49.84, 0.96", "-51.494, -24.242, -50.0747, 1.18", "-51.7224, -24.4414, -50.1761, 1.18", "-52.1993, -24.8816, -50.2477, 0.81", "-52.8489, -25.5392, -50.2281, 0.74", "-53.649, -26.4363, -50.1195, 0.59", "-54.0503, -26.8842, -50.0295, 0.74", "-54.5877, -27.4589, -49.874, 0.74", "-55.1694, -28.0203, -49.6911, 0.59", "-55.7208, -28.5216, -49.5056, 0.44", "-56.3392, -29.0775, -49.2888, 0.44", "-56.936, -29.6056, -49.1093, 0.44", "-57.5624, -30.2113, -48.9301, 0.44", "-58.5847, -31.3116, -48.6551, 0.44", "-58.8355, -31.6385, -48.587, 0.96", "-59.2814, -32.4253, -48.4939, 1.18", "-59.5516, -33.1268, -48.465, 0.81", "-59.829, -34.2835, -48.5337, 0.59", "-59.9148, -34.787, -48.6215, 0.74", "-60.0456, -35.598, -48.82, 0.66", "-60.236, -36.39, -49.0493, 0.66", "-60.4335, -36.9739, -49.2412, 0.81", "-60.891, -38.0439, -49.5946, 0.59", "-61.3499, -38.981, -49.889, 0.52", "-61.7777, -39.8908, -50.1474, 0.81", "-62.1481, -40.7768, -50.36, 1.4", "-62.3079, -41.3048, -50.4234, 1.69", "-62.5015, -42.3398, -50.4266, 0.52", "-62.6236, -43.1963, -50.4333, 0.44", "-62.7194, -44.0653, -50.5591, 0.44", "-62.7956, -44.6785, -50.7781, 0.29", "-63.0175, -45.8206, -51.3653, 1.4", "-63.0804, -46.0484, -51.5018, 1.4", "-63.8293, -48.0627, -52.99, 0.52", "-64.3342, -49.1733, -53.9003, 0.52", "-64.6278, -49.7473, -54.3915, 0.52", "-65.0738, -50.6022, -55.121, 0.74", "-65.3663, -51.1755, -55.5927, 0.88", "-65.9703, -52.4817, -56.5087, 0.44", "-66.2386, -53.1386, -56.8557, 0.59", "-66.5561, -53.8738, -57.2103, 0.59", "-66.9257, -54.6196, -57.5991, 0.37", "-67.1617, -55.0694, -57.8483, 0.59", "-67.6121, -55.8699, -58.2836, 0.81", "-68.0589, -56.5987, -58.6168, 1.18", "-68.3535, -57.0464, -58.8269, 1.18", "-69.1797, -58.1585, -59.4208, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-28.8794, -9.76158, -27.9582, 0.81", "-29.8194, -7.58941, -27.6855, 0.81", "-30.264, -6.81753, -27.5097, 0.81", "-30.954, -5.92793, -27.2291, 0.81", "-31.6984, -5.27698, -26.9669, 0.88", "-32.5966, -4.81828, -26.7497, 0.66", "-34.2602, -4.26286, -26.4786, 0.59", "-35.4269, -4.23642, -26.4031, 0.59", "-36.4787, -4.36701, -26.55, 0.59", "-37.8761, -4.6874, -27.0047, 0.74", "-39.3795, -5.12313, -27.8045, 1.03", "-39.9065, -5.28392, -28.1457, 1.62", "-40.6235, -5.48769, -28.6663, 1.92", "-42.8958, -6.06087, -30.2698, 0.88", "-43.7697, -6.25504, -30.8691, 0.66", "-45.0513, -6.53484, -31.7053, 0.66", "-46.7781, -6.91257, -32.7681, 0.66", "-47.5456, -7.0646, -33.215, 0.66", "-49.2178, -7.30985, -34.0764, 0.66", "-50.2842, -7.3987, -34.5563, 0.44", "-51.6335, -7.42098, -35.1888, 0.44", "-52.6241, -7.37035, -35.6961, 0.44", "-53.7949, -7.22771, -36.4125, 0.66", "-54.6137, -7.09367, -36.9526, 0.66", "-55.5841, -6.87299, -37.5924, 0.66", "-56.4221, -6.64461, -38.0781, 0.66", "-57.3792, -6.31325, -38.553, 0.44", "-58.046, -6.04706, -38.8601, 0.74", "-59.0392, -5.62659, -39.2879, 0.74", "-59.9238, -5.24317, -39.662, 0.74", "-60.6765, -4.91908, -39.9625, 0.74", "-61.5376, -4.55858, -40.2891, 0.37", "-62.8116, -4.16635, -40.8309, 0.37", "-63.3577, -4.11041, -41.1125, 0.37", "-63.9305, -4.18115, -41.4873, 0.88", "-64.6906, -4.37725, -42.0317, 1.18", "-65.309, -4.57143, -42.5329, 1.33", "-66.8841, -5.11005, -43.9245, 0.44", "-68.0159, -5.44996, -45.0031, 0.44", "-68.9223, -5.61578, -45.9682, 0.44", "-69.7431, -5.61085, -46.8959, 0.88", "-70.628, -5.37923, -47.8981, 1.03", "-70.9918, -5.17149, -48.278, 1.03", "-71.9392, -4.34287, -49.0386, 0.44", "-72.5111, -3.79543, -49.4326, 0.44", "-73.1864, -3.21706, -49.7878, 0.44", "-73.7419, -2.84704, -50.0554, 0.59", "-74.6598, -2.41322, -50.4379, 0.59", "-75.593, -2.1467, -50.8303, 0.74", "-77.2933, -1.98789, -51.546, 0.37", "-78.3548, -2.0484, -52.0416, 0.37", "-79.9159, -2.35004, -52.8471, 0.59", "-80.5236, -2.5411, -53.1972, 0.88", "-81.6861, -3.05103, -53.9698, 0.66", "-82.4652, -3.45668, -54.5288, 0.74", "-83.2922, -3.9414, -55.1285, 0.59", "-84.0017, -4.38097, -55.6822, 0.52", "-84.6661, -4.78785, -56.1999, 0.88", "-85.8942, -5.43842, -57.1701, 0.59", "-86.6153, -5.74178, -57.7363, 0.44", "-87.4206, -5.99611, -58.3665, 1.03", "-87.9877, -6.1209, -58.7958, 1.33", "-88.3417, -6.16799, -59.0445, 1.4", "-89.8444, -6.29434, -59.995, 0.44", "-90.454, -6.33709, -60.3546, 0.44", "-91.3571, -6.38524, -60.8495, 0.44", "-92.3115, -6.41378, -61.3262, 0.44", "-93.86, -6.4491, -62.0906, 0.59", "-94.9287, -6.46242, -62.6988, 0.88", "-95.9044, -6.42228, -63.3981, 1.11", "-97.1588, -6.31076, -64.4331, 0.52", "-98.0566, -6.17096, -65.2438, 0.52", "-98.8037, -6.01695, -65.9546, 1.03", "-100.462, -5.63182, -67.6375, 1.25", "-102.423, -5.24583, -69.6352, 0.52", "-103.096, -5.14101, -70.3097, 0.59", "-103.998, -5.04399, -71.1699, 0.59", "-105.427, -4.91872, -72.3675, 0.44", "-106.415, -4.84302, -73.0403, 0.44", "-107.876, -4.6941, -73.838, 0.44", "-108.657, -4.57565, -74.2393, 0.44", "-109.725, -4.27545, -74.9416, 0.66", "-110.475, -3.93323, -75.5678, 0.88", "-110.869, -3.66666, -75.9471, 0.88", "-111.992, -2.68393, -77.1097, 0.52", "-112.671, -1.95643, -77.8621, 0.52", "-113.608, -0.789272, -79.0524, 0.81", "-114.248, 0.132429, -79.9513, 0.44", "-114.607, 0.707803, -80.5058, 0.44", "-114.998, 1.46135, -81.1919, 0.74", "-115.224, 2.03055, -81.6461, 0.96", "-115.626, 3.49855, -82.5947, 0.66", "-115.837, 4.41788, -83.1559, 0.44", "-116.086, 5.42182, -83.8165, 0.44", "-116.406, 6.37331, -84.5419, 0.44", "-116.576, 6.69675, -84.8343, 0.44", "-117.173, 7.34505, -85.5311, 0.96", "-118.572, 7.99011, -86.5616, 0.66", "-119.507, 8.22958, -87.1369, 0.96", "-119.959, 8.31088, -87.3635, 1.25", "-120.492, 8.38981, -87.602, 1.25", "-121.34, 8.53524, -87.9617, 1.25", "-122.804, 8.92184, -88.5719, 0.37", "-123.684, 9.33023, -88.8918, 0.37", "-124.264, 9.69779, -89.1355, 0.66", "-124.71, 10.0034, -89.3149, 0.81", "-125.405, 10.4851, -89.5552, 0.81", "-126.483, 11.2199, -89.8173, 0.44", "-127.225, 11.6728, -89.9005, 0.44", "-128.585, 12.3689, -89.9467, 0.44", "-130.093, 13.0787, -89.9156, 0.44", "-131.239, 13.6064, -89.8368, 0.66", "-132.433, 14.1438, -89.6987, 0.96", "-133.638, 14.6688, -89.4808, 0.59", "-134.662, 15.1319, -89.2568, 0.44", "-135.718, 15.622, -89.0149, 0.44", "-136.745, 16.1011, -88.8406, 0.44", "-137.641, 16.4666, -88.7986, 0.44", "-138.683, 16.7795, -88.9123, 0.74", "-139.201, 16.8851, -89.0393, 0.74", "-140.686, 17.0584, -89.497, 0.52", "-141.364, 17.1063, -89.7441, 0.59", "-142.62, 17.1767, -90.2506, 0.44", "-143.561, 17.2673, -90.6429, 0.44", "-144.738, 17.4906, -91.1794, 0.37", "-145.917, 17.8221, -91.704, 0.52", "-146.851, 18.1785, -92.1153, 1.11", "-147.579, 18.518, -92.4757, 1.25", "-148.438, 18.9762, -92.977, 0.37", "-149.666, 19.6608, -93.821, 0.37", "-150.497, 20.101, -94.4722, 0.29", "-151.157, 20.4293, -95.0621, 0.29", "-152.342, 21.0086, -96.1973, 0.59", "-153.279, 21.492, -97.1333, 0.59", "-153.81, 21.7826, -97.665, 0.29", "-154.23, 22.0354, -98.0421, 0.37", "-154.897, 22.4999, -98.5833, 0.37", "-155.813, 23.1865, -99.1705, 0.44", "-156.585, 23.7862, -99.5088, 0.44", "-157.321, 24.3517, -99.7354, 0.44", "-158.209, 24.9759, -99.9738, 0.37", "-158.57, 25.1931, -100.059, 0.37", "-159.496, 25.6346, -100.234, 0.88", "-160.034, 25.8385, -100.323, 1.11", "-160.998, 26.1679, -100.478, 1.11", "-162.515, 26.7155, -100.706, 0.37", "-163.692, 27.195, -100.868, 0.37", "-164.367, 27.5293, -100.944, 0.66", "-165.378, 28.2092, -101.076, 0.66", "-166.171, 28.9057, -101.204, 0.37", "-166.835, 29.6593, -101.344, 0.52", "-167.078, 29.9964, -101.408, 0.66", "-167.434, 30.5491, -101.506, 0.66", "-168.399, 32.0763, -101.76, 0.37", "-168.855, 32.7318, -101.835, 0.37", "-169.363, 33.2651, -101.823, 0.37", "-169.902, 33.6663, -101.727, 0.88", "-170.777, 34.1586, -101.5, 0.81", "-171.209, 34.3508, -101.368, 0.81", "-172.298, 34.764, -101.0, 0.29", "-173.727, 35.2782, -100.508, 0.29", "-174.615, 35.6352, -100.13, 0.52", "-175.687, 36.1297, -99.6449, 0.44", "-176.209, 36.3911, -99.4049, 0.44", "-176.896, 36.7656, -99.0577, 0.81", "-177.702, 37.2786, -98.6124, 0.81", "-179.202, 38.4221, -97.6947, 0.29", "-179.801, 38.9172, -97.3093, 0.44", "-180.362, 39.3919, -96.9102, 0.29", "-180.987, 39.8932, -96.4819, 0.29", "-181.813, 40.5114, -95.9675, 0.29", "-182.452, 40.9575, -95.6247, 0.29", "-183.214, 41.4404, -95.2781, 0.59", "-184.681, 42.3387, -94.5935, 0.22", "-185.626, 42.9061, -94.1561, 0.22", "-186.13, 43.1771, -93.9237, 0.52", "-186.598, 43.3818, -93.7008, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-91.094, -52.182, 86.3946, 0.29", "-98.4648, -57.0186, 93.6041, 0.29", "-104.022, -63.2967, 101.242, 0.29", "-109.265, -69.355, 109.273, 0.29", "-113.8, -75.9955, 117.244, 0.29", "-116.71, -82.8912, 125.712, 0.29", "-120.536, -89.8701, 133.744, 0.29", "-124.387, -96.8765, 141.739, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-91.094, -52.182, 86.3946, 0.29", "-98.9711, -56.8049, 93.3483, 0.29", "-106.092, -62.8679, 99.952, 0.29", "-112.367, -69.0266, 107.258, 0.29", "-117.789, -74.8513, 115.451, 0.29", "-122.421, -81.1402, 123.754, 0.29", "-125.464, -88.1777, 132.132, 0.29", "-129.778, -94.4808, 140.586, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.38027, -50.1277, 15.5212, 0.66", "-8.9143, -51.6358, 14.9322, 0.66", "-9.0503, -52.0363, 14.7911, 1.03", "-9.18614, -52.4559, 14.696, 1.03", "-9.43444, -53.2589, 14.592, 1.03", "-9.60083, -53.8682, 14.5581, 1.03", "-9.77561, -54.6137, 14.5625, 0.81", "-9.88715, -55.283, 14.6862, 0.81", "-9.95277, -56.2674, 14.9499, 1.4", "-9.94606, -56.6902, 15.0932, 1.62", "-9.88592, -57.3225, 15.3654, 1.4", "-9.81485, -57.74, 15.5594, 1.92", "-9.67922, -58.3072, 15.8296, 1.4", "-9.42287, -59.1665, 16.2441, 1.69", "-9.23175, -59.7407, 16.4915, 1.11", "-8.97609, -60.5112, 16.8029, 0.81", "-8.86351, -60.8751, 16.9389, 1.11", "-8.74489, -61.3098, 17.0847, 1.25", "-8.53043, -62.2783, 17.378, 0.96", "-8.46438, -62.769, 17.5044, 0.74", "-8.4493, -63.2389, 17.604, 0.81", "-8.53489, -63.9535, 17.7058, 0.52", "-8.66574, -64.4653, 17.745, 0.88", "-8.82756, -64.8976, 17.7308, 0.88", "-9.04957, -65.3731, 17.6404, 0.88", "-9.25511, -65.7954, 17.5199, 0.66", "-9.45356, -66.2489, 17.3359, 0.66", "-9.672, -66.8895, 16.9702, 0.88", "-9.77813, -67.3175, 16.6748, 1.33", "-9.83337, -67.6463, 16.4347, 1.47", "-9.87248, -67.9561, 16.2087, 1.62", "-9.95086, -68.5881, 15.7781, 0.74", "-10.0511, -69.3059, 15.3787, 0.74", "-10.162, -69.8647, 15.1586, 0.74", "-10.271, -70.3094, 15.0637, 0.74", "-10.4297, -70.9234, 15.0267, 0.66", "-10.576, -71.5622, 15.0818, 0.66", "-10.7385, -72.4858, 15.2886, 0.96", "-10.7835, -72.9619, 15.4387, 0.88", "-10.7805, -73.3896, 15.5854, 0.88", "-10.6953, -74.1889, 15.852, 0.52", "-10.5518, -74.9247, 16.0861, 1.18", "-10.4692, -75.2852, 16.1764, 1.62", "-10.3818, -75.6915, 16.2441, 1.62", "-10.2798, -76.2654, 16.3233, 0.96", "-10.2236, -76.7099, 16.377, 0.96", "-10.1875, -77.3818, 16.4472, 0.66", "-10.2315, -78.2645, 16.5165, 0.52", "-10.3336, -79.0569, 16.5925, 0.59", "-10.5278, -79.9682, 16.6966, 0.74", "-10.599, -80.2049, 16.7305, 1.11", "-10.783, -80.6571, 16.8269, 1.25", "-11.1685, -81.3814, 17.0342, 0.88", "-11.4197, -81.7418, 17.178, 0.66", "-11.6907, -82.0596, 17.3315, 0.66", "-11.9591, -82.3406, 17.4721, 0.59", "-12.4929, -82.9073, 17.727, 0.59", "-12.7925, -83.2335, 17.8484, 0.44", "-13.1513, -83.6569, 17.9577, 0.44", "-13.4484, -84.0509, 18.0083, 0.74", "-13.688, -84.4167, 18.0252, 0.74", "-13.8941, -84.7657, 18.0174, 0.66", "-14.1599, -85.2763, 17.9663, 1.03", "-14.3594, -85.6824, 17.9276, 1.4", "-14.5734, -86.1386, 17.8882, 1.4", "-14.7615, -86.5345, 17.8578, 1.47", "-15.06, -87.1608, 17.8211, 0.74", "-15.2914, -87.6484, 17.7878, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.38027, -50.1277, 15.5212, 0.44", "-7.71944, -50.7389, 16.3728, 0.44", "-7.33958, -51.2862, 16.9492, 0.44", "-7.09013, -52.0193, 17.4868, 0.37", "-6.83475, -53.4761, 18.2614, 0.59", "-6.8037, -54.052, 18.4862, 0.52", "-6.82986, -54.7988, 18.7187, 0.44", "-7.07709, -56.0161, 19.0328, 0.44", "-7.43654, -57.0498, 19.2914, 0.44", "-7.75232, -57.6812, 19.4711, 0.59", "-8.25708, -58.409, 19.7693, 0.59", "-8.84924, -59.0254, 20.2631, 0.37", "-9.69033, -59.7087, 21.1391, 0.59", "-10.4563, -60.2378, 22.0602, 0.88", "-10.947, -60.5349, 22.6704, 0.81", "-11.9444, -61.1033, 23.8998, 1.03", "-12.9482, -61.6732, 25.1097, 0.88", "-13.8429, -62.2215, 26.1028, 0.44", "-14.5543, -62.7543, 26.7984, 0.44", "-15.0027, -63.1725, 27.179, 0.66", "-15.5989, -63.7931, 27.5558, 0.66", "-16.115, -64.3503, 27.7241, 0.66", "-16.847, -65.1418, 27.7908, 0.66", "-17.4759, -65.8226, 27.7978, 1.33", "-17.7517, -66.1432, 27.7806, 1.47", "-18.2854, -66.7773, 27.7382, 1.03", "-18.9539, -67.5916, 27.6918, 0.81", "-19.5211, -68.2789, 27.6672, 0.74", "-20.2017, -69.1025, 27.6646, 0.52", "-20.6825, -69.7095, 27.6836, 0.44", "-24.5572, -76.7504, 32.4921, 0.44", "-27.2473, -84.3007, 37.2908, 0.44", "-30.6767, -91.8604, 41.5811, 0.44", "-35.8898, -99.0221, 44.6254, 0.44", "-41.4493, -105.067, 49.2077, 0.44", "-46.2385, -111.117, 54.5798, 0.44", "-51.1588, -117.409, 59.5256, 0.44", "-57.5786, -123.348, 63.0014, 0.44", "-65.2288, -128.635, 64.5931, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.09842, -17.7518, -3.34433, 1.47", "3.61313, -19.1142, -3.71578, 1.47", "3.11341, -20.8688, -4.05132, 1.33", "2.78418, -22.2679, -4.21275, 1.55", "2.56624, -23.4036, -4.24812, 1.55", "2.37741, -24.5818, -4.14024, 1.77", "2.15461, -26.0905, -3.84241, 1.77", "2.0486, -27.0212, -3.52778, 2.14", "1.96133, -27.7983, -3.17819, 2.58", "1.83767, -28.7922, -2.7031, 2.36", "1.57413, -30.6171, -1.92172, 1.77", "1.31546, -32.1924, -1.41562, 1.47", "1.0995, -33.5147, -1.17088, 1.18", "0.895157, -34.9204, -1.06139, 1.11", "0.747552, -36.1714, -1.09673, 1.33", "0.611451, -37.8783, -1.33496, 1.25", "0.579836, -39.3725, -1.68049, 1.47", "0.628673, -40.7111, -2.03418, 1.62", "0.700791, -41.7156, -2.30381, 2.14", "0.74665, -42.4089, -2.47625, 2.58", "0.7694, -43.4057, -2.68415, 2.43", "0.708193, -45.0104, -2.95586, 2.14", "0.568366, -46.3063, -3.1498, 1.92", "0.325602, -47.5917, -3.32291, 1.47", "-0.110903, -49.1799, -3.53037, 1.25", "-0.570904, -50.4901, -3.656, 1.11", "-0.989995, -51.4703, -3.70322, 1.4", "-1.295, -52.1005, -3.71023, 1.55", "-1.77394, -53.0631, -3.67641, 1.18", "-2.22509, -54.0464, -3.57871, 0.88", "-2.62562, -55.0809, -3.47566, 1.18", "-2.93541, -56.0932, -3.38077, 1.03", "-3.18732, -57.0463, -3.28582, 1.03", "-3.49249, -58.4595, -3.16202, 1.47", "-3.62577, -59.3574, -3.10451, 1.77", "-3.74721, -60.7703, -3.07419, 1.77", "-3.80486, -61.8576, -3.13769, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.09842, -17.7518, -3.34433, 1.77", "4.63961, -20.0651, -3.90807, 1.77", "4.88139, -21.223, -4.17241, 1.99", "5.15939, -22.5545, -4.47637, 1.99", "5.53872, -24.3711, -4.8911, 3.17", "5.70959, -25.1895, -5.07792, 3.76", "6.00198, -26.5898, -5.3976, 4.2", "6.16363, -27.8286, -5.62901, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205315", "5.97663, 56.3268, -0.359339, 0.205315", "7.46769, 71.2525, -0.359339, 0.205315" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-56.7414, 113.774, -30.5032, 0.29", "-56.9745, 114.749, -30.6511, 0.29", "-57.2419, 116.209, -31.1872, 0.29", "-57.4022, 117.517, -31.7454, 0.29", "-57.4931, 118.924, -32.4055, 0.29", "-57.5199, 119.933, -32.9206, 0.29", "-57.538, 121.591, -33.7708, 0.29", "-57.4847, 124.563, -35.4698, 0.29", "-57.4564, 125.478, -36.029, 0.37", "-57.4345, 126.578, -36.7321, 0.37", "-57.4374, 127.933, -37.6397, 0.37", "-57.4352, 129.048, -38.3941, 0.22", "-57.4459, 130.211, -39.1526, 0.22", "-57.5627, 131.476, -39.8146, 1.03", "-57.6119, 131.703, -39.9358, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-56.7414, 113.774, -30.5032, 0.52", "-58.2226, 115.07, -29.9813, 0.52", "-58.9028, 115.762, -29.6928, 0.52", "-59.579, 116.57, -29.3861, 0.44", "-59.8769, 116.987, -29.2475, 0.59", "-60.1909, 117.496, -29.0953, 0.59", "-60.7625, 118.475, -28.7977, 0.37", "-61.4201, 119.756, -28.4959, 0.37", "-61.812, 120.585, -28.2865, 0.37", "-62.2096, 121.42, -28.0666, 0.37", "-62.6549, 122.332, -27.8016, 0.29", "-63.0749, 123.148, -27.5497, 0.29", "-63.5701, 123.998, -27.271, 0.81", "-63.8091, 124.335, -27.1608, 0.81", "-64.2266, 124.84, -26.9883, 0.74", "-64.8128, 125.476, -26.8128, 0.74", "-65.339, 125.975, -26.7514, 0.96", "-65.8821, 126.442, -26.7851, 0.96", "-66.2487, 126.756, -26.8656, 0.59", "-66.959, 127.422, -27.136, 0.29", "-67.6091, 128.113, -27.5135, 0.29", "-68.3042, 128.933, -28.0229, 0.29", "-68.7882, 129.555, -28.4037, 0.22", "-69.5096, 130.526, -28.9884, 0.22", "-70.0715, 131.325, -29.4549, 0.74", "-70.705, 132.276, -29.9459, 0.37", "-71.2101, 133.11, -30.2905, 0.37", "-71.6695, 133.934, -30.5802, 0.81", "-71.9988, 134.491, -30.7788, 1.18", "-72.3208, 134.923, -30.9373, 1.18", "-73.1601, 135.84, -31.3264, 0.29", "-74.0557, 136.748, -31.7228, 0.29", "-74.6286, 137.291, -31.995, 0.29", "-75.216, 137.811, -32.296, 0.29", "-76.0915, 138.519, -32.737, 0.74", "-76.7307, 138.932, -33.0521, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "128.026, 49.6174, 70.1135, 0.29", "133.507, 51.0425, 75.0436, 0.29", "138.756, 52.3933, 80.2416, 0.29", "144.395, 54.3463, 84.7923, 0.29", "149.628, 57.2643, 89.2967, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "128.026, 49.6174, 70.1135, 0.29", "133.581, 50.5339, 74.6106, 0.29", "139.232, 52.5665, 78.5785, 0.29", "145.589, 54.5083, 81.3375, 0.29", "151.229, 57.5459, 84.5848, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "77.3931, 42.4171, 5.73884, 0.44", "78.7818, 42.3773, 5.52157, 0.44", "79.314, 42.4247, 5.35672, 0.37", "80.268, 42.5941, 5.0004, 0.59", "80.7876, 42.7096, 4.79617, 0.74", "82.1158, 43.0479, 4.28555, 0.37", "83.478, 43.4346, 3.78592, 0.29", "84.2901, 43.7535, 3.44108, 0.29", "84.8649, 44.0298, 3.21398, 0.88", "85.0751, 44.1491, 3.12998, 1.11", "85.5894, 44.4675, 2.94791, 1.11", "86.0547, 44.7729, 2.86804, 1.18", "86.8862, 45.2362, 2.8929, 0.74", "87.4462, 45.5399, 2.94031, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "77.3931, 42.4171, 5.73884, 0.29", "78.3657, 43.7228, 6.14042, 0.29", "78.816, 44.3466, 6.35065, 0.29", "79.3928, 45.1456, 6.61992, 0.66", "80.0154, 46.0082, 6.91063, 0.29", "80.4817, 46.654, 7.12828, 0.29", "81.4161, 47.9484, 7.5645, 0.29", "81.9299, 48.6619, 7.89426, 0.29", "90.3264, 58.7818, 10.5368, 0.29", "97.0662, 69.9045, 13.7153, 0.29", "102.469, 82.0174, 15.0105, 0.29", "109.068, 93.4193, 17.2698, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-69.1797, -58.1585, -59.4208, 0.81", "-69.5608, -59.3658, -60.8852, 0.81", "-69.6373, -59.5189, -61.0762, 0.81", "-70.6842, -61.0837, -62.9668, 0.37", "-71.0047, -61.4973, -63.4235, 0.52", "-71.3152, -61.8916, -63.8428, 0.66", "-71.6716, -62.3614, -64.3218, 0.66", "-72.4781, -63.2964, -65.2212, 0.37", "-72.9889, -63.876, -65.8018, 0.37", "-73.7819, -64.7381, -66.6705, 0.37", "-74.2674, -65.2661, -67.2273, 0.66", "-75.0465, -66.0993, -68.1053, 1.11", "-75.4165, -66.4776, -68.4902, 1.25", "-76.6604, -67.6499, -69.8279, 0.22", "-77.1765, -68.0648, -70.3784, 0.29", "-77.6268, -68.3662, -70.8428, 0.59", "-78.1404, -68.6718, -71.3327, 0.81", "-78.6841, -69.0022, -71.8616, 0.81", "-80.0894, -70.0086, -73.2188, 0.37", "-80.5028, -70.3601, -73.6011, 0.37", "-81.1727, -71.0979, -74.2796, 0.59", "-81.4179, -71.4283, -74.5362, 0.81", "-82.2903, -72.8076, -75.4195, 0.44", "-82.8835, -73.8693, -75.949, 0.44", "-83.3578, -74.7816, -76.2946, 0.37", "-83.9291, -75.9231, -76.6877, 0.37", "-84.3556, -76.7621, -76.9751, 0.66", "-84.703, -77.3807, -77.2123, 0.81", "-85.0498, -77.9499, -77.4175, 0.81", "-85.7015, -78.9506, -77.8031, 0.29", "-86.0844, -79.4983, -78.0049, 0.96", "-87.0265, -80.7775, -78.4009, 0.29", "-87.6288, -81.6116, -78.6224, 0.29", "-88.2299, -82.4436, -78.788, 0.44", "-88.573, -82.9029, -78.8679, 0.44", "-89.1335, -83.6361, -78.9511, 0.29", "-89.4403, -84.0467, -79.0198, 0.59", "-89.9077, -84.7266, -79.1392, 0.59", "-90.3388, -85.4139, -79.2966, 0.52", "-91.0243, -86.4473, -79.6063, 0.37", "-91.4633, -87.0927, -79.8319, 0.88", "-92.2846, -88.2963, -80.2889, 0.44", "-92.7423, -88.9895, -80.5472, 0.59", "-93.1161, -89.5604, -80.752, 0.59", "-93.5654, -90.2518, -80.9631, 0.59", "-94.0339, -90.9534, -81.1147, 0.37", "-94.4134, -91.4477, -81.1807, 0.37", "-95.0489, -92.152, -81.1855, 0.29", "-95.2918, -92.3907, -81.1594, 0.29", "-95.9163, -92.9838, -81.0269, 0.88", "-96.3389, -93.3888, -80.8939, 1.18", "-97.0535, -94.0082, -80.641, 0.29", "-97.5815, -94.4283, -80.4592, 0.29", "-98.3709, -95.0565, -80.2451, 0.29", "-98.7298, -95.362, -80.1668, 0.88", "-99.0777, -95.6793, -80.1166, 0.88", "-100.214, -96.7554, -80.0753, 0.22", "-100.596, -97.1299, -80.1124, 0.22", "-101.439, -97.9313, -80.2581, 0.59", "-101.627, -98.1068, -80.3045, 0.59", "-102.384, -98.8075, -80.5093, 0.22", "-102.818, -99.2166, -80.641, 0.44", "-103.421, -99.8508, -80.8618, 0.22", "-104.252, -100.716, -81.1538, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-69.1797, -58.1585, -59.4208, 0.29", "-70.6482, -58.2942, -59.3616, 0.29", "-71.5549, -58.4286, -59.286, 0.29", "-72.4441, -58.598, -59.2206, 0.66", "-72.8683, -58.7025, -59.194, 0.66", "-74.3608, -59.1193, -59.0915, 0.29", "-75.0045, -59.3113, -59.0535, 0.29", "-75.4808, -59.4832, -58.9812, 0.66", "-75.9331, -59.6681, -58.9046, 0.66", "-77.4803, -60.3362, -58.64, 0.29", "-78.0295, -60.5521, -58.5569, 0.52", "-78.5569, -60.7289, -58.4951, 0.52", "-80.0177, -61.105, -58.3156, 0.22", "-80.6981, -61.2355, -58.2266, 0.59", "-81.1355, -61.2971, -58.1525, 0.74", "-81.9865, -61.3685, -58.0037, 0.29", "-82.4166, -61.3881, -57.9342, 0.29", "-82.9795, -61.3871, -57.8472, 0.96", "-83.531, -61.3406, -57.808, 0.96", "-85.0371, -61.1924, -57.6536, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-15.2914, -87.6484, 17.7878, 0.29", "-15.0487, -87.6702, 18.4248, 0.29", "-14.4772, -87.7614, 19.7984, 0.29", "-14.0723, -87.8653, 20.7767, 0.59", "-13.5391, -88.1039, 22.1399, 0.66", "-12.79, -88.591, 24.038, 0.59", "-12.2821, -89.0616, 25.2673, 0.29", "-11.9316, -89.5122, 25.9709, 0.52", "-11.7501, -90.0356, 26.2019, 0.66", "-11.5294, -91.1888, 26.2184, 0.37", "-11.2899, -92.6685, 26.0432, 0.29", "-11.1238, -93.8408, 25.8212, 0.29", "-10.9833, -95.0034, 25.5432, 0.29", "-10.8432, -96.0593, 25.2728, 0.29", "-10.6191, -97.3078, 24.9387, 0.29", "-10.3722, -98.3755, 24.6484, 0.29", "-6.25981, -105.323, 30.068, 0.29", "-2.48477, -111.075, 36.9959, 0.29", "3.10533, -117.092, 42.2618, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-15.2914, -87.6484, 17.7878, 0.74", "-16.1229, -88.548, 17.4839, 0.74", "-16.8511, -89.481, 17.2178, 0.52", "-17.4053, -90.276, 17.0252, 0.52", "-18.2742, -91.7342, 16.7384, 0.59", "-18.6231, -92.4807, 16.6582, 0.96", "-18.893, -93.2947, 16.596, 1.18", "-18.9969, -93.9891, 16.4941, 1.18", "-18.9868, -94.6493, 16.3875, 0.96", "-18.8435, -95.6178, 16.1562, 0.66", "-18.4872, -96.9904, 15.578, 0.52", "-18.0774, -98.2184, 14.9582, 0.52", "-17.5453, -99.5161, 14.1612, 0.29", "-17.3039, -100.002, 13.7962, 0.37", "-16.641, -101.125, 12.7171, 0.29", "-15.9361, -102.13, 11.36, 0.29", "-16.7687, -113.052, 8.77637, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.80486, -61.8576, -3.13769, 0.37", "-6.68071, -63.0086, -3.10556, 0.37", "-8.07309, -63.593, -2.6567, 0.37", "-9.11054, -64.0448, -2.19502, 0.37", "-9.81575, -64.36, -1.86869, 0.37", "-10.7071, -64.7674, -1.42325, 0.59", "-11.5717, -65.1738, -0.982741, 0.74", "-12.2452, -65.4823, -0.521583, 0.52", "-12.7545, -65.7201, -0.167903, 0.59", "-13.2064, -65.9768, 0.118528, 0.74", "-13.9782, -66.4238, 0.519208, 0.52", "-14.46, -66.6954, 0.712762, 0.52", "-14.9095, -66.9294, 0.84846, 0.74", "-15.4127, -67.177, 0.977848, 0.74", "-15.8926, -67.4209, 1.09218, 0.52", "-16.5875, -67.7709, 1.24819, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.80486, -61.8576, -3.13769, 0.88", "-4.02298, -62.9162, -3.1848, 0.88", "-4.4398, -64.2483, -3.11408, 0.66", "-4.85623, -65.1849, -2.82453, 0.74", "-5.2147, -65.8078, -2.54657, 0.88", "-5.8452, -66.751, -2.0857, 0.88", "-6.24874, -67.3215, -1.80884, 1.03", "-6.74256, -67.9449, -1.45075, 1.03", "-7.86301, -69.3968, -0.596262, 1.03", "-8.49762, -70.3094, -0.104653, 1.03", "-9.01409, -71.2306, 0.308081, 0.88", "-9.29501, -72.0203, 0.556769, 0.88", "-9.37488, -72.7565, 0.716377, 0.88", "-9.17168, -74.1844, 0.841103, 1.25", "-9.00956, -74.7035, 0.855188, 1.55", "-8.69006, -75.4331, 0.906616, 1.55", "-8.15583, -76.4442, 1.08209, 1.55", "-7.77328, -77.0736, 1.27503, 1.55", "-7.02787, -78.1624, 1.77536, 1.03", "-6.41547, -78.9401, 2.28725, 1.03", "-5.88877, -79.5521, 2.77447, 0.81", "-5.02679, -80.4597, 3.6371, 0.81", "-4.40959, -81.0545, 4.27151, 1.03", "-3.80318, -81.5727, 4.85411, 1.03", "-3.10486, -82.11, 5.45491, 1.03", "-2.52527, -82.55, 5.8688, 0.88", "-1.63238, -83.2762, 6.4132, 0.88", "-1.18383, -83.6667, 6.63629, 0.96", "-0.666937, -84.172, 6.86343, 0.96", "0.0352661, -84.9426, 7.14516, 1.33", "0.407037, -85.4062, 7.27301, 1.62", "0.715644, -85.8269, 7.37836, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.16363, -27.8286, -5.62901, 0.66", "7.97186, -30.6649, -3.17668, 0.66", "8.43992, -31.6149, -2.43164, 0.88", "9.26849, -33.5267, -1.11729, 1.03", "9.66375, -34.443, -0.553397, 1.03", "10.0346, -35.2505, -0.0924036, 1.03", "10.5358, -36.2441, 0.444157, 0.37", "11.0106, -37.3313, 0.901701, 0.37", "11.6262, -38.4066, 1.25232, 0.59", "12.4301, -39.3079, 1.37901, 0.81", "13.07, -39.7956, 1.41575, 0.81", "13.8047, -40.2016, 1.45929, 0.52", "14.5011, -40.5146, 1.51969, 0.81", "15.5461, -40.9565, 1.64973, 1.25", "15.985, -41.1861, 1.74662, 1.69", "16.5489, -41.6198, 1.95674, 1.69", "17.3571, -42.7387, 2.49693, 0.96", "17.6607, -43.4978, 2.83345, 0.66", "17.8257, -44.1006, 3.08914, 0.81", "18.133, -45.3691, 3.62372, 0.44", "18.4348, -46.3702, 4.03931, 0.44", "18.7421, -47.1521, 4.34937, 0.44", "19.1686, -47.8339, 4.65265, 0.88", "20.0308, -48.6725, 5.15869, 1.25", "21.0865, -49.4145, 5.71209, 0.66", "22.0282, -49.9573, 6.15448, 0.52", "22.5977, -50.2726, 6.40784, 0.52", "23.9963, -51.0981, 7.0481, 0.74", "25.1306, -51.8552, 7.56397, 1.25", "25.5607, -52.1921, 7.73862, 1.25", "26.2184, -52.791, 7.95536, 0.52", "26.9741, -53.5904, 8.1137, 0.44", "27.8918, -54.6735, 8.18135, 0.37", "28.4032, -55.325, 8.12353, 0.37", "28.9175, -55.9842, 8.00217, 0.96", "29.3112, -56.4745, 7.89204, 1.33", "30.4739, -57.801, 7.52772, 0.29", "30.8966, -58.2254, 7.38089, 0.29", "31.318, -58.6046, 7.21597, 0.29", "31.4757, -58.7451, 7.15554, 0.44", "37.7558, -66.4377, 8.98453, 0.44", "44.7672, -73.7232, 9.31151, 0.44", "50.6202, -81.9343, 9.27845, 0.44", "57.0528, -89.7182, 9.42901, 0.44", "63.3902, -97.515, 10.4161, 0.44", "69.1751, -105.758, 10.8777, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.16363, -27.8286, -5.62901, 1.03", "6.20821, -29.3717, -5.71376, 1.03", "6.4075, -30.8931, -5.8492, 1.03", "6.66828, -31.9843, -5.98928, 0.96", "6.99641, -33.0083, -6.15138, 0.96", "7.39071, -33.9919, -6.33618, 0.96", "7.71822, -34.647, -6.45482, 1.18", "8.41864, -35.5018, -6.61521, 1.47", "9.15757, -36.158, -6.72622, 2.21", "9.48381, -36.4095, -6.7497, 2.21", "10.0168, -36.816, -6.72848, 1.99", "10.9963, -37.6241, -6.57641, 1.33", "11.9321, -38.5413, -6.31814, 0.88", "12.5551, -39.2975, -6.05122, 0.74", "12.9923, -40.0333, -5.77117, 0.74", "13.3671, -40.9377, -5.43126, 1.33", "13.5236, -41.4986, -5.23644, 1.62", "13.637, -42.1216, -5.05011, 1.92", "13.7237, -42.7967, -4.89726, 1.69", "13.9131, -44.0849, -4.71001, 1.33", "14.1679, -45.3873, -4.63089, 1.03", "14.3978, -46.2796, -4.65106, 0.88", "14.6762, -47.098, -4.72954, 1.03", "15.1132, -48.1603, -4.89897, 1.03", "15.6142, -49.2195, -5.13999, 1.03", "16.0633, -50.1192, -5.40926, 1.33", "16.3751, -50.8009, -5.65051, 1.69", "16.688, -51.6384, -5.96497, 1.47", "16.8442, -52.2336, -6.19231, 1.03", "16.9822, -53.1528, -6.53179, 0.96", "17.0244, -54.0017, -6.84505, 0.96", "17.0008, -55.0499, -7.21626, 1.4", "16.9338, -56.1661, -7.58401, 1.4", "16.8724, -57.1407, -7.89533, 1.55", "16.8682, -57.6669, -8.05681, 1.77", "16.9371, -58.6676, -8.34489, 0.96", "17.1002, -59.5524, -8.5742, 0.66", "17.3895, -60.3644, -8.73538, 0.66", "17.8279, -61.1241, -8.85452, 0.96", "18.4146, -61.8546, -8.9599, 1.11", "18.7282, -62.1664, -9.0135, 1.4", "19.0124, -62.4093, -9.06695, 1.4", "19.6078, -62.9139, -9.18226, 1.4", "20.309, -63.5813, -9.33289, 0.66", "20.6124, -63.9484, -9.41999, 0.52", "20.9483, -64.4835, -9.5442, 0.52", "21.3954, -65.3691, -9.70294, 0.81", "21.8237, -66.3635, -9.8013, 1.03", "22.0514, -67.0243, -9.8335, 1.03", "22.2989, -67.919, -9.81972, 1.03", "22.4795, -68.8181, -9.82151, 1.03", "22.6205, -69.7589, -9.83957, 0.88", "22.752, -70.9166, -9.93416, 1.03", "22.8602, -71.9535, -10.0883, 0.52", "22.9629, -72.9392, -10.3182, 0.52", "23.0836, -74.3863, -10.8, 0.88", "23.1194, -74.9815, -11.0546, 1.11", "23.1499, -75.9305, -11.5226, 0.59", "23.1609, -76.3326, -11.719, 0.59", "23.2175, -77.2264, -12.0427, 0.52", "23.3028, -78.1647, -12.1892, 0.52", "23.3804, -78.9107, -12.0654, 1.11", "23.4206, -79.5349, -11.8246, 1.25", "23.4542, -80.4709, -11.3053, 1.18", "23.4801, -81.3811, -10.7254, 0.52", "23.5175, -82.0085, -10.2735, 0.52", "23.6038, -82.867, -9.68385, 0.52", "23.6406, -83.1928, -9.50015, 0.81", "23.7106, -83.7966, -9.26179, 0.74", "23.7709, -84.5859, -9.08138, 0.74", "23.7885, -85.378, -8.97606, 1.03", "23.7329, -86.4378, -8.89889, 0.66", "23.6369, -87.1428, -8.86305, 0.52", "23.4311, -87.9657, -8.82011, 1.11", "23.1661, -88.6648, -8.81994, 1.11", "22.702, -89.6664, -8.87084, 0.81", "22.1661, -90.7198, -8.98843, 0.66", "21.7895, -91.4596, -9.09592, 0.88", "21.3121, -92.4693, -9.31044, 0.66", "20.7009, -93.8084, -9.73615, 0.59", "20.3215, -94.6884, -10.1018, 0.88", "20.0089, -95.4596, -10.4758, 1.18", "19.7911, -96.0175, -10.7563, 0.96", "19.5107, -96.7549, -11.1328, 0.96", "19.035, -98.0933, -11.7554, 0.52", "18.8851, -98.5319, -11.9245, 0.81", "18.6125, -99.3848, -12.208, 0.66", "18.452, -100.026, -12.3394, 0.66", "18.3301, -100.804, -12.3847, 0.96", "18.3534, -101.728, -12.178, 0.88", "18.4927, -102.516, -11.8508, 0.88", "18.6438, -103.198, -11.5261, 0.37", "18.9702, -104.438, -10.9079, 1.03", "19.1326, -105.092, -10.5967, 1.03", "19.4173, -106.549, -9.92273, 0.44", "19.5526, -107.621, -9.53699, 0.44", "19.5814, -108.258, -9.45223, 0.74", "19.5629, -108.935, -9.58281, 0.74", "19.4998, -109.893, -10.005, 0.44", "19.4553, -110.665, -10.4379, 0.66", "19.4087, -111.782, -11.158, 0.44", "19.3778, -113.378, -12.2147, 0.88", "19.3962, -115.12, -13.3265, 0.52", "19.4262, -116.006, -13.8828, 0.74", "19.5005, -117.19, -14.6101, 1.33", "19.5503, -117.861, -14.9914, 1.33", "19.6403, -119.235, -15.6399, 0.74", "19.693, -120.103, -15.9405, 0.66", "19.7248, -121.332, -16.2355, 0.66", "19.6846, -122.189, -16.3957, 0.81", "19.556, -123.069, -16.5269, 0.59", "19.4198, -123.661, -16.5751, 1.18", "19.332, -123.938, -16.5837, 1.18", "18.9828, -124.915, -16.5794, 0.44", "18.7062, -125.76, -16.504, 0.44", "18.5233, -126.465, -16.4134, 1.03", "18.4636, -126.961, -16.3341, 1.4", "18.5571, -127.988, -16.0787, 0.52", "18.6993, -128.675, -15.8947, 0.52", "19.0511, -129.563, -15.6172, 0.74", "19.2336, -129.877, -15.4866, 0.74", "19.6955, -130.49, -15.1205, 0.59", "20.3445, -131.162, -14.5814, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.16363, -27.8286, -5.62901, 0.88", "10.6111, -27.789, -8.66374, 0.88", "11.8794, -27.7365, -9.39714, 0.88", "13.1432, -27.6773, -10.0023, 1.03", "13.9959, -27.6359, -10.3392, 1.33", "14.7792, -27.6041, -10.6137, 1.62", "15.9088, -27.5759, -10.9772, 1.84", "16.8711, -27.5007, -11.1593, 1.47", "18.0215, -27.4202, -11.5316, 1.18", "18.871, -27.3337, -12.1733, 0.81", "19.7657, -27.2081, -13.1533, 0.81", "20.3283, -27.1412, -13.8658, 1.11", "21.514, -27.0742, -15.5324, 1.33", "22.7555, -27.0582, -17.3727, 1.77", "25.5769, -27.1482, -21.634, 1.47", "26.4862, -27.2089, -22.9658, 1.11", "27.4178, -27.2851, -24.2353, 1.11", "28.676, -27.3917, -25.7282, 0.81", "29.445, -27.4661, -26.4536, 0.96", "30.6714, -27.5482, -27.2715, 0.88", "31.6828, -27.4762, -27.7725, 0.74", "32.4625, -27.2642, -28.1971, 0.59", "33.4741, -26.7809, -28.8761, 1.03", "34.2292, -26.3233, -29.4153, 1.55", "34.9245, -25.8731, -29.9228, 1.69", "37.0039, -24.5109, -31.5096, 1.69", "37.6461, -24.1084, -32.0231, 1.69", "39.2545, -23.1822, -33.2974, 0.88", "40.1655, -22.7391, -33.9705, 0.81", "41.254, -22.3322, -34.6598, 1.11", "42.6701, -21.9774, -35.4069, 1.18", "43.953, -21.8462, -35.9137, 0.59", "44.5246, -21.8651, -36.1139, 0.59", "45.9083, -22.1437, -36.4814, 0.96", "46.8929, -22.509, -36.7222, 1.18", "47.7257, -22.95, -36.8826, 1.18", "48.5697, -23.4878, -36.9738, 1.4", "49.5375, -24.1599, -37.0332, 1.4", "50.4364, -24.7624, -37.0722, 1.11", "51.0733, -25.1305, -37.0807, 1.11", "51.8623, -25.461, -37.0754, 1.03", "52.8999, -25.7455, -37.0473, 1.03", "53.8077, -25.8814, -37.0047, 1.03", "54.8571, -25.938, -36.9373, 0.96", "56.3068, -25.9037, -36.8385, 0.88", "57.8852, -25.7819, -36.6906, 0.88", "58.9324, -25.6473, -36.5693, 1.03", "59.7557, -25.5162, -36.4841, 1.11", "60.4332, -25.4044, -36.4414, 1.18", "61.0475, -25.3305, -36.4797, 1.18", "62.2857, -25.3053, -36.8132, 0.81", "63.1719, -25.4109, -37.2416, 0.74", "64.329, -25.6624, -37.9481, 1.18", "65.2109, -25.9006, -38.55, 1.4", "67.0044, -26.4232, -39.8913, 1.18", "68.3846, -26.8124, -40.9929, 0.88", "69.4172, -27.0604, -41.8864, 0.74", "70.464, -27.2472, -42.7794, 0.74", "71.4216, -27.3207, -43.5344, 1.11", "72.4469, -27.2859, -44.2949, 1.4", "73.469, -27.1899, -45.0124, 1.4", "74.8927, -27.0629, -46.0315, 1.11", "75.7286, -27.0243, -46.6674, 0.74", "76.7795, -27.0829, -47.5187, 0.66", "78.0289, -27.3368, -48.5857, 0.81", "79.2839, -27.7904, -49.6126, 0.74", "80.3274, -28.2805, -50.454, 1.25", "80.9051, -28.5784, -50.8916, 1.69", "81.6584, -28.9366, -51.423, 1.69", "82.4423, -29.2071, -51.8704, 1.4", "83.6579, -29.389, -52.3742, 0.88", "85.4295, -29.3061, -52.9227, 0.81", "86.2331, -29.1951, -53.127, 0.81", "87.3495, -29.0275, -53.3491, 0.81", "88.7767, -28.8228, -53.5376, 0.81", "89.6622, -28.7301, -53.5967, 0.81", "90.9039, -28.6964, -53.6176, 0.81", "91.7285, -28.7907, -53.574, 0.96", "92.9867, -29.15, -53.5485, 0.96", "93.8381, -29.5354, -53.6194, 1.18", "94.5986, -29.9715, -53.7881, 1.47", "95.377, -30.4579, -54.0235, 1.47", "96.5143, -31.1739, -54.4162, 0.74", "97.8422, -31.9525, -54.9046, 0.74", "99.4781, -32.7946, -55.5435, 0.66", "101.012, -33.4871, -56.1912, 0.74", "101.974, -33.8441, -56.6004, 0.81", "103.08, -34.1433, -57.0495, 0.81", "103.643, -34.2312, -57.2568, 1.11", "104.999, -34.2805, -57.7161, 1.25", "105.602, -34.2337, -57.9553, 1.62", "106.274, -34.1151, -58.3268, 1.62", "107.596, -33.8204, -59.2037, 0.59", "108.424, -33.6246, -59.8174, 0.59", "109.669, -33.345, -60.7722, 0.88", "111.34, -33.0079, -62.0653, 1.4", "113.024, -32.7321, -63.3216, 0.74", "114.014, -32.6153, -64.0271, 0.59", "114.852, -32.5659, -64.5626, 0.81", "115.589, -32.5809, -64.9107, 0.81", "116.283, -32.6463, -65.0818, 0.96", "116.988, -32.7221, -65.1371, 0.96", "117.826, -32.7948, -65.1531, 0.59", "119.136, -32.8445, -65.1986, 0.59", "120.405, -32.8226, -65.2437, 0.66", "121.148, -32.7678, -65.3327, 1.03", "122.368, -32.6357, -65.5506, 1.03", "123.599, -32.4095, -66.0777, 0.59", "124.222, -32.2441, -66.4643, 0.59", "125.048, -31.9872, -67.0837, 0.59", "126.309, -31.6268, -68.1178, 1.11", "126.873, -31.5042, -68.5877, 1.33", "130.032, -31.0037, -71.1057, 1.03", "130.599, -30.9293, -71.5183, 1.4", "131.717, -30.7984, -72.2365, 0.81", "132.84, -30.6727, -72.8453, 0.74", "134.255, -30.5179, -73.4306, 0.59", "135.19, -30.4144, -73.7203, 0.59", "136.675, -30.2585, -73.9644, 0.59", "138.437, -30.0008, -74.247, 0.88", "139.063, -29.8475, -74.3383, 1.25", "139.621, -29.6533, -74.4116, 1.55", "140.45, -29.3078, -74.5308, 1.55", "141.124, -29.0161, -74.6456, 1.33", "141.957, -28.653, -74.7938, 0.66", "143.021, -28.2103, -74.9797, 0.66", "143.736, -27.9419, -75.1698, 0.66", "145.051, -27.4663, -75.6724, 0.66", "145.648, -27.3206, -76.1278, 0.66", "146.017, -27.2637, -76.4918, 0.96", "146.457, -27.2259, -76.9749, 0.96", "147.781, -27.2095, -78.4683, 0.74", "148.573, -27.2351, -79.3543, 1.62", "151.725, -27.407, -82.7331, 0.66", "152.201, -27.4225, -83.2186, 0.66", "152.928, -27.4279, -83.8851, 1.11", "153.873, -27.4202, -84.6425, 1.11", "154.826, -27.3774, -85.2443, 0.52", "155.76, -27.2781, -85.6725, 0.52", "156.936, -27.0278, -86.0336, 1.25", "157.846, -26.7953, -86.3184, 0.88", "159.579, -26.2511, -86.8613, 0.44", "160.57, -25.8788, -87.1538, 0.44", "162.038, -25.2541, -87.5602, 0.52", "163.009, -24.8009, -87.8134, 0.88", "163.491, -24.5651, -87.9282, 1.11", "163.907, -24.3349, -88.0751, 1.11", "164.248, -24.1177, -88.2498, 1.11", "165.391, -23.3268, -89.1083, 0.52", "165.861, -23.0061, -89.6037, 0.52", "166.522, -22.5761, -90.3947, 0.81", "168.077, -21.6407, -92.3057, 0.81", "168.811, -21.223, -93.185, 1.11", "169.131, -21.0547, -93.529, 1.92", "170.973, -20.2023, -95.1607, 0.59", "171.204, -20.1136, -95.3144, 0.59", "172.031, -19.876, -95.6358, 0.88", "173.077, -19.6664, -95.8043, 0.44", "174.78, -19.4061, -95.984, 0.44", "176.118, -19.2451, -96.0868, 0.74", "176.876, -19.1874, -96.1702, 0.74", "178.021, -19.1713, -96.4811, 0.52", "178.718, -19.2146, -96.8179, 0.52", "179.783, -19.3488, -97.5348, 0.59", "180.193, -19.4017, -97.8566, 0.59", "181.992, -19.5646, -99.36, 0.59", "183.179, -19.5993, -100.349, 0.81", "184.297, -19.5495, -101.278, 1.4", "184.891, -19.4552, -101.728, 1.55", "186.251, -19.0188, -102.575, 0.44", "186.825, -18.7305, -102.831, 0.88", "187.519, -18.2921, -102.987, 0.88", "188.272, -17.8099, -103.135, 0.59", "189.438, -17.1134, -103.381, 0.59", "190.233, -16.7264, -103.656, 0.81", "191.148, -16.3917, -104.074, 0.81", "192.373, -16.0317, -104.775, 0.52", "193.777, -15.6612, -105.746, 0.74", "194.252, -15.5314, -106.223, 0.74", "195.317, -15.1421, -107.766, 0.37", "195.769, -14.8997, -108.621, 0.37", "196.373, -14.4393, -110.022, 0.37", "196.831, -13.9523, -111.27, 0.59", "198.05, -12.4425, -114.69, 0.88", "198.626, -11.7181, -116.242, 0.52", "198.848, -11.484, -116.788, 0.52", "199.375, -11.0826, -117.976, 0.52", "199.835, -10.8247, -118.842, 0.81", "200.47, -10.5495, -119.827, 0.59", "201.042, -10.3598, -120.568, 0.59", "202.963, -9.87589, -122.938, 1.18", "205.244, -9.41498, -125.914, 0.74", "205.798, -9.32635, -126.703, 0.74", "206.308, -9.25591, -127.503, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-57.6119, 131.703, -39.9358, 0.29", "-58.8787, 131.554, -40.3551, 0.29", "-59.8977, 131.585, -40.7197, 0.29", "-60.4123, 131.74, -40.9939, 0.59", "-60.9872, 132.055, -41.3604, 0.59", "-61.4537, 132.378, -41.6651, 0.59", "-61.9546, 132.772, -41.9788, 0.44", "-62.3358, 133.23, -42.2452, 0.59", "-63.0093, 134.158, -42.8332, 0.37", "-63.3346, 134.604, -43.1504, 0.29", "-63.6713, 135.01, -43.4631, 0.59", "-64.0441, 135.422, -43.7919, 0.59", "-64.8603, 136.288, -44.494, 0.29", "-65.6122, 137.121, -45.177, 0.29", "-65.9559, 137.523, -45.528, 0.29", "-66.5958, 138.3, -46.3183, 0.29", "-66.9877, 138.789, -46.9146, 0.29", "-67.3929, 139.303, -47.6115, 0.52", "-67.7563, 139.781, -48.2791, 0.66", "-68.2817, 140.54, -49.3081, 0.44", "-68.6837, 141.159, -50.2134, 0.59", "-69.156, 141.883, -51.4774, 0.96", "-69.3474, 142.101, -51.9526, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-57.6119, 131.703, -39.9358, 0.66", "-56.2814, 131.801, -40.2077, 0.66", "-55.2183, 131.879, -40.4248, 0.29", "-54.4466, 131.936, -40.5825, 0.44", "-53.4953, 132.006, -40.7768, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-76.7307, 138.932, -33.0521, 0.29", "-77.3042, 139.603, -33.7098, 0.29", "-78.0361, 140.377, -34.5513, 0.59", "-78.5152, 140.889, -35.1145, 0.44", "-79.2062, 141.682, -35.9395, 0.88", "-79.5124, 142.087, -36.3344, 1.03", "-80.1949, 143.119, -37.2726, 0.52", "-80.4144, 143.497, -37.609, 0.44", "-80.8433, 144.314, -38.2531, 0.66", "-81.1664, 144.982, -38.7382, 0.88", "-81.7827, 146.287, -39.5872, 0.59", "-82.1953, 147.149, -40.1063, 0.74", "-82.6195, 148.023, -40.5912, 0.74", "-83.221, 149.174, -41.2263, 0.37", "-83.5047, 149.656, -41.4951, 0.37", "-84.1874, 150.669, -42.0544, 0.66", "-84.6747, 151.268, -42.3778, 0.66", "-85.1962, 151.796, -42.6642, 0.52", "-85.9641, 152.437, -43.0064, 0.88", "-86.4963, 152.807, -43.1951, 0.88", "-87.2901, 153.262, -43.4009, 0.52", "-88.2552, 153.738, -43.5784, 0.52", "-89.4585, 154.308, -43.7427, 0.88", "-90.238, 154.691, -43.8252, 0.88", "-91.2093, 155.182, -43.8997, 0.52", "-92.0405, 155.617, -43.954, 0.44", "-92.9857, 156.123, -44.0179, 0.37", "-93.9116, 156.666, -44.0768, 0.37", "-94.8333, 157.265, -44.1438, 0.29", "-96.3313, 158.326, -44.2781, 0.29", "-97.0301, 158.838, -44.3489, 0.29", "-97.8348, 159.412, -44.4325, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-76.7307, 138.932, -33.0521, 0.29", "-77.6127, 138.399, -31.9327, 0.29", "-78.0928, 138.109, -31.3235, 0.29", "-78.4329, 137.903, -30.8919, 0.22", "-78.8668, 137.641, -30.3412, 0.22", "-79.3496, 137.349, -29.7285, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "149.628, 57.2643, 89.2967, 0.29", "151.437, 67.5317, 96.0759, 0.29", "153.764, 76.8544, 104.027, 0.29", "157.362, 85.5718, 112.209, 0.29", "159.461, 93.1508, 121.955, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "149.628, 57.2643, 89.2967, 0.29", "155.444, 56.455, 92.537, 0.29", "161.175, 56.8831, 96.0057, 0.29", "166.385, 58.4472, 99.9344, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "87.4462, 45.5399, 2.94031, 0.37", "87.5907, 46.1669, 3.0282, 0.37", "87.7658, 47.1048, 3.19111, 0.37", "87.8927, 47.7842, 3.30913, 0.22", "88.1593, 49.2127, 3.55725, 0.22", "88.3626, 50.3014, 3.74637, 0.66", "88.6074, 51.6126, 3.97412, 1.11", "88.6533, 51.9425, 4.04815, 1.11", "90.6434, 59.9228, 4.48796, 1.11", "93.1048, 67.777, 4.87239, 1.11", "95.9469, 75.4432, 6.04866, 1.11", "98.6425, 82.9866, 8.14298, 1.11", "102.446, 90.2816, 8.95262, 1.11", "106.375, 97.4821, 10.0428, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "87.4462, 45.5399, 2.94031, 0.44", "88.3931, 45.7954, 3.11149, 0.44", "89.4056, 46.0226, 3.31389, 0.44", "90.4802, 46.256, 3.61098, 0.74", "91.13, 46.3936, 3.81933, 1.03", "91.7358, 46.5214, 4.03497, 1.03", "92.217, 46.6145, 4.19055, 1.03", "93.0426, 46.7493, 4.37702, 0.66", "94.1997, 46.9437, 4.5076, 0.66", "94.6178, 47.0318, 4.48554, 0.81", "95.2644, 47.2165, 4.36466, 0.44", "96.5966, 47.7005, 3.97834, 0.44", "98.1919, 48.3946, 3.41027, 0.37", "98.7565, 48.6638, 3.17039, 0.37", "99.6329, 49.0948, 2.76699, 0.37", "100.682, 49.6432, 2.3034, 0.66", "101.29, 49.9868, 2.0606, 0.66", "102.127, 50.4985, 1.82522, 0.37", "102.619, 50.7991, 1.74761, 0.37", "103.243, 51.1726, 1.66535, 0.59", "103.799, 51.5058, 1.57493, 0.59", "104.353, 51.8066, 1.39687, 0.44", "105.301, 52.2339, 1.04967, 0.66", "105.474, 52.2983, 0.986011, 0.96", "106.132, 52.4851, 0.779697, 0.96", "107.09, 52.6657, 0.521635, 1.11", "109.283, 52.957, 0.0598982, 0.44", "110.502, 53.0862, -0.130937, 0.44", "111.445, 53.1819, -0.230733, 0.37", "112.604, 53.313, -0.348421, 0.37", "113.307, 53.4133, -0.406444, 0.29", "114.277, 53.6262, -0.481872, 0.22", "114.94, 53.8931, -0.594985, 0.59", "115.299, 54.1348, -0.749271, 0.59", "116.369, 54.9157, -1.42491, 0.29", "116.827, 55.2451, -1.74221, 0.37", "117.369, 55.6028, -2.11095, 0.52", "117.96, 55.8951, -2.47573, 0.74", "118.807, 56.1615, -3.0456, 0.96", "120.345, 56.4753, -4.2266, 0.29", "120.95, 56.5708, -4.76868, 0.52", "121.226, 56.6119, -5.06202, 0.81", "122.153, 56.7834, -6.20227, 1.11", "123.868, 57.1719, -8.59346, 0.81", "124.627, 57.4063, -9.77572, 0.96", "125.439, 57.7546, -11.1543, 0.66", "126.046, 58.0657, -12.1979, 0.52", "126.644, 58.4279, -13.1394, 0.52", "126.89, 58.6106, -13.4441, 0.74", "127.487, 59.0169, -13.804, 0.74", "127.872, 59.2248, -13.9282, 0.96", "128.467, 59.461, -14.0475, 0.96", "129.451, 59.7704, -14.2978, 0.74", "130.433, 60.0681, -14.6319, 0.44", "131.537, 60.4408, -15.2022, 0.44", "131.965, 60.6129, -15.4994, 0.96", "132.762, 60.9947, -16.2553, 1.18", "133.901, 61.64, -17.6293, 0.66", "134.325, 61.9125, -18.2569, 0.66", "135.111, 62.4514, -19.6074, 0.59", "135.401, 62.6762, -20.1206, 0.52", "136.205, 63.3259, -21.4433, 0.52", "136.427, 63.5353, -21.79, 0.96", "136.887, 64.002, -22.4317, 0.96", "137.741, 64.9357, -23.5229, 0.59", "138.459, 65.8235, -24.3617, 0.59", "138.909, 66.4224, -24.865, 0.88", "139.547, 67.3383, -25.5049, 0.74", "140.106, 68.0852, -25.9787, 0.74", "140.752, 68.8579, -26.384, 0.88", "141.159, 69.2352, -26.5598, 0.88", "141.936, 69.7375, -26.8503, 0.37", "142.761, 70.145, -27.1406, 0.37", "144.066, 70.6387, -27.5702, 0.37", "144.988, 70.9329, -27.9001, 0.37", "146.072, 71.2378, -28.3266, 0.37", "146.728, 71.4365, -28.5959, 0.59", "147.541, 71.7128, -28.9318, 0.74", "148.089, 71.926, -29.1745, 0.74", "149.13, 72.4002, -29.6954, 0.44", "149.682, 72.6601, -29.9637, 0.37", "151.278, 73.3563, -30.5546, 0.37", "152.027, 73.6308, -30.7564, 0.74", "152.421, 73.7461, -30.8293, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "109.068, 93.4193, 17.2698, 0.29", "115.769, 101.749, 21.5505, 0.29", "122.655, 110.758, 23.4857, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "109.068, 93.4193, 17.2698, 0.29", "115.684, 104.127, 20.6283, 0.29", "122.331, 114.276, 25.4517, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.7687, -113.052, 8.77637, 0.29", "-13.9408, -124.519, 5.632, 0.29", "-12.47, -136.557, 4.36105, 0.29", "-11.7839, -148.369, 1.37364, 0.29", "-12.4181, -160.475, 0.112775, 0.29", "-14.1344, -172.492, -1.01932, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-16.7687, -113.052, 8.77637, 0.29", "-21.8636, -123.558, 3.50843, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.715644, -85.8269, 7.37836, 0.37", "-0.52154, -86.9455, 6.67755, 0.37", "-1.24471, -87.5322, 6.35738, 0.37", "-1.94382, -88.0363, 6.09481, 0.44", "-2.77102, -88.5792, 5.83416, 0.74", "-3.58528, -89.0751, 5.62236, 0.59", "-4.42151, -89.5328, 5.45398, 0.59", "-4.90517, -89.711, 5.43146, 0.74", "-5.69175, -89.8916, 5.46163, 0.88", "-6.17676, -89.9531, 5.52203, 1.18", "-6.65893, -89.9729, 5.61296, 0.59", "-7.38737, -89.9632, 5.77047, 0.44", "-8.11025, -89.9412, 5.92311, 0.52", "-8.4474, -89.9433, 5.98466, 0.74", "-9.02362, -90.0196, 6.09034, 0.74", "-9.44427, -90.1507, 6.14631, 0.59", "-9.87734, -90.3777, 6.1877, 0.59", "-10.4451, -90.8118, 6.22878, 0.59", "-11.0419, -91.4175, 6.27559, 0.44", "-11.7104, -92.2285, 6.34518, 0.37", "-12.0887, -92.7767, 6.39684, 1.03", "-12.3384, -93.1934, 6.43214, 1.03", "-12.5358, -93.5775, 6.46139, 0.96", "-12.8645, -94.3783, 6.51928, 0.66", "-13.1108, -95.1017, 6.56438, 0.66", "-13.3534, -95.9304, 6.59102, 0.88", "-13.4814, -96.4407, 6.59841, 1.03", "-13.6352, -97.1671, 6.5867, 0.88", "-13.8054, -98.1031, 6.5418, 0.52", "-13.9217, -98.8356, 6.48342, 0.52", "-14.0064, -99.3928, 6.42182, 0.96", "-14.0668, -99.756, 6.37512, 0.96", "-14.2585, -100.647, 6.25005, 0.59", "-14.4593, -101.353, 6.14922, 0.66", "-14.6604, -101.878, 6.07572, 0.81", "-14.9553, -102.514, 5.98128, 0.81", "-15.1502, -102.868, 5.92562, 0.81", "-15.5406, -103.511, 5.7773, 0.44", "-15.7524, -103.847, 5.67558, 0.81", "-16.0414, -104.333, 5.48978, 0.81", "-16.3998, -105.032, 5.18485, 0.52", "-16.6244, -105.603, 4.90815, 0.52", "-16.9193, -106.653, 4.36584, 0.74", "-17.021, -107.169, 4.09602, 1.11", "-17.1029, -107.645, 3.86439, 1.11", "-17.2058, -108.249, 3.60811, 0.96", "-17.3454, -108.925, 3.37151, 0.59", "-17.5722, -109.756, 3.14561, 0.44", "-17.9323, -110.668, 2.98826, 0.44", "-18.2761, -111.348, 2.90939, 0.44", "-18.6384, -111.981, 2.871, 0.74", "-18.908, -112.445, 2.85479, 0.74", "-19.1644, -112.894, 2.85392, 0.74", "-19.6053, -113.698, 2.87569, 0.66", "-19.9175, -114.298, 2.90489, 0.44", "-20.3105, -115.073, 2.94753, 0.44", "-20.9038, -116.151, 3.05441, 0.44", "-21.2249, -116.647, 3.14266, 0.88", "-21.5846, -117.106, 3.27353, 1.18", "-21.8551, -117.399, 3.39632, 1.18", "-22.1888, -117.713, 3.56342, 1.03", "-23.1322, -118.473, 4.04863, 0.66", "-23.9938, -119.072, 4.50793, 0.66", "-24.724, -119.562, 4.90071, 1.25", "-25.1112, -119.826, 5.11103, 1.55", "-25.5794, -120.152, 5.36516, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.715644, -85.8269, 7.37836, 0.74", "-0.183996, -87.0911, 6.64622, 0.74", "-1.23948, -88.5409, 5.78988, 0.74", "-1.78962, -89.4091, 5.36556, 0.74", "-2.32029, -90.3834, 4.9558, 0.81", "-3.31517, -92.6238, 4.18292, 0.52", "-3.93725, -94.4118, 3.67134, 0.74", "-4.16384, -95.3659, 3.4632, 0.74", "-4.07896, -97.4948, 3.28915, 0.74", "-3.70341, -98.5586, 3.30239, 0.81", "-2.89325, -99.854, 3.42695, 0.66", "-2.37455, -100.496, 3.5284, 1.11", "-1.83717, -101.122, 3.60441, 1.11", "-1.17482, -101.92, 3.61462, 0.81", "-0.386961, -103.001, 3.46546, 0.81", "0.297951, -104.053, 3.26576, 0.96", "0.891064, -105.033, 3.0594, 0.88", "1.59626, -106.237, 2.82205, 0.96", "2.07557, -107.133, 2.63933, 1.11", "2.58005, -108.249, 2.38239, 1.11", "2.9618, -109.293, 2.1166, 0.74", "3.40457, -110.918, 1.69507, 0.66", "3.57718, -111.766, 1.47881, 0.66", "3.83641, -113.727, 1.0333, 0.66", "3.92994, -115.781, 0.632298, 0.59", "3.87625, -116.968, 0.423706, 0.96", "3.68933, -118.443, 0.187209, 1.18", "3.47125, -119.541, 0.0453875, 1.03", "3.17179, -120.828, -0.0849796, 0.88", "2.80226, -122.499, -0.192169, 0.74", "2.57667, -123.953, -0.17056, 0.59", "2.44212, -125.183, -0.0754738, 0.59", "2.35291, -126.204, 0.0880284, 1.4", "2.27734, -126.956, 0.27757, 1.4", "2.11798, -128.876, 0.934884, 0.88", "2.04097, -131.13, 1.97056, 0.66", "2.02521, -132.074, 2.47864, 0.88", "2.00524, -133.273, 3.16783, 0.88", "1.9429, -135.139, 4.25945, 0.59", "1.84995, -136.329, 4.95016, 0.81", "1.58775, -138.295, 6.04519, 0.81", "1.40538, -139.309, 6.51256, 1.11", "1.25258, -140.143, 6.84, 1.11", "1.03914, -141.344, 7.1858, 0.52", "0.866295, -142.482, 7.41986, 0.74", "0.71439, -143.498, 7.56591, 1.03", "0.625087, -144.349, 7.61819, 1.25", "0.629299, -145.189, 7.69931, 1.33", "0.810719, -146.57, 7.98055, 1.03", "1.18396, -147.862, 8.34909, 0.74", "1.6474, -148.912, 8.70349, 0.44", "2.20979, -149.866, 9.06235, 0.29", "3.22078, -151.179, 9.61126, 0.29", "4.63525, -152.623, 10.2882, 0.29", "5.46977, -153.271, 10.6276, 0.29", "6.25293, -153.728, 10.8616, 0.88", "6.90457, -154.054, 11.0222, 0.88", "7.97961, -154.555, 11.2432, 0.52", "8.4627, -154.781, 11.2875, 0.52", "9.33305, -155.231, 11.348, 0.52", "10.0116, -155.721, 11.4663, 0.52", "10.8872, -156.63, 11.617, 0.52", "11.2918, -157.209, 11.6654, 0.88", "11.7082, -157.926, 11.6636, 0.88", "12.2007, -158.806, 11.5639, 1.11", "12.7142, -159.627, 11.4193, 0.66", "13.7155, -160.937, 11.0628, 0.66", "14.2109, -161.409, 10.8894, 0.66", "15.1059, -162.081, 10.6233, 0.66", "15.8432, -162.561, 10.4388, 0.52", "17.0946, -163.373, 10.107, 0.66", "17.5056, -163.64, 10.0417, 0.66", "18.4391, -164.235, 10.0602, 0.44", "19.2384, -164.753, 10.1992, 0.44", "20.381, -165.536, 10.5597, 0.52", "21.7804, -166.54, 11.1937, 0.66", "22.9968, -167.457, 11.8372, 0.44", "24.3156, -168.457, 12.6026, 0.81", "25.5396, -169.387, 13.2861, 0.52", "26.3373, -169.998, 13.6874, 0.74", "27.2919, -170.744, 14.0871, 0.29", "27.783, -171.153, 14.2102, 0.52", "28.4739, -171.796, 14.1741, 0.59", "29.7639, -173.083, 13.9634, 0.37", "30.676, -174.026, 13.7113, 0.66", "31.1895, -174.559, 13.5377, 1.03", "32.0051, -175.407, 13.2242, 1.03", "32.9157, -176.346, 12.9258, 0.74", "34.4192, -177.849, 12.6016, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "20.3445, -131.162, -14.5814, 0.44", "20.3913, -131.965, -14.4483, 0.44", "20.419, -132.525, -14.3531, 0.81", "20.4332, -132.956, -14.2782, 1.18", "20.4459, -133.533, -14.1788, 0.74", "20.4565, -134.133, -14.0781, 0.44", "20.4638, -134.661, -13.9911, 0.96", "20.4679, -135.209, -13.9037, 0.96", "20.4673, -135.73, -13.8229, 1.18", "20.4367, -136.509, -13.6949, 0.74", "20.3566, -137.219, -13.5835, 0.66", "20.244, -137.8, -13.4973, 0.66", "20.0517, -138.533, -13.4109, 0.66", "19.9365, -138.897, -13.3803, 1.03", "19.7529, -139.404, -13.3541, 0.81", "19.4468, -140.216, -13.3778, 0.52", "19.2981, -140.703, -13.4128, 0.44", "19.1884, -141.312, -13.4638, 0.37", "19.1726, -141.656, -13.4871, 0.66", "19.1868, -142.031, -13.4903, 0.66", "19.279, -143.007, -13.4798, 0.44", "19.389, -143.984, -13.4255, 0.44", "19.4537, -144.764, -13.349, 0.66", "19.472, -145.452, -13.2502, 0.81", "19.4254, -146.204, -13.1271, 0.96", "19.275, -147.002, -12.9659, 1.11", "19.0806, -147.625, -12.8177, 0.81", "18.8614, -148.179, -12.7065, 0.88", "18.6814, -148.612, -12.6401, 0.66", "18.4213, -149.224, -12.5663, 0.29", "18.0935, -150.008, -12.4848, 0.29", "17.9058, -150.462, -12.4294, 0.52", "17.6096, -151.166, -12.3491, 0.52", "17.3627, -151.745, -12.2796, 0.37", "17.1279, -152.266, -12.2074, 0.29", "16.8979, -152.721, -12.1204, 0.29", "16.7923, -152.887, -12.0833, 0.88", "16.5302, -153.173, -11.9997, 1.11", "16.1931, -153.429, -11.8926, 0.44", "15.7573, -153.686, -11.7534, 0.37", "15.3283, -153.898, -11.625, 0.59", "14.9374, -154.065, -11.5173, 0.74", "14.4176, -154.273, -11.382, 0.44", "13.9672, -154.454, -11.2622, 0.37", "13.6716, -154.585, -11.1786, 0.88", "13.3398, -154.762, -11.0724, 1.11", "13.1096, -154.91, -10.9847, 1.11", "12.8806, -155.066, -10.8814, 1.11", "12.3252, -155.465, -10.6064, 0.29", "11.9613, -155.738, -10.4229, 0.59", "11.7215, -155.924, -10.299, 0.59", "11.143, -156.411, -9.98381, 0.29", "10.7991, -156.738, -9.78189, 0.29", "10.5366, -157.023, -9.61832, 0.52", "10.2359, -157.387, -9.42397, 0.52", "10.0788, -157.589, -9.32002, 0.81", "9.82062, -157.983, -9.14125, 0.81", "9.58024, -158.478, -8.95838, 0.29", "9.31978, -159.141, -8.73836, 0.29", "9.18298, -159.528, -8.61091, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.3445, -131.162, -14.5814, 0.22", "21.5489, -131.725, -15.1728, 0.22", "22.8188, -132.318, -15.7963, 0.22", "24.352, -133.034, -16.5492, 0.22", "25.4074, -133.528, -17.0674, 0.22", "26.5273, -134.051, -17.6173, 0.22", "27.6794, -134.589, -18.183, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "206.308, -9.25591, -127.503, 0.74", "208.219, -10.6603, -129.077, 0.74", "208.71, -11.1474, -129.446, 0.44", "209.068, -11.518, -129.673, 0.74", "209.643, -12.0817, -129.966, 0.52", "210.436, -12.8002, -130.273, 0.52", "211.315, -13.5067, -130.565, 0.52", "211.973, -14.0409, -130.658, 0.52", "212.676, -14.533, -130.734, 0.52", "213.61, -15.0175, -130.843, 0.52", "214.427, -15.2932, -130.93, 0.74", "215.312, -15.4591, -131.022, 1.03", "215.647, -15.4911, -131.061, 1.4", "215.984, -15.5088, -131.107, 1.4", "217.335, -15.569, -131.345, 0.44", "217.844, -15.6225, -131.401, 0.74", "218.584, -15.7713, -131.402, 0.74", "219.081, -15.9204, -131.333, 0.96", "219.537, -16.1109, -131.198, 0.96", "220.116, -16.4342, -130.958, 0.96", "221.422, -17.4231, -130.239, 0.66", "221.936, -17.9142, -129.909, 0.81", "222.222, -18.2567, -129.692, 0.81", "222.892, -19.1605, -129.142, 0.52", "223.385, -19.8596, -128.74, 0.52", "223.928, -20.6265, -128.346, 0.52", "224.478, -21.3276, -128.057, 0.52", "225.203, -22.1746, -127.748, 0.44", "225.621, -22.5833, -127.635, 0.96", "226.106, -22.9289, -127.631, 1.11", "226.834, -23.3068, -127.783, 0.44", "227.499, -23.5799, -128.088, 0.37", "227.977, -23.7598, -128.432, 0.37", "228.744, -24.0269, -129.165, 0.66", "229.593, -24.3029, -130.123, 0.74", "229.955, -24.4059, -130.57, 0.81", "230.487, -24.5223, -131.268, 0.81", "231.184, -24.6302, -132.193, 0.66", "231.834, -24.7066, -132.992, 0.66", "232.457, -24.78, -133.686, 0.29", "232.891, -24.8403, -134.13, 0.59", "233.359, -24.9068, -134.572, 0.74", "233.805, -24.9615, -134.98, 0.44", "234.395, -25.0326, -135.487, 0.37", "234.998, -25.124, -136.001, 0.37", "235.579, -25.2424, -136.491, 0.59", "236.032, -25.3607, -136.877, 0.59", "237.179, -25.6837, -138.034, 0.29", "237.897, -25.9195, -138.887, 0.29", "238.255, -26.0534, -139.382, 0.29", "238.559, -26.1835, -139.828, 0.74", "238.856, -26.3236, -140.29, 0.74", "239.977, -27.0157, -142.262, 0.37", "240.282, -27.2858, -142.906, 0.52", "240.497, -27.521, -143.48, 0.81", "240.719, -27.7661, -144.15, 0.37", "240.923, -27.9578, -144.786, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "206.308, -9.25591, -127.503, 0.88", "207.346, -8.65757, -128.904, 0.88", "207.767, -8.51923, -129.562, 1.25", "208.148, -8.44851, -130.26, 1.25", "208.643, -8.3546, -131.262, 0.59", "209.965, -8.10344, -133.942, 0.59", "211.294, -7.85117, -136.634, 0.96", "211.979, -7.80406, -138.111, 1.11", "213.145, -7.82198, -140.861, 1.25", "213.828, -7.89926, -142.639, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-97.8348, 159.412, -44.4325, 0.22", "-97.6317, 158.529, -43.6902, 0.22", "-97.5051, 157.979, -43.2276, 0.22", "-97.2217, 156.747, -42.192, 0.22", "-97.0488, 155.996, -41.5602, 0.22", "-96.9002, 155.35, -41.0171, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-97.8348, 159.412, -44.4325, 0.22", "-98.4268, 159.958, -44.1191, 0.22", "-98.9467, 160.458, -43.8505, 0.22", "-99.4411, 160.933, -43.595, 0.22", "-99.9142, 161.388, -43.3506, 0.22", "-100.626, 162.073, -42.9826, 0.22", "-100.989, 162.423, -42.7949, 0.37", "-101.34, 162.811, -42.596, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "159.461, 93.1508, 121.955, 0.29", "161.584, 99.1216, 128.691, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "159.461, 93.1508, 121.955, 0.29", "162.041, 103.333, 129.383, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "166.385, 58.4472, 99.9344, 0.29", "171.329, 59.0337, 88.12, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "166.385, 58.4472, 99.9344, 0.29", "158.083, 58.9814, 100.611, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "152.421, 73.7461, -30.8293, 0.37", "151.852, 73.8776, -31.5302, 0.37", "151.192, 73.929, -32.7352, 0.66", "150.889, 73.8462, -33.7163, 0.29", "150.672, 73.744, -34.6206, 0.29", "150.422, 73.6249, -35.76, 0.29", "149.891, 73.4168, -38.2374, 0.29", "149.661, 73.281, -39.3906, 0.81", "149.046, 72.7758, -42.8733, 0.44", "148.87, 72.5758, -44.1008, 0.96", "148.762, 72.4187, -45.1603, 1.18", "148.677, 72.2399, -46.5531, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "152.421, 73.7461, -30.8293, 0.37", "153.494, 74.421, -30.565, 0.37", "154.763, 75.3108, -30.4484, 0.29", "155.234, 75.663, -30.4448, 0.66", "155.69, 76.0342, -30.4679, 0.66", "156.268, 76.5235, -30.5611, 0.37", "157.083, 77.2106, -30.7289, 0.37", "157.979, 77.9935, -31.0053, 0.81", "158.334, 78.3526, -31.1377, 1.11", "158.811, 78.8882, -31.3295, 1.33", "159.732, 80.062, -31.7645, 0.44", "160.229, 80.8325, -32.0468, 0.52", "160.817, 81.9492, -32.4646, 1.03", "161.388, 83.2656, -32.9875, 0.52", "161.625, 83.94, -33.2547, 0.66", "161.828, 84.6954, -33.559, 0.66", "162.035, 85.9253, -34.0774, 0.44", "162.108, 86.5532, -34.4176, 0.29", "162.205, 87.2773, -34.8893, 0.44", "162.408, 88.0589, -35.4607, 0.66", "162.652, 88.7033, -35.9348, 0.37", "162.998, 89.4241, -36.4916, 0.37", "163.603, 90.542, -37.4352, 0.29", "163.981, 91.2533, -38.0531, 0.29", "164.538, 92.4033, -39.1416, 0.29", "164.829, 93.186, -39.9057, 0.29", "164.964, 93.796, -40.5129, 1.55", "164.986, 94.3008, -41.027, 1.18", "164.846, 94.858, -41.5805, 0.96", "164.341, 95.7392, -42.5175, 0.52", "163.439, 96.7162, -43.6537, 0.29", "162.729, 97.279, -44.3894, 0.29", "162.359, 97.5284, -44.7467, 0.29", "161.352, 98.1696, -45.7425, 0.22", "161.058, 98.3526, -46.0596, 0.66", "160.718, 98.5708, -46.4693, 0.66", "160.203, 98.9463, -47.2603, 0.37", "159.861, 99.355, -48.0231, 0.29", "159.683, 99.7707, -48.7747, 0.22", "159.597, 100.187, -49.4201, 0.22", "159.509, 100.925, -50.3509, 0.22", "159.498, 101.298, -50.7434, 0.29", "159.516, 101.916, -51.2896, 0.29", "159.572, 102.897, -52.0657, 0.29", "159.72, 104.212, -53.0356, 0.29", "159.826, 105.053, -53.6207, 0.29", "159.944, 105.756, -54.0716, 0.29", "160.105, 106.698, -54.6438, 0.29", "160.382, 108.169, -55.472, 0.29", "160.655, 109.328, -56.0844, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-14.1344, -172.492, -1.01932, 0.29", "-15.4097, -182.053, -3.12417, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-14.1344, -172.492, -1.01932, 0.29", "-2.37755, -169.785, -0.348075, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-25.5794, -120.152, 5.36516, 0.37", "-26.25, -121.476, 5.18607, 0.37", "-26.5704, -122.108, 5.10051, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-25.5794, -120.152, 5.36516, 0.29", "-30.2275, -119.592, 4.48451, 0.29", "-31.5826, -119.428, 4.26208, 0.22", "-33.3756, -119.318, 4.03932, 0.22", "-34.432, -119.328, 3.95741, 1.47", "-35.2152, -119.335, 3.89668, 1.69", "-35.9636, -119.341, 3.83865, 1.69", "-37.9271, -119.325, 4.08712, 0.96", "-39.3682, -119.443, 4.16744, 0.29", "-40.6289, -119.722, 4.15387, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "34.4192, -177.849, 12.6016, 0.29", "33.6466, -178.951, 11.218, 0.29", "32.9728, -179.913, 10.0114, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "34.4192, -177.849, 12.6016, 0.29", "34.4381, -175.649, 11.3015, 0.29", "34.3946, -174.308, 9.81761, 0.29", "34.307, -173.746, 8.53148, 0.29", "34.2221, -173.202, 7.28355, 0.52", "33.9819, -171.662, 3.75388, 0.44", "33.9013, -171.145, 2.56952, 0.29", "33.6879, -171.395, 0.602578, 0.29", "33.6005, -171.629, -0.103154, 0.29", "31.8981, -166.096, -10.4886, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "9.18298, -159.528, -8.61091, 0.22", "9.24718, -160.633, -8.34898, 0.22", "9.36277, -161.894, -7.98346, 0.22", "9.55852, -163.529, -7.51152, 0.22", "9.73711, -164.87, -7.12838, 0.22", "9.99583, -166.596, -6.65644, 0.22", "10.2011, -167.965, -6.28204, 0.22", "10.443, -169.565, -5.86437, 0.22", "10.632, -170.577, -5.61513, 0.37", "10.7188, -170.924, -5.52817, 0.37", "11.0021, -171.888, -5.26879, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.18298, -159.528, -8.61091, 1.55", "8.6266, -159.882, -8.474, 1.55", "8.30151, -160.135, -8.40126, 1.55", "7.65966, -160.654, -8.25468, 0.29", "6.72854, -161.409, -8.01679, 0.44", "6.4853, -161.583, -7.97553, 0.44", "5.43599, -162.205, -7.86404, 0.29", "4.76453, -162.551, -7.82137, 0.29", "4.09387, -162.854, -7.77867, 0.29", "3.35019, -163.136, -7.71707, 0.29", "1.88664, -163.551, -7.52625, 0.29", "0.594196, -163.783, -7.32277, 0.29", "-0.221794, -163.833, -7.17463, 0.22", "-1.03767, -163.826, -7.00479, 0.22", "-1.67045, -163.798, -6.85546, 0.22", "-2.35464, -163.748, -6.66289, 0.22", "-3.17395, -163.68, -6.33111, 0.22", "-3.7815, -163.592, -6.06201, 0.22", "-4.21193, -163.493, -5.89112, 0.52", "-4.60098, -163.373, -5.75704, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "213.828, -7.89926, -142.639, 0.81", "215.566, -7.99284, -143.439, 0.81", "216.863, -8.1408, -144.036, 0.88", "217.878, -8.29168, -144.551, 0.37", "218.171, -8.3363, -144.697, 0.37", "218.812, -8.4338, -145.016, 0.66", "219.23, -8.49726, -145.224, 0.74", "219.376, -8.50877, -145.315, 0.74", "220.147, -8.7122, -145.713, 0.37", "220.52, -8.84045, -145.927, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "213.828, -7.89926, -142.639, 0.44", "215.277, -6.9192, -143.915, 0.44", "216.3, -6.22707, -144.816, 0.44", "216.865, -5.84462, -145.314, 0.44", "217.976, -5.09319, -146.292, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "148.677, 72.2399, -46.5531, 0.96", "148.146, 72.2367, -49.6574, 0.96", "147.414, 72.187, -52.7765, 0.59", "147.232, 72.1806, -53.5229, 0.59", "147.075, 72.1876, -54.2332, 0.37", "146.761, 72.2545, -55.8803, 0.29", "146.573, 72.3237, -56.9423, 0.29", "146.44, 72.4344, -57.6266, 0.66", "146.256, 72.808, -58.8909, 0.22", "146.195, 73.0322, -59.6592, 0.22", "146.127, 73.2984, -60.6446, 0.88", "146.074, 73.4604, -61.244, 0.88", "145.846, 73.8808, -62.8825, 0.37", "145.695, 74.0175, -63.6545, 0.96", "145.518, 74.0921, -64.4284, 1.11", "145.189, 74.1673, -65.9115, 0.44", "145.015, 74.2011, -66.8193, 0.37", "144.903, 74.2329, -67.5377, 0.52", "144.479, 74.4096, -70.6016, 0.37", "144.362, 74.5326, -72.0513, 0.96", "144.312, 74.6783, -73.172, 0.96", "144.286, 74.8465, -74.3086, 0.52", "144.28, 74.9456, -75.1606, 1.33", "144.27, 75.0337, -76.1932, 1.33", "144.119, 75.3542, -80.4371, 0.52", "144.094, 75.3861, -80.9158, 0.52", "144.026, 75.4383, -81.9425, 0.52", "143.663, 75.5649, -86.2898, 0.44", "143.442, 75.6152, -88.2667, 0.59", "143.278, 75.6734, -89.4385, 0.59", "143.058, 75.7844, -90.5392, 0.88", "142.969, 75.8483, -90.9122, 1.25", "142.76, 76.0451, -91.5436, 1.47", "142.145, 76.7228, -92.7335, 0.29", "141.553, 77.429, -93.755, 0.29", "141.306, 77.7252, -94.1538, 0.29", "140.868, 78.2596, -94.8111, 0.29", "140.594, 78.6214, -95.2327, 0.29", "139.945, 79.5373, -96.2378, 0.29", "139.688, 79.8917, -96.6339, 0.29", "139.323, 80.2968, -97.1489, 0.96", "139.089, 80.5714, -97.5177, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "148.677, 72.2399, -46.5531, 0.15", "149.185, 73.5124, -46.6109, 0.15", "149.463, 74.2096, -46.6425, 0.15", "149.687, 74.7698, -46.668, 0.81", "149.881, 75.2562, -46.6901, 1.03", "150.136, 75.8972, -46.7192, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-26.5704, -122.108, 5.10051, 0.52", "-26.9257, -122.699, 4.84745, 0.52", "-27.4127, -123.658, 4.52207, 0.52", "-27.9904, -124.879, 4.24878, 0.37", "-28.2539, -125.441, 4.1344, 0.52", "-28.6072, -126.197, 3.99363, 0.44", "-29.0132, -127.035, 3.83912, 0.37", "-29.4243, -127.886, 3.72464, 0.29", "-29.8446, -128.783, 3.66554, 0.29", "-30.3532, -129.953, 3.61233, 1.03", "-30.5005, -130.281, 3.59671, 1.18", "-30.9601, -131.213, 3.54558, 0.88", "-31.2961, -131.881, 3.49437, 0.44", "-31.6973, -132.752, 3.38726, 0.37", "-31.8794, -133.265, 3.28386, 0.59", "-31.9922, -133.748, 3.16142, 0.44", "-32.1101, -134.736, 2.8456, 0.44", "-32.1248, -135.439, 2.5866, 0.44", "-32.0983, -136.518, 2.17151, 0.52", "-32.0752, -137.521, 1.79888, 0.66", "-32.0715, -138.351, 1.5689, 0.88", "-32.09, -138.928, 1.49185, 0.88", "-32.1746, -139.806, 1.55339, 0.52", "-32.3561, -140.561, 1.78972, 0.29", "-32.6924, -141.454, 2.26, 0.29", "-33.1933, -142.465, 2.8546, 0.29", "-33.5927, -143.129, 3.2301, 0.96", "-33.8781, -143.572, 3.41897, 1.18", "-34.1795, -144.064, 3.57253, 1.18", "-34.6756, -144.995, 3.70617, 0.59", "-35.0686, -145.982, 3.73856, 0.52", "-35.365, -146.947, 3.72347, 0.52", "-35.7066, -148.197, 3.65186, 0.66", "-35.9038, -149.027, 3.59666, 0.66", "-36.0728, -149.922, 3.53478, 0.81", "-36.1988, -151.224, 3.48297, 0.81", "-36.1654, -152.165, 3.55983, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-26.5704, -122.108, 5.10051, 0.37", "-26.9927, -121.94, 5.80957, 0.37", "-27.5909, -121.765, 6.71397, 0.37", "-27.8923, -121.684, 7.12877, 0.37", "-28.5924, -121.493, 8.01187, 0.29", "-29.0233, -121.363, 8.51905, 0.29", "-29.5343, -121.209, 9.12036, 0.29", "-30.025, -121.078, 9.70572, 0.37", "-30.2941, -121.031, 9.96925, 0.37", "-30.5827, -120.998, 10.2017, 0.29", "-30.9353, -120.947, 10.4019, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.9728, -179.913, 10.0114, 0.22", "32.2822, -180.91, 10.7894, 0.22", "31.2872, -182.347, 11.9105, 0.22", "30.7215, -183.163, 12.5477, 0.29", "30.4132, -183.608, 12.895, 0.29", "29.6144, -184.762, 13.795, 0.22", "29.0924, -185.515, 14.3831, 0.22", "24.079, -195.596, 19.1749, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "32.9728, -179.913, 10.0114, 0.37", "33.1141, -180.852, 10.546, 0.37", "33.0859, -181.706, 10.9723, 0.96", "32.8878, -182.773, 11.4365, 0.59", "32.6483, -183.592, 11.7249, 0.59", "32.3943, -184.46, 12.0307, 0.22", "32.1523, -185.286, 12.322, 0.22", "31.763, -186.17, 12.6081, 0.22", "31.3167, -186.922, 12.7784, 0.22", "30.7151, -187.697, 12.8952, 0.22", "30.0468, -195.428, 15.6559, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "217.976, -5.09319, -146.292, 0.37", "220.652, -4.291, -153.889, 0.37", "221.097, -4.11598, -155.177, 0.66", "221.422, -3.92666, -156.181, 0.66", "221.572, -3.81626, -156.66, 0.96", "221.957, -3.45702, -157.866, 1.11", "222.424, -2.95298, -159.245, 1.11", "223.128, -1.91558, -160.761, 0.81", "223.69, -1.0127, -161.8, 1.4", "223.879, -0.69082, -162.094, 1.4", "224.623, 0.601483, -162.976, 0.37", "225.162, 1.53778, -163.383, 0.37", "225.837, 2.65854, -163.627, 0.37", "226.383, 3.55326, -163.671, 0.66", "226.809, 4.28964, -163.646, 0.66", "227.308, 5.36629, -163.617, 0.29", "227.587, 6.22136, -163.594, 0.52", "227.734, 6.85787, -163.596, 0.52", "227.941, 7.94349, -163.656, 0.29", "228.166, 9.07304, -163.77, 1.03", "228.555, 10.7656, -164.044, 0.66", "228.827, 11.8427, -164.26, 0.44", "228.931, 12.2264, -164.341, 0.66", "229.258, 13.4123, -164.611, 0.37", "229.439, 14.0065, -164.731, 0.52", "229.827, 15.142, -164.901, 0.37", "230.129, 15.907, -164.941, 0.37", "230.459, 16.719, -164.974, 0.37", "230.773, 17.6402, -165.008, 0.37", "231.021, 18.5357, -165.024, 0.96", "231.125, 18.912, -165.026, 0.96", "231.582, 20.4063, -165.002, 0.29", "231.981, 21.6141, -164.991, 0.29", "232.376, 22.7331, -164.992, 0.29", "232.716, 23.6698, -165.004, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "217.976, -5.09319, -146.292, 0.52", "218.38, -0.343017, -147.966, 0.52", "218.407, 0.0488765, -148.085, 0.52", "218.498, 1.8943, -148.582, 0.37", "218.523, 2.41081, -148.721, 0.29", "218.6, 3.97336, -149.141, 0.29", "218.665, 5.30175, -149.499, 0.29", "218.692, 6.56182, -149.485, 0.29", "218.699, 7.10827, -149.492, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "139.089, 80.5714, -97.5177, 0.29", "138.704, 81.123, -99.528, 0.29", "138.623, 81.1479, -100.144, 0.29", "138.537, 81.1038, -101.01, 0.29", "138.398, 81.021, -102.574, 0.29", "138.34, 81.0097, -103.167, 0.44", "138.26, 80.9944, -103.972, 0.44", "138.0, 80.8331, -106.333, 0.29", "137.9, 80.7078, -107.462, 0.29", "137.866, 80.6145, -108.127, 0.29", "137.822, 80.4685, -109.143, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "139.089, 80.5714, -97.5177, 0.22", "138.388, 80.0842, -97.1706, 0.22", "137.812, 79.7355, -96.8827, 0.22", "137.099, 79.3592, -96.5046, 1.4", "136.299, 78.9371, -96.0805, 0.22", "135.406, 78.4661, -95.6072, 1.84", "134.624, 78.0536, -95.1927, 0.22", "133.952, 77.7488, -94.7864, 0.22", "133.326, 77.4992, -94.3855, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "150.136, 75.8972, -46.7192, 0.74", "149.926, 76.6253, -46.6017, 0.74", "149.541, 77.7773, -46.3931, 0.22", "149.257, 78.461, -46.2755, 0.22", "148.606, 79.7841, -46.0402, 0.22", "147.988, 80.943, -45.7664, 1.33", "147.683, 81.5135, -45.597, 1.33", "147.032, 82.6514, -45.1633, 0.22", "146.534, 83.4367, -44.8035, 0.22", "146.193, 83.9184, -44.5624, 0.22", "145.406, 84.9484, -44.0722, 0.22", "144.842, 85.718, -43.6437, 0.22", "144.534, 86.2416, -43.3504, 0.37", "144.292, 86.8027, -43.0451, 0.37", "144.11, 87.4691, -42.6798, 0.37", "144.022, 87.997, -42.422, 0.15", "143.77, 89.4753, -41.8205, 0.22", "143.553, 90.7008, -41.3753, 0.22", "143.384, 91.5581, -41.0537, 0.22", "142.995, 93.0991, -40.5113, 0.22", "142.641, 94.1544, -40.1357, 0.22", "142.117, 95.4636, -39.6497, 0.22", "141.899, 95.934, -39.4746, 0.74", "140.913, 97.8118, -38.7321, 0.29", "140.283, 98.9192, -38.3023, 0.29", "139.658, 100.002, -37.904, 0.29", "139.22, 100.792, -37.5668, 0.29", "138.752, 101.752, -37.0653, 0.52", "138.352, 102.621, -36.5584, 0.37", "137.865, 103.764, -35.854, 0.29", "137.752, 104.045, -35.6711, 0.37", "137.312, 105.14, -34.9564, 0.37", "136.692, 106.582, -33.9947, 0.37", "136.188, 107.68, -33.2295, 0.22", "135.918, 108.278, -32.786, 0.22", "135.625, 108.919, -32.3037, 0.74", "135.453, 109.276, -32.0507, 0.88", "134.881, 110.415, -31.3689, 0.59", "134.144, 111.754, -30.7456, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "150.136, 75.8972, -46.7192, 0.29", "150.906, 76.1087, -46.9906, 0.29", "151.627, 76.189, -47.3199, 0.29", "152.356, 76.2138, -47.6827, 1.03", "152.702, 76.2132, -47.864, 1.03", "153.562, 76.1838, -48.2832, 0.44", "154.215, 76.1539, -48.5735, 0.29", "155.086, 76.0543, -48.9392, 0.96", "155.38, 76.0117, -49.0506, 0.96", "156.238, 75.9054, -49.3266, 0.22", "156.891, 75.8571, -49.5105, 0.22", "157.558, 75.8612, -49.6472, 0.22", "158.277, 75.9171, -49.7716, 0.22", "159.101, 76.0444, -49.901, 0.22", "159.613, 76.1555, -49.983, 0.52", "160.029, 76.2923, -50.0515, 0.29", "160.541, 76.5465, -50.1439, 1.03", "160.862, 76.7847, -50.1815, 1.03", "161.126, 77.0821, -50.1979, 0.88", "161.374, 77.4291, -50.1875, 0.66", "161.665, 77.9086, -50.1498, 0.37", "161.939, 78.4485, -50.0808, 0.59", "162.233, 79.1475, -49.9658, 0.29", "162.474, 79.7796, -49.8277, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.1654, -152.165, 3.55983, 0.74", "-36.5224, -153.086, 4.05284, 0.74", "-37.1708, -154.438, 4.86146, 0.66", "-37.7239, -155.318, 5.45852, 0.52", "-38.5578, -156.373, 6.24049, 0.37", "-39.048, -156.949, 6.66486, 0.74", "-39.4477, -157.44, 7.03341, 1.03", "-39.9964, -158.088, 7.53862, 0.74", "-40.78, -159.026, 8.25516, 0.52", "-41.5477, -160.08, 8.97725, 0.52", "-42.0477, -160.936, 9.45617, 0.66", "-42.7195, -162.447, 10.1215, 0.88", "-42.9087, -162.99, 10.3093, 1.18", "-43.1472, -163.87, 10.5501, 0.81", "-43.4088, -165.128, 10.8108, 0.52", "-43.6277, -166.195, 10.9604, 0.52", "-43.9376, -167.462, 11.0806, 0.52", "-44.1202, -168.065, 11.1053, 0.52", "-44.509, -169.249, 11.1479, 0.52", "-44.93, -170.418, 11.1944, 0.52", "-45.3236, -171.4, 11.2198, 1.03", "-45.6343, -172.113, 11.2415, 1.25", "-46.0866, -172.995, 11.2797, 0.66", "-46.6081, -173.848, 11.3252, 0.29", "-47.3563, -174.672, 11.4128, 0.29", "-47.8263, -174.529, 11.523, 0.52", "-48.9864, -173.676, 11.8345, 0.29", "-49.8807, -172.884, 12.0734, 0.29", "-50.8098, -171.914, 12.3254, 0.22", "-50.9823, -171.707, 12.3704, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.1654, -152.165, 3.55983, 0.22", "-36.6351, -153.813, 3.16185, 0.22", "-36.8196, -154.472, 2.99477, 0.22", "-37.1345, -155.789, 2.6772, 0.22", "-37.4506, -157.282, 2.34412, 0.22", "-37.7068, -158.493, 2.0742, 0.22", "-38.204, -160.842, 1.55025, 0.22", "-38.4382, -161.848, 1.35988, 0.22", "-38.8846, -163.834, 0.948679, 0.22", "-39.0883, -164.944, 0.688308, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "232.716, 23.6698, -165.004, 0.29", "233.594, 23.2049, -165.084, 0.29", "234.099, 22.9376, -165.129, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "232.716, 23.6698, -165.004, 0.37", "232.768, 24.8231, -165.368, 0.37", "232.828, 26.1812, -165.797, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_ChC_38a9a8850a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.1147, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.0589178, 12.7564, -3.57672, 0.37 ) }
    dend_78 { pt3dadd( -0.134843, 13.2025, -3.66223, 0.74 ) }
    dend_78 { pt3dadd( -0.0859169, 13.5539, -3.79342, 0.74 ) }
    dend_78 { pt3dadd( 0.325891, 14.6333, -4.29246, 0.37 ) }
    dend_78 { pt3dadd( 0.730992, 15.4962, -4.66343, 0.66 ) }
    dend_78 { pt3dadd( 1.20447, 16.3869, -5.05971, 1.33 ) }
    dend_78 { pt3dadd( 1.65047, 17.0509, -5.36878, 1.33 ) }
    dend_78 { pt3dadd( 2.40102, 18.1479, -5.88804, 0.74 ) }
    dend_78 { pt3dadd( 2.96166, 19.0248, -6.27908, 0.74 ) }
    dend_78 { pt3dadd( 3.81601, 20.4744, -6.92429, 1.25 ) }
    dend_78 { pt3dadd( 4.3544, 21.6399, -7.42093, 2.06 ) }
    dend_78 { pt3dadd( 4.62752, 22.5101, -7.75266, 2.06 ) }
    dend_78 { pt3dadd( 4.81566, 23.6885, -8.16259, 1.4 ) }
    dend_78 { pt3dadd( 4.74424, 25.0494, -8.6191, 0.74 ) }
    dend_78 { pt3dadd( 4.42941, 25.942, -8.92128, 1.11 ) }
    dend_78 { pt3dadd( 3.8816, 26.6261, -9.1552, 1.11 ) }
    dend_78 { pt3dadd( 3.09177, 27.2107, -9.34041, 0.81 ) }
    dend_78 { pt3dadd( 2.05156, 27.7044, -9.59567, 0.81 ) }
    dend_78 { pt3dadd( 0.780476, 28.1057, -9.93142, 0.81 ) }
    dend_78 { pt3dadd( -0.458806, 28.3999, -10.2942, 0.96 ) }
    dend_78 { pt3dadd( -1.48193, 28.6416, -10.6057, 1.11 ) }
    dend_78 { pt3dadd( -2.40105, 28.8867, -10.9381, 1.11 ) }
    dend_78 { pt3dadd( -4.39768, 29.5498, -11.8102, 1.11 ) }
    dend_78 { pt3dadd( -4.98761, 29.8223, -12.1308, 1.11 ) }
    dend_78 { pt3dadd( -5.93923, 30.5471, -12.7898, 0.59 ) }
    dend_78 { pt3dadd( -6.50157, 31.3244, -13.2659, 0.96 ) }
    dend_78 { pt3dadd( -6.83417, 32.0421, -13.5811, 1.25 ) }
    dend_78 { pt3dadd( -7.06891, 32.6893, -13.797, 1.55 ) }
    dend_78 { pt3dadd( -7.21131, 33.097, -13.8899, 1.55 ) }
    dend_78 { pt3dadd( -7.71984, 34.3489, -14.1489, 0.74 ) }
    dend_78 { pt3dadd( -8.5188, 35.8628, -14.4573, 0.96 ) }
    dend_78 { pt3dadd( -9.18048, 36.7807, -14.6798, 0.66 ) }
    dend_78 { pt3dadd( -9.72961, 37.3581, -14.8533, 0.66 ) }
    dend_78 { pt3dadd( -10.6114, 38.0756, -15.1284, 0.81 ) }
    dend_78 { pt3dadd( -11.3433, 38.5471, -15.3641, 0.96 ) }
    dend_78 { pt3dadd( -12.3064, 39.0533, -15.6992, 1.47 ) }
    dend_78 { pt3dadd( -13.1937, 39.4904, -16.0253, 1.62 ) }
    dend_78 { pt3dadd( -14.0315, 39.9668, -16.3422, 1.47 ) }
    dend_78 { pt3dadd( -14.8115, 40.5012, -16.6527, 1.11 ) }
    dend_78 { pt3dadd( -15.6925, 41.2361, -17.0289, 0.81 ) }
    dend_78 { pt3dadd( -16.7298, 42.3302, -17.5385, 0.66 ) }
    dend_78 { pt3dadd( -17.2873, 43.0852, -17.848, 0.81 ) }
    dend_78 { pt3dadd( -18.0041, 44.3593, -18.3111, 1.03 ) }
    dend_78 { pt3dadd( -18.2812, 45.0232, -18.545, 1.25 ) }
    dend_78 { pt3dadd( -18.4786, 45.6409, -18.7728, 1.25 ) }
    dend_78 { pt3dadd( -18.8352, 46.9744, -19.3133, 0.96 ) }
    dend_78 { pt3dadd( -19.1009, 48.0035, -19.7901, 0.81 ) }
    dend_78 { pt3dadd( -19.4713, 49.2733, -20.4582, 0.59 ) }
    dend_78 { pt3dadd( -19.7767, 50.1555, -20.9544, 0.59 ) }
    dend_78 { pt3dadd( -20.1968, 51.2008, -21.5492, 0.59 ) }
    dend_78 { pt3dadd( -20.6584, 52.227, -22.1129, 0.59 ) }
    dend_78 { pt3dadd( -21.1055, 53.1878, -22.5501, 0.44 ) }
    dend_78 { pt3dadd( -21.5292, 54.1909, -22.8854, 0.66 ) }
    dend_78 { pt3dadd( -21.8577, 55.2626, -23.069, 0.74 ) }
    dend_78 { pt3dadd( -21.964, 55.9352, -23.1014, 0.96 ) }
    dend_78 { pt3dadd( -21.9741, 56.6878, -23.0771, 0.96 ) }
    dend_78 { pt3dadd( -21.8097, 58.3582, -23.0448, 0.52 ) }
    dend_78 { pt3dadd( -21.5825, 59.7127, -23.0636, 0.59 ) }
    dend_78 { pt3dadd( -21.2816, 61.2489, -23.145, 0.59 ) }
    dend_78 { pt3dadd( -21.1265, 62.1072, -23.2293, 0.96 ) }
    dend_78 { pt3dadd( -21.0074, 63.0976, -23.3764, 0.96 ) }
    dend_78 { pt3dadd( -20.9701, 64.856, -23.7476, 0.66 ) }
    dend_78 { pt3dadd( -21.159, 66.0648, -24.1298, 0.66 ) }
    dend_78 { pt3dadd( -21.5758, 67.0439, -24.5276, 0.96 ) }
    dend_78 { pt3dadd( -22.0577, 67.6377, -24.7918, 1.03 ) }
    dend_78 { pt3dadd( -22.6729, 68.1171, -25.0428, 1.03 ) }
    dend_78 { pt3dadd( -23.4907, 68.5532, -25.3444, 1.03 ) }
    dend_78 { pt3dadd( -24.5928, 68.963, -25.7817, 0.74 ) }
    dend_78 { pt3dadd( -25.4602, 69.2151, -26.2129, 0.74 ) }
    dend_78 { pt3dadd( -26.0388, 69.3507, -26.5639, 0.52 ) }
    dend_78 { pt3dadd( -27.319, 69.5939, -27.5094, 0.52 ) }
    dend_78 { pt3dadd( -28.4024, 69.7567, -28.4063, 0.52 ) }
    dend_78 { pt3dadd( -29.5072, 69.8858, -29.3636, 1.11 ) }
    dend_78 { pt3dadd( -30.108, 69.9413, -29.8672, 1.4 ) }
    dend_78 { pt3dadd( -30.7902, 69.9847, -30.3793, 1.4 ) }
    dend_78 { pt3dadd( -31.9562, 70.0152, -31.1064, 0.81 ) }
    dend_78 { pt3dadd( -32.6752, 70.0305, -31.4004, 0.59 ) }
    dend_78 { pt3dadd( -33.7578, 70.0833, -31.6316, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -34.8455, 70.1865, -31.6944, 0.44 ) }
    dend_78 { pt3dadd( -35.9484, 70.3596, -31.6621, 0.74 ) }
    dend_78 { pt3dadd( -37.0024, 70.6483, -31.5796, 1.33 ) }
    dend_78 { pt3dadd( -38.2842, 71.217, -31.5051, 0.88 ) }
    dend_78 { pt3dadd( -38.8524, 71.5973, -31.5846, 0.59 ) }
    dend_78 { pt3dadd( -39.2043, 71.9308, -31.7286, 0.59 ) }
    dend_78 { pt3dadd( -39.6996, 72.521, -32.0908, 0.74 ) }
    dend_78 { pt3dadd( -40.3123, 73.3487, -32.7244, 0.96 ) }
    dend_78 { pt3dadd( -41.1032, 74.426, -33.6941, 0.59 ) }
    dend_78 { pt3dadd( -41.9218, 75.4778, -34.7722, 0.59 ) }
    dend_78 { pt3dadd( -42.3476, 76.0061, -35.3103, 0.81 ) }
    dend_78 { pt3dadd( -42.8856, 76.6105, -35.9003, 0.96 ) }
    dend_78 { pt3dadd( -43.4012, 77.1009, -36.3419, 1.03 ) }
    dend_78 { pt3dadd( -44.2743, 77.8465, -36.9014, 0.66 ) }
    dend_78 { pt3dadd( -44.5418, 78.0827, -37.0402, 0.66 ) }
    dend_78 { pt3dadd( -45.2601, 78.8261, -37.3861, 0.81 ) }
    dend_78 { pt3dadd( -45.8939, 79.6308, -37.7593, 0.81 ) }
    dend_78 { pt3dadd( -46.3758, 80.4615, -38.126, 0.66 ) }
    dend_78 { pt3dadd( -46.7684, 81.346, -38.5003, 0.66 ) }
    dend_78 { pt3dadd( -47.2571, 82.7218, -39.072, 0.52 ) }
    dend_78 { pt3dadd( -47.5367, 83.5809, -39.4406, 0.81 ) }
    dend_78 { pt3dadd( -47.7424, 84.2214, -39.7272, 0.74 ) }
    dend_78 { pt3dadd( -48.2397, 85.5956, -40.3349, 0.59 ) }
    dend_78 { pt3dadd( -48.5432, 86.2674, -40.6072, 0.74 ) }
    dend_78 { pt3dadd( -48.9488, 86.9323, -40.8428, 0.96 ) }
    dend_78 { pt3dadd( -49.5751, 87.7309, -41.0293, 0.96 ) }
    dend_78 { pt3dadd( -50.1232, 88.3475, -41.1193, 0.74 ) }
    dend_78 { pt3dadd( -50.882, 89.1486, -41.1814, 1.03 ) }
    dend_78 { pt3dadd( -51.4296, 89.7097, -41.1324, 1.25 ) }
    dend_78 { pt3dadd( -51.8137, 90.1344, -41.0538, 0.81 ) }
    dend_78 { pt3dadd( -52.6287, 91.1373, -40.8011, 0.59 ) }
    dend_78 { pt3dadd( -53.1254, 91.8178, -40.592, 0.66 ) }
    dend_78 { pt3dadd( -53.5376, 92.4347, -40.3825, 0.66 ) }
    dend_78 { pt3dadd( -54.6063, 94.1422, -39.759, 0.88 ) }
    dend_78 { pt3dadd( -55.1483, 95.0168, -39.4146, 1.11 ) }
    dend_78 { pt3dadd( -55.5207, 95.6149, -39.1554, 1.03 ) }
    dend_78 { pt3dadd( -55.9739, 96.3369, -38.8328, 1.25 ) }
    dend_78 { pt3dadd( -56.1431, 96.6053, -38.7021, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.92519, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 5.13651, 10.8781, -4.9973, 1.11 ) }
    dend_53 { pt3dadd( 5.87618, 11.639, -5.49089, 1.11 ) }
    dend_53 { pt3dadd( 7.05627, 12.9117, -6.27759, 1.11 ) }
    dend_53 { pt3dadd( 7.8657, 13.8284, -6.86983, 0.96 ) }
    dend_53 { pt3dadd( 9.20639, 15.1896, -7.74497, 1.55 ) }
    dend_53 { pt3dadd( 10.3725, 16.2777, -8.4493, 1.62 ) }
    dend_53 { pt3dadd( 11.0592, 16.8494, -8.83385, 1.62 ) }
    dend_53 { pt3dadd( 12.1204, 17.6425, -9.30102, 1.25 ) }
    dend_53 { pt3dadd( 13.8995, 18.8348, -9.84717, 0.96 ) }
    dend_53 { pt3dadd( 16.6174, 20.4731, -10.3427, 0.88 ) }
    dend_53 { pt3dadd( 17.8932, 21.1389, -10.4202, 1.55 ) }
    dend_53 { pt3dadd( 19.2863, 21.7657, -10.3865, 1.84 ) }
    dend_53 { pt3dadd( 21.3756, 22.6075, -10.2229, 1.11 ) }
    dend_53 { pt3dadd( 22.4724, 23.0304, -10.0793, 1.03 ) }
    dend_53 { pt3dadd( 23.6997, 23.5523, -9.84028, 1.25 ) }
    dend_53 { pt3dadd( 24.8869, 24.207, -9.59146, 0.88 ) }
    dend_53 { pt3dadd( 25.9817, 24.9561, -9.36295, 0.88 ) }
    dend_53 { pt3dadd( 27.0069, 25.7742, -9.15192, 0.88 ) }
    dend_53 { pt3dadd( 28.2106, 26.7923, -8.89584, 0.88 ) }
    dend_53 { pt3dadd( 29.24, 27.7193, -8.56432, 0.96 ) }
    dend_53 { pt3dadd( 30.3051, 28.7575, -8.16633, 0.96 ) }
    dend_53 { pt3dadd( 31.277, 29.8087, -7.73295, 0.81 ) }
    dend_53 { pt3dadd( 32.7073, 31.4506, -6.96926, 1.11 ) }
    dend_53 { pt3dadd( 33.6453, 32.4912, -6.37564, 1.4 ) }
    dend_53 { pt3dadd( 34.7259, 33.5351, -5.57271, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.55044, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.53703, 8.99433, 2.76262, 1.62 ) }
    dend_50 { pt3dadd( 5.45056, 9.52592, 3.58534, 1.25 ) }
    dend_50 { pt3dadd( 7.11249, 10.2679, 5.25385, 1.25 ) }
    dend_50 { pt3dadd( 7.99133, 10.6053, 6.19538, 1.25 ) }
    dend_50 { pt3dadd( 8.90833, 10.8448, 7.29528, 1.92 ) }
    dend_50 { pt3dadd( 9.29636, 10.9106, 7.78944, 2.5 ) }
    dend_50 { pt3dadd( 10.1402, 10.933, 8.95745, 2.5 ) }
    dend_50 { pt3dadd( 11.8856, 10.7228, 11.555, 1.77 ) }
    dend_50 { pt3dadd( 13.0962, 10.3538, 13.3526, 0.96 ) }
    dend_50 { pt3dadd( 14.8044, 9.6516, 15.8828, 0.88 ) }
    dend_50 { pt3dadd( 15.2927, 9.42405, 16.6176, 0.88 ) }
    dend_50 { pt3dadd( 15.6779, 9.25156, 17.1799, 1.4 ) }
    dend_50 { pt3dadd( 16.0587, 9.10983, 17.6713, 1.4 ) }
    dend_50 { pt3dadd( 17.4477, 8.80495, 19.0782, 0.66 ) }
    dend_50 { pt3dadd( 18.0368, 8.83899, 19.5481, 0.66 ) }
    dend_50 { pt3dadd( 19.4359, 9.38297, 20.3763, 0.88 ) }
    dend_50 { pt3dadd( 20.315, 9.86581, 20.8254, 0.88 ) }
    dend_50 { pt3dadd( 21.419, 10.5867, 21.2627, 0.74 ) }
    dend_50 { pt3dadd( 22.2419, 11.1971, 21.5093, 1.4 ) }
    dend_50 { pt3dadd( 23.189, 11.9599, 21.6817, 2.06 ) }
    dend_50 { pt3dadd( 24.1217, 12.6875, 21.7543, 1.84 ) }
    dend_50 { pt3dadd( 25.2402, 13.5197, 21.6906, 1.18 ) }
    dend_50 { pt3dadd( 26.4039, 14.3229, 21.6554, 1.18 ) }
    dend_50 { pt3dadd( 26.8764, 14.6077, 21.7222, 1.03 ) }
    dend_50 { pt3dadd( 27.6663, 14.9901, 22.0502, 1.03 ) }
    dend_50 { pt3dadd( 28.1889, 15.1974, 22.5772, 0.59 ) }
    dend_50 { pt3dadd( 28.6742, 15.4169, 23.3544, 0.59 ) }
    dend_50 { pt3dadd( 29.6251, 15.9247, 25.291, 0.88 ) }
    dend_50 { pt3dadd( 30.7312, 16.6132, 27.8385, 1.62 ) }
    dend_50 { pt3dadd( 31.2064, 16.9507, 28.9463, 1.62 ) }
    dend_50 { pt3dadd( 32.3124, 17.8017, 31.5083, 0.88 ) }
    dend_50 { pt3dadd( 32.8276, 18.197, 32.6248, 0.88 ) }
    dend_50 { pt3dadd( 33.3028, 18.5739, 33.5481, 1.47 ) }
    dend_50 { pt3dadd( 33.6367, 18.8424, 34.0776, 1.47 ) }
    dend_50 { pt3dadd( 34.4956, 19.48, 35.1101, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 34.9746, 19.7726, 35.5724, 0.59 ) }
    dend_50 { pt3dadd( 35.487, 20.0098, 35.9761, 0.59 ) }
    dend_50 { pt3dadd( 36.7369, 20.525, 36.9722, 1.25 ) }
    dend_50 { pt3dadd( 38.7026, 21.3624, 38.6113, 0.74 ) }
    dend_50 { pt3dadd( 39.3183, 21.6847, 39.1857, 0.29 ) }
    dend_50 { pt3dadd( 39.8663, 21.9965, 39.7663, 0.29 ) }
    dend_50 { pt3dadd( 40.18, 22.1756, 40.145, 0.59 ) }
    dend_50 { pt3dadd( 41.0109, 22.6665, 41.169, 1.11 ) }
    dend_50 { pt3dadd( 41.4307, 22.8842, 41.6714, 1.11 ) }
    dend_50 { pt3dadd( 42.3317, 23.66, 42.75, 1.11 ) }
    dend_50 { pt3dadd( 42.8407, 24.3659, 43.6075, 0.59 ) }
    dend_50 { pt3dadd( 42.8546, 22.3416, 43.7486, 0.59 ) }
    dend_50 { pt3dadd( 43.029, 20.2543, 44.2736, 0.52 ) }
    dend_50 { pt3dadd( 43.1495, 18.7965, 44.6365, 0.59 ) }
    dend_50 { pt3dadd( 50.8954, 21.2167, 51.541, 0.59 ) }
    dend_50 { pt3dadd( 59.019, 24.5649, 57.5448, 0.59 ) }
    dend_50 { pt3dadd( 65.7327, 29.4112, 64.1819, 0.59 ) }
    dend_50 { pt3dadd( 72.3842, 35.2374, 70.0027, 0.59 ) }
    dend_50 { pt3dadd( 80.1183, 41.4892, 73.5943, 0.59 ) }
    dend_50 { pt3dadd( 87.086, 48.0692, 78.0369, 0.59 ) }
    dend_50 { pt3dadd( 94.4378, 53.49, 83.4102, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.07602, 6.59128, 1.9637, 1.69 ) }
    dend_49 { pt3dadd( -4.69782, 6.90605, 2.45115, 1.4 ) }
    dend_49 { pt3dadd( -5.13345, 7.11269, 2.895, 1.03 ) }
    dend_49 { pt3dadd( -5.7269, 7.41314, 3.5719, 0.88 ) }
    dend_49 { pt3dadd( -6.13483, 7.63958, 4.06819, 0.88 ) }
    dend_49 { pt3dadd( -6.64494, 7.90983, 4.77912, 0.59 ) }
    dend_49 { pt3dadd( -7.10526, 8.15301, 5.49274, 0.44 ) }
    dend_49 { pt3dadd( -7.94809, 8.59948, 6.8971, 0.37 ) }
    dend_49 { pt3dadd( -8.23766, 8.75576, 7.39937, 0.37 ) }
    dend_49 { pt3dadd( -8.70839, 9.01729, 8.23767, 0.37 ) }
    dend_49 { pt3dadd( -9.81497, 9.67102, 10.3134, 1.03 ) }
    dend_49 { pt3dadd( -10.0659, 9.83598, 10.8019, 1.62 ) }
    dend_49 { pt3dadd( -17.0018, 10.7225, 16.8373, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.17031, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.05598, -1.94702, -14.5804, 0.74 ) }
    dend_44 { pt3dadd( -6.44195, -2.82455, -14.5729, 1.03 ) }
    dend_44 { pt3dadd( -7.65419, -3.577, -14.5915, 1.25 ) }
    dend_44 { pt3dadd( -8.62354, -4.18764, -14.6169, 1.62 ) }
    dend_44 { pt3dadd( -9.41788, -4.67959, -14.6419, 1.84 ) }
    dend_44 { pt3dadd( -10.4595, -5.28669, -14.6488, 1.84 ) }
    dend_44 { pt3dadd( -11.3821, -5.7611, -14.6069, 1.99 ) }
    dend_44 { pt3dadd( -12.3516, -6.19067, -14.5146, 2.21 ) }
    dend_44 { pt3dadd( -13.4843, -6.60733, -14.3508, 2.65 ) }
    dend_44 { pt3dadd( -14.2878, -6.85439, -14.222, 2.5 ) }
    dend_44 { pt3dadd( -15.6455, -7.21952, -14.0156, 1.77 ) }
    dend_44 { pt3dadd( -17.0835, -7.58794, -13.8435, 1.33 ) }
    dend_44 { pt3dadd( -18.0611, -7.84511, -13.7973, 1.18 ) }
    dend_44 { pt3dadd( -19.2202, -8.16189, -13.8709, 1.11 ) }
    dend_44 { pt3dadd( -20.044, -8.41562, -14.1037, 1.11 ) }
    dend_44 { pt3dadd( -20.8926, -8.71376, -14.6221, 1.11 ) }
    dend_44 { pt3dadd( -21.7033, -9.02254, -15.4174, 1.4 ) }
    dend_44 { pt3dadd( -22.5103, -9.31284, -16.4456, 1.03 ) }
    dend_44 { pt3dadd( -23.1899, -9.52953, -17.4418, 0.88 ) }
    dend_44 { pt3dadd( -24.2012, -9.77797, -19.0738, 0.88 ) }
    dend_44 { pt3dadd( -25.294, -9.95055, -21.0012, 1.47 ) }
    dend_44 { pt3dadd( -26.1206, -10.0275, -22.5298, 1.77 ) }
    dend_44 { pt3dadd( -27.046, -10.0427, -24.3081, 1.84 ) }
    dend_44 { pt3dadd( -27.3733, -10.0234, -24.9535, 2.06 ) }
    dend_44 { pt3dadd( -27.9661, -9.95021, -26.1542, 1.77 ) }
    dend_44 { pt3dadd( -28.8794, -9.76158, -27.9582, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.46519, -1.85311, 9.68221, 2.06 ) }
    dend_41 { pt3dadd( -7.29036, -1.8108, 10.0854, 2.06 ) }
    dend_41 { pt3dadd( -9.43149, -1.84256, 11.0811, 1.84 ) }
    dend_41 { pt3dadd( -10.6235, -1.94978, 11.6193, 1.84 ) }
    dend_41 { pt3dadd( -11.5354, -2.09873, 12.0267, 1.99 ) }
    dend_41 { pt3dadd( -13.1763, -2.50075, 12.7577, 1.55 ) }
    dend_41 { pt3dadd( -14.5114, -2.97843, 13.3374, 1.03 ) }
    dend_41 { pt3dadd( -15.5906, -3.49011, 13.7701, 0.88 ) }
    dend_41 { pt3dadd( -16.6385, -4.13066, 14.074, 1.18 ) }
    dend_41 { pt3dadd( -17.4854, -4.71427, 14.2589, 1.18 ) }
    dend_41 { pt3dadd( -18.1345, -5.20298, 14.3663, 1.47 ) }
    dend_41 { pt3dadd( -19.098, -6.00161, 14.4503, 1.25 ) }
    dend_41 { pt3dadd( -20.0465, -6.82096, 14.5755, 1.03 ) }
    dend_41 { pt3dadd( -20.9019, -7.55098, 14.767, 1.62 ) }
    dend_41 { pt3dadd( -21.7587, -8.26554, 15.0853, 1.69 ) }
    dend_41 { pt3dadd( -22.4192, -8.78366, 15.4253, 1.33 ) }
    dend_41 { pt3dadd( -23.5992, -9.63571, 16.2282, 1.03 ) }
    dend_41 { pt3dadd( -25.0525, -10.5144, 17.4925, 0.88 ) }
    dend_41 { pt3dadd( -26.0687, -10.9814, 18.6184, 1.11 ) }
    dend_41 { pt3dadd( -26.9492, -11.2144, 19.7746, 1.33 ) }
    dend_41 { pt3dadd( -27.4982, -11.238, 20.5872, 1.33 ) }
    dend_41 { pt3dadd( -28.0394, -11.1009, 21.4266, 1.18 ) }
    dend_41 { pt3dadd( -28.6835, -10.7394, 22.3969, 0.88 ) }
    dend_41 { pt3dadd( -29.5995, -10.0682, 23.5807, 1.18 ) }
    dend_41 { pt3dadd( -30.1708, -9.66391, 24.2235, 1.33 ) }
    dend_41 { pt3dadd( -30.6742, -9.39915, 24.7251, 1.33 ) }
    dend_41 { pt3dadd( -31.5424, -9.15235, 25.5382, 0.59 ) }
    dend_41 { pt3dadd( -32.733, -9.21387, 26.5501, 0.52 ) }
    dend_41 { pt3dadd( -33.3372, -9.57194, 26.9918, 0.59 ) }
    dend_41 { pt3dadd( -34.1795, -10.6874, 27.6567, 0.59 ) }
    dend_41 { pt3dadd( -34.9906, -12.2214, 28.4654, 0.59 ) }
    dend_41 { pt3dadd( -35.4112, -13.1359, 28.9378, 1.03 ) }
    dend_41 { pt3dadd( -35.8927, -14.2779, 29.5818, 1.03 ) }
    dend_41 { pt3dadd( -36.2907, -15.2278, 30.1713, 1.03 ) }
    dend_41 { pt3dadd( -37.0412, -16.8148, 31.3737, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -37.7525, -17.8617, 32.5121, 0.66 ) }
    dend_41 { pt3dadd( -38.3518, -18.3448, 33.3879, 0.66 ) }
    dend_41 { pt3dadd( -39.4078, -18.7447, 34.7755, 0.74 ) }
    dend_41 { pt3dadd( -40.1544, -18.8715, 35.6912, 0.81 ) }
    dend_41 { pt3dadd( -40.8489, -18.9185, 36.5111, 0.52 ) }
    dend_41 { pt3dadd( -42.1075, -18.9363, 37.8803, 0.52 ) }
    dend_41 { pt3dadd( -42.6467, -18.9745, 38.4726, 0.44 ) }
    dend_41 { pt3dadd( -43.4314, -19.3109, 39.5162, 0.37 ) }
    dend_41 { pt3dadd( -43.8088, -19.8319, 40.1281, 0.37 ) }
    dend_41 { pt3dadd( -44.1589, -20.6223, 40.7535, 1.11 ) }
    dend_41 { pt3dadd( -44.4578, -21.4332, 41.2423, 1.4 ) }
    dend_41 { pt3dadd( -44.7456, -22.5012, 41.769, 1.4 ) }
    dend_41 { pt3dadd( -45.0993, -24.1225, 42.4953, 0.81 ) }
    dend_41 { pt3dadd( -45.3375, -25.3433, 42.9815, 0.29 ) }
    dend_41 { pt3dadd( -45.5498, -26.1508, 43.3165, 0.29 ) }
    dend_41 { pt3dadd( -45.8007, -26.799, 43.6028, 0.29 ) }
    dend_41 { pt3dadd( -52.7055, -31.3428, 51.2815, 0.29 ) }
    dend_41 { pt3dadd( -61.0615, -36.0003, 57.2576, 0.29 ) }
    dend_41 { pt3dadd( -68.7064, -40.6474, 64.1275, 0.29 ) }
    dend_41 { pt3dadd( -75.8008, -43.8557, 72.3249, 0.29 ) }
    dend_41 { pt3dadd( -82.9122, -47.2064, 80.4474, 0.29 ) }
    dend_41 { pt3dadd( -91.094, -52.182, 86.3946, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18422, -6.43959, 6.95631, 1.77 ) }
    dend_32 { pt3dadd( -2.16293, -7.85105, 7.12818, 1.47 ) }
    dend_32 { pt3dadd( -2.15119, -9.27152, 7.28369, 1.25 ) }
    dend_32 { pt3dadd( -2.17124, -10.3566, 7.38877, 1.62 ) }
    dend_32 { pt3dadd( -2.21131, -11.2722, 7.46795, 1.92 ) }
    dend_32 { pt3dadd( -2.26624, -12.0708, 7.53803, 2.14 ) }
    dend_32 { pt3dadd( -2.36576, -13.0651, 7.6236, 2.14 ) }
    dend_32 { pt3dadd( -2.57094, -14.4454, 7.74244, 1.55 ) }
    dend_32 { pt3dadd( -2.8321, -15.7435, 7.84643, 1.33 ) }
    dend_32 { pt3dadd( -3.06862, -16.727, 7.934, 1.55 ) }
    dend_32 { pt3dadd( -3.24428, -17.3482, 7.99139, 1.92 ) }
    dend_32 { pt3dadd( -3.49388, -18.1016, 8.08749, 2.21 ) }
    dend_32 { pt3dadd( -3.68083, -18.5982, 8.16542, 2.5 ) }
    dend_32 { pt3dadd( -3.89942, -19.1843, 8.27728, 2.5 ) }
    dend_32 { pt3dadd( -4.10035, -19.8308, 8.41089, 2.36 ) }
    dend_32 { pt3dadd( -4.31652, -20.7177, 8.59934, 1.69 ) }
    dend_32 { pt3dadd( -4.5243, -21.8806, 8.83667, 1.25 ) }
    dend_32 { pt3dadd( -4.62999, -22.9673, 9.05061, 1.4 ) }
    dend_32 { pt3dadd( -4.63446, -23.9316, 9.21734, 1.62 ) }
    dend_32 { pt3dadd( -4.5258, -25.1086, 9.39373, 2.06 ) }
    dend_32 { pt3dadd( -4.39351, -25.8339, 9.49414, 2.36 ) }
    dend_32 { pt3dadd( -4.2597, -26.3042, 9.55073, 2.36 ) }
    dend_32 { pt3dadd( -3.92958, -27.2005, 9.64161, 2.14 ) }
    dend_32 { pt3dadd( -3.39201, -28.4582, 9.75863, 1.62 ) }
    dend_32 { pt3dadd( -2.91765, -29.5175, 9.84538, 1.25 ) }
    dend_32 { pt3dadd( -2.43109, -30.6104, 9.94644, 1.03 ) }
    dend_32 { pt3dadd( -1.91174, -31.8392, 10.0849, 1.03 ) }
    dend_32 { pt3dadd( -1.52488, -32.8682, 10.2267, 1.03 ) }
    dend_32 { pt3dadd( -1.1037, -34.2001, 10.458, 1.03 ) }
    dend_32 { pt3dadd( -0.920053, -34.9934, 10.6266, 0.96 ) }
    dend_32 { pt3dadd( -0.864341, -35.6201, 10.7812, 0.96 ) }
    dend_32 { pt3dadd( -0.939953, -36.1787, 10.9357, 0.96 ) }
    dend_32 { pt3dadd( -1.28764, -36.9144, 11.1929, 0.96 ) }
    dend_32 { pt3dadd( -1.62769, -37.3142, 11.3546, 0.88 ) }
    dend_32 { pt3dadd( -1.98441, -37.6098, 11.4812, 1.18 ) }
    dend_32 { pt3dadd( -2.56027, -38.0201, 11.6428, 1.18 ) }
    dend_32 { pt3dadd( -3.11811, -38.3949, 11.786, 1.33 ) }
    dend_32 { pt3dadd( -3.7604, -38.8202, 11.9645, 1.33 ) }
    dend_32 { pt3dadd( -4.31263, -39.191, 12.1375, 1.4 ) }
    dend_32 { pt3dadd( -4.90462, -39.6138, 12.3513, 1.55 ) }
    dend_32 { pt3dadd( -5.47167, -40.0616, 12.603, 1.55 ) }
    dend_32 { pt3dadd( -6.11349, -40.6735, 12.9645, 1.84 ) }
    dend_32 { pt3dadd( -6.50217, -41.1203, 13.2209, 2.14 ) }
    dend_32 { pt3dadd( -6.88285, -41.6589, 13.4959, 1.99 ) }
    dend_32 { pt3dadd( -7.41381, -42.6318, 13.9356, 0.88 ) }
    dend_32 { pt3dadd( -7.77637, -43.5302, 14.2813, 0.88 ) }
    dend_32 { pt3dadd( -8.08203, -44.5915, 14.6262, 0.81 ) }
    dend_32 { pt3dadd( -8.25311, -45.5297, 14.8602, 0.74 ) }
    dend_32 { pt3dadd( -8.41191, -46.7144, 15.1173, 0.74 ) }
    dend_32 { pt3dadd( -8.48975, -47.8211, 15.3222, 1.03 ) }
    dend_32 { pt3dadd( -8.48671, -48.8154, 15.4539, 1.4 ) }
    dend_32 { pt3dadd( -8.45203, -49.4341, 15.5021, 1.69 ) }
    dend_32 { pt3dadd( -8.38027, -50.1277, 15.5212, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.83795, -10.9592, -2.32008, 3.39 ) }
    dend_0 { pt3dadd( 2.15736, -11.9344, -2.45677, 3.02 ) }
    dend_0 { pt3dadd( 2.48076, -12.9219, -2.59516, 3.02 ) }
    dend_0 { pt3dadd( 2.90602, -14.2203, -2.77714, 3.02 ) }
    dend_0 { pt3dadd( 3.36283, -15.6151, -2.97263, 3.24 ) }
    dend_0 { pt3dadd( 3.70731, -16.6436, -3.13217, 3.54 ) }
    dend_0 { pt3dadd( 4.09842, -17.7518, -3.34433, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -56.1431, 96.6053, -38.7021, 0.44 ) }
    dend_88 { pt3dadd( -57.8433, 98.2068, -39.6587, 0.44 ) }
    dend_88 { pt3dadd( -58.605, 98.9932, -40.0789, 0.37 ) }
    dend_88 { pt3dadd( -58.9393, 99.4388, -40.2317, 0.66 ) }
    dend_88 { pt3dadd( -59.4432, 100.256, -40.4343, 0.66 ) }
    dend_88 { pt3dadd( -59.9141, 101.183, -40.6094, 0.59 ) }
    dend_88 { pt3dadd( -60.1961, 101.88, -40.7213, 0.81 ) }
    dend_88 { pt3dadd( -60.3903, 102.756, -40.7695, 0.81 ) }
    dend_88 { pt3dadd( -60.5018, 104.759, -40.8785, 0.52 ) }
    dend_88 { pt3dadd( -60.3862, 105.694, -40.957, 0.52 ) }
    dend_88 { pt3dadd( -59.952, 107.108, -41.1634, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -59.3094, 108.417, -41.4782, 0.44 ) }
    dend_88 { pt3dadd( -58.4695, 109.644, -41.9134, 0.74 ) }
    dend_88 { pt3dadd( -57.7362, 110.478, -42.2963, 0.74 ) }
    dend_88 { pt3dadd( -56.5409, 111.594, -42.9631, 0.44 ) }
    dend_88 { pt3dadd( -55.6299, 112.366, -43.4308, 0.59 ) }
    dend_88 { pt3dadd( -54.7149, 113.118, -43.9048, 0.59 ) }
    dend_88 { pt3dadd( -53.8015, 113.898, -44.4183, 0.59 ) }
    dend_88 { pt3dadd( -53.0919, 114.59, -44.8834, 0.37 ) }
    dend_88 { pt3dadd( -52.5782, 115.144, -45.2623, 0.37 ) }
    dend_88 { pt3dadd( -51.8071, 116.021, -45.8724, 0.59 ) }
    dend_88 { pt3dadd( -51.0495, 116.855, -46.4848, 0.37 ) }
    dend_88 { pt3dadd( -50.3662, 117.573, -47.0314, 0.81 ) }
    dend_88 { pt3dadd( -49.6533, 118.293, -47.6074, 0.81 ) }
    dend_88 { pt3dadd( -48.3565, 119.614, -48.707, 0.44 ) }
    dend_88 { pt3dadd( -47.3629, 120.655, -49.5804, 0.44 ) }
    dend_88 { pt3dadd( -46.6702, 121.371, -50.2306, 0.81 ) }
    dend_88 { pt3dadd( -45.9701, 122.102, -50.907, 0.44 ) }
    dend_88 { pt3dadd( -45.594, 122.523, -51.3043, 0.59 ) }
    dend_88 { pt3dadd( -44.7115, 123.596, -52.3614, 0.59 ) }
    dend_88 { pt3dadd( -44.2134, 124.365, -53.2045, 0.44 ) }
    dend_88 { pt3dadd( -43.7341, 125.444, -54.4134, 0.44 ) }
    dend_88 { pt3dadd( -43.4882, 126.363, -55.5633, 0.96 ) }
    dend_88 { pt3dadd( -43.4417, 126.791, -56.17, 1.18 ) }
    dend_88 { pt3dadd( -43.465, 127.18, -56.7818, 1.18 ) }
    dend_88 { pt3dadd( -43.8215, 128.164, -58.903, 0.44 ) }
    dend_88 { pt3dadd( -44.2501, 128.848, -60.5854, 0.37 ) }
    dend_88 { pt3dadd( -44.7284, 129.353, -62.3108, 0.66 ) }
    dend_88 { pt3dadd( -44.9628, 129.55, -63.1182, 0.66 ) }
    dend_88 { pt3dadd( -45.3507, 129.832, -64.4055, 0.66 ) }
    dend_88 { pt3dadd( -46.805, 130.823, -69.5468, 0.44 ) }
    dend_88 { pt3dadd( -47.0514, 130.977, -70.4642, 0.44 ) }
    dend_88 { pt3dadd( -48.3089, 131.757, -75.35, 0.29 ) }
    dend_88 { pt3dadd( -48.572, 131.951, -76.3893, 0.29 ) }
    dend_88 { pt3dadd( -48.8597, 132.212, -77.5761, 0.29 ) }
    dend_88 { pt3dadd( -49.4444, 132.896, -80.0999, 0.74 ) }
    dend_88 { pt3dadd( -50.0764, 133.939, -82.9686, 0.44 ) }
    dend_88 { pt3dadd( -50.2014, 134.227, -83.5969, 0.44 ) }
    dend_88 { pt3dadd( -50.4357, 135.002, -84.7656, 0.37 ) }
    dend_88 { pt3dadd( -50.6464, 135.84, -85.8102, 0.88 ) }
    dend_88 { pt3dadd( -50.9628, 137.299, -87.1504, 0.29 ) }
    dend_88 { pt3dadd( -51.114, 137.917, -87.548, 0.52 ) }
    dend_88 { pt3dadd( -51.4536, 139.063, -88.1374, 0.15 ) }
    dend_88 { pt3dadd( -51.8164, 140.072, -88.6761, 0.22 ) }
    dend_88 { pt3dadd( -52.4374, 141.651, -89.5203, 0.22 ) }
    dend_88 { pt3dadd( -53.0466, 143.032, -90.2103, 0.22 ) }
    dend_88 { pt3dadd( -53.624, 144.334, -90.8157, 0.22 ) }
    dend_88 { pt3dadd( -54.5326, 146.235, -91.7644, 1.47 ) }
    dend_88 { pt3dadd( -55.2345, 147.623, -92.5314, 0.66 ) }
    dend_88 { pt3dadd( -55.669, 148.511, -93.0478, 0.96 ) }
    dend_88 { pt3dadd( -56.3274, 149.981, -93.9029, 0.22 ) }
    dend_88 { pt3dadd( -56.7322, 150.981, -94.4118, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -56.1431, 96.6053, -38.7021, 0.37 ) }
    dend_79 { pt3dadd( -56.0066, 98.3092, -38.3565, 0.37 ) }
    dend_79 { pt3dadd( -55.851, 99.1546, -38.2656, 0.37 ) }
    dend_79 { pt3dadd( -55.7227, 99.955, -38.1004, 0.37 ) }
    dend_79 { pt3dadd( -55.6221, 101.152, -37.7522, 0.74 ) }
    dend_79 { pt3dadd( -55.6332, 102.164, -37.4129, 0.29 ) }
    dend_79 { pt3dadd( -55.7777, 103.353, -36.9868, 0.29 ) }
    dend_79 { pt3dadd( -55.8704, 103.912, -36.7773, 0.52 ) }
    dend_79 { pt3dadd( -56.1776, 105.138, -36.1144, 0.44 ) }
    dend_79 { pt3dadd( -56.4166, 105.918, -35.6055, 0.29 ) }
    dend_79 { pt3dadd( -56.6265, 106.598, -35.1304, 0.29 ) }
    dend_79 { pt3dadd( -56.8351, 107.353, -34.5725, 0.29 ) }
    dend_79 { pt3dadd( -57.0941, 108.628, -33.6632, 0.44 ) }
    dend_79 { pt3dadd( -57.2377, 109.663, -32.9459, 0.44 ) }
    dend_79 { pt3dadd( -57.2806, 110.981, -32.1272, 0.52 ) }
    dend_79 { pt3dadd( -57.1906, 112.031, -31.496, 0.37 ) }
    dend_79 { pt3dadd( -57.0237, 112.87, -30.9996, 0.37 ) }
    dend_79 { pt3dadd( -56.7414, 113.774, -30.5032, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 34.7259, 33.5351, -5.57271, 0.29 ) }
    dend_69 { pt3dadd( 35.676, 33.4241, -3.65071, 0.29 ) }
    dend_69 { pt3dadd( 36.5979, 33.3467, -2.05723, 0.59 ) }
    dend_69 { pt3dadd( 37.5278, 33.2482, -0.660701, 0.74 ) }
    dend_69 { pt3dadd( 38.0454, 33.1944, 0.052759, 0.37 ) }
    dend_69 { pt3dadd( 38.8306, 33.1475, 1.21003, 0.37 ) }
    dend_69 { pt3dadd( 39.2594, 33.1406, 1.89203, 0.66 ) }
    dend_69 { pt3dadd( 39.5739, 33.1837, 2.41934, 0.96 ) }
    dend_69 { pt3dadd( 39.9883, 33.33, 3.39017, 1.25 ) }
    dend_69 { pt3dadd( 40.5509, 33.7011, 5.19162, 0.37 ) }
    dend_69 { pt3dadd( 41.014, 34.2068, 7.05078, 0.37 ) }
    dend_69 { pt3dadd( 41.1586, 34.4145, 7.69568, 0.37 ) }
    dend_69 { pt3dadd( 41.4899, 34.8778, 9.00689, 0.74 ) }
    dend_69 { pt3dadd( 42.1448, 35.6261, 11.0131, 0.66 ) }
    dend_69 { pt3dadd( 42.7386, 36.1702, 12.3812, 0.52 ) }
    dend_69 { pt3dadd( 43.2618, 36.484, 13.1793, 0.66 ) }
    dend_69 { pt3dadd( 43.9623, 36.7369, 13.894, 0.66 ) }
    dend_69 { pt3dadd( 44.9591, 36.9769, 14.6719, 0.37 ) }
    dend_69 { pt3dadd( 46.1518, 37.1368, 15.3919, 0.52 ) }
    dend_69 { pt3dadd( 46.8286, 37.1675, 15.7353, 0.52 ) }
    dend_69 { pt3dadd( 48.0165, 37.1725, 16.3082, 0.66 ) }
    dend_69 { pt3dadd( 48.686, 37.1511, 16.6223, 0.88 ) }
    dend_69 { pt3dadd( 49.5811, 37.1231, 17.0184, 0.88 ) }
    dend_69 { pt3dadd( 50.6114, 37.1341, 17.5211, 0.66 ) }
    dend_69 { pt3dadd( 51.896, 37.2218, 18.1654, 0.29 ) }
    dend_69 { pt3dadd( 53.0205, 37.3665, 18.7127, 0.29 ) }
    dend_69 { pt3dadd( 54.7234, 37.7375, 19.4986, 0.88 ) }
    dend_69 { pt3dadd( 55.1948, 37.8617, 19.7109, 0.88 ) }
    dend_69 { pt3dadd( 57.0861, 38.4272, 20.5219, 0.29 ) }
    dend_69 { pt3dadd( 58.5499, 38.9166, 21.0987, 0.29 ) }
    dend_69 { pt3dadd( 59.9544, 39.4296, 21.6034, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 61.6286, 40.0789, 22.1666, 0.29 ) }
    dend_69 { pt3dadd( 62.8467, 40.5591, 22.5692, 0.29 ) }
    dend_69 { pt3dadd( 63.979, 40.9773, 22.9183, 0.81 ) }
    dend_69 { pt3dadd( 64.8776, 41.2789, 23.1426, 0.81 ) }
    dend_69 { pt3dadd( 65.6758, 41.5327, 23.3374, 0.81 ) }
    dend_69 { pt3dadd( 66.8871, 41.8886, 23.6296, 0.59 ) }
    dend_69 { pt3dadd( 68.2973, 42.2468, 23.9796, 0.29 ) }
    dend_69 { pt3dadd( 69.5382, 42.6092, 24.2991, 0.81 ) }
    dend_69 { pt3dadd( 70.7617, 42.9725, 24.6254, 0.22 ) }
    dend_69 { pt3dadd( 71.8482, 43.2737, 24.916, 0.22 ) }
    dend_69 { pt3dadd( 72.5398, 43.4348, 25.0903, 0.52 ) }
    dend_69 { pt3dadd( 73.5035, 43.6082, 25.2769, 0.22 ) }
    dend_69 { pt3dadd( 82.5993, 46.469, 32.5321, 0.22 ) }
    dend_69 { pt3dadd( 90.8325, 49.7407, 40.594, 0.22 ) }
    dend_69 { pt3dadd( 100.718, 50.826, 47.2903, 0.22 ) }
    dend_69 { pt3dadd( 110.603, 49.8263, 53.9868, 0.22 ) }
    dend_69 { pt3dadd( 120.364, 50.3294, 60.929, 0.22 ) }
    dend_69 { pt3dadd( 128.026, 49.6174, 70.1135, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 34.7259, 33.5351, -5.57271, 0.81 ) }
    dend_54 { pt3dadd( 36.0656, 33.7697, -4.92499, 0.81 ) }
    dend_54 { pt3dadd( 36.7075, 33.8021, -4.64579, 1.03 ) }
    dend_54 { pt3dadd( 38.4395, 33.7865, -4.06397, 0.96 ) }
    dend_54 { pt3dadd( 39.3962, 33.78, -3.79891, 0.96 ) }
    dend_54 { pt3dadd( 40.5164, 33.8174, -3.53397, 0.59 ) }
    dend_54 { pt3dadd( 41.2977, 33.8823, -3.37409, 0.66 ) }
    dend_54 { pt3dadd( 42.3507, 33.9717, -3.19531, 0.66 ) }
    dend_54 { pt3dadd( 43.615, 34.1725, -3.07383, 0.59 ) }
    dend_54 { pt3dadd( 44.2869, 34.374, -3.10178, 0.81 ) }
    dend_54 { pt3dadd( 45.1373, 34.7729, -3.18357, 0.96 ) }
    dend_54 { pt3dadd( 45.9192, 35.2364, -3.2795, 1.25 ) }
    dend_54 { pt3dadd( 46.4831, 35.5868, -3.34362, 1.4 ) }
    dend_54 { pt3dadd( 47.1882, 36.0169, -3.3907, 1.4 ) }
    dend_54 { pt3dadd( 48.3331, 36.6209, -3.38701, 0.59 ) }
    dend_54 { pt3dadd( 48.7992, 36.7883, -3.3621, 0.59 ) }
    dend_54 { pt3dadd( 49.7699, 36.954, -3.25885, 0.59 ) }
    dend_54 { pt3dadd( 50.8309, 36.9809, -3.09939, 1.03 ) }
    dend_54 { pt3dadd( 51.5844, 36.9253, -2.96007, 1.18 ) }
    dend_54 { pt3dadd( 52.2358, 36.8291, -2.79324, 1.18 ) }
    dend_54 { pt3dadd( 53.2807, 36.6195, -2.45214, 0.74 ) }
    dend_54 { pt3dadd( 54.2767, 36.4033, -2.05245, 0.66 ) }
    dend_54 { pt3dadd( 54.747, 36.3057, -1.84188, 0.96 ) }
    dend_54 { pt3dadd( 55.3596, 36.2064, -1.56674, 0.96 ) }
    dend_54 { pt3dadd( 56.4592, 36.0815, -1.09136, 1.03 ) }
    dend_54 { pt3dadd( 56.9781, 36.0565, -0.873986, 1.03 ) }
    dend_54 { pt3dadd( 58.422, 36.148, -0.320757, 0.59 ) }
    dend_54 { pt3dadd( 59.2069, 36.2828, -0.0570703, 0.59 ) }
    dend_54 { pt3dadd( 60.6124, 36.6227, 0.345853, 0.59 ) }
    dend_54 { pt3dadd( 61.3035, 36.8333, 0.506134, 0.81 ) }
    dend_54 { pt3dadd( 61.9532, 37.0831, 0.609715, 0.81 ) }
    dend_54 { pt3dadd( 63.2854, 37.6838, 0.728851, 0.37 ) }
    dend_54 { pt3dadd( 64.1305, 38.0815, 0.747287, 0.66 ) }
    dend_54 { pt3dadd( 64.8818, 38.4062, 0.761132, 0.74 ) }
    dend_54 { pt3dadd( 65.3551, 38.5789, 0.764314, 0.74 ) }
    dend_54 { pt3dadd( 66.2845, 38.8185, 0.766577, 0.74 ) }
    dend_54 { pt3dadd( 67.2852, 38.942, 0.774441, 0.52 ) }
    dend_54 { pt3dadd( 68.6817, 38.9355, 0.799253, 0.74 ) }
    dend_54 { pt3dadd( 69.7314, 38.8709, 0.850073, 0.88 ) }
    dend_54 { pt3dadd( 70.3026, 38.8307, 0.910172, 0.96 ) }
    dend_54 { pt3dadd( 70.8653, 38.8022, 1.0042, 1.18 ) }
    dend_54 { pt3dadd( 71.7123, 38.7953, 1.20401, 1.18 ) }
    dend_54 { pt3dadd( 72.3467, 38.8554, 1.40996, 0.66 ) }
    dend_54 { pt3dadd( 73.4506, 39.1729, 1.87819, 0.59 ) }
    dend_54 { pt3dadd( 74.1554, 39.5158, 2.30486, 0.59 ) }
    dend_54 { pt3dadd( 74.6128, 39.8033, 2.64349, 0.74 ) }
    dend_54 { pt3dadd( 74.9639, 40.0717, 2.9459, 0.74 ) }
    dend_54 { pt3dadd( 75.3048, 40.3662, 3.27622, 0.74 ) }
    dend_54 { pt3dadd( 75.9453, 40.9676, 3.96874, 0.59 ) }
    dend_54 { pt3dadd( 76.7815, 41.812, 4.97195, 0.96 ) }
    dend_54 { pt3dadd( 77.1794, 42.2073, 5.45627, 1.25 ) }
    dend_54 { pt3dadd( 77.3931, 42.4171, 5.73884, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 94.4378, 53.49, 83.4102, 0.29 ) }
    dend_52 { pt3dadd( 101.156, 57.163, 90.372, 0.29 ) }
    dend_52 { pt3dadd( 108.813, 60.955, 96.2072, 0.29 ) }
    dend_52 { pt3dadd( 116.635, 65.5913, 101.107, 0.29 ) }
    dend_52 { pt3dadd( 123.508, 69.5947, 107.717, 0.29 ) }
    dend_52 { pt3dadd( 129.871, 74.7256, 114.01, 0.29 ) }
    dend_52 { pt3dadd( 134.792, 80.3738, 121.081, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 94.4378, 53.49, 83.4102, 0.29 ) }
    dend_51 { pt3dadd( 100.982, 56.5414, 89.0367, 0.29 ) }
    dend_51 { pt3dadd( 106.696, 61.3344, 94.283, 0.29 ) }
    dend_51 { pt3dadd( 111.383, 66.9512, 99.6998, 0.29 ) }
    dend_51 { pt3dadd( 116.383, 71.1893, 106.07, 0.29 ) }
    dend_51 { pt3dadd( 121.177, 75.9317, 112.224, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -28.8794, -9.76158, -27.9582, 0.74 ) }
    dend_46 { pt3dadd( -30.4436, -11.0088, -28.3943, 0.74 ) }
    dend_46 { pt3dadd( -31.2965, -11.5183, -28.5795, 0.74 ) }
    dend_46 { pt3dadd( -32.0263, -11.8546, -28.7371, 0.74 ) }
    dend_46 { pt3dadd( -33.1997, -12.1693, -29.1078, 0.66 ) }
    dend_46 { pt3dadd( -34.0646, -12.2715, -29.4559, 0.66 ) }
    dend_46 { pt3dadd( -34.9875, -12.3091, -29.8708, 0.59 ) }
    dend_46 { pt3dadd( -35.6337, -12.2183, -30.1532, 1.25 ) }
    dend_46 { pt3dadd( -36.1632, -12.0956, -30.4124, 1.25 ) }
    dend_46 { pt3dadd( -37.7818, -11.689, -31.2794, 0.66 ) }
    dend_46 { pt3dadd( -38.585, -11.5141, -31.7353, 0.66 ) }
    dend_46 { pt3dadd( -39.0142, -11.4806, -31.9967, 0.96 ) }
    dend_46 { pt3dadd( -39.6414, -11.5588, -32.3941, 0.96 ) }
    dend_46 { pt3dadd( -40.0729, -11.7211, -32.7844, 0.96 ) }
    dend_46 { pt3dadd( -40.7192, -12.2063, -33.7719, 0.74 ) }
    dend_46 { pt3dadd( -41.0559, -12.6048, -34.5429, 0.52 ) }
    dend_46 { pt3dadd( -41.3893, -13.0944, -35.5109, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -41.6026, -13.4519, -36.2291, 1.03 ) }
    dend_46 { pt3dadd( -42.3741, -14.8793, -39.1681, 1.25 ) }
    dend_46 { pt3dadd( -42.8966, -15.8825, -41.3007, 0.66 ) }
    dend_46 { pt3dadd( -43.1572, -16.3613, -42.3542, 0.66 ) }
    dend_46 { pt3dadd( -43.3247, -16.6039, -42.9053, 1.11 ) }
    dend_46 { pt3dadd( -43.4815, -16.753, -43.2333, 1.33 ) }
    dend_46 { pt3dadd( -43.7177, -16.914, -43.5098, 1.18 ) }
    dend_46 { pt3dadd( -44.1046, -17.134, -43.666, 1.18 ) }
    dend_46 { pt3dadd( -44.995, -17.6297, -43.8919, 0.59 ) }
    dend_46 { pt3dadd( -45.9075, -18.2025, -44.1594, 0.52 ) }
    dend_46 { pt3dadd( -46.6218, -18.7218, -44.4401, 0.52 ) }
    dend_46 { pt3dadd( -47.2076, -19.2239, -44.7908, 0.81 ) }
    dend_46 { pt3dadd( -47.774, -19.8046, -45.2948, 0.66 ) }
    dend_46 { pt3dadd( -48.3012, -20.4051, -45.8809, 0.66 ) }
    dend_46 { pt3dadd( -48.6788, -20.8769, -46.3925, 1.33 ) }
    dend_46 { pt3dadd( -48.931, -21.2078, -46.7637, 1.33 ) }
    dend_46 { pt3dadd( -49.7177, -22.2443, -47.9422, 0.66 ) }
    dend_46 { pt3dadd( -50.4122, -23.1284, -48.9436, 0.52 ) }
    dend_46 { pt3dadd( -50.7433, -23.5152, -49.3903, 0.52 ) }
    dend_46 { pt3dadd( -51.1788, -23.9556, -49.84, 0.96 ) }
    dend_46 { pt3dadd( -51.494, -24.242, -50.0747, 1.18 ) }
    dend_46 { pt3dadd( -51.7224, -24.4414, -50.1761, 1.18 ) }
    dend_46 { pt3dadd( -52.1993, -24.8816, -50.2477, 0.81 ) }
    dend_46 { pt3dadd( -52.8489, -25.5392, -50.2281, 0.74 ) }
    dend_46 { pt3dadd( -53.649, -26.4363, -50.1195, 0.59 ) }
    dend_46 { pt3dadd( -54.0503, -26.8842, -50.0295, 0.74 ) }
    dend_46 { pt3dadd( -54.5877, -27.4589, -49.874, 0.74 ) }
    dend_46 { pt3dadd( -55.1694, -28.0203, -49.6911, 0.59 ) }
    dend_46 { pt3dadd( -55.7208, -28.5216, -49.5056, 0.44 ) }
    dend_46 { pt3dadd( -56.3392, -29.0775, -49.2888, 0.44 ) }
    dend_46 { pt3dadd( -56.936, -29.6056, -49.1093, 0.44 ) }
    dend_46 { pt3dadd( -57.5624, -30.2113, -48.9301, 0.44 ) }
    dend_46 { pt3dadd( -58.5847, -31.3116, -48.6551, 0.44 ) }
    dend_46 { pt3dadd( -58.8355, -31.6385, -48.587, 0.96 ) }
    dend_46 { pt3dadd( -59.2814, -32.4253, -48.4939, 1.18 ) }
    dend_46 { pt3dadd( -59.5516, -33.1268, -48.465, 0.81 ) }
    dend_46 { pt3dadd( -59.829, -34.2835, -48.5337, 0.59 ) }
    dend_46 { pt3dadd( -59.9148, -34.787, -48.6215, 0.74 ) }
    dend_46 { pt3dadd( -60.0456, -35.598, -48.82, 0.66 ) }
    dend_46 { pt3dadd( -60.236, -36.39, -49.0493, 0.66 ) }
    dend_46 { pt3dadd( -60.4335, -36.9739, -49.2412, 0.81 ) }
    dend_46 { pt3dadd( -60.891, -38.0439, -49.5946, 0.59 ) }
    dend_46 { pt3dadd( -61.3499, -38.981, -49.889, 0.52 ) }
    dend_46 { pt3dadd( -61.7777, -39.8908, -50.1474, 0.81 ) }
    dend_46 { pt3dadd( -62.1481, -40.7768, -50.36, 1.4 ) }
    dend_46 { pt3dadd( -62.3079, -41.3048, -50.4234, 1.69 ) }
    dend_46 { pt3dadd( -62.5015, -42.3398, -50.4266, 0.52 ) }
    dend_46 { pt3dadd( -62.6236, -43.1963, -50.4333, 0.44 ) }
    dend_46 { pt3dadd( -62.7194, -44.0653, -50.5591, 0.44 ) }
    dend_46 { pt3dadd( -62.7956, -44.6785, -50.7781, 0.29 ) }
    dend_46 { pt3dadd( -63.0175, -45.8206, -51.3653, 1.4 ) }
    dend_46 { pt3dadd( -63.0804, -46.0484, -51.5018, 1.4 ) }
    dend_46 { pt3dadd( -63.8293, -48.0627, -52.99, 0.52 ) }
    dend_46 { pt3dadd( -64.3342, -49.1733, -53.9003, 0.52 ) }
    dend_46 { pt3dadd( -64.6278, -49.7473, -54.3915, 0.52 ) }
    dend_46 { pt3dadd( -65.0738, -50.6022, -55.121, 0.74 ) }
    dend_46 { pt3dadd( -65.3663, -51.1755, -55.5927, 0.88 ) }
    dend_46 { pt3dadd( -65.9703, -52.4817, -56.5087, 0.44 ) }
    dend_46 { pt3dadd( -66.2386, -53.1386, -56.8557, 0.59 ) }
    dend_46 { pt3dadd( -66.5561, -53.8738, -57.2103, 0.59 ) }
    dend_46 { pt3dadd( -66.9257, -54.6196, -57.5991, 0.37 ) }
    dend_46 { pt3dadd( -67.1617, -55.0694, -57.8483, 0.59 ) }
    dend_46 { pt3dadd( -67.6121, -55.8699, -58.2836, 0.81 ) }
    dend_46 { pt3dadd( -68.0589, -56.5987, -58.6168, 1.18 ) }
    dend_46 { pt3dadd( -68.3535, -57.0464, -58.8269, 1.18 ) }
    dend_46 { pt3dadd( -69.1797, -58.1585, -59.4208, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -28.8794, -9.76158, -27.9582, 0.81 ) }
    dend_45 { pt3dadd( -29.8194, -7.58941, -27.6855, 0.81 ) }
    dend_45 { pt3dadd( -30.264, -6.81753, -27.5097, 0.81 ) }
    dend_45 { pt3dadd( -30.954, -5.92793, -27.2291, 0.81 ) }
    dend_45 { pt3dadd( -31.6984, -5.27698, -26.9669, 0.88 ) }
    dend_45 { pt3dadd( -32.5966, -4.81828, -26.7497, 0.66 ) }
    dend_45 { pt3dadd( -34.2602, -4.26286, -26.4786, 0.59 ) }
    dend_45 { pt3dadd( -35.4269, -4.23642, -26.4031, 0.59 ) }
    dend_45 { pt3dadd( -36.4787, -4.36701, -26.55, 0.59 ) }
    dend_45 { pt3dadd( -37.8761, -4.6874, -27.0047, 0.74 ) }
    dend_45 { pt3dadd( -39.3795, -5.12313, -27.8045, 1.03 ) }
    dend_45 { pt3dadd( -39.9065, -5.28392, -28.1457, 1.62 ) }
    dend_45 { pt3dadd( -40.6235, -5.48769, -28.6663, 1.92 ) }
    dend_45 { pt3dadd( -42.8958, -6.06087, -30.2698, 0.88 ) }
    dend_45 { pt3dadd( -43.7697, -6.25504, -30.8691, 0.66 ) }
    dend_45 { pt3dadd( -45.0513, -6.53484, -31.7053, 0.66 ) }
    dend_45 { pt3dadd( -46.7781, -6.91257, -32.7681, 0.66 ) }
    dend_45 { pt3dadd( -47.5456, -7.0646, -33.215, 0.66 ) }
    dend_45 { pt3dadd( -49.2178, -7.30985, -34.0764, 0.66 ) }
    dend_45 { pt3dadd( -50.2842, -7.3987, -34.5563, 0.44 ) }
    dend_45 { pt3dadd( -51.6335, -7.42098, -35.1888, 0.44 ) }
    dend_45 { pt3dadd( -52.6241, -7.37035, -35.6961, 0.44 ) }
    dend_45 { pt3dadd( -53.7949, -7.22771, -36.4125, 0.66 ) }
    dend_45 { pt3dadd( -54.6137, -7.09367, -36.9526, 0.66 ) }
    dend_45 { pt3dadd( -55.5841, -6.87299, -37.5924, 0.66 ) }
    dend_45 { pt3dadd( -56.4221, -6.64461, -38.0781, 0.66 ) }
    dend_45 { pt3dadd( -57.3792, -6.31325, -38.553, 0.44 ) }
    dend_45 { pt3dadd( -58.046, -6.04706, -38.8601, 0.74 ) }
    dend_45 { pt3dadd( -59.0392, -5.62659, -39.2879, 0.74 ) }
    dend_45 { pt3dadd( -59.9238, -5.24317, -39.662, 0.74 ) }
    dend_45 { pt3dadd( -60.6765, -4.91908, -39.9625, 0.74 ) }
    dend_45 { pt3dadd( -61.5376, -4.55858, -40.2891, 0.37 ) }
    dend_45 { pt3dadd( -62.8116, -4.16635, -40.8309, 0.37 ) }
    dend_45 { pt3dadd( -63.3577, -4.11041, -41.1125, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -63.9305, -4.18115, -41.4873, 0.88 ) }
    dend_45 { pt3dadd( -64.6906, -4.37725, -42.0317, 1.18 ) }
    dend_45 { pt3dadd( -65.309, -4.57143, -42.5329, 1.33 ) }
    dend_45 { pt3dadd( -66.8841, -5.11005, -43.9245, 0.44 ) }
    dend_45 { pt3dadd( -68.0159, -5.44996, -45.0031, 0.44 ) }
    dend_45 { pt3dadd( -68.9223, -5.61578, -45.9682, 0.44 ) }
    dend_45 { pt3dadd( -69.7431, -5.61085, -46.8959, 0.88 ) }
    dend_45 { pt3dadd( -70.628, -5.37923, -47.8981, 1.03 ) }
    dend_45 { pt3dadd( -70.9918, -5.17149, -48.278, 1.03 ) }
    dend_45 { pt3dadd( -71.9392, -4.34287, -49.0386, 0.44 ) }
    dend_45 { pt3dadd( -72.5111, -3.79543, -49.4326, 0.44 ) }
    dend_45 { pt3dadd( -73.1864, -3.21706, -49.7878, 0.44 ) }
    dend_45 { pt3dadd( -73.7419, -2.84704, -50.0554, 0.59 ) }
    dend_45 { pt3dadd( -74.6598, -2.41322, -50.4379, 0.59 ) }
    dend_45 { pt3dadd( -75.593, -2.1467, -50.8303, 0.74 ) }
    dend_45 { pt3dadd( -77.2933, -1.98789, -51.546, 0.37 ) }
    dend_45 { pt3dadd( -78.3548, -2.0484, -52.0416, 0.37 ) }
    dend_45 { pt3dadd( -79.9159, -2.35004, -52.8471, 0.59 ) }
    dend_45 { pt3dadd( -80.5236, -2.5411, -53.1972, 0.88 ) }
    dend_45 { pt3dadd( -81.6861, -3.05103, -53.9698, 0.66 ) }
    dend_45 { pt3dadd( -82.4652, -3.45668, -54.5288, 0.74 ) }
    dend_45 { pt3dadd( -83.2922, -3.9414, -55.1285, 0.59 ) }
    dend_45 { pt3dadd( -84.0017, -4.38097, -55.6822, 0.52 ) }
    dend_45 { pt3dadd( -84.6661, -4.78785, -56.1999, 0.88 ) }
    dend_45 { pt3dadd( -85.8942, -5.43842, -57.1701, 0.59 ) }
    dend_45 { pt3dadd( -86.6153, -5.74178, -57.7363, 0.44 ) }
    dend_45 { pt3dadd( -87.4206, -5.99611, -58.3665, 1.03 ) }
    dend_45 { pt3dadd( -87.9877, -6.1209, -58.7958, 1.33 ) }
    dend_45 { pt3dadd( -88.3417, -6.16799, -59.0445, 1.4 ) }
    dend_45 { pt3dadd( -89.8444, -6.29434, -59.995, 0.44 ) }
    dend_45 { pt3dadd( -90.454, -6.33709, -60.3546, 0.44 ) }
    dend_45 { pt3dadd( -91.3571, -6.38524, -60.8495, 0.44 ) }
    dend_45 { pt3dadd( -92.3115, -6.41378, -61.3262, 0.44 ) }
    dend_45 { pt3dadd( -93.86, -6.4491, -62.0906, 0.59 ) }
    dend_45 { pt3dadd( -94.9287, -6.46242, -62.6988, 0.88 ) }
    dend_45 { pt3dadd( -95.9044, -6.42228, -63.3981, 1.11 ) }
    dend_45 { pt3dadd( -97.1588, -6.31076, -64.4331, 0.52 ) }
    dend_45 { pt3dadd( -98.0566, -6.17096, -65.2438, 0.52 ) }
    dend_45 { pt3dadd( -98.8037, -6.01695, -65.9546, 1.03 ) }
    dend_45 { pt3dadd( -100.462, -5.63182, -67.6375, 1.25 ) }
    dend_45 { pt3dadd( -102.423, -5.24583, -69.6352, 0.52 ) }
    dend_45 { pt3dadd( -103.096, -5.14101, -70.3097, 0.59 ) }
    dend_45 { pt3dadd( -103.998, -5.04399, -71.1699, 0.59 ) }
    dend_45 { pt3dadd( -105.427, -4.91872, -72.3675, 0.44 ) }
    dend_45 { pt3dadd( -106.415, -4.84302, -73.0403, 0.44 ) }
    dend_45 { pt3dadd( -107.876, -4.6941, -73.838, 0.44 ) }
    dend_45 { pt3dadd( -108.657, -4.57565, -74.2393, 0.44 ) }
    dend_45 { pt3dadd( -109.725, -4.27545, -74.9416, 0.66 ) }
    dend_45 { pt3dadd( -110.475, -3.93323, -75.5678, 0.88 ) }
    dend_45 { pt3dadd( -110.869, -3.66666, -75.9471, 0.88 ) }
    dend_45 { pt3dadd( -111.992, -2.68393, -77.1097, 0.52 ) }
    dend_45 { pt3dadd( -112.671, -1.95643, -77.8621, 0.52 ) }
    dend_45 { pt3dadd( -113.608, -0.789272, -79.0524, 0.81 ) }
    dend_45 { pt3dadd( -114.248, 0.132429, -79.9513, 0.44 ) }
    dend_45 { pt3dadd( -114.607, 0.707803, -80.5058, 0.44 ) }
    dend_45 { pt3dadd( -114.998, 1.46135, -81.1919, 0.74 ) }
    dend_45 { pt3dadd( -115.224, 2.03055, -81.6461, 0.96 ) }
    dend_45 { pt3dadd( -115.626, 3.49855, -82.5947, 0.66 ) }
    dend_45 { pt3dadd( -115.837, 4.41788, -83.1559, 0.44 ) }
    dend_45 { pt3dadd( -116.086, 5.42182, -83.8165, 0.44 ) }
    dend_45 { pt3dadd( -116.406, 6.37331, -84.5419, 0.44 ) }
    dend_45 { pt3dadd( -116.576, 6.69675, -84.8343, 0.44 ) }
    dend_45 { pt3dadd( -117.173, 7.34505, -85.5311, 0.96 ) }
    dend_45 { pt3dadd( -118.572, 7.99011, -86.5616, 0.66 ) }
    dend_45 { pt3dadd( -119.507, 8.22958, -87.1369, 0.96 ) }
    dend_45 { pt3dadd( -119.959, 8.31088, -87.3635, 1.25 ) }
    dend_45 { pt3dadd( -120.492, 8.38981, -87.602, 1.25 ) }
    dend_45 { pt3dadd( -121.34, 8.53524, -87.9617, 1.25 ) }
    dend_45 { pt3dadd( -122.804, 8.92184, -88.5719, 0.37 ) }
    dend_45 { pt3dadd( -123.684, 9.33023, -88.8918, 0.37 ) }
    dend_45 { pt3dadd( -124.264, 9.69779, -89.1355, 0.66 ) }
    dend_45 { pt3dadd( -124.71, 10.0034, -89.3149, 0.81 ) }
    dend_45 { pt3dadd( -125.405, 10.4851, -89.5552, 0.81 ) }
    dend_45 { pt3dadd( -126.483, 11.2199, -89.8173, 0.44 ) }
    dend_45 { pt3dadd( -127.225, 11.6728, -89.9005, 0.44 ) }
    dend_45 { pt3dadd( -128.585, 12.3689, -89.9467, 0.44 ) }
    dend_45 { pt3dadd( -130.093, 13.0787, -89.9156, 0.44 ) }
    dend_45 { pt3dadd( -131.239, 13.6064, -89.8368, 0.66 ) }
    dend_45 { pt3dadd( -132.433, 14.1438, -89.6987, 0.96 ) }
    dend_45 { pt3dadd( -133.638, 14.6688, -89.4808, 0.59 ) }
    dend_45 { pt3dadd( -134.662, 15.1319, -89.2568, 0.44 ) }
    dend_45 { pt3dadd( -135.718, 15.622, -89.0149, 0.44 ) }
    dend_45 { pt3dadd( -136.745, 16.1011, -88.8406, 0.44 ) }
    dend_45 { pt3dadd( -137.641, 16.4666, -88.7986, 0.44 ) }
    dend_45 { pt3dadd( -138.683, 16.7795, -88.9123, 0.74 ) }
    dend_45 { pt3dadd( -139.201, 16.8851, -89.0393, 0.74 ) }
    dend_45 { pt3dadd( -140.686, 17.0584, -89.497, 0.52 ) }
    dend_45 { pt3dadd( -141.364, 17.1063, -89.7441, 0.59 ) }
    dend_45 { pt3dadd( -142.62, 17.1767, -90.2506, 0.44 ) }
    dend_45 { pt3dadd( -143.561, 17.2673, -90.6429, 0.44 ) }
    dend_45 { pt3dadd( -144.738, 17.4906, -91.1794, 0.37 ) }
    dend_45 { pt3dadd( -145.917, 17.8221, -91.704, 0.52 ) }
    dend_45 { pt3dadd( -146.851, 18.1785, -92.1153, 1.11 ) }
    dend_45 { pt3dadd( -147.579, 18.518, -92.4757, 1.25 ) }
    dend_45 { pt3dadd( -148.438, 18.9762, -92.977, 0.37 ) }
    dend_45 { pt3dadd( -149.666, 19.6608, -93.821, 0.37 ) }
    dend_45 { pt3dadd( -150.497, 20.101, -94.4722, 0.29 ) }
    dend_45 { pt3dadd( -151.157, 20.4293, -95.0621, 0.29 ) }
    dend_45 { pt3dadd( -152.342, 21.0086, -96.1973, 0.59 ) }
    dend_45 { pt3dadd( -153.279, 21.492, -97.1333, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -153.81, 21.7826, -97.665, 0.29 ) }
    dend_45 { pt3dadd( -154.23, 22.0354, -98.0421, 0.37 ) }
    dend_45 { pt3dadd( -154.897, 22.4999, -98.5833, 0.37 ) }
    dend_45 { pt3dadd( -155.813, 23.1865, -99.1705, 0.44 ) }
    dend_45 { pt3dadd( -156.585, 23.7862, -99.5088, 0.44 ) }
    dend_45 { pt3dadd( -157.321, 24.3517, -99.7354, 0.44 ) }
    dend_45 { pt3dadd( -158.209, 24.9759, -99.9738, 0.37 ) }
    dend_45 { pt3dadd( -158.57, 25.1931, -100.059, 0.37 ) }
    dend_45 { pt3dadd( -159.496, 25.6346, -100.234, 0.88 ) }
    dend_45 { pt3dadd( -160.034, 25.8385, -100.323, 1.11 ) }
    dend_45 { pt3dadd( -160.998, 26.1679, -100.478, 1.11 ) }
    dend_45 { pt3dadd( -162.515, 26.7155, -100.706, 0.37 ) }
    dend_45 { pt3dadd( -163.692, 27.195, -100.868, 0.37 ) }
    dend_45 { pt3dadd( -164.367, 27.5293, -100.944, 0.66 ) }
    dend_45 { pt3dadd( -165.378, 28.2092, -101.076, 0.66 ) }
    dend_45 { pt3dadd( -166.171, 28.9057, -101.204, 0.37 ) }
    dend_45 { pt3dadd( -166.835, 29.6593, -101.344, 0.52 ) }
    dend_45 { pt3dadd( -167.078, 29.9964, -101.408, 0.66 ) }
    dend_45 { pt3dadd( -167.434, 30.5491, -101.506, 0.66 ) }
    dend_45 { pt3dadd( -168.399, 32.0763, -101.76, 0.37 ) }
    dend_45 { pt3dadd( -168.855, 32.7318, -101.835, 0.37 ) }
    dend_45 { pt3dadd( -169.363, 33.2651, -101.823, 0.37 ) }
    dend_45 { pt3dadd( -169.902, 33.6663, -101.727, 0.88 ) }
    dend_45 { pt3dadd( -170.777, 34.1586, -101.5, 0.81 ) }
    dend_45 { pt3dadd( -171.209, 34.3508, -101.368, 0.81 ) }
    dend_45 { pt3dadd( -172.298, 34.764, -101.0, 0.29 ) }
    dend_45 { pt3dadd( -173.727, 35.2782, -100.508, 0.29 ) }
    dend_45 { pt3dadd( -174.615, 35.6352, -100.13, 0.52 ) }
    dend_45 { pt3dadd( -175.687, 36.1297, -99.6449, 0.44 ) }
    dend_45 { pt3dadd( -176.209, 36.3911, -99.4049, 0.44 ) }
    dend_45 { pt3dadd( -176.896, 36.7656, -99.0577, 0.81 ) }
    dend_45 { pt3dadd( -177.702, 37.2786, -98.6124, 0.81 ) }
    dend_45 { pt3dadd( -179.202, 38.4221, -97.6947, 0.29 ) }
    dend_45 { pt3dadd( -179.801, 38.9172, -97.3093, 0.44 ) }
    dend_45 { pt3dadd( -180.362, 39.3919, -96.9102, 0.29 ) }
    dend_45 { pt3dadd( -180.987, 39.8932, -96.4819, 0.29 ) }
    dend_45 { pt3dadd( -181.813, 40.5114, -95.9675, 0.29 ) }
    dend_45 { pt3dadd( -182.452, 40.9575, -95.6247, 0.29 ) }
    dend_45 { pt3dadd( -183.214, 41.4404, -95.2781, 0.59 ) }
    dend_45 { pt3dadd( -184.681, 42.3387, -94.5935, 0.22 ) }
    dend_45 { pt3dadd( -185.626, 42.9061, -94.1561, 0.22 ) }
    dend_45 { pt3dadd( -186.13, 43.1771, -93.9237, 0.52 ) }
    dend_45 { pt3dadd( -186.598, 43.3818, -93.7008, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -91.094, -52.182, 86.3946, 0.29 ) }
    dend_43 { pt3dadd( -98.4648, -57.0186, 93.6041, 0.29 ) }
    dend_43 { pt3dadd( -104.022, -63.2967, 101.242, 0.29 ) }
    dend_43 { pt3dadd( -109.265, -69.355, 109.273, 0.29 ) }
    dend_43 { pt3dadd( -113.8, -75.9955, 117.244, 0.29 ) }
    dend_43 { pt3dadd( -116.71, -82.8912, 125.712, 0.29 ) }
    dend_43 { pt3dadd( -120.536, -89.8701, 133.744, 0.29 ) }
    dend_43 { pt3dadd( -124.387, -96.8765, 141.739, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -91.094, -52.182, 86.3946, 0.29 ) }
    dend_42 { pt3dadd( -98.9711, -56.8049, 93.3483, 0.29 ) }
    dend_42 { pt3dadd( -106.092, -62.8679, 99.952, 0.29 ) }
    dend_42 { pt3dadd( -112.367, -69.0266, 107.258, 0.29 ) }
    dend_42 { pt3dadd( -117.789, -74.8513, 115.451, 0.29 ) }
    dend_42 { pt3dadd( -122.421, -81.1402, 123.754, 0.29 ) }
    dend_42 { pt3dadd( -125.464, -88.1777, 132.132, 0.29 ) }
    dend_42 { pt3dadd( -129.778, -94.4808, 140.586, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.38027, -50.1277, 15.5212, 0.66 ) }
    dend_34 { pt3dadd( -8.9143, -51.6358, 14.9322, 0.66 ) }
    dend_34 { pt3dadd( -9.0503, -52.0363, 14.7911, 1.03 ) }
    dend_34 { pt3dadd( -9.18614, -52.4559, 14.696, 1.03 ) }
    dend_34 { pt3dadd( -9.43444, -53.2589, 14.592, 1.03 ) }
    dend_34 { pt3dadd( -9.60083, -53.8682, 14.5581, 1.03 ) }
    dend_34 { pt3dadd( -9.77561, -54.6137, 14.5625, 0.81 ) }
    dend_34 { pt3dadd( -9.88715, -55.283, 14.6862, 0.81 ) }
    dend_34 { pt3dadd( -9.95277, -56.2674, 14.9499, 1.4 ) }
    dend_34 { pt3dadd( -9.94606, -56.6902, 15.0932, 1.62 ) }
    dend_34 { pt3dadd( -9.88592, -57.3225, 15.3654, 1.4 ) }
    dend_34 { pt3dadd( -9.81485, -57.74, 15.5594, 1.92 ) }
    dend_34 { pt3dadd( -9.67922, -58.3072, 15.8296, 1.4 ) }
    dend_34 { pt3dadd( -9.42287, -59.1665, 16.2441, 1.69 ) }
    dend_34 { pt3dadd( -9.23175, -59.7407, 16.4915, 1.11 ) }
    dend_34 { pt3dadd( -8.97609, -60.5112, 16.8029, 0.81 ) }
    dend_34 { pt3dadd( -8.86351, -60.8751, 16.9389, 1.11 ) }
    dend_34 { pt3dadd( -8.74489, -61.3098, 17.0847, 1.25 ) }
    dend_34 { pt3dadd( -8.53043, -62.2783, 17.378, 0.96 ) }
    dend_34 { pt3dadd( -8.46438, -62.769, 17.5044, 0.74 ) }
    dend_34 { pt3dadd( -8.4493, -63.2389, 17.604, 0.81 ) }
    dend_34 { pt3dadd( -8.53489, -63.9535, 17.7058, 0.52 ) }
    dend_34 { pt3dadd( -8.66574, -64.4653, 17.745, 0.88 ) }
    dend_34 { pt3dadd( -8.82756, -64.8976, 17.7308, 0.88 ) }
    dend_34 { pt3dadd( -9.04957, -65.3731, 17.6404, 0.88 ) }
    dend_34 { pt3dadd( -9.25511, -65.7954, 17.5199, 0.66 ) }
    dend_34 { pt3dadd( -9.45356, -66.2489, 17.3359, 0.66 ) }
    dend_34 { pt3dadd( -9.672, -66.8895, 16.9702, 0.88 ) }
    dend_34 { pt3dadd( -9.77813, -67.3175, 16.6748, 1.33 ) }
    dend_34 { pt3dadd( -9.83337, -67.6463, 16.4347, 1.47 ) }
    dend_34 { pt3dadd( -9.87248, -67.9561, 16.2087, 1.62 ) }
    dend_34 { pt3dadd( -9.95086, -68.5881, 15.7781, 0.74 ) }
    dend_34 { pt3dadd( -10.0511, -69.3059, 15.3787, 0.74 ) }
    dend_34 { pt3dadd( -10.162, -69.8647, 15.1586, 0.74 ) }
    dend_34 { pt3dadd( -10.271, -70.3094, 15.0637, 0.74 ) }
    dend_34 { pt3dadd( -10.4297, -70.9234, 15.0267, 0.66 ) }
    dend_34 { pt3dadd( -10.576, -71.5622, 15.0818, 0.66 ) }
    dend_34 { pt3dadd( -10.7385, -72.4858, 15.2886, 0.96 ) }
    dend_34 { pt3dadd( -10.7835, -72.9619, 15.4387, 0.88 ) }
    dend_34 { pt3dadd( -10.7805, -73.3896, 15.5854, 0.88 ) }
    dend_34 { pt3dadd( -10.6953, -74.1889, 15.852, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -10.5518, -74.9247, 16.0861, 1.18 ) }
    dend_34 { pt3dadd( -10.4692, -75.2852, 16.1764, 1.62 ) }
    dend_34 { pt3dadd( -10.3818, -75.6915, 16.2441, 1.62 ) }
    dend_34 { pt3dadd( -10.2798, -76.2654, 16.3233, 0.96 ) }
    dend_34 { pt3dadd( -10.2236, -76.7099, 16.377, 0.96 ) }
    dend_34 { pt3dadd( -10.1875, -77.3818, 16.4472, 0.66 ) }
    dend_34 { pt3dadd( -10.2315, -78.2645, 16.5165, 0.52 ) }
    dend_34 { pt3dadd( -10.3336, -79.0569, 16.5925, 0.59 ) }
    dend_34 { pt3dadd( -10.5278, -79.9682, 16.6966, 0.74 ) }
    dend_34 { pt3dadd( -10.599, -80.2049, 16.7305, 1.11 ) }
    dend_34 { pt3dadd( -10.783, -80.6571, 16.8269, 1.25 ) }
    dend_34 { pt3dadd( -11.1685, -81.3814, 17.0342, 0.88 ) }
    dend_34 { pt3dadd( -11.4197, -81.7418, 17.178, 0.66 ) }
    dend_34 { pt3dadd( -11.6907, -82.0596, 17.3315, 0.66 ) }
    dend_34 { pt3dadd( -11.9591, -82.3406, 17.4721, 0.59 ) }
    dend_34 { pt3dadd( -12.4929, -82.9073, 17.727, 0.59 ) }
    dend_34 { pt3dadd( -12.7925, -83.2335, 17.8484, 0.44 ) }
    dend_34 { pt3dadd( -13.1513, -83.6569, 17.9577, 0.44 ) }
    dend_34 { pt3dadd( -13.4484, -84.0509, 18.0083, 0.74 ) }
    dend_34 { pt3dadd( -13.688, -84.4167, 18.0252, 0.74 ) }
    dend_34 { pt3dadd( -13.8941, -84.7657, 18.0174, 0.66 ) }
    dend_34 { pt3dadd( -14.1599, -85.2763, 17.9663, 1.03 ) }
    dend_34 { pt3dadd( -14.3594, -85.6824, 17.9276, 1.4 ) }
    dend_34 { pt3dadd( -14.5734, -86.1386, 17.8882, 1.4 ) }
    dend_34 { pt3dadd( -14.7615, -86.5345, 17.8578, 1.47 ) }
    dend_34 { pt3dadd( -15.06, -87.1608, 17.8211, 0.74 ) }
    dend_34 { pt3dadd( -15.2914, -87.6484, 17.7878, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.38027, -50.1277, 15.5212, 0.44 ) }
    dend_33 { pt3dadd( -7.71944, -50.7389, 16.3728, 0.44 ) }
    dend_33 { pt3dadd( -7.33958, -51.2862, 16.9492, 0.44 ) }
    dend_33 { pt3dadd( -7.09013, -52.0193, 17.4868, 0.37 ) }
    dend_33 { pt3dadd( -6.83475, -53.4761, 18.2614, 0.59 ) }
    dend_33 { pt3dadd( -6.8037, -54.052, 18.4862, 0.52 ) }
    dend_33 { pt3dadd( -6.82986, -54.7988, 18.7187, 0.44 ) }
    dend_33 { pt3dadd( -7.07709, -56.0161, 19.0328, 0.44 ) }
    dend_33 { pt3dadd( -7.43654, -57.0498, 19.2914, 0.44 ) }
    dend_33 { pt3dadd( -7.75232, -57.6812, 19.4711, 0.59 ) }
    dend_33 { pt3dadd( -8.25708, -58.409, 19.7693, 0.59 ) }
    dend_33 { pt3dadd( -8.84924, -59.0254, 20.2631, 0.37 ) }
    dend_33 { pt3dadd( -9.69033, -59.7087, 21.1391, 0.59 ) }
    dend_33 { pt3dadd( -10.4563, -60.2378, 22.0602, 0.88 ) }
    dend_33 { pt3dadd( -10.947, -60.5349, 22.6704, 0.81 ) }
    dend_33 { pt3dadd( -11.9444, -61.1033, 23.8998, 1.03 ) }
    dend_33 { pt3dadd( -12.9482, -61.6732, 25.1097, 0.88 ) }
    dend_33 { pt3dadd( -13.8429, -62.2215, 26.1028, 0.44 ) }
    dend_33 { pt3dadd( -14.5543, -62.7543, 26.7984, 0.44 ) }
    dend_33 { pt3dadd( -15.0027, -63.1725, 27.179, 0.66 ) }
    dend_33 { pt3dadd( -15.5989, -63.7931, 27.5558, 0.66 ) }
    dend_33 { pt3dadd( -16.115, -64.3503, 27.7241, 0.66 ) }
    dend_33 { pt3dadd( -16.847, -65.1418, 27.7908, 0.66 ) }
    dend_33 { pt3dadd( -17.4759, -65.8226, 27.7978, 1.33 ) }
    dend_33 { pt3dadd( -17.7517, -66.1432, 27.7806, 1.47 ) }
    dend_33 { pt3dadd( -18.2854, -66.7773, 27.7382, 1.03 ) }
    dend_33 { pt3dadd( -18.9539, -67.5916, 27.6918, 0.81 ) }
    dend_33 { pt3dadd( -19.5211, -68.2789, 27.6672, 0.74 ) }
    dend_33 { pt3dadd( -20.2017, -69.1025, 27.6646, 0.52 ) }
    dend_33 { pt3dadd( -20.6825, -69.7095, 27.6836, 0.44 ) }
    dend_33 { pt3dadd( -24.5572, -76.7504, 32.4921, 0.44 ) }
    dend_33 { pt3dadd( -27.2473, -84.3007, 37.2908, 0.44 ) }
    dend_33 { pt3dadd( -30.6767, -91.8604, 41.5811, 0.44 ) }
    dend_33 { pt3dadd( -35.8898, -99.0221, 44.6254, 0.44 ) }
    dend_33 { pt3dadd( -41.4493, -105.067, 49.2077, 0.44 ) }
    dend_33 { pt3dadd( -46.2385, -111.117, 54.5798, 0.44 ) }
    dend_33 { pt3dadd( -51.1588, -117.409, 59.5256, 0.44 ) }
    dend_33 { pt3dadd( -57.5786, -123.348, 63.0014, 0.44 ) }
    dend_33 { pt3dadd( -65.2288, -128.635, 64.5931, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.09842, -17.7518, -3.34433, 1.47 ) }
    dend_17 { pt3dadd( 3.61313, -19.1142, -3.71578, 1.47 ) }
    dend_17 { pt3dadd( 3.11341, -20.8688, -4.05132, 1.33 ) }
    dend_17 { pt3dadd( 2.78418, -22.2679, -4.21275, 1.55 ) }
    dend_17 { pt3dadd( 2.56624, -23.4036, -4.24812, 1.55 ) }
    dend_17 { pt3dadd( 2.37741, -24.5818, -4.14024, 1.77 ) }
    dend_17 { pt3dadd( 2.15461, -26.0905, -3.84241, 1.77 ) }
    dend_17 { pt3dadd( 2.0486, -27.0212, -3.52778, 2.14 ) }
    dend_17 { pt3dadd( 1.96133, -27.7983, -3.17819, 2.58 ) }
    dend_17 { pt3dadd( 1.83767, -28.7922, -2.7031, 2.36 ) }
    dend_17 { pt3dadd( 1.57413, -30.6171, -1.92172, 1.77 ) }
    dend_17 { pt3dadd( 1.31546, -32.1924, -1.41562, 1.47 ) }
    dend_17 { pt3dadd( 1.0995, -33.5147, -1.17088, 1.18 ) }
    dend_17 { pt3dadd( 0.895157, -34.9204, -1.06139, 1.11 ) }
    dend_17 { pt3dadd( 0.747552, -36.1714, -1.09673, 1.33 ) }
    dend_17 { pt3dadd( 0.611451, -37.8783, -1.33496, 1.25 ) }
    dend_17 { pt3dadd( 0.579836, -39.3725, -1.68049, 1.47 ) }
    dend_17 { pt3dadd( 0.628673, -40.7111, -2.03418, 1.62 ) }
    dend_17 { pt3dadd( 0.700791, -41.7156, -2.30381, 2.14 ) }
    dend_17 { pt3dadd( 0.74665, -42.4089, -2.47625, 2.58 ) }
    dend_17 { pt3dadd( 0.7694, -43.4057, -2.68415, 2.43 ) }
    dend_17 { pt3dadd( 0.708193, -45.0104, -2.95586, 2.14 ) }
    dend_17 { pt3dadd( 0.568366, -46.3063, -3.1498, 1.92 ) }
    dend_17 { pt3dadd( 0.325602, -47.5917, -3.32291, 1.47 ) }
    dend_17 { pt3dadd( -0.110903, -49.1799, -3.53037, 1.25 ) }
    dend_17 { pt3dadd( -0.570904, -50.4901, -3.656, 1.11 ) }
    dend_17 { pt3dadd( -0.989995, -51.4703, -3.70322, 1.4 ) }
    dend_17 { pt3dadd( -1.295, -52.1005, -3.71023, 1.55 ) }
    dend_17 { pt3dadd( -1.77394, -53.0631, -3.67641, 1.18 ) }
    dend_17 { pt3dadd( -2.22509, -54.0464, -3.57871, 0.88 ) }
    dend_17 { pt3dadd( -2.62562, -55.0809, -3.47566, 1.18 ) }
    dend_17 { pt3dadd( -2.93541, -56.0932, -3.38077, 1.03 ) }
    dend_17 { pt3dadd( -3.18732, -57.0463, -3.28582, 1.03 ) }
    dend_17 { pt3dadd( -3.49249, -58.4595, -3.16202, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -3.62577, -59.3574, -3.10451, 1.77 ) }
    dend_17 { pt3dadd( -3.74721, -60.7703, -3.07419, 1.77 ) }
    dend_17 { pt3dadd( -3.80486, -61.8576, -3.13769, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.09842, -17.7518, -3.34433, 1.77 ) }
    dend_1 { pt3dadd( 4.63961, -20.0651, -3.90807, 1.77 ) }
    dend_1 { pt3dadd( 4.88139, -21.223, -4.17241, 1.99 ) }
    dend_1 { pt3dadd( 5.15939, -22.5545, -4.47637, 1.99 ) }
    dend_1 { pt3dadd( 5.53872, -24.3711, -4.8911, 3.17 ) }
    dend_1 { pt3dadd( 5.70959, -25.1895, -5.07792, 3.76 ) }
    dend_1 { pt3dadd( 6.00198, -26.5898, -5.3976, 4.2 ) }
    dend_1 { pt3dadd( 6.16363, -27.8286, -5.62901, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205315 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205315 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205315 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -56.7414, 113.774, -30.5032, 0.29 ) }
    dend_85 { pt3dadd( -56.9745, 114.749, -30.6511, 0.29 ) }
    dend_85 { pt3dadd( -57.2419, 116.209, -31.1872, 0.29 ) }
    dend_85 { pt3dadd( -57.4022, 117.517, -31.7454, 0.29 ) }
    dend_85 { pt3dadd( -57.4931, 118.924, -32.4055, 0.29 ) }
    dend_85 { pt3dadd( -57.5199, 119.933, -32.9206, 0.29 ) }
    dend_85 { pt3dadd( -57.538, 121.591, -33.7708, 0.29 ) }
    dend_85 { pt3dadd( -57.4847, 124.563, -35.4698, 0.29 ) }
    dend_85 { pt3dadd( -57.4564, 125.478, -36.029, 0.37 ) }
    dend_85 { pt3dadd( -57.4345, 126.578, -36.7321, 0.37 ) }
    dend_85 { pt3dadd( -57.4374, 127.933, -37.6397, 0.37 ) }
    dend_85 { pt3dadd( -57.4352, 129.048, -38.3941, 0.22 ) }
    dend_85 { pt3dadd( -57.4459, 130.211, -39.1526, 0.22 ) }
    dend_85 { pt3dadd( -57.5627, 131.476, -39.8146, 1.03 ) }
    dend_85 { pt3dadd( -57.6119, 131.703, -39.9358, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -56.7414, 113.774, -30.5032, 0.52 ) }
    dend_80 { pt3dadd( -58.2226, 115.07, -29.9813, 0.52 ) }
    dend_80 { pt3dadd( -58.9028, 115.762, -29.6928, 0.52 ) }
    dend_80 { pt3dadd( -59.579, 116.57, -29.3861, 0.44 ) }
    dend_80 { pt3dadd( -59.8769, 116.987, -29.2475, 0.59 ) }
    dend_80 { pt3dadd( -60.1909, 117.496, -29.0953, 0.59 ) }
    dend_80 { pt3dadd( -60.7625, 118.475, -28.7977, 0.37 ) }
    dend_80 { pt3dadd( -61.4201, 119.756, -28.4959, 0.37 ) }
    dend_80 { pt3dadd( -61.812, 120.585, -28.2865, 0.37 ) }
    dend_80 { pt3dadd( -62.2096, 121.42, -28.0666, 0.37 ) }
    dend_80 { pt3dadd( -62.6549, 122.332, -27.8016, 0.29 ) }
    dend_80 { pt3dadd( -63.0749, 123.148, -27.5497, 0.29 ) }
    dend_80 { pt3dadd( -63.5701, 123.998, -27.271, 0.81 ) }
    dend_80 { pt3dadd( -63.8091, 124.335, -27.1608, 0.81 ) }
    dend_80 { pt3dadd( -64.2266, 124.84, -26.9883, 0.74 ) }
    dend_80 { pt3dadd( -64.8128, 125.476, -26.8128, 0.74 ) }
    dend_80 { pt3dadd( -65.339, 125.975, -26.7514, 0.96 ) }
    dend_80 { pt3dadd( -65.8821, 126.442, -26.7851, 0.96 ) }
    dend_80 { pt3dadd( -66.2487, 126.756, -26.8656, 0.59 ) }
    dend_80 { pt3dadd( -66.959, 127.422, -27.136, 0.29 ) }
    dend_80 { pt3dadd( -67.6091, 128.113, -27.5135, 0.29 ) }
    dend_80 { pt3dadd( -68.3042, 128.933, -28.0229, 0.29 ) }
    dend_80 { pt3dadd( -68.7882, 129.555, -28.4037, 0.22 ) }
    dend_80 { pt3dadd( -69.5096, 130.526, -28.9884, 0.22 ) }
    dend_80 { pt3dadd( -70.0715, 131.325, -29.4549, 0.74 ) }
    dend_80 { pt3dadd( -70.705, 132.276, -29.9459, 0.37 ) }
    dend_80 { pt3dadd( -71.2101, 133.11, -30.2905, 0.37 ) }
    dend_80 { pt3dadd( -71.6695, 133.934, -30.5802, 0.81 ) }
    dend_80 { pt3dadd( -71.9988, 134.491, -30.7788, 1.18 ) }
    dend_80 { pt3dadd( -72.3208, 134.923, -30.9373, 1.18 ) }
    dend_80 { pt3dadd( -73.1601, 135.84, -31.3264, 0.29 ) }
    dend_80 { pt3dadd( -74.0557, 136.748, -31.7228, 0.29 ) }
    dend_80 { pt3dadd( -74.6286, 137.291, -31.995, 0.29 ) }
    dend_80 { pt3dadd( -75.216, 137.811, -32.296, 0.29 ) }
    dend_80 { pt3dadd( -76.0915, 138.519, -32.737, 0.74 ) }
    dend_80 { pt3dadd( -76.7307, 138.932, -33.0521, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 128.026, 49.6174, 70.1135, 0.29 ) }
    dend_71 { pt3dadd( 133.507, 51.0425, 75.0436, 0.29 ) }
    dend_71 { pt3dadd( 138.756, 52.3933, 80.2416, 0.29 ) }
    dend_71 { pt3dadd( 144.395, 54.3463, 84.7923, 0.29 ) }
    dend_71 { pt3dadd( 149.628, 57.2643, 89.2967, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 128.026, 49.6174, 70.1135, 0.29 ) }
    dend_70 { pt3dadd( 133.581, 50.5339, 74.6106, 0.29 ) }
    dend_70 { pt3dadd( 139.232, 52.5665, 78.5785, 0.29 ) }
    dend_70 { pt3dadd( 145.589, 54.5083, 81.3375, 0.29 ) }
    dend_70 { pt3dadd( 151.229, 57.5459, 84.5848, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 77.3931, 42.4171, 5.73884, 0.44 ) }
    dend_58 { pt3dadd( 78.7818, 42.3773, 5.52157, 0.44 ) }
    dend_58 { pt3dadd( 79.314, 42.4247, 5.35672, 0.37 ) }
    dend_58 { pt3dadd( 80.268, 42.5941, 5.0004, 0.59 ) }
    dend_58 { pt3dadd( 80.7876, 42.7096, 4.79617, 0.74 ) }
    dend_58 { pt3dadd( 82.1158, 43.0479, 4.28555, 0.37 ) }
    dend_58 { pt3dadd( 83.478, 43.4346, 3.78592, 0.29 ) }
    dend_58 { pt3dadd( 84.2901, 43.7535, 3.44108, 0.29 ) }
    dend_58 { pt3dadd( 84.8649, 44.0298, 3.21398, 0.88 ) }
    dend_58 { pt3dadd( 85.0751, 44.1491, 3.12998, 1.11 ) }
    dend_58 { pt3dadd( 85.5894, 44.4675, 2.94791, 1.11 ) }
    dend_58 { pt3dadd( 86.0547, 44.7729, 2.86804, 1.18 ) }
    dend_58 { pt3dadd( 86.8862, 45.2362, 2.8929, 0.74 ) }
    dend_58 { pt3dadd( 87.4462, 45.5399, 2.94031, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 77.3931, 42.4171, 5.73884, 0.29 ) }
    dend_55 { pt3dadd( 78.3657, 43.7228, 6.14042, 0.29 ) }
    dend_55 { pt3dadd( 78.816, 44.3466, 6.35065, 0.29 ) }
    dend_55 { pt3dadd( 79.3928, 45.1456, 6.61992, 0.66 ) }
    dend_55 { pt3dadd( 80.0154, 46.0082, 6.91063, 0.29 ) }
    dend_55 { pt3dadd( 80.4817, 46.654, 7.12828, 0.29 ) }
    dend_55 { pt3dadd( 81.4161, 47.9484, 7.5645, 0.29 ) }
    dend_55 { pt3dadd( 81.9299, 48.6619, 7.89426, 0.29 ) }
    dend_55 { pt3dadd( 90.3264, 58.7818, 10.5368, 0.29 ) }
    dend_55 { pt3dadd( 97.0662, 69.9045, 13.7153, 0.29 ) }
    dend_55 { pt3dadd( 102.469, 82.0174, 15.0105, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 109.068, 93.4193, 17.2698, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -69.1797, -58.1585, -59.4208, 0.81 ) }
    dend_48 { pt3dadd( -69.5608, -59.3658, -60.8852, 0.81 ) }
    dend_48 { pt3dadd( -69.6373, -59.5189, -61.0762, 0.81 ) }
    dend_48 { pt3dadd( -70.6842, -61.0837, -62.9668, 0.37 ) }
    dend_48 { pt3dadd( -71.0047, -61.4973, -63.4235, 0.52 ) }
    dend_48 { pt3dadd( -71.3152, -61.8916, -63.8428, 0.66 ) }
    dend_48 { pt3dadd( -71.6716, -62.3614, -64.3218, 0.66 ) }
    dend_48 { pt3dadd( -72.4781, -63.2964, -65.2212, 0.37 ) }
    dend_48 { pt3dadd( -72.9889, -63.876, -65.8018, 0.37 ) }
    dend_48 { pt3dadd( -73.7819, -64.7381, -66.6705, 0.37 ) }
    dend_48 { pt3dadd( -74.2674, -65.2661, -67.2273, 0.66 ) }
    dend_48 { pt3dadd( -75.0465, -66.0993, -68.1053, 1.11 ) }
    dend_48 { pt3dadd( -75.4165, -66.4776, -68.4902, 1.25 ) }
    dend_48 { pt3dadd( -76.6604, -67.6499, -69.8279, 0.22 ) }
    dend_48 { pt3dadd( -77.1765, -68.0648, -70.3784, 0.29 ) }
    dend_48 { pt3dadd( -77.6268, -68.3662, -70.8428, 0.59 ) }
    dend_48 { pt3dadd( -78.1404, -68.6718, -71.3327, 0.81 ) }
    dend_48 { pt3dadd( -78.6841, -69.0022, -71.8616, 0.81 ) }
    dend_48 { pt3dadd( -80.0894, -70.0086, -73.2188, 0.37 ) }
    dend_48 { pt3dadd( -80.5028, -70.3601, -73.6011, 0.37 ) }
    dend_48 { pt3dadd( -81.1727, -71.0979, -74.2796, 0.59 ) }
    dend_48 { pt3dadd( -81.4179, -71.4283, -74.5362, 0.81 ) }
    dend_48 { pt3dadd( -82.2903, -72.8076, -75.4195, 0.44 ) }
    dend_48 { pt3dadd( -82.8835, -73.8693, -75.949, 0.44 ) }
    dend_48 { pt3dadd( -83.3578, -74.7816, -76.2946, 0.37 ) }
    dend_48 { pt3dadd( -83.9291, -75.9231, -76.6877, 0.37 ) }
    dend_48 { pt3dadd( -84.3556, -76.7621, -76.9751, 0.66 ) }
    dend_48 { pt3dadd( -84.703, -77.3807, -77.2123, 0.81 ) }
    dend_48 { pt3dadd( -85.0498, -77.9499, -77.4175, 0.81 ) }
    dend_48 { pt3dadd( -85.7015, -78.9506, -77.8031, 0.29 ) }
    dend_48 { pt3dadd( -86.0844, -79.4983, -78.0049, 0.96 ) }
    dend_48 { pt3dadd( -87.0265, -80.7775, -78.4009, 0.29 ) }
    dend_48 { pt3dadd( -87.6288, -81.6116, -78.6224, 0.29 ) }
    dend_48 { pt3dadd( -88.2299, -82.4436, -78.788, 0.44 ) }
    dend_48 { pt3dadd( -88.573, -82.9029, -78.8679, 0.44 ) }
    dend_48 { pt3dadd( -89.1335, -83.6361, -78.9511, 0.29 ) }
    dend_48 { pt3dadd( -89.4403, -84.0467, -79.0198, 0.59 ) }
    dend_48 { pt3dadd( -89.9077, -84.7266, -79.1392, 0.59 ) }
    dend_48 { pt3dadd( -90.3388, -85.4139, -79.2966, 0.52 ) }
    dend_48 { pt3dadd( -91.0243, -86.4473, -79.6063, 0.37 ) }
    dend_48 { pt3dadd( -91.4633, -87.0927, -79.8319, 0.88 ) }
    dend_48 { pt3dadd( -92.2846, -88.2963, -80.2889, 0.44 ) }
    dend_48 { pt3dadd( -92.7423, -88.9895, -80.5472, 0.59 ) }
    dend_48 { pt3dadd( -93.1161, -89.5604, -80.752, 0.59 ) }
    dend_48 { pt3dadd( -93.5654, -90.2518, -80.9631, 0.59 ) }
    dend_48 { pt3dadd( -94.0339, -90.9534, -81.1147, 0.37 ) }
    dend_48 { pt3dadd( -94.4134, -91.4477, -81.1807, 0.37 ) }
    dend_48 { pt3dadd( -95.0489, -92.152, -81.1855, 0.29 ) }
    dend_48 { pt3dadd( -95.2918, -92.3907, -81.1594, 0.29 ) }
    dend_48 { pt3dadd( -95.9163, -92.9838, -81.0269, 0.88 ) }
    dend_48 { pt3dadd( -96.3389, -93.3888, -80.8939, 1.18 ) }
    dend_48 { pt3dadd( -97.0535, -94.0082, -80.641, 0.29 ) }
    dend_48 { pt3dadd( -97.5815, -94.4283, -80.4592, 0.29 ) }
    dend_48 { pt3dadd( -98.3709, -95.0565, -80.2451, 0.29 ) }
    dend_48 { pt3dadd( -98.7298, -95.362, -80.1668, 0.88 ) }
    dend_48 { pt3dadd( -99.0777, -95.6793, -80.1166, 0.88 ) }
    dend_48 { pt3dadd( -100.214, -96.7554, -80.0753, 0.22 ) }
    dend_48 { pt3dadd( -100.596, -97.1299, -80.1124, 0.22 ) }
    dend_48 { pt3dadd( -101.439, -97.9313, -80.2581, 0.59 ) }
    dend_48 { pt3dadd( -101.627, -98.1068, -80.3045, 0.59 ) }
    dend_48 { pt3dadd( -102.384, -98.8075, -80.5093, 0.22 ) }
    dend_48 { pt3dadd( -102.818, -99.2166, -80.641, 0.44 ) }
    dend_48 { pt3dadd( -103.421, -99.8508, -80.8618, 0.22 ) }
    dend_48 { pt3dadd( -104.252, -100.716, -81.1538, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -69.1797, -58.1585, -59.4208, 0.29 ) }
    dend_47 { pt3dadd( -70.6482, -58.2942, -59.3616, 0.29 ) }
    dend_47 { pt3dadd( -71.5549, -58.4286, -59.286, 0.29 ) }
    dend_47 { pt3dadd( -72.4441, -58.598, -59.2206, 0.66 ) }
    dend_47 { pt3dadd( -72.8683, -58.7025, -59.194, 0.66 ) }
    dend_47 { pt3dadd( -74.3608, -59.1193, -59.0915, 0.29 ) }
    dend_47 { pt3dadd( -75.0045, -59.3113, -59.0535, 0.29 ) }
    dend_47 { pt3dadd( -75.4808, -59.4832, -58.9812, 0.66 ) }
    dend_47 { pt3dadd( -75.9331, -59.6681, -58.9046, 0.66 ) }
    dend_47 { pt3dadd( -77.4803, -60.3362, -58.64, 0.29 ) }
    dend_47 { pt3dadd( -78.0295, -60.5521, -58.5569, 0.52 ) }
    dend_47 { pt3dadd( -78.5569, -60.7289, -58.4951, 0.52 ) }
    dend_47 { pt3dadd( -80.0177, -61.105, -58.3156, 0.22 ) }
    dend_47 { pt3dadd( -80.6981, -61.2355, -58.2266, 0.59 ) }
    dend_47 { pt3dadd( -81.1355, -61.2971, -58.1525, 0.74 ) }
    dend_47 { pt3dadd( -81.9865, -61.3685, -58.0037, 0.29 ) }
    dend_47 { pt3dadd( -82.4166, -61.3881, -57.9342, 0.29 ) }
    dend_47 { pt3dadd( -82.9795, -61.3871, -57.8472, 0.96 ) }
    dend_47 { pt3dadd( -83.531, -61.3406, -57.808, 0.96 ) }
    dend_47 { pt3dadd( -85.0371, -61.1924, -57.6536, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -15.2914, -87.6484, 17.7878, 0.29 ) }
    dend_40 { pt3dadd( -15.0487, -87.6702, 18.4248, 0.29 ) }
    dend_40 { pt3dadd( -14.4772, -87.7614, 19.7984, 0.29 ) }
    dend_40 { pt3dadd( -14.0723, -87.8653, 20.7767, 0.59 ) }
    dend_40 { pt3dadd( -13.5391, -88.1039, 22.1399, 0.66 ) }
    dend_40 { pt3dadd( -12.79, -88.591, 24.038, 0.59 ) }
    dend_40 { pt3dadd( -12.2821, -89.0616, 25.2673, 0.29 ) }
    dend_40 { pt3dadd( -11.9316, -89.5122, 25.9709, 0.52 ) }
    dend_40 { pt3dadd( -11.7501, -90.0356, 26.2019, 0.66 ) }
    dend_40 { pt3dadd( -11.5294, -91.1888, 26.2184, 0.37 ) }
    dend_40 { pt3dadd( -11.2899, -92.6685, 26.0432, 0.29 ) }
    dend_40 { pt3dadd( -11.1238, -93.8408, 25.8212, 0.29 ) }
    dend_40 { pt3dadd( -10.9833, -95.0034, 25.5432, 0.29 ) }
    dend_40 { pt3dadd( -10.8432, -96.0593, 25.2728, 0.29 ) }
    dend_40 { pt3dadd( -10.6191, -97.3078, 24.9387, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -10.3722, -98.3755, 24.6484, 0.29 ) }
    dend_40 { pt3dadd( -6.25981, -105.323, 30.068, 0.29 ) }
    dend_40 { pt3dadd( -2.48477, -111.075, 36.9959, 0.29 ) }
    dend_40 { pt3dadd( 3.10533, -117.092, 42.2618, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -15.2914, -87.6484, 17.7878, 0.74 ) }
    dend_35 { pt3dadd( -16.1229, -88.548, 17.4839, 0.74 ) }
    dend_35 { pt3dadd( -16.8511, -89.481, 17.2178, 0.52 ) }
    dend_35 { pt3dadd( -17.4053, -90.276, 17.0252, 0.52 ) }
    dend_35 { pt3dadd( -18.2742, -91.7342, 16.7384, 0.59 ) }
    dend_35 { pt3dadd( -18.6231, -92.4807, 16.6582, 0.96 ) }
    dend_35 { pt3dadd( -18.893, -93.2947, 16.596, 1.18 ) }
    dend_35 { pt3dadd( -18.9969, -93.9891, 16.4941, 1.18 ) }
    dend_35 { pt3dadd( -18.9868, -94.6493, 16.3875, 0.96 ) }
    dend_35 { pt3dadd( -18.8435, -95.6178, 16.1562, 0.66 ) }
    dend_35 { pt3dadd( -18.4872, -96.9904, 15.578, 0.52 ) }
    dend_35 { pt3dadd( -18.0774, -98.2184, 14.9582, 0.52 ) }
    dend_35 { pt3dadd( -17.5453, -99.5161, 14.1612, 0.29 ) }
    dend_35 { pt3dadd( -17.3039, -100.002, 13.7962, 0.37 ) }
    dend_35 { pt3dadd( -16.641, -101.125, 12.7171, 0.29 ) }
    dend_35 { pt3dadd( -15.9361, -102.13, 11.36, 0.29 ) }
    dend_35 { pt3dadd( -16.7687, -113.052, 8.77637, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.80486, -61.8576, -3.13769, 0.37 ) }
    dend_31 { pt3dadd( -6.68071, -63.0086, -3.10556, 0.37 ) }
    dend_31 { pt3dadd( -8.07309, -63.593, -2.6567, 0.37 ) }
    dend_31 { pt3dadd( -9.11054, -64.0448, -2.19502, 0.37 ) }
    dend_31 { pt3dadd( -9.81575, -64.36, -1.86869, 0.37 ) }
    dend_31 { pt3dadd( -10.7071, -64.7674, -1.42325, 0.59 ) }
    dend_31 { pt3dadd( -11.5717, -65.1738, -0.982741, 0.74 ) }
    dend_31 { pt3dadd( -12.2452, -65.4823, -0.521583, 0.52 ) }
    dend_31 { pt3dadd( -12.7545, -65.7201, -0.167903, 0.59 ) }
    dend_31 { pt3dadd( -13.2064, -65.9768, 0.118528, 0.74 ) }
    dend_31 { pt3dadd( -13.9782, -66.4238, 0.519208, 0.52 ) }
    dend_31 { pt3dadd( -14.46, -66.6954, 0.712762, 0.52 ) }
    dend_31 { pt3dadd( -14.9095, -66.9294, 0.84846, 0.74 ) }
    dend_31 { pt3dadd( -15.4127, -67.177, 0.977848, 0.74 ) }
    dend_31 { pt3dadd( -15.8926, -67.4209, 1.09218, 0.52 ) }
    dend_31 { pt3dadd( -16.5875, -67.7709, 1.24819, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.80486, -61.8576, -3.13769, 0.88 ) }
    dend_18 { pt3dadd( -4.02298, -62.9162, -3.1848, 0.88 ) }
    dend_18 { pt3dadd( -4.4398, -64.2483, -3.11408, 0.66 ) }
    dend_18 { pt3dadd( -4.85623, -65.1849, -2.82453, 0.74 ) }
    dend_18 { pt3dadd( -5.2147, -65.8078, -2.54657, 0.88 ) }
    dend_18 { pt3dadd( -5.8452, -66.751, -2.0857, 0.88 ) }
    dend_18 { pt3dadd( -6.24874, -67.3215, -1.80884, 1.03 ) }
    dend_18 { pt3dadd( -6.74256, -67.9449, -1.45075, 1.03 ) }
    dend_18 { pt3dadd( -7.86301, -69.3968, -0.596262, 1.03 ) }
    dend_18 { pt3dadd( -8.49762, -70.3094, -0.104653, 1.03 ) }
    dend_18 { pt3dadd( -9.01409, -71.2306, 0.308081, 0.88 ) }
    dend_18 { pt3dadd( -9.29501, -72.0203, 0.556769, 0.88 ) }
    dend_18 { pt3dadd( -9.37488, -72.7565, 0.716377, 0.88 ) }
    dend_18 { pt3dadd( -9.17168, -74.1844, 0.841103, 1.25 ) }
    dend_18 { pt3dadd( -9.00956, -74.7035, 0.855188, 1.55 ) }
    dend_18 { pt3dadd( -8.69006, -75.4331, 0.906616, 1.55 ) }
    dend_18 { pt3dadd( -8.15583, -76.4442, 1.08209, 1.55 ) }
    dend_18 { pt3dadd( -7.77328, -77.0736, 1.27503, 1.55 ) }
    dend_18 { pt3dadd( -7.02787, -78.1624, 1.77536, 1.03 ) }
    dend_18 { pt3dadd( -6.41547, -78.9401, 2.28725, 1.03 ) }
    dend_18 { pt3dadd( -5.88877, -79.5521, 2.77447, 0.81 ) }
    dend_18 { pt3dadd( -5.02679, -80.4597, 3.6371, 0.81 ) }
    dend_18 { pt3dadd( -4.40959, -81.0545, 4.27151, 1.03 ) }
    dend_18 { pt3dadd( -3.80318, -81.5727, 4.85411, 1.03 ) }
    dend_18 { pt3dadd( -3.10486, -82.11, 5.45491, 1.03 ) }
    dend_18 { pt3dadd( -2.52527, -82.55, 5.8688, 0.88 ) }
    dend_18 { pt3dadd( -1.63238, -83.2762, 6.4132, 0.88 ) }
    dend_18 { pt3dadd( -1.18383, -83.6667, 6.63629, 0.96 ) }
    dend_18 { pt3dadd( -0.666937, -84.172, 6.86343, 0.96 ) }
    dend_18 { pt3dadd( 0.0352661, -84.9426, 7.14516, 1.33 ) }
    dend_18 { pt3dadd( 0.407037, -85.4062, 7.27301, 1.62 ) }
    dend_18 { pt3dadd( 0.715644, -85.8269, 7.37836, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.16363, -27.8286, -5.62901, 0.66 ) }
    dend_16 { pt3dadd( 7.97186, -30.6649, -3.17668, 0.66 ) }
    dend_16 { pt3dadd( 8.43992, -31.6149, -2.43164, 0.88 ) }
    dend_16 { pt3dadd( 9.26849, -33.5267, -1.11729, 1.03 ) }
    dend_16 { pt3dadd( 9.66375, -34.443, -0.553397, 1.03 ) }
    dend_16 { pt3dadd( 10.0346, -35.2505, -0.0924036, 1.03 ) }
    dend_16 { pt3dadd( 10.5358, -36.2441, 0.444157, 0.37 ) }
    dend_16 { pt3dadd( 11.0106, -37.3313, 0.901701, 0.37 ) }
    dend_16 { pt3dadd( 11.6262, -38.4066, 1.25232, 0.59 ) }
    dend_16 { pt3dadd( 12.4301, -39.3079, 1.37901, 0.81 ) }
    dend_16 { pt3dadd( 13.07, -39.7956, 1.41575, 0.81 ) }
    dend_16 { pt3dadd( 13.8047, -40.2016, 1.45929, 0.52 ) }
    dend_16 { pt3dadd( 14.5011, -40.5146, 1.51969, 0.81 ) }
    dend_16 { pt3dadd( 15.5461, -40.9565, 1.64973, 1.25 ) }
    dend_16 { pt3dadd( 15.985, -41.1861, 1.74662, 1.69 ) }
    dend_16 { pt3dadd( 16.5489, -41.6198, 1.95674, 1.69 ) }
    dend_16 { pt3dadd( 17.3571, -42.7387, 2.49693, 0.96 ) }
    dend_16 { pt3dadd( 17.6607, -43.4978, 2.83345, 0.66 ) }
    dend_16 { pt3dadd( 17.8257, -44.1006, 3.08914, 0.81 ) }
    dend_16 { pt3dadd( 18.133, -45.3691, 3.62372, 0.44 ) }
    dend_16 { pt3dadd( 18.4348, -46.3702, 4.03931, 0.44 ) }
    dend_16 { pt3dadd( 18.7421, -47.1521, 4.34937, 0.44 ) }
    dend_16 { pt3dadd( 19.1686, -47.8339, 4.65265, 0.88 ) }
    dend_16 { pt3dadd( 20.0308, -48.6725, 5.15869, 1.25 ) }
    dend_16 { pt3dadd( 21.0865, -49.4145, 5.71209, 0.66 ) }
    dend_16 { pt3dadd( 22.0282, -49.9573, 6.15448, 0.52 ) }
    dend_16 { pt3dadd( 22.5977, -50.2726, 6.40784, 0.52 ) }
    dend_16 { pt3dadd( 23.9963, -51.0981, 7.0481, 0.74 ) }
    dend_16 { pt3dadd( 25.1306, -51.8552, 7.56397, 1.25 ) }
    dend_16 { pt3dadd( 25.5607, -52.1921, 7.73862, 1.25 ) }
    dend_16 { pt3dadd( 26.2184, -52.791, 7.95536, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 26.9741, -53.5904, 8.1137, 0.44 ) }
    dend_16 { pt3dadd( 27.8918, -54.6735, 8.18135, 0.37 ) }
    dend_16 { pt3dadd( 28.4032, -55.325, 8.12353, 0.37 ) }
    dend_16 { pt3dadd( 28.9175, -55.9842, 8.00217, 0.96 ) }
    dend_16 { pt3dadd( 29.3112, -56.4745, 7.89204, 1.33 ) }
    dend_16 { pt3dadd( 30.4739, -57.801, 7.52772, 0.29 ) }
    dend_16 { pt3dadd( 30.8966, -58.2254, 7.38089, 0.29 ) }
    dend_16 { pt3dadd( 31.318, -58.6046, 7.21597, 0.29 ) }
    dend_16 { pt3dadd( 31.4757, -58.7451, 7.15554, 0.44 ) }
    dend_16 { pt3dadd( 37.7558, -66.4377, 8.98453, 0.44 ) }
    dend_16 { pt3dadd( 44.7672, -73.7232, 9.31151, 0.44 ) }
    dend_16 { pt3dadd( 50.6202, -81.9343, 9.27845, 0.44 ) }
    dend_16 { pt3dadd( 57.0528, -89.7182, 9.42901, 0.44 ) }
    dend_16 { pt3dadd( 63.3902, -97.515, 10.4161, 0.44 ) }
    dend_16 { pt3dadd( 69.1751, -105.758, 10.8777, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.16363, -27.8286, -5.62901, 1.03 ) }
    dend_11 { pt3dadd( 6.20821, -29.3717, -5.71376, 1.03 ) }
    dend_11 { pt3dadd( 6.4075, -30.8931, -5.8492, 1.03 ) }
    dend_11 { pt3dadd( 6.66828, -31.9843, -5.98928, 0.96 ) }
    dend_11 { pt3dadd( 6.99641, -33.0083, -6.15138, 0.96 ) }
    dend_11 { pt3dadd( 7.39071, -33.9919, -6.33618, 0.96 ) }
    dend_11 { pt3dadd( 7.71822, -34.647, -6.45482, 1.18 ) }
    dend_11 { pt3dadd( 8.41864, -35.5018, -6.61521, 1.47 ) }
    dend_11 { pt3dadd( 9.15757, -36.158, -6.72622, 2.21 ) }
    dend_11 { pt3dadd( 9.48381, -36.4095, -6.7497, 2.21 ) }
    dend_11 { pt3dadd( 10.0168, -36.816, -6.72848, 1.99 ) }
    dend_11 { pt3dadd( 10.9963, -37.6241, -6.57641, 1.33 ) }
    dend_11 { pt3dadd( 11.9321, -38.5413, -6.31814, 0.88 ) }
    dend_11 { pt3dadd( 12.5551, -39.2975, -6.05122, 0.74 ) }
    dend_11 { pt3dadd( 12.9923, -40.0333, -5.77117, 0.74 ) }
    dend_11 { pt3dadd( 13.3671, -40.9377, -5.43126, 1.33 ) }
    dend_11 { pt3dadd( 13.5236, -41.4986, -5.23644, 1.62 ) }
    dend_11 { pt3dadd( 13.637, -42.1216, -5.05011, 1.92 ) }
    dend_11 { pt3dadd( 13.7237, -42.7967, -4.89726, 1.69 ) }
    dend_11 { pt3dadd( 13.9131, -44.0849, -4.71001, 1.33 ) }
    dend_11 { pt3dadd( 14.1679, -45.3873, -4.63089, 1.03 ) }
    dend_11 { pt3dadd( 14.3978, -46.2796, -4.65106, 0.88 ) }
    dend_11 { pt3dadd( 14.6762, -47.098, -4.72954, 1.03 ) }
    dend_11 { pt3dadd( 15.1132, -48.1603, -4.89897, 1.03 ) }
    dend_11 { pt3dadd( 15.6142, -49.2195, -5.13999, 1.03 ) }
    dend_11 { pt3dadd( 16.0633, -50.1192, -5.40926, 1.33 ) }
    dend_11 { pt3dadd( 16.3751, -50.8009, -5.65051, 1.69 ) }
    dend_11 { pt3dadd( 16.688, -51.6384, -5.96497, 1.47 ) }
    dend_11 { pt3dadd( 16.8442, -52.2336, -6.19231, 1.03 ) }
    dend_11 { pt3dadd( 16.9822, -53.1528, -6.53179, 0.96 ) }
    dend_11 { pt3dadd( 17.0244, -54.0017, -6.84505, 0.96 ) }
    dend_11 { pt3dadd( 17.0008, -55.0499, -7.21626, 1.4 ) }
    dend_11 { pt3dadd( 16.9338, -56.1661, -7.58401, 1.4 ) }
    dend_11 { pt3dadd( 16.8724, -57.1407, -7.89533, 1.55 ) }
    dend_11 { pt3dadd( 16.8682, -57.6669, -8.05681, 1.77 ) }
    dend_11 { pt3dadd( 16.9371, -58.6676, -8.34489, 0.96 ) }
    dend_11 { pt3dadd( 17.1002, -59.5524, -8.5742, 0.66 ) }
    dend_11 { pt3dadd( 17.3895, -60.3644, -8.73538, 0.66 ) }
    dend_11 { pt3dadd( 17.8279, -61.1241, -8.85452, 0.96 ) }
    dend_11 { pt3dadd( 18.4146, -61.8546, -8.9599, 1.11 ) }
    dend_11 { pt3dadd( 18.7282, -62.1664, -9.0135, 1.4 ) }
    dend_11 { pt3dadd( 19.0124, -62.4093, -9.06695, 1.4 ) }
    dend_11 { pt3dadd( 19.6078, -62.9139, -9.18226, 1.4 ) }
    dend_11 { pt3dadd( 20.309, -63.5813, -9.33289, 0.66 ) }
    dend_11 { pt3dadd( 20.6124, -63.9484, -9.41999, 0.52 ) }
    dend_11 { pt3dadd( 20.9483, -64.4835, -9.5442, 0.52 ) }
    dend_11 { pt3dadd( 21.3954, -65.3691, -9.70294, 0.81 ) }
    dend_11 { pt3dadd( 21.8237, -66.3635, -9.8013, 1.03 ) }
    dend_11 { pt3dadd( 22.0514, -67.0243, -9.8335, 1.03 ) }
    dend_11 { pt3dadd( 22.2989, -67.919, -9.81972, 1.03 ) }
    dend_11 { pt3dadd( 22.4795, -68.8181, -9.82151, 1.03 ) }
    dend_11 { pt3dadd( 22.6205, -69.7589, -9.83957, 0.88 ) }
    dend_11 { pt3dadd( 22.752, -70.9166, -9.93416, 1.03 ) }
    dend_11 { pt3dadd( 22.8602, -71.9535, -10.0883, 0.52 ) }
    dend_11 { pt3dadd( 22.9629, -72.9392, -10.3182, 0.52 ) }
    dend_11 { pt3dadd( 23.0836, -74.3863, -10.8, 0.88 ) }
    dend_11 { pt3dadd( 23.1194, -74.9815, -11.0546, 1.11 ) }
    dend_11 { pt3dadd( 23.1499, -75.9305, -11.5226, 0.59 ) }
    dend_11 { pt3dadd( 23.1609, -76.3326, -11.719, 0.59 ) }
    dend_11 { pt3dadd( 23.2175, -77.2264, -12.0427, 0.52 ) }
    dend_11 { pt3dadd( 23.3028, -78.1647, -12.1892, 0.52 ) }
    dend_11 { pt3dadd( 23.3804, -78.9107, -12.0654, 1.11 ) }
    dend_11 { pt3dadd( 23.4206, -79.5349, -11.8246, 1.25 ) }
    dend_11 { pt3dadd( 23.4542, -80.4709, -11.3053, 1.18 ) }
    dend_11 { pt3dadd( 23.4801, -81.3811, -10.7254, 0.52 ) }
    dend_11 { pt3dadd( 23.5175, -82.0085, -10.2735, 0.52 ) }
    dend_11 { pt3dadd( 23.6038, -82.867, -9.68385, 0.52 ) }
    dend_11 { pt3dadd( 23.6406, -83.1928, -9.50015, 0.81 ) }
    dend_11 { pt3dadd( 23.7106, -83.7966, -9.26179, 0.74 ) }
    dend_11 { pt3dadd( 23.7709, -84.5859, -9.08138, 0.74 ) }
    dend_11 { pt3dadd( 23.7885, -85.378, -8.97606, 1.03 ) }
    dend_11 { pt3dadd( 23.7329, -86.4378, -8.89889, 0.66 ) }
    dend_11 { pt3dadd( 23.6369, -87.1428, -8.86305, 0.52 ) }
    dend_11 { pt3dadd( 23.4311, -87.9657, -8.82011, 1.11 ) }
    dend_11 { pt3dadd( 23.1661, -88.6648, -8.81994, 1.11 ) }
    dend_11 { pt3dadd( 22.702, -89.6664, -8.87084, 0.81 ) }
    dend_11 { pt3dadd( 22.1661, -90.7198, -8.98843, 0.66 ) }
    dend_11 { pt3dadd( 21.7895, -91.4596, -9.09592, 0.88 ) }
    dend_11 { pt3dadd( 21.3121, -92.4693, -9.31044, 0.66 ) }
    dend_11 { pt3dadd( 20.7009, -93.8084, -9.73615, 0.59 ) }
    dend_11 { pt3dadd( 20.3215, -94.6884, -10.1018, 0.88 ) }
    dend_11 { pt3dadd( 20.0089, -95.4596, -10.4758, 1.18 ) }
    dend_11 { pt3dadd( 19.7911, -96.0175, -10.7563, 0.96 ) }
    dend_11 { pt3dadd( 19.5107, -96.7549, -11.1328, 0.96 ) }
    dend_11 { pt3dadd( 19.035, -98.0933, -11.7554, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 18.8851, -98.5319, -11.9245, 0.81 ) }
    dend_11 { pt3dadd( 18.6125, -99.3848, -12.208, 0.66 ) }
    dend_11 { pt3dadd( 18.452, -100.026, -12.3394, 0.66 ) }
    dend_11 { pt3dadd( 18.3301, -100.804, -12.3847, 0.96 ) }
    dend_11 { pt3dadd( 18.3534, -101.728, -12.178, 0.88 ) }
    dend_11 { pt3dadd( 18.4927, -102.516, -11.8508, 0.88 ) }
    dend_11 { pt3dadd( 18.6438, -103.198, -11.5261, 0.37 ) }
    dend_11 { pt3dadd( 18.9702, -104.438, -10.9079, 1.03 ) }
    dend_11 { pt3dadd( 19.1326, -105.092, -10.5967, 1.03 ) }
    dend_11 { pt3dadd( 19.4173, -106.549, -9.92273, 0.44 ) }
    dend_11 { pt3dadd( 19.5526, -107.621, -9.53699, 0.44 ) }
    dend_11 { pt3dadd( 19.5814, -108.258, -9.45223, 0.74 ) }
    dend_11 { pt3dadd( 19.5629, -108.935, -9.58281, 0.74 ) }
    dend_11 { pt3dadd( 19.4998, -109.893, -10.005, 0.44 ) }
    dend_11 { pt3dadd( 19.4553, -110.665, -10.4379, 0.66 ) }
    dend_11 { pt3dadd( 19.4087, -111.782, -11.158, 0.44 ) }
    dend_11 { pt3dadd( 19.3778, -113.378, -12.2147, 0.88 ) }
    dend_11 { pt3dadd( 19.3962, -115.12, -13.3265, 0.52 ) }
    dend_11 { pt3dadd( 19.4262, -116.006, -13.8828, 0.74 ) }
    dend_11 { pt3dadd( 19.5005, -117.19, -14.6101, 1.33 ) }
    dend_11 { pt3dadd( 19.5503, -117.861, -14.9914, 1.33 ) }
    dend_11 { pt3dadd( 19.6403, -119.235, -15.6399, 0.74 ) }
    dend_11 { pt3dadd( 19.693, -120.103, -15.9405, 0.66 ) }
    dend_11 { pt3dadd( 19.7248, -121.332, -16.2355, 0.66 ) }
    dend_11 { pt3dadd( 19.6846, -122.189, -16.3957, 0.81 ) }
    dend_11 { pt3dadd( 19.556, -123.069, -16.5269, 0.59 ) }
    dend_11 { pt3dadd( 19.4198, -123.661, -16.5751, 1.18 ) }
    dend_11 { pt3dadd( 19.332, -123.938, -16.5837, 1.18 ) }
    dend_11 { pt3dadd( 18.9828, -124.915, -16.5794, 0.44 ) }
    dend_11 { pt3dadd( 18.7062, -125.76, -16.504, 0.44 ) }
    dend_11 { pt3dadd( 18.5233, -126.465, -16.4134, 1.03 ) }
    dend_11 { pt3dadd( 18.4636, -126.961, -16.3341, 1.4 ) }
    dend_11 { pt3dadd( 18.5571, -127.988, -16.0787, 0.52 ) }
    dend_11 { pt3dadd( 18.6993, -128.675, -15.8947, 0.52 ) }
    dend_11 { pt3dadd( 19.0511, -129.563, -15.6172, 0.74 ) }
    dend_11 { pt3dadd( 19.2336, -129.877, -15.4866, 0.74 ) }
    dend_11 { pt3dadd( 19.6955, -130.49, -15.1205, 0.59 ) }
    dend_11 { pt3dadd( 20.3445, -131.162, -14.5814, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.16363, -27.8286, -5.62901, 0.88 ) }
    dend_2 { pt3dadd( 10.6111, -27.789, -8.66374, 0.88 ) }
    dend_2 { pt3dadd( 11.8794, -27.7365, -9.39714, 0.88 ) }
    dend_2 { pt3dadd( 13.1432, -27.6773, -10.0023, 1.03 ) }
    dend_2 { pt3dadd( 13.9959, -27.6359, -10.3392, 1.33 ) }
    dend_2 { pt3dadd( 14.7792, -27.6041, -10.6137, 1.62 ) }
    dend_2 { pt3dadd( 15.9088, -27.5759, -10.9772, 1.84 ) }
    dend_2 { pt3dadd( 16.8711, -27.5007, -11.1593, 1.47 ) }
    dend_2 { pt3dadd( 18.0215, -27.4202, -11.5316, 1.18 ) }
    dend_2 { pt3dadd( 18.871, -27.3337, -12.1733, 0.81 ) }
    dend_2 { pt3dadd( 19.7657, -27.2081, -13.1533, 0.81 ) }
    dend_2 { pt3dadd( 20.3283, -27.1412, -13.8658, 1.11 ) }
    dend_2 { pt3dadd( 21.514, -27.0742, -15.5324, 1.33 ) }
    dend_2 { pt3dadd( 22.7555, -27.0582, -17.3727, 1.77 ) }
    dend_2 { pt3dadd( 25.5769, -27.1482, -21.634, 1.47 ) }
    dend_2 { pt3dadd( 26.4862, -27.2089, -22.9658, 1.11 ) }
    dend_2 { pt3dadd( 27.4178, -27.2851, -24.2353, 1.11 ) }
    dend_2 { pt3dadd( 28.676, -27.3917, -25.7282, 0.81 ) }
    dend_2 { pt3dadd( 29.445, -27.4661, -26.4536, 0.96 ) }
    dend_2 { pt3dadd( 30.6714, -27.5482, -27.2715, 0.88 ) }
    dend_2 { pt3dadd( 31.6828, -27.4762, -27.7725, 0.74 ) }
    dend_2 { pt3dadd( 32.4625, -27.2642, -28.1971, 0.59 ) }
    dend_2 { pt3dadd( 33.4741, -26.7809, -28.8761, 1.03 ) }
    dend_2 { pt3dadd( 34.2292, -26.3233, -29.4153, 1.55 ) }
    dend_2 { pt3dadd( 34.9245, -25.8731, -29.9228, 1.69 ) }
    dend_2 { pt3dadd( 37.0039, -24.5109, -31.5096, 1.69 ) }
    dend_2 { pt3dadd( 37.6461, -24.1084, -32.0231, 1.69 ) }
    dend_2 { pt3dadd( 39.2545, -23.1822, -33.2974, 0.88 ) }
    dend_2 { pt3dadd( 40.1655, -22.7391, -33.9705, 0.81 ) }
    dend_2 { pt3dadd( 41.254, -22.3322, -34.6598, 1.11 ) }
    dend_2 { pt3dadd( 42.6701, -21.9774, -35.4069, 1.18 ) }
    dend_2 { pt3dadd( 43.953, -21.8462, -35.9137, 0.59 ) }
    dend_2 { pt3dadd( 44.5246, -21.8651, -36.1139, 0.59 ) }
    dend_2 { pt3dadd( 45.9083, -22.1437, -36.4814, 0.96 ) }
    dend_2 { pt3dadd( 46.8929, -22.509, -36.7222, 1.18 ) }
    dend_2 { pt3dadd( 47.7257, -22.95, -36.8826, 1.18 ) }
    dend_2 { pt3dadd( 48.5697, -23.4878, -36.9738, 1.4 ) }
    dend_2 { pt3dadd( 49.5375, -24.1599, -37.0332, 1.4 ) }
    dend_2 { pt3dadd( 50.4364, -24.7624, -37.0722, 1.11 ) }
    dend_2 { pt3dadd( 51.0733, -25.1305, -37.0807, 1.11 ) }
    dend_2 { pt3dadd( 51.8623, -25.461, -37.0754, 1.03 ) }
    dend_2 { pt3dadd( 52.8999, -25.7455, -37.0473, 1.03 ) }
    dend_2 { pt3dadd( 53.8077, -25.8814, -37.0047, 1.03 ) }
    dend_2 { pt3dadd( 54.8571, -25.938, -36.9373, 0.96 ) }
    dend_2 { pt3dadd( 56.3068, -25.9037, -36.8385, 0.88 ) }
    dend_2 { pt3dadd( 57.8852, -25.7819, -36.6906, 0.88 ) }
    dend_2 { pt3dadd( 58.9324, -25.6473, -36.5693, 1.03 ) }
    dend_2 { pt3dadd( 59.7557, -25.5162, -36.4841, 1.11 ) }
    dend_2 { pt3dadd( 60.4332, -25.4044, -36.4414, 1.18 ) }
    dend_2 { pt3dadd( 61.0475, -25.3305, -36.4797, 1.18 ) }
    dend_2 { pt3dadd( 62.2857, -25.3053, -36.8132, 0.81 ) }
    dend_2 { pt3dadd( 63.1719, -25.4109, -37.2416, 0.74 ) }
    dend_2 { pt3dadd( 64.329, -25.6624, -37.9481, 1.18 ) }
    dend_2 { pt3dadd( 65.2109, -25.9006, -38.55, 1.4 ) }
    dend_2 { pt3dadd( 67.0044, -26.4232, -39.8913, 1.18 ) }
    dend_2 { pt3dadd( 68.3846, -26.8124, -40.9929, 0.88 ) }
    dend_2 { pt3dadd( 69.4172, -27.0604, -41.8864, 0.74 ) }
    dend_2 { pt3dadd( 70.464, -27.2472, -42.7794, 0.74 ) }
    dend_2 { pt3dadd( 71.4216, -27.3207, -43.5344, 1.11 ) }
    dend_2 { pt3dadd( 72.4469, -27.2859, -44.2949, 1.4 ) }
    dend_2 { pt3dadd( 73.469, -27.1899, -45.0124, 1.4 ) }
    dend_2 { pt3dadd( 74.8927, -27.0629, -46.0315, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 75.7286, -27.0243, -46.6674, 0.74 ) }
    dend_2 { pt3dadd( 76.7795, -27.0829, -47.5187, 0.66 ) }
    dend_2 { pt3dadd( 78.0289, -27.3368, -48.5857, 0.81 ) }
    dend_2 { pt3dadd( 79.2839, -27.7904, -49.6126, 0.74 ) }
    dend_2 { pt3dadd( 80.3274, -28.2805, -50.454, 1.25 ) }
    dend_2 { pt3dadd( 80.9051, -28.5784, -50.8916, 1.69 ) }
    dend_2 { pt3dadd( 81.6584, -28.9366, -51.423, 1.69 ) }
    dend_2 { pt3dadd( 82.4423, -29.2071, -51.8704, 1.4 ) }
    dend_2 { pt3dadd( 83.6579, -29.389, -52.3742, 0.88 ) }
    dend_2 { pt3dadd( 85.4295, -29.3061, -52.9227, 0.81 ) }
    dend_2 { pt3dadd( 86.2331, -29.1951, -53.127, 0.81 ) }
    dend_2 { pt3dadd( 87.3495, -29.0275, -53.3491, 0.81 ) }
    dend_2 { pt3dadd( 88.7767, -28.8228, -53.5376, 0.81 ) }
    dend_2 { pt3dadd( 89.6622, -28.7301, -53.5967, 0.81 ) }
    dend_2 { pt3dadd( 90.9039, -28.6964, -53.6176, 0.81 ) }
    dend_2 { pt3dadd( 91.7285, -28.7907, -53.574, 0.96 ) }
    dend_2 { pt3dadd( 92.9867, -29.15, -53.5485, 0.96 ) }
    dend_2 { pt3dadd( 93.8381, -29.5354, -53.6194, 1.18 ) }
    dend_2 { pt3dadd( 94.5986, -29.9715, -53.7881, 1.47 ) }
    dend_2 { pt3dadd( 95.377, -30.4579, -54.0235, 1.47 ) }
    dend_2 { pt3dadd( 96.5143, -31.1739, -54.4162, 0.74 ) }
    dend_2 { pt3dadd( 97.8422, -31.9525, -54.9046, 0.74 ) }
    dend_2 { pt3dadd( 99.4781, -32.7946, -55.5435, 0.66 ) }
    dend_2 { pt3dadd( 101.012, -33.4871, -56.1912, 0.74 ) }
    dend_2 { pt3dadd( 101.974, -33.8441, -56.6004, 0.81 ) }
    dend_2 { pt3dadd( 103.08, -34.1433, -57.0495, 0.81 ) }
    dend_2 { pt3dadd( 103.643, -34.2312, -57.2568, 1.11 ) }
    dend_2 { pt3dadd( 104.999, -34.2805, -57.7161, 1.25 ) }
    dend_2 { pt3dadd( 105.602, -34.2337, -57.9553, 1.62 ) }
    dend_2 { pt3dadd( 106.274, -34.1151, -58.3268, 1.62 ) }
    dend_2 { pt3dadd( 107.596, -33.8204, -59.2037, 0.59 ) }
    dend_2 { pt3dadd( 108.424, -33.6246, -59.8174, 0.59 ) }
    dend_2 { pt3dadd( 109.669, -33.345, -60.7722, 0.88 ) }
    dend_2 { pt3dadd( 111.34, -33.0079, -62.0653, 1.4 ) }
    dend_2 { pt3dadd( 113.024, -32.7321, -63.3216, 0.74 ) }
    dend_2 { pt3dadd( 114.014, -32.6153, -64.0271, 0.59 ) }
    dend_2 { pt3dadd( 114.852, -32.5659, -64.5626, 0.81 ) }
    dend_2 { pt3dadd( 115.589, -32.5809, -64.9107, 0.81 ) }
    dend_2 { pt3dadd( 116.283, -32.6463, -65.0818, 0.96 ) }
    dend_2 { pt3dadd( 116.988, -32.7221, -65.1371, 0.96 ) }
    dend_2 { pt3dadd( 117.826, -32.7948, -65.1531, 0.59 ) }
    dend_2 { pt3dadd( 119.136, -32.8445, -65.1986, 0.59 ) }
    dend_2 { pt3dadd( 120.405, -32.8226, -65.2437, 0.66 ) }
    dend_2 { pt3dadd( 121.148, -32.7678, -65.3327, 1.03 ) }
    dend_2 { pt3dadd( 122.368, -32.6357, -65.5506, 1.03 ) }
    dend_2 { pt3dadd( 123.599, -32.4095, -66.0777, 0.59 ) }
    dend_2 { pt3dadd( 124.222, -32.2441, -66.4643, 0.59 ) }
    dend_2 { pt3dadd( 125.048, -31.9872, -67.0837, 0.59 ) }
    dend_2 { pt3dadd( 126.309, -31.6268, -68.1178, 1.11 ) }
    dend_2 { pt3dadd( 126.873, -31.5042, -68.5877, 1.33 ) }
    dend_2 { pt3dadd( 130.032, -31.0037, -71.1057, 1.03 ) }
    dend_2 { pt3dadd( 130.599, -30.9293, -71.5183, 1.4 ) }
    dend_2 { pt3dadd( 131.717, -30.7984, -72.2365, 0.81 ) }
    dend_2 { pt3dadd( 132.84, -30.6727, -72.8453, 0.74 ) }
    dend_2 { pt3dadd( 134.255, -30.5179, -73.4306, 0.59 ) }
    dend_2 { pt3dadd( 135.19, -30.4144, -73.7203, 0.59 ) }
    dend_2 { pt3dadd( 136.675, -30.2585, -73.9644, 0.59 ) }
    dend_2 { pt3dadd( 138.437, -30.0008, -74.247, 0.88 ) }
    dend_2 { pt3dadd( 139.063, -29.8475, -74.3383, 1.25 ) }
    dend_2 { pt3dadd( 139.621, -29.6533, -74.4116, 1.55 ) }
    dend_2 { pt3dadd( 140.45, -29.3078, -74.5308, 1.55 ) }
    dend_2 { pt3dadd( 141.124, -29.0161, -74.6456, 1.33 ) }
    dend_2 { pt3dadd( 141.957, -28.653, -74.7938, 0.66 ) }
    dend_2 { pt3dadd( 143.021, -28.2103, -74.9797, 0.66 ) }
    dend_2 { pt3dadd( 143.736, -27.9419, -75.1698, 0.66 ) }
    dend_2 { pt3dadd( 145.051, -27.4663, -75.6724, 0.66 ) }
    dend_2 { pt3dadd( 145.648, -27.3206, -76.1278, 0.66 ) }
    dend_2 { pt3dadd( 146.017, -27.2637, -76.4918, 0.96 ) }
    dend_2 { pt3dadd( 146.457, -27.2259, -76.9749, 0.96 ) }
    dend_2 { pt3dadd( 147.781, -27.2095, -78.4683, 0.74 ) }
    dend_2 { pt3dadd( 148.573, -27.2351, -79.3543, 1.62 ) }
    dend_2 { pt3dadd( 151.725, -27.407, -82.7331, 0.66 ) }
    dend_2 { pt3dadd( 152.201, -27.4225, -83.2186, 0.66 ) }
    dend_2 { pt3dadd( 152.928, -27.4279, -83.8851, 1.11 ) }
    dend_2 { pt3dadd( 153.873, -27.4202, -84.6425, 1.11 ) }
    dend_2 { pt3dadd( 154.826, -27.3774, -85.2443, 0.52 ) }
    dend_2 { pt3dadd( 155.76, -27.2781, -85.6725, 0.52 ) }
    dend_2 { pt3dadd( 156.936, -27.0278, -86.0336, 1.25 ) }
    dend_2 { pt3dadd( 157.846, -26.7953, -86.3184, 0.88 ) }
    dend_2 { pt3dadd( 159.579, -26.2511, -86.8613, 0.44 ) }
    dend_2 { pt3dadd( 160.57, -25.8788, -87.1538, 0.44 ) }
    dend_2 { pt3dadd( 162.038, -25.2541, -87.5602, 0.52 ) }
    dend_2 { pt3dadd( 163.009, -24.8009, -87.8134, 0.88 ) }
    dend_2 { pt3dadd( 163.491, -24.5651, -87.9282, 1.11 ) }
    dend_2 { pt3dadd( 163.907, -24.3349, -88.0751, 1.11 ) }
    dend_2 { pt3dadd( 164.248, -24.1177, -88.2498, 1.11 ) }
    dend_2 { pt3dadd( 165.391, -23.3268, -89.1083, 0.52 ) }
    dend_2 { pt3dadd( 165.861, -23.0061, -89.6037, 0.52 ) }
    dend_2 { pt3dadd( 166.522, -22.5761, -90.3947, 0.81 ) }
    dend_2 { pt3dadd( 168.077, -21.6407, -92.3057, 0.81 ) }
    dend_2 { pt3dadd( 168.811, -21.223, -93.185, 1.11 ) }
    dend_2 { pt3dadd( 169.131, -21.0547, -93.529, 1.92 ) }
    dend_2 { pt3dadd( 170.973, -20.2023, -95.1607, 0.59 ) }
    dend_2 { pt3dadd( 171.204, -20.1136, -95.3144, 0.59 ) }
    dend_2 { pt3dadd( 172.031, -19.876, -95.6358, 0.88 ) }
    dend_2 { pt3dadd( 173.077, -19.6664, -95.8043, 0.44 ) }
    dend_2 { pt3dadd( 174.78, -19.4061, -95.984, 0.44 ) }
    dend_2 { pt3dadd( 176.118, -19.2451, -96.0868, 0.74 ) }
    dend_2 { pt3dadd( 176.876, -19.1874, -96.1702, 0.74 ) }
    dend_2 { pt3dadd( 178.021, -19.1713, -96.4811, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 178.718, -19.2146, -96.8179, 0.52 ) }
    dend_2 { pt3dadd( 179.783, -19.3488, -97.5348, 0.59 ) }
    dend_2 { pt3dadd( 180.193, -19.4017, -97.8566, 0.59 ) }
    dend_2 { pt3dadd( 181.992, -19.5646, -99.36, 0.59 ) }
    dend_2 { pt3dadd( 183.179, -19.5993, -100.349, 0.81 ) }
    dend_2 { pt3dadd( 184.297, -19.5495, -101.278, 1.4 ) }
    dend_2 { pt3dadd( 184.891, -19.4552, -101.728, 1.55 ) }
    dend_2 { pt3dadd( 186.251, -19.0188, -102.575, 0.44 ) }
    dend_2 { pt3dadd( 186.825, -18.7305, -102.831, 0.88 ) }
    dend_2 { pt3dadd( 187.519, -18.2921, -102.987, 0.88 ) }
    dend_2 { pt3dadd( 188.272, -17.8099, -103.135, 0.59 ) }
    dend_2 { pt3dadd( 189.438, -17.1134, -103.381, 0.59 ) }
    dend_2 { pt3dadd( 190.233, -16.7264, -103.656, 0.81 ) }
    dend_2 { pt3dadd( 191.148, -16.3917, -104.074, 0.81 ) }
    dend_2 { pt3dadd( 192.373, -16.0317, -104.775, 0.52 ) }
    dend_2 { pt3dadd( 193.777, -15.6612, -105.746, 0.74 ) }
    dend_2 { pt3dadd( 194.252, -15.5314, -106.223, 0.74 ) }
    dend_2 { pt3dadd( 195.317, -15.1421, -107.766, 0.37 ) }
    dend_2 { pt3dadd( 195.769, -14.8997, -108.621, 0.37 ) }
    dend_2 { pt3dadd( 196.373, -14.4393, -110.022, 0.37 ) }
    dend_2 { pt3dadd( 196.831, -13.9523, -111.27, 0.59 ) }
    dend_2 { pt3dadd( 198.05, -12.4425, -114.69, 0.88 ) }
    dend_2 { pt3dadd( 198.626, -11.7181, -116.242, 0.52 ) }
    dend_2 { pt3dadd( 198.848, -11.484, -116.788, 0.52 ) }
    dend_2 { pt3dadd( 199.375, -11.0826, -117.976, 0.52 ) }
    dend_2 { pt3dadd( 199.835, -10.8247, -118.842, 0.81 ) }
    dend_2 { pt3dadd( 200.47, -10.5495, -119.827, 0.59 ) }
    dend_2 { pt3dadd( 201.042, -10.3598, -120.568, 0.59 ) }
    dend_2 { pt3dadd( 202.963, -9.87589, -122.938, 1.18 ) }
    dend_2 { pt3dadd( 205.244, -9.41498, -125.914, 0.74 ) }
    dend_2 { pt3dadd( 205.798, -9.32635, -126.703, 0.74 ) }
    dend_2 { pt3dadd( 206.308, -9.25591, -127.503, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -57.6119, 131.703, -39.9358, 0.29 ) }
    dend_87 { pt3dadd( -58.8787, 131.554, -40.3551, 0.29 ) }
    dend_87 { pt3dadd( -59.8977, 131.585, -40.7197, 0.29 ) }
    dend_87 { pt3dadd( -60.4123, 131.74, -40.9939, 0.59 ) }
    dend_87 { pt3dadd( -60.9872, 132.055, -41.3604, 0.59 ) }
    dend_87 { pt3dadd( -61.4537, 132.378, -41.6651, 0.59 ) }
    dend_87 { pt3dadd( -61.9546, 132.772, -41.9788, 0.44 ) }
    dend_87 { pt3dadd( -62.3358, 133.23, -42.2452, 0.59 ) }
    dend_87 { pt3dadd( -63.0093, 134.158, -42.8332, 0.37 ) }
    dend_87 { pt3dadd( -63.3346, 134.604, -43.1504, 0.29 ) }
    dend_87 { pt3dadd( -63.6713, 135.01, -43.4631, 0.59 ) }
    dend_87 { pt3dadd( -64.0441, 135.422, -43.7919, 0.59 ) }
    dend_87 { pt3dadd( -64.8603, 136.288, -44.494, 0.29 ) }
    dend_87 { pt3dadd( -65.6122, 137.121, -45.177, 0.29 ) }
    dend_87 { pt3dadd( -65.9559, 137.523, -45.528, 0.29 ) }
    dend_87 { pt3dadd( -66.5958, 138.3, -46.3183, 0.29 ) }
    dend_87 { pt3dadd( -66.9877, 138.789, -46.9146, 0.29 ) }
    dend_87 { pt3dadd( -67.3929, 139.303, -47.6115, 0.52 ) }
    dend_87 { pt3dadd( -67.7563, 139.781, -48.2791, 0.66 ) }
    dend_87 { pt3dadd( -68.2817, 140.54, -49.3081, 0.44 ) }
    dend_87 { pt3dadd( -68.6837, 141.159, -50.2134, 0.59 ) }
    dend_87 { pt3dadd( -69.156, 141.883, -51.4774, 0.96 ) }
    dend_87 { pt3dadd( -69.3474, 142.101, -51.9526, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -57.6119, 131.703, -39.9358, 0.66 ) }
    dend_86 { pt3dadd( -56.2814, 131.801, -40.2077, 0.66 ) }
    dend_86 { pt3dadd( -55.2183, 131.879, -40.4248, 0.29 ) }
    dend_86 { pt3dadd( -54.4466, 131.936, -40.5825, 0.44 ) }
    dend_86 { pt3dadd( -53.4953, 132.006, -40.7768, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -76.7307, 138.932, -33.0521, 0.29 ) }
    dend_82 { pt3dadd( -77.3042, 139.603, -33.7098, 0.29 ) }
    dend_82 { pt3dadd( -78.0361, 140.377, -34.5513, 0.59 ) }
    dend_82 { pt3dadd( -78.5152, 140.889, -35.1145, 0.44 ) }
    dend_82 { pt3dadd( -79.2062, 141.682, -35.9395, 0.88 ) }
    dend_82 { pt3dadd( -79.5124, 142.087, -36.3344, 1.03 ) }
    dend_82 { pt3dadd( -80.1949, 143.119, -37.2726, 0.52 ) }
    dend_82 { pt3dadd( -80.4144, 143.497, -37.609, 0.44 ) }
    dend_82 { pt3dadd( -80.8433, 144.314, -38.2531, 0.66 ) }
    dend_82 { pt3dadd( -81.1664, 144.982, -38.7382, 0.88 ) }
    dend_82 { pt3dadd( -81.7827, 146.287, -39.5872, 0.59 ) }
    dend_82 { pt3dadd( -82.1953, 147.149, -40.1063, 0.74 ) }
    dend_82 { pt3dadd( -82.6195, 148.023, -40.5912, 0.74 ) }
    dend_82 { pt3dadd( -83.221, 149.174, -41.2263, 0.37 ) }
    dend_82 { pt3dadd( -83.5047, 149.656, -41.4951, 0.37 ) }
    dend_82 { pt3dadd( -84.1874, 150.669, -42.0544, 0.66 ) }
    dend_82 { pt3dadd( -84.6747, 151.268, -42.3778, 0.66 ) }
    dend_82 { pt3dadd( -85.1962, 151.796, -42.6642, 0.52 ) }
    dend_82 { pt3dadd( -85.9641, 152.437, -43.0064, 0.88 ) }
    dend_82 { pt3dadd( -86.4963, 152.807, -43.1951, 0.88 ) }
    dend_82 { pt3dadd( -87.2901, 153.262, -43.4009, 0.52 ) }
    dend_82 { pt3dadd( -88.2552, 153.738, -43.5784, 0.52 ) }
    dend_82 { pt3dadd( -89.4585, 154.308, -43.7427, 0.88 ) }
    dend_82 { pt3dadd( -90.238, 154.691, -43.8252, 0.88 ) }
    dend_82 { pt3dadd( -91.2093, 155.182, -43.8997, 0.52 ) }
    dend_82 { pt3dadd( -92.0405, 155.617, -43.954, 0.44 ) }
    dend_82 { pt3dadd( -92.9857, 156.123, -44.0179, 0.37 ) }
    dend_82 { pt3dadd( -93.9116, 156.666, -44.0768, 0.37 ) }
    dend_82 { pt3dadd( -94.8333, 157.265, -44.1438, 0.29 ) }
    dend_82 { pt3dadd( -96.3313, 158.326, -44.2781, 0.29 ) }
    dend_82 { pt3dadd( -97.0301, 158.838, -44.3489, 0.29 ) }
    dend_82 { pt3dadd( -97.8348, 159.412, -44.4325, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -76.7307, 138.932, -33.0521, 0.29 ) }
    dend_81 { pt3dadd( -77.6127, 138.399, -31.9327, 0.29 ) }
    dend_81 { pt3dadd( -78.0928, 138.109, -31.3235, 0.29 ) }
    dend_81 { pt3dadd( -78.4329, 137.903, -30.8919, 0.22 ) }
    dend_81 { pt3dadd( -78.8668, 137.641, -30.3412, 0.22 ) }
    dend_81 { pt3dadd( -79.3496, 137.349, -29.7285, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 149.628, 57.2643, 89.2967, 0.29 ) }
    dend_75 { pt3dadd( 151.437, 67.5317, 96.0759, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 153.764, 76.8544, 104.027, 0.29 ) }
    dend_75 { pt3dadd( 157.362, 85.5718, 112.209, 0.29 ) }
    dend_75 { pt3dadd( 159.461, 93.1508, 121.955, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 149.628, 57.2643, 89.2967, 0.29 ) }
    dend_72 { pt3dadd( 155.444, 56.455, 92.537, 0.29 ) }
    dend_72 { pt3dadd( 161.175, 56.8831, 96.0057, 0.29 ) }
    dend_72 { pt3dadd( 166.385, 58.4472, 99.9344, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 87.4462, 45.5399, 2.94031, 0.37 ) }
    dend_68 { pt3dadd( 87.5907, 46.1669, 3.0282, 0.37 ) }
    dend_68 { pt3dadd( 87.7658, 47.1048, 3.19111, 0.37 ) }
    dend_68 { pt3dadd( 87.8927, 47.7842, 3.30913, 0.22 ) }
    dend_68 { pt3dadd( 88.1593, 49.2127, 3.55725, 0.22 ) }
    dend_68 { pt3dadd( 88.3626, 50.3014, 3.74637, 0.66 ) }
    dend_68 { pt3dadd( 88.6074, 51.6126, 3.97412, 1.11 ) }
    dend_68 { pt3dadd( 88.6533, 51.9425, 4.04815, 1.11 ) }
    dend_68 { pt3dadd( 90.6434, 59.9228, 4.48796, 1.11 ) }
    dend_68 { pt3dadd( 93.1048, 67.777, 4.87239, 1.11 ) }
    dend_68 { pt3dadd( 95.9469, 75.4432, 6.04866, 1.11 ) }
    dend_68 { pt3dadd( 98.6425, 82.9866, 8.14298, 1.11 ) }
    dend_68 { pt3dadd( 102.446, 90.2816, 8.95262, 1.11 ) }
    dend_68 { pt3dadd( 106.375, 97.4821, 10.0428, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 87.4462, 45.5399, 2.94031, 0.44 ) }
    dend_59 { pt3dadd( 88.3931, 45.7954, 3.11149, 0.44 ) }
    dend_59 { pt3dadd( 89.4056, 46.0226, 3.31389, 0.44 ) }
    dend_59 { pt3dadd( 90.4802, 46.256, 3.61098, 0.74 ) }
    dend_59 { pt3dadd( 91.13, 46.3936, 3.81933, 1.03 ) }
    dend_59 { pt3dadd( 91.7358, 46.5214, 4.03497, 1.03 ) }
    dend_59 { pt3dadd( 92.217, 46.6145, 4.19055, 1.03 ) }
    dend_59 { pt3dadd( 93.0426, 46.7493, 4.37702, 0.66 ) }
    dend_59 { pt3dadd( 94.1997, 46.9437, 4.5076, 0.66 ) }
    dend_59 { pt3dadd( 94.6178, 47.0318, 4.48554, 0.81 ) }
    dend_59 { pt3dadd( 95.2644, 47.2165, 4.36466, 0.44 ) }
    dend_59 { pt3dadd( 96.5966, 47.7005, 3.97834, 0.44 ) }
    dend_59 { pt3dadd( 98.1919, 48.3946, 3.41027, 0.37 ) }
    dend_59 { pt3dadd( 98.7565, 48.6638, 3.17039, 0.37 ) }
    dend_59 { pt3dadd( 99.6329, 49.0948, 2.76699, 0.37 ) }
    dend_59 { pt3dadd( 100.682, 49.6432, 2.3034, 0.66 ) }
    dend_59 { pt3dadd( 101.29, 49.9868, 2.0606, 0.66 ) }
    dend_59 { pt3dadd( 102.127, 50.4985, 1.82522, 0.37 ) }
    dend_59 { pt3dadd( 102.619, 50.7991, 1.74761, 0.37 ) }
    dend_59 { pt3dadd( 103.243, 51.1726, 1.66535, 0.59 ) }
    dend_59 { pt3dadd( 103.799, 51.5058, 1.57493, 0.59 ) }
    dend_59 { pt3dadd( 104.353, 51.8066, 1.39687, 0.44 ) }
    dend_59 { pt3dadd( 105.301, 52.2339, 1.04967, 0.66 ) }
    dend_59 { pt3dadd( 105.474, 52.2983, 0.986011, 0.96 ) }
    dend_59 { pt3dadd( 106.132, 52.4851, 0.779697, 0.96 ) }
    dend_59 { pt3dadd( 107.09, 52.6657, 0.521635, 1.11 ) }
    dend_59 { pt3dadd( 109.283, 52.957, 0.0598982, 0.44 ) }
    dend_59 { pt3dadd( 110.502, 53.0862, -0.130937, 0.44 ) }
    dend_59 { pt3dadd( 111.445, 53.1819, -0.230733, 0.37 ) }
    dend_59 { pt3dadd( 112.604, 53.313, -0.348421, 0.37 ) }
    dend_59 { pt3dadd( 113.307, 53.4133, -0.406444, 0.29 ) }
    dend_59 { pt3dadd( 114.277, 53.6262, -0.481872, 0.22 ) }
    dend_59 { pt3dadd( 114.94, 53.8931, -0.594985, 0.59 ) }
    dend_59 { pt3dadd( 115.299, 54.1348, -0.749271, 0.59 ) }
    dend_59 { pt3dadd( 116.369, 54.9157, -1.42491, 0.29 ) }
    dend_59 { pt3dadd( 116.827, 55.2451, -1.74221, 0.37 ) }
    dend_59 { pt3dadd( 117.369, 55.6028, -2.11095, 0.52 ) }
    dend_59 { pt3dadd( 117.96, 55.8951, -2.47573, 0.74 ) }
    dend_59 { pt3dadd( 118.807, 56.1615, -3.0456, 0.96 ) }
    dend_59 { pt3dadd( 120.345, 56.4753, -4.2266, 0.29 ) }
    dend_59 { pt3dadd( 120.95, 56.5708, -4.76868, 0.52 ) }
    dend_59 { pt3dadd( 121.226, 56.6119, -5.06202, 0.81 ) }
    dend_59 { pt3dadd( 122.153, 56.7834, -6.20227, 1.11 ) }
    dend_59 { pt3dadd( 123.868, 57.1719, -8.59346, 0.81 ) }
    dend_59 { pt3dadd( 124.627, 57.4063, -9.77572, 0.96 ) }
    dend_59 { pt3dadd( 125.439, 57.7546, -11.1543, 0.66 ) }
    dend_59 { pt3dadd( 126.046, 58.0657, -12.1979, 0.52 ) }
    dend_59 { pt3dadd( 126.644, 58.4279, -13.1394, 0.52 ) }
    dend_59 { pt3dadd( 126.89, 58.6106, -13.4441, 0.74 ) }
    dend_59 { pt3dadd( 127.487, 59.0169, -13.804, 0.74 ) }
    dend_59 { pt3dadd( 127.872, 59.2248, -13.9282, 0.96 ) }
    dend_59 { pt3dadd( 128.467, 59.461, -14.0475, 0.96 ) }
    dend_59 { pt3dadd( 129.451, 59.7704, -14.2978, 0.74 ) }
    dend_59 { pt3dadd( 130.433, 60.0681, -14.6319, 0.44 ) }
    dend_59 { pt3dadd( 131.537, 60.4408, -15.2022, 0.44 ) }
    dend_59 { pt3dadd( 131.965, 60.6129, -15.4994, 0.96 ) }
    dend_59 { pt3dadd( 132.762, 60.9947, -16.2553, 1.18 ) }
    dend_59 { pt3dadd( 133.901, 61.64, -17.6293, 0.66 ) }
    dend_59 { pt3dadd( 134.325, 61.9125, -18.2569, 0.66 ) }
    dend_59 { pt3dadd( 135.111, 62.4514, -19.6074, 0.59 ) }
    dend_59 { pt3dadd( 135.401, 62.6762, -20.1206, 0.52 ) }
    dend_59 { pt3dadd( 136.205, 63.3259, -21.4433, 0.52 ) }
    dend_59 { pt3dadd( 136.427, 63.5353, -21.79, 0.96 ) }
    dend_59 { pt3dadd( 136.887, 64.002, -22.4317, 0.96 ) }
    dend_59 { pt3dadd( 137.741, 64.9357, -23.5229, 0.59 ) }
    dend_59 { pt3dadd( 138.459, 65.8235, -24.3617, 0.59 ) }
    dend_59 { pt3dadd( 138.909, 66.4224, -24.865, 0.88 ) }
    dend_59 { pt3dadd( 139.547, 67.3383, -25.5049, 0.74 ) }
    dend_59 { pt3dadd( 140.106, 68.0852, -25.9787, 0.74 ) }
    dend_59 { pt3dadd( 140.752, 68.8579, -26.384, 0.88 ) }
    dend_59 { pt3dadd( 141.159, 69.2352, -26.5598, 0.88 ) }
    dend_59 { pt3dadd( 141.936, 69.7375, -26.8503, 0.37 ) }
    dend_59 { pt3dadd( 142.761, 70.145, -27.1406, 0.37 ) }
    dend_59 { pt3dadd( 144.066, 70.6387, -27.5702, 0.37 ) }
    dend_59 { pt3dadd( 144.988, 70.9329, -27.9001, 0.37 ) }
    dend_59 { pt3dadd( 146.072, 71.2378, -28.3266, 0.37 ) }
    dend_59 { pt3dadd( 146.728, 71.4365, -28.5959, 0.59 ) }
    dend_59 { pt3dadd( 147.541, 71.7128, -28.9318, 0.74 ) }
    dend_59 { pt3dadd( 148.089, 71.926, -29.1745, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 149.13, 72.4002, -29.6954, 0.44 ) }
    dend_59 { pt3dadd( 149.682, 72.6601, -29.9637, 0.37 ) }
    dend_59 { pt3dadd( 151.278, 73.3563, -30.5546, 0.37 ) }
    dend_59 { pt3dadd( 152.027, 73.6308, -30.7564, 0.74 ) }
    dend_59 { pt3dadd( 152.421, 73.7461, -30.8293, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 109.068, 93.4193, 17.2698, 0.29 ) }
    dend_57 { pt3dadd( 115.769, 101.749, 21.5505, 0.29 ) }
    dend_57 { pt3dadd( 122.655, 110.758, 23.4857, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 109.068, 93.4193, 17.2698, 0.29 ) }
    dend_56 { pt3dadd( 115.684, 104.127, 20.6283, 0.29 ) }
    dend_56 { pt3dadd( 122.331, 114.276, 25.4517, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.7687, -113.052, 8.77637, 0.29 ) }
    dend_37 { pt3dadd( -13.9408, -124.519, 5.632, 0.29 ) }
    dend_37 { pt3dadd( -12.47, -136.557, 4.36105, 0.29 ) }
    dend_37 { pt3dadd( -11.7839, -148.369, 1.37364, 0.29 ) }
    dend_37 { pt3dadd( -12.4181, -160.475, 0.112775, 0.29 ) }
    dend_37 { pt3dadd( -14.1344, -172.492, -1.01932, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -16.7687, -113.052, 8.77637, 0.29 ) }
    dend_36 { pt3dadd( -21.8636, -123.558, 3.50843, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.715644, -85.8269, 7.37836, 0.37 ) }
    dend_24 { pt3dadd( -0.52154, -86.9455, 6.67755, 0.37 ) }
    dend_24 { pt3dadd( -1.24471, -87.5322, 6.35738, 0.37 ) }
    dend_24 { pt3dadd( -1.94382, -88.0363, 6.09481, 0.44 ) }
    dend_24 { pt3dadd( -2.77102, -88.5792, 5.83416, 0.74 ) }
    dend_24 { pt3dadd( -3.58528, -89.0751, 5.62236, 0.59 ) }
    dend_24 { pt3dadd( -4.42151, -89.5328, 5.45398, 0.59 ) }
    dend_24 { pt3dadd( -4.90517, -89.711, 5.43146, 0.74 ) }
    dend_24 { pt3dadd( -5.69175, -89.8916, 5.46163, 0.88 ) }
    dend_24 { pt3dadd( -6.17676, -89.9531, 5.52203, 1.18 ) }
    dend_24 { pt3dadd( -6.65893, -89.9729, 5.61296, 0.59 ) }
    dend_24 { pt3dadd( -7.38737, -89.9632, 5.77047, 0.44 ) }
    dend_24 { pt3dadd( -8.11025, -89.9412, 5.92311, 0.52 ) }
    dend_24 { pt3dadd( -8.4474, -89.9433, 5.98466, 0.74 ) }
    dend_24 { pt3dadd( -9.02362, -90.0196, 6.09034, 0.74 ) }
    dend_24 { pt3dadd( -9.44427, -90.1507, 6.14631, 0.59 ) }
    dend_24 { pt3dadd( -9.87734, -90.3777, 6.1877, 0.59 ) }
    dend_24 { pt3dadd( -10.4451, -90.8118, 6.22878, 0.59 ) }
    dend_24 { pt3dadd( -11.0419, -91.4175, 6.27559, 0.44 ) }
    dend_24 { pt3dadd( -11.7104, -92.2285, 6.34518, 0.37 ) }
    dend_24 { pt3dadd( -12.0887, -92.7767, 6.39684, 1.03 ) }
    dend_24 { pt3dadd( -12.3384, -93.1934, 6.43214, 1.03 ) }
    dend_24 { pt3dadd( -12.5358, -93.5775, 6.46139, 0.96 ) }
    dend_24 { pt3dadd( -12.8645, -94.3783, 6.51928, 0.66 ) }
    dend_24 { pt3dadd( -13.1108, -95.1017, 6.56438, 0.66 ) }
    dend_24 { pt3dadd( -13.3534, -95.9304, 6.59102, 0.88 ) }
    dend_24 { pt3dadd( -13.4814, -96.4407, 6.59841, 1.03 ) }
    dend_24 { pt3dadd( -13.6352, -97.1671, 6.5867, 0.88 ) }
    dend_24 { pt3dadd( -13.8054, -98.1031, 6.5418, 0.52 ) }
    dend_24 { pt3dadd( -13.9217, -98.8356, 6.48342, 0.52 ) }
    dend_24 { pt3dadd( -14.0064, -99.3928, 6.42182, 0.96 ) }
    dend_24 { pt3dadd( -14.0668, -99.756, 6.37512, 0.96 ) }
    dend_24 { pt3dadd( -14.2585, -100.647, 6.25005, 0.59 ) }
    dend_24 { pt3dadd( -14.4593, -101.353, 6.14922, 0.66 ) }
    dend_24 { pt3dadd( -14.6604, -101.878, 6.07572, 0.81 ) }
    dend_24 { pt3dadd( -14.9553, -102.514, 5.98128, 0.81 ) }
    dend_24 { pt3dadd( -15.1502, -102.868, 5.92562, 0.81 ) }
    dend_24 { pt3dadd( -15.5406, -103.511, 5.7773, 0.44 ) }
    dend_24 { pt3dadd( -15.7524, -103.847, 5.67558, 0.81 ) }
    dend_24 { pt3dadd( -16.0414, -104.333, 5.48978, 0.81 ) }
    dend_24 { pt3dadd( -16.3998, -105.032, 5.18485, 0.52 ) }
    dend_24 { pt3dadd( -16.6244, -105.603, 4.90815, 0.52 ) }
    dend_24 { pt3dadd( -16.9193, -106.653, 4.36584, 0.74 ) }
    dend_24 { pt3dadd( -17.021, -107.169, 4.09602, 1.11 ) }
    dend_24 { pt3dadd( -17.1029, -107.645, 3.86439, 1.11 ) }
    dend_24 { pt3dadd( -17.2058, -108.249, 3.60811, 0.96 ) }
    dend_24 { pt3dadd( -17.3454, -108.925, 3.37151, 0.59 ) }
    dend_24 { pt3dadd( -17.5722, -109.756, 3.14561, 0.44 ) }
    dend_24 { pt3dadd( -17.9323, -110.668, 2.98826, 0.44 ) }
    dend_24 { pt3dadd( -18.2761, -111.348, 2.90939, 0.44 ) }
    dend_24 { pt3dadd( -18.6384, -111.981, 2.871, 0.74 ) }
    dend_24 { pt3dadd( -18.908, -112.445, 2.85479, 0.74 ) }
    dend_24 { pt3dadd( -19.1644, -112.894, 2.85392, 0.74 ) }
    dend_24 { pt3dadd( -19.6053, -113.698, 2.87569, 0.66 ) }
    dend_24 { pt3dadd( -19.9175, -114.298, 2.90489, 0.44 ) }
    dend_24 { pt3dadd( -20.3105, -115.073, 2.94753, 0.44 ) }
    dend_24 { pt3dadd( -20.9038, -116.151, 3.05441, 0.44 ) }
    dend_24 { pt3dadd( -21.2249, -116.647, 3.14266, 0.88 ) }
    dend_24 { pt3dadd( -21.5846, -117.106, 3.27353, 1.18 ) }
    dend_24 { pt3dadd( -21.8551, -117.399, 3.39632, 1.18 ) }
    dend_24 { pt3dadd( -22.1888, -117.713, 3.56342, 1.03 ) }
    dend_24 { pt3dadd( -23.1322, -118.473, 4.04863, 0.66 ) }
    dend_24 { pt3dadd( -23.9938, -119.072, 4.50793, 0.66 ) }
    dend_24 { pt3dadd( -24.724, -119.562, 4.90071, 1.25 ) }
    dend_24 { pt3dadd( -25.1112, -119.826, 5.11103, 1.55 ) }
    dend_24 { pt3dadd( -25.5794, -120.152, 5.36516, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.715644, -85.8269, 7.37836, 0.74 ) }
    dend_19 { pt3dadd( -0.183996, -87.0911, 6.64622, 0.74 ) }
    dend_19 { pt3dadd( -1.23948, -88.5409, 5.78988, 0.74 ) }
    dend_19 { pt3dadd( -1.78962, -89.4091, 5.36556, 0.74 ) }
    dend_19 { pt3dadd( -2.32029, -90.3834, 4.9558, 0.81 ) }
    dend_19 { pt3dadd( -3.31517, -92.6238, 4.18292, 0.52 ) }
    dend_19 { pt3dadd( -3.93725, -94.4118, 3.67134, 0.74 ) }
    dend_19 { pt3dadd( -4.16384, -95.3659, 3.4632, 0.74 ) }
    dend_19 { pt3dadd( -4.07896, -97.4948, 3.28915, 0.74 ) }
    dend_19 { pt3dadd( -3.70341, -98.5586, 3.30239, 0.81 ) }
    dend_19 { pt3dadd( -2.89325, -99.854, 3.42695, 0.66 ) }
    dend_19 { pt3dadd( -2.37455, -100.496, 3.5284, 1.11 ) }
    dend_19 { pt3dadd( -1.83717, -101.122, 3.60441, 1.11 ) }
    dend_19 { pt3dadd( -1.17482, -101.92, 3.61462, 0.81 ) }
    dend_19 { pt3dadd( -0.386961, -103.001, 3.46546, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 0.297951, -104.053, 3.26576, 0.96 ) }
    dend_19 { pt3dadd( 0.891064, -105.033, 3.0594, 0.88 ) }
    dend_19 { pt3dadd( 1.59626, -106.237, 2.82205, 0.96 ) }
    dend_19 { pt3dadd( 2.07557, -107.133, 2.63933, 1.11 ) }
    dend_19 { pt3dadd( 2.58005, -108.249, 2.38239, 1.11 ) }
    dend_19 { pt3dadd( 2.9618, -109.293, 2.1166, 0.74 ) }
    dend_19 { pt3dadd( 3.40457, -110.918, 1.69507, 0.66 ) }
    dend_19 { pt3dadd( 3.57718, -111.766, 1.47881, 0.66 ) }
    dend_19 { pt3dadd( 3.83641, -113.727, 1.0333, 0.66 ) }
    dend_19 { pt3dadd( 3.92994, -115.781, 0.632298, 0.59 ) }
    dend_19 { pt3dadd( 3.87625, -116.968, 0.423706, 0.96 ) }
    dend_19 { pt3dadd( 3.68933, -118.443, 0.187209, 1.18 ) }
    dend_19 { pt3dadd( 3.47125, -119.541, 0.0453875, 1.03 ) }
    dend_19 { pt3dadd( 3.17179, -120.828, -0.0849796, 0.88 ) }
    dend_19 { pt3dadd( 2.80226, -122.499, -0.192169, 0.74 ) }
    dend_19 { pt3dadd( 2.57667, -123.953, -0.17056, 0.59 ) }
    dend_19 { pt3dadd( 2.44212, -125.183, -0.0754738, 0.59 ) }
    dend_19 { pt3dadd( 2.35291, -126.204, 0.0880284, 1.4 ) }
    dend_19 { pt3dadd( 2.27734, -126.956, 0.27757, 1.4 ) }
    dend_19 { pt3dadd( 2.11798, -128.876, 0.934884, 0.88 ) }
    dend_19 { pt3dadd( 2.04097, -131.13, 1.97056, 0.66 ) }
    dend_19 { pt3dadd( 2.02521, -132.074, 2.47864, 0.88 ) }
    dend_19 { pt3dadd( 2.00524, -133.273, 3.16783, 0.88 ) }
    dend_19 { pt3dadd( 1.9429, -135.139, 4.25945, 0.59 ) }
    dend_19 { pt3dadd( 1.84995, -136.329, 4.95016, 0.81 ) }
    dend_19 { pt3dadd( 1.58775, -138.295, 6.04519, 0.81 ) }
    dend_19 { pt3dadd( 1.40538, -139.309, 6.51256, 1.11 ) }
    dend_19 { pt3dadd( 1.25258, -140.143, 6.84, 1.11 ) }
    dend_19 { pt3dadd( 1.03914, -141.344, 7.1858, 0.52 ) }
    dend_19 { pt3dadd( 0.866295, -142.482, 7.41986, 0.74 ) }
    dend_19 { pt3dadd( 0.71439, -143.498, 7.56591, 1.03 ) }
    dend_19 { pt3dadd( 0.625087, -144.349, 7.61819, 1.25 ) }
    dend_19 { pt3dadd( 0.629299, -145.189, 7.69931, 1.33 ) }
    dend_19 { pt3dadd( 0.810719, -146.57, 7.98055, 1.03 ) }
    dend_19 { pt3dadd( 1.18396, -147.862, 8.34909, 0.74 ) }
    dend_19 { pt3dadd( 1.6474, -148.912, 8.70349, 0.44 ) }
    dend_19 { pt3dadd( 2.20979, -149.866, 9.06235, 0.29 ) }
    dend_19 { pt3dadd( 3.22078, -151.179, 9.61126, 0.29 ) }
    dend_19 { pt3dadd( 4.63525, -152.623, 10.2882, 0.29 ) }
    dend_19 { pt3dadd( 5.46977, -153.271, 10.6276, 0.29 ) }
    dend_19 { pt3dadd( 6.25293, -153.728, 10.8616, 0.88 ) }
    dend_19 { pt3dadd( 6.90457, -154.054, 11.0222, 0.88 ) }
    dend_19 { pt3dadd( 7.97961, -154.555, 11.2432, 0.52 ) }
    dend_19 { pt3dadd( 8.4627, -154.781, 11.2875, 0.52 ) }
    dend_19 { pt3dadd( 9.33305, -155.231, 11.348, 0.52 ) }
    dend_19 { pt3dadd( 10.0116, -155.721, 11.4663, 0.52 ) }
    dend_19 { pt3dadd( 10.8872, -156.63, 11.617, 0.52 ) }
    dend_19 { pt3dadd( 11.2918, -157.209, 11.6654, 0.88 ) }
    dend_19 { pt3dadd( 11.7082, -157.926, 11.6636, 0.88 ) }
    dend_19 { pt3dadd( 12.2007, -158.806, 11.5639, 1.11 ) }
    dend_19 { pt3dadd( 12.7142, -159.627, 11.4193, 0.66 ) }
    dend_19 { pt3dadd( 13.7155, -160.937, 11.0628, 0.66 ) }
    dend_19 { pt3dadd( 14.2109, -161.409, 10.8894, 0.66 ) }
    dend_19 { pt3dadd( 15.1059, -162.081, 10.6233, 0.66 ) }
    dend_19 { pt3dadd( 15.8432, -162.561, 10.4388, 0.52 ) }
    dend_19 { pt3dadd( 17.0946, -163.373, 10.107, 0.66 ) }
    dend_19 { pt3dadd( 17.5056, -163.64, 10.0417, 0.66 ) }
    dend_19 { pt3dadd( 18.4391, -164.235, 10.0602, 0.44 ) }
    dend_19 { pt3dadd( 19.2384, -164.753, 10.1992, 0.44 ) }
    dend_19 { pt3dadd( 20.381, -165.536, 10.5597, 0.52 ) }
    dend_19 { pt3dadd( 21.7804, -166.54, 11.1937, 0.66 ) }
    dend_19 { pt3dadd( 22.9968, -167.457, 11.8372, 0.44 ) }
    dend_19 { pt3dadd( 24.3156, -168.457, 12.6026, 0.81 ) }
    dend_19 { pt3dadd( 25.5396, -169.387, 13.2861, 0.52 ) }
    dend_19 { pt3dadd( 26.3373, -169.998, 13.6874, 0.74 ) }
    dend_19 { pt3dadd( 27.2919, -170.744, 14.0871, 0.29 ) }
    dend_19 { pt3dadd( 27.783, -171.153, 14.2102, 0.52 ) }
    dend_19 { pt3dadd( 28.4739, -171.796, 14.1741, 0.59 ) }
    dend_19 { pt3dadd( 29.7639, -173.083, 13.9634, 0.37 ) }
    dend_19 { pt3dadd( 30.676, -174.026, 13.7113, 0.66 ) }
    dend_19 { pt3dadd( 31.1895, -174.559, 13.5377, 1.03 ) }
    dend_19 { pt3dadd( 32.0051, -175.407, 13.2242, 1.03 ) }
    dend_19 { pt3dadd( 32.9157, -176.346, 12.9258, 0.74 ) }
    dend_19 { pt3dadd( 34.4192, -177.849, 12.6016, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 20.3445, -131.162, -14.5814, 0.44 ) }
    dend_13 { pt3dadd( 20.3913, -131.965, -14.4483, 0.44 ) }
    dend_13 { pt3dadd( 20.419, -132.525, -14.3531, 0.81 ) }
    dend_13 { pt3dadd( 20.4332, -132.956, -14.2782, 1.18 ) }
    dend_13 { pt3dadd( 20.4459, -133.533, -14.1788, 0.74 ) }
    dend_13 { pt3dadd( 20.4565, -134.133, -14.0781, 0.44 ) }
    dend_13 { pt3dadd( 20.4638, -134.661, -13.9911, 0.96 ) }
    dend_13 { pt3dadd( 20.4679, -135.209, -13.9037, 0.96 ) }
    dend_13 { pt3dadd( 20.4673, -135.73, -13.8229, 1.18 ) }
    dend_13 { pt3dadd( 20.4367, -136.509, -13.6949, 0.74 ) }
    dend_13 { pt3dadd( 20.3566, -137.219, -13.5835, 0.66 ) }
    dend_13 { pt3dadd( 20.244, -137.8, -13.4973, 0.66 ) }
    dend_13 { pt3dadd( 20.0517, -138.533, -13.4109, 0.66 ) }
    dend_13 { pt3dadd( 19.9365, -138.897, -13.3803, 1.03 ) }
    dend_13 { pt3dadd( 19.7529, -139.404, -13.3541, 0.81 ) }
    dend_13 { pt3dadd( 19.4468, -140.216, -13.3778, 0.52 ) }
    dend_13 { pt3dadd( 19.2981, -140.703, -13.4128, 0.44 ) }
    dend_13 { pt3dadd( 19.1884, -141.312, -13.4638, 0.37 ) }
    dend_13 { pt3dadd( 19.1726, -141.656, -13.4871, 0.66 ) }
    dend_13 { pt3dadd( 19.1868, -142.031, -13.4903, 0.66 ) }
    dend_13 { pt3dadd( 19.279, -143.007, -13.4798, 0.44 ) }
    dend_13 { pt3dadd( 19.389, -143.984, -13.4255, 0.44 ) }
    dend_13 { pt3dadd( 19.4537, -144.764, -13.349, 0.66 ) }
    dend_13 { pt3dadd( 19.472, -145.452, -13.2502, 0.81 ) }
    dend_13 { pt3dadd( 19.4254, -146.204, -13.1271, 0.96 ) }
    dend_13 { pt3dadd( 19.275, -147.002, -12.9659, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 19.0806, -147.625, -12.8177, 0.81 ) }
    dend_13 { pt3dadd( 18.8614, -148.179, -12.7065, 0.88 ) }
    dend_13 { pt3dadd( 18.6814, -148.612, -12.6401, 0.66 ) }
    dend_13 { pt3dadd( 18.4213, -149.224, -12.5663, 0.29 ) }
    dend_13 { pt3dadd( 18.0935, -150.008, -12.4848, 0.29 ) }
    dend_13 { pt3dadd( 17.9058, -150.462, -12.4294, 0.52 ) }
    dend_13 { pt3dadd( 17.6096, -151.166, -12.3491, 0.52 ) }
    dend_13 { pt3dadd( 17.3627, -151.745, -12.2796, 0.37 ) }
    dend_13 { pt3dadd( 17.1279, -152.266, -12.2074, 0.29 ) }
    dend_13 { pt3dadd( 16.8979, -152.721, -12.1204, 0.29 ) }
    dend_13 { pt3dadd( 16.7923, -152.887, -12.0833, 0.88 ) }
    dend_13 { pt3dadd( 16.5302, -153.173, -11.9997, 1.11 ) }
    dend_13 { pt3dadd( 16.1931, -153.429, -11.8926, 0.44 ) }
    dend_13 { pt3dadd( 15.7573, -153.686, -11.7534, 0.37 ) }
    dend_13 { pt3dadd( 15.3283, -153.898, -11.625, 0.59 ) }
    dend_13 { pt3dadd( 14.9374, -154.065, -11.5173, 0.74 ) }
    dend_13 { pt3dadd( 14.4176, -154.273, -11.382, 0.44 ) }
    dend_13 { pt3dadd( 13.9672, -154.454, -11.2622, 0.37 ) }
    dend_13 { pt3dadd( 13.6716, -154.585, -11.1786, 0.88 ) }
    dend_13 { pt3dadd( 13.3398, -154.762, -11.0724, 1.11 ) }
    dend_13 { pt3dadd( 13.1096, -154.91, -10.9847, 1.11 ) }
    dend_13 { pt3dadd( 12.8806, -155.066, -10.8814, 1.11 ) }
    dend_13 { pt3dadd( 12.3252, -155.465, -10.6064, 0.29 ) }
    dend_13 { pt3dadd( 11.9613, -155.738, -10.4229, 0.59 ) }
    dend_13 { pt3dadd( 11.7215, -155.924, -10.299, 0.59 ) }
    dend_13 { pt3dadd( 11.143, -156.411, -9.98381, 0.29 ) }
    dend_13 { pt3dadd( 10.7991, -156.738, -9.78189, 0.29 ) }
    dend_13 { pt3dadd( 10.5366, -157.023, -9.61832, 0.52 ) }
    dend_13 { pt3dadd( 10.2359, -157.387, -9.42397, 0.52 ) }
    dend_13 { pt3dadd( 10.0788, -157.589, -9.32002, 0.81 ) }
    dend_13 { pt3dadd( 9.82062, -157.983, -9.14125, 0.81 ) }
    dend_13 { pt3dadd( 9.58024, -158.478, -8.95838, 0.29 ) }
    dend_13 { pt3dadd( 9.31978, -159.141, -8.73836, 0.29 ) }
    dend_13 { pt3dadd( 9.18298, -159.528, -8.61091, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.3445, -131.162, -14.5814, 0.22 ) }
    dend_12 { pt3dadd( 21.5489, -131.725, -15.1728, 0.22 ) }
    dend_12 { pt3dadd( 22.8188, -132.318, -15.7963, 0.22 ) }
    dend_12 { pt3dadd( 24.352, -133.034, -16.5492, 0.22 ) }
    dend_12 { pt3dadd( 25.4074, -133.528, -17.0674, 0.22 ) }
    dend_12 { pt3dadd( 26.5273, -134.051, -17.6173, 0.22 ) }
    dend_12 { pt3dadd( 27.6794, -134.589, -18.183, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 206.308, -9.25591, -127.503, 0.74 ) }
    dend_10 { pt3dadd( 208.219, -10.6603, -129.077, 0.74 ) }
    dend_10 { pt3dadd( 208.71, -11.1474, -129.446, 0.44 ) }
    dend_10 { pt3dadd( 209.068, -11.518, -129.673, 0.74 ) }
    dend_10 { pt3dadd( 209.643, -12.0817, -129.966, 0.52 ) }
    dend_10 { pt3dadd( 210.436, -12.8002, -130.273, 0.52 ) }
    dend_10 { pt3dadd( 211.315, -13.5067, -130.565, 0.52 ) }
    dend_10 { pt3dadd( 211.973, -14.0409, -130.658, 0.52 ) }
    dend_10 { pt3dadd( 212.676, -14.533, -130.734, 0.52 ) }
    dend_10 { pt3dadd( 213.61, -15.0175, -130.843, 0.52 ) }
    dend_10 { pt3dadd( 214.427, -15.2932, -130.93, 0.74 ) }
    dend_10 { pt3dadd( 215.312, -15.4591, -131.022, 1.03 ) }
    dend_10 { pt3dadd( 215.647, -15.4911, -131.061, 1.4 ) }
    dend_10 { pt3dadd( 215.984, -15.5088, -131.107, 1.4 ) }
    dend_10 { pt3dadd( 217.335, -15.569, -131.345, 0.44 ) }
    dend_10 { pt3dadd( 217.844, -15.6225, -131.401, 0.74 ) }
    dend_10 { pt3dadd( 218.584, -15.7713, -131.402, 0.74 ) }
    dend_10 { pt3dadd( 219.081, -15.9204, -131.333, 0.96 ) }
    dend_10 { pt3dadd( 219.537, -16.1109, -131.198, 0.96 ) }
    dend_10 { pt3dadd( 220.116, -16.4342, -130.958, 0.96 ) }
    dend_10 { pt3dadd( 221.422, -17.4231, -130.239, 0.66 ) }
    dend_10 { pt3dadd( 221.936, -17.9142, -129.909, 0.81 ) }
    dend_10 { pt3dadd( 222.222, -18.2567, -129.692, 0.81 ) }
    dend_10 { pt3dadd( 222.892, -19.1605, -129.142, 0.52 ) }
    dend_10 { pt3dadd( 223.385, -19.8596, -128.74, 0.52 ) }
    dend_10 { pt3dadd( 223.928, -20.6265, -128.346, 0.52 ) }
    dend_10 { pt3dadd( 224.478, -21.3276, -128.057, 0.52 ) }
    dend_10 { pt3dadd( 225.203, -22.1746, -127.748, 0.44 ) }
    dend_10 { pt3dadd( 225.621, -22.5833, -127.635, 0.96 ) }
    dend_10 { pt3dadd( 226.106, -22.9289, -127.631, 1.11 ) }
    dend_10 { pt3dadd( 226.834, -23.3068, -127.783, 0.44 ) }
    dend_10 { pt3dadd( 227.499, -23.5799, -128.088, 0.37 ) }
    dend_10 { pt3dadd( 227.977, -23.7598, -128.432, 0.37 ) }
    dend_10 { pt3dadd( 228.744, -24.0269, -129.165, 0.66 ) }
    dend_10 { pt3dadd( 229.593, -24.3029, -130.123, 0.74 ) }
    dend_10 { pt3dadd( 229.955, -24.4059, -130.57, 0.81 ) }
    dend_10 { pt3dadd( 230.487, -24.5223, -131.268, 0.81 ) }
    dend_10 { pt3dadd( 231.184, -24.6302, -132.193, 0.66 ) }
    dend_10 { pt3dadd( 231.834, -24.7066, -132.992, 0.66 ) }
    dend_10 { pt3dadd( 232.457, -24.78, -133.686, 0.29 ) }
    dend_10 { pt3dadd( 232.891, -24.8403, -134.13, 0.59 ) }
    dend_10 { pt3dadd( 233.359, -24.9068, -134.572, 0.74 ) }
    dend_10 { pt3dadd( 233.805, -24.9615, -134.98, 0.44 ) }
    dend_10 { pt3dadd( 234.395, -25.0326, -135.487, 0.37 ) }
    dend_10 { pt3dadd( 234.998, -25.124, -136.001, 0.37 ) }
    dend_10 { pt3dadd( 235.579, -25.2424, -136.491, 0.59 ) }
    dend_10 { pt3dadd( 236.032, -25.3607, -136.877, 0.59 ) }
    dend_10 { pt3dadd( 237.179, -25.6837, -138.034, 0.29 ) }
    dend_10 { pt3dadd( 237.897, -25.9195, -138.887, 0.29 ) }
    dend_10 { pt3dadd( 238.255, -26.0534, -139.382, 0.29 ) }
    dend_10 { pt3dadd( 238.559, -26.1835, -139.828, 0.74 ) }
    dend_10 { pt3dadd( 238.856, -26.3236, -140.29, 0.74 ) }
    dend_10 { pt3dadd( 239.977, -27.0157, -142.262, 0.37 ) }
    dend_10 { pt3dadd( 240.282, -27.2858, -142.906, 0.52 ) }
    dend_10 { pt3dadd( 240.497, -27.521, -143.48, 0.81 ) }
    dend_10 { pt3dadd( 240.719, -27.7661, -144.15, 0.37 ) }
    dend_10 { pt3dadd( 240.923, -27.9578, -144.786, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 206.308, -9.25591, -127.503, 0.88 ) }
    dend_3 { pt3dadd( 207.346, -8.65757, -128.904, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 207.767, -8.51923, -129.562, 1.25 ) }
    dend_3 { pt3dadd( 208.148, -8.44851, -130.26, 1.25 ) }
    dend_3 { pt3dadd( 208.643, -8.3546, -131.262, 0.59 ) }
    dend_3 { pt3dadd( 209.965, -8.10344, -133.942, 0.59 ) }
    dend_3 { pt3dadd( 211.294, -7.85117, -136.634, 0.96 ) }
    dend_3 { pt3dadd( 211.979, -7.80406, -138.111, 1.11 ) }
    dend_3 { pt3dadd( 213.145, -7.82198, -140.861, 1.25 ) }
    dend_3 { pt3dadd( 213.828, -7.89926, -142.639, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -97.8348, 159.412, -44.4325, 0.22 ) }
    dend_84 { pt3dadd( -97.6317, 158.529, -43.6902, 0.22 ) }
    dend_84 { pt3dadd( -97.5051, 157.979, -43.2276, 0.22 ) }
    dend_84 { pt3dadd( -97.2217, 156.747, -42.192, 0.22 ) }
    dend_84 { pt3dadd( -97.0488, 155.996, -41.5602, 0.22 ) }
    dend_84 { pt3dadd( -96.9002, 155.35, -41.0171, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -97.8348, 159.412, -44.4325, 0.22 ) }
    dend_83 { pt3dadd( -98.4268, 159.958, -44.1191, 0.22 ) }
    dend_83 { pt3dadd( -98.9467, 160.458, -43.8505, 0.22 ) }
    dend_83 { pt3dadd( -99.4411, 160.933, -43.595, 0.22 ) }
    dend_83 { pt3dadd( -99.9142, 161.388, -43.3506, 0.22 ) }
    dend_83 { pt3dadd( -100.626, 162.073, -42.9826, 0.22 ) }
    dend_83 { pt3dadd( -100.989, 162.423, -42.7949, 0.37 ) }
    dend_83 { pt3dadd( -101.34, 162.811, -42.596, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 159.461, 93.1508, 121.955, 0.29 ) }
    dend_77 { pt3dadd( 161.584, 99.1216, 128.691, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 159.461, 93.1508, 121.955, 0.29 ) }
    dend_76 { pt3dadd( 162.041, 103.333, 129.383, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 166.385, 58.4472, 99.9344, 0.29 ) }
    dend_74 { pt3dadd( 171.329, 59.0337, 88.12, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 166.385, 58.4472, 99.9344, 0.29 ) }
    dend_73 { pt3dadd( 158.083, 58.9814, 100.611, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 152.421, 73.7461, -30.8293, 0.37 ) }
    dend_61 { pt3dadd( 151.852, 73.8776, -31.5302, 0.37 ) }
    dend_61 { pt3dadd( 151.192, 73.929, -32.7352, 0.66 ) }
    dend_61 { pt3dadd( 150.889, 73.8462, -33.7163, 0.29 ) }
    dend_61 { pt3dadd( 150.672, 73.744, -34.6206, 0.29 ) }
    dend_61 { pt3dadd( 150.422, 73.6249, -35.76, 0.29 ) }
    dend_61 { pt3dadd( 149.891, 73.4168, -38.2374, 0.29 ) }
    dend_61 { pt3dadd( 149.661, 73.281, -39.3906, 0.81 ) }
    dend_61 { pt3dadd( 149.046, 72.7758, -42.8733, 0.44 ) }
    dend_61 { pt3dadd( 148.87, 72.5758, -44.1008, 0.96 ) }
    dend_61 { pt3dadd( 148.762, 72.4187, -45.1603, 1.18 ) }
    dend_61 { pt3dadd( 148.677, 72.2399, -46.5531, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 152.421, 73.7461, -30.8293, 0.37 ) }
    dend_60 { pt3dadd( 153.494, 74.421, -30.565, 0.37 ) }
    dend_60 { pt3dadd( 154.763, 75.3108, -30.4484, 0.29 ) }
    dend_60 { pt3dadd( 155.234, 75.663, -30.4448, 0.66 ) }
    dend_60 { pt3dadd( 155.69, 76.0342, -30.4679, 0.66 ) }
    dend_60 { pt3dadd( 156.268, 76.5235, -30.5611, 0.37 ) }
    dend_60 { pt3dadd( 157.083, 77.2106, -30.7289, 0.37 ) }
    dend_60 { pt3dadd( 157.979, 77.9935, -31.0053, 0.81 ) }
    dend_60 { pt3dadd( 158.334, 78.3526, -31.1377, 1.11 ) }
    dend_60 { pt3dadd( 158.811, 78.8882, -31.3295, 1.33 ) }
    dend_60 { pt3dadd( 159.732, 80.062, -31.7645, 0.44 ) }
    dend_60 { pt3dadd( 160.229, 80.8325, -32.0468, 0.52 ) }
    dend_60 { pt3dadd( 160.817, 81.9492, -32.4646, 1.03 ) }
    dend_60 { pt3dadd( 161.388, 83.2656, -32.9875, 0.52 ) }
    dend_60 { pt3dadd( 161.625, 83.94, -33.2547, 0.66 ) }
    dend_60 { pt3dadd( 161.828, 84.6954, -33.559, 0.66 ) }
    dend_60 { pt3dadd( 162.035, 85.9253, -34.0774, 0.44 ) }
    dend_60 { pt3dadd( 162.108, 86.5532, -34.4176, 0.29 ) }
    dend_60 { pt3dadd( 162.205, 87.2773, -34.8893, 0.44 ) }
    dend_60 { pt3dadd( 162.408, 88.0589, -35.4607, 0.66 ) }
    dend_60 { pt3dadd( 162.652, 88.7033, -35.9348, 0.37 ) }
    dend_60 { pt3dadd( 162.998, 89.4241, -36.4916, 0.37 ) }
    dend_60 { pt3dadd( 163.603, 90.542, -37.4352, 0.29 ) }
    dend_60 { pt3dadd( 163.981, 91.2533, -38.0531, 0.29 ) }
    dend_60 { pt3dadd( 164.538, 92.4033, -39.1416, 0.29 ) }
    dend_60 { pt3dadd( 164.829, 93.186, -39.9057, 0.29 ) }
    dend_60 { pt3dadd( 164.964, 93.796, -40.5129, 1.55 ) }
    dend_60 { pt3dadd( 164.986, 94.3008, -41.027, 1.18 ) }
    dend_60 { pt3dadd( 164.846, 94.858, -41.5805, 0.96 ) }
    dend_60 { pt3dadd( 164.341, 95.7392, -42.5175, 0.52 ) }
    dend_60 { pt3dadd( 163.439, 96.7162, -43.6537, 0.29 ) }
    dend_60 { pt3dadd( 162.729, 97.279, -44.3894, 0.29 ) }
    dend_60 { pt3dadd( 162.359, 97.5284, -44.7467, 0.29 ) }
    dend_60 { pt3dadd( 161.352, 98.1696, -45.7425, 0.22 ) }
    dend_60 { pt3dadd( 161.058, 98.3526, -46.0596, 0.66 ) }
    dend_60 { pt3dadd( 160.718, 98.5708, -46.4693, 0.66 ) }
    dend_60 { pt3dadd( 160.203, 98.9463, -47.2603, 0.37 ) }
    dend_60 { pt3dadd( 159.861, 99.355, -48.0231, 0.29 ) }
    dend_60 { pt3dadd( 159.683, 99.7707, -48.7747, 0.22 ) }
    dend_60 { pt3dadd( 159.597, 100.187, -49.4201, 0.22 ) }
    dend_60 { pt3dadd( 159.509, 100.925, -50.3509, 0.22 ) }
    dend_60 { pt3dadd( 159.498, 101.298, -50.7434, 0.29 ) }
    dend_60 { pt3dadd( 159.516, 101.916, -51.2896, 0.29 ) }
    dend_60 { pt3dadd( 159.572, 102.897, -52.0657, 0.29 ) }
    dend_60 { pt3dadd( 159.72, 104.212, -53.0356, 0.29 ) }
    dend_60 { pt3dadd( 159.826, 105.053, -53.6207, 0.29 ) }
    dend_60 { pt3dadd( 159.944, 105.756, -54.0716, 0.29 ) }
    dend_60 { pt3dadd( 160.105, 106.698, -54.6438, 0.29 ) }
    dend_60 { pt3dadd( 160.382, 108.169, -55.472, 0.29 ) }
    dend_60 { pt3dadd( 160.655, 109.328, -56.0844, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -14.1344, -172.492, -1.01932, 0.29 ) }
    dend_39 { pt3dadd( -15.4097, -182.053, -3.12417, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -14.1344, -172.492, -1.01932, 0.29 ) }
    dend_38 { pt3dadd( -2.37755, -169.785, -0.348075, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -25.5794, -120.152, 5.36516, 0.37 ) }
    dend_26 { pt3dadd( -26.25, -121.476, 5.18607, 0.37 ) }
    dend_26 { pt3dadd( -26.5704, -122.108, 5.10051, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -25.5794, -120.152, 5.36516, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -30.2275, -119.592, 4.48451, 0.29 ) }
    dend_25 { pt3dadd( -31.5826, -119.428, 4.26208, 0.22 ) }
    dend_25 { pt3dadd( -33.3756, -119.318, 4.03932, 0.22 ) }
    dend_25 { pt3dadd( -34.432, -119.328, 3.95741, 1.47 ) }
    dend_25 { pt3dadd( -35.2152, -119.335, 3.89668, 1.69 ) }
    dend_25 { pt3dadd( -35.9636, -119.341, 3.83865, 1.69 ) }
    dend_25 { pt3dadd( -37.9271, -119.325, 4.08712, 0.96 ) }
    dend_25 { pt3dadd( -39.3682, -119.443, 4.16744, 0.29 ) }
    dend_25 { pt3dadd( -40.6289, -119.722, 4.15387, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 34.4192, -177.849, 12.6016, 0.29 ) }
    dend_21 { pt3dadd( 33.6466, -178.951, 11.218, 0.29 ) }
    dend_21 { pt3dadd( 32.9728, -179.913, 10.0114, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 34.4192, -177.849, 12.6016, 0.29 ) }
    dend_20 { pt3dadd( 34.4381, -175.649, 11.3015, 0.29 ) }
    dend_20 { pt3dadd( 34.3946, -174.308, 9.81761, 0.29 ) }
    dend_20 { pt3dadd( 34.307, -173.746, 8.53148, 0.29 ) }
    dend_20 { pt3dadd( 34.2221, -173.202, 7.28355, 0.52 ) }
    dend_20 { pt3dadd( 33.9819, -171.662, 3.75388, 0.44 ) }
    dend_20 { pt3dadd( 33.9013, -171.145, 2.56952, 0.29 ) }
    dend_20 { pt3dadd( 33.6879, -171.395, 0.602578, 0.29 ) }
    dend_20 { pt3dadd( 33.6005, -171.629, -0.103154, 0.29 ) }
    dend_20 { pt3dadd( 31.8981, -166.096, -10.4886, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 9.18298, -159.528, -8.61091, 0.22 ) }
    dend_15 { pt3dadd( 9.24718, -160.633, -8.34898, 0.22 ) }
    dend_15 { pt3dadd( 9.36277, -161.894, -7.98346, 0.22 ) }
    dend_15 { pt3dadd( 9.55852, -163.529, -7.51152, 0.22 ) }
    dend_15 { pt3dadd( 9.73711, -164.87, -7.12838, 0.22 ) }
    dend_15 { pt3dadd( 9.99583, -166.596, -6.65644, 0.22 ) }
    dend_15 { pt3dadd( 10.2011, -167.965, -6.28204, 0.22 ) }
    dend_15 { pt3dadd( 10.443, -169.565, -5.86437, 0.22 ) }
    dend_15 { pt3dadd( 10.632, -170.577, -5.61513, 0.37 ) }
    dend_15 { pt3dadd( 10.7188, -170.924, -5.52817, 0.37 ) }
    dend_15 { pt3dadd( 11.0021, -171.888, -5.26879, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.18298, -159.528, -8.61091, 1.55 ) }
    dend_14 { pt3dadd( 8.6266, -159.882, -8.474, 1.55 ) }
    dend_14 { pt3dadd( 8.30151, -160.135, -8.40126, 1.55 ) }
    dend_14 { pt3dadd( 7.65966, -160.654, -8.25468, 0.29 ) }
    dend_14 { pt3dadd( 6.72854, -161.409, -8.01679, 0.44 ) }
    dend_14 { pt3dadd( 6.4853, -161.583, -7.97553, 0.44 ) }
    dend_14 { pt3dadd( 5.43599, -162.205, -7.86404, 0.29 ) }
    dend_14 { pt3dadd( 4.76453, -162.551, -7.82137, 0.29 ) }
    dend_14 { pt3dadd( 4.09387, -162.854, -7.77867, 0.29 ) }
    dend_14 { pt3dadd( 3.35019, -163.136, -7.71707, 0.29 ) }
    dend_14 { pt3dadd( 1.88664, -163.551, -7.52625, 0.29 ) }
    dend_14 { pt3dadd( 0.594196, -163.783, -7.32277, 0.29 ) }
    dend_14 { pt3dadd( -0.221794, -163.833, -7.17463, 0.22 ) }
    dend_14 { pt3dadd( -1.03767, -163.826, -7.00479, 0.22 ) }
    dend_14 { pt3dadd( -1.67045, -163.798, -6.85546, 0.22 ) }
    dend_14 { pt3dadd( -2.35464, -163.748, -6.66289, 0.22 ) }
    dend_14 { pt3dadd( -3.17395, -163.68, -6.33111, 0.22 ) }
    dend_14 { pt3dadd( -3.7815, -163.592, -6.06201, 0.22 ) }
    dend_14 { pt3dadd( -4.21193, -163.493, -5.89112, 0.52 ) }
    dend_14 { pt3dadd( -4.60098, -163.373, -5.75704, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 213.828, -7.89926, -142.639, 0.81 ) }
    dend_9 { pt3dadd( 215.566, -7.99284, -143.439, 0.81 ) }
    dend_9 { pt3dadd( 216.863, -8.1408, -144.036, 0.88 ) }
    dend_9 { pt3dadd( 217.878, -8.29168, -144.551, 0.37 ) }
    dend_9 { pt3dadd( 218.171, -8.3363, -144.697, 0.37 ) }
    dend_9 { pt3dadd( 218.812, -8.4338, -145.016, 0.66 ) }
    dend_9 { pt3dadd( 219.23, -8.49726, -145.224, 0.74 ) }
    dend_9 { pt3dadd( 219.376, -8.50877, -145.315, 0.74 ) }
    dend_9 { pt3dadd( 220.147, -8.7122, -145.713, 0.37 ) }
    dend_9 { pt3dadd( 220.52, -8.84045, -145.927, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 213.828, -7.89926, -142.639, 0.44 ) }
    dend_4 { pt3dadd( 215.277, -6.9192, -143.915, 0.44 ) }
    dend_4 { pt3dadd( 216.3, -6.22707, -144.816, 0.44 ) }
    dend_4 { pt3dadd( 216.865, -5.84462, -145.314, 0.44 ) }
    dend_4 { pt3dadd( 217.976, -5.09319, -146.292, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 148.677, 72.2399, -46.5531, 0.96 ) }
    dend_65 { pt3dadd( 148.146, 72.2367, -49.6574, 0.96 ) }
    dend_65 { pt3dadd( 147.414, 72.187, -52.7765, 0.59 ) }
    dend_65 { pt3dadd( 147.232, 72.1806, -53.5229, 0.59 ) }
    dend_65 { pt3dadd( 147.075, 72.1876, -54.2332, 0.37 ) }
    dend_65 { pt3dadd( 146.761, 72.2545, -55.8803, 0.29 ) }
    dend_65 { pt3dadd( 146.573, 72.3237, -56.9423, 0.29 ) }
    dend_65 { pt3dadd( 146.44, 72.4344, -57.6266, 0.66 ) }
    dend_65 { pt3dadd( 146.256, 72.808, -58.8909, 0.22 ) }
    dend_65 { pt3dadd( 146.195, 73.0322, -59.6592, 0.22 ) }
    dend_65 { pt3dadd( 146.127, 73.2984, -60.6446, 0.88 ) }
    dend_65 { pt3dadd( 146.074, 73.4604, -61.244, 0.88 ) }
    dend_65 { pt3dadd( 145.846, 73.8808, -62.8825, 0.37 ) }
    dend_65 { pt3dadd( 145.695, 74.0175, -63.6545, 0.96 ) }
    dend_65 { pt3dadd( 145.518, 74.0921, -64.4284, 1.11 ) }
    dend_65 { pt3dadd( 145.189, 74.1673, -65.9115, 0.44 ) }
    dend_65 { pt3dadd( 145.015, 74.2011, -66.8193, 0.37 ) }
    dend_65 { pt3dadd( 144.903, 74.2329, -67.5377, 0.52 ) }
    dend_65 { pt3dadd( 144.479, 74.4096, -70.6016, 0.37 ) }
    dend_65 { pt3dadd( 144.362, 74.5326, -72.0513, 0.96 ) }
    dend_65 { pt3dadd( 144.312, 74.6783, -73.172, 0.96 ) }
    dend_65 { pt3dadd( 144.286, 74.8465, -74.3086, 0.52 ) }
    dend_65 { pt3dadd( 144.28, 74.9456, -75.1606, 1.33 ) }
    dend_65 { pt3dadd( 144.27, 75.0337, -76.1932, 1.33 ) }
    dend_65 { pt3dadd( 144.119, 75.3542, -80.4371, 0.52 ) }
    dend_65 { pt3dadd( 144.094, 75.3861, -80.9158, 0.52 ) }
    dend_65 { pt3dadd( 144.026, 75.4383, -81.9425, 0.52 ) }
    dend_65 { pt3dadd( 143.663, 75.5649, -86.2898, 0.44 ) }
    dend_65 { pt3dadd( 143.442, 75.6152, -88.2667, 0.59 ) }
    dend_65 { pt3dadd( 143.278, 75.6734, -89.4385, 0.59 ) }
    dend_65 { pt3dadd( 143.058, 75.7844, -90.5392, 0.88 ) }
    dend_65 { pt3dadd( 142.969, 75.8483, -90.9122, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 142.76, 76.0451, -91.5436, 1.47 ) }
    dend_65 { pt3dadd( 142.145, 76.7228, -92.7335, 0.29 ) }
    dend_65 { pt3dadd( 141.553, 77.429, -93.755, 0.29 ) }
    dend_65 { pt3dadd( 141.306, 77.7252, -94.1538, 0.29 ) }
    dend_65 { pt3dadd( 140.868, 78.2596, -94.8111, 0.29 ) }
    dend_65 { pt3dadd( 140.594, 78.6214, -95.2327, 0.29 ) }
    dend_65 { pt3dadd( 139.945, 79.5373, -96.2378, 0.29 ) }
    dend_65 { pt3dadd( 139.688, 79.8917, -96.6339, 0.29 ) }
    dend_65 { pt3dadd( 139.323, 80.2968, -97.1489, 0.96 ) }
    dend_65 { pt3dadd( 139.089, 80.5714, -97.5177, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 148.677, 72.2399, -46.5531, 0.15 ) }
    dend_62 { pt3dadd( 149.185, 73.5124, -46.6109, 0.15 ) }
    dend_62 { pt3dadd( 149.463, 74.2096, -46.6425, 0.15 ) }
    dend_62 { pt3dadd( 149.687, 74.7698, -46.668, 0.81 ) }
    dend_62 { pt3dadd( 149.881, 75.2562, -46.6901, 1.03 ) }
    dend_62 { pt3dadd( 150.136, 75.8972, -46.7192, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -26.5704, -122.108, 5.10051, 0.52 ) }
    dend_28 { pt3dadd( -26.9257, -122.699, 4.84745, 0.52 ) }
    dend_28 { pt3dadd( -27.4127, -123.658, 4.52207, 0.52 ) }
    dend_28 { pt3dadd( -27.9904, -124.879, 4.24878, 0.37 ) }
    dend_28 { pt3dadd( -28.2539, -125.441, 4.1344, 0.52 ) }
    dend_28 { pt3dadd( -28.6072, -126.197, 3.99363, 0.44 ) }
    dend_28 { pt3dadd( -29.0132, -127.035, 3.83912, 0.37 ) }
    dend_28 { pt3dadd( -29.4243, -127.886, 3.72464, 0.29 ) }
    dend_28 { pt3dadd( -29.8446, -128.783, 3.66554, 0.29 ) }
    dend_28 { pt3dadd( -30.3532, -129.953, 3.61233, 1.03 ) }
    dend_28 { pt3dadd( -30.5005, -130.281, 3.59671, 1.18 ) }
    dend_28 { pt3dadd( -30.9601, -131.213, 3.54558, 0.88 ) }
    dend_28 { pt3dadd( -31.2961, -131.881, 3.49437, 0.44 ) }
    dend_28 { pt3dadd( -31.6973, -132.752, 3.38726, 0.37 ) }
    dend_28 { pt3dadd( -31.8794, -133.265, 3.28386, 0.59 ) }
    dend_28 { pt3dadd( -31.9922, -133.748, 3.16142, 0.44 ) }
    dend_28 { pt3dadd( -32.1101, -134.736, 2.8456, 0.44 ) }
    dend_28 { pt3dadd( -32.1248, -135.439, 2.5866, 0.44 ) }
    dend_28 { pt3dadd( -32.0983, -136.518, 2.17151, 0.52 ) }
    dend_28 { pt3dadd( -32.0752, -137.521, 1.79888, 0.66 ) }
    dend_28 { pt3dadd( -32.0715, -138.351, 1.5689, 0.88 ) }
    dend_28 { pt3dadd( -32.09, -138.928, 1.49185, 0.88 ) }
    dend_28 { pt3dadd( -32.1746, -139.806, 1.55339, 0.52 ) }
    dend_28 { pt3dadd( -32.3561, -140.561, 1.78972, 0.29 ) }
    dend_28 { pt3dadd( -32.6924, -141.454, 2.26, 0.29 ) }
    dend_28 { pt3dadd( -33.1933, -142.465, 2.8546, 0.29 ) }
    dend_28 { pt3dadd( -33.5927, -143.129, 3.2301, 0.96 ) }
    dend_28 { pt3dadd( -33.8781, -143.572, 3.41897, 1.18 ) }
    dend_28 { pt3dadd( -34.1795, -144.064, 3.57253, 1.18 ) }
    dend_28 { pt3dadd( -34.6756, -144.995, 3.70617, 0.59 ) }
    dend_28 { pt3dadd( -35.0686, -145.982, 3.73856, 0.52 ) }
    dend_28 { pt3dadd( -35.365, -146.947, 3.72347, 0.52 ) }
    dend_28 { pt3dadd( -35.7066, -148.197, 3.65186, 0.66 ) }
    dend_28 { pt3dadd( -35.9038, -149.027, 3.59666, 0.66 ) }
    dend_28 { pt3dadd( -36.0728, -149.922, 3.53478, 0.81 ) }
    dend_28 { pt3dadd( -36.1988, -151.224, 3.48297, 0.81 ) }
    dend_28 { pt3dadd( -36.1654, -152.165, 3.55983, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -26.5704, -122.108, 5.10051, 0.37 ) }
    dend_27 { pt3dadd( -26.9927, -121.94, 5.80957, 0.37 ) }
    dend_27 { pt3dadd( -27.5909, -121.765, 6.71397, 0.37 ) }
    dend_27 { pt3dadd( -27.8923, -121.684, 7.12877, 0.37 ) }
    dend_27 { pt3dadd( -28.5924, -121.493, 8.01187, 0.29 ) }
    dend_27 { pt3dadd( -29.0233, -121.363, 8.51905, 0.29 ) }
    dend_27 { pt3dadd( -29.5343, -121.209, 9.12036, 0.29 ) }
    dend_27 { pt3dadd( -30.025, -121.078, 9.70572, 0.37 ) }
    dend_27 { pt3dadd( -30.2941, -121.031, 9.96925, 0.37 ) }
    dend_27 { pt3dadd( -30.5827, -120.998, 10.2017, 0.29 ) }
    dend_27 { pt3dadd( -30.9353, -120.947, 10.4019, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.9728, -179.913, 10.0114, 0.22 ) }
    dend_23 { pt3dadd( 32.2822, -180.91, 10.7894, 0.22 ) }
    dend_23 { pt3dadd( 31.2872, -182.347, 11.9105, 0.22 ) }
    dend_23 { pt3dadd( 30.7215, -183.163, 12.5477, 0.29 ) }
    dend_23 { pt3dadd( 30.4132, -183.608, 12.895, 0.29 ) }
    dend_23 { pt3dadd( 29.6144, -184.762, 13.795, 0.22 ) }
    dend_23 { pt3dadd( 29.0924, -185.515, 14.3831, 0.22 ) }
    dend_23 { pt3dadd( 24.079, -195.596, 19.1749, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 32.9728, -179.913, 10.0114, 0.37 ) }
    dend_22 { pt3dadd( 33.1141, -180.852, 10.546, 0.37 ) }
    dend_22 { pt3dadd( 33.0859, -181.706, 10.9723, 0.96 ) }
    dend_22 { pt3dadd( 32.8878, -182.773, 11.4365, 0.59 ) }
    dend_22 { pt3dadd( 32.6483, -183.592, 11.7249, 0.59 ) }
    dend_22 { pt3dadd( 32.3943, -184.46, 12.0307, 0.22 ) }
    dend_22 { pt3dadd( 32.1523, -185.286, 12.322, 0.22 ) }
    dend_22 { pt3dadd( 31.763, -186.17, 12.6081, 0.22 ) }
    dend_22 { pt3dadd( 31.3167, -186.922, 12.7784, 0.22 ) }
    dend_22 { pt3dadd( 30.7151, -187.697, 12.8952, 0.22 ) }
    dend_22 { pt3dadd( 30.0468, -195.428, 15.6559, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 217.976, -5.09319, -146.292, 0.37 ) }
    dend_6 { pt3dadd( 220.652, -4.291, -153.889, 0.37 ) }
    dend_6 { pt3dadd( 221.097, -4.11598, -155.177, 0.66 ) }
    dend_6 { pt3dadd( 221.422, -3.92666, -156.181, 0.66 ) }
    dend_6 { pt3dadd( 221.572, -3.81626, -156.66, 0.96 ) }
    dend_6 { pt3dadd( 221.957, -3.45702, -157.866, 1.11 ) }
    dend_6 { pt3dadd( 222.424, -2.95298, -159.245, 1.11 ) }
    dend_6 { pt3dadd( 223.128, -1.91558, -160.761, 0.81 ) }
    dend_6 { pt3dadd( 223.69, -1.0127, -161.8, 1.4 ) }
    dend_6 { pt3dadd( 223.879, -0.69082, -162.094, 1.4 ) }
    dend_6 { pt3dadd( 224.623, 0.601483, -162.976, 0.37 ) }
    dend_6 { pt3dadd( 225.162, 1.53778, -163.383, 0.37 ) }
    dend_6 { pt3dadd( 225.837, 2.65854, -163.627, 0.37 ) }
    dend_6 { pt3dadd( 226.383, 3.55326, -163.671, 0.66 ) }
    dend_6 { pt3dadd( 226.809, 4.28964, -163.646, 0.66 ) }
    dend_6 { pt3dadd( 227.308, 5.36629, -163.617, 0.29 ) }
    dend_6 { pt3dadd( 227.587, 6.22136, -163.594, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 227.734, 6.85787, -163.596, 0.52 ) }
    dend_6 { pt3dadd( 227.941, 7.94349, -163.656, 0.29 ) }
    dend_6 { pt3dadd( 228.166, 9.07304, -163.77, 1.03 ) }
    dend_6 { pt3dadd( 228.555, 10.7656, -164.044, 0.66 ) }
    dend_6 { pt3dadd( 228.827, 11.8427, -164.26, 0.44 ) }
    dend_6 { pt3dadd( 228.931, 12.2264, -164.341, 0.66 ) }
    dend_6 { pt3dadd( 229.258, 13.4123, -164.611, 0.37 ) }
    dend_6 { pt3dadd( 229.439, 14.0065, -164.731, 0.52 ) }
    dend_6 { pt3dadd( 229.827, 15.142, -164.901, 0.37 ) }
    dend_6 { pt3dadd( 230.129, 15.907, -164.941, 0.37 ) }
    dend_6 { pt3dadd( 230.459, 16.719, -164.974, 0.37 ) }
    dend_6 { pt3dadd( 230.773, 17.6402, -165.008, 0.37 ) }
    dend_6 { pt3dadd( 231.021, 18.5357, -165.024, 0.96 ) }
    dend_6 { pt3dadd( 231.125, 18.912, -165.026, 0.96 ) }
    dend_6 { pt3dadd( 231.582, 20.4063, -165.002, 0.29 ) }
    dend_6 { pt3dadd( 231.981, 21.6141, -164.991, 0.29 ) }
    dend_6 { pt3dadd( 232.376, 22.7331, -164.992, 0.29 ) }
    dend_6 { pt3dadd( 232.716, 23.6698, -165.004, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 217.976, -5.09319, -146.292, 0.52 ) }
    dend_5 { pt3dadd( 218.38, -0.343017, -147.966, 0.52 ) }
    dend_5 { pt3dadd( 218.407, 0.0488765, -148.085, 0.52 ) }
    dend_5 { pt3dadd( 218.498, 1.8943, -148.582, 0.37 ) }
    dend_5 { pt3dadd( 218.523, 2.41081, -148.721, 0.29 ) }
    dend_5 { pt3dadd( 218.6, 3.97336, -149.141, 0.29 ) }
    dend_5 { pt3dadd( 218.665, 5.30175, -149.499, 0.29 ) }
    dend_5 { pt3dadd( 218.692, 6.56182, -149.485, 0.29 ) }
    dend_5 { pt3dadd( 218.699, 7.10827, -149.492, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 139.089, 80.5714, -97.5177, 0.29 ) }
    dend_67 { pt3dadd( 138.704, 81.123, -99.528, 0.29 ) }
    dend_67 { pt3dadd( 138.623, 81.1479, -100.144, 0.29 ) }
    dend_67 { pt3dadd( 138.537, 81.1038, -101.01, 0.29 ) }
    dend_67 { pt3dadd( 138.398, 81.021, -102.574, 0.29 ) }
    dend_67 { pt3dadd( 138.34, 81.0097, -103.167, 0.44 ) }
    dend_67 { pt3dadd( 138.26, 80.9944, -103.972, 0.44 ) }
    dend_67 { pt3dadd( 138.0, 80.8331, -106.333, 0.29 ) }
    dend_67 { pt3dadd( 137.9, 80.7078, -107.462, 0.29 ) }
    dend_67 { pt3dadd( 137.866, 80.6145, -108.127, 0.29 ) }
    dend_67 { pt3dadd( 137.822, 80.4685, -109.143, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 139.089, 80.5714, -97.5177, 0.22 ) }
    dend_66 { pt3dadd( 138.388, 80.0842, -97.1706, 0.22 ) }
    dend_66 { pt3dadd( 137.812, 79.7355, -96.8827, 0.22 ) }
    dend_66 { pt3dadd( 137.099, 79.3592, -96.5046, 1.4 ) }
    dend_66 { pt3dadd( 136.299, 78.9371, -96.0805, 0.22 ) }
    dend_66 { pt3dadd( 135.406, 78.4661, -95.6072, 1.84 ) }
    dend_66 { pt3dadd( 134.624, 78.0536, -95.1927, 0.22 ) }
    dend_66 { pt3dadd( 133.952, 77.7488, -94.7864, 0.22 ) }
    dend_66 { pt3dadd( 133.326, 77.4992, -94.3855, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 150.136, 75.8972, -46.7192, 0.74 ) }
    dend_64 { pt3dadd( 149.926, 76.6253, -46.6017, 0.74 ) }
    dend_64 { pt3dadd( 149.541, 77.7773, -46.3931, 0.22 ) }
    dend_64 { pt3dadd( 149.257, 78.461, -46.2755, 0.22 ) }
    dend_64 { pt3dadd( 148.606, 79.7841, -46.0402, 0.22 ) }
    dend_64 { pt3dadd( 147.988, 80.943, -45.7664, 1.33 ) }
    dend_64 { pt3dadd( 147.683, 81.5135, -45.597, 1.33 ) }
    dend_64 { pt3dadd( 147.032, 82.6514, -45.1633, 0.22 ) }
    dend_64 { pt3dadd( 146.534, 83.4367, -44.8035, 0.22 ) }
    dend_64 { pt3dadd( 146.193, 83.9184, -44.5624, 0.22 ) }
    dend_64 { pt3dadd( 145.406, 84.9484, -44.0722, 0.22 ) }
    dend_64 { pt3dadd( 144.842, 85.718, -43.6437, 0.22 ) }
    dend_64 { pt3dadd( 144.534, 86.2416, -43.3504, 0.37 ) }
    dend_64 { pt3dadd( 144.292, 86.8027, -43.0451, 0.37 ) }
    dend_64 { pt3dadd( 144.11, 87.4691, -42.6798, 0.37 ) }
    dend_64 { pt3dadd( 144.022, 87.997, -42.422, 0.15 ) }
    dend_64 { pt3dadd( 143.77, 89.4753, -41.8205, 0.22 ) }
    dend_64 { pt3dadd( 143.553, 90.7008, -41.3753, 0.22 ) }
    dend_64 { pt3dadd( 143.384, 91.5581, -41.0537, 0.22 ) }
    dend_64 { pt3dadd( 142.995, 93.0991, -40.5113, 0.22 ) }
    dend_64 { pt3dadd( 142.641, 94.1544, -40.1357, 0.22 ) }
    dend_64 { pt3dadd( 142.117, 95.4636, -39.6497, 0.22 ) }
    dend_64 { pt3dadd( 141.899, 95.934, -39.4746, 0.74 ) }
    dend_64 { pt3dadd( 140.913, 97.8118, -38.7321, 0.29 ) }
    dend_64 { pt3dadd( 140.283, 98.9192, -38.3023, 0.29 ) }
    dend_64 { pt3dadd( 139.658, 100.002, -37.904, 0.29 ) }
    dend_64 { pt3dadd( 139.22, 100.792, -37.5668, 0.29 ) }
    dend_64 { pt3dadd( 138.752, 101.752, -37.0653, 0.52 ) }
    dend_64 { pt3dadd( 138.352, 102.621, -36.5584, 0.37 ) }
    dend_64 { pt3dadd( 137.865, 103.764, -35.854, 0.29 ) }
    dend_64 { pt3dadd( 137.752, 104.045, -35.6711, 0.37 ) }
    dend_64 { pt3dadd( 137.312, 105.14, -34.9564, 0.37 ) }
    dend_64 { pt3dadd( 136.692, 106.582, -33.9947, 0.37 ) }
    dend_64 { pt3dadd( 136.188, 107.68, -33.2295, 0.22 ) }
    dend_64 { pt3dadd( 135.918, 108.278, -32.786, 0.22 ) }
    dend_64 { pt3dadd( 135.625, 108.919, -32.3037, 0.74 ) }
    dend_64 { pt3dadd( 135.453, 109.276, -32.0507, 0.88 ) }
    dend_64 { pt3dadd( 134.881, 110.415, -31.3689, 0.59 ) }
    dend_64 { pt3dadd( 134.144, 111.754, -30.7456, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 150.136, 75.8972, -46.7192, 0.29 ) }
    dend_63 { pt3dadd( 150.906, 76.1087, -46.9906, 0.29 ) }
    dend_63 { pt3dadd( 151.627, 76.189, -47.3199, 0.29 ) }
    dend_63 { pt3dadd( 152.356, 76.2138, -47.6827, 1.03 ) }
    dend_63 { pt3dadd( 152.702, 76.2132, -47.864, 1.03 ) }
    dend_63 { pt3dadd( 153.562, 76.1838, -48.2832, 0.44 ) }
    dend_63 { pt3dadd( 154.215, 76.1539, -48.5735, 0.29 ) }
    dend_63 { pt3dadd( 155.086, 76.0543, -48.9392, 0.96 ) }
    dend_63 { pt3dadd( 155.38, 76.0117, -49.0506, 0.96 ) }
    dend_63 { pt3dadd( 156.238, 75.9054, -49.3266, 0.22 ) }
    dend_63 { pt3dadd( 156.891, 75.8571, -49.5105, 0.22 ) }
    dend_63 { pt3dadd( 157.558, 75.8612, -49.6472, 0.22 ) }
    dend_63 { pt3dadd( 158.277, 75.9171, -49.7716, 0.22 ) }
    dend_63 { pt3dadd( 159.101, 76.0444, -49.901, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 159.613, 76.1555, -49.983, 0.52 ) }
    dend_63 { pt3dadd( 160.029, 76.2923, -50.0515, 0.29 ) }
    dend_63 { pt3dadd( 160.541, 76.5465, -50.1439, 1.03 ) }
    dend_63 { pt3dadd( 160.862, 76.7847, -50.1815, 1.03 ) }
    dend_63 { pt3dadd( 161.126, 77.0821, -50.1979, 0.88 ) }
    dend_63 { pt3dadd( 161.374, 77.4291, -50.1875, 0.66 ) }
    dend_63 { pt3dadd( 161.665, 77.9086, -50.1498, 0.37 ) }
    dend_63 { pt3dadd( 161.939, 78.4485, -50.0808, 0.59 ) }
    dend_63 { pt3dadd( 162.233, 79.1475, -49.9658, 0.29 ) }
    dend_63 { pt3dadd( 162.474, 79.7796, -49.8277, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.1654, -152.165, 3.55983, 0.74 ) }
    dend_30 { pt3dadd( -36.5224, -153.086, 4.05284, 0.74 ) }
    dend_30 { pt3dadd( -37.1708, -154.438, 4.86146, 0.66 ) }
    dend_30 { pt3dadd( -37.7239, -155.318, 5.45852, 0.52 ) }
    dend_30 { pt3dadd( -38.5578, -156.373, 6.24049, 0.37 ) }
    dend_30 { pt3dadd( -39.048, -156.949, 6.66486, 0.74 ) }
    dend_30 { pt3dadd( -39.4477, -157.44, 7.03341, 1.03 ) }
    dend_30 { pt3dadd( -39.9964, -158.088, 7.53862, 0.74 ) }
    dend_30 { pt3dadd( -40.78, -159.026, 8.25516, 0.52 ) }
    dend_30 { pt3dadd( -41.5477, -160.08, 8.97725, 0.52 ) }
    dend_30 { pt3dadd( -42.0477, -160.936, 9.45617, 0.66 ) }
    dend_30 { pt3dadd( -42.7195, -162.447, 10.1215, 0.88 ) }
    dend_30 { pt3dadd( -42.9087, -162.99, 10.3093, 1.18 ) }
    dend_30 { pt3dadd( -43.1472, -163.87, 10.5501, 0.81 ) }
    dend_30 { pt3dadd( -43.4088, -165.128, 10.8108, 0.52 ) }
    dend_30 { pt3dadd( -43.6277, -166.195, 10.9604, 0.52 ) }
    dend_30 { pt3dadd( -43.9376, -167.462, 11.0806, 0.52 ) }
    dend_30 { pt3dadd( -44.1202, -168.065, 11.1053, 0.52 ) }
    dend_30 { pt3dadd( -44.509, -169.249, 11.1479, 0.52 ) }
    dend_30 { pt3dadd( -44.93, -170.418, 11.1944, 0.52 ) }
    dend_30 { pt3dadd( -45.3236, -171.4, 11.2198, 1.03 ) }
    dend_30 { pt3dadd( -45.6343, -172.113, 11.2415, 1.25 ) }
    dend_30 { pt3dadd( -46.0866, -172.995, 11.2797, 0.66 ) }
    dend_30 { pt3dadd( -46.6081, -173.848, 11.3252, 0.29 ) }
    dend_30 { pt3dadd( -47.3563, -174.672, 11.4128, 0.29 ) }
    dend_30 { pt3dadd( -47.8263, -174.529, 11.523, 0.52 ) }
    dend_30 { pt3dadd( -48.9864, -173.676, 11.8345, 0.29 ) }
    dend_30 { pt3dadd( -49.8807, -172.884, 12.0734, 0.29 ) }
    dend_30 { pt3dadd( -50.8098, -171.914, 12.3254, 0.22 ) }
    dend_30 { pt3dadd( -50.9823, -171.707, 12.3704, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.1654, -152.165, 3.55983, 0.22 ) }
    dend_29 { pt3dadd( -36.6351, -153.813, 3.16185, 0.22 ) }
    dend_29 { pt3dadd( -36.8196, -154.472, 2.99477, 0.22 ) }
    dend_29 { pt3dadd( -37.1345, -155.789, 2.6772, 0.22 ) }
    dend_29 { pt3dadd( -37.4506, -157.282, 2.34412, 0.22 ) }
    dend_29 { pt3dadd( -37.7068, -158.493, 2.0742, 0.22 ) }
    dend_29 { pt3dadd( -38.204, -160.842, 1.55025, 0.22 ) }
    dend_29 { pt3dadd( -38.4382, -161.848, 1.35988, 0.22 ) }
    dend_29 { pt3dadd( -38.8846, -163.834, 0.948679, 0.22 ) }
    dend_29 { pt3dadd( -39.0883, -164.944, 0.688308, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 232.716, 23.6698, -165.004, 0.29 ) }
    dend_8 { pt3dadd( 233.594, 23.2049, -165.084, 0.29 ) }
    dend_8 { pt3dadd( 234.099, 22.9376, -165.129, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 232.716, 23.6698, -165.004, 0.37 ) }
    dend_7 { pt3dadd( 232.768, 24.8231, -165.368, 0.37 ) }
    dend_7 { pt3dadd( 232.828, 26.1812, -165.797, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_53 nseg = 3
    dend_50 nseg = 7
    dend_41 nseg = 7
    dend_32 nseg = 3
    dend_88 nseg = 5
    dend_69 nseg = 7
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 11
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 5
    dend_2 nseg = 13
    dend_75 nseg = 3
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_6 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_ChC_38a9a8850a_0_0


