// Cell: Cell_472912107
/*
{
  "id" : "Cell_472912107",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "310.512, 523.38, 56.56, 14.811", "317.918, 523.38, 56.56, 14.811", "325.323, 523.38, 56.56, 14.811" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "317.917, 523.38, 56.56, 1.0", "323.759, 537.196, 56.56, 1.0", "329.6, 551.012, 56.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "312.292, 520.298, 59.717, 0.3814", "311.296, 519.948, 59.4308, 0.5338", "310.336, 519.861, 60.2913, 0.6356", "309.481, 520.177, 61.3264, 0.7118", "308.857, 519.937, 62.8188, 0.7118", "308.031, 519.719, 61.1173, 0.6864", "306.973, 519.49, 60.8356, 0.6356", "306.086, 519.577, 62.2096, 0.6356", "305.994, 519.834, 64.1822, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "318.015, 530.069, 57.5229, 0.356", "318.069, 531.182, 57.6173, 0.356", "317.907, 532.082, 57.0601, 0.356", "317.917, 533.205, 56.5505, 0.3814", "317.707, 534.206, 56.8137, 0.483", "317.585, 535.274, 56.3657, 0.5592", "317.375, 536.36, 56.5219, 0.6102", "317.116, 537.405, 56.0392, 0.6102", "316.887, 538.438, 55.7561, 0.5848", "316.544, 539.419, 55.9306, 0.6356", "316.32, 540.288, 55.8463, 0.6864", "315.936, 541.097, 55.3694, 0.788", "315.832, 541.976, 54.6787, 0.7372", "315.374, 542.881, 55.16, 0.6864", "315.011, 543.761, 55.5512, 0.6102", "314.942, 544.576, 53.9602, 0.661", "314.812, 545.57, 54.0162, 0.7118", "314.724, 546.254, 54.9357, 0.7372", "314.692, 547.081, 53.7799, 0.6356", "314.742, 548.081, 53.6494, 0.5084", "314.823, 549.131, 54.5958, 0.4322", "314.406, 549.993, 54.0473, 0.483", "314.01, 550.838, 54.4569, 0.5848", "313.782, 551.748, 53.1961, 0.6356", "313.866, 552.763, 53.6035, 0.661", "313.433, 553.62, 53.4635, 0.6864", "313.684, 554.546, 54.2662, 0.7118", "313.253, 555.513, 54.1906, 0.6864", "313.175, 556.341, 53.9801, 0.661", "313.336, 557.399, 54.4956, 0.6864", "313.117, 558.241, 55.1152, 0.7118", "312.743, 559.175, 55.6889, 0.6102", "312.922, 560.134, 56.28, 0.5084", "312.551, 560.973, 55.16, 0.483", "312.448, 562.075, 54.7238, 0.6102", "312.295, 562.961, 55.4448, 0.7118", "312.103, 563.523, 54.0498, 0.7118", "311.625, 564.502, 54.4597, 0.661", "311.168, 565.055, 55.5405, 0.6102", "310.929, 565.86, 54.88, 0.6102", "310.696, 566.954, 54.6392, 0.5848", "310.437, 567.424, 56.021, 0.5848", "310.051, 568.001, 57.96, 0.6102", "309.999, 568.966, 57.4283, 0.661", "309.549, 569.971, 57.1903, 0.6864", "309.258, 570.965, 56.0787, 0.661", "308.879, 571.86, 55.3778, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "323.762, 525.771, 51.5738, 0.5084", "324.77, 526.184, 50.7142, 0.5848", "325.417, 526.771, 49.6891, 0.661", "326.058, 527.463, 49.28, 0.7118", "326.857, 528.172, 49.9234, 0.7626", "327.448, 528.943, 50.96, 0.6864", "327.881, 529.601, 49.5986, 0.6102", "328.548, 530.227, 49.0, 0.5338", "329.469, 530.816, 49.2783, 0.5848", "329.983, 531.645, 48.5192, 0.661", "330.751, 532.225, 47.6199, 0.6864", "331.746, 532.303, 47.2889, 0.5848" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "323.703, 522.519, 52.0178, 0.5848", "324.334, 522.922, 51.0502, 0.6356", "324.895, 522.156, 50.9289, 0.5084", "325.72, 522.236, 50.4, 0.4322", "326.642, 522.438, 51.1246, 0.4322", "327.694, 522.457, 51.2117, 0.5338", "328.699, 522.249, 51.217, 0.5848", "329.466, 522.694, 51.24, 0.6356", "330.348, 522.53, 50.1032, 0.6356", "331.441, 522.531, 50.1676, 0.5848", "332.538, 522.461, 49.7291, 0.483", "333.45, 522.458, 48.6514, 0.4576", "334.399, 522.808, 48.9356, 0.5084", "335.448, 522.946, 49.56, 0.5848", "336.158, 523.266, 50.5081, 0.5592", "337.13, 523.278, 51.3411, 0.5338", "338.156, 523.564, 50.7293, 0.483", "338.851, 523.739, 49.0, 0.5338", "339.941, 523.838, 49.5443, 0.5848", "340.887, 523.952, 50.531, 0.7372", "341.628, 524.674, 49.84, 0.8136", "342.597, 524.913, 50.2989, 0.839", "342.926, 525.439, 49.0882, 0.788", "343.832, 525.765, 49.5191, 0.7372", "344.753, 525.383, 48.4249, 0.7118", "345.844, 525.444, 47.9433, 0.661", "346.774, 525.277, 48.6052, 0.6356", "347.65, 525.056, 49.2209, 0.6102", "348.721, 524.714, 49.0, 0.5848", "349.737, 524.409, 48.9684, 0.5848", "350.773, 524.066, 49.0386, 0.5848", "351.636, 524.066, 49.4595, 0.6102", "352.465, 523.481, 49.583, 0.5592", "352.797, 522.88, 47.6235, 0.4576", "353.453, 522.138, 47.0635, 0.3814", "354.154, 521.937, 48.9804, 0.4068", "354.896, 521.529, 50.5627, 0.5084", "355.653, 521.158, 49.6658, 0.5848", "356.516, 520.653, 49.7101, 0.5848", "357.373, 520.354, 50.703, 0.5592", "357.957, 520.162, 50.1357, 0.5084", "358.844, 519.888, 49.8781, 0.4576", "359.87, 519.5, 50.3964, 0.4068", "360.777, 519.344, 49.3259, 0.356", "361.262, 518.537, 50.4, 0.356", "362.295, 518.138, 50.1572, 0.3304", "363.386, 517.894, 50.4526, 0.356", "364.15, 517.605, 51.3694, 0.356", "364.785, 517.512, 52.1242, 0.4322", "365.788, 517.057, 51.8, 0.4576", "365.991, 516.709, 49.665, 0.4576", "366.928, 516.421, 49.0608, 0.356", "367.816, 516.287, 48.6889, 0.2796", "368.907, 516.092, 48.368, 0.2288", "370.008, 515.83, 48.2168, 0.2288", "371.126, 515.715, 48.1734, 0.2288", "372.158, 515.402, 47.5121, 0.2542", "373.269, 515.258, 47.32, 0.305", "374.375, 515.143, 47.8724, 0.3814", "375.484, 515.33, 48.1634, 0.4322", "376.592, 515.195, 47.8649, 0.4576", "377.661, 514.882, 48.16, 0.4322", "378.076, 514.561, 48.6122, 0.3814", "378.777, 514.44, 49.8103, 0.305", "379.203, 513.736, 49.2416, 0.2542", "380.173, 513.172, 49.28, 0.2288", "380.721, 512.237, 49.28, 0.2288", "381.427, 511.472, 49.733, 0.2288", "382.269, 511.012, 50.5977, 0.2542", "382.985, 510.257, 50.8046, 0.305", "383.766, 509.46, 51.3416, 0.356", "384.39, 508.591, 51.0118, 0.3814", "385.092, 507.838, 51.3699, 0.3814", "385.958, 507.374, 52.1564, 0.3814", "386.911, 507.048, 52.36, 0.356", "387.425, 506.441, 52.75, 0.305", "387.994, 505.519, 52.7453, 0.2796", "388.539, 504.632, 52.6674, 0.2796", "389.372, 503.872, 52.64, 0.305", "390.078, 503.003, 52.8394, 0.305", "391.004, 502.396, 53.482, 0.305", "392.059, 502.075, 53.76, 0.3304", "392.731, 501.358, 54.2567, 0.3304", "393.207, 500.435, 53.494, 0.3304", "394.305, 500.271, 53.48, 0.2796", "394.739, 499.483, 52.9245, 0.2542", "395.372, 498.784, 53.625, 0.2288", "396.267, 498.652, 54.5502, 0.2288", "397.142, 498.117, 54.2102, 0.2288", "398.126, 497.565, 54.04, 0.2288", "398.863, 496.757, 53.9994, 0.2288", "399.931, 496.502, 53.48, 0.2288", "400.726, 495.83, 53.4503, 0.2288", "401.62, 495.352, 53.7135, 0.2288", "402.483, 494.634, 53.76, 0.2288", "403.384, 493.932, 53.76, 0.2288", "404.437, 493.725, 53.76, 0.2288", "405.296, 493.167, 53.76, 0.2288", "405.482, 492.093, 53.76, 0.2288", "406.214, 491.271, 53.6435, 0.2288", "406.829, 490.333, 53.48, 0.2542", "407.397, 489.409, 53.7398, 0.2796", "408.203, 488.79, 54.0196, 0.305", "408.521, 487.781, 53.2358, 0.2796", "408.799, 487.115, 54.7361, 0.2542", "409.542, 486.515, 54.6361, 0.2288", "410.02, 485.556, 54.3477, 0.2288", "410.352, 484.616, 54.04, 0.2288", "410.616, 483.68, 54.2968, 0.2542", "411.163, 482.818, 54.32, 0.305", "412.1, 482.292, 54.3354, 0.3814", "412.364, 481.967, 53.0816, 0.4068", "412.56, 481.543, 51.5586, 0.4068", "413.039, 480.938, 52.6725, 0.4068", "413.745, 480.562, 54.04, 0.483", "414.558, 479.843, 53.4901, 0.5592", "415.42, 479.377, 53.48, 0.5848", "416.308, 479.293, 54.5656, 0.5592", "417.29, 479.111, 54.1332, 0.5592", "418.289, 478.687, 54.3687, 0.5592", "419.161, 478.929, 54.5952, 0.5338", "419.908, 478.888, 55.72, 0.4576", "420.998, 478.656, 55.4294, 0.4068", "421.935, 478.678, 54.6711, 0.3814", "422.781, 478.491, 53.2932, 0.3814", "423.555, 478.213, 54.2634, 0.3814", "424.587, 477.867, 54.2735, 0.356", "425.432, 477.306, 53.6264, 0.3304", "426.408, 477.141, 54.0126, 0.3304", "427.235, 477.506, 54.0554, 0.3814", "428.184, 477.173, 53.3095, 0.4068", "429.247, 477.333, 53.9342, 0.3814", "430.283, 477.618, 54.3486, 0.3304", "431.125, 477.296, 55.1841, 0.356", "431.861, 477.62, 55.1158, 0.4068", "432.783, 477.304, 54.9539, 0.4322", "433.711, 477.726, 55.7914, 0.356", "434.711, 477.503, 55.44, 0.2796", "435.61, 476.937, 55.1505, 0.2288", "436.31, 476.476, 53.8658, 0.2288", "437.236, 476.931, 52.9309, 0.2288", "438.047, 477.176, 54.0327, 0.2796", "437.889, 476.95, 55.6346, 0.356", "437.819, 476.966, 57.0055, 0.4322", "438.589, 476.819, 56.6882, 0.4068", "439.599, 476.468, 57.1035, 0.3304", "440.423, 475.822, 56.84, 0.305", "441.395, 475.449, 57.2485, 0.3304", "442.102, 475.028, 56.6709, 0.3814", "442.646, 474.328, 56.7277, 0.356", "443.413, 474.642, 56.7815, 0.356", "443.871, 474.452, 57.4316, 0.4068", "444.178, 473.537, 57.7223, 0.483", "444.795, 473.153, 57.4406, 0.5592", "445.128, 472.104, 57.4423, 0.5848", "445.672, 471.53, 56.8061, 0.5848", "446.397, 470.954, 56.5852, 0.5338", "446.703, 470.245, 57.6528, 0.4576", "447.417, 469.821, 57.6509, 0.4068", "447.994, 469.002, 57.12, 0.356", "448.447, 469.383, 56.28, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "313.74, 525.019, 44.3058, 0.3814", "313.031, 525.898, 44.2495, 0.5084", "312.951, 527.036, 44.298, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "316.031, 518.152, 50.4764, 0.356", "315.677, 517.169, 49.3335, 0.5592", "315.512, 516.179, 48.44, 0.788", "315.16, 515.275, 48.1583, 0.9152", "314.561, 514.338, 48.44, 0.9406", "314.009, 513.617, 47.3362, 0.8644", "313.727, 512.562, 47.808, 0.8136", "313.271, 511.82, 46.4836, 0.7372", "312.556, 511.064, 46.48, 0.7118", "311.853, 510.338, 47.04, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "321.704, 528.8, 59.2704, 0.356", "322.351, 529.725, 59.7327, 0.4068", "322.956, 530.672, 60.1927, 0.5084", "323.61, 531.35, 59.9161, 0.5338", "324.716, 531.567, 59.64, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "320.359, 517.142, 55.3638, 0.2288", "320.775, 516.079, 55.1603, 0.2796", "321.192, 515.016, 54.9564, 0.356", "321.607, 513.955, 54.7529, 0.4322", "322.024, 512.892, 54.549, 0.4068" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "311.805, 523.687, 53.9745, 0.305", "310.679, 523.743, 53.4979, 0.4322", "309.621, 524.028, 53.2045, 0.661", "308.528, 523.991, 53.1958, 0.8136", "307.403, 524.164, 53.1695, 0.966", "306.307, 524.482, 53.0107, 0.966", "305.227, 524.732, 52.3387, 0.966", "304.09, 524.757, 52.4924, 0.8644", "302.975, 524.784, 53.095, 0.8136", "301.877, 524.947, 52.481, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000337586928645
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "329.6, 551.012, 56.56, 1.0", "335.441, 564.828, 56.56, 1.0", "341.283, 578.644, 56.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "305.994, 519.834, 64.1822, 0.661", "305.226, 519.91, 63.7386, 0.483", "304.423, 519.28, 63.8677, 0.6864", "303.716, 518.651, 64.4977, 0.8644", "303.166, 518.003, 63.56, 0.9406", "301.825, 516.993, 64.3054, 0.7372", "301.138, 516.707, 65.8, 0.5848" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "305.994, 519.834, 64.1822, 0.661", "306.329, 520.511, 65.5502, 0.4322", "306.807, 520.735, 67.4783, 0.356", "306.678, 521.687, 68.8562, 0.305", "306.153, 522.229, 70.4816, 0.3304", "305.676, 522.122, 72.513, 0.3814", "305.445, 522.833, 73.6669, 0.4576", "304.654, 523.39, 74.3179, 0.5084", "303.691, 523.795, 74.7088, 0.5338", "302.683, 524.032, 75.32, 0.5338", "301.772, 524.637, 75.6, 0.5338", "301.226, 524.753, 76.8463, 0.5084", "300.385, 525.126, 76.5386, 0.4322", "299.449, 525.096, 75.2808, 0.3304", "298.564, 524.867, 74.0933, 0.2542", "297.507, 524.867, 73.0271, 0.2288", "296.566, 524.673, 71.7744, 0.2288", "295.809, 524.159, 71.4196, 0.2288", "295.422, 523.532, 69.7292, 0.2288", "294.97, 523.006, 68.32, 0.2542", "294.282, 522.465, 66.9026, 0.3304", "293.49, 522.848, 65.8888, 0.4322", "292.505, 523.037, 64.9144, 0.5084", "291.51, 523.25, 64.7307, 0.5084", "290.404, 523.38, 64.878, 0.483", "289.346, 523.197, 65.0418, 0.483", "288.555, 523.301, 64.6836, 0.5084", "287.51, 523.405, 64.078, 0.5338", "286.388, 523.557, 64.0195, 0.5084", "285.357, 524.009, 63.84, 0.483", "284.436, 524.527, 63.2834, 0.483", "283.403, 524.524, 62.5159, 0.5084", "282.393, 524.524, 61.36, 0.5592", "281.454, 524.462, 62.3848, 0.5592", "280.772, 524.97, 61.1814, 0.6102", "279.92, 524.818, 62.0001, 0.661", "278.826, 524.579, 61.8629, 0.7626", "278.093, 524.524, 60.5114, 0.7626", "277.094, 524.295, 61.2447, 0.661", "276.074, 523.954, 60.6214, 0.483", "275.011, 523.723, 60.1779, 0.3814", "274.114, 523.477, 59.36, 0.4068", "273.142, 523.142, 59.9855, 0.5084", "272.39, 523.258, 59.4838, 0.5338", "271.326, 523.529, 59.9052, 0.483", "270.244, 523.655, 60.4736, 0.3814", "269.476, 523.41, 59.089, 0.356", "268.645, 522.726, 59.64, 0.356", "267.547, 522.521, 59.2623, 0.4068", "266.504, 522.18, 58.7241, 0.4068", "265.453, 521.893, 58.2232, 0.4068", "264.467, 521.8, 57.3395, 0.3814", "263.448, 521.903, 57.5784, 0.4068", "262.339, 521.903, 57.3437, 0.4576", "261.395, 521.681, 56.7092, 0.5084", "260.276, 521.763, 56.5953, 0.5338", "259.266, 522.196, 56.56, 0.5084", "258.311, 522.602, 56.8078, 0.483", "257.257, 522.885, 56.4208, 0.4576", "256.214, 523.324, 56.3959, 0.4322", "255.19, 523.691, 55.5982, 0.3814", "254.116, 523.897, 55.9275, 0.305", "253.02, 524.151, 55.6192, 0.2542", "251.886, 524.153, 55.4291, 0.2288", "250.761, 524.066, 55.0707, 0.2288", "249.635, 524.078, 55.3958, 0.2542", "248.697, 524.625, 54.8834, 0.2796", "247.571, 524.827, 54.88, 0.305", "246.512, 525.233, 54.8514, 0.2796", "245.561, 525.754, 54.3306, 0.2542", "244.6, 526.349, 54.595, 0.2542", "243.761, 527.095, 54.5031, 0.305", "242.795, 527.66, 54.7142, 0.3814", "241.939, 528.197, 55.2476, 0.4068", "241.186, 528.845, 55.44, 0.3814", "240.385, 529.563, 55.5481, 0.305", "239.8, 530.401, 56.1697, 0.2542", "239.49, 531.371, 56.6084, 0.2288", "238.866, 532.263, 56.852, 0.2288", "238.412, 533.023, 56.534, 0.2288", "237.904, 533.905, 56.5622, 0.2288", "237.531, 534.919, 57.12, 0.2288", "236.742, 535.71, 57.12, 0.2288", "235.951, 536.398, 57.12, 0.2288", "235.663, 537.431, 57.12, 0.2542", "235.029, 538.293, 56.9279, 0.2796", "234.199, 538.938, 57.3947, 0.305", "233.347, 539.661, 57.678, 0.2796", "232.685, 540.367, 58.3996, 0.2542", "232.231, 541.327, 58.2672, 0.2288", "231.666, 542.143, 57.0293, 0.2288", "230.973, 542.819, 57.4582, 0.2288", "230.308, 543.232, 58.497, 0.2288", "229.361, 543.629, 58.5228, 0.2288", "228.268, 543.837, 58.7784, 0.2288", "227.283, 544.408, 58.7952, 0.2288", "226.503, 545.037, 59.0478, 0.2288", "225.48, 545.512, 59.08, 0.2288", "224.668, 546.141, 58.5525, 0.2288", "223.55, 546.297, 58.52, 0.2288", "222.581, 546.854, 58.52, 0.2288", "221.677, 547.474, 58.0126, 0.2288", "220.619, 547.832, 57.7046, 0.2288", "219.515, 548.128, 57.68, 0.2288", "218.468, 548.566, 57.68, 0.2796", "217.524, 549.194, 57.5557, 0.3814", "216.517, 549.527, 56.8215, 0.5084", "215.476, 549.588, 56.7118, 0.5338", "214.504, 549.98, 56.3153, 0.483", "213.942, 550.356, 57.3748, 0.4068", "212.862, 550.647, 57.556, 0.3814", "212.007, 551.111, 57.1444, 0.356", "211.07, 551.516, 57.0699, 0.3304", "210.517, 551.549, 55.3344, 0.305", "209.729, 551.863, 55.4792, 0.305", "209.122, 552.214, 55.5033, 0.3304", "208.537, 552.631, 56.772, 0.4068", "207.716, 552.687, 55.8452, 0.5338", "206.745, 552.79, 56.0056, 0.6102", "205.916, 552.82, 55.6223, 0.5848", "204.981, 553.238, 55.7813, 0.4576", "203.989, 553.124, 55.3459, 0.3304", "203.411, 552.79, 53.4092, 0.305", "202.437, 552.895, 54.1806, 0.3304", "201.55, 552.637, 55.44, 0.4068", "201.082, 552.774, 55.883, 0.3814", "200.527, 553.124, 57.2788, 0.3814", "200.129, 553.685, 58.9932, 0.356", "199.425, 554.125, 58.1241, 0.4068", "198.592, 554.165, 56.9243, 0.4068", "197.916, 554.641, 56.383, 0.3814", "197.004, 554.771, 56.3534, 0.305", "196.184, 554.953, 56.56, 0.2542", "195.082, 555.001, 56.537, 0.2288", "194.018, 555.181, 55.932, 0.2288", "193.41, 555.641, 56.6465, 0.2542", "192.8, 555.984, 57.6766, 0.305", "191.88, 556.376, 57.3983, 0.3814", "191.093, 556.729, 56.2842, 0.4068", "190.473, 557.403, 56.7809, 0.4068", "190.163, 557.972, 56.4746, 0.356", "189.562, 558.549, 55.9513, 0.356", "188.738, 559.145, 55.972, 0.3304", "188.528, 560.057, 55.16, 0.4068", "187.816, 560.772, 55.44, 0.4322", "186.785, 560.626, 55.7046, 0.5084", "185.828, 560.348, 54.7697, 0.4322", "185.213, 559.874, 53.48, 0.3814" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "308.879, 571.86, 55.3778, 0.6356", "308.484, 572.678, 54.9335, 0.661", "308.116, 573.589, 55.3157, 0.6102", "308.0, 574.487, 53.7239, 0.5338", "308.173, 575.464, 53.1373, 0.4322", "308.536, 576.394, 53.0328, 0.356", "308.967, 577.218, 53.6637, 0.3304", "308.744, 577.963, 52.7766, 0.4068", "308.331, 578.927, 52.5246, 0.4576", "307.91, 579.684, 53.7289, 0.483", "307.216, 580.38, 53.7177, 0.4322", "306.902, 581.246, 52.449, 0.4576", "306.362, 581.528, 52.5535, 0.5084", "305.668, 581.854, 51.2162, 0.5848", "304.941, 582.438, 51.7894, 0.5592", "304.147, 583.003, 50.9382, 0.5084", "303.158, 583.522, 50.3457, 0.4322", "302.349, 584.092, 50.5162, 0.4068", "301.565, 584.341, 50.2712, 0.356", "300.817, 584.551, 50.3412, 0.3304", "299.807, 584.536, 50.4708, 0.356", "298.908, 585.034, 50.4487, 0.3814", "297.993, 585.644, 50.1931, 0.4068", "297.148, 586.385, 49.8215, 0.356", "296.409, 587.053, 50.164, 0.3304", "295.685, 587.596, 50.2267, 0.3304", "295.023, 587.907, 48.9269, 0.356", "294.395, 588.49, 49.2999, 0.4068", "293.56, 589.091, 49.56, 0.4068", "292.871, 589.757, 48.6377, 0.3814", "292.027, 590.145, 47.88, 0.305", "291.093, 590.388, 47.5524, 0.2796", "290.171, 590.865, 47.7151, 0.305", "289.399, 591.663, 47.6249, 0.356", "288.472, 592.25, 46.8894, 0.356", "287.487, 592.433, 46.4198, 0.3304", "286.633, 592.363, 47.3278, 0.3304", "285.761, 592.529, 46.5828, 0.356", "285.131, 593.142, 46.2311, 0.3814", "284.602, 594.017, 46.4047, 0.3814", "283.814, 594.381, 45.2329, 0.3814", "282.869, 593.911, 45.3205, 0.3814", "281.914, 593.48, 45.36, 0.356", "280.814, 593.304, 44.9126, 0.356", "279.689, 593.181, 44.8, 0.3304", "278.65, 593.0, 44.807, 0.3304", "277.739, 592.742, 43.2547, 0.2796", "276.622, 592.752, 42.9946, 0.2796", "275.546, 592.935, 42.301, 0.2796", "274.413, 592.822, 42.28, 0.305", "273.297, 592.781, 42.0678, 0.2796", "272.378, 592.592, 41.7892, 0.2542", "271.492, 592.773, 42.28, 0.2288", "270.422, 593.05, 42.28, 0.2288", "269.278, 593.05, 42.28, 0.2542", "268.155, 593.135, 42.28, 0.2796", "267.457, 593.744, 43.2925, 0.305", "266.588, 593.951, 43.477, 0.2796", "265.656, 594.391, 44.24, 0.2542", "264.841, 594.422, 45.283, 0.2542", "264.509, 594.799, 47.0352, 0.2796", "264.188, 595.819, 46.7902, 0.305", "263.229, 595.795, 47.32, 0.2796", "262.087, 595.776, 47.3292, 0.2542", "261.291, 595.823, 47.1352, 0.2288", "260.568, 596.236, 47.2013, 0.2288", "259.766, 596.978, 47.4421, 0.2288", "258.766, 597.47, 47.6, 0.2288", "257.759, 597.912, 47.6, 0.2288", "257.131, 598.541, 48.2812, 0.2288", "256.031, 598.647, 48.5932, 0.2542", "255.06, 599.196, 49.0585, 0.305", "254.132, 599.71, 49.6247, 0.356", "253.278, 600.373, 49.8417, 0.356", "252.373, 601.023, 50.4, 0.305", "251.621, 601.757, 50.2303, 0.2542", "250.627, 602.128, 50.8606, 0.2288", "249.528, 602.375, 50.5963, 0.2288", "248.411, 602.545, 50.3266, 0.2288", "247.282, 602.649, 50.12, 0.2542", "246.158, 602.82, 49.9484, 0.2796", "245.272, 603.203, 48.8032, 0.305", "244.381, 603.57, 49.0, 0.2796", "244.095, 604.564, 49.28, 0.2796", "242.964, 604.651, 49.28, 0.2796", "242.344, 605.547, 49.2052, 0.305", "242.045, 606.633, 49.0, 0.2796", "241.615, 607.687, 49.0, 0.2542", "240.858, 608.46, 48.7057, 0.2288", "239.842, 608.344, 47.8274, 0.2288", "238.721, 608.3, 48.0844, 0.2288", "237.603, 608.488, 48.16, 0.2288", "236.586, 608.698, 47.782, 0.2796", "235.6, 609.086, 48.2261, 0.356", "234.581, 609.294, 48.914, 0.4322", "233.535, 608.951, 48.8009, 0.4576", "232.52, 609.286, 49.28, 0.4322", "231.995, 609.976, 48.6116, 0.4576", "231.43, 610.438, 49.56, 0.483" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "308.879, 571.86, 55.3778, 0.6356", "309.128, 572.586, 56.0, 0.5592", "309.228, 573.452, 56.84, 0.5592", "309.579, 574.429, 56.84, 0.5338", "309.991, 575.446, 57.0657, 0.5084", "309.989, 576.372, 56.2086, 0.5084", "310.558, 577.307, 56.2831, 0.5338", "311.048, 577.862, 57.0069, 0.5084", "311.347, 578.807, 56.2822, 0.5084", "311.51, 579.818, 57.0758, 0.5084", "311.924, 580.741, 56.2786, 0.5338", "311.968, 581.861, 56.0767, 0.5084", "312.308, 582.882, 56.56, 0.483", "312.149, 583.778, 57.3695, 0.4576", "312.287, 584.727, 57.3401, 0.483", "312.54, 585.575, 57.3082, 0.5084", "312.56, 586.558, 56.5614, 0.5084", "312.209, 587.47, 57.68, 0.483", "312.082, 588.567, 57.2743, 0.4322", "311.986, 589.594, 56.5746, 0.4068", "311.851, 590.535, 57.6461, 0.3304", "311.853, 591.66, 57.96, 0.305", "311.853, 592.804, 57.96, 0.305", "311.915, 593.911, 57.4935, 0.356", "311.872, 595.015, 57.5425, 0.3814", "311.61, 596.066, 57.925, 0.356", "311.413, 597.033, 57.5492, 0.3304", "311.224, 598.102, 57.3532, 0.2796", "311.167, 599.24, 57.4118, 0.2542", "311.112, 600.332, 57.96, 0.2288", "310.709, 601.3, 57.9771, 0.2288", "310.459, 602.373, 58.52, 0.2288", "309.951, 603.306, 59.3303, 0.2288", "309.379, 604.265, 59.6246, 0.2542", "308.861, 605.127, 59.92, 0.305", "308.307, 606.067, 59.92, 0.3814", "307.991, 607.121, 60.4915, 0.4322", "307.502, 608.088, 61.04, 0.4322", "306.727, 608.619, 60.6099, 0.4068", "305.932, 609.289, 61.1495, 0.3814", "305.42, 610.297, 61.376, 0.3814", "305.256, 611.367, 62.0278, 0.356", "305.094, 612.256, 62.72, 0.3304", "304.532, 613.026, 62.72, 0.305", "304.046, 613.399, 63.7501, 0.305", "303.241, 613.576, 63.3111, 0.305", "302.546, 614.141, 64.4445, 0.3304", "302.056, 614.959, 65.52, 0.356", "301.704, 616.041, 65.308, 0.356", "301.353, 617.111, 65.52, 0.356", "300.881, 617.83, 64.7581, 0.356", "300.32, 618.657, 64.1292, 0.4068", "300.182, 619.398, 65.7222, 0.3814", "299.647, 619.87, 66.92, 0.356", "299.396, 620.975, 66.64, 0.305", "299.269, 621.792, 66.4334, 0.3304", "299.181, 622.593, 67.3739, 0.4068", "298.959, 623.418, 66.96, 0.483", "298.964, 624.484, 66.6621, 0.5338", "298.836, 625.49, 67.6388, 0.5084", "298.351, 626.459, 68.3682, 0.4576", "298.189, 627.523, 68.2402, 0.3814", "297.502, 627.97, 66.8875, 0.305", "297.139, 628.866, 66.0716, 0.2542", "297.145, 629.928, 65.4007, 0.2542", "297.137, 630.939, 66.5218, 0.2796", "297.528, 631.744, 67.5214, 0.3304", "296.852, 632.289, 68.04, 0.3814", "296.549, 633.04, 67.389, 0.4576", "296.421, 633.867, 67.7634, 0.483", "296.651, 634.866, 68.2553, 0.4576", "296.551, 635.939, 68.9732, 0.4322", "296.746, 637.026, 68.6, 0.4576", "296.781, 637.827, 68.2531, 0.5592", "296.971, 638.748, 68.1534, 0.5848", "296.888, 639.747, 67.6066, 0.5592", "296.365, 640.637, 68.7512, 0.4576", "296.5, 641.499, 68.8139, 0.4322", "297.028, 642.301, 68.6949, 0.483", "297.096, 643.311, 68.0711, 0.5592", "297.279, 644.164, 67.6469, 0.6102", "297.631, 645.051, 68.3099, 0.5592", "297.532, 646.067, 68.2041, 0.4576", "297.424, 646.969, 67.949, 0.3304", "297.231, 648.087, 68.276, 0.2542", "296.775, 649.101, 68.6, 0.2288", "296.141, 649.912, 68.0431, 0.2542", "295.504, 650.768, 68.4023, 0.2796", "295.242, 651.821, 68.04, 0.305", "294.811, 652.573, 69.1569, 0.2796", "294.482, 653.648, 68.88, 0.2542", "294.059, 654.707, 68.8274, 0.2288", "293.737, 655.596, 67.6883, 0.2288", "293.21, 656.529, 66.9292, 0.2288", "292.919, 657.538, 67.2, 0.2288", "292.432, 658.453, 67.48, 0.2288", "291.59, 659.113, 67.8384, 0.2542", "290.986, 659.842, 68.7487, 0.305", "290.146, 660.514, 69.4884, 0.356", "289.461, 661.385, 69.6825, 0.356", "289.046, 661.906, 70.2083, 0.3304", "288.507, 661.701, 71.12, 0.3304", "287.762, 662.265, 71.9468, 0.3814", "287.456, 663.117, 72.1154, 0.4068", "286.977, 664.137, 72.3962, 0.4068", "286.246, 664.79, 73.2883, 0.4068", "285.354, 665.063, 72.543, 0.4322", "284.529, 665.14, 73.9441, 0.483", "283.784, 665.422, 74.3694, 0.4576", "283.067, 666.047, 75.04, 0.4322", "282.429, 666.037, 73.2892, 0.3304", "281.916, 666.421, 73.36, 0.2796", "281.052, 666.748, 74.4526, 0.2288", "280.508, 667.638, 74.48, 0.2288" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "331.746, 532.303, 47.2889, 0.5848", "332.449, 532.467, 47.336, 0.5084", "333.236, 533.123, 47.8229, 0.483", "333.723, 533.906, 47.8512, 0.483", "334.398, 534.655, 47.4597, 0.4322", "335.067, 535.093, 48.7925, 0.4322", "335.832, 535.596, 49.2327, 0.4322", "336.297, 535.621, 46.9468, 0.483" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "331.746, 532.303, 47.2889, 0.5848", "332.439, 531.506, 45.92, 0.4576", "333.41, 531.307, 45.4339, 0.483", "334.047, 531.881, 44.6236, 0.5338", "334.778, 532.187, 45.024, 0.5848", "335.684, 532.485, 45.5596, 0.5848", "336.344, 532.326, 46.48, 0.5338", "337.021, 531.922, 45.7332, 0.4322" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "312.951, 527.036, 44.298, 0.6356", "312.549, 527.748, 45.2203, 0.2542", "311.643, 527.821, 45.3253, 0.2542", "310.851, 527.041, 45.187, 0.2796", "310.314, 526.068, 44.6292, 0.356", "309.475, 525.44, 44.254, 0.4322", "308.437, 525.677, 44.142, 0.5338", "307.518, 526.305, 43.617, 0.5338", "306.495, 526.469, 42.709, 0.5084", "305.466, 526.086, 42.9713, 0.5084", "304.385, 525.731, 43.0982, 0.6102", "303.25, 525.722, 43.0122, 0.7372", "302.229, 526.092, 42.268, 0.788", "301.27, 526.547, 41.2213, 0.788", "300.159, 526.753, 40.9189, 0.7372", "299.027, 526.629, 41.0206, 0.6864", "297.902, 526.633, 41.5167, 0.6356", "296.834, 526.873, 40.789, 0.6102", "295.793, 526.964, 39.6595, 0.6102", "294.72, 526.718, 38.9197, 0.6102", "293.631, 526.884, 39.639, 0.6356", "292.499, 527.042, 39.7368, 0.661", "291.356, 527.045, 39.6074, 0.6864", "290.249, 527.075, 38.9122, 0.6102", "289.13, 527.264, 38.6372, 0.5084", "288.17, 527.866, 38.5157, 0.356", "287.164, 528.366, 38.0394, 0.305", "286.057, 528.573, 38.3832, 0.3304", "285.109, 529.192, 38.2976, 0.483", "284.286, 529.908, 37.4738, 0.6102", "283.335, 530.498, 36.918, 0.661", "282.355, 531.017, 37.5474, 0.6102", "281.421, 531.579, 38.3922, 0.5592", "280.572, 532.342, 38.353, 0.5338", "279.761, 533.038, 37.3652, 0.5084", "279.025, 533.836, 36.4801, 0.5338", "278.237, 534.647, 36.0769, 0.5338", "277.378, 535.206, 34.8312, 0.5592", "276.3, 535.47, 34.1701, 0.5084", "275.338, 536.088, 34.1538, 0.5338", "274.303, 536.469, 34.1096, 0.5592", "273.193, 536.229, 33.866, 0.6102", "272.115, 535.923, 33.4519, 0.5592", "270.999, 535.706, 33.6722, 0.5338", "269.885, 535.543, 33.5577, 0.483", "268.828, 535.168, 33.0644, 0.5084", "267.737, 534.872, 32.9613, 0.483", "266.611, 534.872, 32.6113, 0.5084", "265.527, 535.074, 31.9841, 0.5338", "264.48, 535.495, 31.556, 0.5848", "263.433, 535.88, 30.9666, 0.6102", "262.341, 536.132, 30.4791, 0.5848", "261.222, 536.193, 29.9342, 0.5848", "260.086, 536.193, 29.68, 0.5592", "258.942, 536.212, 29.68, 0.5848", "257.813, 536.362, 29.68, 0.5592", "256.694, 536.596, 29.68, 0.5592", "255.572, 536.811, 29.6808, 0.5084", "254.449, 537.023, 29.6853, 0.5084", "253.31, 537.108, 29.7147, 0.5084", "252.173, 537.108, 29.9398, 0.5338", "251.049, 537.106, 30.4455, 0.5084", "249.92, 537.091, 30.6894, 0.483", "248.803, 536.994, 30.254, 0.4576", "247.691, 536.919, 29.7564, 0.4576", "246.55, 536.919, 29.5602, 0.4576", "245.427, 536.848, 29.1264, 0.4322", "244.38, 537.062, 29.2365, 0.3814", "243.372, 537.563, 29.6159, 0.305", "242.397, 538.156, 29.5996, 0.2542", "241.695, 538.995, 29.167, 0.2796", "240.998, 539.848, 28.558, 0.3304", "239.989, 540.254, 28.3542, 0.4068", "238.85, 540.346, 28.3861, 0.3814", "237.752, 540.535, 27.9432, 0.356", "236.772, 541.06, 27.5369, 0.2796", "235.894, 541.789, 27.4884, 0.2796", "235.401, 542.773, 27.7589, 0.3304", "235.243, 543.888, 27.573, 0.4068", "234.942, 544.975, 27.2625, 0.4576", "234.479, 545.985, 26.6484, 0.4322", "233.757, 546.841, 26.3486, 0.4068", "232.853, 547.537, 26.2976, 0.3814", "231.858, 548.095, 26.1797, 0.3814", "230.849, 548.537, 25.5055, 0.3814", "229.792, 548.937, 25.223, 0.356", "228.754, 549.416, 25.1994, 0.305", "227.736, 549.937, 25.1978, 0.2796", "226.75, 550.516, 25.1863, 0.305", "225.937, 551.307, 25.1278, 0.4068", "225.421, 552.305, 24.7607, 0.4576", "225.216, 553.412, 24.3908, 0.483", "224.947, 554.514, 24.6109, 0.4322", "224.75, 555.618, 24.1867, 0.4322", "224.379, 556.692, 24.0825, 0.483", "223.422, 557.242, 24.08, 0.5848" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "312.951, 527.036, 44.298, 0.6356", "313.334, 528.228, 44.7846, 0.788", "313.973, 529.109, 45.1226, 0.7626", "315.013, 529.356, 44.3556, 0.6356", "316.061, 529.643, 43.5014, 0.5338", "316.716, 530.522, 43.1242, 0.4576", "316.373, 531.564, 42.9797, 0.5338", "316.388, 532.665, 42.32, 0.6356", "317.037, 533.588, 41.9994, 0.8136", "317.602, 534.582, 41.9392, 0.839", "317.7, 535.712, 41.6366, 0.7626" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "311.853, 510.338, 47.04, 0.6356", "311.684, 510.508, 49.1156, 0.839", "310.851, 510.25, 49.84, 0.7626", "309.787, 510.486, 49.5776, 0.661", "308.877, 510.783, 48.6965, 0.5848", "307.964, 510.44, 48.1911, 0.5338" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "311.853, 510.338, 47.04, 0.6356", "311.25, 509.183, 46.5444, 0.6102", "310.848, 508.164, 46.2521, 0.6864", "310.64, 507.367, 45.64, 0.661", "311.548, 506.715, 45.64, 0.6102" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "324.716, 531.567, 59.64, 0.6102", "325.439, 531.584, 58.6869, 0.5338", "326.517, 531.388, 58.522, 0.4068", "327.468, 531.212, 59.5868, 0.3304", "328.511, 530.918, 59.92, 0.2796", "329.012, 530.069, 60.2389, 0.305", "329.751, 529.749, 61.5829, 0.356", "330.654, 529.443, 62.6024, 0.4322", "331.678, 529.432, 63.28, 0.4576", "332.709, 529.134, 62.7494, 0.4576", "333.722, 528.757, 63.3816, 0.4576", "334.491, 528.676, 64.2034, 0.4576", "335.581, 528.642, 64.071, 0.5084", "336.313, 527.977, 64.1768, 0.5848", "337.236, 527.764, 64.3275, 0.6356", "337.707, 527.727, 66.3597, 0.6102", "338.644, 527.314, 66.6106, 0.6102", "339.433, 526.756, 66.4303, 0.6864", "340.168, 526.482, 67.3476, 0.7626", "340.651, 526.579, 69.5195, 0.7626", "341.658, 526.698, 70.2842, 0.6356", "342.693, 526.583, 69.6864, 0.5338", "343.776, 526.812, 69.9317, 0.4068", "344.815, 526.812, 71.027, 0.3814", "345.487, 527.384, 70.56, 0.3814" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "324.716, 531.567, 59.64, 0.6102", "325.12, 532.015, 59.36, 0.5338", "325.81, 532.649, 59.8704, 0.5848", "326.364, 533.248, 58.9963, 0.6102", "327.039, 533.886, 59.4241, 0.5848", "327.285, 534.77, 59.4532, 0.5084" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "322.024, 512.892, 54.549, 0.4068", "322.253, 512.649, 54.4368, 0.661", "323.292, 512.24, 54.2864, 0.7118", "324.18, 511.54, 54.0215, 0.661", "325.182, 511.104, 53.2417, 0.5084", "326.22, 510.628, 53.198, 0.4068", "327.359, 510.589, 53.1874, 0.356", "328.498, 510.704, 53.1143, 0.4068", "329.592, 510.96, 52.6198, 0.4322", "330.66, 510.787, 51.7177, 0.4576", "331.653, 510.711, 50.3432, 0.483", "332.672, 511.17, 49.7473, 0.5338", "333.704, 511.614, 49.224, 0.6102", "334.62, 512.198, 48.4327, 0.661", "335.754, 512.136, 48.1863, 0.661", "336.827, 511.986, 47.3127, 0.6356", "337.911, 512.072, 46.5133, 0.5592", "339.037, 511.908, 46.2686, 0.483", "340.141, 511.757, 45.6459, 0.3814", "341.25, 511.566, 45.339, 0.3814", "342.377, 511.715, 45.2138, 0.4576", "343.493, 511.654, 44.6793, 0.5848", "344.572, 511.787, 43.8147, 0.6102", "345.635, 512.002, 42.9302, 0.5592", "346.728, 512.187, 42.3086, 0.4576", "347.837, 512.392, 42.4334, 0.483", "348.944, 512.4, 43.0844, 0.5338", "350.08, 512.411, 43.379, 0.6102", "351.2, 512.462, 43.8864, 0.5338", "352.322, 512.552, 43.75, 0.4322", "353.366, 512.774, 43.1197, 0.3304", "354.383, 513.13, 43.1183, 0.3304", "355.515, 512.995, 43.1085, 0.4068", "356.631, 513.128, 43.0494, 0.483", "357.685, 513.536, 42.7283, 0.5338", "358.752, 513.873, 42.1918, 0.5084", "359.854, 514.161, 42.0, 0.4576", "360.954, 514.474, 42.0008, 0.3814", "362.074, 514.647, 42.0053, 0.3304", "363.194, 514.489, 42.0426, 0.305", "363.982, 513.829, 42.3066, 0.305", "364.371, 512.775, 42.3458, 0.305", "365.097, 512.122, 41.6349, 0.3304", "366.176, 512.149, 41.0278, 0.4068", "367.298, 512.243, 40.7812, 0.483", "368.312, 511.878, 40.273, 0.5338", "369.272, 511.298, 39.8286, 0.5084", "370.257, 510.718, 39.7351, 0.4576", "371.211, 510.09, 39.6388, 0.4068", "372.242, 509.742, 39.1471, 0.4068", "373.354, 509.814, 38.7243, 0.483", "374.484, 509.806, 38.64, 0.5592", "375.621, 509.69, 38.64, 0.5848", "376.742, 509.826, 38.6042, 0.5338", "377.789, 509.467, 38.4152, 0.483", "378.746, 508.932, 37.6452, 0.483", "379.86, 509.029, 37.4626, 0.5084", "380.975, 509.221, 37.0661, 0.5084", "382.068, 509.438, 36.4305, 0.4322", "383.193, 509.62, 36.234, 0.3304", "384.292, 509.51, 35.5309, 0.2542", "385.294, 508.975, 35.2845, 0.2542", "386.308, 508.446, 35.2738, 0.305", "387.432, 508.238, 35.236, 0.3814", "388.568, 508.137, 35.0132, 0.4068", "389.65, 508.022, 34.1614, 0.4322", "390.747, 507.724, 33.8836, 0.4322", "391.744, 507.305, 33.0327, 0.4576", "392.459, 506.457, 32.3495, 0.4576", "393.199, 505.604, 31.9418, 0.4576", "394.101, 504.902, 31.9343, 0.5084", "394.99, 504.182, 31.985, 0.5338", "395.796, 503.377, 32.1955, 0.5592", "396.543, 502.557, 32.6934, 0.5084", "397.119, 501.614, 32.0082, 0.483", "397.68, 500.618, 31.9214, 0.4576", "398.333, 499.679, 31.9267, 0.4576", "398.99, 498.743, 31.9547, 0.4576", "399.612, 497.794, 32.142, 0.4322", "400.026, 496.767, 32.7827, 0.3814", "400.374, 495.695, 32.7401, 0.3304", "401.042, 494.814, 32.1118, 0.3304", "401.881, 494.043, 31.92, 0.4068", "402.678, 493.233, 31.92, 0.4576", "403.651, 492.635, 31.9192, 0.4576", "404.679, 492.132, 31.9155, 0.4068", "405.703, 491.621, 31.8959, 0.4322", "406.709, 491.083, 31.7901, 0.5084", "407.246, 490.563, 31.253, 0.5338", "407.973, 490.023, 30.6309, 0.4576", "408.49, 489.051, 30.1154, 0.3304", "408.865, 488.935, 27.7992, 0.2542", "409.381, 488.292, 26.88, 0.2288", "410.123, 488.018, 27.4103, 0.2542", "410.577, 487.664, 29.0665, 0.3304", "411.467, 487.245, 29.3082, 0.4322", "412.327, 486.597, 29.3378, 0.5084", "413.188, 486.001, 30.1949, 0.5084", "413.88, 485.304, 30.45, 0.5084", "414.437, 484.78, 30.224, 0.5084", "414.93, 484.048, 28.6124, 0.5338", "415.678, 483.597, 28.2778, 0.483", "416.412, 483.506, 27.1412, 0.4068", "417.169, 483.184, 27.5164, 0.356", "417.693, 482.376, 26.971, 0.3814", "418.088, 481.748, 27.44, 0.5084", "419.108, 481.74, 27.8774, 0.5592", "420.053, 481.433, 26.8736, 0.6102", "420.68, 481.142, 26.0798, 0.5848", "421.605, 480.634, 26.3897, 0.6356", "422.629, 480.244, 25.9918, 0.661", "423.341, 479.913, 26.5675, 0.661", "424.273, 479.723, 26.0014, 0.6356", "425.107, 479.336, 26.2741, 0.5848", "425.661, 479.773, 28.0109, 0.5338", "426.387, 479.482, 27.5092, 0.5084", "427.117, 479.217, 26.0957, 0.5592", "427.619, 478.566, 24.7066, 0.661", "428.155, 477.641, 24.0604, 0.6864", "428.427, 476.727, 23.1048, 0.6356", "429.279, 476.247, 23.014, 0.5338", "430.316, 476.47, 23.2358, 0.5084", "431.278, 476.566, 23.0597, 0.5084", "432.295, 476.819, 23.2697, 0.5592", "433.036, 476.934, 24.6775, 0.5848", "433.664, 476.603, 22.7198, 0.5848", "434.697, 476.221, 22.1217, 0.5338", "435.49, 476.42, 22.3286, 0.483", "435.977, 476.656, 22.8242, 0.4576", "436.265, 476.361, 24.92, 0.4322", "436.9, 476.219, 24.152, 0.4068", "437.674, 476.318, 23.2677, 0.3814", "438.287, 475.586, 22.0489, 0.4322", "439.242, 475.588, 20.8986, 0.5084", "439.876, 476.215, 20.5134, 0.5848", "440.32, 477.241, 21.0, 0.6102", "440.884, 477.62, 21.2486, 0.5848", "441.495, 476.962, 21.5813, 0.5848", "442.177, 476.362, 20.9093, 0.5338", "443.053, 476.054, 20.3963, 0.483", "443.659, 476.302, 21.1868, 0.3814", "444.443, 476.247, 20.44, 0.356" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "322.024, 512.892, 54.549, 0.4068", "322.253, 512.324, 55.4753, 0.6102", "322.816, 511.56, 56.9512, 0.6356", "323.319, 510.646, 57.2902, 0.5848", "323.669, 509.566, 56.9453, 0.5338", "324.102, 508.553, 57.388, 0.483", "324.675, 507.57, 57.6836, 0.4322", "324.9, 506.449, 57.7086, 0.4068" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "301.877, 524.947, 52.481, 0.6864", "301.088, 525.916, 50.9855, 0.6864", "300.657, 526.754, 51.6911, 0.661", "299.976, 527.303, 52.3211, 0.6356", "299.543, 528.247, 52.3905, 0.5848", "299.5, 529.381, 52.5468, 0.5848", "299.146, 530.323, 51.8126, 0.5848", "298.594, 531.299, 51.5102, 0.6102", "298.589, 532.071, 51.6709, 0.6102", "298.125, 532.641, 50.7086, 0.5848", "297.828, 533.452, 50.1729, 0.5338", "297.45, 534.406, 49.6079, 0.4576", "297.147, 535.405, 49.5956, 0.4068", "297.287, 536.459, 50.0578, 0.4068" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "301.877, 524.947, 52.481, 0.6864", "301.481, 523.601, 52.0915, 0.8136", "300.686, 522.786, 52.0797, 0.8898", "299.625, 522.366, 52.0789, 0.839", "298.6, 521.857, 52.0736, 0.661", "297.79, 521.05, 52.0537, 0.5084" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "301.138, 516.707, 65.8, 0.5848", "300.999, 516.106, 65.8, 0.6864", "300.757, 515.126, 66.3628, 0.5338", "300.839, 514.155, 67.6875, 0.4068", "300.757, 513.062, 67.3879, 0.4068", "300.889, 512.145, 68.7196, 0.5084", "301.597, 511.433, 68.88, 0.6356", "301.989, 510.543, 69.2969, 0.661", "302.664, 509.862, 70.2134, 0.6864", "303.107, 509.088, 69.16, 0.6864", "303.72, 508.375, 70.3279, 0.661", "303.951, 507.372, 70.0017, 0.5084", "304.417, 506.873, 71.2673, 0.4068", "304.414, 506.055, 73.1237, 0.356", "304.675, 505.004, 73.6089, 0.356", "304.568, 503.946, 73.57, 0.356", "304.989, 503.131, 74.2, 0.356" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "301.138, 516.707, 65.8, 0.5848", "300.765, 516.308, 65.5729, 0.3814", "300.281, 515.944, 63.8694, 0.356", "299.369, 515.635, 64.6716, 0.356", "298.4, 515.593, 65.49, 0.4068", "297.568, 515.325, 67.0037, 0.4576", "296.677, 515.024, 68.1632, 0.4576", "295.64, 514.914, 68.1416, 0.356", "294.968, 514.23, 68.9301, 0.2796", "294.088, 513.601, 69.6394, 0.2542", "293.086, 513.77, 70.2915, 0.356", "292.366, 514.037, 71.12, 0.5338", "291.289, 513.992, 71.12, 0.6864", "290.503, 513.718, 71.7307, 0.6864", "289.747, 513.433, 73.0999, 0.5848", "288.661, 513.445, 73.36, 0.4576", "287.944, 513.455, 73.4404, 0.4322", "287.262, 513.616, 74.009, 0.3814", "286.525, 513.316, 75.2343, 0.356", "285.514, 513.18, 74.1541, 0.2796", "284.527, 513.317, 74.1882, 0.305", "283.608, 513.861, 74.2115, 0.3304", "282.83, 513.805, 75.3595, 0.4322", "281.812, 513.995, 75.7338, 0.4576", "280.838, 513.593, 76.3496, 0.5084", "279.749, 513.372, 75.999, 0.483", "278.768, 513.211, 77.1848, 0.483", "277.778, 512.964, 77.233, 0.4322", "276.743, 512.626, 77.5933, 0.3814", "276.36, 512.394, 79.4889, 0.305", "276.008, 511.649, 78.4308, 0.2796", "275.183, 511.306, 79.1456, 0.305", "274.171, 511.139, 78.8012, 0.4322", "273.421, 510.674, 79.3254, 0.5338", "272.473, 510.338, 79.8577, 0.6102", "271.579, 509.887, 80.4014, 0.5338", "270.888, 509.016, 80.705, 0.4322", "270.12, 508.283, 80.92, 0.305", "269.269, 507.822, 80.4185, 0.2796", "268.61, 507.362, 79.7532, 0.2796", "268.323, 506.694, 78.0438, 0.3304", "268.138, 505.908, 76.4201, 0.3304", "267.696, 505.333, 74.8983, 0.3304", "266.822, 504.836, 73.6742, 0.2796", "265.913, 504.733, 72.086, 0.2542", "265.536, 503.986, 70.5034, 0.2288", "265.396, 503.152, 69.5442, 0.2288", "265.275, 502.479, 68.5297, 0.2288", "264.835, 502.269, 66.3404, 0.2288", "264.285, 501.887, 64.2592, 0.2288", "263.39, 501.415, 63.6737, 0.2288", "263.348, 501.341, 60.9188, 0.2542", "262.959, 500.772, 59.1234, 0.305", "262.318, 500.315, 60.4271, 0.3814", "261.856, 499.414, 61.0215, 0.4322", "261.134, 498.591, 60.2773, 0.4576", "260.509, 497.846, 60.8703, 0.4576", "259.742, 497.328, 59.6487, 0.4322", "259.066, 496.853, 60.8563, 0.4068", "258.183, 496.303, 61.04, 0.3814", "257.322, 496.039, 61.2833, 0.3814", "256.345, 495.664, 61.04, 0.3814", "255.797, 494.867, 61.3225, 0.356", "255.438, 493.925, 61.8022, 0.3304", "254.506, 493.328, 62.1564, 0.305", "253.619, 492.918, 62.6503, 0.3304", "252.731, 492.292, 63.4553, 0.3814", "251.79, 491.696, 63.6633, 0.4068", "250.98, 491.017, 63.28, 0.3814", "249.857, 490.884, 63.4794, 0.305", "249.045, 490.253, 63.8257, 0.2542", "248.138, 489.886, 63.4981, 0.2288", "247.406, 489.268, 64.12, 0.2288", "246.284, 489.174, 64.12, 0.2288", "245.304, 488.8, 64.2802, 0.2542", "244.67, 488.082, 64.8264, 0.2796", "244.006, 487.315, 64.5453, 0.356", "243.148, 486.626, 64.68, 0.3814", "242.519, 485.846, 65.52, 0.4068", "241.58, 485.306, 65.3923, 0.356", "241.185, 484.34, 65.5598, 0.356", "240.134, 484.006, 65.52, 0.356", "239.135, 483.456, 65.4738, 0.356", "238.083, 483.101, 65.6572, 0.305", "237.251, 482.544, 66.0215, 0.2796", "236.121, 482.654, 66.08, 0.3304" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "336.297, 535.621, 46.9468, 0.483", "336.873, 535.866, 45.7246, 0.5592", "337.511, 536.537, 45.8525, 0.5084", "338.377, 537.139, 46.0835, 0.4322", "339.031, 537.815, 46.7239, 0.4322", "339.951, 538.138, 47.5101, 0.4322", "340.892, 538.138, 46.3568, 0.483", "341.888, 538.157, 46.8994, 0.483", "342.828, 538.324, 48.1499, 0.483", "343.881, 538.235, 47.2063, 0.4576", "344.84, 538.252, 47.9987, 0.4576", "345.355, 538.824, 48.412, 0.4576", "345.923, 538.863, 46.2328, 0.483", "346.748, 538.954, 47.3018, 0.5338", "347.741, 539.161, 47.5087, 0.5592", "348.068, 539.734, 48.16, 0.5084", "349.022, 539.957, 47.4309, 0.3814", "350.112, 540.129, 47.6, 0.305", "351.021, 540.227, 48.6942, 0.2796", "351.835, 540.55, 47.6588, 0.356", "352.605, 540.76, 46.2076, 0.3814", "353.561, 540.677, 47.32, 0.4322", "354.621, 540.988, 47.8489, 0.4068", "355.626, 540.911, 47.5784, 0.4576", "356.66, 540.883, 48.1715, 0.483", "357.616, 540.997, 48.3034, 0.5338", "358.624, 540.604, 48.0987, 0.5338", "359.388, 540.778, 47.04, 0.5338", "360.519, 540.677, 47.2363, 0.5338", "361.397, 540.764, 48.3263, 0.5084", "362.106, 540.932, 48.4756, 0.483", "362.709, 541.559, 47.9573, 0.4322", "363.562, 541.658, 48.4554, 0.4322", "364.143, 541.253, 49.8296, 0.4068", "365.081, 541.159, 48.9079, 0.4322", "366.107, 541.03, 48.7332, 0.4068", "367.155, 541.305, 48.7298, 0.4576", "368.076, 541.923, 48.3216, 0.483", "369.074, 542.256, 48.0525, 0.5084", "370.131, 542.323, 47.5194, 0.4322", "371.021, 542.717, 47.7568, 0.356", "371.809, 543.06, 48.6707, 0.3304", "372.81, 543.4, 48.4523, 0.3814", "373.934, 543.466, 48.44, 0.4322", "374.784, 543.514, 48.3739, 0.4322", "375.874, 543.708, 48.0326, 0.3814", "376.946, 543.99, 47.4418, 0.305", "378.051, 544.153, 46.9087, 0.2796", "379.165, 544.147, 46.8286, 0.305", "379.861, 544.626, 45.6686, 0.3814", "380.564, 545.195, 45.0562, 0.4322", "381.592, 545.079, 44.5452, 0.4322", "382.368, 545.725, 45.0699, 0.3814", "383.117, 545.982, 43.7024, 0.3304", "384.202, 545.964, 42.9332, 0.3304", "385.275, 546.246, 43.3745, 0.3814", "386.187, 546.603, 42.9537, 0.4068", "387.266, 546.905, 43.0702, 0.4068", "388.072, 547.29, 42.5141, 0.3814", "389.064, 547.708, 42.0146, 0.4068", "389.915, 548.35, 42.698, 0.4068", "390.44, 548.788, 42.7078, 0.4068", "391.043, 549.539, 42.0095, 0.356", "391.681, 550.215, 42.359, 0.356", "392.349, 550.938, 41.9412, 0.356", "393.329, 551.098, 41.4943, 0.4068", "394.421, 551.302, 41.2233, 0.4576", "395.339, 551.419, 41.9594, 0.483", "396.356, 551.732, 41.1628, 0.483", "397.174, 552.187, 41.4467, 0.4068", "398.118, 552.677, 42.1551, 0.356", "399.121, 552.665, 41.456, 0.2796", "400.23, 552.634, 41.4747, 0.2542", "401.172, 553.005, 42.0294, 0.2288", "402.104, 553.216, 43.12, 0.2288", "403.194, 553.238, 43.587, 0.2288", "403.995, 553.555, 45.1382, 0.2288", "404.936, 553.204, 45.8013, 0.2288", "406.047, 553.198, 45.9483, 0.2542", "407.057, 553.558, 46.7617, 0.2796", "407.845, 553.914, 47.838, 0.3304", "408.612, 554.649, 47.6, 0.3304", "408.801, 555.775, 47.6, 0.3304", "408.873, 556.879, 47.5317, 0.305", "409.415, 557.794, 48.16, 0.3304", "409.352, 558.815, 47.9531, 0.3814", "408.743, 559.715, 47.9251, 0.4322", "408.066, 560.147, 48.5887, 0.4322", "407.353, 560.739, 49.2008, 0.3814", "406.919, 561.275, 49.84, 0.305", "406.28, 562.103, 50.0464, 0.2542", "405.561, 562.941, 50.4515, 0.2288", "404.564, 563.429, 50.1315, 0.2288", "403.947, 564.08, 50.9258, 0.2796", "403.18, 564.467, 50.68, 0.356", "402.21, 564.776, 51.0152, 0.4322", "401.637, 565.198, 52.36, 0.483", "401.886, 565.594, 50.96, 0.5084" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "336.297, 535.621, 46.9468, 0.483", "336.517, 536.196, 47.3592, 0.5338", "336.68, 537.309, 47.3382, 0.5084", "336.692, 538.443, 47.1646, 0.4576", "336.772, 539.578, 47.4244, 0.4576", "337.132, 540.63, 47.6, 0.4576", "337.77, 541.581, 47.6, 0.5084", "338.383, 542.544, 47.5997, 0.5084", "339.012, 543.495, 47.5983, 0.5338", "339.744, 544.373, 47.5922, 0.5338", "340.407, 545.299, 47.5602, 0.5084", "340.909, 546.318, 47.3511, 0.4576", "341.218, 547.375, 46.7174, 0.4322", "341.468, 548.42, 46.7348, 0.4068", "341.73, 549.494, 47.0044, 0.4068", "341.902, 550.617, 46.7015, 0.3304", "341.901, 551.752, 46.6852, 0.3304", "342.145, 552.84, 46.6603, 0.356", "342.714, 553.805, 47.0207, 0.4576", "343.238, 554.784, 46.7426, 0.483", "343.888, 555.706, 46.4584, 0.4576", "344.677, 556.529, 46.2812, 0.3814", "345.464, 557.255, 45.402, 0.3304", "345.74, 558.047, 43.6674, 0.3304", "346.35, 558.913, 43.517, 0.3814", "347.245, 559.578, 44.0398, 0.4576", "348.178, 560.234, 44.0286, 0.483", "348.965, 561.003, 43.3227, 0.5084", "349.675, 561.887, 43.0447, 0.483", "350.362, 562.773, 42.5029, 0.5338", "350.739, 563.827, 42.0297, 0.5084", "350.364, 564.885, 41.9546, 0.5084", "349.522, 565.646, 41.7315, 0.4322", "349.137, 566.619, 40.6484, 0.4576", "349.367, 567.676, 39.7592, 0.5084", "349.216, 568.804, 39.5486, 0.5848", "349.326, 569.884, 38.7103, 0.6102", "349.8, 570.849, 37.8291, 0.5848", "349.81, 571.979, 37.5105, 0.5338", "349.533, 573.084, 37.4564, 0.4576", "349.576, 574.217, 37.1832, 0.4322", "349.843, 575.288, 36.4826, 0.4322", "350.093, 576.401, 36.3252, 0.4322", "350.458, 577.476, 36.0366, 0.3814", "350.741, 578.525, 35.3592, 0.356", "350.439, 579.619, 35.28, 0.3814", "350.018, 580.666, 35.28, 0.4576", "350.15, 581.79, 35.28, 0.5084", "350.384, 582.91, 35.28, 0.5338", "350.63, 584.028, 35.2797, 0.5338", "351.063, 585.081, 35.2778, 0.5338", "351.515, 586.132, 35.2674, 0.5338", "351.667, 587.252, 35.1921, 0.5084", "351.426, 588.338, 34.7245, 0.5338", "351.184, 589.444, 34.372, 0.5592", "350.932, 590.541, 34.7368, 0.6356", "350.881, 591.653, 34.377, 0.6356", "350.965, 592.788, 34.1603, 0.6864", "351.336, 593.86, 34.0446, 0.7118", "351.86, 594.85, 33.5317, 0.7626", "352.535, 595.754, 33.1086, 0.7118", "353.278, 596.621, 33.04, 0.6356", "353.828, 597.618, 33.04, 0.5084", "354.042, 598.733, 33.04, 0.4322", "354.073, 599.875, 33.04, 0.4068", "354.107, 601.019, 33.0397, 0.4576", "354.334, 602.136, 33.0389, 0.5338", "354.59, 603.251, 33.0322, 0.5592", "354.983, 604.324, 32.9938, 0.5592", "355.553, 605.31, 32.8174, 0.483", "355.861, 606.365, 32.1314, 0.4068", "355.888, 607.498, 31.9438, 0.3304", "355.839, 608.64, 31.9847, 0.356", "355.577, 609.738, 32.3635, 0.4322", "355.427, 610.847, 32.9347, 0.5084", "355.254, 611.974, 32.8698, 0.5338", "354.894, 613.023, 32.2291, 0.5338", "354.344, 614.018, 31.9906, 0.5338", "353.79, 615.014, 32.1647, 0.5084", "353.382, 616.041, 32.8756, 0.483", "352.709, 616.956, 33.035, 0.483", "351.952, 617.814, 33.0526, 0.5338", "351.462, 618.842, 33.1159, 0.6356", "351.71, 619.931, 33.5507, 0.6864", "352.031, 621.004, 34.12, 0.7118", "352.134, 622.141, 34.071, 0.661", "351.731, 623.194, 33.6081, 0.661", "351.138, 624.148, 33.0772, 0.6102", "350.717, 625.185, 33.0512, 0.5848", "350.003, 626.367, 33.2408, 0.6356", "349.501, 627.255, 33.1937, 0.6864", "349.148, 628.027, 32.9174, 0.6356", "348.716, 629.008, 32.86, 0.5338", "347.725, 629.364, 33.4085, 0.4576", "347.102, 629.96, 33.8629, 0.5084", "346.059, 630.192, 33.4538, 0.5338", "345.292, 630.662, 32.48, 0.5592", "344.312, 630.927, 33.3589, 0.5084", "343.557, 631.258, 34.454, 0.5084", "342.768, 631.488, 34.5181, 0.5084", "341.762, 631.831, 34.5251, 0.5592", "340.768, 631.812, 34.5587, 0.5848", "339.754, 631.819, 34.8754, 0.5848", "338.694, 631.602, 35.5505, 0.5338", "337.933, 631.716, 34.788, 0.483", "336.897, 631.808, 35.3623, 0.483", "335.912, 631.488, 35.0182, 0.5084", "335.132, 631.442, 36.1242, 0.5084", "334.264, 631.894, 35.9327, 0.4576", "333.288, 631.936, 35.532, 0.4068", "332.533, 631.488, 33.9954, 0.356", "331.741, 631.837, 35.2607, 0.3304", "330.765, 632.112, 35.7479, 0.305", "330.13, 632.26, 36.4353, 0.305", "329.304, 632.598, 37.177, 0.3304", "328.568, 633.069, 37.6989, 0.3304", "328.495, 634.005, 37.5645, 0.3304", "328.439, 633.737, 39.6693, 0.2796", "327.593, 634.15, 40.3351, 0.2542", "326.93, 634.208, 41.72, 0.2796", "326.268, 634.847, 41.372, 0.356", "326.013, 635.595, 42.0, 0.4322", "324.953, 635.498, 41.5055, 0.4322", "324.434, 636.412, 41.1653, 0.4068", "323.823, 637.302, 41.9913, 0.3814", "323.075, 637.998, 42.4578, 0.3814", "322.306, 638.678, 42.17, 0.4068", "321.669, 639.233, 41.3974, 0.4322", "320.849, 639.826, 41.1967, 0.483", "319.861, 639.725, 40.6, 0.483" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "337.021, 531.922, 45.7332, 0.4322", "336.691, 532.105, 45.4992, 0.4576", "336.723, 532.97, 45.6128, 0.4322", "337.248, 533.104, 44.3568, 0.356", "336.933, 533.819, 43.6724, 0.356", "337.052, 534.631, 44.8736, 0.356", "337.377, 535.662, 45.3426, 0.4322", "337.855, 536.465, 45.92, 0.5084", "337.723, 537.192, 44.3988, 0.5592", "337.727, 537.909, 43.12, 0.5338", "338.242, 538.714, 42.4253, 0.4576", "339.219, 538.829, 42.5589, 0.4576", "340.229, 539.14, 42.5029, 0.4576", "340.339, 540.038, 42.9254, 0.483", "340.441, 540.13, 40.8694, 0.4322", "340.826, 541.099, 40.04, 0.4322", "341.483, 541.722, 40.2256, 0.4068", "342.134, 542.409, 40.6011, 0.4322", "342.641, 542.588, 39.2389, 0.5084", "342.741, 543.63, 38.974, 0.5592", "342.918, 544.434, 38.1147, 0.5338", "343.283, 544.789, 36.2774, 0.483", "343.848, 545.401, 37.7695, 0.5338", "344.108, 546.155, 36.7489, 0.5848", "344.365, 547.197, 36.9289, 0.6102", "344.934, 548.041, 36.8438, 0.5084", "345.327, 548.654, 35.2691, 0.4576", "345.516, 549.466, 34.7418, 0.483", "345.701, 550.035, 32.8502, 0.5592", "346.434, 550.663, 32.5623, 0.6102", "346.86, 551.25, 33.8489, 0.5848", "346.904, 552.203, 32.7908, 0.5338", "347.117, 552.945, 31.3323, 0.483", "347.241, 553.888, 31.6403, 0.4576", "347.8, 554.729, 32.8605, 0.4576", "347.661, 555.516, 33.3169, 0.4322", "347.427, 556.293, 31.7923, 0.3814", "347.234, 557.233, 31.08, 0.3304", "346.986, 558.137, 31.0828, 0.2796", "346.86, 558.581, 29.6906, 0.2542", "346.964, 559.704, 29.3502, 0.2542", "346.751, 560.487, 27.9356, 0.2796", "347.203, 561.09, 28.7417, 0.3304", "346.749, 561.665, 28.5317, 0.3304", "346.517, 562.492, 27.2602, 0.356", "346.446, 563.383, 28.8778, 0.356", "346.218, 564.227, 28.1607, 0.4322", "346.059, 565.23, 27.7852, 0.5084", "345.794, 566.163, 28.7451, 0.6102", "345.487, 566.964, 27.9588, 0.6102", "344.857, 567.537, 27.552, 0.5338", "344.572, 567.808, 25.8521, 0.4068", "344.718, 568.535, 24.6249, 0.3304", "344.748, 569.534, 24.9413, 0.305", "344.802, 570.346, 26.5566, 0.2796", "344.914, 570.89, 28.2156, 0.2542", "344.129, 571.428, 27.1298, 0.2542", "343.615, 571.793, 28.2582, 0.3304", "343.01, 572.239, 26.9811, 0.4068", "342.52, 572.761, 28.2058, 0.4576", "342.627, 573.589, 29.7461, 0.4576", "342.261, 574.494, 29.2186, 0.483", "341.941, 575.119, 27.3809, 0.5084", "342.055, 575.994, 25.7928, 0.5084", "341.81, 576.658, 26.9478, 0.483", "341.146, 577.351, 26.6602, 0.4576", "340.967, 578.036, 25.5396, 0.483", "340.808, 578.969, 26.7039, 0.5338", "340.869, 579.983, 26.1794, 0.6102", "340.856, 580.97, 26.6207, 0.6102", "341.196, 581.619, 26.0543, 0.5592", "341.351, 582.406, 24.7747, 0.4576", "341.597, 583.347, 24.7145, 0.4068", "341.741, 584.148, 25.2941, 0.3814", "342.163, 584.983, 24.6669, 0.3814", "342.759, 585.806, 24.7173, 0.4068", "343.58, 586.531, 24.8525, 0.4322", "344.128, 586.632, 23.2305, 0.4576", "344.412, 587.101, 21.6157, 0.4322", "345.102, 587.747, 20.72, 0.3814", "345.463, 588.301, 21.1473, 0.305", "345.432, 589.273, 22.071, 0.2796", "345.686, 590.295, 22.68, 0.2796", "345.828, 591.033, 24.2046, 0.305", "346.296, 591.441, 24.5039, 0.305", "346.647, 591.671, 22.9936, 0.356", "346.167, 592.266, 21.3483, 0.4068", "345.716, 592.989, 21.6037, 0.4576", "345.373, 593.742, 21.1022, 0.4322", "345.79, 594.671, 20.4039, 0.4068", "346.386, 595.462, 21.1249, 0.3814", "346.594, 596.445, 21.4654, 0.3814", "347.377, 596.983, 20.2625, 0.3814", "348.182, 597.528, 20.4996, 0.356", "348.847, 597.74, 20.7306, 0.305", "349.283, 598.427, 20.239, 0.305", "349.949, 598.758, 20.7808, 0.3304", "350.31, 599.669, 20.2292, 0.4068", "351.095, 600.349, 21.2657, 0.3814", "351.89, 600.716, 20.0077, 0.3814", "352.698, 601.283, 19.7669, 0.3304", "353.44, 601.965, 19.5849, 0.356", "354.275, 602.701, 19.8033, 0.356", "354.871, 603.593, 19.3662, 0.4068", "355.531, 604.344, 19.854, 0.4322", "356.284, 604.674, 19.6482, 0.4322", "356.546, 605.392, 20.5738, 0.4068", "356.584, 605.405, 23.3366, 0.356", "356.181, 605.702, 25.639, 0.3304", "356.014, 606.325, 27.4218, 0.2796", "356.12, 606.868, 29.6604, 0.2542", "356.508, 607.375, 31.6246, 0.2288", "356.901, 608.349, 31.5076, 0.2288", "357.249, 609.402, 31.64, 0.2288", "357.385, 610.53, 31.64, 0.2288", "357.577, 611.649, 31.64, 0.2288", "357.621, 612.791, 31.64, 0.2288", "358.672, 613.0, 31.64, 0.2288", "359.198, 613.963, 31.64, 0.2288", "359.567, 614.93, 31.5092, 0.2288", "360.245, 615.78, 31.36, 0.2288", "361.019, 616.159, 30.6023, 0.2288", "361.55, 616.466, 28.9279, 0.2796", "362.344, 616.942, 29.12, 0.3304", "362.762, 617.882, 29.867, 0.4068", "363.037, 618.619, 28.28, 0.4322", "363.996, 619.181, 28.1028, 0.5084", "364.76, 619.836, 28.3374, 0.5592", "365.408, 620.589, 28.4852, 0.6356", "366.108, 621.345, 28.4259, 0.6356", "366.246, 621.421, 26.7604, 0.661", "366.523, 622.26, 26.2058, 0.6356", "366.894, 623.319, 25.9406, 0.661", "365.957, 623.086, 24.4037, 0.6356", "364.888, 622.859, 23.6639, 0.5848", "363.824, 622.679, 23.672, 0.5592", "363.036, 622.719, 21.8025, 0.5338", "362.239, 623.137, 22.1838, 0.5338", "362.178, 623.903, 23.5043, 0.5592", "361.512, 624.624, 22.7811, 0.5338", "360.58, 624.187, 23.1692, 0.5338", "359.681, 623.823, 23.3332, 0.483", "358.627, 623.823, 22.7545, 0.5338", "358.304, 624.395, 21.56, 0.5338", "357.244, 624.284, 21.0, 0.5848", "356.426, 624.149, 21.4452, 0.5592", "355.783, 624.51, 20.16, 0.5338" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "337.021, 531.922, 45.7332, 0.4322", "337.582, 531.731, 44.52, 0.5084", "338.59, 531.32, 44.0692, 0.4068", "339.677, 531.057, 43.96, 0.4322", "340.684, 531.398, 43.8805, 0.5084", "341.602, 531.719, 43.265, 0.6102", "342.682, 531.599, 43.3527, 0.6356", "343.754, 531.507, 42.9892, 0.6102", "344.399, 531.305, 44.7916, 0.5338", "345.258, 531.374, 43.9334, 0.5084", "345.937, 531.642, 44.24, 0.483", "346.616, 532.037, 44.3626, 0.483", "346.906, 531.379, 43.0371, 0.4322", "347.696, 531.045, 41.7987, 0.4576", "348.781, 530.889, 41.606, 0.5084", "349.748, 530.389, 42.0, 0.5848", "350.42, 529.995, 43.0091, 0.5592", "351.099, 529.36, 42.1534, 0.5084", "352.122, 529.329, 42.0, 0.4576" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "317.7, 535.712, 41.6366, 0.7626", "317.501, 536.305, 41.5643, 0.661", "318.441, 536.456, 40.6, 0.6102", "318.859, 536.955, 38.9612, 0.5592", "319.426, 536.838, 36.96, 0.5084", "320.342, 536.765, 37.2938, 0.4576", "320.937, 537.19, 38.6165, 0.4068", "321.749, 537.038, 37.2011, 0.4068", "322.755, 537.326, 36.68, 0.483", "323.572, 537.806, 36.0298, 0.5592", "324.309, 537.512, 34.4926, 0.6102", "325.123, 536.898, 34.734, 0.6356", "325.664, 536.593, 36.2505, 0.6864", "326.526, 536.765, 36.8998, 0.7626", "327.475, 536.645, 35.9621, 0.8136", "328.317, 536.536, 35.4864, 0.839", "328.638, 536.75, 33.4071, 0.8136", "329.573, 537.005, 33.1198, 0.7626", "330.035, 537.566, 31.6996, 0.7118", "330.421, 538.482, 32.1359, 0.661", "331.213, 538.945, 32.8454, 0.6102", "332.112, 539.396, 32.7054, 0.5084", "332.903, 539.354, 31.0699, 0.4576", "333.238, 539.776, 29.1298, 0.4576", "333.942, 539.974, 28.4374, 0.5338", "334.569, 539.708, 28.0, 0.5592", "335.654, 539.777, 27.3652, 0.5592", "336.588, 539.478, 26.32, 0.5338", "337.538, 539.638, 26.9886, 0.5592", "337.932, 540.479, 26.3511, 0.5592", "338.642, 541.088, 27.1289, 0.5338", "339.513, 541.634, 27.5366, 0.483", "340.191, 542.027, 27.0102, 0.4322", "341.11, 541.684, 26.4225, 0.4322", "341.724, 541.495, 25.4528, 0.3814", "342.359, 542.138, 25.0379, 0.4068", "343.262, 542.091, 24.7806, 0.4068", "344.255, 541.824, 23.9865, 0.5084", "344.943, 542.246, 23.5346, 0.5592", "345.373, 542.897, 24.0114, 0.6102", "346.078, 543.503, 22.96, 0.5848", "346.631, 543.877, 24.3062, 0.5848", "346.87, 544.8, 24.0173, 0.5848", "347.367, 545.314, 22.6724, 0.6102", "348.123, 546.018, 21.8215, 0.5592", "348.866, 546.615, 22.2068, 0.483", "349.024, 547.262, 23.6852, 0.4068", "349.726, 547.914, 23.338, 0.3814", "350.284, 548.867, 22.96, 0.4068", "351.066, 549.448, 22.68, 0.4068", "351.364, 550.035, 21.6292, 0.3814", "352.008, 549.494, 21.3651, 0.3304", "352.46, 550.126, 20.3874, 0.3304", "352.989, 550.675, 21.5032, 0.3814", "353.787, 550.846, 21.8369, 0.4322", "354.856, 551.193, 22.1183, 0.4576", "355.713, 551.795, 21.4816, 0.483", "356.688, 552.074, 20.8648, 0.483", "357.586, 552.562, 20.9983, 0.483", "358.379, 553.15, 19.9424, 0.4068", "359.447, 553.346, 20.1662, 0.3814", "360.532, 553.433, 19.906, 0.356", "361.473, 553.707, 19.8853, 0.3814", "362.12, 554.274, 20.5246, 0.356", "363.141, 554.453, 20.5859, 0.305", "364.123, 554.626, 20.1382, 0.2542", "364.873, 554.76, 19.3466, 0.2796", "365.507, 555.412, 19.32, 0.3304" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "317.7, 535.712, 41.6366, 0.7626", "317.485, 536.138, 41.8908, 0.4068", "317.162, 537.188, 42.362, 0.4322", "317.377, 538.261, 42.2996, 0.483", "317.931, 539.248, 41.9398, 0.5084", "318.463, 540.235, 41.4988, 0.5592", "319.011, 541.205, 40.9774, 0.5592", "319.682, 542.128, 40.9206, 0.6102", "320.351, 543.043, 41.1636, 0.5848", "320.934, 543.994, 41.7696, 0.6356", "321.444, 544.971, 42.4995, 0.6102", "321.952, 545.964, 43.0945, 0.661", "322.615, 546.847, 43.7338, 0.661", "323.37, 547.676, 44.1613, 0.6356", "324.039, 548.596, 44.1235, 0.5848", "324.718, 549.474, 43.6078, 0.5084", "325.48, 550.265, 42.8285, 0.5084", "326.049, 551.203, 42.7353, 0.5084", "326.476, 552.258, 42.9402, 0.5592", "327.081, 553.185, 42.518, 0.5848", "327.74, 554.097, 42.1341, 0.5848", "328.426, 555.007, 42.2173, 0.5848", "329.04, 555.921, 42.8733, 0.5592", "329.574, 556.864, 43.7713, 0.5848", "330.144, 557.829, 44.1876, 0.5084", "330.633, 558.859, 44.24, 0.4576", "331.043, 559.926, 44.24, 0.356", "331.489, 560.979, 44.24, 0.3814", "332.131, 561.916, 44.24, 0.4322", "332.775, 562.857, 44.2403, 0.5338", "333.342, 563.851, 44.2425, 0.5848", "333.826, 564.885, 44.2543, 0.5848", "334.428, 565.851, 44.3145, 0.5338", "335.212, 566.666, 44.6242, 0.4576", "335.965, 567.502, 45.08, 0.4322", "336.556, 568.449, 44.7983, 0.4322", "336.993, 569.49, 44.4044, 0.483", "337.42, 570.539, 44.62, 0.483", "337.736, 571.632, 44.7348, 0.483", "338.416, 572.497, 45.0962, 0.4576", "339.02, 573.441, 44.8216, 0.483", "339.595, 574.409, 44.3296, 0.483", "340.188, 575.384, 44.2621, 0.4576", "341.098, 576.052, 44.4074, 0.4068", "341.85, 576.852, 45.1265, 0.4322", "342.129, 577.94, 45.3446, 0.5338", "342.012, 579.072, 45.3474, 0.6356", "342.16, 580.203, 45.2581, 0.661", "342.247, 581.222, 44.3139, 0.6102", "342.171, 582.163, 45.4384, 0.5592", "342.789, 582.838, 45.3603, 0.5084", "343.443, 582.987, 44.8624, 0.4576", "344.054, 583.773, 44.5416, 0.4068", "344.561, 584.789, 44.6883, 0.4322", "345.057, 585.649, 44.3388, 0.5084", "345.812, 586.466, 44.1773, 0.5848", "346.378, 587.101, 42.8862, 0.5848", "347.328, 587.468, 42.5037, 0.5084", "348.261, 587.466, 43.3804, 0.4576", "348.696, 588.118, 41.8953, 0.4322", "349.079, 588.986, 41.7505, 0.483", "349.764, 589.675, 42.28, 0.483", "350.184, 590.426, 42.6594, 0.4576", "350.45, 591.482, 43.4888, 0.4068", "350.749, 592.482, 43.6582, 0.356", "350.696, 593.069, 41.5604, 0.3304", "350.851, 593.393, 40.04, 0.3304", "351.538, 593.368, 39.8535, 0.3814", "351.936, 594.339, 40.4617, 0.4576", "352.695, 594.979, 40.2774, 0.5084", "353.203, 595.66, 39.76, 0.5338", "353.93, 596.305, 38.9388, 0.5592", "354.481, 596.997, 38.2906, 0.5592", "355.002, 597.868, 38.6585, 0.5592", "355.547, 598.427, 37.7639, 0.5084", "356.228, 598.276, 36.2233, 0.483", "357.148, 598.41, 36.1749, 0.4576", "357.895, 599.032, 35.1126, 0.4322", "358.668, 599.367, 34.8578, 0.4068", "359.106, 600.075, 33.6258, 0.3814", "359.573, 600.718, 33.3505, 0.4068", "360.529, 601.236, 33.4964, 0.4322", "361.59, 601.463, 33.6, 0.4322", "362.497, 601.897, 32.7603, 0.4068", "363.128, 602.657, 33.3032, 0.4068", "362.999, 603.469, 32.3176, 0.4576", "363.832, 604.014, 31.8161, 0.5084", "364.69, 604.492, 30.9501, 0.5084", "365.516, 605.062, 30.2462, 0.5084", "366.581, 605.176, 31.087, 0.5084", "367.413, 605.635, 31.0862, 0.5592", "368.039, 606.207, 31.1105, 0.5592", "368.767, 606.969, 30.7591, 0.5338", "369.44, 607.584, 30.7112, 0.4322", "370.242, 608.011, 29.9838, 0.356", "370.79, 608.566, 30.2117, 0.305", "371.425, 609.295, 30.2254, 0.3304", "372.447, 609.294, 30.4732, 0.356", "373.45, 609.681, 30.7793, 0.3814", "374.28, 610.427, 30.6312, 0.3814", "374.838, 610.221, 29.3098, 0.3814", "375.767, 610.592, 29.0581, 0.3814", "376.375, 611.481, 29.4036, 0.356", "376.429, 612.606, 29.3801, 0.305", "376.489, 613.742, 29.153, 0.2542", "376.597, 614.825, 28.5737, 0.2288", "377.061, 615.582, 27.72, 0.2542", "377.073, 616.708, 27.9964, 0.3304", "377.162, 617.266, 26.6028, 0.4576", "376.597, 617.94, 26.2878, 0.5592", "376.198, 618.779, 25.4299, 0.6102", "376.396, 619.669, 25.027, 0.5848", "376.833, 620.578, 24.7178, 0.5592", "377.326, 621.446, 24.6644, 0.5338", "378.101, 622.21, 24.7173, 0.5338", "378.205, 623.226, 24.8041, 0.5848", "378.205, 624.333, 24.1413, 0.5848", "378.549, 625.297, 23.8011, 0.5848", "378.777, 626.041, 21.8641, 0.483", "378.967, 626.812, 22.4882, 0.4576", "379.641, 627.484, 22.9485, 0.4576", "379.956, 628.364, 23.4573, 0.5084", "380.495, 629.096, 22.5823, 0.5338", "380.976, 629.85, 21.5278, 0.5084", "381.067, 630.899, 21.551, 0.483", "380.973, 632.032, 21.5421, 0.4576", "380.946, 633.044, 21.1042, 0.4322", "380.507, 633.88, 21.84, 0.4068", "380.498, 635.0, 21.8008, 0.4068", "380.5, 636.047, 21.3077, 0.483", "380.379, 636.861, 22.12, 0.5848", "380.171, 637.96, 22.3978, 0.661", "380.787, 638.747, 23.2392, 0.6356", "381.452, 639.525, 23.4077, 0.5338", "381.038, 640.1, 25.1233, 0.3814", "380.837, 640.761, 27.0595, 0.2796", "381.505, 641.203, 27.0183, 0.2288", "382.191, 641.779, 25.555, 0.2288", "382.324, 642.409, 23.4595, 0.2288", "382.805, 642.756, 24.9606, 0.2542", "382.434, 643.44, 25.0471, 0.305", "381.758, 643.443, 23.2235, 0.356", "382.473, 643.215, 21.9181, 0.356", "383.185, 643.865, 22.974, 0.305", "384.04, 643.921, 23.5346, 0.2542", "384.303, 643.654, 21.562, 0.2796", "385.101, 643.378, 22.5767, 0.356", "385.812, 643.508, 23.7737, 0.4576", "386.366, 644.102, 23.52, 0.483", "387.03, 644.644, 24.0293, 0.483", "387.76, 644.742, 22.3891, 0.4576", "388.59, 645.01, 23.3083, 0.483", "389.478, 645.476, 24.3446, 0.5338", "390.253, 645.858, 23.2624, 0.6102", "390.9, 646.774, 23.24, 0.6356", "391.372, 647.777, 23.788, 0.6356", "391.663, 648.419, 22.7592, 0.5848", "392.044, 649.087, 22.6733, 0.5592", "392.342, 649.476, 24.5692, 0.483", "393.06, 650.215, 24.2726, 0.4322", "393.192, 650.728, 22.8897, 0.4068", "393.58, 651.309, 24.4104, 0.5084", "394.45, 651.508, 24.92, 0.6356" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "307.964, 510.44, 48.1911, 0.5338", "307.714, 510.642, 46.1706, 0.6356", "307.239, 511.077, 44.317, 0.661", "306.601, 511.657, 42.9285, 0.6356", "306.26, 512.169, 44.2092, 0.5848", "305.758, 512.856, 44.1118, 0.483", "305.016, 513.441, 43.9788, 0.3814", "304.723, 513.786, 41.7749, 0.3304", "303.793, 513.801, 42.2422, 0.3304", "302.884, 513.884, 42.1534, 0.356", "301.937, 513.749, 41.1897, 0.3814", "301.478, 514.213, 39.5886, 0.3814", "300.942, 514.8, 39.0051, 0.4322", "300.188, 515.267, 40.5093, 0.5338", "299.745, 515.983, 40.7826, 0.7118", "299.319, 516.883, 40.04, 0.8644", "298.94, 517.372, 38.9544, 0.8898", "299.137, 518.003, 37.3402, 0.7372", "299.025, 518.539, 35.56, 0.5338", "298.225, 518.964, 36.6668, 0.483", "297.135, 519.033, 36.7578, 0.5592", "296.331, 519.039, 38.281, 0.6356", "295.699, 518.804, 38.6168, 0.6356", "294.633, 518.691, 38.2777, 0.661", "293.651, 518.918, 37.9422, 0.7372", "292.761, 519.432, 37.6494, 0.8136", "291.948, 519.383, 36.258, 0.788", "291.355, 519.376, 34.6489, 0.6864", "290.572, 519.297, 33.2055, 0.5592", "289.838, 519.367, 31.9094, 0.5084", "288.983, 519.608, 33.3567, 0.5592", "288.471, 520.513, 34.0273, 0.6356", "287.62, 520.881, 33.689, 0.661", "286.679, 520.7, 33.2307, 0.6102", "285.752, 520.649, 32.3428, 0.5592", "284.877, 521.216, 31.3642, 0.5592", "284.155, 521.895, 30.5186, 0.6102", "283.263, 522.353, 30.24, 0.6356", "282.606, 523.223, 30.8, 0.6864", "281.996, 524.042, 30.13, 0.7118", "281.766, 525.007, 29.2718, 0.7626", "281.714, 526.019, 30.4046, 0.6864", "281.652, 527.082, 29.8332, 0.5848", "281.359, 527.536, 28.5292, 0.5084", "280.634, 528.179, 28.0, 0.5338", "280.138, 529.174, 28.369, 0.5592", "279.555, 529.771, 27.2975, 0.5338", "278.568, 529.86, 27.0721, 0.4576", "277.919, 530.54, 26.7982, 0.4576", "277.531, 530.484, 24.9878, 0.483", "276.873, 530.442, 25.2, 0.5338", "275.831, 530.567, 26.0484, 0.5084", "275.042, 530.811, 27.0858, 0.4576", "274.575, 531.159, 25.3033, 0.3814", "274.489, 532.077, 24.2738, 0.305", "273.799, 532.786, 23.011, 0.2542", "273.026, 533.358, 23.555, 0.2288", "272.277, 533.118, 22.1752, 0.2542", "272.009, 532.753, 23.9618, 0.3304", "271.032, 533.008, 24.6378, 0.4322", "270.243, 533.724, 25.52, 0.5338", "269.409, 534.305, 26.4796, 0.5848", "268.804, 535.144, 25.9846, 0.6102", "268.148, 535.791, 24.9365, 0.5848", "267.407, 535.744, 24.619, 0.5084", "266.6, 536.333, 25.2, 0.4322", "266.319, 536.92, 24.726, 0.4068", "265.563, 537.523, 23.4584, 0.4576", "264.992, 538.233, 23.4567, 0.5084", "264.59, 538.932, 22.9645, 0.5338", "263.866, 539.558, 23.0446, 0.5084", "263.348, 540.439, 22.6962, 0.483", "263.163, 541.479, 22.9706, 0.4322", "262.839, 542.378, 21.9209, 0.4068", "262.661, 543.331, 22.5966, 0.356", "263.119, 544.201, 23.24, 0.3304" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "307.964, 510.44, 48.1911, 0.5338", "307.891, 509.85, 48.7024, 0.4322", "306.859, 509.652, 49.28, 0.3814", "305.807, 509.392, 49.0, 0.356", "305.065, 509.194, 50.3289, 0.3814", "304.026, 509.195, 50.96, 0.483", "303.25, 509.097, 49.8985, 0.5592", "302.358, 508.901, 49.436, 0.5848", "301.491, 508.628, 48.72, 0.5592", "300.455, 508.47, 47.945, 0.5338", "299.899, 507.707, 48.3602, 0.6356", "299.536, 507.568, 50.0889, 0.7372" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "311.548, 506.715, 45.64, 0.6102", "311.46, 506.512, 47.052, 0.5084", "312.088, 505.743, 47.313, 0.5084", "312.769, 505.224, 48.1704, 0.5592", "312.596, 504.425, 49.28, 0.6102", "312.769, 503.315, 49.28, 0.661", "312.902, 502.674, 47.7028, 0.661", "313.404, 502.105, 46.6732, 0.6102", "313.734, 501.308, 47.5712, 0.5338", "313.807, 500.241, 47.2965, 0.5084", "313.903, 499.195, 46.2706, 0.5592", "314.109, 498.297, 45.1822, 0.661", "314.599, 497.745, 45.08, 0.7372", "315.042, 496.954, 45.0299, 0.7626", "315.384, 496.051, 45.1464, 0.7372", "315.514, 495.18, 45.1494, 0.7372", "315.629, 494.309, 45.7531, 0.7372", "315.99, 493.319, 45.582, 0.788", "316.356, 492.379, 45.969, 0.7626", "316.424, 491.772, 44.583, 0.6864", "316.127, 490.894, 44.1958, 0.5592", "316.101, 489.904, 43.5215, 0.5592", "316.086, 489.005, 43.596, 0.661", "316.464, 488.121, 44.0661, 0.788", "317.001, 487.344, 44.52, 0.7372" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "311.548, 506.715, 45.64, 0.6102", "312.246, 506.656, 44.9736, 0.7372", "313.116, 506.083, 44.0124, 0.7372", "314.106, 505.563, 44.2551, 0.7372", "314.888, 505.693, 45.64, 0.6356", "315.83, 505.428, 46.0261, 0.6102", "316.611, 504.711, 46.76, 0.5848", "317.175, 503.748, 46.706, 0.6356", "318.241, 503.475, 46.0779, 0.661", "319.222, 503.17, 44.9778, 0.661", "320.12, 502.791, 44.6967, 0.6102", "321.075, 502.43, 43.9533, 0.5338", "321.711, 501.758, 43.4865, 0.483", "322.045, 501.345, 41.8004, 0.4322", "322.7, 500.72, 42.3114, 0.4576", "323.556, 500.034, 42.296, 0.4576", "324.309, 499.485, 43.5126, 0.483", "325.205, 499.018, 42.8476, 0.4576", "326.153, 498.784, 42.28, 0.483" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "327.285, 534.77, 59.4532, 0.5084", "327.572, 535.417, 60.4626, 0.5084", "327.119, 535.997, 59.9455, 0.5084", "326.84, 536.682, 61.21, 0.483", "326.031, 537.141, 62.4092, 0.5084", "325.567, 537.735, 64.381, 0.5848", "324.985, 538.435, 65.828, 0.661", "324.1, 538.681, 66.5913, 0.661", "323.623, 539.333, 66.0212, 0.6102", "323.441, 539.548, 68.336, 0.5592", "323.108, 539.839, 70.5578, 0.5338", "322.605, 540.675, 70.7574, 0.5084", "322.211, 541.66, 70.464, 0.483", "321.703, 542.557, 70.7246, 0.4576", "321.786, 543.168, 72.952, 0.5084", "321.735, 544.136, 74.2776, 0.5338", "321.947, 544.928, 75.8332, 0.5084", "322.704, 545.456, 76.5036, 0.3814", "322.974, 545.23, 77.6166, 0.305", "323.476, 545.337, 79.8, 0.3304", "324.008, 545.464, 81.0818, 0.4068", "324.19, 546.115, 83.1449, 0.4322", "324.666, 546.946, 82.6, 0.4068" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "327.285, 534.77, 59.4532, 0.5084", "327.206, 535.011, 60.2109, 0.4068", "327.64, 535.951, 60.48, 0.4322", "328.098, 536.912, 60.6598, 0.4322", "328.213, 538.018, 61.04, 0.3814", "328.694, 538.707, 60.3445, 0.3304", "329.471, 539.258, 61.385, 0.2796", "330.081, 539.689, 63.0, 0.305", "330.566, 540.51, 62.16, 0.356", "330.739, 541.525, 61.6876, 0.483", "331.1, 542.314, 60.5063, 0.5592", "331.53, 542.8, 62.3608, 0.6356", "331.807, 543.732, 61.5706, 0.6356", "332.193, 544.566, 60.6438, 0.6356", "332.676, 545.068, 62.4574, 0.5848", "333.195, 545.801, 62.7421, 0.5848", "333.291, 546.727, 62.0785, 0.5592", "334.028, 547.379, 62.7707, 0.5592", "334.576, 548.272, 63.1882, 0.5338", "334.625, 549.278, 62.6676, 0.5338", "335.191, 549.927, 62.72, 0.5592", "335.061, 550.931, 62.1902, 0.5848", "335.467, 551.938, 62.6926, 0.5848", "335.737, 552.982, 61.9136, 0.5338", "335.992, 553.926, 61.32, 0.4576", "336.104, 554.596, 62.8202, 0.4068", "336.272, 555.586, 63.5032, 0.356", "336.226, 556.587, 64.6618, 0.3304", "336.444, 557.631, 63.9576, 0.3304", "336.425, 558.604, 63.0885, 0.4068", "336.285, 559.552, 63.56, 0.483", "335.944, 560.554, 64.174, 0.5592", "335.329, 561.464, 64.6512, 0.5338", "335.296, 562.518, 65.156, 0.5084", "335.077, 563.584, 65.7689, 0.4068", "334.738, 564.224, 64.1553, 0.4068", "334.619, 565.305, 64.68, 0.4322", "334.379, 566.185, 65.6944, 0.5592", "334.0, 567.069, 65.4763, 0.5848", "333.895, 567.855, 65.8322, 0.5848", "333.7, 568.823, 66.0741, 0.5338", "333.361, 569.672, 67.2893, 0.5592", "333.017, 570.696, 66.9519, 0.5592", "332.618, 571.656, 67.2, 0.5338", "332.36, 571.66, 69.204, 0.483", "331.821, 572.382, 69.8219, 0.4322", "331.466, 573.271, 69.1499, 0.4068", "330.773, 573.886, 69.0483, 0.356", "330.324, 574.59, 70.28, 0.3814", "329.857, 575.582, 69.9446, 0.4322", "329.353, 576.499, 69.6808, 0.5592", "328.993, 577.334, 70.4469, 0.6102", "328.445, 578.148, 70.8089, 0.5848", "328.075, 579.03, 71.4683, 0.483", "327.532, 579.667, 72.718, 0.3814", "327.466, 580.431, 74.4612, 0.356", "327.99, 580.483, 76.771, 0.3304", "327.995, 581.314, 77.8434, 0.356", "327.857, 582.288, 78.976, 0.3304", "327.872, 583.305, 79.52, 0.3814", "327.526, 584.241, 78.68, 0.4322" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "324.9, 506.449, 57.7086, 0.4068", "325.107, 505.934, 57.752, 0.7372", "325.374, 504.837, 58.1871, 0.6864", "325.901, 503.845, 58.7101, 0.6356", "326.449, 502.843, 58.5511, 0.5338" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "324.9, 506.449, 57.7086, 0.4068", "324.436, 506.265, 57.2359, 0.483", "324.736, 505.328, 57.3524, 0.5338", "324.674, 504.383, 56.1834, 0.5848", "324.411, 503.703, 54.7938, 0.6102", "324.283, 502.926, 54.04, 0.5848", "324.36, 501.866, 54.4597, 0.5592", "324.464, 500.791, 54.665, 0.5592", "324.298, 499.758, 54.5457, 0.6102", "324.039, 498.789, 53.7653, 0.6102", "323.355, 498.274, 52.1861, 0.5848", "323.07, 497.264, 52.64, 0.5084", "322.204, 496.617, 52.2738, 0.483", "322.027, 495.645, 52.08, 0.4322", "321.376, 494.928, 52.6215, 0.4068", "320.985, 494.072, 52.36, 0.3814", "320.366, 493.413, 51.5908, 0.4068", "319.477, 493.223, 52.5885, 0.4576", "319.137, 492.263, 52.1732, 0.5592" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "297.287, 536.459, 50.0578, 0.4068", "297.644, 536.804, 49.2881, 0.5084", "297.565, 537.919, 49.1761, 0.483", "297.564, 538.904, 48.242, 0.483", "297.84, 539.708, 48.16, 0.4576", "297.353, 540.644, 47.6059, 0.4322", "297.114, 541.621, 47.7812, 0.3814", "297.187, 542.389, 49.56, 0.305", "296.963, 543.282, 48.5845, 0.2542", "296.771, 544.203, 49.0829, 0.2288", "296.675, 545.283, 49.81, 0.2542", "295.837, 545.871, 49.7521, 0.305", "295.863, 546.924, 49.1683, 0.356", "295.609, 547.626, 47.6381, 0.4068", "295.495, 548.554, 48.82, 0.4576", "294.992, 549.344, 49.9789, 0.5338", "294.582, 550.255, 49.8621, 0.5592", "294.197, 551.257, 49.56, 0.5084", "293.964, 552.16, 49.0266, 0.4576", "293.516, 552.809, 47.88, 0.4068", "293.313, 553.438, 47.6958, 0.4068", "292.748, 554.106, 48.2457, 0.3304", "292.089, 554.882, 48.5926, 0.2796", "291.606, 555.786, 48.4618, 0.2542", "291.15, 556.776, 48.7183, 0.3304", "290.342, 557.184, 47.6224, 0.4068", "289.719, 557.69, 46.6698, 0.4576", "288.817, 558.343, 46.926, 0.4068", "288.217, 559.242, 47.649, 0.356", "287.798, 560.251, 47.9254, 0.2796", "286.771, 560.561, 48.431, 0.305", "286.108, 561.289, 48.16, 0.3304", "285.263, 561.475, 46.9034, 0.3814", "284.497, 562.075, 46.0118, 0.356", "283.812, 562.738, 47.031, 0.356", "283.083, 563.397, 46.338, 0.3814", "282.422, 564.062, 47.4995, 0.4322", "281.771, 564.635, 46.4377, 0.4576", "281.318, 565.123, 46.3246, 0.4322", "280.808, 565.574, 47.4891, 0.3814", "280.155, 566.094, 46.4957, 0.305", "279.707, 566.883, 45.8772, 0.2542", "279.694, 567.982, 45.92, 0.2288", "278.693, 568.385, 46.1191, 0.2288", "277.954, 568.991, 46.9832, 0.2288", "277.305, 569.902, 47.0492, 0.2542", "276.678, 570.837, 47.259, 0.2796", "275.949, 571.62, 47.2464, 0.305", "275.268, 572.206, 47.8248, 0.2796", "274.66, 573.029, 48.277, 0.2542", "274.391, 573.966, 49.5118, 0.2542", "273.682, 574.448, 48.7942, 0.2796", "272.928, 574.547, 46.8936, 0.3304", "272.616, 575.463, 47.0159, 0.3304", "272.11, 576.36, 46.5766, 0.3304", "271.657, 577.378, 46.48, 0.305", "270.959, 578.236, 46.8762, 0.3304", "270.157, 579.005, 47.4421, 0.356", "269.437, 579.672, 46.893, 0.356", "268.767, 580.577, 46.7768, 0.3304", "267.956, 581.349, 46.226, 0.3304", "267.26, 582.098, 46.0132, 0.3814", "266.641, 582.933, 46.412, 0.4322", "265.943, 583.692, 46.2647, 0.4576", "265.423, 584.402, 46.041, 0.4576", "264.88, 585.277, 46.0449, 0.4322", "264.23, 586.203, 46.1398, 0.4068", "263.987, 587.309, 46.2, 0.356", "263.834, 588.428, 46.4545, 0.3304", "263.286, 589.429, 46.48, 0.2796", "262.677, 590.271, 46.7956, 0.2542", "262.433, 591.312, 46.6469, 0.2542", "262.661, 592.134, 46.76, 0.3304" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "297.287, 536.459, 50.0578, 0.4068", "297.336, 537.26, 49.754, 0.4322", "297.143, 538.023, 48.3787, 0.5084", "296.41, 538.559, 47.32, 0.5338", "295.658, 539.219, 48.0676, 0.5592", "295.011, 539.959, 47.3242, 0.5848", "294.239, 540.311, 48.0018, 0.6102", "293.35, 540.469, 48.0102, 0.6102", "292.461, 540.533, 47.2035, 0.6102", "291.641, 540.646, 46.0432, 0.5848", "290.662, 541.183, 45.7845, 0.5338", "289.996, 541.623, 45.3681, 0.4576", "289.701, 542.255, 47.3903, 0.4068", "289.636, 542.798, 49.5488, 0.356", "289.542, 543.846, 49.0504, 0.356", "289.408, 544.311, 47.2861, 0.356", "288.526, 544.086, 46.2132, 0.4068", "288.045, 544.679, 44.3503, 0.4322", "287.514, 545.553, 44.24, 0.483", "286.887, 545.689, 42.5603, 0.5084", "286.012, 546.196, 41.8138, 0.5338", "285.656, 546.385, 43.6125, 0.5338", "284.943, 546.847, 42.8971, 0.5084", "284.18, 547.53, 42.5816, 0.483", "283.458, 548.222, 42.56, 0.4068", "282.519, 548.252, 42.8044, 0.3814", "281.673, 548.636, 41.9238, 0.3814", "280.631, 548.682, 41.2096, 0.483", "279.636, 549.011, 41.732, 0.5592", "278.923, 549.695, 41.9698, 0.5848", "277.98, 550.178, 41.2656, 0.5592", "277.191, 550.444, 40.2805, 0.5592", "276.59, 550.872, 39.5413, 0.5848", "275.626, 551.01, 38.92, 0.6102", "274.895, 551.167, 39.5959, 0.5848", "274.069, 551.214, 39.5276, 0.5338", "273.275, 551.845, 40.2735, 0.4322", "272.454, 552.352, 40.2226, 0.3304", "271.866, 552.674, 38.6182, 0.2796", "270.797, 552.629, 38.64, 0.2796", "269.771, 552.302, 38.8713, 0.305", "268.789, 552.692, 38.4812, 0.2796", "267.681, 552.737, 38.9026, 0.2542", "266.605, 552.885, 38.999, 0.2542", "265.709, 553.336, 38.808, 0.305", "264.951, 553.81, 38.36, 0.356", "263.97, 554.266, 38.5468, 0.356", "262.936, 554.555, 38.211, 0.3304", "262.004, 554.76, 38.2138, 0.3304", "261.304, 555.004, 38.3356, 0.356", "260.441, 555.034, 37.4696, 0.3814", "259.435, 555.433, 36.9152, 0.3814", "258.414, 555.415, 37.1608, 0.4068", "257.325, 555.448, 37.7112, 0.4068", "256.219, 555.526, 38.2248, 0.3814", "255.356, 555.973, 37.8011, 0.305", "254.283, 556.312, 37.8, 0.2796", "253.177, 556.494, 37.4562, 0.2796", "252.172, 556.937, 36.9659, 0.3304", "251.354, 557.357, 37.4262, 0.356", "250.423, 557.864, 37.1826, 0.4068", "249.354, 558.194, 37.2299, 0.4322", "248.238, 558.428, 37.2901, 0.4322", "247.288, 558.534, 36.6965, 0.3814", "246.364, 558.757, 37.7017, 0.305", "245.368, 558.946, 36.7777, 0.2796", "244.285, 558.925, 36.9331, 0.305", "243.166, 558.968, 36.7002, 0.3814", "242.044, 559.137, 36.981, 0.4068", "240.951, 558.932, 36.9754, 0.4068", "239.859, 558.82, 36.4, 0.3814", "238.882, 558.708, 37.1935, 0.3814", "237.86, 559.056, 36.4286, 0.356", "237.365, 560.018, 36.68, 0.3304", "236.653, 560.736, 35.6899, 0.3304", "235.56, 560.8, 36.2407, 0.3814", "234.731, 561.434, 36.4804, 0.4322", "233.832, 561.933, 36.2477, 0.4322", "233.031, 562.375, 36.5949, 0.4068", "232.321, 562.878, 36.6744, 0.356", "231.692, 563.785, 36.3899, 0.3304", "231.421, 564.76, 36.0105, 0.305", "230.871, 565.195, 34.2149, 0.305", "229.982, 565.392, 34.7934, 0.356", "228.923, 565.445, 34.5719, 0.3814", "228.141, 565.975, 33.1027, 0.4322", "227.188, 566.161, 31.8116, 0.4068", "226.159, 566.214, 31.5067, 0.4322", "225.232, 566.002, 32.2199, 0.4322", "224.353, 565.551, 32.5786, 0.4322", "223.338, 565.288, 32.5892, 0.4068", "222.316, 565.602, 31.901, 0.4068", "221.452, 566.071, 31.3116, 0.4576", "220.669, 565.709, 32.0132, 0.5338", "219.822, 565.074, 31.8301, 0.5338", "218.925, 565.031, 31.36, 0.5338", "217.92, 565.022, 30.819, 0.5084", "216.97, 565.128, 29.7245, 0.5592", "215.971, 564.831, 28.8697, 0.5592", "214.966, 564.352, 28.8002, 0.5338", "213.91, 564.152, 28.5396, 0.483", "213.246, 563.744, 28.7983, 0.483", "212.754, 563.354, 26.9032, 0.5338", "212.554, 562.309, 27.4089, 0.6102", "211.768, 561.744, 26.6042, 0.661", "210.871, 561.365, 26.2452, 0.7118", "209.815, 561.131, 26.0033, 0.7118", "208.929, 560.635, 26.0389, 0.6864", "208.117, 559.947, 25.2199, 0.6102", "207.297, 559.44, 26.304, 0.5592", "206.632, 558.87, 26.6263, 0.5338", "205.985, 558.692, 24.9584, 0.5338", "204.958, 558.369, 24.845, 0.5084", "203.926, 558.158, 25.3109, 0.5084", "202.932, 558.388, 24.866, 0.5338", "201.936, 558.789, 24.9782, 0.6356", "200.848, 558.63, 24.64, 0.7118", "199.746, 558.347, 24.6504, 0.7118", "198.741, 557.819, 24.6862, 0.6356", "197.818, 557.192, 24.1727, 0.5592", "196.726, 557.014, 24.5829, 0.5592", "195.659, 557.089, 24.08, 0.5848", "194.735, 556.899, 23.1092, 0.6102", "193.839, 557.035, 23.2666, 0.6102", "192.763, 557.014, 23.24, 0.6356" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "297.79, 521.05, 52.0537, 0.5084", "296.647, 520.407, 52.08, 0.5592", "295.736, 519.971, 52.1755, 0.4576", "294.922, 519.938, 53.8138, 0.3814", "294.007, 520.062, 54.6, 0.3304", "293.075, 519.836, 53.2834, 0.3814", "292.237, 519.371, 51.7896, 0.4322", "291.424, 518.941, 51.2686, 0.5338", "290.48, 518.619, 51.1848, 0.5592", "289.577, 518.695, 50.3821, 0.5592", "288.734, 518.119, 50.0856, 0.5848", "287.597, 518.191, 50.1497, 0.6102", "286.737, 518.323, 51.7, 0.5848", "285.845, 518.131, 50.7175, 0.5084", "284.842, 518.067, 51.24, 0.5338", "283.857, 518.326, 51.4878, 0.661", "283.11, 517.731, 50.68, 0.7626", "282.236, 517.419, 50.68, 0.7372", "281.567, 516.637, 50.8875, 0.661", "280.786, 516.652, 51.2128, 0.661", "279.804, 516.717, 51.4002, 0.7118", "279.22, 516.003, 52.2012, 0.788", "278.433, 515.47, 53.2386, 0.7372", "277.572, 515.037, 53.0267, 0.7118", "276.696, 514.563, 53.7569, 0.6356", "275.768, 514.371, 52.5504, 0.661", "274.763, 514.253, 52.08, 0.6102" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "297.79, 521.05, 52.0537, 0.5084", "297.428, 520.602, 52.0083, 0.5338", "296.957, 519.616, 51.5978, 0.4576", "296.811, 518.702, 50.1581, 0.483", "296.623, 517.904, 48.2294, 0.5592", "296.159, 516.997, 47.1234, 0.5848", "295.972, 515.912, 47.1016, 0.5084", "296.015, 514.779, 47.4538, 0.4576", "296.269, 513.675, 47.3505, 0.3814", "296.417, 512.639, 46.3319, 0.356", "296.408, 511.623, 45.0506, 0.305", "295.909, 510.845, 43.5159, 0.3304", "295.057, 510.47, 41.9521, 0.3814", "294.177, 509.808, 41.4375, 0.4322", "293.731, 508.764, 41.4372, 0.4322", "293.674, 507.859, 39.7804, 0.4322", "293.704, 507.08, 37.7325, 0.4322", "294.024, 506.46, 35.5197, 0.483", "294.684, 505.989, 33.5479, 0.5338" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "352.122, 529.329, 42.0, 0.4576", "352.098, 529.423, 43.3916, 0.4322", "352.05, 529.609, 46.1518, 0.3814", "352.002, 529.796, 48.9121, 0.3814", "352.309, 530.603, 48.9418, 0.4576", "352.675, 531.456, 50.0368, 0.483", "353.035, 532.327, 49.4388, 0.483", "353.815, 533.094, 49.84, 0.483", "354.296, 533.601, 50.211, 0.483", "354.713, 534.282, 50.2678, 0.483", "355.393, 534.98, 49.8974, 0.4068", "356.379, 535.07, 49.9349, 0.3814", "357.334, 535.437, 49.3108, 0.356", "358.326, 535.678, 49.0837, 0.4068", "359.137, 536.214, 49.1593, 0.4322", "359.717, 536.952, 50.0903, 0.4576", "360.749, 537.257, 49.9638, 0.4322", "361.36, 537.747, 50.3331, 0.4068", "362.158, 538.029, 48.8396, 0.3814", "362.967, 538.329, 47.6739, 0.4068", "363.851, 538.691, 47.7196, 0.4068", "364.512, 539.2, 46.8854, 0.4068", "365.059, 539.724, 46.3756, 0.356", "366.026, 539.51, 46.4332, 0.356", "366.525, 539.664, 46.1418, 0.3304", "366.962, 540.356, 45.3684, 0.356", "367.741, 540.875, 46.2885, 0.3304", "368.321, 541.477, 45.386, 0.3304", "369.119, 541.372, 44.3761, 0.2796", "370.045, 541.684, 44.49, 0.2542", "370.12, 542.194, 43.0542, 0.2288", "370.58, 542.599, 41.2196, 0.2542", "371.132, 542.952, 41.2205, 0.305", "372.175, 543.243, 40.8918, 0.3814", "372.924, 543.676, 41.16, 0.4576", "373.603, 544.315, 41.7777, 0.5084", "374.332, 544.768, 41.7525, 0.5338", "375.169, 544.909, 40.4488, 0.5084", "375.564, 545.828, 40.8248, 0.483", "375.324, 546.738, 39.6967, 0.4576", "374.819, 547.461, 39.1964, 0.4576", "374.43, 547.864, 37.0989, 0.4322", "373.712, 547.976, 35.4978, 0.4322", "373.429, 548.279, 33.8481, 0.4322", "373.439, 549.198, 33.5983, 0.483", "374.023, 549.935, 32.76, 0.5084", "374.991, 550.119, 32.2507, 0.5338", "375.918, 549.66, 33.194, 0.5084", "376.862, 549.578, 33.9433, 0.483", "377.736, 549.487, 32.4386, 0.4322", "378.354, 549.463, 30.5959, 0.4068", "379.243, 549.252, 29.7676, 0.3304", "380.046, 549.586, 28.5351, 0.3304", "380.265, 550.128, 27.1883, 0.356", "379.486, 550.58, 26.6213, 0.483", "379.121, 550.896, 24.8472, 0.5338", "379.249, 551.813, 25.2434, 0.5338", "379.958, 552.646, 25.3204, 0.4576", "380.64, 553.091, 26.2797, 0.4068", "381.157, 553.502, 24.5053, 0.4068", "381.446, 554.372, 24.9346, 0.4322", "381.041, 554.726, 23.5864, 0.4576", "380.585, 555.35, 22.9452, 0.4322", "380.27, 556.415, 22.9471, 0.4068", "380.092, 557.527, 23.0913, 0.3814", "380.135, 558.614, 23.52, 0.3814", "380.417, 559.457, 22.3994, 0.3814", "380.834, 559.839, 20.8642, 0.3814", "380.74, 560.102, 19.3774, 0.4068", "380.718, 561.073, 19.2517, 0.4068", "381.165, 561.945, 19.5972, 0.4068", "381.523, 562.848, 20.44, 0.356" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "352.122, 529.329, 42.0, 0.4576", "352.669, 529.258, 42.0, 0.3814", "353.065, 528.225, 41.7906, 0.3814", "353.351, 527.401, 41.823, 0.4576", "353.876, 526.812, 41.0676, 0.483", "354.336, 526.433, 39.7536, 0.5338", "355.21, 527.029, 39.2227, 0.5084", "355.975, 527.307, 38.9141, 0.483", "356.816, 526.969, 38.3827, 0.483", "357.249, 525.976, 38.3211, 0.5592", "357.144, 525.105, 37.0062, 0.6102", "357.499, 524.182, 36.12, 0.6356", "357.29, 523.097, 36.1917, 0.5848", "357.792, 522.342, 36.8726, 0.5848", "358.786, 521.844, 36.6985, 0.5592", "359.688, 521.716, 36.9662, 0.5084", "359.85, 522.147, 34.844, 0.4322", "360.503, 521.73, 33.88, 0.4068", "360.453, 521.359, 35.0, 0.483", "359.826, 520.641, 35.56, 0.5592", "359.14, 519.985, 35.5572, 0.6356", "359.113, 519.042, 34.3165, 0.6356", "359.283, 518.567, 33.32, 0.6102", "359.673, 518.661, 31.0486, 0.5084", "359.118, 518.592, 28.9677, 0.4068", "359.062, 517.637, 27.6914, 0.3304", "359.184, 517.727, 25.2672, 0.305", "358.691, 517.509, 23.9232, 0.356", "358.253, 516.64, 23.4539, 0.4322", "357.64, 516.082, 24.36, 0.5338", "356.882, 516.154, 22.8004, 0.5592", "356.481, 517.031, 22.596, 0.6102", "356.329, 516.444, 21.215, 0.6356", "356.262, 515.466, 20.6651, 0.661", "356.927, 514.76, 20.16, 0.5848", "357.987, 514.704, 20.1555, 0.5592", "358.968, 515.018, 20.7522, 0.5848", "359.711, 515.492, 19.3063, 0.661", "360.683, 516.025, 19.3259, 0.6864", "361.527, 516.552, 19.3617, 0.6864", "362.408, 516.947, 19.2646, 0.7118", "363.434, 517.199, 19.061, 0.7118", "364.52, 517.308, 18.48, 0.7118", "365.278, 517.889, 18.2, 0.6102" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "299.536, 507.568, 50.0889, 0.7372", "299.115, 507.76, 50.9225, 0.305", "298.321, 507.631, 51.2644, 0.356", "297.623, 507.31, 50.405, 0.4068", "296.771, 507.25, 51.5276, 0.5084", "295.723, 507.135, 51.8398, 0.5592", "294.991, 506.723, 52.402, 0.6102", "293.903, 506.563, 52.8651, 0.5848", "293.063, 506.156, 51.8, 0.5084", "291.991, 506.188, 52.3314, 0.4322", "291.019, 506.21, 53.2423, 0.3814", "290.352, 505.538, 53.8244, 0.3814", "289.455, 505.125, 53.24, 0.356", "288.552, 504.753, 53.5643, 0.3304", "287.612, 504.733, 54.6095, 0.305", "286.857, 504.275, 55.16, 0.3304", "286.063, 504.173, 54.5398, 0.3304", "285.54, 503.818, 56.2391, 0.356", "284.579, 504.037, 55.195, 0.3304", "283.711, 503.818, 56.0017, 0.356", "283.047, 503.598, 55.44, 0.356", "282.483, 503.651, 57.4221, 0.4068", "281.512, 503.247, 57.5002, 0.4322", "281.183, 502.674, 58.5164, 0.4576", "280.258, 502.531, 57.0721, 0.4576", "279.201, 502.496, 56.28, 0.4322", "278.27, 502.495, 57.6178, 0.3814", "277.293, 502.229, 57.1203, 0.3304", "276.552, 501.935, 58.184, 0.305", "275.918, 501.987, 58.7737, 0.356", "274.864, 501.905, 58.5236, 0.4068", "273.884, 501.644, 58.2896, 0.483", "272.977, 501.244, 58.7961, 0.5084", "272.072, 500.667, 58.2498, 0.5084", "272.431, 500.348, 60.1591, 0.483", "271.581, 499.926, 59.2679, 0.4322", "270.822, 499.222, 58.3332, 0.4322", "270.664, 498.154, 58.7395, 0.4322", "269.805, 497.612, 59.2668, 0.4576", "269.007, 496.946, 59.7677, 0.4576", "268.158, 496.315, 59.4462, 0.4322", "267.606, 495.391, 59.5862, 0.4322", "267.181, 494.826, 61.2996, 0.4322", "266.187, 494.666, 60.415, 0.4576", "265.401, 494.253, 60.9185, 0.4068", "264.475, 493.633, 60.9252, 0.3304", "263.363, 493.518, 61.04, 0.2796", "262.712, 493.204, 62.4168, 0.2796", "261.825, 492.616, 62.1939, 0.3304", "260.805, 492.422, 62.0427, 0.3304", "260.036, 491.805, 61.6829, 0.3304", "259.511, 491.233, 62.4473, 0.305", "258.537, 490.888, 63.0, 0.3304", "257.59, 490.392, 62.9446, 0.356", "256.777, 489.717, 63.3069, 0.3814", "255.951, 489.134, 63.4012, 0.356", "255.043, 488.938, 63.28, 0.3304", "254.06, 488.587, 63.7081, 0.305", "253.112, 488.229, 64.3062, 0.3304", "252.264, 487.683, 63.3763, 0.3814", "251.408, 486.976, 63.4872, 0.4068", "250.97, 486.325, 63.1512, 0.3814", "249.956, 485.963, 63.56, 0.305", "249.016, 485.446, 63.5452, 0.2796", "248.218, 485.056, 62.1911, 0.305", "247.625, 484.947, 63.84, 0.3814", "247.031, 484.827, 62.1869, 0.4068", "246.089, 484.426, 63.2153, 0.3814", "245.17, 483.867, 63.56, 0.305", "244.569, 483.226, 63.56, 0.2796", "243.549, 482.952, 63.0711, 0.2796", "243.047, 482.31, 62.0942, 0.3304", "242.22, 481.627, 61.1713, 0.3304", "241.388, 480.891, 61.6067, 0.356", "240.657, 480.02, 61.7551, 0.3304", "239.901, 479.171, 61.88, 0.3304", "239.14, 478.421, 61.9898, 0.3304", "239.209, 477.734, 62.72, 0.356" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "299.536, 507.568, 50.0889, 0.7372", "299.6, 507.018, 49.6983, 0.4068", "298.84, 506.397, 49.1372, 0.4576", "298.344, 506.185, 46.8532, 0.5084", "297.7, 506.06, 48.4943, 0.5084", "296.813, 505.624, 49.0372, 0.4576", "295.952, 505.299, 49.002, 0.3814", "295.224, 504.814, 48.4568, 0.3814", "294.269, 504.233, 48.1664, 0.4322", "293.43, 503.627, 48.4968, 0.5592", "292.672, 503.017, 47.7868, 0.6102", "291.702, 502.571, 47.9111, 0.6102", "290.958, 502.113, 49.019, 0.5338", "290.263, 501.415, 48.9653, 0.483", "289.723, 500.636, 47.8892, 0.4576", "289.036, 500.269, 46.6774, 0.4576", "288.636, 499.435, 46.7558, 0.4322", "288.031, 499.11, 44.9313, 0.3814", "287.046, 498.771, 45.08, 0.356", "286.173, 498.07, 45.0002, 0.3814", "285.694, 497.717, 45.92, 0.4322" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "317.001, 487.344, 44.52, 0.7372", "316.461, 487.29, 44.4321, 0.3814", "316.302, 486.408, 44.3268, 0.356", "315.798, 485.658, 44.196, 0.4068", "315.152, 485.047, 42.7806, 0.5084", "314.245, 484.52, 42.5684, 0.5592", "313.42, 483.901, 42.5919, 0.5338", "312.657, 483.222, 43.0959, 0.4576", "311.716, 482.722, 42.2954, 0.4576", "310.677, 482.3, 42.7476, 0.483", "309.909, 481.6, 42.84, 0.5592", "309.863, 480.649, 43.5789, 0.5848", "309.076, 480.361, 42.8366, 0.6356", "308.587, 479.822, 43.7923, 0.6356", "307.936, 479.45, 42.6516, 0.6102", "307.257, 479.145, 42.5048, 0.5592", "306.258, 478.89, 42.3618, 0.5338", "305.63, 478.209, 41.44, 0.5338", "304.846, 477.62, 42.056, 0.5084", "303.979, 477.292, 41.7424, 0.483", "303.086, 476.911, 42.2506, 0.4576", "302.805, 476.672, 40.327, 0.483", "302.087, 476.398, 40.8859, 0.5084", "301.577, 475.648, 40.1332, 0.5338", "301.064, 475.141, 38.7271, 0.5084", "300.522, 474.453, 39.7855, 0.4576", "299.658, 473.881, 39.5298, 0.3814", "299.142, 473.209, 39.3862, 0.305", "298.583, 472.3, 39.2, 0.2542", "298.194, 471.424, 38.6904, 0.2288", "297.748, 470.758, 37.0678, 0.2542", "297.193, 470.136, 37.4133, 0.305", "296.762, 469.294, 37.0731, 0.356", "296.395, 468.604, 36.4221, 0.3814", "295.998, 467.859, 36.892, 0.356", "295.279, 467.117, 36.589, 0.356", "294.651, 466.397, 36.6506, 0.356", "294.461, 465.529, 35.3158, 0.4068", "293.926, 464.888, 34.8678, 0.4322", "293.13, 464.464, 35.373, 0.483", "292.322, 463.789, 35.5928, 0.5338", "291.719, 463.144, 35.068, 0.5592", "291.555, 462.377, 34.9185, 0.5084", "291.175, 461.506, 34.0925, 0.4068", "291.363, 460.672, 33.0394, 0.356", "291.194, 459.703, 32.774, 0.3814", "290.224, 459.774, 32.8062, 0.4322", "289.715, 458.88, 32.5175, 0.483", "289.545, 457.794, 32.6556, 0.5084", "289.065, 456.852, 32.1023, 0.5338", "288.554, 455.997, 31.36, 0.5084", "288.311, 455.011, 31.5591, 0.5084", "288.478, 454.178, 30.8571, 0.5084", "288.248, 453.557, 30.2646, 0.5338", "287.932, 452.542, 30.8, 0.5084", "287.222, 451.736, 31.3051, 0.4576", "286.597, 451.113, 29.96, 0.4068", "286.248, 450.235, 30.4604, 0.356", "285.87, 449.753, 29.7802, 0.3304", "285.646, 448.701, 29.96, 0.2796", "285.311, 447.876, 29.9734, 0.2796", "284.455, 447.429, 30.4548, 0.2796", "283.647, 446.875, 29.2407, 0.305", "283.11, 446.495, 28.4715, 0.305", "282.233, 445.962, 28.5286, 0.3304", "281.466, 445.478, 28.0266, 0.3814", "280.56, 445.0, 27.6959, 0.4068", "279.779, 444.33, 26.9307, 0.3814", "278.935, 443.736, 27.4089, 0.3304", "278.22, 442.978, 27.7374, 0.3304", "277.795, 442.506, 28.4446, 0.3814", "277.447, 441.64, 29.0114, 0.4322", "276.527, 441.428, 28.8982, 0.4322", "275.584, 441.352, 28.5852, 0.4322", "274.577, 441.479, 28.2736, 0.4322", "273.854, 442.156, 28.4421, 0.483", "272.895, 441.776, 28.0, 0.4576", "272.361, 440.832, 28.0, 0.4322", "271.763, 440.754, 26.8554, 0.3814", "270.899, 440.135, 26.2284, 0.4068", "270.03, 439.535, 26.7963, 0.4576", "269.111, 439.551, 26.9013, 0.5084", "268.273, 439.004, 27.9012, 0.5084", "267.496, 438.432, 28.0249, 0.4576", "266.813, 437.865, 27.2367, 0.4068", "266.202, 436.98, 27.6822, 0.3814", "265.807, 436.223, 26.88, 0.356", "265.628, 435.978, 24.6501, 0.305", "264.716, 435.978, 23.5124, 0.2542", "264.034, 435.369, 22.4935, 0.2288", "263.764, 434.72, 23.2176, 0.2288", "262.626, 434.712, 23.3198, 0.2288", "262.068, 433.878, 24.0811, 0.2288", "261.247, 433.402, 25.1339, 0.2288", "260.602, 433.118, 26.4348, 0.2288", "259.968, 432.916, 28.0748, 0.2542", "258.989, 432.461, 28.3906, 0.2796", "258.168, 432.0, 29.5254, 0.3304", "257.353, 431.746, 28.6969, 0.3304", "256.367, 431.504, 29.5579, 0.3814", "255.691, 431.837, 29.045, 0.3814", "255.451, 431.049, 28.0493, 0.4576", "254.428, 430.716, 28.495, 0.4576", "253.689, 430.83, 27.7959, 0.5084", "252.896, 430.976, 27.6279, 0.5084", "251.974, 430.677, 26.8038, 0.5338", "251.256, 430.038, 25.9571, 0.5338", "250.415, 429.485, 25.4747, 0.483", "249.342, 429.642, 25.2599, 0.4068", "248.304, 429.524, 24.92, 0.305", "247.165, 429.426, 24.9466, 0.2542", "246.268, 429.229, 26.2049, 0.2288", "245.168, 429.174, 25.8656, 0.2542", "244.056, 429.221, 25.2991, 0.305", "243.047, 429.445, 25.9473, 0.356", "242.3, 429.343, 24.7778, 0.356", "241.445, 429.043, 25.0155, 0.3814", "240.811, 429.572, 26.04, 0.4322" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "317.001, 487.344, 44.52, 0.7372", "317.593, 486.84, 42.7034, 0.5592", "318.231, 486.214, 43.2118, 0.5592", "318.352, 485.363, 42.4225, 0.5084", "318.622, 484.294, 42.173, 0.5592", "319.199, 483.331, 42.1579, 0.5592", "319.577, 482.433, 42.6056, 0.5338", "320.399, 481.817, 42.4306, 0.483", "320.771, 480.855, 42.3133, 0.483", "321.017, 480.14, 40.9833, 0.5338", "320.7, 479.346, 40.1282, 0.5592", "320.456, 478.561, 39.7382, 0.5338", "320.662, 477.634, 40.868, 0.4576", "320.637, 476.767, 39.6564, 0.4322", "320.836, 475.743, 39.5368, 0.4576", "321.29, 474.842, 39.7992, 0.483", "321.378, 473.791, 39.0306, 0.4576", "321.909, 472.997, 39.7922, 0.356", "322.626, 472.197, 40.04, 0.2796", "322.797, 471.251, 39.2554, 0.2288", "322.577, 470.393, 38.08, 0.2288", "323.213, 469.717, 37.1288, 0.2288", "323.392, 469.237, 35.0437, 0.2288", "323.459, 468.491, 33.2469, 0.2542", "324.203, 467.928, 31.9284, 0.2796", "324.215, 467.313, 30.0205, 0.305", "324.111, 466.322, 29.4025, 0.2796", "324.111, 465.521, 31.017, 0.2796", "324.456, 465.021, 32.8832, 0.305", "325.24, 465.091, 34.1824, 0.356", "325.587, 464.421, 35.0, 0.3814", "325.428, 463.576, 35.0067, 0.3814", "326.052, 463.185, 34.4296, 0.4068", "326.73, 462.749, 33.518, 0.4068", "327.551, 462.163, 32.4335, 0.3814", "328.566, 461.739, 31.8044, 0.305", "329.365, 461.375, 32.1639, 0.305", "330.357, 461.197, 32.2244, 0.3814", "331.402, 461.094, 32.0673, 0.5338", "332.248, 460.55, 32.0079, 0.6356", "332.472, 459.544, 31.3393, 0.661", "332.974, 458.698, 30.8034, 0.6102", "333.261, 458.053, 31.299, 0.5338", "333.818, 457.346, 31.1424, 0.483", "334.323, 456.703, 30.1456, 0.483", "334.505, 455.78, 29.7136, 0.483", "334.39, 454.743, 30.7555, 0.4576", "334.505, 453.747, 29.68, 0.3814", "335.051, 453.087, 28.6398, 0.356", "335.534, 452.439, 29.9379, 0.356", "336.099, 451.484, 30.2537, 0.3814", "336.449, 450.704, 30.2226, 0.3814", "336.614, 449.854, 29.4053, 0.3814", "336.699, 448.956, 29.687, 0.3814", "336.691, 447.921, 29.206, 0.3814", "336.834, 447.211, 29.6467, 0.4322", "336.939, 446.379, 28.4466, 0.4576", "336.944, 445.454, 29.0298, 0.4576", "337.136, 444.366, 29.1127, 0.356", "336.785, 443.495, 28.4127, 0.2796", "336.68, 442.974, 26.6, 0.2288", "337.136, 442.112, 26.3295, 0.2542", "337.749, 441.439, 26.0574, 0.305", "338.439, 440.948, 27.6483, 0.356", "339.432, 440.892, 27.7978, 0.3814", "340.479, 440.58, 27.5374, 0.4068", "341.359, 440.355, 28.6521, 0.4322", "342.268, 440.227, 28.3494, 0.4576", "343.021, 439.617, 27.8578, 0.4068", "343.82, 439.201, 28.28, 0.4068", "344.759, 438.699, 27.5374, 0.3814", "345.339, 437.887, 27.1813, 0.4068", "345.964, 437.096, 27.2821, 0.356", "346.628, 436.374, 26.8089, 0.3814", "347.203, 435.536, 26.88, 0.4068", "347.266, 434.486, 27.23, 0.4576", "347.525, 433.474, 27.44, 0.4322", "348.464, 433.121, 27.6802, 0.4068", "349.296, 433.244, 26.546, 0.4068", "349.861, 432.622, 26.4188, 0.4068", "350.478, 431.917, 26.5093, 0.4068", "351.372, 431.313, 26.0358, 0.356", "352.298, 430.726, 25.8437, 0.356", "352.699, 429.946, 25.5984, 0.3814", "352.96, 429.314, 24.4446, 0.4576", "353.714, 428.504, 23.9565, 0.483", "354.41, 427.681, 23.8, 0.5084", "354.908, 426.911, 24.0573, 0.483", "355.902, 426.524, 23.9582, 0.5338", "356.702, 425.781, 23.2756, 0.5084", "357.3, 425.11, 24.1828, 0.483", "358.093, 424.634, 24.4583, 0.4068", "358.59, 424.221, 22.7074, 0.3814", "359.428, 423.877, 23.2229, 0.3814", "360.409, 423.834, 22.0349, 0.3304", "361.367, 423.509, 22.5128, 0.2796", "362.014, 423.119, 24.068, 0.2542", "362.807, 423.091, 23.0012, 0.356", "363.336, 422.361, 22.6355, 0.5338", "364.109, 421.722, 21.5852, 0.7118", "364.935, 421.015, 21.7683, 0.788", "365.628, 420.591, 21.2954, 0.7372", "366.223, 419.72, 21.56, 0.661", "366.446, 418.849, 20.3249, 0.6102", "367.032, 417.964, 20.844, 0.661", "367.618, 417.338, 21.0137, 0.6864", "368.54, 416.872, 21.8089, 0.7118", "369.106, 415.994, 21.8938, 0.661", "369.053, 414.877, 22.1561, 0.6356", "369.334, 413.823, 22.68, 0.5848", "369.873, 413.112, 23.5547, 0.5338", "370.224, 412.477, 23.0737, 0.5084", "371.007, 411.775, 22.4134, 0.5084", "371.685, 411.208, 22.1312, 0.5084", "372.167, 410.301, 21.28, 0.4576", "373.064, 409.8, 20.746, 0.4576", "373.404, 409.036, 20.9983, 0.5338", "374.129, 408.491, 22.5319, 0.6356", "375.015, 407.994, 22.3742, 0.6356", "375.379, 407.521, 20.4896, 0.5338", "376.095, 406.803, 19.7008, 0.4068", "377.141, 406.578, 19.9676, 0.3304", "377.749, 405.94, 20.0908, 0.356", "378.417, 406.169, 21.149, 0.4068", "379.328, 406.151, 21.4267, 0.483", "379.693, 405.777, 20.16, 0.483" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "326.153, 498.784, 42.28, 0.483", "326.398, 500.058, 42.5348, 0.4322", "327.101, 500.429, 41.132, 0.3814", "327.65, 501.061, 39.6819, 0.3814", "328.68, 501.397, 38.9575, 0.3814", "329.081, 502.142, 40.0089, 0.4068", "329.511, 502.777, 38.9752, 0.4068", "329.199, 503.212, 37.6272, 0.4322", "328.957, 504.224, 37.3716, 0.4322", "328.825, 505.322, 37.816, 0.483", "328.619, 506.225, 37.3531, 0.4576", "328.438, 507.219, 36.5422, 0.4068", "328.526, 508.324, 36.6041, 0.3304", "328.223, 509.356, 36.4221, 0.3304", "328.434, 510.026, 34.7698, 0.3814", "328.628, 510.796, 33.1248, 0.4576", "328.455, 510.123, 31.6666, 0.5592", "327.388, 509.883, 31.7596, 0.6356", "326.803, 510.643, 32.5581, 0.6864", "326.039, 511.025, 32.7625, 0.6102", "325.23, 511.14, 31.4726, 0.5338", "324.895, 511.316, 29.2286, 0.4576", "325.021, 512.151, 27.7281, 0.483", "325.881, 512.702, 27.5363, 0.5084", "326.812, 512.84, 27.2787, 0.5338", "327.635, 512.741, 26.5485, 0.5338", "327.973, 512.578, 24.9886, 0.5592", "328.607, 512.512, 23.8266, 0.5592", "328.889, 513.07, 22.1743, 0.5848", "328.577, 514.103, 21.7403, 0.5848", "328.714, 514.597, 20.0752, 0.6102", "329.125, 515.299, 20.2894, 0.5848", "329.7, 515.935, 20.1197, 0.5592", "330.059, 516.481, 19.9867, 0.5592", "330.958, 517.088, 20.16, 0.5848" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "326.153, 498.784, 42.28, 0.483", "326.762, 498.132, 42.6, 0.5848", "327.496, 497.873, 43.4, 0.5592", "328.13, 497.086, 43.7746, 0.6102", "329.051, 496.61, 43.8668, 0.6356" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "326.449, 502.843, 58.5511, 0.5338", "326.908, 502.794, 59.5566, 0.3814", "327.755, 503.005, 59.7285, 0.4068", "328.175, 503.895, 61.1078, 0.4068", "329.217, 504.066, 61.1982, 0.356", "329.312, 504.872, 62.72, 0.3304", "329.877, 505.718, 63.4676, 0.3304", "330.985, 505.848, 63.3486, 0.4068", "332.103, 505.775, 63.8098, 0.5084", "333.054, 505.968, 64.68, 0.5338", "333.97, 506.33, 63.9671, 0.4576", "334.204, 507.059, 65.5088, 0.3304", "334.824, 507.873, 66.4465, 0.305", "335.797, 508.04, 67.2, 0.3814", "336.762, 508.05, 66.2388, 0.5338", "337.873, 508.23, 66.1651, 0.6102", "338.922, 508.519, 66.08, 0.6102", "339.665, 508.552, 65.7143, 0.5338", "340.407, 508.923, 67.2, 0.5084", "341.22, 509.419, 66.36, 0.5592", "342.277, 509.663, 65.9767, 0.661", "343.171, 509.824, 66.5132, 0.7118", "344.137, 509.862, 65.52, 0.6864", "344.86, 509.244, 66.36, 0.6102", "345.918, 509.201, 67.1303, 0.5338", "346.67, 509.652, 66.2701, 0.4576", "347.76, 509.868, 66.1987, 0.4322", "348.634, 509.831, 67.4744, 0.4576", "349.561, 509.908, 68.0039, 0.5338", "350.323, 509.995, 68.7053, 0.5592", "351.313, 510.357, 69.4596, 0.5848", "352.141, 510.898, 69.4322, 0.5848", "353.215, 510.85, 69.7001, 0.6356", "354.104, 511.405, 69.6494, 0.6864", "354.944, 512.042, 70.1554, 0.7372", "355.853, 512.179, 69.986, 0.7372", "356.679, 512.688, 70.7977, 0.661", "357.156, 512.408, 71.68, 0.5338", "357.171, 511.723, 69.9863, 0.4068", "357.888, 511.368, 70.0258, 0.356", "358.633, 511.139, 71.7262, 0.4068", "359.165, 511.493, 71.4104, 0.483", "359.884, 511.828, 71.4739, 0.5084", "360.546, 512.392, 71.4, 0.4322", "361.479, 512.147, 70.7238, 0.356", "361.37, 512.526, 72.7826, 0.305", "361.837, 512.287, 74.0289, 0.3304", "362.864, 512.212, 73.4073, 0.3814", "363.48, 512.766, 72.8694, 0.4322", "364.495, 512.793, 73.3807, 0.4322", "365.607, 512.726, 73.64, 0.4068", "366.744, 512.63, 73.64, 0.356", "367.885, 512.626, 73.7246, 0.3814", "368.941, 512.569, 74.0782, 0.4322", "369.895, 512.433, 73.4073, 0.5338", "370.927, 512.16, 74.335, 0.5848", "371.873, 512.333, 74.48, 0.5848", "372.543, 512.872, 75.7708, 0.5338", "373.414, 513.415, 76.1611, 0.4322", "374.486, 513.626, 76.8186, 0.3304", "375.133, 514.49, 77.2405, 0.305", "376.246, 514.571, 77.28, 0.3304", "377.296, 514.926, 77.4735, 0.3814", "377.95, 515.723, 77.5715, 0.356", "378.123, 516.673, 77.6684, 0.3304", "378.784, 517.533, 78.12, 0.3304", "379.812, 517.822, 78.12, 0.3304", "380.474, 518.606, 77.8506, 0.356", "380.893, 519.328, 79.2266, 0.3304", "380.766, 520.171, 80.4266, 0.3304", "381.88, 520.314, 80.6277, 0.2796", "382.886, 520.511, 80.64, 0.2542", "383.939, 520.838, 80.64, 0.2796", "384.269, 521.893, 80.64, 0.3814" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "326.449, 502.843, 58.5511, 0.5338", "326.771, 501.844, 57.8511, 0.7372", "327.241, 500.804, 57.8752, 0.7118", "327.669, 499.783, 58.5662, 0.661", "328.305, 498.841, 58.8462, 0.5848", "329.125, 498.046, 59.0114, 0.5338", "329.995, 497.357, 59.694, 0.5592", "330.586, 496.382, 59.8592, 0.661" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "319.137, 492.263, 52.1732, 0.5592", "318.493, 491.494, 52.36, 0.4068", "317.585, 491.006, 51.8, 0.356", "316.456, 490.887, 51.9711, 0.356", "315.372, 490.66, 52.0495, 0.4576", "314.416, 490.465, 51.7093, 0.5592", "313.526, 489.998, 50.871, 0.5848", "312.478, 489.716, 51.4436, 0.5592", "311.428, 489.45, 52.061, 0.5338", "310.471, 489.176, 52.0391, 0.5084", "309.442, 488.965, 51.5844, 0.4576", "308.641, 488.717, 52.36, 0.4068", "307.51, 488.693, 52.0467, 0.4068", "306.387, 488.807, 52.3323, 0.4068", "305.283, 488.784, 52.36, 0.4068", "304.421, 488.516, 51.3005, 0.4068", "303.482, 488.832, 51.5427, 0.4322", "302.629, 488.634, 50.8085, 0.4576", "301.795, 488.597, 50.1718, 0.4576", "301.084, 487.908, 50.143, 0.483", "300.48, 487.803, 51.3736, 0.5338", "299.516, 487.624, 51.24, 0.5338", "298.829, 487.071, 49.9534, 0.483", "298.101, 486.664, 50.5078, 0.3814", "297.073, 486.229, 50.4, 0.356", "296.085, 485.752, 50.68, 0.3814", "295.333, 485.414, 49.3595, 0.4322", "294.473, 485.275, 50.8225, 0.4322", "293.418, 484.962, 51.24, 0.3814", "292.381, 484.588, 50.974, 0.3304", "291.376, 484.565, 51.8, 0.305", "290.422, 484.367, 50.7707, 0.3304", "289.845, 483.691, 51.3103, 0.356", "289.234, 482.945, 51.6124, 0.3814", "288.62, 482.022, 51.277, 0.356", "287.707, 481.448, 51.053, 0.305", "286.814, 481.049, 51.602, 0.2542", "285.878, 480.479, 52.0316, 0.2288", "284.813, 480.195, 52.0313, 0.2542", "283.913, 479.702, 52.2668, 0.305", "283.229, 479.566, 52.1514, 0.3814", "282.564, 479.165, 52.7187, 0.4322", "281.65, 478.671, 52.3303, 0.4576", "280.695, 478.557, 52.892, 0.4576", "280.141, 477.69, 53.9252, 0.4576", "279.236, 477.191, 54.2228, 0.4576", "278.421, 476.467, 54.5689, 0.4576", "277.499, 475.84, 54.6, 0.4322", "276.502, 475.29, 54.6305, 0.3814", "275.615, 474.81, 54.6888, 0.305", "274.518, 474.504, 54.6, 0.2796", "273.597, 473.845, 54.6, 0.2796", "272.718, 473.347, 54.6, 0.305", "271.645, 473.004, 54.8159, 0.2796", "270.525, 472.824, 54.8898, 0.2542", "269.444, 472.745, 55.0144, 0.2288", "268.598, 472.12, 54.88, 0.2288", "267.64, 471.902, 54.5278, 0.2288", "266.704, 471.389, 54.32, 0.2288", "265.584, 471.214, 54.32, 0.2542", "264.442, 471.206, 54.32, 0.2796", "263.309, 471.047, 54.32, 0.305", "262.21, 470.985, 54.3575, 0.2796", "261.158, 470.87, 53.76, 0.2542", "260.014, 470.87, 53.76, 0.2288", "258.915, 470.87, 53.2, 0.2288", "257.771, 470.87, 53.2, 0.2542", "256.669, 470.87, 52.565, 0.305", "255.534, 470.947, 52.3603, 0.3814", "254.444, 470.775, 52.1973, 0.4068", "253.408, 470.964, 51.3825, 0.3814", "252.337, 471.073, 51.7188, 0.305", "251.475, 471.304, 50.6164, 0.2542", "250.614, 470.799, 50.8564, 0.2542", "249.567, 471.06, 50.4, 0.2796", "248.483, 471.328, 50.3325, 0.3304", "247.689, 470.757, 49.5916, 0.3304", "246.798, 470.12, 50.0069, 0.3304", "245.97, 469.372, 50.3952, 0.2796", "245.563, 468.364, 50.96, 0.2542", "245.037, 468.409, 49.8316, 0.2288", "244.296, 468.063, 49.0, 0.2288", "243.86, 467.07, 49.0549, 0.2288", "243.118, 466.416, 48.72, 0.2542", "242.13, 466.071, 48.9689, 0.305", "242.042, 465.323, 47.88, 0.356", "241.612, 464.451, 46.8611, 0.356", "241.335, 463.882, 44.8694, 0.305", "240.915, 463.124, 43.456, 0.2542", "239.953, 462.662, 42.84, 0.2288", "239.217, 462.508, 44.5203, 0.2288", "238.482, 462.438, 46.1961, 0.2542", "237.57, 462.153, 47.3015, 0.3304", "236.698, 461.893, 46.2, 0.4576", "235.729, 461.61, 45.4493, 0.5592", "234.937, 460.948, 45.2147, 0.6102", "234.352, 460.262, 44.2814, 0.5848", "233.623, 459.419, 44.5749, 0.5592", "232.732, 458.776, 44.9179, 0.5084", "231.831, 458.126, 44.8, 0.4576", "230.965, 457.489, 44.52, 0.4068", "230.251, 457.002, 43.4, 0.356", "229.617, 456.066, 43.2012, 0.3304", "229.044, 455.123, 42.84, 0.305", "228.638, 454.684, 43.9572, 0.3304", "228.109, 454.566, 42.5538, 0.356", "227.737, 454.914, 40.88, 0.3814", "227.288, 455.422, 40.6675, 0.3814", "226.298, 455.397, 40.1856, 0.3814", "225.534, 454.854, 39.9451, 0.4322", "224.566, 454.626, 39.2, 0.5084" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "319.137, 492.263, 52.1732, 0.5592", "319.061, 491.623, 51.338, 0.6102", "318.921, 490.917, 49.84, 0.5848", "318.779, 490.094, 50.9995, 0.483", "318.325, 489.087, 51.1868, 0.3304", "317.578, 488.311, 51.9744, 0.2542", "316.753, 487.797, 52.6568, 0.2796", "316.217, 487.06, 52.0134, 0.3814", "315.748, 486.265, 51.6891, 0.5592", "315.487, 485.588, 49.9559, 0.7118", "314.748, 484.932, 50.6299, 0.788", "314.294, 484.213, 52.0755, 0.7118", "314.016, 483.351, 51.1988, 0.5338", "313.791, 482.288, 51.8, 0.4068", "313.064, 481.491, 52.0498, 0.3814", "312.239, 480.792, 52.08, 0.4576", "311.634, 479.901, 51.8613, 0.483", "311.158, 479.323, 50.12, 0.483", "310.109, 479.016, 50.4367, 0.4576", "309.298, 478.694, 51.8, 0.4322", "308.511, 478.078, 50.9704, 0.3814", "307.88, 477.487, 52.0713, 0.305", "307.153, 477.07, 50.7027, 0.2796", "306.576, 476.549, 50.8466, 0.305", "306.019, 476.374, 50.96, 0.3814", "305.814, 475.406, 50.7024, 0.4322", "305.031, 474.872, 50.3714, 0.4322", "304.521, 474.416, 50.9704, 0.3814", "303.737, 473.717, 51.1652, 0.3304", "303.169, 472.818, 51.4212, 0.3304", "302.77, 472.164, 51.2112, 0.356", "302.347, 471.262, 50.4546, 0.3814", "302.157, 470.234, 50.2541, 0.3814", "301.537, 469.461, 50.5926, 0.4068", "300.634, 468.823, 50.5232, 0.4068", "299.714, 468.177, 50.2113, 0.3814", "298.743, 467.853, 50.3177, 0.305", "298.354, 467.001, 51.2274, 0.2542", "298.005, 465.96, 51.24, 0.2288", "297.225, 465.394, 51.8, 0.2288", "296.68, 464.575, 51.858, 0.2288", "295.857, 463.849, 52.0668, 0.2288", "295.224, 462.995, 51.8, 0.2542", "294.556, 462.199, 51.632, 0.305", "293.775, 462.091, 50.0604, 0.356", "293.23, 461.259, 49.7084, 0.3814", "293.024, 460.367, 49.4539, 0.3814", "292.655, 459.316, 49.1154, 0.3814", "292.204, 458.384, 48.7788, 0.356", "291.886, 457.488, 47.9881, 0.3304", "291.622, 456.607, 48.8012, 0.305", "290.973, 455.779, 48.8054, 0.305", "290.361, 455.02, 48.1662, 0.2796", "290.442, 453.954, 48.2101, 0.2542", "290.338, 453.116, 49.1582, 0.2288", "290.319, 452.224, 48.6343, 0.2288", "289.703, 451.505, 48.4266, 0.2288", "290.14, 450.729, 48.8998, 0.2288", "289.851, 449.847, 48.1718, 0.2288", "289.158, 449.021, 48.9306, 0.2288", "288.755, 448.076, 49.2744, 0.2288", "288.431, 447.558, 49.8938, 0.2288", "287.463, 447.034, 50.12, 0.2288", "287.249, 445.994, 49.56, 0.2288", "286.92, 444.912, 49.56, 0.2288", "286.041, 444.318, 49.56, 0.2542", "285.875, 443.237, 49.56, 0.305", "285.699, 442.146, 49.1688, 0.356", "284.941, 441.366, 49.1277, 0.356", "284.349, 440.622, 49.6602, 0.305", "284.23, 439.686, 50.0055, 0.2542", "283.879, 438.818, 49.0048, 0.2796", "283.464, 437.79, 49.476, 0.356", "282.913, 436.818, 49.2036, 0.4322", "282.29, 435.918, 48.8524, 0.4068", "282.002, 434.945, 49.1442, 0.3304", "282.065, 433.84, 49.2699, 0.2542", "282.001, 432.708, 49.0151, 0.2288", "281.7, 431.606, 49.0, 0.2542", "281.203, 430.603, 49.1826, 0.2796", "280.814, 429.572, 49.2979, 0.305", "280.666, 428.698, 47.8962, 0.2796", "280.686, 427.661, 47.0912, 0.2542", "280.737, 426.88, 48.0939, 0.2288", "280.539, 425.892, 47.9856, 0.2288", "280.059, 425.034, 47.6582, 0.2796", "279.754, 424.024, 47.8226, 0.356", "279.01, 423.256, 47.0691, 0.4322", "278.288, 422.447, 47.6, 0.4322", "277.882, 421.495, 48.16, 0.4322", "277.934, 420.364, 48.0903, 0.4576", "278.021, 419.355, 46.8748, 0.5084", "278.284, 418.435, 45.883, 0.5338", "278.305, 417.487, 45.5955, 0.5084", "278.098, 416.455, 44.8932, 0.4576", "277.684, 415.424, 45.0523, 0.4068", "277.172, 414.555, 44.7852, 0.4068", "276.517, 413.858, 44.7633, 0.4322", "276.23, 413.097, 45.6196, 0.4068", "276.037, 412.154, 45.6498, 0.3814", "275.647, 411.372, 44.0227, 0.3814", "275.029, 410.569, 44.4503, 0.4576", "274.311, 409.988, 44.1308, 0.483", "273.758, 409.223, 43.7049, 0.4576", "273.924, 408.115, 43.68, 0.4322", "273.651, 407.266, 43.811, 0.4068", "272.949, 406.614, 44.0202, 0.4068", "272.177, 405.879, 43.794, 0.3304", "272.112, 404.783, 43.68, 0.305", "271.585, 404.404, 42.7694, 0.3304", "270.878, 403.81, 42.3175, 0.4576", "270.276, 403.051, 42.611, 0.5848", "269.607, 402.582, 42.4656, 0.6102", "268.908, 401.964, 43.1458, 0.5338", "268.558, 401.084, 43.1427, 0.4322", "267.767, 401.061, 43.96, 0.3814", "267.608, 400.57, 42.6348, 0.4068", "266.78, 400.286, 43.4, 0.4322" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "274.763, 514.253, 52.08, 0.6102", "274.788, 513.902, 53.291, 0.4576", "274.574, 512.813, 53.48, 0.483", "273.897, 511.995, 54.2741, 0.4576", "273.066, 511.398, 54.1428, 0.4068", "272.451, 510.693, 55.44, 0.4068", "271.534, 510.444, 55.0824, 0.4322", "270.56, 510.071, 54.88, 0.4068", "270.525, 509.025, 55.2698, 0.3304", "270.485, 507.953, 54.8884, 0.2542", "270.295, 507.156, 56.2593, 0.2542", "269.869, 506.334, 56.84, 0.3304" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "274.763, 514.253, 52.08, 0.6102", "274.046, 513.595, 52.1055, 0.4576", "273.344, 512.995, 52.2486, 0.5338", "272.381, 512.592, 52.383, 0.5592", "271.744, 511.965, 50.9911, 0.5338", "270.975, 511.329, 51.5021, 0.5592", "270.546, 510.483, 50.8203, 0.5338", "269.808, 509.874, 49.8593, 0.4576", "269.235, 509.039, 49.3682, 0.3304", "268.301, 508.531, 49.56, 0.2796", "267.371, 507.907, 49.7818, 0.305", "266.369, 507.521, 50.0962, 0.3814", "265.542, 507.326, 48.6363, 0.4068", "264.846, 506.681, 48.3613, 0.4068", "264.176, 506.003, 47.3684, 0.356", "263.674, 505.121, 47.9777, 0.3304", "262.913, 504.569, 47.32, 0.305", "262.185, 504.181, 46.2524, 0.305", "261.274, 504.075, 45.5879, 0.3304", "260.318, 504.279, 45.1111, 0.356", "259.582, 503.798, 45.9799, 0.4322", "258.941, 503.609, 45.4219, 0.483", "258.132, 503.336, 44.163, 0.5084", "257.129, 503.168, 43.12, 0.4322", "256.236, 502.891, 43.3745, 0.356", "255.23, 502.546, 42.7904, 0.3304", "255.106, 501.567, 43.0452, 0.3814", "254.395, 501.102, 42.9786, 0.4068", "253.52, 501.032, 42.2892, 0.3814", "252.833, 500.296, 41.8642, 0.305", "252.17, 500.155, 40.8878, 0.2796", "251.376, 499.651, 40.8439, 0.305", "250.593, 498.944, 41.0136, 0.356", "249.991, 498.219, 41.7992, 0.3814", "249.516, 497.842, 39.9053, 0.3814", "248.694, 497.514, 40.208, 0.3814", "247.833, 496.923, 40.88, 0.356", "247.094, 496.217, 40.1097, 0.305", "246.134, 495.842, 39.7359, 0.2542", "245.221, 496.315, 39.207, 0.2288", "244.431, 495.794, 39.3481, 0.2542", "244.435, 495.025, 38.1783, 0.3304", "243.568, 494.515, 37.9442, 0.4068", "243.104, 493.956, 37.2338, 0.4322", "242.979, 493.049, 38.36, 0.356", "243.395, 492.016, 38.9063, 0.305", "243.619, 491.102, 38.2343, 0.305", "243.805, 490.422, 36.68, 0.356", "244.203, 489.713, 35.28, 0.3814", "244.554, 488.818, 35.9176, 0.4068", "244.745, 487.868, 35.9106, 0.4576", "244.651, 486.914, 35.2534, 0.5338", "244.576, 485.887, 35.3195, 0.5592", "244.745, 484.848, 35.5396, 0.5338", "244.704, 483.8, 35.3189, 0.4576", "244.727, 483.039, 35.826, 0.4068", "244.419, 482.206, 34.72, 0.3814", "243.901, 481.217, 34.9941, 0.4068", "243.616, 480.224, 34.6178, 0.4576", "243.486, 479.305, 34.8583, 0.5338", "243.315, 478.407, 35.0014, 0.5592", "242.925, 477.529, 34.0088, 0.5084", "242.535, 476.492, 33.992, 0.4068", "242.188, 475.436, 34.0698, 0.356", "241.933, 474.458, 33.4664, 0.4068", "241.446, 473.465, 33.9072, 0.5338", "241.122, 472.63, 33.474, 0.6102", "240.566, 471.845, 33.3757, 0.6356", "240.602, 470.928, 33.9256, 0.5592", "240.77, 470.207, 32.5083, 0.5084", "240.239, 469.427, 32.627, 0.4322", "239.608, 468.694, 33.7996, 0.4322", "239.09, 467.786, 34.202, 0.4322", "238.637, 466.887, 33.5712, 0.483", "238.18, 466.169, 32.6519, 0.5084", "237.846, 465.411, 32.2274, 0.5084", "237.028, 465.029, 32.6012, 0.4322", "236.137, 464.696, 31.7484, 0.3304", "235.282, 464.591, 31.9836, 0.2796", "234.883, 464.392, 29.6173, 0.305", "234.037, 464.191, 29.701, 0.3814", "233.306, 464.121, 29.5425, 0.4322", "232.649, 463.449, 29.4641, 0.4576", "232.263, 462.476, 29.9774, 0.4322", "231.705, 461.686, 29.4468, 0.3814", "230.848, 461.375, 29.6198, 0.3304", "229.975, 461.546, 28.84, 0.305", "229.379, 461.178, 28.0132, 0.3304", "228.452, 461.375, 29.4302, 0.3304", "227.76, 461.62, 29.1015, 0.356", "227.91, 461.49, 27.1681, 0.356", "226.789, 461.321, 27.1606, 0.3814", "226.344, 460.517, 28.28, 0.4322", "225.939, 459.545, 28.28, 0.5084" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "285.694, 497.717, 45.92, 0.4322", "285.675, 497.092, 45.6182, 0.4068", "285.436, 497.097, 43.0948, 0.4068", "284.466, 497.078, 42.8487, 0.4068", "283.67, 497.068, 44.7079, 0.3814", "282.593, 496.837, 44.5483, 0.3814", "281.485, 496.924, 44.0236, 0.4322", "280.45, 496.613, 43.801, 0.483", "279.493, 496.406, 44.6785, 0.5338", "278.459, 496.589, 43.96, 0.5338", "277.663, 496.02, 43.6262, 0.5592", "276.646, 495.797, 44.2338, 0.5592", "275.827, 495.115, 44.0899, 0.5338", "275.183, 494.391, 44.2299, 0.4576", "274.22, 494.374, 43.5338, 0.4576", "273.686, 494.495, 41.3549, 0.483", "273.082, 493.811, 40.3354, 0.5084", "272.733, 493.931, 38.4532, 0.483", "272.158, 494.814, 37.977, 0.4576", "271.47, 495.413, 37.5642, 0.4576", "270.986, 495.911, 37.6127, 0.483", "270.068, 496.054, 36.6758, 0.5338", "269.477, 496.888, 35.8809, 0.6102", "268.852, 497.64, 35.84, 0.6102", "267.781, 497.64, 35.2136, 0.5592", "266.652, 497.64, 35.1568, 0.4576", "265.876, 497.483, 34.3902, 0.4322", "265.509, 496.824, 34.4859, 0.4576", "264.981, 497.44, 33.32, 0.5592", "264.208, 498.182, 33.8528, 0.5848", "263.214, 498.544, 33.32, 0.5592", "262.768, 498.326, 31.488, 0.4322", "262.064, 498.006, 30.2711, 0.3814", "261.522, 498.615, 31.7834, 0.3304", "260.975, 498.195, 31.7957, 0.356", "260.656, 498.45, 30.24, 0.3304", "259.764, 498.707, 30.24, 0.3304", "259.076, 499.196, 30.2851, 0.305", "258.194, 499.497, 30.4172, 0.3304", "257.277, 499.825, 30.618, 0.3814", "256.515, 500.474, 30.0812, 0.4068", "255.573, 500.216, 29.6377, 0.3814", "254.794, 500.626, 29.5596, 0.3304", "254.189, 501.025, 27.988, 0.356", "253.617, 501.615, 26.6255, 0.4576", "253.063, 502.105, 27.7539, 0.5592", "252.273, 502.631, 27.7508, 0.5592", "251.6, 502.894, 26.4093, 0.4576", "251.156, 503.832, 26.04, 0.3304", "250.3, 503.965, 26.5866, 0.2796", "249.423, 503.74, 25.2426, 0.305", "248.442, 504.176, 25.622, 0.3814", "247.513, 504.376, 25.8261, 0.4322", "246.522, 504.504, 26.4905, 0.4322", "245.667, 504.554, 27.72, 0.4068", "244.735, 505.076, 28.1523, 0.3814", "243.689, 505.161, 28.3002, 0.3814", "242.719, 505.375, 27.9135, 0.356", "241.801, 505.667, 27.7166, 0.3304", "240.992, 506.191, 27.9135, 0.3304", "240.048, 506.395, 26.8212, 0.4068", "239.17, 506.839, 27.2933, 0.483", "238.651, 507.461, 26.6255, 0.5084", "238.04, 507.91, 26.936, 0.4322", "237.541, 508.739, 27.496, 0.3304", "236.738, 509.44, 27.0861, 0.305", "235.916, 510.148, 27.72, 0.356", "235.527, 510.937, 26.8598, 0.4576", "234.843, 511.743, 27.179, 0.483", "234.281, 512.506, 26.1271, 0.483", "233.719, 513.159, 25.384, 0.4322", "233.071, 513.881, 24.1752, 0.4322", "232.996, 514.548, 24.6156, 0.4322", "232.493, 515.259, 24.0206, 0.483", "232.122, 516.052, 23.8, 0.5084", "231.354, 516.668, 23.7997, 0.5084", "231.009, 517.667, 23.0605, 0.483", "230.744, 518.717, 22.4109, 0.4322", "230.629, 519.712, 22.948, 0.4068", "230.567, 520.792, 23.4996, 0.356", "230.665, 521.56, 22.0136, 0.305", "231.31, 522.079, 21.56, 0.2796", "230.894, 522.957, 20.7662, 0.2796", "230.401, 523.786, 20.3896, 0.3304", "230.515, 524.524, 19.6, 0.356" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "285.694, 497.717, 45.92, 0.4322", "285.43, 497.249, 46.0986, 0.3814", "284.967, 496.736, 44.2744, 0.3814", "284.003, 496.712, 45.36, 0.356", "283.291, 496.053, 45.36, 0.3814", "282.683, 495.194, 44.8367, 0.4068", "281.981, 494.372, 44.2109, 0.4576", "281.004, 493.943, 43.4008, 0.4068", "280.112, 493.642, 43.3636, 0.3814", "279.358, 493.17, 44.4329, 0.3814", "278.483, 492.729, 44.7896, 0.4576", "277.592, 492.261, 44.0014, 0.483", "276.729, 491.721, 44.819, 0.5084", "275.751, 491.323, 44.8448, 0.5084", "274.747, 490.993, 43.9659, 0.5338", "274.032, 490.204, 43.4, 0.483", "273.089, 489.705, 43.96, 0.4068", "272.049, 489.304, 43.6775, 0.305", "271.025, 489.063, 43.3157, 0.2796", "269.986, 488.681, 43.3026, 0.2796", "269.124, 488.105, 42.5989, 0.305", "268.267, 487.465, 42.1593, 0.305", "267.249, 487.044, 42.28, 0.305", "266.391, 486.464, 42.84, 0.3304", "265.534, 486.09, 41.946, 0.356", "264.842, 485.411, 42.0932, 0.4068", "263.839, 484.902, 42.0904, 0.4322", "262.843, 484.395, 41.7679, 0.4576", "262.123, 483.77, 41.7575, 0.4322", "261.122, 483.602, 42.5538, 0.4068", "260.387, 483.572, 40.6927, 0.356", "259.42, 483.491, 41.599, 0.3304", "258.357, 483.131, 41.9373, 0.305", "257.223, 483.046, 41.8606, 0.305", "256.266, 482.711, 41.1421, 0.305", "255.283, 482.292, 41.44, 0.305", "254.177, 482.003, 41.44, 0.356", "253.165, 481.554, 41.72, 0.4068", "252.274, 480.87, 42.0, 0.4322", "251.266, 480.379, 42.2778, 0.356", "250.225, 480.132, 42.3394, 0.2796", "250.28, 479.575, 44.0392, 0.2542", "250.042, 478.669, 43.1113, 0.2796", "249.624, 478.306, 40.9122, 0.305", "248.972, 477.757, 40.04, 0.3304", "248.968, 476.63, 40.1416, 0.3814", "249.15, 475.531, 40.0963, 0.4576", "248.854, 474.501, 39.7127, 0.5084", "248.15, 473.821, 39.3893, 0.5338", "247.689, 473.017, 39.0578, 0.5084", "247.903, 472.044, 39.3056, 0.4576", "247.019, 471.778, 40.04, 0.3814", "246.77, 471.116, 38.6604, 0.356", "246.565, 470.335, 37.8983, 0.3304", "246.854, 469.295, 38.2763, 0.356", "246.955, 468.239, 37.8, 0.3304", "246.318, 467.639, 36.9345, 0.356", "245.789, 466.931, 35.8546, 0.3304", "245.845, 466.007, 36.8749, 0.356", "246.518, 465.722, 35.2388, 0.3304", "246.645, 465.178, 34.4716, 0.3814", "246.179, 465.075, 36.7839, 0.4068", "245.281, 465.019, 35.7787, 0.483", "245.498, 464.634, 34.0819, 0.483", "245.245, 464.859, 32.0956, 0.4576", "244.5, 464.488, 32.5576, 0.4068", "243.791, 463.926, 32.0009, 0.356", "244.077, 463.112, 32.9585, 0.3304", "243.416, 462.634, 31.7912, 0.305", "242.28, 462.626, 31.8609, 0.3304", "241.374, 462.226, 31.3877, 0.3814", "240.842, 461.353, 31.486, 0.4322", "239.912, 460.882, 31.64, 0.483", "239.182, 460.137, 31.1984, 0.5084", "238.289, 459.774, 29.8682, 0.5592", "237.617, 459.208, 28.9993, 0.5592", "237.026, 458.62, 29.3555, 0.5592", "236.47, 457.972, 28.0762, 0.5084", "235.828, 457.236, 28.7367, 0.483", "235.124, 456.731, 29.9821, 0.4576", "234.517, 456.342, 29.673, 0.4322", "233.854, 455.845, 29.4311, 0.3814", "232.735, 455.742, 29.68, 0.305", "231.783, 455.208, 29.68, 0.2796", "231.398, 454.215, 29.4997, 0.305", "230.587, 453.718, 28.8308, 0.356", "229.839, 453.59, 27.16, 0.3814", "229.6, 452.91, 28.56, 0.3814" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "329.051, 496.61, 43.8668, 0.6356", "329.534, 496.615, 44.9669, 0.5084", "330.433, 497.237, 44.8, 0.5592", "331.359, 497.844, 44.7378, 0.6102", "331.959, 498.313, 43.6624, 0.6102", "332.832, 498.93, 43.12, 0.6102", "333.337, 499.69, 42.6076, 0.6356", "334.164, 499.694, 41.5268, 0.661", "334.971, 499.603, 41.16, 0.6356", "335.746, 499.393, 39.8373, 0.5592", "336.336, 499.902, 39.4702, 0.483", "337.231, 499.826, 38.4642, 0.483", "337.822, 500.113, 37.9954, 0.5338", "338.687, 500.157, 37.3643, 0.5338" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "329.051, 496.61, 43.8668, 0.6356", "329.471, 496.322, 42.586, 0.4576", "329.752, 495.55, 41.0906, 0.4068", "330.549, 495.59, 41.9964, 0.4068", "331.216, 495.623, 43.6624, 0.4576", "332.214, 495.117, 43.7027, 0.5084", "333.008, 494.461, 43.3829, 0.5338", "333.175, 493.546, 42.0073, 0.5084", "334.097, 493.255, 41.1174, 0.483", "334.946, 493.072, 40.04, 0.4576", "335.605, 492.332, 40.3418, 0.483", "336.456, 491.652, 40.5322, 0.483", "336.987, 490.85, 40.4838, 0.483", "337.828, 490.48, 39.4442, 0.4576", "338.219, 489.786, 39.391, 0.4322", "338.784, 489.403, 40.1806, 0.4322", "339.219, 489.074, 38.971, 0.4576", "339.959, 488.724, 37.6138, 0.5592", "340.514, 488.191, 37.7255, 0.6356", "341.237, 487.601, 37.814, 0.661", "341.872, 486.755, 37.5964, 0.6356", "341.877, 486.022, 36.4, 0.5848" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "330.586, 496.382, 59.8592, 0.661", "331.069, 496.515, 60.9193, 0.483", "331.537, 497.468, 61.1296, 0.5084", "331.729, 498.572, 61.32, 0.4322", "331.301, 499.48, 62.1116, 0.4068", "331.382, 500.576, 62.8692, 0.4068", "331.301, 501.659, 63.5614, 0.4576", "331.527, 502.63, 64.3714, 0.4322", "331.178, 503.568, 65.5466, 0.4322", "330.494, 504.425, 66.08, 0.4322", "330.064, 505.426, 66.6072, 0.4322", "329.901, 506.274, 67.5783, 0.3814", "330.422, 507.012, 67.48, 0.3814", "330.975, 507.735, 67.9479, 0.4576", "331.827, 508.424, 68.4197, 0.5592", "332.309, 509.164, 69.4604, 0.6102", "332.432, 510.05, 70.5239, 0.6102", "332.789, 510.877, 69.4476, 0.5848", "333.249, 511.668, 69.2936, 0.5592", "333.704, 512.39, 69.8505, 0.5338", "333.825, 513.448, 70.7742, 0.5592", "333.933, 514.563, 71.12, 0.5848", "333.517, 515.382, 71.729, 0.6102", "333.324, 516.469, 71.6876, 0.6356", "333.322, 517.512, 72.4718, 0.6864", "333.673, 518.549, 71.9552, 0.7372", "334.137, 519.53, 72.3411, 0.7372", "333.802, 520.575, 72.52, 0.661", "334.125, 521.323, 71.7752, 0.6102", "334.268, 522.393, 71.997, 0.6102", "334.047, 523.378, 72.5413, 0.6356", "333.933, 524.409, 73.6212, 0.5592", "334.171, 525.436, 73.4384, 0.4322", "334.497, 526.401, 73.908, 0.3304", "334.619, 527.337, 73.4264, 0.305", "335.079, 528.08, 73.0898, 0.305", "335.454, 528.972, 74.025, 0.305", "335.925, 529.869, 73.08, 0.356", "336.226, 530.885, 73.08, 0.3814", "336.793, 531.612, 73.4768, 0.4576", "337.008, 532.678, 73.705, 0.4576", "337.111, 533.777, 73.9743, 0.5084", "337.25, 534.909, 73.9497, 0.483", "337.407, 535.843, 72.9705, 0.4576", "337.879, 536.669, 72.0692, 0.4068", "337.989, 537.789, 72.24, 0.4068", "338.066, 538.708, 73.0971, 0.483", "337.937, 539.46, 74.1866, 0.5592", "338.045, 540.47, 73.2438, 0.6102", "337.907, 541.463, 72.5794, 0.5592", "337.708, 542.571, 72.6121, 0.5084", "337.708, 543.647, 72.6387, 0.4068", "337.708, 544.512, 71.4946, 0.356", "337.708, 545.622, 72.063, 0.305", "337.689, 546.641, 73.0775, 0.3304", "337.697, 547.413, 74.5514, 0.356", "338.042, 548.289, 74.5041, 0.356", "338.024, 549.368, 74.2378, 0.305", "338.024, 550.356, 74.9112, 0.2542", "337.65, 551.091, 76.1342, 0.2796", "337.286, 552.033, 75.1976, 0.3814", "337.195, 553.151, 75.1408, 0.483", "336.78, 554.191, 74.7446, 0.5084", "336.365, 555.205, 74.7807, 0.4576", "336.012, 555.599, 76.72, 0.4322", "335.555, 556.515, 76.3168, 0.4068", "335.136, 557.541, 76.6268, 0.3814", "334.962, 558.633, 76.218, 0.305", "334.619, 559.631, 76.6102, 0.2796", "334.593, 560.752, 76.8466, 0.2796", "334.227, 561.524, 77.0134, 0.305", "334.276, 562.618, 76.44, 0.2796", "334.185, 563.739, 76.169, 0.2542", "334.165, 564.669, 76.5584, 0.2288", "334.733, 565.365, 77.28, 0.2542" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "330.586, 496.382, 59.8592, 0.661", "330.861, 495.312, 59.4647, 0.6864", "331.401, 494.334, 58.8851, 0.5848", "332.114, 493.44, 58.8465, 0.5848", "332.831, 492.552, 59.0156, 0.6102", "333.711, 491.878, 59.6929, 0.661", "334.433, 490.996, 59.9141, 0.7372", "334.967, 489.984, 59.8912, 0.7626", "335.593, 489.028, 59.7708, 0.788" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "338.687, 500.157, 37.3643, 0.5338", "338.502, 500.443, 34.6354, 0.483", "338.165, 500.457, 32.1751, 0.4068", "337.627, 500.665, 31.3345, 0.4068", "337.398, 500.555, 28.8691, 0.4576", "336.357, 500.729, 28.6784, 0.5338", "335.452, 501.113, 27.375, 0.5592", "334.588, 501.539, 27.3344, 0.5338", "333.896, 501.644, 25.8513, 0.4322", "332.929, 501.652, 26.0392, 0.4068", "331.86, 501.644, 26.5958, 0.4068", "331.299, 502.231, 25.76, 0.483", "330.732, 502.976, 26.332, 0.4576", "330.089, 503.363, 24.92, 0.4576", "329.297, 503.937, 25.48, 0.4576", "328.676, 504.285, 26.6689, 0.5338", "327.757, 504.453, 27.0794, 0.5848", "326.918, 504.504, 26.1853, 0.5848", "325.934, 504.161, 25.6819, 0.5592", "325.496, 504.083, 23.7661, 0.5084", "324.755, 504.275, 23.5138, 0.4576", "324.085, 504.849, 24.6302, 0.4322", "323.257, 505.305, 24.54, 0.4322", "322.51, 504.962, 24.2802, 0.483", "321.862, 505.439, 22.757, 0.483", "321.239, 505.885, 23.347, 0.4576", "321.266, 506.563, 23.2151, 0.3814", "321.819, 506.944, 21.684, 0.3814", "322.228, 507.643, 20.2269, 0.4576", "322.618, 508.017, 19.465, 0.5592", "321.678, 508.23, 19.6944, 0.5338", "320.828, 508.926, 20.16, 0.4322", "319.976, 509.538, 20.16, 0.3304" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "338.687, 500.157, 37.3643, 0.5338", "339.3, 500.614, 38.47, 0.3304", "339.901, 500.843, 37.5138, 0.356", "340.485, 500.501, 36.1668, 0.4068", "341.476, 500.614, 35.8394, 0.4576", "342.301, 500.786, 34.463, 0.5592", "342.666, 501.517, 34.659, 0.6356", "343.612, 501.639, 33.8422, 0.661", "344.445, 501.451, 32.34, 0.6102", "345.117, 501.287, 31.9164, 0.6102", "346.12, 501.699, 31.64, 0.6356", "347.201, 501.644, 31.5879, 0.661", "348.156, 501.765, 31.1637, 0.6102", "348.835, 501.53, 31.299, 0.5592", "349.849, 501.788, 30.52, 0.5084", "350.635, 502.152, 30.2554, 0.4576", "351.399, 502.599, 30.1202, 0.4322", "351.959, 502.216, 28.4749, 0.4576", "352.866, 502.222, 27.6212, 0.5084", "353.572, 502.102, 28.4668, 0.5338", "354.374, 501.785, 27.3137, 0.5338", "354.869, 502.079, 25.4509, 0.5592", "355.772, 501.54, 24.9757, 0.5592", "356.636, 500.969, 25.48, 0.5338", "357.593, 501.183, 26.3035, 0.4322", "358.714, 501.091, 26.245, 0.3814", "359.205, 501.536, 24.6008, 0.4068", "360.137, 501.726, 24.64, 0.5592", "360.819, 501.511, 23.5256, 0.6356", "361.622, 501.186, 23.2705, 0.661", "362.529, 501.699, 23.24, 0.5848", "363.362, 501.859, 22.5375, 0.6102", "363.599, 502.582, 21.14, 0.6102", "364.451, 503.148, 21.2069, 0.5848", "364.709, 504.155, 21.4407, 0.5084", "364.821, 505.19, 21.0, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "341.877, 486.022, 36.4, 0.5848", "342.266, 485.645, 36.4, 0.5084", "342.948, 484.783, 35.9064, 0.4068", "343.537, 484.033, 35.8831, 0.356", "343.868, 482.978, 36.12, 0.2796", "344.56, 482.392, 37.2548, 0.2796", "344.444, 481.471, 36.3734, 0.305", "344.841, 480.861, 36.4, 0.356", "345.288, 480.201, 35.84, 0.4068", "345.606, 479.257, 35.9484, 0.483", "345.515, 478.304, 35.2215, 0.5848", "345.684, 477.333, 35.4978, 0.6356", "345.829, 476.363, 35.7375, 0.5848", "345.962, 475.528, 35.0913, 0.483", "346.352, 474.879, 34.7217, 0.4068", "347.065, 474.056, 35.0748, 0.356", "347.863, 473.616, 35.8126, 0.356", "348.926, 473.498, 35.2808, 0.3814", "349.367, 472.793, 35.5239, 0.483", "349.873, 472.066, 34.44, 0.5592", "350.532, 471.668, 35.4385, 0.5592", "351.453, 471.108, 35.1364, 0.5084", "351.906, 470.642, 34.1978, 0.4322", "352.841, 470.305, 34.0928, 0.4322", "353.22, 470.5, 32.8289, 0.4068", "354.014, 470.173, 33.7887, 0.4576", "354.419, 469.196, 33.175, 0.4576", "355.046, 468.374, 33.0184, 0.5084", "355.657, 467.657, 33.273, 0.483", "356.495, 467.165, 32.741, 0.5338", "357.274, 466.523, 33.0392, 0.5592", "357.613, 466.134, 31.1542, 0.6102", "358.125, 465.312, 31.08, 0.5592", "358.103, 464.256, 30.9921, 0.483", "358.801, 463.965, 31.351, 0.4322", "359.756, 463.474, 31.6268, 0.4322", "360.415, 462.749, 30.6132, 0.4576", "360.446, 461.93, 29.7024, 0.4322", "360.539, 460.841, 29.68, 0.4322", "360.588, 460.107, 29.0688, 0.4322", "360.774, 459.051, 28.6675, 0.4322", "360.607, 458.058, 29.2138, 0.3814", "360.302, 457.102, 29.8231, 0.3304", "360.245, 455.972, 29.9236, 0.305", "360.142, 454.841, 29.7732, 0.305", "359.835, 453.883, 29.8648, 0.305", "359.365, 453.477, 28.3769, 0.3304", "359.337, 452.454, 28.779, 0.3814", "358.958, 451.505, 29.0578, 0.4322", "358.486, 450.651, 29.0811, 0.4576", "357.729, 449.973, 29.5512, 0.4576", "357.542, 449.117, 30.0345, 0.4576", "357.385, 448.22, 29.1189, 0.4576", "357.581, 447.215, 28.8624, 0.4576", "357.904, 446.393, 28.7272, 0.4322", "358.185, 445.884, 28.5807, 0.3814", "358.045, 444.806, 28.9677, 0.3304", "357.814, 444.26, 28.56, 0.3304", "357.891, 443.268, 29.0604, 0.3814", "358.308, 442.306, 28.6681, 0.4068", "358.572, 441.391, 28.2489, 0.3814", "359.199, 440.644, 28.0176, 0.305", "358.841, 439.797, 29.2186, 0.2542", "359.017, 439.402, 28.336, 0.2288", "359.696, 439.043, 29.12, 0.2542", "359.857, 438.044, 28.1739, 0.305", "359.646, 436.987, 27.3977, 0.3814", "359.257, 436.207, 26.9833, 0.4576", "359.043, 435.299, 27.1446, 0.483", "359.613, 434.333, 27.1261, 0.483", "360.217, 433.424, 27.5332, 0.4322", "360.195, 432.464, 27.16, 0.4322", "359.901, 431.509, 27.9672, 0.4576", "359.788, 430.463, 27.4576, 0.483", "360.232, 429.778, 28.9038, 0.5084", "360.359, 429.114, 29.96, 0.5084" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "341.877, 486.022, 36.4, 0.5848", "342.15, 485.684, 36.4, 0.4068", "342.167, 484.793, 37.4794, 0.4322", "342.343, 483.73, 38.08, 0.483", "342.525, 482.768, 38.0489, 0.483" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "335.593, 489.028, 59.7708, 0.788", "336.104, 488.838, 58.2775, 0.305", "336.966, 488.575, 57.8217, 0.356", "337.934, 488.433, 57.0528, 0.3814", "338.517, 488.67, 55.4674, 0.356", "339.487, 488.869, 56.2694, 0.3304", "340.547, 488.936, 55.9406, 0.305", "341.425, 489.189, 56.6468, 0.356", "342.391, 489.299, 57.0329, 0.4322", "343.303, 489.877, 56.8383, 0.5084", "344.167, 490.293, 56.4365, 0.5084", "344.755, 490.933, 57.0926, 0.483", "345.382, 491.725, 57.421, 0.4576", "346.141, 492.026, 56.2041, 0.4322", "346.854, 492.255, 55.0175, 0.3814", "347.68, 491.808, 55.0152, 0.3304", "348.596, 492.371, 55.2182, 0.3304", "349.425, 492.492, 56.2209, 0.3814", "350.303, 492.149, 56.3013, 0.4322", "351.236, 492.492, 56.4729, 0.483", "352.107, 493.041, 56.0924, 0.5084", "353.11, 493.192, 56.6037, 0.5592", "354.052, 492.98, 56.56, 0.5848", "355.065, 492.959, 56.56, 0.6102", "356.046, 493.026, 57.3882, 0.6102", "357.088, 493.306, 57.2827, 0.5848", "357.7, 493.832, 58.7812, 0.5848", "358.096, 494.628, 58.2092, 0.5338", "358.905, 494.902, 58.3696, 0.5084", "359.805, 495.237, 57.519, 0.4068", "360.71, 495.582, 57.6836, 0.3814", "361.799, 495.583, 58.3268, 0.356", "362.888, 495.622, 59.0598, 0.4322", "363.975, 495.706, 58.5614, 0.483", "364.975, 495.553, 58.7944, 0.5084", "365.974, 495.15, 57.96, 0.4576", "366.86, 495.009, 58.6835, 0.4068", "367.872, 495.279, 58.2935, 0.3814", "368.6, 495.016, 58.6272, 0.3814", "369.48, 494.553, 59.2609, 0.3814", "370.358, 494.89, 58.0356, 0.3814", "371.121, 494.484, 58.1084, 0.3814", "371.748, 494.119, 58.2851, 0.356", "372.703, 493.845, 58.0213, 0.356", "373.806, 493.623, 58.24, 0.3304", "374.904, 493.595, 58.4962, 0.3304", "375.992, 493.731, 58.4581, 0.2796", "376.902, 493.388, 58.5976, 0.2542", "377.846, 493.281, 58.3646, 0.2288", "378.76, 492.863, 59.08, 0.2542", "379.615, 492.188, 59.0769, 0.305", "379.816, 491.629, 58.52, 0.356", "380.724, 491.32, 59.6428, 0.356", "381.518, 490.776, 59.36, 0.305", "382.538, 490.269, 59.36, 0.2542", "383.304, 490.204, 60.4652, 0.2288", "384.423, 490.204, 60.0642, 0.2288", "385.559, 490.204, 59.92, 0.2288", "386.703, 490.204, 59.92, 0.2288", "387.847, 490.204, 59.92, 0.2288", "388.991, 490.204, 59.92, 0.2288", "390.033, 489.846, 59.9696, 0.2288", "391.004, 489.401, 59.4958, 0.2288", "392.038, 489.07, 59.08, 0.2288", "393.084, 488.694, 59.08, 0.2288", "393.895, 488.046, 58.52, 0.2542", "394.742, 487.386, 58.6984, 0.2796", "395.522, 486.662, 58.1403, 0.305", "396.484, 486.337, 59.047, 0.2796", "397.395, 485.97, 58.0829, 0.2796", "398.459, 485.676, 58.52, 0.2796", "399.574, 485.446, 58.3906, 0.305", "400.707, 485.363, 58.24, 0.2796", "401.735, 484.923, 58.24, 0.305", "402.781, 484.508, 58.2876, 0.3304", "403.673, 483.836, 58.672, 0.3814", "404.619, 483.244, 58.3265, 0.3304", "405.459, 482.537, 57.96, 0.2796", "406.587, 482.362, 57.96, 0.2288", "407.517, 481.979, 58.6718, 0.2288", "408.499, 481.624, 58.1762, 0.2288", "409.58, 481.592, 57.4, 0.2288", "410.494, 480.977, 57.4204, 0.2288", "410.983, 480.295, 58.24, 0.2796", "411.878, 479.767, 58.7362, 0.3814", "412.839, 479.344, 58.613, 0.483", "413.807, 479.257, 58.2534, 0.483", "414.129, 478.679, 56.8806, 0.3814", "414.813, 478.423, 55.7304, 0.2796", "415.46, 477.917, 56.2363, 0.2542", "416.072, 477.63, 57.3233, 0.3304", "416.75, 477.476, 57.7923, 0.4322", "417.713, 477.121, 57.7357, 0.5084", "418.711, 476.833, 57.6831, 0.5338", "419.439, 476.182, 57.4258, 0.5338", "420.224, 475.814, 56.28, 0.5084", "421.254, 475.68, 57.12, 0.4576", "421.88, 475.446, 57.96, 0.4068", "422.976, 475.292, 58.4455, 0.4068", "423.941, 475.374, 59.5078, 0.4322", "424.646, 475.218, 58.1504, 0.4576", "425.573, 475.438, 59.2273, 0.4322", "426.37, 475.393, 59.9029, 0.4068", "427.006, 474.849, 58.4828, 0.3814", "427.804, 474.411, 58.758, 0.4068", "428.553, 473.845, 59.6056, 0.4322", "429.278, 473.158, 59.1108, 0.4576", "429.927, 472.93, 58.4889, 0.483", "430.668, 472.191, 58.5987, 0.483", "431.488, 471.557, 58.7317, 0.4576", "432.569, 471.328, 59.3891, 0.4068", "433.209, 470.996, 60.4237, 0.4068", "433.931, 470.539, 59.1671, 0.4576", "434.662, 470.308, 59.9659, 0.5084", "435.52, 470.21, 59.4499, 0.5592", "436.348, 469.955, 59.596, 0.5848", "437.288, 469.813, 60.3526, 0.5592", "438.179, 470.056, 60.571, 0.4576", "438.875, 469.982, 61.5681, 0.3814", "439.637, 470.07, 60.212, 0.3814", "440.382, 469.803, 59.9432, 0.4322", "441.154, 469.191, 59.1172, 0.4068", "441.939, 468.811, 60.6175, 0.356", "442.748, 468.697, 59.3886, 0.3304", "443.734, 468.668, 59.0612, 0.356", "444.667, 468.318, 58.336, 0.3814", "445.39, 468.295, 56.5188, 0.4322", "445.841, 467.564, 57.4008, 0.5084", "446.563, 467.287, 59.0495, 0.5848", "447.633, 467.246, 59.1506, 0.5592", "448.213, 467.143, 57.6201, 0.5084", "449.036, 466.788, 56.4091, 0.4576", "449.477, 466.089, 56.2517, 0.4576", "450.027, 465.177, 56.3788, 0.483", "450.714, 464.78, 54.9892, 0.5084", "451.475, 464.481, 53.5452, 0.5084", "451.815, 463.81, 55.533, 0.4576", "452.565, 464.121, 56.84, 0.4068" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "335.593, 489.028, 59.7708, 0.788", "335.928, 488.093, 59.1735, 0.6102", "336.333, 487.033, 58.8302, 0.7118", "336.934, 486.063, 58.8101, 0.7626", "337.659, 485.18, 58.8445, 0.7626", "338.08, 484.124, 59.038, 0.7372", "338.373, 483.055, 59.7181, 0.6864", "338.594, 481.943, 59.4437, 0.661", "338.925, 480.852, 59.2175, 0.6864", "339.067, 479.861, 60.5438, 0.7626", "339.523, 478.835, 61.0394, 0.8136", "340.123, 477.86, 61.0422, 0.7626" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "342.525, 482.768, 38.0489, 0.483", "342.699, 481.945, 36.7391, 0.5592", "343.273, 481.611, 34.6707, 0.5338", "344.034, 480.793, 34.44, 0.5084", "344.859, 480.251, 35.1324, 0.4576", "345.373, 479.484, 36.232, 0.4576", "345.915, 478.67, 36.0066, 0.483", "345.993, 478.538, 33.8467, 0.483", "346.864, 478.299, 33.04, 0.5084", "347.712, 477.605, 33.0198, 0.4322", "348.461, 477.132, 33.661, 0.3814", "348.347, 476.247, 32.48, 0.3304" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "342.525, 482.768, 38.0489, 0.483", "342.34, 482.556, 35.84, 0.483", "342.461, 481.638, 36.1794, 0.5338", "342.518, 480.745, 37.6978, 0.5848", "342.448, 479.695, 37.3013, 0.5592", "342.483, 478.75, 36.6271, 0.5848", "342.546, 477.842, 36.7284, 0.5848", "342.299, 477.111, 36.5341, 0.6356", "342.176, 476.078, 36.12, 0.6356", "342.359, 475.561, 37.7628, 0.5848", "341.941, 475.113, 38.8875, 0.5084", "341.385, 474.464, 37.5388, 0.4576", "341.203, 473.424, 37.5505, 0.4576", "341.274, 472.592, 37.1834, 0.4576", "340.85, 471.901, 37.7737, 0.4576", "340.944, 470.918, 38.3897, 0.5084", "340.898, 470.123, 40.2368, 0.5084", "340.339, 469.649, 41.1208, 0.5084", "339.726, 469.403, 41.9689, 0.4322", "338.853, 468.98, 41.0441, 0.4068", "338.586, 468.355, 42.184, 0.4068", "338.192, 467.367, 41.4887, 0.4576", "337.297, 466.897, 41.9264, 0.5338", "336.705, 466.073, 41.788, 0.5592", "335.887, 466.042, 41.7687, 0.5084", "336.221, 465.2, 41.974, 0.4068", "336.275, 464.206, 42.6544, 0.305", "336.221, 463.617, 44.6356, 0.2796", "335.816, 462.758, 44.8, 0.2796", "335.773, 461.783, 44.0255, 0.305", "336.293, 461.146, 43.3586, 0.2796", "336.457, 460.518, 43.6948, 0.2796", "336.369, 459.705, 44.1204, 0.305", "336.335, 458.776, 44.2498, 0.3814", "336.447, 457.83, 44.52, 0.4322", "336.572, 456.799, 44.9988, 0.4576", "336.271, 456.299, 43.4507, 0.4322", "335.882, 455.334, 43.7296, 0.4322", "335.388, 454.91, 44.4377, 0.4322", "334.817, 454.192, 45.08, 0.4576", "334.505, 453.357, 45.1679, 0.4068", "334.405, 452.356, 46.1404, 0.3304", "334.35, 451.279, 45.64, 0.2796", "334.103, 450.269, 45.6551, 0.305", "334.125, 449.254, 45.7839, 0.3814", "334.016, 448.194, 45.8965, 0.4322", "333.828, 447.211, 45.4342, 0.4322", "333.994, 446.313, 46.1812, 0.3814", "334.176, 445.51, 46.3464, 0.3304", "334.285, 444.738, 45.3939, 0.3304", "334.047, 444.051, 46.0748, 0.3814", "333.842, 442.966, 46.6634, 0.4068", "333.809, 441.881, 46.9535, 0.4322", "333.571, 440.792, 46.9806, 0.4068", "333.261, 439.831, 47.0431, 0.4322", "332.792, 438.811, 47.2287, 0.3814", "332.674, 437.681, 47.1332, 0.356", "332.546, 436.555, 47.1766, 0.305", "332.104, 435.536, 47.04, 0.305", "331.481, 434.648, 47.6, 0.305", "330.969, 433.871, 47.1204, 0.305", "330.91, 432.795, 47.04, 0.3304", "330.282, 432.042, 47.5888, 0.356", "329.575, 431.249, 47.3155, 0.3814", "328.716, 430.589, 46.73, 0.356", "328.071, 429.66, 46.7558, 0.356", "327.78, 428.622, 46.8098, 0.356", "327.261, 427.654, 46.76, 0.3814", "327.241, 426.67, 47.5336, 0.3814", "326.611, 425.911, 48.44, 0.3814" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "340.123, 477.86, 61.0422, 0.7626", "340.641, 477.287, 60.5321, 0.3814", "340.552, 476.486, 59.6128, 0.3814", "340.023, 475.846, 58.52, 0.4068", "339.324, 475.134, 58.0709, 0.483", "338.7, 474.836, 56.1042, 0.5848", "338.69, 473.955, 55.1468, 0.6356", "339.115, 472.975, 55.1121, 0.5848", "339.309, 472.156, 55.382, 0.483", "339.293, 471.171, 54.4186, 0.3814", "339.663, 470.516, 53.0869, 0.3304", "339.704, 469.841, 51.8773, 0.2796", "340.061, 470.07, 49.6012, 0.2542", "340.568, 469.653, 47.5787, 0.2796", "340.909, 468.644, 47.8243, 0.356", "341.689, 467.931, 47.6269, 0.4322", "341.99, 467.054, 48.3781, 0.4068", "342.524, 466.328, 47.6126, 0.3814", "343.046, 465.895, 49.1548, 0.3814", "343.321, 465.158, 50.68, 0.4576", "344.118, 464.674, 50.4185, 0.483", "344.549, 463.71, 49.681, 0.5084", "345.075, 462.809, 48.776, 0.5338", "345.669, 461.913, 48.72, 0.6102", "346.284, 461.053, 48.7463, 0.6356", "346.744, 460.302, 48.1897, 0.6356", "347.089, 459.303, 48.613, 0.5592", "347.22, 458.458, 47.7056, 0.483", "347.765, 457.498, 47.8444, 0.3814", "348.176, 456.462, 48.4047, 0.3304", "348.556, 455.447, 47.8786, 0.305", "348.913, 454.468, 47.4774, 0.305", "349.472, 453.598, 48.1502, 0.3304", "350.055, 452.653, 47.7061, 0.3814", "349.809, 451.612, 47.8954, 0.4068", "349.934, 450.542, 47.5905, 0.3814", "350.069, 449.571, 47.5902, 0.3304", "350.493, 448.608, 47.4379, 0.3304", "350.935, 447.772, 47.7977, 0.3814", "350.762, 446.683, 47.4138, 0.4322", "351.012, 445.627, 47.3785, 0.4322", "351.103, 444.78, 46.6922, 0.3814", "351.436, 443.865, 46.2, 0.305", "352.036, 442.917, 46.2, 0.2542", "352.829, 442.722, 46.538, 0.2288", "353.586, 442.373, 45.5008, 0.2542", "354.466, 441.908, 45.4219, 0.305", "355.22, 441.171, 45.778, 0.356", "356.038, 440.447, 45.9959, 0.3814", "356.627, 439.881, 44.8605, 0.356", "357.413, 439.647, 44.564, 0.356", "358.285, 439.202, 44.4228, 0.356", "359.142, 438.733, 45.6089, 0.3814", "359.932, 438.495, 44.8314, 0.3814", "360.634, 438.041, 44.9915, 0.3814", "361.585, 437.511, 45.362, 0.4068", "362.342, 436.867, 45.7556, 0.4068", "363.147, 436.136, 45.08, 0.4068", "363.545, 435.186, 45.8811, 0.3814", "363.918, 434.362, 45.0372, 0.4068", "363.905, 433.253, 44.7572, 0.4068", "364.331, 432.431, 44.52, 0.4068", "364.918, 431.604, 44.0815, 0.3814", "364.761, 430.583, 43.6666, 0.3814", "364.592, 429.713, 42.5009, 0.356", "364.477, 428.92, 41.16, 0.3304", "364.592, 428.091, 41.8779, 0.305", "364.858, 427.386, 42.9948, 0.305", "364.807, 426.302, 43.0198, 0.2796", "364.697, 425.268, 42.7714, 0.2542", "364.286, 424.398, 41.6881, 0.2542", "364.086, 423.513, 42.7882, 0.3304", "364.146, 422.504, 42.0, 0.4322", "364.249, 421.539, 40.7302, 0.5084", "364.381, 420.492, 39.7712, 0.5338", "364.592, 419.512, 39.4036, 0.5084", "364.867, 418.617, 39.9686, 0.5084", "365.181, 417.82, 39.048, 0.5084", "365.394, 417.07, 39.0214, 0.5338", "365.203, 416.07, 38.6366, 0.483", "364.636, 415.279, 37.6779, 0.3814", "364.505, 414.519, 36.1222, 0.305", "364.363, 413.809, 37.6468, 0.3304", "364.117, 412.897, 38.0736, 0.4576", "364.016, 411.892, 37.6208, 0.5592", "363.495, 411.076, 36.6876, 0.5592", "363.069, 410.292, 36.332, 0.483", "362.63, 409.473, 36.6934, 0.3814", "362.029, 408.772, 37.448, 0.3304", "361.885, 407.698, 37.2705, 0.305", "361.964, 407.2, 39.5693, 0.3304", "362.052, 406.191, 39.7474, 0.4068", "362.275, 405.491, 38.0439, 0.4576", "362.777, 404.788, 37.9448, 0.483", "363.105, 403.885, 37.2747, 0.4068", "363.232, 402.893, 36.2398, 0.356", "363.105, 402.459, 34.44, 0.2796" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "340.123, 477.86, 61.0422, 0.7626", "340.983, 476.535, 61.0677, 0.8644", "341.697, 475.643, 61.1747, 0.839", "342.443, 474.816, 61.6344, 0.6864", "343.177, 474.026, 62.4526, 0.5848", "343.581, 473.012, 63.0804, 0.5338", "343.942, 471.966, 63.4553, 0.5338", "344.414, 470.964, 63.9428, 0.5338", "344.727, 469.887, 64.2001, 0.5084", "345.034, 468.808, 63.7193, 0.5084", "345.425, 467.762, 63.3144, 0.5084", "345.972, 466.759, 63.28, 0.5592", "346.449, 465.724, 63.28, 0.5592", "347.004, 464.741, 63.2912, 0.5848", "347.583, 463.767, 63.3556, 0.6102", "348.053, 462.74, 63.7109, 0.661", "348.647, 461.787, 64.1463, 0.6356", "349.298, 460.86, 64.0332, 0.5338", "349.811, 459.857, 63.9719, 0.4068", "350.206, 458.793, 64.3107, 0.3814", "350.57, 457.718, 64.661, 0.3814", "350.87, 456.698, 65.5581, 0.4576", "351.324, 455.723, 66.1069, 0.4576", "351.983, 454.81, 65.7227, 0.5084", "352.382, 453.775, 65.5362, 0.4576", "352.782, 452.708, 65.6135, 0.4068", "353.162, 451.655, 66.0943, 0.3304", "353.512, 450.608, 66.8226, 0.3304", "353.839, 449.531, 66.7985, 0.4068", "354.346, 448.518, 66.6551, 0.483", "354.783, 447.466, 66.64, 0.5338", "354.773, 446.348, 66.6408, 0.483", "354.944, 445.234, 66.6448, 0.4068", "355.466, 444.227, 66.6736, 0.3304", "356.225, 443.382, 66.8536, 0.305", "356.726, 442.421, 67.5864, 0.305", "356.797, 441.303, 67.8054, 0.2796", "356.689, 440.177, 68.1932, 0.2542", "356.376, 439.289, 69.6861, 0.2542", "356.276, 438.192, 69.3902, 0.3304", "355.619, 437.281, 69.1166, 0.4068", "355.547, 436.147, 68.9144, 0.4322", "356.029, 435.113, 69.1004, 0.3814", "356.559, 434.143, 69.7427, 0.3304", "356.9, 433.075, 69.4036, 0.3304", "357.004, 432.005, 70.3447, 0.3304", "356.941, 430.908, 71.069, 0.3304", "356.966, 429.776, 71.2583, 0.305", "356.682, 428.672, 71.3188, 0.305", "356.361, 427.584, 70.9582, 0.3304", "356.254, 426.521, 70.679, 0.356", "356.712, 425.502, 70.9811, 0.4068", "356.813, 424.384, 71.4893, 0.483", "356.813, 423.267, 72.0597, 0.5592", "356.813, 422.127, 72.2414, 0.6356", "356.813, 420.983, 72.2495, 0.6356", "356.816, 419.84, 72.3036, 0.6864", "356.831, 418.701, 72.5298, 0.6864", "356.929, 417.585, 73.0456, 0.6864", "356.997, 416.514, 73.8472, 0.5848", "356.858, 415.449, 74.7376, 0.5592", "356.975, 414.344, 75.318, 0.6102", "357.232, 413.24, 75.6, 0.7372", "357.489, 412.126, 75.6008, 0.8136", "357.699, 411.009, 75.6048, 0.7626", "357.728, 409.867, 75.6325, 0.6864", "357.733, 408.728, 75.8414, 0.5848", "357.763, 407.605, 76.3515, 0.6102", "357.942, 406.501, 76.7166, 0.5848", "358.354, 405.436, 76.727, 0.5592", "358.831, 404.397, 76.7614, 0.4576", "359.256, 403.347, 77.0554, 0.4322", "359.563, 402.314, 77.9181, 0.4576", "359.911, 401.3, 78.2611, 0.5084", "360.477, 400.323, 78.1421, 0.5592", "360.861, 399.294, 78.5638, 0.5592", "360.936, 398.178, 78.5156, 0.5592", "360.963, 397.046, 78.3359, 0.5592", "361.141, 395.935, 78.7069, 0.6102", "361.469, 394.85, 78.8449, 0.661", "361.914, 393.82, 78.4098, 0.661", "362.464, 392.831, 78.1329, 0.661", "362.864, 391.825, 78.7671, 0.661", "363.402, 390.915, 79.693, 0.6864", "363.926, 389.932, 79.9176, 0.6102", "364.118, 388.828, 79.6037, 0.5338", "364.163, 387.706, 79.8669, 0.4576", "364.327, 386.587, 80.0982, 0.483", "364.881, 385.618, 80.2172, 0.5338", "365.589, 384.759, 80.796, 0.5338", "366.117, 383.772, 81.1482, 0.5084", "366.748, 382.828, 81.1947, 0.4576", "367.498, 381.964, 81.1784, 0.5084", "368.092, 380.998, 81.0835, 0.5848", "368.335, 379.914, 80.6053, 0.6356", "368.686, 378.856, 80.8237, 0.6356", "369.166, 377.93, 81.9151, 0.5848", "369.764, 377.061, 82.9847, 0.5592", "370.327, 376.112, 82.6518, 0.5338", "370.919, 375.142, 82.4029, 0.5084", "371.375, 374.099, 82.5922, 0.5084", "371.643, 373.026, 83.2563, 0.5084", "372.056, 371.969, 83.4316, 0.6102", "372.221, 370.844, 83.4543, 0.661", "372.017, 369.725, 83.5436, 0.7118", "372.325, 368.686, 84.2453, 0.661", "372.79, 367.652, 84.5891, 0.6356", "373.206, 366.603, 85.0427, 0.5592", "373.983, 365.77, 84.8845, 0.483", "374.803, 364.984, 84.5608, 0.4322", "375.363, 363.988, 84.565, 0.483", "375.567, 362.863, 84.5953, 0.5592", "375.527, 361.723, 84.775, 0.6102", "375.316, 360.63, 85.318, 0.5848", "375.499, 359.588, 84.4516, 0.5592", "375.983, 358.598, 84.84, 0.5084", "376.358, 357.53, 84.84, 0.5084", "376.84, 356.502, 84.84, 0.483", "377.385, 355.53, 85.0508, 0.5084", "378.231, 354.79, 85.12, 0.4576", "379.107, 354.069, 85.12, 0.483", "379.76, 353.132, 85.12, 0.483", "380.25, 352.1, 85.12, 0.5848", "380.492, 350.985, 85.12, 0.6356", "381.048, 350.046, 85.12, 0.7118", "381.489, 349.005, 85.12, 0.7372", "381.984, 347.981, 85.12, 0.7372", "382.387, 346.919, 85.1799, 0.6864", "382.632, 345.84, 85.68, 0.6356", "383.218, 344.879, 85.9382, 0.6356", "383.454, 343.764, 85.96, 0.6864", "384.089, 342.821, 86.1526, 0.7118", "384.374, 341.715, 86.24, 0.6864", "384.807, 340.661, 86.24, 0.5592", "385.323, 339.647, 86.24, 0.483", "386.042, 338.821, 86.52, 0.4068", "386.328, 337.766, 86.555, 0.4576", "386.328, 336.625, 86.7843, 0.4576", "386.469, 335.508, 86.9621, 0.5084", "386.9, 334.493, 87.6042, 0.4576", "387.323, 333.495, 87.6565, 0.4068", "388.099, 332.772, 87.92, 0.305", "388.269, 331.659, 87.9399, 0.2542", "388.966, 330.971, 88.48, 0.2288", "389.296, 329.884, 88.5688, 0.2288", "389.634, 328.855, 89.3334, 0.2288", "389.645, 327.72, 89.6, 0.2288", "389.739, 326.59, 89.6994, 0.2796", "390.161, 325.641, 90.16, 0.3814", "390.217, 324.506, 90.16, 0.5084", "390.217, 323.614, 91.2929, 0.5338", "390.849, 322.853, 91.6244, 0.4576", "391.017, 321.75, 91.84, 0.356", "391.348, 320.68, 91.84, 0.3304", "391.819, 319.7, 91.84, 0.4068", "392.048, 318.595, 91.8515, 0.4576", "392.382, 317.652, 92.4, 0.4576", "392.645, 316.543, 92.4, 0.3814", "392.904, 315.429, 92.4451, 0.4068", "393.239, 314.386, 92.96, 0.4576", "393.434, 313.259, 92.96, 0.5084", "393.622, 312.131, 92.96, 0.4068", "393.993, 311.073, 93.0003, 0.305", "394.251, 310.193, 94.36, 0.2288", "394.621, 309.118, 94.36, 0.2288", "394.736, 308.098, 94.8038, 0.2288", "395.146, 307.225, 95.48, 0.2288", "395.333, 306.095, 95.48, 0.2288", "395.659, 305.01, 95.48, 0.2288", "395.937, 303.97, 96.091, 0.2542", "396.099, 302.896, 96.6, 0.305", "396.529, 301.845, 96.6, 0.4068", "396.887, 300.827, 96.6, 0.4576", "397.119, 299.71, 96.6, 0.4576", "397.603, 298.685, 96.6, 0.356", "398.084, 297.649, 96.6, 0.305", "398.347, 296.542, 96.7977, 0.305", "398.555, 295.431, 97.1373, 0.356", "398.783, 294.319, 97.16, 0.356", "398.985, 293.256, 97.16, 0.305", "399.929, 292.633, 97.16, 0.2796", "400.308, 291.705, 97.16, 0.305", "400.678, 290.633, 97.16, 0.356", "400.859, 289.525, 97.16, 0.3814", "401.089, 288.433, 97.16, 0.356", "401.543, 287.453, 97.16, 0.3814", "401.892, 286.405, 97.16, 0.3814", "402.126, 285.294, 97.16, 0.4068", "402.623, 284.267, 97.16, 0.3304", "403.361, 283.534, 97.2854, 0.2796", "403.602, 282.535, 98.0, 0.2288", "403.972, 281.469, 98.0, 0.2288", "404.374, 280.527, 98.6437, 0.2796", "404.681, 279.946, 100.148, 0.356", "405.023, 278.985, 101.08, 0.4322", "405.405, 277.931, 101.08, 0.4068", "405.865, 276.914, 101.08, 0.3304", "406.336, 275.877, 101.08, 0.2542", "406.547, 274.786, 101.08, 0.2288", "407.032, 273.892, 101.554, 0.2542", "407.396, 273.051, 102.967, 0.2796", "407.978, 272.099, 103.32, 0.305", "408.495, 271.086, 103.32, 0.2796", "408.858, 270.022, 103.32, 0.2542", "409.334, 268.984, 103.32, 0.2288", "409.789, 267.95, 103.32, 0.2288", "410.227, 266.917, 103.32, 0.2288", "410.343, 265.783, 103.32, 0.2288", "410.799, 264.876, 103.8, 0.2288", "411.217, 263.835, 103.88, 0.2288", "411.753, 262.882, 104.445, 0.2288", "412.143, 261.824, 104.72, 0.2288", "412.588, 260.785, 104.917, 0.2288", "412.991, 259.736, 105.0, 0.2288", "413.401, 258.686, 105.0, 0.2288", "413.777, 257.607, 105.0, 0.2288", "414.133, 256.529, 105.0, 0.2288", "414.524, 255.488, 105.0, 0.2288", "414.988, 254.522, 105.0, 0.2288", "415.166, 253.396, 105.0, 0.305", "415.843, 252.595, 105.0, 0.4322" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "415.843, 252.595, 105.0, 0.4322", "416.925, 252.736, 105.057, 0.305", "417.821, 252.384, 106.572, 0.2796", "418.717, 252.032, 108.087, 0.2796", "419.612, 251.681, 109.602, 0.3304", "420.507, 251.329, 111.116, 0.4576", "421.369, 250.902, 112.56, 0.5592", "422.062, 250.112, 113.662, 0.5848", "422.756, 249.321, 114.764, 0.5338", "423.45, 248.531, 115.866, 0.5084", "424.057, 247.666, 116.691, 0.5084", "424.409, 246.577, 116.691, 0.5084", "424.761, 245.488, 116.691, 0.4576", "425.112, 244.4, 116.691, 0.4576", "425.464, 243.311, 116.691, 0.483", "425.9, 242.309, 117.018, 0.5084", "426.591, 241.569, 118.324, 0.4068", "427.281, 240.83, 119.631, 0.305", "427.972, 240.09, 120.937, 0.2288", "428.721, 239.336, 121.733, 0.2288", "429.562, 238.562, 121.733, 0.2288", "430.403, 237.786, 121.733, 0.2288", "431.244, 237.01, 121.733, 0.2288", "432.085, 236.235, 121.733, 0.2796", "432.926, 235.459, 121.733, 0.3814", "433.767, 234.684, 121.733, 0.5084", "434.608, 233.908, 121.733, 0.5338", "435.461, 233.182, 122.269, 0.4576", "436.316, 232.461, 122.863, 0.3304", "437.171, 231.74, 123.456, 0.2542", "438.025, 231.019, 124.05, 0.2288", "438.879, 230.298, 124.644, 0.2288", "439.733, 229.577, 125.238, 0.2542", "440.588, 228.856, 125.832, 0.2796", "441.313, 228.004, 126.293, 0.3304", "441.959, 227.073, 126.676, 0.3814", "442.605, 226.143, 127.058, 0.483", "443.251, 225.211, 127.441, 0.5338", "443.467, 224.105, 127.495, 0.5084", "443.611, 222.97, 127.495, 0.4322", "443.756, 221.835, 127.495, 0.4322", "443.9, 220.701, 127.495, 0.483", "444.409, 219.751, 128.0, 0.483", "445.1, 218.893, 128.756, 0.4322", "445.791, 218.035, 129.513, 0.3814", "446.482, 217.177, 130.269, 0.3814", "447.173, 216.319, 131.025, 0.3304", "447.862, 215.461, 131.781, 0.2796", "448.494, 214.509, 131.817, 0.2288", "449.121, 213.553, 131.817, 0.2288", "449.748, 212.596, 131.817, 0.2288", "450.376, 211.64, 131.817, 0.2288", "451.077, 210.74, 131.817, 0.2288", "451.842, 209.89, 131.817, 0.2288", "452.608, 209.04, 131.817, 0.2288", "453.373, 208.19, 131.817, 0.2288", "453.963, 207.387, 132.875, 0.2288", "454.448, 206.612, 134.558, 0.2288", "454.934, 205.837, 136.241, 0.2288", "455.418, 205.062, 137.923, 0.2288", "455.805, 204.164, 139.021, 0.2542", "456.008, 203.038, 139.021, 0.305", "456.211, 201.913, 139.021, 0.3814", "456.415, 200.787, 139.021, 0.4068", "456.617, 199.661, 139.021, 0.3814", "456.821, 198.536, 139.021, 0.3304" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "415.843, 252.595, 105.0, 0.4322", "415.843, 252.211, 105.0, 0.2288", "415.979, 251.139, 105.0, 0.2288", "416.925, 250.617, 105.0, 0.2288", "417.29, 249.566, 105.0, 0.2288", "417.701, 248.505, 105.0, 0.2288", "418.231, 247.514, 105.0, 0.2288", "418.872, 246.583, 105.0, 0.2288", "419.081, 245.465, 105.0, 0.2288", "419.5, 244.404, 105.0, 0.2542", "419.767, 243.293, 105.0, 0.2796", "419.969, 242.171, 105.0, 0.3304", "420.155, 241.049, 105.0, 0.3304", "420.556, 240.016, 105.0, 0.356", "421.213, 239.083, 105.0, 0.356", "421.895, 238.183, 105.0, 0.4068", "422.28, 237.112, 105.0, 0.4068", "422.856, 236.245, 105.0, 0.3814", "423.511, 235.399, 105.28, 0.305", "424.162, 234.469, 105.28, 0.2796", "424.787, 233.518, 105.28, 0.305", "425.472, 232.602, 105.28, 0.3814", "426.015, 231.602, 105.28, 0.4322", "426.469, 230.553, 105.28, 0.4576", "427.004, 229.553, 105.28, 0.4322", "427.593, 228.592, 105.28, 0.4068", "428.098, 227.575, 105.28, 0.356", "428.435, 226.482, 105.28, 0.3304", "428.833, 225.417, 105.28, 0.305", "429.558, 224.536, 105.28, 0.305", "430.051, 223.517, 105.28, 0.356", "430.264, 222.394, 105.28, 0.3814", "430.636, 221.315, 105.346, 0.4068", "430.97, 220.229, 105.56, 0.356", "431.153, 219.115, 105.56, 0.4068", "431.669, 218.094, 105.56, 0.5084", "432.068, 217.035, 105.56, 0.7118", "432.537, 216.007, 105.84, 0.8644", "432.99, 214.988, 105.84, 0.9914", "433.381, 213.915, 105.84, 0.9406", "433.78, 212.867, 105.84, 0.788", "434.363, 211.897, 105.84, 0.5338", "434.792, 210.838, 105.84, 0.3814", "435.181, 209.763, 105.84, 0.2796", "435.972, 209.17, 105.84, 0.2542", "435.977, 208.026, 105.84, 0.305", "435.985, 206.882, 105.84, 0.4322", "436.092, 205.759, 106.12, 0.6102", "436.629, 204.827, 106.202, 0.661", "436.929, 203.77, 106.928, 0.661", "437.485, 202.853, 107.24, 0.5592", "437.804, 201.854, 107.723, 0.5084", "438.03, 200.745, 107.8, 0.4576", "438.609, 199.846, 107.8, 0.483", "438.811, 198.779, 108.544, 0.5084", "439.142, 197.703, 108.64, 0.5084", "439.424, 196.611, 108.64, 0.483", "439.763, 195.527, 108.64, 0.4576", "440.349, 194.622, 108.64, 0.4322", "440.62, 193.512, 108.64, 0.3814", "440.89, 192.407, 108.64, 0.305", "441.316, 191.351, 108.64, 0.2542", "441.894, 190.373, 108.64, 0.2288", "442.704, 189.607, 108.64, 0.2796", "443.345, 188.679, 108.64, 0.356", "444.101, 187.941, 108.64, 0.4576", "444.689, 186.978, 108.64, 0.4576", "445.246, 186.049, 108.64, 0.4068", "445.494, 184.947, 108.64, 0.305", "445.702, 183.824, 108.64, 0.2542", "445.947, 182.74, 108.64, 0.2288", "446.696, 181.929, 108.64, 0.2288", "447.169, 180.99, 108.64, 0.2288", "447.621, 179.956, 108.64, 0.2288", "447.819, 178.835, 108.64, 0.2288", "448.394, 177.866, 108.64, 0.2288", "448.571, 176.763, 108.64, 0.2288", "448.963, 175.697, 108.64, 0.2288", "449.609, 174.776, 108.64, 0.2288", "450.284, 173.985, 108.64, 0.2288", "450.582, 172.886, 108.64, 0.2288", "451.194, 171.938, 108.64, 0.2288", "452.006, 171.147, 108.64, 0.2288", "452.372, 170.087, 108.64, 0.305", "453.29, 169.464, 108.64, 0.483" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "456.821, 198.536, 139.021, 0.3304", "456.898, 199.873, 138.3, 0.3304" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "456.821, 198.536, 139.021, 0.3304", "457.382, 197.703, 139.993, 0.2796", "457.975, 196.821, 141.023, 0.2288", "458.523, 195.912, 142.03, 0.2288", "458.808, 194.863, 142.897, 0.2288", "459.093, 193.813, 143.764, 0.2288", "459.377, 192.763, 144.632, 0.2288", "459.0, 191.738, 144.783, 0.2288", "458.482, 190.717, 144.783, 0.2288", "457.964, 189.698, 144.783, 0.2288", "457.447, 188.678, 144.783, 0.2288", "456.929, 187.657, 144.783, 0.2288", "456.471, 186.662, 145.516, 0.2288", "456.025, 185.671, 146.392, 0.2288", "455.579, 184.68, 147.268, 0.2288", "455.155, 183.646, 147.664, 0.2288", "454.75, 182.577, 147.664, 0.2288", "454.345, 181.507, 147.664, 0.2288", "454.057, 180.536, 148.571, 0.2288", "453.876, 179.656, 150.306, 0.2288", "453.694, 178.777, 152.041, 0.2288", "453.514, 177.898, 153.775, 0.2796", "453.277, 176.938, 154.867, 0.3814", "452.946, 175.843, 154.867, 0.483", "452.617, 174.747, 154.867, 0.483", "452.286, 173.652, 154.867, 0.4068" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "453.29, 169.464, 108.64, 0.483", "453.275, 169.406, 111.844, 0.305", "453.262, 169.355, 114.641, 0.2796", "453.252, 169.15, 117.04, 0.2542", "453.336, 168.012, 117.063, 0.2288", "453.366, 166.879, 117.32, 0.2288", "453.366, 165.735, 117.344, 0.2288", "453.407, 164.601, 117.6, 0.2288", "453.481, 163.464, 117.6, 0.2288", "453.451, 162.326, 117.709, 0.2288", "453.366, 161.197, 118.075, 0.2288", "453.366, 160.053, 118.16, 0.2288", "453.109, 158.955, 118.16, 0.2288", "453.023, 157.818, 118.16, 0.2288", "453.023, 156.674, 118.16, 0.2288", "453.023, 155.53, 118.16, 0.2796", "452.817, 154.425, 118.16, 0.3814", "452.335, 153.416, 118.16, 0.5338", "451.879, 152.431, 118.16, 0.6102", "451.684, 151.327, 118.16, 0.6102", "451.104, 150.356, 118.16, 0.5338", "450.741, 149.287, 118.528, 0.4576", "450.393, 148.205, 118.794, 0.4068", "450.256, 147.148, 119.569, 0.3814", "450.165, 146.016, 119.825, 0.4068", "449.849, 144.928, 119.84, 0.4068", "449.282, 143.945, 120.098, 0.3814", "448.646, 143.015, 120.406, 0.305", "448.447, 142.023, 121.24, 0.2542", "448.098, 140.995, 121.24, 0.2288", "447.761, 139.938, 121.24, 0.2288", "447.584, 138.823, 121.24, 0.305", "447.154, 137.874, 121.629, 0.3814", "446.946, 137.098, 123.299, 0.483", "446.845, 135.976, 123.48, 0.4322", "446.845, 134.862, 123.958, 0.3814", "446.845, 133.718, 124.04, 0.2796", "446.731, 132.59, 124.25, 0.2542", "446.627, 131.46, 124.491, 0.2288", "446.502, 130.329, 124.6, 0.2288", "446.502, 129.251, 124.982, 0.2288", "446.388, 128.729, 126.84, 0.2542", "446.388, 127.585, 126.84, 0.2796", "446.388, 126.475, 127.301, 0.305", "446.273, 125.441, 128.419, 0.2796", "446.273, 124.302, 128.52, 0.2542", "446.153, 123.255, 129.202, 0.2288", "446.045, 122.129, 129.445, 0.2288", "445.473, 121.218, 129.832, 0.2288", "445.473, 120.09, 130.2, 0.2288", "445.113, 119.269, 131.154, 0.2288", "444.588, 118.351, 131.88, 0.2288", "444.25, 117.411, 132.857, 0.2288", "444.093, 116.34, 133.56, 0.2288", "443.582, 115.352, 133.56, 0.2542", "442.901, 114.434, 133.56, 0.2796", "442.226, 113.513, 133.56, 0.3304", "441.565, 112.587, 133.56, 0.3304", "440.778, 111.857, 133.56, 0.3304", "440.105, 111.02, 133.442, 0.3304", "439.281, 110.27, 133.0, 0.3814", "438.405, 109.55, 133.0, 0.4576", "437.41, 108.988, 133.0, 0.4576", "436.436, 108.426, 133.0, 0.4068", "435.714, 107.688, 133.0, 0.305", "434.766, 107.058, 133.0, 0.2542", "433.863, 106.506, 132.72, 0.2288", "432.782, 106.262, 132.72, 0.2288", "431.846, 105.615, 132.72, 0.2288", "430.845, 105.074, 132.72, 0.2288", "430.144, 104.268, 132.72, 0.2288", "429.19, 103.949, 132.72, 0.2542", "428.426, 103.187, 132.72, 0.2796", "427.62, 102.386, 132.72, 0.305", "426.637, 101.825, 132.72, 0.3304", "425.702, 101.222, 132.72, 0.4068", "424.763, 100.575, 132.72, 0.5084", "423.885, 99.853, 132.442, 0.6356", "422.837, 99.4056, 132.44, 0.7372", "421.736, 99.1095, 132.44, 0.8136", "420.79, 98.519, 132.44, 0.7372", "419.791, 98.0016, 132.44, 0.6356", "418.709, 97.7162, 132.44, 0.5338", "418.011, 96.9141, 131.88, 0.5338", "417.011, 96.668, 131.201, 0.483", "416.066, 96.2182, 130.76, 0.483", "415.19, 95.5475, 130.76, 0.5084", "414.152, 95.0806, 130.76, 0.5848", "413.144, 94.5616, 130.76, 0.5848", "412.02, 94.4078, 130.76, 0.5338", "410.893, 94.2592, 130.76, 0.4576", "409.767, 94.0638, 130.76, 0.356", "408.624, 94.0368, 130.755, 0.2796", "407.492, 94.0368, 130.48, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "453.29, 169.464, 108.64, 0.483", "453.799, 168.777, 107.812, 0.2288", "453.684, 168.56, 105.56, 0.2288", "454.655, 168.038, 105.56, 0.2288", "455.662, 167.517, 105.56, 0.2288", "456.472, 166.907, 105.56, 0.2288", "457.467, 166.453, 105.56, 0.2288", "458.568, 166.223, 105.56, 0.2288", "459.646, 165.951, 105.56, 0.2288", "460.597, 165.536, 105.56, 0.2288", "461.731, 165.382, 105.56, 0.2288", "462.861, 165.208, 105.56, 0.2288", "464.001, 165.13, 105.56, 0.2288", "465.123, 164.915, 105.56, 0.2288", "466.206, 164.548, 105.56, 0.2288", "467.294, 164.26, 105.56, 0.2288", "468.405, 164.03, 105.56, 0.2288", "469.534, 163.859, 105.56, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "456.898, 199.873, 138.3, 0.3304", "457.51, 199.134, 138.753, 0.2542", "458.226, 198.269, 139.285, 0.2288", "458.942, 197.404, 139.816, 0.2288", "459.659, 196.539, 140.347, 0.2288", "460.375, 195.674, 140.878, 0.2288", "461.092, 194.809, 141.41, 0.2288", "461.791, 193.931, 141.902, 0.2288", "462.255, 192.885, 141.902, 0.2288", "462.719, 191.841, 141.902, 0.2288", "463.184, 190.795, 141.902, 0.2288", "463.649, 189.75, 141.902, 0.2288", "463.815, 188.877, 143.559, 0.2288", "463.951, 188.023, 145.392, 0.2288", "464.085, 187.169, 147.225, 0.2288", "464.22, 186.314, 149.058, 0.2288", "464.356, 185.461, 150.891, 0.2288", "464.492, 184.606, 152.724, 0.2288", "464.627, 183.753, 154.557, 0.2288", "464.762, 182.898, 156.39, 0.2288", "465.346, 182.085, 157.029, 0.2288", "466.172, 181.292, 157.029, 0.2288", "466.997, 180.499, 157.029, 0.2288", "467.822, 179.708, 157.029, 0.2288", "468.648, 178.915, 157.029, 0.2288", "468.911, 177.95, 157.918, 0.2288", "468.966, 176.921, 159.134, 0.2288", "469.022, 175.892, 160.351, 0.2288", "469.429, 174.868, 160.63, 0.2288", "469.94, 173.844, 160.63, 0.2288", "470.452, 172.822, 160.63, 0.2288", "470.964, 171.798, 160.63, 0.2288", "471.476, 170.775, 160.63, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "456.898, 199.873, 138.3, 0.3304", "456.735, 200.293, 137.398, 0.2288", "456.414, 201.117, 135.624, 0.2288", "457.252, 200.742, 135.891, 0.2288", "458.241, 200.209, 136.424, 0.2288", "459.23, 199.677, 136.957, 0.2288", "460.219, 199.145, 137.49, 0.2288", "461.221, 198.604, 137.724, 0.2288", "462.224, 198.06, 137.898, 0.2288", "463.229, 197.516, 138.071, 0.2288", "464.233, 196.973, 138.245, 0.2288", "465.236, 196.428, 138.418, 0.2288", "466.241, 195.885, 138.592, 0.2288", "467.244, 195.341, 138.765, 0.2288", "468.249, 194.797, 138.939, 0.2288", "469.293, 194.34, 139.021, 0.2288", "470.372, 193.962, 139.021, 0.2288", "471.452, 193.583, 139.021, 0.2288", "472.53, 193.203, 139.021, 0.2288", "473.61, 192.825, 139.021, 0.2288", "474.698, 192.473, 139.021, 0.2288", "475.801, 192.171, 139.021, 0.2288", "476.905, 191.87, 139.021, 0.2288", "478.009, 191.57, 139.021, 0.2288", "479.113, 191.269, 139.021, 0.2288", "480.182, 190.88, 139.138, 0.2288", "481.207, 190.385, 139.397, 0.2288", "482.233, 189.889, 139.656, 0.2288", "483.258, 189.394, 139.915, 0.2288", "484.284, 188.897, 140.174, 0.2542", "485.309, 188.402, 140.433, 0.2796", "486.435, 188.242, 140.461, 0.305", "487.573, 188.12, 140.461, 0.2796", "488.71, 187.999, 140.461, 0.2542", "489.848, 187.878, 140.461, 0.2288", "490.979, 187.84, 140.825, 0.2288", "492.109, 187.818, 141.26, 0.2288", "493.239, 187.797, 141.696, 0.2288", "494.368, 187.775, 142.131, 0.2288", "495.499, 187.752, 142.567, 0.2288", "496.526, 187.625, 143.717, 0.2288", "497.538, 187.482, 144.971, 0.2288", "498.552, 187.338, 146.225, 0.2288", "499.564, 187.195, 147.479, 0.2288", "500.577, 187.052, 148.734, 0.2288", "501.604, 186.9, 149.825, 0.2288", "502.729, 186.686, 149.825, 0.2288", "503.852, 186.473, 149.825, 0.2288", "504.977, 186.259, 149.825, 0.2288", "506.1, 186.046, 149.825, 0.2288", "507.222, 185.827, 149.825, 0.2288", "508.308, 185.465, 149.825, 0.2288", "509.394, 185.104, 149.825, 0.2288", "510.478, 184.742, 149.825, 0.2288", "511.564, 184.381, 149.825, 0.2288", "512.542, 184.01, 150.932, 0.2288", "513.515, 183.638, 152.093, 0.2288", "514.487, 183.268, 153.255, 0.2288", "515.459, 182.896, 154.416, 0.2288", "516.442, 182.614, 155.662, 0.2288", "517.429, 182.391, 156.962, 0.2288", "518.418, 182.168, 158.261, 0.2288", "519.406, 181.944, 159.561, 0.2288", "520.395, 181.721, 160.86, 0.2288", "521.385, 181.493, 162.15, 0.2288", "522.388, 181.213, 163.301, 0.2288", "523.393, 180.933, 164.451, 0.2288", "524.397, 180.652, 165.602, 0.2288", "525.402, 180.372, 166.753, 0.2288", "526.447, 180.146, 167.74, 0.2288", "527.51, 179.943, 168.652, 0.2288", "528.573, 179.741, 169.564, 0.2288", "529.635, 179.539, 170.476, 0.2288", "530.698, 179.337, 171.388, 0.2288", "531.76, 179.135, 172.3, 0.2288", "532.823, 178.933, 173.212, 0.2288", "533.885, 178.732, 174.124, 0.2796", "534.948, 178.529, 175.036, 0.3304" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "469.534, 163.859, 105.56, 0.2288", "469.641, 163.584, 102.919, 0.2288", "469.729, 163.117, 100.8, 0.2288", "469.947, 162.01, 100.8, 0.2288", "470.833, 161.322, 100.8, 0.2288", "471.645, 160.525, 100.8, 0.2288", "472.566, 159.91, 100.8, 0.2288", "473.647, 159.535, 100.8, 0.2288", "474.723, 159.214, 100.8, 0.2288", "475.758, 158.787, 100.8, 0.2288", "476.769, 158.421, 100.8, 0.2288", "477.632, 157.729, 100.8, 0.2288", "477.792, 156.608, 100.8, 0.2288", "478.355, 155.649, 100.8, 0.2288", "478.924, 154.667, 100.8, 0.2542", "479.443, 153.652, 100.8, 0.305", "479.821, 152.575, 100.8, 0.356", "480.125, 151.475, 100.8, 0.356", "480.453, 150.38, 100.8, 0.305", "480.929, 149.386, 100.8, 0.2542", "480.937, 148.242, 100.8, 0.2288", "481.089, 147.109, 100.8, 0.2288", "481.409, 146.021, 100.8, 0.2288", "481.737, 144.937, 100.8, 0.2288", "481.737, 143.793, 100.8, 0.2288", "481.737, 142.649, 100.8, 0.2288", "481.995, 141.541, 100.8, 0.2288", "482.3, 140.443, 100.8, 0.2288", "482.741, 139.501, 100.8, 0.2288", "482.99, 138.432, 100.52, 0.2288", "483.737, 137.741, 99.96, 0.2288", "484.699, 137.262, 99.96, 0.2288", "485.131, 136.29, 99.4552, 0.2288", "485.921, 136.022, 98.28, 0.2288", "486.936, 135.69, 98.28, 0.2288", "487.753, 134.999, 98.2159, 0.2288", "488.487, 134.206, 97.9916, 0.2288", "489.429, 133.807, 97.44, 0.2288", "490.34, 133.149, 97.16, 0.2288", "491.166, 132.505, 96.88, 0.2288", "492.025, 131.822, 96.6, 0.2288", "493.093, 131.44, 96.6, 0.2288", "493.816, 130.655, 96.3917, 0.2288", "494.222, 129.768, 95.7228, 0.2288", "494.477, 128.67, 95.48, 0.2288", "494.893, 127.745, 95.48, 0.2288", "495.383, 126.746, 95.48, 0.2288", "495.917, 125.738, 95.3963, 0.2288", "496.509, 125.06, 93.9663, 0.2288", "497.134, 124.6, 92.4, 0.2288", "497.705, 123.616, 92.4, 0.2288", "498.337, 122.811, 91.9153, 0.2288", "499.125, 122.107, 91.0753, 0.2288", "500.048, 121.508, 90.4968, 0.2288", "501.055, 120.984, 90.44, 0.2288", "501.414, 119.953, 90.4137, 0.2288", "502.034, 119.662, 89.04, 0.2288", "503.121, 119.436, 88.7986, 0.2288", "503.75, 118.528, 88.5573, 0.2288", "504.376, 117.823, 87.5034, 0.2288", "505.467, 117.529, 87.36, 0.2288", "506.604, 117.436, 87.36, 0.2288", "507.634, 117.037, 87.2962, 0.2288", "508.515, 116.917, 85.96, 0.2288", "509.565, 116.594, 85.96, 0.2288", "510.495, 116.011, 85.5683, 0.2542", "510.685, 115.2, 84.56, 0.305", "511.315, 114.274, 84.5765, 0.356", "512.273, 113.831, 84.4721, 0.356", "513.281, 113.386, 84.6154, 0.356", "514.068, 112.81, 84.0, 0.356", "515.21, 112.798, 84.0904, 0.3814", "515.943, 113.256, 85.4, 0.3304" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "469.534, 163.859, 105.56, 0.2288", "469.977, 163.837, 105.56, 0.2288", "471.121, 163.816, 105.56, 0.2288", "472.238, 163.587, 105.56, 0.2288", "473.204, 163.073, 105.56, 0.2288", "474.332, 162.906, 105.56, 0.2288", "475.445, 162.736, 105.56, 0.2288", "476.565, 162.594, 105.56, 0.2288", "477.674, 162.361, 105.56, 0.2288", "478.649, 161.762, 105.56, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "478.649, 161.762, 105.56, 0.2288", "478.571, 161.622, 106.377, 0.2796", "478.329, 161.19, 108.9, 0.2288", "478.224, 160.667, 111.198, 0.2288", "478.675, 159.779, 112.573, 0.2288", "479.127, 158.89, 113.947, 0.2796", "479.579, 158.001, 115.321, 0.3304", "480.335, 157.374, 116.368, 0.3814", "481.365, 156.983, 117.121, 0.3304", "482.395, 156.591, 117.875, 0.2796", "483.425, 156.198, 118.629, 0.2288", "484.505, 155.939, 119.253, 0.2288", "485.605, 155.734, 119.824, 0.2288", "486.707, 155.529, 120.394, 0.2288", "487.808, 155.324, 120.965, 0.2288", "488.909, 155.118, 121.535, 0.2288", "490.01, 154.914, 122.106, 0.2288", "491.111, 154.709, 122.676, 0.2288", "492.212, 154.504, 123.247, 0.2288", "493.314, 154.299, 123.817, 0.2288", "494.428, 154.22, 124.403, 0.2288", "495.544, 154.162, 124.991, 0.2288", "496.662, 154.104, 125.579, 0.2288", "497.779, 154.104, 126.055, 0.2288", "498.894, 154.355, 126.055, 0.2288", "500.011, 154.608, 126.055, 0.2288", "501.126, 154.86, 126.055, 0.2288", "502.242, 155.111, 126.055, 0.2288", "503.358, 155.364, 126.055, 0.2542", "504.326, 154.916, 126.806, 0.2796", "505.273, 154.377, 127.655, 0.305", "506.22, 153.838, 128.505, 0.2796", "507.204, 153.311, 128.936, 0.2542", "508.226, 152.796, 128.936, 0.2288", "509.247, 152.281, 128.936, 0.2288", "510.311, 151.96, 128.936, 0.2288", "511.138, 151.17, 128.936, 0.2288", "511.965, 150.38, 128.936, 0.2288", "512.792, 149.589, 128.936, 0.2288", "513.34, 148.703, 129.729, 0.2288", "513.718, 147.758, 131.008, 0.2288", "514.094, 146.813, 132.287, 0.2288", "514.359, 145.727, 132.538, 0.2288", "514.616, 144.636, 132.941, 0.2288", "514.891, 143.566, 133.672, 0.2288", "515.166, 142.497, 134.404, 0.2288", "515.297, 141.403, 135.1, 0.2288", "515.328, 140.292, 135.771, 0.2288", "515.36, 139.182, 136.443, 0.2288", "515.569, 138.102, 136.859, 0.2288", "516.068, 137.073, 136.859, 0.2288", "516.564, 136.042, 136.859, 0.2288", "517.054, 135.096, 137.536, 0.2288", "517.532, 134.246, 138.998, 0.2288", "518.011, 133.396, 140.461, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "478.649, 161.762, 105.56, 0.2288", "478.928, 161.565, 105.56, 0.2542", "479.976, 161.162, 105.56, 0.2796", "480.96, 160.584, 105.56, 0.305", "481.839, 159.941, 105.56, 0.2796", "482.822, 159.55, 105.28, 0.2542", "483.924, 159.262, 105.28, 0.2288", "485.014, 159.044, 104.75, 0.2288", "485.985, 158.507, 104.213, 0.2288", "487.054, 158.161, 103.88, 0.2288", "488.148, 157.827, 103.88, 0.2288", "489.26, 157.605, 103.88, 0.2288", "490.282, 157.12, 103.759, 0.2288", "491.205, 156.85, 102.76, 0.2288", "492.226, 156.522, 102.02, 0.2288", "493.233, 156.232, 101.08, 0.2288", "494.325, 155.908, 101.08, 0.2288", "495.348, 155.473, 101.08, 0.2288", "496.404, 155.034, 101.08, 0.2288", "497.466, 154.62, 101.08, 0.2288", "498.491, 154.204, 101.08, 0.2288", "499.301, 153.643, 100.624, 0.2288", "500.249, 153.175, 100.123, 0.2288", "501.352, 153.067, 99.612, 0.2288", "502.459, 153.067, 98.9503, 0.2288", "502.901, 152.395, 98.0, 0.2288", "503.607, 151.536, 98.0, 0.2288", "504.537, 151.15, 97.6562, 0.2288", "505.458, 150.984, 96.6263, 0.2288", "505.859, 149.98, 96.32, 0.2288", "506.495, 149.289, 95.5066, 0.2288", "506.863, 148.251, 95.1706, 0.2288", "507.436, 147.353, 94.8839, 0.2288", "507.877, 146.314, 94.5224, 0.2288", "508.537, 145.429, 93.973, 0.2288", "509.327, 144.663, 93.52, 0.2288", "510.352, 144.335, 93.0126, 0.2288", "511.013, 143.483, 92.9009, 0.2288", "511.385, 142.669, 91.56, 0.2288", "512.526, 142.589, 91.56, 0.2288", "513.666, 142.542, 91.56, 0.2288", "514.789, 142.402, 91.56, 0.2288", "515.849, 142.021, 91.3475, 0.2288", "516.651, 141.734, 89.8979, 0.2288", "517.116, 140.918, 88.8129, 0.2288", "517.937, 140.277, 87.9614, 0.2288", "518.995, 139.857, 87.8968, 0.2288", "519.87, 139.672, 86.52, 0.2288", "520.898, 139.253, 86.3307, 0.2288", "522.027, 139.11, 86.24, 0.2288", "523.036, 138.901, 86.0356, 0.2542", "523.59, 138.004, 85.96, 0.2796", "524.611, 137.566, 85.7861, 0.305", "525.605, 137.269, 85.12, 0.2796", "526.163, 136.271, 85.12, 0.2542", "526.702, 135.499, 84.1198, 0.2288", "526.857, 134.376, 84.0, 0.2288", "526.926, 133.238, 84.0, 0.2288", "526.818, 132.102, 84.0, 0.2288", "526.812, 130.958, 84.0, 0.2288", "526.812, 129.844, 84.518, 0.2288", "526.812, 128.7, 84.56, 0.2288", "526.812, 127.556, 84.56, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_278",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_279",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_52", "dend_43", "dend_42", "dend_37", "dend_14", "dend_9", "apic_0", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_49", "dend_44", "dend_41", "dend_38", "dend_30", "dend_15", "dend_13", "dend_10", "apic_26", "apic_1", "dend_6", "dend_1", "dend_59", "dend_58", "dend_51", "dend_50", "dend_48", "dend_45", "dend_40", "dend_39", "dend_36", "dend_31", "dend_27", "dend_16", "dend_12", "dend_11", "apic_5", "apic_2", "dend_8", "dend_7", "dend_3", "dend_2", "dend_47", "dend_46", "dend_35", "dend_32", "dend_29", "dend_28", "dend_26", "dend_17", "apic_25", "apic_6", "apic_4", "apic_3", "dend_5", "dend_4", "dend_34", "dend_33", "dend_23", "dend_18", "apic_24", "apic_7", "dend_25", "dend_24", "dend_22", "dend_19", "apic_23", "apic_8", "dend_21", "dend_20", "apic_22", "apic_9", "apic_17", "apic_10", "apic_19", "apic_18", "apic_16", "apic_11", "apic_21", "apic_20", "apic_15", "apic_12", "apic_14", "apic_13" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_52", "dend_43", "dend_42", "dend_37", "dend_14", "dend_9", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_49", "dend_44", "dend_41", "dend_38", "dend_30", "dend_15", "dend_13", "dend_10", "dend_6", "dend_1", "dend_59", "dend_58", "dend_51", "dend_50", "dend_48", "dend_45", "dend_40", "dend_39", "dend_36", "dend_31", "dend_27", "dend_16", "dend_12", "dend_11", "dend_8", "dend_7", "dend_3", "dend_2", "dend_47", "dend_46", "dend_35", "dend_32", "dend_29", "dend_28", "dend_26", "dend_17", "dend_5", "dend_4", "dend_34", "dend_33", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_21", "dend_20" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_26", "apic_1", "apic_5", "apic_2", "apic_25", "apic_6", "apic_4", "apic_3", "apic_24", "apic_7", "apic_23", "apic_8", "apic_22", "apic_9", "apic_17", "apic_10", "apic_19", "apic_18", "apic_16", "apic_11", "apic_21", "apic_20", "apic_15", "apic_12", "apic_14", "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12945",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "apic_0", "apic_0", "apic_0", "apic_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.93"
  }, {
    "group" : "dend",
    "value" : "2.93"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "492.53998"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.8450537E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0032792008",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.20306844",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "5.505046E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.618439E-4",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.700696E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.610225E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.108700596",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "4.7714863E-4",
    "erev" : "-87.99981"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "6.341573E-4",
    "erev" : "-87.99981"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.135154E-5",
    "erev" : "-87.99981"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "6.6417456E-4",
    "erev" : "-87.99981"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.441382E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0039738817",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472912107

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_30, id: dend_30, parent: dend_14
create dend_30
public dend_30
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: apic_26, id: apic_26, parent: apic_0
create apic_26
public apic_26
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_15
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: apic_25, id: apic_25, parent: apic_5
create apic_25
public apic_25
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: apic_24, id: apic_24, parent: apic_6
create apic_24
public apic_24
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: apic_23, id: apic_23, parent: apic_7
create apic_23
public apic_23
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_22, id: apic_22, parent: apic_8
create apic_22
public apic_22
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_17, id: apic_17, parent: apic_9
create apic_17
public apic_17
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_10
create apic_16
public apic_16
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_15, id: apic_15, parent: apic_11
create apic_15
public apic_15
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_278, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_278
// Group: {name=ModelViewParmSubset_279, groups=[], sections=[dend_55, dend_52, dend_43, dend_42, dend_37, dend_14, dend_9, apic_0, dend_0, dend_57, dend_56, dend_54, dend_53, dend_49, dend_44, dend_41, dend_38, dend_30, dend_15, dend_13, dend_10, apic_26, apic_1, dend_6, dend_1, dend_59, dend_58, dend_51, dend_50, dend_48, dend_45, dend_40, dend_39, dend_36, dend_31, dend_27, dend_16, dend_12, dend_11, apic_5, apic_2, dend_8, dend_7, dend_3, dend_2, dend_47, dend_46, dend_35, dend_32, dend_29, dend_28, dend_26, dend_17, apic_25, apic_6, apic_4, apic_3, dend_5, dend_4, dend_34, dend_33, dend_23, dend_18, apic_24, apic_7, dend_25, dend_24, dend_22, dend_19, apic_23, apic_8, dend_21, dend_20, apic_22, apic_9, apic_17, apic_10, apic_19, apic_18, apic_16, apic_11, apic_21, apic_20, apic_15, apic_12, apic_14, apic_13]}
objref ModelViewParmSubset_279
// Group: {name=dend, groups=[], sections=[dend_55, dend_52, dend_43, dend_42, dend_37, dend_14, dend_9, dend_0, dend_57, dend_56, dend_54, dend_53, dend_49, dend_44, dend_41, dend_38, dend_30, dend_15, dend_13, dend_10, dend_6, dend_1, dend_59, dend_58, dend_51, dend_50, dend_48, dend_45, dend_40, dend_39, dend_36, dend_31, dend_27, dend_16, dend_12, dend_11, dend_8, dend_7, dend_3, dend_2, dend_47, dend_46, dend_35, dend_32, dend_29, dend_28, dend_26, dend_17, dend_5, dend_4, dend_34, dend_33, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_21, dend_20]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_26, apic_1, apic_5, apic_2, apic_25, apic_6, apic_4, apic_3, apic_24, apic_7, apic_23, apic_8, apic_22, apic_9, apic_17, apic_10, apic_19, apic_18, apic_16, apic_11, apic_21, apic_20, apic_15, apic_12, apic_14, apic_13]}
objref apic
// Group: {name=OneSecGrp_SectionRef_12945, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_12945
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000337586928645)
    connect dend_55(0), soma_0(0.5000337586928645)
    connect dend_52(0), soma_0(0.5000337586928645)
    connect dend_43(0), soma_0(0.5000337586928645)
    connect dend_42(0), soma_0(0.5000337586928645)
    connect dend_37(0), soma_0(0.5000337586928645)
    connect dend_14(0), soma_0(0.5000337586928645)
    connect dend_9(0), soma_0(0.5000337586928645)
    connect apic_0(0), soma_0(0.5000337586928645)
    connect dend_0(0), soma_0(0.5000337586928645)
    connect axon_1(0), axon_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_30(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect apic_26(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect apic_25(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect apic_24(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect apic_23(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_22(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_17(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_15(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 310.512, 523.38, 56.56, 14.811 ) }
    soma_0 { pt3dadd( 317.918, 523.38, 56.56, 14.811 ) }
    soma_0 { pt3dadd( 325.323, 523.38, 56.56, 14.811 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 317.917, 523.38, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 323.759, 537.196, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 329.6, 551.012, 56.56, 1.0 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 6/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 312.292, 520.298, 59.717, 0.3814 ) }
    dend_55 { pt3dadd( 311.296, 519.948, 59.4308, 0.5338 ) }
    dend_55 { pt3dadd( 310.336, 519.861, 60.2913, 0.6356 ) }
    dend_55 { pt3dadd( 309.481, 520.177, 61.3264, 0.7118 ) }
    dend_55 { pt3dadd( 308.857, 519.937, 62.8188, 0.7118 ) }
    dend_55 { pt3dadd( 308.031, 519.719, 61.1173, 0.6864 ) }
    dend_55 { pt3dadd( 306.973, 519.49, 60.8356, 0.6356 ) }
    dend_55 { pt3dadd( 306.086, 519.577, 62.2096, 0.6356 ) }
    dend_55 { pt3dadd( 305.994, 519.834, 64.1822, 0.661 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 15/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 318.015, 530.069, 57.5229, 0.356 ) }
    dend_52 { pt3dadd( 318.069, 531.182, 57.6173, 0.356 ) }
    dend_52 { pt3dadd( 317.907, 532.082, 57.0601, 0.356 ) }
    dend_52 { pt3dadd( 317.917, 533.205, 56.5505, 0.3814 ) }
    dend_52 { pt3dadd( 317.707, 534.206, 56.8137, 0.483 ) }
    dend_52 { pt3dadd( 317.585, 535.274, 56.3657, 0.5592 ) }
    dend_52 { pt3dadd( 317.375, 536.36, 56.5219, 0.6102 ) }
    dend_52 { pt3dadd( 317.116, 537.405, 56.0392, 0.6102 ) }
    dend_52 { pt3dadd( 316.887, 538.438, 55.7561, 0.5848 ) }
    dend_52 { pt3dadd( 316.544, 539.419, 55.9306, 0.6356 ) }
    dend_52 { pt3dadd( 316.32, 540.288, 55.8463, 0.6864 ) }
    dend_52 { pt3dadd( 315.936, 541.097, 55.3694, 0.788 ) }
    dend_52 { pt3dadd( 315.832, 541.976, 54.6787, 0.7372 ) }
    dend_52 { pt3dadd( 315.374, 542.881, 55.16, 0.6864 ) }
    dend_52 { pt3dadd( 315.011, 543.761, 55.5512, 0.6102 ) }
    dend_52 { pt3dadd( 314.942, 544.576, 53.9602, 0.661 ) }
    dend_52 { pt3dadd( 314.812, 545.57, 54.0162, 0.7118 ) }
    dend_52 { pt3dadd( 314.724, 546.254, 54.9357, 0.7372 ) }
    dend_52 { pt3dadd( 314.692, 547.081, 53.7799, 0.6356 ) }
    dend_52 { pt3dadd( 314.742, 548.081, 53.6494, 0.5084 ) }
    dend_52 { pt3dadd( 314.823, 549.131, 54.5958, 0.4322 ) }
    dend_52 { pt3dadd( 314.406, 549.993, 54.0473, 0.483 ) }
    dend_52 { pt3dadd( 314.01, 550.838, 54.4569, 0.5848 ) }
    dend_52 { pt3dadd( 313.782, 551.748, 53.1961, 0.6356 ) }
    dend_52 { pt3dadd( 313.866, 552.763, 53.6035, 0.661 ) }
    dend_52 { pt3dadd( 313.433, 553.62, 53.4635, 0.6864 ) }
    dend_52 { pt3dadd( 313.684, 554.546, 54.2662, 0.7118 ) }
    dend_52 { pt3dadd( 313.253, 555.513, 54.1906, 0.6864 ) }
    dend_52 { pt3dadd( 313.175, 556.341, 53.9801, 0.661 ) }
    dend_52 { pt3dadd( 313.336, 557.399, 54.4956, 0.6864 ) }
    dend_52 { pt3dadd( 313.117, 558.241, 55.1152, 0.7118 ) }
    dend_52 { pt3dadd( 312.743, 559.175, 55.6889, 0.6102 ) }
    dend_52 { pt3dadd( 312.922, 560.134, 56.28, 0.5084 ) }
    dend_52 { pt3dadd( 312.551, 560.973, 55.16, 0.483 ) }
    dend_52 { pt3dadd( 312.448, 562.075, 54.7238, 0.6102 ) }
    dend_52 { pt3dadd( 312.295, 562.961, 55.4448, 0.7118 ) }
    dend_52 { pt3dadd( 312.103, 563.523, 54.0498, 0.7118 ) }
    dend_52 { pt3dadd( 311.625, 564.502, 54.4597, 0.661 ) }
    dend_52 { pt3dadd( 311.168, 565.055, 55.5405, 0.6102 ) }
    dend_52 { pt3dadd( 310.929, 565.86, 54.88, 0.6102 ) }
    dend_52 { pt3dadd( 310.696, 566.954, 54.6392, 0.5848 ) }
    dend_52 { pt3dadd( 310.437, 567.424, 56.021, 0.5848 ) }
    dend_52 { pt3dadd( 310.051, 568.001, 57.96, 0.6102 ) }
    dend_52 { pt3dadd( 309.999, 568.966, 57.4283, 0.661 ) }
    dend_52 { pt3dadd( 309.549, 569.971, 57.1903, 0.6864 ) }
    dend_52 { pt3dadd( 309.258, 570.965, 56.0787, 0.661 ) }
    dend_52 { pt3dadd( 308.879, 571.86, 55.3778, 0.6356 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 62/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 323.762, 525.771, 51.5738, 0.5084 ) }
    dend_43 { pt3dadd( 324.77, 526.184, 50.7142, 0.5848 ) }
    dend_43 { pt3dadd( 325.417, 526.771, 49.6891, 0.661 ) }
    dend_43 { pt3dadd( 326.058, 527.463, 49.28, 0.7118 ) }
    dend_43 { pt3dadd( 326.857, 528.172, 49.9234, 0.7626 ) }
    dend_43 { pt3dadd( 327.448, 528.943, 50.96, 0.6864 ) }
    dend_43 { pt3dadd( 327.881, 529.601, 49.5986, 0.6102 ) }
    dend_43 { pt3dadd( 328.548, 530.227, 49.0, 0.5338 ) }
    dend_43 { pt3dadd( 329.469, 530.816, 49.2783, 0.5848 ) }
    dend_43 { pt3dadd( 329.983, 531.645, 48.5192, 0.661 ) }
    dend_43 { pt3dadd( 330.751, 532.225, 47.6199, 0.6864 ) }
    dend_43 { pt3dadd( 331.746, 532.303, 47.2889, 0.5848 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 323.703, 522.519, 52.0178, 0.5848 ) }
    dend_42 { pt3dadd( 324.334, 522.922, 51.0502, 0.6356 ) }
    dend_42 { pt3dadd( 324.895, 522.156, 50.9289, 0.5084 ) }
    dend_42 { pt3dadd( 325.72, 522.236, 50.4, 0.4322 ) }
    dend_42 { pt3dadd( 326.642, 522.438, 51.1246, 0.4322 ) }
    dend_42 { pt3dadd( 327.694, 522.457, 51.2117, 0.5338 ) }
    dend_42 { pt3dadd( 328.699, 522.249, 51.217, 0.5848 ) }
    dend_42 { pt3dadd( 329.466, 522.694, 51.24, 0.6356 ) }
    dend_42 { pt3dadd( 330.348, 522.53, 50.1032, 0.6356 ) }
    dend_42 { pt3dadd( 331.441, 522.531, 50.1676, 0.5848 ) }
    dend_42 { pt3dadd( 332.538, 522.461, 49.7291, 0.483 ) }
    dend_42 { pt3dadd( 333.45, 522.458, 48.6514, 0.4576 ) }
    dend_42 { pt3dadd( 334.399, 522.808, 48.9356, 0.5084 ) }
    dend_42 { pt3dadd( 335.448, 522.946, 49.56, 0.5848 ) }
    dend_42 { pt3dadd( 336.158, 523.266, 50.5081, 0.5592 ) }
    dend_42 { pt3dadd( 337.13, 523.278, 51.3411, 0.5338 ) }
    dend_42 { pt3dadd( 338.156, 523.564, 50.7293, 0.483 ) }
    dend_42 { pt3dadd( 338.851, 523.739, 49.0, 0.5338 ) }
    dend_42 { pt3dadd( 339.941, 523.838, 49.5443, 0.5848 ) }
    dend_42 { pt3dadd( 340.887, 523.952, 50.531, 0.7372 ) }
    dend_42 { pt3dadd( 341.628, 524.674, 49.84, 0.8136 ) }
    dend_42 { pt3dadd( 342.597, 524.913, 50.2989, 0.839 ) }
    dend_42 { pt3dadd( 342.926, 525.439, 49.0882, 0.788 ) }
    dend_42 { pt3dadd( 343.832, 525.765, 49.5191, 0.7372 ) }
    dend_42 { pt3dadd( 344.753, 525.383, 48.4249, 0.7118 ) }
    dend_42 { pt3dadd( 345.844, 525.444, 47.9433, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 346.774, 525.277, 48.6052, 0.6356 ) }
    dend_42 { pt3dadd( 347.65, 525.056, 49.2209, 0.6102 ) }
    dend_42 { pt3dadd( 348.721, 524.714, 49.0, 0.5848 ) }
    dend_42 { pt3dadd( 349.737, 524.409, 48.9684, 0.5848 ) }
    dend_42 { pt3dadd( 350.773, 524.066, 49.0386, 0.5848 ) }
    dend_42 { pt3dadd( 351.636, 524.066, 49.4595, 0.6102 ) }
    dend_42 { pt3dadd( 352.465, 523.481, 49.583, 0.5592 ) }
    dend_42 { pt3dadd( 352.797, 522.88, 47.6235, 0.4576 ) }
    dend_42 { pt3dadd( 353.453, 522.138, 47.0635, 0.3814 ) }
    dend_42 { pt3dadd( 354.154, 521.937, 48.9804, 0.4068 ) }
    dend_42 { pt3dadd( 354.896, 521.529, 50.5627, 0.5084 ) }
    dend_42 { pt3dadd( 355.653, 521.158, 49.6658, 0.5848 ) }
    dend_42 { pt3dadd( 356.516, 520.653, 49.7101, 0.5848 ) }
    dend_42 { pt3dadd( 357.373, 520.354, 50.703, 0.5592 ) }
    dend_42 { pt3dadd( 357.957, 520.162, 50.1357, 0.5084 ) }
    dend_42 { pt3dadd( 358.844, 519.888, 49.8781, 0.4576 ) }
    dend_42 { pt3dadd( 359.87, 519.5, 50.3964, 0.4068 ) }
    dend_42 { pt3dadd( 360.777, 519.344, 49.3259, 0.356 ) }
    dend_42 { pt3dadd( 361.262, 518.537, 50.4, 0.356 ) }
    dend_42 { pt3dadd( 362.295, 518.138, 50.1572, 0.3304 ) }
    dend_42 { pt3dadd( 363.386, 517.894, 50.4526, 0.356 ) }
    dend_42 { pt3dadd( 364.15, 517.605, 51.3694, 0.356 ) }
    dend_42 { pt3dadd( 364.785, 517.512, 52.1242, 0.4322 ) }
    dend_42 { pt3dadd( 365.788, 517.057, 51.8, 0.4576 ) }
    dend_42 { pt3dadd( 365.991, 516.709, 49.665, 0.4576 ) }
    dend_42 { pt3dadd( 366.928, 516.421, 49.0608, 0.356 ) }
    dend_42 { pt3dadd( 367.816, 516.287, 48.6889, 0.2796 ) }
    dend_42 { pt3dadd( 368.907, 516.092, 48.368, 0.2288 ) }
    dend_42 { pt3dadd( 370.008, 515.83, 48.2168, 0.2288 ) }
    dend_42 { pt3dadd( 371.126, 515.715, 48.1734, 0.2288 ) }
    dend_42 { pt3dadd( 372.158, 515.402, 47.5121, 0.2542 ) }
    dend_42 { pt3dadd( 373.269, 515.258, 47.32, 0.305 ) }
    dend_42 { pt3dadd( 374.375, 515.143, 47.8724, 0.3814 ) }
    dend_42 { pt3dadd( 375.484, 515.33, 48.1634, 0.4322 ) }
    dend_42 { pt3dadd( 376.592, 515.195, 47.8649, 0.4576 ) }
    dend_42 { pt3dadd( 377.661, 514.882, 48.16, 0.4322 ) }
    dend_42 { pt3dadd( 378.076, 514.561, 48.6122, 0.3814 ) }
    dend_42 { pt3dadd( 378.777, 514.44, 49.8103, 0.305 ) }
    dend_42 { pt3dadd( 379.203, 513.736, 49.2416, 0.2542 ) }
    dend_42 { pt3dadd( 380.173, 513.172, 49.28, 0.2288 ) }
    dend_42 { pt3dadd( 380.721, 512.237, 49.28, 0.2288 ) }
    dend_42 { pt3dadd( 381.427, 511.472, 49.733, 0.2288 ) }
    dend_42 { pt3dadd( 382.269, 511.012, 50.5977, 0.2542 ) }
    dend_42 { pt3dadd( 382.985, 510.257, 50.8046, 0.305 ) }
    dend_42 { pt3dadd( 383.766, 509.46, 51.3416, 0.356 ) }
    dend_42 { pt3dadd( 384.39, 508.591, 51.0118, 0.3814 ) }
    dend_42 { pt3dadd( 385.092, 507.838, 51.3699, 0.3814 ) }
    dend_42 { pt3dadd( 385.958, 507.374, 52.1564, 0.3814 ) }
    dend_42 { pt3dadd( 386.911, 507.048, 52.36, 0.356 ) }
    dend_42 { pt3dadd( 387.425, 506.441, 52.75, 0.305 ) }
    dend_42 { pt3dadd( 387.994, 505.519, 52.7453, 0.2796 ) }
    dend_42 { pt3dadd( 388.539, 504.632, 52.6674, 0.2796 ) }
    dend_42 { pt3dadd( 389.372, 503.872, 52.64, 0.305 ) }
    dend_42 { pt3dadd( 390.078, 503.003, 52.8394, 0.305 ) }
    dend_42 { pt3dadd( 391.004, 502.396, 53.482, 0.305 ) }
    dend_42 { pt3dadd( 392.059, 502.075, 53.76, 0.3304 ) }
    dend_42 { pt3dadd( 392.731, 501.358, 54.2567, 0.3304 ) }
    dend_42 { pt3dadd( 393.207, 500.435, 53.494, 0.3304 ) }
    dend_42 { pt3dadd( 394.305, 500.271, 53.48, 0.2796 ) }
    dend_42 { pt3dadd( 394.739, 499.483, 52.9245, 0.2542 ) }
    dend_42 { pt3dadd( 395.372, 498.784, 53.625, 0.2288 ) }
    dend_42 { pt3dadd( 396.267, 498.652, 54.5502, 0.2288 ) }
    dend_42 { pt3dadd( 397.142, 498.117, 54.2102, 0.2288 ) }
    dend_42 { pt3dadd( 398.126, 497.565, 54.04, 0.2288 ) }
    dend_42 { pt3dadd( 398.863, 496.757, 53.9994, 0.2288 ) }
    dend_42 { pt3dadd( 399.931, 496.502, 53.48, 0.2288 ) }
    dend_42 { pt3dadd( 400.726, 495.83, 53.4503, 0.2288 ) }
    dend_42 { pt3dadd( 401.62, 495.352, 53.7135, 0.2288 ) }
    dend_42 { pt3dadd( 402.483, 494.634, 53.76, 0.2288 ) }
    dend_42 { pt3dadd( 403.384, 493.932, 53.76, 0.2288 ) }
    dend_42 { pt3dadd( 404.437, 493.725, 53.76, 0.2288 ) }
    dend_42 { pt3dadd( 405.296, 493.167, 53.76, 0.2288 ) }
    dend_42 { pt3dadd( 405.482, 492.093, 53.76, 0.2288 ) }
    dend_42 { pt3dadd( 406.214, 491.271, 53.6435, 0.2288 ) }
    dend_42 { pt3dadd( 406.829, 490.333, 53.48, 0.2542 ) }
    dend_42 { pt3dadd( 407.397, 489.409, 53.7398, 0.2796 ) }
    dend_42 { pt3dadd( 408.203, 488.79, 54.0196, 0.305 ) }
    dend_42 { pt3dadd( 408.521, 487.781, 53.2358, 0.2796 ) }
    dend_42 { pt3dadd( 408.799, 487.115, 54.7361, 0.2542 ) }
    dend_42 { pt3dadd( 409.542, 486.515, 54.6361, 0.2288 ) }
    dend_42 { pt3dadd( 410.02, 485.556, 54.3477, 0.2288 ) }
    dend_42 { pt3dadd( 410.352, 484.616, 54.04, 0.2288 ) }
    dend_42 { pt3dadd( 410.616, 483.68, 54.2968, 0.2542 ) }
    dend_42 { pt3dadd( 411.163, 482.818, 54.32, 0.305 ) }
    dend_42 { pt3dadd( 412.1, 482.292, 54.3354, 0.3814 ) }
    dend_42 { pt3dadd( 412.364, 481.967, 53.0816, 0.4068 ) }
    dend_42 { pt3dadd( 412.56, 481.543, 51.5586, 0.4068 ) }
    dend_42 { pt3dadd( 413.039, 480.938, 52.6725, 0.4068 ) }
    dend_42 { pt3dadd( 413.745, 480.562, 54.04, 0.483 ) }
    dend_42 { pt3dadd( 414.558, 479.843, 53.4901, 0.5592 ) }
    dend_42 { pt3dadd( 415.42, 479.377, 53.48, 0.5848 ) }
    dend_42 { pt3dadd( 416.308, 479.293, 54.5656, 0.5592 ) }
    dend_42 { pt3dadd( 417.29, 479.111, 54.1332, 0.5592 ) }
    dend_42 { pt3dadd( 418.289, 478.687, 54.3687, 0.5592 ) }
    dend_42 { pt3dadd( 419.161, 478.929, 54.5952, 0.5338 ) }
    dend_42 { pt3dadd( 419.908, 478.888, 55.72, 0.4576 ) }
    dend_42 { pt3dadd( 420.998, 478.656, 55.4294, 0.4068 ) }
    dend_42 { pt3dadd( 421.935, 478.678, 54.6711, 0.3814 ) }
    dend_42 { pt3dadd( 422.781, 478.491, 53.2932, 0.3814 ) }
    dend_42 { pt3dadd( 423.555, 478.213, 54.2634, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_42 { pt3dadd( 424.587, 477.867, 54.2735, 0.356 ) }
    dend_42 { pt3dadd( 425.432, 477.306, 53.6264, 0.3304 ) }
    dend_42 { pt3dadd( 426.408, 477.141, 54.0126, 0.3304 ) }
    dend_42 { pt3dadd( 427.235, 477.506, 54.0554, 0.3814 ) }
    dend_42 { pt3dadd( 428.184, 477.173, 53.3095, 0.4068 ) }
    dend_42 { pt3dadd( 429.247, 477.333, 53.9342, 0.3814 ) }
    dend_42 { pt3dadd( 430.283, 477.618, 54.3486, 0.3304 ) }
    dend_42 { pt3dadd( 431.125, 477.296, 55.1841, 0.356 ) }
    dend_42 { pt3dadd( 431.861, 477.62, 55.1158, 0.4068 ) }
    dend_42 { pt3dadd( 432.783, 477.304, 54.9539, 0.4322 ) }
    dend_42 { pt3dadd( 433.711, 477.726, 55.7914, 0.356 ) }
    dend_42 { pt3dadd( 434.711, 477.503, 55.44, 0.2796 ) }
    dend_42 { pt3dadd( 435.61, 476.937, 55.1505, 0.2288 ) }
    dend_42 { pt3dadd( 436.31, 476.476, 53.8658, 0.2288 ) }
    dend_42 { pt3dadd( 437.236, 476.931, 52.9309, 0.2288 ) }
    dend_42 { pt3dadd( 438.047, 477.176, 54.0327, 0.2796 ) }
    dend_42 { pt3dadd( 437.889, 476.95, 55.6346, 0.356 ) }
    dend_42 { pt3dadd( 437.819, 476.966, 57.0055, 0.4322 ) }
    dend_42 { pt3dadd( 438.589, 476.819, 56.6882, 0.4068 ) }
    dend_42 { pt3dadd( 439.599, 476.468, 57.1035, 0.3304 ) }
    dend_42 { pt3dadd( 440.423, 475.822, 56.84, 0.305 ) }
    dend_42 { pt3dadd( 441.395, 475.449, 57.2485, 0.3304 ) }
    dend_42 { pt3dadd( 442.102, 475.028, 56.6709, 0.3814 ) }
    dend_42 { pt3dadd( 442.646, 474.328, 56.7277, 0.356 ) }
    dend_42 { pt3dadd( 443.413, 474.642, 56.7815, 0.356 ) }
    dend_42 { pt3dadd( 443.871, 474.452, 57.4316, 0.4068 ) }
    dend_42 { pt3dadd( 444.178, 473.537, 57.7223, 0.483 ) }
    dend_42 { pt3dadd( 444.795, 473.153, 57.4406, 0.5592 ) }
    dend_42 { pt3dadd( 445.128, 472.104, 57.4423, 0.5848 ) }
    dend_42 { pt3dadd( 445.672, 471.53, 56.8061, 0.5848 ) }
    dend_42 { pt3dadd( 446.397, 470.954, 56.5852, 0.5338 ) }
    dend_42 { pt3dadd( 446.703, 470.245, 57.6528, 0.4576 ) }
    dend_42 { pt3dadd( 447.417, 469.821, 57.6509, 0.4068 ) }
    dend_42 { pt3dadd( 447.994, 469.002, 57.12, 0.356 ) }
    dend_42 { pt3dadd( 448.447, 469.383, 56.28, 0.305 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 35/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 313.74, 525.019, 44.3058, 0.3814 ) }
    dend_37 { pt3dadd( 313.031, 525.898, 44.2495, 0.5084 ) }
    dend_37 { pt3dadd( 312.951, 527.036, 44.298, 0.6356 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 316.031, 518.152, 50.4764, 0.356 ) }
    dend_14 { pt3dadd( 315.677, 517.169, 49.3335, 0.5592 ) }
    dend_14 { pt3dadd( 315.512, 516.179, 48.44, 0.788 ) }
    dend_14 { pt3dadd( 315.16, 515.275, 48.1583, 0.9152 ) }
    dend_14 { pt3dadd( 314.561, 514.338, 48.44, 0.9406 ) }
    dend_14 { pt3dadd( 314.009, 513.617, 47.3362, 0.8644 ) }
    dend_14 { pt3dadd( 313.727, 512.562, 47.808, 0.8136 ) }
    dend_14 { pt3dadd( 313.271, 511.82, 46.4836, 0.7372 ) }
    dend_14 { pt3dadd( 312.556, 511.064, 46.48, 0.7118 ) }
    dend_14 { pt3dadd( 311.853, 510.338, 47.04, 0.6356 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 48/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 321.704, 528.8, 59.2704, 0.356 ) }
    dend_9 { pt3dadd( 322.351, 529.725, 59.7327, 0.4068 ) }
    dend_9 { pt3dadd( 322.956, 530.672, 60.1927, 0.5084 ) }
    dend_9 { pt3dadd( 323.61, 531.35, 59.9161, 0.5338 ) }
    dend_9 { pt3dadd( 324.716, 531.567, 59.64, 0.6102 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 53/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 320.359, 517.142, 55.3638, 0.2288 ) }
    apic_0 { pt3dadd( 320.775, 516.079, 55.1603, 0.2796 ) }
    apic_0 { pt3dadd( 321.192, 515.016, 54.9564, 0.356 ) }
    apic_0 { pt3dadd( 321.607, 513.955, 54.7529, 0.4322 ) }
    apic_0 { pt3dadd( 322.024, 512.892, 54.549, 0.4068 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 311.805, 523.687, 53.9745, 0.305 ) }
    dend_0 { pt3dadd( 310.679, 523.743, 53.4979, 0.4322 ) }
    dend_0 { pt3dadd( 309.621, 524.028, 53.2045, 0.661 ) }
    dend_0 { pt3dadd( 308.528, 523.991, 53.1958, 0.8136 ) }
    dend_0 { pt3dadd( 307.403, 524.164, 53.1695, 0.966 ) }
    dend_0 { pt3dadd( 306.307, 524.482, 53.0107, 0.966 ) }
    dend_0 { pt3dadd( 305.227, 524.732, 52.3387, 0.966 ) }
    dend_0 { pt3dadd( 304.09, 524.757, 52.4924, 0.8644 ) }
    dend_0 { pt3dadd( 302.975, 524.784, 53.095, 0.8136 ) }
    dend_0 { pt3dadd( 301.877, 524.947, 52.481, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 68/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 329.6, 551.012, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 335.441, 564.828, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 341.283, 578.644, 56.56, 1.0 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 71/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 305.994, 519.834, 64.1822, 0.661 ) }
    dend_57 { pt3dadd( 305.226, 519.91, 63.7386, 0.483 ) }
    dend_57 { pt3dadd( 304.423, 519.28, 63.8677, 0.6864 ) }
    dend_57 { pt3dadd( 303.716, 518.651, 64.4977, 0.8644 ) }
    dend_57 { pt3dadd( 303.166, 518.003, 63.56, 0.9406 ) }
    dend_57 { pt3dadd( 301.825, 516.993, 64.3054, 0.7372 ) }
    dend_57 { pt3dadd( 301.138, 516.707, 65.8, 0.5848 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 78/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 305.994, 519.834, 64.1822, 0.661 ) }
    dend_56 { pt3dadd( 306.329, 520.511, 65.5502, 0.4322 ) }
    dend_56 { pt3dadd( 306.807, 520.735, 67.4783, 0.356 ) }
    dend_56 { pt3dadd( 306.678, 521.687, 68.8562, 0.305 ) }
    dend_56 { pt3dadd( 306.153, 522.229, 70.4816, 0.3304 ) }
    dend_56 { pt3dadd( 305.676, 522.122, 72.513, 0.3814 ) }
    dend_56 { pt3dadd( 305.445, 522.833, 73.6669, 0.4576 ) }
    dend_56 { pt3dadd( 304.654, 523.39, 74.3179, 0.5084 ) }
    dend_56 { pt3dadd( 303.691, 523.795, 74.7088, 0.5338 ) }
    dend_56 { pt3dadd( 302.683, 524.032, 75.32, 0.5338 ) }
    dend_56 { pt3dadd( 301.772, 524.637, 75.6, 0.5338 ) }
    dend_56 { pt3dadd( 301.226, 524.753, 76.8463, 0.5084 ) }
    dend_56 { pt3dadd( 300.385, 525.126, 76.5386, 0.4322 ) }
    dend_56 { pt3dadd( 299.449, 525.096, 75.2808, 0.3304 ) }
    dend_56 { pt3dadd( 298.564, 524.867, 74.0933, 0.2542 ) }
    dend_56 { pt3dadd( 297.507, 524.867, 73.0271, 0.2288 ) }
    dend_56 { pt3dadd( 296.566, 524.673, 71.7744, 0.2288 ) }
    dend_56 { pt3dadd( 295.809, 524.159, 71.4196, 0.2288 ) }
    dend_56 { pt3dadd( 295.422, 523.532, 69.7292, 0.2288 ) }
    dend_56 { pt3dadd( 294.97, 523.006, 68.32, 0.2542 ) }
    dend_56 { pt3dadd( 294.282, 522.465, 66.9026, 0.3304 ) }
    dend_56 { pt3dadd( 293.49, 522.848, 65.8888, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( 292.505, 523.037, 64.9144, 0.5084 ) }
    dend_56 { pt3dadd( 291.51, 523.25, 64.7307, 0.5084 ) }
    dend_56 { pt3dadd( 290.404, 523.38, 64.878, 0.483 ) }
    dend_56 { pt3dadd( 289.346, 523.197, 65.0418, 0.483 ) }
    dend_56 { pt3dadd( 288.555, 523.301, 64.6836, 0.5084 ) }
    dend_56 { pt3dadd( 287.51, 523.405, 64.078, 0.5338 ) }
    dend_56 { pt3dadd( 286.388, 523.557, 64.0195, 0.5084 ) }
    dend_56 { pt3dadd( 285.357, 524.009, 63.84, 0.483 ) }
    dend_56 { pt3dadd( 284.436, 524.527, 63.2834, 0.483 ) }
    dend_56 { pt3dadd( 283.403, 524.524, 62.5159, 0.5084 ) }
    dend_56 { pt3dadd( 282.393, 524.524, 61.36, 0.5592 ) }
    dend_56 { pt3dadd( 281.454, 524.462, 62.3848, 0.5592 ) }
    dend_56 { pt3dadd( 280.772, 524.97, 61.1814, 0.6102 ) }
    dend_56 { pt3dadd( 279.92, 524.818, 62.0001, 0.661 ) }
    dend_56 { pt3dadd( 278.826, 524.579, 61.8629, 0.7626 ) }
    dend_56 { pt3dadd( 278.093, 524.524, 60.5114, 0.7626 ) }
    dend_56 { pt3dadd( 277.094, 524.295, 61.2447, 0.661 ) }
    dend_56 { pt3dadd( 276.074, 523.954, 60.6214, 0.483 ) }
    dend_56 { pt3dadd( 275.011, 523.723, 60.1779, 0.3814 ) }
    dend_56 { pt3dadd( 274.114, 523.477, 59.36, 0.4068 ) }
    dend_56 { pt3dadd( 273.142, 523.142, 59.9855, 0.5084 ) }
    dend_56 { pt3dadd( 272.39, 523.258, 59.4838, 0.5338 ) }
    dend_56 { pt3dadd( 271.326, 523.529, 59.9052, 0.483 ) }
    dend_56 { pt3dadd( 270.244, 523.655, 60.4736, 0.3814 ) }
    dend_56 { pt3dadd( 269.476, 523.41, 59.089, 0.356 ) }
    dend_56 { pt3dadd( 268.645, 522.726, 59.64, 0.356 ) }
    dend_56 { pt3dadd( 267.547, 522.521, 59.2623, 0.4068 ) }
    dend_56 { pt3dadd( 266.504, 522.18, 58.7241, 0.4068 ) }
    dend_56 { pt3dadd( 265.453, 521.893, 58.2232, 0.4068 ) }
    dend_56 { pt3dadd( 264.467, 521.8, 57.3395, 0.3814 ) }
    dend_56 { pt3dadd( 263.448, 521.903, 57.5784, 0.4068 ) }
    dend_56 { pt3dadd( 262.339, 521.903, 57.3437, 0.4576 ) }
    dend_56 { pt3dadd( 261.395, 521.681, 56.7092, 0.5084 ) }
    dend_56 { pt3dadd( 260.276, 521.763, 56.5953, 0.5338 ) }
    dend_56 { pt3dadd( 259.266, 522.196, 56.56, 0.5084 ) }
    dend_56 { pt3dadd( 258.311, 522.602, 56.8078, 0.483 ) }
    dend_56 { pt3dadd( 257.257, 522.885, 56.4208, 0.4576 ) }
    dend_56 { pt3dadd( 256.214, 523.324, 56.3959, 0.4322 ) }
    dend_56 { pt3dadd( 255.19, 523.691, 55.5982, 0.3814 ) }
    dend_56 { pt3dadd( 254.116, 523.897, 55.9275, 0.305 ) }
    dend_56 { pt3dadd( 253.02, 524.151, 55.6192, 0.2542 ) }
    dend_56 { pt3dadd( 251.886, 524.153, 55.4291, 0.2288 ) }
    dend_56 { pt3dadd( 250.761, 524.066, 55.0707, 0.2288 ) }
    dend_56 { pt3dadd( 249.635, 524.078, 55.3958, 0.2542 ) }
    dend_56 { pt3dadd( 248.697, 524.625, 54.8834, 0.2796 ) }
    dend_56 { pt3dadd( 247.571, 524.827, 54.88, 0.305 ) }
    dend_56 { pt3dadd( 246.512, 525.233, 54.8514, 0.2796 ) }
    dend_56 { pt3dadd( 245.561, 525.754, 54.3306, 0.2542 ) }
    dend_56 { pt3dadd( 244.6, 526.349, 54.595, 0.2542 ) }
    dend_56 { pt3dadd( 243.761, 527.095, 54.5031, 0.305 ) }
    dend_56 { pt3dadd( 242.795, 527.66, 54.7142, 0.3814 ) }
    dend_56 { pt3dadd( 241.939, 528.197, 55.2476, 0.4068 ) }
    dend_56 { pt3dadd( 241.186, 528.845, 55.44, 0.3814 ) }
    dend_56 { pt3dadd( 240.385, 529.563, 55.5481, 0.305 ) }
    dend_56 { pt3dadd( 239.8, 530.401, 56.1697, 0.2542 ) }
    dend_56 { pt3dadd( 239.49, 531.371, 56.6084, 0.2288 ) }
    dend_56 { pt3dadd( 238.866, 532.263, 56.852, 0.2288 ) }
    dend_56 { pt3dadd( 238.412, 533.023, 56.534, 0.2288 ) }
    dend_56 { pt3dadd( 237.904, 533.905, 56.5622, 0.2288 ) }
    dend_56 { pt3dadd( 237.531, 534.919, 57.12, 0.2288 ) }
    dend_56 { pt3dadd( 236.742, 535.71, 57.12, 0.2288 ) }
    dend_56 { pt3dadd( 235.951, 536.398, 57.12, 0.2288 ) }
    dend_56 { pt3dadd( 235.663, 537.431, 57.12, 0.2542 ) }
    dend_56 { pt3dadd( 235.029, 538.293, 56.9279, 0.2796 ) }
    dend_56 { pt3dadd( 234.199, 538.938, 57.3947, 0.305 ) }
    dend_56 { pt3dadd( 233.347, 539.661, 57.678, 0.2796 ) }
    dend_56 { pt3dadd( 232.685, 540.367, 58.3996, 0.2542 ) }
    dend_56 { pt3dadd( 232.231, 541.327, 58.2672, 0.2288 ) }
    dend_56 { pt3dadd( 231.666, 542.143, 57.0293, 0.2288 ) }
    dend_56 { pt3dadd( 230.973, 542.819, 57.4582, 0.2288 ) }
    dend_56 { pt3dadd( 230.308, 543.232, 58.497, 0.2288 ) }
    dend_56 { pt3dadd( 229.361, 543.629, 58.5228, 0.2288 ) }
    dend_56 { pt3dadd( 228.268, 543.837, 58.7784, 0.2288 ) }
    dend_56 { pt3dadd( 227.283, 544.408, 58.7952, 0.2288 ) }
    dend_56 { pt3dadd( 226.503, 545.037, 59.0478, 0.2288 ) }
    dend_56 { pt3dadd( 225.48, 545.512, 59.08, 0.2288 ) }
    dend_56 { pt3dadd( 224.668, 546.141, 58.5525, 0.2288 ) }
    dend_56 { pt3dadd( 223.55, 546.297, 58.52, 0.2288 ) }
    dend_56 { pt3dadd( 222.581, 546.854, 58.52, 0.2288 ) }
    dend_56 { pt3dadd( 221.677, 547.474, 58.0126, 0.2288 ) }
    dend_56 { pt3dadd( 220.619, 547.832, 57.7046, 0.2288 ) }
    dend_56 { pt3dadd( 219.515, 548.128, 57.68, 0.2288 ) }
    dend_56 { pt3dadd( 218.468, 548.566, 57.68, 0.2796 ) }
    dend_56 { pt3dadd( 217.524, 549.194, 57.5557, 0.3814 ) }
    dend_56 { pt3dadd( 216.517, 549.527, 56.8215, 0.5084 ) }
    dend_56 { pt3dadd( 215.476, 549.588, 56.7118, 0.5338 ) }
    dend_56 { pt3dadd( 214.504, 549.98, 56.3153, 0.483 ) }
    dend_56 { pt3dadd( 213.942, 550.356, 57.3748, 0.4068 ) }
    dend_56 { pt3dadd( 212.862, 550.647, 57.556, 0.3814 ) }
    dend_56 { pt3dadd( 212.007, 551.111, 57.1444, 0.356 ) }
    dend_56 { pt3dadd( 211.07, 551.516, 57.0699, 0.3304 ) }
    dend_56 { pt3dadd( 210.517, 551.549, 55.3344, 0.305 ) }
    dend_56 { pt3dadd( 209.729, 551.863, 55.4792, 0.305 ) }
    dend_56 { pt3dadd( 209.122, 552.214, 55.5033, 0.3304 ) }
    dend_56 { pt3dadd( 208.537, 552.631, 56.772, 0.4068 ) }
    dend_56 { pt3dadd( 207.716, 552.687, 55.8452, 0.5338 ) }
    dend_56 { pt3dadd( 206.745, 552.79, 56.0056, 0.6102 ) }
    dend_56 { pt3dadd( 205.916, 552.82, 55.6223, 0.5848 ) }
    dend_56 { pt3dadd( 204.981, 553.238, 55.7813, 0.4576 ) }
    dend_56 { pt3dadd( 203.989, 553.124, 55.3459, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_56 { pt3dadd( 203.411, 552.79, 53.4092, 0.305 ) }
    dend_56 { pt3dadd( 202.437, 552.895, 54.1806, 0.3304 ) }
    dend_56 { pt3dadd( 201.55, 552.637, 55.44, 0.4068 ) }
    dend_56 { pt3dadd( 201.082, 552.774, 55.883, 0.3814 ) }
    dend_56 { pt3dadd( 200.527, 553.124, 57.2788, 0.3814 ) }
    dend_56 { pt3dadd( 200.129, 553.685, 58.9932, 0.356 ) }
    dend_56 { pt3dadd( 199.425, 554.125, 58.1241, 0.4068 ) }
    dend_56 { pt3dadd( 198.592, 554.165, 56.9243, 0.4068 ) }
    dend_56 { pt3dadd( 197.916, 554.641, 56.383, 0.3814 ) }
    dend_56 { pt3dadd( 197.004, 554.771, 56.3534, 0.305 ) }
    dend_56 { pt3dadd( 196.184, 554.953, 56.56, 0.2542 ) }
    dend_56 { pt3dadd( 195.082, 555.001, 56.537, 0.2288 ) }
    dend_56 { pt3dadd( 194.018, 555.181, 55.932, 0.2288 ) }
    dend_56 { pt3dadd( 193.41, 555.641, 56.6465, 0.2542 ) }
    dend_56 { pt3dadd( 192.8, 555.984, 57.6766, 0.305 ) }
    dend_56 { pt3dadd( 191.88, 556.376, 57.3983, 0.3814 ) }
    dend_56 { pt3dadd( 191.093, 556.729, 56.2842, 0.4068 ) }
    dend_56 { pt3dadd( 190.473, 557.403, 56.7809, 0.4068 ) }
    dend_56 { pt3dadd( 190.163, 557.972, 56.4746, 0.356 ) }
    dend_56 { pt3dadd( 189.562, 558.549, 55.9513, 0.356 ) }
    dend_56 { pt3dadd( 188.738, 559.145, 55.972, 0.3304 ) }
    dend_56 { pt3dadd( 188.528, 560.057, 55.16, 0.4068 ) }
    dend_56 { pt3dadd( 187.816, 560.772, 55.44, 0.4322 ) }
    dend_56 { pt3dadd( 186.785, 560.626, 55.7046, 0.5084 ) }
    dend_56 { pt3dadd( 185.828, 560.348, 54.7697, 0.4322 ) }
    dend_56 { pt3dadd( 185.213, 559.874, 53.48, 0.3814 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 26/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 308.879, 571.86, 55.3778, 0.6356 ) }
    dend_54 { pt3dadd( 308.484, 572.678, 54.9335, 0.661 ) }
    dend_54 { pt3dadd( 308.116, 573.589, 55.3157, 0.6102 ) }
    dend_54 { pt3dadd( 308.0, 574.487, 53.7239, 0.5338 ) }
    dend_54 { pt3dadd( 308.173, 575.464, 53.1373, 0.4322 ) }
    dend_54 { pt3dadd( 308.536, 576.394, 53.0328, 0.356 ) }
    dend_54 { pt3dadd( 308.967, 577.218, 53.6637, 0.3304 ) }
    dend_54 { pt3dadd( 308.744, 577.963, 52.7766, 0.4068 ) }
    dend_54 { pt3dadd( 308.331, 578.927, 52.5246, 0.4576 ) }
    dend_54 { pt3dadd( 307.91, 579.684, 53.7289, 0.483 ) }
    dend_54 { pt3dadd( 307.216, 580.38, 53.7177, 0.4322 ) }
    dend_54 { pt3dadd( 306.902, 581.246, 52.449, 0.4576 ) }
    dend_54 { pt3dadd( 306.362, 581.528, 52.5535, 0.5084 ) }
    dend_54 { pt3dadd( 305.668, 581.854, 51.2162, 0.5848 ) }
    dend_54 { pt3dadd( 304.941, 582.438, 51.7894, 0.5592 ) }
    dend_54 { pt3dadd( 304.147, 583.003, 50.9382, 0.5084 ) }
    dend_54 { pt3dadd( 303.158, 583.522, 50.3457, 0.4322 ) }
    dend_54 { pt3dadd( 302.349, 584.092, 50.5162, 0.4068 ) }
    dend_54 { pt3dadd( 301.565, 584.341, 50.2712, 0.356 ) }
    dend_54 { pt3dadd( 300.817, 584.551, 50.3412, 0.3304 ) }
    dend_54 { pt3dadd( 299.807, 584.536, 50.4708, 0.356 ) }
    dend_54 { pt3dadd( 298.908, 585.034, 50.4487, 0.3814 ) }
    dend_54 { pt3dadd( 297.993, 585.644, 50.1931, 0.4068 ) }
    dend_54 { pt3dadd( 297.148, 586.385, 49.8215, 0.356 ) }
    dend_54 { pt3dadd( 296.409, 587.053, 50.164, 0.3304 ) }
    dend_54 { pt3dadd( 295.685, 587.596, 50.2267, 0.3304 ) }
    dend_54 { pt3dadd( 295.023, 587.907, 48.9269, 0.356 ) }
    dend_54 { pt3dadd( 294.395, 588.49, 49.2999, 0.4068 ) }
    dend_54 { pt3dadd( 293.56, 589.091, 49.56, 0.4068 ) }
    dend_54 { pt3dadd( 292.871, 589.757, 48.6377, 0.3814 ) }
    dend_54 { pt3dadd( 292.027, 590.145, 47.88, 0.305 ) }
    dend_54 { pt3dadd( 291.093, 590.388, 47.5524, 0.2796 ) }
    dend_54 { pt3dadd( 290.171, 590.865, 47.7151, 0.305 ) }
    dend_54 { pt3dadd( 289.399, 591.663, 47.6249, 0.356 ) }
    dend_54 { pt3dadd( 288.472, 592.25, 46.8894, 0.356 ) }
    dend_54 { pt3dadd( 287.487, 592.433, 46.4198, 0.3304 ) }
    dend_54 { pt3dadd( 286.633, 592.363, 47.3278, 0.3304 ) }
    dend_54 { pt3dadd( 285.761, 592.529, 46.5828, 0.356 ) }
    dend_54 { pt3dadd( 285.131, 593.142, 46.2311, 0.3814 ) }
    dend_54 { pt3dadd( 284.602, 594.017, 46.4047, 0.3814 ) }
    dend_54 { pt3dadd( 283.814, 594.381, 45.2329, 0.3814 ) }
    dend_54 { pt3dadd( 282.869, 593.911, 45.3205, 0.3814 ) }
    dend_54 { pt3dadd( 281.914, 593.48, 45.36, 0.356 ) }
    dend_54 { pt3dadd( 280.814, 593.304, 44.9126, 0.356 ) }
    dend_54 { pt3dadd( 279.689, 593.181, 44.8, 0.3304 ) }
    dend_54 { pt3dadd( 278.65, 593.0, 44.807, 0.3304 ) }
    dend_54 { pt3dadd( 277.739, 592.742, 43.2547, 0.2796 ) }
    dend_54 { pt3dadd( 276.622, 592.752, 42.9946, 0.2796 ) }
    dend_54 { pt3dadd( 275.546, 592.935, 42.301, 0.2796 ) }
    dend_54 { pt3dadd( 274.413, 592.822, 42.28, 0.305 ) }
    dend_54 { pt3dadd( 273.297, 592.781, 42.0678, 0.2796 ) }
    dend_54 { pt3dadd( 272.378, 592.592, 41.7892, 0.2542 ) }
    dend_54 { pt3dadd( 271.492, 592.773, 42.28, 0.2288 ) }
    dend_54 { pt3dadd( 270.422, 593.05, 42.28, 0.2288 ) }
    dend_54 { pt3dadd( 269.278, 593.05, 42.28, 0.2542 ) }
    dend_54 { pt3dadd( 268.155, 593.135, 42.28, 0.2796 ) }
    dend_54 { pt3dadd( 267.457, 593.744, 43.2925, 0.305 ) }
    dend_54 { pt3dadd( 266.588, 593.951, 43.477, 0.2796 ) }
    dend_54 { pt3dadd( 265.656, 594.391, 44.24, 0.2542 ) }
    dend_54 { pt3dadd( 264.841, 594.422, 45.283, 0.2542 ) }
    dend_54 { pt3dadd( 264.509, 594.799, 47.0352, 0.2796 ) }
    dend_54 { pt3dadd( 264.188, 595.819, 46.7902, 0.305 ) }
    dend_54 { pt3dadd( 263.229, 595.795, 47.32, 0.2796 ) }
    dend_54 { pt3dadd( 262.087, 595.776, 47.3292, 0.2542 ) }
    dend_54 { pt3dadd( 261.291, 595.823, 47.1352, 0.2288 ) }
    dend_54 { pt3dadd( 260.568, 596.236, 47.2013, 0.2288 ) }
    dend_54 { pt3dadd( 259.766, 596.978, 47.4421, 0.2288 ) }
    dend_54 { pt3dadd( 258.766, 597.47, 47.6, 0.2288 ) }
    dend_54 { pt3dadd( 257.759, 597.912, 47.6, 0.2288 ) }
    dend_54 { pt3dadd( 257.131, 598.541, 48.2812, 0.2288 ) }
    dend_54 { pt3dadd( 256.031, 598.647, 48.5932, 0.2542 ) }
    dend_54 { pt3dadd( 255.06, 599.196, 49.0585, 0.305 ) }
    dend_54 { pt3dadd( 254.132, 599.71, 49.6247, 0.356 ) }
    dend_54 { pt3dadd( 253.278, 600.373, 49.8417, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( 252.373, 601.023, 50.4, 0.305 ) }
    dend_54 { pt3dadd( 251.621, 601.757, 50.2303, 0.2542 ) }
    dend_54 { pt3dadd( 250.627, 602.128, 50.8606, 0.2288 ) }
    dend_54 { pt3dadd( 249.528, 602.375, 50.5963, 0.2288 ) }
    dend_54 { pt3dadd( 248.411, 602.545, 50.3266, 0.2288 ) }
    dend_54 { pt3dadd( 247.282, 602.649, 50.12, 0.2542 ) }
    dend_54 { pt3dadd( 246.158, 602.82, 49.9484, 0.2796 ) }
    dend_54 { pt3dadd( 245.272, 603.203, 48.8032, 0.305 ) }
    dend_54 { pt3dadd( 244.381, 603.57, 49.0, 0.2796 ) }
    dend_54 { pt3dadd( 244.095, 604.564, 49.28, 0.2796 ) }
    dend_54 { pt3dadd( 242.964, 604.651, 49.28, 0.2796 ) }
    dend_54 { pt3dadd( 242.344, 605.547, 49.2052, 0.305 ) }
    dend_54 { pt3dadd( 242.045, 606.633, 49.0, 0.2796 ) }
    dend_54 { pt3dadd( 241.615, 607.687, 49.0, 0.2542 ) }
    dend_54 { pt3dadd( 240.858, 608.46, 48.7057, 0.2288 ) }
    dend_54 { pt3dadd( 239.842, 608.344, 47.8274, 0.2288 ) }
    dend_54 { pt3dadd( 238.721, 608.3, 48.0844, 0.2288 ) }
    dend_54 { pt3dadd( 237.603, 608.488, 48.16, 0.2288 ) }
    dend_54 { pt3dadd( 236.586, 608.698, 47.782, 0.2796 ) }
    dend_54 { pt3dadd( 235.6, 609.086, 48.2261, 0.356 ) }
    dend_54 { pt3dadd( 234.581, 609.294, 48.914, 0.4322 ) }
    dend_54 { pt3dadd( 233.535, 608.951, 48.8009, 0.4576 ) }
    dend_54 { pt3dadd( 232.52, 609.286, 49.28, 0.4322 ) }
    dend_54 { pt3dadd( 231.995, 609.976, 48.6116, 0.4576 ) }
    dend_54 { pt3dadd( 231.43, 610.438, 49.56, 0.483 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 308.879, 571.86, 55.3778, 0.6356 ) }
    dend_53 { pt3dadd( 309.128, 572.586, 56.0, 0.5592 ) }
    dend_53 { pt3dadd( 309.228, 573.452, 56.84, 0.5592 ) }
    dend_53 { pt3dadd( 309.579, 574.429, 56.84, 0.5338 ) }
    dend_53 { pt3dadd( 309.991, 575.446, 57.0657, 0.5084 ) }
    dend_53 { pt3dadd( 309.989, 576.372, 56.2086, 0.5084 ) }
    dend_53 { pt3dadd( 310.558, 577.307, 56.2831, 0.5338 ) }
    dend_53 { pt3dadd( 311.048, 577.862, 57.0069, 0.5084 ) }
    dend_53 { pt3dadd( 311.347, 578.807, 56.2822, 0.5084 ) }
    dend_53 { pt3dadd( 311.51, 579.818, 57.0758, 0.5084 ) }
    dend_53 { pt3dadd( 311.924, 580.741, 56.2786, 0.5338 ) }
    dend_53 { pt3dadd( 311.968, 581.861, 56.0767, 0.5084 ) }
    dend_53 { pt3dadd( 312.308, 582.882, 56.56, 0.483 ) }
    dend_53 { pt3dadd( 312.149, 583.778, 57.3695, 0.4576 ) }
    dend_53 { pt3dadd( 312.287, 584.727, 57.3401, 0.483 ) }
    dend_53 { pt3dadd( 312.54, 585.575, 57.3082, 0.5084 ) }
    dend_53 { pt3dadd( 312.56, 586.558, 56.5614, 0.5084 ) }
    dend_53 { pt3dadd( 312.209, 587.47, 57.68, 0.483 ) }
    dend_53 { pt3dadd( 312.082, 588.567, 57.2743, 0.4322 ) }
    dend_53 { pt3dadd( 311.986, 589.594, 56.5746, 0.4068 ) }
    dend_53 { pt3dadd( 311.851, 590.535, 57.6461, 0.3304 ) }
    dend_53 { pt3dadd( 311.853, 591.66, 57.96, 0.305 ) }
    dend_53 { pt3dadd( 311.853, 592.804, 57.96, 0.305 ) }
    dend_53 { pt3dadd( 311.915, 593.911, 57.4935, 0.356 ) }
    dend_53 { pt3dadd( 311.872, 595.015, 57.5425, 0.3814 ) }
    dend_53 { pt3dadd( 311.61, 596.066, 57.925, 0.356 ) }
    dend_53 { pt3dadd( 311.413, 597.033, 57.5492, 0.3304 ) }
    dend_53 { pt3dadd( 311.224, 598.102, 57.3532, 0.2796 ) }
    dend_53 { pt3dadd( 311.167, 599.24, 57.4118, 0.2542 ) }
    dend_53 { pt3dadd( 311.112, 600.332, 57.96, 0.2288 ) }
    dend_53 { pt3dadd( 310.709, 601.3, 57.9771, 0.2288 ) }
    dend_53 { pt3dadd( 310.459, 602.373, 58.52, 0.2288 ) }
    dend_53 { pt3dadd( 309.951, 603.306, 59.3303, 0.2288 ) }
    dend_53 { pt3dadd( 309.379, 604.265, 59.6246, 0.2542 ) }
    dend_53 { pt3dadd( 308.861, 605.127, 59.92, 0.305 ) }
    dend_53 { pt3dadd( 308.307, 606.067, 59.92, 0.3814 ) }
    dend_53 { pt3dadd( 307.991, 607.121, 60.4915, 0.4322 ) }
    dend_53 { pt3dadd( 307.502, 608.088, 61.04, 0.4322 ) }
    dend_53 { pt3dadd( 306.727, 608.619, 60.6099, 0.4068 ) }
    dend_53 { pt3dadd( 305.932, 609.289, 61.1495, 0.3814 ) }
    dend_53 { pt3dadd( 305.42, 610.297, 61.376, 0.3814 ) }
    dend_53 { pt3dadd( 305.256, 611.367, 62.0278, 0.356 ) }
    dend_53 { pt3dadd( 305.094, 612.256, 62.72, 0.3304 ) }
    dend_53 { pt3dadd( 304.532, 613.026, 62.72, 0.305 ) }
    dend_53 { pt3dadd( 304.046, 613.399, 63.7501, 0.305 ) }
    dend_53 { pt3dadd( 303.241, 613.576, 63.3111, 0.305 ) }
    dend_53 { pt3dadd( 302.546, 614.141, 64.4445, 0.3304 ) }
    dend_53 { pt3dadd( 302.056, 614.959, 65.52, 0.356 ) }
    dend_53 { pt3dadd( 301.704, 616.041, 65.308, 0.356 ) }
    dend_53 { pt3dadd( 301.353, 617.111, 65.52, 0.356 ) }
    dend_53 { pt3dadd( 300.881, 617.83, 64.7581, 0.356 ) }
    dend_53 { pt3dadd( 300.32, 618.657, 64.1292, 0.4068 ) }
    dend_53 { pt3dadd( 300.182, 619.398, 65.7222, 0.3814 ) }
    dend_53 { pt3dadd( 299.647, 619.87, 66.92, 0.356 ) }
    dend_53 { pt3dadd( 299.396, 620.975, 66.64, 0.305 ) }
    dend_53 { pt3dadd( 299.269, 621.792, 66.4334, 0.3304 ) }
    dend_53 { pt3dadd( 299.181, 622.593, 67.3739, 0.4068 ) }
    dend_53 { pt3dadd( 298.959, 623.418, 66.96, 0.483 ) }
    dend_53 { pt3dadd( 298.964, 624.484, 66.6621, 0.5338 ) }
    dend_53 { pt3dadd( 298.836, 625.49, 67.6388, 0.5084 ) }
    dend_53 { pt3dadd( 298.351, 626.459, 68.3682, 0.4576 ) }
    dend_53 { pt3dadd( 298.189, 627.523, 68.2402, 0.3814 ) }
    dend_53 { pt3dadd( 297.502, 627.97, 66.8875, 0.305 ) }
    dend_53 { pt3dadd( 297.139, 628.866, 66.0716, 0.2542 ) }
    dend_53 { pt3dadd( 297.145, 629.928, 65.4007, 0.2542 ) }
    dend_53 { pt3dadd( 297.137, 630.939, 66.5218, 0.2796 ) }
    dend_53 { pt3dadd( 297.528, 631.744, 67.5214, 0.3304 ) }
    dend_53 { pt3dadd( 296.852, 632.289, 68.04, 0.3814 ) }
    dend_53 { pt3dadd( 296.549, 633.04, 67.389, 0.4576 ) }
    dend_53 { pt3dadd( 296.421, 633.867, 67.7634, 0.483 ) }
    dend_53 { pt3dadd( 296.651, 634.866, 68.2553, 0.4576 ) }
    dend_53 { pt3dadd( 296.551, 635.939, 68.9732, 0.4322 ) }
    dend_53 { pt3dadd( 296.746, 637.026, 68.6, 0.4576 ) }
    dend_53 { pt3dadd( 296.781, 637.827, 68.2531, 0.5592 ) }
    dend_53 { pt3dadd( 296.971, 638.748, 68.1534, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( 296.888, 639.747, 67.6066, 0.5592 ) }
    dend_53 { pt3dadd( 296.365, 640.637, 68.7512, 0.4576 ) }
    dend_53 { pt3dadd( 296.5, 641.499, 68.8139, 0.4322 ) }
    dend_53 { pt3dadd( 297.028, 642.301, 68.6949, 0.483 ) }
    dend_53 { pt3dadd( 297.096, 643.311, 68.0711, 0.5592 ) }
    dend_53 { pt3dadd( 297.279, 644.164, 67.6469, 0.6102 ) }
    dend_53 { pt3dadd( 297.631, 645.051, 68.3099, 0.5592 ) }
    dend_53 { pt3dadd( 297.532, 646.067, 68.2041, 0.4576 ) }
    dend_53 { pt3dadd( 297.424, 646.969, 67.949, 0.3304 ) }
    dend_53 { pt3dadd( 297.231, 648.087, 68.276, 0.2542 ) }
    dend_53 { pt3dadd( 296.775, 649.101, 68.6, 0.2288 ) }
    dend_53 { pt3dadd( 296.141, 649.912, 68.0431, 0.2542 ) }
    dend_53 { pt3dadd( 295.504, 650.768, 68.4023, 0.2796 ) }
    dend_53 { pt3dadd( 295.242, 651.821, 68.04, 0.305 ) }
    dend_53 { pt3dadd( 294.811, 652.573, 69.1569, 0.2796 ) }
    dend_53 { pt3dadd( 294.482, 653.648, 68.88, 0.2542 ) }
    dend_53 { pt3dadd( 294.059, 654.707, 68.8274, 0.2288 ) }
    dend_53 { pt3dadd( 293.737, 655.596, 67.6883, 0.2288 ) }
    dend_53 { pt3dadd( 293.21, 656.529, 66.9292, 0.2288 ) }
    dend_53 { pt3dadd( 292.919, 657.538, 67.2, 0.2288 ) }
    dend_53 { pt3dadd( 292.432, 658.453, 67.48, 0.2288 ) }
    dend_53 { pt3dadd( 291.59, 659.113, 67.8384, 0.2542 ) }
    dend_53 { pt3dadd( 290.986, 659.842, 68.7487, 0.305 ) }
    dend_53 { pt3dadd( 290.146, 660.514, 69.4884, 0.356 ) }
    dend_53 { pt3dadd( 289.461, 661.385, 69.6825, 0.356 ) }
    dend_53 { pt3dadd( 289.046, 661.906, 70.2083, 0.3304 ) }
    dend_53 { pt3dadd( 288.507, 661.701, 71.12, 0.3304 ) }
    dend_53 { pt3dadd( 287.762, 662.265, 71.9468, 0.3814 ) }
    dend_53 { pt3dadd( 287.456, 663.117, 72.1154, 0.4068 ) }
    dend_53 { pt3dadd( 286.977, 664.137, 72.3962, 0.4068 ) }
    dend_53 { pt3dadd( 286.246, 664.79, 73.2883, 0.4068 ) }
    dend_53 { pt3dadd( 285.354, 665.063, 72.543, 0.4322 ) }
    dend_53 { pt3dadd( 284.529, 665.14, 73.9441, 0.483 ) }
    dend_53 { pt3dadd( 283.784, 665.422, 74.3694, 0.4576 ) }
    dend_53 { pt3dadd( 283.067, 666.047, 75.04, 0.4322 ) }
    dend_53 { pt3dadd( 282.429, 666.037, 73.2892, 0.3304 ) }
    dend_53 { pt3dadd( 281.916, 666.421, 73.36, 0.2796 ) }
    dend_53 { pt3dadd( 281.052, 666.748, 74.4526, 0.2288 ) }
    dend_53 { pt3dadd( 280.508, 667.638, 74.48, 0.2288 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 39/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 331.746, 532.303, 47.2889, 0.5848 ) }
    dend_49 { pt3dadd( 332.449, 532.467, 47.336, 0.5084 ) }
    dend_49 { pt3dadd( 333.236, 533.123, 47.8229, 0.483 ) }
    dend_49 { pt3dadd( 333.723, 533.906, 47.8512, 0.483 ) }
    dend_49 { pt3dadd( 334.398, 534.655, 47.4597, 0.4322 ) }
    dend_49 { pt3dadd( 335.067, 535.093, 48.7925, 0.4322 ) }
    dend_49 { pt3dadd( 335.832, 535.596, 49.2327, 0.4322 ) }
    dend_49 { pt3dadd( 336.297, 535.621, 46.9468, 0.483 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 47/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 331.746, 532.303, 47.2889, 0.5848 ) }
    dend_44 { pt3dadd( 332.439, 531.506, 45.92, 0.4576 ) }
    dend_44 { pt3dadd( 333.41, 531.307, 45.4339, 0.483 ) }
    dend_44 { pt3dadd( 334.047, 531.881, 44.6236, 0.5338 ) }
    dend_44 { pt3dadd( 334.778, 532.187, 45.024, 0.5848 ) }
    dend_44 { pt3dadd( 335.684, 532.485, 45.5596, 0.5848 ) }
    dend_44 { pt3dadd( 336.344, 532.326, 46.48, 0.5338 ) }
    dend_44 { pt3dadd( 337.021, 531.922, 45.7332, 0.4322 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 55/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 312.951, 527.036, 44.298, 0.6356 ) }
    dend_41 { pt3dadd( 312.549, 527.748, 45.2203, 0.2542 ) }
    dend_41 { pt3dadd( 311.643, 527.821, 45.3253, 0.2542 ) }
    dend_41 { pt3dadd( 310.851, 527.041, 45.187, 0.2796 ) }
    dend_41 { pt3dadd( 310.314, 526.068, 44.6292, 0.356 ) }
    dend_41 { pt3dadd( 309.475, 525.44, 44.254, 0.4322 ) }
    dend_41 { pt3dadd( 308.437, 525.677, 44.142, 0.5338 ) }
    dend_41 { pt3dadd( 307.518, 526.305, 43.617, 0.5338 ) }
    dend_41 { pt3dadd( 306.495, 526.469, 42.709, 0.5084 ) }
    dend_41 { pt3dadd( 305.466, 526.086, 42.9713, 0.5084 ) }
    dend_41 { pt3dadd( 304.385, 525.731, 43.0982, 0.6102 ) }
    dend_41 { pt3dadd( 303.25, 525.722, 43.0122, 0.7372 ) }
    dend_41 { pt3dadd( 302.229, 526.092, 42.268, 0.788 ) }
    dend_41 { pt3dadd( 301.27, 526.547, 41.2213, 0.788 ) }
    dend_41 { pt3dadd( 300.159, 526.753, 40.9189, 0.7372 ) }
    dend_41 { pt3dadd( 299.027, 526.629, 41.0206, 0.6864 ) }
    dend_41 { pt3dadd( 297.902, 526.633, 41.5167, 0.6356 ) }
    dend_41 { pt3dadd( 296.834, 526.873, 40.789, 0.6102 ) }
    dend_41 { pt3dadd( 295.793, 526.964, 39.6595, 0.6102 ) }
    dend_41 { pt3dadd( 294.72, 526.718, 38.9197, 0.6102 ) }
    dend_41 { pt3dadd( 293.631, 526.884, 39.639, 0.6356 ) }
    dend_41 { pt3dadd( 292.499, 527.042, 39.7368, 0.661 ) }
    dend_41 { pt3dadd( 291.356, 527.045, 39.6074, 0.6864 ) }
    dend_41 { pt3dadd( 290.249, 527.075, 38.9122, 0.6102 ) }
    dend_41 { pt3dadd( 289.13, 527.264, 38.6372, 0.5084 ) }
    dend_41 { pt3dadd( 288.17, 527.866, 38.5157, 0.356 ) }
    dend_41 { pt3dadd( 287.164, 528.366, 38.0394, 0.305 ) }
    dend_41 { pt3dadd( 286.057, 528.573, 38.3832, 0.3304 ) }
    dend_41 { pt3dadd( 285.109, 529.192, 38.2976, 0.483 ) }
    dend_41 { pt3dadd( 284.286, 529.908, 37.4738, 0.6102 ) }
    dend_41 { pt3dadd( 283.335, 530.498, 36.918, 0.661 ) }
    dend_41 { pt3dadd( 282.355, 531.017, 37.5474, 0.6102 ) }
    dend_41 { pt3dadd( 281.421, 531.579, 38.3922, 0.5592 ) }
    dend_41 { pt3dadd( 280.572, 532.342, 38.353, 0.5338 ) }
    dend_41 { pt3dadd( 279.761, 533.038, 37.3652, 0.5084 ) }
    dend_41 { pt3dadd( 279.025, 533.836, 36.4801, 0.5338 ) }
    dend_41 { pt3dadd( 278.237, 534.647, 36.0769, 0.5338 ) }
    dend_41 { pt3dadd( 277.378, 535.206, 34.8312, 0.5592 ) }
    dend_41 { pt3dadd( 276.3, 535.47, 34.1701, 0.5084 ) }
    dend_41 { pt3dadd( 275.338, 536.088, 34.1538, 0.5338 ) }
    dend_41 { pt3dadd( 274.303, 536.469, 34.1096, 0.5592 ) }
    dend_41 { pt3dadd( 273.193, 536.229, 33.866, 0.6102 ) }
    dend_41 { pt3dadd( 272.115, 535.923, 33.4519, 0.5592 ) }
    dend_41 { pt3dadd( 270.999, 535.706, 33.6722, 0.5338 ) }
    dend_41 { pt3dadd( 269.885, 535.543, 33.5577, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_41 { pt3dadd( 268.828, 535.168, 33.0644, 0.5084 ) }
    dend_41 { pt3dadd( 267.737, 534.872, 32.9613, 0.483 ) }
    dend_41 { pt3dadd( 266.611, 534.872, 32.6113, 0.5084 ) }
    dend_41 { pt3dadd( 265.527, 535.074, 31.9841, 0.5338 ) }
    dend_41 { pt3dadd( 264.48, 535.495, 31.556, 0.5848 ) }
    dend_41 { pt3dadd( 263.433, 535.88, 30.9666, 0.6102 ) }
    dend_41 { pt3dadd( 262.341, 536.132, 30.4791, 0.5848 ) }
    dend_41 { pt3dadd( 261.222, 536.193, 29.9342, 0.5848 ) }
    dend_41 { pt3dadd( 260.086, 536.193, 29.68, 0.5592 ) }
    dend_41 { pt3dadd( 258.942, 536.212, 29.68, 0.5848 ) }
    dend_41 { pt3dadd( 257.813, 536.362, 29.68, 0.5592 ) }
    dend_41 { pt3dadd( 256.694, 536.596, 29.68, 0.5592 ) }
    dend_41 { pt3dadd( 255.572, 536.811, 29.6808, 0.5084 ) }
    dend_41 { pt3dadd( 254.449, 537.023, 29.6853, 0.5084 ) }
    dend_41 { pt3dadd( 253.31, 537.108, 29.7147, 0.5084 ) }
    dend_41 { pt3dadd( 252.173, 537.108, 29.9398, 0.5338 ) }
    dend_41 { pt3dadd( 251.049, 537.106, 30.4455, 0.5084 ) }
    dend_41 { pt3dadd( 249.92, 537.091, 30.6894, 0.483 ) }
    dend_41 { pt3dadd( 248.803, 536.994, 30.254, 0.4576 ) }
    dend_41 { pt3dadd( 247.691, 536.919, 29.7564, 0.4576 ) }
    dend_41 { pt3dadd( 246.55, 536.919, 29.5602, 0.4576 ) }
    dend_41 { pt3dadd( 245.427, 536.848, 29.1264, 0.4322 ) }
    dend_41 { pt3dadd( 244.38, 537.062, 29.2365, 0.3814 ) }
    dend_41 { pt3dadd( 243.372, 537.563, 29.6159, 0.305 ) }
    dend_41 { pt3dadd( 242.397, 538.156, 29.5996, 0.2542 ) }
    dend_41 { pt3dadd( 241.695, 538.995, 29.167, 0.2796 ) }
    dend_41 { pt3dadd( 240.998, 539.848, 28.558, 0.3304 ) }
    dend_41 { pt3dadd( 239.989, 540.254, 28.3542, 0.4068 ) }
    dend_41 { pt3dadd( 238.85, 540.346, 28.3861, 0.3814 ) }
    dend_41 { pt3dadd( 237.752, 540.535, 27.9432, 0.356 ) }
    dend_41 { pt3dadd( 236.772, 541.06, 27.5369, 0.2796 ) }
    dend_41 { pt3dadd( 235.894, 541.789, 27.4884, 0.2796 ) }
    dend_41 { pt3dadd( 235.401, 542.773, 27.7589, 0.3304 ) }
    dend_41 { pt3dadd( 235.243, 543.888, 27.573, 0.4068 ) }
    dend_41 { pt3dadd( 234.942, 544.975, 27.2625, 0.4576 ) }
    dend_41 { pt3dadd( 234.479, 545.985, 26.6484, 0.4322 ) }
    dend_41 { pt3dadd( 233.757, 546.841, 26.3486, 0.4068 ) }
    dend_41 { pt3dadd( 232.853, 547.537, 26.2976, 0.3814 ) }
    dend_41 { pt3dadd( 231.858, 548.095, 26.1797, 0.3814 ) }
    dend_41 { pt3dadd( 230.849, 548.537, 25.5055, 0.3814 ) }
    dend_41 { pt3dadd( 229.792, 548.937, 25.223, 0.356 ) }
    dend_41 { pt3dadd( 228.754, 549.416, 25.1994, 0.305 ) }
    dend_41 { pt3dadd( 227.736, 549.937, 25.1978, 0.2796 ) }
    dend_41 { pt3dadd( 226.75, 550.516, 25.1863, 0.305 ) }
    dend_41 { pt3dadd( 225.937, 551.307, 25.1278, 0.4068 ) }
    dend_41 { pt3dadd( 225.421, 552.305, 24.7607, 0.4576 ) }
    dend_41 { pt3dadd( 225.216, 553.412, 24.3908, 0.483 ) }
    dend_41 { pt3dadd( 224.947, 554.514, 24.6109, 0.4322 ) }
    dend_41 { pt3dadd( 224.75, 555.618, 24.1867, 0.4322 ) }
    dend_41 { pt3dadd( 224.379, 556.692, 24.0825, 0.483 ) }
    dend_41 { pt3dadd( 223.422, 557.242, 24.08, 0.5848 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 51/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 312.951, 527.036, 44.298, 0.6356 ) }
    dend_38 { pt3dadd( 313.334, 528.228, 44.7846, 0.788 ) }
    dend_38 { pt3dadd( 313.973, 529.109, 45.1226, 0.7626 ) }
    dend_38 { pt3dadd( 315.013, 529.356, 44.3556, 0.6356 ) }
    dend_38 { pt3dadd( 316.061, 529.643, 43.5014, 0.5338 ) }
    dend_38 { pt3dadd( 316.716, 530.522, 43.1242, 0.4576 ) }
    dend_38 { pt3dadd( 316.373, 531.564, 42.9797, 0.5338 ) }
    dend_38 { pt3dadd( 316.388, 532.665, 42.32, 0.6356 ) }
    dend_38 { pt3dadd( 317.037, 533.588, 41.9994, 0.8136 ) }
    dend_38 { pt3dadd( 317.602, 534.582, 41.9392, 0.839 ) }
    dend_38 { pt3dadd( 317.7, 535.712, 41.6366, 0.7626 ) }
    // Section: dend_30, id: dend_30, parent: dend_14 (entry count 62/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 311.853, 510.338, 47.04, 0.6356 ) }
    dend_30 { pt3dadd( 311.684, 510.508, 49.1156, 0.839 ) }
    dend_30 { pt3dadd( 310.851, 510.25, 49.84, 0.7626 ) }
    dend_30 { pt3dadd( 309.787, 510.486, 49.5776, 0.661 ) }
    dend_30 { pt3dadd( 308.877, 510.783, 48.6965, 0.5848 ) }
    dend_30 { pt3dadd( 307.964, 510.44, 48.1911, 0.5338 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 311.853, 510.338, 47.04, 0.6356 ) }
    dend_15 { pt3dadd( 311.25, 509.183, 46.5444, 0.6102 ) }
    dend_15 { pt3dadd( 310.848, 508.164, 46.2521, 0.6864 ) }
    dend_15 { pt3dadd( 310.64, 507.367, 45.64, 0.661 ) }
    dend_15 { pt3dadd( 311.548, 506.715, 45.64, 0.6102 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 73/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 324.716, 531.567, 59.64, 0.6102 ) }
    dend_13 { pt3dadd( 325.439, 531.584, 58.6869, 0.5338 ) }
    dend_13 { pt3dadd( 326.517, 531.388, 58.522, 0.4068 ) }
    dend_13 { pt3dadd( 327.468, 531.212, 59.5868, 0.3304 ) }
    dend_13 { pt3dadd( 328.511, 530.918, 59.92, 0.2796 ) }
    dend_13 { pt3dadd( 329.012, 530.069, 60.2389, 0.305 ) }
    dend_13 { pt3dadd( 329.751, 529.749, 61.5829, 0.356 ) }
    dend_13 { pt3dadd( 330.654, 529.443, 62.6024, 0.4322 ) }
    dend_13 { pt3dadd( 331.678, 529.432, 63.28, 0.4576 ) }
    dend_13 { pt3dadd( 332.709, 529.134, 62.7494, 0.4576 ) }
    dend_13 { pt3dadd( 333.722, 528.757, 63.3816, 0.4576 ) }
    dend_13 { pt3dadd( 334.491, 528.676, 64.2034, 0.4576 ) }
    dend_13 { pt3dadd( 335.581, 528.642, 64.071, 0.5084 ) }
    dend_13 { pt3dadd( 336.313, 527.977, 64.1768, 0.5848 ) }
    dend_13 { pt3dadd( 337.236, 527.764, 64.3275, 0.6356 ) }
    dend_13 { pt3dadd( 337.707, 527.727, 66.3597, 0.6102 ) }
    dend_13 { pt3dadd( 338.644, 527.314, 66.6106, 0.6102 ) }
    dend_13 { pt3dadd( 339.433, 526.756, 66.4303, 0.6864 ) }
    dend_13 { pt3dadd( 340.168, 526.482, 67.3476, 0.7626 ) }
    dend_13 { pt3dadd( 340.651, 526.579, 69.5195, 0.7626 ) }
    dend_13 { pt3dadd( 341.658, 526.698, 70.2842, 0.6356 ) }
    dend_13 { pt3dadd( 342.693, 526.583, 69.6864, 0.5338 ) }
    dend_13 { pt3dadd( 343.776, 526.812, 69.9317, 0.4068 ) }
    dend_13 { pt3dadd( 344.815, 526.812, 71.027, 0.3814 ) }
    dend_13 { pt3dadd( 345.487, 527.384, 70.56, 0.3814 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 98/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 324.716, 531.567, 59.64, 0.6102 ) }
    dend_10 { pt3dadd( 325.12, 532.015, 59.36, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 325.81, 532.649, 59.8704, 0.5848 ) }
    dend_10 { pt3dadd( 326.364, 533.248, 58.9963, 0.6102 ) }
    dend_10 { pt3dadd( 327.039, 533.886, 59.4241, 0.5848 ) }
    dend_10 { pt3dadd( 327.285, 534.77, 59.4532, 0.5084 ) }
    // Section: apic_26, id: apic_26, parent: apic_0 (entry count 4/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 322.024, 512.892, 54.549, 0.4068 ) }
    apic_26 { pt3dadd( 322.253, 512.649, 54.4368, 0.661 ) }
    apic_26 { pt3dadd( 323.292, 512.24, 54.2864, 0.7118 ) }
    apic_26 { pt3dadd( 324.18, 511.54, 54.0215, 0.661 ) }
    apic_26 { pt3dadd( 325.182, 511.104, 53.2417, 0.5084 ) }
    apic_26 { pt3dadd( 326.22, 510.628, 53.198, 0.4068 ) }
    apic_26 { pt3dadd( 327.359, 510.589, 53.1874, 0.356 ) }
    apic_26 { pt3dadd( 328.498, 510.704, 53.1143, 0.4068 ) }
    apic_26 { pt3dadd( 329.592, 510.96, 52.6198, 0.4322 ) }
    apic_26 { pt3dadd( 330.66, 510.787, 51.7177, 0.4576 ) }
    apic_26 { pt3dadd( 331.653, 510.711, 50.3432, 0.483 ) }
    apic_26 { pt3dadd( 332.672, 511.17, 49.7473, 0.5338 ) }
    apic_26 { pt3dadd( 333.704, 511.614, 49.224, 0.6102 ) }
    apic_26 { pt3dadd( 334.62, 512.198, 48.4327, 0.661 ) }
    apic_26 { pt3dadd( 335.754, 512.136, 48.1863, 0.661 ) }
    apic_26 { pt3dadd( 336.827, 511.986, 47.3127, 0.6356 ) }
    apic_26 { pt3dadd( 337.911, 512.072, 46.5133, 0.5592 ) }
    apic_26 { pt3dadd( 339.037, 511.908, 46.2686, 0.483 ) }
    apic_26 { pt3dadd( 340.141, 511.757, 45.6459, 0.3814 ) }
    apic_26 { pt3dadd( 341.25, 511.566, 45.339, 0.3814 ) }
    apic_26 { pt3dadd( 342.377, 511.715, 45.2138, 0.4576 ) }
    apic_26 { pt3dadd( 343.493, 511.654, 44.6793, 0.5848 ) }
    apic_26 { pt3dadd( 344.572, 511.787, 43.8147, 0.6102 ) }
    apic_26 { pt3dadd( 345.635, 512.002, 42.9302, 0.5592 ) }
    apic_26 { pt3dadd( 346.728, 512.187, 42.3086, 0.4576 ) }
    apic_26 { pt3dadd( 347.837, 512.392, 42.4334, 0.483 ) }
    apic_26 { pt3dadd( 348.944, 512.4, 43.0844, 0.5338 ) }
    apic_26 { pt3dadd( 350.08, 512.411, 43.379, 0.6102 ) }
    apic_26 { pt3dadd( 351.2, 512.462, 43.8864, 0.5338 ) }
    apic_26 { pt3dadd( 352.322, 512.552, 43.75, 0.4322 ) }
    apic_26 { pt3dadd( 353.366, 512.774, 43.1197, 0.3304 ) }
    apic_26 { pt3dadd( 354.383, 513.13, 43.1183, 0.3304 ) }
    apic_26 { pt3dadd( 355.515, 512.995, 43.1085, 0.4068 ) }
    apic_26 { pt3dadd( 356.631, 513.128, 43.0494, 0.483 ) }
    apic_26 { pt3dadd( 357.685, 513.536, 42.7283, 0.5338 ) }
    apic_26 { pt3dadd( 358.752, 513.873, 42.1918, 0.5084 ) }
    apic_26 { pt3dadd( 359.854, 514.161, 42.0, 0.4576 ) }
    apic_26 { pt3dadd( 360.954, 514.474, 42.0008, 0.3814 ) }
    apic_26 { pt3dadd( 362.074, 514.647, 42.0053, 0.3304 ) }
    apic_26 { pt3dadd( 363.194, 514.489, 42.0426, 0.305 ) }
    apic_26 { pt3dadd( 363.982, 513.829, 42.3066, 0.305 ) }
    apic_26 { pt3dadd( 364.371, 512.775, 42.3458, 0.305 ) }
    apic_26 { pt3dadd( 365.097, 512.122, 41.6349, 0.3304 ) }
    apic_26 { pt3dadd( 366.176, 512.149, 41.0278, 0.4068 ) }
    apic_26 { pt3dadd( 367.298, 512.243, 40.7812, 0.483 ) }
    apic_26 { pt3dadd( 368.312, 511.878, 40.273, 0.5338 ) }
    apic_26 { pt3dadd( 369.272, 511.298, 39.8286, 0.5084 ) }
    apic_26 { pt3dadd( 370.257, 510.718, 39.7351, 0.4576 ) }
    apic_26 { pt3dadd( 371.211, 510.09, 39.6388, 0.4068 ) }
    apic_26 { pt3dadd( 372.242, 509.742, 39.1471, 0.4068 ) }
    apic_26 { pt3dadd( 373.354, 509.814, 38.7243, 0.483 ) }
    apic_26 { pt3dadd( 374.484, 509.806, 38.64, 0.5592 ) }
    apic_26 { pt3dadd( 375.621, 509.69, 38.64, 0.5848 ) }
    apic_26 { pt3dadd( 376.742, 509.826, 38.6042, 0.5338 ) }
    apic_26 { pt3dadd( 377.789, 509.467, 38.4152, 0.483 ) }
    apic_26 { pt3dadd( 378.746, 508.932, 37.6452, 0.483 ) }
    apic_26 { pt3dadd( 379.86, 509.029, 37.4626, 0.5084 ) }
    apic_26 { pt3dadd( 380.975, 509.221, 37.0661, 0.5084 ) }
    apic_26 { pt3dadd( 382.068, 509.438, 36.4305, 0.4322 ) }
    apic_26 { pt3dadd( 383.193, 509.62, 36.234, 0.3304 ) }
    apic_26 { pt3dadd( 384.292, 509.51, 35.5309, 0.2542 ) }
    apic_26 { pt3dadd( 385.294, 508.975, 35.2845, 0.2542 ) }
    apic_26 { pt3dadd( 386.308, 508.446, 35.2738, 0.305 ) }
    apic_26 { pt3dadd( 387.432, 508.238, 35.236, 0.3814 ) }
    apic_26 { pt3dadd( 388.568, 508.137, 35.0132, 0.4068 ) }
    apic_26 { pt3dadd( 389.65, 508.022, 34.1614, 0.4322 ) }
    apic_26 { pt3dadd( 390.747, 507.724, 33.8836, 0.4322 ) }
    apic_26 { pt3dadd( 391.744, 507.305, 33.0327, 0.4576 ) }
    apic_26 { pt3dadd( 392.459, 506.457, 32.3495, 0.4576 ) }
    apic_26 { pt3dadd( 393.199, 505.604, 31.9418, 0.4576 ) }
    apic_26 { pt3dadd( 394.101, 504.902, 31.9343, 0.5084 ) }
    apic_26 { pt3dadd( 394.99, 504.182, 31.985, 0.5338 ) }
    apic_26 { pt3dadd( 395.796, 503.377, 32.1955, 0.5592 ) }
    apic_26 { pt3dadd( 396.543, 502.557, 32.6934, 0.5084 ) }
    apic_26 { pt3dadd( 397.119, 501.614, 32.0082, 0.483 ) }
    apic_26 { pt3dadd( 397.68, 500.618, 31.9214, 0.4576 ) }
    apic_26 { pt3dadd( 398.333, 499.679, 31.9267, 0.4576 ) }
    apic_26 { pt3dadd( 398.99, 498.743, 31.9547, 0.4576 ) }
    apic_26 { pt3dadd( 399.612, 497.794, 32.142, 0.4322 ) }
    apic_26 { pt3dadd( 400.026, 496.767, 32.7827, 0.3814 ) }
    apic_26 { pt3dadd( 400.374, 495.695, 32.7401, 0.3304 ) }
    apic_26 { pt3dadd( 401.042, 494.814, 32.1118, 0.3304 ) }
    apic_26 { pt3dadd( 401.881, 494.043, 31.92, 0.4068 ) }
    apic_26 { pt3dadd( 402.678, 493.233, 31.92, 0.4576 ) }
    apic_26 { pt3dadd( 403.651, 492.635, 31.9192, 0.4576 ) }
    apic_26 { pt3dadd( 404.679, 492.132, 31.9155, 0.4068 ) }
    apic_26 { pt3dadd( 405.703, 491.621, 31.8959, 0.4322 ) }
    apic_26 { pt3dadd( 406.709, 491.083, 31.7901, 0.5084 ) }
    apic_26 { pt3dadd( 407.246, 490.563, 31.253, 0.5338 ) }
    apic_26 { pt3dadd( 407.973, 490.023, 30.6309, 0.4576 ) }
    apic_26 { pt3dadd( 408.49, 489.051, 30.1154, 0.3304 ) }
    apic_26 { pt3dadd( 408.865, 488.935, 27.7992, 0.2542 ) }
    apic_26 { pt3dadd( 409.381, 488.292, 26.88, 0.2288 ) }
    apic_26 { pt3dadd( 410.123, 488.018, 27.4103, 0.2542 ) }
    apic_26 { pt3dadd( 410.577, 487.664, 29.0665, 0.3304 ) }
    apic_26 { pt3dadd( 411.467, 487.245, 29.3082, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_26 { pt3dadd( 412.327, 486.597, 29.3378, 0.5084 ) }
    apic_26 { pt3dadd( 413.188, 486.001, 30.1949, 0.5084 ) }
    apic_26 { pt3dadd( 413.88, 485.304, 30.45, 0.5084 ) }
    apic_26 { pt3dadd( 414.437, 484.78, 30.224, 0.5084 ) }
    apic_26 { pt3dadd( 414.93, 484.048, 28.6124, 0.5338 ) }
    apic_26 { pt3dadd( 415.678, 483.597, 28.2778, 0.483 ) }
    apic_26 { pt3dadd( 416.412, 483.506, 27.1412, 0.4068 ) }
    apic_26 { pt3dadd( 417.169, 483.184, 27.5164, 0.356 ) }
    apic_26 { pt3dadd( 417.693, 482.376, 26.971, 0.3814 ) }
    apic_26 { pt3dadd( 418.088, 481.748, 27.44, 0.5084 ) }
    apic_26 { pt3dadd( 419.108, 481.74, 27.8774, 0.5592 ) }
    apic_26 { pt3dadd( 420.053, 481.433, 26.8736, 0.6102 ) }
    apic_26 { pt3dadd( 420.68, 481.142, 26.0798, 0.5848 ) }
    apic_26 { pt3dadd( 421.605, 480.634, 26.3897, 0.6356 ) }
    apic_26 { pt3dadd( 422.629, 480.244, 25.9918, 0.661 ) }
    apic_26 { pt3dadd( 423.341, 479.913, 26.5675, 0.661 ) }
    apic_26 { pt3dadd( 424.273, 479.723, 26.0014, 0.6356 ) }
    apic_26 { pt3dadd( 425.107, 479.336, 26.2741, 0.5848 ) }
    apic_26 { pt3dadd( 425.661, 479.773, 28.0109, 0.5338 ) }
    apic_26 { pt3dadd( 426.387, 479.482, 27.5092, 0.5084 ) }
    apic_26 { pt3dadd( 427.117, 479.217, 26.0957, 0.5592 ) }
    apic_26 { pt3dadd( 427.619, 478.566, 24.7066, 0.661 ) }
    apic_26 { pt3dadd( 428.155, 477.641, 24.0604, 0.6864 ) }
    apic_26 { pt3dadd( 428.427, 476.727, 23.1048, 0.6356 ) }
    apic_26 { pt3dadd( 429.279, 476.247, 23.014, 0.5338 ) }
    apic_26 { pt3dadd( 430.316, 476.47, 23.2358, 0.5084 ) }
    apic_26 { pt3dadd( 431.278, 476.566, 23.0597, 0.5084 ) }
    apic_26 { pt3dadd( 432.295, 476.819, 23.2697, 0.5592 ) }
    apic_26 { pt3dadd( 433.036, 476.934, 24.6775, 0.5848 ) }
    apic_26 { pt3dadd( 433.664, 476.603, 22.7198, 0.5848 ) }
    apic_26 { pt3dadd( 434.697, 476.221, 22.1217, 0.5338 ) }
    apic_26 { pt3dadd( 435.49, 476.42, 22.3286, 0.483 ) }
    apic_26 { pt3dadd( 435.977, 476.656, 22.8242, 0.4576 ) }
    apic_26 { pt3dadd( 436.265, 476.361, 24.92, 0.4322 ) }
    apic_26 { pt3dadd( 436.9, 476.219, 24.152, 0.4068 ) }
    apic_26 { pt3dadd( 437.674, 476.318, 23.2677, 0.3814 ) }
    apic_26 { pt3dadd( 438.287, 475.586, 22.0489, 0.4322 ) }
    apic_26 { pt3dadd( 439.242, 475.588, 20.8986, 0.5084 ) }
    apic_26 { pt3dadd( 439.876, 476.215, 20.5134, 0.5848 ) }
    apic_26 { pt3dadd( 440.32, 477.241, 21.0, 0.6102 ) }
    apic_26 { pt3dadd( 440.884, 477.62, 21.2486, 0.5848 ) }
    apic_26 { pt3dadd( 441.495, 476.962, 21.5813, 0.5848 ) }
    apic_26 { pt3dadd( 442.177, 476.362, 20.9093, 0.5338 ) }
    apic_26 { pt3dadd( 443.053, 476.054, 20.3963, 0.483 ) }
    apic_26 { pt3dadd( 443.659, 476.302, 21.1868, 0.3814 ) }
    apic_26 { pt3dadd( 444.443, 476.247, 20.44, 0.356 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 46/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 322.024, 512.892, 54.549, 0.4068 ) }
    apic_1 { pt3dadd( 322.253, 512.324, 55.4753, 0.6102 ) }
    apic_1 { pt3dadd( 322.816, 511.56, 56.9512, 0.6356 ) }
    apic_1 { pt3dadd( 323.319, 510.646, 57.2902, 0.5848 ) }
    apic_1 { pt3dadd( 323.669, 509.566, 56.9453, 0.5338 ) }
    apic_1 { pt3dadd( 324.102, 508.553, 57.388, 0.483 ) }
    apic_1 { pt3dadd( 324.675, 507.57, 57.6836, 0.4322 ) }
    apic_1 { pt3dadd( 324.9, 506.449, 57.7086, 0.4068 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 301.877, 524.947, 52.481, 0.6864 ) }
    dend_6 { pt3dadd( 301.088, 525.916, 50.9855, 0.6864 ) }
    dend_6 { pt3dadd( 300.657, 526.754, 51.6911, 0.661 ) }
    dend_6 { pt3dadd( 299.976, 527.303, 52.3211, 0.6356 ) }
    dend_6 { pt3dadd( 299.543, 528.247, 52.3905, 0.5848 ) }
    dend_6 { pt3dadd( 299.5, 529.381, 52.5468, 0.5848 ) }
    dend_6 { pt3dadd( 299.146, 530.323, 51.8126, 0.5848 ) }
    dend_6 { pt3dadd( 298.594, 531.299, 51.5102, 0.6102 ) }
    dend_6 { pt3dadd( 298.589, 532.071, 51.6709, 0.6102 ) }
    dend_6 { pt3dadd( 298.125, 532.641, 50.7086, 0.5848 ) }
    dend_6 { pt3dadd( 297.828, 533.452, 50.1729, 0.5338 ) }
    dend_6 { pt3dadd( 297.45, 534.406, 49.6079, 0.4576 ) }
    dend_6 { pt3dadd( 297.147, 535.405, 49.5956, 0.4068 ) }
    dend_6 { pt3dadd( 297.287, 536.459, 50.0578, 0.4068 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 68/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 301.877, 524.947, 52.481, 0.6864 ) }
    dend_1 { pt3dadd( 301.481, 523.601, 52.0915, 0.8136 ) }
    dend_1 { pt3dadd( 300.686, 522.786, 52.0797, 0.8898 ) }
    dend_1 { pt3dadd( 299.625, 522.366, 52.0789, 0.839 ) }
    dend_1 { pt3dadd( 298.6, 521.857, 52.0736, 0.661 ) }
    dend_1 { pt3dadd( 297.79, 521.05, 52.0537, 0.5084 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 74/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 301.138, 516.707, 65.8, 0.5848 ) }
    dend_59 { pt3dadd( 300.999, 516.106, 65.8, 0.6864 ) }
    dend_59 { pt3dadd( 300.757, 515.126, 66.3628, 0.5338 ) }
    dend_59 { pt3dadd( 300.839, 514.155, 67.6875, 0.4068 ) }
    dend_59 { pt3dadd( 300.757, 513.062, 67.3879, 0.4068 ) }
    dend_59 { pt3dadd( 300.889, 512.145, 68.7196, 0.5084 ) }
    dend_59 { pt3dadd( 301.597, 511.433, 68.88, 0.6356 ) }
    dend_59 { pt3dadd( 301.989, 510.543, 69.2969, 0.661 ) }
    dend_59 { pt3dadd( 302.664, 509.862, 70.2134, 0.6864 ) }
    dend_59 { pt3dadd( 303.107, 509.088, 69.16, 0.6864 ) }
    dend_59 { pt3dadd( 303.72, 508.375, 70.3279, 0.661 ) }
    dend_59 { pt3dadd( 303.951, 507.372, 70.0017, 0.5084 ) }
    dend_59 { pt3dadd( 304.417, 506.873, 71.2673, 0.4068 ) }
    dend_59 { pt3dadd( 304.414, 506.055, 73.1237, 0.356 ) }
    dend_59 { pt3dadd( 304.675, 505.004, 73.6089, 0.356 ) }
    dend_59 { pt3dadd( 304.568, 503.946, 73.57, 0.356 ) }
    dend_59 { pt3dadd( 304.989, 503.131, 74.2, 0.356 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 91/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 301.138, 516.707, 65.8, 0.5848 ) }
    dend_58 { pt3dadd( 300.765, 516.308, 65.5729, 0.3814 ) }
    dend_58 { pt3dadd( 300.281, 515.944, 63.8694, 0.356 ) }
    dend_58 { pt3dadd( 299.369, 515.635, 64.6716, 0.356 ) }
    dend_58 { pt3dadd( 298.4, 515.593, 65.49, 0.4068 ) }
    dend_58 { pt3dadd( 297.568, 515.325, 67.0037, 0.4576 ) }
    dend_58 { pt3dadd( 296.677, 515.024, 68.1632, 0.4576 ) }
    dend_58 { pt3dadd( 295.64, 514.914, 68.1416, 0.356 ) }
    dend_58 { pt3dadd( 294.968, 514.23, 68.9301, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( 294.088, 513.601, 69.6394, 0.2542 ) }
    dend_58 { pt3dadd( 293.086, 513.77, 70.2915, 0.356 ) }
    dend_58 { pt3dadd( 292.366, 514.037, 71.12, 0.5338 ) }
    dend_58 { pt3dadd( 291.289, 513.992, 71.12, 0.6864 ) }
    dend_58 { pt3dadd( 290.503, 513.718, 71.7307, 0.6864 ) }
    dend_58 { pt3dadd( 289.747, 513.433, 73.0999, 0.5848 ) }
    dend_58 { pt3dadd( 288.661, 513.445, 73.36, 0.4576 ) }
    dend_58 { pt3dadd( 287.944, 513.455, 73.4404, 0.4322 ) }
    dend_58 { pt3dadd( 287.262, 513.616, 74.009, 0.3814 ) }
    dend_58 { pt3dadd( 286.525, 513.316, 75.2343, 0.356 ) }
    dend_58 { pt3dadd( 285.514, 513.18, 74.1541, 0.2796 ) }
    dend_58 { pt3dadd( 284.527, 513.317, 74.1882, 0.305 ) }
    dend_58 { pt3dadd( 283.608, 513.861, 74.2115, 0.3304 ) }
    dend_58 { pt3dadd( 282.83, 513.805, 75.3595, 0.4322 ) }
    dend_58 { pt3dadd( 281.812, 513.995, 75.7338, 0.4576 ) }
    dend_58 { pt3dadd( 280.838, 513.593, 76.3496, 0.5084 ) }
    dend_58 { pt3dadd( 279.749, 513.372, 75.999, 0.483 ) }
    dend_58 { pt3dadd( 278.768, 513.211, 77.1848, 0.483 ) }
    dend_58 { pt3dadd( 277.778, 512.964, 77.233, 0.4322 ) }
    dend_58 { pt3dadd( 276.743, 512.626, 77.5933, 0.3814 ) }
    dend_58 { pt3dadd( 276.36, 512.394, 79.4889, 0.305 ) }
    dend_58 { pt3dadd( 276.008, 511.649, 78.4308, 0.2796 ) }
    dend_58 { pt3dadd( 275.183, 511.306, 79.1456, 0.305 ) }
    dend_58 { pt3dadd( 274.171, 511.139, 78.8012, 0.4322 ) }
    dend_58 { pt3dadd( 273.421, 510.674, 79.3254, 0.5338 ) }
    dend_58 { pt3dadd( 272.473, 510.338, 79.8577, 0.6102 ) }
    dend_58 { pt3dadd( 271.579, 509.887, 80.4014, 0.5338 ) }
    dend_58 { pt3dadd( 270.888, 509.016, 80.705, 0.4322 ) }
    dend_58 { pt3dadd( 270.12, 508.283, 80.92, 0.305 ) }
    dend_58 { pt3dadd( 269.269, 507.822, 80.4185, 0.2796 ) }
    dend_58 { pt3dadd( 268.61, 507.362, 79.7532, 0.2796 ) }
    dend_58 { pt3dadd( 268.323, 506.694, 78.0438, 0.3304 ) }
    dend_58 { pt3dadd( 268.138, 505.908, 76.4201, 0.3304 ) }
    dend_58 { pt3dadd( 267.696, 505.333, 74.8983, 0.3304 ) }
    dend_58 { pt3dadd( 266.822, 504.836, 73.6742, 0.2796 ) }
    dend_58 { pt3dadd( 265.913, 504.733, 72.086, 0.2542 ) }
    dend_58 { pt3dadd( 265.536, 503.986, 70.5034, 0.2288 ) }
    dend_58 { pt3dadd( 265.396, 503.152, 69.5442, 0.2288 ) }
    dend_58 { pt3dadd( 265.275, 502.479, 68.5297, 0.2288 ) }
    dend_58 { pt3dadd( 264.835, 502.269, 66.3404, 0.2288 ) }
    dend_58 { pt3dadd( 264.285, 501.887, 64.2592, 0.2288 ) }
    dend_58 { pt3dadd( 263.39, 501.415, 63.6737, 0.2288 ) }
    dend_58 { pt3dadd( 263.348, 501.341, 60.9188, 0.2542 ) }
    dend_58 { pt3dadd( 262.959, 500.772, 59.1234, 0.305 ) }
    dend_58 { pt3dadd( 262.318, 500.315, 60.4271, 0.3814 ) }
    dend_58 { pt3dadd( 261.856, 499.414, 61.0215, 0.4322 ) }
    dend_58 { pt3dadd( 261.134, 498.591, 60.2773, 0.4576 ) }
    dend_58 { pt3dadd( 260.509, 497.846, 60.8703, 0.4576 ) }
    dend_58 { pt3dadd( 259.742, 497.328, 59.6487, 0.4322 ) }
    dend_58 { pt3dadd( 259.066, 496.853, 60.8563, 0.4068 ) }
    dend_58 { pt3dadd( 258.183, 496.303, 61.04, 0.3814 ) }
    dend_58 { pt3dadd( 257.322, 496.039, 61.2833, 0.3814 ) }
    dend_58 { pt3dadd( 256.345, 495.664, 61.04, 0.3814 ) }
    dend_58 { pt3dadd( 255.797, 494.867, 61.3225, 0.356 ) }
    dend_58 { pt3dadd( 255.438, 493.925, 61.8022, 0.3304 ) }
    dend_58 { pt3dadd( 254.506, 493.328, 62.1564, 0.305 ) }
    dend_58 { pt3dadd( 253.619, 492.918, 62.6503, 0.3304 ) }
    dend_58 { pt3dadd( 252.731, 492.292, 63.4553, 0.3814 ) }
    dend_58 { pt3dadd( 251.79, 491.696, 63.6633, 0.4068 ) }
    dend_58 { pt3dadd( 250.98, 491.017, 63.28, 0.3814 ) }
    dend_58 { pt3dadd( 249.857, 490.884, 63.4794, 0.305 ) }
    dend_58 { pt3dadd( 249.045, 490.253, 63.8257, 0.2542 ) }
    dend_58 { pt3dadd( 248.138, 489.886, 63.4981, 0.2288 ) }
    dend_58 { pt3dadd( 247.406, 489.268, 64.12, 0.2288 ) }
    dend_58 { pt3dadd( 246.284, 489.174, 64.12, 0.2288 ) }
    dend_58 { pt3dadd( 245.304, 488.8, 64.2802, 0.2542 ) }
    dend_58 { pt3dadd( 244.67, 488.082, 64.8264, 0.2796 ) }
    dend_58 { pt3dadd( 244.006, 487.315, 64.5453, 0.356 ) }
    dend_58 { pt3dadd( 243.148, 486.626, 64.68, 0.3814 ) }
    dend_58 { pt3dadd( 242.519, 485.846, 65.52, 0.4068 ) }
    dend_58 { pt3dadd( 241.58, 485.306, 65.3923, 0.356 ) }
    dend_58 { pt3dadd( 241.185, 484.34, 65.5598, 0.356 ) }
    dend_58 { pt3dadd( 240.134, 484.006, 65.52, 0.356 ) }
    dend_58 { pt3dadd( 239.135, 483.456, 65.4738, 0.356 ) }
    dend_58 { pt3dadd( 238.083, 483.101, 65.6572, 0.305 ) }
    dend_58 { pt3dadd( 237.251, 482.544, 66.0215, 0.2796 ) }
    dend_58 { pt3dadd( 236.121, 482.654, 66.08, 0.3304 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 336.297, 535.621, 46.9468, 0.483 ) }
    dend_51 { pt3dadd( 336.873, 535.866, 45.7246, 0.5592 ) }
    dend_51 { pt3dadd( 337.511, 536.537, 45.8525, 0.5084 ) }
    dend_51 { pt3dadd( 338.377, 537.139, 46.0835, 0.4322 ) }
    dend_51 { pt3dadd( 339.031, 537.815, 46.7239, 0.4322 ) }
    dend_51 { pt3dadd( 339.951, 538.138, 47.5101, 0.4322 ) }
    dend_51 { pt3dadd( 340.892, 538.138, 46.3568, 0.483 ) }
    dend_51 { pt3dadd( 341.888, 538.157, 46.8994, 0.483 ) }
    dend_51 { pt3dadd( 342.828, 538.324, 48.1499, 0.483 ) }
    dend_51 { pt3dadd( 343.881, 538.235, 47.2063, 0.4576 ) }
    dend_51 { pt3dadd( 344.84, 538.252, 47.9987, 0.4576 ) }
    dend_51 { pt3dadd( 345.355, 538.824, 48.412, 0.4576 ) }
    dend_51 { pt3dadd( 345.923, 538.863, 46.2328, 0.483 ) }
    dend_51 { pt3dadd( 346.748, 538.954, 47.3018, 0.5338 ) }
    dend_51 { pt3dadd( 347.741, 539.161, 47.5087, 0.5592 ) }
    dend_51 { pt3dadd( 348.068, 539.734, 48.16, 0.5084 ) }
    dend_51 { pt3dadd( 349.022, 539.957, 47.4309, 0.3814 ) }
    dend_51 { pt3dadd( 350.112, 540.129, 47.6, 0.305 ) }
    dend_51 { pt3dadd( 351.021, 540.227, 48.6942, 0.2796 ) }
    dend_51 { pt3dadd( 351.835, 540.55, 47.6588, 0.356 ) }
    dend_51 { pt3dadd( 352.605, 540.76, 46.2076, 0.3814 ) }
    dend_51 { pt3dadd( 353.561, 540.677, 47.32, 0.4322 ) }
    dend_51 { pt3dadd( 354.621, 540.988, 47.8489, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_51 { pt3dadd( 355.626, 540.911, 47.5784, 0.4576 ) }
    dend_51 { pt3dadd( 356.66, 540.883, 48.1715, 0.483 ) }
    dend_51 { pt3dadd( 357.616, 540.997, 48.3034, 0.5338 ) }
    dend_51 { pt3dadd( 358.624, 540.604, 48.0987, 0.5338 ) }
    dend_51 { pt3dadd( 359.388, 540.778, 47.04, 0.5338 ) }
    dend_51 { pt3dadd( 360.519, 540.677, 47.2363, 0.5338 ) }
    dend_51 { pt3dadd( 361.397, 540.764, 48.3263, 0.5084 ) }
    dend_51 { pt3dadd( 362.106, 540.932, 48.4756, 0.483 ) }
    dend_51 { pt3dadd( 362.709, 541.559, 47.9573, 0.4322 ) }
    dend_51 { pt3dadd( 363.562, 541.658, 48.4554, 0.4322 ) }
    dend_51 { pt3dadd( 364.143, 541.253, 49.8296, 0.4068 ) }
    dend_51 { pt3dadd( 365.081, 541.159, 48.9079, 0.4322 ) }
    dend_51 { pt3dadd( 366.107, 541.03, 48.7332, 0.4068 ) }
    dend_51 { pt3dadd( 367.155, 541.305, 48.7298, 0.4576 ) }
    dend_51 { pt3dadd( 368.076, 541.923, 48.3216, 0.483 ) }
    dend_51 { pt3dadd( 369.074, 542.256, 48.0525, 0.5084 ) }
    dend_51 { pt3dadd( 370.131, 542.323, 47.5194, 0.4322 ) }
    dend_51 { pt3dadd( 371.021, 542.717, 47.7568, 0.356 ) }
    dend_51 { pt3dadd( 371.809, 543.06, 48.6707, 0.3304 ) }
    dend_51 { pt3dadd( 372.81, 543.4, 48.4523, 0.3814 ) }
    dend_51 { pt3dadd( 373.934, 543.466, 48.44, 0.4322 ) }
    dend_51 { pt3dadd( 374.784, 543.514, 48.3739, 0.4322 ) }
    dend_51 { pt3dadd( 375.874, 543.708, 48.0326, 0.3814 ) }
    dend_51 { pt3dadd( 376.946, 543.99, 47.4418, 0.305 ) }
    dend_51 { pt3dadd( 378.051, 544.153, 46.9087, 0.2796 ) }
    dend_51 { pt3dadd( 379.165, 544.147, 46.8286, 0.305 ) }
    dend_51 { pt3dadd( 379.861, 544.626, 45.6686, 0.3814 ) }
    dend_51 { pt3dadd( 380.564, 545.195, 45.0562, 0.4322 ) }
    dend_51 { pt3dadd( 381.592, 545.079, 44.5452, 0.4322 ) }
    dend_51 { pt3dadd( 382.368, 545.725, 45.0699, 0.3814 ) }
    dend_51 { pt3dadd( 383.117, 545.982, 43.7024, 0.3304 ) }
    dend_51 { pt3dadd( 384.202, 545.964, 42.9332, 0.3304 ) }
    dend_51 { pt3dadd( 385.275, 546.246, 43.3745, 0.3814 ) }
    dend_51 { pt3dadd( 386.187, 546.603, 42.9537, 0.4068 ) }
    dend_51 { pt3dadd( 387.266, 546.905, 43.0702, 0.4068 ) }
    dend_51 { pt3dadd( 388.072, 547.29, 42.5141, 0.3814 ) }
    dend_51 { pt3dadd( 389.064, 547.708, 42.0146, 0.4068 ) }
    dend_51 { pt3dadd( 389.915, 548.35, 42.698, 0.4068 ) }
    dend_51 { pt3dadd( 390.44, 548.788, 42.7078, 0.4068 ) }
    dend_51 { pt3dadd( 391.043, 549.539, 42.0095, 0.356 ) }
    dend_51 { pt3dadd( 391.681, 550.215, 42.359, 0.356 ) }
    dend_51 { pt3dadd( 392.349, 550.938, 41.9412, 0.356 ) }
    dend_51 { pt3dadd( 393.329, 551.098, 41.4943, 0.4068 ) }
    dend_51 { pt3dadd( 394.421, 551.302, 41.2233, 0.4576 ) }
    dend_51 { pt3dadd( 395.339, 551.419, 41.9594, 0.483 ) }
    dend_51 { pt3dadd( 396.356, 551.732, 41.1628, 0.483 ) }
    dend_51 { pt3dadd( 397.174, 552.187, 41.4467, 0.4068 ) }
    dend_51 { pt3dadd( 398.118, 552.677, 42.1551, 0.356 ) }
    dend_51 { pt3dadd( 399.121, 552.665, 41.456, 0.2796 ) }
    dend_51 { pt3dadd( 400.23, 552.634, 41.4747, 0.2542 ) }
    dend_51 { pt3dadd( 401.172, 553.005, 42.0294, 0.2288 ) }
    dend_51 { pt3dadd( 402.104, 553.216, 43.12, 0.2288 ) }
    dend_51 { pt3dadd( 403.194, 553.238, 43.587, 0.2288 ) }
    dend_51 { pt3dadd( 403.995, 553.555, 45.1382, 0.2288 ) }
    dend_51 { pt3dadd( 404.936, 553.204, 45.8013, 0.2288 ) }
    dend_51 { pt3dadd( 406.047, 553.198, 45.9483, 0.2542 ) }
    dend_51 { pt3dadd( 407.057, 553.558, 46.7617, 0.2796 ) }
    dend_51 { pt3dadd( 407.845, 553.914, 47.838, 0.3304 ) }
    dend_51 { pt3dadd( 408.612, 554.649, 47.6, 0.3304 ) }
    dend_51 { pt3dadd( 408.801, 555.775, 47.6, 0.3304 ) }
    dend_51 { pt3dadd( 408.873, 556.879, 47.5317, 0.305 ) }
    dend_51 { pt3dadd( 409.415, 557.794, 48.16, 0.3304 ) }
    dend_51 { pt3dadd( 409.352, 558.815, 47.9531, 0.3814 ) }
    dend_51 { pt3dadd( 408.743, 559.715, 47.9251, 0.4322 ) }
    dend_51 { pt3dadd( 408.066, 560.147, 48.5887, 0.4322 ) }
    dend_51 { pt3dadd( 407.353, 560.739, 49.2008, 0.3814 ) }
    dend_51 { pt3dadd( 406.919, 561.275, 49.84, 0.305 ) }
    dend_51 { pt3dadd( 406.28, 562.103, 50.0464, 0.2542 ) }
    dend_51 { pt3dadd( 405.561, 562.941, 50.4515, 0.2288 ) }
    dend_51 { pt3dadd( 404.564, 563.429, 50.1315, 0.2288 ) }
    dend_51 { pt3dadd( 403.947, 564.08, 50.9258, 0.2796 ) }
    dend_51 { pt3dadd( 403.18, 564.467, 50.68, 0.356 ) }
    dend_51 { pt3dadd( 402.21, 564.776, 51.0152, 0.4322 ) }
    dend_51 { pt3dadd( 401.637, 565.198, 52.36, 0.483 ) }
    dend_51 { pt3dadd( 401.886, 565.594, 50.96, 0.5084 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 75/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 336.297, 535.621, 46.9468, 0.483 ) }
    dend_50 { pt3dadd( 336.517, 536.196, 47.3592, 0.5338 ) }
    dend_50 { pt3dadd( 336.68, 537.309, 47.3382, 0.5084 ) }
    dend_50 { pt3dadd( 336.692, 538.443, 47.1646, 0.4576 ) }
    dend_50 { pt3dadd( 336.772, 539.578, 47.4244, 0.4576 ) }
    dend_50 { pt3dadd( 337.132, 540.63, 47.6, 0.4576 ) }
    dend_50 { pt3dadd( 337.77, 541.581, 47.6, 0.5084 ) }
    dend_50 { pt3dadd( 338.383, 542.544, 47.5997, 0.5084 ) }
    dend_50 { pt3dadd( 339.012, 543.495, 47.5983, 0.5338 ) }
    dend_50 { pt3dadd( 339.744, 544.373, 47.5922, 0.5338 ) }
    dend_50 { pt3dadd( 340.407, 545.299, 47.5602, 0.5084 ) }
    dend_50 { pt3dadd( 340.909, 546.318, 47.3511, 0.4576 ) }
    dend_50 { pt3dadd( 341.218, 547.375, 46.7174, 0.4322 ) }
    dend_50 { pt3dadd( 341.468, 548.42, 46.7348, 0.4068 ) }
    dend_50 { pt3dadd( 341.73, 549.494, 47.0044, 0.4068 ) }
    dend_50 { pt3dadd( 341.902, 550.617, 46.7015, 0.3304 ) }
    dend_50 { pt3dadd( 341.901, 551.752, 46.6852, 0.3304 ) }
    dend_50 { pt3dadd( 342.145, 552.84, 46.6603, 0.356 ) }
    dend_50 { pt3dadd( 342.714, 553.805, 47.0207, 0.4576 ) }
    dend_50 { pt3dadd( 343.238, 554.784, 46.7426, 0.483 ) }
    dend_50 { pt3dadd( 343.888, 555.706, 46.4584, 0.4576 ) }
    dend_50 { pt3dadd( 344.677, 556.529, 46.2812, 0.3814 ) }
    dend_50 { pt3dadd( 345.464, 557.255, 45.402, 0.3304 ) }
    dend_50 { pt3dadd( 345.74, 558.047, 43.6674, 0.3304 ) }
    dend_50 { pt3dadd( 346.35, 558.913, 43.517, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_50 { pt3dadd( 347.245, 559.578, 44.0398, 0.4576 ) }
    dend_50 { pt3dadd( 348.178, 560.234, 44.0286, 0.483 ) }
    dend_50 { pt3dadd( 348.965, 561.003, 43.3227, 0.5084 ) }
    dend_50 { pt3dadd( 349.675, 561.887, 43.0447, 0.483 ) }
    dend_50 { pt3dadd( 350.362, 562.773, 42.5029, 0.5338 ) }
    dend_50 { pt3dadd( 350.739, 563.827, 42.0297, 0.5084 ) }
    dend_50 { pt3dadd( 350.364, 564.885, 41.9546, 0.5084 ) }
    dend_50 { pt3dadd( 349.522, 565.646, 41.7315, 0.4322 ) }
    dend_50 { pt3dadd( 349.137, 566.619, 40.6484, 0.4576 ) }
    dend_50 { pt3dadd( 349.367, 567.676, 39.7592, 0.5084 ) }
    dend_50 { pt3dadd( 349.216, 568.804, 39.5486, 0.5848 ) }
    dend_50 { pt3dadd( 349.326, 569.884, 38.7103, 0.6102 ) }
    dend_50 { pt3dadd( 349.8, 570.849, 37.8291, 0.5848 ) }
    dend_50 { pt3dadd( 349.81, 571.979, 37.5105, 0.5338 ) }
    dend_50 { pt3dadd( 349.533, 573.084, 37.4564, 0.4576 ) }
    dend_50 { pt3dadd( 349.576, 574.217, 37.1832, 0.4322 ) }
    dend_50 { pt3dadd( 349.843, 575.288, 36.4826, 0.4322 ) }
    dend_50 { pt3dadd( 350.093, 576.401, 36.3252, 0.4322 ) }
    dend_50 { pt3dadd( 350.458, 577.476, 36.0366, 0.3814 ) }
    dend_50 { pt3dadd( 350.741, 578.525, 35.3592, 0.356 ) }
    dend_50 { pt3dadd( 350.439, 579.619, 35.28, 0.3814 ) }
    dend_50 { pt3dadd( 350.018, 580.666, 35.28, 0.4576 ) }
    dend_50 { pt3dadd( 350.15, 581.79, 35.28, 0.5084 ) }
    dend_50 { pt3dadd( 350.384, 582.91, 35.28, 0.5338 ) }
    dend_50 { pt3dadd( 350.63, 584.028, 35.2797, 0.5338 ) }
    dend_50 { pt3dadd( 351.063, 585.081, 35.2778, 0.5338 ) }
    dend_50 { pt3dadd( 351.515, 586.132, 35.2674, 0.5338 ) }
    dend_50 { pt3dadd( 351.667, 587.252, 35.1921, 0.5084 ) }
    dend_50 { pt3dadd( 351.426, 588.338, 34.7245, 0.5338 ) }
    dend_50 { pt3dadd( 351.184, 589.444, 34.372, 0.5592 ) }
    dend_50 { pt3dadd( 350.932, 590.541, 34.7368, 0.6356 ) }
    dend_50 { pt3dadd( 350.881, 591.653, 34.377, 0.6356 ) }
    dend_50 { pt3dadd( 350.965, 592.788, 34.1603, 0.6864 ) }
    dend_50 { pt3dadd( 351.336, 593.86, 34.0446, 0.7118 ) }
    dend_50 { pt3dadd( 351.86, 594.85, 33.5317, 0.7626 ) }
    dend_50 { pt3dadd( 352.535, 595.754, 33.1086, 0.7118 ) }
    dend_50 { pt3dadd( 353.278, 596.621, 33.04, 0.6356 ) }
    dend_50 { pt3dadd( 353.828, 597.618, 33.04, 0.5084 ) }
    dend_50 { pt3dadd( 354.042, 598.733, 33.04, 0.4322 ) }
    dend_50 { pt3dadd( 354.073, 599.875, 33.04, 0.4068 ) }
    dend_50 { pt3dadd( 354.107, 601.019, 33.0397, 0.4576 ) }
    dend_50 { pt3dadd( 354.334, 602.136, 33.0389, 0.5338 ) }
    dend_50 { pt3dadd( 354.59, 603.251, 33.0322, 0.5592 ) }
    dend_50 { pt3dadd( 354.983, 604.324, 32.9938, 0.5592 ) }
    dend_50 { pt3dadd( 355.553, 605.31, 32.8174, 0.483 ) }
    dend_50 { pt3dadd( 355.861, 606.365, 32.1314, 0.4068 ) }
    dend_50 { pt3dadd( 355.888, 607.498, 31.9438, 0.3304 ) }
    dend_50 { pt3dadd( 355.839, 608.64, 31.9847, 0.356 ) }
    dend_50 { pt3dadd( 355.577, 609.738, 32.3635, 0.4322 ) }
    dend_50 { pt3dadd( 355.427, 610.847, 32.9347, 0.5084 ) }
    dend_50 { pt3dadd( 355.254, 611.974, 32.8698, 0.5338 ) }
    dend_50 { pt3dadd( 354.894, 613.023, 32.2291, 0.5338 ) }
    dend_50 { pt3dadd( 354.344, 614.018, 31.9906, 0.5338 ) }
    dend_50 { pt3dadd( 353.79, 615.014, 32.1647, 0.5084 ) }
    dend_50 { pt3dadd( 353.382, 616.041, 32.8756, 0.483 ) }
    dend_50 { pt3dadd( 352.709, 616.956, 33.035, 0.483 ) }
    dend_50 { pt3dadd( 351.952, 617.814, 33.0526, 0.5338 ) }
    dend_50 { pt3dadd( 351.462, 618.842, 33.1159, 0.6356 ) }
    dend_50 { pt3dadd( 351.71, 619.931, 33.5507, 0.6864 ) }
    dend_50 { pt3dadd( 352.031, 621.004, 34.12, 0.7118 ) }
    dend_50 { pt3dadd( 352.134, 622.141, 34.071, 0.661 ) }
    dend_50 { pt3dadd( 351.731, 623.194, 33.6081, 0.661 ) }
    dend_50 { pt3dadd( 351.138, 624.148, 33.0772, 0.6102 ) }
    dend_50 { pt3dadd( 350.717, 625.185, 33.0512, 0.5848 ) }
    dend_50 { pt3dadd( 350.003, 626.367, 33.2408, 0.6356 ) }
    dend_50 { pt3dadd( 349.501, 627.255, 33.1937, 0.6864 ) }
    dend_50 { pt3dadd( 349.148, 628.027, 32.9174, 0.6356 ) }
    dend_50 { pt3dadd( 348.716, 629.008, 32.86, 0.5338 ) }
    dend_50 { pt3dadd( 347.725, 629.364, 33.4085, 0.4576 ) }
    dend_50 { pt3dadd( 347.102, 629.96, 33.8629, 0.5084 ) }
    dend_50 { pt3dadd( 346.059, 630.192, 33.4538, 0.5338 ) }
    dend_50 { pt3dadd( 345.292, 630.662, 32.48, 0.5592 ) }
    dend_50 { pt3dadd( 344.312, 630.927, 33.3589, 0.5084 ) }
    dend_50 { pt3dadd( 343.557, 631.258, 34.454, 0.5084 ) }
    dend_50 { pt3dadd( 342.768, 631.488, 34.5181, 0.5084 ) }
    dend_50 { pt3dadd( 341.762, 631.831, 34.5251, 0.5592 ) }
    dend_50 { pt3dadd( 340.768, 631.812, 34.5587, 0.5848 ) }
    dend_50 { pt3dadd( 339.754, 631.819, 34.8754, 0.5848 ) }
    dend_50 { pt3dadd( 338.694, 631.602, 35.5505, 0.5338 ) }
    dend_50 { pt3dadd( 337.933, 631.716, 34.788, 0.483 ) }
    dend_50 { pt3dadd( 336.897, 631.808, 35.3623, 0.483 ) }
    dend_50 { pt3dadd( 335.912, 631.488, 35.0182, 0.5084 ) }
    dend_50 { pt3dadd( 335.132, 631.442, 36.1242, 0.5084 ) }
    dend_50 { pt3dadd( 334.264, 631.894, 35.9327, 0.4576 ) }
    dend_50 { pt3dadd( 333.288, 631.936, 35.532, 0.4068 ) }
    dend_50 { pt3dadd( 332.533, 631.488, 33.9954, 0.356 ) }
    dend_50 { pt3dadd( 331.741, 631.837, 35.2607, 0.3304 ) }
    dend_50 { pt3dadd( 330.765, 632.112, 35.7479, 0.305 ) }
    dend_50 { pt3dadd( 330.13, 632.26, 36.4353, 0.305 ) }
    dend_50 { pt3dadd( 329.304, 632.598, 37.177, 0.3304 ) }
    dend_50 { pt3dadd( 328.568, 633.069, 37.6989, 0.3304 ) }
    dend_50 { pt3dadd( 328.495, 634.005, 37.5645, 0.3304 ) }
    dend_50 { pt3dadd( 328.439, 633.737, 39.6693, 0.2796 ) }
    dend_50 { pt3dadd( 327.593, 634.15, 40.3351, 0.2542 ) }
    dend_50 { pt3dadd( 326.93, 634.208, 41.72, 0.2796 ) }
    dend_50 { pt3dadd( 326.268, 634.847, 41.372, 0.356 ) }
    dend_50 { pt3dadd( 326.013, 635.595, 42.0, 0.4322 ) }
    dend_50 { pt3dadd( 324.953, 635.498, 41.5055, 0.4322 ) }
    dend_50 { pt3dadd( 324.434, 636.412, 41.1653, 0.4068 ) }
    dend_50 { pt3dadd( 323.823, 637.302, 41.9913, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_50 { pt3dadd( 323.075, 637.998, 42.4578, 0.3814 ) }
    dend_50 { pt3dadd( 322.306, 638.678, 42.17, 0.4068 ) }
    dend_50 { pt3dadd( 321.669, 639.233, 41.3974, 0.4322 ) }
    dend_50 { pt3dadd( 320.849, 639.826, 41.1967, 0.483 ) }
    dend_50 { pt3dadd( 319.861, 639.725, 40.6, 0.483 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 5/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 337.021, 531.922, 45.7332, 0.4322 ) }
    dend_48 { pt3dadd( 336.691, 532.105, 45.4992, 0.4576 ) }
    dend_48 { pt3dadd( 336.723, 532.97, 45.6128, 0.4322 ) }
    dend_48 { pt3dadd( 337.248, 533.104, 44.3568, 0.356 ) }
    dend_48 { pt3dadd( 336.933, 533.819, 43.6724, 0.356 ) }
    dend_48 { pt3dadd( 337.052, 534.631, 44.8736, 0.356 ) }
    dend_48 { pt3dadd( 337.377, 535.662, 45.3426, 0.4322 ) }
    dend_48 { pt3dadd( 337.855, 536.465, 45.92, 0.5084 ) }
    dend_48 { pt3dadd( 337.723, 537.192, 44.3988, 0.5592 ) }
    dend_48 { pt3dadd( 337.727, 537.909, 43.12, 0.5338 ) }
    dend_48 { pt3dadd( 338.242, 538.714, 42.4253, 0.4576 ) }
    dend_48 { pt3dadd( 339.219, 538.829, 42.5589, 0.4576 ) }
    dend_48 { pt3dadd( 340.229, 539.14, 42.5029, 0.4576 ) }
    dend_48 { pt3dadd( 340.339, 540.038, 42.9254, 0.483 ) }
    dend_48 { pt3dadd( 340.441, 540.13, 40.8694, 0.4322 ) }
    dend_48 { pt3dadd( 340.826, 541.099, 40.04, 0.4322 ) }
    dend_48 { pt3dadd( 341.483, 541.722, 40.2256, 0.4068 ) }
    dend_48 { pt3dadd( 342.134, 542.409, 40.6011, 0.4322 ) }
    dend_48 { pt3dadd( 342.641, 542.588, 39.2389, 0.5084 ) }
    dend_48 { pt3dadd( 342.741, 543.63, 38.974, 0.5592 ) }
    dend_48 { pt3dadd( 342.918, 544.434, 38.1147, 0.5338 ) }
    dend_48 { pt3dadd( 343.283, 544.789, 36.2774, 0.483 ) }
    dend_48 { pt3dadd( 343.848, 545.401, 37.7695, 0.5338 ) }
    dend_48 { pt3dadd( 344.108, 546.155, 36.7489, 0.5848 ) }
    dend_48 { pt3dadd( 344.365, 547.197, 36.9289, 0.6102 ) }
    dend_48 { pt3dadd( 344.934, 548.041, 36.8438, 0.5084 ) }
    dend_48 { pt3dadd( 345.327, 548.654, 35.2691, 0.4576 ) }
    dend_48 { pt3dadd( 345.516, 549.466, 34.7418, 0.483 ) }
    dend_48 { pt3dadd( 345.701, 550.035, 32.8502, 0.5592 ) }
    dend_48 { pt3dadd( 346.434, 550.663, 32.5623, 0.6102 ) }
    dend_48 { pt3dadd( 346.86, 551.25, 33.8489, 0.5848 ) }
    dend_48 { pt3dadd( 346.904, 552.203, 32.7908, 0.5338 ) }
    dend_48 { pt3dadd( 347.117, 552.945, 31.3323, 0.483 ) }
    dend_48 { pt3dadd( 347.241, 553.888, 31.6403, 0.4576 ) }
    dend_48 { pt3dadd( 347.8, 554.729, 32.8605, 0.4576 ) }
    dend_48 { pt3dadd( 347.661, 555.516, 33.3169, 0.4322 ) }
    dend_48 { pt3dadd( 347.427, 556.293, 31.7923, 0.3814 ) }
    dend_48 { pt3dadd( 347.234, 557.233, 31.08, 0.3304 ) }
    dend_48 { pt3dadd( 346.986, 558.137, 31.0828, 0.2796 ) }
    dend_48 { pt3dadd( 346.86, 558.581, 29.6906, 0.2542 ) }
    dend_48 { pt3dadd( 346.964, 559.704, 29.3502, 0.2542 ) }
    dend_48 { pt3dadd( 346.751, 560.487, 27.9356, 0.2796 ) }
    dend_48 { pt3dadd( 347.203, 561.09, 28.7417, 0.3304 ) }
    dend_48 { pt3dadd( 346.749, 561.665, 28.5317, 0.3304 ) }
    dend_48 { pt3dadd( 346.517, 562.492, 27.2602, 0.356 ) }
    dend_48 { pt3dadd( 346.446, 563.383, 28.8778, 0.356 ) }
    dend_48 { pt3dadd( 346.218, 564.227, 28.1607, 0.4322 ) }
    dend_48 { pt3dadd( 346.059, 565.23, 27.7852, 0.5084 ) }
    dend_48 { pt3dadd( 345.794, 566.163, 28.7451, 0.6102 ) }
    dend_48 { pt3dadd( 345.487, 566.964, 27.9588, 0.6102 ) }
    dend_48 { pt3dadd( 344.857, 567.537, 27.552, 0.5338 ) }
    dend_48 { pt3dadd( 344.572, 567.808, 25.8521, 0.4068 ) }
    dend_48 { pt3dadd( 344.718, 568.535, 24.6249, 0.3304 ) }
    dend_48 { pt3dadd( 344.748, 569.534, 24.9413, 0.305 ) }
    dend_48 { pt3dadd( 344.802, 570.346, 26.5566, 0.2796 ) }
    dend_48 { pt3dadd( 344.914, 570.89, 28.2156, 0.2542 ) }
    dend_48 { pt3dadd( 344.129, 571.428, 27.1298, 0.2542 ) }
    dend_48 { pt3dadd( 343.615, 571.793, 28.2582, 0.3304 ) }
    dend_48 { pt3dadd( 343.01, 572.239, 26.9811, 0.4068 ) }
    dend_48 { pt3dadd( 342.52, 572.761, 28.2058, 0.4576 ) }
    dend_48 { pt3dadd( 342.627, 573.589, 29.7461, 0.4576 ) }
    dend_48 { pt3dadd( 342.261, 574.494, 29.2186, 0.483 ) }
    dend_48 { pt3dadd( 341.941, 575.119, 27.3809, 0.5084 ) }
    dend_48 { pt3dadd( 342.055, 575.994, 25.7928, 0.5084 ) }
    dend_48 { pt3dadd( 341.81, 576.658, 26.9478, 0.483 ) }
    dend_48 { pt3dadd( 341.146, 577.351, 26.6602, 0.4576 ) }
    dend_48 { pt3dadd( 340.967, 578.036, 25.5396, 0.483 ) }
    dend_48 { pt3dadd( 340.808, 578.969, 26.7039, 0.5338 ) }
    dend_48 { pt3dadd( 340.869, 579.983, 26.1794, 0.6102 ) }
    dend_48 { pt3dadd( 340.856, 580.97, 26.6207, 0.6102 ) }
    dend_48 { pt3dadd( 341.196, 581.619, 26.0543, 0.5592 ) }
    dend_48 { pt3dadd( 341.351, 582.406, 24.7747, 0.4576 ) }
    dend_48 { pt3dadd( 341.597, 583.347, 24.7145, 0.4068 ) }
    dend_48 { pt3dadd( 341.741, 584.148, 25.2941, 0.3814 ) }
    dend_48 { pt3dadd( 342.163, 584.983, 24.6669, 0.3814 ) }
    dend_48 { pt3dadd( 342.759, 585.806, 24.7173, 0.4068 ) }
    dend_48 { pt3dadd( 343.58, 586.531, 24.8525, 0.4322 ) }
    dend_48 { pt3dadd( 344.128, 586.632, 23.2305, 0.4576 ) }
    dend_48 { pt3dadd( 344.412, 587.101, 21.6157, 0.4322 ) }
    dend_48 { pt3dadd( 345.102, 587.747, 20.72, 0.3814 ) }
    dend_48 { pt3dadd( 345.463, 588.301, 21.1473, 0.305 ) }
    dend_48 { pt3dadd( 345.432, 589.273, 22.071, 0.2796 ) }
    dend_48 { pt3dadd( 345.686, 590.295, 22.68, 0.2796 ) }
    dend_48 { pt3dadd( 345.828, 591.033, 24.2046, 0.305 ) }
    dend_48 { pt3dadd( 346.296, 591.441, 24.5039, 0.305 ) }
    dend_48 { pt3dadd( 346.647, 591.671, 22.9936, 0.356 ) }
    dend_48 { pt3dadd( 346.167, 592.266, 21.3483, 0.4068 ) }
    dend_48 { pt3dadd( 345.716, 592.989, 21.6037, 0.4576 ) }
    dend_48 { pt3dadd( 345.373, 593.742, 21.1022, 0.4322 ) }
    dend_48 { pt3dadd( 345.79, 594.671, 20.4039, 0.4068 ) }
    dend_48 { pt3dadd( 346.386, 595.462, 21.1249, 0.3814 ) }
    dend_48 { pt3dadd( 346.594, 596.445, 21.4654, 0.3814 ) }
    dend_48 { pt3dadd( 347.377, 596.983, 20.2625, 0.3814 ) }
    dend_48 { pt3dadd( 348.182, 597.528, 20.4996, 0.356 ) }
    dend_48 { pt3dadd( 348.847, 597.74, 20.7306, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( 349.283, 598.427, 20.239, 0.305 ) }
    dend_48 { pt3dadd( 349.949, 598.758, 20.7808, 0.3304 ) }
    dend_48 { pt3dadd( 350.31, 599.669, 20.2292, 0.4068 ) }
    dend_48 { pt3dadd( 351.095, 600.349, 21.2657, 0.3814 ) }
    dend_48 { pt3dadd( 351.89, 600.716, 20.0077, 0.3814 ) }
    dend_48 { pt3dadd( 352.698, 601.283, 19.7669, 0.3304 ) }
    dend_48 { pt3dadd( 353.44, 601.965, 19.5849, 0.356 ) }
    dend_48 { pt3dadd( 354.275, 602.701, 19.8033, 0.356 ) }
    dend_48 { pt3dadd( 354.871, 603.593, 19.3662, 0.4068 ) }
    dend_48 { pt3dadd( 355.531, 604.344, 19.854, 0.4322 ) }
    dend_48 { pt3dadd( 356.284, 604.674, 19.6482, 0.4322 ) }
    dend_48 { pt3dadd( 356.546, 605.392, 20.5738, 0.4068 ) }
    dend_48 { pt3dadd( 356.584, 605.405, 23.3366, 0.356 ) }
    dend_48 { pt3dadd( 356.181, 605.702, 25.639, 0.3304 ) }
    dend_48 { pt3dadd( 356.014, 606.325, 27.4218, 0.2796 ) }
    dend_48 { pt3dadd( 356.12, 606.868, 29.6604, 0.2542 ) }
    dend_48 { pt3dadd( 356.508, 607.375, 31.6246, 0.2288 ) }
    dend_48 { pt3dadd( 356.901, 608.349, 31.5076, 0.2288 ) }
    dend_48 { pt3dadd( 357.249, 609.402, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 357.385, 610.53, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 357.577, 611.649, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 357.621, 612.791, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 358.672, 613.0, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 359.198, 613.963, 31.64, 0.2288 ) }
    dend_48 { pt3dadd( 359.567, 614.93, 31.5092, 0.2288 ) }
    dend_48 { pt3dadd( 360.245, 615.78, 31.36, 0.2288 ) }
    dend_48 { pt3dadd( 361.019, 616.159, 30.6023, 0.2288 ) }
    dend_48 { pt3dadd( 361.55, 616.466, 28.9279, 0.2796 ) }
    dend_48 { pt3dadd( 362.344, 616.942, 29.12, 0.3304 ) }
    dend_48 { pt3dadd( 362.762, 617.882, 29.867, 0.4068 ) }
    dend_48 { pt3dadd( 363.037, 618.619, 28.28, 0.4322 ) }
    dend_48 { pt3dadd( 363.996, 619.181, 28.1028, 0.5084 ) }
    dend_48 { pt3dadd( 364.76, 619.836, 28.3374, 0.5592 ) }
    dend_48 { pt3dadd( 365.408, 620.589, 28.4852, 0.6356 ) }
    dend_48 { pt3dadd( 366.108, 621.345, 28.4259, 0.6356 ) }
    dend_48 { pt3dadd( 366.246, 621.421, 26.7604, 0.661 ) }
    dend_48 { pt3dadd( 366.523, 622.26, 26.2058, 0.6356 ) }
    dend_48 { pt3dadd( 366.894, 623.319, 25.9406, 0.661 ) }
    dend_48 { pt3dadd( 365.957, 623.086, 24.4037, 0.6356 ) }
    dend_48 { pt3dadd( 364.888, 622.859, 23.6639, 0.5848 ) }
    dend_48 { pt3dadd( 363.824, 622.679, 23.672, 0.5592 ) }
    dend_48 { pt3dadd( 363.036, 622.719, 21.8025, 0.5338 ) }
    dend_48 { pt3dadd( 362.239, 623.137, 22.1838, 0.5338 ) }
    dend_48 { pt3dadd( 362.178, 623.903, 23.5043, 0.5592 ) }
    dend_48 { pt3dadd( 361.512, 624.624, 22.7811, 0.5338 ) }
    dend_48 { pt3dadd( 360.58, 624.187, 23.1692, 0.5338 ) }
    dend_48 { pt3dadd( 359.681, 623.823, 23.3332, 0.483 ) }
    dend_48 { pt3dadd( 358.627, 623.823, 22.7545, 0.5338 ) }
    dend_48 { pt3dadd( 358.304, 624.395, 21.56, 0.5338 ) }
    dend_48 { pt3dadd( 357.244, 624.284, 21.0, 0.5848 ) }
    dend_48 { pt3dadd( 356.426, 624.149, 21.4452, 0.5592 ) }
    dend_48 { pt3dadd( 355.783, 624.51, 20.16, 0.5338 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 52/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 337.021, 531.922, 45.7332, 0.4322 ) }
    dend_45 { pt3dadd( 337.582, 531.731, 44.52, 0.5084 ) }
    dend_45 { pt3dadd( 338.59, 531.32, 44.0692, 0.4068 ) }
    dend_45 { pt3dadd( 339.677, 531.057, 43.96, 0.4322 ) }
    dend_45 { pt3dadd( 340.684, 531.398, 43.8805, 0.5084 ) }
    dend_45 { pt3dadd( 341.602, 531.719, 43.265, 0.6102 ) }
    dend_45 { pt3dadd( 342.682, 531.599, 43.3527, 0.6356 ) }
    dend_45 { pt3dadd( 343.754, 531.507, 42.9892, 0.6102 ) }
    dend_45 { pt3dadd( 344.399, 531.305, 44.7916, 0.5338 ) }
    dend_45 { pt3dadd( 345.258, 531.374, 43.9334, 0.5084 ) }
    dend_45 { pt3dadd( 345.937, 531.642, 44.24, 0.483 ) }
    dend_45 { pt3dadd( 346.616, 532.037, 44.3626, 0.483 ) }
    dend_45 { pt3dadd( 346.906, 531.379, 43.0371, 0.4322 ) }
    dend_45 { pt3dadd( 347.696, 531.045, 41.7987, 0.4576 ) }
    dend_45 { pt3dadd( 348.781, 530.889, 41.606, 0.5084 ) }
    dend_45 { pt3dadd( 349.748, 530.389, 42.0, 0.5848 ) }
    dend_45 { pt3dadd( 350.42, 529.995, 43.0091, 0.5592 ) }
    dend_45 { pt3dadd( 351.099, 529.36, 42.1534, 0.5084 ) }
    dend_45 { pt3dadd( 352.122, 529.329, 42.0, 0.4576 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 317.7, 535.712, 41.6366, 0.7626 ) }
    dend_40 { pt3dadd( 317.501, 536.305, 41.5643, 0.661 ) }
    dend_40 { pt3dadd( 318.441, 536.456, 40.6, 0.6102 ) }
    dend_40 { pt3dadd( 318.859, 536.955, 38.9612, 0.5592 ) }
    dend_40 { pt3dadd( 319.426, 536.838, 36.96, 0.5084 ) }
    dend_40 { pt3dadd( 320.342, 536.765, 37.2938, 0.4576 ) }
    dend_40 { pt3dadd( 320.937, 537.19, 38.6165, 0.4068 ) }
    dend_40 { pt3dadd( 321.749, 537.038, 37.2011, 0.4068 ) }
    dend_40 { pt3dadd( 322.755, 537.326, 36.68, 0.483 ) }
    dend_40 { pt3dadd( 323.572, 537.806, 36.0298, 0.5592 ) }
    dend_40 { pt3dadd( 324.309, 537.512, 34.4926, 0.6102 ) }
    dend_40 { pt3dadd( 325.123, 536.898, 34.734, 0.6356 ) }
    dend_40 { pt3dadd( 325.664, 536.593, 36.2505, 0.6864 ) }
    dend_40 { pt3dadd( 326.526, 536.765, 36.8998, 0.7626 ) }
    dend_40 { pt3dadd( 327.475, 536.645, 35.9621, 0.8136 ) }
    dend_40 { pt3dadd( 328.317, 536.536, 35.4864, 0.839 ) }
    dend_40 { pt3dadd( 328.638, 536.75, 33.4071, 0.8136 ) }
    dend_40 { pt3dadd( 329.573, 537.005, 33.1198, 0.7626 ) }
    dend_40 { pt3dadd( 330.035, 537.566, 31.6996, 0.7118 ) }
    dend_40 { pt3dadd( 330.421, 538.482, 32.1359, 0.661 ) }
    dend_40 { pt3dadd( 331.213, 538.945, 32.8454, 0.6102 ) }
    dend_40 { pt3dadd( 332.112, 539.396, 32.7054, 0.5084 ) }
    dend_40 { pt3dadd( 332.903, 539.354, 31.0699, 0.4576 ) }
    dend_40 { pt3dadd( 333.238, 539.776, 29.1298, 0.4576 ) }
    dend_40 { pt3dadd( 333.942, 539.974, 28.4374, 0.5338 ) }
    dend_40 { pt3dadd( 334.569, 539.708, 28.0, 0.5592 ) }
    dend_40 { pt3dadd( 335.654, 539.777, 27.3652, 0.5592 ) }
    dend_40 { pt3dadd( 336.588, 539.478, 26.32, 0.5338 ) }
    dend_40 { pt3dadd( 337.538, 539.638, 26.9886, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 337.932, 540.479, 26.3511, 0.5592 ) }
    dend_40 { pt3dadd( 338.642, 541.088, 27.1289, 0.5338 ) }
    dend_40 { pt3dadd( 339.513, 541.634, 27.5366, 0.483 ) }
    dend_40 { pt3dadd( 340.191, 542.027, 27.0102, 0.4322 ) }
    dend_40 { pt3dadd( 341.11, 541.684, 26.4225, 0.4322 ) }
    dend_40 { pt3dadd( 341.724, 541.495, 25.4528, 0.3814 ) }
    dend_40 { pt3dadd( 342.359, 542.138, 25.0379, 0.4068 ) }
    dend_40 { pt3dadd( 343.262, 542.091, 24.7806, 0.4068 ) }
    dend_40 { pt3dadd( 344.255, 541.824, 23.9865, 0.5084 ) }
    dend_40 { pt3dadd( 344.943, 542.246, 23.5346, 0.5592 ) }
    dend_40 { pt3dadd( 345.373, 542.897, 24.0114, 0.6102 ) }
    dend_40 { pt3dadd( 346.078, 543.503, 22.96, 0.5848 ) }
    dend_40 { pt3dadd( 346.631, 543.877, 24.3062, 0.5848 ) }
    dend_40 { pt3dadd( 346.87, 544.8, 24.0173, 0.5848 ) }
    dend_40 { pt3dadd( 347.367, 545.314, 22.6724, 0.6102 ) }
    dend_40 { pt3dadd( 348.123, 546.018, 21.8215, 0.5592 ) }
    dend_40 { pt3dadd( 348.866, 546.615, 22.2068, 0.483 ) }
    dend_40 { pt3dadd( 349.024, 547.262, 23.6852, 0.4068 ) }
    dend_40 { pt3dadd( 349.726, 547.914, 23.338, 0.3814 ) }
    dend_40 { pt3dadd( 350.284, 548.867, 22.96, 0.4068 ) }
    dend_40 { pt3dadd( 351.066, 549.448, 22.68, 0.4068 ) }
    dend_40 { pt3dadd( 351.364, 550.035, 21.6292, 0.3814 ) }
    dend_40 { pt3dadd( 352.008, 549.494, 21.3651, 0.3304 ) }
    dend_40 { pt3dadd( 352.46, 550.126, 20.3874, 0.3304 ) }
    dend_40 { pt3dadd( 352.989, 550.675, 21.5032, 0.3814 ) }
    dend_40 { pt3dadd( 353.787, 550.846, 21.8369, 0.4322 ) }
    dend_40 { pt3dadd( 354.856, 551.193, 22.1183, 0.4576 ) }
    dend_40 { pt3dadd( 355.713, 551.795, 21.4816, 0.483 ) }
    dend_40 { pt3dadd( 356.688, 552.074, 20.8648, 0.483 ) }
    dend_40 { pt3dadd( 357.586, 552.562, 20.9983, 0.483 ) }
    dend_40 { pt3dadd( 358.379, 553.15, 19.9424, 0.4068 ) }
    dend_40 { pt3dadd( 359.447, 553.346, 20.1662, 0.3814 ) }
    dend_40 { pt3dadd( 360.532, 553.433, 19.906, 0.356 ) }
    dend_40 { pt3dadd( 361.473, 553.707, 19.8853, 0.3814 ) }
    dend_40 { pt3dadd( 362.12, 554.274, 20.5246, 0.356 ) }
    dend_40 { pt3dadd( 363.141, 554.453, 20.5859, 0.305 ) }
    dend_40 { pt3dadd( 364.123, 554.626, 20.1382, 0.2542 ) }
    dend_40 { pt3dadd( 364.873, 554.76, 19.3466, 0.2796 ) }
    dend_40 { pt3dadd( 365.507, 555.412, 19.32, 0.3304 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 39/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 317.7, 535.712, 41.6366, 0.7626 ) }
    dend_39 { pt3dadd( 317.485, 536.138, 41.8908, 0.4068 ) }
    dend_39 { pt3dadd( 317.162, 537.188, 42.362, 0.4322 ) }
    dend_39 { pt3dadd( 317.377, 538.261, 42.2996, 0.483 ) }
    dend_39 { pt3dadd( 317.931, 539.248, 41.9398, 0.5084 ) }
    dend_39 { pt3dadd( 318.463, 540.235, 41.4988, 0.5592 ) }
    dend_39 { pt3dadd( 319.011, 541.205, 40.9774, 0.5592 ) }
    dend_39 { pt3dadd( 319.682, 542.128, 40.9206, 0.6102 ) }
    dend_39 { pt3dadd( 320.351, 543.043, 41.1636, 0.5848 ) }
    dend_39 { pt3dadd( 320.934, 543.994, 41.7696, 0.6356 ) }
    dend_39 { pt3dadd( 321.444, 544.971, 42.4995, 0.6102 ) }
    dend_39 { pt3dadd( 321.952, 545.964, 43.0945, 0.661 ) }
    dend_39 { pt3dadd( 322.615, 546.847, 43.7338, 0.661 ) }
    dend_39 { pt3dadd( 323.37, 547.676, 44.1613, 0.6356 ) }
    dend_39 { pt3dadd( 324.039, 548.596, 44.1235, 0.5848 ) }
    dend_39 { pt3dadd( 324.718, 549.474, 43.6078, 0.5084 ) }
    dend_39 { pt3dadd( 325.48, 550.265, 42.8285, 0.5084 ) }
    dend_39 { pt3dadd( 326.049, 551.203, 42.7353, 0.5084 ) }
    dend_39 { pt3dadd( 326.476, 552.258, 42.9402, 0.5592 ) }
    dend_39 { pt3dadd( 327.081, 553.185, 42.518, 0.5848 ) }
    dend_39 { pt3dadd( 327.74, 554.097, 42.1341, 0.5848 ) }
    dend_39 { pt3dadd( 328.426, 555.007, 42.2173, 0.5848 ) }
    dend_39 { pt3dadd( 329.04, 555.921, 42.8733, 0.5592 ) }
    dend_39 { pt3dadd( 329.574, 556.864, 43.7713, 0.5848 ) }
    dend_39 { pt3dadd( 330.144, 557.829, 44.1876, 0.5084 ) }
    dend_39 { pt3dadd( 330.633, 558.859, 44.24, 0.4576 ) }
    dend_39 { pt3dadd( 331.043, 559.926, 44.24, 0.356 ) }
    dend_39 { pt3dadd( 331.489, 560.979, 44.24, 0.3814 ) }
    dend_39 { pt3dadd( 332.131, 561.916, 44.24, 0.4322 ) }
    dend_39 { pt3dadd( 332.775, 562.857, 44.2403, 0.5338 ) }
    dend_39 { pt3dadd( 333.342, 563.851, 44.2425, 0.5848 ) }
    dend_39 { pt3dadd( 333.826, 564.885, 44.2543, 0.5848 ) }
    dend_39 { pt3dadd( 334.428, 565.851, 44.3145, 0.5338 ) }
    dend_39 { pt3dadd( 335.212, 566.666, 44.6242, 0.4576 ) }
    dend_39 { pt3dadd( 335.965, 567.502, 45.08, 0.4322 ) }
    dend_39 { pt3dadd( 336.556, 568.449, 44.7983, 0.4322 ) }
    dend_39 { pt3dadd( 336.993, 569.49, 44.4044, 0.483 ) }
    dend_39 { pt3dadd( 337.42, 570.539, 44.62, 0.483 ) }
    dend_39 { pt3dadd( 337.736, 571.632, 44.7348, 0.483 ) }
    dend_39 { pt3dadd( 338.416, 572.497, 45.0962, 0.4576 ) }
    dend_39 { pt3dadd( 339.02, 573.441, 44.8216, 0.483 ) }
    dend_39 { pt3dadd( 339.595, 574.409, 44.3296, 0.483 ) }
    dend_39 { pt3dadd( 340.188, 575.384, 44.2621, 0.4576 ) }
    dend_39 { pt3dadd( 341.098, 576.052, 44.4074, 0.4068 ) }
    dend_39 { pt3dadd( 341.85, 576.852, 45.1265, 0.4322 ) }
    dend_39 { pt3dadd( 342.129, 577.94, 45.3446, 0.5338 ) }
    dend_39 { pt3dadd( 342.012, 579.072, 45.3474, 0.6356 ) }
    dend_39 { pt3dadd( 342.16, 580.203, 45.2581, 0.661 ) }
    dend_39 { pt3dadd( 342.247, 581.222, 44.3139, 0.6102 ) }
    dend_39 { pt3dadd( 342.171, 582.163, 45.4384, 0.5592 ) }
    dend_39 { pt3dadd( 342.789, 582.838, 45.3603, 0.5084 ) }
    dend_39 { pt3dadd( 343.443, 582.987, 44.8624, 0.4576 ) }
    dend_39 { pt3dadd( 344.054, 583.773, 44.5416, 0.4068 ) }
    dend_39 { pt3dadd( 344.561, 584.789, 44.6883, 0.4322 ) }
    dend_39 { pt3dadd( 345.057, 585.649, 44.3388, 0.5084 ) }
    dend_39 { pt3dadd( 345.812, 586.466, 44.1773, 0.5848 ) }
    dend_39 { pt3dadd( 346.378, 587.101, 42.8862, 0.5848 ) }
    dend_39 { pt3dadd( 347.328, 587.468, 42.5037, 0.5084 ) }
    dend_39 { pt3dadd( 348.261, 587.466, 43.3804, 0.4576 ) }
    dend_39 { pt3dadd( 348.696, 588.118, 41.8953, 0.4322 ) }
    dend_39 { pt3dadd( 349.079, 588.986, 41.7505, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_39 { pt3dadd( 349.764, 589.675, 42.28, 0.483 ) }
    dend_39 { pt3dadd( 350.184, 590.426, 42.6594, 0.4576 ) }
    dend_39 { pt3dadd( 350.45, 591.482, 43.4888, 0.4068 ) }
    dend_39 { pt3dadd( 350.749, 592.482, 43.6582, 0.356 ) }
    dend_39 { pt3dadd( 350.696, 593.069, 41.5604, 0.3304 ) }
    dend_39 { pt3dadd( 350.851, 593.393, 40.04, 0.3304 ) }
    dend_39 { pt3dadd( 351.538, 593.368, 39.8535, 0.3814 ) }
    dend_39 { pt3dadd( 351.936, 594.339, 40.4617, 0.4576 ) }
    dend_39 { pt3dadd( 352.695, 594.979, 40.2774, 0.5084 ) }
    dend_39 { pt3dadd( 353.203, 595.66, 39.76, 0.5338 ) }
    dend_39 { pt3dadd( 353.93, 596.305, 38.9388, 0.5592 ) }
    dend_39 { pt3dadd( 354.481, 596.997, 38.2906, 0.5592 ) }
    dend_39 { pt3dadd( 355.002, 597.868, 38.6585, 0.5592 ) }
    dend_39 { pt3dadd( 355.547, 598.427, 37.7639, 0.5084 ) }
    dend_39 { pt3dadd( 356.228, 598.276, 36.2233, 0.483 ) }
    dend_39 { pt3dadd( 357.148, 598.41, 36.1749, 0.4576 ) }
    dend_39 { pt3dadd( 357.895, 599.032, 35.1126, 0.4322 ) }
    dend_39 { pt3dadd( 358.668, 599.367, 34.8578, 0.4068 ) }
    dend_39 { pt3dadd( 359.106, 600.075, 33.6258, 0.3814 ) }
    dend_39 { pt3dadd( 359.573, 600.718, 33.3505, 0.4068 ) }
    dend_39 { pt3dadd( 360.529, 601.236, 33.4964, 0.4322 ) }
    dend_39 { pt3dadd( 361.59, 601.463, 33.6, 0.4322 ) }
    dend_39 { pt3dadd( 362.497, 601.897, 32.7603, 0.4068 ) }
    dend_39 { pt3dadd( 363.128, 602.657, 33.3032, 0.4068 ) }
    dend_39 { pt3dadd( 362.999, 603.469, 32.3176, 0.4576 ) }
    dend_39 { pt3dadd( 363.832, 604.014, 31.8161, 0.5084 ) }
    dend_39 { pt3dadd( 364.69, 604.492, 30.9501, 0.5084 ) }
    dend_39 { pt3dadd( 365.516, 605.062, 30.2462, 0.5084 ) }
    dend_39 { pt3dadd( 366.581, 605.176, 31.087, 0.5084 ) }
    dend_39 { pt3dadd( 367.413, 605.635, 31.0862, 0.5592 ) }
    dend_39 { pt3dadd( 368.039, 606.207, 31.1105, 0.5592 ) }
    dend_39 { pt3dadd( 368.767, 606.969, 30.7591, 0.5338 ) }
    dend_39 { pt3dadd( 369.44, 607.584, 30.7112, 0.4322 ) }
    dend_39 { pt3dadd( 370.242, 608.011, 29.9838, 0.356 ) }
    dend_39 { pt3dadd( 370.79, 608.566, 30.2117, 0.305 ) }
    dend_39 { pt3dadd( 371.425, 609.295, 30.2254, 0.3304 ) }
    dend_39 { pt3dadd( 372.447, 609.294, 30.4732, 0.356 ) }
    dend_39 { pt3dadd( 373.45, 609.681, 30.7793, 0.3814 ) }
    dend_39 { pt3dadd( 374.28, 610.427, 30.6312, 0.3814 ) }
    dend_39 { pt3dadd( 374.838, 610.221, 29.3098, 0.3814 ) }
    dend_39 { pt3dadd( 375.767, 610.592, 29.0581, 0.3814 ) }
    dend_39 { pt3dadd( 376.375, 611.481, 29.4036, 0.356 ) }
    dend_39 { pt3dadd( 376.429, 612.606, 29.3801, 0.305 ) }
    dend_39 { pt3dadd( 376.489, 613.742, 29.153, 0.2542 ) }
    dend_39 { pt3dadd( 376.597, 614.825, 28.5737, 0.2288 ) }
    dend_39 { pt3dadd( 377.061, 615.582, 27.72, 0.2542 ) }
    dend_39 { pt3dadd( 377.073, 616.708, 27.9964, 0.3304 ) }
    dend_39 { pt3dadd( 377.162, 617.266, 26.6028, 0.4576 ) }
    dend_39 { pt3dadd( 376.597, 617.94, 26.2878, 0.5592 ) }
    dend_39 { pt3dadd( 376.198, 618.779, 25.4299, 0.6102 ) }
    dend_39 { pt3dadd( 376.396, 619.669, 25.027, 0.5848 ) }
    dend_39 { pt3dadd( 376.833, 620.578, 24.7178, 0.5592 ) }
    dend_39 { pt3dadd( 377.326, 621.446, 24.6644, 0.5338 ) }
    dend_39 { pt3dadd( 378.101, 622.21, 24.7173, 0.5338 ) }
    dend_39 { pt3dadd( 378.205, 623.226, 24.8041, 0.5848 ) }
    dend_39 { pt3dadd( 378.205, 624.333, 24.1413, 0.5848 ) }
    dend_39 { pt3dadd( 378.549, 625.297, 23.8011, 0.5848 ) }
    dend_39 { pt3dadd( 378.777, 626.041, 21.8641, 0.483 ) }
    dend_39 { pt3dadd( 378.967, 626.812, 22.4882, 0.4576 ) }
    dend_39 { pt3dadd( 379.641, 627.484, 22.9485, 0.4576 ) }
    dend_39 { pt3dadd( 379.956, 628.364, 23.4573, 0.5084 ) }
    dend_39 { pt3dadd( 380.495, 629.096, 22.5823, 0.5338 ) }
    dend_39 { pt3dadd( 380.976, 629.85, 21.5278, 0.5084 ) }
    dend_39 { pt3dadd( 381.067, 630.899, 21.551, 0.483 ) }
    dend_39 { pt3dadd( 380.973, 632.032, 21.5421, 0.4576 ) }
    dend_39 { pt3dadd( 380.946, 633.044, 21.1042, 0.4322 ) }
    dend_39 { pt3dadd( 380.507, 633.88, 21.84, 0.4068 ) }
    dend_39 { pt3dadd( 380.498, 635.0, 21.8008, 0.4068 ) }
    dend_39 { pt3dadd( 380.5, 636.047, 21.3077, 0.483 ) }
    dend_39 { pt3dadd( 380.379, 636.861, 22.12, 0.5848 ) }
    dend_39 { pt3dadd( 380.171, 637.96, 22.3978, 0.661 ) }
    dend_39 { pt3dadd( 380.787, 638.747, 23.2392, 0.6356 ) }
    dend_39 { pt3dadd( 381.452, 639.525, 23.4077, 0.5338 ) }
    dend_39 { pt3dadd( 381.038, 640.1, 25.1233, 0.3814 ) }
    dend_39 { pt3dadd( 380.837, 640.761, 27.0595, 0.2796 ) }
    dend_39 { pt3dadd( 381.505, 641.203, 27.0183, 0.2288 ) }
    dend_39 { pt3dadd( 382.191, 641.779, 25.555, 0.2288 ) }
    dend_39 { pt3dadd( 382.324, 642.409, 23.4595, 0.2288 ) }
    dend_39 { pt3dadd( 382.805, 642.756, 24.9606, 0.2542 ) }
    dend_39 { pt3dadd( 382.434, 643.44, 25.0471, 0.305 ) }
    dend_39 { pt3dadd( 381.758, 643.443, 23.2235, 0.356 ) }
    dend_39 { pt3dadd( 382.473, 643.215, 21.9181, 0.356 ) }
    dend_39 { pt3dadd( 383.185, 643.865, 22.974, 0.305 ) }
    dend_39 { pt3dadd( 384.04, 643.921, 23.5346, 0.2542 ) }
    dend_39 { pt3dadd( 384.303, 643.654, 21.562, 0.2796 ) }
    dend_39 { pt3dadd( 385.101, 643.378, 22.5767, 0.356 ) }
    dend_39 { pt3dadd( 385.812, 643.508, 23.7737, 0.4576 ) }
    dend_39 { pt3dadd( 386.366, 644.102, 23.52, 0.483 ) }
    dend_39 { pt3dadd( 387.03, 644.644, 24.0293, 0.483 ) }
    dend_39 { pt3dadd( 387.76, 644.742, 22.3891, 0.4576 ) }
    dend_39 { pt3dadd( 388.59, 645.01, 23.3083, 0.483 ) }
    dend_39 { pt3dadd( 389.478, 645.476, 24.3446, 0.5338 ) }
    dend_39 { pt3dadd( 390.253, 645.858, 23.2624, 0.6102 ) }
    dend_39 { pt3dadd( 390.9, 646.774, 23.24, 0.6356 ) }
    dend_39 { pt3dadd( 391.372, 647.777, 23.788, 0.6356 ) }
    dend_39 { pt3dadd( 391.663, 648.419, 22.7592, 0.5848 ) }
    dend_39 { pt3dadd( 392.044, 649.087, 22.6733, 0.5592 ) }
    dend_39 { pt3dadd( 392.342, 649.476, 24.5692, 0.483 ) }
    dend_39 { pt3dadd( 393.06, 650.215, 24.2726, 0.4322 ) }
    dend_39 { pt3dadd( 393.192, 650.728, 22.8897, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_39 { pt3dadd( 393.58, 651.309, 24.4104, 0.5084 ) }
    dend_39 { pt3dadd( 394.45, 651.508, 24.92, 0.6356 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 2/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 307.964, 510.44, 48.1911, 0.5338 ) }
    dend_36 { pt3dadd( 307.714, 510.642, 46.1706, 0.6356 ) }
    dend_36 { pt3dadd( 307.239, 511.077, 44.317, 0.661 ) }
    dend_36 { pt3dadd( 306.601, 511.657, 42.9285, 0.6356 ) }
    dend_36 { pt3dadd( 306.26, 512.169, 44.2092, 0.5848 ) }
    dend_36 { pt3dadd( 305.758, 512.856, 44.1118, 0.483 ) }
    dend_36 { pt3dadd( 305.016, 513.441, 43.9788, 0.3814 ) }
    dend_36 { pt3dadd( 304.723, 513.786, 41.7749, 0.3304 ) }
    dend_36 { pt3dadd( 303.793, 513.801, 42.2422, 0.3304 ) }
    dend_36 { pt3dadd( 302.884, 513.884, 42.1534, 0.356 ) }
    dend_36 { pt3dadd( 301.937, 513.749, 41.1897, 0.3814 ) }
    dend_36 { pt3dadd( 301.478, 514.213, 39.5886, 0.3814 ) }
    dend_36 { pt3dadd( 300.942, 514.8, 39.0051, 0.4322 ) }
    dend_36 { pt3dadd( 300.188, 515.267, 40.5093, 0.5338 ) }
    dend_36 { pt3dadd( 299.745, 515.983, 40.7826, 0.7118 ) }
    dend_36 { pt3dadd( 299.319, 516.883, 40.04, 0.8644 ) }
    dend_36 { pt3dadd( 298.94, 517.372, 38.9544, 0.8898 ) }
    dend_36 { pt3dadd( 299.137, 518.003, 37.3402, 0.7372 ) }
    dend_36 { pt3dadd( 299.025, 518.539, 35.56, 0.5338 ) }
    dend_36 { pt3dadd( 298.225, 518.964, 36.6668, 0.483 ) }
    dend_36 { pt3dadd( 297.135, 519.033, 36.7578, 0.5592 ) }
    dend_36 { pt3dadd( 296.331, 519.039, 38.281, 0.6356 ) }
    dend_36 { pt3dadd( 295.699, 518.804, 38.6168, 0.6356 ) }
    dend_36 { pt3dadd( 294.633, 518.691, 38.2777, 0.661 ) }
    dend_36 { pt3dadd( 293.651, 518.918, 37.9422, 0.7372 ) }
    dend_36 { pt3dadd( 292.761, 519.432, 37.6494, 0.8136 ) }
    dend_36 { pt3dadd( 291.948, 519.383, 36.258, 0.788 ) }
    dend_36 { pt3dadd( 291.355, 519.376, 34.6489, 0.6864 ) }
    dend_36 { pt3dadd( 290.572, 519.297, 33.2055, 0.5592 ) }
    dend_36 { pt3dadd( 289.838, 519.367, 31.9094, 0.5084 ) }
    dend_36 { pt3dadd( 288.983, 519.608, 33.3567, 0.5592 ) }
    dend_36 { pt3dadd( 288.471, 520.513, 34.0273, 0.6356 ) }
    dend_36 { pt3dadd( 287.62, 520.881, 33.689, 0.661 ) }
    dend_36 { pt3dadd( 286.679, 520.7, 33.2307, 0.6102 ) }
    dend_36 { pt3dadd( 285.752, 520.649, 32.3428, 0.5592 ) }
    dend_36 { pt3dadd( 284.877, 521.216, 31.3642, 0.5592 ) }
    dend_36 { pt3dadd( 284.155, 521.895, 30.5186, 0.6102 ) }
    dend_36 { pt3dadd( 283.263, 522.353, 30.24, 0.6356 ) }
    dend_36 { pt3dadd( 282.606, 523.223, 30.8, 0.6864 ) }
    dend_36 { pt3dadd( 281.996, 524.042, 30.13, 0.7118 ) }
    dend_36 { pt3dadd( 281.766, 525.007, 29.2718, 0.7626 ) }
    dend_36 { pt3dadd( 281.714, 526.019, 30.4046, 0.6864 ) }
    dend_36 { pt3dadd( 281.652, 527.082, 29.8332, 0.5848 ) }
    dend_36 { pt3dadd( 281.359, 527.536, 28.5292, 0.5084 ) }
    dend_36 { pt3dadd( 280.634, 528.179, 28.0, 0.5338 ) }
    dend_36 { pt3dadd( 280.138, 529.174, 28.369, 0.5592 ) }
    dend_36 { pt3dadd( 279.555, 529.771, 27.2975, 0.5338 ) }
    dend_36 { pt3dadd( 278.568, 529.86, 27.0721, 0.4576 ) }
    dend_36 { pt3dadd( 277.919, 530.54, 26.7982, 0.4576 ) }
    dend_36 { pt3dadd( 277.531, 530.484, 24.9878, 0.483 ) }
    dend_36 { pt3dadd( 276.873, 530.442, 25.2, 0.5338 ) }
    dend_36 { pt3dadd( 275.831, 530.567, 26.0484, 0.5084 ) }
    dend_36 { pt3dadd( 275.042, 530.811, 27.0858, 0.4576 ) }
    dend_36 { pt3dadd( 274.575, 531.159, 25.3033, 0.3814 ) }
    dend_36 { pt3dadd( 274.489, 532.077, 24.2738, 0.305 ) }
    dend_36 { pt3dadd( 273.799, 532.786, 23.011, 0.2542 ) }
    dend_36 { pt3dadd( 273.026, 533.358, 23.555, 0.2288 ) }
    dend_36 { pt3dadd( 272.277, 533.118, 22.1752, 0.2542 ) }
    dend_36 { pt3dadd( 272.009, 532.753, 23.9618, 0.3304 ) }
    dend_36 { pt3dadd( 271.032, 533.008, 24.6378, 0.4322 ) }
    dend_36 { pt3dadd( 270.243, 533.724, 25.52, 0.5338 ) }
    dend_36 { pt3dadd( 269.409, 534.305, 26.4796, 0.5848 ) }
    dend_36 { pt3dadd( 268.804, 535.144, 25.9846, 0.6102 ) }
    dend_36 { pt3dadd( 268.148, 535.791, 24.9365, 0.5848 ) }
    dend_36 { pt3dadd( 267.407, 535.744, 24.619, 0.5084 ) }
    dend_36 { pt3dadd( 266.6, 536.333, 25.2, 0.4322 ) }
    dend_36 { pt3dadd( 266.319, 536.92, 24.726, 0.4068 ) }
    dend_36 { pt3dadd( 265.563, 537.523, 23.4584, 0.4576 ) }
    dend_36 { pt3dadd( 264.992, 538.233, 23.4567, 0.5084 ) }
    dend_36 { pt3dadd( 264.59, 538.932, 22.9645, 0.5338 ) }
    dend_36 { pt3dadd( 263.866, 539.558, 23.0446, 0.5084 ) }
    dend_36 { pt3dadd( 263.348, 540.439, 22.6962, 0.483 ) }
    dend_36 { pt3dadd( 263.163, 541.479, 22.9706, 0.4322 ) }
    dend_36 { pt3dadd( 262.839, 542.378, 21.9209, 0.4068 ) }
    dend_36 { pt3dadd( 262.661, 543.331, 22.5966, 0.356 ) }
    dend_36 { pt3dadd( 263.119, 544.201, 23.24, 0.3304 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 78/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 307.964, 510.44, 48.1911, 0.5338 ) }
    dend_31 { pt3dadd( 307.891, 509.85, 48.7024, 0.4322 ) }
    dend_31 { pt3dadd( 306.859, 509.652, 49.28, 0.3814 ) }
    dend_31 { pt3dadd( 305.807, 509.392, 49.0, 0.356 ) }
    dend_31 { pt3dadd( 305.065, 509.194, 50.3289, 0.3814 ) }
    dend_31 { pt3dadd( 304.026, 509.195, 50.96, 0.483 ) }
    dend_31 { pt3dadd( 303.25, 509.097, 49.8985, 0.5592 ) }
    dend_31 { pt3dadd( 302.358, 508.901, 49.436, 0.5848 ) }
    dend_31 { pt3dadd( 301.491, 508.628, 48.72, 0.5592 ) }
    dend_31 { pt3dadd( 300.455, 508.47, 47.945, 0.5338 ) }
    dend_31 { pt3dadd( 299.899, 507.707, 48.3602, 0.6356 ) }
    dend_31 { pt3dadd( 299.536, 507.568, 50.0889, 0.7372 ) }
    // Section: dend_27, id: dend_27, parent: dend_15 (entry count 90/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 311.548, 506.715, 45.64, 0.6102 ) }
    dend_27 { pt3dadd( 311.46, 506.512, 47.052, 0.5084 ) }
    dend_27 { pt3dadd( 312.088, 505.743, 47.313, 0.5084 ) }
    dend_27 { pt3dadd( 312.769, 505.224, 48.1704, 0.5592 ) }
    dend_27 { pt3dadd( 312.596, 504.425, 49.28, 0.6102 ) }
    dend_27 { pt3dadd( 312.769, 503.315, 49.28, 0.661 ) }
    dend_27 { pt3dadd( 312.902, 502.674, 47.7028, 0.661 ) }
    dend_27 { pt3dadd( 313.404, 502.105, 46.6732, 0.6102 ) }
    dend_27 { pt3dadd( 313.734, 501.308, 47.5712, 0.5338 ) }
    dend_27 { pt3dadd( 313.807, 500.241, 47.2965, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 313.903, 499.195, 46.2706, 0.5592 ) }
    dend_27 { pt3dadd( 314.109, 498.297, 45.1822, 0.661 ) }
    dend_27 { pt3dadd( 314.599, 497.745, 45.08, 0.7372 ) }
    dend_27 { pt3dadd( 315.042, 496.954, 45.0299, 0.7626 ) }
    dend_27 { pt3dadd( 315.384, 496.051, 45.1464, 0.7372 ) }
    dend_27 { pt3dadd( 315.514, 495.18, 45.1494, 0.7372 ) }
    dend_27 { pt3dadd( 315.629, 494.309, 45.7531, 0.7372 ) }
    dend_27 { pt3dadd( 315.99, 493.319, 45.582, 0.788 ) }
    dend_27 { pt3dadd( 316.356, 492.379, 45.969, 0.7626 ) }
    dend_27 { pt3dadd( 316.424, 491.772, 44.583, 0.6864 ) }
    dend_27 { pt3dadd( 316.127, 490.894, 44.1958, 0.5592 ) }
    dend_27 { pt3dadd( 316.101, 489.904, 43.5215, 0.5592 ) }
    dend_27 { pt3dadd( 316.086, 489.005, 43.596, 0.661 ) }
    dend_27 { pt3dadd( 316.464, 488.121, 44.0661, 0.788 ) }
    dend_27 { pt3dadd( 317.001, 487.344, 44.52, 0.7372 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 15/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 311.548, 506.715, 45.64, 0.6102 ) }
    dend_16 { pt3dadd( 312.246, 506.656, 44.9736, 0.7372 ) }
    dend_16 { pt3dadd( 313.116, 506.083, 44.0124, 0.7372 ) }
    dend_16 { pt3dadd( 314.106, 505.563, 44.2551, 0.7372 ) }
    dend_16 { pt3dadd( 314.888, 505.693, 45.64, 0.6356 ) }
    dend_16 { pt3dadd( 315.83, 505.428, 46.0261, 0.6102 ) }
    dend_16 { pt3dadd( 316.611, 504.711, 46.76, 0.5848 ) }
    dend_16 { pt3dadd( 317.175, 503.748, 46.706, 0.6356 ) }
    dend_16 { pt3dadd( 318.241, 503.475, 46.0779, 0.661 ) }
    dend_16 { pt3dadd( 319.222, 503.17, 44.9778, 0.661 ) }
    dend_16 { pt3dadd( 320.12, 502.791, 44.6967, 0.6102 ) }
    dend_16 { pt3dadd( 321.075, 502.43, 43.9533, 0.5338 ) }
    dend_16 { pt3dadd( 321.711, 501.758, 43.4865, 0.483 ) }
    dend_16 { pt3dadd( 322.045, 501.345, 41.8004, 0.4322 ) }
    dend_16 { pt3dadd( 322.7, 500.72, 42.3114, 0.4576 ) }
    dend_16 { pt3dadd( 323.556, 500.034, 42.296, 0.4576 ) }
    dend_16 { pt3dadd( 324.309, 499.485, 43.5126, 0.483 ) }
    dend_16 { pt3dadd( 325.205, 499.018, 42.8476, 0.4576 ) }
    dend_16 { pt3dadd( 326.153, 498.784, 42.28, 0.483 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 327.285, 534.77, 59.4532, 0.5084 ) }
    dend_12 { pt3dadd( 327.572, 535.417, 60.4626, 0.5084 ) }
    dend_12 { pt3dadd( 327.119, 535.997, 59.9455, 0.5084 ) }
    dend_12 { pt3dadd( 326.84, 536.682, 61.21, 0.483 ) }
    dend_12 { pt3dadd( 326.031, 537.141, 62.4092, 0.5084 ) }
    dend_12 { pt3dadd( 325.567, 537.735, 64.381, 0.5848 ) }
    dend_12 { pt3dadd( 324.985, 538.435, 65.828, 0.661 ) }
    dend_12 { pt3dadd( 324.1, 538.681, 66.5913, 0.661 ) }
    dend_12 { pt3dadd( 323.623, 539.333, 66.0212, 0.6102 ) }
    dend_12 { pt3dadd( 323.441, 539.548, 68.336, 0.5592 ) }
    dend_12 { pt3dadd( 323.108, 539.839, 70.5578, 0.5338 ) }
    dend_12 { pt3dadd( 322.605, 540.675, 70.7574, 0.5084 ) }
    dend_12 { pt3dadd( 322.211, 541.66, 70.464, 0.483 ) }
    dend_12 { pt3dadd( 321.703, 542.557, 70.7246, 0.4576 ) }
    dend_12 { pt3dadd( 321.786, 543.168, 72.952, 0.5084 ) }
    dend_12 { pt3dadd( 321.735, 544.136, 74.2776, 0.5338 ) }
    dend_12 { pt3dadd( 321.947, 544.928, 75.8332, 0.5084 ) }
    dend_12 { pt3dadd( 322.704, 545.456, 76.5036, 0.3814 ) }
    dend_12 { pt3dadd( 322.974, 545.23, 77.6166, 0.305 ) }
    dend_12 { pt3dadd( 323.476, 545.337, 79.8, 0.3304 ) }
    dend_12 { pt3dadd( 324.008, 545.464, 81.0818, 0.4068 ) }
    dend_12 { pt3dadd( 324.19, 546.115, 83.1449, 0.4322 ) }
    dend_12 { pt3dadd( 324.666, 546.946, 82.6, 0.4068 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 327.285, 534.77, 59.4532, 0.5084 ) }
    dend_11 { pt3dadd( 327.206, 535.011, 60.2109, 0.4068 ) }
    dend_11 { pt3dadd( 327.64, 535.951, 60.48, 0.4322 ) }
    dend_11 { pt3dadd( 328.098, 536.912, 60.6598, 0.4322 ) }
    dend_11 { pt3dadd( 328.213, 538.018, 61.04, 0.3814 ) }
    dend_11 { pt3dadd( 328.694, 538.707, 60.3445, 0.3304 ) }
    dend_11 { pt3dadd( 329.471, 539.258, 61.385, 0.2796 ) }
    dend_11 { pt3dadd( 330.081, 539.689, 63.0, 0.305 ) }
    dend_11 { pt3dadd( 330.566, 540.51, 62.16, 0.356 ) }
    dend_11 { pt3dadd( 330.739, 541.525, 61.6876, 0.483 ) }
    dend_11 { pt3dadd( 331.1, 542.314, 60.5063, 0.5592 ) }
    dend_11 { pt3dadd( 331.53, 542.8, 62.3608, 0.6356 ) }
    dend_11 { pt3dadd( 331.807, 543.732, 61.5706, 0.6356 ) }
    dend_11 { pt3dadd( 332.193, 544.566, 60.6438, 0.6356 ) }
    dend_11 { pt3dadd( 332.676, 545.068, 62.4574, 0.5848 ) }
    dend_11 { pt3dadd( 333.195, 545.801, 62.7421, 0.5848 ) }
    dend_11 { pt3dadd( 333.291, 546.727, 62.0785, 0.5592 ) }
    dend_11 { pt3dadd( 334.028, 547.379, 62.7707, 0.5592 ) }
    dend_11 { pt3dadd( 334.576, 548.272, 63.1882, 0.5338 ) }
    dend_11 { pt3dadd( 334.625, 549.278, 62.6676, 0.5338 ) }
    dend_11 { pt3dadd( 335.191, 549.927, 62.72, 0.5592 ) }
    dend_11 { pt3dadd( 335.061, 550.931, 62.1902, 0.5848 ) }
    dend_11 { pt3dadd( 335.467, 551.938, 62.6926, 0.5848 ) }
    dend_11 { pt3dadd( 335.737, 552.982, 61.9136, 0.5338 ) }
    dend_11 { pt3dadd( 335.992, 553.926, 61.32, 0.4576 ) }
    dend_11 { pt3dadd( 336.104, 554.596, 62.8202, 0.4068 ) }
    dend_11 { pt3dadd( 336.272, 555.586, 63.5032, 0.356 ) }
    dend_11 { pt3dadd( 336.226, 556.587, 64.6618, 0.3304 ) }
    dend_11 { pt3dadd( 336.444, 557.631, 63.9576, 0.3304 ) }
    dend_11 { pt3dadd( 336.425, 558.604, 63.0885, 0.4068 ) }
    dend_11 { pt3dadd( 336.285, 559.552, 63.56, 0.483 ) }
    dend_11 { pt3dadd( 335.944, 560.554, 64.174, 0.5592 ) }
    dend_11 { pt3dadd( 335.329, 561.464, 64.6512, 0.5338 ) }
    dend_11 { pt3dadd( 335.296, 562.518, 65.156, 0.5084 ) }
    dend_11 { pt3dadd( 335.077, 563.584, 65.7689, 0.4068 ) }
    dend_11 { pt3dadd( 334.738, 564.224, 64.1553, 0.4068 ) }
    dend_11 { pt3dadd( 334.619, 565.305, 64.68, 0.4322 ) }
    dend_11 { pt3dadd( 334.379, 566.185, 65.6944, 0.5592 ) }
    dend_11 { pt3dadd( 334.0, 567.069, 65.4763, 0.5848 ) }
    dend_11 { pt3dadd( 333.895, 567.855, 65.8322, 0.5848 ) }
    dend_11 { pt3dadd( 333.7, 568.823, 66.0741, 0.5338 ) }
    dend_11 { pt3dadd( 333.361, 569.672, 67.2893, 0.5592 ) }
    dend_11 { pt3dadd( 333.017, 570.696, 66.9519, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_11 { pt3dadd( 332.618, 571.656, 67.2, 0.5338 ) }
    dend_11 { pt3dadd( 332.36, 571.66, 69.204, 0.483 ) }
    dend_11 { pt3dadd( 331.821, 572.382, 69.8219, 0.4322 ) }
    dend_11 { pt3dadd( 331.466, 573.271, 69.1499, 0.4068 ) }
    dend_11 { pt3dadd( 330.773, 573.886, 69.0483, 0.356 ) }
    dend_11 { pt3dadd( 330.324, 574.59, 70.28, 0.3814 ) }
    dend_11 { pt3dadd( 329.857, 575.582, 69.9446, 0.4322 ) }
    dend_11 { pt3dadd( 329.353, 576.499, 69.6808, 0.5592 ) }
    dend_11 { pt3dadd( 328.993, 577.334, 70.4469, 0.6102 ) }
    dend_11 { pt3dadd( 328.445, 578.148, 70.8089, 0.5848 ) }
    dend_11 { pt3dadd( 328.075, 579.03, 71.4683, 0.483 ) }
    dend_11 { pt3dadd( 327.532, 579.667, 72.718, 0.3814 ) }
    dend_11 { pt3dadd( 327.466, 580.431, 74.4612, 0.356 ) }
    dend_11 { pt3dadd( 327.99, 580.483, 76.771, 0.3304 ) }
    dend_11 { pt3dadd( 327.995, 581.314, 77.8434, 0.356 ) }
    dend_11 { pt3dadd( 327.857, 582.288, 78.976, 0.3304 ) }
    dend_11 { pt3dadd( 327.872, 583.305, 79.52, 0.3814 ) }
    dend_11 { pt3dadd( 327.526, 584.241, 78.68, 0.4322 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 18/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 324.9, 506.449, 57.7086, 0.4068 ) }
    apic_5 { pt3dadd( 325.107, 505.934, 57.752, 0.7372 ) }
    apic_5 { pt3dadd( 325.374, 504.837, 58.1871, 0.6864 ) }
    apic_5 { pt3dadd( 325.901, 503.845, 58.7101, 0.6356 ) }
    apic_5 { pt3dadd( 326.449, 502.843, 58.5511, 0.5338 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 23/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 324.9, 506.449, 57.7086, 0.4068 ) }
    apic_2 { pt3dadd( 324.436, 506.265, 57.2359, 0.483 ) }
    apic_2 { pt3dadd( 324.736, 505.328, 57.3524, 0.5338 ) }
    apic_2 { pt3dadd( 324.674, 504.383, 56.1834, 0.5848 ) }
    apic_2 { pt3dadd( 324.411, 503.703, 54.7938, 0.6102 ) }
    apic_2 { pt3dadd( 324.283, 502.926, 54.04, 0.5848 ) }
    apic_2 { pt3dadd( 324.36, 501.866, 54.4597, 0.5592 ) }
    apic_2 { pt3dadd( 324.464, 500.791, 54.665, 0.5592 ) }
    apic_2 { pt3dadd( 324.298, 499.758, 54.5457, 0.6102 ) }
    apic_2 { pt3dadd( 324.039, 498.789, 53.7653, 0.6102 ) }
    apic_2 { pt3dadd( 323.355, 498.274, 52.1861, 0.5848 ) }
    apic_2 { pt3dadd( 323.07, 497.264, 52.64, 0.5084 ) }
    apic_2 { pt3dadd( 322.204, 496.617, 52.2738, 0.483 ) }
    apic_2 { pt3dadd( 322.027, 495.645, 52.08, 0.4322 ) }
    apic_2 { pt3dadd( 321.376, 494.928, 52.6215, 0.4068 ) }
    apic_2 { pt3dadd( 320.985, 494.072, 52.36, 0.3814 ) }
    apic_2 { pt3dadd( 320.366, 493.413, 51.5908, 0.4068 ) }
    apic_2 { pt3dadd( 319.477, 493.223, 52.5885, 0.4576 ) }
    apic_2 { pt3dadd( 319.137, 492.263, 52.1732, 0.5592 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 297.287, 536.459, 50.0578, 0.4068 ) }
    dend_8 { pt3dadd( 297.644, 536.804, 49.2881, 0.5084 ) }
    dend_8 { pt3dadd( 297.565, 537.919, 49.1761, 0.483 ) }
    dend_8 { pt3dadd( 297.564, 538.904, 48.242, 0.483 ) }
    dend_8 { pt3dadd( 297.84, 539.708, 48.16, 0.4576 ) }
    dend_8 { pt3dadd( 297.353, 540.644, 47.6059, 0.4322 ) }
    dend_8 { pt3dadd( 297.114, 541.621, 47.7812, 0.3814 ) }
    dend_8 { pt3dadd( 297.187, 542.389, 49.56, 0.305 ) }
    dend_8 { pt3dadd( 296.963, 543.282, 48.5845, 0.2542 ) }
    dend_8 { pt3dadd( 296.771, 544.203, 49.0829, 0.2288 ) }
    dend_8 { pt3dadd( 296.675, 545.283, 49.81, 0.2542 ) }
    dend_8 { pt3dadd( 295.837, 545.871, 49.7521, 0.305 ) }
    dend_8 { pt3dadd( 295.863, 546.924, 49.1683, 0.356 ) }
    dend_8 { pt3dadd( 295.609, 547.626, 47.6381, 0.4068 ) }
    dend_8 { pt3dadd( 295.495, 548.554, 48.82, 0.4576 ) }
    dend_8 { pt3dadd( 294.992, 549.344, 49.9789, 0.5338 ) }
    dend_8 { pt3dadd( 294.582, 550.255, 49.8621, 0.5592 ) }
    dend_8 { pt3dadd( 294.197, 551.257, 49.56, 0.5084 ) }
    dend_8 { pt3dadd( 293.964, 552.16, 49.0266, 0.4576 ) }
    dend_8 { pt3dadd( 293.516, 552.809, 47.88, 0.4068 ) }
    dend_8 { pt3dadd( 293.313, 553.438, 47.6958, 0.4068 ) }
    dend_8 { pt3dadd( 292.748, 554.106, 48.2457, 0.3304 ) }
    dend_8 { pt3dadd( 292.089, 554.882, 48.5926, 0.2796 ) }
    dend_8 { pt3dadd( 291.606, 555.786, 48.4618, 0.2542 ) }
    dend_8 { pt3dadd( 291.15, 556.776, 48.7183, 0.3304 ) }
    dend_8 { pt3dadd( 290.342, 557.184, 47.6224, 0.4068 ) }
    dend_8 { pt3dadd( 289.719, 557.69, 46.6698, 0.4576 ) }
    dend_8 { pt3dadd( 288.817, 558.343, 46.926, 0.4068 ) }
    dend_8 { pt3dadd( 288.217, 559.242, 47.649, 0.356 ) }
    dend_8 { pt3dadd( 287.798, 560.251, 47.9254, 0.2796 ) }
    dend_8 { pt3dadd( 286.771, 560.561, 48.431, 0.305 ) }
    dend_8 { pt3dadd( 286.108, 561.289, 48.16, 0.3304 ) }
    dend_8 { pt3dadd( 285.263, 561.475, 46.9034, 0.3814 ) }
    dend_8 { pt3dadd( 284.497, 562.075, 46.0118, 0.356 ) }
    dend_8 { pt3dadd( 283.812, 562.738, 47.031, 0.356 ) }
    dend_8 { pt3dadd( 283.083, 563.397, 46.338, 0.3814 ) }
    dend_8 { pt3dadd( 282.422, 564.062, 47.4995, 0.4322 ) }
    dend_8 { pt3dadd( 281.771, 564.635, 46.4377, 0.4576 ) }
    dend_8 { pt3dadd( 281.318, 565.123, 46.3246, 0.4322 ) }
    dend_8 { pt3dadd( 280.808, 565.574, 47.4891, 0.3814 ) }
    dend_8 { pt3dadd( 280.155, 566.094, 46.4957, 0.305 ) }
    dend_8 { pt3dadd( 279.707, 566.883, 45.8772, 0.2542 ) }
    dend_8 { pt3dadd( 279.694, 567.982, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 278.693, 568.385, 46.1191, 0.2288 ) }
    dend_8 { pt3dadd( 277.954, 568.991, 46.9832, 0.2288 ) }
    dend_8 { pt3dadd( 277.305, 569.902, 47.0492, 0.2542 ) }
    dend_8 { pt3dadd( 276.678, 570.837, 47.259, 0.2796 ) }
    dend_8 { pt3dadd( 275.949, 571.62, 47.2464, 0.305 ) }
    dend_8 { pt3dadd( 275.268, 572.206, 47.8248, 0.2796 ) }
    dend_8 { pt3dadd( 274.66, 573.029, 48.277, 0.2542 ) }
    dend_8 { pt3dadd( 274.391, 573.966, 49.5118, 0.2542 ) }
    dend_8 { pt3dadd( 273.682, 574.448, 48.7942, 0.2796 ) }
    dend_8 { pt3dadd( 272.928, 574.547, 46.8936, 0.3304 ) }
    dend_8 { pt3dadd( 272.616, 575.463, 47.0159, 0.3304 ) }
    dend_8 { pt3dadd( 272.11, 576.36, 46.5766, 0.3304 ) }
    dend_8 { pt3dadd( 271.657, 577.378, 46.48, 0.305 ) }
    dend_8 { pt3dadd( 270.959, 578.236, 46.8762, 0.3304 ) }
    dend_8 { pt3dadd( 270.157, 579.005, 47.4421, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( 269.437, 579.672, 46.893, 0.356 ) }
    dend_8 { pt3dadd( 268.767, 580.577, 46.7768, 0.3304 ) }
    dend_8 { pt3dadd( 267.956, 581.349, 46.226, 0.3304 ) }
    dend_8 { pt3dadd( 267.26, 582.098, 46.0132, 0.3814 ) }
    dend_8 { pt3dadd( 266.641, 582.933, 46.412, 0.4322 ) }
    dend_8 { pt3dadd( 265.943, 583.692, 46.2647, 0.4576 ) }
    dend_8 { pt3dadd( 265.423, 584.402, 46.041, 0.4576 ) }
    dend_8 { pt3dadd( 264.88, 585.277, 46.0449, 0.4322 ) }
    dend_8 { pt3dadd( 264.23, 586.203, 46.1398, 0.4068 ) }
    dend_8 { pt3dadd( 263.987, 587.309, 46.2, 0.356 ) }
    dend_8 { pt3dadd( 263.834, 588.428, 46.4545, 0.3304 ) }
    dend_8 { pt3dadd( 263.286, 589.429, 46.48, 0.2796 ) }
    dend_8 { pt3dadd( 262.677, 590.271, 46.7956, 0.2542 ) }
    dend_8 { pt3dadd( 262.433, 591.312, 46.6469, 0.2542 ) }
    dend_8 { pt3dadd( 262.661, 592.134, 46.76, 0.3304 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 297.287, 536.459, 50.0578, 0.4068 ) }
    dend_7 { pt3dadd( 297.336, 537.26, 49.754, 0.4322 ) }
    dend_7 { pt3dadd( 297.143, 538.023, 48.3787, 0.5084 ) }
    dend_7 { pt3dadd( 296.41, 538.559, 47.32, 0.5338 ) }
    dend_7 { pt3dadd( 295.658, 539.219, 48.0676, 0.5592 ) }
    dend_7 { pt3dadd( 295.011, 539.959, 47.3242, 0.5848 ) }
    dend_7 { pt3dadd( 294.239, 540.311, 48.0018, 0.6102 ) }
    dend_7 { pt3dadd( 293.35, 540.469, 48.0102, 0.6102 ) }
    dend_7 { pt3dadd( 292.461, 540.533, 47.2035, 0.6102 ) }
    dend_7 { pt3dadd( 291.641, 540.646, 46.0432, 0.5848 ) }
    dend_7 { pt3dadd( 290.662, 541.183, 45.7845, 0.5338 ) }
    dend_7 { pt3dadd( 289.996, 541.623, 45.3681, 0.4576 ) }
    dend_7 { pt3dadd( 289.701, 542.255, 47.3903, 0.4068 ) }
    dend_7 { pt3dadd( 289.636, 542.798, 49.5488, 0.356 ) }
    dend_7 { pt3dadd( 289.542, 543.846, 49.0504, 0.356 ) }
    dend_7 { pt3dadd( 289.408, 544.311, 47.2861, 0.356 ) }
    dend_7 { pt3dadd( 288.526, 544.086, 46.2132, 0.4068 ) }
    dend_7 { pt3dadd( 288.045, 544.679, 44.3503, 0.4322 ) }
    dend_7 { pt3dadd( 287.514, 545.553, 44.24, 0.483 ) }
    dend_7 { pt3dadd( 286.887, 545.689, 42.5603, 0.5084 ) }
    dend_7 { pt3dadd( 286.012, 546.196, 41.8138, 0.5338 ) }
    dend_7 { pt3dadd( 285.656, 546.385, 43.6125, 0.5338 ) }
    dend_7 { pt3dadd( 284.943, 546.847, 42.8971, 0.5084 ) }
    dend_7 { pt3dadd( 284.18, 547.53, 42.5816, 0.483 ) }
    dend_7 { pt3dadd( 283.458, 548.222, 42.56, 0.4068 ) }
    dend_7 { pt3dadd( 282.519, 548.252, 42.8044, 0.3814 ) }
    dend_7 { pt3dadd( 281.673, 548.636, 41.9238, 0.3814 ) }
    dend_7 { pt3dadd( 280.631, 548.682, 41.2096, 0.483 ) }
    dend_7 { pt3dadd( 279.636, 549.011, 41.732, 0.5592 ) }
    dend_7 { pt3dadd( 278.923, 549.695, 41.9698, 0.5848 ) }
    dend_7 { pt3dadd( 277.98, 550.178, 41.2656, 0.5592 ) }
    dend_7 { pt3dadd( 277.191, 550.444, 40.2805, 0.5592 ) }
    dend_7 { pt3dadd( 276.59, 550.872, 39.5413, 0.5848 ) }
    dend_7 { pt3dadd( 275.626, 551.01, 38.92, 0.6102 ) }
    dend_7 { pt3dadd( 274.895, 551.167, 39.5959, 0.5848 ) }
    dend_7 { pt3dadd( 274.069, 551.214, 39.5276, 0.5338 ) }
    dend_7 { pt3dadd( 273.275, 551.845, 40.2735, 0.4322 ) }
    dend_7 { pt3dadd( 272.454, 552.352, 40.2226, 0.3304 ) }
    dend_7 { pt3dadd( 271.866, 552.674, 38.6182, 0.2796 ) }
    dend_7 { pt3dadd( 270.797, 552.629, 38.64, 0.2796 ) }
    dend_7 { pt3dadd( 269.771, 552.302, 38.8713, 0.305 ) }
    dend_7 { pt3dadd( 268.789, 552.692, 38.4812, 0.2796 ) }
    dend_7 { pt3dadd( 267.681, 552.737, 38.9026, 0.2542 ) }
    dend_7 { pt3dadd( 266.605, 552.885, 38.999, 0.2542 ) }
    dend_7 { pt3dadd( 265.709, 553.336, 38.808, 0.305 ) }
    dend_7 { pt3dadd( 264.951, 553.81, 38.36, 0.356 ) }
    dend_7 { pt3dadd( 263.97, 554.266, 38.5468, 0.356 ) }
    dend_7 { pt3dadd( 262.936, 554.555, 38.211, 0.3304 ) }
    dend_7 { pt3dadd( 262.004, 554.76, 38.2138, 0.3304 ) }
    dend_7 { pt3dadd( 261.304, 555.004, 38.3356, 0.356 ) }
    dend_7 { pt3dadd( 260.441, 555.034, 37.4696, 0.3814 ) }
    dend_7 { pt3dadd( 259.435, 555.433, 36.9152, 0.3814 ) }
    dend_7 { pt3dadd( 258.414, 555.415, 37.1608, 0.4068 ) }
    dend_7 { pt3dadd( 257.325, 555.448, 37.7112, 0.4068 ) }
    dend_7 { pt3dadd( 256.219, 555.526, 38.2248, 0.3814 ) }
    dend_7 { pt3dadd( 255.356, 555.973, 37.8011, 0.305 ) }
    dend_7 { pt3dadd( 254.283, 556.312, 37.8, 0.2796 ) }
    dend_7 { pt3dadd( 253.177, 556.494, 37.4562, 0.2796 ) }
    dend_7 { pt3dadd( 252.172, 556.937, 36.9659, 0.3304 ) }
    dend_7 { pt3dadd( 251.354, 557.357, 37.4262, 0.356 ) }
    dend_7 { pt3dadd( 250.423, 557.864, 37.1826, 0.4068 ) }
    dend_7 { pt3dadd( 249.354, 558.194, 37.2299, 0.4322 ) }
    dend_7 { pt3dadd( 248.238, 558.428, 37.2901, 0.4322 ) }
    dend_7 { pt3dadd( 247.288, 558.534, 36.6965, 0.3814 ) }
    dend_7 { pt3dadd( 246.364, 558.757, 37.7017, 0.305 ) }
    dend_7 { pt3dadd( 245.368, 558.946, 36.7777, 0.2796 ) }
    dend_7 { pt3dadd( 244.285, 558.925, 36.9331, 0.305 ) }
    dend_7 { pt3dadd( 243.166, 558.968, 36.7002, 0.3814 ) }
    dend_7 { pt3dadd( 242.044, 559.137, 36.981, 0.4068 ) }
    dend_7 { pt3dadd( 240.951, 558.932, 36.9754, 0.4068 ) }
    dend_7 { pt3dadd( 239.859, 558.82, 36.4, 0.3814 ) }
    dend_7 { pt3dadd( 238.882, 558.708, 37.1935, 0.3814 ) }
    dend_7 { pt3dadd( 237.86, 559.056, 36.4286, 0.356 ) }
    dend_7 { pt3dadd( 237.365, 560.018, 36.68, 0.3304 ) }
    dend_7 { pt3dadd( 236.653, 560.736, 35.6899, 0.3304 ) }
    dend_7 { pt3dadd( 235.56, 560.8, 36.2407, 0.3814 ) }
    dend_7 { pt3dadd( 234.731, 561.434, 36.4804, 0.4322 ) }
    dend_7 { pt3dadd( 233.832, 561.933, 36.2477, 0.4322 ) }
    dend_7 { pt3dadd( 233.031, 562.375, 36.5949, 0.4068 ) }
    dend_7 { pt3dadd( 232.321, 562.878, 36.6744, 0.356 ) }
    dend_7 { pt3dadd( 231.692, 563.785, 36.3899, 0.3304 ) }
    dend_7 { pt3dadd( 231.421, 564.76, 36.0105, 0.305 ) }
    dend_7 { pt3dadd( 230.871, 565.195, 34.2149, 0.305 ) }
    dend_7 { pt3dadd( 229.982, 565.392, 34.7934, 0.356 ) }
    dend_7 { pt3dadd( 228.923, 565.445, 34.5719, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( 228.141, 565.975, 33.1027, 0.4322 ) }
    dend_7 { pt3dadd( 227.188, 566.161, 31.8116, 0.4068 ) }
    dend_7 { pt3dadd( 226.159, 566.214, 31.5067, 0.4322 ) }
    dend_7 { pt3dadd( 225.232, 566.002, 32.2199, 0.4322 ) }
    dend_7 { pt3dadd( 224.353, 565.551, 32.5786, 0.4322 ) }
    dend_7 { pt3dadd( 223.338, 565.288, 32.5892, 0.4068 ) }
    dend_7 { pt3dadd( 222.316, 565.602, 31.901, 0.4068 ) }
    dend_7 { pt3dadd( 221.452, 566.071, 31.3116, 0.4576 ) }
    dend_7 { pt3dadd( 220.669, 565.709, 32.0132, 0.5338 ) }
    dend_7 { pt3dadd( 219.822, 565.074, 31.8301, 0.5338 ) }
    dend_7 { pt3dadd( 218.925, 565.031, 31.36, 0.5338 ) }
    dend_7 { pt3dadd( 217.92, 565.022, 30.819, 0.5084 ) }
    dend_7 { pt3dadd( 216.97, 565.128, 29.7245, 0.5592 ) }
    dend_7 { pt3dadd( 215.971, 564.831, 28.8697, 0.5592 ) }
    dend_7 { pt3dadd( 214.966, 564.352, 28.8002, 0.5338 ) }
    dend_7 { pt3dadd( 213.91, 564.152, 28.5396, 0.483 ) }
    dend_7 { pt3dadd( 213.246, 563.744, 28.7983, 0.483 ) }
    dend_7 { pt3dadd( 212.754, 563.354, 26.9032, 0.5338 ) }
    dend_7 { pt3dadd( 212.554, 562.309, 27.4089, 0.6102 ) }
    dend_7 { pt3dadd( 211.768, 561.744, 26.6042, 0.661 ) }
    dend_7 { pt3dadd( 210.871, 561.365, 26.2452, 0.7118 ) }
    dend_7 { pt3dadd( 209.815, 561.131, 26.0033, 0.7118 ) }
    dend_7 { pt3dadd( 208.929, 560.635, 26.0389, 0.6864 ) }
    dend_7 { pt3dadd( 208.117, 559.947, 25.2199, 0.6102 ) }
    dend_7 { pt3dadd( 207.297, 559.44, 26.304, 0.5592 ) }
    dend_7 { pt3dadd( 206.632, 558.87, 26.6263, 0.5338 ) }
    dend_7 { pt3dadd( 205.985, 558.692, 24.9584, 0.5338 ) }
    dend_7 { pt3dadd( 204.958, 558.369, 24.845, 0.5084 ) }
    dend_7 { pt3dadd( 203.926, 558.158, 25.3109, 0.5084 ) }
    dend_7 { pt3dadd( 202.932, 558.388, 24.866, 0.5338 ) }
    dend_7 { pt3dadd( 201.936, 558.789, 24.9782, 0.6356 ) }
    dend_7 { pt3dadd( 200.848, 558.63, 24.64, 0.7118 ) }
    dend_7 { pt3dadd( 199.746, 558.347, 24.6504, 0.7118 ) }
    dend_7 { pt3dadd( 198.741, 557.819, 24.6862, 0.6356 ) }
    dend_7 { pt3dadd( 197.818, 557.192, 24.1727, 0.5592 ) }
    dend_7 { pt3dadd( 196.726, 557.014, 24.5829, 0.5592 ) }
    dend_7 { pt3dadd( 195.659, 557.089, 24.08, 0.5848 ) }
    dend_7 { pt3dadd( 194.735, 556.899, 23.1092, 0.6102 ) }
    dend_7 { pt3dadd( 193.839, 557.035, 23.2666, 0.6102 ) }
    dend_7 { pt3dadd( 192.763, 557.014, 23.24, 0.6356 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 297.79, 521.05, 52.0537, 0.5084 ) }
    dend_3 { pt3dadd( 296.647, 520.407, 52.08, 0.5592 ) }
    dend_3 { pt3dadd( 295.736, 519.971, 52.1755, 0.4576 ) }
    dend_3 { pt3dadd( 294.922, 519.938, 53.8138, 0.3814 ) }
    dend_3 { pt3dadd( 294.007, 520.062, 54.6, 0.3304 ) }
    dend_3 { pt3dadd( 293.075, 519.836, 53.2834, 0.3814 ) }
    dend_3 { pt3dadd( 292.237, 519.371, 51.7896, 0.4322 ) }
    dend_3 { pt3dadd( 291.424, 518.941, 51.2686, 0.5338 ) }
    dend_3 { pt3dadd( 290.48, 518.619, 51.1848, 0.5592 ) }
    dend_3 { pt3dadd( 289.577, 518.695, 50.3821, 0.5592 ) }
    dend_3 { pt3dadd( 288.734, 518.119, 50.0856, 0.5848 ) }
    dend_3 { pt3dadd( 287.597, 518.191, 50.1497, 0.6102 ) }
    dend_3 { pt3dadd( 286.737, 518.323, 51.7, 0.5848 ) }
    dend_3 { pt3dadd( 285.845, 518.131, 50.7175, 0.5084 ) }
    dend_3 { pt3dadd( 284.842, 518.067, 51.24, 0.5338 ) }
    dend_3 { pt3dadd( 283.857, 518.326, 51.4878, 0.661 ) }
    dend_3 { pt3dadd( 283.11, 517.731, 50.68, 0.7626 ) }
    dend_3 { pt3dadd( 282.236, 517.419, 50.68, 0.7372 ) }
    dend_3 { pt3dadd( 281.567, 516.637, 50.8875, 0.661 ) }
    dend_3 { pt3dadd( 280.786, 516.652, 51.2128, 0.661 ) }
    dend_3 { pt3dadd( 279.804, 516.717, 51.4002, 0.7118 ) }
    dend_3 { pt3dadd( 279.22, 516.003, 52.2012, 0.788 ) }
    dend_3 { pt3dadd( 278.433, 515.47, 53.2386, 0.7372 ) }
    dend_3 { pt3dadd( 277.572, 515.037, 53.0267, 0.7118 ) }
    dend_3 { pt3dadd( 276.696, 514.563, 53.7569, 0.6356 ) }
    dend_3 { pt3dadd( 275.768, 514.371, 52.5504, 0.661 ) }
    dend_3 { pt3dadd( 274.763, 514.253, 52.08, 0.6102 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 67/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 297.79, 521.05, 52.0537, 0.5084 ) }
    dend_2 { pt3dadd( 297.428, 520.602, 52.0083, 0.5338 ) }
    dend_2 { pt3dadd( 296.957, 519.616, 51.5978, 0.4576 ) }
    dend_2 { pt3dadd( 296.811, 518.702, 50.1581, 0.483 ) }
    dend_2 { pt3dadd( 296.623, 517.904, 48.2294, 0.5592 ) }
    dend_2 { pt3dadd( 296.159, 516.997, 47.1234, 0.5848 ) }
    dend_2 { pt3dadd( 295.972, 515.912, 47.1016, 0.5084 ) }
    dend_2 { pt3dadd( 296.015, 514.779, 47.4538, 0.4576 ) }
    dend_2 { pt3dadd( 296.269, 513.675, 47.3505, 0.3814 ) }
    dend_2 { pt3dadd( 296.417, 512.639, 46.3319, 0.356 ) }
    dend_2 { pt3dadd( 296.408, 511.623, 45.0506, 0.305 ) }
    dend_2 { pt3dadd( 295.909, 510.845, 43.5159, 0.3304 ) }
    dend_2 { pt3dadd( 295.057, 510.47, 41.9521, 0.3814 ) }
    dend_2 { pt3dadd( 294.177, 509.808, 41.4375, 0.4322 ) }
    dend_2 { pt3dadd( 293.731, 508.764, 41.4372, 0.4322 ) }
    dend_2 { pt3dadd( 293.674, 507.859, 39.7804, 0.4322 ) }
    dend_2 { pt3dadd( 293.704, 507.08, 37.7325, 0.4322 ) }
    dend_2 { pt3dadd( 294.024, 506.46, 35.5197, 0.483 ) }
    dend_2 { pt3dadd( 294.684, 505.989, 33.5479, 0.5338 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 86/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 352.122, 529.329, 42.0, 0.4576 ) }
    dend_47 { pt3dadd( 352.098, 529.423, 43.3916, 0.4322 ) }
    dend_47 { pt3dadd( 352.05, 529.609, 46.1518, 0.3814 ) }
    dend_47 { pt3dadd( 352.002, 529.796, 48.9121, 0.3814 ) }
    dend_47 { pt3dadd( 352.309, 530.603, 48.9418, 0.4576 ) }
    dend_47 { pt3dadd( 352.675, 531.456, 50.0368, 0.483 ) }
    dend_47 { pt3dadd( 353.035, 532.327, 49.4388, 0.483 ) }
    dend_47 { pt3dadd( 353.815, 533.094, 49.84, 0.483 ) }
    dend_47 { pt3dadd( 354.296, 533.601, 50.211, 0.483 ) }
    dend_47 { pt3dadd( 354.713, 534.282, 50.2678, 0.483 ) }
    dend_47 { pt3dadd( 355.393, 534.98, 49.8974, 0.4068 ) }
    dend_47 { pt3dadd( 356.379, 535.07, 49.9349, 0.3814 ) }
    dend_47 { pt3dadd( 357.334, 535.437, 49.3108, 0.356 ) }
    dend_47 { pt3dadd( 358.326, 535.678, 49.0837, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( 359.137, 536.214, 49.1593, 0.4322 ) }
    dend_47 { pt3dadd( 359.717, 536.952, 50.0903, 0.4576 ) }
    dend_47 { pt3dadd( 360.749, 537.257, 49.9638, 0.4322 ) }
    dend_47 { pt3dadd( 361.36, 537.747, 50.3331, 0.4068 ) }
    dend_47 { pt3dadd( 362.158, 538.029, 48.8396, 0.3814 ) }
    dend_47 { pt3dadd( 362.967, 538.329, 47.6739, 0.4068 ) }
    dend_47 { pt3dadd( 363.851, 538.691, 47.7196, 0.4068 ) }
    dend_47 { pt3dadd( 364.512, 539.2, 46.8854, 0.4068 ) }
    dend_47 { pt3dadd( 365.059, 539.724, 46.3756, 0.356 ) }
    dend_47 { pt3dadd( 366.026, 539.51, 46.4332, 0.356 ) }
    dend_47 { pt3dadd( 366.525, 539.664, 46.1418, 0.3304 ) }
    dend_47 { pt3dadd( 366.962, 540.356, 45.3684, 0.356 ) }
    dend_47 { pt3dadd( 367.741, 540.875, 46.2885, 0.3304 ) }
    dend_47 { pt3dadd( 368.321, 541.477, 45.386, 0.3304 ) }
    dend_47 { pt3dadd( 369.119, 541.372, 44.3761, 0.2796 ) }
    dend_47 { pt3dadd( 370.045, 541.684, 44.49, 0.2542 ) }
    dend_47 { pt3dadd( 370.12, 542.194, 43.0542, 0.2288 ) }
    dend_47 { pt3dadd( 370.58, 542.599, 41.2196, 0.2542 ) }
    dend_47 { pt3dadd( 371.132, 542.952, 41.2205, 0.305 ) }
    dend_47 { pt3dadd( 372.175, 543.243, 40.8918, 0.3814 ) }
    dend_47 { pt3dadd( 372.924, 543.676, 41.16, 0.4576 ) }
    dend_47 { pt3dadd( 373.603, 544.315, 41.7777, 0.5084 ) }
    dend_47 { pt3dadd( 374.332, 544.768, 41.7525, 0.5338 ) }
    dend_47 { pt3dadd( 375.169, 544.909, 40.4488, 0.5084 ) }
    dend_47 { pt3dadd( 375.564, 545.828, 40.8248, 0.483 ) }
    dend_47 { pt3dadd( 375.324, 546.738, 39.6967, 0.4576 ) }
    dend_47 { pt3dadd( 374.819, 547.461, 39.1964, 0.4576 ) }
    dend_47 { pt3dadd( 374.43, 547.864, 37.0989, 0.4322 ) }
    dend_47 { pt3dadd( 373.712, 547.976, 35.4978, 0.4322 ) }
    dend_47 { pt3dadd( 373.429, 548.279, 33.8481, 0.4322 ) }
    dend_47 { pt3dadd( 373.439, 549.198, 33.5983, 0.483 ) }
    dend_47 { pt3dadd( 374.023, 549.935, 32.76, 0.5084 ) }
    dend_47 { pt3dadd( 374.991, 550.119, 32.2507, 0.5338 ) }
    dend_47 { pt3dadd( 375.918, 549.66, 33.194, 0.5084 ) }
    dend_47 { pt3dadd( 376.862, 549.578, 33.9433, 0.483 ) }
    dend_47 { pt3dadd( 377.736, 549.487, 32.4386, 0.4322 ) }
    dend_47 { pt3dadd( 378.354, 549.463, 30.5959, 0.4068 ) }
    dend_47 { pt3dadd( 379.243, 549.252, 29.7676, 0.3304 ) }
    dend_47 { pt3dadd( 380.046, 549.586, 28.5351, 0.3304 ) }
    dend_47 { pt3dadd( 380.265, 550.128, 27.1883, 0.356 ) }
    dend_47 { pt3dadd( 379.486, 550.58, 26.6213, 0.483 ) }
    dend_47 { pt3dadd( 379.121, 550.896, 24.8472, 0.5338 ) }
    dend_47 { pt3dadd( 379.249, 551.813, 25.2434, 0.5338 ) }
    dend_47 { pt3dadd( 379.958, 552.646, 25.3204, 0.4576 ) }
    dend_47 { pt3dadd( 380.64, 553.091, 26.2797, 0.4068 ) }
    dend_47 { pt3dadd( 381.157, 553.502, 24.5053, 0.4068 ) }
    dend_47 { pt3dadd( 381.446, 554.372, 24.9346, 0.4322 ) }
    dend_47 { pt3dadd( 381.041, 554.726, 23.5864, 0.4576 ) }
    dend_47 { pt3dadd( 380.585, 555.35, 22.9452, 0.4322 ) }
    dend_47 { pt3dadd( 380.27, 556.415, 22.9471, 0.4068 ) }
    dend_47 { pt3dadd( 380.092, 557.527, 23.0913, 0.3814 ) }
    dend_47 { pt3dadd( 380.135, 558.614, 23.52, 0.3814 ) }
    dend_47 { pt3dadd( 380.417, 559.457, 22.3994, 0.3814 ) }
    dend_47 { pt3dadd( 380.834, 559.839, 20.8642, 0.3814 ) }
    dend_47 { pt3dadd( 380.74, 560.102, 19.3774, 0.4068 ) }
    dend_47 { pt3dadd( 380.718, 561.073, 19.2517, 0.4068 ) }
    dend_47 { pt3dadd( 381.165, 561.945, 19.5972, 0.4068 ) }
    dend_47 { pt3dadd( 381.523, 562.848, 20.44, 0.356 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 58/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 352.122, 529.329, 42.0, 0.4576 ) }
    dend_46 { pt3dadd( 352.669, 529.258, 42.0, 0.3814 ) }
    dend_46 { pt3dadd( 353.065, 528.225, 41.7906, 0.3814 ) }
    dend_46 { pt3dadd( 353.351, 527.401, 41.823, 0.4576 ) }
    dend_46 { pt3dadd( 353.876, 526.812, 41.0676, 0.483 ) }
    dend_46 { pt3dadd( 354.336, 526.433, 39.7536, 0.5338 ) }
    dend_46 { pt3dadd( 355.21, 527.029, 39.2227, 0.5084 ) }
    dend_46 { pt3dadd( 355.975, 527.307, 38.9141, 0.483 ) }
    dend_46 { pt3dadd( 356.816, 526.969, 38.3827, 0.483 ) }
    dend_46 { pt3dadd( 357.249, 525.976, 38.3211, 0.5592 ) }
    dend_46 { pt3dadd( 357.144, 525.105, 37.0062, 0.6102 ) }
    dend_46 { pt3dadd( 357.499, 524.182, 36.12, 0.6356 ) }
    dend_46 { pt3dadd( 357.29, 523.097, 36.1917, 0.5848 ) }
    dend_46 { pt3dadd( 357.792, 522.342, 36.8726, 0.5848 ) }
    dend_46 { pt3dadd( 358.786, 521.844, 36.6985, 0.5592 ) }
    dend_46 { pt3dadd( 359.688, 521.716, 36.9662, 0.5084 ) }
    dend_46 { pt3dadd( 359.85, 522.147, 34.844, 0.4322 ) }
    dend_46 { pt3dadd( 360.503, 521.73, 33.88, 0.4068 ) }
    dend_46 { pt3dadd( 360.453, 521.359, 35.0, 0.483 ) }
    dend_46 { pt3dadd( 359.826, 520.641, 35.56, 0.5592 ) }
    dend_46 { pt3dadd( 359.14, 519.985, 35.5572, 0.6356 ) }
    dend_46 { pt3dadd( 359.113, 519.042, 34.3165, 0.6356 ) }
    dend_46 { pt3dadd( 359.283, 518.567, 33.32, 0.6102 ) }
    dend_46 { pt3dadd( 359.673, 518.661, 31.0486, 0.5084 ) }
    dend_46 { pt3dadd( 359.118, 518.592, 28.9677, 0.4068 ) }
    dend_46 { pt3dadd( 359.062, 517.637, 27.6914, 0.3304 ) }
    dend_46 { pt3dadd( 359.184, 517.727, 25.2672, 0.305 ) }
    dend_46 { pt3dadd( 358.691, 517.509, 23.9232, 0.356 ) }
    dend_46 { pt3dadd( 358.253, 516.64, 23.4539, 0.4322 ) }
    dend_46 { pt3dadd( 357.64, 516.082, 24.36, 0.5338 ) }
    dend_46 { pt3dadd( 356.882, 516.154, 22.8004, 0.5592 ) }
    dend_46 { pt3dadd( 356.481, 517.031, 22.596, 0.6102 ) }
    dend_46 { pt3dadd( 356.329, 516.444, 21.215, 0.6356 ) }
    dend_46 { pt3dadd( 356.262, 515.466, 20.6651, 0.661 ) }
    dend_46 { pt3dadd( 356.927, 514.76, 20.16, 0.5848 ) }
    dend_46 { pt3dadd( 357.987, 514.704, 20.1555, 0.5592 ) }
    dend_46 { pt3dadd( 358.968, 515.018, 20.7522, 0.5848 ) }
    dend_46 { pt3dadd( 359.711, 515.492, 19.3063, 0.661 ) }
    dend_46 { pt3dadd( 360.683, 516.025, 19.3259, 0.6864 ) }
    dend_46 { pt3dadd( 361.527, 516.552, 19.3617, 0.6864 ) }
    dend_46 { pt3dadd( 362.408, 516.947, 19.2646, 0.7118 ) }
    dend_46 { pt3dadd( 363.434, 517.199, 19.061, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_46 { pt3dadd( 364.52, 517.308, 18.48, 0.7118 ) }
    dend_46 { pt3dadd( 365.278, 517.889, 18.2, 0.6102 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 2/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 299.536, 507.568, 50.0889, 0.7372 ) }
    dend_35 { pt3dadd( 299.115, 507.76, 50.9225, 0.305 ) }
    dend_35 { pt3dadd( 298.321, 507.631, 51.2644, 0.356 ) }
    dend_35 { pt3dadd( 297.623, 507.31, 50.405, 0.4068 ) }
    dend_35 { pt3dadd( 296.771, 507.25, 51.5276, 0.5084 ) }
    dend_35 { pt3dadd( 295.723, 507.135, 51.8398, 0.5592 ) }
    dend_35 { pt3dadd( 294.991, 506.723, 52.402, 0.6102 ) }
    dend_35 { pt3dadd( 293.903, 506.563, 52.8651, 0.5848 ) }
    dend_35 { pt3dadd( 293.063, 506.156, 51.8, 0.5084 ) }
    dend_35 { pt3dadd( 291.991, 506.188, 52.3314, 0.4322 ) }
    dend_35 { pt3dadd( 291.019, 506.21, 53.2423, 0.3814 ) }
    dend_35 { pt3dadd( 290.352, 505.538, 53.8244, 0.3814 ) }
    dend_35 { pt3dadd( 289.455, 505.125, 53.24, 0.356 ) }
    dend_35 { pt3dadd( 288.552, 504.753, 53.5643, 0.3304 ) }
    dend_35 { pt3dadd( 287.612, 504.733, 54.6095, 0.305 ) }
    dend_35 { pt3dadd( 286.857, 504.275, 55.16, 0.3304 ) }
    dend_35 { pt3dadd( 286.063, 504.173, 54.5398, 0.3304 ) }
    dend_35 { pt3dadd( 285.54, 503.818, 56.2391, 0.356 ) }
    dend_35 { pt3dadd( 284.579, 504.037, 55.195, 0.3304 ) }
    dend_35 { pt3dadd( 283.711, 503.818, 56.0017, 0.356 ) }
    dend_35 { pt3dadd( 283.047, 503.598, 55.44, 0.356 ) }
    dend_35 { pt3dadd( 282.483, 503.651, 57.4221, 0.4068 ) }
    dend_35 { pt3dadd( 281.512, 503.247, 57.5002, 0.4322 ) }
    dend_35 { pt3dadd( 281.183, 502.674, 58.5164, 0.4576 ) }
    dend_35 { pt3dadd( 280.258, 502.531, 57.0721, 0.4576 ) }
    dend_35 { pt3dadd( 279.201, 502.496, 56.28, 0.4322 ) }
    dend_35 { pt3dadd( 278.27, 502.495, 57.6178, 0.3814 ) }
    dend_35 { pt3dadd( 277.293, 502.229, 57.1203, 0.3304 ) }
    dend_35 { pt3dadd( 276.552, 501.935, 58.184, 0.305 ) }
    dend_35 { pt3dadd( 275.918, 501.987, 58.7737, 0.356 ) }
    dend_35 { pt3dadd( 274.864, 501.905, 58.5236, 0.4068 ) }
    dend_35 { pt3dadd( 273.884, 501.644, 58.2896, 0.483 ) }
    dend_35 { pt3dadd( 272.977, 501.244, 58.7961, 0.5084 ) }
    dend_35 { pt3dadd( 272.072, 500.667, 58.2498, 0.5084 ) }
    dend_35 { pt3dadd( 272.431, 500.348, 60.1591, 0.483 ) }
    dend_35 { pt3dadd( 271.581, 499.926, 59.2679, 0.4322 ) }
    dend_35 { pt3dadd( 270.822, 499.222, 58.3332, 0.4322 ) }
    dend_35 { pt3dadd( 270.664, 498.154, 58.7395, 0.4322 ) }
    dend_35 { pt3dadd( 269.805, 497.612, 59.2668, 0.4576 ) }
    dend_35 { pt3dadd( 269.007, 496.946, 59.7677, 0.4576 ) }
    dend_35 { pt3dadd( 268.158, 496.315, 59.4462, 0.4322 ) }
    dend_35 { pt3dadd( 267.606, 495.391, 59.5862, 0.4322 ) }
    dend_35 { pt3dadd( 267.181, 494.826, 61.2996, 0.4322 ) }
    dend_35 { pt3dadd( 266.187, 494.666, 60.415, 0.4576 ) }
    dend_35 { pt3dadd( 265.401, 494.253, 60.9185, 0.4068 ) }
    dend_35 { pt3dadd( 264.475, 493.633, 60.9252, 0.3304 ) }
    dend_35 { pt3dadd( 263.363, 493.518, 61.04, 0.2796 ) }
    dend_35 { pt3dadd( 262.712, 493.204, 62.4168, 0.2796 ) }
    dend_35 { pt3dadd( 261.825, 492.616, 62.1939, 0.3304 ) }
    dend_35 { pt3dadd( 260.805, 492.422, 62.0427, 0.3304 ) }
    dend_35 { pt3dadd( 260.036, 491.805, 61.6829, 0.3304 ) }
    dend_35 { pt3dadd( 259.511, 491.233, 62.4473, 0.305 ) }
    dend_35 { pt3dadd( 258.537, 490.888, 63.0, 0.3304 ) }
    dend_35 { pt3dadd( 257.59, 490.392, 62.9446, 0.356 ) }
    dend_35 { pt3dadd( 256.777, 489.717, 63.3069, 0.3814 ) }
    dend_35 { pt3dadd( 255.951, 489.134, 63.4012, 0.356 ) }
    dend_35 { pt3dadd( 255.043, 488.938, 63.28, 0.3304 ) }
    dend_35 { pt3dadd( 254.06, 488.587, 63.7081, 0.305 ) }
    dend_35 { pt3dadd( 253.112, 488.229, 64.3062, 0.3304 ) }
    dend_35 { pt3dadd( 252.264, 487.683, 63.3763, 0.3814 ) }
    dend_35 { pt3dadd( 251.408, 486.976, 63.4872, 0.4068 ) }
    dend_35 { pt3dadd( 250.97, 486.325, 63.1512, 0.3814 ) }
    dend_35 { pt3dadd( 249.956, 485.963, 63.56, 0.305 ) }
    dend_35 { pt3dadd( 249.016, 485.446, 63.5452, 0.2796 ) }
    dend_35 { pt3dadd( 248.218, 485.056, 62.1911, 0.305 ) }
    dend_35 { pt3dadd( 247.625, 484.947, 63.84, 0.3814 ) }
    dend_35 { pt3dadd( 247.031, 484.827, 62.1869, 0.4068 ) }
    dend_35 { pt3dadd( 246.089, 484.426, 63.2153, 0.3814 ) }
    dend_35 { pt3dadd( 245.17, 483.867, 63.56, 0.305 ) }
    dend_35 { pt3dadd( 244.569, 483.226, 63.56, 0.2796 ) }
    dend_35 { pt3dadd( 243.549, 482.952, 63.0711, 0.2796 ) }
    dend_35 { pt3dadd( 243.047, 482.31, 62.0942, 0.3304 ) }
    dend_35 { pt3dadd( 242.22, 481.627, 61.1713, 0.3304 ) }
    dend_35 { pt3dadd( 241.388, 480.891, 61.6067, 0.356 ) }
    dend_35 { pt3dadd( 240.657, 480.02, 61.7551, 0.3304 ) }
    dend_35 { pt3dadd( 239.901, 479.171, 61.88, 0.3304 ) }
    dend_35 { pt3dadd( 239.14, 478.421, 61.9898, 0.3304 ) }
    dend_35 { pt3dadd( 239.209, 477.734, 62.72, 0.356 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 80/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 299.536, 507.568, 50.0889, 0.7372 ) }
    dend_32 { pt3dadd( 299.6, 507.018, 49.6983, 0.4068 ) }
    dend_32 { pt3dadd( 298.84, 506.397, 49.1372, 0.4576 ) }
    dend_32 { pt3dadd( 298.344, 506.185, 46.8532, 0.5084 ) }
    dend_32 { pt3dadd( 297.7, 506.06, 48.4943, 0.5084 ) }
    dend_32 { pt3dadd( 296.813, 505.624, 49.0372, 0.4576 ) }
    dend_32 { pt3dadd( 295.952, 505.299, 49.002, 0.3814 ) }
    dend_32 { pt3dadd( 295.224, 504.814, 48.4568, 0.3814 ) }
    dend_32 { pt3dadd( 294.269, 504.233, 48.1664, 0.4322 ) }
    dend_32 { pt3dadd( 293.43, 503.627, 48.4968, 0.5592 ) }
    dend_32 { pt3dadd( 292.672, 503.017, 47.7868, 0.6102 ) }
    dend_32 { pt3dadd( 291.702, 502.571, 47.9111, 0.6102 ) }
    dend_32 { pt3dadd( 290.958, 502.113, 49.019, 0.5338 ) }
    dend_32 { pt3dadd( 290.263, 501.415, 48.9653, 0.483 ) }
    dend_32 { pt3dadd( 289.723, 500.636, 47.8892, 0.4576 ) }
    dend_32 { pt3dadd( 289.036, 500.269, 46.6774, 0.4576 ) }
    dend_32 { pt3dadd( 288.636, 499.435, 46.7558, 0.4322 ) }
    dend_32 { pt3dadd( 288.031, 499.11, 44.9313, 0.3814 ) }
    dend_32 { pt3dadd( 287.046, 498.771, 45.08, 0.356 ) }
    dend_32 { pt3dadd( 286.173, 498.07, 45.0002, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( 285.694, 497.717, 45.92, 0.4322 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 317.001, 487.344, 44.52, 0.7372 ) }
    dend_29 { pt3dadd( 316.461, 487.29, 44.4321, 0.3814 ) }
    dend_29 { pt3dadd( 316.302, 486.408, 44.3268, 0.356 ) }
    dend_29 { pt3dadd( 315.798, 485.658, 44.196, 0.4068 ) }
    dend_29 { pt3dadd( 315.152, 485.047, 42.7806, 0.5084 ) }
    dend_29 { pt3dadd( 314.245, 484.52, 42.5684, 0.5592 ) }
    dend_29 { pt3dadd( 313.42, 483.901, 42.5919, 0.5338 ) }
    dend_29 { pt3dadd( 312.657, 483.222, 43.0959, 0.4576 ) }
    dend_29 { pt3dadd( 311.716, 482.722, 42.2954, 0.4576 ) }
    dend_29 { pt3dadd( 310.677, 482.3, 42.7476, 0.483 ) }
    dend_29 { pt3dadd( 309.909, 481.6, 42.84, 0.5592 ) }
    dend_29 { pt3dadd( 309.863, 480.649, 43.5789, 0.5848 ) }
    dend_29 { pt3dadd( 309.076, 480.361, 42.8366, 0.6356 ) }
    dend_29 { pt3dadd( 308.587, 479.822, 43.7923, 0.6356 ) }
    dend_29 { pt3dadd( 307.936, 479.45, 42.6516, 0.6102 ) }
    dend_29 { pt3dadd( 307.257, 479.145, 42.5048, 0.5592 ) }
    dend_29 { pt3dadd( 306.258, 478.89, 42.3618, 0.5338 ) }
    dend_29 { pt3dadd( 305.63, 478.209, 41.44, 0.5338 ) }
    dend_29 { pt3dadd( 304.846, 477.62, 42.056, 0.5084 ) }
    dend_29 { pt3dadd( 303.979, 477.292, 41.7424, 0.483 ) }
    dend_29 { pt3dadd( 303.086, 476.911, 42.2506, 0.4576 ) }
    dend_29 { pt3dadd( 302.805, 476.672, 40.327, 0.483 ) }
    dend_29 { pt3dadd( 302.087, 476.398, 40.8859, 0.5084 ) }
    dend_29 { pt3dadd( 301.577, 475.648, 40.1332, 0.5338 ) }
    dend_29 { pt3dadd( 301.064, 475.141, 38.7271, 0.5084 ) }
    dend_29 { pt3dadd( 300.522, 474.453, 39.7855, 0.4576 ) }
    dend_29 { pt3dadd( 299.658, 473.881, 39.5298, 0.3814 ) }
    dend_29 { pt3dadd( 299.142, 473.209, 39.3862, 0.305 ) }
    dend_29 { pt3dadd( 298.583, 472.3, 39.2, 0.2542 ) }
    dend_29 { pt3dadd( 298.194, 471.424, 38.6904, 0.2288 ) }
    dend_29 { pt3dadd( 297.748, 470.758, 37.0678, 0.2542 ) }
    dend_29 { pt3dadd( 297.193, 470.136, 37.4133, 0.305 ) }
    dend_29 { pt3dadd( 296.762, 469.294, 37.0731, 0.356 ) }
    dend_29 { pt3dadd( 296.395, 468.604, 36.4221, 0.3814 ) }
    dend_29 { pt3dadd( 295.998, 467.859, 36.892, 0.356 ) }
    dend_29 { pt3dadd( 295.279, 467.117, 36.589, 0.356 ) }
    dend_29 { pt3dadd( 294.651, 466.397, 36.6506, 0.356 ) }
    dend_29 { pt3dadd( 294.461, 465.529, 35.3158, 0.4068 ) }
    dend_29 { pt3dadd( 293.926, 464.888, 34.8678, 0.4322 ) }
    dend_29 { pt3dadd( 293.13, 464.464, 35.373, 0.483 ) }
    dend_29 { pt3dadd( 292.322, 463.789, 35.5928, 0.5338 ) }
    dend_29 { pt3dadd( 291.719, 463.144, 35.068, 0.5592 ) }
    dend_29 { pt3dadd( 291.555, 462.377, 34.9185, 0.5084 ) }
    dend_29 { pt3dadd( 291.175, 461.506, 34.0925, 0.4068 ) }
    dend_29 { pt3dadd( 291.363, 460.672, 33.0394, 0.356 ) }
    dend_29 { pt3dadd( 291.194, 459.703, 32.774, 0.3814 ) }
    dend_29 { pt3dadd( 290.224, 459.774, 32.8062, 0.4322 ) }
    dend_29 { pt3dadd( 289.715, 458.88, 32.5175, 0.483 ) }
    dend_29 { pt3dadd( 289.545, 457.794, 32.6556, 0.5084 ) }
    dend_29 { pt3dadd( 289.065, 456.852, 32.1023, 0.5338 ) }
    dend_29 { pt3dadd( 288.554, 455.997, 31.36, 0.5084 ) }
    dend_29 { pt3dadd( 288.311, 455.011, 31.5591, 0.5084 ) }
    dend_29 { pt3dadd( 288.478, 454.178, 30.8571, 0.5084 ) }
    dend_29 { pt3dadd( 288.248, 453.557, 30.2646, 0.5338 ) }
    dend_29 { pt3dadd( 287.932, 452.542, 30.8, 0.5084 ) }
    dend_29 { pt3dadd( 287.222, 451.736, 31.3051, 0.4576 ) }
    dend_29 { pt3dadd( 286.597, 451.113, 29.96, 0.4068 ) }
    dend_29 { pt3dadd( 286.248, 450.235, 30.4604, 0.356 ) }
    dend_29 { pt3dadd( 285.87, 449.753, 29.7802, 0.3304 ) }
    dend_29 { pt3dadd( 285.646, 448.701, 29.96, 0.2796 ) }
    dend_29 { pt3dadd( 285.311, 447.876, 29.9734, 0.2796 ) }
    dend_29 { pt3dadd( 284.455, 447.429, 30.4548, 0.2796 ) }
    dend_29 { pt3dadd( 283.647, 446.875, 29.2407, 0.305 ) }
    dend_29 { pt3dadd( 283.11, 446.495, 28.4715, 0.305 ) }
    dend_29 { pt3dadd( 282.233, 445.962, 28.5286, 0.3304 ) }
    dend_29 { pt3dadd( 281.466, 445.478, 28.0266, 0.3814 ) }
    dend_29 { pt3dadd( 280.56, 445.0, 27.6959, 0.4068 ) }
    dend_29 { pt3dadd( 279.779, 444.33, 26.9307, 0.3814 ) }
    dend_29 { pt3dadd( 278.935, 443.736, 27.4089, 0.3304 ) }
    dend_29 { pt3dadd( 278.22, 442.978, 27.7374, 0.3304 ) }
    dend_29 { pt3dadd( 277.795, 442.506, 28.4446, 0.3814 ) }
    dend_29 { pt3dadd( 277.447, 441.64, 29.0114, 0.4322 ) }
    dend_29 { pt3dadd( 276.527, 441.428, 28.8982, 0.4322 ) }
    dend_29 { pt3dadd( 275.584, 441.352, 28.5852, 0.4322 ) }
    dend_29 { pt3dadd( 274.577, 441.479, 28.2736, 0.4322 ) }
    dend_29 { pt3dadd( 273.854, 442.156, 28.4421, 0.483 ) }
    dend_29 { pt3dadd( 272.895, 441.776, 28.0, 0.4576 ) }
    dend_29 { pt3dadd( 272.361, 440.832, 28.0, 0.4322 ) }
    dend_29 { pt3dadd( 271.763, 440.754, 26.8554, 0.3814 ) }
    dend_29 { pt3dadd( 270.899, 440.135, 26.2284, 0.4068 ) }
    dend_29 { pt3dadd( 270.03, 439.535, 26.7963, 0.4576 ) }
    dend_29 { pt3dadd( 269.111, 439.551, 26.9013, 0.5084 ) }
    dend_29 { pt3dadd( 268.273, 439.004, 27.9012, 0.5084 ) }
    dend_29 { pt3dadd( 267.496, 438.432, 28.0249, 0.4576 ) }
    dend_29 { pt3dadd( 266.813, 437.865, 27.2367, 0.4068 ) }
    dend_29 { pt3dadd( 266.202, 436.98, 27.6822, 0.3814 ) }
    dend_29 { pt3dadd( 265.807, 436.223, 26.88, 0.356 ) }
    dend_29 { pt3dadd( 265.628, 435.978, 24.6501, 0.305 ) }
    dend_29 { pt3dadd( 264.716, 435.978, 23.5124, 0.2542 ) }
    dend_29 { pt3dadd( 264.034, 435.369, 22.4935, 0.2288 ) }
    dend_29 { pt3dadd( 263.764, 434.72, 23.2176, 0.2288 ) }
    dend_29 { pt3dadd( 262.626, 434.712, 23.3198, 0.2288 ) }
    dend_29 { pt3dadd( 262.068, 433.878, 24.0811, 0.2288 ) }
    dend_29 { pt3dadd( 261.247, 433.402, 25.1339, 0.2288 ) }
    dend_29 { pt3dadd( 260.602, 433.118, 26.4348, 0.2288 ) }
    dend_29 { pt3dadd( 259.968, 432.916, 28.0748, 0.2542 ) }
    dend_29 { pt3dadd( 258.989, 432.461, 28.3906, 0.2796 ) }
    dend_29 { pt3dadd( 258.168, 432.0, 29.5254, 0.3304 ) }
    dend_29 { pt3dadd( 257.353, 431.746, 28.6969, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_29 { pt3dadd( 256.367, 431.504, 29.5579, 0.3814 ) }
    dend_29 { pt3dadd( 255.691, 431.837, 29.045, 0.3814 ) }
    dend_29 { pt3dadd( 255.451, 431.049, 28.0493, 0.4576 ) }
    dend_29 { pt3dadd( 254.428, 430.716, 28.495, 0.4576 ) }
    dend_29 { pt3dadd( 253.689, 430.83, 27.7959, 0.5084 ) }
    dend_29 { pt3dadd( 252.896, 430.976, 27.6279, 0.5084 ) }
    dend_29 { pt3dadd( 251.974, 430.677, 26.8038, 0.5338 ) }
    dend_29 { pt3dadd( 251.256, 430.038, 25.9571, 0.5338 ) }
    dend_29 { pt3dadd( 250.415, 429.485, 25.4747, 0.483 ) }
    dend_29 { pt3dadd( 249.342, 429.642, 25.2599, 0.4068 ) }
    dend_29 { pt3dadd( 248.304, 429.524, 24.92, 0.305 ) }
    dend_29 { pt3dadd( 247.165, 429.426, 24.9466, 0.2542 ) }
    dend_29 { pt3dadd( 246.268, 429.229, 26.2049, 0.2288 ) }
    dend_29 { pt3dadd( 245.168, 429.174, 25.8656, 0.2542 ) }
    dend_29 { pt3dadd( 244.056, 429.221, 25.2991, 0.305 ) }
    dend_29 { pt3dadd( 243.047, 429.445, 25.9473, 0.356 ) }
    dend_29 { pt3dadd( 242.3, 429.343, 24.7778, 0.356 ) }
    dend_29 { pt3dadd( 241.445, 429.043, 25.0155, 0.3814 ) }
    dend_29 { pt3dadd( 240.811, 429.572, 26.04, 0.4322 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 317.001, 487.344, 44.52, 0.7372 ) }
    dend_28 { pt3dadd( 317.593, 486.84, 42.7034, 0.5592 ) }
    dend_28 { pt3dadd( 318.231, 486.214, 43.2118, 0.5592 ) }
    dend_28 { pt3dadd( 318.352, 485.363, 42.4225, 0.5084 ) }
    dend_28 { pt3dadd( 318.622, 484.294, 42.173, 0.5592 ) }
    dend_28 { pt3dadd( 319.199, 483.331, 42.1579, 0.5592 ) }
    dend_28 { pt3dadd( 319.577, 482.433, 42.6056, 0.5338 ) }
    dend_28 { pt3dadd( 320.399, 481.817, 42.4306, 0.483 ) }
    dend_28 { pt3dadd( 320.771, 480.855, 42.3133, 0.483 ) }
    dend_28 { pt3dadd( 321.017, 480.14, 40.9833, 0.5338 ) }
    dend_28 { pt3dadd( 320.7, 479.346, 40.1282, 0.5592 ) }
    dend_28 { pt3dadd( 320.456, 478.561, 39.7382, 0.5338 ) }
    dend_28 { pt3dadd( 320.662, 477.634, 40.868, 0.4576 ) }
    dend_28 { pt3dadd( 320.637, 476.767, 39.6564, 0.4322 ) }
    dend_28 { pt3dadd( 320.836, 475.743, 39.5368, 0.4576 ) }
    dend_28 { pt3dadd( 321.29, 474.842, 39.7992, 0.483 ) }
    dend_28 { pt3dadd( 321.378, 473.791, 39.0306, 0.4576 ) }
    dend_28 { pt3dadd( 321.909, 472.997, 39.7922, 0.356 ) }
    dend_28 { pt3dadd( 322.626, 472.197, 40.04, 0.2796 ) }
    dend_28 { pt3dadd( 322.797, 471.251, 39.2554, 0.2288 ) }
    dend_28 { pt3dadd( 322.577, 470.393, 38.08, 0.2288 ) }
    dend_28 { pt3dadd( 323.213, 469.717, 37.1288, 0.2288 ) }
    dend_28 { pt3dadd( 323.392, 469.237, 35.0437, 0.2288 ) }
    dend_28 { pt3dadd( 323.459, 468.491, 33.2469, 0.2542 ) }
    dend_28 { pt3dadd( 324.203, 467.928, 31.9284, 0.2796 ) }
    dend_28 { pt3dadd( 324.215, 467.313, 30.0205, 0.305 ) }
    dend_28 { pt3dadd( 324.111, 466.322, 29.4025, 0.2796 ) }
    dend_28 { pt3dadd( 324.111, 465.521, 31.017, 0.2796 ) }
    dend_28 { pt3dadd( 324.456, 465.021, 32.8832, 0.305 ) }
    dend_28 { pt3dadd( 325.24, 465.091, 34.1824, 0.356 ) }
    dend_28 { pt3dadd( 325.587, 464.421, 35.0, 0.3814 ) }
    dend_28 { pt3dadd( 325.428, 463.576, 35.0067, 0.3814 ) }
    dend_28 { pt3dadd( 326.052, 463.185, 34.4296, 0.4068 ) }
    dend_28 { pt3dadd( 326.73, 462.749, 33.518, 0.4068 ) }
    dend_28 { pt3dadd( 327.551, 462.163, 32.4335, 0.3814 ) }
    dend_28 { pt3dadd( 328.566, 461.739, 31.8044, 0.305 ) }
    dend_28 { pt3dadd( 329.365, 461.375, 32.1639, 0.305 ) }
    dend_28 { pt3dadd( 330.357, 461.197, 32.2244, 0.3814 ) }
    dend_28 { pt3dadd( 331.402, 461.094, 32.0673, 0.5338 ) }
    dend_28 { pt3dadd( 332.248, 460.55, 32.0079, 0.6356 ) }
    dend_28 { pt3dadd( 332.472, 459.544, 31.3393, 0.661 ) }
    dend_28 { pt3dadd( 332.974, 458.698, 30.8034, 0.6102 ) }
    dend_28 { pt3dadd( 333.261, 458.053, 31.299, 0.5338 ) }
    dend_28 { pt3dadd( 333.818, 457.346, 31.1424, 0.483 ) }
    dend_28 { pt3dadd( 334.323, 456.703, 30.1456, 0.483 ) }
    dend_28 { pt3dadd( 334.505, 455.78, 29.7136, 0.483 ) }
    dend_28 { pt3dadd( 334.39, 454.743, 30.7555, 0.4576 ) }
    dend_28 { pt3dadd( 334.505, 453.747, 29.68, 0.3814 ) }
    dend_28 { pt3dadd( 335.051, 453.087, 28.6398, 0.356 ) }
    dend_28 { pt3dadd( 335.534, 452.439, 29.9379, 0.356 ) }
    dend_28 { pt3dadd( 336.099, 451.484, 30.2537, 0.3814 ) }
    dend_28 { pt3dadd( 336.449, 450.704, 30.2226, 0.3814 ) }
    dend_28 { pt3dadd( 336.614, 449.854, 29.4053, 0.3814 ) }
    dend_28 { pt3dadd( 336.699, 448.956, 29.687, 0.3814 ) }
    dend_28 { pt3dadd( 336.691, 447.921, 29.206, 0.3814 ) }
    dend_28 { pt3dadd( 336.834, 447.211, 29.6467, 0.4322 ) }
    dend_28 { pt3dadd( 336.939, 446.379, 28.4466, 0.4576 ) }
    dend_28 { pt3dadd( 336.944, 445.454, 29.0298, 0.4576 ) }
    dend_28 { pt3dadd( 337.136, 444.366, 29.1127, 0.356 ) }
    dend_28 { pt3dadd( 336.785, 443.495, 28.4127, 0.2796 ) }
    dend_28 { pt3dadd( 336.68, 442.974, 26.6, 0.2288 ) }
    dend_28 { pt3dadd( 337.136, 442.112, 26.3295, 0.2542 ) }
    dend_28 { pt3dadd( 337.749, 441.439, 26.0574, 0.305 ) }
    dend_28 { pt3dadd( 338.439, 440.948, 27.6483, 0.356 ) }
    dend_28 { pt3dadd( 339.432, 440.892, 27.7978, 0.3814 ) }
    dend_28 { pt3dadd( 340.479, 440.58, 27.5374, 0.4068 ) }
    dend_28 { pt3dadd( 341.359, 440.355, 28.6521, 0.4322 ) }
    dend_28 { pt3dadd( 342.268, 440.227, 28.3494, 0.4576 ) }
    dend_28 { pt3dadd( 343.021, 439.617, 27.8578, 0.4068 ) }
    dend_28 { pt3dadd( 343.82, 439.201, 28.28, 0.4068 ) }
    dend_28 { pt3dadd( 344.759, 438.699, 27.5374, 0.3814 ) }
    dend_28 { pt3dadd( 345.339, 437.887, 27.1813, 0.4068 ) }
    dend_28 { pt3dadd( 345.964, 437.096, 27.2821, 0.356 ) }
    dend_28 { pt3dadd( 346.628, 436.374, 26.8089, 0.3814 ) }
    dend_28 { pt3dadd( 347.203, 435.536, 26.88, 0.4068 ) }
    dend_28 { pt3dadd( 347.266, 434.486, 27.23, 0.4576 ) }
    dend_28 { pt3dadd( 347.525, 433.474, 27.44, 0.4322 ) }
    dend_28 { pt3dadd( 348.464, 433.121, 27.6802, 0.4068 ) }
    dend_28 { pt3dadd( 349.296, 433.244, 26.546, 0.4068 ) }
    dend_28 { pt3dadd( 349.861, 432.622, 26.4188, 0.4068 ) }
    dend_28 { pt3dadd( 350.478, 431.917, 26.5093, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( 351.372, 431.313, 26.0358, 0.356 ) }
    dend_28 { pt3dadd( 352.298, 430.726, 25.8437, 0.356 ) }
    dend_28 { pt3dadd( 352.699, 429.946, 25.5984, 0.3814 ) }
    dend_28 { pt3dadd( 352.96, 429.314, 24.4446, 0.4576 ) }
    dend_28 { pt3dadd( 353.714, 428.504, 23.9565, 0.483 ) }
    dend_28 { pt3dadd( 354.41, 427.681, 23.8, 0.5084 ) }
    dend_28 { pt3dadd( 354.908, 426.911, 24.0573, 0.483 ) }
    dend_28 { pt3dadd( 355.902, 426.524, 23.9582, 0.5338 ) }
    dend_28 { pt3dadd( 356.702, 425.781, 23.2756, 0.5084 ) }
    dend_28 { pt3dadd( 357.3, 425.11, 24.1828, 0.483 ) }
    dend_28 { pt3dadd( 358.093, 424.634, 24.4583, 0.4068 ) }
    dend_28 { pt3dadd( 358.59, 424.221, 22.7074, 0.3814 ) }
    dend_28 { pt3dadd( 359.428, 423.877, 23.2229, 0.3814 ) }
    dend_28 { pt3dadd( 360.409, 423.834, 22.0349, 0.3304 ) }
    dend_28 { pt3dadd( 361.367, 423.509, 22.5128, 0.2796 ) }
    dend_28 { pt3dadd( 362.014, 423.119, 24.068, 0.2542 ) }
    dend_28 { pt3dadd( 362.807, 423.091, 23.0012, 0.356 ) }
    dend_28 { pt3dadd( 363.336, 422.361, 22.6355, 0.5338 ) }
    dend_28 { pt3dadd( 364.109, 421.722, 21.5852, 0.7118 ) }
    dend_28 { pt3dadd( 364.935, 421.015, 21.7683, 0.788 ) }
    dend_28 { pt3dadd( 365.628, 420.591, 21.2954, 0.7372 ) }
    dend_28 { pt3dadd( 366.223, 419.72, 21.56, 0.661 ) }
    dend_28 { pt3dadd( 366.446, 418.849, 20.3249, 0.6102 ) }
    dend_28 { pt3dadd( 367.032, 417.964, 20.844, 0.661 ) }
    dend_28 { pt3dadd( 367.618, 417.338, 21.0137, 0.6864 ) }
    dend_28 { pt3dadd( 368.54, 416.872, 21.8089, 0.7118 ) }
    dend_28 { pt3dadd( 369.106, 415.994, 21.8938, 0.661 ) }
    dend_28 { pt3dadd( 369.053, 414.877, 22.1561, 0.6356 ) }
    dend_28 { pt3dadd( 369.334, 413.823, 22.68, 0.5848 ) }
    dend_28 { pt3dadd( 369.873, 413.112, 23.5547, 0.5338 ) }
    dend_28 { pt3dadd( 370.224, 412.477, 23.0737, 0.5084 ) }
    dend_28 { pt3dadd( 371.007, 411.775, 22.4134, 0.5084 ) }
    dend_28 { pt3dadd( 371.685, 411.208, 22.1312, 0.5084 ) }
    dend_28 { pt3dadd( 372.167, 410.301, 21.28, 0.4576 ) }
    dend_28 { pt3dadd( 373.064, 409.8, 20.746, 0.4576 ) }
    dend_28 { pt3dadd( 373.404, 409.036, 20.9983, 0.5338 ) }
    dend_28 { pt3dadd( 374.129, 408.491, 22.5319, 0.6356 ) }
    dend_28 { pt3dadd( 375.015, 407.994, 22.3742, 0.6356 ) }
    dend_28 { pt3dadd( 375.379, 407.521, 20.4896, 0.5338 ) }
    dend_28 { pt3dadd( 376.095, 406.803, 19.7008, 0.4068 ) }
    dend_28 { pt3dadd( 377.141, 406.578, 19.9676, 0.3304 ) }
    dend_28 { pt3dadd( 377.749, 405.94, 20.0908, 0.356 ) }
    dend_28 { pt3dadd( 378.417, 406.169, 21.149, 0.4068 ) }
    dend_28 { pt3dadd( 379.328, 406.151, 21.4267, 0.483 ) }
    dend_28 { pt3dadd( 379.693, 405.777, 20.16, 0.483 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 45/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 326.153, 498.784, 42.28, 0.483 ) }
    dend_26 { pt3dadd( 326.398, 500.058, 42.5348, 0.4322 ) }
    dend_26 { pt3dadd( 327.101, 500.429, 41.132, 0.3814 ) }
    dend_26 { pt3dadd( 327.65, 501.061, 39.6819, 0.3814 ) }
    dend_26 { pt3dadd( 328.68, 501.397, 38.9575, 0.3814 ) }
    dend_26 { pt3dadd( 329.081, 502.142, 40.0089, 0.4068 ) }
    dend_26 { pt3dadd( 329.511, 502.777, 38.9752, 0.4068 ) }
    dend_26 { pt3dadd( 329.199, 503.212, 37.6272, 0.4322 ) }
    dend_26 { pt3dadd( 328.957, 504.224, 37.3716, 0.4322 ) }
    dend_26 { pt3dadd( 328.825, 505.322, 37.816, 0.483 ) }
    dend_26 { pt3dadd( 328.619, 506.225, 37.3531, 0.4576 ) }
    dend_26 { pt3dadd( 328.438, 507.219, 36.5422, 0.4068 ) }
    dend_26 { pt3dadd( 328.526, 508.324, 36.6041, 0.3304 ) }
    dend_26 { pt3dadd( 328.223, 509.356, 36.4221, 0.3304 ) }
    dend_26 { pt3dadd( 328.434, 510.026, 34.7698, 0.3814 ) }
    dend_26 { pt3dadd( 328.628, 510.796, 33.1248, 0.4576 ) }
    dend_26 { pt3dadd( 328.455, 510.123, 31.6666, 0.5592 ) }
    dend_26 { pt3dadd( 327.388, 509.883, 31.7596, 0.6356 ) }
    dend_26 { pt3dadd( 326.803, 510.643, 32.5581, 0.6864 ) }
    dend_26 { pt3dadd( 326.039, 511.025, 32.7625, 0.6102 ) }
    dend_26 { pt3dadd( 325.23, 511.14, 31.4726, 0.5338 ) }
    dend_26 { pt3dadd( 324.895, 511.316, 29.2286, 0.4576 ) }
    dend_26 { pt3dadd( 325.021, 512.151, 27.7281, 0.483 ) }
    dend_26 { pt3dadd( 325.881, 512.702, 27.5363, 0.5084 ) }
    dend_26 { pt3dadd( 326.812, 512.84, 27.2787, 0.5338 ) }
    dend_26 { pt3dadd( 327.635, 512.741, 26.5485, 0.5338 ) }
    dend_26 { pt3dadd( 327.973, 512.578, 24.9886, 0.5592 ) }
    dend_26 { pt3dadd( 328.607, 512.512, 23.8266, 0.5592 ) }
    dend_26 { pt3dadd( 328.889, 513.07, 22.1743, 0.5848 ) }
    dend_26 { pt3dadd( 328.577, 514.103, 21.7403, 0.5848 ) }
    dend_26 { pt3dadd( 328.714, 514.597, 20.0752, 0.6102 ) }
    dend_26 { pt3dadd( 329.125, 515.299, 20.2894, 0.5848 ) }
    dend_26 { pt3dadd( 329.7, 515.935, 20.1197, 0.5592 ) }
    dend_26 { pt3dadd( 330.059, 516.481, 19.9867, 0.5592 ) }
    dend_26 { pt3dadd( 330.958, 517.088, 20.16, 0.5848 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 326.153, 498.784, 42.28, 0.483 ) }
    dend_17 { pt3dadd( 326.762, 498.132, 42.6, 0.5848 ) }
    dend_17 { pt3dadd( 327.496, 497.873, 43.4, 0.5592 ) }
    dend_17 { pt3dadd( 328.13, 497.086, 43.7746, 0.6102 ) }
    dend_17 { pt3dadd( 329.051, 496.61, 43.8668, 0.6356 ) }
    // Section: apic_25, id: apic_25, parent: apic_5 (entry count 85/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 326.449, 502.843, 58.5511, 0.5338 ) }
    apic_25 { pt3dadd( 326.908, 502.794, 59.5566, 0.3814 ) }
    apic_25 { pt3dadd( 327.755, 503.005, 59.7285, 0.4068 ) }
    apic_25 { pt3dadd( 328.175, 503.895, 61.1078, 0.4068 ) }
    apic_25 { pt3dadd( 329.217, 504.066, 61.1982, 0.356 ) }
    apic_25 { pt3dadd( 329.312, 504.872, 62.72, 0.3304 ) }
    apic_25 { pt3dadd( 329.877, 505.718, 63.4676, 0.3304 ) }
    apic_25 { pt3dadd( 330.985, 505.848, 63.3486, 0.4068 ) }
    apic_25 { pt3dadd( 332.103, 505.775, 63.8098, 0.5084 ) }
    apic_25 { pt3dadd( 333.054, 505.968, 64.68, 0.5338 ) }
    apic_25 { pt3dadd( 333.97, 506.33, 63.9671, 0.4576 ) }
    apic_25 { pt3dadd( 334.204, 507.059, 65.5088, 0.3304 ) }
    apic_25 { pt3dadd( 334.824, 507.873, 66.4465, 0.305 ) }
    apic_25 { pt3dadd( 335.797, 508.04, 67.2, 0.3814 ) }
    apic_25 { pt3dadd( 336.762, 508.05, 66.2388, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_25 { pt3dadd( 337.873, 508.23, 66.1651, 0.6102 ) }
    apic_25 { pt3dadd( 338.922, 508.519, 66.08, 0.6102 ) }
    apic_25 { pt3dadd( 339.665, 508.552, 65.7143, 0.5338 ) }
    apic_25 { pt3dadd( 340.407, 508.923, 67.2, 0.5084 ) }
    apic_25 { pt3dadd( 341.22, 509.419, 66.36, 0.5592 ) }
    apic_25 { pt3dadd( 342.277, 509.663, 65.9767, 0.661 ) }
    apic_25 { pt3dadd( 343.171, 509.824, 66.5132, 0.7118 ) }
    apic_25 { pt3dadd( 344.137, 509.862, 65.52, 0.6864 ) }
    apic_25 { pt3dadd( 344.86, 509.244, 66.36, 0.6102 ) }
    apic_25 { pt3dadd( 345.918, 509.201, 67.1303, 0.5338 ) }
    apic_25 { pt3dadd( 346.67, 509.652, 66.2701, 0.4576 ) }
    apic_25 { pt3dadd( 347.76, 509.868, 66.1987, 0.4322 ) }
    apic_25 { pt3dadd( 348.634, 509.831, 67.4744, 0.4576 ) }
    apic_25 { pt3dadd( 349.561, 509.908, 68.0039, 0.5338 ) }
    apic_25 { pt3dadd( 350.323, 509.995, 68.7053, 0.5592 ) }
    apic_25 { pt3dadd( 351.313, 510.357, 69.4596, 0.5848 ) }
    apic_25 { pt3dadd( 352.141, 510.898, 69.4322, 0.5848 ) }
    apic_25 { pt3dadd( 353.215, 510.85, 69.7001, 0.6356 ) }
    apic_25 { pt3dadd( 354.104, 511.405, 69.6494, 0.6864 ) }
    apic_25 { pt3dadd( 354.944, 512.042, 70.1554, 0.7372 ) }
    apic_25 { pt3dadd( 355.853, 512.179, 69.986, 0.7372 ) }
    apic_25 { pt3dadd( 356.679, 512.688, 70.7977, 0.661 ) }
    apic_25 { pt3dadd( 357.156, 512.408, 71.68, 0.5338 ) }
    apic_25 { pt3dadd( 357.171, 511.723, 69.9863, 0.4068 ) }
    apic_25 { pt3dadd( 357.888, 511.368, 70.0258, 0.356 ) }
    apic_25 { pt3dadd( 358.633, 511.139, 71.7262, 0.4068 ) }
    apic_25 { pt3dadd( 359.165, 511.493, 71.4104, 0.483 ) }
    apic_25 { pt3dadd( 359.884, 511.828, 71.4739, 0.5084 ) }
    apic_25 { pt3dadd( 360.546, 512.392, 71.4, 0.4322 ) }
    apic_25 { pt3dadd( 361.479, 512.147, 70.7238, 0.356 ) }
    apic_25 { pt3dadd( 361.37, 512.526, 72.7826, 0.305 ) }
    apic_25 { pt3dadd( 361.837, 512.287, 74.0289, 0.3304 ) }
    apic_25 { pt3dadd( 362.864, 512.212, 73.4073, 0.3814 ) }
    apic_25 { pt3dadd( 363.48, 512.766, 72.8694, 0.4322 ) }
    apic_25 { pt3dadd( 364.495, 512.793, 73.3807, 0.4322 ) }
    apic_25 { pt3dadd( 365.607, 512.726, 73.64, 0.4068 ) }
    apic_25 { pt3dadd( 366.744, 512.63, 73.64, 0.356 ) }
    apic_25 { pt3dadd( 367.885, 512.626, 73.7246, 0.3814 ) }
    apic_25 { pt3dadd( 368.941, 512.569, 74.0782, 0.4322 ) }
    apic_25 { pt3dadd( 369.895, 512.433, 73.4073, 0.5338 ) }
    apic_25 { pt3dadd( 370.927, 512.16, 74.335, 0.5848 ) }
    apic_25 { pt3dadd( 371.873, 512.333, 74.48, 0.5848 ) }
    apic_25 { pt3dadd( 372.543, 512.872, 75.7708, 0.5338 ) }
    apic_25 { pt3dadd( 373.414, 513.415, 76.1611, 0.4322 ) }
    apic_25 { pt3dadd( 374.486, 513.626, 76.8186, 0.3304 ) }
    apic_25 { pt3dadd( 375.133, 514.49, 77.2405, 0.305 ) }
    apic_25 { pt3dadd( 376.246, 514.571, 77.28, 0.3304 ) }
    apic_25 { pt3dadd( 377.296, 514.926, 77.4735, 0.3814 ) }
    apic_25 { pt3dadd( 377.95, 515.723, 77.5715, 0.356 ) }
    apic_25 { pt3dadd( 378.123, 516.673, 77.6684, 0.3304 ) }
    apic_25 { pt3dadd( 378.784, 517.533, 78.12, 0.3304 ) }
    apic_25 { pt3dadd( 379.812, 517.822, 78.12, 0.3304 ) }
    apic_25 { pt3dadd( 380.474, 518.606, 77.8506, 0.356 ) }
    apic_25 { pt3dadd( 380.893, 519.328, 79.2266, 0.3304 ) }
    apic_25 { pt3dadd( 380.766, 520.171, 80.4266, 0.3304 ) }
    apic_25 { pt3dadd( 381.88, 520.314, 80.6277, 0.2796 ) }
    apic_25 { pt3dadd( 382.886, 520.511, 80.64, 0.2542 ) }
    apic_25 { pt3dadd( 383.939, 520.838, 80.64, 0.2796 ) }
    apic_25 { pt3dadd( 384.269, 521.893, 80.64, 0.3814 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 59/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 326.449, 502.843, 58.5511, 0.5338 ) }
    apic_6 { pt3dadd( 326.771, 501.844, 57.8511, 0.7372 ) }
    apic_6 { pt3dadd( 327.241, 500.804, 57.8752, 0.7118 ) }
    apic_6 { pt3dadd( 327.669, 499.783, 58.5662, 0.661 ) }
    apic_6 { pt3dadd( 328.305, 498.841, 58.8462, 0.5848 ) }
    apic_6 { pt3dadd( 329.125, 498.046, 59.0114, 0.5338 ) }
    apic_6 { pt3dadd( 329.995, 497.357, 59.694, 0.5592 ) }
    apic_6 { pt3dadd( 330.586, 496.382, 59.8592, 0.661 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 319.137, 492.263, 52.1732, 0.5592 ) }
    apic_4 { pt3dadd( 318.493, 491.494, 52.36, 0.4068 ) }
    apic_4 { pt3dadd( 317.585, 491.006, 51.8, 0.356 ) }
    apic_4 { pt3dadd( 316.456, 490.887, 51.9711, 0.356 ) }
    apic_4 { pt3dadd( 315.372, 490.66, 52.0495, 0.4576 ) }
    apic_4 { pt3dadd( 314.416, 490.465, 51.7093, 0.5592 ) }
    apic_4 { pt3dadd( 313.526, 489.998, 50.871, 0.5848 ) }
    apic_4 { pt3dadd( 312.478, 489.716, 51.4436, 0.5592 ) }
    apic_4 { pt3dadd( 311.428, 489.45, 52.061, 0.5338 ) }
    apic_4 { pt3dadd( 310.471, 489.176, 52.0391, 0.5084 ) }
    apic_4 { pt3dadd( 309.442, 488.965, 51.5844, 0.4576 ) }
    apic_4 { pt3dadd( 308.641, 488.717, 52.36, 0.4068 ) }
    apic_4 { pt3dadd( 307.51, 488.693, 52.0467, 0.4068 ) }
    apic_4 { pt3dadd( 306.387, 488.807, 52.3323, 0.4068 ) }
    apic_4 { pt3dadd( 305.283, 488.784, 52.36, 0.4068 ) }
    apic_4 { pt3dadd( 304.421, 488.516, 51.3005, 0.4068 ) }
    apic_4 { pt3dadd( 303.482, 488.832, 51.5427, 0.4322 ) }
    apic_4 { pt3dadd( 302.629, 488.634, 50.8085, 0.4576 ) }
    apic_4 { pt3dadd( 301.795, 488.597, 50.1718, 0.4576 ) }
    apic_4 { pt3dadd( 301.084, 487.908, 50.143, 0.483 ) }
    apic_4 { pt3dadd( 300.48, 487.803, 51.3736, 0.5338 ) }
    apic_4 { pt3dadd( 299.516, 487.624, 51.24, 0.5338 ) }
    apic_4 { pt3dadd( 298.829, 487.071, 49.9534, 0.483 ) }
    apic_4 { pt3dadd( 298.101, 486.664, 50.5078, 0.3814 ) }
    apic_4 { pt3dadd( 297.073, 486.229, 50.4, 0.356 ) }
    apic_4 { pt3dadd( 296.085, 485.752, 50.68, 0.3814 ) }
    apic_4 { pt3dadd( 295.333, 485.414, 49.3595, 0.4322 ) }
    apic_4 { pt3dadd( 294.473, 485.275, 50.8225, 0.4322 ) }
    apic_4 { pt3dadd( 293.418, 484.962, 51.24, 0.3814 ) }
    apic_4 { pt3dadd( 292.381, 484.588, 50.974, 0.3304 ) }
    apic_4 { pt3dadd( 291.376, 484.565, 51.8, 0.305 ) }
    apic_4 { pt3dadd( 290.422, 484.367, 50.7707, 0.3304 ) }
    apic_4 { pt3dadd( 289.845, 483.691, 51.3103, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_4 { pt3dadd( 289.234, 482.945, 51.6124, 0.3814 ) }
    apic_4 { pt3dadd( 288.62, 482.022, 51.277, 0.356 ) }
    apic_4 { pt3dadd( 287.707, 481.448, 51.053, 0.305 ) }
    apic_4 { pt3dadd( 286.814, 481.049, 51.602, 0.2542 ) }
    apic_4 { pt3dadd( 285.878, 480.479, 52.0316, 0.2288 ) }
    apic_4 { pt3dadd( 284.813, 480.195, 52.0313, 0.2542 ) }
    apic_4 { pt3dadd( 283.913, 479.702, 52.2668, 0.305 ) }
    apic_4 { pt3dadd( 283.229, 479.566, 52.1514, 0.3814 ) }
    apic_4 { pt3dadd( 282.564, 479.165, 52.7187, 0.4322 ) }
    apic_4 { pt3dadd( 281.65, 478.671, 52.3303, 0.4576 ) }
    apic_4 { pt3dadd( 280.695, 478.557, 52.892, 0.4576 ) }
    apic_4 { pt3dadd( 280.141, 477.69, 53.9252, 0.4576 ) }
    apic_4 { pt3dadd( 279.236, 477.191, 54.2228, 0.4576 ) }
    apic_4 { pt3dadd( 278.421, 476.467, 54.5689, 0.4576 ) }
    apic_4 { pt3dadd( 277.499, 475.84, 54.6, 0.4322 ) }
    apic_4 { pt3dadd( 276.502, 475.29, 54.6305, 0.3814 ) }
    apic_4 { pt3dadd( 275.615, 474.81, 54.6888, 0.305 ) }
    apic_4 { pt3dadd( 274.518, 474.504, 54.6, 0.2796 ) }
    apic_4 { pt3dadd( 273.597, 473.845, 54.6, 0.2796 ) }
    apic_4 { pt3dadd( 272.718, 473.347, 54.6, 0.305 ) }
    apic_4 { pt3dadd( 271.645, 473.004, 54.8159, 0.2796 ) }
    apic_4 { pt3dadd( 270.525, 472.824, 54.8898, 0.2542 ) }
    apic_4 { pt3dadd( 269.444, 472.745, 55.0144, 0.2288 ) }
    apic_4 { pt3dadd( 268.598, 472.12, 54.88, 0.2288 ) }
    apic_4 { pt3dadd( 267.64, 471.902, 54.5278, 0.2288 ) }
    apic_4 { pt3dadd( 266.704, 471.389, 54.32, 0.2288 ) }
    apic_4 { pt3dadd( 265.584, 471.214, 54.32, 0.2542 ) }
    apic_4 { pt3dadd( 264.442, 471.206, 54.32, 0.2796 ) }
    apic_4 { pt3dadd( 263.309, 471.047, 54.32, 0.305 ) }
    apic_4 { pt3dadd( 262.21, 470.985, 54.3575, 0.2796 ) }
    apic_4 { pt3dadd( 261.158, 470.87, 53.76, 0.2542 ) }
    apic_4 { pt3dadd( 260.014, 470.87, 53.76, 0.2288 ) }
    apic_4 { pt3dadd( 258.915, 470.87, 53.2, 0.2288 ) }
    apic_4 { pt3dadd( 257.771, 470.87, 53.2, 0.2542 ) }
    apic_4 { pt3dadd( 256.669, 470.87, 52.565, 0.305 ) }
    apic_4 { pt3dadd( 255.534, 470.947, 52.3603, 0.3814 ) }
    apic_4 { pt3dadd( 254.444, 470.775, 52.1973, 0.4068 ) }
    apic_4 { pt3dadd( 253.408, 470.964, 51.3825, 0.3814 ) }
    apic_4 { pt3dadd( 252.337, 471.073, 51.7188, 0.305 ) }
    apic_4 { pt3dadd( 251.475, 471.304, 50.6164, 0.2542 ) }
    apic_4 { pt3dadd( 250.614, 470.799, 50.8564, 0.2542 ) }
    apic_4 { pt3dadd( 249.567, 471.06, 50.4, 0.2796 ) }
    apic_4 { pt3dadd( 248.483, 471.328, 50.3325, 0.3304 ) }
    apic_4 { pt3dadd( 247.689, 470.757, 49.5916, 0.3304 ) }
    apic_4 { pt3dadd( 246.798, 470.12, 50.0069, 0.3304 ) }
    apic_4 { pt3dadd( 245.97, 469.372, 50.3952, 0.2796 ) }
    apic_4 { pt3dadd( 245.563, 468.364, 50.96, 0.2542 ) }
    apic_4 { pt3dadd( 245.037, 468.409, 49.8316, 0.2288 ) }
    apic_4 { pt3dadd( 244.296, 468.063, 49.0, 0.2288 ) }
    apic_4 { pt3dadd( 243.86, 467.07, 49.0549, 0.2288 ) }
    apic_4 { pt3dadd( 243.118, 466.416, 48.72, 0.2542 ) }
    apic_4 { pt3dadd( 242.13, 466.071, 48.9689, 0.305 ) }
    apic_4 { pt3dadd( 242.042, 465.323, 47.88, 0.356 ) }
    apic_4 { pt3dadd( 241.612, 464.451, 46.8611, 0.356 ) }
    apic_4 { pt3dadd( 241.335, 463.882, 44.8694, 0.305 ) }
    apic_4 { pt3dadd( 240.915, 463.124, 43.456, 0.2542 ) }
    apic_4 { pt3dadd( 239.953, 462.662, 42.84, 0.2288 ) }
    apic_4 { pt3dadd( 239.217, 462.508, 44.5203, 0.2288 ) }
    apic_4 { pt3dadd( 238.482, 462.438, 46.1961, 0.2542 ) }
    apic_4 { pt3dadd( 237.57, 462.153, 47.3015, 0.3304 ) }
    apic_4 { pt3dadd( 236.698, 461.893, 46.2, 0.4576 ) }
    apic_4 { pt3dadd( 235.729, 461.61, 45.4493, 0.5592 ) }
    apic_4 { pt3dadd( 234.937, 460.948, 45.2147, 0.6102 ) }
    apic_4 { pt3dadd( 234.352, 460.262, 44.2814, 0.5848 ) }
    apic_4 { pt3dadd( 233.623, 459.419, 44.5749, 0.5592 ) }
    apic_4 { pt3dadd( 232.732, 458.776, 44.9179, 0.5084 ) }
    apic_4 { pt3dadd( 231.831, 458.126, 44.8, 0.4576 ) }
    apic_4 { pt3dadd( 230.965, 457.489, 44.52, 0.4068 ) }
    apic_4 { pt3dadd( 230.251, 457.002, 43.4, 0.356 ) }
    apic_4 { pt3dadd( 229.617, 456.066, 43.2012, 0.3304 ) }
    apic_4 { pt3dadd( 229.044, 455.123, 42.84, 0.305 ) }
    apic_4 { pt3dadd( 228.638, 454.684, 43.9572, 0.3304 ) }
    apic_4 { pt3dadd( 228.109, 454.566, 42.5538, 0.356 ) }
    apic_4 { pt3dadd( 227.737, 454.914, 40.88, 0.3814 ) }
    apic_4 { pt3dadd( 227.288, 455.422, 40.6675, 0.3814 ) }
    apic_4 { pt3dadd( 226.298, 455.397, 40.1856, 0.3814 ) }
    apic_4 { pt3dadd( 225.534, 454.854, 39.9451, 0.4322 ) }
    apic_4 { pt3dadd( 224.566, 454.626, 39.2, 0.5084 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 78/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 319.137, 492.263, 52.1732, 0.5592 ) }
    apic_3 { pt3dadd( 319.061, 491.623, 51.338, 0.6102 ) }
    apic_3 { pt3dadd( 318.921, 490.917, 49.84, 0.5848 ) }
    apic_3 { pt3dadd( 318.779, 490.094, 50.9995, 0.483 ) }
    apic_3 { pt3dadd( 318.325, 489.087, 51.1868, 0.3304 ) }
    apic_3 { pt3dadd( 317.578, 488.311, 51.9744, 0.2542 ) }
    apic_3 { pt3dadd( 316.753, 487.797, 52.6568, 0.2796 ) }
    apic_3 { pt3dadd( 316.217, 487.06, 52.0134, 0.3814 ) }
    apic_3 { pt3dadd( 315.748, 486.265, 51.6891, 0.5592 ) }
    apic_3 { pt3dadd( 315.487, 485.588, 49.9559, 0.7118 ) }
    apic_3 { pt3dadd( 314.748, 484.932, 50.6299, 0.788 ) }
    apic_3 { pt3dadd( 314.294, 484.213, 52.0755, 0.7118 ) }
    apic_3 { pt3dadd( 314.016, 483.351, 51.1988, 0.5338 ) }
    apic_3 { pt3dadd( 313.791, 482.288, 51.8, 0.4068 ) }
    apic_3 { pt3dadd( 313.064, 481.491, 52.0498, 0.3814 ) }
    apic_3 { pt3dadd( 312.239, 480.792, 52.08, 0.4576 ) }
    apic_3 { pt3dadd( 311.634, 479.901, 51.8613, 0.483 ) }
    apic_3 { pt3dadd( 311.158, 479.323, 50.12, 0.483 ) }
    apic_3 { pt3dadd( 310.109, 479.016, 50.4367, 0.4576 ) }
    apic_3 { pt3dadd( 309.298, 478.694, 51.8, 0.4322 ) }
    apic_3 { pt3dadd( 308.511, 478.078, 50.9704, 0.3814 ) }
    apic_3 { pt3dadd( 307.88, 477.487, 52.0713, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_3 { pt3dadd( 307.153, 477.07, 50.7027, 0.2796 ) }
    apic_3 { pt3dadd( 306.576, 476.549, 50.8466, 0.305 ) }
    apic_3 { pt3dadd( 306.019, 476.374, 50.96, 0.3814 ) }
    apic_3 { pt3dadd( 305.814, 475.406, 50.7024, 0.4322 ) }
    apic_3 { pt3dadd( 305.031, 474.872, 50.3714, 0.4322 ) }
    apic_3 { pt3dadd( 304.521, 474.416, 50.9704, 0.3814 ) }
    apic_3 { pt3dadd( 303.737, 473.717, 51.1652, 0.3304 ) }
    apic_3 { pt3dadd( 303.169, 472.818, 51.4212, 0.3304 ) }
    apic_3 { pt3dadd( 302.77, 472.164, 51.2112, 0.356 ) }
    apic_3 { pt3dadd( 302.347, 471.262, 50.4546, 0.3814 ) }
    apic_3 { pt3dadd( 302.157, 470.234, 50.2541, 0.3814 ) }
    apic_3 { pt3dadd( 301.537, 469.461, 50.5926, 0.4068 ) }
    apic_3 { pt3dadd( 300.634, 468.823, 50.5232, 0.4068 ) }
    apic_3 { pt3dadd( 299.714, 468.177, 50.2113, 0.3814 ) }
    apic_3 { pt3dadd( 298.743, 467.853, 50.3177, 0.305 ) }
    apic_3 { pt3dadd( 298.354, 467.001, 51.2274, 0.2542 ) }
    apic_3 { pt3dadd( 298.005, 465.96, 51.24, 0.2288 ) }
    apic_3 { pt3dadd( 297.225, 465.394, 51.8, 0.2288 ) }
    apic_3 { pt3dadd( 296.68, 464.575, 51.858, 0.2288 ) }
    apic_3 { pt3dadd( 295.857, 463.849, 52.0668, 0.2288 ) }
    apic_3 { pt3dadd( 295.224, 462.995, 51.8, 0.2542 ) }
    apic_3 { pt3dadd( 294.556, 462.199, 51.632, 0.305 ) }
    apic_3 { pt3dadd( 293.775, 462.091, 50.0604, 0.356 ) }
    apic_3 { pt3dadd( 293.23, 461.259, 49.7084, 0.3814 ) }
    apic_3 { pt3dadd( 293.024, 460.367, 49.4539, 0.3814 ) }
    apic_3 { pt3dadd( 292.655, 459.316, 49.1154, 0.3814 ) }
    apic_3 { pt3dadd( 292.204, 458.384, 48.7788, 0.356 ) }
    apic_3 { pt3dadd( 291.886, 457.488, 47.9881, 0.3304 ) }
    apic_3 { pt3dadd( 291.622, 456.607, 48.8012, 0.305 ) }
    apic_3 { pt3dadd( 290.973, 455.779, 48.8054, 0.305 ) }
    apic_3 { pt3dadd( 290.361, 455.02, 48.1662, 0.2796 ) }
    apic_3 { pt3dadd( 290.442, 453.954, 48.2101, 0.2542 ) }
    apic_3 { pt3dadd( 290.338, 453.116, 49.1582, 0.2288 ) }
    apic_3 { pt3dadd( 290.319, 452.224, 48.6343, 0.2288 ) }
    apic_3 { pt3dadd( 289.703, 451.505, 48.4266, 0.2288 ) }
    apic_3 { pt3dadd( 290.14, 450.729, 48.8998, 0.2288 ) }
    apic_3 { pt3dadd( 289.851, 449.847, 48.1718, 0.2288 ) }
    apic_3 { pt3dadd( 289.158, 449.021, 48.9306, 0.2288 ) }
    apic_3 { pt3dadd( 288.755, 448.076, 49.2744, 0.2288 ) }
    apic_3 { pt3dadd( 288.431, 447.558, 49.8938, 0.2288 ) }
    apic_3 { pt3dadd( 287.463, 447.034, 50.12, 0.2288 ) }
    apic_3 { pt3dadd( 287.249, 445.994, 49.56, 0.2288 ) }
    apic_3 { pt3dadd( 286.92, 444.912, 49.56, 0.2288 ) }
    apic_3 { pt3dadd( 286.041, 444.318, 49.56, 0.2542 ) }
    apic_3 { pt3dadd( 285.875, 443.237, 49.56, 0.305 ) }
    apic_3 { pt3dadd( 285.699, 442.146, 49.1688, 0.356 ) }
    apic_3 { pt3dadd( 284.941, 441.366, 49.1277, 0.356 ) }
    apic_3 { pt3dadd( 284.349, 440.622, 49.6602, 0.305 ) }
    apic_3 { pt3dadd( 284.23, 439.686, 50.0055, 0.2542 ) }
    apic_3 { pt3dadd( 283.879, 438.818, 49.0048, 0.2796 ) }
    apic_3 { pt3dadd( 283.464, 437.79, 49.476, 0.356 ) }
    apic_3 { pt3dadd( 282.913, 436.818, 49.2036, 0.4322 ) }
    apic_3 { pt3dadd( 282.29, 435.918, 48.8524, 0.4068 ) }
    apic_3 { pt3dadd( 282.002, 434.945, 49.1442, 0.3304 ) }
    apic_3 { pt3dadd( 282.065, 433.84, 49.2699, 0.2542 ) }
    apic_3 { pt3dadd( 282.001, 432.708, 49.0151, 0.2288 ) }
    apic_3 { pt3dadd( 281.7, 431.606, 49.0, 0.2542 ) }
    apic_3 { pt3dadd( 281.203, 430.603, 49.1826, 0.2796 ) }
    apic_3 { pt3dadd( 280.814, 429.572, 49.2979, 0.305 ) }
    apic_3 { pt3dadd( 280.666, 428.698, 47.8962, 0.2796 ) }
    apic_3 { pt3dadd( 280.686, 427.661, 47.0912, 0.2542 ) }
    apic_3 { pt3dadd( 280.737, 426.88, 48.0939, 0.2288 ) }
    apic_3 { pt3dadd( 280.539, 425.892, 47.9856, 0.2288 ) }
    apic_3 { pt3dadd( 280.059, 425.034, 47.6582, 0.2796 ) }
    apic_3 { pt3dadd( 279.754, 424.024, 47.8226, 0.356 ) }
    apic_3 { pt3dadd( 279.01, 423.256, 47.0691, 0.4322 ) }
    apic_3 { pt3dadd( 278.288, 422.447, 47.6, 0.4322 ) }
    apic_3 { pt3dadd( 277.882, 421.495, 48.16, 0.4322 ) }
    apic_3 { pt3dadd( 277.934, 420.364, 48.0903, 0.4576 ) }
    apic_3 { pt3dadd( 278.021, 419.355, 46.8748, 0.5084 ) }
    apic_3 { pt3dadd( 278.284, 418.435, 45.883, 0.5338 ) }
    apic_3 { pt3dadd( 278.305, 417.487, 45.5955, 0.5084 ) }
    apic_3 { pt3dadd( 278.098, 416.455, 44.8932, 0.4576 ) }
    apic_3 { pt3dadd( 277.684, 415.424, 45.0523, 0.4068 ) }
    apic_3 { pt3dadd( 277.172, 414.555, 44.7852, 0.4068 ) }
    apic_3 { pt3dadd( 276.517, 413.858, 44.7633, 0.4322 ) }
    apic_3 { pt3dadd( 276.23, 413.097, 45.6196, 0.4068 ) }
    apic_3 { pt3dadd( 276.037, 412.154, 45.6498, 0.3814 ) }
    apic_3 { pt3dadd( 275.647, 411.372, 44.0227, 0.3814 ) }
    apic_3 { pt3dadd( 275.029, 410.569, 44.4503, 0.4576 ) }
    apic_3 { pt3dadd( 274.311, 409.988, 44.1308, 0.483 ) }
    apic_3 { pt3dadd( 273.758, 409.223, 43.7049, 0.4576 ) }
    apic_3 { pt3dadd( 273.924, 408.115, 43.68, 0.4322 ) }
    apic_3 { pt3dadd( 273.651, 407.266, 43.811, 0.4068 ) }
    apic_3 { pt3dadd( 272.949, 406.614, 44.0202, 0.4068 ) }
    apic_3 { pt3dadd( 272.177, 405.879, 43.794, 0.3304 ) }
    apic_3 { pt3dadd( 272.112, 404.783, 43.68, 0.305 ) }
    apic_3 { pt3dadd( 271.585, 404.404, 42.7694, 0.3304 ) }
    apic_3 { pt3dadd( 270.878, 403.81, 42.3175, 0.4576 ) }
    apic_3 { pt3dadd( 270.276, 403.051, 42.611, 0.5848 ) }
    apic_3 { pt3dadd( 269.607, 402.582, 42.4656, 0.6102 ) }
    apic_3 { pt3dadd( 268.908, 401.964, 43.1458, 0.5338 ) }
    apic_3 { pt3dadd( 268.558, 401.084, 43.1427, 0.4322 ) }
    apic_3 { pt3dadd( 267.767, 401.061, 43.96, 0.3814 ) }
    apic_3 { pt3dadd( 267.608, 400.57, 42.6348, 0.4068 ) }
    apic_3 { pt3dadd( 266.78, 400.286, 43.4, 0.4322 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 274.763, 514.253, 52.08, 0.6102 ) }
    dend_5 { pt3dadd( 274.788, 513.902, 53.291, 0.4576 ) }
    dend_5 { pt3dadd( 274.574, 512.813, 53.48, 0.483 ) }
    dend_5 { pt3dadd( 273.897, 511.995, 54.2741, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_5 { pt3dadd( 273.066, 511.398, 54.1428, 0.4068 ) }
    dend_5 { pt3dadd( 272.451, 510.693, 55.44, 0.4068 ) }
    dend_5 { pt3dadd( 271.534, 510.444, 55.0824, 0.4322 ) }
    dend_5 { pt3dadd( 270.56, 510.071, 54.88, 0.4068 ) }
    dend_5 { pt3dadd( 270.525, 509.025, 55.2698, 0.3304 ) }
    dend_5 { pt3dadd( 270.485, 507.953, 54.8884, 0.2542 ) }
    dend_5 { pt3dadd( 270.295, 507.156, 56.2593, 0.2542 ) }
    dend_5 { pt3dadd( 269.869, 506.334, 56.84, 0.3304 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 8/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 274.763, 514.253, 52.08, 0.6102 ) }
    dend_4 { pt3dadd( 274.046, 513.595, 52.1055, 0.4576 ) }
    dend_4 { pt3dadd( 273.344, 512.995, 52.2486, 0.5338 ) }
    dend_4 { pt3dadd( 272.381, 512.592, 52.383, 0.5592 ) }
    dend_4 { pt3dadd( 271.744, 511.965, 50.9911, 0.5338 ) }
    dend_4 { pt3dadd( 270.975, 511.329, 51.5021, 0.5592 ) }
    dend_4 { pt3dadd( 270.546, 510.483, 50.8203, 0.5338 ) }
    dend_4 { pt3dadd( 269.808, 509.874, 49.8593, 0.4576 ) }
    dend_4 { pt3dadd( 269.235, 509.039, 49.3682, 0.3304 ) }
    dend_4 { pt3dadd( 268.301, 508.531, 49.56, 0.2796 ) }
    dend_4 { pt3dadd( 267.371, 507.907, 49.7818, 0.305 ) }
    dend_4 { pt3dadd( 266.369, 507.521, 50.0962, 0.3814 ) }
    dend_4 { pt3dadd( 265.542, 507.326, 48.6363, 0.4068 ) }
    dend_4 { pt3dadd( 264.846, 506.681, 48.3613, 0.4068 ) }
    dend_4 { pt3dadd( 264.176, 506.003, 47.3684, 0.356 ) }
    dend_4 { pt3dadd( 263.674, 505.121, 47.9777, 0.3304 ) }
    dend_4 { pt3dadd( 262.913, 504.569, 47.32, 0.305 ) }
    dend_4 { pt3dadd( 262.185, 504.181, 46.2524, 0.305 ) }
    dend_4 { pt3dadd( 261.274, 504.075, 45.5879, 0.3304 ) }
    dend_4 { pt3dadd( 260.318, 504.279, 45.1111, 0.356 ) }
    dend_4 { pt3dadd( 259.582, 503.798, 45.9799, 0.4322 ) }
    dend_4 { pt3dadd( 258.941, 503.609, 45.4219, 0.483 ) }
    dend_4 { pt3dadd( 258.132, 503.336, 44.163, 0.5084 ) }
    dend_4 { pt3dadd( 257.129, 503.168, 43.12, 0.4322 ) }
    dend_4 { pt3dadd( 256.236, 502.891, 43.3745, 0.356 ) }
    dend_4 { pt3dadd( 255.23, 502.546, 42.7904, 0.3304 ) }
    dend_4 { pt3dadd( 255.106, 501.567, 43.0452, 0.3814 ) }
    dend_4 { pt3dadd( 254.395, 501.102, 42.9786, 0.4068 ) }
    dend_4 { pt3dadd( 253.52, 501.032, 42.2892, 0.3814 ) }
    dend_4 { pt3dadd( 252.833, 500.296, 41.8642, 0.305 ) }
    dend_4 { pt3dadd( 252.17, 500.155, 40.8878, 0.2796 ) }
    dend_4 { pt3dadd( 251.376, 499.651, 40.8439, 0.305 ) }
    dend_4 { pt3dadd( 250.593, 498.944, 41.0136, 0.356 ) }
    dend_4 { pt3dadd( 249.991, 498.219, 41.7992, 0.3814 ) }
    dend_4 { pt3dadd( 249.516, 497.842, 39.9053, 0.3814 ) }
    dend_4 { pt3dadd( 248.694, 497.514, 40.208, 0.3814 ) }
    dend_4 { pt3dadd( 247.833, 496.923, 40.88, 0.356 ) }
    dend_4 { pt3dadd( 247.094, 496.217, 40.1097, 0.305 ) }
    dend_4 { pt3dadd( 246.134, 495.842, 39.7359, 0.2542 ) }
    dend_4 { pt3dadd( 245.221, 496.315, 39.207, 0.2288 ) }
    dend_4 { pt3dadd( 244.431, 495.794, 39.3481, 0.2542 ) }
    dend_4 { pt3dadd( 244.435, 495.025, 38.1783, 0.3304 ) }
    dend_4 { pt3dadd( 243.568, 494.515, 37.9442, 0.4068 ) }
    dend_4 { pt3dadd( 243.104, 493.956, 37.2338, 0.4322 ) }
    dend_4 { pt3dadd( 242.979, 493.049, 38.36, 0.356 ) }
    dend_4 { pt3dadd( 243.395, 492.016, 38.9063, 0.305 ) }
    dend_4 { pt3dadd( 243.619, 491.102, 38.2343, 0.305 ) }
    dend_4 { pt3dadd( 243.805, 490.422, 36.68, 0.356 ) }
    dend_4 { pt3dadd( 244.203, 489.713, 35.28, 0.3814 ) }
    dend_4 { pt3dadd( 244.554, 488.818, 35.9176, 0.4068 ) }
    dend_4 { pt3dadd( 244.745, 487.868, 35.9106, 0.4576 ) }
    dend_4 { pt3dadd( 244.651, 486.914, 35.2534, 0.5338 ) }
    dend_4 { pt3dadd( 244.576, 485.887, 35.3195, 0.5592 ) }
    dend_4 { pt3dadd( 244.745, 484.848, 35.5396, 0.5338 ) }
    dend_4 { pt3dadd( 244.704, 483.8, 35.3189, 0.4576 ) }
    dend_4 { pt3dadd( 244.727, 483.039, 35.826, 0.4068 ) }
    dend_4 { pt3dadd( 244.419, 482.206, 34.72, 0.3814 ) }
    dend_4 { pt3dadd( 243.901, 481.217, 34.9941, 0.4068 ) }
    dend_4 { pt3dadd( 243.616, 480.224, 34.6178, 0.4576 ) }
    dend_4 { pt3dadd( 243.486, 479.305, 34.8583, 0.5338 ) }
    dend_4 { pt3dadd( 243.315, 478.407, 35.0014, 0.5592 ) }
    dend_4 { pt3dadd( 242.925, 477.529, 34.0088, 0.5084 ) }
    dend_4 { pt3dadd( 242.535, 476.492, 33.992, 0.4068 ) }
    dend_4 { pt3dadd( 242.188, 475.436, 34.0698, 0.356 ) }
    dend_4 { pt3dadd( 241.933, 474.458, 33.4664, 0.4068 ) }
    dend_4 { pt3dadd( 241.446, 473.465, 33.9072, 0.5338 ) }
    dend_4 { pt3dadd( 241.122, 472.63, 33.474, 0.6102 ) }
    dend_4 { pt3dadd( 240.566, 471.845, 33.3757, 0.6356 ) }
    dend_4 { pt3dadd( 240.602, 470.928, 33.9256, 0.5592 ) }
    dend_4 { pt3dadd( 240.77, 470.207, 32.5083, 0.5084 ) }
    dend_4 { pt3dadd( 240.239, 469.427, 32.627, 0.4322 ) }
    dend_4 { pt3dadd( 239.608, 468.694, 33.7996, 0.4322 ) }
    dend_4 { pt3dadd( 239.09, 467.786, 34.202, 0.4322 ) }
    dend_4 { pt3dadd( 238.637, 466.887, 33.5712, 0.483 ) }
    dend_4 { pt3dadd( 238.18, 466.169, 32.6519, 0.5084 ) }
    dend_4 { pt3dadd( 237.846, 465.411, 32.2274, 0.5084 ) }
    dend_4 { pt3dadd( 237.028, 465.029, 32.6012, 0.4322 ) }
    dend_4 { pt3dadd( 236.137, 464.696, 31.7484, 0.3304 ) }
    dend_4 { pt3dadd( 235.282, 464.591, 31.9836, 0.2796 ) }
    dend_4 { pt3dadd( 234.883, 464.392, 29.6173, 0.305 ) }
    dend_4 { pt3dadd( 234.037, 464.191, 29.701, 0.3814 ) }
    dend_4 { pt3dadd( 233.306, 464.121, 29.5425, 0.4322 ) }
    dend_4 { pt3dadd( 232.649, 463.449, 29.4641, 0.4576 ) }
    dend_4 { pt3dadd( 232.263, 462.476, 29.9774, 0.4322 ) }
    dend_4 { pt3dadd( 231.705, 461.686, 29.4468, 0.3814 ) }
    dend_4 { pt3dadd( 230.848, 461.375, 29.6198, 0.3304 ) }
    dend_4 { pt3dadd( 229.975, 461.546, 28.84, 0.305 ) }
    dend_4 { pt3dadd( 229.379, 461.178, 28.0132, 0.3304 ) }
    dend_4 { pt3dadd( 228.452, 461.375, 29.4302, 0.3304 ) }
    dend_4 { pt3dadd( 227.76, 461.62, 29.1015, 0.356 ) }
    dend_4 { pt3dadd( 227.91, 461.49, 27.1681, 0.356 ) }
    dend_4 { pt3dadd( 226.789, 461.321, 27.1606, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_4 { pt3dadd( 226.344, 460.517, 28.28, 0.4322 ) }
    dend_4 { pt3dadd( 225.939, 459.545, 28.28, 0.5084 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 2/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 285.694, 497.717, 45.92, 0.4322 ) }
    dend_34 { pt3dadd( 285.675, 497.092, 45.6182, 0.4068 ) }
    dend_34 { pt3dadd( 285.436, 497.097, 43.0948, 0.4068 ) }
    dend_34 { pt3dadd( 284.466, 497.078, 42.8487, 0.4068 ) }
    dend_34 { pt3dadd( 283.67, 497.068, 44.7079, 0.3814 ) }
    dend_34 { pt3dadd( 282.593, 496.837, 44.5483, 0.3814 ) }
    dend_34 { pt3dadd( 281.485, 496.924, 44.0236, 0.4322 ) }
    dend_34 { pt3dadd( 280.45, 496.613, 43.801, 0.483 ) }
    dend_34 { pt3dadd( 279.493, 496.406, 44.6785, 0.5338 ) }
    dend_34 { pt3dadd( 278.459, 496.589, 43.96, 0.5338 ) }
    dend_34 { pt3dadd( 277.663, 496.02, 43.6262, 0.5592 ) }
    dend_34 { pt3dadd( 276.646, 495.797, 44.2338, 0.5592 ) }
    dend_34 { pt3dadd( 275.827, 495.115, 44.0899, 0.5338 ) }
    dend_34 { pt3dadd( 275.183, 494.391, 44.2299, 0.4576 ) }
    dend_34 { pt3dadd( 274.22, 494.374, 43.5338, 0.4576 ) }
    dend_34 { pt3dadd( 273.686, 494.495, 41.3549, 0.483 ) }
    dend_34 { pt3dadd( 273.082, 493.811, 40.3354, 0.5084 ) }
    dend_34 { pt3dadd( 272.733, 493.931, 38.4532, 0.483 ) }
    dend_34 { pt3dadd( 272.158, 494.814, 37.977, 0.4576 ) }
    dend_34 { pt3dadd( 271.47, 495.413, 37.5642, 0.4576 ) }
    dend_34 { pt3dadd( 270.986, 495.911, 37.6127, 0.483 ) }
    dend_34 { pt3dadd( 270.068, 496.054, 36.6758, 0.5338 ) }
    dend_34 { pt3dadd( 269.477, 496.888, 35.8809, 0.6102 ) }
    dend_34 { pt3dadd( 268.852, 497.64, 35.84, 0.6102 ) }
    dend_34 { pt3dadd( 267.781, 497.64, 35.2136, 0.5592 ) }
    dend_34 { pt3dadd( 266.652, 497.64, 35.1568, 0.4576 ) }
    dend_34 { pt3dadd( 265.876, 497.483, 34.3902, 0.4322 ) }
    dend_34 { pt3dadd( 265.509, 496.824, 34.4859, 0.4576 ) }
    dend_34 { pt3dadd( 264.981, 497.44, 33.32, 0.5592 ) }
    dend_34 { pt3dadd( 264.208, 498.182, 33.8528, 0.5848 ) }
    dend_34 { pt3dadd( 263.214, 498.544, 33.32, 0.5592 ) }
    dend_34 { pt3dadd( 262.768, 498.326, 31.488, 0.4322 ) }
    dend_34 { pt3dadd( 262.064, 498.006, 30.2711, 0.3814 ) }
    dend_34 { pt3dadd( 261.522, 498.615, 31.7834, 0.3304 ) }
    dend_34 { pt3dadd( 260.975, 498.195, 31.7957, 0.356 ) }
    dend_34 { pt3dadd( 260.656, 498.45, 30.24, 0.3304 ) }
    dend_34 { pt3dadd( 259.764, 498.707, 30.24, 0.3304 ) }
    dend_34 { pt3dadd( 259.076, 499.196, 30.2851, 0.305 ) }
    dend_34 { pt3dadd( 258.194, 499.497, 30.4172, 0.3304 ) }
    dend_34 { pt3dadd( 257.277, 499.825, 30.618, 0.3814 ) }
    dend_34 { pt3dadd( 256.515, 500.474, 30.0812, 0.4068 ) }
    dend_34 { pt3dadd( 255.573, 500.216, 29.6377, 0.3814 ) }
    dend_34 { pt3dadd( 254.794, 500.626, 29.5596, 0.3304 ) }
    dend_34 { pt3dadd( 254.189, 501.025, 27.988, 0.356 ) }
    dend_34 { pt3dadd( 253.617, 501.615, 26.6255, 0.4576 ) }
    dend_34 { pt3dadd( 253.063, 502.105, 27.7539, 0.5592 ) }
    dend_34 { pt3dadd( 252.273, 502.631, 27.7508, 0.5592 ) }
    dend_34 { pt3dadd( 251.6, 502.894, 26.4093, 0.4576 ) }
    dend_34 { pt3dadd( 251.156, 503.832, 26.04, 0.3304 ) }
    dend_34 { pt3dadd( 250.3, 503.965, 26.5866, 0.2796 ) }
    dend_34 { pt3dadd( 249.423, 503.74, 25.2426, 0.305 ) }
    dend_34 { pt3dadd( 248.442, 504.176, 25.622, 0.3814 ) }
    dend_34 { pt3dadd( 247.513, 504.376, 25.8261, 0.4322 ) }
    dend_34 { pt3dadd( 246.522, 504.504, 26.4905, 0.4322 ) }
    dend_34 { pt3dadd( 245.667, 504.554, 27.72, 0.4068 ) }
    dend_34 { pt3dadd( 244.735, 505.076, 28.1523, 0.3814 ) }
    dend_34 { pt3dadd( 243.689, 505.161, 28.3002, 0.3814 ) }
    dend_34 { pt3dadd( 242.719, 505.375, 27.9135, 0.356 ) }
    dend_34 { pt3dadd( 241.801, 505.667, 27.7166, 0.3304 ) }
    dend_34 { pt3dadd( 240.992, 506.191, 27.9135, 0.3304 ) }
    dend_34 { pt3dadd( 240.048, 506.395, 26.8212, 0.4068 ) }
    dend_34 { pt3dadd( 239.17, 506.839, 27.2933, 0.483 ) }
    dend_34 { pt3dadd( 238.651, 507.461, 26.6255, 0.5084 ) }
    dend_34 { pt3dadd( 238.04, 507.91, 26.936, 0.4322 ) }
    dend_34 { pt3dadd( 237.541, 508.739, 27.496, 0.3304 ) }
    dend_34 { pt3dadd( 236.738, 509.44, 27.0861, 0.305 ) }
    dend_34 { pt3dadd( 235.916, 510.148, 27.72, 0.356 ) }
    dend_34 { pt3dadd( 235.527, 510.937, 26.8598, 0.4576 ) }
    dend_34 { pt3dadd( 234.843, 511.743, 27.179, 0.483 ) }
    dend_34 { pt3dadd( 234.281, 512.506, 26.1271, 0.483 ) }
    dend_34 { pt3dadd( 233.719, 513.159, 25.384, 0.4322 ) }
    dend_34 { pt3dadd( 233.071, 513.881, 24.1752, 0.4322 ) }
    dend_34 { pt3dadd( 232.996, 514.548, 24.6156, 0.4322 ) }
    dend_34 { pt3dadd( 232.493, 515.259, 24.0206, 0.483 ) }
    dend_34 { pt3dadd( 232.122, 516.052, 23.8, 0.5084 ) }
    dend_34 { pt3dadd( 231.354, 516.668, 23.7997, 0.5084 ) }
    dend_34 { pt3dadd( 231.009, 517.667, 23.0605, 0.483 ) }
    dend_34 { pt3dadd( 230.744, 518.717, 22.4109, 0.4322 ) }
    dend_34 { pt3dadd( 230.629, 519.712, 22.948, 0.4068 ) }
    dend_34 { pt3dadd( 230.567, 520.792, 23.4996, 0.356 ) }
    dend_34 { pt3dadd( 230.665, 521.56, 22.0136, 0.305 ) }
    dend_34 { pt3dadd( 231.31, 522.079, 21.56, 0.2796 ) }
    dend_34 { pt3dadd( 230.894, 522.957, 20.7662, 0.2796 ) }
    dend_34 { pt3dadd( 230.401, 523.786, 20.3896, 0.3304 ) }
    dend_34 { pt3dadd( 230.515, 524.524, 19.6, 0.356 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 285.694, 497.717, 45.92, 0.4322 ) }
    dend_33 { pt3dadd( 285.43, 497.249, 46.0986, 0.3814 ) }
    dend_33 { pt3dadd( 284.967, 496.736, 44.2744, 0.3814 ) }
    dend_33 { pt3dadd( 284.003, 496.712, 45.36, 0.356 ) }
    dend_33 { pt3dadd( 283.291, 496.053, 45.36, 0.3814 ) }
    dend_33 { pt3dadd( 282.683, 495.194, 44.8367, 0.4068 ) }
    dend_33 { pt3dadd( 281.981, 494.372, 44.2109, 0.4576 ) }
    dend_33 { pt3dadd( 281.004, 493.943, 43.4008, 0.4068 ) }
    dend_33 { pt3dadd( 280.112, 493.642, 43.3636, 0.3814 ) }
    dend_33 { pt3dadd( 279.358, 493.17, 44.4329, 0.3814 ) }
    dend_33 { pt3dadd( 278.483, 492.729, 44.7896, 0.4576 ) }
    dend_33 { pt3dadd( 277.592, 492.261, 44.0014, 0.483 ) }
    dend_33 { pt3dadd( 276.729, 491.721, 44.819, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_33 { pt3dadd( 275.751, 491.323, 44.8448, 0.5084 ) }
    dend_33 { pt3dadd( 274.747, 490.993, 43.9659, 0.5338 ) }
    dend_33 { pt3dadd( 274.032, 490.204, 43.4, 0.483 ) }
    dend_33 { pt3dadd( 273.089, 489.705, 43.96, 0.4068 ) }
    dend_33 { pt3dadd( 272.049, 489.304, 43.6775, 0.305 ) }
    dend_33 { pt3dadd( 271.025, 489.063, 43.3157, 0.2796 ) }
    dend_33 { pt3dadd( 269.986, 488.681, 43.3026, 0.2796 ) }
    dend_33 { pt3dadd( 269.124, 488.105, 42.5989, 0.305 ) }
    dend_33 { pt3dadd( 268.267, 487.465, 42.1593, 0.305 ) }
    dend_33 { pt3dadd( 267.249, 487.044, 42.28, 0.305 ) }
    dend_33 { pt3dadd( 266.391, 486.464, 42.84, 0.3304 ) }
    dend_33 { pt3dadd( 265.534, 486.09, 41.946, 0.356 ) }
    dend_33 { pt3dadd( 264.842, 485.411, 42.0932, 0.4068 ) }
    dend_33 { pt3dadd( 263.839, 484.902, 42.0904, 0.4322 ) }
    dend_33 { pt3dadd( 262.843, 484.395, 41.7679, 0.4576 ) }
    dend_33 { pt3dadd( 262.123, 483.77, 41.7575, 0.4322 ) }
    dend_33 { pt3dadd( 261.122, 483.602, 42.5538, 0.4068 ) }
    dend_33 { pt3dadd( 260.387, 483.572, 40.6927, 0.356 ) }
    dend_33 { pt3dadd( 259.42, 483.491, 41.599, 0.3304 ) }
    dend_33 { pt3dadd( 258.357, 483.131, 41.9373, 0.305 ) }
    dend_33 { pt3dadd( 257.223, 483.046, 41.8606, 0.305 ) }
    dend_33 { pt3dadd( 256.266, 482.711, 41.1421, 0.305 ) }
    dend_33 { pt3dadd( 255.283, 482.292, 41.44, 0.305 ) }
    dend_33 { pt3dadd( 254.177, 482.003, 41.44, 0.356 ) }
    dend_33 { pt3dadd( 253.165, 481.554, 41.72, 0.4068 ) }
    dend_33 { pt3dadd( 252.274, 480.87, 42.0, 0.4322 ) }
    dend_33 { pt3dadd( 251.266, 480.379, 42.2778, 0.356 ) }
    dend_33 { pt3dadd( 250.225, 480.132, 42.3394, 0.2796 ) }
    dend_33 { pt3dadd( 250.28, 479.575, 44.0392, 0.2542 ) }
    dend_33 { pt3dadd( 250.042, 478.669, 43.1113, 0.2796 ) }
    dend_33 { pt3dadd( 249.624, 478.306, 40.9122, 0.305 ) }
    dend_33 { pt3dadd( 248.972, 477.757, 40.04, 0.3304 ) }
    dend_33 { pt3dadd( 248.968, 476.63, 40.1416, 0.3814 ) }
    dend_33 { pt3dadd( 249.15, 475.531, 40.0963, 0.4576 ) }
    dend_33 { pt3dadd( 248.854, 474.501, 39.7127, 0.5084 ) }
    dend_33 { pt3dadd( 248.15, 473.821, 39.3893, 0.5338 ) }
    dend_33 { pt3dadd( 247.689, 473.017, 39.0578, 0.5084 ) }
    dend_33 { pt3dadd( 247.903, 472.044, 39.3056, 0.4576 ) }
    dend_33 { pt3dadd( 247.019, 471.778, 40.04, 0.3814 ) }
    dend_33 { pt3dadd( 246.77, 471.116, 38.6604, 0.356 ) }
    dend_33 { pt3dadd( 246.565, 470.335, 37.8983, 0.3304 ) }
    dend_33 { pt3dadd( 246.854, 469.295, 38.2763, 0.356 ) }
    dend_33 { pt3dadd( 246.955, 468.239, 37.8, 0.3304 ) }
    dend_33 { pt3dadd( 246.318, 467.639, 36.9345, 0.356 ) }
    dend_33 { pt3dadd( 245.789, 466.931, 35.8546, 0.3304 ) }
    dend_33 { pt3dadd( 245.845, 466.007, 36.8749, 0.356 ) }
    dend_33 { pt3dadd( 246.518, 465.722, 35.2388, 0.3304 ) }
    dend_33 { pt3dadd( 246.645, 465.178, 34.4716, 0.3814 ) }
    dend_33 { pt3dadd( 246.179, 465.075, 36.7839, 0.4068 ) }
    dend_33 { pt3dadd( 245.281, 465.019, 35.7787, 0.483 ) }
    dend_33 { pt3dadd( 245.498, 464.634, 34.0819, 0.483 ) }
    dend_33 { pt3dadd( 245.245, 464.859, 32.0956, 0.4576 ) }
    dend_33 { pt3dadd( 244.5, 464.488, 32.5576, 0.4068 ) }
    dend_33 { pt3dadd( 243.791, 463.926, 32.0009, 0.356 ) }
    dend_33 { pt3dadd( 244.077, 463.112, 32.9585, 0.3304 ) }
    dend_33 { pt3dadd( 243.416, 462.634, 31.7912, 0.305 ) }
    dend_33 { pt3dadd( 242.28, 462.626, 31.8609, 0.3304 ) }
    dend_33 { pt3dadd( 241.374, 462.226, 31.3877, 0.3814 ) }
    dend_33 { pt3dadd( 240.842, 461.353, 31.486, 0.4322 ) }
    dend_33 { pt3dadd( 239.912, 460.882, 31.64, 0.483 ) }
    dend_33 { pt3dadd( 239.182, 460.137, 31.1984, 0.5084 ) }
    dend_33 { pt3dadd( 238.289, 459.774, 29.8682, 0.5592 ) }
    dend_33 { pt3dadd( 237.617, 459.208, 28.9993, 0.5592 ) }
    dend_33 { pt3dadd( 237.026, 458.62, 29.3555, 0.5592 ) }
    dend_33 { pt3dadd( 236.47, 457.972, 28.0762, 0.5084 ) }
    dend_33 { pt3dadd( 235.828, 457.236, 28.7367, 0.483 ) }
    dend_33 { pt3dadd( 235.124, 456.731, 29.9821, 0.4576 ) }
    dend_33 { pt3dadd( 234.517, 456.342, 29.673, 0.4322 ) }
    dend_33 { pt3dadd( 233.854, 455.845, 29.4311, 0.3814 ) }
    dend_33 { pt3dadd( 232.735, 455.742, 29.68, 0.305 ) }
    dend_33 { pt3dadd( 231.783, 455.208, 29.68, 0.2796 ) }
    dend_33 { pt3dadd( 231.398, 454.215, 29.4997, 0.305 ) }
    dend_33 { pt3dadd( 230.587, 453.718, 28.8308, 0.356 ) }
    dend_33 { pt3dadd( 229.839, 453.59, 27.16, 0.3814 ) }
    dend_33 { pt3dadd( 229.6, 452.91, 28.56, 0.3814 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 75/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 329.051, 496.61, 43.8668, 0.6356 ) }
    dend_23 { pt3dadd( 329.534, 496.615, 44.9669, 0.5084 ) }
    dend_23 { pt3dadd( 330.433, 497.237, 44.8, 0.5592 ) }
    dend_23 { pt3dadd( 331.359, 497.844, 44.7378, 0.6102 ) }
    dend_23 { pt3dadd( 331.959, 498.313, 43.6624, 0.6102 ) }
    dend_23 { pt3dadd( 332.832, 498.93, 43.12, 0.6102 ) }
    dend_23 { pt3dadd( 333.337, 499.69, 42.6076, 0.6356 ) }
    dend_23 { pt3dadd( 334.164, 499.694, 41.5268, 0.661 ) }
    dend_23 { pt3dadd( 334.971, 499.603, 41.16, 0.6356 ) }
    dend_23 { pt3dadd( 335.746, 499.393, 39.8373, 0.5592 ) }
    dend_23 { pt3dadd( 336.336, 499.902, 39.4702, 0.483 ) }
    dend_23 { pt3dadd( 337.231, 499.826, 38.4642, 0.483 ) }
    dend_23 { pt3dadd( 337.822, 500.113, 37.9954, 0.5338 ) }
    dend_23 { pt3dadd( 338.687, 500.157, 37.3643, 0.5338 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 329.051, 496.61, 43.8668, 0.6356 ) }
    dend_18 { pt3dadd( 329.471, 496.322, 42.586, 0.4576 ) }
    dend_18 { pt3dadd( 329.752, 495.55, 41.0906, 0.4068 ) }
    dend_18 { pt3dadd( 330.549, 495.59, 41.9964, 0.4068 ) }
    dend_18 { pt3dadd( 331.216, 495.623, 43.6624, 0.4576 ) }
    dend_18 { pt3dadd( 332.214, 495.117, 43.7027, 0.5084 ) }
    dend_18 { pt3dadd( 333.008, 494.461, 43.3829, 0.5338 ) }
    dend_18 { pt3dadd( 333.175, 493.546, 42.0073, 0.5084 ) }
    dend_18 { pt3dadd( 334.097, 493.255, 41.1174, 0.483 ) }
    dend_18 { pt3dadd( 334.946, 493.072, 40.04, 0.4576 ) }
    dend_18 { pt3dadd( 335.605, 492.332, 40.3418, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_18 { pt3dadd( 336.456, 491.652, 40.5322, 0.483 ) }
    dend_18 { pt3dadd( 336.987, 490.85, 40.4838, 0.483 ) }
    dend_18 { pt3dadd( 337.828, 490.48, 39.4442, 0.4576 ) }
    dend_18 { pt3dadd( 338.219, 489.786, 39.391, 0.4322 ) }
    dend_18 { pt3dadd( 338.784, 489.403, 40.1806, 0.4322 ) }
    dend_18 { pt3dadd( 339.219, 489.074, 38.971, 0.4576 ) }
    dend_18 { pt3dadd( 339.959, 488.724, 37.6138, 0.5592 ) }
    dend_18 { pt3dadd( 340.514, 488.191, 37.7255, 0.6356 ) }
    dend_18 { pt3dadd( 341.237, 487.601, 37.814, 0.661 ) }
    dend_18 { pt3dadd( 341.872, 486.755, 37.5964, 0.6356 ) }
    dend_18 { pt3dadd( 341.877, 486.022, 36.4, 0.5848 ) }
    // Section: apic_24, id: apic_24, parent: apic_6 (entry count 11/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 330.586, 496.382, 59.8592, 0.661 ) }
    apic_24 { pt3dadd( 331.069, 496.515, 60.9193, 0.483 ) }
    apic_24 { pt3dadd( 331.537, 497.468, 61.1296, 0.5084 ) }
    apic_24 { pt3dadd( 331.729, 498.572, 61.32, 0.4322 ) }
    apic_24 { pt3dadd( 331.301, 499.48, 62.1116, 0.4068 ) }
    apic_24 { pt3dadd( 331.382, 500.576, 62.8692, 0.4068 ) }
    apic_24 { pt3dadd( 331.301, 501.659, 63.5614, 0.4576 ) }
    apic_24 { pt3dadd( 331.527, 502.63, 64.3714, 0.4322 ) }
    apic_24 { pt3dadd( 331.178, 503.568, 65.5466, 0.4322 ) }
    apic_24 { pt3dadd( 330.494, 504.425, 66.08, 0.4322 ) }
    apic_24 { pt3dadd( 330.064, 505.426, 66.6072, 0.4322 ) }
    apic_24 { pt3dadd( 329.901, 506.274, 67.5783, 0.3814 ) }
    apic_24 { pt3dadd( 330.422, 507.012, 67.48, 0.3814 ) }
    apic_24 { pt3dadd( 330.975, 507.735, 67.9479, 0.4576 ) }
    apic_24 { pt3dadd( 331.827, 508.424, 68.4197, 0.5592 ) }
    apic_24 { pt3dadd( 332.309, 509.164, 69.4604, 0.6102 ) }
    apic_24 { pt3dadd( 332.432, 510.05, 70.5239, 0.6102 ) }
    apic_24 { pt3dadd( 332.789, 510.877, 69.4476, 0.5848 ) }
    apic_24 { pt3dadd( 333.249, 511.668, 69.2936, 0.5592 ) }
    apic_24 { pt3dadd( 333.704, 512.39, 69.8505, 0.5338 ) }
    apic_24 { pt3dadd( 333.825, 513.448, 70.7742, 0.5592 ) }
    apic_24 { pt3dadd( 333.933, 514.563, 71.12, 0.5848 ) }
    apic_24 { pt3dadd( 333.517, 515.382, 71.729, 0.6102 ) }
    apic_24 { pt3dadd( 333.324, 516.469, 71.6876, 0.6356 ) }
    apic_24 { pt3dadd( 333.322, 517.512, 72.4718, 0.6864 ) }
    apic_24 { pt3dadd( 333.673, 518.549, 71.9552, 0.7372 ) }
    apic_24 { pt3dadd( 334.137, 519.53, 72.3411, 0.7372 ) }
    apic_24 { pt3dadd( 333.802, 520.575, 72.52, 0.661 ) }
    apic_24 { pt3dadd( 334.125, 521.323, 71.7752, 0.6102 ) }
    apic_24 { pt3dadd( 334.268, 522.393, 71.997, 0.6102 ) }
    apic_24 { pt3dadd( 334.047, 523.378, 72.5413, 0.6356 ) }
    apic_24 { pt3dadd( 333.933, 524.409, 73.6212, 0.5592 ) }
    apic_24 { pt3dadd( 334.171, 525.436, 73.4384, 0.4322 ) }
    apic_24 { pt3dadd( 334.497, 526.401, 73.908, 0.3304 ) }
    apic_24 { pt3dadd( 334.619, 527.337, 73.4264, 0.305 ) }
    apic_24 { pt3dadd( 335.079, 528.08, 73.0898, 0.305 ) }
    apic_24 { pt3dadd( 335.454, 528.972, 74.025, 0.305 ) }
    apic_24 { pt3dadd( 335.925, 529.869, 73.08, 0.356 ) }
    apic_24 { pt3dadd( 336.226, 530.885, 73.08, 0.3814 ) }
    apic_24 { pt3dadd( 336.793, 531.612, 73.4768, 0.4576 ) }
    apic_24 { pt3dadd( 337.008, 532.678, 73.705, 0.4576 ) }
    apic_24 { pt3dadd( 337.111, 533.777, 73.9743, 0.5084 ) }
    apic_24 { pt3dadd( 337.25, 534.909, 73.9497, 0.483 ) }
    apic_24 { pt3dadd( 337.407, 535.843, 72.9705, 0.4576 ) }
    apic_24 { pt3dadd( 337.879, 536.669, 72.0692, 0.4068 ) }
    apic_24 { pt3dadd( 337.989, 537.789, 72.24, 0.4068 ) }
    apic_24 { pt3dadd( 338.066, 538.708, 73.0971, 0.483 ) }
    apic_24 { pt3dadd( 337.937, 539.46, 74.1866, 0.5592 ) }
    apic_24 { pt3dadd( 338.045, 540.47, 73.2438, 0.6102 ) }
    apic_24 { pt3dadd( 337.907, 541.463, 72.5794, 0.5592 ) }
    apic_24 { pt3dadd( 337.708, 542.571, 72.6121, 0.5084 ) }
    apic_24 { pt3dadd( 337.708, 543.647, 72.6387, 0.4068 ) }
    apic_24 { pt3dadd( 337.708, 544.512, 71.4946, 0.356 ) }
    apic_24 { pt3dadd( 337.708, 545.622, 72.063, 0.305 ) }
    apic_24 { pt3dadd( 337.689, 546.641, 73.0775, 0.3304 ) }
    apic_24 { pt3dadd( 337.697, 547.413, 74.5514, 0.356 ) }
    apic_24 { pt3dadd( 338.042, 548.289, 74.5041, 0.356 ) }
    apic_24 { pt3dadd( 338.024, 549.368, 74.2378, 0.305 ) }
    apic_24 { pt3dadd( 338.024, 550.356, 74.9112, 0.2542 ) }
    apic_24 { pt3dadd( 337.65, 551.091, 76.1342, 0.2796 ) }
    apic_24 { pt3dadd( 337.286, 552.033, 75.1976, 0.3814 ) }
    apic_24 { pt3dadd( 337.195, 553.151, 75.1408, 0.483 ) }
    apic_24 { pt3dadd( 336.78, 554.191, 74.7446, 0.5084 ) }
    apic_24 { pt3dadd( 336.365, 555.205, 74.7807, 0.4576 ) }
    apic_24 { pt3dadd( 336.012, 555.599, 76.72, 0.4322 ) }
    apic_24 { pt3dadd( 335.555, 556.515, 76.3168, 0.4068 ) }
    apic_24 { pt3dadd( 335.136, 557.541, 76.6268, 0.3814 ) }
    apic_24 { pt3dadd( 334.962, 558.633, 76.218, 0.305 ) }
    apic_24 { pt3dadd( 334.619, 559.631, 76.6102, 0.2796 ) }
    apic_24 { pt3dadd( 334.593, 560.752, 76.8466, 0.2796 ) }
    apic_24 { pt3dadd( 334.227, 561.524, 77.0134, 0.305 ) }
    apic_24 { pt3dadd( 334.276, 562.618, 76.44, 0.2796 ) }
    apic_24 { pt3dadd( 334.185, 563.739, 76.169, 0.2542 ) }
    apic_24 { pt3dadd( 334.165, 564.669, 76.5584, 0.2288 ) }
    apic_24 { pt3dadd( 334.733, 565.365, 77.28, 0.2542 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 86/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 330.586, 496.382, 59.8592, 0.661 ) }
    apic_7 { pt3dadd( 330.861, 495.312, 59.4647, 0.6864 ) }
    apic_7 { pt3dadd( 331.401, 494.334, 58.8851, 0.5848 ) }
    apic_7 { pt3dadd( 332.114, 493.44, 58.8465, 0.5848 ) }
    apic_7 { pt3dadd( 332.831, 492.552, 59.0156, 0.6102 ) }
    apic_7 { pt3dadd( 333.711, 491.878, 59.6929, 0.661 ) }
    apic_7 { pt3dadd( 334.433, 490.996, 59.9141, 0.7372 ) }
    apic_7 { pt3dadd( 334.967, 489.984, 59.8912, 0.7626 ) }
    apic_7 { pt3dadd( 335.593, 489.028, 59.7708, 0.788 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 95/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 338.687, 500.157, 37.3643, 0.5338 ) }
    dend_25 { pt3dadd( 338.502, 500.443, 34.6354, 0.483 ) }
    dend_25 { pt3dadd( 338.165, 500.457, 32.1751, 0.4068 ) }
    dend_25 { pt3dadd( 337.627, 500.665, 31.3345, 0.4068 ) }
    dend_25 { pt3dadd( 337.398, 500.555, 28.8691, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_25 { pt3dadd( 336.357, 500.729, 28.6784, 0.5338 ) }
    dend_25 { pt3dadd( 335.452, 501.113, 27.375, 0.5592 ) }
    dend_25 { pt3dadd( 334.588, 501.539, 27.3344, 0.5338 ) }
    dend_25 { pt3dadd( 333.896, 501.644, 25.8513, 0.4322 ) }
    dend_25 { pt3dadd( 332.929, 501.652, 26.0392, 0.4068 ) }
    dend_25 { pt3dadd( 331.86, 501.644, 26.5958, 0.4068 ) }
    dend_25 { pt3dadd( 331.299, 502.231, 25.76, 0.483 ) }
    dend_25 { pt3dadd( 330.732, 502.976, 26.332, 0.4576 ) }
    dend_25 { pt3dadd( 330.089, 503.363, 24.92, 0.4576 ) }
    dend_25 { pt3dadd( 329.297, 503.937, 25.48, 0.4576 ) }
    dend_25 { pt3dadd( 328.676, 504.285, 26.6689, 0.5338 ) }
    dend_25 { pt3dadd( 327.757, 504.453, 27.0794, 0.5848 ) }
    dend_25 { pt3dadd( 326.918, 504.504, 26.1853, 0.5848 ) }
    dend_25 { pt3dadd( 325.934, 504.161, 25.6819, 0.5592 ) }
    dend_25 { pt3dadd( 325.496, 504.083, 23.7661, 0.5084 ) }
    dend_25 { pt3dadd( 324.755, 504.275, 23.5138, 0.4576 ) }
    dend_25 { pt3dadd( 324.085, 504.849, 24.6302, 0.4322 ) }
    dend_25 { pt3dadd( 323.257, 505.305, 24.54, 0.4322 ) }
    dend_25 { pt3dadd( 322.51, 504.962, 24.2802, 0.483 ) }
    dend_25 { pt3dadd( 321.862, 505.439, 22.757, 0.483 ) }
    dend_25 { pt3dadd( 321.239, 505.885, 23.347, 0.4576 ) }
    dend_25 { pt3dadd( 321.266, 506.563, 23.2151, 0.3814 ) }
    dend_25 { pt3dadd( 321.819, 506.944, 21.684, 0.3814 ) }
    dend_25 { pt3dadd( 322.228, 507.643, 20.2269, 0.4576 ) }
    dend_25 { pt3dadd( 322.618, 508.017, 19.465, 0.5592 ) }
    dend_25 { pt3dadd( 321.678, 508.23, 19.6944, 0.5338 ) }
    dend_25 { pt3dadd( 320.828, 508.926, 20.16, 0.4322 ) }
    dend_25 { pt3dadd( 319.976, 509.538, 20.16, 0.3304 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 28/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 338.687, 500.157, 37.3643, 0.5338 ) }
    dend_24 { pt3dadd( 339.3, 500.614, 38.47, 0.3304 ) }
    dend_24 { pt3dadd( 339.901, 500.843, 37.5138, 0.356 ) }
    dend_24 { pt3dadd( 340.485, 500.501, 36.1668, 0.4068 ) }
    dend_24 { pt3dadd( 341.476, 500.614, 35.8394, 0.4576 ) }
    dend_24 { pt3dadd( 342.301, 500.786, 34.463, 0.5592 ) }
    dend_24 { pt3dadd( 342.666, 501.517, 34.659, 0.6356 ) }
    dend_24 { pt3dadd( 343.612, 501.639, 33.8422, 0.661 ) }
    dend_24 { pt3dadd( 344.445, 501.451, 32.34, 0.6102 ) }
    dend_24 { pt3dadd( 345.117, 501.287, 31.9164, 0.6102 ) }
    dend_24 { pt3dadd( 346.12, 501.699, 31.64, 0.6356 ) }
    dend_24 { pt3dadd( 347.201, 501.644, 31.5879, 0.661 ) }
    dend_24 { pt3dadd( 348.156, 501.765, 31.1637, 0.6102 ) }
    dend_24 { pt3dadd( 348.835, 501.53, 31.299, 0.5592 ) }
    dend_24 { pt3dadd( 349.849, 501.788, 30.52, 0.5084 ) }
    dend_24 { pt3dadd( 350.635, 502.152, 30.2554, 0.4576 ) }
    dend_24 { pt3dadd( 351.399, 502.599, 30.1202, 0.4322 ) }
    dend_24 { pt3dadd( 351.959, 502.216, 28.4749, 0.4576 ) }
    dend_24 { pt3dadd( 352.866, 502.222, 27.6212, 0.5084 ) }
    dend_24 { pt3dadd( 353.572, 502.102, 28.4668, 0.5338 ) }
    dend_24 { pt3dadd( 354.374, 501.785, 27.3137, 0.5338 ) }
    dend_24 { pt3dadd( 354.869, 502.079, 25.4509, 0.5592 ) }
    dend_24 { pt3dadd( 355.772, 501.54, 24.9757, 0.5592 ) }
    dend_24 { pt3dadd( 356.636, 500.969, 25.48, 0.5338 ) }
    dend_24 { pt3dadd( 357.593, 501.183, 26.3035, 0.4322 ) }
    dend_24 { pt3dadd( 358.714, 501.091, 26.245, 0.3814 ) }
    dend_24 { pt3dadd( 359.205, 501.536, 24.6008, 0.4068 ) }
    dend_24 { pt3dadd( 360.137, 501.726, 24.64, 0.5592 ) }
    dend_24 { pt3dadd( 360.819, 501.511, 23.5256, 0.6356 ) }
    dend_24 { pt3dadd( 361.622, 501.186, 23.2705, 0.661 ) }
    dend_24 { pt3dadd( 362.529, 501.699, 23.24, 0.5848 ) }
    dend_24 { pt3dadd( 363.362, 501.859, 22.5375, 0.6102 ) }
    dend_24 { pt3dadd( 363.599, 502.582, 21.14, 0.6102 ) }
    dend_24 { pt3dadd( 364.451, 503.148, 21.2069, 0.5848 ) }
    dend_24 { pt3dadd( 364.709, 504.155, 21.4407, 0.5084 ) }
    dend_24 { pt3dadd( 364.821, 505.19, 21.0, 0.4576 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 64/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 341.877, 486.022, 36.4, 0.5848 ) }
    dend_22 { pt3dadd( 342.266, 485.645, 36.4, 0.5084 ) }
    dend_22 { pt3dadd( 342.948, 484.783, 35.9064, 0.4068 ) }
    dend_22 { pt3dadd( 343.537, 484.033, 35.8831, 0.356 ) }
    dend_22 { pt3dadd( 343.868, 482.978, 36.12, 0.2796 ) }
    dend_22 { pt3dadd( 344.56, 482.392, 37.2548, 0.2796 ) }
    dend_22 { pt3dadd( 344.444, 481.471, 36.3734, 0.305 ) }
    dend_22 { pt3dadd( 344.841, 480.861, 36.4, 0.356 ) }
    dend_22 { pt3dadd( 345.288, 480.201, 35.84, 0.4068 ) }
    dend_22 { pt3dadd( 345.606, 479.257, 35.9484, 0.483 ) }
    dend_22 { pt3dadd( 345.515, 478.304, 35.2215, 0.5848 ) }
    dend_22 { pt3dadd( 345.684, 477.333, 35.4978, 0.6356 ) }
    dend_22 { pt3dadd( 345.829, 476.363, 35.7375, 0.5848 ) }
    dend_22 { pt3dadd( 345.962, 475.528, 35.0913, 0.483 ) }
    dend_22 { pt3dadd( 346.352, 474.879, 34.7217, 0.4068 ) }
    dend_22 { pt3dadd( 347.065, 474.056, 35.0748, 0.356 ) }
    dend_22 { pt3dadd( 347.863, 473.616, 35.8126, 0.356 ) }
    dend_22 { pt3dadd( 348.926, 473.498, 35.2808, 0.3814 ) }
    dend_22 { pt3dadd( 349.367, 472.793, 35.5239, 0.483 ) }
    dend_22 { pt3dadd( 349.873, 472.066, 34.44, 0.5592 ) }
    dend_22 { pt3dadd( 350.532, 471.668, 35.4385, 0.5592 ) }
    dend_22 { pt3dadd( 351.453, 471.108, 35.1364, 0.5084 ) }
    dend_22 { pt3dadd( 351.906, 470.642, 34.1978, 0.4322 ) }
    dend_22 { pt3dadd( 352.841, 470.305, 34.0928, 0.4322 ) }
    dend_22 { pt3dadd( 353.22, 470.5, 32.8289, 0.4068 ) }
    dend_22 { pt3dadd( 354.014, 470.173, 33.7887, 0.4576 ) }
    dend_22 { pt3dadd( 354.419, 469.196, 33.175, 0.4576 ) }
    dend_22 { pt3dadd( 355.046, 468.374, 33.0184, 0.5084 ) }
    dend_22 { pt3dadd( 355.657, 467.657, 33.273, 0.483 ) }
    dend_22 { pt3dadd( 356.495, 467.165, 32.741, 0.5338 ) }
    dend_22 { pt3dadd( 357.274, 466.523, 33.0392, 0.5592 ) }
    dend_22 { pt3dadd( 357.613, 466.134, 31.1542, 0.6102 ) }
    dend_22 { pt3dadd( 358.125, 465.312, 31.08, 0.5592 ) }
    dend_22 { pt3dadd( 358.103, 464.256, 30.9921, 0.483 ) }
    dend_22 { pt3dadd( 358.801, 463.965, 31.351, 0.4322 ) }
    dend_22 { pt3dadd( 359.756, 463.474, 31.6268, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_22 { pt3dadd( 360.415, 462.749, 30.6132, 0.4576 ) }
    dend_22 { pt3dadd( 360.446, 461.93, 29.7024, 0.4322 ) }
    dend_22 { pt3dadd( 360.539, 460.841, 29.68, 0.4322 ) }
    dend_22 { pt3dadd( 360.588, 460.107, 29.0688, 0.4322 ) }
    dend_22 { pt3dadd( 360.774, 459.051, 28.6675, 0.4322 ) }
    dend_22 { pt3dadd( 360.607, 458.058, 29.2138, 0.3814 ) }
    dend_22 { pt3dadd( 360.302, 457.102, 29.8231, 0.3304 ) }
    dend_22 { pt3dadd( 360.245, 455.972, 29.9236, 0.305 ) }
    dend_22 { pt3dadd( 360.142, 454.841, 29.7732, 0.305 ) }
    dend_22 { pt3dadd( 359.835, 453.883, 29.8648, 0.305 ) }
    dend_22 { pt3dadd( 359.365, 453.477, 28.3769, 0.3304 ) }
    dend_22 { pt3dadd( 359.337, 452.454, 28.779, 0.3814 ) }
    dend_22 { pt3dadd( 358.958, 451.505, 29.0578, 0.4322 ) }
    dend_22 { pt3dadd( 358.486, 450.651, 29.0811, 0.4576 ) }
    dend_22 { pt3dadd( 357.729, 449.973, 29.5512, 0.4576 ) }
    dend_22 { pt3dadd( 357.542, 449.117, 30.0345, 0.4576 ) }
    dend_22 { pt3dadd( 357.385, 448.22, 29.1189, 0.4576 ) }
    dend_22 { pt3dadd( 357.581, 447.215, 28.8624, 0.4576 ) }
    dend_22 { pt3dadd( 357.904, 446.393, 28.7272, 0.4322 ) }
    dend_22 { pt3dadd( 358.185, 445.884, 28.5807, 0.3814 ) }
    dend_22 { pt3dadd( 358.045, 444.806, 28.9677, 0.3304 ) }
    dend_22 { pt3dadd( 357.814, 444.26, 28.56, 0.3304 ) }
    dend_22 { pt3dadd( 357.891, 443.268, 29.0604, 0.3814 ) }
    dend_22 { pt3dadd( 358.308, 442.306, 28.6681, 0.4068 ) }
    dend_22 { pt3dadd( 358.572, 441.391, 28.2489, 0.3814 ) }
    dend_22 { pt3dadd( 359.199, 440.644, 28.0176, 0.305 ) }
    dend_22 { pt3dadd( 358.841, 439.797, 29.2186, 0.2542 ) }
    dend_22 { pt3dadd( 359.017, 439.402, 28.336, 0.2288 ) }
    dend_22 { pt3dadd( 359.696, 439.043, 29.12, 0.2542 ) }
    dend_22 { pt3dadd( 359.857, 438.044, 28.1739, 0.305 ) }
    dend_22 { pt3dadd( 359.646, 436.987, 27.3977, 0.3814 ) }
    dend_22 { pt3dadd( 359.257, 436.207, 26.9833, 0.4576 ) }
    dend_22 { pt3dadd( 359.043, 435.299, 27.1446, 0.483 ) }
    dend_22 { pt3dadd( 359.613, 434.333, 27.1261, 0.483 ) }
    dend_22 { pt3dadd( 360.217, 433.424, 27.5332, 0.4322 ) }
    dend_22 { pt3dadd( 360.195, 432.464, 27.16, 0.4322 ) }
    dend_22 { pt3dadd( 359.901, 431.509, 27.9672, 0.4576 ) }
    dend_22 { pt3dadd( 359.788, 430.463, 27.4576, 0.483 ) }
    dend_22 { pt3dadd( 360.232, 429.778, 28.9038, 0.5084 ) }
    dend_22 { pt3dadd( 360.359, 429.114, 29.96, 0.5084 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 40/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 341.877, 486.022, 36.4, 0.5848 ) }
    dend_19 { pt3dadd( 342.15, 485.684, 36.4, 0.4068 ) }
    dend_19 { pt3dadd( 342.167, 484.793, 37.4794, 0.4322 ) }
    dend_19 { pt3dadd( 342.343, 483.73, 38.08, 0.483 ) }
    dend_19 { pt3dadd( 342.525, 482.768, 38.0489, 0.483 ) }
    // Section: apic_23, id: apic_23, parent: apic_7 (entry count 45/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 335.593, 489.028, 59.7708, 0.788 ) }
    apic_23 { pt3dadd( 336.104, 488.838, 58.2775, 0.305 ) }
    apic_23 { pt3dadd( 336.966, 488.575, 57.8217, 0.356 ) }
    apic_23 { pt3dadd( 337.934, 488.433, 57.0528, 0.3814 ) }
    apic_23 { pt3dadd( 338.517, 488.67, 55.4674, 0.356 ) }
    apic_23 { pt3dadd( 339.487, 488.869, 56.2694, 0.3304 ) }
    apic_23 { pt3dadd( 340.547, 488.936, 55.9406, 0.305 ) }
    apic_23 { pt3dadd( 341.425, 489.189, 56.6468, 0.356 ) }
    apic_23 { pt3dadd( 342.391, 489.299, 57.0329, 0.4322 ) }
    apic_23 { pt3dadd( 343.303, 489.877, 56.8383, 0.5084 ) }
    apic_23 { pt3dadd( 344.167, 490.293, 56.4365, 0.5084 ) }
    apic_23 { pt3dadd( 344.755, 490.933, 57.0926, 0.483 ) }
    apic_23 { pt3dadd( 345.382, 491.725, 57.421, 0.4576 ) }
    apic_23 { pt3dadd( 346.141, 492.026, 56.2041, 0.4322 ) }
    apic_23 { pt3dadd( 346.854, 492.255, 55.0175, 0.3814 ) }
    apic_23 { pt3dadd( 347.68, 491.808, 55.0152, 0.3304 ) }
    apic_23 { pt3dadd( 348.596, 492.371, 55.2182, 0.3304 ) }
    apic_23 { pt3dadd( 349.425, 492.492, 56.2209, 0.3814 ) }
    apic_23 { pt3dadd( 350.303, 492.149, 56.3013, 0.4322 ) }
    apic_23 { pt3dadd( 351.236, 492.492, 56.4729, 0.483 ) }
    apic_23 { pt3dadd( 352.107, 493.041, 56.0924, 0.5084 ) }
    apic_23 { pt3dadd( 353.11, 493.192, 56.6037, 0.5592 ) }
    apic_23 { pt3dadd( 354.052, 492.98, 56.56, 0.5848 ) }
    apic_23 { pt3dadd( 355.065, 492.959, 56.56, 0.6102 ) }
    apic_23 { pt3dadd( 356.046, 493.026, 57.3882, 0.6102 ) }
    apic_23 { pt3dadd( 357.088, 493.306, 57.2827, 0.5848 ) }
    apic_23 { pt3dadd( 357.7, 493.832, 58.7812, 0.5848 ) }
    apic_23 { pt3dadd( 358.096, 494.628, 58.2092, 0.5338 ) }
    apic_23 { pt3dadd( 358.905, 494.902, 58.3696, 0.5084 ) }
    apic_23 { pt3dadd( 359.805, 495.237, 57.519, 0.4068 ) }
    apic_23 { pt3dadd( 360.71, 495.582, 57.6836, 0.3814 ) }
    apic_23 { pt3dadd( 361.799, 495.583, 58.3268, 0.356 ) }
    apic_23 { pt3dadd( 362.888, 495.622, 59.0598, 0.4322 ) }
    apic_23 { pt3dadd( 363.975, 495.706, 58.5614, 0.483 ) }
    apic_23 { pt3dadd( 364.975, 495.553, 58.7944, 0.5084 ) }
    apic_23 { pt3dadd( 365.974, 495.15, 57.96, 0.4576 ) }
    apic_23 { pt3dadd( 366.86, 495.009, 58.6835, 0.4068 ) }
    apic_23 { pt3dadd( 367.872, 495.279, 58.2935, 0.3814 ) }
    apic_23 { pt3dadd( 368.6, 495.016, 58.6272, 0.3814 ) }
    apic_23 { pt3dadd( 369.48, 494.553, 59.2609, 0.3814 ) }
    apic_23 { pt3dadd( 370.358, 494.89, 58.0356, 0.3814 ) }
    apic_23 { pt3dadd( 371.121, 494.484, 58.1084, 0.3814 ) }
    apic_23 { pt3dadd( 371.748, 494.119, 58.2851, 0.356 ) }
    apic_23 { pt3dadd( 372.703, 493.845, 58.0213, 0.356 ) }
    apic_23 { pt3dadd( 373.806, 493.623, 58.24, 0.3304 ) }
    apic_23 { pt3dadd( 374.904, 493.595, 58.4962, 0.3304 ) }
    apic_23 { pt3dadd( 375.992, 493.731, 58.4581, 0.2796 ) }
    apic_23 { pt3dadd( 376.902, 493.388, 58.5976, 0.2542 ) }
    apic_23 { pt3dadd( 377.846, 493.281, 58.3646, 0.2288 ) }
    apic_23 { pt3dadd( 378.76, 492.863, 59.08, 0.2542 ) }
    apic_23 { pt3dadd( 379.615, 492.188, 59.0769, 0.305 ) }
    apic_23 { pt3dadd( 379.816, 491.629, 58.52, 0.356 ) }
    apic_23 { pt3dadd( 380.724, 491.32, 59.6428, 0.356 ) }
    apic_23 { pt3dadd( 381.518, 490.776, 59.36, 0.305 ) }
    apic_23 { pt3dadd( 382.538, 490.269, 59.36, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_23 { pt3dadd( 383.304, 490.204, 60.4652, 0.2288 ) }
    apic_23 { pt3dadd( 384.423, 490.204, 60.0642, 0.2288 ) }
    apic_23 { pt3dadd( 385.559, 490.204, 59.92, 0.2288 ) }
    apic_23 { pt3dadd( 386.703, 490.204, 59.92, 0.2288 ) }
    apic_23 { pt3dadd( 387.847, 490.204, 59.92, 0.2288 ) }
    apic_23 { pt3dadd( 388.991, 490.204, 59.92, 0.2288 ) }
    apic_23 { pt3dadd( 390.033, 489.846, 59.9696, 0.2288 ) }
    apic_23 { pt3dadd( 391.004, 489.401, 59.4958, 0.2288 ) }
    apic_23 { pt3dadd( 392.038, 489.07, 59.08, 0.2288 ) }
    apic_23 { pt3dadd( 393.084, 488.694, 59.08, 0.2288 ) }
    apic_23 { pt3dadd( 393.895, 488.046, 58.52, 0.2542 ) }
    apic_23 { pt3dadd( 394.742, 487.386, 58.6984, 0.2796 ) }
    apic_23 { pt3dadd( 395.522, 486.662, 58.1403, 0.305 ) }
    apic_23 { pt3dadd( 396.484, 486.337, 59.047, 0.2796 ) }
    apic_23 { pt3dadd( 397.395, 485.97, 58.0829, 0.2796 ) }
    apic_23 { pt3dadd( 398.459, 485.676, 58.52, 0.2796 ) }
    apic_23 { pt3dadd( 399.574, 485.446, 58.3906, 0.305 ) }
    apic_23 { pt3dadd( 400.707, 485.363, 58.24, 0.2796 ) }
    apic_23 { pt3dadd( 401.735, 484.923, 58.24, 0.305 ) }
    apic_23 { pt3dadd( 402.781, 484.508, 58.2876, 0.3304 ) }
    apic_23 { pt3dadd( 403.673, 483.836, 58.672, 0.3814 ) }
    apic_23 { pt3dadd( 404.619, 483.244, 58.3265, 0.3304 ) }
    apic_23 { pt3dadd( 405.459, 482.537, 57.96, 0.2796 ) }
    apic_23 { pt3dadd( 406.587, 482.362, 57.96, 0.2288 ) }
    apic_23 { pt3dadd( 407.517, 481.979, 58.6718, 0.2288 ) }
    apic_23 { pt3dadd( 408.499, 481.624, 58.1762, 0.2288 ) }
    apic_23 { pt3dadd( 409.58, 481.592, 57.4, 0.2288 ) }
    apic_23 { pt3dadd( 410.494, 480.977, 57.4204, 0.2288 ) }
    apic_23 { pt3dadd( 410.983, 480.295, 58.24, 0.2796 ) }
    apic_23 { pt3dadd( 411.878, 479.767, 58.7362, 0.3814 ) }
    apic_23 { pt3dadd( 412.839, 479.344, 58.613, 0.483 ) }
    apic_23 { pt3dadd( 413.807, 479.257, 58.2534, 0.483 ) }
    apic_23 { pt3dadd( 414.129, 478.679, 56.8806, 0.3814 ) }
    apic_23 { pt3dadd( 414.813, 478.423, 55.7304, 0.2796 ) }
    apic_23 { pt3dadd( 415.46, 477.917, 56.2363, 0.2542 ) }
    apic_23 { pt3dadd( 416.072, 477.63, 57.3233, 0.3304 ) }
    apic_23 { pt3dadd( 416.75, 477.476, 57.7923, 0.4322 ) }
    apic_23 { pt3dadd( 417.713, 477.121, 57.7357, 0.5084 ) }
    apic_23 { pt3dadd( 418.711, 476.833, 57.6831, 0.5338 ) }
    apic_23 { pt3dadd( 419.439, 476.182, 57.4258, 0.5338 ) }
    apic_23 { pt3dadd( 420.224, 475.814, 56.28, 0.5084 ) }
    apic_23 { pt3dadd( 421.254, 475.68, 57.12, 0.4576 ) }
    apic_23 { pt3dadd( 421.88, 475.446, 57.96, 0.4068 ) }
    apic_23 { pt3dadd( 422.976, 475.292, 58.4455, 0.4068 ) }
    apic_23 { pt3dadd( 423.941, 475.374, 59.5078, 0.4322 ) }
    apic_23 { pt3dadd( 424.646, 475.218, 58.1504, 0.4576 ) }
    apic_23 { pt3dadd( 425.573, 475.438, 59.2273, 0.4322 ) }
    apic_23 { pt3dadd( 426.37, 475.393, 59.9029, 0.4068 ) }
    apic_23 { pt3dadd( 427.006, 474.849, 58.4828, 0.3814 ) }
    apic_23 { pt3dadd( 427.804, 474.411, 58.758, 0.4068 ) }
    apic_23 { pt3dadd( 428.553, 473.845, 59.6056, 0.4322 ) }
    apic_23 { pt3dadd( 429.278, 473.158, 59.1108, 0.4576 ) }
    apic_23 { pt3dadd( 429.927, 472.93, 58.4889, 0.483 ) }
    apic_23 { pt3dadd( 430.668, 472.191, 58.5987, 0.483 ) }
    apic_23 { pt3dadd( 431.488, 471.557, 58.7317, 0.4576 ) }
    apic_23 { pt3dadd( 432.569, 471.328, 59.3891, 0.4068 ) }
    apic_23 { pt3dadd( 433.209, 470.996, 60.4237, 0.4068 ) }
    apic_23 { pt3dadd( 433.931, 470.539, 59.1671, 0.4576 ) }
    apic_23 { pt3dadd( 434.662, 470.308, 59.9659, 0.5084 ) }
    apic_23 { pt3dadd( 435.52, 470.21, 59.4499, 0.5592 ) }
    apic_23 { pt3dadd( 436.348, 469.955, 59.596, 0.5848 ) }
    apic_23 { pt3dadd( 437.288, 469.813, 60.3526, 0.5592 ) }
    apic_23 { pt3dadd( 438.179, 470.056, 60.571, 0.4576 ) }
    apic_23 { pt3dadd( 438.875, 469.982, 61.5681, 0.3814 ) }
    apic_23 { pt3dadd( 439.637, 470.07, 60.212, 0.3814 ) }
    apic_23 { pt3dadd( 440.382, 469.803, 59.9432, 0.4322 ) }
    apic_23 { pt3dadd( 441.154, 469.191, 59.1172, 0.4068 ) }
    apic_23 { pt3dadd( 441.939, 468.811, 60.6175, 0.356 ) }
    apic_23 { pt3dadd( 442.748, 468.697, 59.3886, 0.3304 ) }
    apic_23 { pt3dadd( 443.734, 468.668, 59.0612, 0.356 ) }
    apic_23 { pt3dadd( 444.667, 468.318, 58.336, 0.3814 ) }
    apic_23 { pt3dadd( 445.39, 468.295, 56.5188, 0.4322 ) }
    apic_23 { pt3dadd( 445.841, 467.564, 57.4008, 0.5084 ) }
    apic_23 { pt3dadd( 446.563, 467.287, 59.0495, 0.5848 ) }
    apic_23 { pt3dadd( 447.633, 467.246, 59.1506, 0.5592 ) }
    apic_23 { pt3dadd( 448.213, 467.143, 57.6201, 0.5084 ) }
    apic_23 { pt3dadd( 449.036, 466.788, 56.4091, 0.4576 ) }
    apic_23 { pt3dadd( 449.477, 466.089, 56.2517, 0.4576 ) }
    apic_23 { pt3dadd( 450.027, 465.177, 56.3788, 0.483 ) }
    apic_23 { pt3dadd( 450.714, 464.78, 54.9892, 0.5084 ) }
    apic_23 { pt3dadd( 451.475, 464.481, 53.5452, 0.5084 ) }
    apic_23 { pt3dadd( 451.815, 463.81, 55.533, 0.4576 ) }
    apic_23 { pt3dadd( 452.565, 464.121, 56.84, 0.4068 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 83/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 335.593, 489.028, 59.7708, 0.788 ) }
    apic_8 { pt3dadd( 335.928, 488.093, 59.1735, 0.6102 ) }
    apic_8 { pt3dadd( 336.333, 487.033, 58.8302, 0.7118 ) }
    apic_8 { pt3dadd( 336.934, 486.063, 58.8101, 0.7626 ) }
    apic_8 { pt3dadd( 337.659, 485.18, 58.8445, 0.7626 ) }
    apic_8 { pt3dadd( 338.08, 484.124, 59.038, 0.7372 ) }
    apic_8 { pt3dadd( 338.373, 483.055, 59.7181, 0.6864 ) }
    apic_8 { pt3dadd( 338.594, 481.943, 59.4437, 0.661 ) }
    apic_8 { pt3dadd( 338.925, 480.852, 59.2175, 0.6864 ) }
    apic_8 { pt3dadd( 339.067, 479.861, 60.5438, 0.7626 ) }
    apic_8 { pt3dadd( 339.523, 478.835, 61.0394, 0.8136 ) }
    apic_8 { pt3dadd( 340.123, 477.86, 61.0422, 0.7626 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 95/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 342.525, 482.768, 38.0489, 0.483 ) }
    dend_21 { pt3dadd( 342.699, 481.945, 36.7391, 0.5592 ) }
    dend_21 { pt3dadd( 343.273, 481.611, 34.6707, 0.5338 ) }
    dend_21 { pt3dadd( 344.034, 480.793, 34.44, 0.5084 ) }
    dend_21 { pt3dadd( 344.859, 480.251, 35.1324, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_21 { pt3dadd( 345.373, 479.484, 36.232, 0.4576 ) }
    dend_21 { pt3dadd( 345.915, 478.67, 36.0066, 0.483 ) }
    dend_21 { pt3dadd( 345.993, 478.538, 33.8467, 0.483 ) }
    dend_21 { pt3dadd( 346.864, 478.299, 33.04, 0.5084 ) }
    dend_21 { pt3dadd( 347.712, 477.605, 33.0198, 0.4322 ) }
    dend_21 { pt3dadd( 348.461, 477.132, 33.661, 0.3814 ) }
    dend_21 { pt3dadd( 348.347, 476.247, 32.48, 0.3304 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 342.525, 482.768, 38.0489, 0.483 ) }
    dend_20 { pt3dadd( 342.34, 482.556, 35.84, 0.483 ) }
    dend_20 { pt3dadd( 342.461, 481.638, 36.1794, 0.5338 ) }
    dend_20 { pt3dadd( 342.518, 480.745, 37.6978, 0.5848 ) }
    dend_20 { pt3dadd( 342.448, 479.695, 37.3013, 0.5592 ) }
    dend_20 { pt3dadd( 342.483, 478.75, 36.6271, 0.5848 ) }
    dend_20 { pt3dadd( 342.546, 477.842, 36.7284, 0.5848 ) }
    dend_20 { pt3dadd( 342.299, 477.111, 36.5341, 0.6356 ) }
    dend_20 { pt3dadd( 342.176, 476.078, 36.12, 0.6356 ) }
    dend_20 { pt3dadd( 342.359, 475.561, 37.7628, 0.5848 ) }
    dend_20 { pt3dadd( 341.941, 475.113, 38.8875, 0.5084 ) }
    dend_20 { pt3dadd( 341.385, 474.464, 37.5388, 0.4576 ) }
    dend_20 { pt3dadd( 341.203, 473.424, 37.5505, 0.4576 ) }
    dend_20 { pt3dadd( 341.274, 472.592, 37.1834, 0.4576 ) }
    dend_20 { pt3dadd( 340.85, 471.901, 37.7737, 0.4576 ) }
    dend_20 { pt3dadd( 340.944, 470.918, 38.3897, 0.5084 ) }
    dend_20 { pt3dadd( 340.898, 470.123, 40.2368, 0.5084 ) }
    dend_20 { pt3dadd( 340.339, 469.649, 41.1208, 0.5084 ) }
    dend_20 { pt3dadd( 339.726, 469.403, 41.9689, 0.4322 ) }
    dend_20 { pt3dadd( 338.853, 468.98, 41.0441, 0.4068 ) }
    dend_20 { pt3dadd( 338.586, 468.355, 42.184, 0.4068 ) }
    dend_20 { pt3dadd( 338.192, 467.367, 41.4887, 0.4576 ) }
    dend_20 { pt3dadd( 337.297, 466.897, 41.9264, 0.5338 ) }
    dend_20 { pt3dadd( 336.705, 466.073, 41.788, 0.5592 ) }
    dend_20 { pt3dadd( 335.887, 466.042, 41.7687, 0.5084 ) }
    dend_20 { pt3dadd( 336.221, 465.2, 41.974, 0.4068 ) }
    dend_20 { pt3dadd( 336.275, 464.206, 42.6544, 0.305 ) }
    dend_20 { pt3dadd( 336.221, 463.617, 44.6356, 0.2796 ) }
    dend_20 { pt3dadd( 335.816, 462.758, 44.8, 0.2796 ) }
    dend_20 { pt3dadd( 335.773, 461.783, 44.0255, 0.305 ) }
    dend_20 { pt3dadd( 336.293, 461.146, 43.3586, 0.2796 ) }
    dend_20 { pt3dadd( 336.457, 460.518, 43.6948, 0.2796 ) }
    dend_20 { pt3dadd( 336.369, 459.705, 44.1204, 0.305 ) }
    dend_20 { pt3dadd( 336.335, 458.776, 44.2498, 0.3814 ) }
    dend_20 { pt3dadd( 336.447, 457.83, 44.52, 0.4322 ) }
    dend_20 { pt3dadd( 336.572, 456.799, 44.9988, 0.4576 ) }
    dend_20 { pt3dadd( 336.271, 456.299, 43.4507, 0.4322 ) }
    dend_20 { pt3dadd( 335.882, 455.334, 43.7296, 0.4322 ) }
    dend_20 { pt3dadd( 335.388, 454.91, 44.4377, 0.4322 ) }
    dend_20 { pt3dadd( 334.817, 454.192, 45.08, 0.4576 ) }
    dend_20 { pt3dadd( 334.505, 453.357, 45.1679, 0.4068 ) }
    dend_20 { pt3dadd( 334.405, 452.356, 46.1404, 0.3304 ) }
    dend_20 { pt3dadd( 334.35, 451.279, 45.64, 0.2796 ) }
    dend_20 { pt3dadd( 334.103, 450.269, 45.6551, 0.305 ) }
    dend_20 { pt3dadd( 334.125, 449.254, 45.7839, 0.3814 ) }
    dend_20 { pt3dadd( 334.016, 448.194, 45.8965, 0.4322 ) }
    dend_20 { pt3dadd( 333.828, 447.211, 45.4342, 0.4322 ) }
    dend_20 { pt3dadd( 333.994, 446.313, 46.1812, 0.3814 ) }
    dend_20 { pt3dadd( 334.176, 445.51, 46.3464, 0.3304 ) }
    dend_20 { pt3dadd( 334.285, 444.738, 45.3939, 0.3304 ) }
    dend_20 { pt3dadd( 334.047, 444.051, 46.0748, 0.3814 ) }
    dend_20 { pt3dadd( 333.842, 442.966, 46.6634, 0.4068 ) }
    dend_20 { pt3dadd( 333.809, 441.881, 46.9535, 0.4322 ) }
    dend_20 { pt3dadd( 333.571, 440.792, 46.9806, 0.4068 ) }
    dend_20 { pt3dadd( 333.261, 439.831, 47.0431, 0.4322 ) }
    dend_20 { pt3dadd( 332.792, 438.811, 47.2287, 0.3814 ) }
    dend_20 { pt3dadd( 332.674, 437.681, 47.1332, 0.356 ) }
    dend_20 { pt3dadd( 332.546, 436.555, 47.1766, 0.305 ) }
    dend_20 { pt3dadd( 332.104, 435.536, 47.04, 0.305 ) }
    dend_20 { pt3dadd( 331.481, 434.648, 47.6, 0.305 ) }
    dend_20 { pt3dadd( 330.969, 433.871, 47.1204, 0.305 ) }
    dend_20 { pt3dadd( 330.91, 432.795, 47.04, 0.3304 ) }
    dend_20 { pt3dadd( 330.282, 432.042, 47.5888, 0.356 ) }
    dend_20 { pt3dadd( 329.575, 431.249, 47.3155, 0.3814 ) }
    dend_20 { pt3dadd( 328.716, 430.589, 46.73, 0.356 ) }
    dend_20 { pt3dadd( 328.071, 429.66, 46.7558, 0.356 ) }
    dend_20 { pt3dadd( 327.78, 428.622, 46.8098, 0.356 ) }
    dend_20 { pt3dadd( 327.261, 427.654, 46.76, 0.3814 ) }
    dend_20 { pt3dadd( 327.241, 426.67, 47.5336, 0.3814 ) }
    dend_20 { pt3dadd( 326.611, 425.911, 48.44, 0.3814 ) }
    // Section: apic_22, id: apic_22, parent: apic_8 (entry count 77/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 340.123, 477.86, 61.0422, 0.7626 ) }
    apic_22 { pt3dadd( 340.641, 477.287, 60.5321, 0.3814 ) }
    apic_22 { pt3dadd( 340.552, 476.486, 59.6128, 0.3814 ) }
    apic_22 { pt3dadd( 340.023, 475.846, 58.52, 0.4068 ) }
    apic_22 { pt3dadd( 339.324, 475.134, 58.0709, 0.483 ) }
    apic_22 { pt3dadd( 338.7, 474.836, 56.1042, 0.5848 ) }
    apic_22 { pt3dadd( 338.69, 473.955, 55.1468, 0.6356 ) }
    apic_22 { pt3dadd( 339.115, 472.975, 55.1121, 0.5848 ) }
    apic_22 { pt3dadd( 339.309, 472.156, 55.382, 0.483 ) }
    apic_22 { pt3dadd( 339.293, 471.171, 54.4186, 0.3814 ) }
    apic_22 { pt3dadd( 339.663, 470.516, 53.0869, 0.3304 ) }
    apic_22 { pt3dadd( 339.704, 469.841, 51.8773, 0.2796 ) }
    apic_22 { pt3dadd( 340.061, 470.07, 49.6012, 0.2542 ) }
    apic_22 { pt3dadd( 340.568, 469.653, 47.5787, 0.2796 ) }
    apic_22 { pt3dadd( 340.909, 468.644, 47.8243, 0.356 ) }
    apic_22 { pt3dadd( 341.689, 467.931, 47.6269, 0.4322 ) }
    apic_22 { pt3dadd( 341.99, 467.054, 48.3781, 0.4068 ) }
    apic_22 { pt3dadd( 342.524, 466.328, 47.6126, 0.3814 ) }
    apic_22 { pt3dadd( 343.046, 465.895, 49.1548, 0.3814 ) }
    apic_22 { pt3dadd( 343.321, 465.158, 50.68, 0.4576 ) }
    apic_22 { pt3dadd( 344.118, 464.674, 50.4185, 0.483 ) }
    apic_22 { pt3dadd( 344.549, 463.71, 49.681, 0.5084 ) }
    apic_22 { pt3dadd( 345.075, 462.809, 48.776, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    apic_22 { pt3dadd( 345.669, 461.913, 48.72, 0.6102 ) }
    apic_22 { pt3dadd( 346.284, 461.053, 48.7463, 0.6356 ) }
    apic_22 { pt3dadd( 346.744, 460.302, 48.1897, 0.6356 ) }
    apic_22 { pt3dadd( 347.089, 459.303, 48.613, 0.5592 ) }
    apic_22 { pt3dadd( 347.22, 458.458, 47.7056, 0.483 ) }
    apic_22 { pt3dadd( 347.765, 457.498, 47.8444, 0.3814 ) }
    apic_22 { pt3dadd( 348.176, 456.462, 48.4047, 0.3304 ) }
    apic_22 { pt3dadd( 348.556, 455.447, 47.8786, 0.305 ) }
    apic_22 { pt3dadd( 348.913, 454.468, 47.4774, 0.305 ) }
    apic_22 { pt3dadd( 349.472, 453.598, 48.1502, 0.3304 ) }
    apic_22 { pt3dadd( 350.055, 452.653, 47.7061, 0.3814 ) }
    apic_22 { pt3dadd( 349.809, 451.612, 47.8954, 0.4068 ) }
    apic_22 { pt3dadd( 349.934, 450.542, 47.5905, 0.3814 ) }
    apic_22 { pt3dadd( 350.069, 449.571, 47.5902, 0.3304 ) }
    apic_22 { pt3dadd( 350.493, 448.608, 47.4379, 0.3304 ) }
    apic_22 { pt3dadd( 350.935, 447.772, 47.7977, 0.3814 ) }
    apic_22 { pt3dadd( 350.762, 446.683, 47.4138, 0.4322 ) }
    apic_22 { pt3dadd( 351.012, 445.627, 47.3785, 0.4322 ) }
    apic_22 { pt3dadd( 351.103, 444.78, 46.6922, 0.3814 ) }
    apic_22 { pt3dadd( 351.436, 443.865, 46.2, 0.305 ) }
    apic_22 { pt3dadd( 352.036, 442.917, 46.2, 0.2542 ) }
    apic_22 { pt3dadd( 352.829, 442.722, 46.538, 0.2288 ) }
    apic_22 { pt3dadd( 353.586, 442.373, 45.5008, 0.2542 ) }
    apic_22 { pt3dadd( 354.466, 441.908, 45.4219, 0.305 ) }
    apic_22 { pt3dadd( 355.22, 441.171, 45.778, 0.356 ) }
    apic_22 { pt3dadd( 356.038, 440.447, 45.9959, 0.3814 ) }
    apic_22 { pt3dadd( 356.627, 439.881, 44.8605, 0.356 ) }
    apic_22 { pt3dadd( 357.413, 439.647, 44.564, 0.356 ) }
    apic_22 { pt3dadd( 358.285, 439.202, 44.4228, 0.356 ) }
    apic_22 { pt3dadd( 359.142, 438.733, 45.6089, 0.3814 ) }
    apic_22 { pt3dadd( 359.932, 438.495, 44.8314, 0.3814 ) }
    apic_22 { pt3dadd( 360.634, 438.041, 44.9915, 0.3814 ) }
    apic_22 { pt3dadd( 361.585, 437.511, 45.362, 0.4068 ) }
    apic_22 { pt3dadd( 362.342, 436.867, 45.7556, 0.4068 ) }
    apic_22 { pt3dadd( 363.147, 436.136, 45.08, 0.4068 ) }
    apic_22 { pt3dadd( 363.545, 435.186, 45.8811, 0.3814 ) }
    apic_22 { pt3dadd( 363.918, 434.362, 45.0372, 0.4068 ) }
    apic_22 { pt3dadd( 363.905, 433.253, 44.7572, 0.4068 ) }
    apic_22 { pt3dadd( 364.331, 432.431, 44.52, 0.4068 ) }
    apic_22 { pt3dadd( 364.918, 431.604, 44.0815, 0.3814 ) }
    apic_22 { pt3dadd( 364.761, 430.583, 43.6666, 0.3814 ) }
    apic_22 { pt3dadd( 364.592, 429.713, 42.5009, 0.356 ) }
    apic_22 { pt3dadd( 364.477, 428.92, 41.16, 0.3304 ) }
    apic_22 { pt3dadd( 364.592, 428.091, 41.8779, 0.305 ) }
    apic_22 { pt3dadd( 364.858, 427.386, 42.9948, 0.305 ) }
    apic_22 { pt3dadd( 364.807, 426.302, 43.0198, 0.2796 ) }
    apic_22 { pt3dadd( 364.697, 425.268, 42.7714, 0.2542 ) }
    apic_22 { pt3dadd( 364.286, 424.398, 41.6881, 0.2542 ) }
    apic_22 { pt3dadd( 364.086, 423.513, 42.7882, 0.3304 ) }
    apic_22 { pt3dadd( 364.146, 422.504, 42.0, 0.4322 ) }
    apic_22 { pt3dadd( 364.249, 421.539, 40.7302, 0.5084 ) }
    apic_22 { pt3dadd( 364.381, 420.492, 39.7712, 0.5338 ) }
    apic_22 { pt3dadd( 364.592, 419.512, 39.4036, 0.5084 ) }
    apic_22 { pt3dadd( 364.867, 418.617, 39.9686, 0.5084 ) }
    apic_22 { pt3dadd( 365.181, 417.82, 39.048, 0.5084 ) }
    apic_22 { pt3dadd( 365.394, 417.07, 39.0214, 0.5338 ) }
    apic_22 { pt3dadd( 365.203, 416.07, 38.6366, 0.483 ) }
    apic_22 { pt3dadd( 364.636, 415.279, 37.6779, 0.3814 ) }
    apic_22 { pt3dadd( 364.505, 414.519, 36.1222, 0.305 ) }
    apic_22 { pt3dadd( 364.363, 413.809, 37.6468, 0.3304 ) }
    apic_22 { pt3dadd( 364.117, 412.897, 38.0736, 0.4576 ) }
    apic_22 { pt3dadd( 364.016, 411.892, 37.6208, 0.5592 ) }
    apic_22 { pt3dadd( 363.495, 411.076, 36.6876, 0.5592 ) }
    apic_22 { pt3dadd( 363.069, 410.292, 36.332, 0.483 ) }
    apic_22 { pt3dadd( 362.63, 409.473, 36.6934, 0.3814 ) }
    apic_22 { pt3dadd( 362.029, 408.772, 37.448, 0.3304 ) }
    apic_22 { pt3dadd( 361.885, 407.698, 37.2705, 0.305 ) }
    apic_22 { pt3dadd( 361.964, 407.2, 39.5693, 0.3304 ) }
    apic_22 { pt3dadd( 362.052, 406.191, 39.7474, 0.4068 ) }
    apic_22 { pt3dadd( 362.275, 405.491, 38.0439, 0.4576 ) }
    apic_22 { pt3dadd( 362.777, 404.788, 37.9448, 0.483 ) }
    apic_22 { pt3dadd( 363.105, 403.885, 37.2747, 0.4068 ) }
    apic_22 { pt3dadd( 363.232, 402.893, 36.2398, 0.356 ) }
    apic_22 { pt3dadd( 363.105, 402.459, 34.44, 0.2796 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 74/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 340.123, 477.86, 61.0422, 0.7626 ) }
    apic_9 { pt3dadd( 340.983, 476.535, 61.0677, 0.8644 ) }
    apic_9 { pt3dadd( 341.697, 475.643, 61.1747, 0.839 ) }
    apic_9 { pt3dadd( 342.443, 474.816, 61.6344, 0.6864 ) }
    apic_9 { pt3dadd( 343.177, 474.026, 62.4526, 0.5848 ) }
    apic_9 { pt3dadd( 343.581, 473.012, 63.0804, 0.5338 ) }
    apic_9 { pt3dadd( 343.942, 471.966, 63.4553, 0.5338 ) }
    apic_9 { pt3dadd( 344.414, 470.964, 63.9428, 0.5338 ) }
    apic_9 { pt3dadd( 344.727, 469.887, 64.2001, 0.5084 ) }
    apic_9 { pt3dadd( 345.034, 468.808, 63.7193, 0.5084 ) }
    apic_9 { pt3dadd( 345.425, 467.762, 63.3144, 0.5084 ) }
    apic_9 { pt3dadd( 345.972, 466.759, 63.28, 0.5592 ) }
    apic_9 { pt3dadd( 346.449, 465.724, 63.28, 0.5592 ) }
    apic_9 { pt3dadd( 347.004, 464.741, 63.2912, 0.5848 ) }
    apic_9 { pt3dadd( 347.583, 463.767, 63.3556, 0.6102 ) }
    apic_9 { pt3dadd( 348.053, 462.74, 63.7109, 0.661 ) }
    apic_9 { pt3dadd( 348.647, 461.787, 64.1463, 0.6356 ) }
    apic_9 { pt3dadd( 349.298, 460.86, 64.0332, 0.5338 ) }
    apic_9 { pt3dadd( 349.811, 459.857, 63.9719, 0.4068 ) }
    apic_9 { pt3dadd( 350.206, 458.793, 64.3107, 0.3814 ) }
    apic_9 { pt3dadd( 350.57, 457.718, 64.661, 0.3814 ) }
    apic_9 { pt3dadd( 350.87, 456.698, 65.5581, 0.4576 ) }
    apic_9 { pt3dadd( 351.324, 455.723, 66.1069, 0.4576 ) }
    apic_9 { pt3dadd( 351.983, 454.81, 65.7227, 0.5084 ) }
    apic_9 { pt3dadd( 352.382, 453.775, 65.5362, 0.4576 ) }
    apic_9 { pt3dadd( 352.782, 452.708, 65.6135, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    apic_9 { pt3dadd( 353.162, 451.655, 66.0943, 0.3304 ) }
    apic_9 { pt3dadd( 353.512, 450.608, 66.8226, 0.3304 ) }
    apic_9 { pt3dadd( 353.839, 449.531, 66.7985, 0.4068 ) }
    apic_9 { pt3dadd( 354.346, 448.518, 66.6551, 0.483 ) }
    apic_9 { pt3dadd( 354.783, 447.466, 66.64, 0.5338 ) }
    apic_9 { pt3dadd( 354.773, 446.348, 66.6408, 0.483 ) }
    apic_9 { pt3dadd( 354.944, 445.234, 66.6448, 0.4068 ) }
    apic_9 { pt3dadd( 355.466, 444.227, 66.6736, 0.3304 ) }
    apic_9 { pt3dadd( 356.225, 443.382, 66.8536, 0.305 ) }
    apic_9 { pt3dadd( 356.726, 442.421, 67.5864, 0.305 ) }
    apic_9 { pt3dadd( 356.797, 441.303, 67.8054, 0.2796 ) }
    apic_9 { pt3dadd( 356.689, 440.177, 68.1932, 0.2542 ) }
    apic_9 { pt3dadd( 356.376, 439.289, 69.6861, 0.2542 ) }
    apic_9 { pt3dadd( 356.276, 438.192, 69.3902, 0.3304 ) }
    apic_9 { pt3dadd( 355.619, 437.281, 69.1166, 0.4068 ) }
    apic_9 { pt3dadd( 355.547, 436.147, 68.9144, 0.4322 ) }
    apic_9 { pt3dadd( 356.029, 435.113, 69.1004, 0.3814 ) }
    apic_9 { pt3dadd( 356.559, 434.143, 69.7427, 0.3304 ) }
    apic_9 { pt3dadd( 356.9, 433.075, 69.4036, 0.3304 ) }
    apic_9 { pt3dadd( 357.004, 432.005, 70.3447, 0.3304 ) }
    apic_9 { pt3dadd( 356.941, 430.908, 71.069, 0.3304 ) }
    apic_9 { pt3dadd( 356.966, 429.776, 71.2583, 0.305 ) }
    apic_9 { pt3dadd( 356.682, 428.672, 71.3188, 0.305 ) }
    apic_9 { pt3dadd( 356.361, 427.584, 70.9582, 0.3304 ) }
    apic_9 { pt3dadd( 356.254, 426.521, 70.679, 0.356 ) }
    apic_9 { pt3dadd( 356.712, 425.502, 70.9811, 0.4068 ) }
    apic_9 { pt3dadd( 356.813, 424.384, 71.4893, 0.483 ) }
    apic_9 { pt3dadd( 356.813, 423.267, 72.0597, 0.5592 ) }
    apic_9 { pt3dadd( 356.813, 422.127, 72.2414, 0.6356 ) }
    apic_9 { pt3dadd( 356.813, 420.983, 72.2495, 0.6356 ) }
    apic_9 { pt3dadd( 356.816, 419.84, 72.3036, 0.6864 ) }
    apic_9 { pt3dadd( 356.831, 418.701, 72.5298, 0.6864 ) }
    apic_9 { pt3dadd( 356.929, 417.585, 73.0456, 0.6864 ) }
    apic_9 { pt3dadd( 356.997, 416.514, 73.8472, 0.5848 ) }
    apic_9 { pt3dadd( 356.858, 415.449, 74.7376, 0.5592 ) }
    apic_9 { pt3dadd( 356.975, 414.344, 75.318, 0.6102 ) }
    apic_9 { pt3dadd( 357.232, 413.24, 75.6, 0.7372 ) }
    apic_9 { pt3dadd( 357.489, 412.126, 75.6008, 0.8136 ) }
    apic_9 { pt3dadd( 357.699, 411.009, 75.6048, 0.7626 ) }
    apic_9 { pt3dadd( 357.728, 409.867, 75.6325, 0.6864 ) }
    apic_9 { pt3dadd( 357.733, 408.728, 75.8414, 0.5848 ) }
    apic_9 { pt3dadd( 357.763, 407.605, 76.3515, 0.6102 ) }
    apic_9 { pt3dadd( 357.942, 406.501, 76.7166, 0.5848 ) }
    apic_9 { pt3dadd( 358.354, 405.436, 76.727, 0.5592 ) }
    apic_9 { pt3dadd( 358.831, 404.397, 76.7614, 0.4576 ) }
    apic_9 { pt3dadd( 359.256, 403.347, 77.0554, 0.4322 ) }
    apic_9 { pt3dadd( 359.563, 402.314, 77.9181, 0.4576 ) }
    apic_9 { pt3dadd( 359.911, 401.3, 78.2611, 0.5084 ) }
    apic_9 { pt3dadd( 360.477, 400.323, 78.1421, 0.5592 ) }
    apic_9 { pt3dadd( 360.861, 399.294, 78.5638, 0.5592 ) }
    apic_9 { pt3dadd( 360.936, 398.178, 78.5156, 0.5592 ) }
    apic_9 { pt3dadd( 360.963, 397.046, 78.3359, 0.5592 ) }
    apic_9 { pt3dadd( 361.141, 395.935, 78.7069, 0.6102 ) }
    apic_9 { pt3dadd( 361.469, 394.85, 78.8449, 0.661 ) }
    apic_9 { pt3dadd( 361.914, 393.82, 78.4098, 0.661 ) }
    apic_9 { pt3dadd( 362.464, 392.831, 78.1329, 0.661 ) }
    apic_9 { pt3dadd( 362.864, 391.825, 78.7671, 0.661 ) }
    apic_9 { pt3dadd( 363.402, 390.915, 79.693, 0.6864 ) }
    apic_9 { pt3dadd( 363.926, 389.932, 79.9176, 0.6102 ) }
    apic_9 { pt3dadd( 364.118, 388.828, 79.6037, 0.5338 ) }
    apic_9 { pt3dadd( 364.163, 387.706, 79.8669, 0.4576 ) }
    apic_9 { pt3dadd( 364.327, 386.587, 80.0982, 0.483 ) }
    apic_9 { pt3dadd( 364.881, 385.618, 80.2172, 0.5338 ) }
    apic_9 { pt3dadd( 365.589, 384.759, 80.796, 0.5338 ) }
    apic_9 { pt3dadd( 366.117, 383.772, 81.1482, 0.5084 ) }
    apic_9 { pt3dadd( 366.748, 382.828, 81.1947, 0.4576 ) }
    apic_9 { pt3dadd( 367.498, 381.964, 81.1784, 0.5084 ) }
    apic_9 { pt3dadd( 368.092, 380.998, 81.0835, 0.5848 ) }
    apic_9 { pt3dadd( 368.335, 379.914, 80.6053, 0.6356 ) }
    apic_9 { pt3dadd( 368.686, 378.856, 80.8237, 0.6356 ) }
    apic_9 { pt3dadd( 369.166, 377.93, 81.9151, 0.5848 ) }
    apic_9 { pt3dadd( 369.764, 377.061, 82.9847, 0.5592 ) }
    apic_9 { pt3dadd( 370.327, 376.112, 82.6518, 0.5338 ) }
    apic_9 { pt3dadd( 370.919, 375.142, 82.4029, 0.5084 ) }
    apic_9 { pt3dadd( 371.375, 374.099, 82.5922, 0.5084 ) }
    apic_9 { pt3dadd( 371.643, 373.026, 83.2563, 0.5084 ) }
    apic_9 { pt3dadd( 372.056, 371.969, 83.4316, 0.6102 ) }
    apic_9 { pt3dadd( 372.221, 370.844, 83.4543, 0.661 ) }
    apic_9 { pt3dadd( 372.017, 369.725, 83.5436, 0.7118 ) }
    apic_9 { pt3dadd( 372.325, 368.686, 84.2453, 0.661 ) }
    apic_9 { pt3dadd( 372.79, 367.652, 84.5891, 0.6356 ) }
    apic_9 { pt3dadd( 373.206, 366.603, 85.0427, 0.5592 ) }
    apic_9 { pt3dadd( 373.983, 365.77, 84.8845, 0.483 ) }
    apic_9 { pt3dadd( 374.803, 364.984, 84.5608, 0.4322 ) }
    apic_9 { pt3dadd( 375.363, 363.988, 84.565, 0.483 ) }
    apic_9 { pt3dadd( 375.567, 362.863, 84.5953, 0.5592 ) }
    apic_9 { pt3dadd( 375.527, 361.723, 84.775, 0.6102 ) }
    apic_9 { pt3dadd( 375.316, 360.63, 85.318, 0.5848 ) }
    apic_9 { pt3dadd( 375.499, 359.588, 84.4516, 0.5592 ) }
    apic_9 { pt3dadd( 375.983, 358.598, 84.84, 0.5084 ) }
    apic_9 { pt3dadd( 376.358, 357.53, 84.84, 0.5084 ) }
    apic_9 { pt3dadd( 376.84, 356.502, 84.84, 0.483 ) }
    apic_9 { pt3dadd( 377.385, 355.53, 85.0508, 0.5084 ) }
    apic_9 { pt3dadd( 378.231, 354.79, 85.12, 0.4576 ) }
    apic_9 { pt3dadd( 379.107, 354.069, 85.12, 0.483 ) }
    apic_9 { pt3dadd( 379.76, 353.132, 85.12, 0.483 ) }
    apic_9 { pt3dadd( 380.25, 352.1, 85.12, 0.5848 ) }
    apic_9 { pt3dadd( 380.492, 350.985, 85.12, 0.6356 ) }
    apic_9 { pt3dadd( 381.048, 350.046, 85.12, 0.7118 ) }
    apic_9 { pt3dadd( 381.489, 349.005, 85.12, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    apic_9 { pt3dadd( 381.984, 347.981, 85.12, 0.7372 ) }
    apic_9 { pt3dadd( 382.387, 346.919, 85.1799, 0.6864 ) }
    apic_9 { pt3dadd( 382.632, 345.84, 85.68, 0.6356 ) }
    apic_9 { pt3dadd( 383.218, 344.879, 85.9382, 0.6356 ) }
    apic_9 { pt3dadd( 383.454, 343.764, 85.96, 0.6864 ) }
    apic_9 { pt3dadd( 384.089, 342.821, 86.1526, 0.7118 ) }
    apic_9 { pt3dadd( 384.374, 341.715, 86.24, 0.6864 ) }
    apic_9 { pt3dadd( 384.807, 340.661, 86.24, 0.5592 ) }
    apic_9 { pt3dadd( 385.323, 339.647, 86.24, 0.483 ) }
    apic_9 { pt3dadd( 386.042, 338.821, 86.52, 0.4068 ) }
    apic_9 { pt3dadd( 386.328, 337.766, 86.555, 0.4576 ) }
    apic_9 { pt3dadd( 386.328, 336.625, 86.7843, 0.4576 ) }
    apic_9 { pt3dadd( 386.469, 335.508, 86.9621, 0.5084 ) }
    apic_9 { pt3dadd( 386.9, 334.493, 87.6042, 0.4576 ) }
    apic_9 { pt3dadd( 387.323, 333.495, 87.6565, 0.4068 ) }
    apic_9 { pt3dadd( 388.099, 332.772, 87.92, 0.305 ) }
    apic_9 { pt3dadd( 388.269, 331.659, 87.9399, 0.2542 ) }
    apic_9 { pt3dadd( 388.966, 330.971, 88.48, 0.2288 ) }
    apic_9 { pt3dadd( 389.296, 329.884, 88.5688, 0.2288 ) }
    apic_9 { pt3dadd( 389.634, 328.855, 89.3334, 0.2288 ) }
    apic_9 { pt3dadd( 389.645, 327.72, 89.6, 0.2288 ) }
    apic_9 { pt3dadd( 389.739, 326.59, 89.6994, 0.2796 ) }
    apic_9 { pt3dadd( 390.161, 325.641, 90.16, 0.3814 ) }
    apic_9 { pt3dadd( 390.217, 324.506, 90.16, 0.5084 ) }
    apic_9 { pt3dadd( 390.217, 323.614, 91.2929, 0.5338 ) }
    apic_9 { pt3dadd( 390.849, 322.853, 91.6244, 0.4576 ) }
    apic_9 { pt3dadd( 391.017, 321.75, 91.84, 0.356 ) }
    apic_9 { pt3dadd( 391.348, 320.68, 91.84, 0.3304 ) }
    apic_9 { pt3dadd( 391.819, 319.7, 91.84, 0.4068 ) }
    apic_9 { pt3dadd( 392.048, 318.595, 91.8515, 0.4576 ) }
    apic_9 { pt3dadd( 392.382, 317.652, 92.4, 0.4576 ) }
    apic_9 { pt3dadd( 392.645, 316.543, 92.4, 0.3814 ) }
    apic_9 { pt3dadd( 392.904, 315.429, 92.4451, 0.4068 ) }
    apic_9 { pt3dadd( 393.239, 314.386, 92.96, 0.4576 ) }
    apic_9 { pt3dadd( 393.434, 313.259, 92.96, 0.5084 ) }
    apic_9 { pt3dadd( 393.622, 312.131, 92.96, 0.4068 ) }
    apic_9 { pt3dadd( 393.993, 311.073, 93.0003, 0.305 ) }
    apic_9 { pt3dadd( 394.251, 310.193, 94.36, 0.2288 ) }
    apic_9 { pt3dadd( 394.621, 309.118, 94.36, 0.2288 ) }
    apic_9 { pt3dadd( 394.736, 308.098, 94.8038, 0.2288 ) }
    apic_9 { pt3dadd( 395.146, 307.225, 95.48, 0.2288 ) }
    apic_9 { pt3dadd( 395.333, 306.095, 95.48, 0.2288 ) }
    apic_9 { pt3dadd( 395.659, 305.01, 95.48, 0.2288 ) }
    apic_9 { pt3dadd( 395.937, 303.97, 96.091, 0.2542 ) }
    apic_9 { pt3dadd( 396.099, 302.896, 96.6, 0.305 ) }
    apic_9 { pt3dadd( 396.529, 301.845, 96.6, 0.4068 ) }
    apic_9 { pt3dadd( 396.887, 300.827, 96.6, 0.4576 ) }
    apic_9 { pt3dadd( 397.119, 299.71, 96.6, 0.4576 ) }
    apic_9 { pt3dadd( 397.603, 298.685, 96.6, 0.356 ) }
    apic_9 { pt3dadd( 398.084, 297.649, 96.6, 0.305 ) }
    apic_9 { pt3dadd( 398.347, 296.542, 96.7977, 0.305 ) }
    apic_9 { pt3dadd( 398.555, 295.431, 97.1373, 0.356 ) }
    apic_9 { pt3dadd( 398.783, 294.319, 97.16, 0.356 ) }
    apic_9 { pt3dadd( 398.985, 293.256, 97.16, 0.305 ) }
    apic_9 { pt3dadd( 399.929, 292.633, 97.16, 0.2796 ) }
    apic_9 { pt3dadd( 400.308, 291.705, 97.16, 0.305 ) }
    apic_9 { pt3dadd( 400.678, 290.633, 97.16, 0.356 ) }
    apic_9 { pt3dadd( 400.859, 289.525, 97.16, 0.3814 ) }
    apic_9 { pt3dadd( 401.089, 288.433, 97.16, 0.356 ) }
    apic_9 { pt3dadd( 401.543, 287.453, 97.16, 0.3814 ) }
    apic_9 { pt3dadd( 401.892, 286.405, 97.16, 0.3814 ) }
    apic_9 { pt3dadd( 402.126, 285.294, 97.16, 0.4068 ) }
    apic_9 { pt3dadd( 402.623, 284.267, 97.16, 0.3304 ) }
    apic_9 { pt3dadd( 403.361, 283.534, 97.2854, 0.2796 ) }
    apic_9 { pt3dadd( 403.602, 282.535, 98.0, 0.2288 ) }
    apic_9 { pt3dadd( 403.972, 281.469, 98.0, 0.2288 ) }
    apic_9 { pt3dadd( 404.374, 280.527, 98.6437, 0.2796 ) }
    apic_9 { pt3dadd( 404.681, 279.946, 100.148, 0.356 ) }
    apic_9 { pt3dadd( 405.023, 278.985, 101.08, 0.4322 ) }
    apic_9 { pt3dadd( 405.405, 277.931, 101.08, 0.4068 ) }
    apic_9 { pt3dadd( 405.865, 276.914, 101.08, 0.3304 ) }
    apic_9 { pt3dadd( 406.336, 275.877, 101.08, 0.2542 ) }
    apic_9 { pt3dadd( 406.547, 274.786, 101.08, 0.2288 ) }
    apic_9 { pt3dadd( 407.032, 273.892, 101.554, 0.2542 ) }
    apic_9 { pt3dadd( 407.396, 273.051, 102.967, 0.2796 ) }
    apic_9 { pt3dadd( 407.978, 272.099, 103.32, 0.305 ) }
    apic_9 { pt3dadd( 408.495, 271.086, 103.32, 0.2796 ) }
    apic_9 { pt3dadd( 408.858, 270.022, 103.32, 0.2542 ) }
    apic_9 { pt3dadd( 409.334, 268.984, 103.32, 0.2288 ) }
    apic_9 { pt3dadd( 409.789, 267.95, 103.32, 0.2288 ) }
    apic_9 { pt3dadd( 410.227, 266.917, 103.32, 0.2288 ) }
    apic_9 { pt3dadd( 410.343, 265.783, 103.32, 0.2288 ) }
    apic_9 { pt3dadd( 410.799, 264.876, 103.8, 0.2288 ) }
    apic_9 { pt3dadd( 411.217, 263.835, 103.88, 0.2288 ) }
    apic_9 { pt3dadd( 411.753, 262.882, 104.445, 0.2288 ) }
    apic_9 { pt3dadd( 412.143, 261.824, 104.72, 0.2288 ) }
    apic_9 { pt3dadd( 412.588, 260.785, 104.917, 0.2288 ) }
    apic_9 { pt3dadd( 412.991, 259.736, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 413.401, 258.686, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 413.777, 257.607, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 414.133, 256.529, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 414.524, 255.488, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 414.988, 254.522, 105.0, 0.2288 ) }
    apic_9 { pt3dadd( 415.166, 253.396, 105.0, 0.305 ) }
    apic_9 { pt3dadd( 415.843, 252.595, 105.0, 0.4322 ) }
    // Section: apic_17, id: apic_17, parent: apic_9 (entry count 95/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 415.843, 252.595, 105.0, 0.4322 ) }
    apic_17 { pt3dadd( 416.925, 252.736, 105.057, 0.305 ) }
    apic_17 { pt3dadd( 417.821, 252.384, 106.572, 0.2796 ) }
    apic_17 { pt3dadd( 418.717, 252.032, 108.087, 0.2796 ) }
    apic_17 { pt3dadd( 419.612, 251.681, 109.602, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    apic_17 { pt3dadd( 420.507, 251.329, 111.116, 0.4576 ) }
    apic_17 { pt3dadd( 421.369, 250.902, 112.56, 0.5592 ) }
    apic_17 { pt3dadd( 422.062, 250.112, 113.662, 0.5848 ) }
    apic_17 { pt3dadd( 422.756, 249.321, 114.764, 0.5338 ) }
    apic_17 { pt3dadd( 423.45, 248.531, 115.866, 0.5084 ) }
    apic_17 { pt3dadd( 424.057, 247.666, 116.691, 0.5084 ) }
    apic_17 { pt3dadd( 424.409, 246.577, 116.691, 0.5084 ) }
    apic_17 { pt3dadd( 424.761, 245.488, 116.691, 0.4576 ) }
    apic_17 { pt3dadd( 425.112, 244.4, 116.691, 0.4576 ) }
    apic_17 { pt3dadd( 425.464, 243.311, 116.691, 0.483 ) }
    apic_17 { pt3dadd( 425.9, 242.309, 117.018, 0.5084 ) }
    apic_17 { pt3dadd( 426.591, 241.569, 118.324, 0.4068 ) }
    apic_17 { pt3dadd( 427.281, 240.83, 119.631, 0.305 ) }
    apic_17 { pt3dadd( 427.972, 240.09, 120.937, 0.2288 ) }
    apic_17 { pt3dadd( 428.721, 239.336, 121.733, 0.2288 ) }
    apic_17 { pt3dadd( 429.562, 238.562, 121.733, 0.2288 ) }
    apic_17 { pt3dadd( 430.403, 237.786, 121.733, 0.2288 ) }
    apic_17 { pt3dadd( 431.244, 237.01, 121.733, 0.2288 ) }
    apic_17 { pt3dadd( 432.085, 236.235, 121.733, 0.2796 ) }
    apic_17 { pt3dadd( 432.926, 235.459, 121.733, 0.3814 ) }
    apic_17 { pt3dadd( 433.767, 234.684, 121.733, 0.5084 ) }
    apic_17 { pt3dadd( 434.608, 233.908, 121.733, 0.5338 ) }
    apic_17 { pt3dadd( 435.461, 233.182, 122.269, 0.4576 ) }
    apic_17 { pt3dadd( 436.316, 232.461, 122.863, 0.3304 ) }
    apic_17 { pt3dadd( 437.171, 231.74, 123.456, 0.2542 ) }
    apic_17 { pt3dadd( 438.025, 231.019, 124.05, 0.2288 ) }
    apic_17 { pt3dadd( 438.879, 230.298, 124.644, 0.2288 ) }
    apic_17 { pt3dadd( 439.733, 229.577, 125.238, 0.2542 ) }
    apic_17 { pt3dadd( 440.588, 228.856, 125.832, 0.2796 ) }
    apic_17 { pt3dadd( 441.313, 228.004, 126.293, 0.3304 ) }
    apic_17 { pt3dadd( 441.959, 227.073, 126.676, 0.3814 ) }
    apic_17 { pt3dadd( 442.605, 226.143, 127.058, 0.483 ) }
    apic_17 { pt3dadd( 443.251, 225.211, 127.441, 0.5338 ) }
    apic_17 { pt3dadd( 443.467, 224.105, 127.495, 0.5084 ) }
    apic_17 { pt3dadd( 443.611, 222.97, 127.495, 0.4322 ) }
    apic_17 { pt3dadd( 443.756, 221.835, 127.495, 0.4322 ) }
    apic_17 { pt3dadd( 443.9, 220.701, 127.495, 0.483 ) }
    apic_17 { pt3dadd( 444.409, 219.751, 128.0, 0.483 ) }
    apic_17 { pt3dadd( 445.1, 218.893, 128.756, 0.4322 ) }
    apic_17 { pt3dadd( 445.791, 218.035, 129.513, 0.3814 ) }
    apic_17 { pt3dadd( 446.482, 217.177, 130.269, 0.3814 ) }
    apic_17 { pt3dadd( 447.173, 216.319, 131.025, 0.3304 ) }
    apic_17 { pt3dadd( 447.862, 215.461, 131.781, 0.2796 ) }
    apic_17 { pt3dadd( 448.494, 214.509, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 449.121, 213.553, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 449.748, 212.596, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 450.376, 211.64, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 451.077, 210.74, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 451.842, 209.89, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 452.608, 209.04, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 453.373, 208.19, 131.817, 0.2288 ) }
    apic_17 { pt3dadd( 453.963, 207.387, 132.875, 0.2288 ) }
    apic_17 { pt3dadd( 454.448, 206.612, 134.558, 0.2288 ) }
    apic_17 { pt3dadd( 454.934, 205.837, 136.241, 0.2288 ) }
    apic_17 { pt3dadd( 455.418, 205.062, 137.923, 0.2288 ) }
    apic_17 { pt3dadd( 455.805, 204.164, 139.021, 0.2542 ) }
    apic_17 { pt3dadd( 456.008, 203.038, 139.021, 0.305 ) }
    apic_17 { pt3dadd( 456.211, 201.913, 139.021, 0.3814 ) }
    apic_17 { pt3dadd( 456.415, 200.787, 139.021, 0.4068 ) }
    apic_17 { pt3dadd( 456.617, 199.661, 139.021, 0.3814 ) }
    apic_17 { pt3dadd( 456.821, 198.536, 139.021, 0.3304 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 61/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 415.843, 252.595, 105.0, 0.4322 ) }
    apic_10 { pt3dadd( 415.843, 252.211, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 415.979, 251.139, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 416.925, 250.617, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 417.29, 249.566, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 417.701, 248.505, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 418.231, 247.514, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 418.872, 246.583, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 419.081, 245.465, 105.0, 0.2288 ) }
    apic_10 { pt3dadd( 419.5, 244.404, 105.0, 0.2542 ) }
    apic_10 { pt3dadd( 419.767, 243.293, 105.0, 0.2796 ) }
    apic_10 { pt3dadd( 419.969, 242.171, 105.0, 0.3304 ) }
    apic_10 { pt3dadd( 420.155, 241.049, 105.0, 0.3304 ) }
    apic_10 { pt3dadd( 420.556, 240.016, 105.0, 0.356 ) }
    apic_10 { pt3dadd( 421.213, 239.083, 105.0, 0.356 ) }
    apic_10 { pt3dadd( 421.895, 238.183, 105.0, 0.4068 ) }
    apic_10 { pt3dadd( 422.28, 237.112, 105.0, 0.4068 ) }
    apic_10 { pt3dadd( 422.856, 236.245, 105.0, 0.3814 ) }
    apic_10 { pt3dadd( 423.511, 235.399, 105.28, 0.305 ) }
    apic_10 { pt3dadd( 424.162, 234.469, 105.28, 0.2796 ) }
    apic_10 { pt3dadd( 424.787, 233.518, 105.28, 0.305 ) }
    apic_10 { pt3dadd( 425.472, 232.602, 105.28, 0.3814 ) }
    apic_10 { pt3dadd( 426.015, 231.602, 105.28, 0.4322 ) }
    apic_10 { pt3dadd( 426.469, 230.553, 105.28, 0.4576 ) }
    apic_10 { pt3dadd( 427.004, 229.553, 105.28, 0.4322 ) }
    apic_10 { pt3dadd( 427.593, 228.592, 105.28, 0.4068 ) }
    apic_10 { pt3dadd( 428.098, 227.575, 105.28, 0.356 ) }
    apic_10 { pt3dadd( 428.435, 226.482, 105.28, 0.3304 ) }
    apic_10 { pt3dadd( 428.833, 225.417, 105.28, 0.305 ) }
    apic_10 { pt3dadd( 429.558, 224.536, 105.28, 0.305 ) }
    apic_10 { pt3dadd( 430.051, 223.517, 105.28, 0.356 ) }
    apic_10 { pt3dadd( 430.264, 222.394, 105.28, 0.3814 ) }
    apic_10 { pt3dadd( 430.636, 221.315, 105.346, 0.4068 ) }
    apic_10 { pt3dadd( 430.97, 220.229, 105.56, 0.356 ) }
    apic_10 { pt3dadd( 431.153, 219.115, 105.56, 0.4068 ) }
    apic_10 { pt3dadd( 431.669, 218.094, 105.56, 0.5084 ) }
    apic_10 { pt3dadd( 432.068, 217.035, 105.56, 0.7118 ) }
    apic_10 { pt3dadd( 432.537, 216.007, 105.84, 0.8644 ) }
    apic_10 { pt3dadd( 432.99, 214.988, 105.84, 0.9914 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    apic_10 { pt3dadd( 433.381, 213.915, 105.84, 0.9406 ) }
    apic_10 { pt3dadd( 433.78, 212.867, 105.84, 0.788 ) }
    apic_10 { pt3dadd( 434.363, 211.897, 105.84, 0.5338 ) }
    apic_10 { pt3dadd( 434.792, 210.838, 105.84, 0.3814 ) }
    apic_10 { pt3dadd( 435.181, 209.763, 105.84, 0.2796 ) }
    apic_10 { pt3dadd( 435.972, 209.17, 105.84, 0.2542 ) }
    apic_10 { pt3dadd( 435.977, 208.026, 105.84, 0.305 ) }
    apic_10 { pt3dadd( 435.985, 206.882, 105.84, 0.4322 ) }
    apic_10 { pt3dadd( 436.092, 205.759, 106.12, 0.6102 ) }
    apic_10 { pt3dadd( 436.629, 204.827, 106.202, 0.661 ) }
    apic_10 { pt3dadd( 436.929, 203.77, 106.928, 0.661 ) }
    apic_10 { pt3dadd( 437.485, 202.853, 107.24, 0.5592 ) }
    apic_10 { pt3dadd( 437.804, 201.854, 107.723, 0.5084 ) }
    apic_10 { pt3dadd( 438.03, 200.745, 107.8, 0.4576 ) }
    apic_10 { pt3dadd( 438.609, 199.846, 107.8, 0.483 ) }
    apic_10 { pt3dadd( 438.811, 198.779, 108.544, 0.5084 ) }
    apic_10 { pt3dadd( 439.142, 197.703, 108.64, 0.5084 ) }
    apic_10 { pt3dadd( 439.424, 196.611, 108.64, 0.483 ) }
    apic_10 { pt3dadd( 439.763, 195.527, 108.64, 0.4576 ) }
    apic_10 { pt3dadd( 440.349, 194.622, 108.64, 0.4322 ) }
    apic_10 { pt3dadd( 440.62, 193.512, 108.64, 0.3814 ) }
    apic_10 { pt3dadd( 440.89, 192.407, 108.64, 0.305 ) }
    apic_10 { pt3dadd( 441.316, 191.351, 108.64, 0.2542 ) }
    apic_10 { pt3dadd( 441.894, 190.373, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 442.704, 189.607, 108.64, 0.2796 ) }
    apic_10 { pt3dadd( 443.345, 188.679, 108.64, 0.356 ) }
    apic_10 { pt3dadd( 444.101, 187.941, 108.64, 0.4576 ) }
    apic_10 { pt3dadd( 444.689, 186.978, 108.64, 0.4576 ) }
    apic_10 { pt3dadd( 445.246, 186.049, 108.64, 0.4068 ) }
    apic_10 { pt3dadd( 445.494, 184.947, 108.64, 0.305 ) }
    apic_10 { pt3dadd( 445.702, 183.824, 108.64, 0.2542 ) }
    apic_10 { pt3dadd( 445.947, 182.74, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 446.696, 181.929, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 447.169, 180.99, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 447.621, 179.956, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 447.819, 178.835, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 448.394, 177.866, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 448.571, 176.763, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 448.963, 175.697, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 449.609, 174.776, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 450.284, 173.985, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 450.582, 172.886, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 451.194, 171.938, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 452.006, 171.147, 108.64, 0.2288 ) }
    apic_10 { pt3dadd( 452.372, 170.087, 108.64, 0.305 ) }
    apic_10 { pt3dadd( 453.29, 169.464, 108.64, 0.483 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 46/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 456.821, 198.536, 139.021, 0.3304 ) }
    apic_19 { pt3dadd( 456.898, 199.873, 138.3, 0.3304 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 48/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 456.821, 198.536, 139.021, 0.3304 ) }
    apic_18 { pt3dadd( 457.382, 197.703, 139.993, 0.2796 ) }
    apic_18 { pt3dadd( 457.975, 196.821, 141.023, 0.2288 ) }
    apic_18 { pt3dadd( 458.523, 195.912, 142.03, 0.2288 ) }
    apic_18 { pt3dadd( 458.808, 194.863, 142.897, 0.2288 ) }
    apic_18 { pt3dadd( 459.093, 193.813, 143.764, 0.2288 ) }
    apic_18 { pt3dadd( 459.377, 192.763, 144.632, 0.2288 ) }
    apic_18 { pt3dadd( 459.0, 191.738, 144.783, 0.2288 ) }
    apic_18 { pt3dadd( 458.482, 190.717, 144.783, 0.2288 ) }
    apic_18 { pt3dadd( 457.964, 189.698, 144.783, 0.2288 ) }
    apic_18 { pt3dadd( 457.447, 188.678, 144.783, 0.2288 ) }
    apic_18 { pt3dadd( 456.929, 187.657, 144.783, 0.2288 ) }
    apic_18 { pt3dadd( 456.471, 186.662, 145.516, 0.2288 ) }
    apic_18 { pt3dadd( 456.025, 185.671, 146.392, 0.2288 ) }
    apic_18 { pt3dadd( 455.579, 184.68, 147.268, 0.2288 ) }
    apic_18 { pt3dadd( 455.155, 183.646, 147.664, 0.2288 ) }
    apic_18 { pt3dadd( 454.75, 182.577, 147.664, 0.2288 ) }
    apic_18 { pt3dadd( 454.345, 181.507, 147.664, 0.2288 ) }
    apic_18 { pt3dadd( 454.057, 180.536, 148.571, 0.2288 ) }
    apic_18 { pt3dadd( 453.876, 179.656, 150.306, 0.2288 ) }
    apic_18 { pt3dadd( 453.694, 178.777, 152.041, 0.2288 ) }
    apic_18 { pt3dadd( 453.514, 177.898, 153.775, 0.2796 ) }
    apic_18 { pt3dadd( 453.277, 176.938, 154.867, 0.3814 ) }
    apic_18 { pt3dadd( 452.946, 175.843, 154.867, 0.483 ) }
    apic_18 { pt3dadd( 452.617, 174.747, 154.867, 0.483 ) }
    apic_18 { pt3dadd( 452.286, 173.652, 154.867, 0.4068 ) }
    // Section: apic_16, id: apic_16, parent: apic_10 (entry count 74/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 453.29, 169.464, 108.64, 0.483 ) }
    apic_16 { pt3dadd( 453.275, 169.406, 111.844, 0.305 ) }
    apic_16 { pt3dadd( 453.262, 169.355, 114.641, 0.2796 ) }
    apic_16 { pt3dadd( 453.252, 169.15, 117.04, 0.2542 ) }
    apic_16 { pt3dadd( 453.336, 168.012, 117.063, 0.2288 ) }
    apic_16 { pt3dadd( 453.366, 166.879, 117.32, 0.2288 ) }
    apic_16 { pt3dadd( 453.366, 165.735, 117.344, 0.2288 ) }
    apic_16 { pt3dadd( 453.407, 164.601, 117.6, 0.2288 ) }
    apic_16 { pt3dadd( 453.481, 163.464, 117.6, 0.2288 ) }
    apic_16 { pt3dadd( 453.451, 162.326, 117.709, 0.2288 ) }
    apic_16 { pt3dadd( 453.366, 161.197, 118.075, 0.2288 ) }
    apic_16 { pt3dadd( 453.366, 160.053, 118.16, 0.2288 ) }
    apic_16 { pt3dadd( 453.109, 158.955, 118.16, 0.2288 ) }
    apic_16 { pt3dadd( 453.023, 157.818, 118.16, 0.2288 ) }
    apic_16 { pt3dadd( 453.023, 156.674, 118.16, 0.2288 ) }
    apic_16 { pt3dadd( 453.023, 155.53, 118.16, 0.2796 ) }
    apic_16 { pt3dadd( 452.817, 154.425, 118.16, 0.3814 ) }
    apic_16 { pt3dadd( 452.335, 153.416, 118.16, 0.5338 ) }
    apic_16 { pt3dadd( 451.879, 152.431, 118.16, 0.6102 ) }
    apic_16 { pt3dadd( 451.684, 151.327, 118.16, 0.6102 ) }
    apic_16 { pt3dadd( 451.104, 150.356, 118.16, 0.5338 ) }
    apic_16 { pt3dadd( 450.741, 149.287, 118.528, 0.4576 ) }
    apic_16 { pt3dadd( 450.393, 148.205, 118.794, 0.4068 ) }
    apic_16 { pt3dadd( 450.256, 147.148, 119.569, 0.3814 ) }
    apic_16 { pt3dadd( 450.165, 146.016, 119.825, 0.4068 ) }
    apic_16 { pt3dadd( 449.849, 144.928, 119.84, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    apic_16 { pt3dadd( 449.282, 143.945, 120.098, 0.3814 ) }
    apic_16 { pt3dadd( 448.646, 143.015, 120.406, 0.305 ) }
    apic_16 { pt3dadd( 448.447, 142.023, 121.24, 0.2542 ) }
    apic_16 { pt3dadd( 448.098, 140.995, 121.24, 0.2288 ) }
    apic_16 { pt3dadd( 447.761, 139.938, 121.24, 0.2288 ) }
    apic_16 { pt3dadd( 447.584, 138.823, 121.24, 0.305 ) }
    apic_16 { pt3dadd( 447.154, 137.874, 121.629, 0.3814 ) }
    apic_16 { pt3dadd( 446.946, 137.098, 123.299, 0.483 ) }
    apic_16 { pt3dadd( 446.845, 135.976, 123.48, 0.4322 ) }
    apic_16 { pt3dadd( 446.845, 134.862, 123.958, 0.3814 ) }
    apic_16 { pt3dadd( 446.845, 133.718, 124.04, 0.2796 ) }
    apic_16 { pt3dadd( 446.731, 132.59, 124.25, 0.2542 ) }
    apic_16 { pt3dadd( 446.627, 131.46, 124.491, 0.2288 ) }
    apic_16 { pt3dadd( 446.502, 130.329, 124.6, 0.2288 ) }
    apic_16 { pt3dadd( 446.502, 129.251, 124.982, 0.2288 ) }
    apic_16 { pt3dadd( 446.388, 128.729, 126.84, 0.2542 ) }
    apic_16 { pt3dadd( 446.388, 127.585, 126.84, 0.2796 ) }
    apic_16 { pt3dadd( 446.388, 126.475, 127.301, 0.305 ) }
    apic_16 { pt3dadd( 446.273, 125.441, 128.419, 0.2796 ) }
    apic_16 { pt3dadd( 446.273, 124.302, 128.52, 0.2542 ) }
    apic_16 { pt3dadd( 446.153, 123.255, 129.202, 0.2288 ) }
    apic_16 { pt3dadd( 446.045, 122.129, 129.445, 0.2288 ) }
    apic_16 { pt3dadd( 445.473, 121.218, 129.832, 0.2288 ) }
    apic_16 { pt3dadd( 445.473, 120.09, 130.2, 0.2288 ) }
    apic_16 { pt3dadd( 445.113, 119.269, 131.154, 0.2288 ) }
    apic_16 { pt3dadd( 444.588, 118.351, 131.88, 0.2288 ) }
    apic_16 { pt3dadd( 444.25, 117.411, 132.857, 0.2288 ) }
    apic_16 { pt3dadd( 444.093, 116.34, 133.56, 0.2288 ) }
    apic_16 { pt3dadd( 443.582, 115.352, 133.56, 0.2542 ) }
    apic_16 { pt3dadd( 442.901, 114.434, 133.56, 0.2796 ) }
    apic_16 { pt3dadd( 442.226, 113.513, 133.56, 0.3304 ) }
    apic_16 { pt3dadd( 441.565, 112.587, 133.56, 0.3304 ) }
    apic_16 { pt3dadd( 440.778, 111.857, 133.56, 0.3304 ) }
    apic_16 { pt3dadd( 440.105, 111.02, 133.442, 0.3304 ) }
    apic_16 { pt3dadd( 439.281, 110.27, 133.0, 0.3814 ) }
    apic_16 { pt3dadd( 438.405, 109.55, 133.0, 0.4576 ) }
    apic_16 { pt3dadd( 437.41, 108.988, 133.0, 0.4576 ) }
    apic_16 { pt3dadd( 436.436, 108.426, 133.0, 0.4068 ) }
    apic_16 { pt3dadd( 435.714, 107.688, 133.0, 0.305 ) }
    apic_16 { pt3dadd( 434.766, 107.058, 133.0, 0.2542 ) }
    apic_16 { pt3dadd( 433.863, 106.506, 132.72, 0.2288 ) }
    apic_16 { pt3dadd( 432.782, 106.262, 132.72, 0.2288 ) }
    apic_16 { pt3dadd( 431.846, 105.615, 132.72, 0.2288 ) }
    apic_16 { pt3dadd( 430.845, 105.074, 132.72, 0.2288 ) }
    apic_16 { pt3dadd( 430.144, 104.268, 132.72, 0.2288 ) }
    apic_16 { pt3dadd( 429.19, 103.949, 132.72, 0.2542 ) }
    apic_16 { pt3dadd( 428.426, 103.187, 132.72, 0.2796 ) }
    apic_16 { pt3dadd( 427.62, 102.386, 132.72, 0.305 ) }
    apic_16 { pt3dadd( 426.637, 101.825, 132.72, 0.3304 ) }
    apic_16 { pt3dadd( 425.702, 101.222, 132.72, 0.4068 ) }
    apic_16 { pt3dadd( 424.763, 100.575, 132.72, 0.5084 ) }
    apic_16 { pt3dadd( 423.885, 99.853, 132.442, 0.6356 ) }
    apic_16 { pt3dadd( 422.837, 99.4056, 132.44, 0.7372 ) }
    apic_16 { pt3dadd( 421.736, 99.1095, 132.44, 0.8136 ) }
    apic_16 { pt3dadd( 420.79, 98.519, 132.44, 0.7372 ) }
    apic_16 { pt3dadd( 419.791, 98.0016, 132.44, 0.6356 ) }
    apic_16 { pt3dadd( 418.709, 97.7162, 132.44, 0.5338 ) }
    apic_16 { pt3dadd( 418.011, 96.9141, 131.88, 0.5338 ) }
    apic_16 { pt3dadd( 417.011, 96.668, 131.201, 0.483 ) }
    apic_16 { pt3dadd( 416.066, 96.2182, 130.76, 0.483 ) }
    apic_16 { pt3dadd( 415.19, 95.5475, 130.76, 0.5084 ) }
    apic_16 { pt3dadd( 414.152, 95.0806, 130.76, 0.5848 ) }
    apic_16 { pt3dadd( 413.144, 94.5616, 130.76, 0.5848 ) }
    apic_16 { pt3dadd( 412.02, 94.4078, 130.76, 0.5338 ) }
    apic_16 { pt3dadd( 410.893, 94.2592, 130.76, 0.4576 ) }
    apic_16 { pt3dadd( 409.767, 94.0638, 130.76, 0.356 ) }
    apic_16 { pt3dadd( 408.624, 94.0368, 130.755, 0.2796 ) }
    apic_16 { pt3dadd( 407.492, 94.0368, 130.48, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 68/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 453.29, 169.464, 108.64, 0.483 ) }
    apic_11 { pt3dadd( 453.799, 168.777, 107.812, 0.2288 ) }
    apic_11 { pt3dadd( 453.684, 168.56, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 454.655, 168.038, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 455.662, 167.517, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 456.472, 166.907, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 457.467, 166.453, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 458.568, 166.223, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 459.646, 165.951, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 460.597, 165.536, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 461.731, 165.382, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 462.861, 165.208, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 464.001, 165.13, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 465.123, 164.915, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 466.206, 164.548, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 467.294, 164.26, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 468.405, 164.03, 105.56, 0.2288 ) }
    apic_11 { pt3dadd( 469.534, 163.859, 105.56, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 86/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 456.898, 199.873, 138.3, 0.3304 ) }
    apic_21 { pt3dadd( 457.51, 199.134, 138.753, 0.2542 ) }
    apic_21 { pt3dadd( 458.226, 198.269, 139.285, 0.2288 ) }
    apic_21 { pt3dadd( 458.942, 197.404, 139.816, 0.2288 ) }
    apic_21 { pt3dadd( 459.659, 196.539, 140.347, 0.2288 ) }
    apic_21 { pt3dadd( 460.375, 195.674, 140.878, 0.2288 ) }
    apic_21 { pt3dadd( 461.092, 194.809, 141.41, 0.2288 ) }
    apic_21 { pt3dadd( 461.791, 193.931, 141.902, 0.2288 ) }
    apic_21 { pt3dadd( 462.255, 192.885, 141.902, 0.2288 ) }
    apic_21 { pt3dadd( 462.719, 191.841, 141.902, 0.2288 ) }
    apic_21 { pt3dadd( 463.184, 190.795, 141.902, 0.2288 ) }
    apic_21 { pt3dadd( 463.649, 189.75, 141.902, 0.2288 ) }
    apic_21 { pt3dadd( 463.815, 188.877, 143.559, 0.2288 ) }
    apic_21 { pt3dadd( 463.951, 188.023, 145.392, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    apic_21 { pt3dadd( 464.085, 187.169, 147.225, 0.2288 ) }
    apic_21 { pt3dadd( 464.22, 186.314, 149.058, 0.2288 ) }
    apic_21 { pt3dadd( 464.356, 185.461, 150.891, 0.2288 ) }
    apic_21 { pt3dadd( 464.492, 184.606, 152.724, 0.2288 ) }
    apic_21 { pt3dadd( 464.627, 183.753, 154.557, 0.2288 ) }
    apic_21 { pt3dadd( 464.762, 182.898, 156.39, 0.2288 ) }
    apic_21 { pt3dadd( 465.346, 182.085, 157.029, 0.2288 ) }
    apic_21 { pt3dadd( 466.172, 181.292, 157.029, 0.2288 ) }
    apic_21 { pt3dadd( 466.997, 180.499, 157.029, 0.2288 ) }
    apic_21 { pt3dadd( 467.822, 179.708, 157.029, 0.2288 ) }
    apic_21 { pt3dadd( 468.648, 178.915, 157.029, 0.2288 ) }
    apic_21 { pt3dadd( 468.911, 177.95, 157.918, 0.2288 ) }
    apic_21 { pt3dadd( 468.966, 176.921, 159.134, 0.2288 ) }
    apic_21 { pt3dadd( 469.022, 175.892, 160.351, 0.2288 ) }
    apic_21 { pt3dadd( 469.429, 174.868, 160.63, 0.2288 ) }
    apic_21 { pt3dadd( 469.94, 173.844, 160.63, 0.2288 ) }
    apic_21 { pt3dadd( 470.452, 172.822, 160.63, 0.2288 ) }
    apic_21 { pt3dadd( 470.964, 171.798, 160.63, 0.2288 ) }
    apic_21 { pt3dadd( 471.476, 170.775, 160.63, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 19/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 456.898, 199.873, 138.3, 0.3304 ) }
    apic_20 { pt3dadd( 456.735, 200.293, 137.398, 0.2288 ) }
    apic_20 { pt3dadd( 456.414, 201.117, 135.624, 0.2288 ) }
    apic_20 { pt3dadd( 457.252, 200.742, 135.891, 0.2288 ) }
    apic_20 { pt3dadd( 458.241, 200.209, 136.424, 0.2288 ) }
    apic_20 { pt3dadd( 459.23, 199.677, 136.957, 0.2288 ) }
    apic_20 { pt3dadd( 460.219, 199.145, 137.49, 0.2288 ) }
    apic_20 { pt3dadd( 461.221, 198.604, 137.724, 0.2288 ) }
    apic_20 { pt3dadd( 462.224, 198.06, 137.898, 0.2288 ) }
    apic_20 { pt3dadd( 463.229, 197.516, 138.071, 0.2288 ) }
    apic_20 { pt3dadd( 464.233, 196.973, 138.245, 0.2288 ) }
    apic_20 { pt3dadd( 465.236, 196.428, 138.418, 0.2288 ) }
    apic_20 { pt3dadd( 466.241, 195.885, 138.592, 0.2288 ) }
    apic_20 { pt3dadd( 467.244, 195.341, 138.765, 0.2288 ) }
    apic_20 { pt3dadd( 468.249, 194.797, 138.939, 0.2288 ) }
    apic_20 { pt3dadd( 469.293, 194.34, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 470.372, 193.962, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 471.452, 193.583, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 472.53, 193.203, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 473.61, 192.825, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 474.698, 192.473, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 475.801, 192.171, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 476.905, 191.87, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 478.009, 191.57, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 479.113, 191.269, 139.021, 0.2288 ) }
    apic_20 { pt3dadd( 480.182, 190.88, 139.138, 0.2288 ) }
    apic_20 { pt3dadd( 481.207, 190.385, 139.397, 0.2288 ) }
    apic_20 { pt3dadd( 482.233, 189.889, 139.656, 0.2288 ) }
    apic_20 { pt3dadd( 483.258, 189.394, 139.915, 0.2288 ) }
    apic_20 { pt3dadd( 484.284, 188.897, 140.174, 0.2542 ) }
    apic_20 { pt3dadd( 485.309, 188.402, 140.433, 0.2796 ) }
    apic_20 { pt3dadd( 486.435, 188.242, 140.461, 0.305 ) }
    apic_20 { pt3dadd( 487.573, 188.12, 140.461, 0.2796 ) }
    apic_20 { pt3dadd( 488.71, 187.999, 140.461, 0.2542 ) }
    apic_20 { pt3dadd( 489.848, 187.878, 140.461, 0.2288 ) }
    apic_20 { pt3dadd( 490.979, 187.84, 140.825, 0.2288 ) }
    apic_20 { pt3dadd( 492.109, 187.818, 141.26, 0.2288 ) }
    apic_20 { pt3dadd( 493.239, 187.797, 141.696, 0.2288 ) }
    apic_20 { pt3dadd( 494.368, 187.775, 142.131, 0.2288 ) }
    apic_20 { pt3dadd( 495.499, 187.752, 142.567, 0.2288 ) }
    apic_20 { pt3dadd( 496.526, 187.625, 143.717, 0.2288 ) }
    apic_20 { pt3dadd( 497.538, 187.482, 144.971, 0.2288 ) }
    apic_20 { pt3dadd( 498.552, 187.338, 146.225, 0.2288 ) }
    apic_20 { pt3dadd( 499.564, 187.195, 147.479, 0.2288 ) }
    apic_20 { pt3dadd( 500.577, 187.052, 148.734, 0.2288 ) }
    apic_20 { pt3dadd( 501.604, 186.9, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 502.729, 186.686, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 503.852, 186.473, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 504.977, 186.259, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 506.1, 186.046, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 507.222, 185.827, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 508.308, 185.465, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 509.394, 185.104, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 510.478, 184.742, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 511.564, 184.381, 149.825, 0.2288 ) }
    apic_20 { pt3dadd( 512.542, 184.01, 150.932, 0.2288 ) }
    apic_20 { pt3dadd( 513.515, 183.638, 152.093, 0.2288 ) }
    apic_20 { pt3dadd( 514.487, 183.268, 153.255, 0.2288 ) }
    apic_20 { pt3dadd( 515.459, 182.896, 154.416, 0.2288 ) }
    apic_20 { pt3dadd( 516.442, 182.614, 155.662, 0.2288 ) }
    apic_20 { pt3dadd( 517.429, 182.391, 156.962, 0.2288 ) }
    apic_20 { pt3dadd( 518.418, 182.168, 158.261, 0.2288 ) }
    apic_20 { pt3dadd( 519.406, 181.944, 159.561, 0.2288 ) }
    apic_20 { pt3dadd( 520.395, 181.721, 160.86, 0.2288 ) }
    apic_20 { pt3dadd( 521.385, 181.493, 162.15, 0.2288 ) }
    apic_20 { pt3dadd( 522.388, 181.213, 163.301, 0.2288 ) }
    apic_20 { pt3dadd( 523.393, 180.933, 164.451, 0.2288 ) }
    apic_20 { pt3dadd( 524.397, 180.652, 165.602, 0.2288 ) }
    apic_20 { pt3dadd( 525.402, 180.372, 166.753, 0.2288 ) }
    apic_20 { pt3dadd( 526.447, 180.146, 167.74, 0.2288 ) }
    apic_20 { pt3dadd( 527.51, 179.943, 168.652, 0.2288 ) }
    apic_20 { pt3dadd( 528.573, 179.741, 169.564, 0.2288 ) }
    apic_20 { pt3dadd( 529.635, 179.539, 170.476, 0.2288 ) }
    apic_20 { pt3dadd( 530.698, 179.337, 171.388, 0.2288 ) }
    apic_20 { pt3dadd( 531.76, 179.135, 172.3, 0.2288 ) }
    apic_20 { pt3dadd( 532.823, 178.933, 173.212, 0.2288 ) }
    apic_20 { pt3dadd( 533.885, 178.732, 174.124, 0.2796 ) }
    apic_20 { pt3dadd( 534.948, 178.529, 175.036, 0.3304 ) }
    // Section: apic_15, id: apic_15, parent: apic_11 (entry count 97/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 469.534, 163.859, 105.56, 0.2288 ) }
    apic_15 { pt3dadd( 469.641, 163.584, 102.919, 0.2288 ) }
    apic_15 { pt3dadd( 469.729, 163.117, 100.8, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    apic_15 { pt3dadd( 469.947, 162.01, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 470.833, 161.322, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 471.645, 160.525, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 472.566, 159.91, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 473.647, 159.535, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 474.723, 159.214, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 475.758, 158.787, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 476.769, 158.421, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 477.632, 157.729, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 477.792, 156.608, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 478.355, 155.649, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 478.924, 154.667, 100.8, 0.2542 ) }
    apic_15 { pt3dadd( 479.443, 153.652, 100.8, 0.305 ) }
    apic_15 { pt3dadd( 479.821, 152.575, 100.8, 0.356 ) }
    apic_15 { pt3dadd( 480.125, 151.475, 100.8, 0.356 ) }
    apic_15 { pt3dadd( 480.453, 150.38, 100.8, 0.305 ) }
    apic_15 { pt3dadd( 480.929, 149.386, 100.8, 0.2542 ) }
    apic_15 { pt3dadd( 480.937, 148.242, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.089, 147.109, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.409, 146.021, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.737, 144.937, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.737, 143.793, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.737, 142.649, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 481.995, 141.541, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 482.3, 140.443, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 482.741, 139.501, 100.8, 0.2288 ) }
    apic_15 { pt3dadd( 482.99, 138.432, 100.52, 0.2288 ) }
    apic_15 { pt3dadd( 483.737, 137.741, 99.96, 0.2288 ) }
    apic_15 { pt3dadd( 484.699, 137.262, 99.96, 0.2288 ) }
    apic_15 { pt3dadd( 485.131, 136.29, 99.4552, 0.2288 ) }
    apic_15 { pt3dadd( 485.921, 136.022, 98.28, 0.2288 ) }
    apic_15 { pt3dadd( 486.936, 135.69, 98.28, 0.2288 ) }
    apic_15 { pt3dadd( 487.753, 134.999, 98.2159, 0.2288 ) }
    apic_15 { pt3dadd( 488.487, 134.206, 97.9916, 0.2288 ) }
    apic_15 { pt3dadd( 489.429, 133.807, 97.44, 0.2288 ) }
    apic_15 { pt3dadd( 490.34, 133.149, 97.16, 0.2288 ) }
    apic_15 { pt3dadd( 491.166, 132.505, 96.88, 0.2288 ) }
    apic_15 { pt3dadd( 492.025, 131.822, 96.6, 0.2288 ) }
    apic_15 { pt3dadd( 493.093, 131.44, 96.6, 0.2288 ) }
    apic_15 { pt3dadd( 493.816, 130.655, 96.3917, 0.2288 ) }
    apic_15 { pt3dadd( 494.222, 129.768, 95.7228, 0.2288 ) }
    apic_15 { pt3dadd( 494.477, 128.67, 95.48, 0.2288 ) }
    apic_15 { pt3dadd( 494.893, 127.745, 95.48, 0.2288 ) }
    apic_15 { pt3dadd( 495.383, 126.746, 95.48, 0.2288 ) }
    apic_15 { pt3dadd( 495.917, 125.738, 95.3963, 0.2288 ) }
    apic_15 { pt3dadd( 496.509, 125.06, 93.9663, 0.2288 ) }
    apic_15 { pt3dadd( 497.134, 124.6, 92.4, 0.2288 ) }
    apic_15 { pt3dadd( 497.705, 123.616, 92.4, 0.2288 ) }
    apic_15 { pt3dadd( 498.337, 122.811, 91.9153, 0.2288 ) }
    apic_15 { pt3dadd( 499.125, 122.107, 91.0753, 0.2288 ) }
    apic_15 { pt3dadd( 500.048, 121.508, 90.4968, 0.2288 ) }
    apic_15 { pt3dadd( 501.055, 120.984, 90.44, 0.2288 ) }
    apic_15 { pt3dadd( 501.414, 119.953, 90.4137, 0.2288 ) }
    apic_15 { pt3dadd( 502.034, 119.662, 89.04, 0.2288 ) }
    apic_15 { pt3dadd( 503.121, 119.436, 88.7986, 0.2288 ) }
    apic_15 { pt3dadd( 503.75, 118.528, 88.5573, 0.2288 ) }
    apic_15 { pt3dadd( 504.376, 117.823, 87.5034, 0.2288 ) }
    apic_15 { pt3dadd( 505.467, 117.529, 87.36, 0.2288 ) }
    apic_15 { pt3dadd( 506.604, 117.436, 87.36, 0.2288 ) }
    apic_15 { pt3dadd( 507.634, 117.037, 87.2962, 0.2288 ) }
    apic_15 { pt3dadd( 508.515, 116.917, 85.96, 0.2288 ) }
    apic_15 { pt3dadd( 509.565, 116.594, 85.96, 0.2288 ) }
    apic_15 { pt3dadd( 510.495, 116.011, 85.5683, 0.2542 ) }
    apic_15 { pt3dadd( 510.685, 115.2, 84.56, 0.305 ) }
    apic_15 { pt3dadd( 511.315, 114.274, 84.5765, 0.356 ) }
    apic_15 { pt3dadd( 512.273, 113.831, 84.4721, 0.356 ) }
    apic_15 { pt3dadd( 513.281, 113.386, 84.6154, 0.356 ) }
    apic_15 { pt3dadd( 514.068, 112.81, 84.0, 0.356 ) }
    apic_15 { pt3dadd( 515.21, 112.798, 84.0904, 0.3814 ) }
    apic_15 { pt3dadd( 515.943, 113.256, 85.4, 0.3304 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 70/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 469.534, 163.859, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 469.977, 163.837, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 471.121, 163.816, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 472.238, 163.587, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 473.204, 163.073, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 474.332, 162.906, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 475.445, 162.736, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 476.565, 162.594, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 477.674, 162.361, 105.56, 0.2288 ) }
    apic_12 { pt3dadd( 478.649, 161.762, 105.56, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 80/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 478.649, 161.762, 105.56, 0.2288 ) }
    apic_14 { pt3dadd( 478.571, 161.622, 106.377, 0.2796 ) }
    apic_14 { pt3dadd( 478.329, 161.19, 108.9, 0.2288 ) }
    apic_14 { pt3dadd( 478.224, 160.667, 111.198, 0.2288 ) }
    apic_14 { pt3dadd( 478.675, 159.779, 112.573, 0.2288 ) }
    apic_14 { pt3dadd( 479.127, 158.89, 113.947, 0.2796 ) }
    apic_14 { pt3dadd( 479.579, 158.001, 115.321, 0.3304 ) }
    apic_14 { pt3dadd( 480.335, 157.374, 116.368, 0.3814 ) }
    apic_14 { pt3dadd( 481.365, 156.983, 117.121, 0.3304 ) }
    apic_14 { pt3dadd( 482.395, 156.591, 117.875, 0.2796 ) }
    apic_14 { pt3dadd( 483.425, 156.198, 118.629, 0.2288 ) }
    apic_14 { pt3dadd( 484.505, 155.939, 119.253, 0.2288 ) }
    apic_14 { pt3dadd( 485.605, 155.734, 119.824, 0.2288 ) }
    apic_14 { pt3dadd( 486.707, 155.529, 120.394, 0.2288 ) }
    apic_14 { pt3dadd( 487.808, 155.324, 120.965, 0.2288 ) }
    apic_14 { pt3dadd( 488.909, 155.118, 121.535, 0.2288 ) }
    apic_14 { pt3dadd( 490.01, 154.914, 122.106, 0.2288 ) }
    apic_14 { pt3dadd( 491.111, 154.709, 122.676, 0.2288 ) }
    apic_14 { pt3dadd( 492.212, 154.504, 123.247, 0.2288 ) }
    apic_14 { pt3dadd( 493.314, 154.299, 123.817, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    apic_14 { pt3dadd( 494.428, 154.22, 124.403, 0.2288 ) }
    apic_14 { pt3dadd( 495.544, 154.162, 124.991, 0.2288 ) }
    apic_14 { pt3dadd( 496.662, 154.104, 125.579, 0.2288 ) }
    apic_14 { pt3dadd( 497.779, 154.104, 126.055, 0.2288 ) }
    apic_14 { pt3dadd( 498.894, 154.355, 126.055, 0.2288 ) }
    apic_14 { pt3dadd( 500.011, 154.608, 126.055, 0.2288 ) }
    apic_14 { pt3dadd( 501.126, 154.86, 126.055, 0.2288 ) }
    apic_14 { pt3dadd( 502.242, 155.111, 126.055, 0.2288 ) }
    apic_14 { pt3dadd( 503.358, 155.364, 126.055, 0.2542 ) }
    apic_14 { pt3dadd( 504.326, 154.916, 126.806, 0.2796 ) }
    apic_14 { pt3dadd( 505.273, 154.377, 127.655, 0.305 ) }
    apic_14 { pt3dadd( 506.22, 153.838, 128.505, 0.2796 ) }
    apic_14 { pt3dadd( 507.204, 153.311, 128.936, 0.2542 ) }
    apic_14 { pt3dadd( 508.226, 152.796, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 509.247, 152.281, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 510.311, 151.96, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 511.138, 151.17, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 511.965, 150.38, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 512.792, 149.589, 128.936, 0.2288 ) }
    apic_14 { pt3dadd( 513.34, 148.703, 129.729, 0.2288 ) }
    apic_14 { pt3dadd( 513.718, 147.758, 131.008, 0.2288 ) }
    apic_14 { pt3dadd( 514.094, 146.813, 132.287, 0.2288 ) }
    apic_14 { pt3dadd( 514.359, 145.727, 132.538, 0.2288 ) }
    apic_14 { pt3dadd( 514.616, 144.636, 132.941, 0.2288 ) }
    apic_14 { pt3dadd( 514.891, 143.566, 133.672, 0.2288 ) }
    apic_14 { pt3dadd( 515.166, 142.497, 134.404, 0.2288 ) }
    apic_14 { pt3dadd( 515.297, 141.403, 135.1, 0.2288 ) }
    apic_14 { pt3dadd( 515.328, 140.292, 135.771, 0.2288 ) }
    apic_14 { pt3dadd( 515.36, 139.182, 136.443, 0.2288 ) }
    apic_14 { pt3dadd( 515.569, 138.102, 136.859, 0.2288 ) }
    apic_14 { pt3dadd( 516.068, 137.073, 136.859, 0.2288 ) }
    apic_14 { pt3dadd( 516.564, 136.042, 136.859, 0.2288 ) }
    apic_14 { pt3dadd( 517.054, 135.096, 137.536, 0.2288 ) }
    apic_14 { pt3dadd( 517.532, 134.246, 138.998, 0.2288 ) }
    apic_14 { pt3dadd( 518.011, 133.396, 140.461, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 35/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 478.649, 161.762, 105.56, 0.2288 ) }
    apic_13 { pt3dadd( 478.928, 161.565, 105.56, 0.2542 ) }
    apic_13 { pt3dadd( 479.976, 161.162, 105.56, 0.2796 ) }
    apic_13 { pt3dadd( 480.96, 160.584, 105.56, 0.305 ) }
    apic_13 { pt3dadd( 481.839, 159.941, 105.56, 0.2796 ) }
    apic_13 { pt3dadd( 482.822, 159.55, 105.28, 0.2542 ) }
    apic_13 { pt3dadd( 483.924, 159.262, 105.28, 0.2288 ) }
    apic_13 { pt3dadd( 485.014, 159.044, 104.75, 0.2288 ) }
    apic_13 { pt3dadd( 485.985, 158.507, 104.213, 0.2288 ) }
    apic_13 { pt3dadd( 487.054, 158.161, 103.88, 0.2288 ) }
    apic_13 { pt3dadd( 488.148, 157.827, 103.88, 0.2288 ) }
    apic_13 { pt3dadd( 489.26, 157.605, 103.88, 0.2288 ) }
    apic_13 { pt3dadd( 490.282, 157.12, 103.759, 0.2288 ) }
    apic_13 { pt3dadd( 491.205, 156.85, 102.76, 0.2288 ) }
    apic_13 { pt3dadd( 492.226, 156.522, 102.02, 0.2288 ) }
    apic_13 { pt3dadd( 493.233, 156.232, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 494.325, 155.908, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 495.348, 155.473, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 496.404, 155.034, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 497.466, 154.62, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 498.491, 154.204, 101.08, 0.2288 ) }
    apic_13 { pt3dadd( 499.301, 153.643, 100.624, 0.2288 ) }
    apic_13 { pt3dadd( 500.249, 153.175, 100.123, 0.2288 ) }
    apic_13 { pt3dadd( 501.352, 153.067, 99.612, 0.2288 ) }
    apic_13 { pt3dadd( 502.459, 153.067, 98.9503, 0.2288 ) }
    apic_13 { pt3dadd( 502.901, 152.395, 98.0, 0.2288 ) }
    apic_13 { pt3dadd( 503.607, 151.536, 98.0, 0.2288 ) }
    apic_13 { pt3dadd( 504.537, 151.15, 97.6562, 0.2288 ) }
    apic_13 { pt3dadd( 505.458, 150.984, 96.6263, 0.2288 ) }
    apic_13 { pt3dadd( 505.859, 149.98, 96.32, 0.2288 ) }
    apic_13 { pt3dadd( 506.495, 149.289, 95.5066, 0.2288 ) }
    apic_13 { pt3dadd( 506.863, 148.251, 95.1706, 0.2288 ) }
    apic_13 { pt3dadd( 507.436, 147.353, 94.8839, 0.2288 ) }
    apic_13 { pt3dadd( 507.877, 146.314, 94.5224, 0.2288 ) }
    apic_13 { pt3dadd( 508.537, 145.429, 93.973, 0.2288 ) }
    apic_13 { pt3dadd( 509.327, 144.663, 93.52, 0.2288 ) }
    apic_13 { pt3dadd( 510.352, 144.335, 93.0126, 0.2288 ) }
    apic_13 { pt3dadd( 511.013, 143.483, 92.9009, 0.2288 ) }
    apic_13 { pt3dadd( 511.385, 142.669, 91.56, 0.2288 ) }
    apic_13 { pt3dadd( 512.526, 142.589, 91.56, 0.2288 ) }
    apic_13 { pt3dadd( 513.666, 142.542, 91.56, 0.2288 ) }
    apic_13 { pt3dadd( 514.789, 142.402, 91.56, 0.2288 ) }
    apic_13 { pt3dadd( 515.849, 142.021, 91.3475, 0.2288 ) }
    apic_13 { pt3dadd( 516.651, 141.734, 89.8979, 0.2288 ) }
    apic_13 { pt3dadd( 517.116, 140.918, 88.8129, 0.2288 ) }
    apic_13 { pt3dadd( 517.937, 140.277, 87.9614, 0.2288 ) }
    apic_13 { pt3dadd( 518.995, 139.857, 87.8968, 0.2288 ) }
    apic_13 { pt3dadd( 519.87, 139.672, 86.52, 0.2288 ) }
    apic_13 { pt3dadd( 520.898, 139.253, 86.3307, 0.2288 ) }
    apic_13 { pt3dadd( 522.027, 139.11, 86.24, 0.2288 ) }
    apic_13 { pt3dadd( 523.036, 138.901, 86.0356, 0.2542 ) }
    apic_13 { pt3dadd( 523.59, 138.004, 85.96, 0.2796 ) }
    apic_13 { pt3dadd( 524.611, 137.566, 85.7861, 0.305 ) }
    apic_13 { pt3dadd( 525.605, 137.269, 85.12, 0.2796 ) }
    apic_13 { pt3dadd( 526.163, 136.271, 85.12, 0.2542 ) }
    apic_13 { pt3dadd( 526.702, 135.499, 84.1198, 0.2288 ) }
    apic_13 { pt3dadd( 526.857, 134.376, 84.0, 0.2288 ) }
    apic_13 { pt3dadd( 526.926, 133.238, 84.0, 0.2288 ) }
    apic_13 { pt3dadd( 526.818, 132.102, 84.0, 0.2288 ) }
    apic_13 { pt3dadd( 526.812, 130.958, 84.0, 0.2288 ) }
    apic_13 { pt3dadd( 526.812, 129.844, 84.518, 0.2288 ) }
    apic_13 { pt3dadd( 526.812, 128.7, 84.56, 0.2288 ) }
    apic_13 { pt3dadd( 526.812, 127.556, 84.56, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_278, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_278 = new SectionList()
    soma_0 ModelViewParmSubset_278.append()
    axon_0 ModelViewParmSubset_278.append()
    axon_1 ModelViewParmSubset_278.append()

    // Group: {name=ModelViewParmSubset_279, groups=[], sections=[dend_55, dend_52, dend_43, dend_42, dend_37, dend_14, dend_9, apic_0, dend_0, dend_57, dend_56, dend_54, dend_53, dend_49, dend_44, dend_41, dend_38, dend_30, dend_15, dend_13, dend_10, apic_26, apic_1, dend_6, dend_1, dend_59, dend_58, dend_51, dend_50, dend_48, dend_45, dend_40, dend_39, dend_36, dend_31, dend_27, dend_16, dend_12, dend_11, apic_5, apic_2, dend_8, dend_7, dend_3, dend_2, dend_47, dend_46, dend_35, dend_32, dend_29, dend_28, dend_26, dend_17, apic_25, apic_6, apic_4, apic_3, dend_5, dend_4, dend_34, dend_33, dend_23, dend_18, apic_24, apic_7, dend_25, dend_24, dend_22, dend_19, apic_23, apic_8, dend_21, dend_20, apic_22, apic_9, apic_17, apic_10, apic_19, apic_18, apic_16, apic_11, apic_21, apic_20, apic_15, apic_12, apic_14, apic_13]}
    ModelViewParmSubset_279 = new SectionList()
    dend_55 ModelViewParmSubset_279.append()
    dend_52 ModelViewParmSubset_279.append()
    dend_43 ModelViewParmSubset_279.append()
    dend_42 ModelViewParmSubset_279.append()
    dend_37 ModelViewParmSubset_279.append()
    dend_14 ModelViewParmSubset_279.append()
    dend_9 ModelViewParmSubset_279.append()
    apic_0 ModelViewParmSubset_279.append()
    dend_0 ModelViewParmSubset_279.append()
    dend_57 ModelViewParmSubset_279.append()
    dend_56 ModelViewParmSubset_279.append()
    dend_54 ModelViewParmSubset_279.append()
    dend_53 ModelViewParmSubset_279.append()
    dend_49 ModelViewParmSubset_279.append()
    dend_44 ModelViewParmSubset_279.append()
    dend_41 ModelViewParmSubset_279.append()
    dend_38 ModelViewParmSubset_279.append()
    dend_30 ModelViewParmSubset_279.append()
    dend_15 ModelViewParmSubset_279.append()
    dend_13 ModelViewParmSubset_279.append()
    dend_10 ModelViewParmSubset_279.append()
    apic_26 ModelViewParmSubset_279.append()
    apic_1 ModelViewParmSubset_279.append()
    dend_6 ModelViewParmSubset_279.append()
    dend_1 ModelViewParmSubset_279.append()
    dend_59 ModelViewParmSubset_279.append()
    dend_58 ModelViewParmSubset_279.append()
    dend_51 ModelViewParmSubset_279.append()
    dend_50 ModelViewParmSubset_279.append()
    dend_48 ModelViewParmSubset_279.append()
    dend_45 ModelViewParmSubset_279.append()
    dend_40 ModelViewParmSubset_279.append()
    dend_39 ModelViewParmSubset_279.append()
    dend_36 ModelViewParmSubset_279.append()
    dend_31 ModelViewParmSubset_279.append()
    dend_27 ModelViewParmSubset_279.append()
    dend_16 ModelViewParmSubset_279.append()
    dend_12 ModelViewParmSubset_279.append()
    dend_11 ModelViewParmSubset_279.append()
    apic_5 ModelViewParmSubset_279.append()
    apic_2 ModelViewParmSubset_279.append()
    dend_8 ModelViewParmSubset_279.append()
    dend_7 ModelViewParmSubset_279.append()
    dend_3 ModelViewParmSubset_279.append()
    dend_2 ModelViewParmSubset_279.append()
    dend_47 ModelViewParmSubset_279.append()
    dend_46 ModelViewParmSubset_279.append()
    dend_35 ModelViewParmSubset_279.append()
    dend_32 ModelViewParmSubset_279.append()
    dend_29 ModelViewParmSubset_279.append()
    dend_28 ModelViewParmSubset_279.append()
    dend_26 ModelViewParmSubset_279.append()
    dend_17 ModelViewParmSubset_279.append()
    apic_25 ModelViewParmSubset_279.append()
    apic_6 ModelViewParmSubset_279.append()
    apic_4 ModelViewParmSubset_279.append()
    apic_3 ModelViewParmSubset_279.append()
    dend_5 ModelViewParmSubset_279.append()
    dend_4 ModelViewParmSubset_279.append()
    dend_34 ModelViewParmSubset_279.append()
    dend_33 ModelViewParmSubset_279.append()
    dend_23 ModelViewParmSubset_279.append()
    dend_18 ModelViewParmSubset_279.append()
    apic_24 ModelViewParmSubset_279.append()
    apic_7 ModelViewParmSubset_279.append()
    dend_25 ModelViewParmSubset_279.append()
    dend_24 ModelViewParmSubset_279.append()
    dend_22 ModelViewParmSubset_279.append()
    dend_19 ModelViewParmSubset_279.append()
    apic_23 ModelViewParmSubset_279.append()
    apic_8 ModelViewParmSubset_279.append()
    dend_21 ModelViewParmSubset_279.append()
    dend_20 ModelViewParmSubset_279.append()
    apic_22 ModelViewParmSubset_279.append()
    apic_9 ModelViewParmSubset_279.append()
    apic_17 ModelViewParmSubset_279.append()
    apic_10 ModelViewParmSubset_279.append()
    apic_19 ModelViewParmSubset_279.append()
    apic_18 ModelViewParmSubset_279.append()
    apic_16 ModelViewParmSubset_279.append()
    apic_11 ModelViewParmSubset_279.append()
    apic_21 ModelViewParmSubset_279.append()
    apic_20 ModelViewParmSubset_279.append()
    apic_15 ModelViewParmSubset_279.append()
    apic_12 ModelViewParmSubset_279.append()
    apic_14 ModelViewParmSubset_279.append()
    apic_13 ModelViewParmSubset_279.append()

    // Group: {name=dend, groups=[], sections=[dend_55, dend_52, dend_43, dend_42, dend_37, dend_14, dend_9, dend_0, dend_57, dend_56, dend_54, dend_53, dend_49, dend_44, dend_41, dend_38, dend_30, dend_15, dend_13, dend_10, dend_6, dend_1, dend_59, dend_58, dend_51, dend_50, dend_48, dend_45, dend_40, dend_39, dend_36, dend_31, dend_27, dend_16, dend_12, dend_11, dend_8, dend_7, dend_3, dend_2, dend_47, dend_46, dend_35, dend_32, dend_29, dend_28, dend_26, dend_17, dend_5, dend_4, dend_34, dend_33, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_21, dend_20]}
    dend = new SectionList()
    dend_55 dend.append()
    dend_52 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_37 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_57 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 dend.append()
    dend_54 dend.append()
    dend_53 dend.append()
    dend_49 dend.append()
    dend_44 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_30 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_59 dend.append()
    dend_58 dend.append()
    dend_51 dend.append()
    dend_50 dend.append()
    dend_48 dend.append()
    dend_45 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_31 dend.append()
    dend_27 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_17 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_26, apic_1, apic_5, apic_2, apic_25, apic_6, apic_4, apic_3, apic_24, apic_7, apic_23, apic_8, apic_22, apic_9, apic_17, apic_10, apic_19, apic_18, apic_16, apic_11, apic_21, apic_20, apic_15, apic_12, apic_14, apic_13]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_26 apic.append()
    apic_1 apic.append()
    apic_5 apic.append()
    apic_2 apic.append()
    apic_25 apic.append()
    apic_6 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()
    apic_24 apic.append()
    apic_7 apic.append()
    apic_23 apic.append()
    apic_8 apic.append()
    apic_22 apic.append()
    apic_9 apic.append()
    apic_17 apic.append()
    apic_10 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_16 apic.append()
    apic_11 apic.append()
    apic_21 apic.append()
    apic_20 apic.append()
    apic_15 apic.append()
    apic_12 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()

    // Group: {name=OneSecGrp_SectionRef_12945, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_12945 = new SectionList()
    soma_0 OneSecGrp_SectionRef_12945.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_26 all.append()
    apic_26 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_8 all.append()
    apic_8 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.93  // units: uF/cm2
    forsec dend cm = 2.93  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 492.53998  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 3.8450537E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.0032792008  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.20306844  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 5.505046E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 4.618439E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 7.700696E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 8.610225E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.108700596  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 4.7714863E-4  // units: S cm-2
        e_pas_nml2 = -87.99981  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 6.341573E-4  // units: S cm-2
        e_pas_nml2 = -87.99981  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.135154E-5  // units: S cm-2
        e_pas_nml2 = -87.99981  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 6.6417456E-4  // units: S cm-2
        e_pas_nml2 = -87.99981  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.441382E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0039738817  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_52 nseg = 3
    dend_42 nseg = 9
    dend_56 nseg = 9
    dend_54 nseg = 5
    dend_53 nseg = 7
    dend_41 nseg = 5
    apic_26 nseg = 9
    dend_58 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 7
    dend_48 nseg = 9
    dend_40 nseg = 5
    dend_39 nseg = 9
    dend_36 nseg = 5
    dend_11 nseg = 3
    dend_8 nseg = 5
    dend_7 nseg = 7
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_35 nseg = 5
    dend_29 nseg = 7
    dend_28 nseg = 7
    dend_26 nseg = 3
    apic_25 nseg = 5
    apic_4 nseg = 7
    apic_3 nseg = 7
    dend_4 nseg = 5
    dend_34 nseg = 5
    dend_33 nseg = 5
    apic_24 nseg = 5
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_22 nseg = 5
    apic_23 nseg = 9
    dend_20 nseg = 5
    apic_22 nseg = 5
    apic_9 nseg = 13
    apic_17 nseg = 5
    apic_10 nseg = 5
    apic_16 nseg = 5
    apic_21 nseg = 3
    apic_20 nseg = 5
    apic_15 nseg = 5
    apic_14 nseg = 3
    apic_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472912107


