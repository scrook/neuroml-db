// Cell: Cell_472299294
/*
{
  "id" : "Cell_472299294",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "362.52, 355.67, 28.56, 12.153", "368.597, 355.67, 28.56, 12.153", "374.673, 355.67, 28.56, 12.153" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "368.596, 355.67, 28.56, 1.0", "374.438, 369.486, 28.56, 1.0", "380.279, 383.302, 28.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "365.673, 357.275, 25.3075, 0.4322", "363.98, 355.24, 23.5418, 0.483", "363.092, 354.732, 23.5418, 0.4322", "360.187, 354.945, 22.9533, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "365.881, 359.313, 34.1359, 0.4068", "365.792, 360.83, 34.1359, 0.483", "366.565, 361.391, 35.313, 0.5592", "367.09, 361.672, 35.313, 0.5338", "368.234, 362.083, 35.313, 0.5338", "369.919, 362.09, 36.4902, 0.5084", "371.035, 361.587, 36.4902, 0.5848", "371.937, 360.349, 36.4902, 0.5848", "372.359, 358.541, 37.667, 0.5848", "372.711, 357.898, 37.667, 0.483", "373.564, 357.658, 37.667, 0.5084", "375.732, 357.239, 38.8441, 0.483", "376.53, 356.727, 38.8441, 0.5084", "378.26, 356.745, 38.8441, 0.4322", "378.763, 356.213, 38.8441, 0.4576", "378.409, 354.887, 40.0212, 0.483", "377.882, 354.06, 40.0212, 0.5084", "378.004, 353.041, 40.0212, 0.4322", "378.56, 352.86, 40.0212, 0.3814", "379.726, 352.931, 40.0212, 0.3814", "381.271, 352.973, 41.1984, 0.4322", "382.388, 352.855, 41.1984, 0.4322", "382.962, 352.409, 41.1984, 0.3814", "383.671, 352.511, 41.1984, 0.3814", "383.898, 353.375, 41.7869, 0.4068", "384.105, 353.955, 41.7869, 0.4322", "384.56, 354.282, 41.7869, 0.3814", "385.148, 354.0, 41.7869, 0.356", "387.145, 353.22, 42.3755, 0.4576", "394.135, 350.245, 48.8496, 0.4576", "394.777, 349.586, 48.8496, 0.356", "395.961, 349.3, 48.8496, 0.305", "396.615, 349.287, 48.8496, 0.305", "398.453, 348.294, 50.6153, 0.3814", "400.35, 348.462, 53.5578, 0.4322", "401.868, 349.309, 56.5006, 0.4576", "407.552, 350.617, 58.8549, 0.356", "410.501, 351.038, 58.8549, 0.4068", "421.056, 352.338, 62.3862, 0.483", "428.538, 354.514, 65.9176, 0.5084", "429.919, 355.531, 65.9176, 0.4322", "432.82, 355.751, 67.0947, 0.4068", "436.167, 355.095, 67.0947, 0.4322", "440.591, 352.979, 71.2144, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "374.016, 356.923, 28.2503, 0.4068", "374.944, 357.031, 28.2503, 0.4576", "375.516, 357.066, 28.2503, 0.5592", "377.27, 354.352, 27.6618, 1.144", "378.405, 354.168, 27.4327, 1.0424", "379.41, 353.65, 27.4014, 0.8644", "380.401, 353.085, 27.251, 0.788", "381.417, 352.629, 26.7193, 0.8644", "382.512, 352.467, 27.3622, 0.9152", "383.654, 352.47, 27.4123, 0.9152", "384.796, 352.49, 27.2482, 0.8644", "385.885, 352.606, 26.5065, 0.8644", "386.909, 353.091, 26.3287, 0.9406", "387.795, 353.813, 26.3589, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "363.993, 357.119, 29.232, 0.661", "363.193, 357.498, 27.6374, 0.7626", "362.378, 358.288, 27.4425, 0.7372", "361.701, 359.202, 27.4515, 0.661", "361.165, 360.21, 27.5002, 0.6102", "360.536, 361.161, 27.7172, 0.6356", "360.246, 361.887, 28.3464, 0.6864", "359.714, 362.88, 28.693, 0.7118", "359.353, 363.91, 29.346, 0.7118", "359.153, 364.976, 30.1204, 0.661", "359.63, 365.94, 30.8266, 0.661", "360.323, 366.825, 31.2376, 0.661", "360.906, 367.772, 31.8419, 0.661", "361.305, 368.826, 31.8668, 0.6356", "361.342, 369.933, 31.5736, 0.6102", "361.044, 370.989, 30.8652, 0.661", "360.635, 372.055, 30.8006, 0.7118", "359.98, 372.984, 30.8022, 0.7626", "359.193, 373.813, 30.8098, 0.7372", "358.483, 374.705, 30.8442, 0.7118", "357.79, 375.609, 31.0184, 0.6864", "356.992, 376.367, 31.6372, 0.6864", "356.118, 377.03, 30.9977, 0.6864", "355.459, 377.894, 30.3257, 0.7118", "355.402, 379.004, 29.9886, 0.788", "355.77, 380.003, 30.9025, 0.8644", "356.443, 380.84, 31.7562, 0.8644", "356.698, 381.929, 31.9192, 0.7626", "356.691, 383.073, 31.9141, 0.661", "356.652, 384.216, 31.8777, 0.6356", "356.385, 385.31, 31.6736, 0.6864", "355.906, 386.293, 30.9179, 0.7372", "355.439, 387.326, 30.6368, 0.7626", "355.127, 388.38, 29.948, 0.7118", "354.875, 389.48, 29.6856, 0.661", "354.87, 390.625, 29.7195, 0.6102", "354.879, 391.765, 29.9211, 0.6102", "354.939, 392.863, 30.6191, 0.5592", "355.215, 393.936, 30.2, 0.4576", "355.223, 395.023, 29.4095, 0.2288", "354.789, 395.974, 28.6745, 0.5338", "354.01, 396.809, 28.56, 0.661", "353.224, 397.639, 28.56, 0.788", "352.536, 398.547, 28.56, 0.9152", "351.928, 399.516, 28.56, 1.0168", "351.634, 400.608, 28.56, 0.9914", "351.433, 401.725, 28.56, 0.8136", "351.183, 402.836, 28.56, 0.6356", "351.013, 403.959, 28.5589, 0.5592", "350.826, 405.079, 28.5538, 0.6102", "350.914, 406.183, 28.5163, 0.6356", "350.302, 407.132, 28.3116, 0.6356", "349.311, 407.552, 27.5408, 0.6356", "348.181, 407.4, 27.4016, 0.661", "347.043, 407.396, 27.193, 0.7118", "345.939, 407.486, 26.8825, 0.7118", "344.9, 407.886, 27.4176, 0.6864", "343.885, 408.414, 27.4621, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "368.762, 361.372, 29.0976, 0.5848", "369.48, 362.176, 28.5636, 0.7626", "370.44, 362.794, 28.56, 0.839", "370.987, 363.767, 28.5589, 0.9152", "371.417, 364.825, 28.5538, 0.9152", "371.848, 365.878, 28.5211, 0.966", "372.224, 366.952, 28.3349, 0.9406", "372.591, 367.981, 27.5918, 0.9406", "373.045, 369.025, 27.4473, 0.9406", "373.268, 370.145, 27.4884, 0.9914", "373.605, 371.228, 27.7043, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "373.63, 355.587, 28.5309, 0.6864", "375.003, 354.964, 28.2895, 0.6864", "375.586, 353.258, 28.4724, 0.661", "376.27, 352.39, 27.9899, 0.5848" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "364.307, 351.553, 27.8782, 0.483", "363.355, 350.985, 28.492, 0.6864", "362.328, 350.503, 28.56, 0.839", "361.337, 349.944, 28.56, 0.9406", "360.276, 349.529, 28.56, 0.9406", "359.259, 349.009, 28.56, 0.966", "358.303, 348.384, 28.56, 0.9152", "357.277, 347.888, 28.5594, 0.8644", "356.242, 347.417, 28.5572, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000411421048291
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "380.279, 383.302, 28.56, 1.0", "386.12, 397.118, 28.56, 1.0", "391.962, 410.934, 28.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "365.673, 357.275, 25.3075, 0.4322", "365.502, 358.582, 24.1304, 0.356", "365.418, 358.879, 24.1304, 0.356", "365.036, 359.176, 24.1304, 0.3304", "364.656, 359.344, 24.1304, 0.356", "364.444, 359.684, 24.1304, 0.356", "364.571, 360.022, 24.1304, 0.3814", "364.993, 360.15, 24.1304, 0.5084", "365.502, 360.615, 24.1304, 0.5592", "366.01, 361.716, 24.1304, 0.7118", "367.151, 362.55, 23.5418, 0.7118", "367.868, 362.677, 23.5418, 0.5848", "368.29, 362.466, 23.5418, 0.4068", "368.714, 362.297, 23.5418, 0.2796", "369.052, 362.466, 23.5418, 0.2288", "369.137, 362.846, 23.5418, 0.2288", "369.088, 363.466, 22.9533, 0.2288", "369.215, 363.889, 22.9533, 0.2288", "369.594, 364.1, 22.9533, 0.2288", "370.1, 363.847, 22.9533, 0.2542", "370.858, 363.508, 22.9533, 0.305", "372.505, 363.003, 22.9533, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "387.795, 353.813, 26.3589, 1.144", "388.609, 353.561, 25.5906, 0.6102", "388.854, 352.486, 25.7734, 0.5084", "389.635, 351.898, 25.0169, 0.5338", "390.493, 351.333, 24.1374, 0.661", "390.941, 350.289, 23.9845, 0.7372", "391.023, 349.178, 23.4738, 0.7372", "391.04, 348.065, 23.849, 0.6864", "391.154, 346.939, 24.0736, 0.6102", "391.509, 345.854, 24.0369, 0.5592", "391.907, 344.821, 23.7423, 0.5338", "392.802, 344.214, 23.1277, 0.5084", "393.487, 343.414, 24.0352, 0.4576", "394.35, 342.82, 24.943, 0.4068", "395.358, 343.056, 25.5514, 0.3814", "395.278, 344.064, 26.507, 0.356", "394.695, 344.985, 27.2714, 0.305", "393.765, 345.602, 27.44, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "387.795, 353.813, 26.3589, 1.144", "388.578, 354.579, 26.4902, 0.8898", "389.217, 355.37, 27.47, 0.788", "389.676, 356.26, 27.6578, 0.788", "390.47, 356.927, 26.5482, 0.788", "391.316, 357.682, 26.2707, 0.7372", "392.289, 358.272, 26.0809, 0.6864", "393.251, 358.798, 25.3585, 0.661", "394.135, 359.491, 25.3238, 0.7372", "394.639, 360.472, 25.9193, 0.7626", "395.01, 361.402, 27.2331, 0.7626", "395.635, 362.306, 27.9563, 0.6864", "396.345, 363.163, 28.5093, 0.6356", "397.289, 363.797, 28.56, 0.6356", "398.247, 364.415, 28.5603, 0.661", "399.254, 364.957, 28.5617, 0.6864", "400.185, 365.619, 28.5684, 0.7118", "401.154, 366.225, 28.6042, 0.6864", "402.121, 366.825, 28.791, 0.6356", "403.059, 367.341, 29.6783, 0.5338", "403.811, 367.947, 31.0747, 0.5338", "404.243, 368.938, 31.6523, 0.5848", "404.322, 370.021, 30.8944, 0.661", "404.509, 371.141, 30.9372, 0.6864", "405.404, 371.712, 31.6064, 0.6864", "406.466, 372.065, 31.6523, 0.6864" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "343.885, 408.414, 27.4621, 0.4576", "343.618, 409.578, 27.4946, 0.5084", "343.065, 410.569, 27.771, 0.5592", "342.571, 411.513, 28.7507, 0.6102", "342.01, 412.425, 29.654, 0.6864", "341.267, 413.267, 30.1101, 0.7626", "340.467, 414.279, 30.8, 0.8136", "339.831, 415.22, 30.8, 0.8898", "339.464, 416.301, 30.7994, 0.9152", "339.251, 417.308, 30.7964, 0.8644", "338.913, 418.379, 30.777, 0.7118", "338.096, 419.171, 30.6874, 0.5592", "337.061, 419.508, 30.1188, 0.5084", "335.938, 419.556, 29.68, 0.5084", "334.85, 419.85, 29.68, 0.5592", "333.897, 420.47, 29.68, 0.6864", "333.176, 421.558, 29.68, 0.6864", "332.84, 422.645, 29.68, 0.6864", "332.474, 423.715, 29.6808, 0.6864", "331.872, 424.684, 29.6839, 0.6864", "331.228, 425.62, 29.6988, 0.6864", "331.068, 426.741, 29.804, 0.6864", "331.034, 427.843, 30.4545, 0.661", "330.79, 428.935, 30.751, 0.6356", "330.271, 429.94, 30.5012, 0.5848", "329.914, 430.939, 29.7422, 0.5592", "330.398, 431.955, 30.0504, 0.5084", "330.348, 433.011, 30.7521, 0.5084", "329.814, 434.007, 30.8, 0.5338", "329.695, 435.138, 30.8, 0.5592", "329.656, 436.28, 30.7994, 0.5848", "329.407, 437.387, 30.7969, 0.5848", "329.31, 438.518, 30.7779, 0.661", "329.672, 439.582, 30.66, 0.6864", "330.474, 440.684, 29.7814, 0.7372", "330.615, 441.81, 29.6853, 0.7118", "330.607, 442.954, 29.717, 0.7118", "330.553, 444.093, 29.9155, 0.7626", "330.247, 445.13, 30.6757, 0.9152", "329.348, 446.857, 30.8022, 0.6356", "328.779, 447.844, 30.8118, 0.5338", "328.377, 448.91, 30.8767, 0.4576", "327.9, 449.925, 31.2701, 0.4068", "327.401, 450.917, 31.7173, 0.3814", "326.496, 451.466, 30.9302, 0.4322", "325.474, 451.419, 29.7833, 0.5084", "324.465, 450.922, 29.7284, 0.5848", "323.523, 450.304, 29.9485, 0.5848", "322.419, 450.206, 29.6853, 0.5338", "321.358, 450.431, 28.9024, 0.5084", "320.452, 451.108, 28.597, 0.483", "319.525, 451.767, 28.756, 0.4576", "318.725, 452.491, 29.5557, 0.2288", "318.12, 453.277, 29.68, 0.2796", "317.285, 454.042, 29.6806, 0.4322", "316.424, 454.794, 29.6831, 0.661", "315.695, 455.673, 29.6937, 0.8136", "315.318, 456.749, 29.7713, 0.839", "314.988, 457.812, 30.27, 0.788", "314.571, 458.833, 30.7768, 0.9152", "313.384, 460.06, 30.4559, 0.7372", "313.227, 461.136, 30.3635, 0.6864", "313.226, 462.267, 30.606, 0.6356", "313.224, 463.365, 29.8735, 0.661", "313.2, 464.503, 29.8656, 0.7626", "313.04, 465.581, 30.6029, 0.788", "313.085, 466.683, 30.884, 0.7372", "313.302, 467.784, 31.1623, 0.6102", "313.672, 468.836, 30.8272, 0.6102", "314.424, 469.695, 30.8132, 0.6356", "315.186, 470.549, 30.8563, 0.6864", "315.738, 471.539, 31.0822, 0.661", "315.956, 472.576, 32.0477, 0.6356", "315.865, 473.649, 32.8698, 0.6102", "315.358, 474.596, 32.2862, 0.5848", "314.618, 475.442, 31.7951, 0.5084", "314.163, 476.443, 31.3306, 0.2288", "314.092, 477.525, 32.0359, 0.5338", "313.855, 478.526, 33.1792, 0.6356", "313.717, 479.582, 34.0796, 0.661", "313.413, 480.626, 34.207, 0.7118", "312.684, 481.505, 34.3624, 0.7372", "312.23, 482.493, 35.0524, 0.7372", "311.858, 483.565, 35.2366, 0.7372", "311.581, 484.664, 34.9563, 0.7118", "311.801, 485.559, 33.4555, 0.7118", "311.747, 486.672, 33.0336, 0.6864", "311.382, 487.752, 32.9983, 0.6864", "311.094, 488.846, 32.7202, 0.6864" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "343.885, 408.414, 27.4621, 0.4576", "343.266, 408.349, 27.5072, 0.5338", "342.176, 408.049, 27.8429, 0.5084", "341.223, 407.847, 29.2452, 0.5084", "340.227, 407.847, 30.5315, 0.5338", "339.127, 407.915, 29.9488, 0.6102", "338.046, 408.218, 29.5453, 0.661", "336.958, 408.305, 28.8358, 0.6356", "335.877, 408.374, 27.9636, 0.5592", "334.921, 408.802, 27.0301, 0.4322", "334.595, 409.698, 25.6998, 0.3814", "334.201, 410.742, 25.2188, 0.3304", "334.174, 411.856, 25.3296, 0.4068", "333.784, 412.733, 26.1551, 0.483", "332.674, 412.689, 26.124, 0.6356", "331.672, 413.144, 25.4492, 0.7118", "330.678, 413.554, 25.8289, 0.7626", "329.1, 414.741, 26.32, 0.8136", "328.228, 415.48, 26.3197, 0.8644", "327.413, 416.283, 26.3194, 0.8644", "326.579, 417.056, 26.3175, 0.8644", "325.629, 417.677, 26.3074, 0.8136", "324.568, 418.09, 26.2416, 0.7626", "323.578, 418.622, 25.8664, 0.6864", "322.695, 419.286, 25.2739, 0.6356", "322.036, 420.204, 25.2361, 0.6356", "321.84, 421.322, 25.4212, 0.6356", "321.378, 422.29, 25.6922, 0.661", "320.523, 423.0, 25.1045, 0.6356", "319.538, 423.423, 24.4068, 0.661", "318.557, 423.676, 23.5561, 0.6356", "317.558, 424.006, 24.4986, 0.6356", "317.217, 424.806, 26.229, 0.5848", "316.726, 425.689, 27.4484, 0.4576", "316.95, 426.797, 27.4389, 0.4322", "317.331, 427.863, 27.4313, 0.4576", "317.227, 428.828, 27.3655, 0.5592", "316.284, 429.443, 27.0108, 0.6356", "315.225, 429.748, 26.3444, 0.661", "314.382, 430.505, 26.3869, 0.6102", "313.535, 431.257, 26.684, 0.5084", "313.316, 432.132, 28.1879, 0.4068", "313.733, 433.158, 28.672, 0.2288", "313.188, 434.125, 28.3422, 0.6864", "312.927, 435.177, 27.6469, 0.6356", "312.161, 435.956, 28.1414, 0.5848", "311.353, 436.521, 29.4566, 0.5338", "310.431, 436.951, 28.6286, 0.6864", "309.664, 437.499, 28.5239, 0.5848", "308.881, 438.333, 28.4046, 0.5084", "308.234, 439.23, 27.8267, 0.4576", "307.536, 440.122, 27.5061, 0.4576", "306.823, 441.012, 27.7136, 0.4322", "306.712, 442.166, 28.5236, 0.4068", "307.188, 443.193, 28.6905, 0.4322", "307.308, 444.252, 29.3544, 0.5084", "306.719, 445.198, 29.944, 0.5848", "306.263, 446.211, 30.2896, 0.6102", "306.17, 447.318, 29.72, 0.5592", "306.358, 448.439, 29.7674, 0.5338", "306.073, 449.489, 30.2512, 0.483", "305.401, 450.356, 30.9672, 0.5084", "304.545, 451.041, 31.698, 0.4576", "303.953, 452.006, 31.7335, 0.4068", "303.495, 452.954, 30.7997, 0.356", "302.628, 452.843, 29.6579, 0.3814", "301.62, 452.473, 28.9988, 0.4576", "300.507, 452.572, 28.4794, 0.483", "299.65, 453.233, 27.9135, 0.483", "299.315, 454.256, 28.4194, 0.483", "299.51, 455.371, 28.56, 0.483", "299.241, 456.461, 28.5611, 0.4576", "298.806, 457.512, 28.5664, 0.3814", "298.771, 458.614, 28.604, 0.356", "299.091, 459.704, 28.81, 0.4322", "299.342, 460.768, 29.5736, 0.5338", "299.663, 461.856, 29.6582, 0.5848", "299.974, 462.953, 29.5456, 0.5084", "299.928, 464.028, 28.8868, 0.4576", "299.329, 464.988, 28.6023, 0.483", "298.835, 466.013, 28.7857, 0.5848", "298.419, 467.023, 29.5274, 0.6102", "297.829, 467.993, 29.759, 0.5848", "297.38, 469.018, 30.0933, 0.483", "296.883, 470.031, 29.7528, 0.4322", "295.951, 470.459, 29.176, 0.356", "295.516, 471.256, 28.0778, 0.3814", "295.047, 472.105, 29.4003, 0.4068", "294.359, 472.944, 28.8299, 0.4576", "294.237, 474.058, 28.7588, 0.4068", "294.233, 475.179, 28.7353, 0.356", "294.215, 476.318, 28.5608, 0.2796", "294.089, 477.454, 28.5656, 0.305", "293.538, 478.443, 28.5888, 0.3814", "292.996, 479.447, 28.7064, 0.5084", "292.604, 480.481, 28.7109, 0.5592", "292.424, 481.591, 28.56, 0.5084", "292.523, 482.728, 28.5597, 0.4576", "292.664, 483.842, 28.5586, 0.4322", "291.844, 484.562, 28.551, 0.4576", "290.842, 485.096, 28.5085, 0.4068", "289.914, 485.737, 28.2873, 0.3814", "288.82, 485.982, 28.411, 0.356", "287.765, 486.408, 28.56, 0.4068", "286.685, 486.748, 28.56, 0.4068", "285.542, 486.772, 28.56, 0.4576" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "373.605, 371.228, 27.7043, 1.144", "371.984, 372.251, 27.5514, 0.839", "371.053, 372.806, 28.2268, 0.7118", "370.102, 373.415, 28.3088, 0.6356", "369.345, 374.162, 27.5299, 0.661", "368.907, 375.21, 27.4932, 0.7372", "368.276, 376.151, 27.7105, 0.9152" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "373.605, 371.228, 27.7043, 1.144", "373.905, 372.539, 28.4864, 0.788", "374.129, 373.643, 28.1652, 0.7626", "374.358, 374.71, 27.4887, 0.7626" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "376.27, 352.39, 27.9899, 0.5848", "373.693, 351.81, 27.0732, 0.4322", "372.01, 351.158, 27.0732, 0.4068", "368.946, 349.908, 25.8961, 0.4322", "368.447, 349.465, 25.8961, 0.5084", "366.385, 349.515, 24.719, 0.483", "365.72, 349.088, 24.719, 0.4068", "365.415, 349.689, 24.719, 0.4576", "365.967, 350.71, 22.9533, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "376.27, 352.39, 27.9899, 0.5848", "376.346, 351.298, 27.4971, 0.5338", "376.161, 350.183, 27.7718, 0.5338", "376.337, 349.244, 28.7605, 0.661", "376.967, 348.375, 29.5884, 0.7372", "377.967, 347.878, 29.724, 0.7626", "379.071, 347.627, 29.9334, 0.6864", "380.152, 347.503, 30.6891, 0.661", "381.247, 347.794, 30.6827, 0.661", "382.342, 347.853, 30.0317, 0.6864", "383.409, 347.585, 29.4767, 0.7118", "384.135, 346.791, 28.7907, 0.7626", "384.661, 345.854, 29.5137, 0.8136", "385.203, 345.239, 31.428, 0.788", "386.046, 344.613, 32.4576, 0.7626", "386.854, 343.844, 32.9596, 0.7626", "387.698, 343.079, 32.7653, 0.8136", "388.604, 342.48, 31.9334, 0.839", "389.467, 341.839, 31.0318, 0.788", "390.16, 341.097, 29.818, 0.7118", "391.091, 340.458, 29.7626, 0.6356", "392.132, 340.059, 30.198, 0.6356", "393.167, 339.733, 31.05, 0.6864", "394.216, 339.62, 32.1026, 0.7118", "395.237, 339.419, 33.1554, 0.7118", "396.105, 338.79, 34.0399, 0.6864", "397.021, 338.118, 34.16, 0.6864", "397.704, 337.209, 34.16, 0.7118", "398.44, 336.336, 34.16, 0.7372", "399.227, 335.504, 34.16, 0.7626", "399.906, 334.589, 34.16, 0.7372", "400.645, 333.719, 34.16, 0.6864", "401.499, 332.957, 34.1603, 0.6102", "402.471, 332.357, 34.1614, 0.5338", "403.464, 331.8, 34.1676, 0.483", "404.558, 331.656, 34.2079, 0.4576", "405.674, 331.87, 34.442, 0.5084", "406.769, 331.845, 35.2075, 0.5848", "407.898, 331.691, 35.2803, 0.6356", "408.848, 331.066, 35.282, 0.5592", "409.828, 330.503, 35.2909, 0.4322", "410.823, 330.776, 35.3704, 0.356", "411.665, 330.766, 36.3306, 0.4322", "412.18, 329.888, 37.438, 0.5848", "412.815, 328.942, 37.52, 0.7626", "413.534, 328.053, 37.52, 0.8136", "414.217, 327.139, 37.52, 0.788", "415.06, 326.384, 37.5203, 0.6864", "416.048, 325.81, 37.5214, 0.661", "416.874, 325.029, 37.5276, 0.661", "417.109, 323.922, 37.5721, 0.7372", "417.156, 322.786, 37.8428, 0.8136", "417.411, 321.774, 38.9094, 0.9152", "417.591, 320.768, 40.1411, 0.9406", "417.775, 319.732, 41.1732, 0.9152", "419.198, 319.492, 42.4222, 0.9152", "420.299, 319.361, 42.3878, 0.9152" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "356.242, 347.417, 28.5572, 0.6864", "355.946, 347.485, 29.5826, 0.4322", "354.893, 347.747, 28.8504, 0.4068", "353.853, 347.603, 27.8068, 0.4068", "352.917, 348.167, 27.6777, 0.5084", "352.456, 349.134, 28.5146, 0.5592", "351.885, 350.04, 29.3969, 0.6356", "351.251, 350.976, 29.6257, 0.661", "350.484, 351.818, 29.4358, 0.661", "349.716, 352.59, 28.665, 0.5848", "348.917, 353.406, 28.5712, 0.5084", "348.141, 354.246, 28.6062, 0.4576", "347.538, 355.204, 28.7731, 0.5084", "347.187, 356.255, 29.2289, 0.5592", "346.861, 357.329, 28.805, 0.6356", "346.614, 358.405, 29.4115, 0.6356", "346.491, 359.497, 28.8621, 0.6356", "346.436, 360.597, 28.5718, 0.6102", "346.624, 361.72, 28.6392, 0.6356", "346.582, 362.836, 29.1309, 0.6102", "346.316, 363.905, 29.7072, 0.5848", "346.082, 364.998, 29.8614, 0.5338", "346.512, 366.004, 30.5138, 0.5848", "347.215, 366.899, 30.5939, 0.6102", "347.755, 367.857, 29.9292, 0.6356", "348.005, 368.957, 29.8234, 0.5848", "348.004, 370.058, 30.5122, 0.5848", "348.0, 371.191, 30.7443, 0.5848", "347.969, 372.318, 30.3772, 0.6102", "347.768, 373.404, 29.8318, 0.5848", "347.62, 374.488, 30.4363, 0.5848", "347.953, 375.558, 30.8182, 0.5848", "348.368, 376.617, 30.9092, 0.5848", "348.911, 377.589, 31.411, 0.483", "349.259, 378.653, 31.4588, 0.2288", "349.148, 379.007, 30.24, 0.2288", "349.148, 379.35, 30.24, 0.2288", "349.148, 379.694, 30.24, 0.2796", "349.034, 380.151, 30.24, 0.483", "349.034, 380.952, 30.24, 0.5084", "349.034, 381.753, 30.24, 0.4322", "349.034, 382.554, 30.24, 0.3814", "349.034, 383.354, 30.24, 0.356", "349.034, 384.155, 30.24, 0.4322", "349.072, 384.918, 30.24, 0.483", "349.378, 385.414, 30.24, 0.5084", "349.605, 385.986, 30.24, 0.4576", "349.605, 386.786, 30.24, 0.4068", "349.605, 387.13, 30.24, 0.483", "349.957, 387.334, 30.0426, 0.2288", "350.776, 388.037, 30.6695, 0.3814", "351.665, 388.736, 30.7759, 0.5084", "352.264, 389.694, 31.0111, 0.5848", "352.53, 390.745, 31.7332, 0.5848", "352.581, 391.885, 31.8931, 0.5592", "352.846, 392.991, 31.9158, 0.5084", "353.013, 394.113, 32.0468, 0.5084", "353.012, 395.221, 32.5816, 0.483", "352.766, 396.309, 32.0496, 0.4576", "353.066, 397.365, 31.7926, 0.356", "353.273, 397.765, 30.8367, 0.2288", "353.91, 398.079, 32.814, 0.4068", "354.062, 399.005, 33.8778, 0.5338", "353.562, 400.017, 33.7686, 0.6864", "353.499, 401.008, 32.4167, 0.788", "353.52, 402.123, 31.9402, 0.788", "353.638, 403.259, 32.0522, 0.6864", "354.101, 404.266, 32.6525, 0.4576", "354.372, 404.785, 32.48, 0.5848", "354.665, 405.294, 32.48, 0.6102", "354.958, 405.802, 32.48, 0.6102", "355.301, 406.26, 32.48, 0.6102", "355.644, 406.717, 32.48, 0.5592", "355.936, 407.226, 32.48, 0.4576", "356.013, 407.493, 32.48, 0.2288", "356.232, 407.773, 32.6234, 0.4576", "356.592, 408.811, 33.3542, 0.6102", "356.958, 409.852, 33.9976, 0.661", "357.467, 410.846, 33.6543, 0.7118", "357.454, 411.949, 33.199, 0.7372", "356.959, 412.958, 33.0638, 0.7626", "356.431, 413.969, 33.1702, 0.7372", "356.262, 415.052, 33.8206, 0.7118", "356.37, 416.178, 34.064, 0.6864", "356.834, 417.187, 33.5625, 0.7118", "357.578, 418.0, 33.9508, 0.7372", "358.512, 418.641, 33.9987, 0.7372", "359.217, 419.46, 33.2402, 0.661", "359.463, 420.556, 33.0319, 0.5848", "359.562, 421.694, 32.9857, 0.5084", "359.967, 422.753, 32.7256, 0.5084", "360.475, 423.719, 32.0191, 0.5084", "361.229, 424.578, 31.9231, 0.5592", "361.835, 425.538, 31.9362, 0.5592", "362.163, 426.622, 32.0247, 0.5592", "362.161, 427.726, 32.6239, 0.5592", "361.983, 428.829, 33.04, 0.6102", "361.585, 429.901, 33.04, 0.6356", "360.99, 430.87, 33.0397, 0.6356", "360.359, 431.823, 33.0386, 0.6102", "359.624, 432.7, 33.0336, 0.6356", "359.089, 433.69, 33.0081, 0.6356", "359.332, 435.043, 32.6054, 0.6102", "359.1, 436.133, 32.9577, 0.6102", "358.908, 437.257, 33.04, 0.6102", "358.514, 438.313, 33.04, 0.6356", "357.908, 439.28, 33.04, 0.6864", "357.349, 440.274, 33.0406, 0.6864", "356.667, 441.194, 33.0428, 0.6356", "356.268, 442.238, 33.0557, 0.5592", "356.309, 443.379, 33.1481, 0.5338", "356.596, 444.441, 33.7308, 0.483", "356.721, 445.444, 34.995, 0.4322", "356.898, 446.523, 34.7945, 0.4068", "357.168, 447.568, 34.1457, 0.4322", "357.239, 448.709, 34.0558, 0.4576", "357.78, 449.639, 33.5107, 0.483", "358.212, 450.631, 34.1905, 0.5592", "358.639, 451.634, 34.9952, 0.6102", "358.964, 452.684, 35.6552, 0.6356", "358.999, 453.792, 35.5908, 0.6102", "359.058, 454.87, 35.133, 0.6356", "359.34, 455.931, 35.8352, 0.661", "359.387, 457.033, 36.4848, 0.6356", "359.104, 458.106, 36.9748, 0.5848", "358.947, 459.124, 38.1321, 0.5338", "358.73, 460.2, 37.6628, 0.5848", "358.708, 461.319, 37.52, 0.5848", "358.969, 462.425, 37.52, 0.5338", "358.932, 463.568, 37.52, 0.4068", "358.721, 464.686, 37.5203, 0.356", "359.03, 465.777, 37.522, 0.356", "359.47, 466.828, 37.5306, 0.4068", "360.108, 467.77, 37.5726, 0.4322", "360.834, 468.65, 37.7527, 0.5084", "361.062, 469.637, 38.6501, 0.5084", "361.196, 470.644, 39.2479, 0.483", "361.29, 471.752, 39.4094, 0.356", "361.374, 472.878, 39.76, 0.2796", "361.733, 473.959, 39.76, 0.2288", "362.051, 474.213, 40.04, 0.2288", "362.216, 474.392, 40.04, 0.2288", "362.305, 474.646, 40.04, 0.2288", "362.305, 474.874, 40.04, 0.2542", "362.305, 475.675, 40.04, 0.305", "362.305, 476.476, 40.04, 0.3814", "362.483, 477.098, 40.04, 0.4068", "362.648, 477.734, 40.04, 0.3814", "362.839, 478.344, 40.04, 0.305", "362.877, 479.107, 40.04, 0.2542", "362.877, 479.908, 40.04, 0.2288", "362.877, 480.709, 40.04, 0.2288", "362.877, 481.51, 40.04, 0.2288", "362.877, 482.31, 40.04, 0.2288", "362.877, 483.111, 40.04, 0.2288", "362.877, 483.912, 40.04, 0.2288", "362.877, 484.713, 40.04, 0.2542", "362.877, 485.514, 40.04, 0.305", "362.877, 486.314, 40.04, 0.3814", "362.877, 486.658, 40.04, 0.4068", "362.877, 487.001, 40.04, 0.3814", "362.584, 487.394, 40.04, 0.2542", "362.216, 488.056, 40.04, 0.2288", "361.809, 488.45, 40.04, 0.2288", "361.427, 488.869, 40.04, 0.2288", "361.263, 489.505, 40.04, 0.2288", "361.046, 490.09, 40.04, 0.2288", "360.932, 490.776, 40.04, 0.2288", "360.627, 491.271, 40.04, 0.2288", "360.131, 491.577, 40.04, 0.2288", "359.483, 491.729, 40.04, 0.2288", "358.987, 492.034, 40.04, 0.2288", "358.301, 492.149, 40.04, 0.2288", "357.678, 492.327, 40.04, 0.2288", "357.118, 492.569, 40.04, 0.2288", "356.508, 492.759, 40.04, 0.2288", "356.062, 493.114, 40.04, 0.2542", "355.746, 493.598, 40.04, 0.2796", "355.453, 494.106, 40.04, 0.305", "355.25, 494.589, 40.04, 0.2542", "354.983, 494.666, 40.04, 0.2288", "354.64, 494.666, 40.04, 0.2288", "354.004, 495.059, 40.04, 0.2288", "353.534, 495.39, 40.04, 0.2288", "353.191, 495.847, 40.04, 0.2288", "352.937, 496.394, 40.04, 0.2288", "352.924, 497.182, 40.04, 0.2288", "352.924, 497.983, 40.04, 0.2288", "352.924, 498.326, 40.04, 0.2288", "352.924, 498.67, 40.04, 0.2288", "352.835, 498.924, 40.04, 0.2288", "352.592, 499.025, 40.04, 0.2288", "352.238, 499.242, 40.04, 0.2288", "352.122, 499.47, 40.04, 0.2288", "351.894, 499.585, 40.04, 0.2288", "351.551, 499.585, 40.04, 0.2288", "351.322, 499.585, 40.04, 0.2288", "350.534, 499.597, 40.04, 0.2288", "350.014, 499.878, 40.04, 0.2288", "349.479, 500.144, 40.04, 0.2288", "348.997, 500.462, 40.04, 0.2288", "348.462, 500.729, 40.04, 0.2288", "348.017, 501.085, 40.04, 0.2288", "347.814, 501.224, 40.04, 0.2288", "347.661, 501.415, 40.04, 0.2542", "347.547, 501.987, 40.04, 0.305", "347.547, 502.216, 40.04, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "356.242, 347.417, 28.5572, 0.6864", "354.993, 346.512, 28.5351, 0.8644", "353.94, 346.085, 28.4141, 0.9406", "352.859, 345.903, 27.7052, 1.0168", "352.008, 345.215, 27.4277, 1.0168", "351.295, 344.321, 27.3837, 0.9914", "350.495, 343.508, 27.1964, 0.8644", "349.752, 342.714, 26.4163, 0.7626", "349.085, 341.796, 26.3206, 0.6864", "348.93, 340.674, 26.3236, 0.7118", "348.991, 339.532, 26.3455, 0.7118", "349.286, 338.436, 26.4838, 0.7118", "349.362, 337.366, 27.3106, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "406.466, 372.065, 31.6523, 0.6864", "407.294, 373.148, 32.2815, 0.6356", "407.132, 374.164, 33.2128, 0.5338", "406.346, 374.912, 34.0214, 0.4068", "406.344, 375.911, 34.1706, 0.3304", "407.225, 376.62, 34.2154, 0.3814", "408.17, 377.053, 34.7819, 0.4322", "407.749, 377.909, 36.085, 0.5338", "407.184, 378.873, 36.3784, 0.5338", "407.362, 379.969, 36.2631, 0.5592", "407.644, 381.039, 35.6504, 0.5084", "407.28, 381.794, 36.4714, 0.4322", "406.954, 382.261, 38.2348, 0.356", "407.867, 382.734, 39.2426, 0.2796", "408.85, 383.182, 39.2521, 0.2542", "409.471, 384.081, 38.6534, 0.2288", "409.052, 385.052, 38.7282, 0.2542", "408.019, 385.416, 39.1922, 0.305", "407.366, 385.43, 41.4028, 0.356", "407.402, 385.523, 44.0448, 0.4068", "407.911, 386.26, 45.2928, 0.4322", "408.193, 387.315, 44.8073, 0.4576", "408.432, 388.385, 44.5813, 0.483", "408.73, 389.215, 46.1611, 0.5338", "409.204, 390.182, 46.2843, 0.6102", "409.576, 391.126, 47.5381, 0.5848", "410.045, 392.083, 48.4893, 0.483", "410.609, 393.064, 48.7203, 0.3814", "411.512, 393.573, 48.7222, 0.4576", "412.048, 394.474, 48.741, 0.5848", "411.98, 395.612, 48.8788, 0.6864", "411.575, 396.613, 49.3329, 0.5848", "411.293, 397.697, 48.8709, 0.483", "411.367, 398.779, 49.5253, 0.3304", "410.913, 399.801, 49.9923, 0.2796", "411.15, 400.763, 51.0325, 0.2542", "411.403, 401.737, 52.2066, 0.2796", "411.697, 402.773, 53.0471, 0.305", "412.061, 403.714, 54.2606, 0.3304", "412.721, 404.634, 54.6297, 0.356", "412.677, 405.677, 55.5475, 0.3814", "412.881, 406.697, 56.1744, 0.3814", "413.0, 407.706, 56.8464, 0.4068", "413.102, 408.224, 59.3006, 0.5084", "413.539, 409.198, 59.7075, 0.5592", "414.174, 410.026, 60.3201, 0.5592", "414.814, 409.666, 62.16, 0.2288", "415.056, 409.768, 61.04, 0.2288", "415.385, 409.781, 61.04, 0.2288", "415.73, 409.781, 61.04, 0.2288", "416.073, 409.781, 61.04, 0.2288", "416.302, 409.781, 61.04, 0.2288", "417.102, 409.781, 61.04, 0.2288", "417.903, 409.781, 61.04, 0.2542", "418.577, 409.895, 61.04, 0.305" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "406.466, 372.065, 31.6523, 0.6864", "407.859, 373.057, 30.8566, 0.5592", "408.853, 373.55, 31.2584, 0.5592", "409.602, 374.356, 31.8926, 0.6102", "410.245, 375.299, 31.8979, 0.6864", "411.006, 376.152, 31.8214, 0.7372", "411.717, 377.018, 31.4104, 0.788", "412.549, 377.737, 31.5137, 0.7372", "413.569, 378.226, 31.7366, 0.6864", "414.294, 379.02, 31.0713, 0.6102", "414.659, 380.029, 31.6324, 0.6864", "414.686, 381.111, 32.1796, 0.7626", "415.24, 382.017, 33.0982, 0.8136", "415.743, 382.969, 33.8066, 0.7626", "416.424, 383.823, 33.4065, 0.7372", "417.217, 384.633, 33.2525, 0.7626", "417.932, 385.44, 34.097, 0.9152", "418.871, 386.753, 35.0946, 0.7626", "419.622, 387.608, 35.3086, 0.661", "420.181, 388.602, 35.4091, 0.5848", "420.596, 389.639, 35.5169, 0.5592", "421.327, 390.507, 35.2783, 0.6356", "422.209, 391.232, 35.2727, 0.7372", "423.241, 391.712, 35.2363, 0.788", "424.078, 392.481, 35.082, 0.8136", "424.691, 393.398, 34.4369, 0.8136", "425.312, 394.345, 34.1589, 0.9152", "426.036, 395.561, 35.2803, 0.7626", "426.38, 396.64, 35.2814, 0.7372", "427.092, 397.532, 35.2859, 0.788", "427.777, 398.444, 35.3105, 0.7626", "428.648, 399.177, 35.4567, 0.7626", "429.629, 399.231, 35.2794, 0.7372", "430.714, 399.579, 35.2764, 0.7118", "431.85, 399.71, 35.2551, 0.5848", "432.917, 400.103, 35.1235, 0.4322", "433.919, 400.138, 34.3314, 0.3814", "434.893, 399.596, 34.1426, 0.4576", "436.01, 399.509, 34.046, 0.6102", "437.077, 399.813, 33.4718, 0.7372", "438.04, 400.398, 33.4219, 0.788", "439.055, 400.834, 34.0724, 0.7118", "439.98, 401.498, 34.055, 0.5338", "441.004, 401.877, 33.5362, 0.4068" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "368.276, 376.151, 27.7105, 0.9152", "367.35, 376.985, 27.4, 0.6864", "366.382, 377.565, 27.1897, 0.5848", "365.297, 377.679, 26.4149, 0.5338", "364.207, 377.957, 26.3091, 0.5084", "363.334, 378.659, 26.2472, 0.4322", "363.297, 379.75, 25.7418, 0.3814", "362.671, 380.628, 25.235, 0.4068", "361.602, 381.01, 25.3753, 0.5338", "360.552, 381.332, 26.068, 0.5848", "359.471, 381.654, 26.2486, 0.5592", "358.43, 381.985, 25.8258, 0.4576", "357.617, 382.532, 24.7108, 0.4068", "357.163, 383.551, 24.3211, 0.3814", "356.762, 384.553, 24.9301, 0.3814", "355.767, 384.562, 24.1802, 0.3814", "354.743, 384.411, 23.9775, 0.356", "353.765, 384.858, 23.4321, 0.356", "352.768, 384.466, 23.9512, 0.4068", "352.637, 383.435, 24.0929, 0.6864" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "368.276, 376.151, 27.7105, 0.9152", "367.571, 377.058, 28.525, 0.661", "367.521, 378.146, 28.5667, 0.5848", "367.604, 379.277, 28.607, 0.5338", "367.168, 380.297, 28.8596, 0.5592", "366.357, 381.033, 29.5109, 0.6102", "365.786, 382.0, 29.1614, 0.6356", "365.121, 382.89, 28.6168, 0.6356", "364.28, 383.663, 28.562, 0.6356", "363.28, 384.196, 28.5706, 0.661", "362.348, 384.842, 28.6121, 0.6864", "361.583, 385.687, 28.7781, 0.661", "361.044, 386.643, 29.4692, 0.6356", "360.751, 387.737, 29.6803, 0.6102", "360.435, 388.827, 29.682, 0.5592", "360.111, 389.922, 29.6923, 0.5338", "360.04, 391.047, 29.7713, 0.4576", "360.671, 391.921, 30.2901, 0.483", "361.446, 392.724, 30.7681, 0.5084", "361.355, 393.82, 30.6138, 0.6356", "361.023, 394.865, 29.9107, 0.7118", "360.701, 395.953, 29.7441, 0.7626", "360.388, 397.03, 30.1272, 0.788", "360.336, 398.133, 30.7994, 0.788", "360.191, 399.259, 30.9663, 0.7626", "359.863, 400.31, 31.6355, 0.6864", "359.487, 401.355, 31.5857, 0.6356", "358.776, 402.179, 30.84, 0.5848", "358.105, 403.102, 30.7644, 0.4576", "357.564, 403.439, 30.8, 0.305", "357.195, 403.87, 30.8, 0.305", "356.89, 404.366, 30.8, 0.356", "356.585, 404.862, 30.8, 0.4322", "356.152, 405.23, 30.8, 0.4068", "355.695, 405.573, 30.8, 0.3304", "355.339, 406.018, 30.8, 0.2542", "355.161, 406.642, 30.8, 0.2542", "354.894, 407.175, 30.8, 0.2796", "354.615, 407.696, 30.8, 0.356", "354.157, 408.04, 30.8, 0.3814", "353.712, 408.395, 30.8, 0.4322", "353.089, 408.573, 30.8, 0.3814", "352.695, 408.98, 30.8, 0.356", "352.327, 409.412, 30.8, 0.2796", "351.92, 409.806, 30.8, 0.2542", "351.513, 410.201, 30.8, 0.2542", "351.081, 410.569, 30.8, 0.305", "350.674, 410.963, 30.8, 0.4068", "350.064, 411.154, 30.8, 0.4576", "349.492, 411.382, 30.8, 0.4576", "348.997, 411.688, 30.8, 0.356", "348.539, 412.031, 30.8, 0.2796", "348.081, 412.26, 30.8, 0.3304", "347.89, 412.755, 30.8, 0.3304", "347.89, 413.327, 30.8, 0.2542", "347.89, 413.67, 30.8, 0.3304", "347.635, 414.103, 30.8, 0.483", "347.547, 414.586, 30.8, 0.5084", "347.547, 415.043, 30.8, 0.483", "347.493, 415.793, 31.3046, 0.2288", "347.337, 416.084, 31.7514, 0.2542", "346.478, 416.331, 33.4289, 0.3304", "345.609, 416.432, 35.2346, 0.483", "344.719, 416.913, 36.3028, 0.6356", "343.953, 417.756, 36.3768, 0.7372", "343.294, 418.687, 36.2706, 0.6864", "342.437, 418.856, 35.84, 0.3814", "341.941, 419.162, 35.84, 0.305", "341.446, 419.467, 35.84, 0.356", "340.683, 419.505, 35.84, 0.483", "339.882, 419.505, 35.84, 0.5592", "339.082, 419.505, 35.84, 0.483", "338.547, 419.657, 35.84, 0.356", "338.204, 420.0, 35.84, 0.5084", "337.721, 420.547, 35.84, 0.5338", "337.378, 421.005, 35.84, 0.5084", "337.099, 421.526, 35.84, 0.4576", "336.615, 421.843, 35.84, 0.4068", "336.145, 422.174, 35.84, 0.3814", "335.687, 422.403, 35.84, 0.4068", "335.65, 422.708, 35.84, 0.4576", "335.599, 423.6, 36.4381, 0.4576", "335.034, 424.574, 36.6167, 0.5084", "334.147, 425.19, 37.4016, 0.5592", "333.245, 425.737, 38.4328, 0.6102", "332.49, 426.535, 39.1138, 0.5592", "331.926, 427.476, 39.8796, 0.5084", "331.602, 428.502, 40.6437, 0.4576", "331.9, 429.58, 40.719, 0.483", "332.315, 430.552, 39.8801, 0.483", "331.927, 431.602, 39.7594, 0.4576", "331.624, 432.679, 39.7561, 0.356", "331.828, 433.789, 39.7289, 0.305", "331.161, 434.607, 39.4545, 0.3304", "330.661, 435.271, 40.6193, 0.4068", "330.938, 436.32, 39.9585, 0.4322", "331.445, 437.311, 40.1484, 0.3814", "331.303, 438.197, 41.7357, 0.3814", "331.087, 439.294, 42.0006, 0.4322", "331.164, 440.434, 42.0048, 0.5338", "331.447, 441.536, 42.0314, 0.5592", "331.191, 442.618, 42.2139, 0.5848", "330.411, 443.378, 42.8543, 0.5338", "329.421, 443.827, 42.2164, 0.5084", "328.462, 444.361, 42.0367, 0.4576", "328.514, 445.392, 42.2142, 0.483", "329.036, 446.362, 42.91, 0.5084", "329.403, 447.436, 43.1136, 0.5338", "329.92, 448.454, 43.0814, 0.5084", "330.57, 449.391, 42.9052, 0.483", "331.308, 450.132, 42.0728, 0.4576", "331.944, 451.072, 42.2304, 0.5084", "332.639, 451.913, 42.5905, 0.6864", "332.866, 452.49, 42.28, 0.5338", "333.018, 453.138, 42.28, 0.5338", "333.171, 453.787, 42.28, 0.483", "333.426, 454.333, 42.28, 0.3814", "333.73, 454.829, 42.28, 0.3304", "334.125, 455.235, 42.28, 0.3814", "334.404, 455.757, 42.28, 0.483", "334.684, 456.277, 42.28, 0.483", "334.849, 456.914, 42.28, 0.3814", "334.849, 457.714, 42.28, 0.3304", "335.078, 458.286, 42.28, 0.3304", "335.23, 458.935, 42.28, 0.4068", "335.306, 459.659, 42.28, 0.4068", "335.306, 460.46, 42.28, 0.4576", "335.433, 461.019, 42.28, 0.5338", "335.739, 461.4, 42.28, 0.4322", "336.12, 461.591, 42.28, 0.3814", "336.488, 461.909, 42.28, 0.4068", "336.565, 462.176, 42.28, 0.3304", "336.603, 463.168, 42.28, 0.2796", "336.831, 463.74, 42.28, 0.3304", "337.022, 464.35, 42.28, 0.3814", "337.022, 465.15, 42.28, 0.4322", "337.022, 465.951, 42.28, 0.4322", "337.022, 466.752, 42.28, 0.356", "337.022, 467.553, 42.28, 0.2796", "337.022, 468.354, 42.28, 0.2542", "337.022, 469.154, 42.28, 0.2796", "337.022, 469.955, 42.28, 0.305", "337.022, 470.756, 42.28, 0.2796", "337.137, 471.442, 42.28, 0.2796", "337.137, 472.243, 42.28, 0.2796", "337.137, 473.044, 42.28, 0.305", "337.239, 473.743, 42.28, 0.2796", "337.366, 474.417, 42.28, 0.2542", "337.366, 475.218, 42.28, 0.2288", "337.366, 476.018, 42.28, 0.2288", "337.366, 476.819, 42.28, 0.2288", "337.48, 477.506, 42.28, 0.2288", "337.48, 477.849, 42.28, 0.2288", "337.48, 478.192, 42.28, 0.2288", "337.493, 478.523, 42.28, 0.2288", "337.696, 478.662, 42.28, 0.2288", "337.823, 478.764, 42.28, 0.2288", "338.077, 479.311, 42.28, 0.2288", "338.281, 479.908, 42.28, 0.2288", "338.357, 480.632, 42.28, 0.2288", "338.395, 481.395, 42.28, 0.2288", "338.395, 481.738, 42.28, 0.2288", "338.395, 482.082, 42.28, 0.2288", "338.433, 482.387, 42.28, 0.2288", "338.56, 482.603, 42.28, 0.2288", "339.082, 482.654, 42.28, 0.2288", "339.411, 482.666, 42.28, 0.2288", "339.527, 482.781, 42.28, 0.2288", "339.539, 482.997, 42.28, 0.2288", "339.577, 483.302, 42.28, 0.2288", "339.882, 483.798, 42.28, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "374.358, 374.71, 27.4887, 0.7626", "374.609, 375.282, 27.72, 0.7118", "375.232, 375.575, 27.72, 0.4576", "375.803, 375.575, 27.72, 0.2542", "376.147, 375.575, 27.72, 0.305", "376.579, 375.829, 27.72, 0.5084", "376.961, 376.478, 27.72, 0.5084", "377.062, 377.177, 27.72, 0.3814", "377.253, 377.672, 27.72, 0.2288", "377.507, 377.761, 27.72, 0.2288", "377.724, 377.888, 27.72, 0.2288", "377.876, 377.965, 27.72, 0.2288", "378.435, 378.092, 27.72, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "374.358, 374.71, 27.4887, 0.7626", "374.832, 375.748, 27.44, 0.7372", "375.141, 376.847, 27.4408, 0.6102", "375.708, 377.815, 27.4445, 0.5084", "376.575, 378.554, 27.4604, 0.4576", "377.492, 379.23, 27.5436, 0.483", "378.292, 379.998, 28.0518, 0.483", "379.107, 380.762, 28.5634, 0.4576", "379.794, 381.618, 28.5838, 0.4068", "379.362, 382.643, 28.6955, 0.4322", "379.178, 383.712, 29.3583, 0.5848", "379.476, 384.788, 29.685, 0.7118", "380.115, 385.734, 29.7046, 0.7372", "380.814, 386.637, 29.8029, 0.5592", "381.573, 387.434, 30.3993, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "420.299, 319.361, 42.3878, 0.9152", "421.122, 319.565, 41.8144, 0.839", "422.164, 319.859, 41.0348, 0.7372", "422.842, 320.187, 40.9646, 0.5848", "423.878, 320.143, 41.6956, 0.5592", "424.872, 320.4, 42.856, 0.5592", "426.004, 320.384, 43.1469, 0.6356", "427.109, 320.138, 43.2995, 0.6356", "428.181, 320.231, 43.9835, 0.5848", "429.275, 320.521, 43.9247, 0.483", "430.293, 320.903, 43.2074, 0.4322", "431.23, 321.546, 43.1396, 0.483", "432.06, 322.332, 43.2026, 0.5338", "432.89, 323.087, 43.575, 0.5338", "433.841, 323.618, 44.2716, 0.4576", "434.857, 324.119, 44.4189, 0.4576", "435.894, 324.452, 45.1156, 0.4576", "436.79, 325.148, 45.3611, 0.4576", "437.753, 325.759, 45.365, 0.4068", "438.721, 326.358, 45.3866, 0.4322", "439.529, 327.163, 45.4905, 0.5084", "440.154, 328.029, 46.2748, 0.5592", "441.12, 328.611, 46.6029, 0.4576", "447.771, 331.49, 48.8496, 0.4322", "453.542, 335.799, 51.2039, 0.4576", "459.299, 339.909, 53.5578, 0.4068", "471.788, 345.455, 57.0892, 0.3304", "475.4, 347.283, 58.8549, 0.2542", "479.389, 347.37, 58.8549, 0.2288", "484.643, 347.719, 61.2091, 0.2288", "486.644, 348.327, 61.2091, 0.2288", "488.557, 348.154, 61.2091, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "420.299, 319.361, 42.3878, 0.9152", "421.118, 318.936, 41.9664, 0.6864", "421.977, 318.192, 41.7486, 0.6356", "422.594, 317.278, 41.0542, 0.6102", "423.341, 316.417, 40.9758, 0.6102", "423.988, 315.505, 41.3703, 0.6356", "424.433, 314.486, 41.2532, 0.6864", "424.819, 313.255, 40.6613, 0.9152", "425.014, 312.174, 39.9445, 0.6864", "425.385, 311.112, 40.2066, 0.5848", "425.711, 310.06, 40.8887, 0.5592", "425.812, 308.933, 41.2031, 0.6356", "425.888, 307.834, 41.8891, 0.661", "426.236, 306.758, 41.6892, 0.6102", "426.471, 305.775, 40.451, 0.4322" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "349.362, 337.366, 27.3106, 0.6864", "350.15, 336.938, 26.544, 0.5848", "351.098, 336.408, 25.7421, 0.5848", "352.111, 335.924, 25.5128, 0.5338", "352.617, 335.153, 25.956, 0.5338", "352.158, 334.213, 24.9469, 0.483", "351.924, 333.158, 24.0985, 0.5084", "351.366, 332.215, 23.5004, 0.483", "350.945, 331.213, 23.6138, 0.4576", "351.219, 330.319, 25.0804, 0.3814", "351.656, 329.564, 26.768, 0.3304", "352.586, 329.376, 26.4538, 0.305", "353.217, 329.18, 24.465, 0.305", "354.105, 328.492, 24.0612, 0.3304", "354.941, 327.71, 24.0036, 0.356", "355.785, 326.956, 23.7303, 0.3814", "356.699, 326.383, 22.96, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "349.362, 337.366, 27.3106, 0.6864", "349.301, 336.453, 28.4396, 0.7626", "348.924, 335.39, 28.5992, 0.7626", "348.319, 334.427, 28.7552, 0.788", "347.696, 333.514, 29.3955, 0.839", "346.953, 332.657, 29.6814, 0.8644", "346.139, 331.853, 29.685, 0.839", "345.31, 331.066, 29.7004, 0.7626", "344.391, 330.395, 29.7847, 0.6864" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "441.004, 401.877, 33.5362, 0.4068", "440.948, 401.989, 34.0668, 0.5084", "441.368, 402.218, 34.16, 0.5338", "441.724, 402.434, 34.16, 0.5084", "442.079, 402.879, 34.16, 0.5338", "442.523, 403.235, 34.16, 0.483", "442.88, 403.68, 34.16, 0.4576", "443.299, 404.061, 34.16, 0.4068", "443.72, 404.442, 34.16, 0.4322", "444.062, 404.899, 34.16, 0.4068", "444.493, 405.269, 34.16, 0.4322", "444.685, 405.764, 34.16, 0.4322", "445.04, 406.082, 34.16, 0.305" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "441.004, 401.877, 33.5362, 0.4068", "442.111, 401.91, 32.8793, 0.4068", "443.202, 402.034, 32.1681, 0.5592", "444.18, 402.581, 31.8948, 0.6864", "445.151, 403.159, 31.7887, 0.7372", "446.238, 403.156, 31.1016, 0.6356", "447.234, 402.689, 30.5284, 0.483", "448.07, 402.153, 29.2905, 0.3304", "448.695, 401.287, 29.6506, 0.2542", "449.363, 400.514, 30.8, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "381.573, 387.434, 30.3993, 0.2288", "381.82, 388.044, 30.7362, 0.4322", "382.341, 388.949, 29.8376, 0.483", "383.263, 389.593, 29.68, 0.4576", "384.262, 390.128, 29.68, 0.4322", "385.1, 390.906, 29.6806, 0.4322", "385.949, 391.674, 29.6828, 0.483", "386.898, 392.307, 29.6929, 0.4576", "387.759, 393.061, 29.7368, 0.4322", "388.613, 393.785, 30.0493, 0.3304", "389.111, 394.767, 30.6505, 0.3304", "389.98, 395.398, 29.9611, 0.3304", "391.071, 395.68, 29.8726, 0.3814", "391.958, 396.262, 30.7936, 0.3304", "392.956, 396.696, 31.6044, 0.2796", "393.767, 397.47, 31.92, 0.2542", "394.506, 398.336, 31.92, 0.3304", "395.546, 398.766, 31.92, 0.4068", "396.577, 399.216, 31.9203, 0.4576", "397.431, 399.962, 31.9222, 0.4576", "398.031, 400.932, 31.9329, 0.5084", "398.773, 401.798, 31.981, 0.5592", "399.704, 402.408, 32.3557, 0.5592", "400.678, 402.897, 33.04, 0.5084", "401.742, 403.296, 33.0392, 0.483", "402.852, 403.555, 33.0344, 0.5084", "403.969, 403.344, 33.0005, 0.5338", "405.045, 403.628, 32.788, 0.5338", "405.845, 404.358, 32.0205, 0.5338", "406.652, 405.167, 31.9995, 0.5084", "407.448, 405.968, 32.3092, 0.5084", "408.208, 406.763, 32.9826, 0.5084", "408.923, 407.65, 32.9904, 0.5338", "409.64, 408.534, 32.8034, 0.483", "410.486, 409.228, 32.0653, 0.4576", "410.934, 410.266, 31.9007, 0.4576", "411.516, 411.244, 31.8097, 0.5592", "412.371, 411.942, 31.3348, 0.6864", "413.398, 412.354, 30.7157, 0.8136", "414.499, 412.434, 30.1151, 0.8644", "415.417, 412.532, 28.483, 0.839", "415.984, 413.09, 26.5782, 0.8136", "416.645, 413.785, 25.2, 0.839", "417.257, 414.552, 25.293, 0.8898", "418.102, 415.317, 25.2, 0.8136", "419.143, 415.632, 25.1997, 0.6864", "420.268, 415.46, 25.1972, 0.5848", "421.346, 415.799, 25.1824, 0.6356", "422.376, 416.286, 25.0975, 0.661", "423.405, 416.702, 24.5826, 0.6102", "424.509, 416.885, 24.0864, 0.4576", "425.484, 417.438, 24.117, 0.4068", "426.217, 418.309, 24.2553, 0.4322", "426.285, 419.299, 25.205, 0.6864" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "381.573, 387.434, 30.3993, 0.2288", "381.98, 387.531, 30.6956, 0.356", "383.098, 387.344, 30.805, 0.483", "384.139, 387.753, 30.8297, 0.5592", "384.941, 388.564, 30.9414, 0.5848", "385.615, 389.41, 31.6898, 0.5592", "386.508, 390.087, 31.7489, 0.5338", "387.52, 390.141, 30.9744, 0.5848", "388.621, 390.105, 31.421, 0.5848", "389.665, 390.495, 31.9656, 0.5848", "390.743, 390.663, 32.2448, 0.5338", "391.646, 390.437, 33.7537, 0.5848", "392.763, 390.377, 34.1692, 0.5848", "393.828, 390.008, 34.2219, 0.5338", "394.682, 389.302, 34.5803, 0.4068", "395.378, 388.454, 34.5002, 0.3814", "396.353, 387.954, 34.1653, 0.4322", "397.482, 387.794, 34.1947, 0.483", "398.558, 388.069, 34.3932, 0.4322", "399.334, 388.82, 35.1929, 0.356", "400.439, 388.784, 35.4768, 0.3304", "401.47, 389.057, 36.1309, 0.4068", "402.275, 389.804, 35.6059, 0.483", "403.079, 390.604, 35.3766, 0.5592", "403.879, 391.383, 35.8109, 0.5848", "404.721, 392.103, 36.4081, 0.6102", "405.743, 392.612, 36.4913, 0.5848", "406.827, 392.857, 37.0205, 0.5592", "407.793, 393.279, 38.0492, 0.5592", "408.681, 393.942, 38.6159, 0.5848", "409.5, 394.737, 38.7402, 0.5592", "410.299, 395.513, 39.1992, 0.5338", "411.151, 396.222, 39.807, 0.5084", "412.199, 396.428, 40.0744, 0.6102", "413.249, 396.088, 40.2968, 0.661", "414.326, 396.263, 39.7687, 0.7626", "415.39, 396.675, 39.7617, 0.7372", "416.295, 397.37, 39.7681, 0.7372", "417.18, 398.088, 39.7953, 0.661", "418.243, 398.448, 39.97, 0.661", "419.29, 398.676, 40.7299, 0.661", "420.133, 399.433, 41.0071, 0.6864", "420.889, 400.22, 41.6562, 0.6356", "421.589, 401.081, 42.2766, 0.5592", "422.534, 401.459, 43.3647, 0.4322", "423.634, 401.68, 43.1852, 0.3814", "424.596, 402.283, 42.9932, 0.3814", "425.534, 402.671, 42.0524, 0.4322", "426.216, 402.141, 40.3813, 0.4322", "425.769, 402.77, 42.8123, 0.4322", "426.484, 402.904, 43.8598, 0.4576", "427.307, 403.468, 45.0125, 0.5338", "428.173, 404.102, 44.4702, 0.5592", "428.862, 404.995, 44.1902, 0.5848", "429.54, 405.912, 44.0098, 0.5592", "430.27, 406.726, 43.3821, 0.5592", "431.346, 406.856, 43.9953, 0.5084", "432.451, 406.698, 44.0765, 0.5084", "433.341, 407.302, 43.2967, 0.483", "434.297, 407.908, 43.1852, 0.483", "435.206, 408.527, 43.5739, 0.5084", "435.936, 409.376, 43.9821, 0.5848", "436.872, 409.957, 43.3751, 0.6864", "437.872, 410.491, 43.3698, 0.7118", "438.798, 411.079, 44.0714, 0.7372", "439.558, 411.904, 43.8847, 0.7372", "440.44, 412.55, 43.8945, 0.7626", "441.417, 413.103, 44.2554, 0.7118", "442.499, 413.458, 44.3405, 0.6356", "443.414, 413.785, 45.36, 0.4576" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "426.471, 305.775, 40.451, 0.4322", "426.598, 305.334, 40.04, 0.305", "427.055, 305.105, 40.04, 0.4068", "427.551, 304.571, 40.04, 0.3814", "428.008, 304.342, 40.04, 0.356", "428.237, 303.884, 40.04, 0.305", "428.657, 303.274, 40.04, 0.2796", "428.95, 302.881, 40.04, 0.4576", "429.0, 302.245, 40.04, 0.5084", "429.102, 301.317, 40.04, 0.3814", "429.229, 300.643, 40.04, 0.3304", "429.229, 299.842, 40.04, 0.305", "429.229, 299.042, 40.04, 0.2796", "429.229, 298.241, 40.04, 0.2796", "429.229, 297.44, 40.04, 0.2796", "429.229, 296.639, 40.04, 0.305", "429.229, 295.838, 40.04, 0.2796", "429.229, 295.038, 40.04, 0.2542", "429.229, 294.237, 40.04, 0.2288", "429.229, 293.436, 40.04, 0.2288", "429.229, 292.635, 40.04, 0.2288", "429.229, 291.834, 40.04, 0.2288", "429.216, 291.046, 40.04, 0.2542", "428.987, 290.474, 40.04, 0.2796", "428.759, 290.017, 40.04, 0.2796", "428.428, 290.004, 40.04, 0.2542", "428.135, 289.954, 40.04, 0.2288", "428.085, 289.661, 40.04, 0.2288", "428.085, 289.432, 40.04, 0.2288", "428.085, 289.203, 40.04, 0.2288", "428.085, 288.174, 40.04, 0.4068", "428.085, 287.373, 40.04, 0.5592", "428.085, 286.572, 40.04, 0.6102", "428.085, 285.771, 40.04, 0.5338", "428.085, 284.97, 40.04, 0.4068", "428.085, 284.627, 40.04, 0.356", "428.085, 284.093, 39.6668, 0.3814", "428.085, 283.483, 38.92, 0.305", "428.085, 283.14, 38.92, 0.2542", "428.085, 282.225, 38.92, 0.2796", "428.085, 281.424, 38.92, 0.305", "428.085, 280.623, 38.92, 0.2796", "428.199, 280.051, 38.64, 0.2542", "428.199, 279.479, 38.08, 0.2288", "428.199, 278.678, 38.08, 0.2288", "428.199, 277.878, 38.08, 0.2288", "428.199, 277.077, 38.08, 0.2288", "428.199, 276.276, 38.08, 0.2542", "428.237, 275.513, 38.08, 0.3304", "428.53, 275.005, 38.08, 0.4322", "428.822, 274.573, 37.8932, 0.5084", "429.114, 274.102, 37.8, 0.483", "429.432, 273.734, 37.8, 0.305", "429.686, 273.645, 37.8, 0.2542", "429.953, 273.568, 37.8, 0.2288", "430.144, 273.53, 37.8, 0.2288", "430.716, 273.416, 37.8, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "426.471, 305.775, 40.451, 0.4322", "426.243, 305.791, 41.0124, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "344.391, 330.395, 29.7847, 0.6864", "343.325, 330.143, 29.3502, 0.7372", "342.312, 329.728, 28.6255, 0.788", "341.392, 329.054, 28.5396, 0.839", "340.372, 328.569, 28.4455, 0.788", "339.35, 328.144, 27.8796, 0.7372", "338.337, 327.659, 27.4403, 0.6864", "337.266, 327.28, 27.442, 0.661", "336.169, 326.994, 27.4526, 0.6356", "335.095, 326.612, 27.5265, 0.6356", "334.214, 325.966, 28.0521, 0.6864", "333.549, 325.068, 28.6017, 0.7118", "333.012, 324.067, 28.8585, 0.6864", "332.611, 323.046, 29.5921, 0.661", "331.91, 322.149, 29.68, 0.7118", "331.16, 321.287, 29.68, 0.839", "330.539, 320.328, 29.68, 0.9406", "329.893, 319.385, 29.68, 1.0168", "329.152, 318.517, 29.68, 0.9914", "328.337, 317.714, 29.68, 0.966", "327.502, 316.933, 29.68, 0.8898", "326.569, 316.285, 29.68, 0.8898", "325.51, 315.871, 29.6794, 0.8898", "324.397, 315.635, 29.6752, 0.9152", "323.289, 315.372, 29.6503, 0.9152", "322.172, 315.183, 29.479, 0.9152", "321.135, 314.827, 28.7504, 0.9152", "320.105, 314.352, 28.4967, 0.9406", "319.184, 313.681, 28.2764, 0.9914", "318.286, 313.055, 27.4996, 1.0424", "317.516, 312.22, 27.1774, 1.0424", "317.012, 311.245, 26.4407, 0.9914", "316.674, 310.157, 26.3645, 0.966", "316.329, 309.072, 26.5868, 0.966", "315.696, 308.252, 27.3857, 0.9914", "314.72, 307.666, 27.4456, 0.9914", "313.635, 307.315, 27.4736, 0.9914", "312.51, 307.158, 27.6612, 1.0168", "311.422, 307.133, 28.4718, 0.9914", "310.341, 306.873, 28.8663, 0.966", "308.398, 306.718, 29.6797, 0.9914", "307.257, 306.789, 29.6778, 1.0932", "306.157, 307.082, 29.6654, 1.0932", "305.034, 306.97, 29.5758, 1.0932", "303.971, 306.662, 29.0195, 1.0168", "302.931, 306.355, 28.2274, 1.144" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "344.391, 330.395, 29.7847, 0.6864", "343.457, 329.343, 30.1529, 0.6864", "343.438, 328.294, 29.0584, 0.5848", "343.493, 327.177, 28.5768, 0.4322", "343.917, 326.151, 28.6832, 0.3814", "344.969, 325.844, 29.2998, 0.3814", "346.033, 325.526, 29.1292, 0.4576", "347.1, 325.273, 29.0035, 0.5338", "348.143, 324.976, 29.449, 0.5848", "349.239, 324.776, 29.4823, 0.5848", "350.353, 324.579, 29.5072, 0.5338", "351.454, 324.744, 29.4851, 0.4576", "352.573, 324.905, 29.6778, 0.4322", "353.672, 324.621, 29.6649, 0.4068", "354.783, 324.815, 29.5812, 0.4068", "355.875, 325.025, 29.0732, 0.4068", "356.984, 325.103, 29.4633, 0.4576", "358.066, 325.429, 29.7438, 0.5338", "359.184, 325.552, 30.163, 0.5592", "360.233, 325.865, 30.8834, 0.5592", "361.316, 326.058, 31.5428, 0.5338", "362.393, 326.387, 31.9113, 0.5592", "363.519, 326.583, 31.8643, 0.6102", "364.397, 327.294, 31.6243, 0.661", "365.157, 328.069, 31.0089, 0.7118", "366.224, 328.227, 31.6823, 0.7118", "367.239, 328.288, 32.9196, 0.6864", "368.312, 328.645, 33.04, 0.6102", "369.342, 329.131, 33.0389, 0.5592", "370.4, 329.553, 33.0341, 0.5592", "371.519, 329.767, 32.9986, 0.5848", "372.622, 330.028, 32.7964, 0.661", "373.715, 330.006, 32.0247, 0.7372", "374.821, 329.776, 31.9421, 0.8136", "375.862, 329.31, 32.0457, 0.8136", "376.934, 329.054, 32.6729, 0.7626", "378.012, 328.729, 32.8661, 0.7118", "379.071, 328.417, 32.3697, 0.6864", "380.142, 328.59, 32.87, 0.6864", "381.206, 328.399, 32.1664, 0.6864", "382.213, 327.881, 31.92, 0.7118", "383.168, 327.261, 31.92, 0.7118", "383.874, 326.372, 31.9194, 0.661", "384.605, 325.493, 31.9178, 0.5084", "385.441, 324.714, 31.9105, 0.3814", "386.389, 324.09, 31.8732, 0.356", "387.408, 323.638, 31.4913, 0.4576", "388.38, 323.14, 31.547, 0.5848", "389.447, 322.764, 31.7064, 0.661", "390.471, 322.378, 30.9786, 0.6864", "391.451, 321.806, 30.7969, 0.661", "392.334, 321.078, 30.7863, 0.661", "393.32, 320.504, 30.725, 0.661", "394.256, 319.925, 30.2156, 0.7118", "395.04, 319.173, 29.4017, 0.661", "395.858, 318.444, 28.7302, 0.6102", "396.822, 317.943, 29.2082, 0.5338", "397.747, 318.471, 29.9183, 0.6864", "398.573, 319.337, 30.403, 0.6102", "399.612, 319.519, 29.4549, 0.7118", "400.696, 319.519, 28.5933, 0.788", "401.811, 319.519, 28.0283, 0.788", "402.922, 319.519, 27.4403, 0.7372", "404.066, 319.519, 27.442, 0.661", "405.211, 319.519, 27.4534, 0.6102", "406.354, 319.52, 27.5416, 0.5338", "407.462, 319.528, 28.1294, 0.4576", "408.584, 319.582, 28.5664, 0.4068", "409.661, 319.914, 28.5984, 0.3814", "410.574, 320.6, 28.7246, 0.3814", "411.611, 320.982, 29.0814, 0.4576", "412.068, 321.078, 29.3496, 0.5338", "413.021, 321.702, 29.4126, 0.6356", "413.966, 322.292, 28.8593, 0.6864", "414.897, 322.862, 29.4944, 0.7118", "415.85, 323.334, 30.4794, 0.7118", "416.871, 323.811, 30.8448, 0.7626", "417.967, 324.079, 31.0562, 0.839", "419.06, 324.024, 31.8296, 0.839", "420.156, 323.728, 31.9172, 0.839", "421.293, 323.663, 31.9004, 0.8136", "422.415, 323.84, 31.7565, 0.9152", "423.643, 323.506, 32.7004, 0.8136", "424.611, 323.032, 32.0516, 0.7118", "425.178, 322.338, 30.4606, 0.661", "425.632, 321.376, 29.7385, 0.6864", "426.482, 320.617, 29.9264, 0.7118", "427.516, 320.231, 30.5648, 0.6864", "428.517, 319.742, 30.1132, 0.5848", "429.482, 319.165, 30.3873, 0.483", "430.145, 318.459, 29.374, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "302.931, 306.355, 28.2274, 1.144", "301.21, 305.012, 28.5715, 0.966", "300.358, 304.249, 28.609, 0.966", "299.385, 303.661, 28.7977, 0.9406", "298.411, 303.155, 29.5212, 0.9152", "297.423, 302.597, 29.68, 1.0424", "296.453, 301.997, 29.68, 1.0424", "295.437, 301.479, 29.68, 1.0168", "294.418, 300.967, 29.68, 0.9914", "293.385, 300.482, 29.68, 0.9914", "292.279, 300.203, 29.68, 0.9914", "291.221, 299.791, 29.6789, 0.9914", "290.272, 299.161, 29.675, 1.0168", "289.321, 298.529, 29.6551, 0.9914", "288.439, 297.803, 29.5655, 0.966", "287.57, 296.741, 29.6834, 0.9152", "286.853, 295.851, 29.6971, 0.9406", "286.112, 294.982, 29.7511, 0.966", "285.57, 293.991, 30.0852, 0.966", "285.04, 293.022, 30.7418, 0.9406", "284.329, 292.141, 30.8465, 0.9406", "283.341, 291.587, 31.0346, 0.9914", "282.266, 291.389, 31.7458, 0.9914", "281.148, 291.458, 31.404, 0.8898", "280.066, 291.736, 30.9691, 0.4576" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "302.931, 306.355, 28.2274, 1.144", "301.694, 305.876, 26.882, 0.6356", "300.594, 305.797, 26.2632, 0.5338", "299.461, 305.83, 25.9182, 0.5084", "298.568, 305.999, 24.3065, 0.5338", "298.232, 306.8, 22.6534, 0.5848", "297.715, 307.792, 22.9239, 0.6356", "296.957, 308.646, 23.1344, 0.6864", "296.345, 309.561, 23.7616, 0.6864", "295.792, 310.539, 24.1707, 0.7118", "295.779, 311.631, 24.6926, 0.7118", "296.362, 312.58, 25.1787, 0.7118", "296.927, 313.559, 25.1961, 0.7118", "296.98, 314.699, 25.1717, 0.7626", "296.97, 315.841, 25.016, 0.839", "296.902, 316.904, 24.0873, 0.8644", "296.588, 317.921, 23.5192, 0.8644", "296.25, 318.986, 24.0565, 0.7626", "295.995, 320.098, 24.0598, 0.661", "295.693, 321.193, 23.9672, 0.5084", "295.574, 322.304, 23.8165, 0.4322", "295.355, 323.409, 24.08, 0.3814", "294.855, 324.435, 24.0806, 0.4068", "294.336, 325.45, 24.0834, 0.4068", "293.823, 326.468, 24.0996, 0.3814", "293.264, 327.462, 24.1884, 0.356", "292.858, 328.48, 24.7195, 0.4068", "292.723, 329.519, 25.8356, 0.5084", "292.247, 330.529, 26.3231, 0.5592", "291.574, 331.453, 26.3357, 0.5338", "290.887, 332.363, 26.4085, 0.5084", "289.975, 332.936, 27.0318, 0.5084", "289.039, 333.543, 27.5408, 0.5338", "288.277, 334.321, 28.1537, 0.5084", "287.857, 335.36, 28.5566, 0.483", "287.406, 336.404, 28.5368, 0.4576", "286.492, 336.982, 28.3749, 0.4322", "285.553, 337.443, 28.3604, 0.4322", "285.049, 338.259, 29.6573, 0.4322", "284.603, 339.301, 29.694, 0.483", "284.178, 340.339, 29.7825, 0.483", "283.191, 340.817, 30.3472, 0.483", "282.165, 341.179, 29.6624, 0.4322", "281.403, 341.914, 29.1194, 0.4322", "280.973, 342.843, 29.9606, 0.4322", "280.643, 343.815, 30.9523, 0.4576", "280.392, 344.886, 31.6383, 0.4068", "279.918, 345.904, 31.9096, 0.3304", "279.684, 346.996, 31.8511, 0.2796", "280.221, 347.903, 31.2326, 0.305", "281.273, 348.298, 31.1212, 0.3814", "282.216, 348.566, 32.4458, 0.4068", "282.704, 349.245, 34.2868, 0.4068", "283.346, 350.078, 35.2268, 0.356", "283.517, 351.151, 35.2702, 0.356", "284.138, 351.968, 35.2271, 0.3304", "285.135, 352.1, 35.8907, 0.3304", "285.96, 352.382, 37.588, 0.2796", "286.915, 352.009, 38.64, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "280.066, 291.736, 30.9691, 0.4576", "279.445, 292.417, 30.7756, 0.5338", "278.543, 293.107, 30.5287, 0.6864", "277.979, 294.002, 29.5828, 0.7372", "277.723, 295.0, 28.4183, 0.6864", "277.477, 296.016, 27.4042, 0.5338", "276.661, 296.694, 26.6801, 0.4322", "275.79, 296.44, 25.3028, 0.356", "274.712, 296.179, 25.2496, 0.3814", "273.773, 295.584, 25.4876, 0.3814", "273.169, 294.682, 26.1447, 0.4322", "272.779, 293.667, 25.4699, 0.3814", "272.717, 292.611, 24.4409, 0.356", "272.647, 291.492, 24.4583, 0.2796", "272.183, 290.499, 24.1301, 0.2796", "271.512, 289.628, 23.8146, 0.305", "271.814, 288.631, 22.96, 0.4576" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "280.066, 291.736, 30.9691, 0.4576", "278.921, 291.396, 31.9684, 0.8136", "278.371, 290.489, 32.8994, 0.9406", "278.032, 289.402, 33.04, 0.9406", "277.658, 288.323, 33.0411, 0.8644", "277.207, 287.274, 33.0462, 0.788", "276.642, 286.283, 33.0744, 0.7626", "275.911, 285.406, 33.2055, 0.7626", "275.137, 284.633, 33.899, 0.7372", "274.329, 283.834, 34.1578, 0.7372", "273.506, 283.04, 34.1513, 0.7372", "272.638, 282.299, 34.1236, 0.788", "271.674, 281.687, 33.9755, 0.788", "270.73, 281.122, 33.3152, 0.8136", "269.716, 280.631, 32.9095, 0.8136", "268.681, 280.274, 32.2588, 0.8644", "267.709, 279.866, 31.2015, 0.8644", "266.678, 279.425, 30.7135, 0.839", "265.648, 278.992, 30.2686, 0.7626", "264.734, 278.387, 29.5319, 0.7372", "263.859, 277.724, 28.7868, 0.7372", "263.23, 276.787, 28.5628, 0.7626", "262.68, 275.789, 28.5751, 0.7372", "262.151, 274.783, 28.6457, 0.7118", "261.739, 273.744, 29.0909, 0.6864", "261.246, 272.756, 29.7576, 0.7118", "260.728, 271.776, 30.3254, 0.7372", "260.082, 270.856, 30.7815, 0.7626", "259.439, 269.912, 30.8034, 0.7372", "258.659, 269.076, 30.8143, 0.7118", "257.84, 268.277, 30.8574, 0.6864", "256.993, 267.513, 31.0363, 0.7118", "256.065, 266.966, 31.8489, 0.7626", "255.061, 266.684, 32.9176, 0.8136", "253.973, 266.65, 33.754, 0.8136", "252.852, 266.553, 34.16, 0.7626", "251.808, 266.107, 34.16, 0.7372", "250.903, 265.414, 34.16, 0.7372", "250.09, 264.609, 34.16, 0.7626", "249.296, 263.786, 34.16, 0.788", "248.557, 262.916, 34.1603, 0.839", "247.957, 261.943, 34.162, 0.8898", "247.477, 260.914, 34.1698, 0.8644", "247.064, 259.852, 34.2149, 0.8136", "246.7, 258.789, 34.5103, 0.7626", "246.734, 257.685, 35.1229, 0.7626", "247.034, 256.624, 34.585, 0.7118", "247.016, 255.503, 34.16, 0.661", "246.666, 254.421, 34.1606, 0.6356", "246.286, 253.347, 34.1631, 0.7372", "245.849, 252.294, 34.1802, 0.8644", "245.101, 251.435, 34.2518, 0.9406", "244.234, 250.711, 34.5565, 0.8898", "243.292, 250.13, 35.2167, 0.788", "242.266, 249.654, 35.3962, 0.7118" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "242.266, 249.654, 35.3962, 0.7118", "242.871, 249.735, 36.12, 0.6864", "243.1, 249.163, 36.12, 0.3814", "243.1, 248.362, 36.12, 0.2796", "243.304, 247.765, 36.12, 0.2288", "243.647, 247.308, 36.12, 0.2288", "243.913, 246.773, 36.12, 0.2288", "244.206, 246.265, 36.12, 0.2288", "244.358, 246.074, 36.12, 0.2288", "244.511, 245.883, 36.12, 0.2288", "244.587, 245.617, 36.12, 0.2288", "244.587, 245.274, 36.12, 0.2288", "244.587, 245.045, 36.12, 0.2288", "244.587, 244.244, 36.12, 0.2542", "244.587, 243.901, 36.12, 0.2796", "244.587, 243.558, 36.12, 0.305", "244.841, 243.125, 36.12, 0.2542", "245.426, 242.68, 36.12, 0.2288", "245.883, 242.337, 36.12, 0.2288", "246.38, 242.033, 36.12, 0.2796", "246.761, 241.613, 36.12, 0.3814" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "242.266, 249.654, 35.3962, 0.7118", "241.235, 249.259, 35.9965, 0.6864", "240.286, 248.747, 36.7604, 0.6864", "239.438, 248.039, 37.2198, 0.6864", "238.493, 247.59, 36.1746, 0.6864", "237.508, 247.12, 35.3766, 0.6864", "236.447, 246.724, 35.0809, 0.6864", "235.605, 246.047, 34.2955, 0.7118", "234.747, 245.294, 34.2216, 0.7372", "233.763, 244.728, 34.4999, 0.7372", "232.839, 244.131, 35.1772, 0.6864", "232.001, 243.355, 35.2803, 0.661", "231.15, 242.591, 35.2814, 0.7118", "230.188, 241.975, 35.2864, 0.8136", "229.242, 241.337, 35.3122, 0.8898", "228.332, 240.645, 35.4315, 0.9152", "227.425, 240.025, 36.0444, 0.8898", "226.447, 239.488, 36.6184, 0.839", "225.602, 238.861, 37.599, 0.7626", "224.71, 238.271, 38.498, 0.6864", "223.867, 237.504, 38.64, 0.6356", "223.023, 236.732, 38.6394, 0.6102", "222.079, 236.09, 38.6378, 0.6356", "221.189, 235.372, 38.6294, 0.6864", "220.219, 234.773, 38.5851, 0.7372", "219.259, 234.188, 38.274, 0.7372", "218.514, 233.392, 37.5623, 0.661", "217.904, 232.428, 37.5332, 0.6102", "217.33, 231.445, 37.5906, 0.661", "216.838, 230.469, 38.1329, 0.788", "216.083, 229.69, 38.9603, 0.8898", "215.335, 228.906, 39.7942, 0.8898", "214.626, 228.039, 40.2357, 0.9152", "214.003, 227.123, 40.901, 0.966", "213.367, 226.205, 41.3392, 1.0168", "213.126, 225.128, 41.9723, 0.9914", "212.725, 224.06, 42.0, 0.8898", "212.21, 223.049, 42.0, 0.8644", "211.559, 222.117, 42.0, 0.8136", "211.352, 220.999, 42.0, 0.7626", "211.034, 219.912, 42.0, 0.6102", "210.531, 218.898, 42.0, 0.5592", "209.529, 218.576, 42.0, 0.6356", "208.461, 218.963, 41.9997, 0.7626", "207.327, 219.074, 41.9969, 0.8136", "206.183, 219.061, 41.9782, 0.7626", "205.048, 218.962, 41.8275, 0.6864", "203.638, 219.001, 41.5069, 0.6356", "202.612, 218.632, 40.9072, 0.6102", "201.801, 217.83, 40.88, 0.661", "201.161, 216.885, 40.88, 0.7626", "200.431, 216.004, 40.88, 0.8898", "199.792, 215.059, 40.8803, 0.966", "199.063, 214.178, 40.8811, 0.9914", "198.422, 213.234, 40.8853, 1.0168", "197.691, 212.354, 40.9049, 1.0424", "197.047, 211.413, 41.0099, 1.0424", "196.307, 210.606, 41.6604, 0.9914", "195.508, 209.805, 42.0216, 0.9152", "194.705, 208.99, 42.084, 0.839", "193.934, 208.166, 42.4077, 0.788", "193.512, 207.273, 43.717, 0.7372", "193.782, 206.199, 44.2364, 0.7118", "193.286, 205.382, 44.2072, 0.661", "192.152, 205.267, 44.023, 0.6864", "191.137, 204.895, 43.2967, 0.7372", "190.299, 204.127, 43.12, 0.8644", "189.51, 203.298, 43.12, 0.9406", "188.815, 202.398, 43.12, 1.0168", "188.357, 201.354, 43.12, 1.0168", "188.127, 200.238, 43.12, 1.0168", "187.661, 199.194, 43.12, 0.966", "187.283, 198.12, 43.12, 0.8898", "186.883, 197.051, 43.1206, 0.7626", "186.427, 196.007, 43.1245, 0.661", "185.71, 195.129, 43.1432, 0.661", "184.711, 194.589, 43.248, 0.7626", "183.631, 194.516, 43.8964, 0.8644", "182.545, 194.812, 44.2403, 0.8898", "181.404, 194.89, 44.2414, 0.8644", "180.314, 195.206, 44.2495, 0.788", "179.221, 195.534, 44.2963, 0.7626", "178.108, 195.653, 44.6379, 0.7118", "177.07, 195.303, 45.3152, 0.7626", "176.044, 194.816, 45.4163, 0.788", "175.249, 194.002, 45.6044, 0.8644", "174.688, 193.058, 46.3226, 0.8644", "174.117, 192.078, 46.48, 0.8898", "173.556, 190.418, 47.4916, 0.8898", "173.086, 189.395, 47.6, 0.8136", "172.459, 188.441, 47.6, 0.788", "171.784, 187.518, 47.6, 0.7118", "170.989, 186.717, 47.6006, 0.788", "170.072, 186.034, 47.6025, 0.9152", "169.133, 185.392, 47.6129, 1.1186", "168.088, 184.943, 47.677, 1.1948", "166.049, 184.055, 48.7388, 1.0424", "165.021, 183.582, 49.0641, 0.9914", "164.167, 183.08, 50.3793, 0.966", "163.392, 182.323, 51.1792, 0.9406", "162.988, 181.316, 51.9641, 0.9152", "162.506, 180.283, 52.1178, 0.9152", "161.974, 179.277, 52.2813, 0.8644", "161.413, 178.33, 52.9474, 0.8644", "160.665, 177.476, 53.193, 0.788", "159.866, 176.656, 53.172, 0.7372", "159.1, 175.809, 53.0838, 0.5848", "158.588, 174.833, 52.5938, 0.5592", "158.477, 173.726, 52.9682, 0.5848", "158.081, 172.681, 53.2059, 0.661", "157.302, 171.845, 53.2258, 0.6356", "156.474, 171.058, 53.3151, 0.5592", "155.649, 170.346, 53.949, 0.4322", "154.743, 169.695, 54.3777, 0.4068", "154.734, 168.655, 54.9545, 0.4576", "154.23, 167.747, 55.4854, 0.6102", "153.398, 166.966, 55.6508, 0.7118", "152.685, 166.148, 56.406, 0.7372", "151.856, 165.382, 56.8282, 0.7118", "151.193, 164.518, 57.626, 0.6864", "150.285, 163.88, 58.1879, 0.7118", "149.479, 163.121, 58.7664, 0.7118", "148.627, 162.358, 58.7507, 0.6864", "147.656, 161.765, 58.5628, 0.6102", "146.707, 161.209, 57.8754, 0.5592", "145.818, 160.511, 58.0233, 0.5592", "145.129, 159.651, 58.7017, 0.5592", "144.417, 158.762, 58.6986, 0.5592", "143.801, 157.865, 58.053, 0.5084", "143.065, 157.067, 57.2216, 0.5084", "142.579, 156.1, 56.5673, 0.5592", "142.483, 154.962, 56.6121, 0.6864", "142.12, 153.917, 56.9601, 0.7372", "141.476, 153.052, 57.7864, 0.7118", "140.609, 152.381, 58.3288, 0.6102", "139.543, 152.048, 58.1406, 0.5848", "138.437, 151.964, 58.676, 0.5592", "137.37, 151.596, 58.8423, 0.5084", "136.4, 151.003, 59.0344, 0.4322", "135.418, 150.778, 59.9962, 0.3814", "134.433, 151.219, 60.7785, 0.4322", "133.648, 151.866, 61.992, 0.483", "132.842, 152.596, 62.8023, 0.5592", "132.079, 153.404, 63.4197, 0.5848", "131.414, 154.288, 63.9808, 0.661", "130.688, 155.15, 64.4277, 0.6864", "129.816, 155.884, 64.5876, 0.6864", "128.814, 156.156, 65.52, 0.4576", "128.586, 156.042, 68.88, 0.2288", "128.242, 155.584, 68.88, 0.3814", "127.937, 155.089, 68.88, 0.4068", "127.67, 154.554, 68.88, 0.3814", "127.556, 153.868, 68.88, 0.3304", "127.442, 153.182, 68.88, 0.356", "127.251, 152.572, 68.88, 0.4068", "126.87, 152.152, 68.88, 0.4576", "126.691, 151.53, 68.88, 0.4322", "126.514, 150.906, 68.88, 0.4576", "126.183, 150.436, 68.88, 0.4576", "125.79, 150.029, 68.88, 0.4576", "125.318, 149.699, 68.88, 0.356", "124.975, 149.242, 68.88, 0.305", "124.505, 148.911, 68.88, 0.2796", "123.984, 148.631, 68.88, 0.305", "123.475, 148.339, 68.88, 0.2796", "122.764, 148.25, 68.88, 0.2542", "122.103, 148.11, 68.88, 0.2542", "121.569, 147.919, 69.0668, 0.2796", "120.997, 147.728, 69.16, 0.305", "120.565, 147.36, 69.16, 0.2796", "120.082, 147.042, 69.16, 0.2796", "119.65, 146.89, 69.4089, 0.3814", "119.396, 146.648, 69.8757, 0.3814", "118.938, 146.127, 70.0, 0.2796", "118.518, 145.746, 70.0, 0.305", "117.946, 145.517, 70.0, 0.356", "117.489, 145.174, 70.0, 0.356", "117.044, 144.818, 70.0, 0.305", "116.497, 144.564, 70.0, 0.2542", "115.976, 144.284, 70.0, 0.2288", "115.392, 144.067, 70.0, 0.2288", "114.947, 143.712, 70.0, 0.2542", "114.425, 143.432, 70.0, 0.3304", "113.955, 143.216, 70.0, 0.5848", "113.485, 142.428, 71.12, 0.6864", "112.862, 141.678, 71.68, 0.5848", "112.328, 141.411, 71.68, 0.5338", "111.197, 140.941, 71.68, 0.6356", "110.701, 140.635, 71.68, 0.6102", "110.053, 140.598, 71.96, 0.4576", "109.252, 140.598, 71.96, 0.4322", "108.451, 140.598, 71.96, 0.5084", "107.65, 140.598, 71.96, 0.6356", "107.002, 140.598, 72.3332, 0.6356", "106.278, 140.598, 72.52, 0.5592", "105.477, 140.598, 72.52, 0.483", "104.943, 140.712, 72.6132, 0.4322", "104.74, 141.119, 72.8, 0.3814", "104.358, 141.309, 72.8, 0.3814", "103.875, 141.436, 73.2668, 0.3814", "103.519, 141.729, 73.64, 0.4068", "102.96, 141.97, 73.64, 0.2542", "102.808, 142.161, 73.64, 0.2288", "102.502, 142.199, 73.64, 0.2288", "102.235, 142.276, 73.64, 0.2542", "101.358, 142.428, 73.64, 0.483", "100.329, 142.848, 74.0132, 0.5848", "99.858, 142.987, 74.48, 0.4322", "99.2987, 143.229, 74.48, 0.305", "98.9682, 143.241, 74.48, 0.2288", "98.803, 143.42, 74.48, 0.2288", "98.6123, 143.559, 74.5111, 0.2288", "98.4471, 143.572, 74.9157, 0.2542", "98.1166, 143.572, 75.5068, 0.4322", "97.5573, 143.572, 75.8178, 0.5084", "97.4175, 143.572, 76.8757, 0.5338", "97.0361, 143.572, 77.9022, 0.661", "96.3243, 143.534, 78.5868, 0.788", "95.6633, 143.305, 79.7689, 0.6102", "95.1549, 142.911, 80.08, 0.5848", "95.0659, 141.742, 80.36, 0.305", "94.9515, 141.055, 80.36, 0.3814", "94.6591, 140.547, 80.36, 0.483", "94.2778, 140.127, 80.36, 0.5338", "94.0363, 139.225, 80.36, 0.661", "93.4643, 138.767, 80.36, 0.8644", "92.6635, 138.653, 80.64, 0.6356", "92.0152, 138.501, 80.64, 0.483", "91.5576, 138.157, 80.64, 0.483", "91.1763, 137.166, 80.64, 0.839", "91.1763, 136.136, 80.64, 0.7626", "91.0492, 134.89, 81.2, 0.7372", "90.8331, 133.975, 82.3511, 0.7372", "90.6806, 132.742, 82.88, 0.788", "90.6043, 131.674, 84.0, 0.7626", "90.6043, 130.988, 84.28, 0.7626", "90.6043, 130.187, 84.28, 0.7372", "90.6043, 129.386, 84.28, 0.661", "90.6043, 128.878, 84.9957, 0.5592", "90.528, 128.433, 85.68, 0.5084", "90.1086, 127.594, 86.52, 0.6102", "89.5747, 127.213, 86.8, 0.6864", "88.9264, 127.213, 88.2932, 0.8136", "88.6087, 127.213, 89.7557, 0.5848", "88.2019, 127.213, 90.44, 0.3304", "88.0875, 127.213, 91.0, 0.2542", "88.0748, 127.213, 91.8089, 0.2542", "87.9223, 127.213, 92.8357, 0.483", "87.6299, 127.162, 94.5157, 0.7626", "86.6257, 126.73, 95.48, 0.6356", "85.4182, 126.335, 95.48, 0.6356", "84.5284, 125.726, 95.7289, 0.7626", "83.4734, 125.268, 95.9468, 0.4576", "82.8632, 125.23, 96.32, 0.356", "82.4056, 125.001, 96.6, 0.3304" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "82.4056, 125.001, 96.6, 0.3304", "82.4819, 124.925, 98.84, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "82.4056, 125.001, 96.6, 0.3304", "81.9353, 124.671, 96.6, 0.3814", "81.4269, 124.378, 96.6, 0.356", "81.1472, 123.972, 96.6, 0.305", "80.6515, 123.781, 96.6, 0.2542" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "82.4819, 124.925, 98.84, 0.2288", "83.2827, 124.925, 98.84, 0.2288", "84.0835, 124.925, 98.84, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "82.4819, 124.925, 98.84, 0.2288", "81.6811, 124.925, 98.84, 0.2288", "80.9566, 124.925, 99.0268, 0.2288", "80.2702, 124.925, 99.3068, 0.2288", "79.9651, 124.925, 99.4, 0.2288", "79.6346, 124.925, 99.4311, 0.2288", "79.4948, 124.925, 99.9289, 0.2288", "79.3295, 124.925, 100.364, 0.2288", "79.0499, 124.925, 101.08, 0.2288", "78.7194, 124.925, 101.111, 0.2288", "78.5033, 124.925, 101.422, 0.2288", "78.2491, 124.925, 101.64, 0.2288", "77.9567, 124.925, 101.764, 0.2288", "77.9059, 124.925, 102.2, 0.2288", "77.9059, 124.925, 102.76, 0.2288", "77.9059, 124.925, 103.32, 0.2288", "77.8551, 124.925, 105.156, 0.2288", "77.5627, 124.925, 106.4, 0.2288", "77.5627, 124.925, 107.24, 0.2288", "77.5246, 124.925, 107.987, 0.2288", "77.3975, 124.925, 108.516, 0.2288", "77.2195, 124.925, 108.92, 0.2288", "76.889, 124.925, 110.631, 0.2288", "76.8763, 124.925, 112.56, 0.2288", "76.7619, 124.925, 113.12, 0.2288", "76.6475, 125.052, 113.649, 0.2288", "76.6475, 125.268, 113.68, 0.2288", "76.6348, 125.522, 113.867, 0.2288", "76.5458, 125.688, 114.084, 0.2288", "76.5331, 125.726, 114.52, 0.2288", "76.5331, 125.726, 115.08, 0.2288", "76.3297, 125.726, 115.982, 0.2288", "76.1263, 125.726, 116.324, 0.2288", "75.656, 125.726, 117.413, 0.3304", "75.1603, 125.726, 118.16, 0.4322", "74.8171, 125.726, 118.16, 0.483", "74.4612, 125.726, 118.969, 0.3304", "74.2832, 125.726, 119.373, 0.2542", "73.6858, 125.726, 120.431, 0.305", "73.2155, 125.84, 120.96, 0.3814", "72.9104, 125.853, 121.862, 0.4322", "72.6816, 126.005, 122.609, 0.305", "72.6435, 126.183, 122.64, 0.2542", "72.3003, 126.526, 122.92, 0.2288", "71.8427, 126.768, 123.169, 0.2288", "71.6139, 126.857, 123.231, 0.2288", "71.3851, 126.882, 123.449, 0.2288", "71.2326, 127.061, 123.48, 0.2288", "71.1563, 127.238, 123.698, 0.2288", "71.1563, 127.315, 124.071, 0.2288", "71.1563, 127.454, 124.569, 0.2288", "71.1055, 127.658, 124.787, 0.2288", "70.9021, 127.683, 125.067, 0.2288", "70.6987, 127.785, 125.72, 0.2288", "70.6606, 127.785, 126.467, 0.2288", "70.4953, 127.823, 126.809, 0.2288", "70.3174, 127.899, 127.027, 0.2288", "70.0504, 128.166, 127.12, 0.2288", "69.6818, 128.598, 127.12, 0.2288", "69.5801, 128.84, 127.12, 0.2288", "69.3767, 128.979, 127.12, 0.2288", "69.3259, 129.158, 127.96, 0.2542", "69.2751, 129.234, 128.489, 0.2288", "69.0208, 129.272, 128.613, 0.2288", "68.8683, 129.692, 129.173, 0.2796", "68.792, 129.996, 129.36, 0.2796", "68.6395, 130.429, 129.889, 0.2796", "68.4615, 130.695, 130.48, 0.305", "68.4107, 131.217, 130.76, 0.2542", "68.4107, 131.458, 131.569, 0.2288", "68.2963, 131.56, 131.88, 0.2288", "68.0675, 131.687, 132.129, 0.2288", "67.915, 131.789, 132.347, 0.2288", "67.3048, 132.055, 132.44, 0.2288", "66.9235, 132.475, 132.44, 0.2288", "66.7074, 133.06, 132.44, 0.2288", "66.4278, 133.569, 132.44, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "80.6515, 123.781, 96.6, 0.2542", "78.4733, 122.37, 96.5222, 0.3814", "75.5724, 120.128, 96.5222, 0.2796", "73.2065, 119.239, 96.5222, 0.2288", "70.5605, 119.03, 96.5222, 0.2288", "62.1726, 118.907, 100.053, 0.2288", "58.5001, 119.167, 100.053, 0.2288", "53.0308, 114.818, 100.053, 0.2542", "50.0391, 112.203, 100.053, 0.2796", "48.6373, 111.259, 98.8761, 0.3304", "47.7965, 107.225, 98.8761, 0.3304", "44.7903, 101.052, 97.1107, 0.3304", "42.8391, 98.1364, 95.345, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "80.6515, 123.781, 96.6, 0.2542", "80.1303, 123.781, 96.7243, 0.2288", "80.0795, 123.781, 97.44, 0.2288", "79.8761, 123.679, 98.9332, 0.2288", "79.6219, 123.514, 99.5868, 0.2288", "79.5075, 123.311, 100.489, 0.2796", "79.5075, 122.98, 101.08, 0.4322", "79.1516, 122.764, 102.2, 0.5848", "78.5923, 122.51, 102.729, 0.3814", "78.122, 122.306, 103.04, 0.3304" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "78.122, 122.306, 103.04, 0.3304", "77.5963, 122.409, 102.408, 0.2288", "75.3711, 123.113, 102.408, 0.2796", "72.1777, 122.221, 102.408, 0.305", "60.0458, 115.911, 106.527, 0.2796", "55.7962, 114.0, 106.527, 0.2542", "50.0975, 115.96, 108.882, 0.2288", "45.0238, 116.609, 112.413, 0.2288", "35.2529, 119.015, 115.944, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "78.122, 122.306, 103.04, 0.3304", "77.5754, 122.294, 103.351, 0.2542", "77.5627, 122.294, 104.16, 0.2288", "77.55, 122.179, 104.689, 0.2288", "77.2195, 122.065, 105.0, 0.2288", "77.1178, 122.065, 105.591, 0.2288", "77.1051, 122.065, 106.68, 0.2288", "77.1051, 121.988, 107.333, 0.2288", "77.0034, 121.938, 108.08, 0.2288", "76.978, 121.658, 108.453, 0.2288", "76.7238, 121.518, 109.169, 0.2288", "76.6475, 121.341, 109.387, 0.2288", "76.406, 121.048, 109.48, 0.2288", "75.9865, 120.781, 109.76, 0.2288", "75.5162, 120.488, 109.853, 0.2288", "75.173, 120.222, 110.32, 0.2288", "74.9442, 120.07, 111.067, 0.2542", "74.5883, 119.777, 111.16, 0.305", "74.1307, 119.662, 111.16, 0.2542", "73.8383, 119.612, 111.16, 0.2288", "73.5968, 119.307, 111.502, 0.2288", "73.2282, 119.192, 111.72, 0.2288", "72.8723, 118.963, 112.249, 0.2288", "72.796, 118.836, 112.591, 0.2288", "72.6816, 118.697, 113.089, 0.2288", "72.491, 118.404, 113.587, 0.2288", "72.3257, 118.366, 113.929, 0.2288", "71.9571, 118.061, 114.8, 0.2288", "71.919, 117.984, 115.36, 0.2288", "71.6012, 117.73, 115.64, 0.2288", "71.1563, 117.489, 116.2, 0.2288", "71.0292, 117.273, 116.48, 0.2288", "70.8767, 116.853, 116.76, 0.2288", "70.5843, 116.802, 116.76, 0.2288", "70.3301, 116.713, 116.76, 0.2288", "69.8089, 116.205, 116.76, 0.2288", "69.4022, 115.811, 116.76, 0.2542", "69.1861, 115.226, 116.76, 0.305", "68.9573, 114.731, 116.947, 0.356", "68.8302, 114.298, 117.258, 0.3814", "68.6395, 114.273, 118.409, 0.4322", "68.6395, 113.942, 119.84, 0.6864", "68.5251, 113.523, 120.773, 0.5338", "68.3853, 113.129, 121.427, 0.356", "68.2963, 112.57, 121.8, 0.2542", "68.2963, 111.921, 122.173, 0.2288", "68.2963, 111.743, 122.578, 0.2288", "68.22, 111.604, 122.889, 0.2542", "68.1056, 111.044, 122.92, 0.305", "68.0675, 110.053, 122.92, 0.2542", "68.0675, 109.252, 122.92, 0.2542", "68.0675, 108.451, 122.92, 0.305", "68.0675, 107.65, 122.92, 0.356", "68.0675, 106.85, 122.92, 0.356", "68.0675, 106.506, 122.92, 0.305", "68.0675, 106.252, 123.138, 0.2542", "68.0675, 106.087, 123.573, 0.2542", "68.0675, 105.578, 124.569, 0.3304", "68.0675, 105.134, 124.6, 0.3304", "68.0675, 104.6, 124.973, 0.2542", "68.0675, 104.345, 125.191, 0.2288", "68.0675, 104.218, 125.72, 0.2288", "68.0675, 103.99, 126.56, 0.2288", "68.0675, 103.646, 126.56, 0.2288", "68.0675, 103.38, 127.027, 0.2288", "68.0675, 103.214, 127.462, 0.2288", "68.0675, 102.846, 127.68, 0.2288", "68.0675, 102.502, 127.68, 0.2288", "68.1056, 101.625, 127.68, 0.2288", "68.2836, 101.168, 128.084, 0.2288", "68.2963, 100.558, 128.52, 0.2288", "68.4107, 100.1, 129.08, 0.2288", "68.4107, 99.2992, 129.08, 0.2288", "68.4107, 98.956, 129.08, 0.2288", "68.4615, 98.6636, 129.08, 0.2288", "68.6395, 98.4984, 129.08, 0.2288", "68.7793, 98.295, 129.08, 0.2542", "69.0335, 97.9772, 129.08, 0.305", "69.4403, 97.6976, 129.08, 0.2542", "69.7454, 97.6595, 129.08, 0.2288", "70.0123, 97.3544, 129.08, 0.2288", "70.1267, 97.1256, 129.08, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_242",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_243",
    "groups" : [ ],
    "sections" : [ "dend_27", "dend_26", "dend_19", "dend_16", "dend_7", "dend_0", "apic_0", "dend_28", "dend_25", "dend_20", "dend_18", "dend_17", "dend_13", "dend_8", "dend_6", "dend_1", "apic_20", "apic_1", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_9", "dend_5", "dend_2", "apic_19", "apic_2", "dend_23", "dend_22", "dend_11", "dend_10", "dend_4", "dend_3", "apic_4", "apic_3", "apic_6", "apic_5", "apic_18", "apic_7", "apic_17", "apic_8", "apic_14", "apic_9", "apic_16", "apic_15", "apic_13", "apic_10", "apic_12", "apic_11" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_27", "dend_26", "dend_19", "dend_16", "dend_7", "dend_0", "dend_28", "dend_25", "dend_20", "dend_18", "dend_17", "dend_13", "dend_8", "dend_6", "dend_1", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_9", "dend_5", "dend_2", "dend_23", "dend_22", "dend_11", "dend_10", "dend_4", "dend_3" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_19", "apic_2", "apic_4", "apic_3", "apic_6", "apic_5", "apic_18", "apic_7", "apic_17", "apic_8", "apic_14", "apic_9", "apic_16", "apic_15", "apic_13", "apic_10", "apic_12", "apic_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11657",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_14", "apic_9", "apic_9", "apic_9", "apic_9", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.17"
  }, {
    "group" : "dend",
    "value" : "2.17"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "167.06999"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.2399177E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.3122394E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.4522856",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0010118085",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.037093073",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.3321069E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.5021526E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.085719675",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.9962473E-4",
    "erev" : "-90.58236"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.519761E-4",
    "erev" : "-90.58236"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0852663E-5",
    "erev" : "-90.58236"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "7.763135E-5",
    "erev" : "-90.58236"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.0904404E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0061633918",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472299294

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_18, id: apic_18, parent: apic_6
create apic_18
public apic_18
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_14, id: apic_14, parent: apic_8
create apic_14
public apic_14
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_242, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_242
// Group: {name=ModelViewParmSubset_243, groups=[], sections=[dend_27, dend_26, dend_19, dend_16, dend_7, dend_0, apic_0, dend_28, dend_25, dend_20, dend_18, dend_17, dend_13, dend_8, dend_6, dend_1, apic_20, apic_1, dend_24, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, apic_19, apic_2, dend_23, dend_22, dend_11, dend_10, dend_4, dend_3, apic_4, apic_3, apic_6, apic_5, apic_18, apic_7, apic_17, apic_8, apic_14, apic_9, apic_16, apic_15, apic_13, apic_10, apic_12, apic_11]}
objref ModelViewParmSubset_243
// Group: {name=dend, groups=[], sections=[dend_27, dend_26, dend_19, dend_16, dend_7, dend_0, dend_28, dend_25, dend_20, dend_18, dend_17, dend_13, dend_8, dend_6, dend_1, dend_24, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, dend_23, dend_22, dend_11, dend_10, dend_4, dend_3]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_4, apic_3, apic_6, apic_5, apic_18, apic_7, apic_17, apic_8, apic_14, apic_9, apic_16, apic_15, apic_13, apic_10, apic_12, apic_11]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_11657, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_11657
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_14, apic_9, apic_9, apic_9, apic_9, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000411421048291)
    connect dend_27(0), soma_0(0.5000411421048291)
    connect dend_26(0), soma_0(0.5000411421048291)
    connect dend_19(0), soma_0(0.5000411421048291)
    connect dend_16(0), soma_0(0.5000411421048291)
    connect dend_7(0), soma_0(0.5000411421048291)
    connect dend_0(0), soma_0(0.5000411421048291)
    connect apic_0(0), soma_0(0.5000411421048291)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_18(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_14(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 362.52, 355.67, 28.56, 12.153 ) }
    soma_0 { pt3dadd( 368.597, 355.67, 28.56, 12.153 ) }
    soma_0 { pt3dadd( 374.673, 355.67, 28.56, 12.153 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 368.596, 355.67, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 374.438, 369.486, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 380.279, 383.302, 28.56, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 6/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 365.673, 357.275, 25.3075, 0.4322 ) }
    dend_27 { pt3dadd( 363.98, 355.24, 23.5418, 0.483 ) }
    dend_27 { pt3dadd( 363.092, 354.732, 23.5418, 0.4322 ) }
    dend_27 { pt3dadd( 360.187, 354.945, 22.9533, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 365.881, 359.313, 34.1359, 0.4068 ) }
    dend_26 { pt3dadd( 365.792, 360.83, 34.1359, 0.483 ) }
    dend_26 { pt3dadd( 366.565, 361.391, 35.313, 0.5592 ) }
    dend_26 { pt3dadd( 367.09, 361.672, 35.313, 0.5338 ) }
    dend_26 { pt3dadd( 368.234, 362.083, 35.313, 0.5338 ) }
    dend_26 { pt3dadd( 369.919, 362.09, 36.4902, 0.5084 ) }
    dend_26 { pt3dadd( 371.035, 361.587, 36.4902, 0.5848 ) }
    dend_26 { pt3dadd( 371.937, 360.349, 36.4902, 0.5848 ) }
    dend_26 { pt3dadd( 372.359, 358.541, 37.667, 0.5848 ) }
    dend_26 { pt3dadd( 372.711, 357.898, 37.667, 0.483 ) }
    dend_26 { pt3dadd( 373.564, 357.658, 37.667, 0.5084 ) }
    dend_26 { pt3dadd( 375.732, 357.239, 38.8441, 0.483 ) }
    dend_26 { pt3dadd( 376.53, 356.727, 38.8441, 0.5084 ) }
    dend_26 { pt3dadd( 378.26, 356.745, 38.8441, 0.4322 ) }
    dend_26 { pt3dadd( 378.763, 356.213, 38.8441, 0.4576 ) }
    dend_26 { pt3dadd( 378.409, 354.887, 40.0212, 0.483 ) }
    dend_26 { pt3dadd( 377.882, 354.06, 40.0212, 0.5084 ) }
    dend_26 { pt3dadd( 378.004, 353.041, 40.0212, 0.4322 ) }
    dend_26 { pt3dadd( 378.56, 352.86, 40.0212, 0.3814 ) }
    dend_26 { pt3dadd( 379.726, 352.931, 40.0212, 0.3814 ) }
    dend_26 { pt3dadd( 381.271, 352.973, 41.1984, 0.4322 ) }
    dend_26 { pt3dadd( 382.388, 352.855, 41.1984, 0.4322 ) }
    dend_26 { pt3dadd( 382.962, 352.409, 41.1984, 0.3814 ) }
    dend_26 { pt3dadd( 383.671, 352.511, 41.1984, 0.3814 ) }
    dend_26 { pt3dadd( 383.898, 353.375, 41.7869, 0.4068 ) }
    dend_26 { pt3dadd( 384.105, 353.955, 41.7869, 0.4322 ) }
    dend_26 { pt3dadd( 384.56, 354.282, 41.7869, 0.3814 ) }
    dend_26 { pt3dadd( 385.148, 354.0, 41.7869, 0.356 ) }
    dend_26 { pt3dadd( 387.145, 353.22, 42.3755, 0.4576 ) }
    dend_26 { pt3dadd( 394.135, 350.245, 48.8496, 0.4576 ) }
    dend_26 { pt3dadd( 394.777, 349.586, 48.8496, 0.356 ) }
    dend_26 { pt3dadd( 395.961, 349.3, 48.8496, 0.305 ) }
    dend_26 { pt3dadd( 396.615, 349.287, 48.8496, 0.305 ) }
    dend_26 { pt3dadd( 398.453, 348.294, 50.6153, 0.3814 ) }
    dend_26 { pt3dadd( 400.35, 348.462, 53.5578, 0.4322 ) }
    dend_26 { pt3dadd( 401.868, 349.309, 56.5006, 0.4576 ) }
    dend_26 { pt3dadd( 407.552, 350.617, 58.8549, 0.356 ) }
    dend_26 { pt3dadd( 410.501, 351.038, 58.8549, 0.4068 ) }
    dend_26 { pt3dadd( 421.056, 352.338, 62.3862, 0.483 ) }
    dend_26 { pt3dadd( 428.538, 354.514, 65.9176, 0.5084 ) }
    dend_26 { pt3dadd( 429.919, 355.531, 65.9176, 0.4322 ) }
    dend_26 { pt3dadd( 432.82, 355.751, 67.0947, 0.4068 ) }
    dend_26 { pt3dadd( 436.167, 355.095, 67.0947, 0.4322 ) }
    dend_26 { pt3dadd( 440.591, 352.979, 71.2144, 0.6864 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 374.016, 356.923, 28.2503, 0.4068 ) }
    dend_19 { pt3dadd( 374.944, 357.031, 28.2503, 0.4576 ) }
    dend_19 { pt3dadd( 375.516, 357.066, 28.2503, 0.5592 ) }
    dend_19 { pt3dadd( 377.27, 354.352, 27.6618, 1.144 ) }
    dend_19 { pt3dadd( 378.405, 354.168, 27.4327, 1.0424 ) }
    dend_19 { pt3dadd( 379.41, 353.65, 27.4014, 0.8644 ) }
    dend_19 { pt3dadd( 380.401, 353.085, 27.251, 0.788 ) }
    dend_19 { pt3dadd( 381.417, 352.629, 26.7193, 0.8644 ) }
    dend_19 { pt3dadd( 382.512, 352.467, 27.3622, 0.9152 ) }
    dend_19 { pt3dadd( 383.654, 352.47, 27.4123, 0.9152 ) }
    dend_19 { pt3dadd( 384.796, 352.49, 27.2482, 0.8644 ) }
    dend_19 { pt3dadd( 385.885, 352.606, 26.5065, 0.8644 ) }
    dend_19 { pt3dadd( 386.909, 353.091, 26.3287, 0.9406 ) }
    dend_19 { pt3dadd( 387.795, 353.813, 26.3589, 1.144 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 68/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 363.993, 357.119, 29.232, 0.661 ) }
    dend_16 { pt3dadd( 363.193, 357.498, 27.6374, 0.7626 ) }
    dend_16 { pt3dadd( 362.378, 358.288, 27.4425, 0.7372 ) }
    dend_16 { pt3dadd( 361.701, 359.202, 27.4515, 0.661 ) }
    dend_16 { pt3dadd( 361.165, 360.21, 27.5002, 0.6102 ) }
    dend_16 { pt3dadd( 360.536, 361.161, 27.7172, 0.6356 ) }
    dend_16 { pt3dadd( 360.246, 361.887, 28.3464, 0.6864 ) }
    dend_16 { pt3dadd( 359.714, 362.88, 28.693, 0.7118 ) }
    dend_16 { pt3dadd( 359.353, 363.91, 29.346, 0.7118 ) }
    dend_16 { pt3dadd( 359.153, 364.976, 30.1204, 0.661 ) }
    dend_16 { pt3dadd( 359.63, 365.94, 30.8266, 0.661 ) }
    dend_16 { pt3dadd( 360.323, 366.825, 31.2376, 0.661 ) }
    dend_16 { pt3dadd( 360.906, 367.772, 31.8419, 0.661 ) }
    dend_16 { pt3dadd( 361.305, 368.826, 31.8668, 0.6356 ) }
    dend_16 { pt3dadd( 361.342, 369.933, 31.5736, 0.6102 ) }
    dend_16 { pt3dadd( 361.044, 370.989, 30.8652, 0.661 ) }
    dend_16 { pt3dadd( 360.635, 372.055, 30.8006, 0.7118 ) }
    dend_16 { pt3dadd( 359.98, 372.984, 30.8022, 0.7626 ) }
    dend_16 { pt3dadd( 359.193, 373.813, 30.8098, 0.7372 ) }
    dend_16 { pt3dadd( 358.483, 374.705, 30.8442, 0.7118 ) }
    dend_16 { pt3dadd( 357.79, 375.609, 31.0184, 0.6864 ) }
    dend_16 { pt3dadd( 356.992, 376.367, 31.6372, 0.6864 ) }
    dend_16 { pt3dadd( 356.118, 377.03, 30.9977, 0.6864 ) }
    dend_16 { pt3dadd( 355.459, 377.894, 30.3257, 0.7118 ) }
    dend_16 { pt3dadd( 355.402, 379.004, 29.9886, 0.788 ) }
    dend_16 { pt3dadd( 355.77, 380.003, 30.9025, 0.8644 ) }
    dend_16 { pt3dadd( 356.443, 380.84, 31.7562, 0.8644 ) }
    dend_16 { pt3dadd( 356.698, 381.929, 31.9192, 0.7626 ) }
    dend_16 { pt3dadd( 356.691, 383.073, 31.9141, 0.661 ) }
    dend_16 { pt3dadd( 356.652, 384.216, 31.8777, 0.6356 ) }
    dend_16 { pt3dadd( 356.385, 385.31, 31.6736, 0.6864 ) }
    dend_16 { pt3dadd( 355.906, 386.293, 30.9179, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_16 { pt3dadd( 355.439, 387.326, 30.6368, 0.7626 ) }
    dend_16 { pt3dadd( 355.127, 388.38, 29.948, 0.7118 ) }
    dend_16 { pt3dadd( 354.875, 389.48, 29.6856, 0.661 ) }
    dend_16 { pt3dadd( 354.87, 390.625, 29.7195, 0.6102 ) }
    dend_16 { pt3dadd( 354.879, 391.765, 29.9211, 0.6102 ) }
    dend_16 { pt3dadd( 354.939, 392.863, 30.6191, 0.5592 ) }
    dend_16 { pt3dadd( 355.215, 393.936, 30.2, 0.4576 ) }
    dend_16 { pt3dadd( 355.223, 395.023, 29.4095, 0.2288 ) }
    dend_16 { pt3dadd( 354.789, 395.974, 28.6745, 0.5338 ) }
    dend_16 { pt3dadd( 354.01, 396.809, 28.56, 0.661 ) }
    dend_16 { pt3dadd( 353.224, 397.639, 28.56, 0.788 ) }
    dend_16 { pt3dadd( 352.536, 398.547, 28.56, 0.9152 ) }
    dend_16 { pt3dadd( 351.928, 399.516, 28.56, 1.0168 ) }
    dend_16 { pt3dadd( 351.634, 400.608, 28.56, 0.9914 ) }
    dend_16 { pt3dadd( 351.433, 401.725, 28.56, 0.8136 ) }
    dend_16 { pt3dadd( 351.183, 402.836, 28.56, 0.6356 ) }
    dend_16 { pt3dadd( 351.013, 403.959, 28.5589, 0.5592 ) }
    dend_16 { pt3dadd( 350.826, 405.079, 28.5538, 0.6102 ) }
    dend_16 { pt3dadd( 350.914, 406.183, 28.5163, 0.6356 ) }
    dend_16 { pt3dadd( 350.302, 407.132, 28.3116, 0.6356 ) }
    dend_16 { pt3dadd( 349.311, 407.552, 27.5408, 0.6356 ) }
    dend_16 { pt3dadd( 348.181, 407.4, 27.4016, 0.661 ) }
    dend_16 { pt3dadd( 347.043, 407.396, 27.193, 0.7118 ) }
    dend_16 { pt3dadd( 345.939, 407.486, 26.8825, 0.7118 ) }
    dend_16 { pt3dadd( 344.9, 407.886, 27.4176, 0.6864 ) }
    dend_16 { pt3dadd( 343.885, 408.414, 27.4621, 0.4576 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 26/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 368.762, 361.372, 29.0976, 0.5848 ) }
    dend_7 { pt3dadd( 369.48, 362.176, 28.5636, 0.7626 ) }
    dend_7 { pt3dadd( 370.44, 362.794, 28.56, 0.839 ) }
    dend_7 { pt3dadd( 370.987, 363.767, 28.5589, 0.9152 ) }
    dend_7 { pt3dadd( 371.417, 364.825, 28.5538, 0.9152 ) }
    dend_7 { pt3dadd( 371.848, 365.878, 28.5211, 0.966 ) }
    dend_7 { pt3dadd( 372.224, 366.952, 28.3349, 0.9406 ) }
    dend_7 { pt3dadd( 372.591, 367.981, 27.5918, 0.9406 ) }
    dend_7 { pt3dadd( 373.045, 369.025, 27.4473, 0.9406 ) }
    dend_7 { pt3dadd( 373.268, 370.145, 27.4884, 0.9914 ) }
    dend_7 { pt3dadd( 373.605, 371.228, 27.7043, 1.144 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 373.63, 355.587, 28.5309, 0.6864 ) }
    dend_0 { pt3dadd( 375.003, 354.964, 28.2895, 0.6864 ) }
    dend_0 { pt3dadd( 375.586, 353.258, 28.4724, 0.661 ) }
    dend_0 { pt3dadd( 376.27, 352.39, 27.9899, 0.5848 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 41/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 364.307, 351.553, 27.8782, 0.483 ) }
    apic_0 { pt3dadd( 363.355, 350.985, 28.492, 0.6864 ) }
    apic_0 { pt3dadd( 362.328, 350.503, 28.56, 0.839 ) }
    apic_0 { pt3dadd( 361.337, 349.944, 28.56, 0.9406 ) }
    apic_0 { pt3dadd( 360.276, 349.529, 28.56, 0.9406 ) }
    apic_0 { pt3dadd( 359.259, 349.009, 28.56, 0.966 ) }
    apic_0 { pt3dadd( 358.303, 348.384, 28.56, 0.9152 ) }
    apic_0 { pt3dadd( 357.277, 347.888, 28.5594, 0.8644 ) }
    apic_0 { pt3dadd( 356.242, 347.417, 28.5572, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 380.279, 383.302, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 386.12, 397.118, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 391.962, 410.934, 28.56, 1.0 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 53/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 365.673, 357.275, 25.3075, 0.4322 ) }
    dend_28 { pt3dadd( 365.502, 358.582, 24.1304, 0.356 ) }
    dend_28 { pt3dadd( 365.418, 358.879, 24.1304, 0.356 ) }
    dend_28 { pt3dadd( 365.036, 359.176, 24.1304, 0.3304 ) }
    dend_28 { pt3dadd( 364.656, 359.344, 24.1304, 0.356 ) }
    dend_28 { pt3dadd( 364.444, 359.684, 24.1304, 0.356 ) }
    dend_28 { pt3dadd( 364.571, 360.022, 24.1304, 0.3814 ) }
    dend_28 { pt3dadd( 364.993, 360.15, 24.1304, 0.5084 ) }
    dend_28 { pt3dadd( 365.502, 360.615, 24.1304, 0.5592 ) }
    dend_28 { pt3dadd( 366.01, 361.716, 24.1304, 0.7118 ) }
    dend_28 { pt3dadd( 367.151, 362.55, 23.5418, 0.7118 ) }
    dend_28 { pt3dadd( 367.868, 362.677, 23.5418, 0.5848 ) }
    dend_28 { pt3dadd( 368.29, 362.466, 23.5418, 0.4068 ) }
    dend_28 { pt3dadd( 368.714, 362.297, 23.5418, 0.2796 ) }
    dend_28 { pt3dadd( 369.052, 362.466, 23.5418, 0.2288 ) }
    dend_28 { pt3dadd( 369.137, 362.846, 23.5418, 0.2288 ) }
    dend_28 { pt3dadd( 369.088, 363.466, 22.9533, 0.2288 ) }
    dend_28 { pt3dadd( 369.215, 363.889, 22.9533, 0.2288 ) }
    dend_28 { pt3dadd( 369.594, 364.1, 22.9533, 0.2288 ) }
    dend_28 { pt3dadd( 370.1, 363.847, 22.9533, 0.2542 ) }
    dend_28 { pt3dadd( 370.858, 363.508, 22.9533, 0.305 ) }
    dend_28 { pt3dadd( 372.505, 363.003, 22.9533, 0.4576 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 75/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 387.795, 353.813, 26.3589, 1.144 ) }
    dend_25 { pt3dadd( 388.609, 353.561, 25.5906, 0.6102 ) }
    dend_25 { pt3dadd( 388.854, 352.486, 25.7734, 0.5084 ) }
    dend_25 { pt3dadd( 389.635, 351.898, 25.0169, 0.5338 ) }
    dend_25 { pt3dadd( 390.493, 351.333, 24.1374, 0.661 ) }
    dend_25 { pt3dadd( 390.941, 350.289, 23.9845, 0.7372 ) }
    dend_25 { pt3dadd( 391.023, 349.178, 23.4738, 0.7372 ) }
    dend_25 { pt3dadd( 391.04, 348.065, 23.849, 0.6864 ) }
    dend_25 { pt3dadd( 391.154, 346.939, 24.0736, 0.6102 ) }
    dend_25 { pt3dadd( 391.509, 345.854, 24.0369, 0.5592 ) }
    dend_25 { pt3dadd( 391.907, 344.821, 23.7423, 0.5338 ) }
    dend_25 { pt3dadd( 392.802, 344.214, 23.1277, 0.5084 ) }
    dend_25 { pt3dadd( 393.487, 343.414, 24.0352, 0.4576 ) }
    dend_25 { pt3dadd( 394.35, 342.82, 24.943, 0.4068 ) }
    dend_25 { pt3dadd( 395.358, 343.056, 25.5514, 0.3814 ) }
    dend_25 { pt3dadd( 395.278, 344.064, 26.507, 0.356 ) }
    dend_25 { pt3dadd( 394.695, 344.985, 27.2714, 0.305 ) }
    dend_25 { pt3dadd( 393.765, 345.602, 27.44, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 93/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 387.795, 353.813, 26.3589, 1.144 ) }
    dend_20 { pt3dadd( 388.578, 354.579, 26.4902, 0.8898 ) }
    dend_20 { pt3dadd( 389.217, 355.37, 27.47, 0.788 ) }
    dend_20 { pt3dadd( 389.676, 356.26, 27.6578, 0.788 ) }
    dend_20 { pt3dadd( 390.47, 356.927, 26.5482, 0.788 ) }
    dend_20 { pt3dadd( 391.316, 357.682, 26.2707, 0.7372 ) }
    dend_20 { pt3dadd( 392.289, 358.272, 26.0809, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 393.251, 358.798, 25.3585, 0.661 ) }
    dend_20 { pt3dadd( 394.135, 359.491, 25.3238, 0.7372 ) }
    dend_20 { pt3dadd( 394.639, 360.472, 25.9193, 0.7626 ) }
    dend_20 { pt3dadd( 395.01, 361.402, 27.2331, 0.7626 ) }
    dend_20 { pt3dadd( 395.635, 362.306, 27.9563, 0.6864 ) }
    dend_20 { pt3dadd( 396.345, 363.163, 28.5093, 0.6356 ) }
    dend_20 { pt3dadd( 397.289, 363.797, 28.56, 0.6356 ) }
    dend_20 { pt3dadd( 398.247, 364.415, 28.5603, 0.661 ) }
    dend_20 { pt3dadd( 399.254, 364.957, 28.5617, 0.6864 ) }
    dend_20 { pt3dadd( 400.185, 365.619, 28.5684, 0.7118 ) }
    dend_20 { pt3dadd( 401.154, 366.225, 28.6042, 0.6864 ) }
    dend_20 { pt3dadd( 402.121, 366.825, 28.791, 0.6356 ) }
    dend_20 { pt3dadd( 403.059, 367.341, 29.6783, 0.5338 ) }
    dend_20 { pt3dadd( 403.811, 367.947, 31.0747, 0.5338 ) }
    dend_20 { pt3dadd( 404.243, 368.938, 31.6523, 0.5848 ) }
    dend_20 { pt3dadd( 404.322, 370.021, 30.8944, 0.661 ) }
    dend_20 { pt3dadd( 404.509, 371.141, 30.9372, 0.6864 ) }
    dend_20 { pt3dadd( 405.404, 371.712, 31.6064, 0.6864 ) }
    dend_20 { pt3dadd( 406.466, 372.065, 31.6523, 0.6864 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 19/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 343.885, 408.414, 27.4621, 0.4576 ) }
    dend_18 { pt3dadd( 343.618, 409.578, 27.4946, 0.5084 ) }
    dend_18 { pt3dadd( 343.065, 410.569, 27.771, 0.5592 ) }
    dend_18 { pt3dadd( 342.571, 411.513, 28.7507, 0.6102 ) }
    dend_18 { pt3dadd( 342.01, 412.425, 29.654, 0.6864 ) }
    dend_18 { pt3dadd( 341.267, 413.267, 30.1101, 0.7626 ) }
    dend_18 { pt3dadd( 340.467, 414.279, 30.8, 0.8136 ) }
    dend_18 { pt3dadd( 339.831, 415.22, 30.8, 0.8898 ) }
    dend_18 { pt3dadd( 339.464, 416.301, 30.7994, 0.9152 ) }
    dend_18 { pt3dadd( 339.251, 417.308, 30.7964, 0.8644 ) }
    dend_18 { pt3dadd( 338.913, 418.379, 30.777, 0.7118 ) }
    dend_18 { pt3dadd( 338.096, 419.171, 30.6874, 0.5592 ) }
    dend_18 { pt3dadd( 337.061, 419.508, 30.1188, 0.5084 ) }
    dend_18 { pt3dadd( 335.938, 419.556, 29.68, 0.5084 ) }
    dend_18 { pt3dadd( 334.85, 419.85, 29.68, 0.5592 ) }
    dend_18 { pt3dadd( 333.897, 420.47, 29.68, 0.6864 ) }
    dend_18 { pt3dadd( 333.176, 421.558, 29.68, 0.6864 ) }
    dend_18 { pt3dadd( 332.84, 422.645, 29.68, 0.6864 ) }
    dend_18 { pt3dadd( 332.474, 423.715, 29.6808, 0.6864 ) }
    dend_18 { pt3dadd( 331.872, 424.684, 29.6839, 0.6864 ) }
    dend_18 { pt3dadd( 331.228, 425.62, 29.6988, 0.6864 ) }
    dend_18 { pt3dadd( 331.068, 426.741, 29.804, 0.6864 ) }
    dend_18 { pt3dadd( 331.034, 427.843, 30.4545, 0.661 ) }
    dend_18 { pt3dadd( 330.79, 428.935, 30.751, 0.6356 ) }
    dend_18 { pt3dadd( 330.271, 429.94, 30.5012, 0.5848 ) }
    dend_18 { pt3dadd( 329.914, 430.939, 29.7422, 0.5592 ) }
    dend_18 { pt3dadd( 330.398, 431.955, 30.0504, 0.5084 ) }
    dend_18 { pt3dadd( 330.348, 433.011, 30.7521, 0.5084 ) }
    dend_18 { pt3dadd( 329.814, 434.007, 30.8, 0.5338 ) }
    dend_18 { pt3dadd( 329.695, 435.138, 30.8, 0.5592 ) }
    dend_18 { pt3dadd( 329.656, 436.28, 30.7994, 0.5848 ) }
    dend_18 { pt3dadd( 329.407, 437.387, 30.7969, 0.5848 ) }
    dend_18 { pt3dadd( 329.31, 438.518, 30.7779, 0.661 ) }
    dend_18 { pt3dadd( 329.672, 439.582, 30.66, 0.6864 ) }
    dend_18 { pt3dadd( 330.474, 440.684, 29.7814, 0.7372 ) }
    dend_18 { pt3dadd( 330.615, 441.81, 29.6853, 0.7118 ) }
    dend_18 { pt3dadd( 330.607, 442.954, 29.717, 0.7118 ) }
    dend_18 { pt3dadd( 330.553, 444.093, 29.9155, 0.7626 ) }
    dend_18 { pt3dadd( 330.247, 445.13, 30.6757, 0.9152 ) }
    dend_18 { pt3dadd( 329.348, 446.857, 30.8022, 0.6356 ) }
    dend_18 { pt3dadd( 328.779, 447.844, 30.8118, 0.5338 ) }
    dend_18 { pt3dadd( 328.377, 448.91, 30.8767, 0.4576 ) }
    dend_18 { pt3dadd( 327.9, 449.925, 31.2701, 0.4068 ) }
    dend_18 { pt3dadd( 327.401, 450.917, 31.7173, 0.3814 ) }
    dend_18 { pt3dadd( 326.496, 451.466, 30.9302, 0.4322 ) }
    dend_18 { pt3dadd( 325.474, 451.419, 29.7833, 0.5084 ) }
    dend_18 { pt3dadd( 324.465, 450.922, 29.7284, 0.5848 ) }
    dend_18 { pt3dadd( 323.523, 450.304, 29.9485, 0.5848 ) }
    dend_18 { pt3dadd( 322.419, 450.206, 29.6853, 0.5338 ) }
    dend_18 { pt3dadd( 321.358, 450.431, 28.9024, 0.5084 ) }
    dend_18 { pt3dadd( 320.452, 451.108, 28.597, 0.483 ) }
    dend_18 { pt3dadd( 319.525, 451.767, 28.756, 0.4576 ) }
    dend_18 { pt3dadd( 318.725, 452.491, 29.5557, 0.2288 ) }
    dend_18 { pt3dadd( 318.12, 453.277, 29.68, 0.2796 ) }
    dend_18 { pt3dadd( 317.285, 454.042, 29.6806, 0.4322 ) }
    dend_18 { pt3dadd( 316.424, 454.794, 29.6831, 0.661 ) }
    dend_18 { pt3dadd( 315.695, 455.673, 29.6937, 0.8136 ) }
    dend_18 { pt3dadd( 315.318, 456.749, 29.7713, 0.839 ) }
    dend_18 { pt3dadd( 314.988, 457.812, 30.27, 0.788 ) }
    dend_18 { pt3dadd( 314.571, 458.833, 30.7768, 0.9152 ) }
    dend_18 { pt3dadd( 313.384, 460.06, 30.4559, 0.7372 ) }
    dend_18 { pt3dadd( 313.227, 461.136, 30.3635, 0.6864 ) }
    dend_18 { pt3dadd( 313.226, 462.267, 30.606, 0.6356 ) }
    dend_18 { pt3dadd( 313.224, 463.365, 29.8735, 0.661 ) }
    dend_18 { pt3dadd( 313.2, 464.503, 29.8656, 0.7626 ) }
    dend_18 { pt3dadd( 313.04, 465.581, 30.6029, 0.788 ) }
    dend_18 { pt3dadd( 313.085, 466.683, 30.884, 0.7372 ) }
    dend_18 { pt3dadd( 313.302, 467.784, 31.1623, 0.6102 ) }
    dend_18 { pt3dadd( 313.672, 468.836, 30.8272, 0.6102 ) }
    dend_18 { pt3dadd( 314.424, 469.695, 30.8132, 0.6356 ) }
    dend_18 { pt3dadd( 315.186, 470.549, 30.8563, 0.6864 ) }
    dend_18 { pt3dadd( 315.738, 471.539, 31.0822, 0.661 ) }
    dend_18 { pt3dadd( 315.956, 472.576, 32.0477, 0.6356 ) }
    dend_18 { pt3dadd( 315.865, 473.649, 32.8698, 0.6102 ) }
    dend_18 { pt3dadd( 315.358, 474.596, 32.2862, 0.5848 ) }
    dend_18 { pt3dadd( 314.618, 475.442, 31.7951, 0.5084 ) }
    dend_18 { pt3dadd( 314.163, 476.443, 31.3306, 0.2288 ) }
    dend_18 { pt3dadd( 314.092, 477.525, 32.0359, 0.5338 ) }
    dend_18 { pt3dadd( 313.855, 478.526, 33.1792, 0.6356 ) }
    dend_18 { pt3dadd( 313.717, 479.582, 34.0796, 0.661 ) }
    dend_18 { pt3dadd( 313.413, 480.626, 34.207, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_18 { pt3dadd( 312.684, 481.505, 34.3624, 0.7372 ) }
    dend_18 { pt3dadd( 312.23, 482.493, 35.0524, 0.7372 ) }
    dend_18 { pt3dadd( 311.858, 483.565, 35.2366, 0.7372 ) }
    dend_18 { pt3dadd( 311.581, 484.664, 34.9563, 0.7118 ) }
    dend_18 { pt3dadd( 311.801, 485.559, 33.4555, 0.7118 ) }
    dend_18 { pt3dadd( 311.747, 486.672, 33.0336, 0.6864 ) }
    dend_18 { pt3dadd( 311.382, 487.752, 32.9983, 0.6864 ) }
    dend_18 { pt3dadd( 311.094, 488.846, 32.7202, 0.6864 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 8/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 343.885, 408.414, 27.4621, 0.4576 ) }
    dend_17 { pt3dadd( 343.266, 408.349, 27.5072, 0.5338 ) }
    dend_17 { pt3dadd( 342.176, 408.049, 27.8429, 0.5084 ) }
    dend_17 { pt3dadd( 341.223, 407.847, 29.2452, 0.5084 ) }
    dend_17 { pt3dadd( 340.227, 407.847, 30.5315, 0.5338 ) }
    dend_17 { pt3dadd( 339.127, 407.915, 29.9488, 0.6102 ) }
    dend_17 { pt3dadd( 338.046, 408.218, 29.5453, 0.661 ) }
    dend_17 { pt3dadd( 336.958, 408.305, 28.8358, 0.6356 ) }
    dend_17 { pt3dadd( 335.877, 408.374, 27.9636, 0.5592 ) }
    dend_17 { pt3dadd( 334.921, 408.802, 27.0301, 0.4322 ) }
    dend_17 { pt3dadd( 334.595, 409.698, 25.6998, 0.3814 ) }
    dend_17 { pt3dadd( 334.201, 410.742, 25.2188, 0.3304 ) }
    dend_17 { pt3dadd( 334.174, 411.856, 25.3296, 0.4068 ) }
    dend_17 { pt3dadd( 333.784, 412.733, 26.1551, 0.483 ) }
    dend_17 { pt3dadd( 332.674, 412.689, 26.124, 0.6356 ) }
    dend_17 { pt3dadd( 331.672, 413.144, 25.4492, 0.7118 ) }
    dend_17 { pt3dadd( 330.678, 413.554, 25.8289, 0.7626 ) }
    dend_17 { pt3dadd( 329.1, 414.741, 26.32, 0.8136 ) }
    dend_17 { pt3dadd( 328.228, 415.48, 26.3197, 0.8644 ) }
    dend_17 { pt3dadd( 327.413, 416.283, 26.3194, 0.8644 ) }
    dend_17 { pt3dadd( 326.579, 417.056, 26.3175, 0.8644 ) }
    dend_17 { pt3dadd( 325.629, 417.677, 26.3074, 0.8136 ) }
    dend_17 { pt3dadd( 324.568, 418.09, 26.2416, 0.7626 ) }
    dend_17 { pt3dadd( 323.578, 418.622, 25.8664, 0.6864 ) }
    dend_17 { pt3dadd( 322.695, 419.286, 25.2739, 0.6356 ) }
    dend_17 { pt3dadd( 322.036, 420.204, 25.2361, 0.6356 ) }
    dend_17 { pt3dadd( 321.84, 421.322, 25.4212, 0.6356 ) }
    dend_17 { pt3dadd( 321.378, 422.29, 25.6922, 0.661 ) }
    dend_17 { pt3dadd( 320.523, 423.0, 25.1045, 0.6356 ) }
    dend_17 { pt3dadd( 319.538, 423.423, 24.4068, 0.661 ) }
    dend_17 { pt3dadd( 318.557, 423.676, 23.5561, 0.6356 ) }
    dend_17 { pt3dadd( 317.558, 424.006, 24.4986, 0.6356 ) }
    dend_17 { pt3dadd( 317.217, 424.806, 26.229, 0.5848 ) }
    dend_17 { pt3dadd( 316.726, 425.689, 27.4484, 0.4576 ) }
    dend_17 { pt3dadd( 316.95, 426.797, 27.4389, 0.4322 ) }
    dend_17 { pt3dadd( 317.331, 427.863, 27.4313, 0.4576 ) }
    dend_17 { pt3dadd( 317.227, 428.828, 27.3655, 0.5592 ) }
    dend_17 { pt3dadd( 316.284, 429.443, 27.0108, 0.6356 ) }
    dend_17 { pt3dadd( 315.225, 429.748, 26.3444, 0.661 ) }
    dend_17 { pt3dadd( 314.382, 430.505, 26.3869, 0.6102 ) }
    dend_17 { pt3dadd( 313.535, 431.257, 26.684, 0.5084 ) }
    dend_17 { pt3dadd( 313.316, 432.132, 28.1879, 0.4068 ) }
    dend_17 { pt3dadd( 313.733, 433.158, 28.672, 0.2288 ) }
    dend_17 { pt3dadd( 313.188, 434.125, 28.3422, 0.6864 ) }
    dend_17 { pt3dadd( 312.927, 435.177, 27.6469, 0.6356 ) }
    dend_17 { pt3dadd( 312.161, 435.956, 28.1414, 0.5848 ) }
    dend_17 { pt3dadd( 311.353, 436.521, 29.4566, 0.5338 ) }
    dend_17 { pt3dadd( 310.431, 436.951, 28.6286, 0.6864 ) }
    dend_17 { pt3dadd( 309.664, 437.499, 28.5239, 0.5848 ) }
    dend_17 { pt3dadd( 308.881, 438.333, 28.4046, 0.5084 ) }
    dend_17 { pt3dadd( 308.234, 439.23, 27.8267, 0.4576 ) }
    dend_17 { pt3dadd( 307.536, 440.122, 27.5061, 0.4576 ) }
    dend_17 { pt3dadd( 306.823, 441.012, 27.7136, 0.4322 ) }
    dend_17 { pt3dadd( 306.712, 442.166, 28.5236, 0.4068 ) }
    dend_17 { pt3dadd( 307.188, 443.193, 28.6905, 0.4322 ) }
    dend_17 { pt3dadd( 307.308, 444.252, 29.3544, 0.5084 ) }
    dend_17 { pt3dadd( 306.719, 445.198, 29.944, 0.5848 ) }
    dend_17 { pt3dadd( 306.263, 446.211, 30.2896, 0.6102 ) }
    dend_17 { pt3dadd( 306.17, 447.318, 29.72, 0.5592 ) }
    dend_17 { pt3dadd( 306.358, 448.439, 29.7674, 0.5338 ) }
    dend_17 { pt3dadd( 306.073, 449.489, 30.2512, 0.483 ) }
    dend_17 { pt3dadd( 305.401, 450.356, 30.9672, 0.5084 ) }
    dend_17 { pt3dadd( 304.545, 451.041, 31.698, 0.4576 ) }
    dend_17 { pt3dadd( 303.953, 452.006, 31.7335, 0.4068 ) }
    dend_17 { pt3dadd( 303.495, 452.954, 30.7997, 0.356 ) }
    dend_17 { pt3dadd( 302.628, 452.843, 29.6579, 0.3814 ) }
    dend_17 { pt3dadd( 301.62, 452.473, 28.9988, 0.4576 ) }
    dend_17 { pt3dadd( 300.507, 452.572, 28.4794, 0.483 ) }
    dend_17 { pt3dadd( 299.65, 453.233, 27.9135, 0.483 ) }
    dend_17 { pt3dadd( 299.315, 454.256, 28.4194, 0.483 ) }
    dend_17 { pt3dadd( 299.51, 455.371, 28.56, 0.483 ) }
    dend_17 { pt3dadd( 299.241, 456.461, 28.5611, 0.4576 ) }
    dend_17 { pt3dadd( 298.806, 457.512, 28.5664, 0.3814 ) }
    dend_17 { pt3dadd( 298.771, 458.614, 28.604, 0.356 ) }
    dend_17 { pt3dadd( 299.091, 459.704, 28.81, 0.4322 ) }
    dend_17 { pt3dadd( 299.342, 460.768, 29.5736, 0.5338 ) }
    dend_17 { pt3dadd( 299.663, 461.856, 29.6582, 0.5848 ) }
    dend_17 { pt3dadd( 299.974, 462.953, 29.5456, 0.5084 ) }
    dend_17 { pt3dadd( 299.928, 464.028, 28.8868, 0.4576 ) }
    dend_17 { pt3dadd( 299.329, 464.988, 28.6023, 0.483 ) }
    dend_17 { pt3dadd( 298.835, 466.013, 28.7857, 0.5848 ) }
    dend_17 { pt3dadd( 298.419, 467.023, 29.5274, 0.6102 ) }
    dend_17 { pt3dadd( 297.829, 467.993, 29.759, 0.5848 ) }
    dend_17 { pt3dadd( 297.38, 469.018, 30.0933, 0.483 ) }
    dend_17 { pt3dadd( 296.883, 470.031, 29.7528, 0.4322 ) }
    dend_17 { pt3dadd( 295.951, 470.459, 29.176, 0.356 ) }
    dend_17 { pt3dadd( 295.516, 471.256, 28.0778, 0.3814 ) }
    dend_17 { pt3dadd( 295.047, 472.105, 29.4003, 0.4068 ) }
    dend_17 { pt3dadd( 294.359, 472.944, 28.8299, 0.4576 ) }
    dend_17 { pt3dadd( 294.237, 474.058, 28.7588, 0.4068 ) }
    dend_17 { pt3dadd( 294.233, 475.179, 28.7353, 0.356 ) }
    dend_17 { pt3dadd( 294.215, 476.318, 28.5608, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 294.089, 477.454, 28.5656, 0.305 ) }
    dend_17 { pt3dadd( 293.538, 478.443, 28.5888, 0.3814 ) }
    dend_17 { pt3dadd( 292.996, 479.447, 28.7064, 0.5084 ) }
    dend_17 { pt3dadd( 292.604, 480.481, 28.7109, 0.5592 ) }
    dend_17 { pt3dadd( 292.424, 481.591, 28.56, 0.5084 ) }
    dend_17 { pt3dadd( 292.523, 482.728, 28.5597, 0.4576 ) }
    dend_17 { pt3dadd( 292.664, 483.842, 28.5586, 0.4322 ) }
    dend_17 { pt3dadd( 291.844, 484.562, 28.551, 0.4576 ) }
    dend_17 { pt3dadd( 290.842, 485.096, 28.5085, 0.4068 ) }
    dend_17 { pt3dadd( 289.914, 485.737, 28.2873, 0.3814 ) }
    dend_17 { pt3dadd( 288.82, 485.982, 28.411, 0.356 ) }
    dend_17 { pt3dadd( 287.765, 486.408, 28.56, 0.4068 ) }
    dend_17 { pt3dadd( 286.685, 486.748, 28.56, 0.4068 ) }
    dend_17 { pt3dadd( 285.542, 486.772, 28.56, 0.4576 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 14/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 373.605, 371.228, 27.7043, 1.144 ) }
    dend_13 { pt3dadd( 371.984, 372.251, 27.5514, 0.839 ) }
    dend_13 { pt3dadd( 371.053, 372.806, 28.2268, 0.7118 ) }
    dend_13 { pt3dadd( 370.102, 373.415, 28.3088, 0.6356 ) }
    dend_13 { pt3dadd( 369.345, 374.162, 27.5299, 0.661 ) }
    dend_13 { pt3dadd( 368.907, 375.21, 27.4932, 0.7372 ) }
    dend_13 { pt3dadd( 368.276, 376.151, 27.7105, 0.9152 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 21/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 373.605, 371.228, 27.7043, 1.144 ) }
    dend_8 { pt3dadd( 373.905, 372.539, 28.4864, 0.788 ) }
    dend_8 { pt3dadd( 374.129, 373.643, 28.1652, 0.7626 ) }
    dend_8 { pt3dadd( 374.358, 374.71, 27.4887, 0.7626 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 25/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 376.27, 352.39, 27.9899, 0.5848 ) }
    dend_6 { pt3dadd( 373.693, 351.81, 27.0732, 0.4322 ) }
    dend_6 { pt3dadd( 372.01, 351.158, 27.0732, 0.4068 ) }
    dend_6 { pt3dadd( 368.946, 349.908, 25.8961, 0.4322 ) }
    dend_6 { pt3dadd( 368.447, 349.465, 25.8961, 0.5084 ) }
    dend_6 { pt3dadd( 366.385, 349.515, 24.719, 0.483 ) }
    dend_6 { pt3dadd( 365.72, 349.088, 24.719, 0.4068 ) }
    dend_6 { pt3dadd( 365.415, 349.689, 24.719, 0.4576 ) }
    dend_6 { pt3dadd( 365.967, 350.71, 22.9533, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 34/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 376.27, 352.39, 27.9899, 0.5848 ) }
    dend_1 { pt3dadd( 376.346, 351.298, 27.4971, 0.5338 ) }
    dend_1 { pt3dadd( 376.161, 350.183, 27.7718, 0.5338 ) }
    dend_1 { pt3dadd( 376.337, 349.244, 28.7605, 0.661 ) }
    dend_1 { pt3dadd( 376.967, 348.375, 29.5884, 0.7372 ) }
    dend_1 { pt3dadd( 377.967, 347.878, 29.724, 0.7626 ) }
    dend_1 { pt3dadd( 379.071, 347.627, 29.9334, 0.6864 ) }
    dend_1 { pt3dadd( 380.152, 347.503, 30.6891, 0.661 ) }
    dend_1 { pt3dadd( 381.247, 347.794, 30.6827, 0.661 ) }
    dend_1 { pt3dadd( 382.342, 347.853, 30.0317, 0.6864 ) }
    dend_1 { pt3dadd( 383.409, 347.585, 29.4767, 0.7118 ) }
    dend_1 { pt3dadd( 384.135, 346.791, 28.7907, 0.7626 ) }
    dend_1 { pt3dadd( 384.661, 345.854, 29.5137, 0.8136 ) }
    dend_1 { pt3dadd( 385.203, 345.239, 31.428, 0.788 ) }
    dend_1 { pt3dadd( 386.046, 344.613, 32.4576, 0.7626 ) }
    dend_1 { pt3dadd( 386.854, 343.844, 32.9596, 0.7626 ) }
    dend_1 { pt3dadd( 387.698, 343.079, 32.7653, 0.8136 ) }
    dend_1 { pt3dadd( 388.604, 342.48, 31.9334, 0.839 ) }
    dend_1 { pt3dadd( 389.467, 341.839, 31.0318, 0.788 ) }
    dend_1 { pt3dadd( 390.16, 341.097, 29.818, 0.7118 ) }
    dend_1 { pt3dadd( 391.091, 340.458, 29.7626, 0.6356 ) }
    dend_1 { pt3dadd( 392.132, 340.059, 30.198, 0.6356 ) }
    dend_1 { pt3dadd( 393.167, 339.733, 31.05, 0.6864 ) }
    dend_1 { pt3dadd( 394.216, 339.62, 32.1026, 0.7118 ) }
    dend_1 { pt3dadd( 395.237, 339.419, 33.1554, 0.7118 ) }
    dend_1 { pt3dadd( 396.105, 338.79, 34.0399, 0.6864 ) }
    dend_1 { pt3dadd( 397.021, 338.118, 34.16, 0.6864 ) }
    dend_1 { pt3dadd( 397.704, 337.209, 34.16, 0.7118 ) }
    dend_1 { pt3dadd( 398.44, 336.336, 34.16, 0.7372 ) }
    dend_1 { pt3dadd( 399.227, 335.504, 34.16, 0.7626 ) }
    dend_1 { pt3dadd( 399.906, 334.589, 34.16, 0.7372 ) }
    dend_1 { pt3dadd( 400.645, 333.719, 34.16, 0.6864 ) }
    dend_1 { pt3dadd( 401.499, 332.957, 34.1603, 0.6102 ) }
    dend_1 { pt3dadd( 402.471, 332.357, 34.1614, 0.5338 ) }
    dend_1 { pt3dadd( 403.464, 331.8, 34.1676, 0.483 ) }
    dend_1 { pt3dadd( 404.558, 331.656, 34.2079, 0.4576 ) }
    dend_1 { pt3dadd( 405.674, 331.87, 34.442, 0.5084 ) }
    dend_1 { pt3dadd( 406.769, 331.845, 35.2075, 0.5848 ) }
    dend_1 { pt3dadd( 407.898, 331.691, 35.2803, 0.6356 ) }
    dend_1 { pt3dadd( 408.848, 331.066, 35.282, 0.5592 ) }
    dend_1 { pt3dadd( 409.828, 330.503, 35.2909, 0.4322 ) }
    dend_1 { pt3dadd( 410.823, 330.776, 35.3704, 0.356 ) }
    dend_1 { pt3dadd( 411.665, 330.766, 36.3306, 0.4322 ) }
    dend_1 { pt3dadd( 412.18, 329.888, 37.438, 0.5848 ) }
    dend_1 { pt3dadd( 412.815, 328.942, 37.52, 0.7626 ) }
    dend_1 { pt3dadd( 413.534, 328.053, 37.52, 0.8136 ) }
    dend_1 { pt3dadd( 414.217, 327.139, 37.52, 0.788 ) }
    dend_1 { pt3dadd( 415.06, 326.384, 37.5203, 0.6864 ) }
    dend_1 { pt3dadd( 416.048, 325.81, 37.5214, 0.661 ) }
    dend_1 { pt3dadd( 416.874, 325.029, 37.5276, 0.661 ) }
    dend_1 { pt3dadd( 417.109, 323.922, 37.5721, 0.7372 ) }
    dend_1 { pt3dadd( 417.156, 322.786, 37.8428, 0.8136 ) }
    dend_1 { pt3dadd( 417.411, 321.774, 38.9094, 0.9152 ) }
    dend_1 { pt3dadd( 417.591, 320.768, 40.1411, 0.9406 ) }
    dend_1 { pt3dadd( 417.775, 319.732, 41.1732, 0.9152 ) }
    dend_1 { pt3dadd( 419.198, 319.492, 42.4222, 0.9152 ) }
    dend_1 { pt3dadd( 420.299, 319.361, 42.3878, 0.9152 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 91/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 356.242, 347.417, 28.5572, 0.6864 ) }
    apic_20 { pt3dadd( 355.946, 347.485, 29.5826, 0.4322 ) }
    apic_20 { pt3dadd( 354.893, 347.747, 28.8504, 0.4068 ) }
    apic_20 { pt3dadd( 353.853, 347.603, 27.8068, 0.4068 ) }
    apic_20 { pt3dadd( 352.917, 348.167, 27.6777, 0.5084 ) }
    apic_20 { pt3dadd( 352.456, 349.134, 28.5146, 0.5592 ) }
    apic_20 { pt3dadd( 351.885, 350.04, 29.3969, 0.6356 ) }
    apic_20 { pt3dadd( 351.251, 350.976, 29.6257, 0.661 ) }
    apic_20 { pt3dadd( 350.484, 351.818, 29.4358, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_20 { pt3dadd( 349.716, 352.59, 28.665, 0.5848 ) }
    apic_20 { pt3dadd( 348.917, 353.406, 28.5712, 0.5084 ) }
    apic_20 { pt3dadd( 348.141, 354.246, 28.6062, 0.4576 ) }
    apic_20 { pt3dadd( 347.538, 355.204, 28.7731, 0.5084 ) }
    apic_20 { pt3dadd( 347.187, 356.255, 29.2289, 0.5592 ) }
    apic_20 { pt3dadd( 346.861, 357.329, 28.805, 0.6356 ) }
    apic_20 { pt3dadd( 346.614, 358.405, 29.4115, 0.6356 ) }
    apic_20 { pt3dadd( 346.491, 359.497, 28.8621, 0.6356 ) }
    apic_20 { pt3dadd( 346.436, 360.597, 28.5718, 0.6102 ) }
    apic_20 { pt3dadd( 346.624, 361.72, 28.6392, 0.6356 ) }
    apic_20 { pt3dadd( 346.582, 362.836, 29.1309, 0.6102 ) }
    apic_20 { pt3dadd( 346.316, 363.905, 29.7072, 0.5848 ) }
    apic_20 { pt3dadd( 346.082, 364.998, 29.8614, 0.5338 ) }
    apic_20 { pt3dadd( 346.512, 366.004, 30.5138, 0.5848 ) }
    apic_20 { pt3dadd( 347.215, 366.899, 30.5939, 0.6102 ) }
    apic_20 { pt3dadd( 347.755, 367.857, 29.9292, 0.6356 ) }
    apic_20 { pt3dadd( 348.005, 368.957, 29.8234, 0.5848 ) }
    apic_20 { pt3dadd( 348.004, 370.058, 30.5122, 0.5848 ) }
    apic_20 { pt3dadd( 348.0, 371.191, 30.7443, 0.5848 ) }
    apic_20 { pt3dadd( 347.969, 372.318, 30.3772, 0.6102 ) }
    apic_20 { pt3dadd( 347.768, 373.404, 29.8318, 0.5848 ) }
    apic_20 { pt3dadd( 347.62, 374.488, 30.4363, 0.5848 ) }
    apic_20 { pt3dadd( 347.953, 375.558, 30.8182, 0.5848 ) }
    apic_20 { pt3dadd( 348.368, 376.617, 30.9092, 0.5848 ) }
    apic_20 { pt3dadd( 348.911, 377.589, 31.411, 0.483 ) }
    apic_20 { pt3dadd( 349.259, 378.653, 31.4588, 0.2288 ) }
    apic_20 { pt3dadd( 349.148, 379.007, 30.24, 0.2288 ) }
    apic_20 { pt3dadd( 349.148, 379.35, 30.24, 0.2288 ) }
    apic_20 { pt3dadd( 349.148, 379.694, 30.24, 0.2796 ) }
    apic_20 { pt3dadd( 349.034, 380.151, 30.24, 0.483 ) }
    apic_20 { pt3dadd( 349.034, 380.952, 30.24, 0.5084 ) }
    apic_20 { pt3dadd( 349.034, 381.753, 30.24, 0.4322 ) }
    apic_20 { pt3dadd( 349.034, 382.554, 30.24, 0.3814 ) }
    apic_20 { pt3dadd( 349.034, 383.354, 30.24, 0.356 ) }
    apic_20 { pt3dadd( 349.034, 384.155, 30.24, 0.4322 ) }
    apic_20 { pt3dadd( 349.072, 384.918, 30.24, 0.483 ) }
    apic_20 { pt3dadd( 349.378, 385.414, 30.24, 0.5084 ) }
    apic_20 { pt3dadd( 349.605, 385.986, 30.24, 0.4576 ) }
    apic_20 { pt3dadd( 349.605, 386.786, 30.24, 0.4068 ) }
    apic_20 { pt3dadd( 349.605, 387.13, 30.24, 0.483 ) }
    apic_20 { pt3dadd( 349.957, 387.334, 30.0426, 0.2288 ) }
    apic_20 { pt3dadd( 350.776, 388.037, 30.6695, 0.3814 ) }
    apic_20 { pt3dadd( 351.665, 388.736, 30.7759, 0.5084 ) }
    apic_20 { pt3dadd( 352.264, 389.694, 31.0111, 0.5848 ) }
    apic_20 { pt3dadd( 352.53, 390.745, 31.7332, 0.5848 ) }
    apic_20 { pt3dadd( 352.581, 391.885, 31.8931, 0.5592 ) }
    apic_20 { pt3dadd( 352.846, 392.991, 31.9158, 0.5084 ) }
    apic_20 { pt3dadd( 353.013, 394.113, 32.0468, 0.5084 ) }
    apic_20 { pt3dadd( 353.012, 395.221, 32.5816, 0.483 ) }
    apic_20 { pt3dadd( 352.766, 396.309, 32.0496, 0.4576 ) }
    apic_20 { pt3dadd( 353.066, 397.365, 31.7926, 0.356 ) }
    apic_20 { pt3dadd( 353.273, 397.765, 30.8367, 0.2288 ) }
    apic_20 { pt3dadd( 353.91, 398.079, 32.814, 0.4068 ) }
    apic_20 { pt3dadd( 354.062, 399.005, 33.8778, 0.5338 ) }
    apic_20 { pt3dadd( 353.562, 400.017, 33.7686, 0.6864 ) }
    apic_20 { pt3dadd( 353.499, 401.008, 32.4167, 0.788 ) }
    apic_20 { pt3dadd( 353.52, 402.123, 31.9402, 0.788 ) }
    apic_20 { pt3dadd( 353.638, 403.259, 32.0522, 0.6864 ) }
    apic_20 { pt3dadd( 354.101, 404.266, 32.6525, 0.4576 ) }
    apic_20 { pt3dadd( 354.372, 404.785, 32.48, 0.5848 ) }
    apic_20 { pt3dadd( 354.665, 405.294, 32.48, 0.6102 ) }
    apic_20 { pt3dadd( 354.958, 405.802, 32.48, 0.6102 ) }
    apic_20 { pt3dadd( 355.301, 406.26, 32.48, 0.6102 ) }
    apic_20 { pt3dadd( 355.644, 406.717, 32.48, 0.5592 ) }
    apic_20 { pt3dadd( 355.936, 407.226, 32.48, 0.4576 ) }
    apic_20 { pt3dadd( 356.013, 407.493, 32.48, 0.2288 ) }
    apic_20 { pt3dadd( 356.232, 407.773, 32.6234, 0.4576 ) }
    apic_20 { pt3dadd( 356.592, 408.811, 33.3542, 0.6102 ) }
    apic_20 { pt3dadd( 356.958, 409.852, 33.9976, 0.661 ) }
    apic_20 { pt3dadd( 357.467, 410.846, 33.6543, 0.7118 ) }
    apic_20 { pt3dadd( 357.454, 411.949, 33.199, 0.7372 ) }
    apic_20 { pt3dadd( 356.959, 412.958, 33.0638, 0.7626 ) }
    apic_20 { pt3dadd( 356.431, 413.969, 33.1702, 0.7372 ) }
    apic_20 { pt3dadd( 356.262, 415.052, 33.8206, 0.7118 ) }
    apic_20 { pt3dadd( 356.37, 416.178, 34.064, 0.6864 ) }
    apic_20 { pt3dadd( 356.834, 417.187, 33.5625, 0.7118 ) }
    apic_20 { pt3dadd( 357.578, 418.0, 33.9508, 0.7372 ) }
    apic_20 { pt3dadd( 358.512, 418.641, 33.9987, 0.7372 ) }
    apic_20 { pt3dadd( 359.217, 419.46, 33.2402, 0.661 ) }
    apic_20 { pt3dadd( 359.463, 420.556, 33.0319, 0.5848 ) }
    apic_20 { pt3dadd( 359.562, 421.694, 32.9857, 0.5084 ) }
    apic_20 { pt3dadd( 359.967, 422.753, 32.7256, 0.5084 ) }
    apic_20 { pt3dadd( 360.475, 423.719, 32.0191, 0.5084 ) }
    apic_20 { pt3dadd( 361.229, 424.578, 31.9231, 0.5592 ) }
    apic_20 { pt3dadd( 361.835, 425.538, 31.9362, 0.5592 ) }
    apic_20 { pt3dadd( 362.163, 426.622, 32.0247, 0.5592 ) }
    apic_20 { pt3dadd( 362.161, 427.726, 32.6239, 0.5592 ) }
    apic_20 { pt3dadd( 361.983, 428.829, 33.04, 0.6102 ) }
    apic_20 { pt3dadd( 361.585, 429.901, 33.04, 0.6356 ) }
    apic_20 { pt3dadd( 360.99, 430.87, 33.0397, 0.6356 ) }
    apic_20 { pt3dadd( 360.359, 431.823, 33.0386, 0.6102 ) }
    apic_20 { pt3dadd( 359.624, 432.7, 33.0336, 0.6356 ) }
    apic_20 { pt3dadd( 359.089, 433.69, 33.0081, 0.6356 ) }
    apic_20 { pt3dadd( 359.332, 435.043, 32.6054, 0.6102 ) }
    apic_20 { pt3dadd( 359.1, 436.133, 32.9577, 0.6102 ) }
    apic_20 { pt3dadd( 358.908, 437.257, 33.04, 0.6102 ) }
    apic_20 { pt3dadd( 358.514, 438.313, 33.04, 0.6356 ) }
    apic_20 { pt3dadd( 357.908, 439.28, 33.04, 0.6864 ) }
    apic_20 { pt3dadd( 357.349, 440.274, 33.0406, 0.6864 ) }
    apic_20 { pt3dadd( 356.667, 441.194, 33.0428, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_20 { pt3dadd( 356.268, 442.238, 33.0557, 0.5592 ) }
    apic_20 { pt3dadd( 356.309, 443.379, 33.1481, 0.5338 ) }
    apic_20 { pt3dadd( 356.596, 444.441, 33.7308, 0.483 ) }
    apic_20 { pt3dadd( 356.721, 445.444, 34.995, 0.4322 ) }
    apic_20 { pt3dadd( 356.898, 446.523, 34.7945, 0.4068 ) }
    apic_20 { pt3dadd( 357.168, 447.568, 34.1457, 0.4322 ) }
    apic_20 { pt3dadd( 357.239, 448.709, 34.0558, 0.4576 ) }
    apic_20 { pt3dadd( 357.78, 449.639, 33.5107, 0.483 ) }
    apic_20 { pt3dadd( 358.212, 450.631, 34.1905, 0.5592 ) }
    apic_20 { pt3dadd( 358.639, 451.634, 34.9952, 0.6102 ) }
    apic_20 { pt3dadd( 358.964, 452.684, 35.6552, 0.6356 ) }
    apic_20 { pt3dadd( 358.999, 453.792, 35.5908, 0.6102 ) }
    apic_20 { pt3dadd( 359.058, 454.87, 35.133, 0.6356 ) }
    apic_20 { pt3dadd( 359.34, 455.931, 35.8352, 0.661 ) }
    apic_20 { pt3dadd( 359.387, 457.033, 36.4848, 0.6356 ) }
    apic_20 { pt3dadd( 359.104, 458.106, 36.9748, 0.5848 ) }
    apic_20 { pt3dadd( 358.947, 459.124, 38.1321, 0.5338 ) }
    apic_20 { pt3dadd( 358.73, 460.2, 37.6628, 0.5848 ) }
    apic_20 { pt3dadd( 358.708, 461.319, 37.52, 0.5848 ) }
    apic_20 { pt3dadd( 358.969, 462.425, 37.52, 0.5338 ) }
    apic_20 { pt3dadd( 358.932, 463.568, 37.52, 0.4068 ) }
    apic_20 { pt3dadd( 358.721, 464.686, 37.5203, 0.356 ) }
    apic_20 { pt3dadd( 359.03, 465.777, 37.522, 0.356 ) }
    apic_20 { pt3dadd( 359.47, 466.828, 37.5306, 0.4068 ) }
    apic_20 { pt3dadd( 360.108, 467.77, 37.5726, 0.4322 ) }
    apic_20 { pt3dadd( 360.834, 468.65, 37.7527, 0.5084 ) }
    apic_20 { pt3dadd( 361.062, 469.637, 38.6501, 0.5084 ) }
    apic_20 { pt3dadd( 361.196, 470.644, 39.2479, 0.483 ) }
    apic_20 { pt3dadd( 361.29, 471.752, 39.4094, 0.356 ) }
    apic_20 { pt3dadd( 361.374, 472.878, 39.76, 0.2796 ) }
    apic_20 { pt3dadd( 361.733, 473.959, 39.76, 0.2288 ) }
    apic_20 { pt3dadd( 362.051, 474.213, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.216, 474.392, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.305, 474.646, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.305, 474.874, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 362.305, 475.675, 40.04, 0.305 ) }
    apic_20 { pt3dadd( 362.305, 476.476, 40.04, 0.3814 ) }
    apic_20 { pt3dadd( 362.483, 477.098, 40.04, 0.4068 ) }
    apic_20 { pt3dadd( 362.648, 477.734, 40.04, 0.3814 ) }
    apic_20 { pt3dadd( 362.839, 478.344, 40.04, 0.305 ) }
    apic_20 { pt3dadd( 362.877, 479.107, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 362.877, 479.908, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 480.709, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 481.51, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 482.31, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 483.111, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 483.912, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 362.877, 484.713, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 362.877, 485.514, 40.04, 0.305 ) }
    apic_20 { pt3dadd( 362.877, 486.314, 40.04, 0.3814 ) }
    apic_20 { pt3dadd( 362.877, 486.658, 40.04, 0.4068 ) }
    apic_20 { pt3dadd( 362.877, 487.001, 40.04, 0.3814 ) }
    apic_20 { pt3dadd( 362.584, 487.394, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 362.216, 488.056, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 361.809, 488.45, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 361.427, 488.869, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 361.263, 489.505, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 361.046, 490.09, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 360.932, 490.776, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 360.627, 491.271, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 360.131, 491.577, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 359.483, 491.729, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 358.987, 492.034, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 358.301, 492.149, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 357.678, 492.327, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 357.118, 492.569, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 356.508, 492.759, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 356.062, 493.114, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 355.746, 493.598, 40.04, 0.2796 ) }
    apic_20 { pt3dadd( 355.453, 494.106, 40.04, 0.305 ) }
    apic_20 { pt3dadd( 355.25, 494.589, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 354.983, 494.666, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 354.64, 494.666, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 354.004, 495.059, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 353.534, 495.39, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 353.191, 495.847, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.937, 496.394, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.924, 497.182, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.924, 497.983, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.924, 498.326, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.924, 498.67, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.835, 498.924, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.592, 499.025, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.238, 499.242, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 352.122, 499.47, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 351.894, 499.585, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 351.551, 499.585, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 351.322, 499.585, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 350.534, 499.597, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 350.014, 499.878, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 349.479, 500.144, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 348.997, 500.462, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 348.462, 500.729, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 348.017, 501.085, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 347.814, 501.224, 40.04, 0.2288 ) }
    apic_20 { pt3dadd( 347.661, 501.415, 40.04, 0.2542 ) }
    apic_20 { pt3dadd( 347.547, 501.987, 40.04, 0.305 ) }
    apic_20 { pt3dadd( 347.547, 502.216, 40.04, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 98/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 356.242, 347.417, 28.5572, 0.6864 ) }
    apic_1 { pt3dadd( 354.993, 346.512, 28.5351, 0.8644 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_1 { pt3dadd( 353.94, 346.085, 28.4141, 0.9406 ) }
    apic_1 { pt3dadd( 352.859, 345.903, 27.7052, 1.0168 ) }
    apic_1 { pt3dadd( 352.008, 345.215, 27.4277, 1.0168 ) }
    apic_1 { pt3dadd( 351.295, 344.321, 27.3837, 0.9914 ) }
    apic_1 { pt3dadd( 350.495, 343.508, 27.1964, 0.8644 ) }
    apic_1 { pt3dadd( 349.752, 342.714, 26.4163, 0.7626 ) }
    apic_1 { pt3dadd( 349.085, 341.796, 26.3206, 0.6864 ) }
    apic_1 { pt3dadd( 348.93, 340.674, 26.3236, 0.7118 ) }
    apic_1 { pt3dadd( 348.991, 339.532, 26.3455, 0.7118 ) }
    apic_1 { pt3dadd( 349.286, 338.436, 26.4838, 0.7118 ) }
    apic_1 { pt3dadd( 349.362, 337.366, 27.3106, 0.6864 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 11/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 406.466, 372.065, 31.6523, 0.6864 ) }
    dend_24 { pt3dadd( 407.294, 373.148, 32.2815, 0.6356 ) }
    dend_24 { pt3dadd( 407.132, 374.164, 33.2128, 0.5338 ) }
    dend_24 { pt3dadd( 406.346, 374.912, 34.0214, 0.4068 ) }
    dend_24 { pt3dadd( 406.344, 375.911, 34.1706, 0.3304 ) }
    dend_24 { pt3dadd( 407.225, 376.62, 34.2154, 0.3814 ) }
    dend_24 { pt3dadd( 408.17, 377.053, 34.7819, 0.4322 ) }
    dend_24 { pt3dadd( 407.749, 377.909, 36.085, 0.5338 ) }
    dend_24 { pt3dadd( 407.184, 378.873, 36.3784, 0.5338 ) }
    dend_24 { pt3dadd( 407.362, 379.969, 36.2631, 0.5592 ) }
    dend_24 { pt3dadd( 407.644, 381.039, 35.6504, 0.5084 ) }
    dend_24 { pt3dadd( 407.28, 381.794, 36.4714, 0.4322 ) }
    dend_24 { pt3dadd( 406.954, 382.261, 38.2348, 0.356 ) }
    dend_24 { pt3dadd( 407.867, 382.734, 39.2426, 0.2796 ) }
    dend_24 { pt3dadd( 408.85, 383.182, 39.2521, 0.2542 ) }
    dend_24 { pt3dadd( 409.471, 384.081, 38.6534, 0.2288 ) }
    dend_24 { pt3dadd( 409.052, 385.052, 38.7282, 0.2542 ) }
    dend_24 { pt3dadd( 408.019, 385.416, 39.1922, 0.305 ) }
    dend_24 { pt3dadd( 407.366, 385.43, 41.4028, 0.356 ) }
    dend_24 { pt3dadd( 407.402, 385.523, 44.0448, 0.4068 ) }
    dend_24 { pt3dadd( 407.911, 386.26, 45.2928, 0.4322 ) }
    dend_24 { pt3dadd( 408.193, 387.315, 44.8073, 0.4576 ) }
    dend_24 { pt3dadd( 408.432, 388.385, 44.5813, 0.483 ) }
    dend_24 { pt3dadd( 408.73, 389.215, 46.1611, 0.5338 ) }
    dend_24 { pt3dadd( 409.204, 390.182, 46.2843, 0.6102 ) }
    dend_24 { pt3dadd( 409.576, 391.126, 47.5381, 0.5848 ) }
    dend_24 { pt3dadd( 410.045, 392.083, 48.4893, 0.483 ) }
    dend_24 { pt3dadd( 410.609, 393.064, 48.7203, 0.3814 ) }
    dend_24 { pt3dadd( 411.512, 393.573, 48.7222, 0.4576 ) }
    dend_24 { pt3dadd( 412.048, 394.474, 48.741, 0.5848 ) }
    dend_24 { pt3dadd( 411.98, 395.612, 48.8788, 0.6864 ) }
    dend_24 { pt3dadd( 411.575, 396.613, 49.3329, 0.5848 ) }
    dend_24 { pt3dadd( 411.293, 397.697, 48.8709, 0.483 ) }
    dend_24 { pt3dadd( 411.367, 398.779, 49.5253, 0.3304 ) }
    dend_24 { pt3dadd( 410.913, 399.801, 49.9923, 0.2796 ) }
    dend_24 { pt3dadd( 411.15, 400.763, 51.0325, 0.2542 ) }
    dend_24 { pt3dadd( 411.403, 401.737, 52.2066, 0.2796 ) }
    dend_24 { pt3dadd( 411.697, 402.773, 53.0471, 0.305 ) }
    dend_24 { pt3dadd( 412.061, 403.714, 54.2606, 0.3304 ) }
    dend_24 { pt3dadd( 412.721, 404.634, 54.6297, 0.356 ) }
    dend_24 { pt3dadd( 412.677, 405.677, 55.5475, 0.3814 ) }
    dend_24 { pt3dadd( 412.881, 406.697, 56.1744, 0.3814 ) }
    dend_24 { pt3dadd( 413.0, 407.706, 56.8464, 0.4068 ) }
    dend_24 { pt3dadd( 413.102, 408.224, 59.3006, 0.5084 ) }
    dend_24 { pt3dadd( 413.539, 409.198, 59.7075, 0.5592 ) }
    dend_24 { pt3dadd( 414.174, 410.026, 60.3201, 0.5592 ) }
    dend_24 { pt3dadd( 414.814, 409.666, 62.16, 0.2288 ) }
    dend_24 { pt3dadd( 415.056, 409.768, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 415.385, 409.781, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 415.73, 409.781, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 416.073, 409.781, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 416.302, 409.781, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 417.102, 409.781, 61.04, 0.2288 ) }
    dend_24 { pt3dadd( 417.903, 409.781, 61.04, 0.2542 ) }
    dend_24 { pt3dadd( 418.577, 409.895, 61.04, 0.305 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 406.466, 372.065, 31.6523, 0.6864 ) }
    dend_21 { pt3dadd( 407.859, 373.057, 30.8566, 0.5592 ) }
    dend_21 { pt3dadd( 408.853, 373.55, 31.2584, 0.5592 ) }
    dend_21 { pt3dadd( 409.602, 374.356, 31.8926, 0.6102 ) }
    dend_21 { pt3dadd( 410.245, 375.299, 31.8979, 0.6864 ) }
    dend_21 { pt3dadd( 411.006, 376.152, 31.8214, 0.7372 ) }
    dend_21 { pt3dadd( 411.717, 377.018, 31.4104, 0.788 ) }
    dend_21 { pt3dadd( 412.549, 377.737, 31.5137, 0.7372 ) }
    dend_21 { pt3dadd( 413.569, 378.226, 31.7366, 0.6864 ) }
    dend_21 { pt3dadd( 414.294, 379.02, 31.0713, 0.6102 ) }
    dend_21 { pt3dadd( 414.659, 380.029, 31.6324, 0.6864 ) }
    dend_21 { pt3dadd( 414.686, 381.111, 32.1796, 0.7626 ) }
    dend_21 { pt3dadd( 415.24, 382.017, 33.0982, 0.8136 ) }
    dend_21 { pt3dadd( 415.743, 382.969, 33.8066, 0.7626 ) }
    dend_21 { pt3dadd( 416.424, 383.823, 33.4065, 0.7372 ) }
    dend_21 { pt3dadd( 417.217, 384.633, 33.2525, 0.7626 ) }
    dend_21 { pt3dadd( 417.932, 385.44, 34.097, 0.9152 ) }
    dend_21 { pt3dadd( 418.871, 386.753, 35.0946, 0.7626 ) }
    dend_21 { pt3dadd( 419.622, 387.608, 35.3086, 0.661 ) }
    dend_21 { pt3dadd( 420.181, 388.602, 35.4091, 0.5848 ) }
    dend_21 { pt3dadd( 420.596, 389.639, 35.5169, 0.5592 ) }
    dend_21 { pt3dadd( 421.327, 390.507, 35.2783, 0.6356 ) }
    dend_21 { pt3dadd( 422.209, 391.232, 35.2727, 0.7372 ) }
    dend_21 { pt3dadd( 423.241, 391.712, 35.2363, 0.788 ) }
    dend_21 { pt3dadd( 424.078, 392.481, 35.082, 0.8136 ) }
    dend_21 { pt3dadd( 424.691, 393.398, 34.4369, 0.8136 ) }
    dend_21 { pt3dadd( 425.312, 394.345, 34.1589, 0.9152 ) }
    dend_21 { pt3dadd( 426.036, 395.561, 35.2803, 0.7626 ) }
    dend_21 { pt3dadd( 426.38, 396.64, 35.2814, 0.7372 ) }
    dend_21 { pt3dadd( 427.092, 397.532, 35.2859, 0.788 ) }
    dend_21 { pt3dadd( 427.777, 398.444, 35.3105, 0.7626 ) }
    dend_21 { pt3dadd( 428.648, 399.177, 35.4567, 0.7626 ) }
    dend_21 { pt3dadd( 429.629, 399.231, 35.2794, 0.7372 ) }
    dend_21 { pt3dadd( 430.714, 399.579, 35.2764, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 431.85, 399.71, 35.2551, 0.5848 ) }
    dend_21 { pt3dadd( 432.917, 400.103, 35.1235, 0.4322 ) }
    dend_21 { pt3dadd( 433.919, 400.138, 34.3314, 0.3814 ) }
    dend_21 { pt3dadd( 434.893, 399.596, 34.1426, 0.4576 ) }
    dend_21 { pt3dadd( 436.01, 399.509, 34.046, 0.6102 ) }
    dend_21 { pt3dadd( 437.077, 399.813, 33.4718, 0.7372 ) }
    dend_21 { pt3dadd( 438.04, 400.398, 33.4219, 0.788 ) }
    dend_21 { pt3dadd( 439.055, 400.834, 34.0724, 0.7118 ) }
    dend_21 { pt3dadd( 439.98, 401.498, 34.055, 0.5338 ) }
    dend_21 { pt3dadd( 441.004, 401.877, 33.5362, 0.4068 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 10/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 368.276, 376.151, 27.7105, 0.9152 ) }
    dend_15 { pt3dadd( 367.35, 376.985, 27.4, 0.6864 ) }
    dend_15 { pt3dadd( 366.382, 377.565, 27.1897, 0.5848 ) }
    dend_15 { pt3dadd( 365.297, 377.679, 26.4149, 0.5338 ) }
    dend_15 { pt3dadd( 364.207, 377.957, 26.3091, 0.5084 ) }
    dend_15 { pt3dadd( 363.334, 378.659, 26.2472, 0.4322 ) }
    dend_15 { pt3dadd( 363.297, 379.75, 25.7418, 0.3814 ) }
    dend_15 { pt3dadd( 362.671, 380.628, 25.235, 0.4068 ) }
    dend_15 { pt3dadd( 361.602, 381.01, 25.3753, 0.5338 ) }
    dend_15 { pt3dadd( 360.552, 381.332, 26.068, 0.5848 ) }
    dend_15 { pt3dadd( 359.471, 381.654, 26.2486, 0.5592 ) }
    dend_15 { pt3dadd( 358.43, 381.985, 25.8258, 0.4576 ) }
    dend_15 { pt3dadd( 357.617, 382.532, 24.7108, 0.4068 ) }
    dend_15 { pt3dadd( 357.163, 383.551, 24.3211, 0.3814 ) }
    dend_15 { pt3dadd( 356.762, 384.553, 24.9301, 0.3814 ) }
    dend_15 { pt3dadd( 355.767, 384.562, 24.1802, 0.3814 ) }
    dend_15 { pt3dadd( 354.743, 384.411, 23.9775, 0.356 ) }
    dend_15 { pt3dadd( 353.765, 384.858, 23.4321, 0.356 ) }
    dend_15 { pt3dadd( 352.768, 384.466, 23.9512, 0.4068 ) }
    dend_15 { pt3dadd( 352.637, 383.435, 24.0929, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 368.276, 376.151, 27.7105, 0.9152 ) }
    dend_14 { pt3dadd( 367.571, 377.058, 28.525, 0.661 ) }
    dend_14 { pt3dadd( 367.521, 378.146, 28.5667, 0.5848 ) }
    dend_14 { pt3dadd( 367.604, 379.277, 28.607, 0.5338 ) }
    dend_14 { pt3dadd( 367.168, 380.297, 28.8596, 0.5592 ) }
    dend_14 { pt3dadd( 366.357, 381.033, 29.5109, 0.6102 ) }
    dend_14 { pt3dadd( 365.786, 382.0, 29.1614, 0.6356 ) }
    dend_14 { pt3dadd( 365.121, 382.89, 28.6168, 0.6356 ) }
    dend_14 { pt3dadd( 364.28, 383.663, 28.562, 0.6356 ) }
    dend_14 { pt3dadd( 363.28, 384.196, 28.5706, 0.661 ) }
    dend_14 { pt3dadd( 362.348, 384.842, 28.6121, 0.6864 ) }
    dend_14 { pt3dadd( 361.583, 385.687, 28.7781, 0.661 ) }
    dend_14 { pt3dadd( 361.044, 386.643, 29.4692, 0.6356 ) }
    dend_14 { pt3dadd( 360.751, 387.737, 29.6803, 0.6102 ) }
    dend_14 { pt3dadd( 360.435, 388.827, 29.682, 0.5592 ) }
    dend_14 { pt3dadd( 360.111, 389.922, 29.6923, 0.5338 ) }
    dend_14 { pt3dadd( 360.04, 391.047, 29.7713, 0.4576 ) }
    dend_14 { pt3dadd( 360.671, 391.921, 30.2901, 0.483 ) }
    dend_14 { pt3dadd( 361.446, 392.724, 30.7681, 0.5084 ) }
    dend_14 { pt3dadd( 361.355, 393.82, 30.6138, 0.6356 ) }
    dend_14 { pt3dadd( 361.023, 394.865, 29.9107, 0.7118 ) }
    dend_14 { pt3dadd( 360.701, 395.953, 29.7441, 0.7626 ) }
    dend_14 { pt3dadd( 360.388, 397.03, 30.1272, 0.788 ) }
    dend_14 { pt3dadd( 360.336, 398.133, 30.7994, 0.788 ) }
    dend_14 { pt3dadd( 360.191, 399.259, 30.9663, 0.7626 ) }
    dend_14 { pt3dadd( 359.863, 400.31, 31.6355, 0.6864 ) }
    dend_14 { pt3dadd( 359.487, 401.355, 31.5857, 0.6356 ) }
    dend_14 { pt3dadd( 358.776, 402.179, 30.84, 0.5848 ) }
    dend_14 { pt3dadd( 358.105, 403.102, 30.7644, 0.4576 ) }
    dend_14 { pt3dadd( 357.564, 403.439, 30.8, 0.305 ) }
    dend_14 { pt3dadd( 357.195, 403.87, 30.8, 0.305 ) }
    dend_14 { pt3dadd( 356.89, 404.366, 30.8, 0.356 ) }
    dend_14 { pt3dadd( 356.585, 404.862, 30.8, 0.4322 ) }
    dend_14 { pt3dadd( 356.152, 405.23, 30.8, 0.4068 ) }
    dend_14 { pt3dadd( 355.695, 405.573, 30.8, 0.3304 ) }
    dend_14 { pt3dadd( 355.339, 406.018, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 355.161, 406.642, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 354.894, 407.175, 30.8, 0.2796 ) }
    dend_14 { pt3dadd( 354.615, 407.696, 30.8, 0.356 ) }
    dend_14 { pt3dadd( 354.157, 408.04, 30.8, 0.3814 ) }
    dend_14 { pt3dadd( 353.712, 408.395, 30.8, 0.4322 ) }
    dend_14 { pt3dadd( 353.089, 408.573, 30.8, 0.3814 ) }
    dend_14 { pt3dadd( 352.695, 408.98, 30.8, 0.356 ) }
    dend_14 { pt3dadd( 352.327, 409.412, 30.8, 0.2796 ) }
    dend_14 { pt3dadd( 351.92, 409.806, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 351.513, 410.201, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 351.081, 410.569, 30.8, 0.305 ) }
    dend_14 { pt3dadd( 350.674, 410.963, 30.8, 0.4068 ) }
    dend_14 { pt3dadd( 350.064, 411.154, 30.8, 0.4576 ) }
    dend_14 { pt3dadd( 349.492, 411.382, 30.8, 0.4576 ) }
    dend_14 { pt3dadd( 348.997, 411.688, 30.8, 0.356 ) }
    dend_14 { pt3dadd( 348.539, 412.031, 30.8, 0.2796 ) }
    dend_14 { pt3dadd( 348.081, 412.26, 30.8, 0.3304 ) }
    dend_14 { pt3dadd( 347.89, 412.755, 30.8, 0.3304 ) }
    dend_14 { pt3dadd( 347.89, 413.327, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 347.89, 413.67, 30.8, 0.3304 ) }
    dend_14 { pt3dadd( 347.635, 414.103, 30.8, 0.483 ) }
    dend_14 { pt3dadd( 347.547, 414.586, 30.8, 0.5084 ) }
    dend_14 { pt3dadd( 347.547, 415.043, 30.8, 0.483 ) }
    dend_14 { pt3dadd( 347.493, 415.793, 31.3046, 0.2288 ) }
    dend_14 { pt3dadd( 347.337, 416.084, 31.7514, 0.2542 ) }
    dend_14 { pt3dadd( 346.478, 416.331, 33.4289, 0.3304 ) }
    dend_14 { pt3dadd( 345.609, 416.432, 35.2346, 0.483 ) }
    dend_14 { pt3dadd( 344.719, 416.913, 36.3028, 0.6356 ) }
    dend_14 { pt3dadd( 343.953, 417.756, 36.3768, 0.7372 ) }
    dend_14 { pt3dadd( 343.294, 418.687, 36.2706, 0.6864 ) }
    dend_14 { pt3dadd( 342.437, 418.856, 35.84, 0.3814 ) }
    dend_14 { pt3dadd( 341.941, 419.162, 35.84, 0.305 ) }
    dend_14 { pt3dadd( 341.446, 419.467, 35.84, 0.356 ) }
    dend_14 { pt3dadd( 340.683, 419.505, 35.84, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 339.882, 419.505, 35.84, 0.5592 ) }
    dend_14 { pt3dadd( 339.082, 419.505, 35.84, 0.483 ) }
    dend_14 { pt3dadd( 338.547, 419.657, 35.84, 0.356 ) }
    dend_14 { pt3dadd( 338.204, 420.0, 35.84, 0.5084 ) }
    dend_14 { pt3dadd( 337.721, 420.547, 35.84, 0.5338 ) }
    dend_14 { pt3dadd( 337.378, 421.005, 35.84, 0.5084 ) }
    dend_14 { pt3dadd( 337.099, 421.526, 35.84, 0.4576 ) }
    dend_14 { pt3dadd( 336.615, 421.843, 35.84, 0.4068 ) }
    dend_14 { pt3dadd( 336.145, 422.174, 35.84, 0.3814 ) }
    dend_14 { pt3dadd( 335.687, 422.403, 35.84, 0.4068 ) }
    dend_14 { pt3dadd( 335.65, 422.708, 35.84, 0.4576 ) }
    dend_14 { pt3dadd( 335.599, 423.6, 36.4381, 0.4576 ) }
    dend_14 { pt3dadd( 335.034, 424.574, 36.6167, 0.5084 ) }
    dend_14 { pt3dadd( 334.147, 425.19, 37.4016, 0.5592 ) }
    dend_14 { pt3dadd( 333.245, 425.737, 38.4328, 0.6102 ) }
    dend_14 { pt3dadd( 332.49, 426.535, 39.1138, 0.5592 ) }
    dend_14 { pt3dadd( 331.926, 427.476, 39.8796, 0.5084 ) }
    dend_14 { pt3dadd( 331.602, 428.502, 40.6437, 0.4576 ) }
    dend_14 { pt3dadd( 331.9, 429.58, 40.719, 0.483 ) }
    dend_14 { pt3dadd( 332.315, 430.552, 39.8801, 0.483 ) }
    dend_14 { pt3dadd( 331.927, 431.602, 39.7594, 0.4576 ) }
    dend_14 { pt3dadd( 331.624, 432.679, 39.7561, 0.356 ) }
    dend_14 { pt3dadd( 331.828, 433.789, 39.7289, 0.305 ) }
    dend_14 { pt3dadd( 331.161, 434.607, 39.4545, 0.3304 ) }
    dend_14 { pt3dadd( 330.661, 435.271, 40.6193, 0.4068 ) }
    dend_14 { pt3dadd( 330.938, 436.32, 39.9585, 0.4322 ) }
    dend_14 { pt3dadd( 331.445, 437.311, 40.1484, 0.3814 ) }
    dend_14 { pt3dadd( 331.303, 438.197, 41.7357, 0.3814 ) }
    dend_14 { pt3dadd( 331.087, 439.294, 42.0006, 0.4322 ) }
    dend_14 { pt3dadd( 331.164, 440.434, 42.0048, 0.5338 ) }
    dend_14 { pt3dadd( 331.447, 441.536, 42.0314, 0.5592 ) }
    dend_14 { pt3dadd( 331.191, 442.618, 42.2139, 0.5848 ) }
    dend_14 { pt3dadd( 330.411, 443.378, 42.8543, 0.5338 ) }
    dend_14 { pt3dadd( 329.421, 443.827, 42.2164, 0.5084 ) }
    dend_14 { pt3dadd( 328.462, 444.361, 42.0367, 0.4576 ) }
    dend_14 { pt3dadd( 328.514, 445.392, 42.2142, 0.483 ) }
    dend_14 { pt3dadd( 329.036, 446.362, 42.91, 0.5084 ) }
    dend_14 { pt3dadd( 329.403, 447.436, 43.1136, 0.5338 ) }
    dend_14 { pt3dadd( 329.92, 448.454, 43.0814, 0.5084 ) }
    dend_14 { pt3dadd( 330.57, 449.391, 42.9052, 0.483 ) }
    dend_14 { pt3dadd( 331.308, 450.132, 42.0728, 0.4576 ) }
    dend_14 { pt3dadd( 331.944, 451.072, 42.2304, 0.5084 ) }
    dend_14 { pt3dadd( 332.639, 451.913, 42.5905, 0.6864 ) }
    dend_14 { pt3dadd( 332.866, 452.49, 42.28, 0.5338 ) }
    dend_14 { pt3dadd( 333.018, 453.138, 42.28, 0.5338 ) }
    dend_14 { pt3dadd( 333.171, 453.787, 42.28, 0.483 ) }
    dend_14 { pt3dadd( 333.426, 454.333, 42.28, 0.3814 ) }
    dend_14 { pt3dadd( 333.73, 454.829, 42.28, 0.3304 ) }
    dend_14 { pt3dadd( 334.125, 455.235, 42.28, 0.3814 ) }
    dend_14 { pt3dadd( 334.404, 455.757, 42.28, 0.483 ) }
    dend_14 { pt3dadd( 334.684, 456.277, 42.28, 0.483 ) }
    dend_14 { pt3dadd( 334.849, 456.914, 42.28, 0.3814 ) }
    dend_14 { pt3dadd( 334.849, 457.714, 42.28, 0.3304 ) }
    dend_14 { pt3dadd( 335.078, 458.286, 42.28, 0.3304 ) }
    dend_14 { pt3dadd( 335.23, 458.935, 42.28, 0.4068 ) }
    dend_14 { pt3dadd( 335.306, 459.659, 42.28, 0.4068 ) }
    dend_14 { pt3dadd( 335.306, 460.46, 42.28, 0.4576 ) }
    dend_14 { pt3dadd( 335.433, 461.019, 42.28, 0.5338 ) }
    dend_14 { pt3dadd( 335.739, 461.4, 42.28, 0.4322 ) }
    dend_14 { pt3dadd( 336.12, 461.591, 42.28, 0.3814 ) }
    dend_14 { pt3dadd( 336.488, 461.909, 42.28, 0.4068 ) }
    dend_14 { pt3dadd( 336.565, 462.176, 42.28, 0.3304 ) }
    dend_14 { pt3dadd( 336.603, 463.168, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 336.831, 463.74, 42.28, 0.3304 ) }
    dend_14 { pt3dadd( 337.022, 464.35, 42.28, 0.3814 ) }
    dend_14 { pt3dadd( 337.022, 465.15, 42.28, 0.4322 ) }
    dend_14 { pt3dadd( 337.022, 465.951, 42.28, 0.4322 ) }
    dend_14 { pt3dadd( 337.022, 466.752, 42.28, 0.356 ) }
    dend_14 { pt3dadd( 337.022, 467.553, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.022, 468.354, 42.28, 0.2542 ) }
    dend_14 { pt3dadd( 337.022, 469.154, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.022, 469.955, 42.28, 0.305 ) }
    dend_14 { pt3dadd( 337.022, 470.756, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.137, 471.442, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.137, 472.243, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.137, 473.044, 42.28, 0.305 ) }
    dend_14 { pt3dadd( 337.239, 473.743, 42.28, 0.2796 ) }
    dend_14 { pt3dadd( 337.366, 474.417, 42.28, 0.2542 ) }
    dend_14 { pt3dadd( 337.366, 475.218, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.366, 476.018, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.366, 476.819, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.48, 477.506, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.48, 477.849, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.48, 478.192, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.493, 478.523, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.696, 478.662, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 337.823, 478.764, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.077, 479.311, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.281, 479.908, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.357, 480.632, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.395, 481.395, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.395, 481.738, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.395, 482.082, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.433, 482.387, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 338.56, 482.603, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 339.082, 482.654, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 339.411, 482.666, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 339.527, 482.781, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 339.539, 482.997, 42.28, 0.2288 ) }
    dend_14 { pt3dadd( 339.577, 483.302, 42.28, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 339.882, 483.798, 42.28, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 374.358, 374.71, 27.4887, 0.7626 ) }
    dend_12 { pt3dadd( 374.609, 375.282, 27.72, 0.7118 ) }
    dend_12 { pt3dadd( 375.232, 375.575, 27.72, 0.4576 ) }
    dend_12 { pt3dadd( 375.803, 375.575, 27.72, 0.2542 ) }
    dend_12 { pt3dadd( 376.147, 375.575, 27.72, 0.305 ) }
    dend_12 { pt3dadd( 376.579, 375.829, 27.72, 0.5084 ) }
    dend_12 { pt3dadd( 376.961, 376.478, 27.72, 0.5084 ) }
    dend_12 { pt3dadd( 377.062, 377.177, 27.72, 0.3814 ) }
    dend_12 { pt3dadd( 377.253, 377.672, 27.72, 0.2288 ) }
    dend_12 { pt3dadd( 377.507, 377.761, 27.72, 0.2288 ) }
    dend_12 { pt3dadd( 377.724, 377.888, 27.72, 0.2288 ) }
    dend_12 { pt3dadd( 377.876, 377.965, 27.72, 0.2288 ) }
    dend_12 { pt3dadd( 378.435, 378.092, 27.72, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 14/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 374.358, 374.71, 27.4887, 0.7626 ) }
    dend_9 { pt3dadd( 374.832, 375.748, 27.44, 0.7372 ) }
    dend_9 { pt3dadd( 375.141, 376.847, 27.4408, 0.6102 ) }
    dend_9 { pt3dadd( 375.708, 377.815, 27.4445, 0.5084 ) }
    dend_9 { pt3dadd( 376.575, 378.554, 27.4604, 0.4576 ) }
    dend_9 { pt3dadd( 377.492, 379.23, 27.5436, 0.483 ) }
    dend_9 { pt3dadd( 378.292, 379.998, 28.0518, 0.483 ) }
    dend_9 { pt3dadd( 379.107, 380.762, 28.5634, 0.4576 ) }
    dend_9 { pt3dadd( 379.794, 381.618, 28.5838, 0.4068 ) }
    dend_9 { pt3dadd( 379.362, 382.643, 28.6955, 0.4322 ) }
    dend_9 { pt3dadd( 379.178, 383.712, 29.3583, 0.5848 ) }
    dend_9 { pt3dadd( 379.476, 384.788, 29.685, 0.7118 ) }
    dend_9 { pt3dadd( 380.115, 385.734, 29.7046, 0.7372 ) }
    dend_9 { pt3dadd( 380.814, 386.637, 29.8029, 0.5592 ) }
    dend_9 { pt3dadd( 381.573, 387.434, 30.3993, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 420.299, 319.361, 42.3878, 0.9152 ) }
    dend_5 { pt3dadd( 421.122, 319.565, 41.8144, 0.839 ) }
    dend_5 { pt3dadd( 422.164, 319.859, 41.0348, 0.7372 ) }
    dend_5 { pt3dadd( 422.842, 320.187, 40.9646, 0.5848 ) }
    dend_5 { pt3dadd( 423.878, 320.143, 41.6956, 0.5592 ) }
    dend_5 { pt3dadd( 424.872, 320.4, 42.856, 0.5592 ) }
    dend_5 { pt3dadd( 426.004, 320.384, 43.1469, 0.6356 ) }
    dend_5 { pt3dadd( 427.109, 320.138, 43.2995, 0.6356 ) }
    dend_5 { pt3dadd( 428.181, 320.231, 43.9835, 0.5848 ) }
    dend_5 { pt3dadd( 429.275, 320.521, 43.9247, 0.483 ) }
    dend_5 { pt3dadd( 430.293, 320.903, 43.2074, 0.4322 ) }
    dend_5 { pt3dadd( 431.23, 321.546, 43.1396, 0.483 ) }
    dend_5 { pt3dadd( 432.06, 322.332, 43.2026, 0.5338 ) }
    dend_5 { pt3dadd( 432.89, 323.087, 43.575, 0.5338 ) }
    dend_5 { pt3dadd( 433.841, 323.618, 44.2716, 0.4576 ) }
    dend_5 { pt3dadd( 434.857, 324.119, 44.4189, 0.4576 ) }
    dend_5 { pt3dadd( 435.894, 324.452, 45.1156, 0.4576 ) }
    dend_5 { pt3dadd( 436.79, 325.148, 45.3611, 0.4576 ) }
    dend_5 { pt3dadd( 437.753, 325.759, 45.365, 0.4068 ) }
    dend_5 { pt3dadd( 438.721, 326.358, 45.3866, 0.4322 ) }
    dend_5 { pt3dadd( 439.529, 327.163, 45.4905, 0.5084 ) }
    dend_5 { pt3dadd( 440.154, 328.029, 46.2748, 0.5592 ) }
    dend_5 { pt3dadd( 441.12, 328.611, 46.6029, 0.4576 ) }
    dend_5 { pt3dadd( 447.771, 331.49, 48.8496, 0.4322 ) }
    dend_5 { pt3dadd( 453.542, 335.799, 51.2039, 0.4576 ) }
    dend_5 { pt3dadd( 459.299, 339.909, 53.5578, 0.4068 ) }
    dend_5 { pt3dadd( 471.788, 345.455, 57.0892, 0.3304 ) }
    dend_5 { pt3dadd( 475.4, 347.283, 58.8549, 0.2542 ) }
    dend_5 { pt3dadd( 479.389, 347.37, 58.8549, 0.2288 ) }
    dend_5 { pt3dadd( 484.643, 347.719, 61.2091, 0.2288 ) }
    dend_5 { pt3dadd( 486.644, 348.327, 61.2091, 0.2288 ) }
    dend_5 { pt3dadd( 488.557, 348.154, 61.2091, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 420.299, 319.361, 42.3878, 0.9152 ) }
    dend_2 { pt3dadd( 421.118, 318.936, 41.9664, 0.6864 ) }
    dend_2 { pt3dadd( 421.977, 318.192, 41.7486, 0.6356 ) }
    dend_2 { pt3dadd( 422.594, 317.278, 41.0542, 0.6102 ) }
    dend_2 { pt3dadd( 423.341, 316.417, 40.9758, 0.6102 ) }
    dend_2 { pt3dadd( 423.988, 315.505, 41.3703, 0.6356 ) }
    dend_2 { pt3dadd( 424.433, 314.486, 41.2532, 0.6864 ) }
    dend_2 { pt3dadd( 424.819, 313.255, 40.6613, 0.9152 ) }
    dend_2 { pt3dadd( 425.014, 312.174, 39.9445, 0.6864 ) }
    dend_2 { pt3dadd( 425.385, 311.112, 40.2066, 0.5848 ) }
    dend_2 { pt3dadd( 425.711, 310.06, 40.8887, 0.5592 ) }
    dend_2 { pt3dadd( 425.812, 308.933, 41.2031, 0.6356 ) }
    dend_2 { pt3dadd( 425.888, 307.834, 41.8891, 0.661 ) }
    dend_2 { pt3dadd( 426.236, 306.758, 41.6892, 0.6102 ) }
    dend_2 { pt3dadd( 426.471, 305.775, 40.451, 0.4322 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 76/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 349.362, 337.366, 27.3106, 0.6864 ) }
    apic_19 { pt3dadd( 350.15, 336.938, 26.544, 0.5848 ) }
    apic_19 { pt3dadd( 351.098, 336.408, 25.7421, 0.5848 ) }
    apic_19 { pt3dadd( 352.111, 335.924, 25.5128, 0.5338 ) }
    apic_19 { pt3dadd( 352.617, 335.153, 25.956, 0.5338 ) }
    apic_19 { pt3dadd( 352.158, 334.213, 24.9469, 0.483 ) }
    apic_19 { pt3dadd( 351.924, 333.158, 24.0985, 0.5084 ) }
    apic_19 { pt3dadd( 351.366, 332.215, 23.5004, 0.483 ) }
    apic_19 { pt3dadd( 350.945, 331.213, 23.6138, 0.4576 ) }
    apic_19 { pt3dadd( 351.219, 330.319, 25.0804, 0.3814 ) }
    apic_19 { pt3dadd( 351.656, 329.564, 26.768, 0.3304 ) }
    apic_19 { pt3dadd( 352.586, 329.376, 26.4538, 0.305 ) }
    apic_19 { pt3dadd( 353.217, 329.18, 24.465, 0.305 ) }
    apic_19 { pt3dadd( 354.105, 328.492, 24.0612, 0.3304 ) }
    apic_19 { pt3dadd( 354.941, 327.71, 24.0036, 0.356 ) }
    apic_19 { pt3dadd( 355.785, 326.956, 23.7303, 0.3814 ) }
    apic_19 { pt3dadd( 356.699, 326.383, 22.96, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 93/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 349.362, 337.366, 27.3106, 0.6864 ) }
    apic_2 { pt3dadd( 349.301, 336.453, 28.4396, 0.7626 ) }
    apic_2 { pt3dadd( 348.924, 335.39, 28.5992, 0.7626 ) }
    apic_2 { pt3dadd( 348.319, 334.427, 28.7552, 0.788 ) }
    apic_2 { pt3dadd( 347.696, 333.514, 29.3955, 0.839 ) }
    apic_2 { pt3dadd( 346.953, 332.657, 29.6814, 0.8644 ) }
    apic_2 { pt3dadd( 346.139, 331.853, 29.685, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_2 { pt3dadd( 345.31, 331.066, 29.7004, 0.7626 ) }
    apic_2 { pt3dadd( 344.391, 330.395, 29.7847, 0.6864 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 441.004, 401.877, 33.5362, 0.4068 ) }
    dend_23 { pt3dadd( 440.948, 401.989, 34.0668, 0.5084 ) }
    dend_23 { pt3dadd( 441.368, 402.218, 34.16, 0.5338 ) }
    dend_23 { pt3dadd( 441.724, 402.434, 34.16, 0.5084 ) }
    dend_23 { pt3dadd( 442.079, 402.879, 34.16, 0.5338 ) }
    dend_23 { pt3dadd( 442.523, 403.235, 34.16, 0.483 ) }
    dend_23 { pt3dadd( 442.88, 403.68, 34.16, 0.4576 ) }
    dend_23 { pt3dadd( 443.299, 404.061, 34.16, 0.4068 ) }
    dend_23 { pt3dadd( 443.72, 404.442, 34.16, 0.4322 ) }
    dend_23 { pt3dadd( 444.062, 404.899, 34.16, 0.4068 ) }
    dend_23 { pt3dadd( 444.493, 405.269, 34.16, 0.4322 ) }
    dend_23 { pt3dadd( 444.685, 405.764, 34.16, 0.4322 ) }
    dend_23 { pt3dadd( 445.04, 406.082, 34.16, 0.305 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 441.004, 401.877, 33.5362, 0.4068 ) }
    dend_22 { pt3dadd( 442.111, 401.91, 32.8793, 0.4068 ) }
    dend_22 { pt3dadd( 443.202, 402.034, 32.1681, 0.5592 ) }
    dend_22 { pt3dadd( 444.18, 402.581, 31.8948, 0.6864 ) }
    dend_22 { pt3dadd( 445.151, 403.159, 31.7887, 0.7372 ) }
    dend_22 { pt3dadd( 446.238, 403.156, 31.1016, 0.6356 ) }
    dend_22 { pt3dadd( 447.234, 402.689, 30.5284, 0.483 ) }
    dend_22 { pt3dadd( 448.07, 402.153, 29.2905, 0.3304 ) }
    dend_22 { pt3dadd( 448.695, 401.287, 29.6506, 0.2542 ) }
    dend_22 { pt3dadd( 449.363, 400.514, 30.8, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 25/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 381.573, 387.434, 30.3993, 0.2288 ) }
    dend_11 { pt3dadd( 381.82, 388.044, 30.7362, 0.4322 ) }
    dend_11 { pt3dadd( 382.341, 388.949, 29.8376, 0.483 ) }
    dend_11 { pt3dadd( 383.263, 389.593, 29.68, 0.4576 ) }
    dend_11 { pt3dadd( 384.262, 390.128, 29.68, 0.4322 ) }
    dend_11 { pt3dadd( 385.1, 390.906, 29.6806, 0.4322 ) }
    dend_11 { pt3dadd( 385.949, 391.674, 29.6828, 0.483 ) }
    dend_11 { pt3dadd( 386.898, 392.307, 29.6929, 0.4576 ) }
    dend_11 { pt3dadd( 387.759, 393.061, 29.7368, 0.4322 ) }
    dend_11 { pt3dadd( 388.613, 393.785, 30.0493, 0.3304 ) }
    dend_11 { pt3dadd( 389.111, 394.767, 30.6505, 0.3304 ) }
    dend_11 { pt3dadd( 389.98, 395.398, 29.9611, 0.3304 ) }
    dend_11 { pt3dadd( 391.071, 395.68, 29.8726, 0.3814 ) }
    dend_11 { pt3dadd( 391.958, 396.262, 30.7936, 0.3304 ) }
    dend_11 { pt3dadd( 392.956, 396.696, 31.6044, 0.2796 ) }
    dend_11 { pt3dadd( 393.767, 397.47, 31.92, 0.2542 ) }
    dend_11 { pt3dadd( 394.506, 398.336, 31.92, 0.3304 ) }
    dend_11 { pt3dadd( 395.546, 398.766, 31.92, 0.4068 ) }
    dend_11 { pt3dadd( 396.577, 399.216, 31.9203, 0.4576 ) }
    dend_11 { pt3dadd( 397.431, 399.962, 31.9222, 0.4576 ) }
    dend_11 { pt3dadd( 398.031, 400.932, 31.9329, 0.5084 ) }
    dend_11 { pt3dadd( 398.773, 401.798, 31.981, 0.5592 ) }
    dend_11 { pt3dadd( 399.704, 402.408, 32.3557, 0.5592 ) }
    dend_11 { pt3dadd( 400.678, 402.897, 33.04, 0.5084 ) }
    dend_11 { pt3dadd( 401.742, 403.296, 33.0392, 0.483 ) }
    dend_11 { pt3dadd( 402.852, 403.555, 33.0344, 0.5084 ) }
    dend_11 { pt3dadd( 403.969, 403.344, 33.0005, 0.5338 ) }
    dend_11 { pt3dadd( 405.045, 403.628, 32.788, 0.5338 ) }
    dend_11 { pt3dadd( 405.845, 404.358, 32.0205, 0.5338 ) }
    dend_11 { pt3dadd( 406.652, 405.167, 31.9995, 0.5084 ) }
    dend_11 { pt3dadd( 407.448, 405.968, 32.3092, 0.5084 ) }
    dend_11 { pt3dadd( 408.208, 406.763, 32.9826, 0.5084 ) }
    dend_11 { pt3dadd( 408.923, 407.65, 32.9904, 0.5338 ) }
    dend_11 { pt3dadd( 409.64, 408.534, 32.8034, 0.483 ) }
    dend_11 { pt3dadd( 410.486, 409.228, 32.0653, 0.4576 ) }
    dend_11 { pt3dadd( 410.934, 410.266, 31.9007, 0.4576 ) }
    dend_11 { pt3dadd( 411.516, 411.244, 31.8097, 0.5592 ) }
    dend_11 { pt3dadd( 412.371, 411.942, 31.3348, 0.6864 ) }
    dend_11 { pt3dadd( 413.398, 412.354, 30.7157, 0.8136 ) }
    dend_11 { pt3dadd( 414.499, 412.434, 30.1151, 0.8644 ) }
    dend_11 { pt3dadd( 415.417, 412.532, 28.483, 0.839 ) }
    dend_11 { pt3dadd( 415.984, 413.09, 26.5782, 0.8136 ) }
    dend_11 { pt3dadd( 416.645, 413.785, 25.2, 0.839 ) }
    dend_11 { pt3dadd( 417.257, 414.552, 25.293, 0.8898 ) }
    dend_11 { pt3dadd( 418.102, 415.317, 25.2, 0.8136 ) }
    dend_11 { pt3dadd( 419.143, 415.632, 25.1997, 0.6864 ) }
    dend_11 { pt3dadd( 420.268, 415.46, 25.1972, 0.5848 ) }
    dend_11 { pt3dadd( 421.346, 415.799, 25.1824, 0.6356 ) }
    dend_11 { pt3dadd( 422.376, 416.286, 25.0975, 0.661 ) }
    dend_11 { pt3dadd( 423.405, 416.702, 24.5826, 0.6102 ) }
    dend_11 { pt3dadd( 424.509, 416.885, 24.0864, 0.4576 ) }
    dend_11 { pt3dadd( 425.484, 417.438, 24.117, 0.4068 ) }
    dend_11 { pt3dadd( 426.217, 418.309, 24.2553, 0.4322 ) }
    dend_11 { pt3dadd( 426.285, 419.299, 25.205, 0.6864 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 79/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 381.573, 387.434, 30.3993, 0.2288 ) }
    dend_10 { pt3dadd( 381.98, 387.531, 30.6956, 0.356 ) }
    dend_10 { pt3dadd( 383.098, 387.344, 30.805, 0.483 ) }
    dend_10 { pt3dadd( 384.139, 387.753, 30.8297, 0.5592 ) }
    dend_10 { pt3dadd( 384.941, 388.564, 30.9414, 0.5848 ) }
    dend_10 { pt3dadd( 385.615, 389.41, 31.6898, 0.5592 ) }
    dend_10 { pt3dadd( 386.508, 390.087, 31.7489, 0.5338 ) }
    dend_10 { pt3dadd( 387.52, 390.141, 30.9744, 0.5848 ) }
    dend_10 { pt3dadd( 388.621, 390.105, 31.421, 0.5848 ) }
    dend_10 { pt3dadd( 389.665, 390.495, 31.9656, 0.5848 ) }
    dend_10 { pt3dadd( 390.743, 390.663, 32.2448, 0.5338 ) }
    dend_10 { pt3dadd( 391.646, 390.437, 33.7537, 0.5848 ) }
    dend_10 { pt3dadd( 392.763, 390.377, 34.1692, 0.5848 ) }
    dend_10 { pt3dadd( 393.828, 390.008, 34.2219, 0.5338 ) }
    dend_10 { pt3dadd( 394.682, 389.302, 34.5803, 0.4068 ) }
    dend_10 { pt3dadd( 395.378, 388.454, 34.5002, 0.3814 ) }
    dend_10 { pt3dadd( 396.353, 387.954, 34.1653, 0.4322 ) }
    dend_10 { pt3dadd( 397.482, 387.794, 34.1947, 0.483 ) }
    dend_10 { pt3dadd( 398.558, 388.069, 34.3932, 0.4322 ) }
    dend_10 { pt3dadd( 399.334, 388.82, 35.1929, 0.356 ) }
    dend_10 { pt3dadd( 400.439, 388.784, 35.4768, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 401.47, 389.057, 36.1309, 0.4068 ) }
    dend_10 { pt3dadd( 402.275, 389.804, 35.6059, 0.483 ) }
    dend_10 { pt3dadd( 403.079, 390.604, 35.3766, 0.5592 ) }
    dend_10 { pt3dadd( 403.879, 391.383, 35.8109, 0.5848 ) }
    dend_10 { pt3dadd( 404.721, 392.103, 36.4081, 0.6102 ) }
    dend_10 { pt3dadd( 405.743, 392.612, 36.4913, 0.5848 ) }
    dend_10 { pt3dadd( 406.827, 392.857, 37.0205, 0.5592 ) }
    dend_10 { pt3dadd( 407.793, 393.279, 38.0492, 0.5592 ) }
    dend_10 { pt3dadd( 408.681, 393.942, 38.6159, 0.5848 ) }
    dend_10 { pt3dadd( 409.5, 394.737, 38.7402, 0.5592 ) }
    dend_10 { pt3dadd( 410.299, 395.513, 39.1992, 0.5338 ) }
    dend_10 { pt3dadd( 411.151, 396.222, 39.807, 0.5084 ) }
    dend_10 { pt3dadd( 412.199, 396.428, 40.0744, 0.6102 ) }
    dend_10 { pt3dadd( 413.249, 396.088, 40.2968, 0.661 ) }
    dend_10 { pt3dadd( 414.326, 396.263, 39.7687, 0.7626 ) }
    dend_10 { pt3dadd( 415.39, 396.675, 39.7617, 0.7372 ) }
    dend_10 { pt3dadd( 416.295, 397.37, 39.7681, 0.7372 ) }
    dend_10 { pt3dadd( 417.18, 398.088, 39.7953, 0.661 ) }
    dend_10 { pt3dadd( 418.243, 398.448, 39.97, 0.661 ) }
    dend_10 { pt3dadd( 419.29, 398.676, 40.7299, 0.661 ) }
    dend_10 { pt3dadd( 420.133, 399.433, 41.0071, 0.6864 ) }
    dend_10 { pt3dadd( 420.889, 400.22, 41.6562, 0.6356 ) }
    dend_10 { pt3dadd( 421.589, 401.081, 42.2766, 0.5592 ) }
    dend_10 { pt3dadd( 422.534, 401.459, 43.3647, 0.4322 ) }
    dend_10 { pt3dadd( 423.634, 401.68, 43.1852, 0.3814 ) }
    dend_10 { pt3dadd( 424.596, 402.283, 42.9932, 0.3814 ) }
    dend_10 { pt3dadd( 425.534, 402.671, 42.0524, 0.4322 ) }
    dend_10 { pt3dadd( 426.216, 402.141, 40.3813, 0.4322 ) }
    dend_10 { pt3dadd( 425.769, 402.77, 42.8123, 0.4322 ) }
    dend_10 { pt3dadd( 426.484, 402.904, 43.8598, 0.4576 ) }
    dend_10 { pt3dadd( 427.307, 403.468, 45.0125, 0.5338 ) }
    dend_10 { pt3dadd( 428.173, 404.102, 44.4702, 0.5592 ) }
    dend_10 { pt3dadd( 428.862, 404.995, 44.1902, 0.5848 ) }
    dend_10 { pt3dadd( 429.54, 405.912, 44.0098, 0.5592 ) }
    dend_10 { pt3dadd( 430.27, 406.726, 43.3821, 0.5592 ) }
    dend_10 { pt3dadd( 431.346, 406.856, 43.9953, 0.5084 ) }
    dend_10 { pt3dadd( 432.451, 406.698, 44.0765, 0.5084 ) }
    dend_10 { pt3dadd( 433.341, 407.302, 43.2967, 0.483 ) }
    dend_10 { pt3dadd( 434.297, 407.908, 43.1852, 0.483 ) }
    dend_10 { pt3dadd( 435.206, 408.527, 43.5739, 0.5084 ) }
    dend_10 { pt3dadd( 435.936, 409.376, 43.9821, 0.5848 ) }
    dend_10 { pt3dadd( 436.872, 409.957, 43.3751, 0.6864 ) }
    dend_10 { pt3dadd( 437.872, 410.491, 43.3698, 0.7118 ) }
    dend_10 { pt3dadd( 438.798, 411.079, 44.0714, 0.7372 ) }
    dend_10 { pt3dadd( 439.558, 411.904, 43.8847, 0.7372 ) }
    dend_10 { pt3dadd( 440.44, 412.55, 43.8945, 0.7626 ) }
    dend_10 { pt3dadd( 441.417, 413.103, 44.2554, 0.7118 ) }
    dend_10 { pt3dadd( 442.499, 413.458, 44.3405, 0.6356 ) }
    dend_10 { pt3dadd( 443.414, 413.785, 45.36, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 49/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 426.471, 305.775, 40.451, 0.4322 ) }
    dend_4 { pt3dadd( 426.598, 305.334, 40.04, 0.305 ) }
    dend_4 { pt3dadd( 427.055, 305.105, 40.04, 0.4068 ) }
    dend_4 { pt3dadd( 427.551, 304.571, 40.04, 0.3814 ) }
    dend_4 { pt3dadd( 428.008, 304.342, 40.04, 0.356 ) }
    dend_4 { pt3dadd( 428.237, 303.884, 40.04, 0.305 ) }
    dend_4 { pt3dadd( 428.657, 303.274, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 428.95, 302.881, 40.04, 0.4576 ) }
    dend_4 { pt3dadd( 429.0, 302.245, 40.04, 0.5084 ) }
    dend_4 { pt3dadd( 429.102, 301.317, 40.04, 0.3814 ) }
    dend_4 { pt3dadd( 429.229, 300.643, 40.04, 0.3304 ) }
    dend_4 { pt3dadd( 429.229, 299.842, 40.04, 0.305 ) }
    dend_4 { pt3dadd( 429.229, 299.042, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 429.229, 298.241, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 429.229, 297.44, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 429.229, 296.639, 40.04, 0.305 ) }
    dend_4 { pt3dadd( 429.229, 295.838, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 429.229, 295.038, 40.04, 0.2542 ) }
    dend_4 { pt3dadd( 429.229, 294.237, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 429.229, 293.436, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 429.229, 292.635, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 429.229, 291.834, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 429.216, 291.046, 40.04, 0.2542 ) }
    dend_4 { pt3dadd( 428.987, 290.474, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 428.759, 290.017, 40.04, 0.2796 ) }
    dend_4 { pt3dadd( 428.428, 290.004, 40.04, 0.2542 ) }
    dend_4 { pt3dadd( 428.135, 289.954, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 428.085, 289.661, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 428.085, 289.432, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 428.085, 289.203, 40.04, 0.2288 ) }
    dend_4 { pt3dadd( 428.085, 288.174, 40.04, 0.4068 ) }
    dend_4 { pt3dadd( 428.085, 287.373, 40.04, 0.5592 ) }
    dend_4 { pt3dadd( 428.085, 286.572, 40.04, 0.6102 ) }
    dend_4 { pt3dadd( 428.085, 285.771, 40.04, 0.5338 ) }
    dend_4 { pt3dadd( 428.085, 284.97, 40.04, 0.4068 ) }
    dend_4 { pt3dadd( 428.085, 284.627, 40.04, 0.356 ) }
    dend_4 { pt3dadd( 428.085, 284.093, 39.6668, 0.3814 ) }
    dend_4 { pt3dadd( 428.085, 283.483, 38.92, 0.305 ) }
    dend_4 { pt3dadd( 428.085, 283.14, 38.92, 0.2542 ) }
    dend_4 { pt3dadd( 428.085, 282.225, 38.92, 0.2796 ) }
    dend_4 { pt3dadd( 428.085, 281.424, 38.92, 0.305 ) }
    dend_4 { pt3dadd( 428.085, 280.623, 38.92, 0.2796 ) }
    dend_4 { pt3dadd( 428.199, 280.051, 38.64, 0.2542 ) }
    dend_4 { pt3dadd( 428.199, 279.479, 38.08, 0.2288 ) }
    dend_4 { pt3dadd( 428.199, 278.678, 38.08, 0.2288 ) }
    dend_4 { pt3dadd( 428.199, 277.878, 38.08, 0.2288 ) }
    dend_4 { pt3dadd( 428.199, 277.077, 38.08, 0.2288 ) }
    dend_4 { pt3dadd( 428.199, 276.276, 38.08, 0.2542 ) }
    dend_4 { pt3dadd( 428.237, 275.513, 38.08, 0.3304 ) }
    dend_4 { pt3dadd( 428.53, 275.005, 38.08, 0.4322 ) }
    dend_4 { pt3dadd( 428.822, 274.573, 37.8932, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 429.114, 274.102, 37.8, 0.483 ) }
    dend_4 { pt3dadd( 429.432, 273.734, 37.8, 0.305 ) }
    dend_4 { pt3dadd( 429.686, 273.645, 37.8, 0.2542 ) }
    dend_4 { pt3dadd( 429.953, 273.568, 37.8, 0.2288 ) }
    dend_4 { pt3dadd( 430.144, 273.53, 37.8, 0.2288 ) }
    dend_4 { pt3dadd( 430.716, 273.416, 37.8, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 6/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 426.471, 305.775, 40.451, 0.4322 ) }
    dend_3 { pt3dadd( 426.243, 305.791, 41.0124, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 8/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 344.391, 330.395, 29.7847, 0.6864 ) }
    apic_4 { pt3dadd( 343.325, 330.143, 29.3502, 0.7372 ) }
    apic_4 { pt3dadd( 342.312, 329.728, 28.6255, 0.788 ) }
    apic_4 { pt3dadd( 341.392, 329.054, 28.5396, 0.839 ) }
    apic_4 { pt3dadd( 340.372, 328.569, 28.4455, 0.788 ) }
    apic_4 { pt3dadd( 339.35, 328.144, 27.8796, 0.7372 ) }
    apic_4 { pt3dadd( 338.337, 327.659, 27.4403, 0.6864 ) }
    apic_4 { pt3dadd( 337.266, 327.28, 27.442, 0.661 ) }
    apic_4 { pt3dadd( 336.169, 326.994, 27.4526, 0.6356 ) }
    apic_4 { pt3dadd( 335.095, 326.612, 27.5265, 0.6356 ) }
    apic_4 { pt3dadd( 334.214, 325.966, 28.0521, 0.6864 ) }
    apic_4 { pt3dadd( 333.549, 325.068, 28.6017, 0.7118 ) }
    apic_4 { pt3dadd( 333.012, 324.067, 28.8585, 0.6864 ) }
    apic_4 { pt3dadd( 332.611, 323.046, 29.5921, 0.661 ) }
    apic_4 { pt3dadd( 331.91, 322.149, 29.68, 0.7118 ) }
    apic_4 { pt3dadd( 331.16, 321.287, 29.68, 0.839 ) }
    apic_4 { pt3dadd( 330.539, 320.328, 29.68, 0.9406 ) }
    apic_4 { pt3dadd( 329.893, 319.385, 29.68, 1.0168 ) }
    apic_4 { pt3dadd( 329.152, 318.517, 29.68, 0.9914 ) }
    apic_4 { pt3dadd( 328.337, 317.714, 29.68, 0.966 ) }
    apic_4 { pt3dadd( 327.502, 316.933, 29.68, 0.8898 ) }
    apic_4 { pt3dadd( 326.569, 316.285, 29.68, 0.8898 ) }
    apic_4 { pt3dadd( 325.51, 315.871, 29.6794, 0.8898 ) }
    apic_4 { pt3dadd( 324.397, 315.635, 29.6752, 0.9152 ) }
    apic_4 { pt3dadd( 323.289, 315.372, 29.6503, 0.9152 ) }
    apic_4 { pt3dadd( 322.172, 315.183, 29.479, 0.9152 ) }
    apic_4 { pt3dadd( 321.135, 314.827, 28.7504, 0.9152 ) }
    apic_4 { pt3dadd( 320.105, 314.352, 28.4967, 0.9406 ) }
    apic_4 { pt3dadd( 319.184, 313.681, 28.2764, 0.9914 ) }
    apic_4 { pt3dadd( 318.286, 313.055, 27.4996, 1.0424 ) }
    apic_4 { pt3dadd( 317.516, 312.22, 27.1774, 1.0424 ) }
    apic_4 { pt3dadd( 317.012, 311.245, 26.4407, 0.9914 ) }
    apic_4 { pt3dadd( 316.674, 310.157, 26.3645, 0.966 ) }
    apic_4 { pt3dadd( 316.329, 309.072, 26.5868, 0.966 ) }
    apic_4 { pt3dadd( 315.696, 308.252, 27.3857, 0.9914 ) }
    apic_4 { pt3dadd( 314.72, 307.666, 27.4456, 0.9914 ) }
    apic_4 { pt3dadd( 313.635, 307.315, 27.4736, 0.9914 ) }
    apic_4 { pt3dadd( 312.51, 307.158, 27.6612, 1.0168 ) }
    apic_4 { pt3dadd( 311.422, 307.133, 28.4718, 0.9914 ) }
    apic_4 { pt3dadd( 310.341, 306.873, 28.8663, 0.966 ) }
    apic_4 { pt3dadd( 308.398, 306.718, 29.6797, 0.9914 ) }
    apic_4 { pt3dadd( 307.257, 306.789, 29.6778, 1.0932 ) }
    apic_4 { pt3dadd( 306.157, 307.082, 29.6654, 1.0932 ) }
    apic_4 { pt3dadd( 305.034, 306.97, 29.5758, 1.0932 ) }
    apic_4 { pt3dadd( 303.971, 306.662, 29.0195, 1.0168 ) }
    apic_4 { pt3dadd( 302.931, 306.355, 28.2274, 1.144 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 54/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 344.391, 330.395, 29.7847, 0.6864 ) }
    apic_3 { pt3dadd( 343.457, 329.343, 30.1529, 0.6864 ) }
    apic_3 { pt3dadd( 343.438, 328.294, 29.0584, 0.5848 ) }
    apic_3 { pt3dadd( 343.493, 327.177, 28.5768, 0.4322 ) }
    apic_3 { pt3dadd( 343.917, 326.151, 28.6832, 0.3814 ) }
    apic_3 { pt3dadd( 344.969, 325.844, 29.2998, 0.3814 ) }
    apic_3 { pt3dadd( 346.033, 325.526, 29.1292, 0.4576 ) }
    apic_3 { pt3dadd( 347.1, 325.273, 29.0035, 0.5338 ) }
    apic_3 { pt3dadd( 348.143, 324.976, 29.449, 0.5848 ) }
    apic_3 { pt3dadd( 349.239, 324.776, 29.4823, 0.5848 ) }
    apic_3 { pt3dadd( 350.353, 324.579, 29.5072, 0.5338 ) }
    apic_3 { pt3dadd( 351.454, 324.744, 29.4851, 0.4576 ) }
    apic_3 { pt3dadd( 352.573, 324.905, 29.6778, 0.4322 ) }
    apic_3 { pt3dadd( 353.672, 324.621, 29.6649, 0.4068 ) }
    apic_3 { pt3dadd( 354.783, 324.815, 29.5812, 0.4068 ) }
    apic_3 { pt3dadd( 355.875, 325.025, 29.0732, 0.4068 ) }
    apic_3 { pt3dadd( 356.984, 325.103, 29.4633, 0.4576 ) }
    apic_3 { pt3dadd( 358.066, 325.429, 29.7438, 0.5338 ) }
    apic_3 { pt3dadd( 359.184, 325.552, 30.163, 0.5592 ) }
    apic_3 { pt3dadd( 360.233, 325.865, 30.8834, 0.5592 ) }
    apic_3 { pt3dadd( 361.316, 326.058, 31.5428, 0.5338 ) }
    apic_3 { pt3dadd( 362.393, 326.387, 31.9113, 0.5592 ) }
    apic_3 { pt3dadd( 363.519, 326.583, 31.8643, 0.6102 ) }
    apic_3 { pt3dadd( 364.397, 327.294, 31.6243, 0.661 ) }
    apic_3 { pt3dadd( 365.157, 328.069, 31.0089, 0.7118 ) }
    apic_3 { pt3dadd( 366.224, 328.227, 31.6823, 0.7118 ) }
    apic_3 { pt3dadd( 367.239, 328.288, 32.9196, 0.6864 ) }
    apic_3 { pt3dadd( 368.312, 328.645, 33.04, 0.6102 ) }
    apic_3 { pt3dadd( 369.342, 329.131, 33.0389, 0.5592 ) }
    apic_3 { pt3dadd( 370.4, 329.553, 33.0341, 0.5592 ) }
    apic_3 { pt3dadd( 371.519, 329.767, 32.9986, 0.5848 ) }
    apic_3 { pt3dadd( 372.622, 330.028, 32.7964, 0.661 ) }
    apic_3 { pt3dadd( 373.715, 330.006, 32.0247, 0.7372 ) }
    apic_3 { pt3dadd( 374.821, 329.776, 31.9421, 0.8136 ) }
    apic_3 { pt3dadd( 375.862, 329.31, 32.0457, 0.8136 ) }
    apic_3 { pt3dadd( 376.934, 329.054, 32.6729, 0.7626 ) }
    apic_3 { pt3dadd( 378.012, 328.729, 32.8661, 0.7118 ) }
    apic_3 { pt3dadd( 379.071, 328.417, 32.3697, 0.6864 ) }
    apic_3 { pt3dadd( 380.142, 328.59, 32.87, 0.6864 ) }
    apic_3 { pt3dadd( 381.206, 328.399, 32.1664, 0.6864 ) }
    apic_3 { pt3dadd( 382.213, 327.881, 31.92, 0.7118 ) }
    apic_3 { pt3dadd( 383.168, 327.261, 31.92, 0.7118 ) }
    apic_3 { pt3dadd( 383.874, 326.372, 31.9194, 0.661 ) }
    apic_3 { pt3dadd( 384.605, 325.493, 31.9178, 0.5084 ) }
    apic_3 { pt3dadd( 385.441, 324.714, 31.9105, 0.3814 ) }
    apic_3 { pt3dadd( 386.389, 324.09, 31.8732, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_3 { pt3dadd( 387.408, 323.638, 31.4913, 0.4576 ) }
    apic_3 { pt3dadd( 388.38, 323.14, 31.547, 0.5848 ) }
    apic_3 { pt3dadd( 389.447, 322.764, 31.7064, 0.661 ) }
    apic_3 { pt3dadd( 390.471, 322.378, 30.9786, 0.6864 ) }
    apic_3 { pt3dadd( 391.451, 321.806, 30.7969, 0.661 ) }
    apic_3 { pt3dadd( 392.334, 321.078, 30.7863, 0.661 ) }
    apic_3 { pt3dadd( 393.32, 320.504, 30.725, 0.661 ) }
    apic_3 { pt3dadd( 394.256, 319.925, 30.2156, 0.7118 ) }
    apic_3 { pt3dadd( 395.04, 319.173, 29.4017, 0.661 ) }
    apic_3 { pt3dadd( 395.858, 318.444, 28.7302, 0.6102 ) }
    apic_3 { pt3dadd( 396.822, 317.943, 29.2082, 0.5338 ) }
    apic_3 { pt3dadd( 397.747, 318.471, 29.9183, 0.6864 ) }
    apic_3 { pt3dadd( 398.573, 319.337, 30.403, 0.6102 ) }
    apic_3 { pt3dadd( 399.612, 319.519, 29.4549, 0.7118 ) }
    apic_3 { pt3dadd( 400.696, 319.519, 28.5933, 0.788 ) }
    apic_3 { pt3dadd( 401.811, 319.519, 28.0283, 0.788 ) }
    apic_3 { pt3dadd( 402.922, 319.519, 27.4403, 0.7372 ) }
    apic_3 { pt3dadd( 404.066, 319.519, 27.442, 0.661 ) }
    apic_3 { pt3dadd( 405.211, 319.519, 27.4534, 0.6102 ) }
    apic_3 { pt3dadd( 406.354, 319.52, 27.5416, 0.5338 ) }
    apic_3 { pt3dadd( 407.462, 319.528, 28.1294, 0.4576 ) }
    apic_3 { pt3dadd( 408.584, 319.582, 28.5664, 0.4068 ) }
    apic_3 { pt3dadd( 409.661, 319.914, 28.5984, 0.3814 ) }
    apic_3 { pt3dadd( 410.574, 320.6, 28.7246, 0.3814 ) }
    apic_3 { pt3dadd( 411.611, 320.982, 29.0814, 0.4576 ) }
    apic_3 { pt3dadd( 412.068, 321.078, 29.3496, 0.5338 ) }
    apic_3 { pt3dadd( 413.021, 321.702, 29.4126, 0.6356 ) }
    apic_3 { pt3dadd( 413.966, 322.292, 28.8593, 0.6864 ) }
    apic_3 { pt3dadd( 414.897, 322.862, 29.4944, 0.7118 ) }
    apic_3 { pt3dadd( 415.85, 323.334, 30.4794, 0.7118 ) }
    apic_3 { pt3dadd( 416.871, 323.811, 30.8448, 0.7626 ) }
    apic_3 { pt3dadd( 417.967, 324.079, 31.0562, 0.839 ) }
    apic_3 { pt3dadd( 419.06, 324.024, 31.8296, 0.839 ) }
    apic_3 { pt3dadd( 420.156, 323.728, 31.9172, 0.839 ) }
    apic_3 { pt3dadd( 421.293, 323.663, 31.9004, 0.8136 ) }
    apic_3 { pt3dadd( 422.415, 323.84, 31.7565, 0.9152 ) }
    apic_3 { pt3dadd( 423.643, 323.506, 32.7004, 0.8136 ) }
    apic_3 { pt3dadd( 424.611, 323.032, 32.0516, 0.7118 ) }
    apic_3 { pt3dadd( 425.178, 322.338, 30.4606, 0.661 ) }
    apic_3 { pt3dadd( 425.632, 321.376, 29.7385, 0.6864 ) }
    apic_3 { pt3dadd( 426.482, 320.617, 29.9264, 0.7118 ) }
    apic_3 { pt3dadd( 427.516, 320.231, 30.5648, 0.6864 ) }
    apic_3 { pt3dadd( 428.517, 319.742, 30.1132, 0.5848 ) }
    apic_3 { pt3dadd( 429.482, 319.165, 30.3873, 0.483 ) }
    apic_3 { pt3dadd( 430.145, 318.459, 29.374, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 45/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 302.931, 306.355, 28.2274, 1.144 ) }
    apic_6 { pt3dadd( 301.21, 305.012, 28.5715, 0.966 ) }
    apic_6 { pt3dadd( 300.358, 304.249, 28.609, 0.966 ) }
    apic_6 { pt3dadd( 299.385, 303.661, 28.7977, 0.9406 ) }
    apic_6 { pt3dadd( 298.411, 303.155, 29.5212, 0.9152 ) }
    apic_6 { pt3dadd( 297.423, 302.597, 29.68, 1.0424 ) }
    apic_6 { pt3dadd( 296.453, 301.997, 29.68, 1.0424 ) }
    apic_6 { pt3dadd( 295.437, 301.479, 29.68, 1.0168 ) }
    apic_6 { pt3dadd( 294.418, 300.967, 29.68, 0.9914 ) }
    apic_6 { pt3dadd( 293.385, 300.482, 29.68, 0.9914 ) }
    apic_6 { pt3dadd( 292.279, 300.203, 29.68, 0.9914 ) }
    apic_6 { pt3dadd( 291.221, 299.791, 29.6789, 0.9914 ) }
    apic_6 { pt3dadd( 290.272, 299.161, 29.675, 1.0168 ) }
    apic_6 { pt3dadd( 289.321, 298.529, 29.6551, 0.9914 ) }
    apic_6 { pt3dadd( 288.439, 297.803, 29.5655, 0.966 ) }
    apic_6 { pt3dadd( 287.57, 296.741, 29.6834, 0.9152 ) }
    apic_6 { pt3dadd( 286.853, 295.851, 29.6971, 0.9406 ) }
    apic_6 { pt3dadd( 286.112, 294.982, 29.7511, 0.966 ) }
    apic_6 { pt3dadd( 285.57, 293.991, 30.0852, 0.966 ) }
    apic_6 { pt3dadd( 285.04, 293.022, 30.7418, 0.9406 ) }
    apic_6 { pt3dadd( 284.329, 292.141, 30.8465, 0.9406 ) }
    apic_6 { pt3dadd( 283.341, 291.587, 31.0346, 0.9914 ) }
    apic_6 { pt3dadd( 282.266, 291.389, 31.7458, 0.9914 ) }
    apic_6 { pt3dadd( 281.148, 291.458, 31.404, 0.8898 ) }
    apic_6 { pt3dadd( 280.066, 291.736, 30.9691, 0.4576 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 70/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 302.931, 306.355, 28.2274, 1.144 ) }
    apic_5 { pt3dadd( 301.694, 305.876, 26.882, 0.6356 ) }
    apic_5 { pt3dadd( 300.594, 305.797, 26.2632, 0.5338 ) }
    apic_5 { pt3dadd( 299.461, 305.83, 25.9182, 0.5084 ) }
    apic_5 { pt3dadd( 298.568, 305.999, 24.3065, 0.5338 ) }
    apic_5 { pt3dadd( 298.232, 306.8, 22.6534, 0.5848 ) }
    apic_5 { pt3dadd( 297.715, 307.792, 22.9239, 0.6356 ) }
    apic_5 { pt3dadd( 296.957, 308.646, 23.1344, 0.6864 ) }
    apic_5 { pt3dadd( 296.345, 309.561, 23.7616, 0.6864 ) }
    apic_5 { pt3dadd( 295.792, 310.539, 24.1707, 0.7118 ) }
    apic_5 { pt3dadd( 295.779, 311.631, 24.6926, 0.7118 ) }
    apic_5 { pt3dadd( 296.362, 312.58, 25.1787, 0.7118 ) }
    apic_5 { pt3dadd( 296.927, 313.559, 25.1961, 0.7118 ) }
    apic_5 { pt3dadd( 296.98, 314.699, 25.1717, 0.7626 ) }
    apic_5 { pt3dadd( 296.97, 315.841, 25.016, 0.839 ) }
    apic_5 { pt3dadd( 296.902, 316.904, 24.0873, 0.8644 ) }
    apic_5 { pt3dadd( 296.588, 317.921, 23.5192, 0.8644 ) }
    apic_5 { pt3dadd( 296.25, 318.986, 24.0565, 0.7626 ) }
    apic_5 { pt3dadd( 295.995, 320.098, 24.0598, 0.661 ) }
    apic_5 { pt3dadd( 295.693, 321.193, 23.9672, 0.5084 ) }
    apic_5 { pt3dadd( 295.574, 322.304, 23.8165, 0.4322 ) }
    apic_5 { pt3dadd( 295.355, 323.409, 24.08, 0.3814 ) }
    apic_5 { pt3dadd( 294.855, 324.435, 24.0806, 0.4068 ) }
    apic_5 { pt3dadd( 294.336, 325.45, 24.0834, 0.4068 ) }
    apic_5 { pt3dadd( 293.823, 326.468, 24.0996, 0.3814 ) }
    apic_5 { pt3dadd( 293.264, 327.462, 24.1884, 0.356 ) }
    apic_5 { pt3dadd( 292.858, 328.48, 24.7195, 0.4068 ) }
    apic_5 { pt3dadd( 292.723, 329.519, 25.8356, 0.5084 ) }
    apic_5 { pt3dadd( 292.247, 330.529, 26.3231, 0.5592 ) }
    apic_5 { pt3dadd( 291.574, 331.453, 26.3357, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_5 { pt3dadd( 290.887, 332.363, 26.4085, 0.5084 ) }
    apic_5 { pt3dadd( 289.975, 332.936, 27.0318, 0.5084 ) }
    apic_5 { pt3dadd( 289.039, 333.543, 27.5408, 0.5338 ) }
    apic_5 { pt3dadd( 288.277, 334.321, 28.1537, 0.5084 ) }
    apic_5 { pt3dadd( 287.857, 335.36, 28.5566, 0.483 ) }
    apic_5 { pt3dadd( 287.406, 336.404, 28.5368, 0.4576 ) }
    apic_5 { pt3dadd( 286.492, 336.982, 28.3749, 0.4322 ) }
    apic_5 { pt3dadd( 285.553, 337.443, 28.3604, 0.4322 ) }
    apic_5 { pt3dadd( 285.049, 338.259, 29.6573, 0.4322 ) }
    apic_5 { pt3dadd( 284.603, 339.301, 29.694, 0.483 ) }
    apic_5 { pt3dadd( 284.178, 340.339, 29.7825, 0.483 ) }
    apic_5 { pt3dadd( 283.191, 340.817, 30.3472, 0.483 ) }
    apic_5 { pt3dadd( 282.165, 341.179, 29.6624, 0.4322 ) }
    apic_5 { pt3dadd( 281.403, 341.914, 29.1194, 0.4322 ) }
    apic_5 { pt3dadd( 280.973, 342.843, 29.9606, 0.4322 ) }
    apic_5 { pt3dadd( 280.643, 343.815, 30.9523, 0.4576 ) }
    apic_5 { pt3dadd( 280.392, 344.886, 31.6383, 0.4068 ) }
    apic_5 { pt3dadd( 279.918, 345.904, 31.9096, 0.3304 ) }
    apic_5 { pt3dadd( 279.684, 346.996, 31.8511, 0.2796 ) }
    apic_5 { pt3dadd( 280.221, 347.903, 31.2326, 0.305 ) }
    apic_5 { pt3dadd( 281.273, 348.298, 31.1212, 0.3814 ) }
    apic_5 { pt3dadd( 282.216, 348.566, 32.4458, 0.4068 ) }
    apic_5 { pt3dadd( 282.704, 349.245, 34.2868, 0.4068 ) }
    apic_5 { pt3dadd( 283.346, 350.078, 35.2268, 0.356 ) }
    apic_5 { pt3dadd( 283.517, 351.151, 35.2702, 0.356 ) }
    apic_5 { pt3dadd( 284.138, 351.968, 35.2271, 0.3304 ) }
    apic_5 { pt3dadd( 285.135, 352.1, 35.8907, 0.3304 ) }
    apic_5 { pt3dadd( 285.96, 352.382, 37.588, 0.2796 ) }
    apic_5 { pt3dadd( 286.915, 352.009, 38.64, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_6 (entry count 29/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 280.066, 291.736, 30.9691, 0.4576 ) }
    apic_18 { pt3dadd( 279.445, 292.417, 30.7756, 0.5338 ) }
    apic_18 { pt3dadd( 278.543, 293.107, 30.5287, 0.6864 ) }
    apic_18 { pt3dadd( 277.979, 294.002, 29.5828, 0.7372 ) }
    apic_18 { pt3dadd( 277.723, 295.0, 28.4183, 0.6864 ) }
    apic_18 { pt3dadd( 277.477, 296.016, 27.4042, 0.5338 ) }
    apic_18 { pt3dadd( 276.661, 296.694, 26.6801, 0.4322 ) }
    apic_18 { pt3dadd( 275.79, 296.44, 25.3028, 0.356 ) }
    apic_18 { pt3dadd( 274.712, 296.179, 25.2496, 0.3814 ) }
    apic_18 { pt3dadd( 273.773, 295.584, 25.4876, 0.3814 ) }
    apic_18 { pt3dadd( 273.169, 294.682, 26.1447, 0.4322 ) }
    apic_18 { pt3dadd( 272.779, 293.667, 25.4699, 0.3814 ) }
    apic_18 { pt3dadd( 272.717, 292.611, 24.4409, 0.356 ) }
    apic_18 { pt3dadd( 272.647, 291.492, 24.4583, 0.2796 ) }
    apic_18 { pt3dadd( 272.183, 290.499, 24.1301, 0.2796 ) }
    apic_18 { pt3dadd( 271.512, 289.628, 23.8146, 0.305 ) }
    apic_18 { pt3dadd( 271.814, 288.631, 22.96, 0.4576 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 46/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 280.066, 291.736, 30.9691, 0.4576 ) }
    apic_7 { pt3dadd( 278.921, 291.396, 31.9684, 0.8136 ) }
    apic_7 { pt3dadd( 278.371, 290.489, 32.8994, 0.9406 ) }
    apic_7 { pt3dadd( 278.032, 289.402, 33.04, 0.9406 ) }
    apic_7 { pt3dadd( 277.658, 288.323, 33.0411, 0.8644 ) }
    apic_7 { pt3dadd( 277.207, 287.274, 33.0462, 0.788 ) }
    apic_7 { pt3dadd( 276.642, 286.283, 33.0744, 0.7626 ) }
    apic_7 { pt3dadd( 275.911, 285.406, 33.2055, 0.7626 ) }
    apic_7 { pt3dadd( 275.137, 284.633, 33.899, 0.7372 ) }
    apic_7 { pt3dadd( 274.329, 283.834, 34.1578, 0.7372 ) }
    apic_7 { pt3dadd( 273.506, 283.04, 34.1513, 0.7372 ) }
    apic_7 { pt3dadd( 272.638, 282.299, 34.1236, 0.788 ) }
    apic_7 { pt3dadd( 271.674, 281.687, 33.9755, 0.788 ) }
    apic_7 { pt3dadd( 270.73, 281.122, 33.3152, 0.8136 ) }
    apic_7 { pt3dadd( 269.716, 280.631, 32.9095, 0.8136 ) }
    apic_7 { pt3dadd( 268.681, 280.274, 32.2588, 0.8644 ) }
    apic_7 { pt3dadd( 267.709, 279.866, 31.2015, 0.8644 ) }
    apic_7 { pt3dadd( 266.678, 279.425, 30.7135, 0.839 ) }
    apic_7 { pt3dadd( 265.648, 278.992, 30.2686, 0.7626 ) }
    apic_7 { pt3dadd( 264.734, 278.387, 29.5319, 0.7372 ) }
    apic_7 { pt3dadd( 263.859, 277.724, 28.7868, 0.7372 ) }
    apic_7 { pt3dadd( 263.23, 276.787, 28.5628, 0.7626 ) }
    apic_7 { pt3dadd( 262.68, 275.789, 28.5751, 0.7372 ) }
    apic_7 { pt3dadd( 262.151, 274.783, 28.6457, 0.7118 ) }
    apic_7 { pt3dadd( 261.739, 273.744, 29.0909, 0.6864 ) }
    apic_7 { pt3dadd( 261.246, 272.756, 29.7576, 0.7118 ) }
    apic_7 { pt3dadd( 260.728, 271.776, 30.3254, 0.7372 ) }
    apic_7 { pt3dadd( 260.082, 270.856, 30.7815, 0.7626 ) }
    apic_7 { pt3dadd( 259.439, 269.912, 30.8034, 0.7372 ) }
    apic_7 { pt3dadd( 258.659, 269.076, 30.8143, 0.7118 ) }
    apic_7 { pt3dadd( 257.84, 268.277, 30.8574, 0.6864 ) }
    apic_7 { pt3dadd( 256.993, 267.513, 31.0363, 0.7118 ) }
    apic_7 { pt3dadd( 256.065, 266.966, 31.8489, 0.7626 ) }
    apic_7 { pt3dadd( 255.061, 266.684, 32.9176, 0.8136 ) }
    apic_7 { pt3dadd( 253.973, 266.65, 33.754, 0.8136 ) }
    apic_7 { pt3dadd( 252.852, 266.553, 34.16, 0.7626 ) }
    apic_7 { pt3dadd( 251.808, 266.107, 34.16, 0.7372 ) }
    apic_7 { pt3dadd( 250.903, 265.414, 34.16, 0.7372 ) }
    apic_7 { pt3dadd( 250.09, 264.609, 34.16, 0.7626 ) }
    apic_7 { pt3dadd( 249.296, 263.786, 34.16, 0.788 ) }
    apic_7 { pt3dadd( 248.557, 262.916, 34.1603, 0.839 ) }
    apic_7 { pt3dadd( 247.957, 261.943, 34.162, 0.8898 ) }
    apic_7 { pt3dadd( 247.477, 260.914, 34.1698, 0.8644 ) }
    apic_7 { pt3dadd( 247.064, 259.852, 34.2149, 0.8136 ) }
    apic_7 { pt3dadd( 246.7, 258.789, 34.5103, 0.7626 ) }
    apic_7 { pt3dadd( 246.734, 257.685, 35.1229, 0.7626 ) }
    apic_7 { pt3dadd( 247.034, 256.624, 34.585, 0.7118 ) }
    apic_7 { pt3dadd( 247.016, 255.503, 34.16, 0.661 ) }
    apic_7 { pt3dadd( 246.666, 254.421, 34.1606, 0.6356 ) }
    apic_7 { pt3dadd( 246.286, 253.347, 34.1631, 0.7372 ) }
    apic_7 { pt3dadd( 245.849, 252.294, 34.1802, 0.8644 ) }
    apic_7 { pt3dadd( 245.101, 251.435, 34.2518, 0.9406 ) }
    apic_7 { pt3dadd( 244.234, 250.711, 34.5565, 0.8898 ) }
    apic_7 { pt3dadd( 243.292, 250.13, 35.2167, 0.788 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_7 { pt3dadd( 242.266, 249.654, 35.3962, 0.7118 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 1/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 242.266, 249.654, 35.3962, 0.7118 ) }
    apic_17 { pt3dadd( 242.871, 249.735, 36.12, 0.6864 ) }
    apic_17 { pt3dadd( 243.1, 249.163, 36.12, 0.3814 ) }
    apic_17 { pt3dadd( 243.1, 248.362, 36.12, 0.2796 ) }
    apic_17 { pt3dadd( 243.304, 247.765, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 243.647, 247.308, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 243.913, 246.773, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.206, 246.265, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.358, 246.074, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.511, 245.883, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.587, 245.617, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.587, 245.274, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.587, 245.045, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 244.587, 244.244, 36.12, 0.2542 ) }
    apic_17 { pt3dadd( 244.587, 243.901, 36.12, 0.2796 ) }
    apic_17 { pt3dadd( 244.587, 243.558, 36.12, 0.305 ) }
    apic_17 { pt3dadd( 244.841, 243.125, 36.12, 0.2542 ) }
    apic_17 { pt3dadd( 245.426, 242.68, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 245.883, 242.337, 36.12, 0.2288 ) }
    apic_17 { pt3dadd( 246.38, 242.033, 36.12, 0.2796 ) }
    apic_17 { pt3dadd( 246.761, 241.613, 36.12, 0.3814 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 22/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 242.266, 249.654, 35.3962, 0.7118 ) }
    apic_8 { pt3dadd( 241.235, 249.259, 35.9965, 0.6864 ) }
    apic_8 { pt3dadd( 240.286, 248.747, 36.7604, 0.6864 ) }
    apic_8 { pt3dadd( 239.438, 248.039, 37.2198, 0.6864 ) }
    apic_8 { pt3dadd( 238.493, 247.59, 36.1746, 0.6864 ) }
    apic_8 { pt3dadd( 237.508, 247.12, 35.3766, 0.6864 ) }
    apic_8 { pt3dadd( 236.447, 246.724, 35.0809, 0.6864 ) }
    apic_8 { pt3dadd( 235.605, 246.047, 34.2955, 0.7118 ) }
    apic_8 { pt3dadd( 234.747, 245.294, 34.2216, 0.7372 ) }
    apic_8 { pt3dadd( 233.763, 244.728, 34.4999, 0.7372 ) }
    apic_8 { pt3dadd( 232.839, 244.131, 35.1772, 0.6864 ) }
    apic_8 { pt3dadd( 232.001, 243.355, 35.2803, 0.661 ) }
    apic_8 { pt3dadd( 231.15, 242.591, 35.2814, 0.7118 ) }
    apic_8 { pt3dadd( 230.188, 241.975, 35.2864, 0.8136 ) }
    apic_8 { pt3dadd( 229.242, 241.337, 35.3122, 0.8898 ) }
    apic_8 { pt3dadd( 228.332, 240.645, 35.4315, 0.9152 ) }
    apic_8 { pt3dadd( 227.425, 240.025, 36.0444, 0.8898 ) }
    apic_8 { pt3dadd( 226.447, 239.488, 36.6184, 0.839 ) }
    apic_8 { pt3dadd( 225.602, 238.861, 37.599, 0.7626 ) }
    apic_8 { pt3dadd( 224.71, 238.271, 38.498, 0.6864 ) }
    apic_8 { pt3dadd( 223.867, 237.504, 38.64, 0.6356 ) }
    apic_8 { pt3dadd( 223.023, 236.732, 38.6394, 0.6102 ) }
    apic_8 { pt3dadd( 222.079, 236.09, 38.6378, 0.6356 ) }
    apic_8 { pt3dadd( 221.189, 235.372, 38.6294, 0.6864 ) }
    apic_8 { pt3dadd( 220.219, 234.773, 38.5851, 0.7372 ) }
    apic_8 { pt3dadd( 219.259, 234.188, 38.274, 0.7372 ) }
    apic_8 { pt3dadd( 218.514, 233.392, 37.5623, 0.661 ) }
    apic_8 { pt3dadd( 217.904, 232.428, 37.5332, 0.6102 ) }
    apic_8 { pt3dadd( 217.33, 231.445, 37.5906, 0.661 ) }
    apic_8 { pt3dadd( 216.838, 230.469, 38.1329, 0.788 ) }
    apic_8 { pt3dadd( 216.083, 229.69, 38.9603, 0.8898 ) }
    apic_8 { pt3dadd( 215.335, 228.906, 39.7942, 0.8898 ) }
    apic_8 { pt3dadd( 214.626, 228.039, 40.2357, 0.9152 ) }
    apic_8 { pt3dadd( 214.003, 227.123, 40.901, 0.966 ) }
    apic_8 { pt3dadd( 213.367, 226.205, 41.3392, 1.0168 ) }
    apic_8 { pt3dadd( 213.126, 225.128, 41.9723, 0.9914 ) }
    apic_8 { pt3dadd( 212.725, 224.06, 42.0, 0.8898 ) }
    apic_8 { pt3dadd( 212.21, 223.049, 42.0, 0.8644 ) }
    apic_8 { pt3dadd( 211.559, 222.117, 42.0, 0.8136 ) }
    apic_8 { pt3dadd( 211.352, 220.999, 42.0, 0.7626 ) }
    apic_8 { pt3dadd( 211.034, 219.912, 42.0, 0.6102 ) }
    apic_8 { pt3dadd( 210.531, 218.898, 42.0, 0.5592 ) }
    apic_8 { pt3dadd( 209.529, 218.576, 42.0, 0.6356 ) }
    apic_8 { pt3dadd( 208.461, 218.963, 41.9997, 0.7626 ) }
    apic_8 { pt3dadd( 207.327, 219.074, 41.9969, 0.8136 ) }
    apic_8 { pt3dadd( 206.183, 219.061, 41.9782, 0.7626 ) }
    apic_8 { pt3dadd( 205.048, 218.962, 41.8275, 0.6864 ) }
    apic_8 { pt3dadd( 203.638, 219.001, 41.5069, 0.6356 ) }
    apic_8 { pt3dadd( 202.612, 218.632, 40.9072, 0.6102 ) }
    apic_8 { pt3dadd( 201.801, 217.83, 40.88, 0.661 ) }
    apic_8 { pt3dadd( 201.161, 216.885, 40.88, 0.7626 ) }
    apic_8 { pt3dadd( 200.431, 216.004, 40.88, 0.8898 ) }
    apic_8 { pt3dadd( 199.792, 215.059, 40.8803, 0.966 ) }
    apic_8 { pt3dadd( 199.063, 214.178, 40.8811, 0.9914 ) }
    apic_8 { pt3dadd( 198.422, 213.234, 40.8853, 1.0168 ) }
    apic_8 { pt3dadd( 197.691, 212.354, 40.9049, 1.0424 ) }
    apic_8 { pt3dadd( 197.047, 211.413, 41.0099, 1.0424 ) }
    apic_8 { pt3dadd( 196.307, 210.606, 41.6604, 0.9914 ) }
    apic_8 { pt3dadd( 195.508, 209.805, 42.0216, 0.9152 ) }
    apic_8 { pt3dadd( 194.705, 208.99, 42.084, 0.839 ) }
    apic_8 { pt3dadd( 193.934, 208.166, 42.4077, 0.788 ) }
    apic_8 { pt3dadd( 193.512, 207.273, 43.717, 0.7372 ) }
    apic_8 { pt3dadd( 193.782, 206.199, 44.2364, 0.7118 ) }
    apic_8 { pt3dadd( 193.286, 205.382, 44.2072, 0.661 ) }
    apic_8 { pt3dadd( 192.152, 205.267, 44.023, 0.6864 ) }
    apic_8 { pt3dadd( 191.137, 204.895, 43.2967, 0.7372 ) }
    apic_8 { pt3dadd( 190.299, 204.127, 43.12, 0.8644 ) }
    apic_8 { pt3dadd( 189.51, 203.298, 43.12, 0.9406 ) }
    apic_8 { pt3dadd( 188.815, 202.398, 43.12, 1.0168 ) }
    apic_8 { pt3dadd( 188.357, 201.354, 43.12, 1.0168 ) }
    apic_8 { pt3dadd( 188.127, 200.238, 43.12, 1.0168 ) }
    apic_8 { pt3dadd( 187.661, 199.194, 43.12, 0.966 ) }
    apic_8 { pt3dadd( 187.283, 198.12, 43.12, 0.8898 ) }
    apic_8 { pt3dadd( 186.883, 197.051, 43.1206, 0.7626 ) }
    apic_8 { pt3dadd( 186.427, 196.007, 43.1245, 0.661 ) }
    apic_8 { pt3dadd( 185.71, 195.129, 43.1432, 0.661 ) }
    apic_8 { pt3dadd( 184.711, 194.589, 43.248, 0.7626 ) }
    apic_8 { pt3dadd( 183.631, 194.516, 43.8964, 0.8644 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_8 { pt3dadd( 182.545, 194.812, 44.2403, 0.8898 ) }
    apic_8 { pt3dadd( 181.404, 194.89, 44.2414, 0.8644 ) }
    apic_8 { pt3dadd( 180.314, 195.206, 44.2495, 0.788 ) }
    apic_8 { pt3dadd( 179.221, 195.534, 44.2963, 0.7626 ) }
    apic_8 { pt3dadd( 178.108, 195.653, 44.6379, 0.7118 ) }
    apic_8 { pt3dadd( 177.07, 195.303, 45.3152, 0.7626 ) }
    apic_8 { pt3dadd( 176.044, 194.816, 45.4163, 0.788 ) }
    apic_8 { pt3dadd( 175.249, 194.002, 45.6044, 0.8644 ) }
    apic_8 { pt3dadd( 174.688, 193.058, 46.3226, 0.8644 ) }
    apic_8 { pt3dadd( 174.117, 192.078, 46.48, 0.8898 ) }
    apic_8 { pt3dadd( 173.556, 190.418, 47.4916, 0.8898 ) }
    apic_8 { pt3dadd( 173.086, 189.395, 47.6, 0.8136 ) }
    apic_8 { pt3dadd( 172.459, 188.441, 47.6, 0.788 ) }
    apic_8 { pt3dadd( 171.784, 187.518, 47.6, 0.7118 ) }
    apic_8 { pt3dadd( 170.989, 186.717, 47.6006, 0.788 ) }
    apic_8 { pt3dadd( 170.072, 186.034, 47.6025, 0.9152 ) }
    apic_8 { pt3dadd( 169.133, 185.392, 47.6129, 1.1186 ) }
    apic_8 { pt3dadd( 168.088, 184.943, 47.677, 1.1948 ) }
    apic_8 { pt3dadd( 166.049, 184.055, 48.7388, 1.0424 ) }
    apic_8 { pt3dadd( 165.021, 183.582, 49.0641, 0.9914 ) }
    apic_8 { pt3dadd( 164.167, 183.08, 50.3793, 0.966 ) }
    apic_8 { pt3dadd( 163.392, 182.323, 51.1792, 0.9406 ) }
    apic_8 { pt3dadd( 162.988, 181.316, 51.9641, 0.9152 ) }
    apic_8 { pt3dadd( 162.506, 180.283, 52.1178, 0.9152 ) }
    apic_8 { pt3dadd( 161.974, 179.277, 52.2813, 0.8644 ) }
    apic_8 { pt3dadd( 161.413, 178.33, 52.9474, 0.8644 ) }
    apic_8 { pt3dadd( 160.665, 177.476, 53.193, 0.788 ) }
    apic_8 { pt3dadd( 159.866, 176.656, 53.172, 0.7372 ) }
    apic_8 { pt3dadd( 159.1, 175.809, 53.0838, 0.5848 ) }
    apic_8 { pt3dadd( 158.588, 174.833, 52.5938, 0.5592 ) }
    apic_8 { pt3dadd( 158.477, 173.726, 52.9682, 0.5848 ) }
    apic_8 { pt3dadd( 158.081, 172.681, 53.2059, 0.661 ) }
    apic_8 { pt3dadd( 157.302, 171.845, 53.2258, 0.6356 ) }
    apic_8 { pt3dadd( 156.474, 171.058, 53.3151, 0.5592 ) }
    apic_8 { pt3dadd( 155.649, 170.346, 53.949, 0.4322 ) }
    apic_8 { pt3dadd( 154.743, 169.695, 54.3777, 0.4068 ) }
    apic_8 { pt3dadd( 154.734, 168.655, 54.9545, 0.4576 ) }
    apic_8 { pt3dadd( 154.23, 167.747, 55.4854, 0.6102 ) }
    apic_8 { pt3dadd( 153.398, 166.966, 55.6508, 0.7118 ) }
    apic_8 { pt3dadd( 152.685, 166.148, 56.406, 0.7372 ) }
    apic_8 { pt3dadd( 151.856, 165.382, 56.8282, 0.7118 ) }
    apic_8 { pt3dadd( 151.193, 164.518, 57.626, 0.6864 ) }
    apic_8 { pt3dadd( 150.285, 163.88, 58.1879, 0.7118 ) }
    apic_8 { pt3dadd( 149.479, 163.121, 58.7664, 0.7118 ) }
    apic_8 { pt3dadd( 148.627, 162.358, 58.7507, 0.6864 ) }
    apic_8 { pt3dadd( 147.656, 161.765, 58.5628, 0.6102 ) }
    apic_8 { pt3dadd( 146.707, 161.209, 57.8754, 0.5592 ) }
    apic_8 { pt3dadd( 145.818, 160.511, 58.0233, 0.5592 ) }
    apic_8 { pt3dadd( 145.129, 159.651, 58.7017, 0.5592 ) }
    apic_8 { pt3dadd( 144.417, 158.762, 58.6986, 0.5592 ) }
    apic_8 { pt3dadd( 143.801, 157.865, 58.053, 0.5084 ) }
    apic_8 { pt3dadd( 143.065, 157.067, 57.2216, 0.5084 ) }
    apic_8 { pt3dadd( 142.579, 156.1, 56.5673, 0.5592 ) }
    apic_8 { pt3dadd( 142.483, 154.962, 56.6121, 0.6864 ) }
    apic_8 { pt3dadd( 142.12, 153.917, 56.9601, 0.7372 ) }
    apic_8 { pt3dadd( 141.476, 153.052, 57.7864, 0.7118 ) }
    apic_8 { pt3dadd( 140.609, 152.381, 58.3288, 0.6102 ) }
    apic_8 { pt3dadd( 139.543, 152.048, 58.1406, 0.5848 ) }
    apic_8 { pt3dadd( 138.437, 151.964, 58.676, 0.5592 ) }
    apic_8 { pt3dadd( 137.37, 151.596, 58.8423, 0.5084 ) }
    apic_8 { pt3dadd( 136.4, 151.003, 59.0344, 0.4322 ) }
    apic_8 { pt3dadd( 135.418, 150.778, 59.9962, 0.3814 ) }
    apic_8 { pt3dadd( 134.433, 151.219, 60.7785, 0.4322 ) }
    apic_8 { pt3dadd( 133.648, 151.866, 61.992, 0.483 ) }
    apic_8 { pt3dadd( 132.842, 152.596, 62.8023, 0.5592 ) }
    apic_8 { pt3dadd( 132.079, 153.404, 63.4197, 0.5848 ) }
    apic_8 { pt3dadd( 131.414, 154.288, 63.9808, 0.661 ) }
    apic_8 { pt3dadd( 130.688, 155.15, 64.4277, 0.6864 ) }
    apic_8 { pt3dadd( 129.816, 155.884, 64.5876, 0.6864 ) }
    apic_8 { pt3dadd( 128.814, 156.156, 65.52, 0.4576 ) }
    apic_8 { pt3dadd( 128.586, 156.042, 68.88, 0.2288 ) }
    apic_8 { pt3dadd( 128.242, 155.584, 68.88, 0.3814 ) }
    apic_8 { pt3dadd( 127.937, 155.089, 68.88, 0.4068 ) }
    apic_8 { pt3dadd( 127.67, 154.554, 68.88, 0.3814 ) }
    apic_8 { pt3dadd( 127.556, 153.868, 68.88, 0.3304 ) }
    apic_8 { pt3dadd( 127.442, 153.182, 68.88, 0.356 ) }
    apic_8 { pt3dadd( 127.251, 152.572, 68.88, 0.4068 ) }
    apic_8 { pt3dadd( 126.87, 152.152, 68.88, 0.4576 ) }
    apic_8 { pt3dadd( 126.691, 151.53, 68.88, 0.4322 ) }
    apic_8 { pt3dadd( 126.514, 150.906, 68.88, 0.4576 ) }
    apic_8 { pt3dadd( 126.183, 150.436, 68.88, 0.4576 ) }
    apic_8 { pt3dadd( 125.79, 150.029, 68.88, 0.4576 ) }
    apic_8 { pt3dadd( 125.318, 149.699, 68.88, 0.356 ) }
    apic_8 { pt3dadd( 124.975, 149.242, 68.88, 0.305 ) }
    apic_8 { pt3dadd( 124.505, 148.911, 68.88, 0.2796 ) }
    apic_8 { pt3dadd( 123.984, 148.631, 68.88, 0.305 ) }
    apic_8 { pt3dadd( 123.475, 148.339, 68.88, 0.2796 ) }
    apic_8 { pt3dadd( 122.764, 148.25, 68.88, 0.2542 ) }
    apic_8 { pt3dadd( 122.103, 148.11, 68.88, 0.2542 ) }
    apic_8 { pt3dadd( 121.569, 147.919, 69.0668, 0.2796 ) }
    apic_8 { pt3dadd( 120.997, 147.728, 69.16, 0.305 ) }
    apic_8 { pt3dadd( 120.565, 147.36, 69.16, 0.2796 ) }
    apic_8 { pt3dadd( 120.082, 147.042, 69.16, 0.2796 ) }
    apic_8 { pt3dadd( 119.65, 146.89, 69.4089, 0.3814 ) }
    apic_8 { pt3dadd( 119.396, 146.648, 69.8757, 0.3814 ) }
    apic_8 { pt3dadd( 118.938, 146.127, 70.0, 0.2796 ) }
    apic_8 { pt3dadd( 118.518, 145.746, 70.0, 0.305 ) }
    apic_8 { pt3dadd( 117.946, 145.517, 70.0, 0.356 ) }
    apic_8 { pt3dadd( 117.489, 145.174, 70.0, 0.356 ) }
    apic_8 { pt3dadd( 117.044, 144.818, 70.0, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_8 { pt3dadd( 116.497, 144.564, 70.0, 0.2542 ) }
    apic_8 { pt3dadd( 115.976, 144.284, 70.0, 0.2288 ) }
    apic_8 { pt3dadd( 115.392, 144.067, 70.0, 0.2288 ) }
    apic_8 { pt3dadd( 114.947, 143.712, 70.0, 0.2542 ) }
    apic_8 { pt3dadd( 114.425, 143.432, 70.0, 0.3304 ) }
    apic_8 { pt3dadd( 113.955, 143.216, 70.0, 0.5848 ) }
    apic_8 { pt3dadd( 113.485, 142.428, 71.12, 0.6864 ) }
    apic_8 { pt3dadd( 112.862, 141.678, 71.68, 0.5848 ) }
    apic_8 { pt3dadd( 112.328, 141.411, 71.68, 0.5338 ) }
    apic_8 { pt3dadd( 111.197, 140.941, 71.68, 0.6356 ) }
    apic_8 { pt3dadd( 110.701, 140.635, 71.68, 0.6102 ) }
    apic_8 { pt3dadd( 110.053, 140.598, 71.96, 0.4576 ) }
    apic_8 { pt3dadd( 109.252, 140.598, 71.96, 0.4322 ) }
    apic_8 { pt3dadd( 108.451, 140.598, 71.96, 0.5084 ) }
    apic_8 { pt3dadd( 107.65, 140.598, 71.96, 0.6356 ) }
    apic_8 { pt3dadd( 107.002, 140.598, 72.3332, 0.6356 ) }
    apic_8 { pt3dadd( 106.278, 140.598, 72.52, 0.5592 ) }
    apic_8 { pt3dadd( 105.477, 140.598, 72.52, 0.483 ) }
    apic_8 { pt3dadd( 104.943, 140.712, 72.6132, 0.4322 ) }
    apic_8 { pt3dadd( 104.74, 141.119, 72.8, 0.3814 ) }
    apic_8 { pt3dadd( 104.358, 141.309, 72.8, 0.3814 ) }
    apic_8 { pt3dadd( 103.875, 141.436, 73.2668, 0.3814 ) }
    apic_8 { pt3dadd( 103.519, 141.729, 73.64, 0.4068 ) }
    apic_8 { pt3dadd( 102.96, 141.97, 73.64, 0.2542 ) }
    apic_8 { pt3dadd( 102.808, 142.161, 73.64, 0.2288 ) }
    apic_8 { pt3dadd( 102.502, 142.199, 73.64, 0.2288 ) }
    apic_8 { pt3dadd( 102.235, 142.276, 73.64, 0.2542 ) }
    apic_8 { pt3dadd( 101.358, 142.428, 73.64, 0.483 ) }
    apic_8 { pt3dadd( 100.329, 142.848, 74.0132, 0.5848 ) }
    apic_8 { pt3dadd( 99.858, 142.987, 74.48, 0.4322 ) }
    apic_8 { pt3dadd( 99.2987, 143.229, 74.48, 0.305 ) }
    apic_8 { pt3dadd( 98.9682, 143.241, 74.48, 0.2288 ) }
    apic_8 { pt3dadd( 98.803, 143.42, 74.48, 0.2288 ) }
    apic_8 { pt3dadd( 98.6123, 143.559, 74.5111, 0.2288 ) }
    apic_8 { pt3dadd( 98.4471, 143.572, 74.9157, 0.2542 ) }
    apic_8 { pt3dadd( 98.1166, 143.572, 75.5068, 0.4322 ) }
    apic_8 { pt3dadd( 97.5573, 143.572, 75.8178, 0.5084 ) }
    apic_8 { pt3dadd( 97.4175, 143.572, 76.8757, 0.5338 ) }
    apic_8 { pt3dadd( 97.0361, 143.572, 77.9022, 0.661 ) }
    apic_8 { pt3dadd( 96.3243, 143.534, 78.5868, 0.788 ) }
    apic_8 { pt3dadd( 95.6633, 143.305, 79.7689, 0.6102 ) }
    apic_8 { pt3dadd( 95.1549, 142.911, 80.08, 0.5848 ) }
    apic_8 { pt3dadd( 95.0659, 141.742, 80.36, 0.305 ) }
    apic_8 { pt3dadd( 94.9515, 141.055, 80.36, 0.3814 ) }
    apic_8 { pt3dadd( 94.6591, 140.547, 80.36, 0.483 ) }
    apic_8 { pt3dadd( 94.2778, 140.127, 80.36, 0.5338 ) }
    apic_8 { pt3dadd( 94.0363, 139.225, 80.36, 0.661 ) }
    apic_8 { pt3dadd( 93.4643, 138.767, 80.36, 0.8644 ) }
    apic_8 { pt3dadd( 92.6635, 138.653, 80.64, 0.6356 ) }
    apic_8 { pt3dadd( 92.0152, 138.501, 80.64, 0.483 ) }
    apic_8 { pt3dadd( 91.5576, 138.157, 80.64, 0.483 ) }
    apic_8 { pt3dadd( 91.1763, 137.166, 80.64, 0.839 ) }
    apic_8 { pt3dadd( 91.1763, 136.136, 80.64, 0.7626 ) }
    apic_8 { pt3dadd( 91.0492, 134.89, 81.2, 0.7372 ) }
    apic_8 { pt3dadd( 90.8331, 133.975, 82.3511, 0.7372 ) }
    apic_8 { pt3dadd( 90.6806, 132.742, 82.88, 0.788 ) }
    apic_8 { pt3dadd( 90.6043, 131.674, 84.0, 0.7626 ) }
    apic_8 { pt3dadd( 90.6043, 130.988, 84.28, 0.7626 ) }
    apic_8 { pt3dadd( 90.6043, 130.187, 84.28, 0.7372 ) }
    apic_8 { pt3dadd( 90.6043, 129.386, 84.28, 0.661 ) }
    apic_8 { pt3dadd( 90.6043, 128.878, 84.9957, 0.5592 ) }
    apic_8 { pt3dadd( 90.528, 128.433, 85.68, 0.5084 ) }
    apic_8 { pt3dadd( 90.1086, 127.594, 86.52, 0.6102 ) }
    apic_8 { pt3dadd( 89.5747, 127.213, 86.8, 0.6864 ) }
    apic_8 { pt3dadd( 88.9264, 127.213, 88.2932, 0.8136 ) }
    apic_8 { pt3dadd( 88.6087, 127.213, 89.7557, 0.5848 ) }
    apic_8 { pt3dadd( 88.2019, 127.213, 90.44, 0.3304 ) }
    apic_8 { pt3dadd( 88.0875, 127.213, 91.0, 0.2542 ) }
    apic_8 { pt3dadd( 88.0748, 127.213, 91.8089, 0.2542 ) }
    apic_8 { pt3dadd( 87.9223, 127.213, 92.8357, 0.483 ) }
    apic_8 { pt3dadd( 87.6299, 127.162, 94.5157, 0.7626 ) }
    apic_8 { pt3dadd( 86.6257, 126.73, 95.48, 0.6356 ) }
    apic_8 { pt3dadd( 85.4182, 126.335, 95.48, 0.6356 ) }
    apic_8 { pt3dadd( 84.5284, 125.726, 95.7289, 0.7626 ) }
    apic_8 { pt3dadd( 83.4734, 125.268, 95.9468, 0.4576 ) }
    apic_8 { pt3dadd( 82.8632, 125.23, 96.32, 0.356 ) }
    apic_8 { pt3dadd( 82.4056, 125.001, 96.6, 0.3304 ) }
    // Section: apic_14, id: apic_14, parent: apic_8 (entry count 77/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 82.4056, 125.001, 96.6, 0.3304 ) }
    apic_14 { pt3dadd( 82.4819, 124.925, 98.84, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 82.4056, 125.001, 96.6, 0.3304 ) }
    apic_9 { pt3dadd( 81.9353, 124.671, 96.6, 0.3814 ) }
    apic_9 { pt3dadd( 81.4269, 124.378, 96.6, 0.356 ) }
    apic_9 { pt3dadd( 81.1472, 123.972, 96.6, 0.305 ) }
    apic_9 { pt3dadd( 80.6515, 123.781, 96.6, 0.2542 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 84/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 82.4819, 124.925, 98.84, 0.2288 ) }
    apic_16 { pt3dadd( 83.2827, 124.925, 98.84, 0.2288 ) }
    apic_16 { pt3dadd( 84.0835, 124.925, 98.84, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 87/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 82.4819, 124.925, 98.84, 0.2288 ) }
    apic_15 { pt3dadd( 81.6811, 124.925, 98.84, 0.2288 ) }
    apic_15 { pt3dadd( 80.9566, 124.925, 99.0268, 0.2288 ) }
    apic_15 { pt3dadd( 80.2702, 124.925, 99.3068, 0.2288 ) }
    apic_15 { pt3dadd( 79.9651, 124.925, 99.4, 0.2288 ) }
    apic_15 { pt3dadd( 79.6346, 124.925, 99.4311, 0.2288 ) }
    apic_15 { pt3dadd( 79.4948, 124.925, 99.9289, 0.2288 ) }
    apic_15 { pt3dadd( 79.3295, 124.925, 100.364, 0.2288 ) }
    apic_15 { pt3dadd( 79.0499, 124.925, 101.08, 0.2288 ) }
    apic_15 { pt3dadd( 78.7194, 124.925, 101.111, 0.2288 ) }
    apic_15 { pt3dadd( 78.5033, 124.925, 101.422, 0.2288 ) }
    apic_15 { pt3dadd( 78.2491, 124.925, 101.64, 0.2288 ) }
    apic_15 { pt3dadd( 77.9567, 124.925, 101.764, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_15 { pt3dadd( 77.9059, 124.925, 102.2, 0.2288 ) }
    apic_15 { pt3dadd( 77.9059, 124.925, 102.76, 0.2288 ) }
    apic_15 { pt3dadd( 77.9059, 124.925, 103.32, 0.2288 ) }
    apic_15 { pt3dadd( 77.8551, 124.925, 105.156, 0.2288 ) }
    apic_15 { pt3dadd( 77.5627, 124.925, 106.4, 0.2288 ) }
    apic_15 { pt3dadd( 77.5627, 124.925, 107.24, 0.2288 ) }
    apic_15 { pt3dadd( 77.5246, 124.925, 107.987, 0.2288 ) }
    apic_15 { pt3dadd( 77.3975, 124.925, 108.516, 0.2288 ) }
    apic_15 { pt3dadd( 77.2195, 124.925, 108.92, 0.2288 ) }
    apic_15 { pt3dadd( 76.889, 124.925, 110.631, 0.2288 ) }
    apic_15 { pt3dadd( 76.8763, 124.925, 112.56, 0.2288 ) }
    apic_15 { pt3dadd( 76.7619, 124.925, 113.12, 0.2288 ) }
    apic_15 { pt3dadd( 76.6475, 125.052, 113.649, 0.2288 ) }
    apic_15 { pt3dadd( 76.6475, 125.268, 113.68, 0.2288 ) }
    apic_15 { pt3dadd( 76.6348, 125.522, 113.867, 0.2288 ) }
    apic_15 { pt3dadd( 76.5458, 125.688, 114.084, 0.2288 ) }
    apic_15 { pt3dadd( 76.5331, 125.726, 114.52, 0.2288 ) }
    apic_15 { pt3dadd( 76.5331, 125.726, 115.08, 0.2288 ) }
    apic_15 { pt3dadd( 76.3297, 125.726, 115.982, 0.2288 ) }
    apic_15 { pt3dadd( 76.1263, 125.726, 116.324, 0.2288 ) }
    apic_15 { pt3dadd( 75.656, 125.726, 117.413, 0.3304 ) }
    apic_15 { pt3dadd( 75.1603, 125.726, 118.16, 0.4322 ) }
    apic_15 { pt3dadd( 74.8171, 125.726, 118.16, 0.483 ) }
    apic_15 { pt3dadd( 74.4612, 125.726, 118.969, 0.3304 ) }
    apic_15 { pt3dadd( 74.2832, 125.726, 119.373, 0.2542 ) }
    apic_15 { pt3dadd( 73.6858, 125.726, 120.431, 0.305 ) }
    apic_15 { pt3dadd( 73.2155, 125.84, 120.96, 0.3814 ) }
    apic_15 { pt3dadd( 72.9104, 125.853, 121.862, 0.4322 ) }
    apic_15 { pt3dadd( 72.6816, 126.005, 122.609, 0.305 ) }
    apic_15 { pt3dadd( 72.6435, 126.183, 122.64, 0.2542 ) }
    apic_15 { pt3dadd( 72.3003, 126.526, 122.92, 0.2288 ) }
    apic_15 { pt3dadd( 71.8427, 126.768, 123.169, 0.2288 ) }
    apic_15 { pt3dadd( 71.6139, 126.857, 123.231, 0.2288 ) }
    apic_15 { pt3dadd( 71.3851, 126.882, 123.449, 0.2288 ) }
    apic_15 { pt3dadd( 71.2326, 127.061, 123.48, 0.2288 ) }
    apic_15 { pt3dadd( 71.1563, 127.238, 123.698, 0.2288 ) }
    apic_15 { pt3dadd( 71.1563, 127.315, 124.071, 0.2288 ) }
    apic_15 { pt3dadd( 71.1563, 127.454, 124.569, 0.2288 ) }
    apic_15 { pt3dadd( 71.1055, 127.658, 124.787, 0.2288 ) }
    apic_15 { pt3dadd( 70.9021, 127.683, 125.067, 0.2288 ) }
    apic_15 { pt3dadd( 70.6987, 127.785, 125.72, 0.2288 ) }
    apic_15 { pt3dadd( 70.6606, 127.785, 126.467, 0.2288 ) }
    apic_15 { pt3dadd( 70.4953, 127.823, 126.809, 0.2288 ) }
    apic_15 { pt3dadd( 70.3174, 127.899, 127.027, 0.2288 ) }
    apic_15 { pt3dadd( 70.0504, 128.166, 127.12, 0.2288 ) }
    apic_15 { pt3dadd( 69.6818, 128.598, 127.12, 0.2288 ) }
    apic_15 { pt3dadd( 69.5801, 128.84, 127.12, 0.2288 ) }
    apic_15 { pt3dadd( 69.3767, 128.979, 127.12, 0.2288 ) }
    apic_15 { pt3dadd( 69.3259, 129.158, 127.96, 0.2542 ) }
    apic_15 { pt3dadd( 69.2751, 129.234, 128.489, 0.2288 ) }
    apic_15 { pt3dadd( 69.0208, 129.272, 128.613, 0.2288 ) }
    apic_15 { pt3dadd( 68.8683, 129.692, 129.173, 0.2796 ) }
    apic_15 { pt3dadd( 68.792, 129.996, 129.36, 0.2796 ) }
    apic_15 { pt3dadd( 68.6395, 130.429, 129.889, 0.2796 ) }
    apic_15 { pt3dadd( 68.4615, 130.695, 130.48, 0.305 ) }
    apic_15 { pt3dadd( 68.4107, 131.217, 130.76, 0.2542 ) }
    apic_15 { pt3dadd( 68.4107, 131.458, 131.569, 0.2288 ) }
    apic_15 { pt3dadd( 68.2963, 131.56, 131.88, 0.2288 ) }
    apic_15 { pt3dadd( 68.0675, 131.687, 132.129, 0.2288 ) }
    apic_15 { pt3dadd( 67.915, 131.789, 132.347, 0.2288 ) }
    apic_15 { pt3dadd( 67.3048, 132.055, 132.44, 0.2288 ) }
    apic_15 { pt3dadd( 66.9235, 132.475, 132.44, 0.2288 ) }
    apic_15 { pt3dadd( 66.7074, 133.06, 132.44, 0.2288 ) }
    apic_15 { pt3dadd( 66.4278, 133.569, 132.44, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 64/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 80.6515, 123.781, 96.6, 0.2542 ) }
    apic_13 { pt3dadd( 78.4733, 122.37, 96.5222, 0.3814 ) }
    apic_13 { pt3dadd( 75.5724, 120.128, 96.5222, 0.2796 ) }
    apic_13 { pt3dadd( 73.2065, 119.239, 96.5222, 0.2288 ) }
    apic_13 { pt3dadd( 70.5605, 119.03, 96.5222, 0.2288 ) }
    apic_13 { pt3dadd( 62.1726, 118.907, 100.053, 0.2288 ) }
    apic_13 { pt3dadd( 58.5001, 119.167, 100.053, 0.2288 ) }
    apic_13 { pt3dadd( 53.0308, 114.818, 100.053, 0.2542 ) }
    apic_13 { pt3dadd( 50.0391, 112.203, 100.053, 0.2796 ) }
    apic_13 { pt3dadd( 48.6373, 111.259, 98.8761, 0.3304 ) }
    apic_13 { pt3dadd( 47.7965, 107.225, 98.8761, 0.3304 ) }
    apic_13 { pt3dadd( 44.7903, 101.052, 97.1107, 0.3304 ) }
    apic_13 { pt3dadd( 42.8391, 98.1364, 95.345, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 77/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 80.6515, 123.781, 96.6, 0.2542 ) }
    apic_10 { pt3dadd( 80.1303, 123.781, 96.7243, 0.2288 ) }
    apic_10 { pt3dadd( 80.0795, 123.781, 97.44, 0.2288 ) }
    apic_10 { pt3dadd( 79.8761, 123.679, 98.9332, 0.2288 ) }
    apic_10 { pt3dadd( 79.6219, 123.514, 99.5868, 0.2288 ) }
    apic_10 { pt3dadd( 79.5075, 123.311, 100.489, 0.2796 ) }
    apic_10 { pt3dadd( 79.5075, 122.98, 101.08, 0.4322 ) }
    apic_10 { pt3dadd( 79.1516, 122.764, 102.2, 0.5848 ) }
    apic_10 { pt3dadd( 78.5923, 122.51, 102.729, 0.3814 ) }
    apic_10 { pt3dadd( 78.122, 122.306, 103.04, 0.3304 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 87/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 78.122, 122.306, 103.04, 0.3304 ) }
    apic_12 { pt3dadd( 77.5963, 122.409, 102.408, 0.2288 ) }
    apic_12 { pt3dadd( 75.3711, 123.113, 102.408, 0.2796 ) }
    apic_12 { pt3dadd( 72.1777, 122.221, 102.408, 0.305 ) }
    apic_12 { pt3dadd( 60.0458, 115.911, 106.527, 0.2796 ) }
    apic_12 { pt3dadd( 55.7962, 114.0, 106.527, 0.2542 ) }
    apic_12 { pt3dadd( 50.0975, 115.96, 108.882, 0.2288 ) }
    apic_12 { pt3dadd( 45.0238, 116.609, 112.413, 0.2288 ) }
    apic_12 { pt3dadd( 35.2529, 119.015, 115.944, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 96/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 78.122, 122.306, 103.04, 0.3304 ) }
    apic_11 { pt3dadd( 77.5754, 122.294, 103.351, 0.2542 ) }
    apic_11 { pt3dadd( 77.5627, 122.294, 104.16, 0.2288 ) }
    apic_11 { pt3dadd( 77.55, 122.179, 104.689, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_11 { pt3dadd( 77.2195, 122.065, 105.0, 0.2288 ) }
    apic_11 { pt3dadd( 77.1178, 122.065, 105.591, 0.2288 ) }
    apic_11 { pt3dadd( 77.1051, 122.065, 106.68, 0.2288 ) }
    apic_11 { pt3dadd( 77.1051, 121.988, 107.333, 0.2288 ) }
    apic_11 { pt3dadd( 77.0034, 121.938, 108.08, 0.2288 ) }
    apic_11 { pt3dadd( 76.978, 121.658, 108.453, 0.2288 ) }
    apic_11 { pt3dadd( 76.7238, 121.518, 109.169, 0.2288 ) }
    apic_11 { pt3dadd( 76.6475, 121.341, 109.387, 0.2288 ) }
    apic_11 { pt3dadd( 76.406, 121.048, 109.48, 0.2288 ) }
    apic_11 { pt3dadd( 75.9865, 120.781, 109.76, 0.2288 ) }
    apic_11 { pt3dadd( 75.5162, 120.488, 109.853, 0.2288 ) }
    apic_11 { pt3dadd( 75.173, 120.222, 110.32, 0.2288 ) }
    apic_11 { pt3dadd( 74.9442, 120.07, 111.067, 0.2542 ) }
    apic_11 { pt3dadd( 74.5883, 119.777, 111.16, 0.305 ) }
    apic_11 { pt3dadd( 74.1307, 119.662, 111.16, 0.2542 ) }
    apic_11 { pt3dadd( 73.8383, 119.612, 111.16, 0.2288 ) }
    apic_11 { pt3dadd( 73.5968, 119.307, 111.502, 0.2288 ) }
    apic_11 { pt3dadd( 73.2282, 119.192, 111.72, 0.2288 ) }
    apic_11 { pt3dadd( 72.8723, 118.963, 112.249, 0.2288 ) }
    apic_11 { pt3dadd( 72.796, 118.836, 112.591, 0.2288 ) }
    apic_11 { pt3dadd( 72.6816, 118.697, 113.089, 0.2288 ) }
    apic_11 { pt3dadd( 72.491, 118.404, 113.587, 0.2288 ) }
    apic_11 { pt3dadd( 72.3257, 118.366, 113.929, 0.2288 ) }
    apic_11 { pt3dadd( 71.9571, 118.061, 114.8, 0.2288 ) }
    apic_11 { pt3dadd( 71.919, 117.984, 115.36, 0.2288 ) }
    apic_11 { pt3dadd( 71.6012, 117.73, 115.64, 0.2288 ) }
    apic_11 { pt3dadd( 71.1563, 117.489, 116.2, 0.2288 ) }
    apic_11 { pt3dadd( 71.0292, 117.273, 116.48, 0.2288 ) }
    apic_11 { pt3dadd( 70.8767, 116.853, 116.76, 0.2288 ) }
    apic_11 { pt3dadd( 70.5843, 116.802, 116.76, 0.2288 ) }
    apic_11 { pt3dadd( 70.3301, 116.713, 116.76, 0.2288 ) }
    apic_11 { pt3dadd( 69.8089, 116.205, 116.76, 0.2288 ) }
    apic_11 { pt3dadd( 69.4022, 115.811, 116.76, 0.2542 ) }
    apic_11 { pt3dadd( 69.1861, 115.226, 116.76, 0.305 ) }
    apic_11 { pt3dadd( 68.9573, 114.731, 116.947, 0.356 ) }
    apic_11 { pt3dadd( 68.8302, 114.298, 117.258, 0.3814 ) }
    apic_11 { pt3dadd( 68.6395, 114.273, 118.409, 0.4322 ) }
    apic_11 { pt3dadd( 68.6395, 113.942, 119.84, 0.6864 ) }
    apic_11 { pt3dadd( 68.5251, 113.523, 120.773, 0.5338 ) }
    apic_11 { pt3dadd( 68.3853, 113.129, 121.427, 0.356 ) }
    apic_11 { pt3dadd( 68.2963, 112.57, 121.8, 0.2542 ) }
    apic_11 { pt3dadd( 68.2963, 111.921, 122.173, 0.2288 ) }
    apic_11 { pt3dadd( 68.2963, 111.743, 122.578, 0.2288 ) }
    apic_11 { pt3dadd( 68.22, 111.604, 122.889, 0.2542 ) }
    apic_11 { pt3dadd( 68.1056, 111.044, 122.92, 0.305 ) }
    apic_11 { pt3dadd( 68.0675, 110.053, 122.92, 0.2542 ) }
    apic_11 { pt3dadd( 68.0675, 109.252, 122.92, 0.2542 ) }
    apic_11 { pt3dadd( 68.0675, 108.451, 122.92, 0.305 ) }
    apic_11 { pt3dadd( 68.0675, 107.65, 122.92, 0.356 ) }
    apic_11 { pt3dadd( 68.0675, 106.85, 122.92, 0.356 ) }
    apic_11 { pt3dadd( 68.0675, 106.506, 122.92, 0.305 ) }
    apic_11 { pt3dadd( 68.0675, 106.252, 123.138, 0.2542 ) }
    apic_11 { pt3dadd( 68.0675, 106.087, 123.573, 0.2542 ) }
    apic_11 { pt3dadd( 68.0675, 105.578, 124.569, 0.3304 ) }
    apic_11 { pt3dadd( 68.0675, 105.134, 124.6, 0.3304 ) }
    apic_11 { pt3dadd( 68.0675, 104.6, 124.973, 0.2542 ) }
    apic_11 { pt3dadd( 68.0675, 104.345, 125.191, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 104.218, 125.72, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 103.99, 126.56, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 103.646, 126.56, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 103.38, 127.027, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 103.214, 127.462, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 102.846, 127.68, 0.2288 ) }
    apic_11 { pt3dadd( 68.0675, 102.502, 127.68, 0.2288 ) }
    apic_11 { pt3dadd( 68.1056, 101.625, 127.68, 0.2288 ) }
    apic_11 { pt3dadd( 68.2836, 101.168, 128.084, 0.2288 ) }
    apic_11 { pt3dadd( 68.2963, 100.558, 128.52, 0.2288 ) }
    apic_11 { pt3dadd( 68.4107, 100.1, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 68.4107, 99.2992, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 68.4107, 98.956, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 68.4615, 98.6636, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 68.6395, 98.4984, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 68.7793, 98.295, 129.08, 0.2542 ) }
    apic_11 { pt3dadd( 69.0335, 97.9772, 129.08, 0.305 ) }
    apic_11 { pt3dadd( 69.4403, 97.6976, 129.08, 0.2542 ) }
    apic_11 { pt3dadd( 69.7454, 97.6595, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 70.0123, 97.3544, 129.08, 0.2288 ) }
    apic_11 { pt3dadd( 70.1267, 97.1256, 129.08, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_242, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_242 = new SectionList()
    soma_0 ModelViewParmSubset_242.append()
    axon_0 ModelViewParmSubset_242.append()
    axon_1 ModelViewParmSubset_242.append()

    // Group: {name=ModelViewParmSubset_243, groups=[], sections=[dend_27, dend_26, dend_19, dend_16, dend_7, dend_0, apic_0, dend_28, dend_25, dend_20, dend_18, dend_17, dend_13, dend_8, dend_6, dend_1, apic_20, apic_1, dend_24, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, apic_19, apic_2, dend_23, dend_22, dend_11, dend_10, dend_4, dend_3, apic_4, apic_3, apic_6, apic_5, apic_18, apic_7, apic_17, apic_8, apic_14, apic_9, apic_16, apic_15, apic_13, apic_10, apic_12, apic_11]}
    ModelViewParmSubset_243 = new SectionList()
    dend_27 ModelViewParmSubset_243.append()
    dend_26 ModelViewParmSubset_243.append()
    dend_19 ModelViewParmSubset_243.append()
    dend_16 ModelViewParmSubset_243.append()
    dend_7 ModelViewParmSubset_243.append()
    dend_0 ModelViewParmSubset_243.append()
    apic_0 ModelViewParmSubset_243.append()
    dend_28 ModelViewParmSubset_243.append()
    dend_25 ModelViewParmSubset_243.append()
    dend_20 ModelViewParmSubset_243.append()
    dend_18 ModelViewParmSubset_243.append()
    dend_17 ModelViewParmSubset_243.append()
    dend_13 ModelViewParmSubset_243.append()
    dend_8 ModelViewParmSubset_243.append()
    dend_6 ModelViewParmSubset_243.append()
    dend_1 ModelViewParmSubset_243.append()
    apic_20 ModelViewParmSubset_243.append()
    apic_1 ModelViewParmSubset_243.append()
    dend_24 ModelViewParmSubset_243.append()
    dend_21 ModelViewParmSubset_243.append()
    dend_15 ModelViewParmSubset_243.append()
    dend_14 ModelViewParmSubset_243.append()
    dend_12 ModelViewParmSubset_243.append()
    dend_9 ModelViewParmSubset_243.append()
    dend_5 ModelViewParmSubset_243.append()
    dend_2 ModelViewParmSubset_243.append()
    apic_19 ModelViewParmSubset_243.append()
    apic_2 ModelViewParmSubset_243.append()
    dend_23 ModelViewParmSubset_243.append()
    dend_22 ModelViewParmSubset_243.append()
    dend_11 ModelViewParmSubset_243.append()
    dend_10 ModelViewParmSubset_243.append()
    dend_4 ModelViewParmSubset_243.append()
    dend_3 ModelViewParmSubset_243.append()
    apic_4 ModelViewParmSubset_243.append()
    apic_3 ModelViewParmSubset_243.append()
    apic_6 ModelViewParmSubset_243.append()
    apic_5 ModelViewParmSubset_243.append()
    apic_18 ModelViewParmSubset_243.append()
    apic_7 ModelViewParmSubset_243.append()
    apic_17 ModelViewParmSubset_243.append()
    apic_8 ModelViewParmSubset_243.append()
    apic_14 ModelViewParmSubset_243.append()
    apic_9 ModelViewParmSubset_243.append()
    apic_16 ModelViewParmSubset_243.append()
    apic_15 ModelViewParmSubset_243.append()
    apic_13 ModelViewParmSubset_243.append()
    apic_10 ModelViewParmSubset_243.append()
    apic_12 ModelViewParmSubset_243.append()
    apic_11 ModelViewParmSubset_243.append()

    // Group: {name=dend, groups=[], sections=[dend_27, dend_26, dend_19, dend_16, dend_7, dend_0, dend_28, dend_25, dend_20, dend_18, dend_17, dend_13, dend_8, dend_6, dend_1, dend_24, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, dend_23, dend_22, dend_11, dend_10, dend_4, dend_3]}
    dend = new SectionList()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_4, apic_3, apic_6, apic_5, apic_18, apic_7, apic_17, apic_8, apic_14, apic_9, apic_16, apic_15, apic_13, apic_10, apic_12, apic_11]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_18 apic.append()
    apic_7 apic.append()
    apic_17 apic.append()
    apic_8 apic.append()
    apic_14 apic.append()
    apic_9 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_13 apic.append()
    apic_10 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_11657, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_11657 = new SectionList()
    soma_0 OneSecGrp_SectionRef_11657.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_14, apic_9, apic_9, apic_9, apic_9, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_14 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.17  // units: uF/cm2
    forsec dend cm = 2.17  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 167.06999  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 1.2399177E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.3122394E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.4522856  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0010118085  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.037093073  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.3321069E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.5021526E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.085719675  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.9962473E-4  // units: S cm-2
        e_pas_nml2 = -90.58236  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.519761E-4  // units: S cm-2
        e_pas_nml2 = -90.58236  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0852663E-5  // units: S cm-2
        e_pas_nml2 = -90.58236  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 7.763135E-5  // units: S cm-2
        e_pas_nml2 = -90.58236  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.0904404E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0061633918  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 5
    dend_16 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 7
    dend_1 nseg = 3
    apic_20 nseg = 9
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 7
    dend_5 nseg = 5
    dend_11 nseg = 3
    dend_10 nseg = 5
    apic_4 nseg = 3
    apic_3 nseg = 5
    apic_5 nseg = 3
    apic_7 nseg = 3
    apic_8 nseg = 13
    apic_15 nseg = 3
    apic_13 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472299294


