// Cell: cACint209_L1_NGCDA_d8569cb244_0_0
/*
{
  "id" : "cACint209_L1_NGCDA_d8569cb244_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "4.62286, -6.48181, 0.0, 4.1193", "4.07189, -5.77432, 0.0, 7.27496", "3.52092, -5.06683, 0.0, 9.50146", "2.96995, -4.35935, 0.0, 10.7052", "2.41898, -3.65186, 0.0, 11.3464", "1.86801, -2.94437, 0.0, 11.833", "1.31704, -2.23689, 0.0, 12.4478", "0.766068, -1.5294, 0.0, 13.1823", "0.215097, -0.821912, 0.0, 13.6629", "-0.335874, -0.114425, 0.0, 14.0775", "-0.886844, 0.593062, 0.0, 14.2269", "-1.43781, 1.30055, 0.0, 14.2753", "-1.98879, 2.00804, 0.0, 14.3053", "-2.53976, 2.71552, 0.0, 14.0514", "-3.09073, 3.42301, 0.0, 13.4254", "-3.6417, 4.1305, 0.0, 12.6418", "-4.19267, 4.83798, 0.0, 11.7022", "-4.74364, 5.54547, 0.0, 10.5709", "-5.29461, 6.25296, 0.0, 9.14082", "-5.84558, 6.96044, 0.0, 6.8148", "-6.39655, 7.66793, 0.0, 3.66661" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "3.136, 6.66684, 8.6, 1.55", "4.0966, 7.76585, 9.62366, 1.55", "5.23582, 9.01701, 11.2149, 1.25", "6.12105, 9.98919, 12.4514, 1.25", "7.23181, 11.2091, 14.003, 1.4", "8.11322, 12.1772, 15.2341, 1.4", "9.46378, 13.6604, 17.1206, 1.77", "10.9914, 15.1778, 19.254, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.115998, 8.27684, -0.4, 0.59", "0.277044, 8.79545, -0.494713, 0.59", "0.611601, 9.87281, -0.691472, 0.66", "1.11176, 11.4835, -0.985627, 1.03", "1.5112, 12.7698, -1.22054, 1.11", "2.00437, 14.3579, -1.51058, 0.88", "2.61127, 16.3123, -1.86752, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "1.626, -8.06316, -0.710001, 3.83", "1.626, -8.06316, -0.710001, 3.83", "1.7975, -10.6009, -1.32173, 3.39", "1.91924, -12.4024, -1.75597, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.54599, -2.73316, -0.210001, 1.77", "7.54599, -2.73316, -0.210001, 1.77", "8.38283, -2.78642, -0.362153, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.06401, 9.25684, 0.18, 1.55", "-3.06799, 9.59697, 0.234727, 1.55", "-3.09005, 10.4844, 0.44175, 1.33", "-3.11377, 11.4383, 0.66426, 1.33", "-3.13505, 12.2941, 0.863894, 1.55", "-3.1524, 12.9916, 1.02661, 1.55", "-3.17165, 13.7657, 1.20719, 1.62", "-3.17946, 14.8044, 1.44854, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.17401, -1.65316, -2.6, 0.96", "-8.7019, -1.51442, -2.60102, 0.96", "-9.42642, -1.34237, -2.63252, 0.96", "-10.146, -1.2009, -2.69983, 0.81", "-11.1856, -1.06689, -2.84359, 1.11", "-12.3809, -1.01337, -3.06272, 0.96", "-13.5567, -1.0603, -3.30301, 0.88", "-14.6263, -1.2382, -3.55561, 1.33", "-15.5731, -1.53041, -3.80736, 1.33", "-16.6736, -2.08293, -4.11073, 1.03", "-17.6971, -2.83272, -4.39022, 0.81", "-18.4549, -3.55024, -4.59887, 0.66", "-19.1224, -4.27702, -4.80218, 0.88", "-19.6017, -4.80615, -4.95296, 0.96", "-20.3313, -5.54775, -5.17766, 0.66", "-20.9946, -6.05714, -5.39222, 0.66", "-21.8164, -6.39536, -5.69891, 0.52", "-22.7775, -6.55684, -6.13385, 0.52", "-23.6504, -6.60052, -6.51185, 0.88", "-24.5106, -6.59455, -6.86468, 0.96", "-25.6828, -6.53449, -7.3175, 0.81", "-26.8519, -6.45932, -7.72264, 0.59", "-27.6098, -6.44641, -7.92271, 0.59", "-28.8393, -6.47473, -8.18354, 0.74", "-29.6136, -6.54313, -8.33075, 1.03", "-30.0148, -6.60797, -8.39995, 1.03", "-31.1503, -6.89347, -8.51904, 0.88", "-32.4754, -7.26677, -8.54813, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-6.39655, 7.66793, 0.0, 0.793401", "-15.613, 19.5025, 0.0, 0.793401", "-24.8294, 31.3371, 0.0, 0.793401" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "10.9914, 15.1778, 19.254, 0.96", "12.518, 15.5379, 19.3651, 0.96", "14.0978, 15.9106, 19.48, 1.03", "16.1999, 16.4065, 19.633, 0.96", "18.4021, 16.926, 19.7932, 1.03", "19.9818, 17.2987, 19.9082, 0.96", "22.1435, 17.8087, 20.0654, 1.47" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "10.9914, 15.1778, 19.254, 0.52", "10.7494, 16.4031, 18.6954, 0.52", "10.5367, 17.3195, 18.271, 0.96", "10.3367, 18.2382, 17.8433, 0.88", "10.1499, 19.3141, 17.3169, 0.59", "9.99678, 20.4445, 16.7383, 0.52", "9.91864, 21.3147, 16.2779, 0.44", "9.92601, 21.9608, 15.887, 0.44", "10.0026, 22.6462, 15.4695, 0.44", "10.1315, 23.2959, 15.0774, 0.44", "10.2177, 23.5716, 14.9209, 0.44", "10.4617, 24.1383, 14.6326, 0.44", "10.8509, 24.8547, 14.2275, 1.03", "11.2151, 25.5273, 13.7739, 0.59", "11.5124, 26.1908, 13.2502, 0.59", "11.843, 27.2071, 12.4214, 0.96", "11.9672, 27.7725, 11.9697, 1.18", "12.094, 28.7323, 11.2643, 1.25", "12.1903, 30.1031, 10.3609, 0.44", "12.197, 31.367, 9.64635, 0.44", "12.1545, 32.2238, 9.27938, 0.59", "12.0586, 33.3026, 8.94483, 0.59", "11.9401, 34.7945, 8.66733, 0.59", "11.9235, 35.861, 8.67929, 0.59", "11.9844, 36.5922, 8.84518, 0.59", "12.153, 37.5093, 9.20194, 0.74", "12.3462, 38.1696, 9.53688, 0.29", "12.8423, 39.2814, 10.3158, 0.29", "13.3591, 40.1925, 11.1289, 0.22", "13.7466, 40.7991, 11.7204, 0.22", "13.9834, 41.14, 12.065, 0.22", "14.2482, 41.5012, 12.4497, 0.59", "14.8831, 42.3354, 13.3872, 0.22", "15.3855, 43.0295, 14.16, 0.22", "15.6367, 43.3772, 14.5493, 0.66", "16.1957, 44.1071, 15.3257, 0.52", "16.7748, 44.8073, 16.0532, 0.29", "17.5828, 45.6599, 16.8708, 0.29", "18.118, 46.1098, 17.2102, 0.29", "18.7941, 46.487, 17.3659, 0.37", "19.6816, 46.8209, 17.3241, 0.81", "20.3841, 46.9991, 17.1407, 0.81", "21.6296, 47.2308, 16.6974, 0.44", "22.8795, 47.4108, 16.1702, 0.29", "24.0813, 47.5326, 15.6341, 0.37", "24.9989, 47.5808, 15.2301, 0.59", "26.1519, 47.6076, 14.7509, 0.81", "27.2135, 47.627, 14.3008, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.61127, 16.3123, -1.86752, 0.44", "3.6465, 15.5663, -4.84489, 0.44", "4.03692, 15.3247, -5.83806, 0.44", "4.42592, 15.1235, -6.77191, 0.44", "5.18717, 14.8162, -8.61133, 0.44", "5.91243, 14.5842, -10.407, 0.44", "6.36006, 14.461, -11.6129, 0.44", "6.71132, 14.406, -12.5935, 0.44", "7.37576, 14.4562, -14.5376, 0.44", "7.75279, 14.591, -15.7845, 0.44", "8.01809, 14.8239, -17.0211, 0.44", "8.1994, 15.1934, -18.5324, 1.03", "8.2326, 15.5957, -20.0125, 0.66", "8.2064, 16.0228, -21.4864, 0.88", "8.13254, 16.3674, -22.5852, 1.18", "7.95603, 16.9349, -24.3806, 0.81", "7.77538, 17.3759, -25.645, 0.52", "7.57617, 17.775, -26.6826, 0.52" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.61127, 16.3123, -1.86752, 0.44", "3.18882, 17.7293, -1.54836, 0.44", "3.32309, 18.6008, -1.1977, 0.66", "3.25527, 19.2998, -0.775343, 0.66", "3.10159, 20.3248, -0.177526, 0.52", "3.03404, 21.0692, 0.207648, 0.66", "3.00218, 22.3611, 0.825026, 0.66", "2.92319, 23.6567, 1.42839, 0.59", "2.92386, 24.5417, 1.82599, 0.37", "3.06106, 25.6998, 2.2988, 0.37", "3.31922, 26.8649, 2.72981, 0.59", "3.52463, 27.5413, 2.98905, 0.59", "3.79119, 28.3323, 3.37448, 0.59", "3.9988, 28.9719, 3.76082, 0.66", "4.12675, 29.5009, 4.14465, 0.52", "4.24601, 30.2538, 4.75727, 0.52", "4.40992, 31.5629, 5.90769, 0.88", "4.59299, 32.8308, 7.02997, 0.88", "4.64442, 33.1637, 7.32566, 0.88", "4.81345, 34.0916, 8.15684, 0.59", "4.96452, 34.834, 8.80106, 0.44", "5.35999, 36.084, 9.72804, 0.44", "5.58186, 36.6474, 10.1166, 0.81", "5.91952, 37.4321, 10.6987, 0.66", "6.38876, 38.5325, 11.617, 0.44", "6.65958, 39.3078, 12.3959, 0.44", "6.94663, 40.4651, 13.6831, 0.37", "7.06585, 41.5351, 14.8954, 0.37", "7.06754, 42.1946, 15.6585, 0.81", "7.03441, 42.6679, 16.2078, 0.37", "6.88418, 43.7783, 17.449, 0.37", "6.83271, 44.0729, 17.7565, 0.37", "6.71635, 44.6491, 18.3578, 0.44", "6.66341, 45.2133, 18.9148, 0.22", "6.66055, 45.8079, 19.5506, 0.44", "6.67589, 46.2718, 20.1005, 0.66", "6.697, 46.7514, 20.6985, 0.52", "6.71461, 47.6897, 21.9419, 0.37", "6.74571, 48.6185, 23.2276, 0.22", "6.77319, 49.2666, 24.2089, 0.59", "6.84593, 49.871, 25.1453, 0.59", "6.98393, 50.5112, 26.2162, 0.59", "7.08839, 50.7782, 26.7008, 0.59", "7.2546, 50.9873, 27.0983, 0.44", "8.08601, 51.3822, 28.0591, 0.66", "9.39766, 51.5912, 28.9999, 0.22", "10.042, 51.6274, 29.3583, 0.22", "10.3484, 51.6304, 29.5278, 0.22", "11.0654, 51.6324, 30.0005, 0.66", "11.9547, 51.6742, 30.7249, 0.37", "12.5997, 51.7463, 31.3468, 0.37", "13.3651, 51.8789, 32.2355, 0.52", "14.1618, 52.039, 33.1868, 0.22", "14.8986, 52.191, 34.1621, 0.81", "15.6061, 52.3363, 35.2497, 0.59", "16.2712, 52.3871, 36.3671, 0.15", "16.4553, 52.3779, 36.7092, 0.66", "17.2036, 52.2302, 38.1468, 0.22", "17.9184, 51.9831, 39.3831, 0.74", "18.402, 51.7461, 40.2027, 1.18", "19.0675, 51.2882, 41.5295, 0.07", "19.5506, 50.8946, 42.5641, 0.07", "19.7933, 50.6763, 43.1218, 0.66", "20.1054, 50.3431, 43.9339, 1.11", "20.6706, 49.7383, 45.2716, 0.66", "21.313, 49.0901, 46.7969, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.91924, -12.4024, -1.75597, 2.43", "1.27514, -13.0908, -1.35474, 2.43", "-0.145364, -14.2997, -0.284147, 1.99", "-1.59688, -15.3078, 0.992901, 1.62", "-2.72374, -15.9706, 1.94395, 0.81", "-3.90151, -16.6082, 2.80816, 0.88", "-4.98991, -17.1475, 3.53986, 1.11", "-6.72835, -17.8365, 4.59115, 1.11", "-8.40402, -18.3416, 5.39213, 0.81", "-9.96481, -18.7408, 5.75096, 0.74", "-11.8018, -19.323, 5.26493, 0.88", "-12.9987, -19.8864, 4.28464, 0.52", "-14.0205, -20.5568, 2.89509, 0.52", "-14.9039, -21.3065, 1.32247, 0.66", "-15.7677, -22.1364, -0.528154, 0.66", "-16.5905, -23.0918, -2.71483, 0.81", "-16.9464, -23.5922, -3.88831, 0.66", "-17.3999, -24.3751, -5.73011, 0.74", "-17.7406, -25.0764, -7.19832, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.91924, -12.4024, -1.75597, 0.96", "3.17339, -13.6101, -1.38698, 0.96", "4.11617, -14.6186, -1.16058, 1.25", "5.05527, -15.7253, -1.05331, 1.62", "5.91286, -16.8374, -1.09844, 0.88", "6.79891, -18.1065, -1.38956, 0.88", "7.38631, -19.0019, -1.75991, 0.88", "8.0715, -20.2206, -2.69866, 0.88", "8.48688, -21.1544, -3.8677, 0.88", "8.64353, -21.6978, -4.93028, 0.88", "8.71796, -22.2897, -6.5, 0.74", "8.7224, -22.5687, -7.47338, 0.74", "8.72237, -22.7016, -8.10298, 0.74", "8.73134, -22.7998, -8.86539, 0.74", "8.76074, -22.8483, -9.74362, 0.74", "8.76552, -22.7971, -10.4624, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.38283, -2.78642, -0.362153, 0.66", "9.1652, -2.44596, -1.16228, 0.66", "10.3005, -2.01791, -2.32329, 0.52", "11.226, -1.65004, -3.26965, 0.66", "12.0278, -1.27133, -4.0924, 0.81", "12.958, -0.757696, -5.08457, 1.03", "13.9766, -0.105709, -6.20034, 1.25", "14.6605, 0.356062, -6.96852, 1.03", "15.5559, 0.989599, -7.99099, 1.18", "16.4489, 1.6743, -9.03049, 1.03", "17.1914, 2.35193, -9.93806, 1.18", "17.8099, 3.0608, -10.6774, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.38283, -2.78642, -0.362153, 0.74", "9.28036, -2.57147, -0.329734, 0.74", "10.3004, -2.30822, -0.345679, 0.66", "11.1063, -2.1216, -0.360083, 0.88", "11.8776, -1.97944, -0.33354, 0.96", "12.846, -1.87427, -0.245695, 0.81", "13.5732, -1.84841, -0.142021, 0.74", "14.6658, -1.88108, 0.0815098, 0.96", "15.6232, -2.00672, 0.355355, 0.96", "16.5911, -2.24738, 0.734801, 0.81", "17.6111, -2.59559, 1.19723, 0.66", "18.3204, -2.91147, 1.56933, 0.88", "18.8125, -3.1743, 1.87884, 1.25", "19.2527, -3.45443, 2.21361, 1.47", "19.9039, -3.90878, 2.7473, 1.47" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.17946, 14.8044, 1.44854, 1.25", "-4.08074, 15.3447, 0.54922, 1.25", "-4.75601, 15.7482, -0.199794, 1.11", "-5.8303, 16.4502, -1.57812, 1.11", "-6.59542, 17.0174, -2.54533, 1.18", "-7.43535, 17.7373, -3.59713, 1.11", "-8.19483, 18.5389, -4.56788, 1.11", "-8.65253, 19.0512, -5.22231, 1.11", "-9.14077, 19.6902, -5.98332, 0.96", "-9.95101, 21.5369, -7.57068, 0.96", "-10.0112, 22.2999, -7.9016, 1.11", "-9.80395, 23.6245, -7.74047, 1.4" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.17946, 14.8044, 1.44854, 0.59", "-2.51471, 15.6706, 2.25875, 0.59", "-2.0424, 16.3321, 2.73673, 0.44", "-1.49026, 17.15, 3.21465, 0.66", "-1.09269, 17.7102, 3.49295, 0.66", "-0.409073, 18.5684, 3.91126, 0.52", "-0.0411071, 18.9935, 4.1739, 0.59", "0.480543, 19.5204, 4.57595, 0.59", "0.881456, 19.9126, 4.95527, 0.59", "1.43657, 20.4613, 5.62485, 0.59", "1.99201, 21.0749, 6.45227, 0.52", "2.83029, 22.0673, 7.80537, 0.44", "3.43064, 22.8042, 8.73743, 0.44", "3.89531, 23.3981, 9.40267, 0.66", "4.21884, 23.8286, 9.78952, 0.66", "5.03516, 24.9454, 10.5043, 0.52", "5.61264, 25.7218, 10.8627, 0.44", "6.21285, 26.4602, 11.1451, 0.44", "6.82911, 27.1002, 11.4454, 0.81", "7.41926, 27.6011, 11.7896, 0.81", "8.31358, 28.2691, 12.4017, 0.37", "9.11496, 28.8434, 13.0585, 0.37", "9.82503, 29.4146, 13.7216, 0.37", "10.7199, 30.2186, 14.6857, 0.44", "11.32, 30.7883, 15.3372, 0.44", "11.6409, 31.1024, 15.6858, 0.44", "12.205, 31.6733, 16.2803, 0.52", "12.9696, 32.4642, 17.0637, 0.37", "13.6048, 33.1359, 17.751, 0.37", "14.0539, 33.6339, 18.3177, 0.37", "14.7811, 34.451, 19.4035, 0.52", "15.3777, 35.1455, 20.487, 0.74", "15.6254, 35.471, 21.0695, 0.74", "16.001, 36.0912, 22.2653, 0.59", "16.2501, 36.6027, 23.1599, 0.59", "16.4977, 37.2068, 24.1861, 0.52", "16.7647, 37.8637, 25.2402, 0.52", "17.0089, 38.386, 26.103, 0.52", "17.2055, 38.7479, 26.7288, 0.52", "17.6294, 39.4453, 28.0465, 0.44", "18.0532, 40.0039, 29.2506, 0.44", "18.3552, 40.3035, 29.9823, 0.44", "18.6643, 40.594, 30.5774, 0.44", "19.0325, 40.9498, 31.1243, 0.44", "19.2006, 41.1265, 31.337, 0.44", "19.6593, 41.6265, 31.8468, 0.44", "20.4283, 42.383, 32.4218, 0.44", "21.4453, 43.2674, 33.0359, 0.44", "22.5716, 44.1461, 33.5349, 0.29", "23.2871, 44.6446, 33.7391, 0.29", "23.8715, 45.0244, 33.8751, 0.44", "25.053, 45.7182, 34.0663, 0.66", "26.1201, 46.2667, 34.1754, 0.44", "27.0628, 46.6495, 34.2582, 0.81", "28.226, 47.0449, 34.3414, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-32.4754, -7.26677, -8.54813, 0.59", "-32.6787, -8.10067, -8.65247, 0.59", "-33.008, -9.32971, -8.79927, 0.88", "-33.3263, -10.3213, -8.91855, 0.37", "-33.566, -10.9417, -9.00217, 0.59", "-33.9224, -11.7287, -9.12742, 0.37", "-34.4969, -12.8134, -9.31949, 0.59", "-34.9322, -13.4586, -9.46233, 0.66", "-35.3843, -14.0171, -9.58887, 0.52", "-36.0415, -14.7245, -9.76122, 0.52", "-36.5719, -15.2231, -9.89612, 0.52", "-37.1224, -15.6775, -10.0249, 0.52", "-37.7118, -16.121, -10.1606, 0.52", "-38.3963, -16.6334, -10.352, 0.59", "-38.9936, -17.0734, -10.5547, 0.52", "-39.7319, -17.5893, -10.8665, 0.81", "-40.054, -17.8038, -11.0285, 0.88", "-40.7553, -18.2467, -11.4702, 0.44", "-41.2904, -18.5607, -11.8776, 0.44", "-41.9461, -18.9325, -12.4772, 0.44", "-42.386, -19.227, -12.9742, 0.44", "-42.5957, -19.3943, -13.2572, 0.44", "-42.9416, -19.7076, -13.7506, 0.44", "-43.3954, -20.1724, -14.3552, 0.81", "-43.73, -20.5536, -14.7309, 0.81", "-44.256, -21.2214, -15.2263, 0.37", "-44.6344, -21.7149, -15.5317, 0.37", "-45.0317, -22.2311, -15.8388, 0.66", "-45.7142, -23.0891, -16.3524, 0.29", "-46.3329, -23.8324, -16.8176, 0.37", "-46.8114, -24.3719, -17.2117, 0.59", "-47.3175, -24.8973, -17.672, 0.88", "-47.7702, -25.3303, -18.1311, 0.88", "-48.2918, -25.787, -18.7359, 0.66", "-48.666, -26.057, -19.1904, 0.37", "-49.4652, -26.5051, -20.1077, 0.22", "-49.7682, -26.6432, -20.4237, 0.22", "-50.3365, -26.8701, -20.9477, 0.66", "-51.0788, -27.15, -21.5277, 0.22", "-51.895, -27.4524, -22.0504, 0.22", "-52.49, -27.6791, -22.3474, 0.74", "-52.7071, -27.7712, -22.4342, 0.74", "-53.3486, -28.076, -22.675, 0.29", "-54.0965, -28.4734, -22.9605, 0.74", "-55.0321, -29.0314, -23.3653, 0.29", "-55.6811, -29.4708, -23.6975, 0.88", "-56.8438, -30.3298, -24.441, 0.29", "-57.3752, -30.732, -24.8677, 0.29", "-57.9201, -31.1523, -25.4305, 0.52", "-58.5933, -31.6828, -26.3292, 0.74", "-58.9804, -31.9948, -26.9965, 0.81", "-59.3941, -32.3249, -27.8701, 0.81", "-59.7917, -32.6114, -28.7772, 0.44", "-60.0757, -32.7789, -29.3891, 0.44", "-60.2079, -32.84, -29.6446, 0.44", "-60.5382, -32.9698, -30.2024, 0.44", "-61.0337, -33.1835, -30.9624, 0.29", "-61.4811, -33.3905, -31.5573, 0.88", "-62.0818, -33.7077, -32.2585, 0.66", "-62.8598, -34.1368, -33.0637, 0.59", "-63.3164, -34.3898, -33.486, 0.59", "-63.669, -34.5723, -33.7627, 0.59", "-64.2149, -34.8484, -34.1343, 0.22", "-64.8477, -35.1627, -34.5164, 0.22", "-65.199, -35.3318, -34.7003, 0.22", "-66.2207, -35.7887, -35.1805, 0.59", "-66.9915, -36.1136, -35.5676, 0.22", "-67.4379, -36.3013, -35.8213, 0.22", "-67.9712, -36.5376, -36.1642, 0.29", "-68.5719, -36.799, -36.5907, 0.29", "-68.9366, -36.96, -36.8767, 0.22", "-69.5323, -37.2328, -37.3508, 0.22", "-70.0105, -37.4706, -37.7255, 0.29", "-70.741, -37.8658, -38.2528, 0.29", "-71.1574, -38.141, -38.5589, 0.66", "-71.7691, -38.6417, -39.0192, 0.22", "-72.3453, -39.2446, -39.4799, 0.29", "-72.9511, -40.0516, -40.0113, 0.22", "-73.2885, -40.6718, -40.399, 0.66", "-73.5913, -41.6073, -40.9796, 0.15", "-73.6677, -42.2196, -41.4163, 0.22", "-73.6299, -42.874, -41.9559, 0.22", "-73.5477, -43.2414, -42.3229, 0.29", "-73.3464, -43.8187, -42.9718, 0.29", "-73.1611, -44.2836, -43.55, 0.37", "-72.7518, -45.2652, -44.8721, 0.15", "-72.4069, -46.0354, -45.9937, 0.15", "-72.1109, -46.6306, -46.9261, 0.15", "-72.0019, -46.8432, -47.261, 0.29", "-71.753, -47.3248, -47.9991, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-32.4754, -7.26677, -8.54813, 0.74", "-33.515, -7.78601, -7.86826, 0.74", "-34.4108, -8.35386, -7.20298, 0.81", "-35.2667, -8.97141, -6.54071, 0.44", "-36.7253, -10.1009, -5.47909, 0.37", "-37.4913, -10.6966, -4.93038, 0.74", "-38.7393, -11.5825, -4.1008, 0.59", "-39.9339, -12.4186, -3.35357, 0.52", "-40.7827, -12.9423, -2.8614, 0.66", "-41.9509, -13.5436, -2.25884, 0.29", "-42.8096, -13.9035, -1.90226, 0.29", "-44.4378, -14.4324, -1.42954, 0.44", "-45.7533, -14.737, -1.20533, 0.52", "-47.1735, -14.9776, -1.10312, 0.22", "-47.625, -15.0377, -1.10145, 0.22", "-48.7408, -15.1554, -1.15193, 0.22", "-50.8948, -15.4301, -1.45281, 0.29", "-51.6796, -15.5534, -1.60257, 0.44", "-52.6092, -15.7105, -1.77404, 0.81", "-53.6915, -15.8962, -1.94829, 0.81", "-55.0135, -16.099, -2.06777, 0.29", "-56.1459, -16.259, -2.04273, 0.44", "-56.867, -16.3661, -1.9843, 0.44", "-57.7628, -16.5277, -1.89672, 0.37", "-58.8515, -16.804, -1.69949, 0.96", "-59.5433, -17.048, -1.49213, 0.96", "-60.801, -17.5975, -0.881248, 0.37", "-62.2421, -18.3274, 0.0761774, 0.52", "-63.3328, -18.9605, 0.97097, 0.29", "-64.6115, -19.7953, 2.14485, 0.44", "-65.5353, -20.4528, 3.08373, 0.52", "-66.81, -21.4097, 4.44449, 0.22", "-67.3684, -21.8304, 5.02845, 0.22", "-68.1847, -22.4096, 5.83127, 0.29", "-68.9757, -22.8614, 6.3468, 0.44", "-69.9867, -23.2158, 6.51752, 0.44", "-71.0612, -23.4459, 6.41965, 0.15", "-72.9021, -23.6988, 6.0204, 0.15", "-73.5745, -23.7399, 5.85404, 0.59", "-74.6249, -23.7318, 5.57882, 1.11", "-76.6398, -23.5299, 5.11145, 0.44", "-77.6117, -23.3593, 4.89703, 0.66", "-78.5555, -23.1235, 4.73832, 0.66", "-79.6257, -22.7965, 4.62335, 0.22", "-80.2365, -22.5742, 4.56195, 0.15", "-81.5529, -21.9901, 4.44055, 0.15", "-82.2945, -21.6199, 4.38182, 0.15", "-83.3086, -21.1586, 4.29482, 0.15", "-83.8042, -20.9611, 4.2539, 0.29", "-84.5539, -20.6855, 4.19083, 0.81", "-85.1214, -20.4878, 4.14921, 0.81", "-86.1057, -20.1722, 4.11022, 0.15", "-86.9846, -19.8672, 4.13462, 0.29", "-87.6168, -19.6198, 4.17864, 0.22", "-88.6274, -19.1836, 4.27487, 0.22", "-88.9625, -19.0305, 4.32459, 0.22", "-89.4747, -18.7912, 4.42535, 0.22", "-90.0474, -18.529, 4.56742, 0.44", "-90.8211, -18.2222, 4.78354, 0.44", "-91.5838, -17.9842, 4.96996, 0.22", "-92.2501, -17.8112, 5.08153, 0.22", "-92.8965, -17.6398, 5.21623, 0.29", "-93.6482, -17.4239, 5.3568, 0.29", "-94.6436, -17.13, 5.46407, 0.22", "-95.8447, -16.7745, 5.47765, 0.81", "-97.0724, -16.4108, 5.40314, 0.52", "-99.1977, -15.7572, 5.11843, 0.22", "-100.448, -15.3835, 4.8867, 0.29", "-101.812, -14.9889, 4.57503, 0.22", "-102.908, -14.6832, 4.29542, 0.44", "-103.679, -14.4813, 4.09458, 0.44", "-104.823, -14.186, 3.78522, 0.15", "-105.854, -13.8954, 3.47797, 0.15", "-106.384, -13.727, 3.3684, 0.15", "-107.06, -13.469, 3.33284, 0.59", "-107.689, -13.176, 3.35081, 0.59", "-108.338, -12.7702, 3.41734, 0.22", "-109.104, -12.1518, 3.54861, 0.22", "-109.753, -11.4943, 3.66741, 0.22", "-110.767, -10.3626, 3.81557, 0.22", "-111.221, -9.84029, 3.86457, 0.22", "-112.197, -8.80386, 3.91004, 0.29", "-112.819, -8.20463, 3.87989, 0.29", "-114.237, -6.9822, 3.71454, 0.22", "-114.787, -6.56531, 3.61344, 0.22", "-115.278, -6.23527, 3.48732, 0.22", "-116.558, -5.44888, 3.09404, 0.29", "-117.438, -4.93454, 2.74585, 0.29", "-118.434, -4.32902, 2.26324, 0.44", "-119.526, -3.60811, 1.62424, 0.44", "-120.431, -2.94416, 0.99855, 0.37", "-121.537, -2.06243, 0.103784, 0.81", "-122.555, -1.21522, -0.864587, 0.29", "-123.401, -0.489934, -1.83008, 0.29", "-124.184, 0.224843, -2.83339, 0.29", "-124.927, 0.928719, -3.81972, 0.29", "-125.574, 1.53316, -4.66527, 0.66", "-126.967, 2.77967, -6.33241, 0.37", "-128.458, 4.04747, -8.01715, 0.37", "-129.324, 4.74386, -8.93629, 0.22", "-129.97, 5.21132, -9.54419, 0.22", "-130.491, 5.56727, -9.98206, 0.22", "-131.255, 6.0868, -10.569, 0.29", "-132.638, 7.02699, -11.5726, 0.22", "-133.46, 7.60331, -12.1628, 0.22", "-134.271, 8.27944, -12.8755, 0.29", "-134.974, 8.97764, -13.5713, 0.29", "-135.337, 9.40091, -13.9561, 0.29", "-135.849, 10.1184, -14.5462, 0.29", "-136.44, 11.0929, -15.2409, 0.52", "-137.252, 12.6144, -16.2718, 0.44", "-137.737, 13.6095, -16.9306, 0.22", "-138.141, 14.429, -17.4394, 0.29", "-138.624, 15.3335, -17.9961, 0.29", "-138.94, 15.8577, -18.3021, 0.29", "-139.268, 16.3218, -18.5609, 0.29", "-139.708, 16.8933, -18.8281, 0.29", "-140.361, 17.753, -19.142, 0.29", "-140.656, 18.1213, -19.255, 0.29", "-141.213, 18.7398, -19.4199, 0.29", "-142.212, 19.7761, -19.6698, 0.44", "-142.798, 20.3546, -19.8031, 0.44", "-143.466, 20.9961, -19.9516, 0.22", "-143.916, 21.4221, -20.0558, 0.22", "-144.699, 22.1891, -20.245, 0.22", "-145.628, 23.1323, -20.4942, 0.22", "-146.154, 23.6456, -20.6463, 0.37", "-147.166, 24.5044, -20.9011, 0.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-24.8294, 31.3371, 0.0, 0.23", "-34.0458, 43.1717, 0.0, 0.23", "-43.2623, 55.0063, 0.0, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "22.1435, 17.8087, 20.0654, 0.88", "22.6419, 17.5957, 20.4865, 0.88", "23.2271, 17.3374, 21.0172, 0.74", "23.7856, 17.0996, 21.6303, 0.66", "24.3967, 16.8498, 22.3327, 0.59", "24.7545, 16.7035, 22.7439, 0.66", "25.3337, 16.4668, 23.4095, 0.66", "25.7743, 16.3101, 23.9433, 1.03", "26.7462, 15.9777, 25.1693, 1.25", "27.1239, 15.8451, 25.6913, 1.47" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "22.1435, 17.8087, 20.0654, 1.11", "22.9577, 18.4371, 20.3611, 1.11", "23.7185, 19.0244, 20.6373, 1.25" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "7.57617, 17.775, -26.6826, 0.59", "6.90418, 18.8569, -26.5147, 0.59", "6.38688, 19.8061, -26.3156, 0.81", "5.97911, 20.703, -26.0646, 0.37", "5.72043, 21.4952, -25.7826, 0.37", "5.34116, 22.941, -25.2308, 0.52", "5.09108, 24.0513, -24.7843, 0.96", "4.84844, 25.4071, -24.1634, 0.66", "4.63796, 26.7697, -23.4606, 0.96", "4.43634, 28.5275, -22.5254, 0.37", "4.40271, 28.9644, -22.2909, 0.37", "4.34383, 29.616, -21.9478, 0.37", "4.24639, 30.1858, -21.6338, 0.44", "3.81786, 31.5157, -20.8844, 0.66", "3.53485, 32.1378, -20.5358, 0.88", "3.09537, 32.9474, -20.0881, 0.59", "2.42951, 34.1873, -19.397, 0.96", "1.62678, 35.7188, -18.5199, 0.52", "0.893823, 37.1573, -17.7302, 0.52", "0.29749, 38.2991, -17.1149, 0.59", "0.0530643, 38.7133, -16.8608, 0.59", "-0.58606, 39.7253, -16.1972, 0.44", "-1.04068, 40.4584, -15.698, 0.44", "-1.55266, 41.2271, -15.1391, 0.74", "-2.29134, 42.3163, -14.2385, 0.96", "-3.36083, 43.7007, -12.9282, 0.81", "-3.54753, 43.8943, -12.7071, 0.81" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "7.57617, 17.775, -26.6826, 0.29", "7.72687, 17.6396, -27.2997, 0.29", "8.2689, 17.58, -29.0291, 0.29", "8.72642, 17.6857, -30.5966, 0.29", "8.92238, 17.7523, -31.4289, 0.29", "9.14123, 17.8602, -32.5869, 0.29", "9.32549, 17.9895, -33.793, 0.29", "9.48305, 18.24, -35.2382, 0.29", "9.56092, 18.5919, -36.7465, 0.66", "9.50651, 18.9818, -38.0987, 0.29", "9.36636, 19.2878, -39.0935, 0.59", "9.04499, 19.6962, -40.568, 0.29", "8.72537, 19.9488, -41.6452, 0.29", "8.54974, 20.0535, -42.0764, 0.29", "7.69266, 20.6763, -43.7784, 0.15", "7.23931, 21.0711, -44.3744, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-17.7406, -25.0764, -7.19832, 0.29", "-17.5199, -26.1076, -7.87883, 0.29", "-17.4525, -26.7147, -8.45876, 0.22", "-17.4745, -27.0869, -8.93258, 0.29", "-17.5848, -27.4896, -9.56592, 0.22", "-17.8975, -28.1855, -10.7909, 0.22", "-18.2085, -28.7627, -11.7882, 0.37", "-18.5329, -29.23, -12.6926, 0.81", "-18.8979, -29.7133, -13.6002, 0.81", "-19.1891, -30.1042, -14.2294, 0.37", "-19.3434, -30.3391, -14.5384, 0.37", "-19.6371, -30.9296, -15.105, 0.59", "-19.9236, -31.7024, -15.7281, 0.44", "-20.0926, -32.2082, -16.0927, 0.52", "-20.2971, -32.8613, -16.5014, 0.66", "-20.5612, -33.6364, -16.9889, 0.74", "-20.9028, -34.4164, -17.5624, 0.88", "-21.2291, -34.9815, -18.0886, 0.88", "-21.7131, -35.6547, -18.8843, 0.59", "-22.1598, -36.211, -19.6682, 0.22", "-22.6192, -36.7293, -20.5887, 0.29", "-23.1281, -37.2954, -21.7819, 0.59", "-23.5027, -37.7521, -22.9292, 0.59", "-23.74, -38.0809, -23.9664, 0.59", "-23.798, -38.1708, -24.2988, 0.59", "-23.9462, -38.4067, -25.1628, 0.59", "-24.0862, -38.6444, -25.841, 0.66", "-24.4122, -39.2222, -27.0875, 0.59", "-24.7888, -39.8709, -28.1697, 0.66", "-25.2091, -40.5407, -29.1481, 0.96", "-25.5794, -41.0787, -29.862, 0.59", "-26.0069, -41.6778, -30.57, 0.44", "-26.3148, -42.1202, -31.0513, 0.44", "-26.6371, -42.6626, -31.6126, 0.52", "-26.9393, -43.3229, -32.3488, 0.44", "-27.1129, -43.8833, -33.1485, 0.44", "-27.1391, -44.1096, -33.5625, 0.59", "-27.1249, -44.4809, -34.349, 0.74", "-27.0809, -44.9753, -35.4504, 0.37", "-27.0654, -45.4765, -36.6152, 0.37", "-27.0899, -45.8776, -37.524, 0.52", "-27.1489, -46.3105, -38.5026, 0.59", "-27.2881, -46.8656, -39.7218, 0.29", "-27.4445, -47.2898, -40.6233, 0.52", "-27.6684, -47.81, -41.6421, 0.44", "-27.8712, -48.2416, -42.4741, 0.44", "-27.9397, -48.3678, -42.7481, 0.44", "-28.11, -48.6477, -43.5253, 0.44", "-28.1702, -48.7756, -44.031, 0.44", "-28.167, -48.8883, -44.5548, 0.44", "-28.0659, -49.0258, -45.1961, 0.44", "-27.9028, -49.1648, -45.7531, 0.44", "-27.716, -49.3066, -46.2606, 0.29", "-27.3832, -49.5476, -47.0811, 0.29", "-27.1833, -49.7076, -47.6192, 0.29", "-26.9468, -49.9432, -48.3438, 0.37", "-26.7687, -50.1728, -49.0285, 0.74", "-26.3889, -50.8074, -50.9586, 0.81", "-26.2033, -51.2556, -52.4287, 0.22", "-26.1206, -51.5987, -53.5995, 0.22", "-26.1197, -51.8167, -54.3615, 0.22", "-26.1592, -52.0735, -55.2185, 0.22", "-26.1896, -52.227, -55.712, 0.29", "-26.2125, -52.4741, -56.4493, 0.29", "-26.1941, -52.5568, -56.6909, 0.59", "-26.0076, -52.8984, -57.6623, 0.22", "-25.8215, -53.1726, -58.4497, 0.29", "-25.6108, -53.5755, -59.444, 0.44", "-25.4369, -54.0658, -60.5433, 0.74", "-25.3107, -54.6698, -61.7848, 0.81", "-25.2614, -55.2066, -62.8632, 0.44", "-25.2605, -55.6644, -63.7208, 0.52", "-25.3617, -56.4891, -65.2358, 0.29", "-25.4501, -56.9429, -66.0484, 0.29", "-25.5064, -57.2732, -66.6602, 0.29", "-25.5489, -57.7149, -67.5882, 0.44", "-25.5293, -57.9441, -68.1195, 0.66", "-25.2771, -58.5501, -69.5938, 0.37", "-25.0616, -58.8194, -70.2545, 0.29", "-24.6629, -59.2302, -71.1195, 0.22", "-24.1341, -59.7227, -71.9812, 0.59", "-23.7309, -60.0612, -72.4496, 0.59", "-23.1736, -60.5047, -73.0106, 0.15", "-22.6436, -60.8877, -73.3992, 0.15", "-22.1159, -61.2716, -73.7189, 0.44", "-21.5726, -61.7034, -73.9827, 0.52", "-20.8451, -62.29, -74.2327, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.7406, -25.0764, -7.19832, 0.66", "-18.3415, -24.8757, -8.40194, 0.66", "-19.1375, -24.5609, -10.186, 0.66", "-19.8263, -24.2121, -11.9741, 0.52", "-20.2758, -23.9155, -13.2495, 0.44", "-20.4833, -23.7366, -13.8585, 0.44", "-20.8025, -23.4286, -14.7773, 0.44", "-21.0199, -23.2011, -15.4082, 0.44", "-21.4692, -22.6731, -16.5263, 0.44", "-21.7534, -22.3058, -17.0978, 0.44", "-22.3014, -21.5997, -18.0005, 0.52", "-22.8597, -20.9114, -18.7515, 0.52", "-23.5381, -20.1765, -19.4682, 0.37", "-24.1307, -19.6471, -19.9474, 0.37", "-24.861, -19.083, -20.3886, 0.37", "-25.8134, -18.3882, -20.8887, 0.37", "-26.4241, -17.9536, -21.1569, 0.44", "-27.2009, -17.4152, -21.4345, 0.44", "-28.5261, -16.5552, -21.8285, 0.29", "-29.3031, -16.1012, -22.0166, 0.29", "-30.2441, -15.5682, -22.1943, 0.29", "-30.6917, -15.3087, -22.2594, 0.29", "-31.5636, -14.7145, -22.3781, 0.29", "-32.1118, -14.2476, -22.4418, 0.29", "-32.7003, -13.6529, -22.4938, 0.66", "-33.5873, -12.6711, -22.531, 0.29", "-34.3428, -11.7602, -22.5262, 0.22", "-35.1796, -10.4871, -22.5049, 0.22", "-35.5322, -9.77908, -22.4897, 0.22", "-35.7594, -9.17764, -22.4749, 0.22", "-35.912, -8.64861, -22.4659, 0.29", "-36.0456, -8.07429, -22.4667, 0.29", "-36.3533, -6.67578, -22.4647, 0.22", "-36.5111, -6.02717, -22.4702, 0.44", "-36.9842, -4.40136, -22.4868, 0.22", "-37.2619, -3.6058, -22.5177, 0.44", "-37.96, -2.09775, -22.6468, 0.66", "-38.4116, -1.30482, -22.7588, 0.22", "-38.7334, -0.830964, -22.8486, 0.22", "-39.2523, -0.137679, -22.9993, 0.29", "-40.0034, 0.76949, -23.2149, 0.22", "-41.0642, 2.01045, -23.4898, 0.37", "-41.8342, 2.88944, -23.6628, 0.52", "-42.515, 3.6768, -23.8197, 0.66", "-42.9779, 4.21593, -23.9164, 0.66", "-43.8767, 5.27962, -24.0708, 0.29", "-44.5015, 6.03527, -24.137, 0.29", "-45.3059, 7.03494, -24.2019, 0.22", "-46.1345, 8.01723, -24.2607, 0.74", "-46.5038, 8.44091, -24.2908, 0.74", "-46.8648, 8.82877, -24.3223, 0.74", "-47.82, 9.80936, -24.4036, 0.29", "-48.7948, 10.7682, -24.4669, 0.44", "-49.5816, 11.5081, -24.4937, 0.22", "-49.9478, 11.834, -24.4881, 0.37", "-50.6084, 12.4116, -24.4689, 0.37", "-51.2917, 12.9881, -24.4364, 0.22", "-51.8673, 13.4796, -24.3909, 0.22", "-52.303, 13.8806, -24.3579, 0.22", "-52.8557, 14.4505, -24.3284, 0.52", "-53.276, 14.9169, -24.3135, 0.22", "-53.864, 15.6169, -24.3021, 0.15", "-54.503, 16.4104, -24.3, 0.22", "-54.9025, 16.9682, -24.303, 0.15", "-55.3234, 17.642, -24.303, 0.37", "-55.5653, 18.0487, -24.3167, 0.37", "-55.8068, 18.4265, -24.3653, 0.15", "-56.0423, 18.7831, -24.468, 0.15", "-56.3327, 19.2224, -24.6809, 0.22", "-56.7572, 19.8619, -25.0525, 0.22", "-57.2263, 20.4779, -25.4771, 0.81", "-58.0591, 21.4038, -26.1944, 0.29", "-58.8147, 22.1594, -26.8243, 0.74", "-59.8664, 23.1334, -27.6476, 0.44", "-60.6505, 23.8305, -28.2669, 0.44", "-61.4817, 24.5552, -28.9316, 0.15", "-62.2279, 25.2024, -29.5, 0.59", "-63.2111, 26.029, -30.177, 0.22", "-63.8897, 26.5305, -30.5556, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.76552, -22.7971, -10.4624, 0.81", "9.21482, -22.8097, -10.8568, 0.81", "9.90494, -22.7728, -11.5587, 0.66", "10.284, -22.7229, -12.0101, 0.66", "10.8262, -22.6367, -12.7406, 1.18", "11.2975, -22.5618, -13.3756, 1.62", "11.9805, -22.4532, -14.2958, 1.18", "12.6958, -22.3376, -15.3288, 0.81", "13.281, -22.1969, -16.2403, 0.96", "13.6074, -22.0787, -16.822, 1.18" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "8.76552, -22.7971, -10.4624, 0.59", "9.4914, -23.6651, -10.6512, 0.59", "9.93537, -24.3754, -10.8323, 0.52", "10.4167, -25.3827, -11.0955, 0.52", "10.7386, -26.4439, -11.3564, 0.44", "10.8526, -27.3044, -11.5494, 0.66", "10.8743, -28.1375, -11.71, 0.52", "10.7145, -29.2875, -11.8699, 0.88", "10.562, -29.779, -11.9136, 0.88", "10.0699, -30.8383, -11.9688, 0.52", "9.49049, -31.8016, -12.0097, 0.52", "9.01683, -32.4495, -12.0257, 0.74", "8.27, -33.3761, -12.0343, 1.03", "7.23198, -34.6216, -12.0767, 0.66", "6.31068, -35.7455, -12.1963, 0.66", "5.43424, -36.84, -12.3784, 0.59", "4.53151, -37.9532, -12.6192, 0.44", "3.81451, -38.8708, -12.849, 0.52", "3.0067, -40.0129, -13.1437, 0.52", "2.45324, -40.9995, -13.3912, 0.88", "2.2076, -41.5812, -13.4905, 0.88", "1.51621, -43.5711, -13.6424, 0.44", "1.18108, -44.6312, -13.6568, 0.74", "0.887778, -45.4427, -13.5841, 0.59", "0.543168, -46.2604, -13.391, 0.44", "-0.0922248, -47.6147, -12.8617, 0.74", "-0.637305, -48.6485, -12.2495, 0.88", "-1.20587, -49.6173, -11.44, 0.74", "-1.86346, -50.6351, -10.4635, 0.52", "-2.4782, -51.5396, -9.58084, 0.52", "-3.09827, -52.4772, -8.64283, 0.81", "-3.75035, -53.6106, -7.54336, 0.96", "-4.0221, -54.2161, -6.96603, 0.96", "-4.32537, -55.134, -6.16793, 0.66", "-4.5726, -56.3231, -5.40998, 0.44", "-4.66031, -56.9228, -5.16916, 0.44", "-4.73656, -57.6866, -4.99721, 0.66", "-4.78942, -58.5009, -4.89955, 0.66", "-4.8104, -59.2375, -4.84021, 0.44", "-4.81598, -59.9764, -4.7872, 0.44", "-4.8108, -60.5927, -4.72738, 0.74", "-4.79297, -61.7574, -4.5656, 1.03", "-4.75576, -62.682, -4.41185, 0.81", "-4.6347, -64.2666, -4.12557, 0.44", "-4.53769, -65.0952, -3.93238, 0.44", "-4.39878, -65.9617, -3.70559, 0.44", "-4.24032, -66.7388, -3.4702, 0.44", "-4.09318, -67.3156, -3.25136, 0.44", "-3.9123, -67.8798, -2.98081, 0.74", "-3.57842, -68.6895, -2.44781, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.8099, 3.0608, -10.6774, 0.44", "20.0602, 3.04689, -11.0318, 0.44", "21.7028, 3.0333, -11.1403, 0.52", "23.0975, 3.07445, -11.0749, 0.52", "24.1314, 3.13884, -10.9134, 0.81", "26.0246, 3.31188, -10.4226, 1.03", "27.2782, 3.45884, -10.0256, 0.52", "29.0231, 3.65174, -9.30454, 0.59", "30.5154, 3.83266, -8.58031, 0.81", "31.5479, 3.94494, -8.03337, 0.81", "32.9483, 4.05127, -7.27826, 0.66", "34.1427, 4.10204, -6.6538, 0.66", "36.1412, 4.13013, -5.68804, 0.59", "37.7822, 4.06662, -5.04455, 0.96", "39.1195, 3.93803, -4.60276, 0.96", "40.6683, 3.72378, -4.16394, 0.96", "41.4929, 3.55935, -3.95127, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.8099, 3.0608, -10.6774, 1.03", "17.4502, 3.70137, -11.4679, 1.03", "17.1835, 4.37033, -12.2444, 0.81", "16.9448, 5.09679, -13.0438, 0.52", "16.7329, 5.75623, -13.7928, 0.44", "16.5194, 6.36109, -14.5643, 0.44", "16.2536, 6.9688, -15.4518, 0.44", "16.114, 7.3212, -15.9792, 0.52", "15.8876, 7.96497, -16.9755, 0.74", "15.6698, 8.59874, -18.0155, 0.74", "15.3221, 9.34477, -19.3763, 0.88", "14.7179, 10.2329, -21.221, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.9039, -3.90878, 2.7473, 0.74", "20.4832, -4.63739, 3.63761, 0.74", "21.0757, -5.38263, 4.54824, 0.74", "21.5463, -5.97462, 5.27161, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.9039, -3.90878, 2.7473, 0.74", "21.3874, -0.22963, 6.09284, 0.74", "21.827, 1.04108, 7.03352, 0.52", "22.1684, 2.17495, 7.71453, 0.74", "22.4769, 3.21483, 8.22685, 0.74", "22.691, 3.906, 8.50344, 0.74", "23.0258, 4.91652, 8.8363, 0.66", "23.4313, 6.25959, 8.88629, 0.66", "23.7027, 7.23904, 8.86245, 0.66", "23.9805, 8.23801, 8.78851, 0.59", "24.3887, 9.54106, 8.64511, 0.74", "24.6422, 10.3514, 8.52787, 0.74", "24.8455, 11.0401, 8.40794, 0.74", "24.9857, 11.7389, 8.26184, 0.74", "25.1588, 12.8175, 8.03739, 0.66", "25.2636, 13.5967, 7.86986, 0.66", "25.393, 14.5468, 7.65238, 0.81", "25.4756, 15.1047, 7.52305, 0.81", "25.6727, 16.4259, 7.2823, 0.52", "25.8749, 17.743, 7.11204, 0.66", "26.0157, 18.7957, 7.06714, 0.66", "26.1419, 19.6382, 7.18725, 0.44", "26.2427, 20.3275, 7.385, 0.66", "26.4373, 22.0008, 7.99672, 0.66", "26.4949, 22.7958, 8.32388, 0.66", "26.5307, 24.0649, 8.84206, 0.44", "26.6417, 27.0466, 10.1024, 0.44", "26.7212, 28.269, 10.6087, 0.66", "26.894, 29.6623, 11.1386, 0.81", "27.1024, 30.7811, 11.5005, 0.81", "27.3784, 31.9841, 11.8414, 0.52", "27.8769, 33.6818, 12.2807, 0.52", "28.1819, 34.5514, 12.5052, 0.44", "28.7254, 35.8989, 12.9747, 0.44", "29.1718, 36.9625, 13.4161, 0.59", "29.5751, 37.9941, 13.9085, 0.59", "30.0598, 39.4517, 14.6608, 0.59", "30.3603, 40.5959, 15.3037, 0.59", "30.6437, 41.7467, 16.0121, 0.59", "30.8936, 42.6733, 16.6198, 0.52", "31.237, 43.704, 17.2849, 0.52", "31.7181, 44.9233, 18.0164, 0.52", "32.5058, 46.7376, 18.9646, 0.52", "32.9352, 47.6149, 19.3859, 0.52", "33.5358, 48.6858, 19.8965, 0.52", "34.1169, 49.6092, 20.3543, 0.29", "34.7468, 50.5106, 20.7539, 0.44", "35.5338, 51.5738, 21.1307, 0.44", "36.2409, 52.5813, 21.3205, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.80395, 23.6245, -7.74047, 1.03", "-10.1077, 23.7908, -8.7627, 1.03", "-10.4531, 23.98, -9.92536, 1.03", "-10.8702, 24.2085, -11.3292, 1.03", "-11.3467, 24.4695, -12.933, 1.03" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.80395, 23.6245, -7.74047, 0.52", "-9.25257, 24.5549, -9.64321, 0.52", "-8.92988, 25.1999, -10.6771, 0.52", "-8.57907, 25.4772, -11.8843, 0.52", "-8.76636, 26.0582, -11.444, 0.44", "-9.23411, 27.067, -10.5483, 0.44", "-10.7785, 29.6169, -8.16105, 0.44", "-11.3079, 30.2782, -7.43658, 0.52", "-11.9461, 30.9027, -6.55708, 0.37", "-12.3311, 31.2056, -6.01524, 0.37", "-12.9167, 31.6194, -5.1016, 0.37", "-13.3128, 31.8972, -4.37305, 0.66", "-13.6451, 32.1765, -3.59419, 0.81", "-14.0308, 32.7635, -1.99359, 0.44", "-14.1643, 33.3109, -0.593064, 0.44", "-14.1491, 33.9457, 0.927013, 0.37", "-14.067, 34.3626, 1.85779, 0.37", "-13.9102, 35.0475, 3.33676, 0.37", "-13.8067, 35.6181, 4.539, 0.37", "-13.7677, 36.1314, 5.59696, 0.37", "-13.8417, 36.675, 6.83861, 0.66", "-14.142, 37.2493, 8.44078, 0.66", "-14.5855, 37.6517, 9.93937, 0.52", "-15.0202, 37.835, 11.1134, 0.52", "-15.2759, 37.8647, 11.7824, 0.52", "-15.8968, 37.7997, 13.4012, 0.37", "-16.3219, 37.6681, 14.5301, 0.37", "-16.6836, 37.5115, 15.5365, 0.37", "-17.1379, 37.3202, 16.9332, 0.37", "-17.608, 37.1987, 18.3946, 0.37", "-18.0644, 37.2035, 19.6364, 0.37", "-18.2633, 37.268, 20.0966, 0.37", "-18.8725, 37.6395, 21.3167, 0.37", "-19.2915, 38.0483, 22.1268, 0.37", "-19.6412, 38.5575, 22.8326, 0.37", "-20.0223, 39.3938, 23.792, 0.29", "-20.2174, 40.1195, 24.6091, 0.29", "-20.2826, 40.7862, 25.4052, 0.29", "-20.2617, 41.5654, 26.4444, 0.29", "-20.1872, 42.1705, 27.3176, 0.66", "-20.0551, 42.951, 28.4926, 1.25", "-19.9594, 43.7083, 29.6549, 1.25", "-19.9526, 44.7206, 31.2297, 0.44", "-20.0671, 45.6918, 32.7272, 0.44", "-20.3578, 46.6344, 34.1206, 0.66", "-20.6033, 47.1591, 34.8441, 0.88", "-21.4018, 48.3459, 36.3058, 0.44", "-22.0544, 49.0603, 37.061, 0.44", "-22.5856, 49.513, 37.4915, 0.44", "-23.9148, 50.4587, 38.2826, 0.44", "-24.6863, 50.9083, 38.6208, 0.37", "-25.9967, 51.5714, 39.0219, 0.74", "-27.1765, 52.0743, 39.19, 0.22", "-28.1914, 52.4219, 39.2076, 0.22", "-29.4962, 52.7585, 39.0912, 0.22", "-30.6803, 53.0068, 38.8874, 0.15", "-31.7737, 53.1858, 38.6082, 0.29", "-33.16, 53.3292, 38.1206, 0.29", "-33.7816, 53.3502, 37.8071, 0.07", "-34.5757, 53.3351, 37.2831, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "27.1239, 15.8451, 25.6913, 0.81", "28.4659, 15.6065, 26.5039, 0.81", "29.9938, 15.369, 27.1285, 0.44", "31.3535, 15.1292, 27.4577, 0.44", "32.5935, 14.8852, 27.527, 0.66", "33.0807, 14.7956, 27.4918, 0.96", "34.4568, 14.5545, 27.2773, 0.52", "35.3773, 14.3995, 26.9826, 0.29", "36.4144, 14.2586, 26.5727, 0.29", "37.6256, 14.1648, 26.0915, 0.29", "38.8511, 14.1631, 25.6951, 0.29", "40.5017, 14.2734, 25.2444, 0.29", "41.6176, 14.3976, 25.0424, 0.37", "42.9447, 14.5921, 24.9712, 0.66", "44.3861, 14.8005, 25.1748, 0.88", "46.246, 15.0458, 25.6999, 0.37", "46.9848, 15.1274, 25.9833, 0.37", "48.5471, 15.2755, 26.6602, 0.74", "50.1766, 15.3907, 27.3609, 0.81", "53.034, 15.5162, 28.5717, 0.52", "54.3431, 15.5175, 29.1222, 0.66", "56.3926, 15.454, 29.9975, 0.52", "57.9363, 15.4159, 30.6015, 0.29", "59.7667, 15.398, 31.1938, 0.29", "61.5579, 15.3849, 31.6356, 0.37", "63.1961, 15.34, 31.8922, 0.37", "64.6058, 15.2174, 32.0822, 0.37", "66.0713, 14.9951, 32.1674, 0.81", "66.987, 14.8103, 32.1519, 0.88", "67.8659, 14.5798, 32.0385, 0.52", "68.8014, 14.3287, 31.858, 0.37", "69.8226, 14.1045, 31.6442, 0.74", "71.4048, 13.8333, 31.3611, 0.37", "72.577, 13.6706, 31.2407, 0.37", "73.3919, 13.581, 31.1719, 0.37", "74.9883, 13.4161, 31.0511, 0.29", "75.7587, 13.3076, 30.987, 0.29", "77.0677, 13.0939, 30.8669, 0.59", "77.7933, 12.9634, 30.8617, 0.66", "78.8619, 12.7772, 30.8859, 0.37", "79.9675, 12.5798, 30.9143, 0.52", "81.5264, 12.2842, 30.9221, 0.22", "82.6246, 12.0679, 30.931, 0.37", "85.2096, 11.5377, 30.9287, 0.37", "86.1559, 11.3527, 30.9328, 0.59", "87.2543, 11.1517, 30.969, 0.81", "88.9107, 10.8526, 31.131, 0.22", "89.9833, 10.6384, 31.3069, 0.81", "91.1397, 10.3621, 31.5306, 0.52", "92.852, 9.91259, 31.8679, 0.22", "94.0726, 9.57884, 32.1499, 0.29", "95.9216, 9.06248, 32.6742, 0.96", "97.2911, 8.67399, 33.1254, 0.22", "98.1078, 8.46715, 33.4017, 0.66", "99.2977, 8.21922, 33.8027, 0.37", "100.175, 8.0572, 34.0702, 0.22", "101.672, 7.78639, 34.4385, 0.22", "102.463, 7.64693, 34.5919, 0.52", "103.526, 7.48685, 34.8155, 0.88", "105.08, 7.3064, 35.1885, 0.22", "105.887, 7.25127, 35.3916, 0.22", "106.596, 7.22333, 35.5491, 0.37", "107.499, 7.19893, 35.7068, 0.15", "108.499, 7.17684, 35.8597, 0.22", "109.349, 7.15827, 35.9709, 0.66", "110.043, 7.1607, 36.033, 1.03", "111.005, 7.2092, 36.1369, 0.37", "113.043, 7.39366, 36.4345, 0.22", "113.811, 7.47359, 36.5564, 0.37", "114.293, 7.52659, 36.6339, 0.37", "115.056, 7.63368, 36.7664, 0.22", "116.405, 7.84784, 37.0623, 0.29", "117.364, 8.04983, 37.2887, 0.22", "118.135, 8.2417, 37.4623, 0.88", "118.67, 8.38386, 37.5976, 0.88", "119.826, 8.6974, 37.8872, 0.15", "121.135, 9.02119, 38.2428, 0.15", "122.913, 9.4064, 38.7355, 0.15", "123.737, 9.55934, 38.9777, 0.81", "125.956, 9.8749, 39.6979, 0.22", "126.799, 9.93399, 39.9766, 0.29", "128.045, 9.90549, 40.3886, 0.29", "129.21, 9.75529, 40.7286, 0.66", "130.218, 9.4905, 40.9817, 0.22", "131.058, 9.19478, 41.1268, 0.29", "132.099, 8.7776, 41.1947, 0.22", "132.995, 8.43148, 41.1905, 0.22", "134.033, 8.06525, 41.1013, 0.74", "135.458, 7.57873, 40.8961, 0.15", "136.438, 7.27446, 40.6884, 0.44", "137.586, 6.96872, 40.3317, 0.22", "138.583, 6.73396, 39.9532, 0.74", "139.566, 6.49531, 39.5101, 0.37", "141.096, 6.06148, 38.7231, 0.22", "142.188, 5.68514, 38.077, 0.74", "144.002, 4.90222, 36.8859, 0.22", "144.547, 4.61988, 36.4915, 0.52", "144.902, 4.40793, 36.225, 0.52", "145.758, 3.83066, 35.586, 0.22", "146.363, 3.41367, 35.175, 0.22", "147.336, 2.73856, 34.542, 0.59", "148.96, 1.69484, 33.5607, 0.07", "150.005, 1.10276, 32.9528, 0.15", "150.811, 0.709244, 32.5063, 0.66", "151.901, 0.261601, 31.9373, 0.15", "152.967, -0.111478, 31.424, 0.22", "154.273, -0.482429, 30.8507, 0.07", "154.887, -0.63932, 30.6139, 0.29", "155.823, -0.864745, 30.3139, 0.15", "156.645, -1.10203, 30.1841, 0.15", "157.455, -1.38952, 30.2207, 0.44", "158.311, -1.71405, 30.3694, 0.22", "158.976, -1.98134, 30.5328, 0.59", "160.116, -2.45882, 30.9054, 0.22", "162.242, -3.39567, 31.7068, 0.37", "163.808, -4.13452, 32.3335, 0.15", "164.534, -4.4774, 32.6559, 0.88", "164.925, -4.64167, 32.8272, 0.88", "166.756, -5.26318, 33.5462, 0.22", "167.52, -5.44935, 33.7489, 0.15", "168.401, -5.58222, 33.8466, 0.37", "170.598, -5.75453, 33.8444, 0.22", "171.999, -5.82378, 33.8087, 0.22", "173.058, -5.83187, 33.7351, 0.59", "175.38, -5.71317, 33.376, 0.07", "176.805, -5.58897, 33.1009, 0.07", "177.829, -5.46702, 32.8249, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "27.1239, 15.8451, 25.6913, 0.52", "27.5989, 15.2352, 26.6882, 0.52", "28.1611, 14.5637, 27.7668, 0.44", "28.846, 13.6921, 29.0434, 0.44", "29.3937, 12.9621, 30.0148, 0.59", "30.0726, 12.0582, 31.1128, 0.29", "30.4261, 11.5867, 31.6272, 0.37", "30.8812, 11.0497, 32.1753, 0.37", "31.3475, 10.5573, 32.5378, 0.22", "31.7816, 10.0901, 32.7094, 0.22", "32.3069, 9.47419, 32.7898, 0.22", "32.7684, 8.86757, 32.7846, 0.59", "33.055, 8.47075, 32.7538, 0.96", "33.6516, 7.58625, 32.6592, 0.22", "34.1557, 6.75904, 32.5906, 0.29", "34.4652, 6.13069, 32.6065, 0.29", "34.7219, 5.41258, 32.7103, 0.66", "34.8993, 4.6771, 32.9139, 0.44", "35.0293, 3.70733, 33.3262, 0.15", "35.083, 2.77995, 33.8529, 0.29", "35.1334, 1.43101, 34.9602, 0.44", "35.1583, 0.750874, 35.6332, 0.88", "35.1773, 0.14191, 36.3708, 0.96", "35.1963, -0.920812, 37.9565, 0.15", "35.2186, -1.43784, 38.883, 0.37", "35.3423, -2.82903, 41.6968, 0.66", "35.4261, -3.24023, 42.6161, 0.66", "35.7393, -4.05288, 44.6947, 0.66", "36.0414, -4.55155, 46.1757, 0.37", "36.3703, -4.9395, 47.462, 0.37", "36.693, -5.25579, 48.5109, 0.22", "37.1868, -5.67703, 49.8148, 0.22", "37.8109, -6.16765, 51.2364, 0.22", "38.527, -6.74174, 52.6027, 0.22", "38.8182, -6.99808, 53.106, 0.29", "39.5378, -7.6321, 54.2865, 0.29", "40.0096, -8.03237, 55.0511, 0.29", "40.197, -8.18772, 55.3295, 0.44", "40.8188, -8.69967, 56.2383, 0.22", "41.4519, -9.23097, 57.134, 0.44", "42.0503, -9.74024, 57.975, 0.22", "42.937, -10.4978, 59.2288, 0.22", "43.3695, -10.8673, 59.8949, 0.59", "44.1114, -11.5313, 61.1731, 0.59", "44.5608, -11.9448, 62.0447, 0.15", "45.0169, -12.3492, 63.0471, 0.66", "45.7642, -12.9494, 64.8241, 0.15", "46.5703, -13.4988, 66.791, 0.44", "47.194, -13.8611, 68.3156, 1.03", "48.025, -14.2878, 70.2831, 1.03", "49.3204, -14.8683, 73.2434, 0.44", "50.6991, -15.4625, 76.3008, 0.15", "51.8914, -15.981, 78.7994, 0.44", "52.7137, -16.3417, 80.3969, 0.29", "53.8484, -16.8247, 82.4946, 0.29", "54.5251, -17.1141, 83.6676, 0.66", "55.2875, -17.4766, 84.8696, 0.22", "56.0557, -17.8892, 85.9537, 0.22", "56.428, -18.1079, 86.4207, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "23.7185, 19.0244, 20.6373, 0.44", "24.2749, 18.5559, 20.5517, 0.44", "25.0634, 18.0981, 20.461, 0.44", "25.8338, 17.7963, 20.3948, 0.44", "26.7355, 17.5438, 20.3332, 0.37", "27.5319, 17.3486, 20.2672, 0.37", "28.444, 17.139, 20.199, 0.66", "29.3164, 16.9744, 20.1495, 0.44", "29.9775, 16.8518, 20.0909, 0.44", "30.501, 16.7418, 20.009, 0.44", "31.4753, 16.5086, 19.8082, 0.44", "32.2667, 16.2678, 19.6067, 0.44", "32.8465, 16.0619, 19.4105, 0.52", "34.0194, 15.6514, 18.9033, 0.44", "34.6766, 15.4609, 18.5492, 0.44", "35.4487, 15.3149, 18.0506, 0.44", "35.944, 15.2646, 17.6822, 0.44", "36.4333, 15.2463, 17.2864, 0.44", "36.9891, 15.2658, 16.8197, 0.37", "37.6909, 15.3673, 16.2429, 0.37", "38.1507, 15.4744, 15.8143, 0.37", "38.5076, 15.5876, 15.4373, 0.37", "38.7829, 15.6971, 15.1292, 0.44", "39.3886, 15.9912, 14.4259, 0.44", "39.8412, 16.2435, 13.9032, 0.44", "40.4128, 16.5834, 13.2953, 0.59", "41.1171, 16.9783, 12.6484, 0.74", "41.745, 17.2877, 12.1377, 0.29", "42.191, 17.4761, 11.8171, 0.29", "42.8124, 17.6974, 11.463, 0.29", "43.5603, 17.9158, 11.0888, 0.37", "44.3834, 18.1301, 10.7065, 0.74", "45.1911, 18.3174, 10.3325, 0.44", "45.59, 18.4019, 10.1416, 0.66", "46.308, 18.52, 9.76363, 0.74", "47.1345, 18.6353, 9.29537, 0.29", "47.8295, 18.7205, 8.84301, 0.29", "48.2278, 18.7565, 8.56993, 0.29", "48.558, 18.7524, 8.39197, 0.29", "49.1447, 18.6722, 8.28746, 0.22", "50.0332, 18.6204, 8.5533, 0.22", "50.3784, 18.6525, 8.68148, 0.29", "50.7302, 18.7171, 8.7895, 0.29", "51.1236, 18.8103, 8.86515, 0.22", "52.0569, 19.0168, 8.90374, 0.59", "53.0248, 19.2111, 8.80626, 0.22", "53.9084, 19.3641, 8.61193, 0.52", "54.5502, 19.4539, 8.40817, 0.29", "55.1754, 19.5321, 8.16739, 0.66", "56.1036, 19.6327, 7.71806, 0.15", "56.5981, 19.6695, 7.42197, 0.37", "57.0853, 19.7017, 7.09851, 0.44", "57.6934, 19.775, 6.72821, 0.15", "58.1253, 19.8517, 6.4879, 0.29", "58.5873, 19.9461, 6.24542, 0.44", "59.208, 20.06, 5.96651, 0.59", "59.9345, 20.1508, 5.70327, 0.74", "60.7876, 20.224, 5.4285, 0.52", "61.7978, 20.3287, 5.18538, 0.29", "62.3158, 20.3951, 5.08216, 0.22", "63.1159, 20.5559, 4.95998, 0.52", "64.1173, 20.8491, 4.80497, 0.22", "64.7953, 21.0752, 4.69085, 0.22", "65.7872, 21.4542, 4.56586, 0.59", "65.9922, 21.536, 4.5526, 0.59", "66.6452, 21.7805, 4.47874, 0.29", "67.5097, 22.0638, 4.27201, 0.22", "68.1406, 22.2287, 4.03299, 0.22", "69.0437, 22.4047, 3.61212, 0.37", "70.1786, 22.5591, 3.10277, 0.15", "70.9964, 22.6434, 2.78071, 0.37", "71.847, 22.715, 2.50688, 0.37", "73.0141, 22.8416, 2.20677, 0.22", "73.7761, 22.9597, 2.00298, 0.22", "74.8728, 23.1608, 1.65624, 0.22", "75.2742, 23.2527, 1.54087, 0.52", "76.0475, 23.4099, 1.41523, 0.52", "76.7641, 23.5492, 1.34636, 0.22", "77.6506, 23.7049, 1.28545, 0.15", "78.4957, 23.8693, 1.18821, 0.15", "79.16, 24.0118, 1.01916, 0.15", "80.2655, 24.2526, 0.687304, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "23.7185, 19.0244, 20.6373, 0.74", "24.1155, 19.4605, 21.2134, 0.74", "24.7235, 20.1558, 21.9243, 0.66", "25.5307, 21.064, 22.8102, 0.59", "26.2149, 21.7817, 23.4808, 0.88", "26.8387, 22.3431, 23.9921, 0.59", "27.6168, 22.9917, 24.6384, 0.74", "28.3656, 23.5803, 25.2561, 0.66", "29.0121, 24.1242, 25.8202, 0.66", "29.6934, 24.745, 26.5474, 0.52", "30.3991, 25.4048, 27.5773, 0.44", "30.963, 25.9613, 28.8024, 0.44", "31.3662, 26.4251, 30.0585, 0.44", "31.5934, 26.7927, 31.2077, 0.44", "31.7422, 27.2, 32.509, 0.66", "31.8269, 27.6562, 33.9568, 0.66", "31.8541, 28.1979, 35.5408, 0.66", "31.846, 28.5595, 36.5466, 0.88", "31.78, 29.1945, 38.3976, 0.88", "31.7603, 29.4064, 39.0433, 0.59", "31.7279, 29.9745, 40.8997, 0.59", "31.7324, 30.2749, 42.044, 0.59", "31.7706, 30.5871, 43.3186, 0.59", "31.8188, 30.7513, 44.0656, 0.59", "31.9648, 30.9535, 45.0639, 0.59", "32.2711, 31.2052, 46.506, 0.59", "32.6251, 31.38, 47.7269, 0.59", "33.0151, 31.5643, 48.8722, 0.44", "33.491, 31.8394, 50.2776, 0.44", "33.9669, 32.2316, 51.7959, 0.44", "34.0609, 32.3539, 52.1806, 0.44", "34.3102, 32.8911, 53.6307, 0.44", "34.568, 33.7069, 55.7144, 0.44", "34.7202, 34.2563, 57.2165, 0.44", "34.9541, 35.0939, 59.7018, 0.29", "35.0741, 35.5104, 61.2758, 0.29", "35.1147, 35.69, 62.1771, 0.29", "35.125, 35.8945, 63.7174, 0.29", "35.0972, 35.9841, 65.3894, 0.29", "35.0331, 36.0053, 66.9875, 0.29", "34.8543, 35.9881, 69.403, 0.29", "34.716, 35.9671, 70.4821, 0.29", "34.5214, 35.928, 71.6128, 0.29", "34.1073, 35.8633, 73.413, 0.29", "33.5727, 35.8226, 75.3311, 0.29", "33.0761, 35.8357, 76.9316, 0.29", "32.4216, 35.9175, 78.9834, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-3.54753, 43.8943, -12.7071, 0.52", "-3.69692, 44.8814, -11.9357, 0.52", "-4.04814, 46.2496, -10.9581, 0.52", "-4.44603, 47.3094, -10.2153, 0.52", "-4.8272, 48.0818, -9.69453, 0.44", "-5.28077, 48.7737, -9.24909, 0.44", "-5.59955, 49.1475, -9.00698, 0.44", "-6.49957, 49.8164, -8.69307, 0.29", "-7.32256, 50.2165, -8.59019, 0.22", "-8.12454, 50.5203, -8.60236, 0.29", "-9.31372, 50.9018, -8.60459, 0.66", "-10.2859, 51.197, -8.59573, 0.29", "-11.5163, 51.6016, -8.49954, 0.29", "-12.2428, 51.8607, -8.46161, 0.29", "-13.0753, 52.1699, -8.41542, 0.29", "-14.7007, 52.7732, -8.19032, 0.29", "-15.6583, 53.1918, -7.92421, 0.66", "-16.8833, 53.795, -7.37175, 0.81", "-18.2171, 54.4882, -6.60255, 0.22", "-19.1551, 55.0302, -5.96944, 0.59", "-20.2451, 55.7098, -5.12365, 0.29", "-21.2649, 56.3301, -4.30966, 0.29", "-22.3133, 56.9765, -3.33954, 0.37", "-23.1324, 57.5212, -2.45211, 0.52", "-24.0958, 58.2281, -1.26848, 0.29", "-24.8286, 58.855, -0.350941, 0.29", "-25.6285, 59.6506, 0.688181, 0.15", "-26.3101, 60.368, 1.58383, 0.29", "-26.988, 61.1352, 2.49041, 1.18", "-27.3998, 61.634, 3.08257, 1.18", "-28.237, 62.6832, 4.33196, 0.37", "-29.0524, 63.9164, 5.75784, 0.22", "-29.274, 64.3364, 6.23334, 0.22", "-29.5971, 64.9783, 6.9621, 0.66", "-29.9926, 65.6526, 7.74848, 0.52", "-30.6608, 66.6392, 9.00109, 0.29", "-31.3865, 67.5777, 10.1645, 0.29", "-31.8446, 68.1237, 10.738, 0.29", "-32.4603, 68.8474, 11.3834, 0.81", "-33.6353, 70.204, 12.467, 0.22", "-34.3621, 70.9772, 13.0033, 0.22", "-35.5574, 72.1656, 13.7275, 0.15", "-36.2917, 72.8191, 14.0991, 0.22", "-36.8037, 73.2557, 14.3401, 0.22", "-37.7008, 74.0549, 14.7705, 0.22", "-38.725, 75.0777, 15.2718, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-3.54753, 43.8943, -12.7071, 0.37", "-2.26709, 45.0632, -12.89, 0.37", "-1.75763, 45.6127, -12.9786, 0.37", "-0.999346, 46.6467, -13.2401, 0.37", "-0.583342, 47.3418, -13.4683, 0.37", "-0.344729, 47.7691, -13.6004, 0.29", "0.0303655, 48.4331, -13.7783, 0.29", "0.527138, 49.3387, -13.9397, 0.52", "1.22664, 50.4456, -14.0447, 0.66", "1.9088, 51.3957, -14.036, 0.66", "2.68767, 52.3567, -13.9201, 0.22", "3.36017, 53.1309, -13.7718, 0.59", "4.25298, 54.1326, -13.4833, 0.37", "4.95183, 54.916, -13.1314, 0.22", "5.54265, 55.6671, -12.6954, 0.22", "5.8102, 56.1256, -12.3898, 0.22", "5.99514, 56.6259, -12.0495, 0.52", "6.2234, 57.5969, -11.3874, 0.22", "6.30473, 58.5092, -10.775, 0.15", "6.28829, 59.4649, -10.1301, 0.29", "6.20177, 60.394, -9.4676, 0.29", "6.13187, 60.9095, -9.06301, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.6074, -22.0787, -16.822, 0.52", "13.6557, -22.5055, -18.3585, 0.52", "13.6232, -22.8147, -19.3603, 0.52", "13.5309, -23.0924, -20.2505, 0.52", "13.3593, -23.4113, -21.3888, 0.52", "13.1093, -23.8038, -22.9466, 0.52", "12.9837, -24.0013, -23.7573, 0.52", "12.8816, -24.1193, -24.1866, 0.52", "12.7168, -24.3117, -24.8818, 0.52", "12.551, -24.6207, -25.8494, 0.52", "12.5373, -24.7849, -26.2838, 0.52", "12.8236, -25.3991, -27.4127, 0.52", "13.1002, -25.7635, -27.9293, 0.52", "13.455, -26.1702, -28.3858, 0.52", "13.9831, -26.7646, -28.967, 0.66", "14.3703, -27.2376, -29.3726, 0.88", "15.1221, -28.2188, -30.1979, 0.74", "15.6668, -28.9511, -30.8309, 0.74", "15.9982, -29.4207, -31.2885, 0.74", "16.4002, -30.073, -32.0431, 0.74", "16.644, -30.5483, -32.7174, 0.52", "16.7919, -30.924, -33.3077, 0.37", "16.9314, -31.4008, -34.2102, 0.37", "17.0231, -31.7738, -35.0327, 0.59", "17.1523, -32.2194, -36.2245, 0.37", "17.2753, -32.482, -37.0436, 0.37", "17.3688, -32.6196, -37.4985, 0.37", "17.5489, -32.8897, -38.2431, 0.37", "17.7071, -33.1851, -38.9309, 0.37", "17.8625, -33.5685, -39.7269, 0.44", "17.9811, -33.9828, -40.558, 0.44", "18.0323, -34.5107, -41.6711, 0.59", "17.9231, -35.0761, -42.8943, 0.44", "17.7245, -35.5182, -43.75, 0.44", "17.5254, -35.8235, -44.301, 0.44", "17.2259, -36.1937, -44.9463, 0.44", "16.7249, -36.7324, -45.8798, 0.44", "16.2494, -37.1843, -46.7041, 0.44", "15.8821, -37.532, -47.3504, 0.74", "15.3621, -38.1036, -48.2682, 0.96", "14.9081, -38.6949, -49.0905, 0.52", "14.444, -39.4044, -49.9348, 0.66", "14.0389, -40.1407, -50.7084, 1.25", "13.7531, -40.6946, -51.2664, 1.11", "13.2704, -41.5897, -52.1555, 0.44", "12.8436, -42.3228, -52.8706, 0.44", "12.505, -42.8759, -53.4105, 0.66", "12.0327, -43.6019, -54.107, 0.44", "11.6712, -44.1011, -54.5863, 0.44", "11.2696, -44.5126, -55.0224, 0.44", "10.8338, -44.7981, -55.4026, 0.44", "10.1702, -45.0665, -55.8217, 0.44", "9.56218, -45.2479, -56.1298, 0.74", "8.81063, -45.4417, -56.4408, 1.11", "7.71242, -45.7328, -56.8678, 0.44", "7.09613, -45.9101, -57.1251, 0.44", "6.45456, -46.1099, -57.4504, 0.52", "5.5227, -46.382, -58.0375, 0.37", "4.95233, -46.524, -58.5077, 0.59", "4.24653, -46.6578, -59.259, 0.74", "3.65978, -46.7411, -60.0446, 0.74", "3.06968, -46.8008, -60.9192, 0.74", "2.61377, -46.8144, -61.6608, 0.52", "2.23267, -46.7784, -62.3126, 0.52", "1.77576, -46.7048, -63.0747, 0.22", "1.27646, -46.6031, -63.7854, 0.22", "0.900209, -46.5238, -64.2091, 0.44", "0.436568, -46.4405, -64.6511, 0.44", "0.166112, -46.4055, -64.8717, 0.44", "-0.692186, -46.2822, -65.4632, 0.15", "-1.63166, -46.1169, -66.0212, 0.15", "-2.35962, -45.9422, -66.4158, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "13.6074, -22.0787, -16.822, 0.52", "13.6861, -21.6518, -17.8976, 0.52", "13.6607, -21.0635, -19.2504, 0.52", "13.5965, -20.5293, -20.3178, 0.74", "13.5358, -20.0434, -21.1874, 0.96", "13.4358, -19.3115, -22.4473, 1.11", "13.3349, -18.467, -23.7928, 0.52", "13.1917, -17.6228, -25.0328, 0.52", "13.0796, -16.8334, -26.0218, 0.66", "13.0567, -16.3523, -26.5313, 0.66", "13.183, -15.266, -27.4776, 0.44", "13.504, -14.3219, -28.0796, 0.44", "13.9512, -13.5921, -28.34, 0.44", "14.5094, -12.9039, -28.4412, 0.52", "15.8593, -11.5442, -28.5588, 0.59", "16.5126, -11.0061, -28.5996, 0.37", "17.3947, -10.4163, -28.6337, 0.59", "18.8583, -9.64217, -28.6655, 0.44", "19.874, -9.17571, -28.7035, 0.29", "21.0712, -8.66447, -28.8179, 0.37", "22.3029, -8.17414, -29.0194, 0.29", "23.1359, -7.85702, -29.2132, 0.66", "24.7013, -7.26334, -29.7274, 0.44", "25.5602, -6.9119, -30.13, 0.44", "26.7322, -6.3731, -30.7994, 0.52", "27.3372, -6.05454, -31.2298, 0.66", "28.5337, -5.33881, -32.2747, 0.44", "29.3423, -4.82351, -33.0692, 0.44", "29.8754, -4.47079, -33.6608, 0.44", "30.4351, -4.11951, -34.2651, 0.37", "31.398, -3.57721, -35.2375, 0.44", "32.1304, -3.2476, -35.8754, 0.52", "33.3058, -2.83743, -36.708, 0.44", "34.6531, -2.44976, -37.5324, 0.22", "35.3724, -2.24523, -37.9219, 0.29", "35.9512, -2.08334, -38.1892, 0.37", "36.9446, -1.84861, -38.5472, 0.22", "38.0523, -1.62449, -38.8741, 0.22", "39.0241, -1.42611, -39.1022, 0.29", "39.7748, -1.21402, -39.2397, 0.29", "40.6837, -0.847582, -39.4113, 0.29", "41.5555, -0.368849, -39.5721, 0.29", "42.7605, 0.409911, -39.7971, 0.22", "43.2629, 0.736815, -39.8665, 0.29", "44.2229, 1.33496, -39.9629, 0.29", "44.8251, 1.68985, -40.0174, 0.44", "45.9441, 2.38311, -40.1478, 0.74", "46.5474, 2.77424, -40.2169, 0.29", "47.6536, 3.47943, -40.3579, 0.29", "48.5021, 3.99893, -40.4789, 0.29", "49.2094, 4.41312, -40.5948, 0.44", "50.1988, 4.98462, -40.7379, 0.59", "51.1445, 5.51885, -40.8837, 0.37", "52.0429, 6.03787, -40.9755, 0.22", "52.8274, 6.52124, -41.0373, 0.22", "53.2362, 6.78759, -41.0421, 0.22", "54.5481, 7.66409, -41.0054, 0.44", "55.6907, 8.41748, -40.9039, 0.22", "56.7171, 9.11072, -40.7251, 0.66", "57.3818, 9.56629, -40.5551, 0.59", "58.308, 10.1685, -40.2816, 0.66", "59.239, 10.7504, -39.9949, 0.37", "60.0068, 11.216, -39.7714, 0.15", "61.0211, 11.6925, -39.4477, 0.22", "61.5734, 11.8664, -39.3208, 0.22", "62.65, 12.0997, -39.0785, 0.29", "63.4048, 12.22, -38.9266, 0.29", "63.9143, 12.2942, -38.8459, 0.52", "65.7467, 12.521, -38.7079, 0.59", "67.1735, 12.633, -38.678, 0.37", "68.5788, 12.6853, -38.6868, 0.37", "69.3053, 12.6795, -38.7038, 0.88", "69.9263, 12.6301, -38.7178, 0.96", "71.3265, 12.4243, -38.7747, 0.44", "73.5395, 11.9789, -38.8707, 0.29", "74.6544, 11.7152, -38.8705, 0.29", "75.6209, 11.4766, -38.8278, 0.29", "76.4804, 11.2723, -38.7356, 0.59", "77.5225, 11.0361, -38.561, 0.22", "78.5372, 10.8346, -38.3377, 0.22", "79.8928, 10.6049, -38.0246, 0.59", "81.2271, 10.4401, -37.7295, 0.22", "81.747, 10.4066, -37.6333, 0.22", "82.809, 10.4311, -37.5259, 0.44", "83.3916, 10.4844, -37.5056, 0.81", "84.984, 10.7007, -37.5775, 0.44", "85.6682, 10.8386, -37.6543, 0.44", "87.3626, 11.2625, -37.9617, 0.74", "89.0953, 11.7949, -38.3493, 0.22", "89.7216, 12.0228, -38.5152, 0.81", "90.0207, 12.1481, -38.603, 0.81", "90.8825, 12.5648, -38.9314, 0.37", "92.3325, 13.3146, -39.602, 0.22", "93.1185, 13.7644, -40.0362, 0.22", "94.1762, 14.3943, -40.6579, 0.22", "94.8398, 14.7899, -41.0564, 0.22", "96.1542, 15.5792, -41.8562, 0.22", "96.8064, 15.9619, -42.2445, 1.03", "97.7716, 16.4971, -42.7364, 0.07", "98.6241, 16.9292, -43.0535, 0.22", "99.286, 17.2573, -43.2113, 0.15", "99.9027, 17.5837, -43.28, 0.59", "100.582, 18.0047, -43.2485, 0.59", "101.76, 18.9644, -43.0619, 0.15", "102.471, 19.8269, -42.8244, 0.44", "102.74, 20.3425, -42.6793, 0.44", "103.106, 21.4327, -42.404, 0.22", "103.244, 22.0281, -42.2659, 0.66", "103.427, 23.0841, -42.0492, 0.15", "103.583, 24.1562, -41.8489, 0.22", "103.684, 24.7073, -41.7198, 0.88", "103.827, 25.2447, -41.5108, 0.88", "104.305, 26.533, -40.775, 0.29", "104.614, 27.2599, -40.3212, 0.29", "105.086, 28.226, -39.6443, 0.66", "105.542, 29.1054, -38.9487, 0.29", "106.328, 30.551, -37.6527, 0.22", "106.922, 31.6207, -36.5427, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.57842, -68.6895, -2.44781, 0.15", "-2.50315, -68.8234, -1.57833, 0.15", "-1.47558, -68.959, -0.907654, 0.22", "-0.960576, -69.0125, -0.616364, 0.15", "-0.247467, -69.0656, -0.238674, 0.15", "0.295079, -69.1032, 0.0349219, 0.44", "0.753714, -69.1371, 0.262747, 0.44", "1.83868, -69.2183, 0.818257, 0.22", "2.70284, -69.3075, 1.27818, 0.22", "3.91218, -69.4725, 1.98908, 0.15", "4.7247, -69.6115, 2.55034, 0.74", "5.99801, -69.8775, 3.66903, 0.22", "6.67512, -70.0618, 4.44851, 0.22", "6.96623, -70.1722, 4.89565, 0.29", "7.41138, -70.3752, 5.75587, 0.29", "8.02883, -70.7052, 7.14987, 0.15", "8.52783, -71.0031, 8.46545, 0.15", "8.97988, -71.3053, 9.86358, 0.52", "9.43753, -71.5975, 11.3008, 0.96", "9.94437, -71.8768, 12.929, 0.96" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-3.57842, -68.6895, -2.44781, 0.59", "-3.71831, -69.1661, -2.30915, 0.59", "-3.82628, -69.5581, -2.14573, 0.22", "-3.94012, -70.006, -1.90773, 0.22", "-4.0117, -70.3004, -1.74374, 0.52", "-4.09205, -70.6392, -1.55433, 0.96", "-4.232, -71.2744, -1.18114, 0.22", "-4.30202, -71.6925, -0.924208, 0.22", "-4.35274, -72.1408, -0.637849, 0.59", "-4.37826, -72.5629, -0.368983, 0.88", "-4.38087, -73.3589, 0.118283, 0.44", "-4.35653, -73.8944, 0.404785, 0.44", "-4.33669, -74.3394, 0.569412, 0.15", "-4.32969, -74.8122, 0.67279, 0.22", "-4.33434, -74.9881, 0.68128, 0.96", "-4.36721, -75.4128, 0.6437, 1.33", "-4.45676, -76.0762, 0.500916, 0.59", "-4.63886, -76.9536, 0.260149, 0.22", "-4.73982, -77.337, 0.156046, 0.44", "-4.94497, -78.0637, -0.0361328, 0.96", "-5.066, -78.5387, -0.141415, 0.22", "-5.13083, -78.8088, -0.189473, 0.37", "-5.23259, -79.2435, -0.256465, 0.37", "-5.3409, -79.7177, -0.304268, 0.22", "-5.47004, -80.2096, -0.34813, 1.11", "-5.70351, -80.9584, -0.410355, 0.22", "-5.7763, -81.1799, -0.434171, 0.22", "-5.97524, -81.819, -0.515046, 0.22", "-6.05503, -82.109, -0.557667, 0.22", "-6.18022, -82.6036, -0.639089, 1.18", "-6.3128, -83.1735, -0.720137, 0.29", "-6.4574, -83.8173, -0.78703, 0.81", "-6.54309, -84.2824, -0.814751, 0.15", "-6.59753, -84.6268, -0.81748, 0.15", "-6.62857, -84.7795, -0.814547, 0.15", "-6.81969, -85.3185, -0.77881, 0.29", "-7.22397, -86.0327, -0.698243, 0.15", "-7.39863, -86.2422, -0.66207, 0.44", "-7.63959, -86.4682, -0.608064, 0.88", "-8.08671, -86.8211, -0.501955, 0.22", "-8.72958, -87.2656, -0.342205, 0.15", "-8.91767, -87.3772, -0.293221, 0.15", "-9.21182, -87.5368, -0.213239, 0.59", "-9.40588, -87.6338, -0.166047, 0.96", "-9.94111, -87.8814, -0.047617, 0.22", "-10.3768, -88.085, 0.0290848, 0.37", "-10.8066, -88.2964, 0.0881904, 0.37", "-11.247, -88.5178, 0.135172, 0.22", "-11.8196, -88.8247, 0.205059, 0.15", "-12.1945, -89.0341, 0.278514, 0.15", "-12.5584, -89.2453, 0.379276, 0.15", "-12.7853, -89.3818, 0.449067, 0.15", "-13.1424, -89.6113, 0.577515, 0.81", "-13.8038, -90.0808, 0.875296, 0.07", "-14.2695, -90.4764, 1.15856, 0.07", "-14.6118, -90.792, 1.41545, 0.66" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "41.4929, 3.55935, -3.95127, 0.44", "42.3433, 2.53701, -4.68042, 0.44", "42.8821, 1.84534, -5.23387, 0.44", "43.0935, 1.58313, -5.45483, 0.52", "43.6245, 1.0112, -5.98743, 0.52", "44.2196, 0.477759, -6.52424, 0.59", "44.7666, 0.056092, -6.96739, 0.59", "45.4455, -0.423128, -7.4773, 0.59", "45.8933, -0.702484, -7.81454, 0.52", "46.5078, -1.05524, -8.26847, 0.52", "47.1272, -1.3855, -8.72479, 0.44", "47.508, -1.5934, -9.02229, 0.44", "48.1137, -1.97372, -9.47844, 0.44", "48.4825, -2.24814, -9.75159, 0.52", "48.9169, -2.61739, -10.0623, 0.52", "49.6355, -3.26993, -10.4835, 0.44", "50.1785, -3.73019, -10.7479, 0.81", "50.6757, -4.11304, -10.9392, 0.96", "51.5191, -4.71613, -11.1683, 0.59", "52.2076, -5.16479, -11.3319, 0.52", "53.2454, -5.78137, -11.5618, 0.44", "54.274, -6.33137, -11.7383, 0.44", "54.9771, -6.67846, -11.8466, 0.37", "55.9253, -7.11647, -12.0376, 0.66", "57.2047, -7.69765, -12.3544, 0.37", "58.3329, -8.22639, -12.699, 0.44", "59.2957, -8.68448, -13.0235, 0.74", "59.6486, -8.85459, -13.1335, 0.74", "60.7677, -9.32931, -13.5424, 0.22", "61.2798, -9.52883, -13.7548, 0.22", "61.8561, -9.77655, -14.0002, 0.66", "62.4104, -10.052, -14.268, 0.22", "62.9708, -10.3828, -14.5812, 0.37", "64.1742, -11.1752, -15.2026, 0.15", "64.6171, -11.4641, -15.4058, 0.59", "64.9976, -11.6952, -15.5818, 0.74", "65.537, -12.029, -15.8307, 0.52", "66.0192, -12.3484, -16.0427, 0.81", "66.8851, -12.9335, -16.3912, 0.29", "68.0074, -13.663, -16.7525, 0.22", "68.7281, -14.0642, -16.9665, 0.22", "69.4005, -14.3707, -17.1765, 0.22", "70.0644, -14.6137, -17.3967, 0.29", "70.7706, -14.827, -17.6416, 0.59", "71.5497, -15.0353, -17.9183, 0.96", "72.2569, -15.2088, -18.192, 0.29", "73.1675, -15.3913, -18.5964, 0.22", "74.0394, -15.5037, -18.9959, 0.44", "74.5364, -15.5384, -19.2242, 0.22", "75.2371, -15.5578, -19.5303, 0.29", "76.3295, -15.577, -19.9969, 0.22", "77.3157, -15.617, -20.4044, 0.74", "78.2217, -15.6934, -20.7398, 0.15", "78.6843, -15.7536, -20.9664, 0.29", "79.6462, -15.9626, -21.6332, 0.22", "80.0942, -16.0803, -21.9802, 0.29", "80.6639, -16.298, -22.4781, 0.52", "81.1159, -16.5497, -22.9713, 0.81", "82.4169, -17.5265, -24.8105, 0.29", "82.9555, -18.0343, -25.76, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "41.4929, 3.55935, -3.95127, 0.52", "42.2341, 4.12507, -3.73434, 0.52", "42.7775, 4.52715, -3.50197, 0.52", "43.3575, 4.90411, -3.17769, 0.52", "44.1545, 5.3908, -2.63239, 0.74", "44.8359, 5.81285, -2.1223, 0.74", "45.6387, 6.3327, -1.49791, 0.88", "46.462, 6.91293, -0.77618, 0.88", "47.3612, 7.62198, 0.0790679, 0.74", "48.2985, 8.41606, 1.00784, 0.37", "48.9083, 8.95, 1.59048, 0.29", "49.539, 9.51679, 2.14255, 0.37", "50.5182, 10.34, 2.82202, 0.81", "51.4819, 11.0549, 3.28873, 0.59", "52.6977, 11.8022, 3.65963, 0.52", "53.4812, 12.1446, 3.81908, 0.66", "54.2496, 12.3612, 3.96757, 0.81", "56.1827, 12.6782, 4.37112, 0.52", "57.237, 12.7762, 4.61898, 0.52", "58.044, 12.8613, 4.87312, 0.59", "59.1757, 13.0669, 5.39618, 0.52", "60.2395, 13.4184, 6.08185, 0.44", "60.9167, 13.727, 6.58668, 0.52", "61.5769, 14.087, 7.09435, 0.74", "62.7976, 14.7806, 7.95183, 0.59", "63.7525, 15.3262, 8.54661, 0.52", "64.9772, 15.9845, 9.16449, 0.29", "66.0238, 16.4868, 9.58923, 0.22", "67.0977, 16.9567, 9.98496, 0.29", "68.026, 17.3039, 10.3096, 0.22", "68.6866, 17.5258, 10.5541, 0.52", "69.6653, 17.8376, 10.9645, 0.88", "70.7104, 18.1273, 11.5036, 0.52", "71.5372, 18.3321, 12.0346, 0.52", "72.6319, 18.5872, 12.8919, 0.96", "73.9904, 18.9191, 14.0901, 0.37", "74.5475, 19.0751, 14.6164, 0.37", "75.5307, 19.415, 15.5939, 0.81", "76.4635, 19.843, 16.5524, 0.66", "77.4525, 20.4838, 17.5447, 0.44", "78.301, 21.3363, 18.4311, 0.44", "78.7755, 22.0565, 18.9724, 0.59", "79.1201, 22.8868, 19.4946, 0.66", "79.3244, 23.9009, 20.0679, 0.44", "79.3611, 25.1964, 20.7809, 0.37", "79.1928, 26.3368, 21.4216, 0.37", "78.8555, 27.4333, 22.0869, 0.66", "78.1963, 28.9561, 23.1059, 0.22", "77.5438, 30.1859, 23.9785, 0.81", "77.1898, 30.7941, 24.4226, 0.81", "76.6258, 31.7601, 25.1159, 0.22", "76.1366, 32.7412, 25.767, 0.74", "75.7346, 33.7218, 26.3296, 0.22", "75.3797, 34.7421, 26.8592, 0.52", "74.8858, 36.2696, 27.5929, 1.03", "74.4956, 37.4621, 28.1287, 1.03", "73.9456, 39.152, 28.8288, 0.29", "73.5016, 40.4704, 29.327, 0.22", "73.1002, 41.6177, 29.7154, 0.22", "72.7975, 42.4174, 29.9496, 0.29", "72.3608, 43.4567, 30.199, 0.81", "71.955, 44.3613, 30.3838, 0.22", "71.6512, 45.1052, 30.4867, 0.29", "71.4016, 45.9945, 30.5785, 0.29", "71.2247, 47.0433, 30.6194, 0.74", "71.1128, 48.1831, 30.625, 1.4", "71.093, 48.5057, 30.6138, 1.4", "71.0198, 49.8076, 30.5323, 0.15", "70.9751, 50.7243, 30.4328, 0.22", "70.9632, 51.1624, 30.3823, 0.22", "70.9475, 52.4384, 30.2859, 0.74", "70.9398, 53.6356, 30.2211, 0.29", "70.9428, 54.416, 30.1843, 0.59", "70.9419, 55.4842, 30.1542, 0.22", "70.9728, 56.7348, 30.1049, 0.59", "71.0693, 57.8367, 30.0495, 0.59", "71.2098, 58.626, 30.0474, 0.88", "71.5276, 59.8803, 30.1156, 0.44", "71.7729, 60.6847, 30.1903, 0.44", "72.1719, 61.8298, 30.3214, 0.74", "72.507, 62.7487, 30.4183, 0.74", "73.114, 64.5669, 30.5598, 0.37", "73.4954, 65.9209, 30.6422, 0.66", "73.6893, 66.7905, 30.6836, 0.59", "73.8841, 67.7815, 30.6882, 0.59", "74.0897, 68.9165, 30.6834, 0.59", "74.3029, 70.1517, 30.7113, 0.66", "74.5017, 71.1438, 30.7766, 0.52", "74.6863, 71.8556, 30.9002, 0.52", "74.9257, 72.5762, 31.1026, 0.66", "75.4559, 73.9158, 31.6204, 0.37", "76.1862, 75.4248, 32.3379, 0.37", "76.8516, 76.6625, 33.0029, 0.29", "77.425, 77.6631, 33.5827, 0.37", "78.0746, 78.7617, 34.2341, 0.37", "78.5246, 79.5336, 34.7079, 0.29", "78.9286, 80.2142, 35.1089, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "14.7179, 10.2329, -21.221, 0.59", "15.1728, 11.2929, -21.5932, 0.59", "15.5706, 12.1202, -21.9618, 0.52", "15.7936, 12.6011, -22.2068, 0.52", "16.0589, 13.3209, -22.5867, 0.52", "16.2372, 13.9724, -22.9232, 0.52", "16.4588, 14.8688, -23.4012, 0.66", "16.6818, 15.668, -23.8699, 0.66", "16.835, 16.1608, -24.1601, 0.66", "17.1367, 17.0931, -24.6821, 0.52", "17.4378, 17.902, -25.1034, 0.44", "17.8223, 18.8181, -25.5182, 0.44", "18.3737, 19.9551, -25.9201, 0.37", "18.771, 20.6819, -26.1094, 0.37", "19.0771, 21.2033, -26.1958, 0.37", "19.5651, 21.9646, -26.293, 0.37", "19.9441, 22.5488, -26.3485, 0.44", "20.2404, 23.0063, -26.4008, 0.52", "20.8694, 24.0524, -26.5093, 0.44", "21.3256, 24.8642, -26.6158, 0.52", "21.8528, 25.8186, -26.7728, 0.52", "22.1619, 26.4077, -26.9031, 0.52", "22.8181, 27.5031, -27.2455, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "14.7179, 10.2329, -21.221, 0.59", "14.8208, 9.49398, -23.5258, 0.59", "14.7795, 9.33104, -24.0832, 0.59", "14.6958, 9.22315, -24.489, 0.59", "14.6063, 9.16646, -24.7662, 0.59", "14.335, 9.09846, -25.3702, 0.59", "14.0861, 9.11503, -25.851, 0.59", "13.6777, 9.30876, -26.4127, 0.59", "13.407, 9.50748, -26.8138, 0.52", "13.0649, 9.83369, -27.3982, 0.52", "12.7436, 10.1929, -28.0376, 0.66", "12.3526, 10.6793, -28.9839, 0.52", "12.1948, 10.9156, -29.8564, 0.52", "12.1103, 11.0766, -30.58, 0.44", "12.0166, 11.2823, -31.6023, 0.44", "11.9704, 11.3909, -32.2164, 0.44", "11.9112, 11.5366, -33.2108, 0.44", "11.5743, 12.2544, -39.4198, 0.81", "11.4988, 12.3971, -40.9063, 0.29", "11.4621, 12.467, -41.7634, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.5463, -5.97462, 5.27161, 0.52", "22.1983, -7.1022, 5.75909, 0.52", "22.8945, -8.22419, 6.26129, 0.52", "23.4843, -9.13712, 6.67617, 0.59", "24.2966, -10.4599, 7.25187, 0.52", "24.9067, -11.5613, 7.72681, 0.59", "25.2968, -12.3696, 8.0704, 0.74", "25.5743, -13.0307, 8.35172, 0.81", "25.9663, -14.1057, 8.81917, 0.44", "26.3025, -15.0982, 9.20433, 0.66", "26.6781, -16.2781, 9.66486, 0.44", "27.0713, -17.4599, 10.158, 0.52", "27.4066, -18.3327, 10.5643, 0.59", "27.7493, -19.0903, 10.9914, 0.44", "28.2533, -20.0511, 11.6447, 0.37", "28.8407, -20.9774, 12.3943, 0.59", "29.2765, -21.5909, 12.9474, 0.88", "29.6815, -22.1556, 13.4998, 0.74", "30.1417, -22.9367, 14.2435, 0.29", "30.3461, -23.4168, 14.656, 0.29", "30.5483, -24.0796, 15.1603, 0.44", "30.7357, -24.9119, 15.7011, 0.81", "30.8158, -25.4455, 16.0272, 0.81", "30.9857, -26.8267, 16.8325, 0.37", "31.0828, -27.5584, 17.2524, 0.96", "31.131, -27.8969, 17.4608, 0.96", "31.2039, -28.5704, 17.9076, 0.44", "31.2835, -29.4349, 18.5173, 0.66", "31.3419, -30.0457, 18.9673, 0.22", "31.4128, -30.5387, 19.3302, 0.22", "31.5198, -31.0573, 19.6914, 0.22", "31.6742, -31.7823, 20.1225, 0.74", "31.7746, -32.2136, 20.341, 0.74", "31.9792, -32.9876, 20.6497, 0.22", "32.2923, -34.0523, 20.9861, 0.22", "32.5392, -34.857, 21.1474, 0.74", "32.9619, -36.1051, 21.3024, 0.22", "33.1754, -36.6914, 21.3285, 0.88", "33.6038, -37.8529, 21.2968, 0.74", "33.9585, -38.7906, 21.2194, 0.37", "34.4581, -40.1276, 21.0925, 0.59", "34.694, -40.7849, 21.0313, 0.88", "35.0767, -41.9127, 20.9608, 0.29", "35.3484, -42.8988, 20.9511, 0.74", "35.4369, -43.3696, 20.9914, 0.74", "35.5843, -44.5743, 21.2852, 0.44", "35.6708, -45.6161, 21.7459, 0.44", "35.6736, -46.1973, 22.0707, 0.66", "35.6112, -47.0291, 22.6408, 0.37", "35.4815, -47.7726, 23.2202, 0.81", "35.1925, -48.9344, 24.1023, 0.15", "34.9812, -49.669, 24.649, 0.22", "34.7763, -50.3868, 25.1582, 0.29", "34.6801, -50.7419, 25.3765, 0.81", "34.4858, -51.4998, 25.7613, 0.81", "34.2136, -52.7156, 26.2168, 0.22", "34.087, -53.3493, 26.3938, 0.22", "34.0149, -53.9482, 26.5523, 0.44", "34.012, -54.6942, 26.784, 0.88", "34.0783, -55.4131, 27.0396, 0.29", "34.2024, -56.1476, 27.3459, 0.15", "34.2673, -56.5073, 27.5581, 0.15", "34.36, -57.1012, 27.9389, 0.15", "34.4708, -57.7598, 28.3827, 0.52", "34.6045, -58.4441, 28.8755, 0.59", "34.8083, -59.3031, 29.5462, 0.52", "35.0607, -60.2642, 30.3774, 0.52", "35.1907, -60.8777, 30.9311, 0.52" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "21.5463, -5.97462, 5.27161, 0.44", "22.1762, -5.30242, 6.09758, 0.44", "22.7137, -4.76559, 6.82293, 0.44", "23.1201, -4.40764, 7.41536, 0.44", "23.7844, -3.88173, 8.47036, 0.52", "24.0933, -3.67455, 8.99156, 0.52", "24.6792, -3.36514, 9.96576, 0.81", "25.1216, -3.24687, 10.6755, 0.81", "25.7129, -3.25576, 11.5109, 0.44", "26.2318, -3.37846, 12.1516, 0.44", "26.7767, -3.57973, 12.7525, 0.44", "27.3272, -3.81259, 13.3329, 0.74", "27.7748, -4.02306, 13.7775, 0.74", "28.6979, -4.43916, 14.5869, 0.44", "29.6603, -4.82365, 15.3364, 0.44", "30.4123, -5.12144, 15.8799, 0.88", "31.2707, -5.43514, 16.5094, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.3467, 24.4695, -12.933, 0.44", "-11.9292, 25.2192, -12.7214, 0.44", "-12.2698, 25.6982, -12.5485, 0.44", "-12.549, 26.1341, -12.3877, 0.66", "-12.8936, 26.7468, -12.133, 0.59", "-13.1288, 27.2292, -11.9172, 0.74", "-13.2723, 27.595, -11.7403, 0.66", "-13.4099, 28.2766, -11.3467, 0.66", "-13.4574, 28.7593, -11.0282, 0.52", "-13.4948, 29.2683, -10.6431, 0.52", "-13.5285, 29.5499, -10.3933, 0.52", "-13.6597, 30.0627, -9.88085, 0.66", "-13.8541, 30.5312, -9.4249, 0.66", "-14.0538, 30.8821, -9.11823, 0.59", "-14.3308, 31.2934, -8.80506, 0.52", "-14.7713, 31.8164, -8.52388, 0.52", "-15.2692, 32.3025, -8.32637, 0.66", "-15.7914, 32.7578, -8.16142, 0.74", "-16.0801, 33.0011, -8.08893, 0.74", "-16.5926, 33.457, -7.96772, 0.66", "-17.328, 34.1997, -7.78497, 0.44", "-17.8688, 34.8054, -7.64602, 0.44", "-18.5029, 35.5802, -7.47161, 0.44", "-18.84, 36.0186, -7.35846, 0.44", "-19.204, 36.4736, -7.25898, 0.59", "-19.6179, 36.9475, -7.19885, 0.74", "-19.9451, 37.2996, -7.17224, 0.52", "-20.4872, 37.7428, -7.21144, 0.44", "-21.0885, 38.107, -7.29421, 0.44", "-22.0749, 38.6083, -7.41255, 0.44", "-23.0295, 39.0268, -7.50949, 0.44", "-23.6778, 39.2925, -7.56666, 0.52", "-24.7258, 39.7292, -7.61182, 0.37", "-25.4767, 40.0769, -7.59243, 0.37", "-26.1729, 40.5001, -7.49915, 0.44", "-26.6204, 40.9359, -7.31575, 0.37", "-26.8167, 41.249, -7.14784, 0.66", "-27.0485, 41.8091, -6.79923, 0.66", "-27.2442, 42.4494, -6.3219, 0.88", "-27.4004, 42.9983, -5.86798, 0.88", "-27.5108, 43.3688, -5.52238, 0.74", "-27.6775, 43.9267, -4.98144, 0.74", "-27.837, 44.369, -4.53766, 0.74", "-28.0902, 44.8973, -4.01147, 0.74", "-28.3563, 45.3247, -3.57685, 1.03", "-28.8351, 45.9904, -2.87275, 1.03" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.3467, 24.4695, -12.933, 0.59", "-11.4976, 25.2408, -13.8998, 0.59", "-11.6165, 26.0539, -14.9482, 0.59", "-11.7357, 27.1292, -16.3586, 0.59", "-11.8333, 27.9658, -17.4598, 0.44", "-11.9758, 29.068, -18.8974, 0.59", "-12.0915, 29.8183, -19.8735, 0.59", "-12.3292, 30.908, -21.2865, 0.59", "-12.4977, 31.6393, -22.2022, 0.59", "-12.6784, 32.4502, -23.2085, 0.59", "-12.8906, 33.4539, -24.5079, 0.59", "-13.0567, 34.2597, -25.6672, 0.52", "-13.2205, 35.0878, -27.0587, 0.66", "-13.3081, 35.5193, -27.9405, 0.96", "-13.4195, 36.185, -29.5566, 0.96", "-13.4644, 36.7661, -31.193, 0.81", "-13.4559, 37.3506, -33.184, 0.81", "-13.3941, 37.7502, -34.8323, 0.44", "-13.3208, 38.0145, -36.2613, 0.44", "-13.2441, 38.2109, -37.6041, 0.44", "-13.1572, 38.3457, -38.9151, 0.44", "-12.981, 38.4582, -40.6461, 0.44", "-12.7966, 38.4743, -41.8038, 0.59", "-12.3483, 38.378, -43.8754, 0.59", "-12.0219, 38.2728, -44.9355, 0.22", "-11.5527, 38.0604, -46.2654, 0.22", "-11.0663, 37.7897, -47.472, 0.22", "-10.4956, 37.4741, -48.6175, 0.37", "-10.2037, 37.3217, -49.0943, 0.37", "-9.67603, 37.0961, -49.6727, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "80.2655, 24.2526, 0.687304, 0.22", "81.246, 24.4273, 1.14981, 0.22", "82.4359, 24.8238, 1.52304, 0.29", "83.9617, 25.3323, 2.00165, 0.37", "84.9734, 25.6695, 2.31897, 0.15", "85.6403, 25.8918, 2.52816, 0.37", "87.1909, 26.4085, 3.01453, 0.29", "88.5156, 27.0172, 3.30075, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "80.2655, 24.2526, 0.687304, 0.22", "80.1816, 23.3603, 0.160253, 0.22", "80.0925, 22.4134, -0.399071, 0.22", "80.0452, 21.9107, -0.696045, 0.29", "79.9579, 20.982, -1.24458, 0.15", "79.9127, 20.5022, -1.52798, 0.22" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.35962, -45.9422, -66.4158, 0.22", "-2.62346, -45.18, -66.4578, 0.22", "-3.00843, -44.2643, -66.4978, 0.22", "-3.46798, -43.3168, -66.5368, 0.15", "-3.83078, -42.6112, -66.5664, 0.15", "-4.19324, -41.9063, -66.596, 0.29", "-4.42398, -41.4576, -66.6148, 0.29", "-4.73704, -40.9624, -66.6361, 0.22", "-5.09054, -40.5158, -66.6811, 0.66", "-5.21393, -40.3794, -66.6919, 0.66" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.35962, -45.9422, -66.4158, 0.74", "-2.53316, -46.8521, -66.4194, 0.74", "-2.59866, -47.8965, -66.2689, 0.44", "-2.55056, -48.6635, -66.0986, 0.59", "-2.39978, -49.5627, -65.8768, 0.96", "-2.11427, -51.2654, -65.4569, 0.22", "-1.92177, -52.4134, -65.1738, 0.29", "-1.6335, -53.3463, -64.8517, 0.22", "-1.32468, -54.013, -64.5276, 0.44", "-1.01359, -54.4971, -64.2235, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "22.8181, 27.5031, -27.2455, 0.22", "22.2185, 28.1126, -27.3451, 0.22", "21.7253, 28.5797, -27.4533, 0.22", "21.2144, 29.0534, -27.5419, 0.29", "20.5044, 29.7193, -27.6153, 0.15", "19.7435, 30.4113, -27.6301, 0.15", "19.2636, 30.8275, -27.6253, 0.15", "18.693, 31.267, -27.5838, 0.22", "18.0109, 31.7506, -27.5092, 0.22", "17.2166, 32.2627, -27.3706, 0.15", "16.4849, 32.7313, -27.2253, 0.15", "15.7227, 33.2114, -27.0576, 0.22", "15.1612, 33.5608, -26.8981, 0.15", "14.7685, 33.7827, -26.7751, 0.22", "13.866, 34.2191, -26.5483, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.8181, 27.5031, -27.2455, 0.52", "23.306, 27.6395, -27.6679, 0.52", "23.6994, 27.8138, -28.0259, 0.37", "24.1054, 28.065, -28.466, 0.37", "24.4528, 28.3232, -28.9075, 0.44", "24.6719, 28.5091, -29.2304, 0.44", "24.8851, 28.6986, -29.5766, 0.44", "25.0665, 28.9044, -29.9028, 0.52", "25.3277, 29.2317, -30.3913, 0.59", "25.4884, 29.4695, -30.7451, 0.59", "25.6249, 29.6878, -31.0995, 0.59", "25.8037, 29.929, -31.564, 0.52", "25.9223, 30.0452, -31.8512, 0.37", "26.1731, 30.2031, -32.3137, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.1907, -60.8777, 30.9311, 0.15", "35.8865, -61.6956, 30.4033, 0.15", "36.1893, -62.0516, 30.1736, 0.52", "36.5255, -62.4467, 29.9186, 0.15", "36.8704, -62.8521, 29.657, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "35.1907, -60.8777, 30.9311, 0.37", "35.4643, -61.0122, 31.3179, 0.37", "35.7845, -61.1716, 31.8107, 0.44", "36.5605, -61.6297, 33.1052, 0.07", "37.0164, -61.9407, 33.953, 0.07", "37.3891, -62.2449, 34.7861, 0.29", "37.7217, -62.5991, 35.7829, 0.22", "37.8071, -62.7812, 36.3088, 0.22", "37.7737, -63.0071, 36.9244, 0.59", "37.651, -63.1921, 37.4054, 0.59", "37.3723, -63.4176, 38.1061, 0.22", "36.8199, -63.7008, 39.2776, 0.22", "36.453, -63.8491, 40.0394, 0.29", "36.1235, -63.986, 40.844, 0.74", "36.0834, -64.0063, 40.9458, 0.74", "35.658, -64.2945, 41.9417, 0.15", "35.2549, -64.6301, 42.6804, 0.22", "34.6981, -65.1491, 43.2198, 0.44", "33.9645, -65.9264, 43.5325, 1.11", "32.9473, -67.1255, 43.6795, 0.88", "32.302, -67.9677, 43.6739, 0.37", "31.6938, -68.8074, 43.5644, 0.59", "30.6869, -70.199, 43.2323, 0.22", "30.2831, -70.7478, 43.0472, 0.22", "30.0992, -70.9851, 42.9458, 0.29", "29.7663, -71.3972, 42.7827, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "31.2707, -5.43514, 16.5094, 0.37", "31.549, -6.03853, 17.3908, 0.37", "31.9356, -6.64581, 18.3914, 0.22", "32.5616, -7.36912, 19.8107, 0.15", "32.8324, -7.61013, 20.3656, 0.66", "33.3764, -7.99222, 21.4077, 0.22", "34.0035, -8.35043, 22.5657, 0.22", "34.7109, -8.60805, 23.8387, 0.22", "35.3288, -8.7654, 24.9803, 0.37", "35.9034, -8.8752, 26.0777, 0.66", "36.6103, -8.98648, 27.5034, 0.88", "37.2676, -9.07927, 28.928, 0.88", "38.0144, -9.16833, 30.6737, 0.44", "38.5726, -9.23139, 32.0816, 0.44", "38.6414, -9.24181, 32.2923, 0.44", "38.8284, -9.28761, 33.0825, 0.44", "38.8993, -9.32745, 33.5891, 0.44", "38.9421, -9.37739, 34.0881, 0.44", "39.036, -9.49947, 35.3326, 0.44", "39.1912, -9.61521, 36.696, 0.59", "39.4246, -9.7153, 38.0756, 0.74", "39.7692, -9.79931, 39.551, 0.29", "40.0321, -9.83818, 40.3335, 0.74", "40.383, -9.87397, 41.117, 0.74", "41.0653, -9.93298, 42.3478, 0.29", "41.6292, -9.99272, 43.2433, 1.03", "42.1931, -10.0772, 44.0767, 1.11", "43.3385, -10.3344, 45.8401, 0.37", "44.1335, -10.6102, 47.2548, 0.52", "44.8035, -10.938, 48.7039, 0.29", "45.2082, -11.1708, 49.7321, 0.22", "45.519, -11.3544, 50.5892, 0.66", "46.1351, -11.69, 52.4136, 0.29", "46.5639, -11.8754, 53.6532, 0.74", "47.2334, -12.0912, 55.6028, 0.29", "47.7684, -12.2125, 57.1849, 0.15", "48.2834, -12.278, 58.7624, 0.22", "48.8735, -12.2895, 60.6672, 0.74", "49.5466, -12.2405, 63.049, 0.15", "50.0007, -12.1409, 64.8641, 0.29", "50.408, -11.976, 66.7749, 0.29", "50.6022, -11.8385, 67.9186, 0.29", "50.7718, -11.6327, 69.1902, 0.29", "50.8603, -11.4493, 70.128, 0.29", "50.9387, -11.1843, 71.3303, 0.29", "51.0521, -10.9966, 72.3508, 0.29", "51.3681, -10.8737, 73.9925, 0.29", "51.5363, -10.9138, 74.646, 0.29", "51.7482, -11.0456, 75.3909, 0.29", "52.0266, -11.2892, 76.5955, 0.29", "52.1411, -11.4307, 77.371, 0.66", "52.1959, -11.5622, 78.8975, 0.22", "52.1474, -11.5381, 80.1127, 0.22", "52.0881, -11.4693, 80.8234, 0.22", "51.8018, -11.1004, 83.1738, 0.59", "51.6338, -10.8821, 84.2881, 0.81", "51.3253, -10.3963, 86.3576, 0.22", "51.168, -10.0654, 87.5417, 0.22", "51.0829, -9.7567, 88.5707, 0.22", "51.0419, -9.24548, 90.202, 0.74", "51.0753, -8.92872, 91.1755, 0.29", "51.1937, -8.39263, 92.7724, 0.29", "51.2974, -8.02276, 93.7854, 0.29", "51.4615, -7.40691, 95.3149, 0.29", "51.6225, -6.75723, 96.7791, 0.29", "51.9031, -5.5619, 99.2948, 0.29", "52.0772, -4.76399, 100.939, 0.29", "52.2521, -3.98021, 102.571, 0.29", "52.4289, -3.31584, 103.994, 0.29", "52.6212, -2.63922, 105.433, 0.29", "52.8036, -2.07419, 106.634, 0.29", "53.002, -1.56671, 107.71, 0.29", "53.347, -0.803354, 109.331, 0.29", "53.537, -0.457437, 110.085, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "31.2707, -5.43514, 16.5094, 0.66", "31.771, -4.83928, 17.3009, 0.66", "32.4195, -4.02194, 18.2893, 0.22", "32.8177, -3.55242, 18.8477, 0.22", "32.9726, -3.38782, 19.039, 0.22", "33.3891, -2.98827, 19.468, 0.22", "33.7227, -2.66608, 19.7739, 0.22", "33.8955, -2.49423, 19.9016, 0.22", "34.3684, -2.04991, 20.2215, 0.22", "34.7418, -1.74556, 20.4527, 0.29", "35.4175, -1.3066, 20.8905, 0.52", "36.1164, -0.981254, 21.3766, 0.22", "36.682, -0.801723, 21.8049, 0.37", "37.4519, -0.643911, 22.4206, 0.37", "37.9893, -0.600183, 22.8638, 0.52", "38.802, -0.670241, 23.5234, 0.88", "39.7615, -0.902307, 24.3099, 0.22", "40.4206, -1.13799, 24.8339, 0.22", "40.8022, -1.2959, 25.1266, 0.52", "41.1647, -1.45163, 25.386, 0.52", "41.9642, -1.79462, 25.9522, 0.15", "42.669, -2.06503, 26.4435, 0.15", "43.1227, -2.2358, 26.7332, 0.15", "43.4695, -2.34278, 26.9437, 0.66", "43.9445, -2.44713, 27.2367, 0.74", "45.1368, -2.54228, 27.9521, 0.15", "45.926, -2.48799, 28.4053, 0.15", "46.641, -2.33979, 28.7888, 0.15", "47.4261, -2.05949, 29.2283, 0.37", "48.0396, -1.73988, 29.6024, 0.37", "48.811, -1.16728, 30.1206, 0.15", "49.3411, -0.646418, 30.5887, 0.22", "49.8641, -0.0757052, 31.1848, 0.22", "50.1513, 0.256608, 31.6246, 0.22", "50.4446, 0.568218, 32.1247, 0.22", "50.7645, 0.858473, 32.7022, 0.37", "51.6493, 1.58405, 34.4105, 0.37", "52.1369, 1.9569, 35.3712, 0.52", "52.8132, 2.46249, 36.721, 0.66", "53.2236, 2.78027, 37.563, 0.15", "53.8606, 3.30289, 38.9463, 0.15", "54.4562, 3.79087, 40.2695, 0.22", "54.7549, 4.04122, 40.9095, 0.29", "55.1157, 4.36675, 41.7121, 0.29", "55.3345, 4.58117, 42.229, 0.29", "55.9107, 5.25171, 43.8643, 0.29", "56.2694, 5.67578, 44.9422, 0.29", "56.592, 6.0342, 45.9252, 0.29", "57.0437, 6.50335, 47.2794, 0.29", "57.3154, 6.75287, 48.0477, 0.29", "57.8174, 7.19664, 49.3933, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-28.8351, 45.9904, -2.87275, 0.44", "-30.5772, 45.9226, -4.30864, 0.44", "-31.3949, 45.8908, -4.98264, 0.37", "-32.4837, 45.8484, -5.8801, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-28.8351, 45.9904, -2.87275, 0.66", "-28.9718, 46.2798, -1.83326, 0.66", "-29.2986, 46.7753, -0.205744, 0.66", "-29.7768, 47.2386, 1.40828, 0.66", "-30.3964, 47.681, 2.977, 0.66", "-31.2238, 48.1871, 4.72387, 0.59", "-31.7736, 48.4873, 5.70731, 0.59", "-32.5098, 48.7915, 6.5795, 0.29", "-33.6731, 49.1082, 7.40898, 0.22", "-34.3938, 49.2271, 7.70204, 0.37", "-34.7796, 49.2575, 7.80811, 0.37", "-35.5365, 49.2775, 7.97341, 0.37", "-36.9495, 49.2729, 8.32522, 0.22", "-38.4507, 49.2818, 8.71723, 0.22", "-39.6396, 49.311, 9.05548, 0.22", "-40.4826, 49.3316, 9.32655, 0.66", "-41.3858, 49.3808, 9.664, 0.66", "-42.1598, 49.4696, 9.99561, 0.15", "-43.4196, 49.6963, 10.5741, 0.15", "-44.4857, 49.9517, 11.0689, 0.15", "-45.3002, 50.1699, 11.4787, 0.15", "-46.8718, 50.6266, 12.2588, 0.15", "-47.9927, 50.9784, 12.8377, 0.29", "-49.1649, 51.3777, 13.4493, 0.15", "-50.0361, 51.6813, 13.8821, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.1731, 30.2031, -32.3137, 0.22", "25.8851, 31.6182, -32.6463, 0.22", "25.6453, 32.7964, -32.9231, 0.29", "25.5688, 33.172, -33.0114, 0.29", "25.3866, 34.0671, -33.2217, 0.15", "25.0842, 35.5523, -33.5707, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "26.1731, 30.2031, -32.3137, 0.29", "26.8952, 29.9374, -32.9135, 0.29", "27.0384, 29.8847, -33.0324, 0.29", "27.6407, 29.663, -33.5327, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.6407, 29.663, -33.5327, 0.22", "27.7305, 29.9985, -33.6925, 0.22", "27.8916, 30.9352, -33.9511, 0.22", "27.917, 31.1779, -33.9939, 0.22", "27.9193, 31.7082, -34.0005, 0.22", "27.8367, 32.3949, -33.8815, 0.15", "27.6407, 33.1827, -33.6112, 0.15", "27.5177, 33.4593, -33.438, 0.15", "27.3602, 33.7731, -33.211, 0.59", "26.9443, 34.509, -32.6197, 0.88", "26.4418, 35.2695, -31.928, 0.88", "25.8736, 36.0112, -31.1596, 0.52", "25.0473, 36.9813, -30.048, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "27.6407, 29.663, -33.5327, 0.22", "28.2802, 29.5188, -33.2729, 0.22", "29.3083, 29.2007, -33.5186, 0.22", "29.8964, 29.0029, -33.7756, 0.22", "30.5244, 28.7986, -34.0885, 0.22", "30.9308, 28.6903, -34.3112, 0.29", "31.9598, 28.4162, -34.875, 0.29", "33.5172, 27.9843, -35.8866, 0.15", "34.2281, 27.7817, -36.4119, 0.15", "34.8629, 27.6034, -36.9361, 0.22", "35.7958, 27.3687, -37.7677, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_35", "dend_12", "dend_3", "dend_0", "dend_57", "dend_56", "dend_50", "dend_49", "dend_45", "dend_36", "dend_22", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_63", "dend_58", "dend_52", "dend_51", "dend_47", "dend_46", "dend_40", "dend_37", "dend_32", "dend_23", "dend_15", "dend_14", "dend_7", "dend_6", "dend_65", "dend_64", "dend_60", "dend_59", "dend_54", "dend_53", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_19", "dend_16", "dend_9", "dend_8", "dend_62", "dend_61", "dend_44", "dend_43", "dend_31", "dend_26", "dend_21", "dend_20", "dend_18", "dend_17", "dend_11", "dend_10", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_35", "dend_12", "dend_3", "dend_0", "dend_57", "dend_56", "dend_50", "dend_49", "dend_45", "dend_36", "dend_22", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_63", "dend_58", "dend_52", "dend_51", "dend_47", "dend_46", "dend_40", "dend_37", "dend_32", "dend_23", "dend_15", "dend_14", "dend_7", "dend_6", "dend_65", "dend_64", "dend_60", "dend_59", "dend_54", "dend_53", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_19", "dend_16", "dend_9", "dend_8", "dend_62", "dend_61", "dend_44", "dend_43", "dend_31", "dend_26", "dend_21", "dend_20", "dend_18", "dend_17", "dend_11", "dend_10", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_35", "dend_12", "dend_3", "dend_0", "axon_0", "dend_57", "dend_56", "dend_50", "dend_49", "dend_45", "dend_36", "dend_22", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "axon_1", "dend_63", "dend_58", "dend_52", "dend_51", "dend_47", "dend_46", "dend_40", "dend_37", "dend_32", "dend_23", "dend_15", "dend_14", "dend_7", "dend_6", "dend_65", "dend_64", "dend_60", "dend_59", "dend_54", "dend_53", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_19", "dend_16", "dend_9", "dend_8", "dend_62", "dend_61", "dend_44", "dend_43", "dend_31", "dend_26", "dend_21", "dend_20", "dend_18", "dend_17", "dend_11", "dend_10", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_NGCDA_d8569cb244_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_35
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_22
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, axon_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, axon_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.450000070853549)
    connect dend_48(0), soma_0(0.450000070853549)
    connect dend_35(0), soma_0(0.450000070853549)
    connect dend_12(0), soma_0(0.450000070853549)
    connect dend_3(0), soma_0(0.450000070853549)
    connect dend_0(0), soma_0(0.450000070853549)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 4.62286, -6.48181, 0.0, 4.1193 ) }
    soma_0 { pt3dadd( 4.07189, -5.77432, 0.0, 7.27496 ) }
    soma_0 { pt3dadd( 3.52092, -5.06683, 0.0, 9.50146 ) }
    soma_0 { pt3dadd( 2.96995, -4.35935, 0.0, 10.7052 ) }
    soma_0 { pt3dadd( 2.41898, -3.65186, 0.0, 11.3464 ) }
    soma_0 { pt3dadd( 1.86801, -2.94437, 0.0, 11.833 ) }
    soma_0 { pt3dadd( 1.31704, -2.23689, 0.0, 12.4478 ) }
    soma_0 { pt3dadd( 0.766068, -1.5294, 0.0, 13.1823 ) }
    soma_0 { pt3dadd( 0.215097, -0.821912, 0.0, 13.6629 ) }
    soma_0 { pt3dadd( -0.335874, -0.114425, 0.0, 14.0775 ) }
    soma_0 { pt3dadd( -0.886844, 0.593062, 0.0, 14.2269 ) }
    soma_0 { pt3dadd( -1.43781, 1.30055, 0.0, 14.2753 ) }
    soma_0 { pt3dadd( -1.98879, 2.00804, 0.0, 14.3053 ) }
    soma_0 { pt3dadd( -2.53976, 2.71552, 0.0, 14.0514 ) }
    soma_0 { pt3dadd( -3.09073, 3.42301, 0.0, 13.4254 ) }
    soma_0 { pt3dadd( -3.6417, 4.1305, 0.0, 12.6418 ) }
    soma_0 { pt3dadd( -4.19267, 4.83798, 0.0, 11.7022 ) }
    soma_0 { pt3dadd( -4.74364, 5.54547, 0.0, 10.5709 ) }
    soma_0 { pt3dadd( -5.29461, 6.25296, 0.0, 9.14082 ) }
    soma_0 { pt3dadd( -5.84558, 6.96044, 0.0, 6.8148 ) }
    soma_0 { pt3dadd( -6.39655, 7.66793, 0.0, 3.66661 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 3.136, 6.66684, 8.6, 1.55 ) }
    dend_55 { pt3dadd( 4.0966, 7.76585, 9.62366, 1.55 ) }
    dend_55 { pt3dadd( 5.23582, 9.01701, 11.2149, 1.25 ) }
    dend_55 { pt3dadd( 6.12105, 9.98919, 12.4514, 1.25 ) }
    dend_55 { pt3dadd( 7.23181, 11.2091, 14.003, 1.4 ) }
    dend_55 { pt3dadd( 8.11322, 12.1772, 15.2341, 1.4 ) }
    dend_55 { pt3dadd( 9.46378, 13.6604, 17.1206, 1.77 ) }
    dend_55 { pt3dadd( 10.9914, 15.1778, 19.254, 2.43 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 29/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.115998, 8.27684, -0.4, 0.59 ) }
    dend_48 { pt3dadd( 0.277044, 8.79545, -0.494713, 0.59 ) }
    dend_48 { pt3dadd( 0.611601, 9.87281, -0.691472, 0.66 ) }
    dend_48 { pt3dadd( 1.11176, 11.4835, -0.985627, 1.03 ) }
    dend_48 { pt3dadd( 1.5112, 12.7698, -1.22054, 1.11 ) }
    dend_48 { pt3dadd( 2.00437, 14.3579, -1.51058, 0.88 ) }
    dend_48 { pt3dadd( 2.61127, 16.3123, -1.86752, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 36/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 1.626, -8.06316, -0.710001, 3.83 ) }
    dend_35 { pt3dadd( 1.626, -8.06316, -0.710001, 3.83 ) }
    dend_35 { pt3dadd( 1.7975, -10.6009, -1.32173, 3.39 ) }
    dend_35 { pt3dadd( 1.91924, -12.4024, -1.75597, 3.17 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 40/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.54599, -2.73316, -0.210001, 1.77 ) }
    dend_12 { pt3dadd( 7.54599, -2.73316, -0.210001, 1.77 ) }
    dend_12 { pt3dadd( 8.38283, -2.78642, -0.362153, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 43/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.06401, 9.25684, 0.18, 1.55 ) }
    dend_3 { pt3dadd( -3.06799, 9.59697, 0.234727, 1.55 ) }
    dend_3 { pt3dadd( -3.09005, 10.4844, 0.44175, 1.33 ) }
    dend_3 { pt3dadd( -3.11377, 11.4383, 0.66426, 1.33 ) }
    dend_3 { pt3dadd( -3.13505, 12.2941, 0.863894, 1.55 ) }
    dend_3 { pt3dadd( -3.1524, 12.9916, 1.02661, 1.55 ) }
    dend_3 { pt3dadd( -3.17165, 13.7657, 1.20719, 1.62 ) }
    dend_3 { pt3dadd( -3.17946, 14.8044, 1.44854, 1.62 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.17401, -1.65316, -2.6, 0.96 ) }
    dend_0 { pt3dadd( -8.7019, -1.51442, -2.60102, 0.96 ) }
    dend_0 { pt3dadd( -9.42642, -1.34237, -2.63252, 0.96 ) }
    dend_0 { pt3dadd( -10.146, -1.2009, -2.69983, 0.81 ) }
    dend_0 { pt3dadd( -11.1856, -1.06689, -2.84359, 1.11 ) }
    dend_0 { pt3dadd( -12.3809, -1.01337, -3.06272, 0.96 ) }
    dend_0 { pt3dadd( -13.5567, -1.0603, -3.30301, 0.88 ) }
    dend_0 { pt3dadd( -14.6263, -1.2382, -3.55561, 1.33 ) }
    dend_0 { pt3dadd( -15.5731, -1.53041, -3.80736, 1.33 ) }
    dend_0 { pt3dadd( -16.6736, -2.08293, -4.11073, 1.03 ) }
    dend_0 { pt3dadd( -17.6971, -2.83272, -4.39022, 0.81 ) }
    dend_0 { pt3dadd( -18.4549, -3.55024, -4.59887, 0.66 ) }
    dend_0 { pt3dadd( -19.1224, -4.27702, -4.80218, 0.88 ) }
    dend_0 { pt3dadd( -19.6017, -4.80615, -4.95296, 0.96 ) }
    dend_0 { pt3dadd( -20.3313, -5.54775, -5.17766, 0.66 ) }
    dend_0 { pt3dadd( -20.9946, -6.05714, -5.39222, 0.66 ) }
    dend_0 { pt3dadd( -21.8164, -6.39536, -5.69891, 0.52 ) }
    dend_0 { pt3dadd( -22.7775, -6.55684, -6.13385, 0.52 ) }
    dend_0 { pt3dadd( -23.6504, -6.60052, -6.51185, 0.88 ) }
    dend_0 { pt3dadd( -24.5106, -6.59455, -6.86468, 0.96 ) }
    dend_0 { pt3dadd( -25.6828, -6.53449, -7.3175, 0.81 ) }
    dend_0 { pt3dadd( -26.8519, -6.45932, -7.72264, 0.59 ) }
    dend_0 { pt3dadd( -27.6098, -6.44641, -7.92271, 0.59 ) }
    dend_0 { pt3dadd( -28.8393, -6.47473, -8.18354, 0.74 ) }
    dend_0 { pt3dadd( -29.6136, -6.54313, -8.33075, 1.03 ) }
    dend_0 { pt3dadd( -30.0148, -6.60797, -8.39995, 1.03 ) }
    dend_0 { pt3dadd( -31.1503, -6.89347, -8.51904, 0.88 ) }
    dend_0 { pt3dadd( -32.4754, -7.26677, -8.54813, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -6.39655, 7.66793, 0.0, 0.793401 ) }
    axon_0 { pt3dadd( -15.613, 19.5025, 0.0, 0.793401 ) }
    axon_0 { pt3dadd( -24.8294, 31.3371, 0.0, 0.793401 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 82/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 10.9914, 15.1778, 19.254, 0.96 ) }
    dend_57 { pt3dadd( 12.518, 15.5379, 19.3651, 0.96 ) }
    dend_57 { pt3dadd( 14.0978, 15.9106, 19.48, 1.03 ) }
    dend_57 { pt3dadd( 16.1999, 16.4065, 19.633, 0.96 ) }
    dend_57 { pt3dadd( 18.4021, 16.926, 19.7932, 1.03 ) }
    dend_57 { pt3dadd( 19.9818, 17.2987, 19.9082, 0.96 ) }
    dend_57 { pt3dadd( 22.1435, 17.8087, 20.0654, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 10.9914, 15.1778, 19.254, 0.52 ) }
    dend_56 { pt3dadd( 10.7494, 16.4031, 18.6954, 0.52 ) }
    dend_56 { pt3dadd( 10.5367, 17.3195, 18.271, 0.96 ) }
    dend_56 { pt3dadd( 10.3367, 18.2382, 17.8433, 0.88 ) }
    dend_56 { pt3dadd( 10.1499, 19.3141, 17.3169, 0.59 ) }
    dend_56 { pt3dadd( 9.99678, 20.4445, 16.7383, 0.52 ) }
    dend_56 { pt3dadd( 9.91864, 21.3147, 16.2779, 0.44 ) }
    dend_56 { pt3dadd( 9.92601, 21.9608, 15.887, 0.44 ) }
    dend_56 { pt3dadd( 10.0026, 22.6462, 15.4695, 0.44 ) }
    dend_56 { pt3dadd( 10.1315, 23.2959, 15.0774, 0.44 ) }
    dend_56 { pt3dadd( 10.2177, 23.5716, 14.9209, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 10.4617, 24.1383, 14.6326, 0.44 ) }
    dend_56 { pt3dadd( 10.8509, 24.8547, 14.2275, 1.03 ) }
    dend_56 { pt3dadd( 11.2151, 25.5273, 13.7739, 0.59 ) }
    dend_56 { pt3dadd( 11.5124, 26.1908, 13.2502, 0.59 ) }
    dend_56 { pt3dadd( 11.843, 27.2071, 12.4214, 0.96 ) }
    dend_56 { pt3dadd( 11.9672, 27.7725, 11.9697, 1.18 ) }
    dend_56 { pt3dadd( 12.094, 28.7323, 11.2643, 1.25 ) }
    dend_56 { pt3dadd( 12.1903, 30.1031, 10.3609, 0.44 ) }
    dend_56 { pt3dadd( 12.197, 31.367, 9.64635, 0.44 ) }
    dend_56 { pt3dadd( 12.1545, 32.2238, 9.27938, 0.59 ) }
    dend_56 { pt3dadd( 12.0586, 33.3026, 8.94483, 0.59 ) }
    dend_56 { pt3dadd( 11.9401, 34.7945, 8.66733, 0.59 ) }
    dend_56 { pt3dadd( 11.9235, 35.861, 8.67929, 0.59 ) }
    dend_56 { pt3dadd( 11.9844, 36.5922, 8.84518, 0.59 ) }
    dend_56 { pt3dadd( 12.153, 37.5093, 9.20194, 0.74 ) }
    dend_56 { pt3dadd( 12.3462, 38.1696, 9.53688, 0.29 ) }
    dend_56 { pt3dadd( 12.8423, 39.2814, 10.3158, 0.29 ) }
    dend_56 { pt3dadd( 13.3591, 40.1925, 11.1289, 0.22 ) }
    dend_56 { pt3dadd( 13.7466, 40.7991, 11.7204, 0.22 ) }
    dend_56 { pt3dadd( 13.9834, 41.14, 12.065, 0.22 ) }
    dend_56 { pt3dadd( 14.2482, 41.5012, 12.4497, 0.59 ) }
    dend_56 { pt3dadd( 14.8831, 42.3354, 13.3872, 0.22 ) }
    dend_56 { pt3dadd( 15.3855, 43.0295, 14.16, 0.22 ) }
    dend_56 { pt3dadd( 15.6367, 43.3772, 14.5493, 0.66 ) }
    dend_56 { pt3dadd( 16.1957, 44.1071, 15.3257, 0.52 ) }
    dend_56 { pt3dadd( 16.7748, 44.8073, 16.0532, 0.29 ) }
    dend_56 { pt3dadd( 17.5828, 45.6599, 16.8708, 0.29 ) }
    dend_56 { pt3dadd( 18.118, 46.1098, 17.2102, 0.29 ) }
    dend_56 { pt3dadd( 18.7941, 46.487, 17.3659, 0.37 ) }
    dend_56 { pt3dadd( 19.6816, 46.8209, 17.3241, 0.81 ) }
    dend_56 { pt3dadd( 20.3841, 46.9991, 17.1407, 0.81 ) }
    dend_56 { pt3dadd( 21.6296, 47.2308, 16.6974, 0.44 ) }
    dend_56 { pt3dadd( 22.8795, 47.4108, 16.1702, 0.29 ) }
    dend_56 { pt3dadd( 24.0813, 47.5326, 15.6341, 0.37 ) }
    dend_56 { pt3dadd( 24.9989, 47.5808, 15.2301, 0.59 ) }
    dend_56 { pt3dadd( 26.1519, 47.6076, 14.7509, 0.81 ) }
    dend_56 { pt3dadd( 27.2135, 47.627, 14.3008, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 37/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.61127, 16.3123, -1.86752, 0.44 ) }
    dend_50 { pt3dadd( 3.6465, 15.5663, -4.84489, 0.44 ) }
    dend_50 { pt3dadd( 4.03692, 15.3247, -5.83806, 0.44 ) }
    dend_50 { pt3dadd( 4.42592, 15.1235, -6.77191, 0.44 ) }
    dend_50 { pt3dadd( 5.18717, 14.8162, -8.61133, 0.44 ) }
    dend_50 { pt3dadd( 5.91243, 14.5842, -10.407, 0.44 ) }
    dend_50 { pt3dadd( 6.36006, 14.461, -11.6129, 0.44 ) }
    dend_50 { pt3dadd( 6.71132, 14.406, -12.5935, 0.44 ) }
    dend_50 { pt3dadd( 7.37576, 14.4562, -14.5376, 0.44 ) }
    dend_50 { pt3dadd( 7.75279, 14.591, -15.7845, 0.44 ) }
    dend_50 { pt3dadd( 8.01809, 14.8239, -17.0211, 0.44 ) }
    dend_50 { pt3dadd( 8.1994, 15.1934, -18.5324, 1.03 ) }
    dend_50 { pt3dadd( 8.2326, 15.5957, -20.0125, 0.66 ) }
    dend_50 { pt3dadd( 8.2064, 16.0228, -21.4864, 0.88 ) }
    dend_50 { pt3dadd( 8.13254, 16.3674, -22.5852, 1.18 ) }
    dend_50 { pt3dadd( 7.95603, 16.9349, -24.3806, 0.81 ) }
    dend_50 { pt3dadd( 7.77538, 17.3759, -25.645, 0.52 ) }
    dend_50 { pt3dadd( 7.57617, 17.775, -26.6826, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.61127, 16.3123, -1.86752, 0.44 ) }
    dend_49 { pt3dadd( 3.18882, 17.7293, -1.54836, 0.44 ) }
    dend_49 { pt3dadd( 3.32309, 18.6008, -1.1977, 0.66 ) }
    dend_49 { pt3dadd( 3.25527, 19.2998, -0.775343, 0.66 ) }
    dend_49 { pt3dadd( 3.10159, 20.3248, -0.177526, 0.52 ) }
    dend_49 { pt3dadd( 3.03404, 21.0692, 0.207648, 0.66 ) }
    dend_49 { pt3dadd( 3.00218, 22.3611, 0.825026, 0.66 ) }
    dend_49 { pt3dadd( 2.92319, 23.6567, 1.42839, 0.59 ) }
    dend_49 { pt3dadd( 2.92386, 24.5417, 1.82599, 0.37 ) }
    dend_49 { pt3dadd( 3.06106, 25.6998, 2.2988, 0.37 ) }
    dend_49 { pt3dadd( 3.31922, 26.8649, 2.72981, 0.59 ) }
    dend_49 { pt3dadd( 3.52463, 27.5413, 2.98905, 0.59 ) }
    dend_49 { pt3dadd( 3.79119, 28.3323, 3.37448, 0.59 ) }
    dend_49 { pt3dadd( 3.9988, 28.9719, 3.76082, 0.66 ) }
    dend_49 { pt3dadd( 4.12675, 29.5009, 4.14465, 0.52 ) }
    dend_49 { pt3dadd( 4.24601, 30.2538, 4.75727, 0.52 ) }
    dend_49 { pt3dadd( 4.40992, 31.5629, 5.90769, 0.88 ) }
    dend_49 { pt3dadd( 4.59299, 32.8308, 7.02997, 0.88 ) }
    dend_49 { pt3dadd( 4.64442, 33.1637, 7.32566, 0.88 ) }
    dend_49 { pt3dadd( 4.81345, 34.0916, 8.15684, 0.59 ) }
    dend_49 { pt3dadd( 4.96452, 34.834, 8.80106, 0.44 ) }
    dend_49 { pt3dadd( 5.35999, 36.084, 9.72804, 0.44 ) }
    dend_49 { pt3dadd( 5.58186, 36.6474, 10.1166, 0.81 ) }
    dend_49 { pt3dadd( 5.91952, 37.4321, 10.6987, 0.66 ) }
    dend_49 { pt3dadd( 6.38876, 38.5325, 11.617, 0.44 ) }
    dend_49 { pt3dadd( 6.65958, 39.3078, 12.3959, 0.44 ) }
    dend_49 { pt3dadd( 6.94663, 40.4651, 13.6831, 0.37 ) }
    dend_49 { pt3dadd( 7.06585, 41.5351, 14.8954, 0.37 ) }
    dend_49 { pt3dadd( 7.06754, 42.1946, 15.6585, 0.81 ) }
    dend_49 { pt3dadd( 7.03441, 42.6679, 16.2078, 0.37 ) }
    dend_49 { pt3dadd( 6.88418, 43.7783, 17.449, 0.37 ) }
    dend_49 { pt3dadd( 6.83271, 44.0729, 17.7565, 0.37 ) }
    dend_49 { pt3dadd( 6.71635, 44.6491, 18.3578, 0.44 ) }
    dend_49 { pt3dadd( 6.66341, 45.2133, 18.9148, 0.22 ) }
    dend_49 { pt3dadd( 6.66055, 45.8079, 19.5506, 0.44 ) }
    dend_49 { pt3dadd( 6.67589, 46.2718, 20.1005, 0.66 ) }
    dend_49 { pt3dadd( 6.697, 46.7514, 20.6985, 0.52 ) }
    dend_49 { pt3dadd( 6.71461, 47.6897, 21.9419, 0.37 ) }
    dend_49 { pt3dadd( 6.74571, 48.6185, 23.2276, 0.22 ) }
    dend_49 { pt3dadd( 6.77319, 49.2666, 24.2089, 0.59 ) }
    dend_49 { pt3dadd( 6.84593, 49.871, 25.1453, 0.59 ) }
    dend_49 { pt3dadd( 6.98393, 50.5112, 26.2162, 0.59 ) }
    dend_49 { pt3dadd( 7.08839, 50.7782, 26.7008, 0.59 ) }
    dend_49 { pt3dadd( 7.2546, 50.9873, 27.0983, 0.44 ) }
    dend_49 { pt3dadd( 8.08601, 51.3822, 28.0591, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( 9.39766, 51.5912, 28.9999, 0.22 ) }
    dend_49 { pt3dadd( 10.042, 51.6274, 29.3583, 0.22 ) }
    dend_49 { pt3dadd( 10.3484, 51.6304, 29.5278, 0.22 ) }
    dend_49 { pt3dadd( 11.0654, 51.6324, 30.0005, 0.66 ) }
    dend_49 { pt3dadd( 11.9547, 51.6742, 30.7249, 0.37 ) }
    dend_49 { pt3dadd( 12.5997, 51.7463, 31.3468, 0.37 ) }
    dend_49 { pt3dadd( 13.3651, 51.8789, 32.2355, 0.52 ) }
    dend_49 { pt3dadd( 14.1618, 52.039, 33.1868, 0.22 ) }
    dend_49 { pt3dadd( 14.8986, 52.191, 34.1621, 0.81 ) }
    dend_49 { pt3dadd( 15.6061, 52.3363, 35.2497, 0.59 ) }
    dend_49 { pt3dadd( 16.2712, 52.3871, 36.3671, 0.15 ) }
    dend_49 { pt3dadd( 16.4553, 52.3779, 36.7092, 0.66 ) }
    dend_49 { pt3dadd( 17.2036, 52.2302, 38.1468, 0.22 ) }
    dend_49 { pt3dadd( 17.9184, 51.9831, 39.3831, 0.74 ) }
    dend_49 { pt3dadd( 18.402, 51.7461, 40.2027, 1.18 ) }
    dend_49 { pt3dadd( 19.0675, 51.2882, 41.5295, 0.07 ) }
    dend_49 { pt3dadd( 19.5506, 50.8946, 42.5641, 0.07 ) }
    dend_49 { pt3dadd( 19.7933, 50.6763, 43.1218, 0.66 ) }
    dend_49 { pt3dadd( 20.1054, 50.3431, 43.9339, 1.11 ) }
    dend_49 { pt3dadd( 20.6706, 49.7383, 45.2716, 0.66 ) }
    dend_49 { pt3dadd( 21.313, 49.0901, 46.7969, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_35 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.91924, -12.4024, -1.75597, 2.43 ) }
    dend_45 { pt3dadd( 1.27514, -13.0908, -1.35474, 2.43 ) }
    dend_45 { pt3dadd( -0.145364, -14.2997, -0.284147, 1.99 ) }
    dend_45 { pt3dadd( -1.59688, -15.3078, 0.992901, 1.62 ) }
    dend_45 { pt3dadd( -2.72374, -15.9706, 1.94395, 0.81 ) }
    dend_45 { pt3dadd( -3.90151, -16.6082, 2.80816, 0.88 ) }
    dend_45 { pt3dadd( -4.98991, -17.1475, 3.53986, 1.11 ) }
    dend_45 { pt3dadd( -6.72835, -17.8365, 4.59115, 1.11 ) }
    dend_45 { pt3dadd( -8.40402, -18.3416, 5.39213, 0.81 ) }
    dend_45 { pt3dadd( -9.96481, -18.7408, 5.75096, 0.74 ) }
    dend_45 { pt3dadd( -11.8018, -19.323, 5.26493, 0.88 ) }
    dend_45 { pt3dadd( -12.9987, -19.8864, 4.28464, 0.52 ) }
    dend_45 { pt3dadd( -14.0205, -20.5568, 2.89509, 0.52 ) }
    dend_45 { pt3dadd( -14.9039, -21.3065, 1.32247, 0.66 ) }
    dend_45 { pt3dadd( -15.7677, -22.1364, -0.528154, 0.66 ) }
    dend_45 { pt3dadd( -16.5905, -23.0918, -2.71483, 0.81 ) }
    dend_45 { pt3dadd( -16.9464, -23.5922, -3.88831, 0.66 ) }
    dend_45 { pt3dadd( -17.3999, -24.3751, -5.73011, 0.74 ) }
    dend_45 { pt3dadd( -17.7406, -25.0764, -7.19832, 0.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.91924, -12.4024, -1.75597, 0.96 ) }
    dend_36 { pt3dadd( 3.17339, -13.6101, -1.38698, 0.96 ) }
    dend_36 { pt3dadd( 4.11617, -14.6186, -1.16058, 1.25 ) }
    dend_36 { pt3dadd( 5.05527, -15.7253, -1.05331, 1.62 ) }
    dend_36 { pt3dadd( 5.91286, -16.8374, -1.09844, 0.88 ) }
    dend_36 { pt3dadd( 6.79891, -18.1065, -1.38956, 0.88 ) }
    dend_36 { pt3dadd( 7.38631, -19.0019, -1.75991, 0.88 ) }
    dend_36 { pt3dadd( 8.0715, -20.2206, -2.69866, 0.88 ) }
    dend_36 { pt3dadd( 8.48688, -21.1544, -3.8677, 0.88 ) }
    dend_36 { pt3dadd( 8.64353, -21.6978, -4.93028, 0.88 ) }
    dend_36 { pt3dadd( 8.71796, -22.2897, -6.5, 0.74 ) }
    dend_36 { pt3dadd( 8.7224, -22.5687, -7.47338, 0.74 ) }
    dend_36 { pt3dadd( 8.72237, -22.7016, -8.10298, 0.74 ) }
    dend_36 { pt3dadd( 8.73134, -22.7998, -8.86539, 0.74 ) }
    dend_36 { pt3dadd( 8.76074, -22.8483, -9.74362, 0.74 ) }
    dend_36 { pt3dadd( 8.76552, -22.7971, -10.4624, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.38283, -2.78642, -0.362153, 0.66 ) }
    dend_22 { pt3dadd( 9.1652, -2.44596, -1.16228, 0.66 ) }
    dend_22 { pt3dadd( 10.3005, -2.01791, -2.32329, 0.52 ) }
    dend_22 { pt3dadd( 11.226, -1.65004, -3.26965, 0.66 ) }
    dend_22 { pt3dadd( 12.0278, -1.27133, -4.0924, 0.81 ) }
    dend_22 { pt3dadd( 12.958, -0.757696, -5.08457, 1.03 ) }
    dend_22 { pt3dadd( 13.9766, -0.105709, -6.20034, 1.25 ) }
    dend_22 { pt3dadd( 14.6605, 0.356062, -6.96852, 1.03 ) }
    dend_22 { pt3dadd( 15.5559, 0.989599, -7.99099, 1.18 ) }
    dend_22 { pt3dadd( 16.4489, 1.6743, -9.03049, 1.03 ) }
    dend_22 { pt3dadd( 17.1914, 2.35193, -9.93806, 1.18 ) }
    dend_22 { pt3dadd( 17.8099, 3.0608, -10.6774, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.38283, -2.78642, -0.362153, 0.74 ) }
    dend_13 { pt3dadd( 9.28036, -2.57147, -0.329734, 0.74 ) }
    dend_13 { pt3dadd( 10.3004, -2.30822, -0.345679, 0.66 ) }
    dend_13 { pt3dadd( 11.1063, -2.1216, -0.360083, 0.88 ) }
    dend_13 { pt3dadd( 11.8776, -1.97944, -0.33354, 0.96 ) }
    dend_13 { pt3dadd( 12.846, -1.87427, -0.245695, 0.81 ) }
    dend_13 { pt3dadd( 13.5732, -1.84841, -0.142021, 0.74 ) }
    dend_13 { pt3dadd( 14.6658, -1.88108, 0.0815098, 0.96 ) }
    dend_13 { pt3dadd( 15.6232, -2.00672, 0.355355, 0.96 ) }
    dend_13 { pt3dadd( 16.5911, -2.24738, 0.734801, 0.81 ) }
    dend_13 { pt3dadd( 17.6111, -2.59559, 1.19723, 0.66 ) }
    dend_13 { pt3dadd( 18.3204, -2.91147, 1.56933, 0.88 ) }
    dend_13 { pt3dadd( 18.8125, -3.1743, 1.87884, 1.25 ) }
    dend_13 { pt3dadd( 19.2527, -3.45443, 2.21361, 1.47 ) }
    dend_13 { pt3dadd( 19.9039, -3.90878, 2.7473, 1.47 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.17946, 14.8044, 1.44854, 1.25 ) }
    dend_5 { pt3dadd( -4.08074, 15.3447, 0.54922, 1.25 ) }
    dend_5 { pt3dadd( -4.75601, 15.7482, -0.199794, 1.11 ) }
    dend_5 { pt3dadd( -5.8303, 16.4502, -1.57812, 1.11 ) }
    dend_5 { pt3dadd( -6.59542, 17.0174, -2.54533, 1.18 ) }
    dend_5 { pt3dadd( -7.43535, 17.7373, -3.59713, 1.11 ) }
    dend_5 { pt3dadd( -8.19483, 18.5389, -4.56788, 1.11 ) }
    dend_5 { pt3dadd( -8.65253, 19.0512, -5.22231, 1.11 ) }
    dend_5 { pt3dadd( -9.14077, 19.6902, -5.98332, 0.96 ) }
    dend_5 { pt3dadd( -9.95101, 21.5369, -7.57068, 0.96 ) }
    dend_5 { pt3dadd( -10.0112, 22.2999, -7.9016, 1.11 ) }
    dend_5 { pt3dadd( -9.80395, 23.6245, -7.74047, 1.4 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 95/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.17946, 14.8044, 1.44854, 0.59 ) }
    dend_4 { pt3dadd( -2.51471, 15.6706, 2.25875, 0.59 ) }
    dend_4 { pt3dadd( -2.0424, 16.3321, 2.73673, 0.44 ) }
    dend_4 { pt3dadd( -1.49026, 17.15, 3.21465, 0.66 ) }
    dend_4 { pt3dadd( -1.09269, 17.7102, 3.49295, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( -0.409073, 18.5684, 3.91126, 0.52 ) }
    dend_4 { pt3dadd( -0.0411071, 18.9935, 4.1739, 0.59 ) }
    dend_4 { pt3dadd( 0.480543, 19.5204, 4.57595, 0.59 ) }
    dend_4 { pt3dadd( 0.881456, 19.9126, 4.95527, 0.59 ) }
    dend_4 { pt3dadd( 1.43657, 20.4613, 5.62485, 0.59 ) }
    dend_4 { pt3dadd( 1.99201, 21.0749, 6.45227, 0.52 ) }
    dend_4 { pt3dadd( 2.83029, 22.0673, 7.80537, 0.44 ) }
    dend_4 { pt3dadd( 3.43064, 22.8042, 8.73743, 0.44 ) }
    dend_4 { pt3dadd( 3.89531, 23.3981, 9.40267, 0.66 ) }
    dend_4 { pt3dadd( 4.21884, 23.8286, 9.78952, 0.66 ) }
    dend_4 { pt3dadd( 5.03516, 24.9454, 10.5043, 0.52 ) }
    dend_4 { pt3dadd( 5.61264, 25.7218, 10.8627, 0.44 ) }
    dend_4 { pt3dadd( 6.21285, 26.4602, 11.1451, 0.44 ) }
    dend_4 { pt3dadd( 6.82911, 27.1002, 11.4454, 0.81 ) }
    dend_4 { pt3dadd( 7.41926, 27.6011, 11.7896, 0.81 ) }
    dend_4 { pt3dadd( 8.31358, 28.2691, 12.4017, 0.37 ) }
    dend_4 { pt3dadd( 9.11496, 28.8434, 13.0585, 0.37 ) }
    dend_4 { pt3dadd( 9.82503, 29.4146, 13.7216, 0.37 ) }
    dend_4 { pt3dadd( 10.7199, 30.2186, 14.6857, 0.44 ) }
    dend_4 { pt3dadd( 11.32, 30.7883, 15.3372, 0.44 ) }
    dend_4 { pt3dadd( 11.6409, 31.1024, 15.6858, 0.44 ) }
    dend_4 { pt3dadd( 12.205, 31.6733, 16.2803, 0.52 ) }
    dend_4 { pt3dadd( 12.9696, 32.4642, 17.0637, 0.37 ) }
    dend_4 { pt3dadd( 13.6048, 33.1359, 17.751, 0.37 ) }
    dend_4 { pt3dadd( 14.0539, 33.6339, 18.3177, 0.37 ) }
    dend_4 { pt3dadd( 14.7811, 34.451, 19.4035, 0.52 ) }
    dend_4 { pt3dadd( 15.3777, 35.1455, 20.487, 0.74 ) }
    dend_4 { pt3dadd( 15.6254, 35.471, 21.0695, 0.74 ) }
    dend_4 { pt3dadd( 16.001, 36.0912, 22.2653, 0.59 ) }
    dend_4 { pt3dadd( 16.2501, 36.6027, 23.1599, 0.59 ) }
    dend_4 { pt3dadd( 16.4977, 37.2068, 24.1861, 0.52 ) }
    dend_4 { pt3dadd( 16.7647, 37.8637, 25.2402, 0.52 ) }
    dend_4 { pt3dadd( 17.0089, 38.386, 26.103, 0.52 ) }
    dend_4 { pt3dadd( 17.2055, 38.7479, 26.7288, 0.52 ) }
    dend_4 { pt3dadd( 17.6294, 39.4453, 28.0465, 0.44 ) }
    dend_4 { pt3dadd( 18.0532, 40.0039, 29.2506, 0.44 ) }
    dend_4 { pt3dadd( 18.3552, 40.3035, 29.9823, 0.44 ) }
    dend_4 { pt3dadd( 18.6643, 40.594, 30.5774, 0.44 ) }
    dend_4 { pt3dadd( 19.0325, 40.9498, 31.1243, 0.44 ) }
    dend_4 { pt3dadd( 19.2006, 41.1265, 31.337, 0.44 ) }
    dend_4 { pt3dadd( 19.6593, 41.6265, 31.8468, 0.44 ) }
    dend_4 { pt3dadd( 20.4283, 42.383, 32.4218, 0.44 ) }
    dend_4 { pt3dadd( 21.4453, 43.2674, 33.0359, 0.44 ) }
    dend_4 { pt3dadd( 22.5716, 44.1461, 33.5349, 0.29 ) }
    dend_4 { pt3dadd( 23.2871, 44.6446, 33.7391, 0.29 ) }
    dend_4 { pt3dadd( 23.8715, 45.0244, 33.8751, 0.44 ) }
    dend_4 { pt3dadd( 25.053, 45.7182, 34.0663, 0.66 ) }
    dend_4 { pt3dadd( 26.1201, 46.2667, 34.1754, 0.44 ) }
    dend_4 { pt3dadd( 27.0628, 46.6495, 34.2582, 0.81 ) }
    dend_4 { pt3dadd( 28.226, 47.0449, 34.3414, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -32.4754, -7.26677, -8.54813, 0.59 ) }
    dend_2 { pt3dadd( -32.6787, -8.10067, -8.65247, 0.59 ) }
    dend_2 { pt3dadd( -33.008, -9.32971, -8.79927, 0.88 ) }
    dend_2 { pt3dadd( -33.3263, -10.3213, -8.91855, 0.37 ) }
    dend_2 { pt3dadd( -33.566, -10.9417, -9.00217, 0.59 ) }
    dend_2 { pt3dadd( -33.9224, -11.7287, -9.12742, 0.37 ) }
    dend_2 { pt3dadd( -34.4969, -12.8134, -9.31949, 0.59 ) }
    dend_2 { pt3dadd( -34.9322, -13.4586, -9.46233, 0.66 ) }
    dend_2 { pt3dadd( -35.3843, -14.0171, -9.58887, 0.52 ) }
    dend_2 { pt3dadd( -36.0415, -14.7245, -9.76122, 0.52 ) }
    dend_2 { pt3dadd( -36.5719, -15.2231, -9.89612, 0.52 ) }
    dend_2 { pt3dadd( -37.1224, -15.6775, -10.0249, 0.52 ) }
    dend_2 { pt3dadd( -37.7118, -16.121, -10.1606, 0.52 ) }
    dend_2 { pt3dadd( -38.3963, -16.6334, -10.352, 0.59 ) }
    dend_2 { pt3dadd( -38.9936, -17.0734, -10.5547, 0.52 ) }
    dend_2 { pt3dadd( -39.7319, -17.5893, -10.8665, 0.81 ) }
    dend_2 { pt3dadd( -40.054, -17.8038, -11.0285, 0.88 ) }
    dend_2 { pt3dadd( -40.7553, -18.2467, -11.4702, 0.44 ) }
    dend_2 { pt3dadd( -41.2904, -18.5607, -11.8776, 0.44 ) }
    dend_2 { pt3dadd( -41.9461, -18.9325, -12.4772, 0.44 ) }
    dend_2 { pt3dadd( -42.386, -19.227, -12.9742, 0.44 ) }
    dend_2 { pt3dadd( -42.5957, -19.3943, -13.2572, 0.44 ) }
    dend_2 { pt3dadd( -42.9416, -19.7076, -13.7506, 0.44 ) }
    dend_2 { pt3dadd( -43.3954, -20.1724, -14.3552, 0.81 ) }
    dend_2 { pt3dadd( -43.73, -20.5536, -14.7309, 0.81 ) }
    dend_2 { pt3dadd( -44.256, -21.2214, -15.2263, 0.37 ) }
    dend_2 { pt3dadd( -44.6344, -21.7149, -15.5317, 0.37 ) }
    dend_2 { pt3dadd( -45.0317, -22.2311, -15.8388, 0.66 ) }
    dend_2 { pt3dadd( -45.7142, -23.0891, -16.3524, 0.29 ) }
    dend_2 { pt3dadd( -46.3329, -23.8324, -16.8176, 0.37 ) }
    dend_2 { pt3dadd( -46.8114, -24.3719, -17.2117, 0.59 ) }
    dend_2 { pt3dadd( -47.3175, -24.8973, -17.672, 0.88 ) }
    dend_2 { pt3dadd( -47.7702, -25.3303, -18.1311, 0.88 ) }
    dend_2 { pt3dadd( -48.2918, -25.787, -18.7359, 0.66 ) }
    dend_2 { pt3dadd( -48.666, -26.057, -19.1904, 0.37 ) }
    dend_2 { pt3dadd( -49.4652, -26.5051, -20.1077, 0.22 ) }
    dend_2 { pt3dadd( -49.7682, -26.6432, -20.4237, 0.22 ) }
    dend_2 { pt3dadd( -50.3365, -26.8701, -20.9477, 0.66 ) }
    dend_2 { pt3dadd( -51.0788, -27.15, -21.5277, 0.22 ) }
    dend_2 { pt3dadd( -51.895, -27.4524, -22.0504, 0.22 ) }
    dend_2 { pt3dadd( -52.49, -27.6791, -22.3474, 0.74 ) }
    dend_2 { pt3dadd( -52.7071, -27.7712, -22.4342, 0.74 ) }
    dend_2 { pt3dadd( -53.3486, -28.076, -22.675, 0.29 ) }
    dend_2 { pt3dadd( -54.0965, -28.4734, -22.9605, 0.74 ) }
    dend_2 { pt3dadd( -55.0321, -29.0314, -23.3653, 0.29 ) }
    dend_2 { pt3dadd( -55.6811, -29.4708, -23.6975, 0.88 ) }
    dend_2 { pt3dadd( -56.8438, -30.3298, -24.441, 0.29 ) }
    dend_2 { pt3dadd( -57.3752, -30.732, -24.8677, 0.29 ) }
    dend_2 { pt3dadd( -57.9201, -31.1523, -25.4305, 0.52 ) }
    dend_2 { pt3dadd( -58.5933, -31.6828, -26.3292, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( -58.9804, -31.9948, -26.9965, 0.81 ) }
    dend_2 { pt3dadd( -59.3941, -32.3249, -27.8701, 0.81 ) }
    dend_2 { pt3dadd( -59.7917, -32.6114, -28.7772, 0.44 ) }
    dend_2 { pt3dadd( -60.0757, -32.7789, -29.3891, 0.44 ) }
    dend_2 { pt3dadd( -60.2079, -32.84, -29.6446, 0.44 ) }
    dend_2 { pt3dadd( -60.5382, -32.9698, -30.2024, 0.44 ) }
    dend_2 { pt3dadd( -61.0337, -33.1835, -30.9624, 0.29 ) }
    dend_2 { pt3dadd( -61.4811, -33.3905, -31.5573, 0.88 ) }
    dend_2 { pt3dadd( -62.0818, -33.7077, -32.2585, 0.66 ) }
    dend_2 { pt3dadd( -62.8598, -34.1368, -33.0637, 0.59 ) }
    dend_2 { pt3dadd( -63.3164, -34.3898, -33.486, 0.59 ) }
    dend_2 { pt3dadd( -63.669, -34.5723, -33.7627, 0.59 ) }
    dend_2 { pt3dadd( -64.2149, -34.8484, -34.1343, 0.22 ) }
    dend_2 { pt3dadd( -64.8477, -35.1627, -34.5164, 0.22 ) }
    dend_2 { pt3dadd( -65.199, -35.3318, -34.7003, 0.22 ) }
    dend_2 { pt3dadd( -66.2207, -35.7887, -35.1805, 0.59 ) }
    dend_2 { pt3dadd( -66.9915, -36.1136, -35.5676, 0.22 ) }
    dend_2 { pt3dadd( -67.4379, -36.3013, -35.8213, 0.22 ) }
    dend_2 { pt3dadd( -67.9712, -36.5376, -36.1642, 0.29 ) }
    dend_2 { pt3dadd( -68.5719, -36.799, -36.5907, 0.29 ) }
    dend_2 { pt3dadd( -68.9366, -36.96, -36.8767, 0.22 ) }
    dend_2 { pt3dadd( -69.5323, -37.2328, -37.3508, 0.22 ) }
    dend_2 { pt3dadd( -70.0105, -37.4706, -37.7255, 0.29 ) }
    dend_2 { pt3dadd( -70.741, -37.8658, -38.2528, 0.29 ) }
    dend_2 { pt3dadd( -71.1574, -38.141, -38.5589, 0.66 ) }
    dend_2 { pt3dadd( -71.7691, -38.6417, -39.0192, 0.22 ) }
    dend_2 { pt3dadd( -72.3453, -39.2446, -39.4799, 0.29 ) }
    dend_2 { pt3dadd( -72.9511, -40.0516, -40.0113, 0.22 ) }
    dend_2 { pt3dadd( -73.2885, -40.6718, -40.399, 0.66 ) }
    dend_2 { pt3dadd( -73.5913, -41.6073, -40.9796, 0.15 ) }
    dend_2 { pt3dadd( -73.6677, -42.2196, -41.4163, 0.22 ) }
    dend_2 { pt3dadd( -73.6299, -42.874, -41.9559, 0.22 ) }
    dend_2 { pt3dadd( -73.5477, -43.2414, -42.3229, 0.29 ) }
    dend_2 { pt3dadd( -73.3464, -43.8187, -42.9718, 0.29 ) }
    dend_2 { pt3dadd( -73.1611, -44.2836, -43.55, 0.37 ) }
    dend_2 { pt3dadd( -72.7518, -45.2652, -44.8721, 0.15 ) }
    dend_2 { pt3dadd( -72.4069, -46.0354, -45.9937, 0.15 ) }
    dend_2 { pt3dadd( -72.1109, -46.6306, -46.9261, 0.15 ) }
    dend_2 { pt3dadd( -72.0019, -46.8432, -47.261, 0.29 ) }
    dend_2 { pt3dadd( -71.753, -47.3248, -47.9991, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -32.4754, -7.26677, -8.54813, 0.74 ) }
    dend_1 { pt3dadd( -33.515, -7.78601, -7.86826, 0.74 ) }
    dend_1 { pt3dadd( -34.4108, -8.35386, -7.20298, 0.81 ) }
    dend_1 { pt3dadd( -35.2667, -8.97141, -6.54071, 0.44 ) }
    dend_1 { pt3dadd( -36.7253, -10.1009, -5.47909, 0.37 ) }
    dend_1 { pt3dadd( -37.4913, -10.6966, -4.93038, 0.74 ) }
    dend_1 { pt3dadd( -38.7393, -11.5825, -4.1008, 0.59 ) }
    dend_1 { pt3dadd( -39.9339, -12.4186, -3.35357, 0.52 ) }
    dend_1 { pt3dadd( -40.7827, -12.9423, -2.8614, 0.66 ) }
    dend_1 { pt3dadd( -41.9509, -13.5436, -2.25884, 0.29 ) }
    dend_1 { pt3dadd( -42.8096, -13.9035, -1.90226, 0.29 ) }
    dend_1 { pt3dadd( -44.4378, -14.4324, -1.42954, 0.44 ) }
    dend_1 { pt3dadd( -45.7533, -14.737, -1.20533, 0.52 ) }
    dend_1 { pt3dadd( -47.1735, -14.9776, -1.10312, 0.22 ) }
    dend_1 { pt3dadd( -47.625, -15.0377, -1.10145, 0.22 ) }
    dend_1 { pt3dadd( -48.7408, -15.1554, -1.15193, 0.22 ) }
    dend_1 { pt3dadd( -50.8948, -15.4301, -1.45281, 0.29 ) }
    dend_1 { pt3dadd( -51.6796, -15.5534, -1.60257, 0.44 ) }
    dend_1 { pt3dadd( -52.6092, -15.7105, -1.77404, 0.81 ) }
    dend_1 { pt3dadd( -53.6915, -15.8962, -1.94829, 0.81 ) }
    dend_1 { pt3dadd( -55.0135, -16.099, -2.06777, 0.29 ) }
    dend_1 { pt3dadd( -56.1459, -16.259, -2.04273, 0.44 ) }
    dend_1 { pt3dadd( -56.867, -16.3661, -1.9843, 0.44 ) }
    dend_1 { pt3dadd( -57.7628, -16.5277, -1.89672, 0.37 ) }
    dend_1 { pt3dadd( -58.8515, -16.804, -1.69949, 0.96 ) }
    dend_1 { pt3dadd( -59.5433, -17.048, -1.49213, 0.96 ) }
    dend_1 { pt3dadd( -60.801, -17.5975, -0.881248, 0.37 ) }
    dend_1 { pt3dadd( -62.2421, -18.3274, 0.0761774, 0.52 ) }
    dend_1 { pt3dadd( -63.3328, -18.9605, 0.97097, 0.29 ) }
    dend_1 { pt3dadd( -64.6115, -19.7953, 2.14485, 0.44 ) }
    dend_1 { pt3dadd( -65.5353, -20.4528, 3.08373, 0.52 ) }
    dend_1 { pt3dadd( -66.81, -21.4097, 4.44449, 0.22 ) }
    dend_1 { pt3dadd( -67.3684, -21.8304, 5.02845, 0.22 ) }
    dend_1 { pt3dadd( -68.1847, -22.4096, 5.83127, 0.29 ) }
    dend_1 { pt3dadd( -68.9757, -22.8614, 6.3468, 0.44 ) }
    dend_1 { pt3dadd( -69.9867, -23.2158, 6.51752, 0.44 ) }
    dend_1 { pt3dadd( -71.0612, -23.4459, 6.41965, 0.15 ) }
    dend_1 { pt3dadd( -72.9021, -23.6988, 6.0204, 0.15 ) }
    dend_1 { pt3dadd( -73.5745, -23.7399, 5.85404, 0.59 ) }
    dend_1 { pt3dadd( -74.6249, -23.7318, 5.57882, 1.11 ) }
    dend_1 { pt3dadd( -76.6398, -23.5299, 5.11145, 0.44 ) }
    dend_1 { pt3dadd( -77.6117, -23.3593, 4.89703, 0.66 ) }
    dend_1 { pt3dadd( -78.5555, -23.1235, 4.73832, 0.66 ) }
    dend_1 { pt3dadd( -79.6257, -22.7965, 4.62335, 0.22 ) }
    dend_1 { pt3dadd( -80.2365, -22.5742, 4.56195, 0.15 ) }
    dend_1 { pt3dadd( -81.5529, -21.9901, 4.44055, 0.15 ) }
    dend_1 { pt3dadd( -82.2945, -21.6199, 4.38182, 0.15 ) }
    dend_1 { pt3dadd( -83.3086, -21.1586, 4.29482, 0.15 ) }
    dend_1 { pt3dadd( -83.8042, -20.9611, 4.2539, 0.29 ) }
    dend_1 { pt3dadd( -84.5539, -20.6855, 4.19083, 0.81 ) }
    dend_1 { pt3dadd( -85.1214, -20.4878, 4.14921, 0.81 ) }
    dend_1 { pt3dadd( -86.1057, -20.1722, 4.11022, 0.15 ) }
    dend_1 { pt3dadd( -86.9846, -19.8672, 4.13462, 0.29 ) }
    dend_1 { pt3dadd( -87.6168, -19.6198, 4.17864, 0.22 ) }
    dend_1 { pt3dadd( -88.6274, -19.1836, 4.27487, 0.22 ) }
    dend_1 { pt3dadd( -88.9625, -19.0305, 4.32459, 0.22 ) }
    dend_1 { pt3dadd( -89.4747, -18.7912, 4.42535, 0.22 ) }
    dend_1 { pt3dadd( -90.0474, -18.529, 4.56742, 0.44 ) }
    dend_1 { pt3dadd( -90.8211, -18.2222, 4.78354, 0.44 ) }
    dend_1 { pt3dadd( -91.5838, -17.9842, 4.96996, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -92.2501, -17.8112, 5.08153, 0.22 ) }
    dend_1 { pt3dadd( -92.8965, -17.6398, 5.21623, 0.29 ) }
    dend_1 { pt3dadd( -93.6482, -17.4239, 5.3568, 0.29 ) }
    dend_1 { pt3dadd( -94.6436, -17.13, 5.46407, 0.22 ) }
    dend_1 { pt3dadd( -95.8447, -16.7745, 5.47765, 0.81 ) }
    dend_1 { pt3dadd( -97.0724, -16.4108, 5.40314, 0.52 ) }
    dend_1 { pt3dadd( -99.1977, -15.7572, 5.11843, 0.22 ) }
    dend_1 { pt3dadd( -100.448, -15.3835, 4.8867, 0.29 ) }
    dend_1 { pt3dadd( -101.812, -14.9889, 4.57503, 0.22 ) }
    dend_1 { pt3dadd( -102.908, -14.6832, 4.29542, 0.44 ) }
    dend_1 { pt3dadd( -103.679, -14.4813, 4.09458, 0.44 ) }
    dend_1 { pt3dadd( -104.823, -14.186, 3.78522, 0.15 ) }
    dend_1 { pt3dadd( -105.854, -13.8954, 3.47797, 0.15 ) }
    dend_1 { pt3dadd( -106.384, -13.727, 3.3684, 0.15 ) }
    dend_1 { pt3dadd( -107.06, -13.469, 3.33284, 0.59 ) }
    dend_1 { pt3dadd( -107.689, -13.176, 3.35081, 0.59 ) }
    dend_1 { pt3dadd( -108.338, -12.7702, 3.41734, 0.22 ) }
    dend_1 { pt3dadd( -109.104, -12.1518, 3.54861, 0.22 ) }
    dend_1 { pt3dadd( -109.753, -11.4943, 3.66741, 0.22 ) }
    dend_1 { pt3dadd( -110.767, -10.3626, 3.81557, 0.22 ) }
    dend_1 { pt3dadd( -111.221, -9.84029, 3.86457, 0.22 ) }
    dend_1 { pt3dadd( -112.197, -8.80386, 3.91004, 0.29 ) }
    dend_1 { pt3dadd( -112.819, -8.20463, 3.87989, 0.29 ) }
    dend_1 { pt3dadd( -114.237, -6.9822, 3.71454, 0.22 ) }
    dend_1 { pt3dadd( -114.787, -6.56531, 3.61344, 0.22 ) }
    dend_1 { pt3dadd( -115.278, -6.23527, 3.48732, 0.22 ) }
    dend_1 { pt3dadd( -116.558, -5.44888, 3.09404, 0.29 ) }
    dend_1 { pt3dadd( -117.438, -4.93454, 2.74585, 0.29 ) }
    dend_1 { pt3dadd( -118.434, -4.32902, 2.26324, 0.44 ) }
    dend_1 { pt3dadd( -119.526, -3.60811, 1.62424, 0.44 ) }
    dend_1 { pt3dadd( -120.431, -2.94416, 0.99855, 0.37 ) }
    dend_1 { pt3dadd( -121.537, -2.06243, 0.103784, 0.81 ) }
    dend_1 { pt3dadd( -122.555, -1.21522, -0.864587, 0.29 ) }
    dend_1 { pt3dadd( -123.401, -0.489934, -1.83008, 0.29 ) }
    dend_1 { pt3dadd( -124.184, 0.224843, -2.83339, 0.29 ) }
    dend_1 { pt3dadd( -124.927, 0.928719, -3.81972, 0.29 ) }
    dend_1 { pt3dadd( -125.574, 1.53316, -4.66527, 0.66 ) }
    dend_1 { pt3dadd( -126.967, 2.77967, -6.33241, 0.37 ) }
    dend_1 { pt3dadd( -128.458, 4.04747, -8.01715, 0.37 ) }
    dend_1 { pt3dadd( -129.324, 4.74386, -8.93629, 0.22 ) }
    dend_1 { pt3dadd( -129.97, 5.21132, -9.54419, 0.22 ) }
    dend_1 { pt3dadd( -130.491, 5.56727, -9.98206, 0.22 ) }
    dend_1 { pt3dadd( -131.255, 6.0868, -10.569, 0.29 ) }
    dend_1 { pt3dadd( -132.638, 7.02699, -11.5726, 0.22 ) }
    dend_1 { pt3dadd( -133.46, 7.60331, -12.1628, 0.22 ) }
    dend_1 { pt3dadd( -134.271, 8.27944, -12.8755, 0.29 ) }
    dend_1 { pt3dadd( -134.974, 8.97764, -13.5713, 0.29 ) }
    dend_1 { pt3dadd( -135.337, 9.40091, -13.9561, 0.29 ) }
    dend_1 { pt3dadd( -135.849, 10.1184, -14.5462, 0.29 ) }
    dend_1 { pt3dadd( -136.44, 11.0929, -15.2409, 0.52 ) }
    dend_1 { pt3dadd( -137.252, 12.6144, -16.2718, 0.44 ) }
    dend_1 { pt3dadd( -137.737, 13.6095, -16.9306, 0.22 ) }
    dend_1 { pt3dadd( -138.141, 14.429, -17.4394, 0.29 ) }
    dend_1 { pt3dadd( -138.624, 15.3335, -17.9961, 0.29 ) }
    dend_1 { pt3dadd( -138.94, 15.8577, -18.3021, 0.29 ) }
    dend_1 { pt3dadd( -139.268, 16.3218, -18.5609, 0.29 ) }
    dend_1 { pt3dadd( -139.708, 16.8933, -18.8281, 0.29 ) }
    dend_1 { pt3dadd( -140.361, 17.753, -19.142, 0.29 ) }
    dend_1 { pt3dadd( -140.656, 18.1213, -19.255, 0.29 ) }
    dend_1 { pt3dadd( -141.213, 18.7398, -19.4199, 0.29 ) }
    dend_1 { pt3dadd( -142.212, 19.7761, -19.6698, 0.44 ) }
    dend_1 { pt3dadd( -142.798, 20.3546, -19.8031, 0.44 ) }
    dend_1 { pt3dadd( -143.466, 20.9961, -19.9516, 0.22 ) }
    dend_1 { pt3dadd( -143.916, 21.4221, -20.0558, 0.22 ) }
    dend_1 { pt3dadd( -144.699, 22.1891, -20.245, 0.22 ) }
    dend_1 { pt3dadd( -145.628, 23.1323, -20.4942, 0.22 ) }
    dend_1 { pt3dadd( -146.154, 23.6456, -20.6463, 0.37 ) }
    dend_1 { pt3dadd( -147.166, 24.5044, -20.9011, 0.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 68/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -24.8294, 31.3371, 0.0, 0.23 ) }
    axon_1 { pt3dadd( -34.0458, 43.1717, 0.0, 0.23 ) }
    axon_1 { pt3dadd( -43.2623, 55.0063, 0.0, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 71/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 22.1435, 17.8087, 20.0654, 0.88 ) }
    dend_63 { pt3dadd( 22.6419, 17.5957, 20.4865, 0.88 ) }
    dend_63 { pt3dadd( 23.2271, 17.3374, 21.0172, 0.74 ) }
    dend_63 { pt3dadd( 23.7856, 17.0996, 21.6303, 0.66 ) }
    dend_63 { pt3dadd( 24.3967, 16.8498, 22.3327, 0.59 ) }
    dend_63 { pt3dadd( 24.7545, 16.7035, 22.7439, 0.66 ) }
    dend_63 { pt3dadd( 25.3337, 16.4668, 23.4095, 0.66 ) }
    dend_63 { pt3dadd( 25.7743, 16.3101, 23.9433, 1.03 ) }
    dend_63 { pt3dadd( 26.7462, 15.9777, 25.1693, 1.25 ) }
    dend_63 { pt3dadd( 27.1239, 15.8451, 25.6913, 1.47 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 81/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 22.1435, 17.8087, 20.0654, 1.11 ) }
    dend_58 { pt3dadd( 22.9577, 18.4371, 20.3611, 1.11 ) }
    dend_58 { pt3dadd( 23.7185, 19.0244, 20.6373, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 84/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 7.57617, 17.775, -26.6826, 0.59 ) }
    dend_52 { pt3dadd( 6.90418, 18.8569, -26.5147, 0.59 ) }
    dend_52 { pt3dadd( 6.38688, 19.8061, -26.3156, 0.81 ) }
    dend_52 { pt3dadd( 5.97911, 20.703, -26.0646, 0.37 ) }
    dend_52 { pt3dadd( 5.72043, 21.4952, -25.7826, 0.37 ) }
    dend_52 { pt3dadd( 5.34116, 22.941, -25.2308, 0.52 ) }
    dend_52 { pt3dadd( 5.09108, 24.0513, -24.7843, 0.96 ) }
    dend_52 { pt3dadd( 4.84844, 25.4071, -24.1634, 0.66 ) }
    dend_52 { pt3dadd( 4.63796, 26.7697, -23.4606, 0.96 ) }
    dend_52 { pt3dadd( 4.43634, 28.5275, -22.5254, 0.37 ) }
    dend_52 { pt3dadd( 4.40271, 28.9644, -22.2909, 0.37 ) }
    dend_52 { pt3dadd( 4.34383, 29.616, -21.9478, 0.37 ) }
    dend_52 { pt3dadd( 4.24639, 30.1858, -21.6338, 0.44 ) }
    dend_52 { pt3dadd( 3.81786, 31.5157, -20.8844, 0.66 ) }
    dend_52 { pt3dadd( 3.53485, 32.1378, -20.5358, 0.88 ) }
    dend_52 { pt3dadd( 3.09537, 32.9474, -20.0881, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( 2.42951, 34.1873, -19.397, 0.96 ) }
    dend_52 { pt3dadd( 1.62678, 35.7188, -18.5199, 0.52 ) }
    dend_52 { pt3dadd( 0.893823, 37.1573, -17.7302, 0.52 ) }
    dend_52 { pt3dadd( 0.29749, 38.2991, -17.1149, 0.59 ) }
    dend_52 { pt3dadd( 0.0530643, 38.7133, -16.8608, 0.59 ) }
    dend_52 { pt3dadd( -0.58606, 39.7253, -16.1972, 0.44 ) }
    dend_52 { pt3dadd( -1.04068, 40.4584, -15.698, 0.44 ) }
    dend_52 { pt3dadd( -1.55266, 41.2271, -15.1391, 0.74 ) }
    dend_52 { pt3dadd( -2.29134, 42.3163, -14.2385, 0.96 ) }
    dend_52 { pt3dadd( -3.36083, 43.7007, -12.9282, 0.81 ) }
    dend_52 { pt3dadd( -3.54753, 43.8943, -12.7071, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 7.57617, 17.775, -26.6826, 0.29 ) }
    dend_51 { pt3dadd( 7.72687, 17.6396, -27.2997, 0.29 ) }
    dend_51 { pt3dadd( 8.2689, 17.58, -29.0291, 0.29 ) }
    dend_51 { pt3dadd( 8.72642, 17.6857, -30.5966, 0.29 ) }
    dend_51 { pt3dadd( 8.92238, 17.7523, -31.4289, 0.29 ) }
    dend_51 { pt3dadd( 9.14123, 17.8602, -32.5869, 0.29 ) }
    dend_51 { pt3dadd( 9.32549, 17.9895, -33.793, 0.29 ) }
    dend_51 { pt3dadd( 9.48305, 18.24, -35.2382, 0.29 ) }
    dend_51 { pt3dadd( 9.56092, 18.5919, -36.7465, 0.66 ) }
    dend_51 { pt3dadd( 9.50651, 18.9818, -38.0987, 0.29 ) }
    dend_51 { pt3dadd( 9.36636, 19.2878, -39.0935, 0.59 ) }
    dend_51 { pt3dadd( 9.04499, 19.6962, -40.568, 0.29 ) }
    dend_51 { pt3dadd( 8.72537, 19.9488, -41.6452, 0.29 ) }
    dend_51 { pt3dadd( 8.54974, 20.0535, -42.0764, 0.29 ) }
    dend_51 { pt3dadd( 7.69266, 20.6763, -43.7784, 0.15 ) }
    dend_51 { pt3dadd( 7.23931, 21.0711, -44.3744, 0.15 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -17.7406, -25.0764, -7.19832, 0.29 ) }
    dend_47 { pt3dadd( -17.5199, -26.1076, -7.87883, 0.29 ) }
    dend_47 { pt3dadd( -17.4525, -26.7147, -8.45876, 0.22 ) }
    dend_47 { pt3dadd( -17.4745, -27.0869, -8.93258, 0.29 ) }
    dend_47 { pt3dadd( -17.5848, -27.4896, -9.56592, 0.22 ) }
    dend_47 { pt3dadd( -17.8975, -28.1855, -10.7909, 0.22 ) }
    dend_47 { pt3dadd( -18.2085, -28.7627, -11.7882, 0.37 ) }
    dend_47 { pt3dadd( -18.5329, -29.23, -12.6926, 0.81 ) }
    dend_47 { pt3dadd( -18.8979, -29.7133, -13.6002, 0.81 ) }
    dend_47 { pt3dadd( -19.1891, -30.1042, -14.2294, 0.37 ) }
    dend_47 { pt3dadd( -19.3434, -30.3391, -14.5384, 0.37 ) }
    dend_47 { pt3dadd( -19.6371, -30.9296, -15.105, 0.59 ) }
    dend_47 { pt3dadd( -19.9236, -31.7024, -15.7281, 0.44 ) }
    dend_47 { pt3dadd( -20.0926, -32.2082, -16.0927, 0.52 ) }
    dend_47 { pt3dadd( -20.2971, -32.8613, -16.5014, 0.66 ) }
    dend_47 { pt3dadd( -20.5612, -33.6364, -16.9889, 0.74 ) }
    dend_47 { pt3dadd( -20.9028, -34.4164, -17.5624, 0.88 ) }
    dend_47 { pt3dadd( -21.2291, -34.9815, -18.0886, 0.88 ) }
    dend_47 { pt3dadd( -21.7131, -35.6547, -18.8843, 0.59 ) }
    dend_47 { pt3dadd( -22.1598, -36.211, -19.6682, 0.22 ) }
    dend_47 { pt3dadd( -22.6192, -36.7293, -20.5887, 0.29 ) }
    dend_47 { pt3dadd( -23.1281, -37.2954, -21.7819, 0.59 ) }
    dend_47 { pt3dadd( -23.5027, -37.7521, -22.9292, 0.59 ) }
    dend_47 { pt3dadd( -23.74, -38.0809, -23.9664, 0.59 ) }
    dend_47 { pt3dadd( -23.798, -38.1708, -24.2988, 0.59 ) }
    dend_47 { pt3dadd( -23.9462, -38.4067, -25.1628, 0.59 ) }
    dend_47 { pt3dadd( -24.0862, -38.6444, -25.841, 0.66 ) }
    dend_47 { pt3dadd( -24.4122, -39.2222, -27.0875, 0.59 ) }
    dend_47 { pt3dadd( -24.7888, -39.8709, -28.1697, 0.66 ) }
    dend_47 { pt3dadd( -25.2091, -40.5407, -29.1481, 0.96 ) }
    dend_47 { pt3dadd( -25.5794, -41.0787, -29.862, 0.59 ) }
    dend_47 { pt3dadd( -26.0069, -41.6778, -30.57, 0.44 ) }
    dend_47 { pt3dadd( -26.3148, -42.1202, -31.0513, 0.44 ) }
    dend_47 { pt3dadd( -26.6371, -42.6626, -31.6126, 0.52 ) }
    dend_47 { pt3dadd( -26.9393, -43.3229, -32.3488, 0.44 ) }
    dend_47 { pt3dadd( -27.1129, -43.8833, -33.1485, 0.44 ) }
    dend_47 { pt3dadd( -27.1391, -44.1096, -33.5625, 0.59 ) }
    dend_47 { pt3dadd( -27.1249, -44.4809, -34.349, 0.74 ) }
    dend_47 { pt3dadd( -27.0809, -44.9753, -35.4504, 0.37 ) }
    dend_47 { pt3dadd( -27.0654, -45.4765, -36.6152, 0.37 ) }
    dend_47 { pt3dadd( -27.0899, -45.8776, -37.524, 0.52 ) }
    dend_47 { pt3dadd( -27.1489, -46.3105, -38.5026, 0.59 ) }
    dend_47 { pt3dadd( -27.2881, -46.8656, -39.7218, 0.29 ) }
    dend_47 { pt3dadd( -27.4445, -47.2898, -40.6233, 0.52 ) }
    dend_47 { pt3dadd( -27.6684, -47.81, -41.6421, 0.44 ) }
    dend_47 { pt3dadd( -27.8712, -48.2416, -42.4741, 0.44 ) }
    dend_47 { pt3dadd( -27.9397, -48.3678, -42.7481, 0.44 ) }
    dend_47 { pt3dadd( -28.11, -48.6477, -43.5253, 0.44 ) }
    dend_47 { pt3dadd( -28.1702, -48.7756, -44.031, 0.44 ) }
    dend_47 { pt3dadd( -28.167, -48.8883, -44.5548, 0.44 ) }
    dend_47 { pt3dadd( -28.0659, -49.0258, -45.1961, 0.44 ) }
    dend_47 { pt3dadd( -27.9028, -49.1648, -45.7531, 0.44 ) }
    dend_47 { pt3dadd( -27.716, -49.3066, -46.2606, 0.29 ) }
    dend_47 { pt3dadd( -27.3832, -49.5476, -47.0811, 0.29 ) }
    dend_47 { pt3dadd( -27.1833, -49.7076, -47.6192, 0.29 ) }
    dend_47 { pt3dadd( -26.9468, -49.9432, -48.3438, 0.37 ) }
    dend_47 { pt3dadd( -26.7687, -50.1728, -49.0285, 0.74 ) }
    dend_47 { pt3dadd( -26.3889, -50.8074, -50.9586, 0.81 ) }
    dend_47 { pt3dadd( -26.2033, -51.2556, -52.4287, 0.22 ) }
    dend_47 { pt3dadd( -26.1206, -51.5987, -53.5995, 0.22 ) }
    dend_47 { pt3dadd( -26.1197, -51.8167, -54.3615, 0.22 ) }
    dend_47 { pt3dadd( -26.1592, -52.0735, -55.2185, 0.22 ) }
    dend_47 { pt3dadd( -26.1896, -52.227, -55.712, 0.29 ) }
    dend_47 { pt3dadd( -26.2125, -52.4741, -56.4493, 0.29 ) }
    dend_47 { pt3dadd( -26.1941, -52.5568, -56.6909, 0.59 ) }
    dend_47 { pt3dadd( -26.0076, -52.8984, -57.6623, 0.22 ) }
    dend_47 { pt3dadd( -25.8215, -53.1726, -58.4497, 0.29 ) }
    dend_47 { pt3dadd( -25.6108, -53.5755, -59.444, 0.44 ) }
    dend_47 { pt3dadd( -25.4369, -54.0658, -60.5433, 0.74 ) }
    dend_47 { pt3dadd( -25.3107, -54.6698, -61.7848, 0.81 ) }
    dend_47 { pt3dadd( -25.2614, -55.2066, -62.8632, 0.44 ) }
    dend_47 { pt3dadd( -25.2605, -55.6644, -63.7208, 0.52 ) }
    dend_47 { pt3dadd( -25.3617, -56.4891, -65.2358, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( -25.4501, -56.9429, -66.0484, 0.29 ) }
    dend_47 { pt3dadd( -25.5064, -57.2732, -66.6602, 0.29 ) }
    dend_47 { pt3dadd( -25.5489, -57.7149, -67.5882, 0.44 ) }
    dend_47 { pt3dadd( -25.5293, -57.9441, -68.1195, 0.66 ) }
    dend_47 { pt3dadd( -25.2771, -58.5501, -69.5938, 0.37 ) }
    dend_47 { pt3dadd( -25.0616, -58.8194, -70.2545, 0.29 ) }
    dend_47 { pt3dadd( -24.6629, -59.2302, -71.1195, 0.22 ) }
    dend_47 { pt3dadd( -24.1341, -59.7227, -71.9812, 0.59 ) }
    dend_47 { pt3dadd( -23.7309, -60.0612, -72.4496, 0.59 ) }
    dend_47 { pt3dadd( -23.1736, -60.5047, -73.0106, 0.15 ) }
    dend_47 { pt3dadd( -22.6436, -60.8877, -73.3992, 0.15 ) }
    dend_47 { pt3dadd( -22.1159, -61.2716, -73.7189, 0.44 ) }
    dend_47 { pt3dadd( -21.5726, -61.7034, -73.9827, 0.52 ) }
    dend_47 { pt3dadd( -20.8451, -62.29, -74.2327, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.7406, -25.0764, -7.19832, 0.66 ) }
    dend_46 { pt3dadd( -18.3415, -24.8757, -8.40194, 0.66 ) }
    dend_46 { pt3dadd( -19.1375, -24.5609, -10.186, 0.66 ) }
    dend_46 { pt3dadd( -19.8263, -24.2121, -11.9741, 0.52 ) }
    dend_46 { pt3dadd( -20.2758, -23.9155, -13.2495, 0.44 ) }
    dend_46 { pt3dadd( -20.4833, -23.7366, -13.8585, 0.44 ) }
    dend_46 { pt3dadd( -20.8025, -23.4286, -14.7773, 0.44 ) }
    dend_46 { pt3dadd( -21.0199, -23.2011, -15.4082, 0.44 ) }
    dend_46 { pt3dadd( -21.4692, -22.6731, -16.5263, 0.44 ) }
    dend_46 { pt3dadd( -21.7534, -22.3058, -17.0978, 0.44 ) }
    dend_46 { pt3dadd( -22.3014, -21.5997, -18.0005, 0.52 ) }
    dend_46 { pt3dadd( -22.8597, -20.9114, -18.7515, 0.52 ) }
    dend_46 { pt3dadd( -23.5381, -20.1765, -19.4682, 0.37 ) }
    dend_46 { pt3dadd( -24.1307, -19.6471, -19.9474, 0.37 ) }
    dend_46 { pt3dadd( -24.861, -19.083, -20.3886, 0.37 ) }
    dend_46 { pt3dadd( -25.8134, -18.3882, -20.8887, 0.37 ) }
    dend_46 { pt3dadd( -26.4241, -17.9536, -21.1569, 0.44 ) }
    dend_46 { pt3dadd( -27.2009, -17.4152, -21.4345, 0.44 ) }
    dend_46 { pt3dadd( -28.5261, -16.5552, -21.8285, 0.29 ) }
    dend_46 { pt3dadd( -29.3031, -16.1012, -22.0166, 0.29 ) }
    dend_46 { pt3dadd( -30.2441, -15.5682, -22.1943, 0.29 ) }
    dend_46 { pt3dadd( -30.6917, -15.3087, -22.2594, 0.29 ) }
    dend_46 { pt3dadd( -31.5636, -14.7145, -22.3781, 0.29 ) }
    dend_46 { pt3dadd( -32.1118, -14.2476, -22.4418, 0.29 ) }
    dend_46 { pt3dadd( -32.7003, -13.6529, -22.4938, 0.66 ) }
    dend_46 { pt3dadd( -33.5873, -12.6711, -22.531, 0.29 ) }
    dend_46 { pt3dadd( -34.3428, -11.7602, -22.5262, 0.22 ) }
    dend_46 { pt3dadd( -35.1796, -10.4871, -22.5049, 0.22 ) }
    dend_46 { pt3dadd( -35.5322, -9.77908, -22.4897, 0.22 ) }
    dend_46 { pt3dadd( -35.7594, -9.17764, -22.4749, 0.22 ) }
    dend_46 { pt3dadd( -35.912, -8.64861, -22.4659, 0.29 ) }
    dend_46 { pt3dadd( -36.0456, -8.07429, -22.4667, 0.29 ) }
    dend_46 { pt3dadd( -36.3533, -6.67578, -22.4647, 0.22 ) }
    dend_46 { pt3dadd( -36.5111, -6.02717, -22.4702, 0.44 ) }
    dend_46 { pt3dadd( -36.9842, -4.40136, -22.4868, 0.22 ) }
    dend_46 { pt3dadd( -37.2619, -3.6058, -22.5177, 0.44 ) }
    dend_46 { pt3dadd( -37.96, -2.09775, -22.6468, 0.66 ) }
    dend_46 { pt3dadd( -38.4116, -1.30482, -22.7588, 0.22 ) }
    dend_46 { pt3dadd( -38.7334, -0.830964, -22.8486, 0.22 ) }
    dend_46 { pt3dadd( -39.2523, -0.137679, -22.9993, 0.29 ) }
    dend_46 { pt3dadd( -40.0034, 0.76949, -23.2149, 0.22 ) }
    dend_46 { pt3dadd( -41.0642, 2.01045, -23.4898, 0.37 ) }
    dend_46 { pt3dadd( -41.8342, 2.88944, -23.6628, 0.52 ) }
    dend_46 { pt3dadd( -42.515, 3.6768, -23.8197, 0.66 ) }
    dend_46 { pt3dadd( -42.9779, 4.21593, -23.9164, 0.66 ) }
    dend_46 { pt3dadd( -43.8767, 5.27962, -24.0708, 0.29 ) }
    dend_46 { pt3dadd( -44.5015, 6.03527, -24.137, 0.29 ) }
    dend_46 { pt3dadd( -45.3059, 7.03494, -24.2019, 0.22 ) }
    dend_46 { pt3dadd( -46.1345, 8.01723, -24.2607, 0.74 ) }
    dend_46 { pt3dadd( -46.5038, 8.44091, -24.2908, 0.74 ) }
    dend_46 { pt3dadd( -46.8648, 8.82877, -24.3223, 0.74 ) }
    dend_46 { pt3dadd( -47.82, 9.80936, -24.4036, 0.29 ) }
    dend_46 { pt3dadd( -48.7948, 10.7682, -24.4669, 0.44 ) }
    dend_46 { pt3dadd( -49.5816, 11.5081, -24.4937, 0.22 ) }
    dend_46 { pt3dadd( -49.9478, 11.834, -24.4881, 0.37 ) }
    dend_46 { pt3dadd( -50.6084, 12.4116, -24.4689, 0.37 ) }
    dend_46 { pt3dadd( -51.2917, 12.9881, -24.4364, 0.22 ) }
    dend_46 { pt3dadd( -51.8673, 13.4796, -24.3909, 0.22 ) }
    dend_46 { pt3dadd( -52.303, 13.8806, -24.3579, 0.22 ) }
    dend_46 { pt3dadd( -52.8557, 14.4505, -24.3284, 0.52 ) }
    dend_46 { pt3dadd( -53.276, 14.9169, -24.3135, 0.22 ) }
    dend_46 { pt3dadd( -53.864, 15.6169, -24.3021, 0.15 ) }
    dend_46 { pt3dadd( -54.503, 16.4104, -24.3, 0.22 ) }
    dend_46 { pt3dadd( -54.9025, 16.9682, -24.303, 0.15 ) }
    dend_46 { pt3dadd( -55.3234, 17.642, -24.303, 0.37 ) }
    dend_46 { pt3dadd( -55.5653, 18.0487, -24.3167, 0.37 ) }
    dend_46 { pt3dadd( -55.8068, 18.4265, -24.3653, 0.15 ) }
    dend_46 { pt3dadd( -56.0423, 18.7831, -24.468, 0.15 ) }
    dend_46 { pt3dadd( -56.3327, 19.2224, -24.6809, 0.22 ) }
    dend_46 { pt3dadd( -56.7572, 19.8619, -25.0525, 0.22 ) }
    dend_46 { pt3dadd( -57.2263, 20.4779, -25.4771, 0.81 ) }
    dend_46 { pt3dadd( -58.0591, 21.4038, -26.1944, 0.29 ) }
    dend_46 { pt3dadd( -58.8147, 22.1594, -26.8243, 0.74 ) }
    dend_46 { pt3dadd( -59.8664, 23.1334, -27.6476, 0.44 ) }
    dend_46 { pt3dadd( -60.6505, 23.8305, -28.2669, 0.44 ) }
    dend_46 { pt3dadd( -61.4817, 24.5552, -28.9316, 0.15 ) }
    dend_46 { pt3dadd( -62.2279, 25.2024, -29.5, 0.59 ) }
    dend_46 { pt3dadd( -63.2111, 26.029, -30.177, 0.22 ) }
    dend_46 { pt3dadd( -63.8897, 26.5305, -30.5556, 0.74 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.76552, -22.7971, -10.4624, 0.81 ) }
    dend_40 { pt3dadd( 9.21482, -22.8097, -10.8568, 0.81 ) }
    dend_40 { pt3dadd( 9.90494, -22.7728, -11.5587, 0.66 ) }
    dend_40 { pt3dadd( 10.284, -22.7229, -12.0101, 0.66 ) }
    dend_40 { pt3dadd( 10.8262, -22.6367, -12.7406, 1.18 ) }
    dend_40 { pt3dadd( 11.2975, -22.5618, -13.3756, 1.62 ) }
    dend_40 { pt3dadd( 11.9805, -22.4532, -14.2958, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_40 { pt3dadd( 12.6958, -22.3376, -15.3288, 0.81 ) }
    dend_40 { pt3dadd( 13.281, -22.1969, -16.2403, 0.96 ) }
    dend_40 { pt3dadd( 13.6074, -22.0787, -16.822, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 3/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 8.76552, -22.7971, -10.4624, 0.59 ) }
    dend_37 { pt3dadd( 9.4914, -23.6651, -10.6512, 0.59 ) }
    dend_37 { pt3dadd( 9.93537, -24.3754, -10.8323, 0.52 ) }
    dend_37 { pt3dadd( 10.4167, -25.3827, -11.0955, 0.52 ) }
    dend_37 { pt3dadd( 10.7386, -26.4439, -11.3564, 0.44 ) }
    dend_37 { pt3dadd( 10.8526, -27.3044, -11.5494, 0.66 ) }
    dend_37 { pt3dadd( 10.8743, -28.1375, -11.71, 0.52 ) }
    dend_37 { pt3dadd( 10.7145, -29.2875, -11.8699, 0.88 ) }
    dend_37 { pt3dadd( 10.562, -29.779, -11.9136, 0.88 ) }
    dend_37 { pt3dadd( 10.0699, -30.8383, -11.9688, 0.52 ) }
    dend_37 { pt3dadd( 9.49049, -31.8016, -12.0097, 0.52 ) }
    dend_37 { pt3dadd( 9.01683, -32.4495, -12.0257, 0.74 ) }
    dend_37 { pt3dadd( 8.27, -33.3761, -12.0343, 1.03 ) }
    dend_37 { pt3dadd( 7.23198, -34.6216, -12.0767, 0.66 ) }
    dend_37 { pt3dadd( 6.31068, -35.7455, -12.1963, 0.66 ) }
    dend_37 { pt3dadd( 5.43424, -36.84, -12.3784, 0.59 ) }
    dend_37 { pt3dadd( 4.53151, -37.9532, -12.6192, 0.44 ) }
    dend_37 { pt3dadd( 3.81451, -38.8708, -12.849, 0.52 ) }
    dend_37 { pt3dadd( 3.0067, -40.0129, -13.1437, 0.52 ) }
    dend_37 { pt3dadd( 2.45324, -40.9995, -13.3912, 0.88 ) }
    dend_37 { pt3dadd( 2.2076, -41.5812, -13.4905, 0.88 ) }
    dend_37 { pt3dadd( 1.51621, -43.5711, -13.6424, 0.44 ) }
    dend_37 { pt3dadd( 1.18108, -44.6312, -13.6568, 0.74 ) }
    dend_37 { pt3dadd( 0.887778, -45.4427, -13.5841, 0.59 ) }
    dend_37 { pt3dadd( 0.543168, -46.2604, -13.391, 0.44 ) }
    dend_37 { pt3dadd( -0.0922248, -47.6147, -12.8617, 0.74 ) }
    dend_37 { pt3dadd( -0.637305, -48.6485, -12.2495, 0.88 ) }
    dend_37 { pt3dadd( -1.20587, -49.6173, -11.44, 0.74 ) }
    dend_37 { pt3dadd( -1.86346, -50.6351, -10.4635, 0.52 ) }
    dend_37 { pt3dadd( -2.4782, -51.5396, -9.58084, 0.52 ) }
    dend_37 { pt3dadd( -3.09827, -52.4772, -8.64283, 0.81 ) }
    dend_37 { pt3dadd( -3.75035, -53.6106, -7.54336, 0.96 ) }
    dend_37 { pt3dadd( -4.0221, -54.2161, -6.96603, 0.96 ) }
    dend_37 { pt3dadd( -4.32537, -55.134, -6.16793, 0.66 ) }
    dend_37 { pt3dadd( -4.5726, -56.3231, -5.40998, 0.44 ) }
    dend_37 { pt3dadd( -4.66031, -56.9228, -5.16916, 0.44 ) }
    dend_37 { pt3dadd( -4.73656, -57.6866, -4.99721, 0.66 ) }
    dend_37 { pt3dadd( -4.78942, -58.5009, -4.89955, 0.66 ) }
    dend_37 { pt3dadd( -4.8104, -59.2375, -4.84021, 0.44 ) }
    dend_37 { pt3dadd( -4.81598, -59.9764, -4.7872, 0.44 ) }
    dend_37 { pt3dadd( -4.8108, -60.5927, -4.72738, 0.74 ) }
    dend_37 { pt3dadd( -4.79297, -61.7574, -4.5656, 1.03 ) }
    dend_37 { pt3dadd( -4.75576, -62.682, -4.41185, 0.81 ) }
    dend_37 { pt3dadd( -4.6347, -64.2666, -4.12557, 0.44 ) }
    dend_37 { pt3dadd( -4.53769, -65.0952, -3.93238, 0.44 ) }
    dend_37 { pt3dadd( -4.39878, -65.9617, -3.70559, 0.44 ) }
    dend_37 { pt3dadd( -4.24032, -66.7388, -3.4702, 0.44 ) }
    dend_37 { pt3dadd( -4.09318, -67.3156, -3.25136, 0.44 ) }
    dend_37 { pt3dadd( -3.9123, -67.8798, -2.98081, 0.74 ) }
    dend_37 { pt3dadd( -3.57842, -68.6895, -2.44781, 1.03 ) }
    // Section: dend_32, id: dend_32, parent: dend_22 (entry count 53/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.8099, 3.0608, -10.6774, 0.44 ) }
    dend_32 { pt3dadd( 20.0602, 3.04689, -11.0318, 0.44 ) }
    dend_32 { pt3dadd( 21.7028, 3.0333, -11.1403, 0.52 ) }
    dend_32 { pt3dadd( 23.0975, 3.07445, -11.0749, 0.52 ) }
    dend_32 { pt3dadd( 24.1314, 3.13884, -10.9134, 0.81 ) }
    dend_32 { pt3dadd( 26.0246, 3.31188, -10.4226, 1.03 ) }
    dend_32 { pt3dadd( 27.2782, 3.45884, -10.0256, 0.52 ) }
    dend_32 { pt3dadd( 29.0231, 3.65174, -9.30454, 0.59 ) }
    dend_32 { pt3dadd( 30.5154, 3.83266, -8.58031, 0.81 ) }
    dend_32 { pt3dadd( 31.5479, 3.94494, -8.03337, 0.81 ) }
    dend_32 { pt3dadd( 32.9483, 4.05127, -7.27826, 0.66 ) }
    dend_32 { pt3dadd( 34.1427, 4.10204, -6.6538, 0.66 ) }
    dend_32 { pt3dadd( 36.1412, 4.13013, -5.68804, 0.59 ) }
    dend_32 { pt3dadd( 37.7822, 4.06662, -5.04455, 0.96 ) }
    dend_32 { pt3dadd( 39.1195, 3.93803, -4.60276, 0.96 ) }
    dend_32 { pt3dadd( 40.6683, 3.72378, -4.16394, 0.96 ) }
    dend_32 { pt3dadd( 41.4929, 3.55935, -3.95127, 0.96 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.8099, 3.0608, -10.6774, 1.03 ) }
    dend_23 { pt3dadd( 17.4502, 3.70137, -11.4679, 1.03 ) }
    dend_23 { pt3dadd( 17.1835, 4.37033, -12.2444, 0.81 ) }
    dend_23 { pt3dadd( 16.9448, 5.09679, -13.0438, 0.52 ) }
    dend_23 { pt3dadd( 16.7329, 5.75623, -13.7928, 0.44 ) }
    dend_23 { pt3dadd( 16.5194, 6.36109, -14.5643, 0.44 ) }
    dend_23 { pt3dadd( 16.2536, 6.9688, -15.4518, 0.44 ) }
    dend_23 { pt3dadd( 16.114, 7.3212, -15.9792, 0.52 ) }
    dend_23 { pt3dadd( 15.8876, 7.96497, -16.9755, 0.74 ) }
    dend_23 { pt3dadd( 15.6698, 8.59874, -18.0155, 0.74 ) }
    dend_23 { pt3dadd( 15.3221, 9.34477, -19.3763, 0.88 ) }
    dend_23 { pt3dadd( 14.7179, 10.2329, -21.221, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.9039, -3.90878, 2.7473, 0.74 ) }
    dend_15 { pt3dadd( 20.4832, -4.63739, 3.63761, 0.74 ) }
    dend_15 { pt3dadd( 21.0757, -5.38263, 4.54824, 0.74 ) }
    dend_15 { pt3dadd( 21.5463, -5.97462, 5.27161, 0.96 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.9039, -3.90878, 2.7473, 0.74 ) }
    dend_14 { pt3dadd( 21.3874, -0.22963, 6.09284, 0.74 ) }
    dend_14 { pt3dadd( 21.827, 1.04108, 7.03352, 0.52 ) }
    dend_14 { pt3dadd( 22.1684, 2.17495, 7.71453, 0.74 ) }
    dend_14 { pt3dadd( 22.4769, 3.21483, 8.22685, 0.74 ) }
    dend_14 { pt3dadd( 22.691, 3.906, 8.50344, 0.74 ) }
    dend_14 { pt3dadd( 23.0258, 4.91652, 8.8363, 0.66 ) }
    dend_14 { pt3dadd( 23.4313, 6.25959, 8.88629, 0.66 ) }
    dend_14 { pt3dadd( 23.7027, 7.23904, 8.86245, 0.66 ) }
    dend_14 { pt3dadd( 23.9805, 8.23801, 8.78851, 0.59 ) }
    dend_14 { pt3dadd( 24.3887, 9.54106, 8.64511, 0.74 ) }
    dend_14 { pt3dadd( 24.6422, 10.3514, 8.52787, 0.74 ) }
    dend_14 { pt3dadd( 24.8455, 11.0401, 8.40794, 0.74 ) }
    dend_14 { pt3dadd( 24.9857, 11.7389, 8.26184, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 25.1588, 12.8175, 8.03739, 0.66 ) }
    dend_14 { pt3dadd( 25.2636, 13.5967, 7.86986, 0.66 ) }
    dend_14 { pt3dadd( 25.393, 14.5468, 7.65238, 0.81 ) }
    dend_14 { pt3dadd( 25.4756, 15.1047, 7.52305, 0.81 ) }
    dend_14 { pt3dadd( 25.6727, 16.4259, 7.2823, 0.52 ) }
    dend_14 { pt3dadd( 25.8749, 17.743, 7.11204, 0.66 ) }
    dend_14 { pt3dadd( 26.0157, 18.7957, 7.06714, 0.66 ) }
    dend_14 { pt3dadd( 26.1419, 19.6382, 7.18725, 0.44 ) }
    dend_14 { pt3dadd( 26.2427, 20.3275, 7.385, 0.66 ) }
    dend_14 { pt3dadd( 26.4373, 22.0008, 7.99672, 0.66 ) }
    dend_14 { pt3dadd( 26.4949, 22.7958, 8.32388, 0.66 ) }
    dend_14 { pt3dadd( 26.5307, 24.0649, 8.84206, 0.44 ) }
    dend_14 { pt3dadd( 26.6417, 27.0466, 10.1024, 0.44 ) }
    dend_14 { pt3dadd( 26.7212, 28.269, 10.6087, 0.66 ) }
    dend_14 { pt3dadd( 26.894, 29.6623, 11.1386, 0.81 ) }
    dend_14 { pt3dadd( 27.1024, 30.7811, 11.5005, 0.81 ) }
    dend_14 { pt3dadd( 27.3784, 31.9841, 11.8414, 0.52 ) }
    dend_14 { pt3dadd( 27.8769, 33.6818, 12.2807, 0.52 ) }
    dend_14 { pt3dadd( 28.1819, 34.5514, 12.5052, 0.44 ) }
    dend_14 { pt3dadd( 28.7254, 35.8989, 12.9747, 0.44 ) }
    dend_14 { pt3dadd( 29.1718, 36.9625, 13.4161, 0.59 ) }
    dend_14 { pt3dadd( 29.5751, 37.9941, 13.9085, 0.59 ) }
    dend_14 { pt3dadd( 30.0598, 39.4517, 14.6608, 0.59 ) }
    dend_14 { pt3dadd( 30.3603, 40.5959, 15.3037, 0.59 ) }
    dend_14 { pt3dadd( 30.6437, 41.7467, 16.0121, 0.59 ) }
    dend_14 { pt3dadd( 30.8936, 42.6733, 16.6198, 0.52 ) }
    dend_14 { pt3dadd( 31.237, 43.704, 17.2849, 0.52 ) }
    dend_14 { pt3dadd( 31.7181, 44.9233, 18.0164, 0.52 ) }
    dend_14 { pt3dadd( 32.5058, 46.7376, 18.9646, 0.52 ) }
    dend_14 { pt3dadd( 32.9352, 47.6149, 19.3859, 0.52 ) }
    dend_14 { pt3dadd( 33.5358, 48.6858, 19.8965, 0.52 ) }
    dend_14 { pt3dadd( 34.1169, 49.6092, 20.3543, 0.29 ) }
    dend_14 { pt3dadd( 34.7468, 50.5106, 20.7539, 0.44 ) }
    dend_14 { pt3dadd( 35.5338, 51.5738, 21.1307, 0.44 ) }
    dend_14 { pt3dadd( 36.2409, 52.5813, 21.3205, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.80395, 23.6245, -7.74047, 1.03 ) }
    dend_7 { pt3dadd( -10.1077, 23.7908, -8.7627, 1.03 ) }
    dend_7 { pt3dadd( -10.4531, 23.98, -9.92536, 1.03 ) }
    dend_7 { pt3dadd( -10.8702, 24.2085, -11.3292, 1.03 ) }
    dend_7 { pt3dadd( -11.3467, 24.4695, -12.933, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.80395, 23.6245, -7.74047, 0.52 ) }
    dend_6 { pt3dadd( -9.25257, 24.5549, -9.64321, 0.52 ) }
    dend_6 { pt3dadd( -8.92988, 25.1999, -10.6771, 0.52 ) }
    dend_6 { pt3dadd( -8.57907, 25.4772, -11.8843, 0.52 ) }
    dend_6 { pt3dadd( -8.76636, 26.0582, -11.444, 0.44 ) }
    dend_6 { pt3dadd( -9.23411, 27.067, -10.5483, 0.44 ) }
    dend_6 { pt3dadd( -10.7785, 29.6169, -8.16105, 0.44 ) }
    dend_6 { pt3dadd( -11.3079, 30.2782, -7.43658, 0.52 ) }
    dend_6 { pt3dadd( -11.9461, 30.9027, -6.55708, 0.37 ) }
    dend_6 { pt3dadd( -12.3311, 31.2056, -6.01524, 0.37 ) }
    dend_6 { pt3dadd( -12.9167, 31.6194, -5.1016, 0.37 ) }
    dend_6 { pt3dadd( -13.3128, 31.8972, -4.37305, 0.66 ) }
    dend_6 { pt3dadd( -13.6451, 32.1765, -3.59419, 0.81 ) }
    dend_6 { pt3dadd( -14.0308, 32.7635, -1.99359, 0.44 ) }
    dend_6 { pt3dadd( -14.1643, 33.3109, -0.593064, 0.44 ) }
    dend_6 { pt3dadd( -14.1491, 33.9457, 0.927013, 0.37 ) }
    dend_6 { pt3dadd( -14.067, 34.3626, 1.85779, 0.37 ) }
    dend_6 { pt3dadd( -13.9102, 35.0475, 3.33676, 0.37 ) }
    dend_6 { pt3dadd( -13.8067, 35.6181, 4.539, 0.37 ) }
    dend_6 { pt3dadd( -13.7677, 36.1314, 5.59696, 0.37 ) }
    dend_6 { pt3dadd( -13.8417, 36.675, 6.83861, 0.66 ) }
    dend_6 { pt3dadd( -14.142, 37.2493, 8.44078, 0.66 ) }
    dend_6 { pt3dadd( -14.5855, 37.6517, 9.93937, 0.52 ) }
    dend_6 { pt3dadd( -15.0202, 37.835, 11.1134, 0.52 ) }
    dend_6 { pt3dadd( -15.2759, 37.8647, 11.7824, 0.52 ) }
    dend_6 { pt3dadd( -15.8968, 37.7997, 13.4012, 0.37 ) }
    dend_6 { pt3dadd( -16.3219, 37.6681, 14.5301, 0.37 ) }
    dend_6 { pt3dadd( -16.6836, 37.5115, 15.5365, 0.37 ) }
    dend_6 { pt3dadd( -17.1379, 37.3202, 16.9332, 0.37 ) }
    dend_6 { pt3dadd( -17.608, 37.1987, 18.3946, 0.37 ) }
    dend_6 { pt3dadd( -18.0644, 37.2035, 19.6364, 0.37 ) }
    dend_6 { pt3dadd( -18.2633, 37.268, 20.0966, 0.37 ) }
    dend_6 { pt3dadd( -18.8725, 37.6395, 21.3167, 0.37 ) }
    dend_6 { pt3dadd( -19.2915, 38.0483, 22.1268, 0.37 ) }
    dend_6 { pt3dadd( -19.6412, 38.5575, 22.8326, 0.37 ) }
    dend_6 { pt3dadd( -20.0223, 39.3938, 23.792, 0.29 ) }
    dend_6 { pt3dadd( -20.2174, 40.1195, 24.6091, 0.29 ) }
    dend_6 { pt3dadd( -20.2826, 40.7862, 25.4052, 0.29 ) }
    dend_6 { pt3dadd( -20.2617, 41.5654, 26.4444, 0.29 ) }
    dend_6 { pt3dadd( -20.1872, 42.1705, 27.3176, 0.66 ) }
    dend_6 { pt3dadd( -20.0551, 42.951, 28.4926, 1.25 ) }
    dend_6 { pt3dadd( -19.9594, 43.7083, 29.6549, 1.25 ) }
    dend_6 { pt3dadd( -19.9526, 44.7206, 31.2297, 0.44 ) }
    dend_6 { pt3dadd( -20.0671, 45.6918, 32.7272, 0.44 ) }
    dend_6 { pt3dadd( -20.3578, 46.6344, 34.1206, 0.66 ) }
    dend_6 { pt3dadd( -20.6033, 47.1591, 34.8441, 0.88 ) }
    dend_6 { pt3dadd( -21.4018, 48.3459, 36.3058, 0.44 ) }
    dend_6 { pt3dadd( -22.0544, 49.0603, 37.061, 0.44 ) }
    dend_6 { pt3dadd( -22.5856, 49.513, 37.4915, 0.44 ) }
    dend_6 { pt3dadd( -23.9148, 50.4587, 38.2826, 0.44 ) }
    dend_6 { pt3dadd( -24.6863, 50.9083, 38.6208, 0.37 ) }
    dend_6 { pt3dadd( -25.9967, 51.5714, 39.0219, 0.74 ) }
    dend_6 { pt3dadd( -27.1765, 52.0743, 39.19, 0.22 ) }
    dend_6 { pt3dadd( -28.1914, 52.4219, 39.2076, 0.22 ) }
    dend_6 { pt3dadd( -29.4962, 52.7585, 39.0912, 0.22 ) }
    dend_6 { pt3dadd( -30.6803, 53.0068, 38.8874, 0.15 ) }
    dend_6 { pt3dadd( -31.7737, 53.1858, 38.6082, 0.29 ) }
    dend_6 { pt3dadd( -33.16, 53.3292, 38.1206, 0.29 ) }
    dend_6 { pt3dadd( -33.7816, 53.3502, 37.8071, 0.07 ) }
    dend_6 { pt3dadd( -34.5757, 53.3351, 37.2831, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 0/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 27.1239, 15.8451, 25.6913, 0.81 ) }
    dend_65 { pt3dadd( 28.4659, 15.6065, 26.5039, 0.81 ) }
    dend_65 { pt3dadd( 29.9938, 15.369, 27.1285, 0.44 ) }
    dend_65 { pt3dadd( 31.3535, 15.1292, 27.4577, 0.44 ) }
    dend_65 { pt3dadd( 32.5935, 14.8852, 27.527, 0.66 ) }
    dend_65 { pt3dadd( 33.0807, 14.7956, 27.4918, 0.96 ) }
    dend_65 { pt3dadd( 34.4568, 14.5545, 27.2773, 0.52 ) }
    dend_65 { pt3dadd( 35.3773, 14.3995, 26.9826, 0.29 ) }
    dend_65 { pt3dadd( 36.4144, 14.2586, 26.5727, 0.29 ) }
    dend_65 { pt3dadd( 37.6256, 14.1648, 26.0915, 0.29 ) }
    dend_65 { pt3dadd( 38.8511, 14.1631, 25.6951, 0.29 ) }
    dend_65 { pt3dadd( 40.5017, 14.2734, 25.2444, 0.29 ) }
    dend_65 { pt3dadd( 41.6176, 14.3976, 25.0424, 0.37 ) }
    dend_65 { pt3dadd( 42.9447, 14.5921, 24.9712, 0.66 ) }
    dend_65 { pt3dadd( 44.3861, 14.8005, 25.1748, 0.88 ) }
    dend_65 { pt3dadd( 46.246, 15.0458, 25.6999, 0.37 ) }
    dend_65 { pt3dadd( 46.9848, 15.1274, 25.9833, 0.37 ) }
    dend_65 { pt3dadd( 48.5471, 15.2755, 26.6602, 0.74 ) }
    dend_65 { pt3dadd( 50.1766, 15.3907, 27.3609, 0.81 ) }
    dend_65 { pt3dadd( 53.034, 15.5162, 28.5717, 0.52 ) }
    dend_65 { pt3dadd( 54.3431, 15.5175, 29.1222, 0.66 ) }
    dend_65 { pt3dadd( 56.3926, 15.454, 29.9975, 0.52 ) }
    dend_65 { pt3dadd( 57.9363, 15.4159, 30.6015, 0.29 ) }
    dend_65 { pt3dadd( 59.7667, 15.398, 31.1938, 0.29 ) }
    dend_65 { pt3dadd( 61.5579, 15.3849, 31.6356, 0.37 ) }
    dend_65 { pt3dadd( 63.1961, 15.34, 31.8922, 0.37 ) }
    dend_65 { pt3dadd( 64.6058, 15.2174, 32.0822, 0.37 ) }
    dend_65 { pt3dadd( 66.0713, 14.9951, 32.1674, 0.81 ) }
    dend_65 { pt3dadd( 66.987, 14.8103, 32.1519, 0.88 ) }
    dend_65 { pt3dadd( 67.8659, 14.5798, 32.0385, 0.52 ) }
    dend_65 { pt3dadd( 68.8014, 14.3287, 31.858, 0.37 ) }
    dend_65 { pt3dadd( 69.8226, 14.1045, 31.6442, 0.74 ) }
    dend_65 { pt3dadd( 71.4048, 13.8333, 31.3611, 0.37 ) }
    dend_65 { pt3dadd( 72.577, 13.6706, 31.2407, 0.37 ) }
    dend_65 { pt3dadd( 73.3919, 13.581, 31.1719, 0.37 ) }
    dend_65 { pt3dadd( 74.9883, 13.4161, 31.0511, 0.29 ) }
    dend_65 { pt3dadd( 75.7587, 13.3076, 30.987, 0.29 ) }
    dend_65 { pt3dadd( 77.0677, 13.0939, 30.8669, 0.59 ) }
    dend_65 { pt3dadd( 77.7933, 12.9634, 30.8617, 0.66 ) }
    dend_65 { pt3dadd( 78.8619, 12.7772, 30.8859, 0.37 ) }
    dend_65 { pt3dadd( 79.9675, 12.5798, 30.9143, 0.52 ) }
    dend_65 { pt3dadd( 81.5264, 12.2842, 30.9221, 0.22 ) }
    dend_65 { pt3dadd( 82.6246, 12.0679, 30.931, 0.37 ) }
    dend_65 { pt3dadd( 85.2096, 11.5377, 30.9287, 0.37 ) }
    dend_65 { pt3dadd( 86.1559, 11.3527, 30.9328, 0.59 ) }
    dend_65 { pt3dadd( 87.2543, 11.1517, 30.969, 0.81 ) }
    dend_65 { pt3dadd( 88.9107, 10.8526, 31.131, 0.22 ) }
    dend_65 { pt3dadd( 89.9833, 10.6384, 31.3069, 0.81 ) }
    dend_65 { pt3dadd( 91.1397, 10.3621, 31.5306, 0.52 ) }
    dend_65 { pt3dadd( 92.852, 9.91259, 31.8679, 0.22 ) }
    dend_65 { pt3dadd( 94.0726, 9.57884, 32.1499, 0.29 ) }
    dend_65 { pt3dadd( 95.9216, 9.06248, 32.6742, 0.96 ) }
    dend_65 { pt3dadd( 97.2911, 8.67399, 33.1254, 0.22 ) }
    dend_65 { pt3dadd( 98.1078, 8.46715, 33.4017, 0.66 ) }
    dend_65 { pt3dadd( 99.2977, 8.21922, 33.8027, 0.37 ) }
    dend_65 { pt3dadd( 100.175, 8.0572, 34.0702, 0.22 ) }
    dend_65 { pt3dadd( 101.672, 7.78639, 34.4385, 0.22 ) }
    dend_65 { pt3dadd( 102.463, 7.64693, 34.5919, 0.52 ) }
    dend_65 { pt3dadd( 103.526, 7.48685, 34.8155, 0.88 ) }
    dend_65 { pt3dadd( 105.08, 7.3064, 35.1885, 0.22 ) }
    dend_65 { pt3dadd( 105.887, 7.25127, 35.3916, 0.22 ) }
    dend_65 { pt3dadd( 106.596, 7.22333, 35.5491, 0.37 ) }
    dend_65 { pt3dadd( 107.499, 7.19893, 35.7068, 0.15 ) }
    dend_65 { pt3dadd( 108.499, 7.17684, 35.8597, 0.22 ) }
    dend_65 { pt3dadd( 109.349, 7.15827, 35.9709, 0.66 ) }
    dend_65 { pt3dadd( 110.043, 7.1607, 36.033, 1.03 ) }
    dend_65 { pt3dadd( 111.005, 7.2092, 36.1369, 0.37 ) }
    dend_65 { pt3dadd( 113.043, 7.39366, 36.4345, 0.22 ) }
    dend_65 { pt3dadd( 113.811, 7.47359, 36.5564, 0.37 ) }
    dend_65 { pt3dadd( 114.293, 7.52659, 36.6339, 0.37 ) }
    dend_65 { pt3dadd( 115.056, 7.63368, 36.7664, 0.22 ) }
    dend_65 { pt3dadd( 116.405, 7.84784, 37.0623, 0.29 ) }
    dend_65 { pt3dadd( 117.364, 8.04983, 37.2887, 0.22 ) }
    dend_65 { pt3dadd( 118.135, 8.2417, 37.4623, 0.88 ) }
    dend_65 { pt3dadd( 118.67, 8.38386, 37.5976, 0.88 ) }
    dend_65 { pt3dadd( 119.826, 8.6974, 37.8872, 0.15 ) }
    dend_65 { pt3dadd( 121.135, 9.02119, 38.2428, 0.15 ) }
    dend_65 { pt3dadd( 122.913, 9.4064, 38.7355, 0.15 ) }
    dend_65 { pt3dadd( 123.737, 9.55934, 38.9777, 0.81 ) }
    dend_65 { pt3dadd( 125.956, 9.8749, 39.6979, 0.22 ) }
    dend_65 { pt3dadd( 126.799, 9.93399, 39.9766, 0.29 ) }
    dend_65 { pt3dadd( 128.045, 9.90549, 40.3886, 0.29 ) }
    dend_65 { pt3dadd( 129.21, 9.75529, 40.7286, 0.66 ) }
    dend_65 { pt3dadd( 130.218, 9.4905, 40.9817, 0.22 ) }
    dend_65 { pt3dadd( 131.058, 9.19478, 41.1268, 0.29 ) }
    dend_65 { pt3dadd( 132.099, 8.7776, 41.1947, 0.22 ) }
    dend_65 { pt3dadd( 132.995, 8.43148, 41.1905, 0.22 ) }
    dend_65 { pt3dadd( 134.033, 8.06525, 41.1013, 0.74 ) }
    dend_65 { pt3dadd( 135.458, 7.57873, 40.8961, 0.15 ) }
    dend_65 { pt3dadd( 136.438, 7.27446, 40.6884, 0.44 ) }
    dend_65 { pt3dadd( 137.586, 6.96872, 40.3317, 0.22 ) }
    dend_65 { pt3dadd( 138.583, 6.73396, 39.9532, 0.74 ) }
    dend_65 { pt3dadd( 139.566, 6.49531, 39.5101, 0.37 ) }
    dend_65 { pt3dadd( 141.096, 6.06148, 38.7231, 0.22 ) }
    dend_65 { pt3dadd( 142.188, 5.68514, 38.077, 0.74 ) }
    dend_65 { pt3dadd( 144.002, 4.90222, 36.8859, 0.22 ) }
    dend_65 { pt3dadd( 144.547, 4.61988, 36.4915, 0.52 ) }
    dend_65 { pt3dadd( 144.902, 4.40793, 36.225, 0.52 ) }
    dend_65 { pt3dadd( 145.758, 3.83066, 35.586, 0.22 ) }
    dend_65 { pt3dadd( 146.363, 3.41367, 35.175, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_65 { pt3dadd( 147.336, 2.73856, 34.542, 0.59 ) }
    dend_65 { pt3dadd( 148.96, 1.69484, 33.5607, 0.07 ) }
    dend_65 { pt3dadd( 150.005, 1.10276, 32.9528, 0.15 ) }
    dend_65 { pt3dadd( 150.811, 0.709244, 32.5063, 0.66 ) }
    dend_65 { pt3dadd( 151.901, 0.261601, 31.9373, 0.15 ) }
    dend_65 { pt3dadd( 152.967, -0.111478, 31.424, 0.22 ) }
    dend_65 { pt3dadd( 154.273, -0.482429, 30.8507, 0.07 ) }
    dend_65 { pt3dadd( 154.887, -0.63932, 30.6139, 0.29 ) }
    dend_65 { pt3dadd( 155.823, -0.864745, 30.3139, 0.15 ) }
    dend_65 { pt3dadd( 156.645, -1.10203, 30.1841, 0.15 ) }
    dend_65 { pt3dadd( 157.455, -1.38952, 30.2207, 0.44 ) }
    dend_65 { pt3dadd( 158.311, -1.71405, 30.3694, 0.22 ) }
    dend_65 { pt3dadd( 158.976, -1.98134, 30.5328, 0.59 ) }
    dend_65 { pt3dadd( 160.116, -2.45882, 30.9054, 0.22 ) }
    dend_65 { pt3dadd( 162.242, -3.39567, 31.7068, 0.37 ) }
    dend_65 { pt3dadd( 163.808, -4.13452, 32.3335, 0.15 ) }
    dend_65 { pt3dadd( 164.534, -4.4774, 32.6559, 0.88 ) }
    dend_65 { pt3dadd( 164.925, -4.64167, 32.8272, 0.88 ) }
    dend_65 { pt3dadd( 166.756, -5.26318, 33.5462, 0.22 ) }
    dend_65 { pt3dadd( 167.52, -5.44935, 33.7489, 0.15 ) }
    dend_65 { pt3dadd( 168.401, -5.58222, 33.8466, 0.37 ) }
    dend_65 { pt3dadd( 170.598, -5.75453, 33.8444, 0.22 ) }
    dend_65 { pt3dadd( 171.999, -5.82378, 33.8087, 0.22 ) }
    dend_65 { pt3dadd( 173.058, -5.83187, 33.7351, 0.59 ) }
    dend_65 { pt3dadd( 175.38, -5.71317, 33.376, 0.07 ) }
    dend_65 { pt3dadd( 176.805, -5.58897, 33.1009, 0.07 ) }
    dend_65 { pt3dadd( 177.829, -5.46702, 32.8249, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 27.1239, 15.8451, 25.6913, 0.52 ) }
    dend_64 { pt3dadd( 27.5989, 15.2352, 26.6882, 0.52 ) }
    dend_64 { pt3dadd( 28.1611, 14.5637, 27.7668, 0.44 ) }
    dend_64 { pt3dadd( 28.846, 13.6921, 29.0434, 0.44 ) }
    dend_64 { pt3dadd( 29.3937, 12.9621, 30.0148, 0.59 ) }
    dend_64 { pt3dadd( 30.0726, 12.0582, 31.1128, 0.29 ) }
    dend_64 { pt3dadd( 30.4261, 11.5867, 31.6272, 0.37 ) }
    dend_64 { pt3dadd( 30.8812, 11.0497, 32.1753, 0.37 ) }
    dend_64 { pt3dadd( 31.3475, 10.5573, 32.5378, 0.22 ) }
    dend_64 { pt3dadd( 31.7816, 10.0901, 32.7094, 0.22 ) }
    dend_64 { pt3dadd( 32.3069, 9.47419, 32.7898, 0.22 ) }
    dend_64 { pt3dadd( 32.7684, 8.86757, 32.7846, 0.59 ) }
    dend_64 { pt3dadd( 33.055, 8.47075, 32.7538, 0.96 ) }
    dend_64 { pt3dadd( 33.6516, 7.58625, 32.6592, 0.22 ) }
    dend_64 { pt3dadd( 34.1557, 6.75904, 32.5906, 0.29 ) }
    dend_64 { pt3dadd( 34.4652, 6.13069, 32.6065, 0.29 ) }
    dend_64 { pt3dadd( 34.7219, 5.41258, 32.7103, 0.66 ) }
    dend_64 { pt3dadd( 34.8993, 4.6771, 32.9139, 0.44 ) }
    dend_64 { pt3dadd( 35.0293, 3.70733, 33.3262, 0.15 ) }
    dend_64 { pt3dadd( 35.083, 2.77995, 33.8529, 0.29 ) }
    dend_64 { pt3dadd( 35.1334, 1.43101, 34.9602, 0.44 ) }
    dend_64 { pt3dadd( 35.1583, 0.750874, 35.6332, 0.88 ) }
    dend_64 { pt3dadd( 35.1773, 0.14191, 36.3708, 0.96 ) }
    dend_64 { pt3dadd( 35.1963, -0.920812, 37.9565, 0.15 ) }
    dend_64 { pt3dadd( 35.2186, -1.43784, 38.883, 0.37 ) }
    dend_64 { pt3dadd( 35.3423, -2.82903, 41.6968, 0.66 ) }
    dend_64 { pt3dadd( 35.4261, -3.24023, 42.6161, 0.66 ) }
    dend_64 { pt3dadd( 35.7393, -4.05288, 44.6947, 0.66 ) }
    dend_64 { pt3dadd( 36.0414, -4.55155, 46.1757, 0.37 ) }
    dend_64 { pt3dadd( 36.3703, -4.9395, 47.462, 0.37 ) }
    dend_64 { pt3dadd( 36.693, -5.25579, 48.5109, 0.22 ) }
    dend_64 { pt3dadd( 37.1868, -5.67703, 49.8148, 0.22 ) }
    dend_64 { pt3dadd( 37.8109, -6.16765, 51.2364, 0.22 ) }
    dend_64 { pt3dadd( 38.527, -6.74174, 52.6027, 0.22 ) }
    dend_64 { pt3dadd( 38.8182, -6.99808, 53.106, 0.29 ) }
    dend_64 { pt3dadd( 39.5378, -7.6321, 54.2865, 0.29 ) }
    dend_64 { pt3dadd( 40.0096, -8.03237, 55.0511, 0.29 ) }
    dend_64 { pt3dadd( 40.197, -8.18772, 55.3295, 0.44 ) }
    dend_64 { pt3dadd( 40.8188, -8.69967, 56.2383, 0.22 ) }
    dend_64 { pt3dadd( 41.4519, -9.23097, 57.134, 0.44 ) }
    dend_64 { pt3dadd( 42.0503, -9.74024, 57.975, 0.22 ) }
    dend_64 { pt3dadd( 42.937, -10.4978, 59.2288, 0.22 ) }
    dend_64 { pt3dadd( 43.3695, -10.8673, 59.8949, 0.59 ) }
    dend_64 { pt3dadd( 44.1114, -11.5313, 61.1731, 0.59 ) }
    dend_64 { pt3dadd( 44.5608, -11.9448, 62.0447, 0.15 ) }
    dend_64 { pt3dadd( 45.0169, -12.3492, 63.0471, 0.66 ) }
    dend_64 { pt3dadd( 45.7642, -12.9494, 64.8241, 0.15 ) }
    dend_64 { pt3dadd( 46.5703, -13.4988, 66.791, 0.44 ) }
    dend_64 { pt3dadd( 47.194, -13.8611, 68.3156, 1.03 ) }
    dend_64 { pt3dadd( 48.025, -14.2878, 70.2831, 1.03 ) }
    dend_64 { pt3dadd( 49.3204, -14.8683, 73.2434, 0.44 ) }
    dend_64 { pt3dadd( 50.6991, -15.4625, 76.3008, 0.15 ) }
    dend_64 { pt3dadd( 51.8914, -15.981, 78.7994, 0.44 ) }
    dend_64 { pt3dadd( 52.7137, -16.3417, 80.3969, 0.29 ) }
    dend_64 { pt3dadd( 53.8484, -16.8247, 82.4946, 0.29 ) }
    dend_64 { pt3dadd( 54.5251, -17.1141, 83.6676, 0.66 ) }
    dend_64 { pt3dadd( 55.2875, -17.4766, 84.8696, 0.22 ) }
    dend_64 { pt3dadd( 56.0557, -17.8892, 85.9537, 0.22 ) }
    dend_64 { pt3dadd( 56.428, -18.1079, 86.4207, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 86/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 23.7185, 19.0244, 20.6373, 0.44 ) }
    dend_60 { pt3dadd( 24.2749, 18.5559, 20.5517, 0.44 ) }
    dend_60 { pt3dadd( 25.0634, 18.0981, 20.461, 0.44 ) }
    dend_60 { pt3dadd( 25.8338, 17.7963, 20.3948, 0.44 ) }
    dend_60 { pt3dadd( 26.7355, 17.5438, 20.3332, 0.37 ) }
    dend_60 { pt3dadd( 27.5319, 17.3486, 20.2672, 0.37 ) }
    dend_60 { pt3dadd( 28.444, 17.139, 20.199, 0.66 ) }
    dend_60 { pt3dadd( 29.3164, 16.9744, 20.1495, 0.44 ) }
    dend_60 { pt3dadd( 29.9775, 16.8518, 20.0909, 0.44 ) }
    dend_60 { pt3dadd( 30.501, 16.7418, 20.009, 0.44 ) }
    dend_60 { pt3dadd( 31.4753, 16.5086, 19.8082, 0.44 ) }
    dend_60 { pt3dadd( 32.2667, 16.2678, 19.6067, 0.44 ) }
    dend_60 { pt3dadd( 32.8465, 16.0619, 19.4105, 0.52 ) }
    dend_60 { pt3dadd( 34.0194, 15.6514, 18.9033, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_60 { pt3dadd( 34.6766, 15.4609, 18.5492, 0.44 ) }
    dend_60 { pt3dadd( 35.4487, 15.3149, 18.0506, 0.44 ) }
    dend_60 { pt3dadd( 35.944, 15.2646, 17.6822, 0.44 ) }
    dend_60 { pt3dadd( 36.4333, 15.2463, 17.2864, 0.44 ) }
    dend_60 { pt3dadd( 36.9891, 15.2658, 16.8197, 0.37 ) }
    dend_60 { pt3dadd( 37.6909, 15.3673, 16.2429, 0.37 ) }
    dend_60 { pt3dadd( 38.1507, 15.4744, 15.8143, 0.37 ) }
    dend_60 { pt3dadd( 38.5076, 15.5876, 15.4373, 0.37 ) }
    dend_60 { pt3dadd( 38.7829, 15.6971, 15.1292, 0.44 ) }
    dend_60 { pt3dadd( 39.3886, 15.9912, 14.4259, 0.44 ) }
    dend_60 { pt3dadd( 39.8412, 16.2435, 13.9032, 0.44 ) }
    dend_60 { pt3dadd( 40.4128, 16.5834, 13.2953, 0.59 ) }
    dend_60 { pt3dadd( 41.1171, 16.9783, 12.6484, 0.74 ) }
    dend_60 { pt3dadd( 41.745, 17.2877, 12.1377, 0.29 ) }
    dend_60 { pt3dadd( 42.191, 17.4761, 11.8171, 0.29 ) }
    dend_60 { pt3dadd( 42.8124, 17.6974, 11.463, 0.29 ) }
    dend_60 { pt3dadd( 43.5603, 17.9158, 11.0888, 0.37 ) }
    dend_60 { pt3dadd( 44.3834, 18.1301, 10.7065, 0.74 ) }
    dend_60 { pt3dadd( 45.1911, 18.3174, 10.3325, 0.44 ) }
    dend_60 { pt3dadd( 45.59, 18.4019, 10.1416, 0.66 ) }
    dend_60 { pt3dadd( 46.308, 18.52, 9.76363, 0.74 ) }
    dend_60 { pt3dadd( 47.1345, 18.6353, 9.29537, 0.29 ) }
    dend_60 { pt3dadd( 47.8295, 18.7205, 8.84301, 0.29 ) }
    dend_60 { pt3dadd( 48.2278, 18.7565, 8.56993, 0.29 ) }
    dend_60 { pt3dadd( 48.558, 18.7524, 8.39197, 0.29 ) }
    dend_60 { pt3dadd( 49.1447, 18.6722, 8.28746, 0.22 ) }
    dend_60 { pt3dadd( 50.0332, 18.6204, 8.5533, 0.22 ) }
    dend_60 { pt3dadd( 50.3784, 18.6525, 8.68148, 0.29 ) }
    dend_60 { pt3dadd( 50.7302, 18.7171, 8.7895, 0.29 ) }
    dend_60 { pt3dadd( 51.1236, 18.8103, 8.86515, 0.22 ) }
    dend_60 { pt3dadd( 52.0569, 19.0168, 8.90374, 0.59 ) }
    dend_60 { pt3dadd( 53.0248, 19.2111, 8.80626, 0.22 ) }
    dend_60 { pt3dadd( 53.9084, 19.3641, 8.61193, 0.52 ) }
    dend_60 { pt3dadd( 54.5502, 19.4539, 8.40817, 0.29 ) }
    dend_60 { pt3dadd( 55.1754, 19.5321, 8.16739, 0.66 ) }
    dend_60 { pt3dadd( 56.1036, 19.6327, 7.71806, 0.15 ) }
    dend_60 { pt3dadd( 56.5981, 19.6695, 7.42197, 0.37 ) }
    dend_60 { pt3dadd( 57.0853, 19.7017, 7.09851, 0.44 ) }
    dend_60 { pt3dadd( 57.6934, 19.775, 6.72821, 0.15 ) }
    dend_60 { pt3dadd( 58.1253, 19.8517, 6.4879, 0.29 ) }
    dend_60 { pt3dadd( 58.5873, 19.9461, 6.24542, 0.44 ) }
    dend_60 { pt3dadd( 59.208, 20.06, 5.96651, 0.59 ) }
    dend_60 { pt3dadd( 59.9345, 20.1508, 5.70327, 0.74 ) }
    dend_60 { pt3dadd( 60.7876, 20.224, 5.4285, 0.52 ) }
    dend_60 { pt3dadd( 61.7978, 20.3287, 5.18538, 0.29 ) }
    dend_60 { pt3dadd( 62.3158, 20.3951, 5.08216, 0.22 ) }
    dend_60 { pt3dadd( 63.1159, 20.5559, 4.95998, 0.52 ) }
    dend_60 { pt3dadd( 64.1173, 20.8491, 4.80497, 0.22 ) }
    dend_60 { pt3dadd( 64.7953, 21.0752, 4.69085, 0.22 ) }
    dend_60 { pt3dadd( 65.7872, 21.4542, 4.56586, 0.59 ) }
    dend_60 { pt3dadd( 65.9922, 21.536, 4.5526, 0.59 ) }
    dend_60 { pt3dadd( 66.6452, 21.7805, 4.47874, 0.29 ) }
    dend_60 { pt3dadd( 67.5097, 22.0638, 4.27201, 0.22 ) }
    dend_60 { pt3dadd( 68.1406, 22.2287, 4.03299, 0.22 ) }
    dend_60 { pt3dadd( 69.0437, 22.4047, 3.61212, 0.37 ) }
    dend_60 { pt3dadd( 70.1786, 22.5591, 3.10277, 0.15 ) }
    dend_60 { pt3dadd( 70.9964, 22.6434, 2.78071, 0.37 ) }
    dend_60 { pt3dadd( 71.847, 22.715, 2.50688, 0.37 ) }
    dend_60 { pt3dadd( 73.0141, 22.8416, 2.20677, 0.22 ) }
    dend_60 { pt3dadd( 73.7761, 22.9597, 2.00298, 0.22 ) }
    dend_60 { pt3dadd( 74.8728, 23.1608, 1.65624, 0.22 ) }
    dend_60 { pt3dadd( 75.2742, 23.2527, 1.54087, 0.52 ) }
    dend_60 { pt3dadd( 76.0475, 23.4099, 1.41523, 0.52 ) }
    dend_60 { pt3dadd( 76.7641, 23.5492, 1.34636, 0.22 ) }
    dend_60 { pt3dadd( 77.6506, 23.7049, 1.28545, 0.15 ) }
    dend_60 { pt3dadd( 78.4957, 23.8693, 1.18821, 0.15 ) }
    dend_60 { pt3dadd( 79.16, 24.0118, 1.01916, 0.15 ) }
    dend_60 { pt3dadd( 80.2655, 24.2526, 0.687304, 0.22 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 23.7185, 19.0244, 20.6373, 0.74 ) }
    dend_59 { pt3dadd( 24.1155, 19.4605, 21.2134, 0.74 ) }
    dend_59 { pt3dadd( 24.7235, 20.1558, 21.9243, 0.66 ) }
    dend_59 { pt3dadd( 25.5307, 21.064, 22.8102, 0.59 ) }
    dend_59 { pt3dadd( 26.2149, 21.7817, 23.4808, 0.88 ) }
    dend_59 { pt3dadd( 26.8387, 22.3431, 23.9921, 0.59 ) }
    dend_59 { pt3dadd( 27.6168, 22.9917, 24.6384, 0.74 ) }
    dend_59 { pt3dadd( 28.3656, 23.5803, 25.2561, 0.66 ) }
    dend_59 { pt3dadd( 29.0121, 24.1242, 25.8202, 0.66 ) }
    dend_59 { pt3dadd( 29.6934, 24.745, 26.5474, 0.52 ) }
    dend_59 { pt3dadd( 30.3991, 25.4048, 27.5773, 0.44 ) }
    dend_59 { pt3dadd( 30.963, 25.9613, 28.8024, 0.44 ) }
    dend_59 { pt3dadd( 31.3662, 26.4251, 30.0585, 0.44 ) }
    dend_59 { pt3dadd( 31.5934, 26.7927, 31.2077, 0.44 ) }
    dend_59 { pt3dadd( 31.7422, 27.2, 32.509, 0.66 ) }
    dend_59 { pt3dadd( 31.8269, 27.6562, 33.9568, 0.66 ) }
    dend_59 { pt3dadd( 31.8541, 28.1979, 35.5408, 0.66 ) }
    dend_59 { pt3dadd( 31.846, 28.5595, 36.5466, 0.88 ) }
    dend_59 { pt3dadd( 31.78, 29.1945, 38.3976, 0.88 ) }
    dend_59 { pt3dadd( 31.7603, 29.4064, 39.0433, 0.59 ) }
    dend_59 { pt3dadd( 31.7279, 29.9745, 40.8997, 0.59 ) }
    dend_59 { pt3dadd( 31.7324, 30.2749, 42.044, 0.59 ) }
    dend_59 { pt3dadd( 31.7706, 30.5871, 43.3186, 0.59 ) }
    dend_59 { pt3dadd( 31.8188, 30.7513, 44.0656, 0.59 ) }
    dend_59 { pt3dadd( 31.9648, 30.9535, 45.0639, 0.59 ) }
    dend_59 { pt3dadd( 32.2711, 31.2052, 46.506, 0.59 ) }
    dend_59 { pt3dadd( 32.6251, 31.38, 47.7269, 0.59 ) }
    dend_59 { pt3dadd( 33.0151, 31.5643, 48.8722, 0.44 ) }
    dend_59 { pt3dadd( 33.491, 31.8394, 50.2776, 0.44 ) }
    dend_59 { pt3dadd( 33.9669, 32.2316, 51.7959, 0.44 ) }
    dend_59 { pt3dadd( 34.0609, 32.3539, 52.1806, 0.44 ) }
    dend_59 { pt3dadd( 34.3102, 32.8911, 53.6307, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_59 { pt3dadd( 34.568, 33.7069, 55.7144, 0.44 ) }
    dend_59 { pt3dadd( 34.7202, 34.2563, 57.2165, 0.44 ) }
    dend_59 { pt3dadd( 34.9541, 35.0939, 59.7018, 0.29 ) }
    dend_59 { pt3dadd( 35.0741, 35.5104, 61.2758, 0.29 ) }
    dend_59 { pt3dadd( 35.1147, 35.69, 62.1771, 0.29 ) }
    dend_59 { pt3dadd( 35.125, 35.8945, 63.7174, 0.29 ) }
    dend_59 { pt3dadd( 35.0972, 35.9841, 65.3894, 0.29 ) }
    dend_59 { pt3dadd( 35.0331, 36.0053, 66.9875, 0.29 ) }
    dend_59 { pt3dadd( 34.8543, 35.9881, 69.403, 0.29 ) }
    dend_59 { pt3dadd( 34.716, 35.9671, 70.4821, 0.29 ) }
    dend_59 { pt3dadd( 34.5214, 35.928, 71.6128, 0.29 ) }
    dend_59 { pt3dadd( 34.1073, 35.8633, 73.413, 0.29 ) }
    dend_59 { pt3dadd( 33.5727, 35.8226, 75.3311, 0.29 ) }
    dend_59 { pt3dadd( 33.0761, 35.8357, 76.9316, 0.29 ) }
    dend_59 { pt3dadd( 32.4216, 35.9175, 78.9834, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 15/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -3.54753, 43.8943, -12.7071, 0.52 ) }
    dend_54 { pt3dadd( -3.69692, 44.8814, -11.9357, 0.52 ) }
    dend_54 { pt3dadd( -4.04814, 46.2496, -10.9581, 0.52 ) }
    dend_54 { pt3dadd( -4.44603, 47.3094, -10.2153, 0.52 ) }
    dend_54 { pt3dadd( -4.8272, 48.0818, -9.69453, 0.44 ) }
    dend_54 { pt3dadd( -5.28077, 48.7737, -9.24909, 0.44 ) }
    dend_54 { pt3dadd( -5.59955, 49.1475, -9.00698, 0.44 ) }
    dend_54 { pt3dadd( -6.49957, 49.8164, -8.69307, 0.29 ) }
    dend_54 { pt3dadd( -7.32256, 50.2165, -8.59019, 0.22 ) }
    dend_54 { pt3dadd( -8.12454, 50.5203, -8.60236, 0.29 ) }
    dend_54 { pt3dadd( -9.31372, 50.9018, -8.60459, 0.66 ) }
    dend_54 { pt3dadd( -10.2859, 51.197, -8.59573, 0.29 ) }
    dend_54 { pt3dadd( -11.5163, 51.6016, -8.49954, 0.29 ) }
    dend_54 { pt3dadd( -12.2428, 51.8607, -8.46161, 0.29 ) }
    dend_54 { pt3dadd( -13.0753, 52.1699, -8.41542, 0.29 ) }
    dend_54 { pt3dadd( -14.7007, 52.7732, -8.19032, 0.29 ) }
    dend_54 { pt3dadd( -15.6583, 53.1918, -7.92421, 0.66 ) }
    dend_54 { pt3dadd( -16.8833, 53.795, -7.37175, 0.81 ) }
    dend_54 { pt3dadd( -18.2171, 54.4882, -6.60255, 0.22 ) }
    dend_54 { pt3dadd( -19.1551, 55.0302, -5.96944, 0.59 ) }
    dend_54 { pt3dadd( -20.2451, 55.7098, -5.12365, 0.29 ) }
    dend_54 { pt3dadd( -21.2649, 56.3301, -4.30966, 0.29 ) }
    dend_54 { pt3dadd( -22.3133, 56.9765, -3.33954, 0.37 ) }
    dend_54 { pt3dadd( -23.1324, 57.5212, -2.45211, 0.52 ) }
    dend_54 { pt3dadd( -24.0958, 58.2281, -1.26848, 0.29 ) }
    dend_54 { pt3dadd( -24.8286, 58.855, -0.350941, 0.29 ) }
    dend_54 { pt3dadd( -25.6285, 59.6506, 0.688181, 0.15 ) }
    dend_54 { pt3dadd( -26.3101, 60.368, 1.58383, 0.29 ) }
    dend_54 { pt3dadd( -26.988, 61.1352, 2.49041, 1.18 ) }
    dend_54 { pt3dadd( -27.3998, 61.634, 3.08257, 1.18 ) }
    dend_54 { pt3dadd( -28.237, 62.6832, 4.33196, 0.37 ) }
    dend_54 { pt3dadd( -29.0524, 63.9164, 5.75784, 0.22 ) }
    dend_54 { pt3dadd( -29.274, 64.3364, 6.23334, 0.22 ) }
    dend_54 { pt3dadd( -29.5971, 64.9783, 6.9621, 0.66 ) }
    dend_54 { pt3dadd( -29.9926, 65.6526, 7.74848, 0.52 ) }
    dend_54 { pt3dadd( -30.6608, 66.6392, 9.00109, 0.29 ) }
    dend_54 { pt3dadd( -31.3865, 67.5777, 10.1645, 0.29 ) }
    dend_54 { pt3dadd( -31.8446, 68.1237, 10.738, 0.29 ) }
    dend_54 { pt3dadd( -32.4603, 68.8474, 11.3834, 0.81 ) }
    dend_54 { pt3dadd( -33.6353, 70.204, 12.467, 0.22 ) }
    dend_54 { pt3dadd( -34.3621, 70.9772, 13.0033, 0.22 ) }
    dend_54 { pt3dadd( -35.5574, 72.1656, 13.7275, 0.15 ) }
    dend_54 { pt3dadd( -36.2917, 72.8191, 14.0991, 0.22 ) }
    dend_54 { pt3dadd( -36.8037, 73.2557, 14.3401, 0.22 ) }
    dend_54 { pt3dadd( -37.7008, 74.0549, 14.7705, 0.22 ) }
    dend_54 { pt3dadd( -38.725, 75.0777, 15.2718, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 61/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -3.54753, 43.8943, -12.7071, 0.37 ) }
    dend_53 { pt3dadd( -2.26709, 45.0632, -12.89, 0.37 ) }
    dend_53 { pt3dadd( -1.75763, 45.6127, -12.9786, 0.37 ) }
    dend_53 { pt3dadd( -0.999346, 46.6467, -13.2401, 0.37 ) }
    dend_53 { pt3dadd( -0.583342, 47.3418, -13.4683, 0.37 ) }
    dend_53 { pt3dadd( -0.344729, 47.7691, -13.6004, 0.29 ) }
    dend_53 { pt3dadd( 0.0303655, 48.4331, -13.7783, 0.29 ) }
    dend_53 { pt3dadd( 0.527138, 49.3387, -13.9397, 0.52 ) }
    dend_53 { pt3dadd( 1.22664, 50.4456, -14.0447, 0.66 ) }
    dend_53 { pt3dadd( 1.9088, 51.3957, -14.036, 0.66 ) }
    dend_53 { pt3dadd( 2.68767, 52.3567, -13.9201, 0.22 ) }
    dend_53 { pt3dadd( 3.36017, 53.1309, -13.7718, 0.59 ) }
    dend_53 { pt3dadd( 4.25298, 54.1326, -13.4833, 0.37 ) }
    dend_53 { pt3dadd( 4.95183, 54.916, -13.1314, 0.22 ) }
    dend_53 { pt3dadd( 5.54265, 55.6671, -12.6954, 0.22 ) }
    dend_53 { pt3dadd( 5.8102, 56.1256, -12.3898, 0.22 ) }
    dend_53 { pt3dadd( 5.99514, 56.6259, -12.0495, 0.52 ) }
    dend_53 { pt3dadd( 6.2234, 57.5969, -11.3874, 0.22 ) }
    dend_53 { pt3dadd( 6.30473, 58.5092, -10.775, 0.15 ) }
    dend_53 { pt3dadd( 6.28829, 59.4649, -10.1301, 0.29 ) }
    dend_53 { pt3dadd( 6.20177, 60.394, -9.4676, 0.29 ) }
    dend_53 { pt3dadd( 6.13187, 60.9095, -9.06301, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.6074, -22.0787, -16.822, 0.52 ) }
    dend_42 { pt3dadd( 13.6557, -22.5055, -18.3585, 0.52 ) }
    dend_42 { pt3dadd( 13.6232, -22.8147, -19.3603, 0.52 ) }
    dend_42 { pt3dadd( 13.5309, -23.0924, -20.2505, 0.52 ) }
    dend_42 { pt3dadd( 13.3593, -23.4113, -21.3888, 0.52 ) }
    dend_42 { pt3dadd( 13.1093, -23.8038, -22.9466, 0.52 ) }
    dend_42 { pt3dadd( 12.9837, -24.0013, -23.7573, 0.52 ) }
    dend_42 { pt3dadd( 12.8816, -24.1193, -24.1866, 0.52 ) }
    dend_42 { pt3dadd( 12.7168, -24.3117, -24.8818, 0.52 ) }
    dend_42 { pt3dadd( 12.551, -24.6207, -25.8494, 0.52 ) }
    dend_42 { pt3dadd( 12.5373, -24.7849, -26.2838, 0.52 ) }
    dend_42 { pt3dadd( 12.8236, -25.3991, -27.4127, 0.52 ) }
    dend_42 { pt3dadd( 13.1002, -25.7635, -27.9293, 0.52 ) }
    dend_42 { pt3dadd( 13.455, -26.1702, -28.3858, 0.52 ) }
    dend_42 { pt3dadd( 13.9831, -26.7646, -28.967, 0.66 ) }
    dend_42 { pt3dadd( 14.3703, -27.2376, -29.3726, 0.88 ) }
    dend_42 { pt3dadd( 15.1221, -28.2188, -30.1979, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_42 { pt3dadd( 15.6668, -28.9511, -30.8309, 0.74 ) }
    dend_42 { pt3dadd( 15.9982, -29.4207, -31.2885, 0.74 ) }
    dend_42 { pt3dadd( 16.4002, -30.073, -32.0431, 0.74 ) }
    dend_42 { pt3dadd( 16.644, -30.5483, -32.7174, 0.52 ) }
    dend_42 { pt3dadd( 16.7919, -30.924, -33.3077, 0.37 ) }
    dend_42 { pt3dadd( 16.9314, -31.4008, -34.2102, 0.37 ) }
    dend_42 { pt3dadd( 17.0231, -31.7738, -35.0327, 0.59 ) }
    dend_42 { pt3dadd( 17.1523, -32.2194, -36.2245, 0.37 ) }
    dend_42 { pt3dadd( 17.2753, -32.482, -37.0436, 0.37 ) }
    dend_42 { pt3dadd( 17.3688, -32.6196, -37.4985, 0.37 ) }
    dend_42 { pt3dadd( 17.5489, -32.8897, -38.2431, 0.37 ) }
    dend_42 { pt3dadd( 17.7071, -33.1851, -38.9309, 0.37 ) }
    dend_42 { pt3dadd( 17.8625, -33.5685, -39.7269, 0.44 ) }
    dend_42 { pt3dadd( 17.9811, -33.9828, -40.558, 0.44 ) }
    dend_42 { pt3dadd( 18.0323, -34.5107, -41.6711, 0.59 ) }
    dend_42 { pt3dadd( 17.9231, -35.0761, -42.8943, 0.44 ) }
    dend_42 { pt3dadd( 17.7245, -35.5182, -43.75, 0.44 ) }
    dend_42 { pt3dadd( 17.5254, -35.8235, -44.301, 0.44 ) }
    dend_42 { pt3dadd( 17.2259, -36.1937, -44.9463, 0.44 ) }
    dend_42 { pt3dadd( 16.7249, -36.7324, -45.8798, 0.44 ) }
    dend_42 { pt3dadd( 16.2494, -37.1843, -46.7041, 0.44 ) }
    dend_42 { pt3dadd( 15.8821, -37.532, -47.3504, 0.74 ) }
    dend_42 { pt3dadd( 15.3621, -38.1036, -48.2682, 0.96 ) }
    dend_42 { pt3dadd( 14.9081, -38.6949, -49.0905, 0.52 ) }
    dend_42 { pt3dadd( 14.444, -39.4044, -49.9348, 0.66 ) }
    dend_42 { pt3dadd( 14.0389, -40.1407, -50.7084, 1.25 ) }
    dend_42 { pt3dadd( 13.7531, -40.6946, -51.2664, 1.11 ) }
    dend_42 { pt3dadd( 13.2704, -41.5897, -52.1555, 0.44 ) }
    dend_42 { pt3dadd( 12.8436, -42.3228, -52.8706, 0.44 ) }
    dend_42 { pt3dadd( 12.505, -42.8759, -53.4105, 0.66 ) }
    dend_42 { pt3dadd( 12.0327, -43.6019, -54.107, 0.44 ) }
    dend_42 { pt3dadd( 11.6712, -44.1011, -54.5863, 0.44 ) }
    dend_42 { pt3dadd( 11.2696, -44.5126, -55.0224, 0.44 ) }
    dend_42 { pt3dadd( 10.8338, -44.7981, -55.4026, 0.44 ) }
    dend_42 { pt3dadd( 10.1702, -45.0665, -55.8217, 0.44 ) }
    dend_42 { pt3dadd( 9.56218, -45.2479, -56.1298, 0.74 ) }
    dend_42 { pt3dadd( 8.81063, -45.4417, -56.4408, 1.11 ) }
    dend_42 { pt3dadd( 7.71242, -45.7328, -56.8678, 0.44 ) }
    dend_42 { pt3dadd( 7.09613, -45.9101, -57.1251, 0.44 ) }
    dend_42 { pt3dadd( 6.45456, -46.1099, -57.4504, 0.52 ) }
    dend_42 { pt3dadd( 5.5227, -46.382, -58.0375, 0.37 ) }
    dend_42 { pt3dadd( 4.95233, -46.524, -58.5077, 0.59 ) }
    dend_42 { pt3dadd( 4.24653, -46.6578, -59.259, 0.74 ) }
    dend_42 { pt3dadd( 3.65978, -46.7411, -60.0446, 0.74 ) }
    dend_42 { pt3dadd( 3.06968, -46.8008, -60.9192, 0.74 ) }
    dend_42 { pt3dadd( 2.61377, -46.8144, -61.6608, 0.52 ) }
    dend_42 { pt3dadd( 2.23267, -46.7784, -62.3126, 0.52 ) }
    dend_42 { pt3dadd( 1.77576, -46.7048, -63.0747, 0.22 ) }
    dend_42 { pt3dadd( 1.27646, -46.6031, -63.7854, 0.22 ) }
    dend_42 { pt3dadd( 0.900209, -46.5238, -64.2091, 0.44 ) }
    dend_42 { pt3dadd( 0.436568, -46.4405, -64.6511, 0.44 ) }
    dend_42 { pt3dadd( 0.166112, -46.4055, -64.8717, 0.44 ) }
    dend_42 { pt3dadd( -0.692186, -46.2822, -65.4632, 0.15 ) }
    dend_42 { pt3dadd( -1.63166, -46.1169, -66.0212, 0.15 ) }
    dend_42 { pt3dadd( -2.35962, -45.9422, -66.4158, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 55/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 13.6074, -22.0787, -16.822, 0.52 ) }
    dend_41 { pt3dadd( 13.6861, -21.6518, -17.8976, 0.52 ) }
    dend_41 { pt3dadd( 13.6607, -21.0635, -19.2504, 0.52 ) }
    dend_41 { pt3dadd( 13.5965, -20.5293, -20.3178, 0.74 ) }
    dend_41 { pt3dadd( 13.5358, -20.0434, -21.1874, 0.96 ) }
    dend_41 { pt3dadd( 13.4358, -19.3115, -22.4473, 1.11 ) }
    dend_41 { pt3dadd( 13.3349, -18.467, -23.7928, 0.52 ) }
    dend_41 { pt3dadd( 13.1917, -17.6228, -25.0328, 0.52 ) }
    dend_41 { pt3dadd( 13.0796, -16.8334, -26.0218, 0.66 ) }
    dend_41 { pt3dadd( 13.0567, -16.3523, -26.5313, 0.66 ) }
    dend_41 { pt3dadd( 13.183, -15.266, -27.4776, 0.44 ) }
    dend_41 { pt3dadd( 13.504, -14.3219, -28.0796, 0.44 ) }
    dend_41 { pt3dadd( 13.9512, -13.5921, -28.34, 0.44 ) }
    dend_41 { pt3dadd( 14.5094, -12.9039, -28.4412, 0.52 ) }
    dend_41 { pt3dadd( 15.8593, -11.5442, -28.5588, 0.59 ) }
    dend_41 { pt3dadd( 16.5126, -11.0061, -28.5996, 0.37 ) }
    dend_41 { pt3dadd( 17.3947, -10.4163, -28.6337, 0.59 ) }
    dend_41 { pt3dadd( 18.8583, -9.64217, -28.6655, 0.44 ) }
    dend_41 { pt3dadd( 19.874, -9.17571, -28.7035, 0.29 ) }
    dend_41 { pt3dadd( 21.0712, -8.66447, -28.8179, 0.37 ) }
    dend_41 { pt3dadd( 22.3029, -8.17414, -29.0194, 0.29 ) }
    dend_41 { pt3dadd( 23.1359, -7.85702, -29.2132, 0.66 ) }
    dend_41 { pt3dadd( 24.7013, -7.26334, -29.7274, 0.44 ) }
    dend_41 { pt3dadd( 25.5602, -6.9119, -30.13, 0.44 ) }
    dend_41 { pt3dadd( 26.7322, -6.3731, -30.7994, 0.52 ) }
    dend_41 { pt3dadd( 27.3372, -6.05454, -31.2298, 0.66 ) }
    dend_41 { pt3dadd( 28.5337, -5.33881, -32.2747, 0.44 ) }
    dend_41 { pt3dadd( 29.3423, -4.82351, -33.0692, 0.44 ) }
    dend_41 { pt3dadd( 29.8754, -4.47079, -33.6608, 0.44 ) }
    dend_41 { pt3dadd( 30.4351, -4.11951, -34.2651, 0.37 ) }
    dend_41 { pt3dadd( 31.398, -3.57721, -35.2375, 0.44 ) }
    dend_41 { pt3dadd( 32.1304, -3.2476, -35.8754, 0.52 ) }
    dend_41 { pt3dadd( 33.3058, -2.83743, -36.708, 0.44 ) }
    dend_41 { pt3dadd( 34.6531, -2.44976, -37.5324, 0.22 ) }
    dend_41 { pt3dadd( 35.3724, -2.24523, -37.9219, 0.29 ) }
    dend_41 { pt3dadd( 35.9512, -2.08334, -38.1892, 0.37 ) }
    dend_41 { pt3dadd( 36.9446, -1.84861, -38.5472, 0.22 ) }
    dend_41 { pt3dadd( 38.0523, -1.62449, -38.8741, 0.22 ) }
    dend_41 { pt3dadd( 39.0241, -1.42611, -39.1022, 0.29 ) }
    dend_41 { pt3dadd( 39.7748, -1.21402, -39.2397, 0.29 ) }
    dend_41 { pt3dadd( 40.6837, -0.847582, -39.4113, 0.29 ) }
    dend_41 { pt3dadd( 41.5555, -0.368849, -39.5721, 0.29 ) }
    dend_41 { pt3dadd( 42.7605, 0.409911, -39.7971, 0.22 ) }
    dend_41 { pt3dadd( 43.2629, 0.736815, -39.8665, 0.29 ) }
    dend_41 { pt3dadd( 44.2229, 1.33496, -39.9629, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( 44.8251, 1.68985, -40.0174, 0.44 ) }
    dend_41 { pt3dadd( 45.9441, 2.38311, -40.1478, 0.74 ) }
    dend_41 { pt3dadd( 46.5474, 2.77424, -40.2169, 0.29 ) }
    dend_41 { pt3dadd( 47.6536, 3.47943, -40.3579, 0.29 ) }
    dend_41 { pt3dadd( 48.5021, 3.99893, -40.4789, 0.29 ) }
    dend_41 { pt3dadd( 49.2094, 4.41312, -40.5948, 0.44 ) }
    dend_41 { pt3dadd( 50.1988, 4.98462, -40.7379, 0.59 ) }
    dend_41 { pt3dadd( 51.1445, 5.51885, -40.8837, 0.37 ) }
    dend_41 { pt3dadd( 52.0429, 6.03787, -40.9755, 0.22 ) }
    dend_41 { pt3dadd( 52.8274, 6.52124, -41.0373, 0.22 ) }
    dend_41 { pt3dadd( 53.2362, 6.78759, -41.0421, 0.22 ) }
    dend_41 { pt3dadd( 54.5481, 7.66409, -41.0054, 0.44 ) }
    dend_41 { pt3dadd( 55.6907, 8.41748, -40.9039, 0.22 ) }
    dend_41 { pt3dadd( 56.7171, 9.11072, -40.7251, 0.66 ) }
    dend_41 { pt3dadd( 57.3818, 9.56629, -40.5551, 0.59 ) }
    dend_41 { pt3dadd( 58.308, 10.1685, -40.2816, 0.66 ) }
    dend_41 { pt3dadd( 59.239, 10.7504, -39.9949, 0.37 ) }
    dend_41 { pt3dadd( 60.0068, 11.216, -39.7714, 0.15 ) }
    dend_41 { pt3dadd( 61.0211, 11.6925, -39.4477, 0.22 ) }
    dend_41 { pt3dadd( 61.5734, 11.8664, -39.3208, 0.22 ) }
    dend_41 { pt3dadd( 62.65, 12.0997, -39.0785, 0.29 ) }
    dend_41 { pt3dadd( 63.4048, 12.22, -38.9266, 0.29 ) }
    dend_41 { pt3dadd( 63.9143, 12.2942, -38.8459, 0.52 ) }
    dend_41 { pt3dadd( 65.7467, 12.521, -38.7079, 0.59 ) }
    dend_41 { pt3dadd( 67.1735, 12.633, -38.678, 0.37 ) }
    dend_41 { pt3dadd( 68.5788, 12.6853, -38.6868, 0.37 ) }
    dend_41 { pt3dadd( 69.3053, 12.6795, -38.7038, 0.88 ) }
    dend_41 { pt3dadd( 69.9263, 12.6301, -38.7178, 0.96 ) }
    dend_41 { pt3dadd( 71.3265, 12.4243, -38.7747, 0.44 ) }
    dend_41 { pt3dadd( 73.5395, 11.9789, -38.8707, 0.29 ) }
    dend_41 { pt3dadd( 74.6544, 11.7152, -38.8705, 0.29 ) }
    dend_41 { pt3dadd( 75.6209, 11.4766, -38.8278, 0.29 ) }
    dend_41 { pt3dadd( 76.4804, 11.2723, -38.7356, 0.59 ) }
    dend_41 { pt3dadd( 77.5225, 11.0361, -38.561, 0.22 ) }
    dend_41 { pt3dadd( 78.5372, 10.8346, -38.3377, 0.22 ) }
    dend_41 { pt3dadd( 79.8928, 10.6049, -38.0246, 0.59 ) }
    dend_41 { pt3dadd( 81.2271, 10.4401, -37.7295, 0.22 ) }
    dend_41 { pt3dadd( 81.747, 10.4066, -37.6333, 0.22 ) }
    dend_41 { pt3dadd( 82.809, 10.4311, -37.5259, 0.44 ) }
    dend_41 { pt3dadd( 83.3916, 10.4844, -37.5056, 0.81 ) }
    dend_41 { pt3dadd( 84.984, 10.7007, -37.5775, 0.44 ) }
    dend_41 { pt3dadd( 85.6682, 10.8386, -37.6543, 0.44 ) }
    dend_41 { pt3dadd( 87.3626, 11.2625, -37.9617, 0.74 ) }
    dend_41 { pt3dadd( 89.0953, 11.7949, -38.3493, 0.22 ) }
    dend_41 { pt3dadd( 89.7216, 12.0228, -38.5152, 0.81 ) }
    dend_41 { pt3dadd( 90.0207, 12.1481, -38.603, 0.81 ) }
    dend_41 { pt3dadd( 90.8825, 12.5648, -38.9314, 0.37 ) }
    dend_41 { pt3dadd( 92.3325, 13.3146, -39.602, 0.22 ) }
    dend_41 { pt3dadd( 93.1185, 13.7644, -40.0362, 0.22 ) }
    dend_41 { pt3dadd( 94.1762, 14.3943, -40.6579, 0.22 ) }
    dend_41 { pt3dadd( 94.8398, 14.7899, -41.0564, 0.22 ) }
    dend_41 { pt3dadd( 96.1542, 15.5792, -41.8562, 0.22 ) }
    dend_41 { pt3dadd( 96.8064, 15.9619, -42.2445, 1.03 ) }
    dend_41 { pt3dadd( 97.7716, 16.4971, -42.7364, 0.07 ) }
    dend_41 { pt3dadd( 98.6241, 16.9292, -43.0535, 0.22 ) }
    dend_41 { pt3dadd( 99.286, 17.2573, -43.2113, 0.15 ) }
    dend_41 { pt3dadd( 99.9027, 17.5837, -43.28, 0.59 ) }
    dend_41 { pt3dadd( 100.582, 18.0047, -43.2485, 0.59 ) }
    dend_41 { pt3dadd( 101.76, 18.9644, -43.0619, 0.15 ) }
    dend_41 { pt3dadd( 102.471, 19.8269, -42.8244, 0.44 ) }
    dend_41 { pt3dadd( 102.74, 20.3425, -42.6793, 0.44 ) }
    dend_41 { pt3dadd( 103.106, 21.4327, -42.404, 0.22 ) }
    dend_41 { pt3dadd( 103.244, 22.0281, -42.2659, 0.66 ) }
    dend_41 { pt3dadd( 103.427, 23.0841, -42.0492, 0.15 ) }
    dend_41 { pt3dadd( 103.583, 24.1562, -41.8489, 0.22 ) }
    dend_41 { pt3dadd( 103.684, 24.7073, -41.7198, 0.88 ) }
    dend_41 { pt3dadd( 103.827, 25.2447, -41.5108, 0.88 ) }
    dend_41 { pt3dadd( 104.305, 26.533, -40.775, 0.29 ) }
    dend_41 { pt3dadd( 104.614, 27.2599, -40.3212, 0.29 ) }
    dend_41 { pt3dadd( 105.086, 28.226, -39.6443, 0.66 ) }
    dend_41 { pt3dadd( 105.542, 29.1054, -38.9487, 0.29 ) }
    dend_41 { pt3dadd( 106.328, 30.551, -37.6527, 0.22 ) }
    dend_41 { pt3dadd( 106.922, 31.6207, -36.5427, 0.15 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.57842, -68.6895, -2.44781, 0.15 ) }
    dend_39 { pt3dadd( -2.50315, -68.8234, -1.57833, 0.15 ) }
    dend_39 { pt3dadd( -1.47558, -68.959, -0.907654, 0.22 ) }
    dend_39 { pt3dadd( -0.960576, -69.0125, -0.616364, 0.15 ) }
    dend_39 { pt3dadd( -0.247467, -69.0656, -0.238674, 0.15 ) }
    dend_39 { pt3dadd( 0.295079, -69.1032, 0.0349219, 0.44 ) }
    dend_39 { pt3dadd( 0.753714, -69.1371, 0.262747, 0.44 ) }
    dend_39 { pt3dadd( 1.83868, -69.2183, 0.818257, 0.22 ) }
    dend_39 { pt3dadd( 2.70284, -69.3075, 1.27818, 0.22 ) }
    dend_39 { pt3dadd( 3.91218, -69.4725, 1.98908, 0.15 ) }
    dend_39 { pt3dadd( 4.7247, -69.6115, 2.55034, 0.74 ) }
    dend_39 { pt3dadd( 5.99801, -69.8775, 3.66903, 0.22 ) }
    dend_39 { pt3dadd( 6.67512, -70.0618, 4.44851, 0.22 ) }
    dend_39 { pt3dadd( 6.96623, -70.1722, 4.89565, 0.29 ) }
    dend_39 { pt3dadd( 7.41138, -70.3752, 5.75587, 0.29 ) }
    dend_39 { pt3dadd( 8.02883, -70.7052, 7.14987, 0.15 ) }
    dend_39 { pt3dadd( 8.52783, -71.0031, 8.46545, 0.15 ) }
    dend_39 { pt3dadd( 8.97988, -71.3053, 9.86358, 0.52 ) }
    dend_39 { pt3dadd( 9.43753, -71.5975, 11.3008, 0.96 ) }
    dend_39 { pt3dadd( 9.94437, -71.8768, 12.929, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -3.57842, -68.6895, -2.44781, 0.59 ) }
    dend_38 { pt3dadd( -3.71831, -69.1661, -2.30915, 0.59 ) }
    dend_38 { pt3dadd( -3.82628, -69.5581, -2.14573, 0.22 ) }
    dend_38 { pt3dadd( -3.94012, -70.006, -1.90773, 0.22 ) }
    dend_38 { pt3dadd( -4.0117, -70.3004, -1.74374, 0.52 ) }
    dend_38 { pt3dadd( -4.09205, -70.6392, -1.55433, 0.96 ) }
    dend_38 { pt3dadd( -4.232, -71.2744, -1.18114, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( -4.30202, -71.6925, -0.924208, 0.22 ) }
    dend_38 { pt3dadd( -4.35274, -72.1408, -0.637849, 0.59 ) }
    dend_38 { pt3dadd( -4.37826, -72.5629, -0.368983, 0.88 ) }
    dend_38 { pt3dadd( -4.38087, -73.3589, 0.118283, 0.44 ) }
    dend_38 { pt3dadd( -4.35653, -73.8944, 0.404785, 0.44 ) }
    dend_38 { pt3dadd( -4.33669, -74.3394, 0.569412, 0.15 ) }
    dend_38 { pt3dadd( -4.32969, -74.8122, 0.67279, 0.22 ) }
    dend_38 { pt3dadd( -4.33434, -74.9881, 0.68128, 0.96 ) }
    dend_38 { pt3dadd( -4.36721, -75.4128, 0.6437, 1.33 ) }
    dend_38 { pt3dadd( -4.45676, -76.0762, 0.500916, 0.59 ) }
    dend_38 { pt3dadd( -4.63886, -76.9536, 0.260149, 0.22 ) }
    dend_38 { pt3dadd( -4.73982, -77.337, 0.156046, 0.44 ) }
    dend_38 { pt3dadd( -4.94497, -78.0637, -0.0361328, 0.96 ) }
    dend_38 { pt3dadd( -5.066, -78.5387, -0.141415, 0.22 ) }
    dend_38 { pt3dadd( -5.13083, -78.8088, -0.189473, 0.37 ) }
    dend_38 { pt3dadd( -5.23259, -79.2435, -0.256465, 0.37 ) }
    dend_38 { pt3dadd( -5.3409, -79.7177, -0.304268, 0.22 ) }
    dend_38 { pt3dadd( -5.47004, -80.2096, -0.34813, 1.11 ) }
    dend_38 { pt3dadd( -5.70351, -80.9584, -0.410355, 0.22 ) }
    dend_38 { pt3dadd( -5.7763, -81.1799, -0.434171, 0.22 ) }
    dend_38 { pt3dadd( -5.97524, -81.819, -0.515046, 0.22 ) }
    dend_38 { pt3dadd( -6.05503, -82.109, -0.557667, 0.22 ) }
    dend_38 { pt3dadd( -6.18022, -82.6036, -0.639089, 1.18 ) }
    dend_38 { pt3dadd( -6.3128, -83.1735, -0.720137, 0.29 ) }
    dend_38 { pt3dadd( -6.4574, -83.8173, -0.78703, 0.81 ) }
    dend_38 { pt3dadd( -6.54309, -84.2824, -0.814751, 0.15 ) }
    dend_38 { pt3dadd( -6.59753, -84.6268, -0.81748, 0.15 ) }
    dend_38 { pt3dadd( -6.62857, -84.7795, -0.814547, 0.15 ) }
    dend_38 { pt3dadd( -6.81969, -85.3185, -0.77881, 0.29 ) }
    dend_38 { pt3dadd( -7.22397, -86.0327, -0.698243, 0.15 ) }
    dend_38 { pt3dadd( -7.39863, -86.2422, -0.66207, 0.44 ) }
    dend_38 { pt3dadd( -7.63959, -86.4682, -0.608064, 0.88 ) }
    dend_38 { pt3dadd( -8.08671, -86.8211, -0.501955, 0.22 ) }
    dend_38 { pt3dadd( -8.72958, -87.2656, -0.342205, 0.15 ) }
    dend_38 { pt3dadd( -8.91767, -87.3772, -0.293221, 0.15 ) }
    dend_38 { pt3dadd( -9.21182, -87.5368, -0.213239, 0.59 ) }
    dend_38 { pt3dadd( -9.40588, -87.6338, -0.166047, 0.96 ) }
    dend_38 { pt3dadd( -9.94111, -87.8814, -0.047617, 0.22 ) }
    dend_38 { pt3dadd( -10.3768, -88.085, 0.0290848, 0.37 ) }
    dend_38 { pt3dadd( -10.8066, -88.2964, 0.0881904, 0.37 ) }
    dend_38 { pt3dadd( -11.247, -88.5178, 0.135172, 0.22 ) }
    dend_38 { pt3dadd( -11.8196, -88.8247, 0.205059, 0.15 ) }
    dend_38 { pt3dadd( -12.1945, -89.0341, 0.278514, 0.15 ) }
    dend_38 { pt3dadd( -12.5584, -89.2453, 0.379276, 0.15 ) }
    dend_38 { pt3dadd( -12.7853, -89.3818, 0.449067, 0.15 ) }
    dend_38 { pt3dadd( -13.1424, -89.6113, 0.577515, 0.81 ) }
    dend_38 { pt3dadd( -13.8038, -90.0808, 0.875296, 0.07 ) }
    dend_38 { pt3dadd( -14.2695, -90.4764, 1.15856, 0.07 ) }
    dend_38 { pt3dadd( -14.6118, -90.792, 1.41545, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 49/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 41.4929, 3.55935, -3.95127, 0.44 ) }
    dend_34 { pt3dadd( 42.3433, 2.53701, -4.68042, 0.44 ) }
    dend_34 { pt3dadd( 42.8821, 1.84534, -5.23387, 0.44 ) }
    dend_34 { pt3dadd( 43.0935, 1.58313, -5.45483, 0.52 ) }
    dend_34 { pt3dadd( 43.6245, 1.0112, -5.98743, 0.52 ) }
    dend_34 { pt3dadd( 44.2196, 0.477759, -6.52424, 0.59 ) }
    dend_34 { pt3dadd( 44.7666, 0.056092, -6.96739, 0.59 ) }
    dend_34 { pt3dadd( 45.4455, -0.423128, -7.4773, 0.59 ) }
    dend_34 { pt3dadd( 45.8933, -0.702484, -7.81454, 0.52 ) }
    dend_34 { pt3dadd( 46.5078, -1.05524, -8.26847, 0.52 ) }
    dend_34 { pt3dadd( 47.1272, -1.3855, -8.72479, 0.44 ) }
    dend_34 { pt3dadd( 47.508, -1.5934, -9.02229, 0.44 ) }
    dend_34 { pt3dadd( 48.1137, -1.97372, -9.47844, 0.44 ) }
    dend_34 { pt3dadd( 48.4825, -2.24814, -9.75159, 0.52 ) }
    dend_34 { pt3dadd( 48.9169, -2.61739, -10.0623, 0.52 ) }
    dend_34 { pt3dadd( 49.6355, -3.26993, -10.4835, 0.44 ) }
    dend_34 { pt3dadd( 50.1785, -3.73019, -10.7479, 0.81 ) }
    dend_34 { pt3dadd( 50.6757, -4.11304, -10.9392, 0.96 ) }
    dend_34 { pt3dadd( 51.5191, -4.71613, -11.1683, 0.59 ) }
    dend_34 { pt3dadd( 52.2076, -5.16479, -11.3319, 0.52 ) }
    dend_34 { pt3dadd( 53.2454, -5.78137, -11.5618, 0.44 ) }
    dend_34 { pt3dadd( 54.274, -6.33137, -11.7383, 0.44 ) }
    dend_34 { pt3dadd( 54.9771, -6.67846, -11.8466, 0.37 ) }
    dend_34 { pt3dadd( 55.9253, -7.11647, -12.0376, 0.66 ) }
    dend_34 { pt3dadd( 57.2047, -7.69765, -12.3544, 0.37 ) }
    dend_34 { pt3dadd( 58.3329, -8.22639, -12.699, 0.44 ) }
    dend_34 { pt3dadd( 59.2957, -8.68448, -13.0235, 0.74 ) }
    dend_34 { pt3dadd( 59.6486, -8.85459, -13.1335, 0.74 ) }
    dend_34 { pt3dadd( 60.7677, -9.32931, -13.5424, 0.22 ) }
    dend_34 { pt3dadd( 61.2798, -9.52883, -13.7548, 0.22 ) }
    dend_34 { pt3dadd( 61.8561, -9.77655, -14.0002, 0.66 ) }
    dend_34 { pt3dadd( 62.4104, -10.052, -14.268, 0.22 ) }
    dend_34 { pt3dadd( 62.9708, -10.3828, -14.5812, 0.37 ) }
    dend_34 { pt3dadd( 64.1742, -11.1752, -15.2026, 0.15 ) }
    dend_34 { pt3dadd( 64.6171, -11.4641, -15.4058, 0.59 ) }
    dend_34 { pt3dadd( 64.9976, -11.6952, -15.5818, 0.74 ) }
    dend_34 { pt3dadd( 65.537, -12.029, -15.8307, 0.52 ) }
    dend_34 { pt3dadd( 66.0192, -12.3484, -16.0427, 0.81 ) }
    dend_34 { pt3dadd( 66.8851, -12.9335, -16.3912, 0.29 ) }
    dend_34 { pt3dadd( 68.0074, -13.663, -16.7525, 0.22 ) }
    dend_34 { pt3dadd( 68.7281, -14.0642, -16.9665, 0.22 ) }
    dend_34 { pt3dadd( 69.4005, -14.3707, -17.1765, 0.22 ) }
    dend_34 { pt3dadd( 70.0644, -14.6137, -17.3967, 0.29 ) }
    dend_34 { pt3dadd( 70.7706, -14.827, -17.6416, 0.59 ) }
    dend_34 { pt3dadd( 71.5497, -15.0353, -17.9183, 0.96 ) }
    dend_34 { pt3dadd( 72.2569, -15.2088, -18.192, 0.29 ) }
    dend_34 { pt3dadd( 73.1675, -15.3913, -18.5964, 0.22 ) }
    dend_34 { pt3dadd( 74.0394, -15.5037, -18.9959, 0.44 ) }
    dend_34 { pt3dadd( 74.5364, -15.5384, -19.2242, 0.22 ) }
    dend_34 { pt3dadd( 75.2371, -15.5578, -19.5303, 0.29 ) }
    dend_34 { pt3dadd( 76.3295, -15.577, -19.9969, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_34 { pt3dadd( 77.3157, -15.617, -20.4044, 0.74 ) }
    dend_34 { pt3dadd( 78.2217, -15.6934, -20.7398, 0.15 ) }
    dend_34 { pt3dadd( 78.6843, -15.7536, -20.9664, 0.29 ) }
    dend_34 { pt3dadd( 79.6462, -15.9626, -21.6332, 0.22 ) }
    dend_34 { pt3dadd( 80.0942, -16.0803, -21.9802, 0.29 ) }
    dend_34 { pt3dadd( 80.6639, -16.298, -22.4781, 0.52 ) }
    dend_34 { pt3dadd( 81.1159, -16.5497, -22.9713, 0.81 ) }
    dend_34 { pt3dadd( 82.4169, -17.5265, -24.8105, 0.29 ) }
    dend_34 { pt3dadd( 82.9555, -18.0343, -25.76, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 41.4929, 3.55935, -3.95127, 0.52 ) }
    dend_33 { pt3dadd( 42.2341, 4.12507, -3.73434, 0.52 ) }
    dend_33 { pt3dadd( 42.7775, 4.52715, -3.50197, 0.52 ) }
    dend_33 { pt3dadd( 43.3575, 4.90411, -3.17769, 0.52 ) }
    dend_33 { pt3dadd( 44.1545, 5.3908, -2.63239, 0.74 ) }
    dend_33 { pt3dadd( 44.8359, 5.81285, -2.1223, 0.74 ) }
    dend_33 { pt3dadd( 45.6387, 6.3327, -1.49791, 0.88 ) }
    dend_33 { pt3dadd( 46.462, 6.91293, -0.77618, 0.88 ) }
    dend_33 { pt3dadd( 47.3612, 7.62198, 0.0790679, 0.74 ) }
    dend_33 { pt3dadd( 48.2985, 8.41606, 1.00784, 0.37 ) }
    dend_33 { pt3dadd( 48.9083, 8.95, 1.59048, 0.29 ) }
    dend_33 { pt3dadd( 49.539, 9.51679, 2.14255, 0.37 ) }
    dend_33 { pt3dadd( 50.5182, 10.34, 2.82202, 0.81 ) }
    dend_33 { pt3dadd( 51.4819, 11.0549, 3.28873, 0.59 ) }
    dend_33 { pt3dadd( 52.6977, 11.8022, 3.65963, 0.52 ) }
    dend_33 { pt3dadd( 53.4812, 12.1446, 3.81908, 0.66 ) }
    dend_33 { pt3dadd( 54.2496, 12.3612, 3.96757, 0.81 ) }
    dend_33 { pt3dadd( 56.1827, 12.6782, 4.37112, 0.52 ) }
    dend_33 { pt3dadd( 57.237, 12.7762, 4.61898, 0.52 ) }
    dend_33 { pt3dadd( 58.044, 12.8613, 4.87312, 0.59 ) }
    dend_33 { pt3dadd( 59.1757, 13.0669, 5.39618, 0.52 ) }
    dend_33 { pt3dadd( 60.2395, 13.4184, 6.08185, 0.44 ) }
    dend_33 { pt3dadd( 60.9167, 13.727, 6.58668, 0.52 ) }
    dend_33 { pt3dadd( 61.5769, 14.087, 7.09435, 0.74 ) }
    dend_33 { pt3dadd( 62.7976, 14.7806, 7.95183, 0.59 ) }
    dend_33 { pt3dadd( 63.7525, 15.3262, 8.54661, 0.52 ) }
    dend_33 { pt3dadd( 64.9772, 15.9845, 9.16449, 0.29 ) }
    dend_33 { pt3dadd( 66.0238, 16.4868, 9.58923, 0.22 ) }
    dend_33 { pt3dadd( 67.0977, 16.9567, 9.98496, 0.29 ) }
    dend_33 { pt3dadd( 68.026, 17.3039, 10.3096, 0.22 ) }
    dend_33 { pt3dadd( 68.6866, 17.5258, 10.5541, 0.52 ) }
    dend_33 { pt3dadd( 69.6653, 17.8376, 10.9645, 0.88 ) }
    dend_33 { pt3dadd( 70.7104, 18.1273, 11.5036, 0.52 ) }
    dend_33 { pt3dadd( 71.5372, 18.3321, 12.0346, 0.52 ) }
    dend_33 { pt3dadd( 72.6319, 18.5872, 12.8919, 0.96 ) }
    dend_33 { pt3dadd( 73.9904, 18.9191, 14.0901, 0.37 ) }
    dend_33 { pt3dadd( 74.5475, 19.0751, 14.6164, 0.37 ) }
    dend_33 { pt3dadd( 75.5307, 19.415, 15.5939, 0.81 ) }
    dend_33 { pt3dadd( 76.4635, 19.843, 16.5524, 0.66 ) }
    dend_33 { pt3dadd( 77.4525, 20.4838, 17.5447, 0.44 ) }
    dend_33 { pt3dadd( 78.301, 21.3363, 18.4311, 0.44 ) }
    dend_33 { pt3dadd( 78.7755, 22.0565, 18.9724, 0.59 ) }
    dend_33 { pt3dadd( 79.1201, 22.8868, 19.4946, 0.66 ) }
    dend_33 { pt3dadd( 79.3244, 23.9009, 20.0679, 0.44 ) }
    dend_33 { pt3dadd( 79.3611, 25.1964, 20.7809, 0.37 ) }
    dend_33 { pt3dadd( 79.1928, 26.3368, 21.4216, 0.37 ) }
    dend_33 { pt3dadd( 78.8555, 27.4333, 22.0869, 0.66 ) }
    dend_33 { pt3dadd( 78.1963, 28.9561, 23.1059, 0.22 ) }
    dend_33 { pt3dadd( 77.5438, 30.1859, 23.9785, 0.81 ) }
    dend_33 { pt3dadd( 77.1898, 30.7941, 24.4226, 0.81 ) }
    dend_33 { pt3dadd( 76.6258, 31.7601, 25.1159, 0.22 ) }
    dend_33 { pt3dadd( 76.1366, 32.7412, 25.767, 0.74 ) }
    dend_33 { pt3dadd( 75.7346, 33.7218, 26.3296, 0.22 ) }
    dend_33 { pt3dadd( 75.3797, 34.7421, 26.8592, 0.52 ) }
    dend_33 { pt3dadd( 74.8858, 36.2696, 27.5929, 1.03 ) }
    dend_33 { pt3dadd( 74.4956, 37.4621, 28.1287, 1.03 ) }
    dend_33 { pt3dadd( 73.9456, 39.152, 28.8288, 0.29 ) }
    dend_33 { pt3dadd( 73.5016, 40.4704, 29.327, 0.22 ) }
    dend_33 { pt3dadd( 73.1002, 41.6177, 29.7154, 0.22 ) }
    dend_33 { pt3dadd( 72.7975, 42.4174, 29.9496, 0.29 ) }
    dend_33 { pt3dadd( 72.3608, 43.4567, 30.199, 0.81 ) }
    dend_33 { pt3dadd( 71.955, 44.3613, 30.3838, 0.22 ) }
    dend_33 { pt3dadd( 71.6512, 45.1052, 30.4867, 0.29 ) }
    dend_33 { pt3dadd( 71.4016, 45.9945, 30.5785, 0.29 ) }
    dend_33 { pt3dadd( 71.2247, 47.0433, 30.6194, 0.74 ) }
    dend_33 { pt3dadd( 71.1128, 48.1831, 30.625, 1.4 ) }
    dend_33 { pt3dadd( 71.093, 48.5057, 30.6138, 1.4 ) }
    dend_33 { pt3dadd( 71.0198, 49.8076, 30.5323, 0.15 ) }
    dend_33 { pt3dadd( 70.9751, 50.7243, 30.4328, 0.22 ) }
    dend_33 { pt3dadd( 70.9632, 51.1624, 30.3823, 0.22 ) }
    dend_33 { pt3dadd( 70.9475, 52.4384, 30.2859, 0.74 ) }
    dend_33 { pt3dadd( 70.9398, 53.6356, 30.2211, 0.29 ) }
    dend_33 { pt3dadd( 70.9428, 54.416, 30.1843, 0.59 ) }
    dend_33 { pt3dadd( 70.9419, 55.4842, 30.1542, 0.22 ) }
    dend_33 { pt3dadd( 70.9728, 56.7348, 30.1049, 0.59 ) }
    dend_33 { pt3dadd( 71.0693, 57.8367, 30.0495, 0.59 ) }
    dend_33 { pt3dadd( 71.2098, 58.626, 30.0474, 0.88 ) }
    dend_33 { pt3dadd( 71.5276, 59.8803, 30.1156, 0.44 ) }
    dend_33 { pt3dadd( 71.7729, 60.6847, 30.1903, 0.44 ) }
    dend_33 { pt3dadd( 72.1719, 61.8298, 30.3214, 0.74 ) }
    dend_33 { pt3dadd( 72.507, 62.7487, 30.4183, 0.74 ) }
    dend_33 { pt3dadd( 73.114, 64.5669, 30.5598, 0.37 ) }
    dend_33 { pt3dadd( 73.4954, 65.9209, 30.6422, 0.66 ) }
    dend_33 { pt3dadd( 73.6893, 66.7905, 30.6836, 0.59 ) }
    dend_33 { pt3dadd( 73.8841, 67.7815, 30.6882, 0.59 ) }
    dend_33 { pt3dadd( 74.0897, 68.9165, 30.6834, 0.59 ) }
    dend_33 { pt3dadd( 74.3029, 70.1517, 30.7113, 0.66 ) }
    dend_33 { pt3dadd( 74.5017, 71.1438, 30.7766, 0.52 ) }
    dend_33 { pt3dadd( 74.6863, 71.8556, 30.9002, 0.52 ) }
    dend_33 { pt3dadd( 74.9257, 72.5762, 31.1026, 0.66 ) }
    dend_33 { pt3dadd( 75.4559, 73.9158, 31.6204, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_33 { pt3dadd( 76.1862, 75.4248, 32.3379, 0.37 ) }
    dend_33 { pt3dadd( 76.8516, 76.6625, 33.0029, 0.29 ) }
    dend_33 { pt3dadd( 77.425, 77.6631, 33.5827, 0.37 ) }
    dend_33 { pt3dadd( 78.0746, 78.7617, 34.2341, 0.37 ) }
    dend_33 { pt3dadd( 78.5246, 79.5336, 34.7079, 0.29 ) }
    dend_33 { pt3dadd( 78.9286, 80.2142, 35.1089, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 14.7179, 10.2329, -21.221, 0.59 ) }
    dend_25 { pt3dadd( 15.1728, 11.2929, -21.5932, 0.59 ) }
    dend_25 { pt3dadd( 15.5706, 12.1202, -21.9618, 0.52 ) }
    dend_25 { pt3dadd( 15.7936, 12.6011, -22.2068, 0.52 ) }
    dend_25 { pt3dadd( 16.0589, 13.3209, -22.5867, 0.52 ) }
    dend_25 { pt3dadd( 16.2372, 13.9724, -22.9232, 0.52 ) }
    dend_25 { pt3dadd( 16.4588, 14.8688, -23.4012, 0.66 ) }
    dend_25 { pt3dadd( 16.6818, 15.668, -23.8699, 0.66 ) }
    dend_25 { pt3dadd( 16.835, 16.1608, -24.1601, 0.66 ) }
    dend_25 { pt3dadd( 17.1367, 17.0931, -24.6821, 0.52 ) }
    dend_25 { pt3dadd( 17.4378, 17.902, -25.1034, 0.44 ) }
    dend_25 { pt3dadd( 17.8223, 18.8181, -25.5182, 0.44 ) }
    dend_25 { pt3dadd( 18.3737, 19.9551, -25.9201, 0.37 ) }
    dend_25 { pt3dadd( 18.771, 20.6819, -26.1094, 0.37 ) }
    dend_25 { pt3dadd( 19.0771, 21.2033, -26.1958, 0.37 ) }
    dend_25 { pt3dadd( 19.5651, 21.9646, -26.293, 0.37 ) }
    dend_25 { pt3dadd( 19.9441, 22.5488, -26.3485, 0.44 ) }
    dend_25 { pt3dadd( 20.2404, 23.0063, -26.4008, 0.52 ) }
    dend_25 { pt3dadd( 20.8694, 24.0524, -26.5093, 0.44 ) }
    dend_25 { pt3dadd( 21.3256, 24.8642, -26.6158, 0.52 ) }
    dend_25 { pt3dadd( 21.8528, 25.8186, -26.7728, 0.52 ) }
    dend_25 { pt3dadd( 22.1619, 26.4077, -26.9031, 0.52 ) }
    dend_25 { pt3dadd( 22.8181, 27.5031, -27.2455, 0.66 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 14.7179, 10.2329, -21.221, 0.59 ) }
    dend_24 { pt3dadd( 14.8208, 9.49398, -23.5258, 0.59 ) }
    dend_24 { pt3dadd( 14.7795, 9.33104, -24.0832, 0.59 ) }
    dend_24 { pt3dadd( 14.6958, 9.22315, -24.489, 0.59 ) }
    dend_24 { pt3dadd( 14.6063, 9.16646, -24.7662, 0.59 ) }
    dend_24 { pt3dadd( 14.335, 9.09846, -25.3702, 0.59 ) }
    dend_24 { pt3dadd( 14.0861, 9.11503, -25.851, 0.59 ) }
    dend_24 { pt3dadd( 13.6777, 9.30876, -26.4127, 0.59 ) }
    dend_24 { pt3dadd( 13.407, 9.50748, -26.8138, 0.52 ) }
    dend_24 { pt3dadd( 13.0649, 9.83369, -27.3982, 0.52 ) }
    dend_24 { pt3dadd( 12.7436, 10.1929, -28.0376, 0.66 ) }
    dend_24 { pt3dadd( 12.3526, 10.6793, -28.9839, 0.52 ) }
    dend_24 { pt3dadd( 12.1948, 10.9156, -29.8564, 0.52 ) }
    dend_24 { pt3dadd( 12.1103, 11.0766, -30.58, 0.44 ) }
    dend_24 { pt3dadd( 12.0166, 11.2823, -31.6023, 0.44 ) }
    dend_24 { pt3dadd( 11.9704, 11.3909, -32.2164, 0.44 ) }
    dend_24 { pt3dadd( 11.9112, 11.5366, -33.2108, 0.44 ) }
    dend_24 { pt3dadd( 11.5743, 12.2544, -39.4198, 0.81 ) }
    dend_24 { pt3dadd( 11.4988, 12.3971, -40.9063, 0.29 ) }
    dend_24 { pt3dadd( 11.4621, 12.467, -41.7634, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.5463, -5.97462, 5.27161, 0.52 ) }
    dend_19 { pt3dadd( 22.1983, -7.1022, 5.75909, 0.52 ) }
    dend_19 { pt3dadd( 22.8945, -8.22419, 6.26129, 0.52 ) }
    dend_19 { pt3dadd( 23.4843, -9.13712, 6.67617, 0.59 ) }
    dend_19 { pt3dadd( 24.2966, -10.4599, 7.25187, 0.52 ) }
    dend_19 { pt3dadd( 24.9067, -11.5613, 7.72681, 0.59 ) }
    dend_19 { pt3dadd( 25.2968, -12.3696, 8.0704, 0.74 ) }
    dend_19 { pt3dadd( 25.5743, -13.0307, 8.35172, 0.81 ) }
    dend_19 { pt3dadd( 25.9663, -14.1057, 8.81917, 0.44 ) }
    dend_19 { pt3dadd( 26.3025, -15.0982, 9.20433, 0.66 ) }
    dend_19 { pt3dadd( 26.6781, -16.2781, 9.66486, 0.44 ) }
    dend_19 { pt3dadd( 27.0713, -17.4599, 10.158, 0.52 ) }
    dend_19 { pt3dadd( 27.4066, -18.3327, 10.5643, 0.59 ) }
    dend_19 { pt3dadd( 27.7493, -19.0903, 10.9914, 0.44 ) }
    dend_19 { pt3dadd( 28.2533, -20.0511, 11.6447, 0.37 ) }
    dend_19 { pt3dadd( 28.8407, -20.9774, 12.3943, 0.59 ) }
    dend_19 { pt3dadd( 29.2765, -21.5909, 12.9474, 0.88 ) }
    dend_19 { pt3dadd( 29.6815, -22.1556, 13.4998, 0.74 ) }
    dend_19 { pt3dadd( 30.1417, -22.9367, 14.2435, 0.29 ) }
    dend_19 { pt3dadd( 30.3461, -23.4168, 14.656, 0.29 ) }
    dend_19 { pt3dadd( 30.5483, -24.0796, 15.1603, 0.44 ) }
    dend_19 { pt3dadd( 30.7357, -24.9119, 15.7011, 0.81 ) }
    dend_19 { pt3dadd( 30.8158, -25.4455, 16.0272, 0.81 ) }
    dend_19 { pt3dadd( 30.9857, -26.8267, 16.8325, 0.37 ) }
    dend_19 { pt3dadd( 31.0828, -27.5584, 17.2524, 0.96 ) }
    dend_19 { pt3dadd( 31.131, -27.8969, 17.4608, 0.96 ) }
    dend_19 { pt3dadd( 31.2039, -28.5704, 17.9076, 0.44 ) }
    dend_19 { pt3dadd( 31.2835, -29.4349, 18.5173, 0.66 ) }
    dend_19 { pt3dadd( 31.3419, -30.0457, 18.9673, 0.22 ) }
    dend_19 { pt3dadd( 31.4128, -30.5387, 19.3302, 0.22 ) }
    dend_19 { pt3dadd( 31.5198, -31.0573, 19.6914, 0.22 ) }
    dend_19 { pt3dadd( 31.6742, -31.7823, 20.1225, 0.74 ) }
    dend_19 { pt3dadd( 31.7746, -32.2136, 20.341, 0.74 ) }
    dend_19 { pt3dadd( 31.9792, -32.9876, 20.6497, 0.22 ) }
    dend_19 { pt3dadd( 32.2923, -34.0523, 20.9861, 0.22 ) }
    dend_19 { pt3dadd( 32.5392, -34.857, 21.1474, 0.74 ) }
    dend_19 { pt3dadd( 32.9619, -36.1051, 21.3024, 0.22 ) }
    dend_19 { pt3dadd( 33.1754, -36.6914, 21.3285, 0.88 ) }
    dend_19 { pt3dadd( 33.6038, -37.8529, 21.2968, 0.74 ) }
    dend_19 { pt3dadd( 33.9585, -38.7906, 21.2194, 0.37 ) }
    dend_19 { pt3dadd( 34.4581, -40.1276, 21.0925, 0.59 ) }
    dend_19 { pt3dadd( 34.694, -40.7849, 21.0313, 0.88 ) }
    dend_19 { pt3dadd( 35.0767, -41.9127, 20.9608, 0.29 ) }
    dend_19 { pt3dadd( 35.3484, -42.8988, 20.9511, 0.74 ) }
    dend_19 { pt3dadd( 35.4369, -43.3696, 20.9914, 0.74 ) }
    dend_19 { pt3dadd( 35.5843, -44.5743, 21.2852, 0.44 ) }
    dend_19 { pt3dadd( 35.6708, -45.6161, 21.7459, 0.44 ) }
    dend_19 { pt3dadd( 35.6736, -46.1973, 22.0707, 0.66 ) }
    dend_19 { pt3dadd( 35.6112, -47.0291, 22.6408, 0.37 ) }
    dend_19 { pt3dadd( 35.4815, -47.7726, 23.2202, 0.81 ) }
    dend_19 { pt3dadd( 35.1925, -48.9344, 24.1023, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 34.9812, -49.669, 24.649, 0.22 ) }
    dend_19 { pt3dadd( 34.7763, -50.3868, 25.1582, 0.29 ) }
    dend_19 { pt3dadd( 34.6801, -50.7419, 25.3765, 0.81 ) }
    dend_19 { pt3dadd( 34.4858, -51.4998, 25.7613, 0.81 ) }
    dend_19 { pt3dadd( 34.2136, -52.7156, 26.2168, 0.22 ) }
    dend_19 { pt3dadd( 34.087, -53.3493, 26.3938, 0.22 ) }
    dend_19 { pt3dadd( 34.0149, -53.9482, 26.5523, 0.44 ) }
    dend_19 { pt3dadd( 34.012, -54.6942, 26.784, 0.88 ) }
    dend_19 { pt3dadd( 34.0783, -55.4131, 27.0396, 0.29 ) }
    dend_19 { pt3dadd( 34.2024, -56.1476, 27.3459, 0.15 ) }
    dend_19 { pt3dadd( 34.2673, -56.5073, 27.5581, 0.15 ) }
    dend_19 { pt3dadd( 34.36, -57.1012, 27.9389, 0.15 ) }
    dend_19 { pt3dadd( 34.4708, -57.7598, 28.3827, 0.52 ) }
    dend_19 { pt3dadd( 34.6045, -58.4441, 28.8755, 0.59 ) }
    dend_19 { pt3dadd( 34.8083, -59.3031, 29.5462, 0.52 ) }
    dend_19 { pt3dadd( 35.0607, -60.2642, 30.3774, 0.52 ) }
    dend_19 { pt3dadd( 35.1907, -60.8777, 30.9311, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 17/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 21.5463, -5.97462, 5.27161, 0.44 ) }
    dend_16 { pt3dadd( 22.1762, -5.30242, 6.09758, 0.44 ) }
    dend_16 { pt3dadd( 22.7137, -4.76559, 6.82293, 0.44 ) }
    dend_16 { pt3dadd( 23.1201, -4.40764, 7.41536, 0.44 ) }
    dend_16 { pt3dadd( 23.7844, -3.88173, 8.47036, 0.52 ) }
    dend_16 { pt3dadd( 24.0933, -3.67455, 8.99156, 0.52 ) }
    dend_16 { pt3dadd( 24.6792, -3.36514, 9.96576, 0.81 ) }
    dend_16 { pt3dadd( 25.1216, -3.24687, 10.6755, 0.81 ) }
    dend_16 { pt3dadd( 25.7129, -3.25576, 11.5109, 0.44 ) }
    dend_16 { pt3dadd( 26.2318, -3.37846, 12.1516, 0.44 ) }
    dend_16 { pt3dadd( 26.7767, -3.57973, 12.7525, 0.44 ) }
    dend_16 { pt3dadd( 27.3272, -3.81259, 13.3329, 0.74 ) }
    dend_16 { pt3dadd( 27.7748, -4.02306, 13.7775, 0.74 ) }
    dend_16 { pt3dadd( 28.6979, -4.43916, 14.5869, 0.44 ) }
    dend_16 { pt3dadd( 29.6603, -4.82365, 15.3364, 0.44 ) }
    dend_16 { pt3dadd( 30.4123, -5.12144, 15.8799, 0.88 ) }
    dend_16 { pt3dadd( 31.2707, -5.43514, 16.5094, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.3467, 24.4695, -12.933, 0.44 ) }
    dend_9 { pt3dadd( -11.9292, 25.2192, -12.7214, 0.44 ) }
    dend_9 { pt3dadd( -12.2698, 25.6982, -12.5485, 0.44 ) }
    dend_9 { pt3dadd( -12.549, 26.1341, -12.3877, 0.66 ) }
    dend_9 { pt3dadd( -12.8936, 26.7468, -12.133, 0.59 ) }
    dend_9 { pt3dadd( -13.1288, 27.2292, -11.9172, 0.74 ) }
    dend_9 { pt3dadd( -13.2723, 27.595, -11.7403, 0.66 ) }
    dend_9 { pt3dadd( -13.4099, 28.2766, -11.3467, 0.66 ) }
    dend_9 { pt3dadd( -13.4574, 28.7593, -11.0282, 0.52 ) }
    dend_9 { pt3dadd( -13.4948, 29.2683, -10.6431, 0.52 ) }
    dend_9 { pt3dadd( -13.5285, 29.5499, -10.3933, 0.52 ) }
    dend_9 { pt3dadd( -13.6597, 30.0627, -9.88085, 0.66 ) }
    dend_9 { pt3dadd( -13.8541, 30.5312, -9.4249, 0.66 ) }
    dend_9 { pt3dadd( -14.0538, 30.8821, -9.11823, 0.59 ) }
    dend_9 { pt3dadd( -14.3308, 31.2934, -8.80506, 0.52 ) }
    dend_9 { pt3dadd( -14.7713, 31.8164, -8.52388, 0.52 ) }
    dend_9 { pt3dadd( -15.2692, 32.3025, -8.32637, 0.66 ) }
    dend_9 { pt3dadd( -15.7914, 32.7578, -8.16142, 0.74 ) }
    dend_9 { pt3dadd( -16.0801, 33.0011, -8.08893, 0.74 ) }
    dend_9 { pt3dadd( -16.5926, 33.457, -7.96772, 0.66 ) }
    dend_9 { pt3dadd( -17.328, 34.1997, -7.78497, 0.44 ) }
    dend_9 { pt3dadd( -17.8688, 34.8054, -7.64602, 0.44 ) }
    dend_9 { pt3dadd( -18.5029, 35.5802, -7.47161, 0.44 ) }
    dend_9 { pt3dadd( -18.84, 36.0186, -7.35846, 0.44 ) }
    dend_9 { pt3dadd( -19.204, 36.4736, -7.25898, 0.59 ) }
    dend_9 { pt3dadd( -19.6179, 36.9475, -7.19885, 0.74 ) }
    dend_9 { pt3dadd( -19.9451, 37.2996, -7.17224, 0.52 ) }
    dend_9 { pt3dadd( -20.4872, 37.7428, -7.21144, 0.44 ) }
    dend_9 { pt3dadd( -21.0885, 38.107, -7.29421, 0.44 ) }
    dend_9 { pt3dadd( -22.0749, 38.6083, -7.41255, 0.44 ) }
    dend_9 { pt3dadd( -23.0295, 39.0268, -7.50949, 0.44 ) }
    dend_9 { pt3dadd( -23.6778, 39.2925, -7.56666, 0.52 ) }
    dend_9 { pt3dadd( -24.7258, 39.7292, -7.61182, 0.37 ) }
    dend_9 { pt3dadd( -25.4767, 40.0769, -7.59243, 0.37 ) }
    dend_9 { pt3dadd( -26.1729, 40.5001, -7.49915, 0.44 ) }
    dend_9 { pt3dadd( -26.6204, 40.9359, -7.31575, 0.37 ) }
    dend_9 { pt3dadd( -26.8167, 41.249, -7.14784, 0.66 ) }
    dend_9 { pt3dadd( -27.0485, 41.8091, -6.79923, 0.66 ) }
    dend_9 { pt3dadd( -27.2442, 42.4494, -6.3219, 0.88 ) }
    dend_9 { pt3dadd( -27.4004, 42.9983, -5.86798, 0.88 ) }
    dend_9 { pt3dadd( -27.5108, 43.3688, -5.52238, 0.74 ) }
    dend_9 { pt3dadd( -27.6775, 43.9267, -4.98144, 0.74 ) }
    dend_9 { pt3dadd( -27.837, 44.369, -4.53766, 0.74 ) }
    dend_9 { pt3dadd( -28.0902, 44.8973, -4.01147, 0.74 ) }
    dend_9 { pt3dadd( -28.3563, 45.3247, -3.57685, 1.03 ) }
    dend_9 { pt3dadd( -28.8351, 45.9904, -2.87275, 1.03 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.3467, 24.4695, -12.933, 0.59 ) }
    dend_8 { pt3dadd( -11.4976, 25.2408, -13.8998, 0.59 ) }
    dend_8 { pt3dadd( -11.6165, 26.0539, -14.9482, 0.59 ) }
    dend_8 { pt3dadd( -11.7357, 27.1292, -16.3586, 0.59 ) }
    dend_8 { pt3dadd( -11.8333, 27.9658, -17.4598, 0.44 ) }
    dend_8 { pt3dadd( -11.9758, 29.068, -18.8974, 0.59 ) }
    dend_8 { pt3dadd( -12.0915, 29.8183, -19.8735, 0.59 ) }
    dend_8 { pt3dadd( -12.3292, 30.908, -21.2865, 0.59 ) }
    dend_8 { pt3dadd( -12.4977, 31.6393, -22.2022, 0.59 ) }
    dend_8 { pt3dadd( -12.6784, 32.4502, -23.2085, 0.59 ) }
    dend_8 { pt3dadd( -12.8906, 33.4539, -24.5079, 0.59 ) }
    dend_8 { pt3dadd( -13.0567, 34.2597, -25.6672, 0.52 ) }
    dend_8 { pt3dadd( -13.2205, 35.0878, -27.0587, 0.66 ) }
    dend_8 { pt3dadd( -13.3081, 35.5193, -27.9405, 0.96 ) }
    dend_8 { pt3dadd( -13.4195, 36.185, -29.5566, 0.96 ) }
    dend_8 { pt3dadd( -13.4644, 36.7661, -31.193, 0.81 ) }
    dend_8 { pt3dadd( -13.4559, 37.3506, -33.184, 0.81 ) }
    dend_8 { pt3dadd( -13.3941, 37.7502, -34.8323, 0.44 ) }
    dend_8 { pt3dadd( -13.3208, 38.0145, -36.2613, 0.44 ) }
    dend_8 { pt3dadd( -13.2441, 38.2109, -37.6041, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( -13.1572, 38.3457, -38.9151, 0.44 ) }
    dend_8 { pt3dadd( -12.981, 38.4582, -40.6461, 0.44 ) }
    dend_8 { pt3dadd( -12.7966, 38.4743, -41.8038, 0.59 ) }
    dend_8 { pt3dadd( -12.3483, 38.378, -43.8754, 0.59 ) }
    dend_8 { pt3dadd( -12.0219, 38.2728, -44.9355, 0.22 ) }
    dend_8 { pt3dadd( -11.5527, 38.0604, -46.2654, 0.22 ) }
    dend_8 { pt3dadd( -11.0663, 37.7897, -47.472, 0.22 ) }
    dend_8 { pt3dadd( -10.4956, 37.4741, -48.6175, 0.37 ) }
    dend_8 { pt3dadd( -10.2037, 37.3217, -49.0943, 0.37 ) }
    dend_8 { pt3dadd( -9.67603, 37.0961, -49.6727, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 80.2655, 24.2526, 0.687304, 0.22 ) }
    dend_62 { pt3dadd( 81.246, 24.4273, 1.14981, 0.22 ) }
    dend_62 { pt3dadd( 82.4359, 24.8238, 1.52304, 0.29 ) }
    dend_62 { pt3dadd( 83.9617, 25.3323, 2.00165, 0.37 ) }
    dend_62 { pt3dadd( 84.9734, 25.6695, 2.31897, 0.15 ) }
    dend_62 { pt3dadd( 85.6403, 25.8918, 2.52816, 0.37 ) }
    dend_62 { pt3dadd( 87.1909, 26.4085, 3.01453, 0.29 ) }
    dend_62 { pt3dadd( 88.5156, 27.0172, 3.30075, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 18/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 80.2655, 24.2526, 0.687304, 0.22 ) }
    dend_61 { pt3dadd( 80.1816, 23.3603, 0.160253, 0.22 ) }
    dend_61 { pt3dadd( 80.0925, 22.4134, -0.399071, 0.22 ) }
    dend_61 { pt3dadd( 80.0452, 21.9107, -0.696045, 0.29 ) }
    dend_61 { pt3dadd( 79.9579, 20.982, -1.24458, 0.15 ) }
    dend_61 { pt3dadd( 79.9127, 20.5022, -1.52798, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.35962, -45.9422, -66.4158, 0.22 ) }
    dend_44 { pt3dadd( -2.62346, -45.18, -66.4578, 0.22 ) }
    dend_44 { pt3dadd( -3.00843, -44.2643, -66.4978, 0.22 ) }
    dend_44 { pt3dadd( -3.46798, -43.3168, -66.5368, 0.15 ) }
    dend_44 { pt3dadd( -3.83078, -42.6112, -66.5664, 0.15 ) }
    dend_44 { pt3dadd( -4.19324, -41.9063, -66.596, 0.29 ) }
    dend_44 { pt3dadd( -4.42398, -41.4576, -66.6148, 0.29 ) }
    dend_44 { pt3dadd( -4.73704, -40.9624, -66.6361, 0.22 ) }
    dend_44 { pt3dadd( -5.09054, -40.5158, -66.6811, 0.66 ) }
    dend_44 { pt3dadd( -5.21393, -40.3794, -66.6919, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.35962, -45.9422, -66.4158, 0.74 ) }
    dend_43 { pt3dadd( -2.53316, -46.8521, -66.4194, 0.74 ) }
    dend_43 { pt3dadd( -2.59866, -47.8965, -66.2689, 0.44 ) }
    dend_43 { pt3dadd( -2.55056, -48.6635, -66.0986, 0.59 ) }
    dend_43 { pt3dadd( -2.39978, -49.5627, -65.8768, 0.96 ) }
    dend_43 { pt3dadd( -2.11427, -51.2654, -65.4569, 0.22 ) }
    dend_43 { pt3dadd( -1.92177, -52.4134, -65.1738, 0.29 ) }
    dend_43 { pt3dadd( -1.6335, -53.3463, -64.8517, 0.22 ) }
    dend_43 { pt3dadd( -1.32468, -54.013, -64.5276, 0.44 ) }
    dend_43 { pt3dadd( -1.01359, -54.4971, -64.2235, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 44/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 22.8181, 27.5031, -27.2455, 0.22 ) }
    dend_31 { pt3dadd( 22.2185, 28.1126, -27.3451, 0.22 ) }
    dend_31 { pt3dadd( 21.7253, 28.5797, -27.4533, 0.22 ) }
    dend_31 { pt3dadd( 21.2144, 29.0534, -27.5419, 0.29 ) }
    dend_31 { pt3dadd( 20.5044, 29.7193, -27.6153, 0.15 ) }
    dend_31 { pt3dadd( 19.7435, 30.4113, -27.6301, 0.15 ) }
    dend_31 { pt3dadd( 19.2636, 30.8275, -27.6253, 0.15 ) }
    dend_31 { pt3dadd( 18.693, 31.267, -27.5838, 0.22 ) }
    dend_31 { pt3dadd( 18.0109, 31.7506, -27.5092, 0.22 ) }
    dend_31 { pt3dadd( 17.2166, 32.2627, -27.3706, 0.15 ) }
    dend_31 { pt3dadd( 16.4849, 32.7313, -27.2253, 0.15 ) }
    dend_31 { pt3dadd( 15.7227, 33.2114, -27.0576, 0.22 ) }
    dend_31 { pt3dadd( 15.1612, 33.5608, -26.8981, 0.15 ) }
    dend_31 { pt3dadd( 14.7685, 33.7827, -26.7751, 0.22 ) }
    dend_31 { pt3dadd( 13.866, 34.2191, -26.5483, 0.22 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 59/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.8181, 27.5031, -27.2455, 0.52 ) }
    dend_26 { pt3dadd( 23.306, 27.6395, -27.6679, 0.52 ) }
    dend_26 { pt3dadd( 23.6994, 27.8138, -28.0259, 0.37 ) }
    dend_26 { pt3dadd( 24.1054, 28.065, -28.466, 0.37 ) }
    dend_26 { pt3dadd( 24.4528, 28.3232, -28.9075, 0.44 ) }
    dend_26 { pt3dadd( 24.6719, 28.5091, -29.2304, 0.44 ) }
    dend_26 { pt3dadd( 24.8851, 28.6986, -29.5766, 0.44 ) }
    dend_26 { pt3dadd( 25.0665, 28.9044, -29.9028, 0.52 ) }
    dend_26 { pt3dadd( 25.3277, 29.2317, -30.3913, 0.59 ) }
    dend_26 { pt3dadd( 25.4884, 29.4695, -30.7451, 0.59 ) }
    dend_26 { pt3dadd( 25.6249, 29.6878, -31.0995, 0.59 ) }
    dend_26 { pt3dadd( 25.8037, 29.929, -31.564, 0.52 ) }
    dend_26 { pt3dadd( 25.9223, 30.0452, -31.8512, 0.37 ) }
    dend_26 { pt3dadd( 26.1731, 30.2031, -32.3137, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 73/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.1907, -60.8777, 30.9311, 0.15 ) }
    dend_21 { pt3dadd( 35.8865, -61.6956, 30.4033, 0.15 ) }
    dend_21 { pt3dadd( 36.1893, -62.0516, 30.1736, 0.52 ) }
    dend_21 { pt3dadd( 36.5255, -62.4467, 29.9186, 0.15 ) }
    dend_21 { pt3dadd( 36.8704, -62.8521, 29.657, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 78/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 35.1907, -60.8777, 30.9311, 0.37 ) }
    dend_20 { pt3dadd( 35.4643, -61.0122, 31.3179, 0.37 ) }
    dend_20 { pt3dadd( 35.7845, -61.1716, 31.8107, 0.44 ) }
    dend_20 { pt3dadd( 36.5605, -61.6297, 33.1052, 0.07 ) }
    dend_20 { pt3dadd( 37.0164, -61.9407, 33.953, 0.07 ) }
    dend_20 { pt3dadd( 37.3891, -62.2449, 34.7861, 0.29 ) }
    dend_20 { pt3dadd( 37.7217, -62.5991, 35.7829, 0.22 ) }
    dend_20 { pt3dadd( 37.8071, -62.7812, 36.3088, 0.22 ) }
    dend_20 { pt3dadd( 37.7737, -63.0071, 36.9244, 0.59 ) }
    dend_20 { pt3dadd( 37.651, -63.1921, 37.4054, 0.59 ) }
    dend_20 { pt3dadd( 37.3723, -63.4176, 38.1061, 0.22 ) }
    dend_20 { pt3dadd( 36.8199, -63.7008, 39.2776, 0.22 ) }
    dend_20 { pt3dadd( 36.453, -63.8491, 40.0394, 0.29 ) }
    dend_20 { pt3dadd( 36.1235, -63.986, 40.844, 0.74 ) }
    dend_20 { pt3dadd( 36.0834, -64.0063, 40.9458, 0.74 ) }
    dend_20 { pt3dadd( 35.658, -64.2945, 41.9417, 0.15 ) }
    dend_20 { pt3dadd( 35.2549, -64.6301, 42.6804, 0.22 ) }
    dend_20 { pt3dadd( 34.6981, -65.1491, 43.2198, 0.44 ) }
    dend_20 { pt3dadd( 33.9645, -65.9264, 43.5325, 1.11 ) }
    dend_20 { pt3dadd( 32.9473, -67.1255, 43.6795, 0.88 ) }
    dend_20 { pt3dadd( 32.302, -67.9677, 43.6739, 0.37 ) }
    dend_20 { pt3dadd( 31.6938, -68.8074, 43.5644, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_20 { pt3dadd( 30.6869, -70.199, 43.2323, 0.22 ) }
    dend_20 { pt3dadd( 30.2831, -70.7478, 43.0472, 0.22 ) }
    dend_20 { pt3dadd( 30.0992, -70.9851, 42.9458, 0.29 ) }
    dend_20 { pt3dadd( 29.7663, -71.3972, 42.7827, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 4/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 31.2707, -5.43514, 16.5094, 0.37 ) }
    dend_18 { pt3dadd( 31.549, -6.03853, 17.3908, 0.37 ) }
    dend_18 { pt3dadd( 31.9356, -6.64581, 18.3914, 0.22 ) }
    dend_18 { pt3dadd( 32.5616, -7.36912, 19.8107, 0.15 ) }
    dend_18 { pt3dadd( 32.8324, -7.61013, 20.3656, 0.66 ) }
    dend_18 { pt3dadd( 33.3764, -7.99222, 21.4077, 0.22 ) }
    dend_18 { pt3dadd( 34.0035, -8.35043, 22.5657, 0.22 ) }
    dend_18 { pt3dadd( 34.7109, -8.60805, 23.8387, 0.22 ) }
    dend_18 { pt3dadd( 35.3288, -8.7654, 24.9803, 0.37 ) }
    dend_18 { pt3dadd( 35.9034, -8.8752, 26.0777, 0.66 ) }
    dend_18 { pt3dadd( 36.6103, -8.98648, 27.5034, 0.88 ) }
    dend_18 { pt3dadd( 37.2676, -9.07927, 28.928, 0.88 ) }
    dend_18 { pt3dadd( 38.0144, -9.16833, 30.6737, 0.44 ) }
    dend_18 { pt3dadd( 38.5726, -9.23139, 32.0816, 0.44 ) }
    dend_18 { pt3dadd( 38.6414, -9.24181, 32.2923, 0.44 ) }
    dend_18 { pt3dadd( 38.8284, -9.28761, 33.0825, 0.44 ) }
    dend_18 { pt3dadd( 38.8993, -9.32745, 33.5891, 0.44 ) }
    dend_18 { pt3dadd( 38.9421, -9.37739, 34.0881, 0.44 ) }
    dend_18 { pt3dadd( 39.036, -9.49947, 35.3326, 0.44 ) }
    dend_18 { pt3dadd( 39.1912, -9.61521, 36.696, 0.59 ) }
    dend_18 { pt3dadd( 39.4246, -9.7153, 38.0756, 0.74 ) }
    dend_18 { pt3dadd( 39.7692, -9.79931, 39.551, 0.29 ) }
    dend_18 { pt3dadd( 40.0321, -9.83818, 40.3335, 0.74 ) }
    dend_18 { pt3dadd( 40.383, -9.87397, 41.117, 0.74 ) }
    dend_18 { pt3dadd( 41.0653, -9.93298, 42.3478, 0.29 ) }
    dend_18 { pt3dadd( 41.6292, -9.99272, 43.2433, 1.03 ) }
    dend_18 { pt3dadd( 42.1931, -10.0772, 44.0767, 1.11 ) }
    dend_18 { pt3dadd( 43.3385, -10.3344, 45.8401, 0.37 ) }
    dend_18 { pt3dadd( 44.1335, -10.6102, 47.2548, 0.52 ) }
    dend_18 { pt3dadd( 44.8035, -10.938, 48.7039, 0.29 ) }
    dend_18 { pt3dadd( 45.2082, -11.1708, 49.7321, 0.22 ) }
    dend_18 { pt3dadd( 45.519, -11.3544, 50.5892, 0.66 ) }
    dend_18 { pt3dadd( 46.1351, -11.69, 52.4136, 0.29 ) }
    dend_18 { pt3dadd( 46.5639, -11.8754, 53.6532, 0.74 ) }
    dend_18 { pt3dadd( 47.2334, -12.0912, 55.6028, 0.29 ) }
    dend_18 { pt3dadd( 47.7684, -12.2125, 57.1849, 0.15 ) }
    dend_18 { pt3dadd( 48.2834, -12.278, 58.7624, 0.22 ) }
    dend_18 { pt3dadd( 48.8735, -12.2895, 60.6672, 0.74 ) }
    dend_18 { pt3dadd( 49.5466, -12.2405, 63.049, 0.15 ) }
    dend_18 { pt3dadd( 50.0007, -12.1409, 64.8641, 0.29 ) }
    dend_18 { pt3dadd( 50.408, -11.976, 66.7749, 0.29 ) }
    dend_18 { pt3dadd( 50.6022, -11.8385, 67.9186, 0.29 ) }
    dend_18 { pt3dadd( 50.7718, -11.6327, 69.1902, 0.29 ) }
    dend_18 { pt3dadd( 50.8603, -11.4493, 70.128, 0.29 ) }
    dend_18 { pt3dadd( 50.9387, -11.1843, 71.3303, 0.29 ) }
    dend_18 { pt3dadd( 51.0521, -10.9966, 72.3508, 0.29 ) }
    dend_18 { pt3dadd( 51.3681, -10.8737, 73.9925, 0.29 ) }
    dend_18 { pt3dadd( 51.5363, -10.9138, 74.646, 0.29 ) }
    dend_18 { pt3dadd( 51.7482, -11.0456, 75.3909, 0.29 ) }
    dend_18 { pt3dadd( 52.0266, -11.2892, 76.5955, 0.29 ) }
    dend_18 { pt3dadd( 52.1411, -11.4307, 77.371, 0.66 ) }
    dend_18 { pt3dadd( 52.1959, -11.5622, 78.8975, 0.22 ) }
    dend_18 { pt3dadd( 52.1474, -11.5381, 80.1127, 0.22 ) }
    dend_18 { pt3dadd( 52.0881, -11.4693, 80.8234, 0.22 ) }
    dend_18 { pt3dadd( 51.8018, -11.1004, 83.1738, 0.59 ) }
    dend_18 { pt3dadd( 51.6338, -10.8821, 84.2881, 0.81 ) }
    dend_18 { pt3dadd( 51.3253, -10.3963, 86.3576, 0.22 ) }
    dend_18 { pt3dadd( 51.168, -10.0654, 87.5417, 0.22 ) }
    dend_18 { pt3dadd( 51.0829, -9.7567, 88.5707, 0.22 ) }
    dend_18 { pt3dadd( 51.0419, -9.24548, 90.202, 0.74 ) }
    dend_18 { pt3dadd( 51.0753, -8.92872, 91.1755, 0.29 ) }
    dend_18 { pt3dadd( 51.1937, -8.39263, 92.7724, 0.29 ) }
    dend_18 { pt3dadd( 51.2974, -8.02276, 93.7854, 0.29 ) }
    dend_18 { pt3dadd( 51.4615, -7.40691, 95.3149, 0.29 ) }
    dend_18 { pt3dadd( 51.6225, -6.75723, 96.7791, 0.29 ) }
    dend_18 { pt3dadd( 51.9031, -5.5619, 99.2948, 0.29 ) }
    dend_18 { pt3dadd( 52.0772, -4.76399, 100.939, 0.29 ) }
    dend_18 { pt3dadd( 52.2521, -3.98021, 102.571, 0.29 ) }
    dend_18 { pt3dadd( 52.4289, -3.31584, 103.994, 0.29 ) }
    dend_18 { pt3dadd( 52.6212, -2.63922, 105.433, 0.29 ) }
    dend_18 { pt3dadd( 52.8036, -2.07419, 106.634, 0.29 ) }
    dend_18 { pt3dadd( 53.002, -1.56671, 107.71, 0.29 ) }
    dend_18 { pt3dadd( 53.347, -0.803354, 109.331, 0.29 ) }
    dend_18 { pt3dadd( 53.537, -0.457437, 110.085, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 78/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 31.2707, -5.43514, 16.5094, 0.66 ) }
    dend_17 { pt3dadd( 31.771, -4.83928, 17.3009, 0.66 ) }
    dend_17 { pt3dadd( 32.4195, -4.02194, 18.2893, 0.22 ) }
    dend_17 { pt3dadd( 32.8177, -3.55242, 18.8477, 0.22 ) }
    dend_17 { pt3dadd( 32.9726, -3.38782, 19.039, 0.22 ) }
    dend_17 { pt3dadd( 33.3891, -2.98827, 19.468, 0.22 ) }
    dend_17 { pt3dadd( 33.7227, -2.66608, 19.7739, 0.22 ) }
    dend_17 { pt3dadd( 33.8955, -2.49423, 19.9016, 0.22 ) }
    dend_17 { pt3dadd( 34.3684, -2.04991, 20.2215, 0.22 ) }
    dend_17 { pt3dadd( 34.7418, -1.74556, 20.4527, 0.29 ) }
    dend_17 { pt3dadd( 35.4175, -1.3066, 20.8905, 0.52 ) }
    dend_17 { pt3dadd( 36.1164, -0.981254, 21.3766, 0.22 ) }
    dend_17 { pt3dadd( 36.682, -0.801723, 21.8049, 0.37 ) }
    dend_17 { pt3dadd( 37.4519, -0.643911, 22.4206, 0.37 ) }
    dend_17 { pt3dadd( 37.9893, -0.600183, 22.8638, 0.52 ) }
    dend_17 { pt3dadd( 38.802, -0.670241, 23.5234, 0.88 ) }
    dend_17 { pt3dadd( 39.7615, -0.902307, 24.3099, 0.22 ) }
    dend_17 { pt3dadd( 40.4206, -1.13799, 24.8339, 0.22 ) }
    dend_17 { pt3dadd( 40.8022, -1.2959, 25.1266, 0.52 ) }
    dend_17 { pt3dadd( 41.1647, -1.45163, 25.386, 0.52 ) }
    dend_17 { pt3dadd( 41.9642, -1.79462, 25.9522, 0.15 ) }
    dend_17 { pt3dadd( 42.669, -2.06503, 26.4435, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( 43.1227, -2.2358, 26.7332, 0.15 ) }
    dend_17 { pt3dadd( 43.4695, -2.34278, 26.9437, 0.66 ) }
    dend_17 { pt3dadd( 43.9445, -2.44713, 27.2367, 0.74 ) }
    dend_17 { pt3dadd( 45.1368, -2.54228, 27.9521, 0.15 ) }
    dend_17 { pt3dadd( 45.926, -2.48799, 28.4053, 0.15 ) }
    dend_17 { pt3dadd( 46.641, -2.33979, 28.7888, 0.15 ) }
    dend_17 { pt3dadd( 47.4261, -2.05949, 29.2283, 0.37 ) }
    dend_17 { pt3dadd( 48.0396, -1.73988, 29.6024, 0.37 ) }
    dend_17 { pt3dadd( 48.811, -1.16728, 30.1206, 0.15 ) }
    dend_17 { pt3dadd( 49.3411, -0.646418, 30.5887, 0.22 ) }
    dend_17 { pt3dadd( 49.8641, -0.0757052, 31.1848, 0.22 ) }
    dend_17 { pt3dadd( 50.1513, 0.256608, 31.6246, 0.22 ) }
    dend_17 { pt3dadd( 50.4446, 0.568218, 32.1247, 0.22 ) }
    dend_17 { pt3dadd( 50.7645, 0.858473, 32.7022, 0.37 ) }
    dend_17 { pt3dadd( 51.6493, 1.58405, 34.4105, 0.37 ) }
    dend_17 { pt3dadd( 52.1369, 1.9569, 35.3712, 0.52 ) }
    dend_17 { pt3dadd( 52.8132, 2.46249, 36.721, 0.66 ) }
    dend_17 { pt3dadd( 53.2236, 2.78027, 37.563, 0.15 ) }
    dend_17 { pt3dadd( 53.8606, 3.30289, 38.9463, 0.15 ) }
    dend_17 { pt3dadd( 54.4562, 3.79087, 40.2695, 0.22 ) }
    dend_17 { pt3dadd( 54.7549, 4.04122, 40.9095, 0.29 ) }
    dend_17 { pt3dadd( 55.1157, 4.36675, 41.7121, 0.29 ) }
    dend_17 { pt3dadd( 55.3345, 4.58117, 42.229, 0.29 ) }
    dend_17 { pt3dadd( 55.9107, 5.25171, 43.8643, 0.29 ) }
    dend_17 { pt3dadd( 56.2694, 5.67578, 44.9422, 0.29 ) }
    dend_17 { pt3dadd( 56.592, 6.0342, 45.9252, 0.29 ) }
    dend_17 { pt3dadd( 57.0437, 6.50335, 47.2794, 0.29 ) }
    dend_17 { pt3dadd( 57.3154, 6.75287, 48.0477, 0.29 ) }
    dend_17 { pt3dadd( 57.8174, 7.19664, 49.3933, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 29/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -28.8351, 45.9904, -2.87275, 0.44 ) }
    dend_11 { pt3dadd( -30.5772, 45.9226, -4.30864, 0.44 ) }
    dend_11 { pt3dadd( -31.3949, 45.8908, -4.98264, 0.37 ) }
    dend_11 { pt3dadd( -32.4837, 45.8484, -5.8801, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -28.8351, 45.9904, -2.87275, 0.66 ) }
    dend_10 { pt3dadd( -28.9718, 46.2798, -1.83326, 0.66 ) }
    dend_10 { pt3dadd( -29.2986, 46.7753, -0.205744, 0.66 ) }
    dend_10 { pt3dadd( -29.7768, 47.2386, 1.40828, 0.66 ) }
    dend_10 { pt3dadd( -30.3964, 47.681, 2.977, 0.66 ) }
    dend_10 { pt3dadd( -31.2238, 48.1871, 4.72387, 0.59 ) }
    dend_10 { pt3dadd( -31.7736, 48.4873, 5.70731, 0.59 ) }
    dend_10 { pt3dadd( -32.5098, 48.7915, 6.5795, 0.29 ) }
    dend_10 { pt3dadd( -33.6731, 49.1082, 7.40898, 0.22 ) }
    dend_10 { pt3dadd( -34.3938, 49.2271, 7.70204, 0.37 ) }
    dend_10 { pt3dadd( -34.7796, 49.2575, 7.80811, 0.37 ) }
    dend_10 { pt3dadd( -35.5365, 49.2775, 7.97341, 0.37 ) }
    dend_10 { pt3dadd( -36.9495, 49.2729, 8.32522, 0.22 ) }
    dend_10 { pt3dadd( -38.4507, 49.2818, 8.71723, 0.22 ) }
    dend_10 { pt3dadd( -39.6396, 49.311, 9.05548, 0.22 ) }
    dend_10 { pt3dadd( -40.4826, 49.3316, 9.32655, 0.66 ) }
    dend_10 { pt3dadd( -41.3858, 49.3808, 9.664, 0.66 ) }
    dend_10 { pt3dadd( -42.1598, 49.4696, 9.99561, 0.15 ) }
    dend_10 { pt3dadd( -43.4196, 49.6963, 10.5741, 0.15 ) }
    dend_10 { pt3dadd( -44.4857, 49.9517, 11.0689, 0.15 ) }
    dend_10 { pt3dadd( -45.3002, 50.1699, 11.4787, 0.15 ) }
    dend_10 { pt3dadd( -46.8718, 50.6266, 12.2588, 0.15 ) }
    dend_10 { pt3dadd( -47.9927, 50.9784, 12.8377, 0.29 ) }
    dend_10 { pt3dadd( -49.1649, 51.3777, 13.4493, 0.15 ) }
    dend_10 { pt3dadd( -50.0361, 51.6813, 13.8821, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.1731, 30.2031, -32.3137, 0.22 ) }
    dend_30 { pt3dadd( 25.8851, 31.6182, -32.6463, 0.22 ) }
    dend_30 { pt3dadd( 25.6453, 32.7964, -32.9231, 0.29 ) }
    dend_30 { pt3dadd( 25.5688, 33.172, -33.0114, 0.29 ) }
    dend_30 { pt3dadd( 25.3866, 34.0671, -33.2217, 0.15 ) }
    dend_30 { pt3dadd( 25.0842, 35.5523, -33.5707, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 26.1731, 30.2031, -32.3137, 0.29 ) }
    dend_27 { pt3dadd( 26.8952, 29.9374, -32.9135, 0.29 ) }
    dend_27 { pt3dadd( 27.0384, 29.8847, -33.0324, 0.29 ) }
    dend_27 { pt3dadd( 27.6407, 29.663, -33.5327, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.6407, 29.663, -33.5327, 0.22 ) }
    dend_29 { pt3dadd( 27.7305, 29.9985, -33.6925, 0.22 ) }
    dend_29 { pt3dadd( 27.8916, 30.9352, -33.9511, 0.22 ) }
    dend_29 { pt3dadd( 27.917, 31.1779, -33.9939, 0.22 ) }
    dend_29 { pt3dadd( 27.9193, 31.7082, -34.0005, 0.22 ) }
    dend_29 { pt3dadd( 27.8367, 32.3949, -33.8815, 0.15 ) }
    dend_29 { pt3dadd( 27.6407, 33.1827, -33.6112, 0.15 ) }
    dend_29 { pt3dadd( 27.5177, 33.4593, -33.438, 0.15 ) }
    dend_29 { pt3dadd( 27.3602, 33.7731, -33.211, 0.59 ) }
    dend_29 { pt3dadd( 26.9443, 34.509, -32.6197, 0.88 ) }
    dend_29 { pt3dadd( 26.4418, 35.2695, -31.928, 0.88 ) }
    dend_29 { pt3dadd( 25.8736, 36.0112, -31.1596, 0.52 ) }
    dend_29 { pt3dadd( 25.0473, 36.9813, -30.048, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 27.6407, 29.663, -33.5327, 0.22 ) }
    dend_28 { pt3dadd( 28.2802, 29.5188, -33.2729, 0.22 ) }
    dend_28 { pt3dadd( 29.3083, 29.2007, -33.5186, 0.22 ) }
    dend_28 { pt3dadd( 29.8964, 29.0029, -33.7756, 0.22 ) }
    dend_28 { pt3dadd( 30.5244, 28.7986, -34.0885, 0.22 ) }
    dend_28 { pt3dadd( 30.9308, 28.6903, -34.3112, 0.29 ) }
    dend_28 { pt3dadd( 31.9598, 28.4162, -34.875, 0.29 ) }
    dend_28 { pt3dadd( 33.5172, 27.9843, -35.8866, 0.15 ) }
    dend_28 { pt3dadd( 34.2281, 27.7817, -36.4119, 0.15 ) }
    dend_28 { pt3dadd( 34.8629, 27.6034, -36.9361, 0.22 ) }
    dend_28 { pt3dadd( 35.7958, 27.3687, -37.7677, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, axon_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, axon_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_5 = new SectionList()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_47 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_65 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_64 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_60 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_54 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_18 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_17 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_12 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_5 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_50 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_63 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_25 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_24 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_27 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_30 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_52 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_29 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_28 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_21 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_10 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_62 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_44 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_20 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_43 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 3
    dend_49 nseg = 3
    dend_4 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_47 nseg = 5
    dend_46 nseg = 5
    dend_37 nseg = 3
    dend_14 nseg = 3
    dend_6 nseg = 3
    dend_65 nseg = 9
    dend_64 nseg = 5
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_54 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_NGCDA_d8569cb244_0_0


