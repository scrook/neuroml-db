// Cell: dNAC222_L6_SBC_194972ee43_0_0
/*
{
  "id" : "dNAC222_L6_SBC_194972ee43_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.22322, 11.4844, 0.81", "1.37271, 4.24935, 11.4844, 0.81", "0.81726, 5.38504, 11.4844, 0.81", "-0.00271414, 7.06159, 11.4844, 0.81", "-0.644941, 8.3747, 11.4844, 0.81", "-1.4192, 9.95779, 11.4844, 1.4", "-1.61725, 10.3627, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -10.1853, 0.224411, 4.05", "-1.37542, -10.1853, 0.224411, 4.05", "-1.71236, -11.3728, 0.231177, 3.61", "-2.17943, -13.1097, 0.194825, 2.87", "-2.57447, -14.7248, 0.0785996, 2.36", "-2.92045, -16.2963, -0.0405377, 2.36", "-3.24999, -17.948, -0.150121, 2.65", "-3.51827, -19.3588, -0.252001, 2.65", "-3.74072, -20.6486, -0.359468, 2.8", "-4.03617, -22.6539, -0.551446, 2.43", "-4.26003, -24.4337, -0.744961, 2.28", "-4.45777, -26.3437, -0.974561, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.8777, -2.89559, 3.17", "-0.565422, 10.8777, -2.89559, 3.17", "-2.19276, 12.6228, -3.01067, 2.8", "-3.77887, 14.2441, -3.1165, 2.8", "-5.2115, 15.6779, -3.20594, 2.8", "-7.04073, 17.5288, -3.30227, 2.8", "-8.43523, 19.0215, -3.36677, 2.58", "-9.40905, 20.1183, -3.40457, 2.58", "-10.2317, 21.114, -3.42885, 2.36", "-10.9713, 22.1758, -3.43971, 1.92", "-11.8925, 24.0252, -3.44202, 1.92", "-12.4039, 25.8857, -3.42754, 1.92", "-12.591, 27.535, -3.41775, 1.92", "-12.5622, 28.9509, -3.41435, 2.21", "-12.3574, 30.4563, -3.49363, 2.21", "-12.0652, 31.7079, -3.62194, 1.84", "-11.5033, 33.523, -3.89043, 1.84", "-11.1054, 34.6928, -4.09795, 1.84", "-10.6509, 36.0048, -4.38784, 1.84", "-9.82658, 38.5459, -5.05837, 1.69", "-9.53625, 39.5899, -5.37102, 1.69", "-9.17311, 41.1578, -5.96093, 1.69", "-8.92594, 42.607, -6.61105, 1.84", "-8.77498, 43.8432, -7.22281, 1.99", "-8.69991, 45.0463, -7.8484, 1.99", "-8.65378, 46.4043, -8.56271, 1.99", "-8.63523, 48.4245, -9.74791, 2.14", "-8.65383, 49.49, -10.4591, 2.14", "-8.69561, 50.4414, -11.1575, 2.14", "-8.7593, 51.3887, -11.8538, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.553253", "-0.922998, -25.8985, 0.0443568, 0.553253", "-1.50121, -40.8873, 0.0443568, 0.553253" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.61725, 10.3627, 11.4844, 0.81", "-1.17497, 12.5913, 10.3197, 0.81", "-0.976932, 13.6997, 9.80927, 0.81", "-0.858021, 14.56, 9.45201, 1.03", "-0.781833, 15.3609, 9.14479, 1.03", "-0.729693, 16.3574, 8.78543, 0.59", "-0.721072, 17.348, 8.45087, 0.37", "-0.788772, 18.2643, 8.24824, 0.37", "-0.878295, 19.0793, 8.06616, 0.59", "-0.955646, 19.7455, 7.91195, 0.59", "-1.04227, 20.3606, 7.76041, 0.66", "-1.15471, 21.2052, 7.49982, 0.59", "-1.24684, 22.0315, 7.1527, 0.44", "-1.28391, 23.0613, 6.56772, 0.44", "-1.26367, 23.5617, 6.24103, 0.96", "-1.20126, 24.2584, 5.76659, 1.33", "-1.1155, 24.8933, 5.3373, 1.55", "-0.919572, 26.0079, 4.60732, 1.03", "-0.584501, 27.6099, 3.67659, 0.52", "-0.473732, 28.0372, 3.47326, 0.88", "-0.21097, 28.8893, 3.14836, 0.52", "0.051801, 29.6079, 2.95772, 0.52", "0.297328, 30.2141, 2.86249, 0.52", "0.754351, 31.2732, 2.76483, 0.88", "1.22971, 32.3723, 2.67905, 0.74", "1.48297, 33.0217, 2.6033, 0.59", "1.93171, 34.4251, 2.36236, 0.59", "2.11579, 35.3372, 2.15372, 1.25", "2.17923, 36.3243, 1.85952, 1.4", "2.09271, 37.0636, 1.59035, 1.18", "1.88462, 37.8408, 1.28925, 0.88", "1.55833, 38.7537, 0.92326, 0.66", "1.27737, 39.3928, 0.668867, 0.66", "1.06501, 39.8767, 0.498621, 0.66", "0.780535, 40.6926, 0.306136, 0.59", "0.664126, 41.3754, 0.238454, 0.59", "0.684803, 42.1525, 0.275097, 0.74", "0.733693, 42.5034, 0.330874, 0.88", "0.812773, 42.9717, 0.438419, 0.88", "0.906195, 43.5581, 0.599656, 1.03", "0.980414, 44.2636, 0.801313, 0.66", "1.02392, 45.3643, 1.11527, 0.44", "1.02707, 46.2335, 1.36696, 0.44", "1.05938, 47.0597, 1.55038, 0.59", "1.10632, 47.5049, 1.61251, 0.96", "1.31594, 48.4944, 1.68641, 1.18", "1.50061, 48.9948, 1.69791, 1.18", "1.91888, 49.7652, 1.68238, 0.74", "2.89545, 51.2223, 1.66671, 0.37", "3.41111, 51.9382, 1.66481, 0.29", "3.94294, 52.6741, 1.67622, 0.29", "4.49161, 53.4492, 1.69767, 0.37", "4.85529, 54.0507, 1.72028, 0.37", "5.27234, 55.0029, 1.7826, 0.29", "5.44788, 55.7293, 1.87499, 0.37", "5.51727, 56.3172, 1.95267, 0.74", "5.53269, 56.7319, 2.00186, 0.74", "5.5417, 57.2935, 2.04707, 0.44", "5.61169, 58.1786, 2.10117, 0.66", "5.75401, 59.0223, 2.10677, 1.25", "5.86585, 59.5288, 2.09486, 1.47", "5.99672, 60.0923, 2.06431, 1.47", "6.22587, 61.097, 1.97973, 1.11", "6.52322, 62.4076, 1.83495, 0.29", "6.73329, 63.3616, 1.71092, 0.66", "6.84649, 63.8984, 1.62706, 0.52", "7.01496, 64.7657, 1.45167, 0.52", "7.17798, 65.8239, 1.21519, 0.66", "7.3176, 67.0566, 0.944904, 0.88", "7.35777, 67.663, 0.806446, 1.47", "7.40153, 68.4303, 0.652811, 1.47", "7.45729, 69.3292, 0.486764, 0.74", "7.49247, 70.1854, 0.31517, 0.74", "7.47965, 70.9353, 0.157639, 0.74", "7.40967, 71.748, -0.015164, 0.37", "7.29102, 72.6977, -0.200578, 0.37", "7.18251, 73.4589, -0.333418, 0.29", "7.09171, 74.1789, -0.452768, 0.29", "7.01098, 75.069, -0.620796, 0.29", "6.98859, 75.6037, -0.727443, 0.29", "7.05673, 76.4437, -0.928879, 0.88", "7.17023, 76.9864, -1.07232, 1.47", "7.35224, 77.5129, -1.2086, 1.47", "7.54766, 77.9549, -1.30492, 1.47", "7.87846, 78.5758, -1.42148, 1.18", "8.56156, 79.7473, -1.59498, 0.37", "8.93854, 80.379, -1.64961, 0.37", "9.27412, 81.0227, -1.65915, 0.37", "9.47452, 81.4929, -1.64324, 0.96", "9.67853, 82.0958, -1.59829, 1.03", "9.76203, 82.4455, -1.55088, 1.03", "9.9275, 83.412, -1.39166, 0.37", "10.0838, 84.3715, -1.28996, 0.37", "10.1798, 84.9197, -1.2591, 0.29", "10.3313, 85.535, -1.32003, 0.29", "10.6066, 86.4419, -1.50075, 0.29", "10.859, 87.0843, -1.68019, 0.29", "11.2515, 87.9507, -1.97529, 1.18", "11.4734, 88.3782, -2.12787, 1.47", "12.5454, 90.191, -2.8346, 0.22", "12.6705, 90.383, -2.91737, 0.44", "13.1937, 91.1128, -3.24727, 0.66", "13.6729, 91.7531, -3.51371, 0.22", "14.1424, 92.3677, -3.74609, 0.22", "14.9707, 93.4566, -4.13388, 0.88", "15.4016, 94.0321, -4.31175, 0.88", "15.8043, 94.5872, -4.50246, 0.88", "16.4799, 95.5536, -4.8904, 0.37", "16.9421, 96.2466, -5.22485, 0.37", "17.1181, 96.5567, -5.3944, 0.88", "17.3173, 96.9965, -5.63642, 0.88", "17.593, 97.6957, -6.06205, 0.52", "17.8022, 98.3093, -6.47391, 0.29", "18.0177, 98.9936, -6.96281, 0.29", "18.2482, 99.7761, -7.50434, 1.11", "18.4306, 100.281, -7.84695, 1.33", "18.6739, 100.866, -8.24775, 1.55", "18.9336, 101.435, -8.64132, 1.55", "19.3345, 102.257, -9.22088, 0.52", "19.7095, 103.031, -9.76435, 0.44", "20.2771, 104.304, -10.6323, 1.47", "20.5313, 104.923, -11.0223, 1.47", "21.0687, 106.366, -11.8288, 0.44", "21.3451, 107.148, -12.24, 0.44", "21.6929, 108.136, -12.7367, 0.44", "22.0335, 109.102, -13.1962, 0.37", "22.3331, 110.021, -13.5825, 0.37", "22.8415, 111.503, -14.0729, 1.47", "23.0557, 112.065, -14.1885, 1.77", "23.638, 113.477, -14.3395, 0.29", "23.9329, 114.147, -14.3577, 1.03", "24.1059, 114.533, -14.3353, 1.03", "24.6831, 115.895, -14.1382, 0.66", "25.3216, 117.56, -13.7425, 0.29", "25.6037, 118.408, -13.4824, 1.03", "25.7014, 118.764, -13.3497, 1.25", "25.916, 119.703, -12.9977, 0.22", "26.0005, 120.161, -12.8427, 0.44", "26.1181, 121.032, -12.5913, 0.22", "26.1717, 121.726, -12.3842, 0.52", "26.204, 122.242, -12.2295, 0.52", "26.3087, 123.533, -11.8265, 0.22", "26.3861, 124.224, -11.6009, 0.29", "26.484, 124.921, -11.3661, 0.29", "26.7065, 126.312, -10.8984, 1.11", "26.7985, 126.772, -10.7534, 1.33", "27.0057, 127.614, -10.4881, 0.29", "27.2511, 128.434, -10.22, 0.29", "27.3642, 128.756, -10.1156, 0.44", "27.7123, 129.64, -9.85041, 0.22", "28.0884, 130.544, -9.61319, 0.66", "28.1963, 130.827, -9.54579, 1.18", "28.3311, 131.244, -9.46351, 1.18", "28.4364, 131.577, -9.3998, 0.74", "28.8393, 132.814, -9.161, 0.22", "29.0041, 133.297, -9.06937, 0.66", "29.2495, 134.142, -8.91106, 0.22", "29.3522, 134.566, -8.83635, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-1.61725, 10.3627, 11.4844, 0.44", "-0.45941, 11.399, 11.0029, 0.44", "0.152085, 11.9906, 10.7338, 0.44", "0.881261, 12.7131, 10.421, 0.96", "1.37055, 13.1774, 10.2296, 0.96", "2.66891, 14.465, 9.82241, 0.52", "3.11018, 14.9503, 9.72522, 0.52", "3.48191, 15.4164, 9.64577, 0.66", "3.87502, 16.104, 9.63039, 0.37", "4.08705, 16.6465, 9.76031, 0.37", "4.49961, 17.7316, 10.1938, 0.37", "4.90612, 18.7263, 10.6798, 0.59", "5.16593, 19.2899, 10.9436, 0.81", "5.43583, 19.8407, 11.1912, 0.81", "6.12434, 21.2903, 11.8493, 0.29", "6.65111, 22.3647, 12.2789, 0.29", "7.10611, 23.2098, 12.5884, 0.29", "7.52282, 23.8881, 12.827, 0.29", "7.92299, 24.4961, 13.0447, 0.88", "8.44211, 25.2734, 13.3017, 0.88", "8.77841, 25.9507, 13.4816, 0.52", "8.97495, 26.7284, 13.7396, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.45777, -26.3437, -0.974561, 1.77", "-4.13774, -27.7224, -1.03098, 1.77", "-3.9518, -28.4104, -1.01736, 1.77", "-3.70277, -29.1575, -1.18037, 1.77", "-3.35021, -29.9599, -1.52575, 1.77", "-2.94328, -30.8861, -1.92439, 1.92", "-2.63175, -31.5952, -2.22958, 2.14", "-2.15165, -32.4901, -2.68038, 2.36", "-0.700553, -34.8989, -4.31805, 1.77", "-0.149973, -35.6812, -5.08762, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.45777, -26.3437, -0.974561, 0.81", "-3.59751, -27.5658, -0.370726, 0.81", "-2.12734, -29.2449, 0.384541, 0.66", "-1.4886, -29.8186, 0.628164, 0.88", "-0.412889, -30.6353, 0.930837, 0.59", "0.700512, -31.3813, 1.12234, 0.88", "1.93513, -32.1306, 1.20804, 1.18", "2.9698, -32.654, 1.06782, 0.81", "4.2072, -33.1474, 0.746468, 0.66", "5.06531, -33.4537, 0.48704, 0.59", "6.2525, -33.8549, 0.0920687, 0.88", "7.31379, -34.2206, -0.28995, 0.74", "8.42182, -34.6571, -0.715723, 0.59", "9.56514, -35.163, -1.17066, 0.74", "10.5761, -35.66, -1.56046, 0.74", "11.188, -35.99, -1.7772, 0.88", "11.8601, -36.4009, -1.98735, 0.88", "12.7121, -36.9985, -2.23971, 0.66", "13.5498, -37.7186, -2.51239, 0.66", "14.0274, -38.2735, -2.71004, 0.52", "14.5197, -39.0662, -2.95493, 0.52", "14.7675, -39.6717, -3.07956, 0.96", "14.8974, -40.1033, -3.12333, 1.18", "15.1511, -41.0616, -3.15242, 1.03", "15.305, -41.5754, -3.10405, 1.18", "15.5866, -42.2663, -2.9507, 1.03", "16.1732, -43.3115, -2.57624, 0.37", "16.7776, -44.1511, -2.15762, 0.74", "17.1503, -44.6055, -1.86192, 0.88", "18.008, -45.5895, -1.10576, 0.59", "18.4518, -46.1071, -0.688513, 0.59", "18.9644, -46.7449, -0.179636, 0.88", "19.5653, -47.5827, 0.443856, 0.74", "20.0686, -48.4024, 0.99608, 1.25", "20.3841, -48.9493, 1.30877, 1.25", "20.7623, -49.6141, 1.59976, 0.81", "21.141, -50.305, 1.84609, 0.59", "21.5887, -51.1162, 2.0721, 0.59", "21.9889, -51.7881, 2.18474, 0.59", "22.7069, -52.8285, 2.29221, 0.44", "23.2111, -53.4435, 2.35642, 0.52", "23.7573, -54.0081, 2.41683, 0.44", "24.4286, -54.6322, 2.48321, 0.44", "24.9671, -55.1258, 2.53647, 0.52", "25.6307, -55.7773, 2.62098, 0.66", "26.2239, -56.4101, 2.68838, 0.66", "26.9758, -57.3116, 2.78836, 0.52", "27.3162, -57.7509, 2.86959, 0.81", "27.7056, -58.3311, 3.01583, 0.81", "28.11, -59.0284, 3.21872, 0.66", "28.6886, -60.1729, 3.55272, 0.52", "29.1911, -61.2906, 3.88463, 0.52", "29.6227, -62.3309, 4.21813, 1.18", "29.8404, -62.8506, 4.39668, 1.4", "30.2171, -63.6857, 4.70873, 1.25", "30.6789, -64.6412, 5.12895, 1.03", "30.8447, -64.9567, 5.30129, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.7593, 51.3887, -11.8538, 1.33", "-9.63373, 52.8959, -12.0036, 1.33", "-10.5053, 54.575, -12.1173, 1.33", "-11.3121, 56.2595, -12.1216, 1.33", "-12.1647, 58.2176, -12.0047, 1.33", "-13.0257, 60.4185, -11.7804, 1.47", "-13.5817, 62.0397, -11.5636, 1.69", "-13.9228, 63.4129, -11.3086, 1.77", "-14.2084, 64.9905, -10.9366, 1.99", "-14.4208, 66.576, -10.5398, 2.14", "-14.6344, 68.4841, -10.0586, 1.84", "-14.9067, 70.7315, -9.52872, 1.84", "-15.2097, 72.6838, -9.14927, 1.84", "-15.4678, 74.011, -8.97792, 1.92", "-15.8518, 75.6666, -8.86687, 1.92", "-16.2624, 77.2568, -8.80591, 1.92", "-16.736, 78.8712, -8.78128, 1.62", "-17.4061, 80.8295, -8.81593, 1.62", "-18.1078, 82.6501, -8.90007, 1.77", "-18.7548, 84.2364, -9.01607, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.7593, 51.3887, -11.8538, 0.66", "-7.60451, 53.5579, -12.1273, 0.66", "-6.8717, 54.7215, -12.1789, 0.66", "-6.57598, 55.142, -12.1587, 0.96", "-5.99538, 55.9311, -12.0452, 0.96", "-5.55216, 56.5686, -11.8491, 0.74", "-5.2321, 57.0791, -11.6597, 0.66", "-4.71093, 57.8858, -11.2311, 0.66", "-4.26281, 58.5642, -10.8711, 0.66", "-3.82008, 59.2052, -10.5622, 0.66", "-2.59615, 60.8074, -9.95109, 0.88", "-1.72205, 61.8264, -9.68474, 0.29", "-0.9714, 62.5744, -9.62487, 0.29", "0.105997, 63.3482, -9.87139, 1.18", "0.627758, 63.6247, -10.1068, 1.62", "1.94496, 64.1852, -10.8594, 0.81", "2.73087, 64.4631, -11.3714, 0.81", "3.49422, 64.6788, -11.8964, 1.03", "4.65924, 64.9852, -12.7528, 0.44", "5.64504, 65.2493, -13.5188, 0.44", "6.27551, 65.4514, -13.9987, 1.18", "6.76899, 65.662, -14.332, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.149973, -35.6812, -5.08762, 1.03", "-0.695849, -37.1211, -7.51513, 1.03", "-1.41538, -38.2295, -9.22445, 0.81", "-1.83363, -38.7133, -9.94665, 0.81", "-2.37536, -39.1925, -10.7075, 0.81", "-2.86281, -39.5412, -11.3226, 1.11", "-3.42239, -39.8496, -11.941, 1.11", "-4.26571, -40.0624, -12.5134, 1.4", "-4.8633, -40.1241, -12.8452, 1.4", "-5.86837, -40.0973, -13.4699, 1.11", "-6.38607, -39.9707, -13.8433, 1.33", "-7.29008, -39.5094, -14.5938, 1.03", "-7.77821, -39.0992, -15.2484, 0.81", "-8.06122, -38.8193, -15.734, 0.81", "-8.68596, -38.2488, -16.9514, 0.81", "-9.31276, -37.7806, -18.3008, 1.03", "-9.79045, -37.5382, -19.3671, 1.33", "-11.3504, -37.2578, -22.9506, 1.03", "-11.9019, -37.3681, -24.117, 1.03", "-12.6559, -37.7597, -25.4513, 1.33", "-13.298, -38.2434, -26.3567, 1.33", "-13.8657, -38.755, -27.0022, 1.47", "-14.8616, -39.6646, -27.8141, 1.11", "-15.7314, -40.3843, -28.2489, 0.88", "-16.3831, -40.8225, -28.5328, 1.55", "-17.0898, -41.1607, -28.8219, 1.84", "-17.856, -41.3697, -29.1374, 1.99", "-19.1864, -41.4304, -29.6694, 1.18", "-20.0776, -41.2536, -30.0041, 0.88", "-20.9782, -40.8618, -30.3399, 1.25", "-21.6631, -40.3609, -30.6028, 1.47", "-22.4259, -39.5762, -31.0142, 1.18", "-23.1346, -38.7657, -31.8623, 0.96", "-23.3147, -38.5763, -32.3371, 1.18", "-23.4635, -38.4692, -32.8544, 1.18", "-23.7921, -38.3341, -33.9518, 0.74", "-24.4979, -38.2128, -36.0875, 0.74", "-25.7335, -38.1726, -40.0213, 1.47", "-26.4531, -38.2339, -42.3896, 1.99", "-27.0852, -38.3571, -44.4764, 1.47", "-27.4548, -38.474, -45.6904, 1.62", "-27.9933, -38.7226, -47.4452, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.149973, -35.6812, -5.08762, 0.88", "0.624247, -36.2517, -5.91005, 0.88", "1.16248, -36.7831, -6.62743, 1.03", "1.60887, -37.4328, -7.38069, 1.03", "1.90544, -38.1718, -8.10595, 0.88", "2.10834, -39.0717, -8.87034, 0.81", "2.20045, -40.1847, -9.75814, 1.03", "2.07559, -40.828, -10.2106, 1.33", "1.62459, -41.7711, -10.8959, 0.88", "0.911377, -42.7498, -11.6481, 0.66", "0.460285, -43.2419, -12.1071, 0.96", "-0.0888688, -43.7822, -12.8137, 0.66", "-0.487828, -44.193, -13.5606, 0.74", "-1.02605, -44.9357, -15.4347, 0.88", "-1.06293, -45.1582, -16.1719, 1.11", "-0.880205, -45.7278, -18.2244, 0.88", "-0.600282, -46.3881, -20.4765, 0.74", "-0.3413, -46.9441, -22.0744, 0.74", "-0.127749, -47.4405, -23.3006, 0.74", "0.0669051, -47.9591, -24.3839, 0.66", "0.385669, -49.0404, -26.3265, 0.96", "0.596332, -49.9397, -27.638, 1.25", "0.791343, -50.8916, -28.8316, 0.81", "1.02258, -52.0508, -30.1959, 0.74", "1.22063, -52.762, -31.0061, 0.88", "1.66306, -53.6571, -31.9418, 0.59", "2.41447, -54.4959, -32.7202, 0.59", "3.23039, -55.1394, -33.2682, 1.18", "3.68145, -55.4051, -33.4407, 1.62", "4.19873, -55.6543, -33.5439, 1.84", "5.64499, -56.2437, -33.7112, 1.18", "6.749, -56.6379, -33.8796, 0.81", "7.19939, -56.7896, -33.9899, 0.96", "8.31825, -57.1889, -34.4896, 0.59", "8.68688, -57.3423, -34.7403, 0.66", "9.32575, -57.6658, -35.3201, 0.52", "10.4982, -58.4817, -36.8286, 1.18", "10.906, -58.8723, -37.4859, 1.25", "11.5249, -59.6503, -38.9248, 0.88", "11.7606, -59.9874, -39.5954, 0.88", "12.0756, -60.4314, -40.518, 0.66", "12.6632, -61.1587, -42.2786, 1.47", "12.9359, -61.4305, -43.0824, 1.69", "14.2314, -62.4435, -46.8291, 0.81", "14.5282, -62.6221, -47.6309, 0.81", "14.9194, -62.8025, -48.5888, 0.66", "15.9137, -63.1209, -50.6794, 1.03", "16.2922, -63.197, -51.3016, 1.03", "16.8582, -63.3197, -52.0108, 1.33", "17.9342, -63.6544, -52.8322, 0.88", "18.772, -64.0283, -53.3409, 0.88", "19.4727, -64.4384, -53.6321, 0.74", "19.7681, -64.6347, -53.7061, 0.88", "20.6702, -65.2503, -53.8745, 0.44", "21.4485, -65.7624, -53.979, 1.77", "21.8812, -66.048, -54.0142, 2.06", "22.3928, -66.454, -54.0218, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-18.7548, 84.2364, -9.01607, 1.25", "-17.8281, 86.2782, -10.5687, 1.25", "-17.4239, 87.1378, -11.0997, 1.4", "-16.7897, 88.6884, -11.8723, 1.11", "-16.0902, 90.7096, -12.7048, 1.33", "-15.6762, 92.1436, -13.2103, 1.25", "-15.1736, 94.1321, -13.8452, 1.25", "-14.6414, 96.3795, -14.4193, 1.47", "-14.153, 98.5334, -14.8862, 1.69", "-13.7844, 100.443, -15.1694, 1.84", "-13.5651, 102.1, -15.3087, 2.14", "-13.4922, 103.735, -15.4158, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.7548, 84.2364, -9.01607, 0.96", "-19.5878, 85.5803, -8.58696, 0.96", "-20.1927, 86.4672, -8.4305, 0.81", "-21.3854, 88.0062, -8.35719, 0.66", "-22.0781, 88.7697, -8.42989, 0.59", "-22.9464, 89.6041, -8.60841, 0.59", "-24.0791, 90.5583, -8.94019, 0.74", "-25.0467, 91.1786, -9.38221, 0.74", "-25.8502, 91.5999, -9.84617, 1.11", "-26.8302, 92.0432, -10.485, 0.74", "-27.5217, 92.3561, -10.9438, 1.25", "-28.5451, 92.8874, -11.623, 0.96", "-29.6469, 93.6268, -12.2744, 0.44", "-30.036, 94.0047, -12.5001, 0.44", "-30.3976, 94.5438, -12.716, 0.74", "-30.7482, 95.3604, -12.919, 0.74", "-31.0604, 96.3133, -12.976, 0.74", "-31.3803, 97.4549, -12.7726, 0.59", "-31.602, 98.2944, -12.4357, 0.59", "-31.8138, 99.1364, -11.926, 0.88", "-31.9815, 99.8977, -11.3908, 0.66", "-32.4147, 101.681, -9.84136, 0.66", "-32.7674, 102.941, -8.61084, 0.96", "-32.9744, 103.592, -7.94076, 0.66", "-33.2774, 104.404, -7.07608, 0.52", "-33.6904, 105.353, -6.07652, 0.88", "-34.3294, 106.7, -4.82611, 0.59", "-34.6829, 107.404, -4.33436, 0.59", "-35.045, 108.039, -3.97542, 0.59", "-35.7538, 109.106, -3.4344, 0.59", "-36.4478, 110.029, -2.99558, 1.11", "-37.3903, 111.192, -2.46639, 0.59", "-37.9824, 111.914, -2.20983, 0.59", "-38.6986, 112.745, -1.91878, 0.81", "-39.4168, 113.569, -1.65488, 0.81", "-40.17, 114.429, -1.44424, 0.96", "-40.8479, 115.175, -1.2891, 1.03", "-41.5251, 115.842, -1.16194, 1.33", "-42.2403, 116.489, -1.01144, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.76899, 65.662, -14.332, 0.88", "7.82487, 65.9397, -14.8102, 0.88", "8.67563, 66.0799, -15.2008, 0.66", "9.31062, 66.1415, -15.496, 1.03", "10.0309, 66.2121, -15.8602, 1.18", "10.6477, 66.3051, -16.212, 1.18", "11.113, 66.408, -16.5088, 0.81", "11.6782, 66.5749, -16.9394, 0.44", "12.2872, 66.855, -17.4848, 0.44", "12.9413, 67.3526, -18.1603, 0.44", "13.5309, 67.9913, -18.8167, 0.59", "13.933, 68.5025, -19.2626, 0.81", "14.2513, 68.9113, -19.5959, 0.81", "14.6572, 69.4151, -19.9845, 0.66", "15.1837, 69.9733, -20.419, 0.66", "15.8654, 70.5071, -20.8704, 0.66", "16.4899, 70.8283, -21.2153, 0.88", "17.1769, 71.0543, -21.5616, 0.52", "17.6825, 71.1438, -21.8083, 0.96", "18.3106, 71.1475, -22.1163, 0.96", "18.7979, 71.0585, -22.3564, 1.11", "19.4112, 70.8074, -22.6836, 1.18", "19.8478, 70.531, -22.9319, 1.18", "20.3452, 70.0824, -23.2617, 0.66", "20.9892, 69.2989, -23.7814, 0.96", "21.5528, 68.3678, -24.3497, 0.44", "22.1158, 67.1597, -25.106, 0.37", "22.3882, 66.4742, -25.5666, 1.18", "22.6656, 65.7202, -26.12, 1.33", "22.862, 65.1496, -26.5809, 1.33", "23.1402, 64.1851, -27.4758, 0.59", "23.3318, 63.2744, -28.4343, 0.37", "23.4122, 62.6513, -29.1416, 0.37", "23.4183, 62.1641, -29.7408, 0.37", "23.3844, 61.6533, -30.3914, 0.37", "23.249, 60.829, -31.4718, 0.52", "23.084, 60.1503, -32.375, 0.52", "22.9092, 59.5101, -33.1685, 0.52", "22.5878, 58.1392, -34.6411, 0.96", "22.4453, 57.2304, -35.5032, 1.47", "22.4138, 56.4701, -36.1667, 1.69", "22.4673, 55.9461, -36.5919, 1.92", "22.6179, 55.2933, -37.1023, 1.92", "23.1407, 53.8245, -38.1927, 0.74", "23.6654, 52.7285, -38.9217, 0.37", "24.069, 52.0468, -39.3722, 0.88", "24.3778, 51.639, -39.6577, 1.11", "24.6695, 51.3153, -39.9089, 1.11", "25.0808, 50.9137, -40.2465, 1.33", "25.3336, 50.682, -40.4455, 1.33", "25.7662, 50.1949, -40.757, 0.81", "26.0868, 49.5643, -41.0288, 0.44", "26.3166, 48.803, -41.3283, 0.37", "26.5178, 47.8583, -41.7285, 0.37", "26.6178, 47.2737, -42.0049, 1.18", "26.7165, 46.6212, -42.3459, 1.4", "26.9036, 45.2619, -43.177, 0.29", "27.1114, 44.0603, -44.1147, 0.66", "27.3305, 43.1773, -44.9968, 1.11", "27.4949, 42.6148, -45.6544, 1.62", "27.5672, 42.3579, -45.968, 1.84", "27.7534, 41.7041, -46.775, 1.84", "27.9809, 40.7498, -47.9432, 0.81", "28.1444, 39.9345, -48.8679, 0.44", "28.2531, 39.3434, -49.4778, 0.44", "28.4554, 38.4244, -50.3477, 0.44", "28.6225, 37.809, -50.883, 0.59", "29.1114, 36.4605, -51.9493, 0.52", "29.4327, 35.7976, -52.4458, 0.37", "29.7614, 35.2987, -52.8897, 0.96", "30.249, 34.6809, -53.541, 1.62", "30.479, 34.4127, -53.8408, 1.99", "30.9172, 33.8714, -54.4244, 1.99", "31.1971, 33.5129, -54.7764, 1.47", "32.1843, 32.0769, -56.0851, 0.52", "32.781, 31.1972, -56.8748, 0.52", "33.2478, 30.522, -57.4762, 0.88", "33.7404, 29.8585, -58.0707, 0.59", "34.1797, 29.3078, -58.5518, 0.37", "34.5671, 28.8735, -58.8912, 0.37", "35.1671, 28.3125, -59.2293, 0.74", "35.5415, 27.9742, -59.4412, 0.74", "35.8529, 27.6544, -59.6661, 0.37", "36.0425, 27.4012, -59.8523, 0.37", "36.412, 26.7401, -60.3489, 0.81", "36.5304, 26.4219, -60.5819, 1.03", "36.8942, 25.0796, -61.5141, 0.37", "37.1052, 24.135, -62.1602, 1.18", "37.2488, 23.3895, -62.6644, 1.47", "37.4332, 22.4949, -63.2807, 0.66", "37.703, 21.4351, -64.0824, 0.29", "37.8522, 21.0042, -64.4224, 1.25", "38.0436, 20.5713, -64.7938, 1.55", "38.2653, 20.174, -65.1825, 1.55", "38.931, 19.2522, -66.218, 0.44", "39.7597, 18.3711, -67.3973, 1.18", "40.4263, 17.791, -68.2789, 1.84", "41.2335, 17.1617, -69.3163, 2.06", "42.1952, 16.4858, -70.5583, 0.29", "42.7755, 16.1145, -71.3204, 0.29", "43.4197, 15.6984, -72.1731, 1.18", "43.9496, 15.3063, -72.8591, 0.88", "44.296, 15.0362, -73.2932, 0.52", "45.0515, 14.4336, -74.1562, 0.52", "45.4962, 14.0426, -74.6698, 0.52", "46.1491, 13.4164, -75.4096, 0.29", "46.6916, 12.8783, -75.9715, 0.29", "47.2152, 12.3716, -76.4878, 0.66", "47.6986, 11.8881, -76.9349, 0.81", "47.8968, 11.6827, -77.0985, 0.81", "48.6559, 10.8825, -77.7423, 0.29", "49.2219, 10.3066, -78.2406, 0.96", "49.7294, 9.79696, -78.7258, 1.03", "50.3061, 9.19418, -79.3001, 0.29", "50.6511, 8.83881, -79.6425, 0.29", "51.2037, 8.31045, -80.1724, 0.96", "51.7802, 7.81675, -80.6836, 0.96", "52.577, 7.22118, -81.3447, 0.37", "53.4004, 6.69143, -81.9536, 0.66", "53.7584, 6.46785, -82.2062, 0.96", "54.6332, 5.8973, -82.7923, 0.29", "55.5488, 5.28213, -83.361, 1.03", "55.8784, 5.06442, -83.5625, 1.33", "56.745, 4.53747, -84.0658, 0.37", "57.5743, 4.12561, -84.5616, 0.37", "58.2846, 3.82904, -85.0267, 0.37", "58.7249, 3.68046, -85.3377, 0.74", "59.4269, 3.46568, -85.8589, 0.74", "59.9401, 3.30473, -86.2528, 0.37", "60.5998, 3.1189, -86.7695, 0.29", "61.2915, 2.97684, -87.3007, 0.29", "61.854, 2.88948, -87.7235, 0.88", "62.4618, 2.80742, -88.1661, 1.25", "63.1777, 2.71778, -88.6805, 1.18", "64.1259, 2.61509, -89.3605, 0.29", "64.8122, 2.57414, -89.8555, 0.74", "65.3909, 2.55979, -90.269, 0.74", "66.0543, 2.55558, -90.7842, 0.37", "66.8536, 2.55102, -91.4667, 0.96", "67.3137, 2.5323, -91.8792, 1.33", "67.7626, 2.46555, -92.3119, 1.33", "68.4803, 2.25895, -93.0182, 0.37", "69.234, 1.94875, -93.7665, 0.44", "69.754, 1.69232, -94.2764, 0.44", "70.3406, 1.39092, -94.8165, 0.44", "71.1982, 0.9513, -95.5613, 0.96", "71.7588, 0.64922, -96.0125, 1.03", "72.1621, 0.420872, -96.3085, 0.81", "72.7047, 0.0888863, -96.6702, 0.52", "73.352, -0.335156, -97.0803, 0.29", "73.6952, -0.562575, -97.3063, 0.29", "74.3257, -0.942583, -97.6503, 0.88", "74.9371, -1.29542, -97.9383, 1.25", "75.1891, -1.45124, -98.0432, 1.25", "76.0465, -2.07014, -98.3758, 0.29", "76.6475, -2.59151, -98.6064, 0.29", "77.6574, -3.55368, -98.9931, 0.29", "78.0067, -3.89307, -99.134, 0.29", "78.7356, -4.59303, -99.4617, 0.96", "79.2913, -5.08459, -99.7438, 0.96", "79.9016, -5.57706, -100.106, 0.44", "80.3009, -5.86596, -100.38, 0.37", "80.7578, -6.14936, -100.77, 0.81", "81.43, -6.46125, -101.407, 0.29", "81.9599, -6.67991, -101.962, 0.29", "82.4281, -6.88942, -102.477, 0.74", "82.9595, -7.17983, -103.106, 0.96", "83.4948, -7.55023, -103.781, 0.96", "84.2057, -8.13569, -104.69, 0.44", "84.7642, -8.68676, -105.457, 0.29", "85.2113, -9.21163, -106.105, 0.29", "85.623, -9.75015, -106.693, 0.96", "85.85, -10.0596, -107.004, 1.11", "86.2603, -10.5835, -107.503, 1.18", "86.9487, -11.43, -108.342, 0.37", "87.3381, -11.8539, -108.833, 0.37", "87.9047, -12.4288, -109.59, 0.29", "88.448, -12.9367, -110.335, 0.29", "88.9697, -13.39, -111.064, 0.96", "89.7903, -14.0274, -112.193, 0.44", "90.1959, -14.2923, -112.707, 1.03", "90.5263, -14.4801, -113.1, 1.03", "91.2607, -14.8283, -113.939, 0.29", "91.6518, -14.971, -114.34, 0.29", "92.1298, -15.0918, -114.796, 0.96", "92.7543, -15.2021, -115.347, 0.96", "93.1399, -15.2694, -115.691, 0.37", "93.7765, -15.3931, -116.275, 0.22", "94.4735, -15.5648, -116.948, 1.11", "95.2355, -15.7442, -117.708, 1.11", "96.2605, -15.9739, -118.78, 0.44", "96.7365, -16.0789, -119.305, 1.03", "97.0544, -16.1659, -119.67, 1.03", "97.7032, -16.4479, -120.443, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.76899, 65.662, -14.332, 0.29", "7.11212, 67.0377, -14.7407, 0.29", "7.27729, 67.6836, -14.9565, 0.29", "7.58839, 68.9238, -15.3663, 0.29", "7.80249, 69.7806, -15.6531, 0.81", "7.92793, 70.2833, -15.8293, 0.81", "8.17575, 71.3252, -16.1932, 0.29", "8.41984, 72.2917, -16.5582, 0.29", "8.64276, 73.212, -16.9138, 0.88", "8.7046, 73.4955, -17.0214, 0.88", "8.86882, 74.3045, -17.3406, 0.22", "9.07211, 75.3021, -17.7336, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-27.9933, -38.7226, -47.4452, 0.88", "-30.5365, -37.1897, -57.7124, 0.88", "-30.9388, -37.0276, -59.0491, 0.52", "-31.1432, -36.9684, -59.6375, 0.52", "-31.6909, -36.8573, -61.0042, 0.52", "-32.3206, -36.7926, -62.3348, 0.52", "-32.8934, -36.7864, -63.3392, 1.03", "-33.3901, -36.9664, -63.5007, 1.62", "-33.6416, -37.0666, -63.5671, 1.99", "-34.2651, -37.2834, -63.7024, 2.14", "-35.3406, -37.4981, -63.9379, 1.55", "-36.3156, -37.5335, -64.3017, 0.74", "-37.2124, -37.4562, -64.8487, 0.37", "-38.0275, -37.3479, -65.481, 0.37", "-38.5687, -37.3116, -66.037, 0.37", "-39.7739, -37.3028, -67.5263, 0.74", "-40.9556, -37.3566, -69.1188, 1.4", "-41.577, -37.421, -69.9673, 1.92", "-41.8829, -37.4708, -70.3803, 2.21", "-43.5957, -37.7848, -72.7798, 0.52", "-44.1184, -37.8857, -73.5442, 0.52", "-44.7685, -38.0151, -74.524, 0.52", "-45.2455, -38.0538, -75.2753, 0.59", "-45.591, -38.0211, -75.8685, 0.59", "-46.7485, -37.6553, -77.9314, 1.69", "-47.7787, -37.0384, -79.7744, 2.06", "-48.6552, -36.394, -81.3131, 1.03", "-49.0746, -36.0382, -82.0569, 0.29", "-49.5286, -35.6701, -82.8131, 0.29", "-50.1447, -35.2521, -83.6693, 1.25", "-50.5569, -35.0599, -84.1157, 1.62", "-51.1516, -34.8595, -84.6874, 1.92", "-52.9107, -34.5264, -86.3625, 0.81", "-53.7868, -34.5346, -87.1921, 1.11", "-54.2152, -34.5879, -87.6397, 1.11", "-55.1604, -34.7481, -88.765, 0.37", "-55.7446, -34.8458, -89.5261, 0.29", "-56.3928, -34.9757, -90.388, 0.29", "-57.095, -35.1238, -91.254, 0.29", "-58.452, -35.323, -93.0017, 1.33", "-58.9703, -35.3561, -93.7232, 1.55", "-59.4457, -35.3346, -94.4502, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-27.9933, -38.7226, -47.4452, 1.18", "-29.0802, -39.1067, -48.2588, 1.18", "-30.416, -39.6146, -49.1457, 0.52", "-31.1994, -39.9018, -49.6395, 0.52", "-33.0673, -40.5334, -50.6042, 0.88", "-34.2591, -40.9142, -51.1147, 1.18", "-35.1528, -41.2133, -51.448, 1.18", "-36.2633, -41.6324, -51.7639, 1.25", "-37.2745, -42.057, -51.9913, 1.11", "-39.0137, -42.8249, -52.1837, 0.88", "-40.1107, -43.3088, -52.1894, 0.59", "-41.0269, -43.7074, -52.1705, 0.44", "-41.7021, -43.9873, -52.1458, 0.29", "-42.4477, -44.2743, -52.1101, 0.29", "-43.301, -44.5806, -52.0943, 0.88", "-44.0594, -44.7992, -52.1686, 1.25", "-44.5, -44.8982, -52.2436, 1.47", "-45.1962, -45.0259, -52.3912, 1.47", "-45.7754, -45.1422, -52.5378, 1.33", "-46.6448, -45.3586, -52.7868, 0.59", "-47.531, -45.6336, -53.0757, 0.44", "-48.6414, -46.0232, -53.4614, 0.37", "-49.3177, -46.2672, -53.7032, 0.96", "-50.1821, -46.5747, -54.0177, 0.59", "-51.3725, -46.9744, -54.4522, 0.52", "-52.0468, -47.1686, -54.7006, 0.52", "-52.7465, -47.3159, -54.9664, 1.11", "-53.3634, -47.3827, -55.2048, 1.99", "-54.0222, -47.3893, -55.4642, 2.28", "-54.7069, -47.3267, -55.7459, 1.99", "-55.5299, -47.1785, -56.1005, 1.69", "-56.2866, -47.0058, -56.4539, 1.4", "-56.8856, -46.8736, -56.7558, 0.66", "-57.5965, -46.7529, -57.1324, 0.52", "-58.31, -46.6975, -57.5216, 0.52", "-58.8721, -46.754, -57.8267, 0.29", "-59.4527, -47.017, -58.1149, 0.29", "-60.1701, -47.5796, -58.3914, 0.81", "-60.5799, -47.96, -58.494, 1.11", "-61.1718, -48.5346, -58.5538, 0.96", "-61.9302, -49.2003, -58.4894, 0.74", "-62.6368, -49.678, -58.3724, 0.37", "-63.6236, -50.0747, -58.1245, 1.11", "-64.2665, -50.2472, -57.9445, 1.84", "-64.9759, -50.3467, -57.7319, 2.36", "-66.155, -50.3443, -57.353, 2.58", "-67.358, -50.1743, -56.9453, 0.59", "-68.367, -49.9098, -56.5777, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "22.3928, -66.454, -54.0218, 0.74", "23.8719, -67.6513, -54.9054, 0.74", "24.9236, -68.4939, -55.7053, 0.66", "25.5535, -68.9948, -56.2539, 1.11", "26.062, -69.3856, -56.7494, 1.11", "27.1048, -70.1219, -57.8414, 0.88", "27.8575, -70.6141, -58.6774, 0.59", "28.5813, -71.0826, -59.6323, 1.11", "28.7975, -71.2159, -59.9611, 1.47", "29.2327, -71.4415, -60.6494, 1.69", "29.8291, -71.6854, -61.5743, 1.69", "30.6042, -71.8703, -62.6547, 1.77", "31.0559, -71.955, -63.2747, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "22.3928, -66.454, -54.0218, 0.37", "22.1137, -67.2014, -55.1061, 0.37", "21.755, -67.9139, -56.1332, 1.03", "21.2331, -68.8206, -57.388, 1.25", "20.4042, -69.903, -58.9681, 0.66", "20.0903, -70.2365, -59.4883, 0.81", "18.9131, -71.2955, -61.3189, 1.11", "18.3873, -71.6471, -62.0222, 1.4", "17.7592, -71.9837, -62.7437, 0.88", "16.2169, -72.6155, -64.2847, 0.22", "14.7202, -73.1276, -65.664, 0.37", "13.0393, -73.6715, -67.1924, 1.03", "12.1634, -73.9503, -68.0003, 1.69", "11.6114, -74.1729, -68.6258, 1.69", "9.16992, -75.3715, -71.6143, 0.15", "8.78125, -75.6407, -72.2192, 0.15", "8.49305, -75.9007, -72.7759, 1.18", "8.1238, -76.3331, -73.6478, 1.47", "7.00435, -77.9918, -76.8174, 0.88", "6.53872, -78.8699, -78.4036, 1.55", "5.83854, -80.6838, -81.5025, 0.81", "5.56749, -81.3641, -82.6589, 0.37", "5.40632, -81.7362, -83.2616, 0.52", "5.19257, -82.2155, -83.9349, 0.52", "5.03903, -82.6557, -84.3485, 0.37", "4.83685, -83.3766, -84.7883, 0.37", "4.57765, -84.0984, -84.9116, 0.81", "4.34688, -84.738, -84.968, 1.11", "4.07684, -85.7348, -85.0254, 1.25", "3.7951, -87.0873, -85.1259, 0.29", "3.6573, -87.8532, -85.18, 0.29", "3.39851, -89.2018, -85.2396, 1.55", "3.23122, -89.9321, -85.2565, 1.77", "2.7523, -91.6465, -85.2732, 0.29", "2.25825, -92.9852, -85.2513, 0.22", "1.49271, -94.4469, -85.1666, 0.22", "0.735407, -95.582, -85.0403, 0.66", "0.165361, -96.2443, -84.9305, 1.4", "0.04215, -96.3617, -84.9033, 1.92", "-0.658252, -96.9285, -84.7235, 1.62", "-1.45326, -97.5545, -84.4837, 0.52", "-2.17073, -98.1231, -84.2755, 0.29", "-2.97612, -98.8043, -84.0562, 0.52", "-3.32643, -99.1083, -83.9616, 0.52", "-4.05873, -99.7671, -83.7649, 0.37", "-4.37293, -100.052, -83.6782, 0.88", "-4.85844, -100.474, -83.5596, 0.88", "-5.42362, -100.943, -83.438, 0.44", "-6.03178, -101.466, -83.3217, 0.22", "-6.49904, -101.899, -83.2499, 0.96", "-7.11428, -102.514, -83.2047, 0.96", "-8.15507, -103.691, -83.1959, 0.29", "-8.60159, -104.259, -83.2262, 1.25", "-9.01158, -104.791, -83.2677, 1.25", "-9.51232, -105.458, -83.3415, 0.96", "-10.1213, -106.32, -83.4814, 0.96", "-10.9568, -107.667, -83.7939, 0.29", "-11.4984, -108.665, -84.0719, 0.29", "-11.9123, -109.511, -84.3423, 0.66", "-12.2535, -110.257, -84.6213, 0.37", "-12.7311, -111.248, -85.0903, 0.96", "-13.1385, -112.066, -85.6017, 1.18", "-13.3477, -112.47, -85.9213, 0.81", "-13.8529, -113.397, -86.7454, 0.52", "-14.3707, -114.335, -87.5541, 0.44", "-15.1776, -115.686, -88.7065, 0.96", "-16.3422, -117.43, -90.2246, 0.37", "-16.973, -118.327, -91.0053, 0.37", "-17.8211, -119.553, -92.0903, 0.37", "-18.5567, -120.7, -93.058, 1.18", "-18.938, -121.387, -93.5926, 1.47", "-19.2272, -122.006, -94.0369, 1.47", "-19.9627, -123.934, -95.3454, 0.74", "-20.3064, -125.129, -96.1369, 0.29", "-20.5113, -126.171, -96.8109, 0.29", "-20.7124, -127.744, -97.8016, 0.96", "-20.7501, -128.333, -98.1314, 1.11", "-20.7363, -129.404, -98.6636, 0.29", "-20.6241, -130.353, -99.0915, 0.29", "-20.4332, -131.233, -99.4678, 0.44", "-20.233, -131.854, -99.7373, 0.29", "-19.9957, -132.497, -99.9631, 1.03", "-19.7762, -133.121, -100.153, 1.03", "-19.3436, -134.404, -100.526, 0.29", "-18.9552, -135.392, -100.807, 1.11", "-18.7714, -135.823, -100.927, 1.25", "-18.2496, -137.054, -101.224, 0.22", "-18.1174, -137.401, -101.284, 0.74", "-18.0042, -137.74, -101.328, 0.74", "-17.7316, -138.661, -101.397, 0.22", "-17.5606, -139.292, -101.437, 0.66", "-17.4023, -139.846, -101.476, 0.66", "-17.1719, -140.605, -101.535, 0.22", "-17.025, -141.145, -101.573, 0.81", "-16.823, -142.002, -101.622, 0.22", "-16.6042, -143.123, -101.668, 0.52", "-16.4832, -143.832, -101.689, 0.66", "-16.419, -144.237, -101.697, 0.66", "-16.2603, -145.212, -101.712, 0.29", "-16.0391, -146.644, -101.721, 0.29", "-15.9223, -147.395, -101.726, 0.81", "-15.8787, -147.678, -101.726, 0.81", "-15.7023, -148.808, -101.727, 0.29", "-15.5408, -149.786, -101.728, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.4922, 103.735, -15.4158, 1.25", "-12.5922, 105.919, -14.3933, 1.25", "-12.3829, 106.63, -14.3284, 1.25", "-12.219, 107.677, -14.4943, 1.03", "-12.1717, 108.219, -14.6421, 1.11", "-12.1172, 109.188, -14.9562, 1.11", "-12.0811, 110.203, -15.2995, 1.03", "-12.1012, 111.599, -15.9285, 0.96", "-12.1702, 112.825, -16.5095, 1.18", "-12.273, 113.866, -17.0107, 1.18", "-12.3959, 114.844, -17.4673, 1.4", "-12.5561, 115.962, -17.9385, 1.55", "-12.7588, 117.294, -18.4396, 1.18", "-12.9033, 118.288, -18.7712, 0.96", "-13.0699, 119.515, -19.1626, 1.25", "-13.2087, 120.463, -19.4442, 1.25", "-13.3368, 121.319, -19.6791, 1.03", "-13.519, 122.557, -19.9709, 1.03", "-13.6474, 123.391, -20.1217, 1.03", "-13.8419, 124.707, -20.3047, 1.03", "-14.0361, 126.22, -20.4504, 1.03", "-14.1144, 126.901, -20.4952, 1.33", "-14.2732, 128.436, -20.5654, 1.62", "-14.3885, 129.676, -20.596, 1.11", "-14.4735, 130.884, -20.5291, 1.4", "-14.5154, 131.826, -20.422, 1.25", "-14.5167, 132.962, -20.2616, 1.55", "-14.5089, 133.193, -20.2266, 1.47", "-14.4102, 134.664, -20.0008, 1.62", "-14.2506, 136.634, -19.7042, 1.47", "-14.206, 137.449, -19.5924, 1.55", "-14.1901, 138.209, -19.5169, 1.11", "-14.1863, 139.612, -19.4322, 0.88", "-14.1908, 140.559, -19.4206, 0.88", "-14.1889, 141.452, -19.4699, 0.88", "-14.1501, 142.712, -19.638, 0.88", "-14.0587, 143.667, -19.7873, 1.18", "-13.8807, 144.766, -20.0061, 1.18", "-13.6907, 145.565, -20.1963, 1.33", "-13.4132, 146.488, -20.4049, 1.33", "-12.9087, 147.936, -20.6738, 1.11", "-12.36, 149.389, -20.8685, 0.88", "-11.9816, 150.391, -20.935, 0.88", "-11.5732, 151.553, -20.9414, 1.03", "-11.2325, 152.718, -20.884, 1.33", "-10.9927, 153.817, -20.7775, 1.33", "-10.8719, 154.743, -20.6653, 1.47", "-10.8221, 155.617, -20.5213, 1.4", "-10.8163, 156.429, -20.3653, 1.4", "-10.8468, 157.338, -20.1986, 1.18", "-10.9028, 158.398, -20.0373, 1.18", "-10.9379, 159.135, -19.9318, 1.03", "-10.9617, 160.243, -19.7889, 1.03", "-10.9299, 161.26, -19.6942, 0.88", "-10.848, 162.343, -19.7077, 1.03", "-10.7447, 163.334, -19.7888, 0.96", "-10.6567, 164.088, -19.9176, 0.96", "-10.5406, 165.11, -20.1703, 0.96", "-10.4178, 166.438, -20.6556, 0.96", "-10.3082, 168.412, -21.6718, 0.81", "-10.3228, 169.612, -22.4331, 1.03", "-10.3823, 170.344, -22.9442, 1.03", "-10.5044, 171.393, -23.6698, 0.88", "-10.7053, 172.909, -24.6775, 1.03", "-10.9317, 174.565, -25.6819, 1.03", "-11.0349, 175.536, -26.1638, 1.25", "-11.1658, 176.824, -26.6941, 1.25", "-11.3502, 178.663, -27.2507, 1.03", "-11.4407, 179.626, -27.4506, 1.03", "-11.5361, 180.94, -27.6539, 1.03", "-11.5939, 182.639, -27.8727, 1.03", "-11.5631, 184.438, -28.1254, 0.88", "-11.4545, 186.004, -28.3823, 0.88", "-11.3064, 187.369, -28.6261, 0.88", "-10.9585, 189.888, -29.0832, 0.74", "-10.6818, 191.527, -29.3761, 0.74", "-10.3484, 193.228, -29.6499, 0.74", "-10.0642, 194.623, -29.8842, 0.74", "-9.86047, 196.089, -30.1854, 0.74", "-9.86623, 197.614, -30.616, 0.74", "-9.986, 198.336, -30.8641, 0.88", "-10.2179, 199.171, -31.2255, 1.03", "-10.6511, 200.638, -31.9133, 0.74", "-11.1976, 202.7, -32.8876, 0.74", "-11.5682, 204.455, -33.7259, 0.59", "-11.6841, 205.249, -34.0857, 0.88", "-11.8081, 206.607, -34.6486, 1.11", "-11.8546, 208.57, -35.3582, 1.55", "-11.786, 210.163, -35.796, 1.33", "-11.6592, 211.533, -36.086, 1.11", "-11.4603, 213.266, -36.4094, 1.11", "-11.2801, 214.647, -36.6614, 1.11", "-11.0499, 216.043, -36.9002, 1.03", "-10.7123, 217.632, -37.1663, 0.88", "-10.4747, 218.489, -37.3114, 1.18", "-10.2935, 219.026, -37.3919, 1.4", "-10.0081, 219.804, -37.4874, 1.25", "-9.69162, 220.708, -37.5894, 1.25", "-9.53186, 221.274, -37.665, 1.11", "-9.39702, 221.923, -37.7637, 0.96", "-9.31476, 222.753, -37.8746, 0.96", "-9.3018, 223.337, -37.948, 0.88", "-9.31832, 224.487, -38.082, 0.66", "-9.31917, 225.239, -38.1346, 0.81", "-9.28587, 226.036, -38.1527, 0.81", "-9.18485, 226.967, -38.1207, 0.74", "-8.85206, 228.793, -37.9774, 0.88", "-8.73017, 229.286, -37.9113, 1.18", "-8.31203, 230.564, -37.6846, 1.18", "-8.02495, 231.286, -37.5322, 1.18", "-7.6767, 232.048, -37.3702, 1.11", "-7.24002, 232.918, -37.1997, 0.96", "-6.93792, 233.517, -37.0873, 0.96", "-6.60112, 234.245, -37.0004, 0.81", "-6.28884, 234.997, -36.971, 1.11", "-6.1298, 235.424, -36.9976, 1.47", "-5.83038, 236.347, -37.1639, 1.03", "-5.61387, 237.116, -37.3688, 1.03", "-5.40682, 237.954, -37.665, 1.25", "-5.2902, 238.538, -37.8736, 1.25", "-5.05777, 239.962, -38.3277, 0.88", "-4.95978, 240.716, -38.5047, 0.88", "-4.86932, 241.685, -38.652, 1.18", "-4.79102, 242.751, -38.7249, 0.96", "-4.6944, 243.947, -38.6855, 0.81", "-4.5863, 245.0, -38.5554, 1.25", "-4.47166, 245.846, -38.3787, 0.66", "-4.3313, 246.7, -38.1675, 0.96", "-4.18748, 247.48, -37.9855, 1.25", "-4.03416, 248.241, -37.833, 0.96", "-3.87169, 248.974, -37.7526, 0.96", "-3.66813, 249.806, -37.6987, 1.25", "-3.49315, 250.447, -37.6669, 1.55", "-3.26226, 251.214, -37.6313, 1.55", "-3.08195, 251.771, -37.6151, 1.25", "-2.83666, 252.581, -37.6277, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.4922, 103.735, -15.4158, 0.59", "-13.2401, 107.57, -17.08, 0.59", "-13.1803, 108.994, -17.651, 0.88", "-13.1432, 110.689, -18.2462, 1.18", "-13.0853, 112.82, -18.8886, 1.18", "-12.9923, 114.311, -19.3383, 0.96", "-12.8684, 115.976, -19.8325, 0.59", "-12.8027, 117.048, -20.071, 0.96", "-12.6936, 118.797, -20.4605, 0.96", "-12.5888, 120.872, -20.9667, 0.96", "-12.5461, 122.818, -21.4818, 0.52", "-12.5859, 124.236, -21.8791, 0.37", "-12.7036, 125.152, -22.1726, 0.37", "-12.9617, 126.075, -22.4878, 0.81", "-13.3335, 126.847, -22.8194, 1.18", "-13.6216, 127.378, -23.0657, 1.18", "-14.0817, 128.33, -23.4627, 0.66", "-14.3905, 129.181, -23.8075, 0.66", "-14.7403, 130.599, -24.3235, 0.59", "-14.9866, 132.346, -24.8897, 0.88", "-15.1548, 134.85, -25.6242, 1.11", "-15.1725, 136.243, -25.9911, 1.11", "-15.1406, 137.438, -26.2449, 1.11", "-15.0835, 138.876, -26.4398, 0.37", "-15.0517, 140.433, -26.4938, 0.37", "-15.0931, 141.472, -26.4034, 0.74", "-15.1306, 141.805, -26.3535, 0.88", "-15.3388, 143.294, -26.0762, 0.88", "-15.4868, 144.425, -25.807, 0.66", "-15.6349, 145.974, -25.3786, 0.52", "-15.6519, 146.695, -25.2045, 0.52", "-15.5691, 148.067, -24.9711, 0.96", "-15.4325, 148.995, -24.899, 0.96", "-15.2648, 149.759, -24.9077, 1.18", "-15.1144, 150.39, -24.9567, 1.18", "-14.7549, 152.044, -25.149, 0.66", "-14.6293, 152.97, -25.2717, 0.88", "-14.5897, 154.202, -25.4333, 0.88", "-14.6227, 155.167, -25.5942, 0.44", "-14.693, 156.225, -25.7737, 0.74", "-14.7429, 156.875, -25.8719, 0.74", "-14.7976, 157.742, -25.9657, 0.52", "-14.8105, 158.824, -26.0719, 0.37", "-14.7706, 159.734, -26.1469, 0.37", "-14.6469, 160.847, -26.2125, 0.74", "-14.5284, 161.553, -26.2385, 0.74", "-14.3489, 162.5, -26.2623, 0.66", "-14.0469, 164.035, -26.2824, 0.74", "-13.9527, 164.496, -26.2832, 1.4", "-13.7139, 165.468, -26.2662, 1.4", "-13.4495, 166.371, -26.2841, 1.33", "-12.8837, 167.973, -26.3738, 0.44", "-12.3056, 169.354, -26.4947, 0.44", "-11.9048, 170.268, -26.6077, 0.37", "-11.211, 171.921, -26.8689, 0.37", "-10.669, 173.308, -27.1256, 0.59", "-10.3826, 174.173, -27.3103, 0.59", "-10.1913, 174.972, -27.5027, 0.29", "-10.0956, 176.935, -27.9721, 0.88", "-10.2136, 177.876, -28.1665, 1.77", "-10.4078, 178.732, -28.3006, 2.06", "-10.6044, 179.483, -28.3769, 1.69", "-10.8962, 180.566, -28.4913, 1.18", "-11.336, 182.219, -28.6965, 0.44", "-11.7283, 183.698, -28.8925, 0.37", "-12.1654, 185.369, -29.1276, 0.74", "-12.3517, 186.047, -29.2349, 0.74", "-12.7548, 187.522, -29.5062, 0.52", "-13.0581, 188.596, -29.6717, 0.44", "-13.253, 189.273, -29.7389, 0.66", "-13.4711, 189.935, -29.757, 0.66", "-13.8042, 190.819, -29.7483, 0.37", "-14.0671, 191.493, -29.6985, 0.37", "-14.8359, 193.475, -29.3224, 0.59", "-15.3073, 194.874, -28.9406, 1.03", "-15.5236, 195.661, -28.6919, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-42.2403, 116.489, -1.01144, 0.29", "-42.4216, 118.12, -0.832169, 0.29", "-42.5692, 118.892, -0.730299, 0.44", "-42.7627, 119.46, -0.592354, 0.66", "-43.0886, 120.068, -0.309517, 0.29", "-43.4743, 120.619, 0.0304363, 0.29", "-43.6918, 120.905, 0.220374, 0.74", "-43.999, 121.208, 0.499713, 0.88", "-44.7157, 121.843, 1.10539, 0.44", "-45.4217, 122.466, 1.65548, 0.52", "-45.622, 122.669, 1.80659, 0.81", "-45.9365, 123.109, 2.06566, 0.44", "-46.1888, 123.616, 2.33453, 0.88", "-46.4063, 124.249, 2.66578, 0.59", "-46.5484, 124.902, 2.92573, 0.29", "-46.627, 125.465, 3.10394, 0.29", "-46.7334, 126.447, 3.38145, 0.96", "-46.8191, 127.328, 3.61882, 1.18", "-46.8917, 128.24, 3.8617, 0.81", "-46.991, 129.494, 4.14765, 0.52", "-47.0514, 130.15, 4.27936, 0.52", "-47.1781, 131.127, 4.41248, 0.44", "-47.2991, 131.894, 4.48589, 0.66", "-47.435, 132.752, 4.58491, 0.88", "-47.5213, 133.265, 4.65786, 0.52", "-47.6196, 133.902, 4.78404, 0.29", "-47.7609, 134.791, 4.96098, 0.29", "-47.9469, 135.977, 5.1909, 0.52", "-48.1341, 136.885, 5.36148, 0.81", "-48.3305, 137.707, 5.47692, 0.22", "-48.4732, 138.326, 5.54653, 0.22", "-48.7233, 139.346, 5.64095, 0.37", "-48.8705, 139.87, 5.68122, 0.37", "-49.2262, 140.968, 5.7547, 0.37", "-49.5995, 142.018, 5.8285, 0.29", "-49.9621, 143.111, 5.91942, 0.52", "-50.1329, 143.689, 5.96435, 0.88", "-50.4001, 144.874, 6.03925, 0.59", "-50.5038, 145.496, 6.06457, 0.44", "-50.5743, 146.265, 6.08562, 0.22", "-50.6658, 147.803, 6.1168, 0.22", "-50.678, 148.492, 6.10744, 0.81", "-50.6637, 149.063, 6.06381, 1.33", "-50.645, 149.619, 5.98802, 1.33", "-50.5984, 150.628, 5.81067, 0.59", "-50.5473, 151.289, 5.66221, 0.81", "-50.4784, 151.898, 5.49701, 0.81", "-50.3534, 152.835, 5.18412, 0.52", "-50.1861, 154.015, 4.72318, 0.22", "-50.0456, 154.942, 4.32187, 0.22", "-49.858, 156.053, 3.79879, 0.59", "-49.7193, 156.749, 3.46526, 0.81", "-49.5216, 157.731, 2.99036, 0.29", "-49.3761, 158.446, 2.67285, 0.22", "-49.3131, 158.816, 2.51605, 0.59", "-49.3048, 159.101, 2.41105, 0.59", "-49.4541, 159.838, 2.18759, 0.22", "-49.7164, 160.489, 1.98466, 0.29", "-49.9537, 160.922, 1.83143, 0.81", "-50.1391, 161.212, 1.69481, 1.11", "-50.281, 161.434, 1.57517, 1.11", "-50.9119, 162.518, 0.95628, 0.37", "-51.1488, 163.026, 0.682411, 0.96", "-51.4128, 163.749, 0.328964, 0.88", "-51.6097, 164.328, 0.0620637, 0.88", "-51.8853, 165.111, -0.26089, 0.52", "-52.0953, 165.696, -0.473763, 0.74", "-52.4782, 166.748, -0.80016, 0.29", "-52.8689, 167.717, -1.10763, 0.59", "-53.167, 168.375, -1.32458, 0.59", "-53.5486, 169.192, -1.69179, 0.29", "-53.8669, 169.84, -2.09229, 1.18", "-54.0051, 170.135, -2.31471, 1.47", "-54.2956, 170.831, -2.92191, 1.18", "-54.5393, 171.511, -3.52088, 0.44", "-54.8887, 172.687, -4.53443, 0.22", "-54.9996, 173.146, -4.94779, 0.22", "-55.1745, 174.078, -5.74023, 1.18", "-55.2057, 174.317, -5.9302, 1.4", "-55.2603, 175.427, -6.70881, 0.44", "-55.2483, 176.069, -7.12711, 0.66", "-55.2337, 176.69, -7.47264, 0.66", "-55.1642, 177.571, -7.97802, 0.22", "-55.106, 177.948, -8.21633, 0.59", "-54.9863, 178.52, -8.60117, 0.52", "-54.8106, 179.177, -9.05097, 0.96", "-54.6786, 179.783, -9.4911, 0.59", "-54.5731, 180.36, -9.92696, 0.37", "-54.4648, 180.941, -10.3921, 0.59", "-54.3756, 181.342, -10.6962, 0.81", "-54.1713, 182.294, -11.4024, 0.22", "-53.9973, 183.116, -11.9633, 0.59", "-53.8933, 183.638, -12.2997, 0.52", "-53.8028, 184.262, -12.6761, 0.22", "-53.6919, 185.225, -13.2318, 0.22", "-53.5951, 186.294, -13.8352, 0.88", "-53.5583, 186.909, -14.1676, 1.69", "-53.5493, 187.254, -14.3309, 1.92", "-53.581, 187.909, -14.6411, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-42.2403, 116.489, -1.01144, 0.52", "-43.6009, 116.807, -0.882211, 0.52", "-44.4797, 116.996, -0.793897, 0.59", "-45.4307, 117.192, -0.692315, 0.44", "-46.0829, 117.347, -0.619078, 0.59", "-46.8175, 117.565, -0.52696, 0.59", "-47.7052, 117.885, -0.406646, 0.52", "-48.2702, 118.123, -0.318835, 0.74", "-48.9932, 118.487, -0.195296, 0.37", "-49.5327, 118.791, -0.0861111, 0.37", "-50.2231, 119.197, 0.0661691, 0.37", "-50.8272, 119.531, 0.215673, 0.52", "-51.5949, 119.841, 0.401142, 0.52", "-52.1994, 119.942, 0.529292, 0.29", "-53.0334, 119.935, 0.649353, 0.81", "-53.5417, 119.888, 0.698458, 1.11", "-54.2483, 119.809, 0.741614, 1.25", "-55.3473, 119.696, 0.784652, 0.66", "-56.2991, 119.626, 0.794328, 0.37", "-57.6676, 119.612, 0.727761, 0.37", "-58.5761, 119.674, 0.615975, 0.29", "-59.771, 119.835, 0.398692, 0.66", "-60.233, 119.934, 0.280429, 0.88", "-60.8941, 120.119, 0.0313233, 0.59", "-61.9215, 120.417, -0.475449, 0.37", "-62.6263, 120.594, -0.893823, 0.37", "-63.1557, 120.693, -1.24791, 0.96", "-63.9964, 120.778, -1.88273, 1.18", "-65.4271, 120.825, -2.98701, 0.59", "-65.9603, 120.813, -3.39627, 0.44", "-66.5599, 120.761, -3.82408, 0.29", "-67.265, 120.667, -4.2797, 0.15", "-68.4138, 120.457, -4.95774, 0.88", "-68.9523, 120.354, -5.22047, 1.18", "-69.7142, 120.243, -5.5273, 0.44", "-70.4353, 120.192, -5.77921, 0.37", "-71.0948, 120.194, -5.96067, 0.96", "-72.1779, 120.29, -6.14423, 1.25", "-73.3249, 120.505, -6.20427, 0.44", "-74.0564, 120.702, -6.17001, 0.44", "-74.9865, 121.014, -6.04581, 1.03", "-75.7409, 121.319, -5.86587, 0.88", "-76.72, 121.762, -5.5766, 0.74", "-78.1952, 122.506, -5.01557, 0.37", "-79.1744, 123.02, -4.57089, 0.88", "-79.4859, 123.186, -4.40563, 1.18", "-80.2816, 123.654, -3.9317, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "97.7032, -16.4479, -120.443, 0.29", "96.3826, -15.4926, -124.837, 0.29", "96.0168, -15.1499, -125.965, 0.52", "95.894, -15.014, -126.296, 0.52", "95.4371, -14.4613, -127.331, 0.29", "94.9934, -13.9022, -128.195, 0.96", "94.857, -13.7152, -128.455, 1.33", "94.6941, -13.3912, -128.685, 1.33", "94.3814, -12.7353, -129.159, 0.59", "94.1358, -12.1497, -129.676, 0.37", "93.9924, -11.656, -130.324, 0.22", "94.0686, -11.1925, -131.354, 0.22", "94.1943, -11.0929, -131.786, 0.59", "94.4975, -11.0377, -132.486, 0.59", "94.8099, -11.0561, -133.046, 0.37", "95.2432, -11.1282, -133.711, 0.96", "95.693, -11.2196, -134.326, 0.96", "96.2955, -11.3664, -135.115, 0.44", "96.6004, -11.4442, -135.514, 0.52", "96.995, -11.5616, -136.032, 0.22", "97.259, -11.6415, -136.4, 0.74", "97.8184, -11.7928, -137.219, 0.29", "98.0658, -11.8422, -137.61, 0.29", "98.427, -11.8757, -138.251, 0.88", "98.8358, -11.8735, -139.038, 0.37", "99.491, -11.7829, -140.41, 0.96", "99.7617, -11.694, -141.039, 1.4", "99.984, -11.5494, -141.634, 0.59", "100.294, -11.1941, -142.617, 0.22", "100.525, -10.7438, -143.52, 0.22", "100.664, -10.2209, -144.295, 1.11", "100.702, -9.67703, -144.901, 1.33", "100.68, -9.03853, -145.514, 1.33", "100.637, -8.51971, -145.949, 1.33", "100.577, -8.00912, -146.314, 0.59", "100.459, -7.11471, -146.906, 0.22", "100.381, -6.09529, -147.572, 1.4", "100.389, -5.61485, -147.91, 1.69", "100.477, -4.69534, -148.625, 0.29", "100.545, -4.33786, -148.986, 0.66", "100.685, -3.92284, -149.604, 0.66", "100.952, -3.64092, -150.686, 0.22", "101.136, -3.77675, -151.674, 1.03", "101.163, -3.99253, -152.181, 1.03", "100.998, -5.01724, -153.793, 0.74", "100.871, -5.67408, -154.704, 1.03", "100.627, -6.74347, -156.002, 1.11", "100.305, -7.89718, -157.24, 1.11", "99.8996, -9.1629, -158.459, 0.74", "99.4487, -10.3808, -159.555, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "97.7032, -16.4479, -120.443, 0.37", "99.4712, -18.1331, -121.434, 0.37", "100.2, -18.6378, -121.606, 0.44", "100.712, -18.8925, -121.553, 0.44", "102.439, -19.5605, -121.115, 0.74", "102.699, -19.6308, -121.037, 0.88", "103.626, -19.8078, -120.767, 0.37", "104.864, -19.9422, -120.324, 0.37", "106.794, -20.0914, -119.597, 0.88", "107.473, -20.1265, -119.334, 1.03", "108.509, -20.163, -118.94, 0.29", "109.509, -20.1744, -118.534, 0.29", "110.318, -20.1571, -118.182, 0.29", "111.857, -20.0691, -117.628, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-59.4457, -35.3346, -94.4502, 0.74", "-60.2731, -35.0272, -94.9263, 0.74", "-60.9184, -34.8142, -95.2835, 1.03", "-61.9621, -34.5123, -95.9122, 0.37", "-62.4952, -34.384, -96.2707, 0.22", "-63.1318, -34.2616, -96.7472, 1.4", "-63.5747, -34.1906, -97.0975, 1.55", "-64.1495, -34.1441, -97.6019, 1.55", "-65.1111, -34.1269, -98.5219, 0.81", "-65.7977, -34.1601, -99.2097, 0.52", "-66.3771, -34.2254, -99.7988, 0.88", "-67.0312, -34.3173, -100.479, 0.22", "-67.5321, -34.3784, -101.007, 0.74", "-67.9742, -34.3984, -101.469, 0.74", "-68.3126, -34.3655, -101.866, 0.74", "-68.8667, -34.2491, -102.602, 0.44", "-69.3094, -34.1373, -103.244, 0.22", "-69.5354, -34.0785, -103.627, 0.81", "-69.8598, -33.9966, -104.196, 0.81", "-71.0564, -33.6905, -106.302, 0.52", "-71.531, -33.5808, -107.113, 1.03", "-71.9327, -33.5209, -107.746, 1.4", "-72.6177, -33.47, -108.736, 1.18", "-73.0297, -33.4615, -109.285, 0.66", "-73.6708, -33.4599, -110.072, 1.18", "-74.0559, -33.457, -110.496, 1.55", "-74.9574, -33.4327, -111.509, 0.52", "-75.3245, -33.4194, -111.951, 1.18", "-75.8319, -33.4065, -112.601, 1.18", "-76.7109, -33.3785, -113.855, 0.29", "-77.0366, -33.3678, -114.381, 0.29", "-77.4111, -33.3491, -115.034, 0.29", "-77.8243, -33.3116, -115.789, 0.59", "-78.1963, -33.2715, -116.48, 0.59", "-78.4755, -33.2295, -116.978, 0.44", "-79.1502, -33.0974, -118.118, 1.03", "-79.4835, -33.0069, -118.699, 1.33", "-80.2599, -32.7626, -120.019, 0.29", "-80.6068, -32.6412, -120.573, 0.29", "-80.93, -32.5209, -121.051, 0.96", "-81.3734, -32.355, -121.638, 0.96", "-82.9225, -31.752, -123.292, 0.29", "-83.2335, -31.6207, -123.551, 0.29", "-83.7997, -31.3913, -123.899, 1.03", "-84.3781, -31.1755, -124.162, 1.33", "-85.1121, -30.92, -124.398, 0.74", "-86.1445, -30.5696, -124.617, 0.37", "-87.4046, -30.1551, -124.764, 0.29", "-88.1477, -29.9176, -124.862, 0.22", "-88.9429, -29.6788, -124.97, 0.22", "-89.7534, -29.4229, -125.083, 0.52", "-90.3448, -29.2267, -125.172, 0.96", "-90.8554, -29.0511, -125.264, 1.18", "-91.3757, -28.8828, -125.368, 1.18", "-92.1053, -28.6243, -125.517, 0.74", "-92.7757, -28.3909, -125.649, 0.22", "-93.1162, -28.278, -125.705, 0.44", "-93.5736, -28.1266, -125.757, 0.44", "-94.1443, -27.9154, -125.808, 0.22", "-94.7288, -27.6716, -125.844, 0.22", "-95.121, -27.4879, -125.861, 0.88", "-95.5494, -27.2788, -125.87, 1.25", "-95.7548, -27.1613, -125.867, 1.25", "-96.7015, -26.5324, -125.824, 0.22", "-97.1829, -26.1692, -125.794, 0.22", "-97.6721, -25.761, -125.761, 0.88", "-98.0791, -25.3844, -125.732, 1.25", "-98.6776, -24.7748, -125.689, 0.22", "-99.3786, -24.0025, -125.635, 0.22", "-99.9289, -23.3383, -125.598, 0.88", "-100.248, -22.9146, -125.577, 0.88", "-100.535, -22.5008, -125.534, 0.37", "-100.951, -21.8319, -125.423, 0.15", "-101.327, -21.1519, -125.276, 0.96", "-101.583, -20.6406, -125.146, 1.18", "-102.227, -19.337, -124.726, 0.22", "-102.826, -18.1586, -124.278, 0.81", "-103.131, -17.5429, -124.02, 0.74", "-103.51, -16.738, -123.645, 0.29", "-103.635, -16.4623, -123.506, 0.29", "-103.979, -15.6988, -123.094, 0.52", "-104.142, -15.3197, -122.885, 0.66", "-104.407, -14.5823, -122.553, 0.22", "-104.517, -14.1967, -122.408, 0.22", "-104.639, -13.5178, -122.196, 0.81", "-104.668, -13.1233, -122.107, 1.11", "-104.637, -12.5065, -122.036, 1.11", "-104.502, -11.5628, -122.016, 0.22", "-104.397, -11.0582, -122.052, 0.59", "-104.329, -10.7473, -122.089, 0.59", "-104.197, -10.1192, -122.176, 0.29", "-104.033, -9.13843, -122.343, 0.22", "-103.892, -8.16075, -122.539, 0.88", "-103.809, -7.29214, -122.707, 1.11", "-103.733, -5.92762, -122.934, 0.22", "-103.712, -5.30175, -123.024, 0.52", "-103.709, -4.30764, -123.176, 0.22", "-103.747, -3.18599, -123.371, 0.22", "-103.817, -2.04891, -123.587, 0.66", "-103.884, -1.12322, -123.795, 0.66", "-103.962, -0.111589, -124.094, 0.88", "-104.054, 1.07448, -124.496, 0.66", "-104.118, 1.83308, -124.775, 0.44", "-104.19, 2.51399, -125.056, 0.66", "-104.217, 2.81706, -125.203, 0.66", "-104.339, 4.0971, -125.913, 0.22", "-104.44, 5.00408, -126.435, 0.22", "-104.482, 5.45732, -126.668, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-59.4457, -35.3346, -94.4502, 0.44", "-59.9939, -36.8234, -95.3586, 0.44", "-60.3997, -37.9576, -96.1212, 0.29", "-60.5906, -38.4804, -96.5149, 0.66", "-60.7946, -38.9967, -96.9669, 0.66", "-61.1668, -39.8558, -97.8768, 0.29", "-61.368, -40.2734, -98.3607, 0.59", "-61.6775, -40.9328, -99.2254, 0.37", "-62.0279, -41.6522, -100.287, 1.18", "-62.3054, -42.2863, -101.316, 1.62", "-62.4951, -42.9611, -102.621, 1.62", "-62.55, -43.8863, -104.826, 0.29", "-62.4905, -44.2576, -105.862, 0.29", "-62.4048, -44.4892, -106.57, 0.66", "-62.1846, -44.9691, -107.985, 0.52", "-61.7288, -45.9688, -110.627, 1.18", "-61.3981, -46.717, -112.375, 1.77", "-61.2095, -47.179, -113.387, 1.77", "-60.9291, -48.4538, -116.022, 0.29", "-60.8882, -49.0191, -117.036, 0.29", "-60.8881, -49.6426, -118.028, 0.29", "-60.8789, -50.6155, -119.471, 1.62", "-60.8197, -51.239, -120.418, 1.69", "-60.2572, -53.6624, -124.341, 0.29", "-59.9761, -54.3645, -125.56, 0.29", "-59.6589, -54.9019, -126.569, 0.29", "-58.752, -56.0328, -128.786, 1.25", "-57.841, -56.8535, -130.493, 0.66", "-56.9113, -57.4619, -131.781, 0.29", "-56.1336, -57.8321, -132.556, 1.03", "-55.4637, -58.0925, -133.173, 1.03", "-54.6393, -58.4053, -133.868, 0.44", "-53.501, -58.8235, -134.693, 0.29", "-52.8001, -59.0813, -135.177, 0.88", "-52.3623, -59.2545, -135.482, 1.33", "-50.0447, -60.3483, -137.351, 0.29", "-49.3441, -60.778, -138.004, 0.96", "-48.9775, -61.0708, -138.402, 0.81", "-48.397, -61.6693, -139.17, 0.37", "-47.7298, -62.4691, -140.19, 0.66", "-46.9366, -63.5048, -141.501, 0.52", "-46.4642, -64.1569, -142.33, 0.88", "-46.105, -64.622, -143.014, 0.88", "-44.9502, -65.8647, -145.455, 0.44", "-44.5624, -66.2377, -146.407, 0.37", "-44.0225, -66.6867, -147.839, 0.29", "-43.5891, -66.971, -148.942, 0.96", "-42.895, -67.3533, -150.714, 1.03", "-41.5162, -68.0681, -154.204, 0.74", "-40.7151, -68.5039, -156.186, 1.33", "-40.0638, -68.9166, -157.743, 1.11", "-39.4712, -69.3749, -159.108, 0.44", "-39.0613, -69.7714, -159.976, 0.81", "-38.5424, -70.3495, -160.9, 0.88", "-37.6276, -71.4462, -162.273, 0.22", "-37.0153, -72.1112, -163.127, 0.22", "-36.7006, -72.447, -163.606, 0.59", "-36.3038, -72.8801, -164.281, 0.59", "-35.2306, -74.0063, -166.212, 0.37", "-34.6236, -74.5751, -167.388, 0.59", "-33.784, -75.3109, -169.095, 0.44", "-33.3574, -75.6472, -170.061, 0.74", "-33.0746, -75.8726, -170.768, 0.74", "-32.6269, -76.2796, -172.046, 0.37", "-31.9519, -76.9133, -174.442, 0.96", "-31.6864, -77.1397, -175.563, 0.88", "-31.0342, -77.74, -179.073, 0.66", "-30.8266, -77.9304, -180.378, 0.96", "-30.6564, -78.0993, -181.632, 0.96", "-30.107, -78.745, -186.384, 0.66", "-29.7292, -79.3097, -189.796, 0.66", "-29.2751, -80.082, -193.747, 0.44", "-28.9874, -80.6712, -195.995, 0.74", "-28.8234, -81.0397, -197.09, 0.37", "-28.6185, -81.5622, -198.227, 0.81", "-28.2545, -82.7852, -199.889, 0.22", "-28.0672, -83.442, -200.556, 0.81", "-27.6336, -84.8145, -201.599, 0.22", "-27.0746, -86.5791, -202.737, 0.22", "-26.8131, -87.3704, -203.236, 0.88", "-26.6231, -87.9657, -203.621, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-68.367, -49.9098, -56.5777, 0.96", "-69.5759, -50.762, -58.0922, 0.96", "-70.4494, -51.2836, -58.9356, 0.22", "-70.8968, -51.5508, -59.3677, 0.52", "-71.2489, -51.761, -59.7076, 0.66", "-71.7749, -52.075, -60.2155, 0.44", "-72.3708, -52.4308, -60.7908, 1.33", "-73.3028, -52.7357, -61.3659, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-68.367, -49.9098, -56.5777, 0.37", "-70.2008, -48.4, -56.3212, 0.37", "-70.8437, -47.9119, -56.2218, 0.37", "-71.9223, -47.0932, -56.0551, 0.22", "-72.5049, -46.6509, -55.965, 1.03", "-73.1032, -46.1967, -55.8725, 1.77", "-73.8164, -45.6553, -55.7623, 2.14", "-74.277, -45.3455, -55.7589, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "31.0559, -71.955, -63.2747, 0.44", "32.1024, -71.6131, -63.4744, 0.44", "32.7489, -71.3251, -63.5946, 0.22", "33.3334, -70.9263, -63.7497, 0.22", "33.9827, -70.3965, -64.0078, 0.44", "34.1694, -70.2124, -64.1201, 0.81", "34.4623, -69.8966, -64.3241, 0.81", "34.6909, -69.5778, -64.5962, 0.37", "35.0573, -68.8641, -65.2968, 0.44", "35.1494, -68.472, -65.832, 0.59", "35.1908, -67.8822, -66.7707, 0.15", "35.1872, -67.499, -67.4617, 0.29", "35.1557, -66.8203, -68.8086, 1.18", "35.1308, -66.4603, -69.587, 1.18", "35.068, -65.0805, -72.702, 0.74", "35.0663, -64.8247, -73.2587, 0.74", "35.0835, -64.488, -73.9703, 0.96", "35.1192, -64.1892, -74.5566, 0.96", "35.2423, -63.6632, -75.4192, 0.52", "35.4622, -62.969, -76.3146, 0.29", "35.7338, -62.3246, -76.9513, 0.29", "36.105, -61.4727, -77.7224, 1.33", "36.3001, -61.0469, -78.0736, 1.33", "36.7184, -60.1735, -78.7101, 0.44", "37.1798, -59.2657, -79.2783, 0.37", "37.5805, -58.5205, -79.665, 0.37", "37.7796, -58.1894, -79.8051, 0.37", "38.1677, -57.5992, -80.0067, 0.22", "39.0157, -56.3962, -80.3782, 1.55", "39.3903, -55.9134, -80.5123, 1.77", "40.2696, -54.7881, -80.827, 0.37", "40.5622, -54.3597, -80.9334, 0.44", "40.7653, -54.0049, -81.0142, 0.44", "40.9593, -53.6108, -81.1049, 0.44", "41.3863, -52.679, -81.343, 0.29", "41.6561, -52.048, -81.5242, 0.22", "41.9592, -51.3209, -81.7498, 0.22", "42.4911, -50.0542, -82.1351, 1.18", "42.8306, -49.2524, -82.3583, 1.4", "42.9553, -48.9694, -82.4301, 1.62", "43.1139, -48.6281, -82.5189, 1.62", "43.5356, -47.8643, -82.7771, 0.96", "43.8765, -47.3247, -82.9926, 0.59", "44.389, -46.5597, -83.3318, 0.52", "44.9318, -45.7656, -83.6902, 0.37", "45.3615, -45.1606, -83.9775, 1.03", "46.3422, -43.9226, -84.6312, 0.22", "46.6992, -43.5463, -84.8576, 0.66", "46.9783, -43.3148, -85.0188, 0.66", "47.6756, -42.9488, -85.3647, 0.29", "48.2415, -42.8794, -85.5633, 0.29", "49.0074, -43.0875, -85.8549, 0.29", "49.8317, -43.6236, -86.2367, 1.33", "50.1827, -43.9833, -86.5006, 1.47", "50.6941, -44.652, -87.0466, 0.74", "51.0733, -45.2135, -87.5682, 0.44", "51.9781, -46.5341, -89.0438, 0.96", "52.2381, -46.8776, -89.5165, 0.74", "52.8929, -47.6453, -90.7577, 0.29", "53.2699, -47.99, -91.4014, 0.52", "53.776, -48.3386, -92.1318, 0.29", "54.3427, -48.6324, -92.7863, 0.66", "54.7383, -48.7791, -93.1307, 0.66", "55.2936, -48.9134, -93.6026, 0.29", "56.2526, -49.0698, -94.3883, 0.96", "56.8612, -49.1789, -94.9029, 0.29", "57.4936, -49.2925, -95.4665, 1.11", "58.4838, -49.4522, -96.3736, 0.37", "59.486, -49.5735, -97.3023, 0.96", "60.1682, -49.6159, -97.9396, 0.52", "60.7889, -49.6332, -98.523, 0.96", "61.0246, -49.6328, -98.7358, 0.96", "61.9364, -49.6391, -99.5252, 0.29", "62.3737, -49.6498, -99.8624, 0.81", "62.7154, -49.6556, -100.082, 0.81", "63.4924, -49.6265, -100.545, 0.29", "64.1155, -49.565, -100.89, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "31.0559, -71.955, -63.2747, 0.74", "31.6808, -73.1342, -63.2334, 0.74", "32.2563, -73.9871, -63.1627, 0.81", "32.9352, -74.8337, -63.071, 0.81", "33.7463, -75.7093, -62.9727, 0.59", "34.4501, -76.3623, -62.9081, 0.37", "34.8851, -76.7044, -62.8705, 0.37", "35.8298, -77.3074, -62.7564, 0.88", "36.2183, -77.5045, -62.7222, 0.88", "36.6749, -77.7196, -62.6875, 0.88", "37.2776, -78.0417, -62.6716, 0.29", "38.2875, -78.7517, -62.6842, 0.29", "38.8043, -79.2604, -62.7143, 1.03", "39.1415, -79.6498, -62.7402, 1.33", "39.7162, -80.3246, -62.7716, 1.18", "40.4158, -81.1083, -62.802, 1.03", "40.9821, -81.6773, -62.8278, 0.81", "41.9243, -82.4075, -62.8729, 0.37", "42.9534, -82.9682, -62.9088, 0.96", "43.6062, -83.2233, -62.9357, 1.18", "44.3176, -83.4074, -62.9537, 1.18", "44.9962, -83.5062, -62.9776, 0.88", "46.0284, -83.5568, -63.0813, 0.44", "46.5005, -83.5391, -63.1985, 0.44", "47.3238, -83.4685, -63.5579, 0.37", "47.9439, -83.3992, -63.966, 0.37", "48.7675, -83.3144, -64.6956, 0.66", "49.3453, -83.2857, -65.3066, 1.03", "50.0456, -83.2442, -66.1692, 0.74", "50.5065, -83.2138, -66.7979, 0.52", "51.0623, -83.1655, -67.6569, 0.44", "51.4939, -83.1558, -68.3931, 0.44", "51.9437, -83.21, -69.122, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.83666, 252.581, -37.6277, 0.29", "-3.02746, 254.647, -38.1069, 0.29", "-2.99909, 255.109, -38.1779, 0.29", "-2.94967, 255.601, -38.214, 0.66", "-2.91534, 256.124, -38.1899, 0.88", "-2.90482, 256.751, -38.1095, 0.88", "-2.89866, 257.84, -37.7889, 0.52", "-2.86321, 258.687, -37.315, 0.66", "-2.83864, 259.2, -36.8949, 0.81", "-2.82016, 259.945, -36.1582, 0.37", "-2.832, 260.472, -35.584, 0.52", "-2.9141, 261.545, -34.3334, 0.74", "-3.02907, 262.294, -33.4383, 1.03", "-3.30478, 263.578, -31.8474, 1.03", "-3.45055, 264.179, -31.1058, 0.74", "-3.56632, 264.678, -30.5215, 0.44", "-3.67674, 265.174, -29.9671, 0.44", "-3.87002, 265.994, -29.1298, 0.44", "-4.17523, 267.259, -27.9277, 0.88", "-4.34047, 267.971, -27.3117, 1.18", "-4.43537, 268.477, -26.8701, 0.52", "-4.5086, 269.039, -26.3864, 0.52", "-4.56522, 269.84, -25.755, 0.59", "-4.58251, 270.412, -25.3794, 0.81", "-4.61942, 271.136, -25.0375, 0.29", "-4.68018, 271.571, -24.8498, 0.29", "-4.82183, 272.073, -24.6117, 0.66", "-5.00472, 272.507, -24.3172, 0.66", "-5.16071, 272.86, -24.0075, 0.37", "-5.29076, 273.202, -23.6534, 0.66", "-5.43309, 273.679, -23.1587, 0.81", "-5.5318, 274.135, -22.7224, 0.74", "-5.71118, 275.569, -21.4712, 0.44", "-5.72367, 276.198, -20.9892, 0.37", "-5.67069, 276.771, -20.639, 0.37", "-5.52362, 277.555, -20.2898, 0.29", "-5.36673, 278.154, -20.0872, 0.15", "-5.21905, 278.619, -19.9892, 0.44", "-5.1322, 278.866, -19.9876, 0.44", "-5.05688, 279.092, -19.9882, 0.44", "-4.66056, 280.594, -19.8403, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.83666, 252.581, -37.6277, 0.74", "-2.97418, 253.586, -38.1091, 0.74", "-3.12263, 254.474, -38.4857, 0.74", "-3.40137, 255.912, -39.0385, 0.96", "-3.62419, 256.967, -39.3645, 0.96", "-3.91183, 258.224, -39.6503, 0.74", "-4.33545, 259.973, -39.9466, 0.59", "-4.5497, 260.83, -40.0135, 0.81", "-4.80845, 261.97, -40.0279, 0.81", "-5.08563, 263.419, -39.9643, 0.81", "-5.29303, 265.012, -39.8479, 0.96", "-5.36491, 266.088, -39.7595, 0.96", "-5.35865, 267.892, -39.6529, 0.74", "-5.28082, 268.878, -39.6267, 1.03", "-5.17008, 269.585, -39.6409, 1.03", "-4.92235, 270.777, -39.7515, 1.03", "-4.78211, 271.4, -39.8379, 1.03", "-4.61253, 272.346, -39.9919, 1.03", "-4.53657, 273.162, -40.1051, 1.03", "-4.52975, 274.113, -40.2233, 0.96", "-4.62411, 275.169, -40.3258, 0.74", "-4.76947, 276.034, -40.4001, 0.74", "-4.99446, 277.056, -40.4635, 0.88", "-5.3429, 278.37, -40.5087, 1.11", "-5.64202, 279.361, -40.5306, 1.11", "-6.15087, 280.972, -40.5484, 0.96", "-6.41519, 281.854, -40.5502, 0.96", "-6.65168, 282.715, -40.5381, 0.96", "-6.84655, 283.452, -40.5111, 0.96", "-7.09419, 284.389, -40.4521, 0.81", "-7.37424, 285.525, -40.3612, 0.96", "-7.55394, 286.374, -40.2723, 0.96", "-7.72777, 287.373, -40.1234, 0.96", "-7.81741, 288.124, -39.9951, 1.25", "-7.87051, 289.017, -39.8018, 1.25", "-7.86208, 290.321, -39.4635, 1.11", "-7.78669, 291.424, -39.1891, 0.88", "-7.62131, 292.564, -38.9426, 0.74", "-7.45183, 293.334, -38.827, 1.18", "-7.18749, 294.244, -38.7373, 1.18", "-7.00447, 294.813, -38.6867, 1.18", "-6.68123, 295.847, -38.5849, 0.96", "-6.48181, 296.612, -38.5329, 0.81", "-6.3196, 297.457, -38.4955, 0.81", "-6.18651, 298.432, -38.4495, 0.81", "-6.06433, 299.662, -38.3994, 0.81", "-6.00192, 300.645, -38.3462, 1.11", "-5.96798, 301.693, -38.292, 1.11", "-5.98146, 302.803, -38.3088, 0.96", "-6.04252, 303.954, -38.4041, 0.96", "-6.19828, 305.508, -38.6568, 0.88", "-6.39832, 306.916, -39.0002, 0.88", "-6.60915, 308.099, -39.3658, 0.88", "-6.97127, 309.926, -40.0187, 0.88", "-7.25469, 311.288, -40.5369, 1.11", "-7.49553, 312.412, -40.9862, 1.11", "-7.69997, 313.455, -41.3578, 1.11", "-7.86219, 314.655, -41.7002, 0.81", "-7.9684, 316.531, -42.0924, 1.11", "-7.93865, 317.324, -42.1927, 1.11", "-7.78744, 318.638, -42.3312, 1.11", "-7.46063, 320.612, -42.5086, 0.96", "-7.16695, 322.118, -42.6314, 0.96", "-6.97205, 323.131, -42.7442, 0.96", "-6.82867, 323.987, -42.8889, 0.96", "-6.5641, 325.577, -43.2303, 0.81", "-6.37735, 326.631, -43.5025, 0.81", "-6.16996, 327.855, -43.863, 0.66", "-5.86901, 329.739, -44.4465, 0.66", "-5.64635, 331.292, -44.9173, 0.66", "-5.44585, 333.213, -45.4729, 1.03", "-5.3915, 334.104, -45.7007, 1.03", "-5.37105, 335.837, -46.1541, 0.81", "-5.41266, 336.888, -46.4266, 0.81", "-5.50675, 337.983, -46.6978, 0.96", "-5.70419, 339.592, -47.1006, 0.66", "-5.88082, 340.755, -47.4004, 0.88", "-6.06588, 342.099, -47.7346, 0.88", "-6.22234, 343.555, -48.0617, 0.88", "-6.34012, 345.201, -48.3822, 1.03", "-6.36139, 346.105, -48.5664, 1.03", "-6.34355, 347.024, -48.7574, 1.03", "-6.27266, 348.622, -49.0675, 0.81", "-6.19397, 350.144, -49.3108, 0.81", "-6.15917, 351.16, -49.4565, 0.81", "-6.14019, 353.257, -49.7115, 0.81", "-6.20146, 354.813, -49.8702, 1.25", "-6.25636, 355.368, -49.923, 1.33", "-6.39246, 356.297, -50.02, 1.33", "-6.57472, 357.349, -50.1456, 1.18", "-6.73938, 358.239, -50.2747, 0.74", "-6.99546, 359.527, -50.4674, 0.66", "-7.19491, 360.553, -50.6567, 0.96", "-7.35376, 361.48, -50.8616, 0.96", "-7.45211, 362.292, -51.0468, 0.66", "-7.51114, 363.38, -51.2585, 0.66", "-7.52899, 364.772, -51.4676, 0.66", "-7.51651, 365.87, -51.5822, 0.96", "-7.52355, 366.736, -51.6538, 0.96", "-7.57735, 367.666, -51.7461, 0.74", "-7.76153, 369.728, -51.9993, 0.74", "-7.83484, 370.398, -52.0897, 0.88", "-8.04678, 372.131, -52.3628, 0.96", "-8.25492, 373.758, -52.6277, 0.81", "-8.47409, 375.428, -52.916, 0.66", "-8.64843, 376.887, -53.1937, 0.81", "-8.75974, 378.047, -53.4031, 0.96", "-8.86486, 379.797, -53.6929, 0.74", "-8.89653, 380.672, -53.8103, 1.03", "-8.91746, 381.801, -53.8829, 1.03", "-8.9522, 383.439, -53.9124, 1.33", "-8.99595, 384.487, -53.9166, 1.55", "-9.09407, 386.2, -53.914, 0.81", "-9.19391, 387.369, -53.9091, 0.66", "-9.33105, 388.549, -53.9191, 0.66", "-9.45844, 389.403, -53.948, 0.66", "-9.67424, 390.7, -54.0394, 0.66", "-9.83299, 391.779, -54.1539, 0.66", "-9.96378, 392.947, -54.2826, 1.25", "-10.0027, 393.47, -54.3506, 1.03", "-10.0528, 394.885, -54.5703, 0.81", "-10.0546, 396.147, -54.765, 0.81", "-10.022, 397.533, -54.9877, 0.66", "-9.95518, 398.702, -55.1735, 0.66", "-9.85428, 399.859, -55.3506, 0.96", "-9.74848, 400.878, -55.4972, 1.4", "-9.6547, 401.695, -55.6062, 1.4", "-9.59413, 402.299, -55.6828, 1.4", "-9.51989, 403.379, -55.8106, 0.88", "-9.44151, 404.716, -55.9713, 0.74", "-9.38691, 405.591, -56.0851, 0.74", "-9.30144, 407.04, -56.2839, 0.74", "-9.22087, 408.266, -56.4658, 0.66", "-9.11928, 409.642, -56.6895, 0.66", "-8.97049, 411.512, -57.0216, 0.66", "-8.84147, 412.87, -57.2721, 0.74", "-8.74378, 413.709, -57.4347, 0.74", "-8.60479, 414.703, -57.6368, 0.96", "-8.4658, 415.588, -57.8159, 1.11", "-8.36229, 416.253, -57.9516, 1.11", "-8.21818, 417.392, -58.1762, 0.74", "-8.11352, 418.377, -58.3762, 0.59", "-7.98689, 419.492, -58.605, 0.59", "-7.85032, 420.55, -58.8395, 0.88", "-7.78571, 421.071, -58.9641, 1.25", "-7.69979, 421.85, -59.1635, 1.4", "-7.65067, 422.397, -59.3114, 1.4", "-7.60525, 423.222, -59.5355, 0.88", "-7.5837, 424.216, -59.8043, 0.66", "-7.60053, 425.519, -60.143, 0.66", "-7.62733, 426.493, -60.3702, 0.66", "-7.65509, 427.151, -60.5101, 0.52", "-7.71875, 428.407, -60.756, 0.81", "-7.77831, 429.383, -60.9448, 0.81", "-7.82972, 430.341, -61.1214, 0.66", "-7.86708, 431.792, -61.3848, 0.59", "-7.86744, 432.593, -61.5235, 0.88", "-7.84834, 433.544, -61.6893, 1.11", "-7.81087, 434.488, -61.8513, 1.11", "-7.76906, 435.244, -61.9797, 1.11", "-7.71882, 435.935, -62.0974, 0.88", "-7.64544, 436.768, -62.2569, 0.52", "-7.56063, 437.608, -62.4207, 0.81", "-7.46959, 438.461, -62.5725, 0.81", "-7.4175, 438.966, -62.6442, 0.81", "-7.33194, 439.872, -62.7608, 0.96", "-7.24248, 441.0, -62.8914, 0.59", "-7.18185, 441.808, -62.9802, 0.44", "-7.08729, 442.987, -63.0926, 0.44", "-7.00927, 443.886, -63.1703, 1.11", "-6.97591, 444.293, -63.2012, 1.4", "-6.92783, 445.175, -63.24, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.5236, 195.661, -28.6919, 0.29", "-16.3772, 197.059, -28.8812, 0.29", "-17.0895, 198.243, -29.1542, 0.52", "-17.5989, 199.077, -29.3913, 0.52", "-18.5295, 200.642, -29.8712, 0.66", "-18.8917, 201.272, -30.0737, 0.66", "-19.2353, 201.923, -30.2347, 0.37", "-20.0248, 203.777, -30.4764, 0.29", "-20.2305, 204.466, -30.4953, 0.59", "-20.4034, 205.316, -30.4652, 0.81", "-20.4738, 205.842, -30.4066, 0.81", "-20.7044, 208.077, -30.034, 0.74", "-20.8122, 209.278, -29.7708, 0.74", "-20.9596, 210.764, -29.3646, 0.44", "-21.0875, 211.753, -29.1163, 0.29", "-21.2497, 212.741, -28.9097, 0.29", "-21.3821, 213.402, -28.8123, 0.52", "-21.5583, 214.168, -28.7845, 0.52", "-21.7805, 215.096, -28.8104, 0.52", "-22.1588, 216.57, -28.9204, 0.74", "-22.4002, 217.467, -29.0263, 0.96", "-22.571, 218.12, -29.1251, 0.96", "-22.7955, 219.051, -29.2846, 0.59", "-23.0376, 220.181, -29.5011, 0.37", "-23.2322, 221.225, -29.794, 0.22", "-23.331, 221.917, -30.0322, 0.22", "-23.3955, 222.568, -30.263, 0.74", "-23.47, 223.517, -30.6116, 1.03", "-23.5113, 224.023, -30.7928, 1.03", "-23.671, 225.934, -31.4511, 0.44", "-23.767, 227.255, -31.9115, 0.44", "-23.846, 228.454, -32.2847, 0.37", "-23.918, 229.545, -32.5939, 0.37", "-23.9805, 230.586, -32.8541, 0.37", "-24.0214, 231.694, -33.0742, 0.37", "-24.0135, 232.77, -33.243, 0.37", "-23.9023, 234.471, -33.5505, 0.88", "-23.7897, 235.33, -33.7127, 1.18", "-23.674, 235.968, -33.8357, 1.18", "-23.4417, 236.993, -34.0373, 0.74", "-23.1103, 238.317, -34.285, 0.52", "-22.8037, 239.555, -34.5021, 0.44", "-22.4494, 240.93, -34.7391, 0.37", "-22.2545, 241.66, -34.8512, 0.37", "-21.9354, 242.796, -34.9926, 0.37", "-21.5265, 244.169, -35.1103, 0.59", "-21.2555, 245.029, -35.1418, 1.03", "-20.9891, 245.833, -35.1507, 1.03", "-20.7071, 246.701, -35.147, 0.96", "-20.3697, 247.907, -35.1172, 0.29", "-20.1295, 249.023, -35.1113, 0.29", "-20.0397, 249.657, -35.1275, 0.52", "-19.9988, 250.262, -35.1475, 0.52", "-19.9994, 250.988, -35.1771, 0.29", "-20.0594, 251.99, -35.2343, 0.52", "-20.1585, 253.203, -35.2928, 0.66", "-20.1879, 254.249, -35.3156, 0.66", "-20.1426, 255.231, -35.3311, 0.52", "-20.0737, 255.903, -35.3522, 0.81", "-19.9736, 256.654, -35.4192, 1.11", "-19.8174, 257.834, -35.5853, 0.15", "-19.6688, 258.967, -35.7731, 0.15", "-19.5583, 259.75, -35.9307, 0.52", "-19.3587, 261.074, -36.2463, 0.59", "-19.1292, 262.548, -36.6292, 0.29", "-18.9647, 263.717, -36.9434, 0.29", "-18.856, 264.686, -37.2286, 0.96", "-18.8096, 265.221, -37.3813, 0.96", "-18.7208, 266.099, -37.5931, 0.59", "-18.6176, 266.906, -37.7761, 0.22", "-18.4708, 268.052, -38.0069, 0.22", "-18.3603, 269.026, -38.2123, 0.88", "-18.3206, 269.592, -38.3316, 0.88", "-18.3041, 270.298, -38.4728, 0.88", "-18.3347, 271.489, -38.7077, 0.29", "-18.439, 272.671, -38.9288, 0.22", "-18.5215, 273.191, -39.003, 0.22", "-18.7719, 274.308, -39.0856, 0.81", "-18.902, 274.883, -39.0884, 1.11", "-18.9678, 275.22, -39.0727, 1.11", "-19.0604, 276.193, -39.0393, 0.88", "-19.0598, 277.144, -39.058, 0.59", "-18.9845, 278.239, -39.123, 0.29", "-18.81, 279.783, -39.2579, 0.29", "-18.6688, 281.021, -39.3856, 0.74", "-18.4832, 282.941, -39.6577, 0.52", "-18.3926, 284.129, -39.8963, 1.03", "-18.3581, 285.06, -40.1415, 1.03", "-18.3843, 285.64, -40.3159, 0.74", "-18.608, 286.874, -40.7335, 0.44", "-18.9909, 288.149, -41.1326, 0.88", "-19.2824, 288.968, -41.3457, 1.18", "-19.4262, 289.374, -41.4587, 1.18", "-19.7249, 290.3, -41.7187, 0.59", "-20.0935, 291.68, -42.102, 0.29", "-20.3859, 293.116, -42.4759, 0.81", "-20.615, 294.502, -42.7875, 0.52", "-20.7559, 295.412, -42.9791, 0.52", "-20.8925, 296.305, -43.1714, 0.74", "-21.0756, 297.422, -43.3986, 0.74", "-21.3079, 298.664, -43.604, 0.22", "-21.4229, 299.117, -43.6801, 0.22", "-21.6394, 299.818, -43.7902, 0.52", "-21.7936, 300.317, -43.852, 0.52", "-22.074, 301.279, -43.9826, 0.29", "-22.2931, 302.098, -44.0999, 0.29", "-22.5396, 303.11, -44.2561, 1.03", "-22.7158, 303.968, -44.3889, 1.03", "-22.8188, 304.565, -44.465, 1.03", "-22.9339, 305.445, -44.5438, 0.52", "-22.9858, 306.184, -44.5841, 0.29", "-23.0173, 306.946, -44.5864, 0.59", "-23.0155, 307.463, -44.5526, 0.59", "-22.963, 308.542, -44.4533, 0.22", "-22.8688, 309.631, -44.3414, 0.81", "-22.7755, 310.342, -44.2686, 1.03", "-22.7336, 310.592, -44.2472, 1.03", "-22.5568, 311.647, -44.1745, 0.59", "-22.4129, 312.691, -44.1137, 0.37", "-22.3644, 313.28, -44.074, 0.37", "-22.3689, 314.074, -44.006, 0.66", "-22.4061, 314.58, -43.9526, 0.66", "-22.6271, 316.008, -43.7948, 0.29", "-22.7872, 316.703, -43.7236, 0.29", "-23.0842, 317.79, -43.6196, 0.74", "-23.3155, 318.617, -43.5417, 0.74", "-23.5625, 319.517, -43.4527, 0.74", "-23.8644, 320.738, -43.323, 0.29", "-24.0927, 321.828, -43.2022, 0.29", "-24.3044, 323.417, -43.0197, 1.33", "-24.336, 324.216, -42.9105, 1.33", "-24.2918, 325.35, -42.7524, 1.11", "-24.1773, 326.311, -42.6155, 0.59", "-23.9522, 327.331, -42.4974, 0.44", "-23.3599, 329.352, -42.403, 0.29", "-22.8348, 330.772, -42.4657, 0.74", "-22.5131, 331.585, -42.5857, 0.81", "-22.239, 332.268, -42.7591, 0.44", "-21.737, 333.581, -43.2105, 0.22", "-21.331, 334.715, -43.6841, 0.81", "-21.1578, 335.228, -43.9377, 0.81", "-20.8336, 336.267, -44.4876, 0.22", "-20.59, 337.091, -44.8963, 0.22", "-20.313, 338.1, -45.3808, 0.81", "-20.2376, 338.388, -45.5027, 0.81", "-19.9542, 339.4, -45.8911, 0.29", "-19.7028, 340.233, -46.194, 0.88", "-19.3818, 341.162, -46.503, 0.88", "-18.8722, 342.613, -46.9377, 0.22", "-18.55, 343.635, -47.2014, 0.74", "-18.4606, 343.966, -47.2707, 0.88", "-18.2385, 345.129, -47.4799, 0.15", "-18.101, 346.094, -47.6283, 0.52", "-18.0133, 346.941, -47.7457, 0.22", "-17.9602, 347.784, -47.8782, 0.66", "-17.951, 348.204, -47.963, 0.88", "-18.0034, 349.907, -48.3628, 0.22", "-18.0483, 350.422, -48.4942, 0.59", "-18.1422, 351.151, -48.6952, 0.44", "-18.2938, 352.16, -48.9518, 0.22", "-18.3909, 352.777, -49.0849, 0.37", "-18.5787, 353.872, -49.2618, 0.15", "-18.7799, 354.949, -49.3609, 0.81", "-18.8984, 355.578, -49.3955, 1.11", "-19.0745, 356.563, -49.4131, 1.03", "-19.2225, 357.489, -49.3997, 0.29", "-19.3576, 358.408, -49.3903, 0.29", "-19.4871, 359.244, -49.3885, 0.29", "-19.727, 360.744, -49.4062, 0.22", "-19.8811, 361.658, -49.4274, 0.74", "-20.2363, 363.657, -49.515, 0.22", "-20.4671, 364.852, -49.574, 0.81", "-20.9685, 367.305, -49.7056, 0.22", "-21.0583, 367.734, -49.7298, 0.22", "-21.2412, 368.63, -49.7823, 0.81", "-21.2996, 368.961, -49.7995, 1.03", "-21.416, 369.747, -49.8277, 0.22", "-21.5133, 370.495, -49.8263, 0.44", "-21.6143, 371.441, -49.7969, 0.22", "-21.6842, 372.162, -49.7674, 0.44", "-21.7621, 373.078, -49.7185, 0.22", "-21.8518, 373.981, -49.6613, 0.44", "-21.9735, 374.921, -49.5818, 0.59", "-22.154, 375.91, -49.5241, 0.29", "-22.4582, 377.181, -49.5088, 0.44", "-22.8363, 378.486, -49.5365, 0.44", "-23.3995, 380.278, -49.6263, 0.81", "-23.71, 381.267, -49.7384, 0.96", "-24.1248, 382.577, -49.9898, 0.66", "-24.7392, 384.236, -50.408, 0.29", "-24.9667, 384.764, -50.5773, 0.44", "-25.3636, 385.626, -50.916, 0.15", "-25.936, 386.833, -51.4863, 0.44", "-26.3199, 387.686, -51.9219, 0.44", "-26.7082, 388.609, -52.3595, 0.15", "-26.8581, 388.947, -52.5476, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.5236, 195.661, -28.6919, 0.22", "-14.4012, 197.483, -30.0657, 0.22", "-13.773, 198.271, -30.6689, 0.22", "-13.1652, 199.032, -31.2525, 0.22", "-12.5298, 199.828, -31.8626, 0.22", "-12.0224, 200.464, -32.3498, 0.44", "-11.047, 201.686, -33.2864, 0.74", "-10.3191, 202.61, -33.8506, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-80.2816, 123.654, -3.9317, 0.29", "-81.2006, 123.341, -3.51771, 0.29", "-81.7552, 123.153, -3.26791, 0.29", "-82.5725, 122.875, -2.89975, 0.29", "-83.4727, 122.569, -2.49428, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-80.2816, 123.654, -3.9317, 0.22", "-81.489, 125.497, -3.92929, 0.22", "-82.1132, 126.45, -3.92805, 0.66", "-82.3923, 126.876, -3.92749, 0.66", "-82.9188, 127.679, -3.92644, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-104.482, 5.45732, -126.668, 0.22", "-102.639, 8.63283, -129.211, 0.22", "-102.194, 9.40029, -129.826, 0.22", "-101.334, 10.8824, -131.013, 0.88", "-101.058, 11.3593, -131.395, 0.66", "-100.819, 11.7704, -131.724, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-104.482, 5.45732, -126.668, 0.22", "-105.079, 6.33974, -127.101, 0.22", "-105.347, 6.64974, -127.298, 0.44", "-105.882, 7.1931, -127.707, 0.22", "-106.094, 7.39187, -127.864, 0.59", "-106.671, 7.92983, -128.271, 0.29", "-107.386, 8.59722, -128.776, 0.29", "-107.785, 8.91488, -129.059, 0.29", "-108.106, 9.13418, -129.301, 0.59", "-108.573, 9.39604, -129.677, 0.22", "-108.961, 9.60037, -129.986, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.3028, -52.7357, -61.3659, 0.37", "-73.6187, -54.2855, -61.7847, 0.37", "-73.8288, -55.3694, -62.0499, 0.15", "-74.0002, -56.2747, -62.215, 0.44", "-74.1524, -57.0498, -62.3316, 0.44", "-74.3745, -58.1435, -62.4733, 0.22", "-74.5794, -59.0713, -62.5778, 1.03", "-74.6758, -59.4243, -62.593, 1.03", "-75.0822, -60.6679, -62.5735, 0.29", "-75.393, -61.4919, -62.5379, 1.03", "-75.7365, -62.2546, -62.4768, 1.03", "-76.125, -63.0, -62.3957, 0.29", "-76.6956, -63.9912, -62.2533, 0.29", "-77.0395, -64.5352, -62.1513, 0.81", "-77.4043, -65.0528, -62.0355, 0.52", "-78.2638, -66.2029, -61.7507, 0.29", "-79.0025, -67.1459, -61.5032, 0.74", "-79.4565, -67.6693, -61.3339, 1.03", "-80.472, -68.7507, -60.9332, 0.22", "-80.9552, -69.2253, -60.7324, 0.22", "-81.2215, -69.4604, -60.6188, 0.59", "-81.4297, -69.634, -60.5339, 0.59", "-82.6587, -70.6753, -60.0414, 0.59", "-83.2389, -71.2351, -59.852, 0.37", "-84.1063, -72.1443, -59.631, 1.25", "-84.4144, -72.4898, -59.5614, 1.47", "-85.2038, -73.4071, -59.4188, 0.37", "-85.7192, -74.0219, -59.3771, 1.03", "-86.6011, -75.112, -59.417, 0.29", "-87.0015, -75.5761, -59.4482, 0.44", "-87.2675, -75.8715, -59.4427, 0.66", "-87.5478, -76.1786, -59.4067, 0.52", "-88.1604, -76.7819, -59.2414, 0.29", "-88.7481, -77.3106, -58.9931, 0.74", "-88.9985, -77.5144, -58.8286, 0.74", "-90.1808, -78.5071, -57.9381, 0.22", "-90.4635, -78.7635, -57.6957, 0.44", "-90.7929, -79.0762, -57.3591, 0.59", "-91.3528, -79.596, -56.7497, 0.37", "-92.0224, -80.2078, -56.0322, 0.74", "-92.3934, -80.5302, -55.6762, 0.74", "-92.922, -80.9749, -55.2565, 0.29", "-93.8398, -81.7579, -54.6055, 1.03", "-94.7207, -82.5476, -54.0737, 0.22", "-95.0858, -82.8736, -53.8978, 0.88", "-96.141, -83.8481, -53.5285, 0.29", "-96.7989, -84.4572, -53.3476, 0.15", "-97.2957, -84.9208, -53.2664, 0.74", "-98.0276, -85.6361, -53.267, 1.03", "-98.5329, -86.1508, -53.3274, 1.11", "-99.4787, -87.1286, -53.5207, 0.22", "-99.7146, -87.3851, -53.5899, 0.59", "-99.8952, -87.5966, -53.6487, 0.59", "-100.816, -88.7393, -53.9658, 0.22", "-101.115, -89.1551, -54.0625, 0.74", "-101.417, -89.6248, -54.1107, 0.74", "-101.887, -90.4598, -54.025, 0.22", "-102.329, -91.4193, -53.7851, 0.59", "-102.468, -91.8118, -53.655, 0.74", "-102.714, -92.7486, -53.2912, 0.22", "-102.978, -93.8791, -52.7873, 0.88", "-103.221, -95.1406, -52.1505, 0.15", "-103.285, -95.5725, -51.8928, 0.15", "-103.381, -96.2514, -51.4048, 0.74", "-103.441, -96.7122, -51.0624, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-73.3028, -52.7357, -61.3659, 0.29", "-73.984, -51.6781, -61.4796, 0.29", "-74.6375, -50.8433, -61.5894, 0.29", "-75.3661, -50.0424, -61.6491, 0.29", "-75.7382, -49.6651, -61.666, 0.29", "-76.6009, -48.8544, -61.6795, 0.52", "-77.1846, -48.3669, -61.6838, 0.74", "-77.7883, -47.9383, -61.6512, 0.37", "-78.6212, -47.4379, -61.6058, 0.66", "-78.9599, -47.2749, -61.5989, 1.03", "-79.7767, -46.9714, -61.5747, 1.03", "-80.9426, -46.6706, -61.5108, 0.22", "-81.6936, -46.5334, -61.4469, 0.22", "-82.5084, -46.4726, -61.2954, 0.44", "-83.0413, -46.474, -61.1605, 0.44", "-83.8664, -46.5147, -60.8962, 0.29", "-84.6141, -46.6039, -60.6112, 1.11", "-84.9961, -46.672, -60.4496, 1.25", "-86.5723, -47.0482, -59.7544, 0.66", "-87.4531, -47.2976, -59.3456, 0.22", "-87.9575, -47.4674, -59.0956, 0.22", "-88.5462, -47.7115, -58.7755, 0.22", "-89.0506, -47.9656, -58.5061, 0.81", "-89.4539, -48.1934, -58.3064, 0.81", "-89.8988, -48.4792, -58.1229, 0.29", "-90.5971, -48.9251, -57.8644, 0.88", "-91.7003, -49.5421, -57.5263, 0.22", "-92.1466, -49.7391, -57.4265, 0.52", "-92.828, -49.9868, -57.3155, 0.29", "-93.3262, -50.1407, -57.2739, 0.66", "-94.2908, -50.3987, -57.2778, 0.29", "-94.7587, -50.5366, -57.3289, 0.96", "-95.0453, -50.6268, -57.3759, 0.96", "-96.0586, -50.9557, -57.5299, 0.29", "-96.6797, -51.1583, -57.5849, 1.33", "-97.2905, -51.3406, -57.6007, 1.55", "-98.332, -51.5903, -57.5721, 0.29", "-98.8611, -51.6851, -57.5292, 0.29", "-99.5944, -51.7892, -57.4263, 0.52", "-100.521, -51.8757, -57.2838, 0.96", "-101.164, -51.9158, -57.1521, 0.44", "-101.978, -51.951, -56.9316, 0.29", "-103.027, -51.9573, -56.5717, 0.88", "-103.725, -51.9926, -56.3046, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.277, -45.3455, -55.7589, 0.29", "-74.7399, -45.8053, -56.0641, 0.29", "-75.3145, -46.3102, -56.2054, 0.29", "-75.8324, -46.7041, -56.2374, 0.81", "-76.2994, -47.0038, -56.217, 0.81", "-76.8265, -47.2651, -56.1308, 0.37", "-78.0957, -47.711, -55.7793, 0.37", "-78.7102, -47.7885, -55.4898, 0.59", "-79.1298, -47.7881, -55.2661, 0.88", "-79.609, -47.7529, -54.9961, 0.88", "-80.4026, -47.6671, -54.5245, 1.03", "-81.0827, -47.5943, -54.1028, 1.03", "-81.9571, -47.5349, -53.5182, 0.59", "-82.5318, -47.5545, -53.0674, 0.37", "-83.2093, -47.6929, -52.4434, 0.37", "-83.7845, -47.9326, -51.8521, 0.66", "-84.1996, -48.2012, -51.4039, 0.96", "-84.9166, -48.7899, -50.6101, 1.03", "-85.4331, -49.2631, -50.0275, 0.44", "-85.855, -49.6301, -49.5587, 0.44", "-86.1211, -49.8605, -49.2685, 0.66", "-86.4215, -50.1061, -48.9467, 0.88", "-86.7727, -50.3436, -48.4505, 0.88", "-87.1515, -50.5742, -47.7283, 0.44", "-87.4358, -50.7366, -47.001, 0.74", "-87.6215, -50.8713, -46.3325, 0.74", "-87.7536, -51.0318, -45.5399, 1.03", "-87.9094, -51.4762, -43.2638, 0.44", "-87.8898, -51.5876, -42.653, 0.44", "-87.857, -51.6242, -42.3833, 0.74", "-87.7233, -51.6907, -41.6252, 0.74", "-87.5738, -51.6997, -40.8696, 0.66", "-87.459, -51.6513, -40.4153, 0.52", "-87.2942, -51.5378, -39.936, 0.52", "-86.9306, -51.0075, -38.816, 1.03", "-86.7017, -50.4292, -38.1254, 0.22", "-86.6267, -49.8889, -37.8618, 0.22", "-86.6891, -48.7678, -37.7299, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-74.277, -45.3455, -55.7589, 0.29", "-75.2588, -44.3231, -56.3137, 0.29", "-75.7387, -43.8812, -56.4526, 0.29", "-76.1117, -43.5462, -56.464, 0.66", "-76.5317, -43.1636, -56.4434, 0.66", "-77.0704, -42.6941, -56.3979, 0.44", "-77.5992, -42.2332, -56.3534, 0.29", "-78.6651, -41.385, -56.1916, 0.59", "-79.5588, -40.6847, -55.9532, 1.03", "-80.2732, -40.1204, -55.6862, 1.4", "-80.58, -39.8774, -55.5334, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "51.9437, -83.21, -69.122, 0.81", "52.5366, -83.8496, -70.559, 0.81", "52.8721, -84.206, -71.2944, 1.11", "54.7359, -85.99, -74.9508, 0.44", "55.0906, -86.2734, -75.5771, 0.29", "55.552, -86.5795, -76.3134, 0.29", "56.3837, -87.0737, -77.579, 0.29", "56.9809, -87.3104, -78.4848, 0.59", "57.3346, -87.4509, -79.2298, 0.74", "57.7496, -87.5904, -80.1387, 0.37", "58.1833, -87.6799, -81.2127, 0.81", "58.4044, -87.6926, -81.7833, 0.96", "59.2401, -87.6611, -84.0487, 1.4", "60.6007, -87.4388, -88.7743, 0.74", "60.9283, -87.3464, -90.0954, 0.29", "61.2169, -87.2419, -91.3561, 0.29", "61.3831, -87.1647, -92.0874, 0.66", "62.1022, -86.8122, -94.9474, 1.69", "63.5463, -86.1151, -99.8512, 1.18", "64.6428, -85.6674, -103.016, 0.74", "65.249, -85.5139, -104.701, 1.47", "65.4929, -85.5049, -105.32, 1.47", "66.1596, -85.612, -106.841, 0.29", "67.0248, -85.9807, -108.327, 0.29", "67.987, -86.7273, -109.395, 1.11", "68.8838, -87.7111, -110.198, 0.29", "69.4508, -88.4881, -110.65, 1.25", "69.7677, -88.9746, -110.902, 1.25", "70.4373, -90.0917, -111.435, 0.15", "70.8549, -90.6954, -111.755, 0.59", "71.1378, -90.974, -111.974, 0.59", "71.9521, -91.5575, -112.631, 0.22", "72.9111, -92.0976, -113.389, 1.84", "73.5592, -92.3937, -113.89, 1.84", "74.9573, -92.9093, -114.93, 0.22", "75.8488, -93.2132, -115.541, 0.59", "76.9322, -93.6014, -116.23, 0.22", "77.7846, -93.9455, -116.73, 0.22", "78.6897, -94.4143, -117.197, 0.88", "79.1894, -94.7185, -117.43, 1.11", "80.586, -95.6922, -118.013, 0.22", "81.3161, -96.2306, -118.286, 1.33", "81.712, -96.5376, -118.434, 1.55", "82.7901, -97.4857, -118.841, 0.22", "83.4756, -98.1564, -119.101, 0.66", "83.8198, -98.5293, -119.241, 0.66", "84.503, -99.352, -119.558, 0.22", "85.1119, -100.118, -119.872, 0.44", "85.5979, -100.753, -120.151, 0.22", "86.0597, -101.358, -120.449, 0.96", "86.4286, -101.831, -120.65, 1.18", "87.6792, -103.454, -121.23, 0.15", "88.1987, -104.105, -121.426, 0.96", "88.5743, -104.556, -121.594, 0.96", "89.2488, -105.355, -121.932, 0.15", "90.5798, -106.962, -122.677, 0.81", "91.2498, -107.748, -123.124, 0.81", "92.1356, -108.728, -123.803, 0.29", "93.5751, -110.188, -125.033, 0.44", "94.1369, -110.688, -125.545, 0.81", "94.5729, -110.992, -125.962, 0.81", "95.6225, -111.516, -127.086, 0.37", "96.3385, -111.759, -127.824, 0.29", "97.1308, -111.956, -128.565, 0.59", "97.9512, -112.132, -129.245, 0.44", "99.0061, -112.326, -130.094, 0.29", "100.333, -112.551, -131.105, 0.59", "101.147, -112.674, -131.766, 0.59", "101.85, -112.76, -132.393, 0.29", "103.0, -112.861, -133.465, 0.29", "103.687, -112.91, -134.132, 0.29", "104.287, -112.963, -134.668, 0.74", "105.787, -113.083, -135.871, 0.74", "106.462, -113.153, -136.4, 0.37", "106.894, -113.203, -136.73, 1.03", "107.517, -113.279, -137.186, 1.03", "108.785, -113.504, -138.121, 0.29", "110.669, -113.961, -139.456, 1.11", "112.101, -114.415, -140.359, 0.44", "112.529, -114.576, -140.647, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "51.9437, -83.21, -69.122, 0.52", "53.3069, -83.1386, -69.0456, 0.52", "54.1855, -83.0365, -69.0192, 0.52", "55.0844, -82.8991, -68.9989, 0.81", "55.7639, -82.7272, -69.0004, 0.81", "56.8945, -82.3268, -69.0256, 0.29", "57.7408, -81.9231, -69.072, 0.29", "58.4406, -81.3731, -69.1666, 0.88", "58.989, -80.7565, -69.2689, 1.11", "59.6181, -79.7923, -69.4455, 0.44", "60.05, -78.8295, -69.6386, 0.37", "60.3858, -77.71, -69.8864, 0.37", "60.682, -76.2144, -70.1866, 0.66", "60.799, -75.2402, -70.3606, 1.03", "60.8578, -74.2184, -70.4856, 1.03", "60.8767, -72.6091, -70.5187, 0.52", "60.8726, -72.0121, -70.4707, 0.37", "60.8838, -71.0244, -70.2901, 1.03", "60.9224, -70.4346, -70.1208, 1.03", "61.1117, -69.1497, -69.6942, 0.29", "61.578, -67.0947, -68.9052, 0.22", "61.803, -66.3647, -68.5945, 0.66", "62.0175, -65.7433, -68.3403, 0.52", "62.3335, -64.8368, -68.0293, 0.37", "62.7875, -63.6029, -67.6795, 0.74", "63.1138, -62.8091, -67.4888, 0.22", "63.5445, -61.8425, -67.2641, 0.88", "63.7436, -61.3535, -67.1336, 0.88", "64.2388, -59.9822, -66.7422, 0.29", "64.4462, -59.2808, -66.5368, 0.44", "64.6165, -58.5557, -66.3089, 0.29", "64.7635, -57.7418, -66.1004, 0.29", "64.8904, -56.5374, -65.8613, 0.81", "64.9567, -55.6598, -65.7005, 1.03", "64.9826, -55.0514, -65.6046, 1.03", "64.9829, -54.3784, -65.5232, 0.22", "64.977, -53.0488, -65.3629, 0.22", "65.0237, -51.9729, -65.1706, 0.81", "65.0925, -51.4426, -65.0239, 0.81", "65.2777, -50.6876, -64.6885, 0.44", "65.5408, -49.9583, -64.2733, 0.44", "65.9708, -48.9632, -63.6051, 0.96", "66.4228, -47.9967, -62.8492, 0.96", "66.7176, -47.3548, -62.3395, 1.11", "67.1234, -46.4311, -61.6447, 0.29", "67.4463, -45.7041, -61.1161, 0.81", "67.8166, -44.9079, -60.5788, 0.81", "68.3496, -43.7888, -59.9587, 0.44", "68.8163, -42.7084, -59.4731, 1.11", "69.1413, -41.9365, -59.1701, 1.11", "69.3763, -41.3793, -58.9797, 0.81", "69.6642, -40.807, -58.7941, 0.52", "70.3945, -39.685, -58.4763, 0.22", "71.2177, -38.752, -58.2942, 0.22", "71.8958, -38.2338, -58.2645, 0.59", "72.1646, -38.1008, -58.2928, 0.59", "73.7302, -37.5729, -58.6343, 0.52", "74.6515, -37.3823, -58.8939, 0.29", "75.8719, -37.2302, -59.282, 0.52", "77.0559, -37.0964, -59.7045, 0.44", "77.8473, -36.9876, -60.0158, 0.81", "78.5136, -36.8523, -60.2834, 1.03", "79.7433, -36.4677, -60.7595, 0.29", "80.3663, -36.2206, -60.9383, 0.29", "81.0898, -35.9151, -61.073, 0.81", "81.6004, -35.7138, -61.1293, 0.81", "82.6349, -35.3841, -61.1957, 0.52", "83.9712, -35.1374, -61.214, 0.15", "85.0237, -35.1461, -61.1672, 0.44", "85.7368, -35.2797, -61.0425, 0.74", "86.2714, -35.4194, -60.8955, 1.03", "86.8326, -35.568, -60.7032, 1.03", "87.6495, -35.755, -60.357, 0.88", "88.6954, -35.8507, -59.8468, 0.37", "90.2813, -35.5784, -59.0902, 0.81", "91.1067, -35.2036, -58.7208, 0.81", "91.889, -34.6377, -58.3206, 0.29", "92.4237, -34.1342, -58.0044, 0.29", "93.1495, -33.3235, -57.5441, 0.15", "93.7442, -32.6637, -57.2047, 1.03", "94.12, -32.3011, -57.0134, 1.03", "95.7093, -31.1, -56.2488, 0.52", "96.6086, -30.5871, -55.8423, 0.52", "97.6233, -30.1686, -55.4203, 0.44", "99.373, -29.6517, -54.7629, 0.88", "100.445, -29.3972, -54.4148, 0.74", "101.483, -29.1961, -54.17, 0.44", "102.178, -29.1024, -54.0852, 0.37", "103.092, -29.0178, -54.0331, 0.22", "103.871, -28.9932, -54.0359, 0.22", "104.906, -28.9583, -54.0829, 0.44", "105.558, -28.9135, -54.1466, 0.22", "106.417, -28.8268, -54.2554, 0.22", "107.267, -28.7395, -54.403, 0.44", "108.645, -28.6801, -54.7115, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.92783, 445.175, -63.24, 0.74", "-6.83917, 447.322, -63.9622, 0.74", "-6.80598, 448.228, -64.2337, 0.52", "-6.75846, 449.122, -64.4704, 0.37", "-6.68859, 450.544, -64.8122, 0.37", "-6.66214, 451.08, -64.9321, 0.59", "-6.59248, 452.22, -65.1718, 0.74", "-6.54232, 452.941, -65.2889, 0.74", "-6.431, 454.312, -65.5421, 0.37", "-6.34969, 455.311, -65.738, 0.37", "-6.21358, 457.041, -66.08, 0.81", "-6.12683, 458.202, -66.3106, 0.96", "-6.03328, 459.382, -66.5414, 0.96", "-5.91134, 460.926, -66.8432, 0.66", "-5.84672, 461.83, -67.0195, 0.44", "-5.79351, 462.534, -67.1487, 0.44", "-5.71064, 463.861, -67.376, 0.44", "-5.65765, 465.031, -67.5606, 0.81", "-5.64128, 465.841, -67.6784, 1.03", "-5.6389, 466.685, -67.7942, 1.03", "-5.66466, 468.105, -68.0002, 0.74", "-5.71268, 469.211, -68.1678, 0.74", "-5.82951, 470.983, -68.432, 0.44", "-5.99313, 472.735, -68.6974, 0.44", "-6.07857, 473.581, -68.8418, 1.03", "-6.15969, 474.394, -68.9979, 1.18", "-6.28558, 475.699, -69.3027, 0.52", "-6.39194, 476.949, -69.6686, 0.74", "-6.49971, 478.205, -70.1177, 1.11", "-6.59357, 479.359, -70.5807, 0.44", "-6.68283, 480.383, -71.0199, 0.37", "-6.76695, 481.475, -71.5053, 0.37", "-6.86335, 483.008, -72.194, 0.59", "-6.91334, 484.126, -72.6808, 0.96", "-6.92935, 484.925, -72.9926, 1.18", "-6.92795, 485.663, -73.234, 1.18", "-6.87309, 487.312, -73.6988, 0.44", "-6.78807, 488.465, -73.9488, 0.37", "-6.69328, 489.291, -74.0888, 0.59", "-6.53961, 490.321, -74.2582, 0.44", "-6.34245, 491.571, -74.4963, 0.44", "-6.19593, 492.494, -74.6921, 0.74", "-6.09686, 493.185, -74.851, 0.74", "-6.03502, 493.712, -74.985, 0.74", "-5.94558, 494.776, -75.2736, 0.37", "-5.87479, 496.084, -75.6399, 1.18", "-5.85595, 496.571, -75.7729, 1.18", "-5.79924, 497.628, -76.0337, 0.88", "-5.71288, 498.693, -76.2716, 0.59", "-5.56543, 500.085, -76.5405, 0.88", "-5.45102, 501.105, -76.7066, 1.11", "-5.32019, 502.14, -76.8476, 1.11", "-5.12593, 503.538, -77.0329, 0.52", "-4.89384, 504.927, -77.2167, 0.44", "-4.73546, 505.705, -77.3197, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.92783, 445.175, -63.24, 0.29", "-7.06661, 446.305, -62.7714, 0.29", "-7.18775, 447.535, -62.3286, 0.66", "-7.25483, 448.247, -62.076, 0.66", "-7.30977, 448.887, -61.8438, 0.37", "-7.4031, 449.976, -61.4307, 0.22", "-7.43258, 450.315, -61.2966, 0.66", "-7.45413, 450.759, -61.1181, 0.66", "-7.51516, 451.976, -60.6691, 0.37", "-7.56867, 452.712, -60.4106, 0.37", "-7.66154, 453.704, -60.0949, 0.59", "-7.69947, 454.167, -59.9661, 0.37", "-7.75441, 454.88, -59.7861, 0.29", "-7.81922, 455.679, -59.6177, 0.74", "-7.85716, 456.118, -59.55, 0.96", "-7.91127, 456.698, -59.4674, 0.52", "-8.00372, 457.516, -59.3566, 0.44", "-8.08809, 458.275, -59.2343, 0.29", "-8.19011, 459.285, -59.0239, 0.29", "-8.25308, 459.922, -58.8508, 0.66", "-8.30796, 460.596, -58.6431, 0.81", "-8.36585, 461.725, -58.27, 0.29", "-8.38544, 463.15, -57.7775, 0.29", "-8.35698, 464.136, -57.4319, 0.29", "-8.29769, 464.992, -57.1504, 0.88", "-8.23607, 465.642, -56.9632, 0.88", "-8.14775, 466.409, -56.7706, 0.29", "-7.99894, 467.36, -56.5955, 0.29", "-7.94816, 467.657, -56.5658, 0.52", "-7.74653, 468.708, -56.5242, 0.22", "-7.59392, 469.339, -56.5308, 0.52", "-7.42739, 469.919, -56.5441, 0.52", "-6.90697, 471.441, -56.588, 0.44", "-6.58807, 472.249, -56.6194, 0.96", "-6.37821, 472.723, -56.6405, 0.96", "-5.86248, 473.776, -56.681, 0.29", "-5.4101, 474.634, -56.7127, 0.22", "-4.98723, 475.408, -56.7332, 0.81", "-4.48465, 476.31, -56.7326, 0.29", "-4.09431, 477.016, -56.7191, 0.29", "-3.74387, 477.673, -56.69, 0.66", "-3.60352, 477.945, -56.6641, 0.81", "-3.18845, 478.782, -56.5537, 0.29", "-2.94255, 479.312, -56.4646, 0.29", "-2.77399, 479.704, -56.3862, 0.81", "-2.60943, 480.126, -56.3006, 0.81", "-2.30707, 480.991, -56.1549, 0.29", "-1.9759, 482.062, -56.0084, 0.29", "-1.75959, 482.856, -55.9231, 0.88", "-1.65281, 483.28, -55.8894, 1.03", "-1.49043, 483.943, -55.8496, 0.74", "-1.04612, 485.812, -55.7656, 0.22", "-0.871366, 486.531, -55.7418, 0.96", "-0.716519, 487.102, -55.7155, 1.11", "-0.380258, 488.3, -55.6465, 0.29", "-0.189107, 488.958, -55.6, 0.59", "-0.0556371, 489.444, -55.5449, 0.59", "0.14223, 490.199, -55.4235, 0.59", "0.378875, 491.161, -55.2244, 0.29", "0.544095, 491.864, -55.0494, 0.44", "0.741131, 492.966, -54.7123, 0.29", "0.895508, 494.127, -54.3268, 0.81", "0.932807, 494.451, -54.211, 0.81", "0.971886, 494.875, -54.0557, 1.03", "1.03252, 495.538, -53.8088, 0.37", "1.15908, 496.675, -53.3715, 0.29", "1.24131, 497.302, -53.15, 0.29", "1.41418, 498.501, -52.7886, 0.29", "1.50086, 499.113, -52.6502, 0.81", "1.63689, 500.308, -52.4358, 0.37", "1.72355, 501.262, -52.2509, 0.29", "1.82992, 502.203, -52.0431, 1.11", "1.87853, 502.805, -51.8774, 0.66", "1.8784, 503.975, -51.4632, 0.29", "1.8046, 505.034, -50.974, 0.29", "1.65336, 506.171, -50.2879, 0.29", "1.57438, 506.81, -49.7947, 0.29", "1.50239, 507.342, -49.3323, 0.29", "1.37437, 508.085, -48.6516, 0.81", "1.26684, 508.506, -48.2435, 1.11", "1.12814, 509.052, -47.7594, 0.88", "0.75854, 510.664, -46.5576, 0.29", "0.637908, 511.313, -46.1149, 0.29", "0.551327, 512.019, -45.6791, 0.74", "0.439842, 513.09, -45.1043, 0.29", "0.325612, 513.995, -44.6692, 0.29", "0.187002, 515.007, -44.2339, 0.66", "0.136353, 515.466, -44.0755, 0.88", "0.136237, 516.51, -43.7455, 0.22", "0.207822, 517.207, -43.5627, 0.37", "0.217072, 517.276, -43.5531, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-80.58, -39.8774, -55.5334, 0.22", "-81.918, -39.4119, -56.1953, 0.22", "-82.4934, -39.2548, -56.4626, 0.22", "-83.351, -39.0825, -56.8366, 0.37", "-84.2322, -38.9492, -57.204, 0.22", "-85.3527, -38.8237, -57.6543, 0.22", "-86.5357, -38.7128, -58.1218, 0.81", "-87.104, -38.6899, -58.345, 0.81", "-87.8701, -38.7008, -58.6422, 0.52", "-88.5509, -38.7478, -58.9066, 0.29", "-89.1187, -38.8018, -59.1306, 0.66", "-89.9207, -38.8841, -59.4845, 0.66", "-90.5373, -38.9298, -59.7921, 0.29", "-91.3825, -38.9822, -60.2606, 0.29", "-92.1963, -39.0137, -60.7633, 0.96", "-92.9452, -39.0602, -61.322, 1.03", "-93.9575, -39.153, -62.1678, 0.22", "-94.2119, -39.1863, -62.3976, 0.22", "-94.6911, -39.269, -62.8406, 0.88", "-95.1043, -39.38, -63.2242, 0.88", "-96.2139, -39.7926, -64.2926, 0.22", "-96.7799, -40.0675, -64.8815, 0.22", "-97.2775, -40.3586, -65.397, 0.22", "-97.7109, -40.6593, -65.8362, 0.88", "-98.1882, -41.0906, -66.3075, 1.11", "-98.7097, -41.7331, -66.8325, 0.88", "-99.3511, -42.8351, -67.4749, 0.29", "-99.7255, -43.7855, -67.9102, 1.18", "-99.8914, -44.3086, -68.1285, 1.33", "-100.208, -45.582, -68.6189, 0.29", "-100.378, -46.5671, -68.9286, 0.22", "-100.481, -47.465, -69.0881, 0.22", "-100.523, -48.6585, -69.1397, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-80.58, -39.8774, -55.5334, 0.66", "-82.426, -38.5651, -53.906, 0.66", "-82.9836, -38.0912, -53.3822, 0.66", "-83.6242, -37.4415, -52.7448, 0.81", "-84.1662, -36.8457, -52.2214, 0.81", "-85.5077, -35.3938, -51.0299, 0.96", "-86.5897, -34.2592, -50.1504, 1.33", "-87.2522, -33.5143, -49.7038, 0.44", "-87.8351, -32.8364, -49.3679, 0.44", "-88.375, -32.1997, -49.1729, 0.37", "-89.1985, -31.2425, -49.1756, 0.37", "-89.558, -30.8895, -49.3345, 0.37", "-90.2087, -30.3418, -49.7505, 0.29", "-90.9174, -29.8165, -50.2086, 0.66", "-91.4663, -29.4248, -50.4812, 0.88", "-92.1348, -28.97, -50.7123, 0.88", "-93.1254, -28.3946, -50.8731, 0.66", "-93.7663, -28.1118, -50.814, 0.66", "-94.6277, -27.8084, -50.5754, 0.81", "-96.8172, -27.1016, -49.694, 0.81", "-97.7628, -26.7717, -49.2003, 0.59", "-98.775, -26.3505, -48.5593, 0.44", "-99.7848, -25.8025, -47.8216, 0.44", "-100.326, -25.4203, -47.4116, 0.37", "-100.877, -24.8792, -47.0322, 0.37", "-101.445, -24.009, -46.7735, 0.66", "-101.838, -23.2327, -46.728, 0.66", "-102.27, -22.3286, -46.8921, 0.44", "-102.645, -21.705, -47.1739, 0.66", "-103.048, -21.2677, -47.5163, 0.66", "-103.705, -20.809, -48.0485, 0.66", "-105.319, -20.0351, -49.2412, 0.37", "-105.965, -19.7961, -49.6668, 0.66", "-106.926, -19.5137, -50.2449, 0.66", "-107.741, -19.3243, -50.6649, 0.44", "-108.521, -19.1784, -50.9957, 0.37", "-109.152, -19.074, -51.1615, 0.59", "-110.163, -18.8984, -51.261, 0.44", "-110.876, -18.7784, -51.2952, 0.37", "-111.825, -18.6143, -51.284, 0.37", "-113.054, -18.4195, -51.2306, 0.37", "-114.675, -18.1749, -51.1194, 0.37", "-115.803, -17.9997, -51.0165, 0.29", "-116.407, -17.8911, -50.9608, 0.52", "-117.668, -17.581, -50.8711, 0.29", "-118.704, -17.2793, -50.7928, 0.37", "-119.352, -17.0538, -50.7611, 0.37", "-120.006, -16.7812, -50.8131, 0.96", "-120.809, -16.37, -50.9526, 0.66", "-121.31, -16.0543, -51.0726, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.73546, 505.705, -77.3197, 0.52", "-4.67348, 506.84, -77.5284, 0.52", "-4.64028, 507.719, -77.6812, 1.03", "-4.621, 508.43, -77.801, 1.03", "-4.59798, 509.805, -78.0389, 1.11", "-4.56188, 511.393, -78.303, 0.29", "-4.51944, 512.863, -78.555, 0.29", "-4.47065, 514.236, -78.813, 0.96", "-4.44472, 514.865, -78.9217, 1.11", "-4.38415, 516.305, -79.1408, 0.66", "-4.33401, 517.919, -79.3478, 0.52", "-4.31093, 519.356, -79.4957, 0.52", "-4.29346, 520.853, -79.6152, 0.52", "-4.29302, 521.981, -79.6723, 0.81", "-4.31505, 523.831, -79.734, 1.11", "-4.33663, 524.858, -79.7497, 1.33", "-4.42629, 527.449, -79.7755, 0.44", "-4.47374, 528.645, -79.7823, 0.44", "-4.54187, 530.714, -79.8144, 0.37", "-4.56502, 531.957, -79.8526, 0.96", "-4.56083, 533.269, -79.9253, 1.25", "-4.53439, 534.138, -79.9946, 1.25", "-4.47022, 535.082, -80.0934, 1.03", "-4.40204, 535.808, -80.1807, 0.74", "-4.28555, 536.85, -80.3129, 0.52", "-4.18724, 537.809, -80.42, 0.37", "-4.09057, 538.829, -80.5224, 0.37", "-3.98144, 540.148, -80.63, 0.37", "-3.87032, 541.831, -80.7522, 0.66", "-3.82657, 542.764, -80.8141, 0.66", "-3.76352, 544.33, -80.9299, 0.66", "-3.71731, 545.678, -81.0295, 0.29", "-3.67866, 546.883, -81.131, 0.29", "-3.65606, 547.728, -81.2075, 0.81", "-3.62067, 549.216, -81.3587, 1.03", "-3.597, 550.419, -81.4877, 1.18", "-3.58002, 551.331, -81.5937, 0.81", "-3.56591, 552.583, -81.7537, 0.29", "-3.55517, 553.692, -81.8972, 0.29", "-3.54161, 554.822, -82.0441, 0.96", "-3.5295, 556.106, -82.2084, 1.11", "-3.50947, 557.071, -82.3255, 1.11", "-3.45055, 558.656, -82.522, 0.74", "-3.3799, 560.025, -82.6811, 0.44", "-3.284, 561.402, -82.8306, 0.88", "-3.20595, 562.398, -82.9302, 0.88", "-3.07864, 563.811, -83.0729, 0.52", "-2.92632, 565.304, -83.2271, 0.52", "-2.75655, 566.798, -83.3843, 0.52", "-2.5934, 568.369, -83.5524, 0.52", "-2.48645, 569.659, -83.6867, 1.11", "-2.44055, 570.318, -83.7578, 1.11", "-2.38199, 571.559, -83.8893, 0.81", "-2.317, 573.237, -84.0707, 0.29", "-2.27246, 574.827, -84.2505, 0.29", "-2.25831, 575.753, -84.3543, 0.96", "-2.25604, 576.805, -84.4581, 1.11", "-2.28527, 577.915, -84.545, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.73546, 505.705, -77.3197, 0.44", "-3.50922, 504.463, -76.8166, 0.44", "-2.65731, 503.6, -76.4671, 0.37", "-1.28687, 502.211, -75.9048, 0.29", "-0.631913, 501.548, -75.636, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-121.31, -16.0543, -51.0726, 0.22", "-120.303, -15.3627, -50.7737, 0.22", "-119.589, -14.8722, -50.5617, 0.22", "-118.881, -14.3859, -50.3515, 0.59", "-118.401, -14.0564, -50.2091, 0.59", "-117.772, -13.6243, -50.0223, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-121.31, -16.0543, -51.0726, 0.37", "-122.083, -14.4703, -51.6822, 0.37", "-122.747, -13.2725, -52.1815, 0.37", "-123.463, -12.1206, -52.7014, 0.22", "-124.23, -10.8865, -53.2584, 0.22", "-124.782, -9.99908, -53.6589, 0.22", "-125.373, -9.04722, -54.0886, 0.22", "-125.589, -8.7535, -54.2343, 0.52", "-126.112, -8.17868, -54.566, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.28527, 577.915, -84.545, 0.22", "-2.48627, 579.886, -86.6261, 0.22", "-2.58141, 580.244, -86.9775, 0.29", "-2.84841, 580.873, -87.5824, 0.29", "-2.99352, 581.063, -87.7827, 0.66", "-3.27807, 581.329, -88.0838, 0.66", "-3.64948, 581.664, -88.4439, 0.29", "-4.23878, 582.071, -88.7507, 0.88", "-4.51054, 582.258, -88.8804, 0.88", "-5.40122, 582.9, -89.279, 0.29", "-5.73977, 583.192, -89.4288, 0.29", "-6.14949, 583.681, -89.6102, 0.29", "-6.50558, 584.311, -89.8167, 0.66", "-6.77193, 584.924, -90.0087, 0.22", "-6.96279, 585.417, -90.1544, 0.22", "-7.16442, 585.924, -90.294, 0.22", "-7.57473, 586.825, -90.5416, 0.96", "-8.13659, 587.84, -90.8484, 1.33", "-8.82393, 588.923, -91.2102, 0.29", "-9.03957, 589.25, -91.3264, 0.29", "-9.51913, 589.937, -91.5748, 0.29", "-9.92724, 590.46, -91.7704, 0.29", "-10.4121, 590.952, -91.9471, 0.96", "-10.7018, 591.177, -91.9951, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.28527, 577.915, -84.545, 0.29", "-2.1353, 579.803, -84.5662, 0.29", "-2.02361, 581.227, -84.5817, 0.29", "-1.88794, 583.253, -84.605, 0.29", "-1.7918, 584.961, -84.626, 0.74", "-1.73585, 586.167, -84.6417, 1.03", "-1.70345, 587.001, -84.6531, 1.03", "-1.63475, 589.046, -84.677, 0.29", "-1.55567, 590.882, -84.701, 0.29", "-1.50983, 591.796, -84.7107, 0.96", "-1.45881, 592.711, -84.7185, 1.18", "-1.37972, 594.135, -84.735, 0.59", "-1.29994, 595.478, -84.7439, 0.37", "-1.16256, 597.434, -84.7472, 0.37", "-1.02895, 599.022, -84.743, 0.29", "-0.858309, 601.125, -84.734, 0.29", "-0.759243, 602.617, -84.7195, 0.88", "-0.729609, 603.205, -84.7134, 1.03", "-0.704343, 604.173, -84.7063, 1.03", "-0.690068, 605.458, -84.7008, 1.03", "-0.670915, 607.207, -84.6998, 0.44", "-0.630956, 608.892, -84.7011, 0.74", "-0.617367, 609.438, -84.7038, 0.74", "-0.588926, 610.775, -84.7252, 0.44", "-0.581133, 611.56, -84.7401, 0.37", "-0.560701, 612.499, -84.7593, 0.74", "-0.518441, 613.284, -84.7756, 0.96", "-0.406511, 614.62, -84.8196, 0.29", "-0.327249, 615.386, -84.8399, 0.29", "-0.185142, 616.544, -84.8682, 0.81", "-0.124975, 616.963, -84.8782, 0.81", "0.0027585, 617.794, -84.9048, 0.37", "0.17123, 619.063, -84.9497, 0.37", "0.269425, 619.899, -84.9849, 1.03", "0.321001, 620.638, -85.0218, 1.03", "0.36697, 622.092, -85.1008, 1.03", "0.354776, 623.442, -85.1804, 0.37", "0.263585, 625.279, -85.281, 0.29", "0.179418, 626.291, -85.3299, 0.29", "0.0321896, 627.661, -85.3837, 0.88", "-0.0713577, 628.498, -85.4057, 1.25", "-0.180131, 629.238, -85.4123, 1.25", "-0.349164, 630.413, -85.3992, 0.74", "-0.479131, 631.411, -85.3765, 0.74", "-0.697905, 633.238, -85.317, 1.25", "-0.798241, 634.24, -85.2845, 1.25", "-0.881006, 635.121, -85.2628, 0.52", "-0.980363, 636.292, -85.2423, 0.29", "-1.05338, 637.212, -85.2374, 0.52", "-1.12139, 638.126, -85.2397, 0.81", "-1.29147, 640.378, -85.2732, 0.37", "-1.42378, 642.043, -85.3048, 0.37", "-1.45687, 642.466, -85.3147, 1.03", "-1.52892, 643.31, -85.3351, 1.4", "-1.57926, 643.88, -85.3489, 1.4", "-1.70657, 645.467, -85.3865, 0.52", "-1.80431, 646.803, -85.4172, 0.52", "-1.88664, 648.148, -85.4468, 0.81", "-1.93228, 649.143, -85.4674, 0.81", "-1.96433, 650.146, -85.487, 0.81", "-1.99124, 651.365, -85.5098, 0.44", "-1.99722, 652.197, -85.5242, 0.44", "-1.9906, 653.445, -85.5446, 0.81", "-1.97862, 654.731, -85.5651, 0.88", "-1.95099, 656.139, -85.5864, 1.18", "-1.92498, 657.393, -85.6052, 1.4", "-1.91281, 657.997, -85.6143, 1.4", "-1.8857, 658.902, -85.6346, 0.88", "-1.78369, 661.237, -85.7011, 0.37", "-1.71598, 662.442, -85.7417, 0.37", "-1.65727, 663.275, -85.7726, 0.66", "-1.58802, 664.105, -85.8029, 0.96", "-1.49427, 665.102, -85.8362, 0.37", "-1.41378, 665.894, -85.8615, 0.74", "-1.26533, 667.247, -85.921, 0.37", "-1.14272, 668.426, -85.9798, 0.81", "-1.03598, 669.51, -86.0426, 1.03", "-0.845584, 671.628, -86.2087, 0.22", "-0.723026, 673.103, -86.3435, 0.22", "-0.583732, 674.818, -86.5245, 0.22", "-0.46004, 676.401, -86.7208, 1.25", "-0.400935, 677.175, -86.8342, 1.33", "-0.309631, 678.492, -87.0491, 0.44", "-0.2338, 679.602, -87.2629, 0.44", "-0.120894, 680.963, -87.5443, 0.44", "-0.0151789, 682.051, -87.7774, 0.37", "0.14788, 683.658, -88.1226, 0.37", "0.237555, 684.48, -88.2834, 0.37", "0.363101, 685.687, -88.4951, 0.74", "0.445694, 686.58, -88.6453, 1.03", "0.522158, 687.519, -88.7835, 0.74", "0.580987, 688.288, -88.8676, 0.29", "0.661786, 689.443, -88.9528, 0.29", "0.70085, 690.106, -88.9829, 0.66", "0.749322, 691.04, -89.0023, 0.66", "0.80475, 692.375, -89.0296, 0.22", "0.846095, 693.382, -89.0431, 0.52", "0.88075, 694.085, -89.0529, 0.52", "1.00659, 696.514, -89.0712, 0.22", "1.10534, 697.886, -89.056, 0.59", "1.1476, 698.387, -89.0424, 0.59", "1.27024, 699.653, -88.9881, 0.22", "1.35539, 700.469, -88.9467, 0.81", "1.42127, 701.062, -88.9133, 0.81", "1.61926, 702.631, -88.824, 0.22", "1.70726, 703.286, -88.7907, 0.59", "1.76292, 703.649, -88.7763, 0.59", "2.13345, 706.078, -88.721, 0.22", "2.23763, 706.841, -88.7132, 0.22", "2.39575, 708.158, -88.7203, 0.74", "2.45065, 708.779, -88.7321, 0.81", "2.51274, 709.69, -88.7481, 0.81", "2.59148, 711.266, -88.772, 0.22", "2.64705, 712.85, -88.7923, 0.22", "2.66947, 713.848, -88.8026, 0.22", "2.67865, 715.111, -88.8132, 0.81", "2.67937, 715.453, -88.8153, 0.81", "2.70463, 717.53, -88.8366, 0.22", "2.70856, 717.635, -88.8386, 0.52", "2.87602, 719.993, -88.9083, 0.29", "3.00525, 721.319, -88.9595, 0.88", "3.09652, 722.075, -88.9963, 0.88", "3.26652, 723.438, -89.0725, 0.22", "3.36563, 724.306, -89.1253, 0.22", "3.48735, 725.323, -89.1848, 0.96", "3.5407, 725.743, -89.2079, 0.96", "3.7627, 727.425, -89.2879, 0.22", "3.87792, 728.421, -89.3256, 0.22", "4.02578, 729.748, -89.355, 0.88", "4.16721, 731.087, -89.3722, 0.22", "4.29645, 732.431, -89.3836, 0.88", "4.34103, 732.85, -89.3868, 0.88", "4.51023, 734.247, -89.3958, 0.22", "4.66014, 735.271, -89.4001, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.7018, 591.177, -91.9951, 0.37", "-11.2654, 592.361, -92.2274, 0.37", "-11.4481, 592.758, -92.3098, 0.59", "-11.7508, 593.493, -92.463, 0.59", "-11.9754, 594.117, -92.6002, 0.29", "-12.3446, 595.192, -92.8586, 0.29", "-12.5434, 595.777, -93.0111, 0.29", "-12.7178, 596.289, -93.1863, 0.52", "-12.8789, 596.779, -93.3931, 0.22", "-13.0837, 597.39, -93.7019, 0.52", "-13.3241, 598.047, -94.0487, 0.81", "-13.4973, 598.517, -94.2769, 0.81", "-13.971, 599.687, -94.7963, 0.22", "-14.2318, 600.275, -95.0334, 0.81", "-14.5404, 600.914, -95.2536, 0.81", "-14.9028, 601.641, -95.4439, 0.29", "-15.4213, 602.667, -95.6548, 0.29", "-15.8114, 603.39, -95.7888, 0.81", "-16.1297, 603.917, -95.889, 1.11", "-16.4278, 604.39, -96.0138, 0.74", "-16.8158, 605.029, -96.2248, 0.29", "-17.3512, 605.915, -96.5705, 0.29", "-17.7878, 606.644, -96.866, 0.29", "-18.3506, 607.653, -97.277, 1.03", "-18.7866, 608.495, -97.605, 1.18", "-19.5056, 609.977, -98.1566, 0.29", "-19.7627, 610.559, -98.3602, 0.29", "-20.1299, 611.498, -98.6657, 1.55", "-20.3133, 612.001, -98.8232, 1.33", "-20.5835, 612.714, -99.0378, 0.81", "-20.8989, 613.463, -99.2703, 0.52", "-21.3935, 614.564, -99.6341, 0.29", "-21.8184, 615.506, -99.9575, 0.52", "-21.9721, 615.864, -100.079, 0.81", "-22.5601, 617.346, -100.557, 0.22", "-22.9123, 618.372, -100.873, 0.22", "-23.0659, 618.925, -101.015, 0.66", "-23.1873, 619.53, -101.16, 0.66", "-23.331, 620.691, -101.436, 0.22", "-23.3622, 621.215, -101.592, 0.52", "-23.3746, 621.665, -101.753, 0.52", "-23.4436, 622.635, -102.119, 0.29", "-23.5726, 623.659, -102.518, 0.96", "-23.6694, 624.181, -102.72, 0.96", "-24.0383, 625.794, -103.372, 0.22", "-24.345, 626.939, -103.84, 0.96", "-24.5968, 627.732, -104.168, 0.22", "-24.7443, 628.106, -104.323, 0.59", "-24.9437, 628.522, -104.47, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.7018, 591.177, -91.9951, 0.15", "-12.2125, 590.866, -91.9809, 0.15", "-12.6553, 590.783, -91.9629, 0.52", "-12.9436, 590.731, -91.9472, 0.66", "-13.9795, 590.547, -91.8834, 0.22", "-14.907, 590.373, -91.8137, 0.22", "-15.291, 590.295, -91.773, 0.59", "-15.8649, 590.202, -91.6986, 0.66", "-16.8774, 590.028, -91.5377, 0.29", "-17.2406, 589.962, -91.4678, 0.81", "-17.9628, 589.815, -91.3175, 0.96", "-18.7872, 589.634, -91.1568, 0.15", "-19.6376, 589.438, -91.0121, 0.15", "-20.4691, 589.241, -90.8821, 0.15", "-21.1593, 589.074, -90.7757, 0.88", "-21.6639, 588.934, -90.702, 0.88", "-23.0668, 588.536, -90.5201, 0.22", "-23.6123, 588.371, -90.4607, 0.74", "-24.3638, 588.116, -90.3782, 0.74", "-25.2392, 587.781, -90.2885, 0.29", "-25.985, 587.469, -90.2062, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_SBC_194972ee43_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.22322, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.37271, 4.24935, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.81726, 5.38504, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.00271414, 7.06159, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.644941, 8.3747, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -1.4192, 9.95779, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -1.61725, 10.3627, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -10.1853, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -10.1853, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.71236, -11.3728, 0.231177, 3.61 ) }
    dend_27 { pt3dadd( -2.17943, -13.1097, 0.194825, 2.87 ) }
    dend_27 { pt3dadd( -2.57447, -14.7248, 0.0785996, 2.36 ) }
    dend_27 { pt3dadd( -2.92045, -16.2963, -0.0405377, 2.36 ) }
    dend_27 { pt3dadd( -3.24999, -17.948, -0.150121, 2.65 ) }
    dend_27 { pt3dadd( -3.51827, -19.3588, -0.252001, 2.65 ) }
    dend_27 { pt3dadd( -3.74072, -20.6486, -0.359468, 2.8 ) }
    dend_27 { pt3dadd( -4.03617, -22.6539, -0.551446, 2.43 ) }
    dend_27 { pt3dadd( -4.26003, -24.4337, -0.744961, 2.28 ) }
    dend_27 { pt3dadd( -4.45777, -26.3437, -0.974561, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.8777, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.8777, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -2.19276, 12.6228, -3.01067, 2.8 ) }
    dend_0 { pt3dadd( -3.77887, 14.2441, -3.1165, 2.8 ) }
    dend_0 { pt3dadd( -5.2115, 15.6779, -3.20594, 2.8 ) }
    dend_0 { pt3dadd( -7.04073, 17.5288, -3.30227, 2.8 ) }
    dend_0 { pt3dadd( -8.43523, 19.0215, -3.36677, 2.58 ) }
    dend_0 { pt3dadd( -9.40905, 20.1183, -3.40457, 2.58 ) }
    dend_0 { pt3dadd( -10.2317, 21.114, -3.42885, 2.36 ) }
    dend_0 { pt3dadd( -10.9713, 22.1758, -3.43971, 1.92 ) }
    dend_0 { pt3dadd( -11.8925, 24.0252, -3.44202, 1.92 ) }
    dend_0 { pt3dadd( -12.4039, 25.8857, -3.42754, 1.92 ) }
    dend_0 { pt3dadd( -12.591, 27.535, -3.41775, 1.92 ) }
    dend_0 { pt3dadd( -12.5622, 28.9509, -3.41435, 2.21 ) }
    dend_0 { pt3dadd( -12.3574, 30.4563, -3.49363, 2.21 ) }
    dend_0 { pt3dadd( -12.0652, 31.7079, -3.62194, 1.84 ) }
    dend_0 { pt3dadd( -11.5033, 33.523, -3.89043, 1.84 ) }
    dend_0 { pt3dadd( -11.1054, 34.6928, -4.09795, 1.84 ) }
    dend_0 { pt3dadd( -10.6509, 36.0048, -4.38784, 1.84 ) }
    dend_0 { pt3dadd( -9.82658, 38.5459, -5.05837, 1.69 ) }
    dend_0 { pt3dadd( -9.53625, 39.5899, -5.37102, 1.69 ) }
    dend_0 { pt3dadd( -9.17311, 41.1578, -5.96093, 1.69 ) }
    dend_0 { pt3dadd( -8.92594, 42.607, -6.61105, 1.84 ) }
    dend_0 { pt3dadd( -8.77498, 43.8432, -7.22281, 1.99 ) }
    dend_0 { pt3dadd( -8.69991, 45.0463, -7.8484, 1.99 ) }
    dend_0 { pt3dadd( -8.65378, 46.4043, -8.56271, 1.99 ) }
    dend_0 { pt3dadd( -8.63523, 48.4245, -9.74791, 2.14 ) }
    dend_0 { pt3dadd( -8.65383, 49.49, -10.4591, 2.14 ) }
    dend_0 { pt3dadd( -8.69561, 50.4414, -11.1575, 2.14 ) }
    dend_0 { pt3dadd( -8.7593, 51.3887, -11.8538, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.553253 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.553253 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.553253 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.61725, 10.3627, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -1.17497, 12.5913, 10.3197, 0.81 ) }
    dend_56 { pt3dadd( -0.976932, 13.6997, 9.80927, 0.81 ) }
    dend_56 { pt3dadd( -0.858021, 14.56, 9.45201, 1.03 ) }
    dend_56 { pt3dadd( -0.781833, 15.3609, 9.14479, 1.03 ) }
    dend_56 { pt3dadd( -0.729693, 16.3574, 8.78543, 0.59 ) }
    dend_56 { pt3dadd( -0.721072, 17.348, 8.45087, 0.37 ) }
    dend_56 { pt3dadd( -0.788772, 18.2643, 8.24824, 0.37 ) }
    dend_56 { pt3dadd( -0.878295, 19.0793, 8.06616, 0.59 ) }
    dend_56 { pt3dadd( -0.955646, 19.7455, 7.91195, 0.59 ) }
    dend_56 { pt3dadd( -1.04227, 20.3606, 7.76041, 0.66 ) }
    dend_56 { pt3dadd( -1.15471, 21.2052, 7.49982, 0.59 ) }
    dend_56 { pt3dadd( -1.24684, 22.0315, 7.1527, 0.44 ) }
    dend_56 { pt3dadd( -1.28391, 23.0613, 6.56772, 0.44 ) }
    dend_56 { pt3dadd( -1.26367, 23.5617, 6.24103, 0.96 ) }
    dend_56 { pt3dadd( -1.20126, 24.2584, 5.76659, 1.33 ) }
    dend_56 { pt3dadd( -1.1155, 24.8933, 5.3373, 1.55 ) }
    dend_56 { pt3dadd( -0.919572, 26.0079, 4.60732, 1.03 ) }
    dend_56 { pt3dadd( -0.584501, 27.6099, 3.67659, 0.52 ) }
    dend_56 { pt3dadd( -0.473732, 28.0372, 3.47326, 0.88 ) }
    dend_56 { pt3dadd( -0.21097, 28.8893, 3.14836, 0.52 ) }
    dend_56 { pt3dadd( 0.051801, 29.6079, 2.95772, 0.52 ) }
    dend_56 { pt3dadd( 0.297328, 30.2141, 2.86249, 0.52 ) }
    dend_56 { pt3dadd( 0.754351, 31.2732, 2.76483, 0.88 ) }
    dend_56 { pt3dadd( 1.22971, 32.3723, 2.67905, 0.74 ) }
    dend_56 { pt3dadd( 1.48297, 33.0217, 2.6033, 0.59 ) }
    dend_56 { pt3dadd( 1.93171, 34.4251, 2.36236, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 2.11579, 35.3372, 2.15372, 1.25 ) }
    dend_56 { pt3dadd( 2.17923, 36.3243, 1.85952, 1.4 ) }
    dend_56 { pt3dadd( 2.09271, 37.0636, 1.59035, 1.18 ) }
    dend_56 { pt3dadd( 1.88462, 37.8408, 1.28925, 0.88 ) }
    dend_56 { pt3dadd( 1.55833, 38.7537, 0.92326, 0.66 ) }
    dend_56 { pt3dadd( 1.27737, 39.3928, 0.668867, 0.66 ) }
    dend_56 { pt3dadd( 1.06501, 39.8767, 0.498621, 0.66 ) }
    dend_56 { pt3dadd( 0.780535, 40.6926, 0.306136, 0.59 ) }
    dend_56 { pt3dadd( 0.664126, 41.3754, 0.238454, 0.59 ) }
    dend_56 { pt3dadd( 0.684803, 42.1525, 0.275097, 0.74 ) }
    dend_56 { pt3dadd( 0.733693, 42.5034, 0.330874, 0.88 ) }
    dend_56 { pt3dadd( 0.812773, 42.9717, 0.438419, 0.88 ) }
    dend_56 { pt3dadd( 0.906195, 43.5581, 0.599656, 1.03 ) }
    dend_56 { pt3dadd( 0.980414, 44.2636, 0.801313, 0.66 ) }
    dend_56 { pt3dadd( 1.02392, 45.3643, 1.11527, 0.44 ) }
    dend_56 { pt3dadd( 1.02707, 46.2335, 1.36696, 0.44 ) }
    dend_56 { pt3dadd( 1.05938, 47.0597, 1.55038, 0.59 ) }
    dend_56 { pt3dadd( 1.10632, 47.5049, 1.61251, 0.96 ) }
    dend_56 { pt3dadd( 1.31594, 48.4944, 1.68641, 1.18 ) }
    dend_56 { pt3dadd( 1.50061, 48.9948, 1.69791, 1.18 ) }
    dend_56 { pt3dadd( 1.91888, 49.7652, 1.68238, 0.74 ) }
    dend_56 { pt3dadd( 2.89545, 51.2223, 1.66671, 0.37 ) }
    dend_56 { pt3dadd( 3.41111, 51.9382, 1.66481, 0.29 ) }
    dend_56 { pt3dadd( 3.94294, 52.6741, 1.67622, 0.29 ) }
    dend_56 { pt3dadd( 4.49161, 53.4492, 1.69767, 0.37 ) }
    dend_56 { pt3dadd( 4.85529, 54.0507, 1.72028, 0.37 ) }
    dend_56 { pt3dadd( 5.27234, 55.0029, 1.7826, 0.29 ) }
    dend_56 { pt3dadd( 5.44788, 55.7293, 1.87499, 0.37 ) }
    dend_56 { pt3dadd( 5.51727, 56.3172, 1.95267, 0.74 ) }
    dend_56 { pt3dadd( 5.53269, 56.7319, 2.00186, 0.74 ) }
    dend_56 { pt3dadd( 5.5417, 57.2935, 2.04707, 0.44 ) }
    dend_56 { pt3dadd( 5.61169, 58.1786, 2.10117, 0.66 ) }
    dend_56 { pt3dadd( 5.75401, 59.0223, 2.10677, 1.25 ) }
    dend_56 { pt3dadd( 5.86585, 59.5288, 2.09486, 1.47 ) }
    dend_56 { pt3dadd( 5.99672, 60.0923, 2.06431, 1.47 ) }
    dend_56 { pt3dadd( 6.22587, 61.097, 1.97973, 1.11 ) }
    dend_56 { pt3dadd( 6.52322, 62.4076, 1.83495, 0.29 ) }
    dend_56 { pt3dadd( 6.73329, 63.3616, 1.71092, 0.66 ) }
    dend_56 { pt3dadd( 6.84649, 63.8984, 1.62706, 0.52 ) }
    dend_56 { pt3dadd( 7.01496, 64.7657, 1.45167, 0.52 ) }
    dend_56 { pt3dadd( 7.17798, 65.8239, 1.21519, 0.66 ) }
    dend_56 { pt3dadd( 7.3176, 67.0566, 0.944904, 0.88 ) }
    dend_56 { pt3dadd( 7.35777, 67.663, 0.806446, 1.47 ) }
    dend_56 { pt3dadd( 7.40153, 68.4303, 0.652811, 1.47 ) }
    dend_56 { pt3dadd( 7.45729, 69.3292, 0.486764, 0.74 ) }
    dend_56 { pt3dadd( 7.49247, 70.1854, 0.31517, 0.74 ) }
    dend_56 { pt3dadd( 7.47965, 70.9353, 0.157639, 0.74 ) }
    dend_56 { pt3dadd( 7.40967, 71.748, -0.015164, 0.37 ) }
    dend_56 { pt3dadd( 7.29102, 72.6977, -0.200578, 0.37 ) }
    dend_56 { pt3dadd( 7.18251, 73.4589, -0.333418, 0.29 ) }
    dend_56 { pt3dadd( 7.09171, 74.1789, -0.452768, 0.29 ) }
    dend_56 { pt3dadd( 7.01098, 75.069, -0.620796, 0.29 ) }
    dend_56 { pt3dadd( 6.98859, 75.6037, -0.727443, 0.29 ) }
    dend_56 { pt3dadd( 7.05673, 76.4437, -0.928879, 0.88 ) }
    dend_56 { pt3dadd( 7.17023, 76.9864, -1.07232, 1.47 ) }
    dend_56 { pt3dadd( 7.35224, 77.5129, -1.2086, 1.47 ) }
    dend_56 { pt3dadd( 7.54766, 77.9549, -1.30492, 1.47 ) }
    dend_56 { pt3dadd( 7.87846, 78.5758, -1.42148, 1.18 ) }
    dend_56 { pt3dadd( 8.56156, 79.7473, -1.59498, 0.37 ) }
    dend_56 { pt3dadd( 8.93854, 80.379, -1.64961, 0.37 ) }
    dend_56 { pt3dadd( 9.27412, 81.0227, -1.65915, 0.37 ) }
    dend_56 { pt3dadd( 9.47452, 81.4929, -1.64324, 0.96 ) }
    dend_56 { pt3dadd( 9.67853, 82.0958, -1.59829, 1.03 ) }
    dend_56 { pt3dadd( 9.76203, 82.4455, -1.55088, 1.03 ) }
    dend_56 { pt3dadd( 9.9275, 83.412, -1.39166, 0.37 ) }
    dend_56 { pt3dadd( 10.0838, 84.3715, -1.28996, 0.37 ) }
    dend_56 { pt3dadd( 10.1798, 84.9197, -1.2591, 0.29 ) }
    dend_56 { pt3dadd( 10.3313, 85.535, -1.32003, 0.29 ) }
    dend_56 { pt3dadd( 10.6066, 86.4419, -1.50075, 0.29 ) }
    dend_56 { pt3dadd( 10.859, 87.0843, -1.68019, 0.29 ) }
    dend_56 { pt3dadd( 11.2515, 87.9507, -1.97529, 1.18 ) }
    dend_56 { pt3dadd( 11.4734, 88.3782, -2.12787, 1.47 ) }
    dend_56 { pt3dadd( 12.5454, 90.191, -2.8346, 0.22 ) }
    dend_56 { pt3dadd( 12.6705, 90.383, -2.91737, 0.44 ) }
    dend_56 { pt3dadd( 13.1937, 91.1128, -3.24727, 0.66 ) }
    dend_56 { pt3dadd( 13.6729, 91.7531, -3.51371, 0.22 ) }
    dend_56 { pt3dadd( 14.1424, 92.3677, -3.74609, 0.22 ) }
    dend_56 { pt3dadd( 14.9707, 93.4566, -4.13388, 0.88 ) }
    dend_56 { pt3dadd( 15.4016, 94.0321, -4.31175, 0.88 ) }
    dend_56 { pt3dadd( 15.8043, 94.5872, -4.50246, 0.88 ) }
    dend_56 { pt3dadd( 16.4799, 95.5536, -4.8904, 0.37 ) }
    dend_56 { pt3dadd( 16.9421, 96.2466, -5.22485, 0.37 ) }
    dend_56 { pt3dadd( 17.1181, 96.5567, -5.3944, 0.88 ) }
    dend_56 { pt3dadd( 17.3173, 96.9965, -5.63642, 0.88 ) }
    dend_56 { pt3dadd( 17.593, 97.6957, -6.06205, 0.52 ) }
    dend_56 { pt3dadd( 17.8022, 98.3093, -6.47391, 0.29 ) }
    dend_56 { pt3dadd( 18.0177, 98.9936, -6.96281, 0.29 ) }
    dend_56 { pt3dadd( 18.2482, 99.7761, -7.50434, 1.11 ) }
    dend_56 { pt3dadd( 18.4306, 100.281, -7.84695, 1.33 ) }
    dend_56 { pt3dadd( 18.6739, 100.866, -8.24775, 1.55 ) }
    dend_56 { pt3dadd( 18.9336, 101.435, -8.64132, 1.55 ) }
    dend_56 { pt3dadd( 19.3345, 102.257, -9.22088, 0.52 ) }
    dend_56 { pt3dadd( 19.7095, 103.031, -9.76435, 0.44 ) }
    dend_56 { pt3dadd( 20.2771, 104.304, -10.6323, 1.47 ) }
    dend_56 { pt3dadd( 20.5313, 104.923, -11.0223, 1.47 ) }
    dend_56 { pt3dadd( 21.0687, 106.366, -11.8288, 0.44 ) }
    dend_56 { pt3dadd( 21.3451, 107.148, -12.24, 0.44 ) }
    dend_56 { pt3dadd( 21.6929, 108.136, -12.7367, 0.44 ) }
    dend_56 { pt3dadd( 22.0335, 109.102, -13.1962, 0.37 ) }
    dend_56 { pt3dadd( 22.3331, 110.021, -13.5825, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( 22.8415, 111.503, -14.0729, 1.47 ) }
    dend_56 { pt3dadd( 23.0557, 112.065, -14.1885, 1.77 ) }
    dend_56 { pt3dadd( 23.638, 113.477, -14.3395, 0.29 ) }
    dend_56 { pt3dadd( 23.9329, 114.147, -14.3577, 1.03 ) }
    dend_56 { pt3dadd( 24.1059, 114.533, -14.3353, 1.03 ) }
    dend_56 { pt3dadd( 24.6831, 115.895, -14.1382, 0.66 ) }
    dend_56 { pt3dadd( 25.3216, 117.56, -13.7425, 0.29 ) }
    dend_56 { pt3dadd( 25.6037, 118.408, -13.4824, 1.03 ) }
    dend_56 { pt3dadd( 25.7014, 118.764, -13.3497, 1.25 ) }
    dend_56 { pt3dadd( 25.916, 119.703, -12.9977, 0.22 ) }
    dend_56 { pt3dadd( 26.0005, 120.161, -12.8427, 0.44 ) }
    dend_56 { pt3dadd( 26.1181, 121.032, -12.5913, 0.22 ) }
    dend_56 { pt3dadd( 26.1717, 121.726, -12.3842, 0.52 ) }
    dend_56 { pt3dadd( 26.204, 122.242, -12.2295, 0.52 ) }
    dend_56 { pt3dadd( 26.3087, 123.533, -11.8265, 0.22 ) }
    dend_56 { pt3dadd( 26.3861, 124.224, -11.6009, 0.29 ) }
    dend_56 { pt3dadd( 26.484, 124.921, -11.3661, 0.29 ) }
    dend_56 { pt3dadd( 26.7065, 126.312, -10.8984, 1.11 ) }
    dend_56 { pt3dadd( 26.7985, 126.772, -10.7534, 1.33 ) }
    dend_56 { pt3dadd( 27.0057, 127.614, -10.4881, 0.29 ) }
    dend_56 { pt3dadd( 27.2511, 128.434, -10.22, 0.29 ) }
    dend_56 { pt3dadd( 27.3642, 128.756, -10.1156, 0.44 ) }
    dend_56 { pt3dadd( 27.7123, 129.64, -9.85041, 0.22 ) }
    dend_56 { pt3dadd( 28.0884, 130.544, -9.61319, 0.66 ) }
    dend_56 { pt3dadd( 28.1963, 130.827, -9.54579, 1.18 ) }
    dend_56 { pt3dadd( 28.3311, 131.244, -9.46351, 1.18 ) }
    dend_56 { pt3dadd( 28.4364, 131.577, -9.3998, 0.74 ) }
    dend_56 { pt3dadd( 28.8393, 132.814, -9.161, 0.22 ) }
    dend_56 { pt3dadd( 29.0041, 133.297, -9.06937, 0.66 ) }
    dend_56 { pt3dadd( 29.2495, 134.142, -8.91106, 0.22 ) }
    dend_56 { pt3dadd( 29.3522, 134.566, -8.83635, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -1.61725, 10.3627, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -0.45941, 11.399, 11.0029, 0.44 ) }
    dend_55 { pt3dadd( 0.152085, 11.9906, 10.7338, 0.44 ) }
    dend_55 { pt3dadd( 0.881261, 12.7131, 10.421, 0.96 ) }
    dend_55 { pt3dadd( 1.37055, 13.1774, 10.2296, 0.96 ) }
    dend_55 { pt3dadd( 2.66891, 14.465, 9.82241, 0.52 ) }
    dend_55 { pt3dadd( 3.11018, 14.9503, 9.72522, 0.52 ) }
    dend_55 { pt3dadd( 3.48191, 15.4164, 9.64577, 0.66 ) }
    dend_55 { pt3dadd( 3.87502, 16.104, 9.63039, 0.37 ) }
    dend_55 { pt3dadd( 4.08705, 16.6465, 9.76031, 0.37 ) }
    dend_55 { pt3dadd( 4.49961, 17.7316, 10.1938, 0.37 ) }
    dend_55 { pt3dadd( 4.90612, 18.7263, 10.6798, 0.59 ) }
    dend_55 { pt3dadd( 5.16593, 19.2899, 10.9436, 0.81 ) }
    dend_55 { pt3dadd( 5.43583, 19.8407, 11.1912, 0.81 ) }
    dend_55 { pt3dadd( 6.12434, 21.2903, 11.8493, 0.29 ) }
    dend_55 { pt3dadd( 6.65111, 22.3647, 12.2789, 0.29 ) }
    dend_55 { pt3dadd( 7.10611, 23.2098, 12.5884, 0.29 ) }
    dend_55 { pt3dadd( 7.52282, 23.8881, 12.827, 0.29 ) }
    dend_55 { pt3dadd( 7.92299, 24.4961, 13.0447, 0.88 ) }
    dend_55 { pt3dadd( 8.44211, 25.2734, 13.3017, 0.88 ) }
    dend_55 { pt3dadd( 8.77841, 25.9507, 13.4816, 0.52 ) }
    dend_55 { pt3dadd( 8.97495, 26.7284, 13.7396, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.45777, -26.3437, -0.974561, 1.77 ) }
    dend_29 { pt3dadd( -4.13774, -27.7224, -1.03098, 1.77 ) }
    dend_29 { pt3dadd( -3.9518, -28.4104, -1.01736, 1.77 ) }
    dend_29 { pt3dadd( -3.70277, -29.1575, -1.18037, 1.77 ) }
    dend_29 { pt3dadd( -3.35021, -29.9599, -1.52575, 1.77 ) }
    dend_29 { pt3dadd( -2.94328, -30.8861, -1.92439, 1.92 ) }
    dend_29 { pt3dadd( -2.63175, -31.5952, -2.22958, 2.14 ) }
    dend_29 { pt3dadd( -2.15165, -32.4901, -2.68038, 2.36 ) }
    dend_29 { pt3dadd( -0.700553, -34.8989, -4.31805, 1.77 ) }
    dend_29 { pt3dadd( -0.149973, -35.6812, -5.08762, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.45777, -26.3437, -0.974561, 0.81 ) }
    dend_28 { pt3dadd( -3.59751, -27.5658, -0.370726, 0.81 ) }
    dend_28 { pt3dadd( -2.12734, -29.2449, 0.384541, 0.66 ) }
    dend_28 { pt3dadd( -1.4886, -29.8186, 0.628164, 0.88 ) }
    dend_28 { pt3dadd( -0.412889, -30.6353, 0.930837, 0.59 ) }
    dend_28 { pt3dadd( 0.700512, -31.3813, 1.12234, 0.88 ) }
    dend_28 { pt3dadd( 1.93513, -32.1306, 1.20804, 1.18 ) }
    dend_28 { pt3dadd( 2.9698, -32.654, 1.06782, 0.81 ) }
    dend_28 { pt3dadd( 4.2072, -33.1474, 0.746468, 0.66 ) }
    dend_28 { pt3dadd( 5.06531, -33.4537, 0.48704, 0.59 ) }
    dend_28 { pt3dadd( 6.2525, -33.8549, 0.0920687, 0.88 ) }
    dend_28 { pt3dadd( 7.31379, -34.2206, -0.28995, 0.74 ) }
    dend_28 { pt3dadd( 8.42182, -34.6571, -0.715723, 0.59 ) }
    dend_28 { pt3dadd( 9.56514, -35.163, -1.17066, 0.74 ) }
    dend_28 { pt3dadd( 10.5761, -35.66, -1.56046, 0.74 ) }
    dend_28 { pt3dadd( 11.188, -35.99, -1.7772, 0.88 ) }
    dend_28 { pt3dadd( 11.8601, -36.4009, -1.98735, 0.88 ) }
    dend_28 { pt3dadd( 12.7121, -36.9985, -2.23971, 0.66 ) }
    dend_28 { pt3dadd( 13.5498, -37.7186, -2.51239, 0.66 ) }
    dend_28 { pt3dadd( 14.0274, -38.2735, -2.71004, 0.52 ) }
    dend_28 { pt3dadd( 14.5197, -39.0662, -2.95493, 0.52 ) }
    dend_28 { pt3dadd( 14.7675, -39.6717, -3.07956, 0.96 ) }
    dend_28 { pt3dadd( 14.8974, -40.1033, -3.12333, 1.18 ) }
    dend_28 { pt3dadd( 15.1511, -41.0616, -3.15242, 1.03 ) }
    dend_28 { pt3dadd( 15.305, -41.5754, -3.10405, 1.18 ) }
    dend_28 { pt3dadd( 15.5866, -42.2663, -2.9507, 1.03 ) }
    dend_28 { pt3dadd( 16.1732, -43.3115, -2.57624, 0.37 ) }
    dend_28 { pt3dadd( 16.7776, -44.1511, -2.15762, 0.74 ) }
    dend_28 { pt3dadd( 17.1503, -44.6055, -1.86192, 0.88 ) }
    dend_28 { pt3dadd( 18.008, -45.5895, -1.10576, 0.59 ) }
    dend_28 { pt3dadd( 18.4518, -46.1071, -0.688513, 0.59 ) }
    dend_28 { pt3dadd( 18.9644, -46.7449, -0.179636, 0.88 ) }
    dend_28 { pt3dadd( 19.5653, -47.5827, 0.443856, 0.74 ) }
    dend_28 { pt3dadd( 20.0686, -48.4024, 0.99608, 1.25 ) }
    dend_28 { pt3dadd( 20.3841, -48.9493, 1.30877, 1.25 ) }
    dend_28 { pt3dadd( 20.7623, -49.6141, 1.59976, 0.81 ) }
    dend_28 { pt3dadd( 21.141, -50.305, 1.84609, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 21.5887, -51.1162, 2.0721, 0.59 ) }
    dend_28 { pt3dadd( 21.9889, -51.7881, 2.18474, 0.59 ) }
    dend_28 { pt3dadd( 22.7069, -52.8285, 2.29221, 0.44 ) }
    dend_28 { pt3dadd( 23.2111, -53.4435, 2.35642, 0.52 ) }
    dend_28 { pt3dadd( 23.7573, -54.0081, 2.41683, 0.44 ) }
    dend_28 { pt3dadd( 24.4286, -54.6322, 2.48321, 0.44 ) }
    dend_28 { pt3dadd( 24.9671, -55.1258, 2.53647, 0.52 ) }
    dend_28 { pt3dadd( 25.6307, -55.7773, 2.62098, 0.66 ) }
    dend_28 { pt3dadd( 26.2239, -56.4101, 2.68838, 0.66 ) }
    dend_28 { pt3dadd( 26.9758, -57.3116, 2.78836, 0.52 ) }
    dend_28 { pt3dadd( 27.3162, -57.7509, 2.86959, 0.81 ) }
    dend_28 { pt3dadd( 27.7056, -58.3311, 3.01583, 0.81 ) }
    dend_28 { pt3dadd( 28.11, -59.0284, 3.21872, 0.66 ) }
    dend_28 { pt3dadd( 28.6886, -60.1729, 3.55272, 0.52 ) }
    dend_28 { pt3dadd( 29.1911, -61.2906, 3.88463, 0.52 ) }
    dend_28 { pt3dadd( 29.6227, -62.3309, 4.21813, 1.18 ) }
    dend_28 { pt3dadd( 29.8404, -62.8506, 4.39668, 1.4 ) }
    dend_28 { pt3dadd( 30.2171, -63.6857, 4.70873, 1.25 ) }
    dend_28 { pt3dadd( 30.6789, -64.6412, 5.12895, 1.03 ) }
    dend_28 { pt3dadd( 30.8447, -64.9567, 5.30129, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.7593, 51.3887, -11.8538, 1.33 ) }
    dend_6 { pt3dadd( -9.63373, 52.8959, -12.0036, 1.33 ) }
    dend_6 { pt3dadd( -10.5053, 54.575, -12.1173, 1.33 ) }
    dend_6 { pt3dadd( -11.3121, 56.2595, -12.1216, 1.33 ) }
    dend_6 { pt3dadd( -12.1647, 58.2176, -12.0047, 1.33 ) }
    dend_6 { pt3dadd( -13.0257, 60.4185, -11.7804, 1.47 ) }
    dend_6 { pt3dadd( -13.5817, 62.0397, -11.5636, 1.69 ) }
    dend_6 { pt3dadd( -13.9228, 63.4129, -11.3086, 1.77 ) }
    dend_6 { pt3dadd( -14.2084, 64.9905, -10.9366, 1.99 ) }
    dend_6 { pt3dadd( -14.4208, 66.576, -10.5398, 2.14 ) }
    dend_6 { pt3dadd( -14.6344, 68.4841, -10.0586, 1.84 ) }
    dend_6 { pt3dadd( -14.9067, 70.7315, -9.52872, 1.84 ) }
    dend_6 { pt3dadd( -15.2097, 72.6838, -9.14927, 1.84 ) }
    dend_6 { pt3dadd( -15.4678, 74.011, -8.97792, 1.92 ) }
    dend_6 { pt3dadd( -15.8518, 75.6666, -8.86687, 1.92 ) }
    dend_6 { pt3dadd( -16.2624, 77.2568, -8.80591, 1.92 ) }
    dend_6 { pt3dadd( -16.736, 78.8712, -8.78128, 1.62 ) }
    dend_6 { pt3dadd( -17.4061, 80.8295, -8.81593, 1.62 ) }
    dend_6 { pt3dadd( -18.1078, 82.6501, -8.90007, 1.77 ) }
    dend_6 { pt3dadd( -18.7548, 84.2364, -9.01607, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.7593, 51.3887, -11.8538, 0.66 ) }
    dend_1 { pt3dadd( -7.60451, 53.5579, -12.1273, 0.66 ) }
    dend_1 { pt3dadd( -6.8717, 54.7215, -12.1789, 0.66 ) }
    dend_1 { pt3dadd( -6.57598, 55.142, -12.1587, 0.96 ) }
    dend_1 { pt3dadd( -5.99538, 55.9311, -12.0452, 0.96 ) }
    dend_1 { pt3dadd( -5.55216, 56.5686, -11.8491, 0.74 ) }
    dend_1 { pt3dadd( -5.2321, 57.0791, -11.6597, 0.66 ) }
    dend_1 { pt3dadd( -4.71093, 57.8858, -11.2311, 0.66 ) }
    dend_1 { pt3dadd( -4.26281, 58.5642, -10.8711, 0.66 ) }
    dend_1 { pt3dadd( -3.82008, 59.2052, -10.5622, 0.66 ) }
    dend_1 { pt3dadd( -2.59615, 60.8074, -9.95109, 0.88 ) }
    dend_1 { pt3dadd( -1.72205, 61.8264, -9.68474, 0.29 ) }
    dend_1 { pt3dadd( -0.9714, 62.5744, -9.62487, 0.29 ) }
    dend_1 { pt3dadd( 0.105997, 63.3482, -9.87139, 1.18 ) }
    dend_1 { pt3dadd( 0.627758, 63.6247, -10.1068, 1.62 ) }
    dend_1 { pt3dadd( 1.94496, 64.1852, -10.8594, 0.81 ) }
    dend_1 { pt3dadd( 2.73087, 64.4631, -11.3714, 0.81 ) }
    dend_1 { pt3dadd( 3.49422, 64.6788, -11.8964, 1.03 ) }
    dend_1 { pt3dadd( 4.65924, 64.9852, -12.7528, 0.44 ) }
    dend_1 { pt3dadd( 5.64504, 65.2493, -13.5188, 0.44 ) }
    dend_1 { pt3dadd( 6.27551, 65.4514, -13.9987, 1.18 ) }
    dend_1 { pt3dadd( 6.76899, 65.662, -14.332, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.149973, -35.6812, -5.08762, 1.03 ) }
    dend_37 { pt3dadd( -0.695849, -37.1211, -7.51513, 1.03 ) }
    dend_37 { pt3dadd( -1.41538, -38.2295, -9.22445, 0.81 ) }
    dend_37 { pt3dadd( -1.83363, -38.7133, -9.94665, 0.81 ) }
    dend_37 { pt3dadd( -2.37536, -39.1925, -10.7075, 0.81 ) }
    dend_37 { pt3dadd( -2.86281, -39.5412, -11.3226, 1.11 ) }
    dend_37 { pt3dadd( -3.42239, -39.8496, -11.941, 1.11 ) }
    dend_37 { pt3dadd( -4.26571, -40.0624, -12.5134, 1.4 ) }
    dend_37 { pt3dadd( -4.8633, -40.1241, -12.8452, 1.4 ) }
    dend_37 { pt3dadd( -5.86837, -40.0973, -13.4699, 1.11 ) }
    dend_37 { pt3dadd( -6.38607, -39.9707, -13.8433, 1.33 ) }
    dend_37 { pt3dadd( -7.29008, -39.5094, -14.5938, 1.03 ) }
    dend_37 { pt3dadd( -7.77821, -39.0992, -15.2484, 0.81 ) }
    dend_37 { pt3dadd( -8.06122, -38.8193, -15.734, 0.81 ) }
    dend_37 { pt3dadd( -8.68596, -38.2488, -16.9514, 0.81 ) }
    dend_37 { pt3dadd( -9.31276, -37.7806, -18.3008, 1.03 ) }
    dend_37 { pt3dadd( -9.79045, -37.5382, -19.3671, 1.33 ) }
    dend_37 { pt3dadd( -11.3504, -37.2578, -22.9506, 1.03 ) }
    dend_37 { pt3dadd( -11.9019, -37.3681, -24.117, 1.03 ) }
    dend_37 { pt3dadd( -12.6559, -37.7597, -25.4513, 1.33 ) }
    dend_37 { pt3dadd( -13.298, -38.2434, -26.3567, 1.33 ) }
    dend_37 { pt3dadd( -13.8657, -38.755, -27.0022, 1.47 ) }
    dend_37 { pt3dadd( -14.8616, -39.6646, -27.8141, 1.11 ) }
    dend_37 { pt3dadd( -15.7314, -40.3843, -28.2489, 0.88 ) }
    dend_37 { pt3dadd( -16.3831, -40.8225, -28.5328, 1.55 ) }
    dend_37 { pt3dadd( -17.0898, -41.1607, -28.8219, 1.84 ) }
    dend_37 { pt3dadd( -17.856, -41.3697, -29.1374, 1.99 ) }
    dend_37 { pt3dadd( -19.1864, -41.4304, -29.6694, 1.18 ) }
    dend_37 { pt3dadd( -20.0776, -41.2536, -30.0041, 0.88 ) }
    dend_37 { pt3dadd( -20.9782, -40.8618, -30.3399, 1.25 ) }
    dend_37 { pt3dadd( -21.6631, -40.3609, -30.6028, 1.47 ) }
    dend_37 { pt3dadd( -22.4259, -39.5762, -31.0142, 1.18 ) }
    dend_37 { pt3dadd( -23.1346, -38.7657, -31.8623, 0.96 ) }
    dend_37 { pt3dadd( -23.3147, -38.5763, -32.3371, 1.18 ) }
    dend_37 { pt3dadd( -23.4635, -38.4692, -32.8544, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -23.7921, -38.3341, -33.9518, 0.74 ) }
    dend_37 { pt3dadd( -24.4979, -38.2128, -36.0875, 0.74 ) }
    dend_37 { pt3dadd( -25.7335, -38.1726, -40.0213, 1.47 ) }
    dend_37 { pt3dadd( -26.4531, -38.2339, -42.3896, 1.99 ) }
    dend_37 { pt3dadd( -27.0852, -38.3571, -44.4764, 1.47 ) }
    dend_37 { pt3dadd( -27.4548, -38.474, -45.6904, 1.62 ) }
    dend_37 { pt3dadd( -27.9933, -38.7226, -47.4452, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.149973, -35.6812, -5.08762, 0.88 ) }
    dend_30 { pt3dadd( 0.624247, -36.2517, -5.91005, 0.88 ) }
    dend_30 { pt3dadd( 1.16248, -36.7831, -6.62743, 1.03 ) }
    dend_30 { pt3dadd( 1.60887, -37.4328, -7.38069, 1.03 ) }
    dend_30 { pt3dadd( 1.90544, -38.1718, -8.10595, 0.88 ) }
    dend_30 { pt3dadd( 2.10834, -39.0717, -8.87034, 0.81 ) }
    dend_30 { pt3dadd( 2.20045, -40.1847, -9.75814, 1.03 ) }
    dend_30 { pt3dadd( 2.07559, -40.828, -10.2106, 1.33 ) }
    dend_30 { pt3dadd( 1.62459, -41.7711, -10.8959, 0.88 ) }
    dend_30 { pt3dadd( 0.911377, -42.7498, -11.6481, 0.66 ) }
    dend_30 { pt3dadd( 0.460285, -43.2419, -12.1071, 0.96 ) }
    dend_30 { pt3dadd( -0.0888688, -43.7822, -12.8137, 0.66 ) }
    dend_30 { pt3dadd( -0.487828, -44.193, -13.5606, 0.74 ) }
    dend_30 { pt3dadd( -1.02605, -44.9357, -15.4347, 0.88 ) }
    dend_30 { pt3dadd( -1.06293, -45.1582, -16.1719, 1.11 ) }
    dend_30 { pt3dadd( -0.880205, -45.7278, -18.2244, 0.88 ) }
    dend_30 { pt3dadd( -0.600282, -46.3881, -20.4765, 0.74 ) }
    dend_30 { pt3dadd( -0.3413, -46.9441, -22.0744, 0.74 ) }
    dend_30 { pt3dadd( -0.127749, -47.4405, -23.3006, 0.74 ) }
    dend_30 { pt3dadd( 0.0669051, -47.9591, -24.3839, 0.66 ) }
    dend_30 { pt3dadd( 0.385669, -49.0404, -26.3265, 0.96 ) }
    dend_30 { pt3dadd( 0.596332, -49.9397, -27.638, 1.25 ) }
    dend_30 { pt3dadd( 0.791343, -50.8916, -28.8316, 0.81 ) }
    dend_30 { pt3dadd( 1.02258, -52.0508, -30.1959, 0.74 ) }
    dend_30 { pt3dadd( 1.22063, -52.762, -31.0061, 0.88 ) }
    dend_30 { pt3dadd( 1.66306, -53.6571, -31.9418, 0.59 ) }
    dend_30 { pt3dadd( 2.41447, -54.4959, -32.7202, 0.59 ) }
    dend_30 { pt3dadd( 3.23039, -55.1394, -33.2682, 1.18 ) }
    dend_30 { pt3dadd( 3.68145, -55.4051, -33.4407, 1.62 ) }
    dend_30 { pt3dadd( 4.19873, -55.6543, -33.5439, 1.84 ) }
    dend_30 { pt3dadd( 5.64499, -56.2437, -33.7112, 1.18 ) }
    dend_30 { pt3dadd( 6.749, -56.6379, -33.8796, 0.81 ) }
    dend_30 { pt3dadd( 7.19939, -56.7896, -33.9899, 0.96 ) }
    dend_30 { pt3dadd( 8.31825, -57.1889, -34.4896, 0.59 ) }
    dend_30 { pt3dadd( 8.68688, -57.3423, -34.7403, 0.66 ) }
    dend_30 { pt3dadd( 9.32575, -57.6658, -35.3201, 0.52 ) }
    dend_30 { pt3dadd( 10.4982, -58.4817, -36.8286, 1.18 ) }
    dend_30 { pt3dadd( 10.906, -58.8723, -37.4859, 1.25 ) }
    dend_30 { pt3dadd( 11.5249, -59.6503, -38.9248, 0.88 ) }
    dend_30 { pt3dadd( 11.7606, -59.9874, -39.5954, 0.88 ) }
    dend_30 { pt3dadd( 12.0756, -60.4314, -40.518, 0.66 ) }
    dend_30 { pt3dadd( 12.6632, -61.1587, -42.2786, 1.47 ) }
    dend_30 { pt3dadd( 12.9359, -61.4305, -43.0824, 1.69 ) }
    dend_30 { pt3dadd( 14.2314, -62.4435, -46.8291, 0.81 ) }
    dend_30 { pt3dadd( 14.5282, -62.6221, -47.6309, 0.81 ) }
    dend_30 { pt3dadd( 14.9194, -62.8025, -48.5888, 0.66 ) }
    dend_30 { pt3dadd( 15.9137, -63.1209, -50.6794, 1.03 ) }
    dend_30 { pt3dadd( 16.2922, -63.197, -51.3016, 1.03 ) }
    dend_30 { pt3dadd( 16.8582, -63.3197, -52.0108, 1.33 ) }
    dend_30 { pt3dadd( 17.9342, -63.6544, -52.8322, 0.88 ) }
    dend_30 { pt3dadd( 18.772, -64.0283, -53.3409, 0.88 ) }
    dend_30 { pt3dadd( 19.4727, -64.4384, -53.6321, 0.74 ) }
    dend_30 { pt3dadd( 19.7681, -64.6347, -53.7061, 0.88 ) }
    dend_30 { pt3dadd( 20.6702, -65.2503, -53.8745, 0.44 ) }
    dend_30 { pt3dadd( 21.4485, -65.7624, -53.979, 1.77 ) }
    dend_30 { pt3dadd( 21.8812, -66.048, -54.0142, 2.06 ) }
    dend_30 { pt3dadd( 22.3928, -66.454, -54.0218, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -18.7548, 84.2364, -9.01607, 1.25 ) }
    dend_12 { pt3dadd( -17.8281, 86.2782, -10.5687, 1.25 ) }
    dend_12 { pt3dadd( -17.4239, 87.1378, -11.0997, 1.4 ) }
    dend_12 { pt3dadd( -16.7897, 88.6884, -11.8723, 1.11 ) }
    dend_12 { pt3dadd( -16.0902, 90.7096, -12.7048, 1.33 ) }
    dend_12 { pt3dadd( -15.6762, 92.1436, -13.2103, 1.25 ) }
    dend_12 { pt3dadd( -15.1736, 94.1321, -13.8452, 1.25 ) }
    dend_12 { pt3dadd( -14.6414, 96.3795, -14.4193, 1.47 ) }
    dend_12 { pt3dadd( -14.153, 98.5334, -14.8862, 1.69 ) }
    dend_12 { pt3dadd( -13.7844, 100.443, -15.1694, 1.84 ) }
    dend_12 { pt3dadd( -13.5651, 102.1, -15.3087, 2.14 ) }
    dend_12 { pt3dadd( -13.4922, 103.735, -15.4158, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.7548, 84.2364, -9.01607, 0.96 ) }
    dend_7 { pt3dadd( -19.5878, 85.5803, -8.58696, 0.96 ) }
    dend_7 { pt3dadd( -20.1927, 86.4672, -8.4305, 0.81 ) }
    dend_7 { pt3dadd( -21.3854, 88.0062, -8.35719, 0.66 ) }
    dend_7 { pt3dadd( -22.0781, 88.7697, -8.42989, 0.59 ) }
    dend_7 { pt3dadd( -22.9464, 89.6041, -8.60841, 0.59 ) }
    dend_7 { pt3dadd( -24.0791, 90.5583, -8.94019, 0.74 ) }
    dend_7 { pt3dadd( -25.0467, 91.1786, -9.38221, 0.74 ) }
    dend_7 { pt3dadd( -25.8502, 91.5999, -9.84617, 1.11 ) }
    dend_7 { pt3dadd( -26.8302, 92.0432, -10.485, 0.74 ) }
    dend_7 { pt3dadd( -27.5217, 92.3561, -10.9438, 1.25 ) }
    dend_7 { pt3dadd( -28.5451, 92.8874, -11.623, 0.96 ) }
    dend_7 { pt3dadd( -29.6469, 93.6268, -12.2744, 0.44 ) }
    dend_7 { pt3dadd( -30.036, 94.0047, -12.5001, 0.44 ) }
    dend_7 { pt3dadd( -30.3976, 94.5438, -12.716, 0.74 ) }
    dend_7 { pt3dadd( -30.7482, 95.3604, -12.919, 0.74 ) }
    dend_7 { pt3dadd( -31.0604, 96.3133, -12.976, 0.74 ) }
    dend_7 { pt3dadd( -31.3803, 97.4549, -12.7726, 0.59 ) }
    dend_7 { pt3dadd( -31.602, 98.2944, -12.4357, 0.59 ) }
    dend_7 { pt3dadd( -31.8138, 99.1364, -11.926, 0.88 ) }
    dend_7 { pt3dadd( -31.9815, 99.8977, -11.3908, 0.66 ) }
    dend_7 { pt3dadd( -32.4147, 101.681, -9.84136, 0.66 ) }
    dend_7 { pt3dadd( -32.7674, 102.941, -8.61084, 0.96 ) }
    dend_7 { pt3dadd( -32.9744, 103.592, -7.94076, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -33.2774, 104.404, -7.07608, 0.52 ) }
    dend_7 { pt3dadd( -33.6904, 105.353, -6.07652, 0.88 ) }
    dend_7 { pt3dadd( -34.3294, 106.7, -4.82611, 0.59 ) }
    dend_7 { pt3dadd( -34.6829, 107.404, -4.33436, 0.59 ) }
    dend_7 { pt3dadd( -35.045, 108.039, -3.97542, 0.59 ) }
    dend_7 { pt3dadd( -35.7538, 109.106, -3.4344, 0.59 ) }
    dend_7 { pt3dadd( -36.4478, 110.029, -2.99558, 1.11 ) }
    dend_7 { pt3dadd( -37.3903, 111.192, -2.46639, 0.59 ) }
    dend_7 { pt3dadd( -37.9824, 111.914, -2.20983, 0.59 ) }
    dend_7 { pt3dadd( -38.6986, 112.745, -1.91878, 0.81 ) }
    dend_7 { pt3dadd( -39.4168, 113.569, -1.65488, 0.81 ) }
    dend_7 { pt3dadd( -40.17, 114.429, -1.44424, 0.96 ) }
    dend_7 { pt3dadd( -40.8479, 115.175, -1.2891, 1.03 ) }
    dend_7 { pt3dadd( -41.5251, 115.842, -1.16194, 1.33 ) }
    dend_7 { pt3dadd( -42.2403, 116.489, -1.01144, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.76899, 65.662, -14.332, 0.88 ) }
    dend_3 { pt3dadd( 7.82487, 65.9397, -14.8102, 0.88 ) }
    dend_3 { pt3dadd( 8.67563, 66.0799, -15.2008, 0.66 ) }
    dend_3 { pt3dadd( 9.31062, 66.1415, -15.496, 1.03 ) }
    dend_3 { pt3dadd( 10.0309, 66.2121, -15.8602, 1.18 ) }
    dend_3 { pt3dadd( 10.6477, 66.3051, -16.212, 1.18 ) }
    dend_3 { pt3dadd( 11.113, 66.408, -16.5088, 0.81 ) }
    dend_3 { pt3dadd( 11.6782, 66.5749, -16.9394, 0.44 ) }
    dend_3 { pt3dadd( 12.2872, 66.855, -17.4848, 0.44 ) }
    dend_3 { pt3dadd( 12.9413, 67.3526, -18.1603, 0.44 ) }
    dend_3 { pt3dadd( 13.5309, 67.9913, -18.8167, 0.59 ) }
    dend_3 { pt3dadd( 13.933, 68.5025, -19.2626, 0.81 ) }
    dend_3 { pt3dadd( 14.2513, 68.9113, -19.5959, 0.81 ) }
    dend_3 { pt3dadd( 14.6572, 69.4151, -19.9845, 0.66 ) }
    dend_3 { pt3dadd( 15.1837, 69.9733, -20.419, 0.66 ) }
    dend_3 { pt3dadd( 15.8654, 70.5071, -20.8704, 0.66 ) }
    dend_3 { pt3dadd( 16.4899, 70.8283, -21.2153, 0.88 ) }
    dend_3 { pt3dadd( 17.1769, 71.0543, -21.5616, 0.52 ) }
    dend_3 { pt3dadd( 17.6825, 71.1438, -21.8083, 0.96 ) }
    dend_3 { pt3dadd( 18.3106, 71.1475, -22.1163, 0.96 ) }
    dend_3 { pt3dadd( 18.7979, 71.0585, -22.3564, 1.11 ) }
    dend_3 { pt3dadd( 19.4112, 70.8074, -22.6836, 1.18 ) }
    dend_3 { pt3dadd( 19.8478, 70.531, -22.9319, 1.18 ) }
    dend_3 { pt3dadd( 20.3452, 70.0824, -23.2617, 0.66 ) }
    dend_3 { pt3dadd( 20.9892, 69.2989, -23.7814, 0.96 ) }
    dend_3 { pt3dadd( 21.5528, 68.3678, -24.3497, 0.44 ) }
    dend_3 { pt3dadd( 22.1158, 67.1597, -25.106, 0.37 ) }
    dend_3 { pt3dadd( 22.3882, 66.4742, -25.5666, 1.18 ) }
    dend_3 { pt3dadd( 22.6656, 65.7202, -26.12, 1.33 ) }
    dend_3 { pt3dadd( 22.862, 65.1496, -26.5809, 1.33 ) }
    dend_3 { pt3dadd( 23.1402, 64.1851, -27.4758, 0.59 ) }
    dend_3 { pt3dadd( 23.3318, 63.2744, -28.4343, 0.37 ) }
    dend_3 { pt3dadd( 23.4122, 62.6513, -29.1416, 0.37 ) }
    dend_3 { pt3dadd( 23.4183, 62.1641, -29.7408, 0.37 ) }
    dend_3 { pt3dadd( 23.3844, 61.6533, -30.3914, 0.37 ) }
    dend_3 { pt3dadd( 23.249, 60.829, -31.4718, 0.52 ) }
    dend_3 { pt3dadd( 23.084, 60.1503, -32.375, 0.52 ) }
    dend_3 { pt3dadd( 22.9092, 59.5101, -33.1685, 0.52 ) }
    dend_3 { pt3dadd( 22.5878, 58.1392, -34.6411, 0.96 ) }
    dend_3 { pt3dadd( 22.4453, 57.2304, -35.5032, 1.47 ) }
    dend_3 { pt3dadd( 22.4138, 56.4701, -36.1667, 1.69 ) }
    dend_3 { pt3dadd( 22.4673, 55.9461, -36.5919, 1.92 ) }
    dend_3 { pt3dadd( 22.6179, 55.2933, -37.1023, 1.92 ) }
    dend_3 { pt3dadd( 23.1407, 53.8245, -38.1927, 0.74 ) }
    dend_3 { pt3dadd( 23.6654, 52.7285, -38.9217, 0.37 ) }
    dend_3 { pt3dadd( 24.069, 52.0468, -39.3722, 0.88 ) }
    dend_3 { pt3dadd( 24.3778, 51.639, -39.6577, 1.11 ) }
    dend_3 { pt3dadd( 24.6695, 51.3153, -39.9089, 1.11 ) }
    dend_3 { pt3dadd( 25.0808, 50.9137, -40.2465, 1.33 ) }
    dend_3 { pt3dadd( 25.3336, 50.682, -40.4455, 1.33 ) }
    dend_3 { pt3dadd( 25.7662, 50.1949, -40.757, 0.81 ) }
    dend_3 { pt3dadd( 26.0868, 49.5643, -41.0288, 0.44 ) }
    dend_3 { pt3dadd( 26.3166, 48.803, -41.3283, 0.37 ) }
    dend_3 { pt3dadd( 26.5178, 47.8583, -41.7285, 0.37 ) }
    dend_3 { pt3dadd( 26.6178, 47.2737, -42.0049, 1.18 ) }
    dend_3 { pt3dadd( 26.7165, 46.6212, -42.3459, 1.4 ) }
    dend_3 { pt3dadd( 26.9036, 45.2619, -43.177, 0.29 ) }
    dend_3 { pt3dadd( 27.1114, 44.0603, -44.1147, 0.66 ) }
    dend_3 { pt3dadd( 27.3305, 43.1773, -44.9968, 1.11 ) }
    dend_3 { pt3dadd( 27.4949, 42.6148, -45.6544, 1.62 ) }
    dend_3 { pt3dadd( 27.5672, 42.3579, -45.968, 1.84 ) }
    dend_3 { pt3dadd( 27.7534, 41.7041, -46.775, 1.84 ) }
    dend_3 { pt3dadd( 27.9809, 40.7498, -47.9432, 0.81 ) }
    dend_3 { pt3dadd( 28.1444, 39.9345, -48.8679, 0.44 ) }
    dend_3 { pt3dadd( 28.2531, 39.3434, -49.4778, 0.44 ) }
    dend_3 { pt3dadd( 28.4554, 38.4244, -50.3477, 0.44 ) }
    dend_3 { pt3dadd( 28.6225, 37.809, -50.883, 0.59 ) }
    dend_3 { pt3dadd( 29.1114, 36.4605, -51.9493, 0.52 ) }
    dend_3 { pt3dadd( 29.4327, 35.7976, -52.4458, 0.37 ) }
    dend_3 { pt3dadd( 29.7614, 35.2987, -52.8897, 0.96 ) }
    dend_3 { pt3dadd( 30.249, 34.6809, -53.541, 1.62 ) }
    dend_3 { pt3dadd( 30.479, 34.4127, -53.8408, 1.99 ) }
    dend_3 { pt3dadd( 30.9172, 33.8714, -54.4244, 1.99 ) }
    dend_3 { pt3dadd( 31.1971, 33.5129, -54.7764, 1.47 ) }
    dend_3 { pt3dadd( 32.1843, 32.0769, -56.0851, 0.52 ) }
    dend_3 { pt3dadd( 32.781, 31.1972, -56.8748, 0.52 ) }
    dend_3 { pt3dadd( 33.2478, 30.522, -57.4762, 0.88 ) }
    dend_3 { pt3dadd( 33.7404, 29.8585, -58.0707, 0.59 ) }
    dend_3 { pt3dadd( 34.1797, 29.3078, -58.5518, 0.37 ) }
    dend_3 { pt3dadd( 34.5671, 28.8735, -58.8912, 0.37 ) }
    dend_3 { pt3dadd( 35.1671, 28.3125, -59.2293, 0.74 ) }
    dend_3 { pt3dadd( 35.5415, 27.9742, -59.4412, 0.74 ) }
    dend_3 { pt3dadd( 35.8529, 27.6544, -59.6661, 0.37 ) }
    dend_3 { pt3dadd( 36.0425, 27.4012, -59.8523, 0.37 ) }
    dend_3 { pt3dadd( 36.412, 26.7401, -60.3489, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 36.5304, 26.4219, -60.5819, 1.03 ) }
    dend_3 { pt3dadd( 36.8942, 25.0796, -61.5141, 0.37 ) }
    dend_3 { pt3dadd( 37.1052, 24.135, -62.1602, 1.18 ) }
    dend_3 { pt3dadd( 37.2488, 23.3895, -62.6644, 1.47 ) }
    dend_3 { pt3dadd( 37.4332, 22.4949, -63.2807, 0.66 ) }
    dend_3 { pt3dadd( 37.703, 21.4351, -64.0824, 0.29 ) }
    dend_3 { pt3dadd( 37.8522, 21.0042, -64.4224, 1.25 ) }
    dend_3 { pt3dadd( 38.0436, 20.5713, -64.7938, 1.55 ) }
    dend_3 { pt3dadd( 38.2653, 20.174, -65.1825, 1.55 ) }
    dend_3 { pt3dadd( 38.931, 19.2522, -66.218, 0.44 ) }
    dend_3 { pt3dadd( 39.7597, 18.3711, -67.3973, 1.18 ) }
    dend_3 { pt3dadd( 40.4263, 17.791, -68.2789, 1.84 ) }
    dend_3 { pt3dadd( 41.2335, 17.1617, -69.3163, 2.06 ) }
    dend_3 { pt3dadd( 42.1952, 16.4858, -70.5583, 0.29 ) }
    dend_3 { pt3dadd( 42.7755, 16.1145, -71.3204, 0.29 ) }
    dend_3 { pt3dadd( 43.4197, 15.6984, -72.1731, 1.18 ) }
    dend_3 { pt3dadd( 43.9496, 15.3063, -72.8591, 0.88 ) }
    dend_3 { pt3dadd( 44.296, 15.0362, -73.2932, 0.52 ) }
    dend_3 { pt3dadd( 45.0515, 14.4336, -74.1562, 0.52 ) }
    dend_3 { pt3dadd( 45.4962, 14.0426, -74.6698, 0.52 ) }
    dend_3 { pt3dadd( 46.1491, 13.4164, -75.4096, 0.29 ) }
    dend_3 { pt3dadd( 46.6916, 12.8783, -75.9715, 0.29 ) }
    dend_3 { pt3dadd( 47.2152, 12.3716, -76.4878, 0.66 ) }
    dend_3 { pt3dadd( 47.6986, 11.8881, -76.9349, 0.81 ) }
    dend_3 { pt3dadd( 47.8968, 11.6827, -77.0985, 0.81 ) }
    dend_3 { pt3dadd( 48.6559, 10.8825, -77.7423, 0.29 ) }
    dend_3 { pt3dadd( 49.2219, 10.3066, -78.2406, 0.96 ) }
    dend_3 { pt3dadd( 49.7294, 9.79696, -78.7258, 1.03 ) }
    dend_3 { pt3dadd( 50.3061, 9.19418, -79.3001, 0.29 ) }
    dend_3 { pt3dadd( 50.6511, 8.83881, -79.6425, 0.29 ) }
    dend_3 { pt3dadd( 51.2037, 8.31045, -80.1724, 0.96 ) }
    dend_3 { pt3dadd( 51.7802, 7.81675, -80.6836, 0.96 ) }
    dend_3 { pt3dadd( 52.577, 7.22118, -81.3447, 0.37 ) }
    dend_3 { pt3dadd( 53.4004, 6.69143, -81.9536, 0.66 ) }
    dend_3 { pt3dadd( 53.7584, 6.46785, -82.2062, 0.96 ) }
    dend_3 { pt3dadd( 54.6332, 5.8973, -82.7923, 0.29 ) }
    dend_3 { pt3dadd( 55.5488, 5.28213, -83.361, 1.03 ) }
    dend_3 { pt3dadd( 55.8784, 5.06442, -83.5625, 1.33 ) }
    dend_3 { pt3dadd( 56.745, 4.53747, -84.0658, 0.37 ) }
    dend_3 { pt3dadd( 57.5743, 4.12561, -84.5616, 0.37 ) }
    dend_3 { pt3dadd( 58.2846, 3.82904, -85.0267, 0.37 ) }
    dend_3 { pt3dadd( 58.7249, 3.68046, -85.3377, 0.74 ) }
    dend_3 { pt3dadd( 59.4269, 3.46568, -85.8589, 0.74 ) }
    dend_3 { pt3dadd( 59.9401, 3.30473, -86.2528, 0.37 ) }
    dend_3 { pt3dadd( 60.5998, 3.1189, -86.7695, 0.29 ) }
    dend_3 { pt3dadd( 61.2915, 2.97684, -87.3007, 0.29 ) }
    dend_3 { pt3dadd( 61.854, 2.88948, -87.7235, 0.88 ) }
    dend_3 { pt3dadd( 62.4618, 2.80742, -88.1661, 1.25 ) }
    dend_3 { pt3dadd( 63.1777, 2.71778, -88.6805, 1.18 ) }
    dend_3 { pt3dadd( 64.1259, 2.61509, -89.3605, 0.29 ) }
    dend_3 { pt3dadd( 64.8122, 2.57414, -89.8555, 0.74 ) }
    dend_3 { pt3dadd( 65.3909, 2.55979, -90.269, 0.74 ) }
    dend_3 { pt3dadd( 66.0543, 2.55558, -90.7842, 0.37 ) }
    dend_3 { pt3dadd( 66.8536, 2.55102, -91.4667, 0.96 ) }
    dend_3 { pt3dadd( 67.3137, 2.5323, -91.8792, 1.33 ) }
    dend_3 { pt3dadd( 67.7626, 2.46555, -92.3119, 1.33 ) }
    dend_3 { pt3dadd( 68.4803, 2.25895, -93.0182, 0.37 ) }
    dend_3 { pt3dadd( 69.234, 1.94875, -93.7665, 0.44 ) }
    dend_3 { pt3dadd( 69.754, 1.69232, -94.2764, 0.44 ) }
    dend_3 { pt3dadd( 70.3406, 1.39092, -94.8165, 0.44 ) }
    dend_3 { pt3dadd( 71.1982, 0.9513, -95.5613, 0.96 ) }
    dend_3 { pt3dadd( 71.7588, 0.64922, -96.0125, 1.03 ) }
    dend_3 { pt3dadd( 72.1621, 0.420872, -96.3085, 0.81 ) }
    dend_3 { pt3dadd( 72.7047, 0.0888863, -96.6702, 0.52 ) }
    dend_3 { pt3dadd( 73.352, -0.335156, -97.0803, 0.29 ) }
    dend_3 { pt3dadd( 73.6952, -0.562575, -97.3063, 0.29 ) }
    dend_3 { pt3dadd( 74.3257, -0.942583, -97.6503, 0.88 ) }
    dend_3 { pt3dadd( 74.9371, -1.29542, -97.9383, 1.25 ) }
    dend_3 { pt3dadd( 75.1891, -1.45124, -98.0432, 1.25 ) }
    dend_3 { pt3dadd( 76.0465, -2.07014, -98.3758, 0.29 ) }
    dend_3 { pt3dadd( 76.6475, -2.59151, -98.6064, 0.29 ) }
    dend_3 { pt3dadd( 77.6574, -3.55368, -98.9931, 0.29 ) }
    dend_3 { pt3dadd( 78.0067, -3.89307, -99.134, 0.29 ) }
    dend_3 { pt3dadd( 78.7356, -4.59303, -99.4617, 0.96 ) }
    dend_3 { pt3dadd( 79.2913, -5.08459, -99.7438, 0.96 ) }
    dend_3 { pt3dadd( 79.9016, -5.57706, -100.106, 0.44 ) }
    dend_3 { pt3dadd( 80.3009, -5.86596, -100.38, 0.37 ) }
    dend_3 { pt3dadd( 80.7578, -6.14936, -100.77, 0.81 ) }
    dend_3 { pt3dadd( 81.43, -6.46125, -101.407, 0.29 ) }
    dend_3 { pt3dadd( 81.9599, -6.67991, -101.962, 0.29 ) }
    dend_3 { pt3dadd( 82.4281, -6.88942, -102.477, 0.74 ) }
    dend_3 { pt3dadd( 82.9595, -7.17983, -103.106, 0.96 ) }
    dend_3 { pt3dadd( 83.4948, -7.55023, -103.781, 0.96 ) }
    dend_3 { pt3dadd( 84.2057, -8.13569, -104.69, 0.44 ) }
    dend_3 { pt3dadd( 84.7642, -8.68676, -105.457, 0.29 ) }
    dend_3 { pt3dadd( 85.2113, -9.21163, -106.105, 0.29 ) }
    dend_3 { pt3dadd( 85.623, -9.75015, -106.693, 0.96 ) }
    dend_3 { pt3dadd( 85.85, -10.0596, -107.004, 1.11 ) }
    dend_3 { pt3dadd( 86.2603, -10.5835, -107.503, 1.18 ) }
    dend_3 { pt3dadd( 86.9487, -11.43, -108.342, 0.37 ) }
    dend_3 { pt3dadd( 87.3381, -11.8539, -108.833, 0.37 ) }
    dend_3 { pt3dadd( 87.9047, -12.4288, -109.59, 0.29 ) }
    dend_3 { pt3dadd( 88.448, -12.9367, -110.335, 0.29 ) }
    dend_3 { pt3dadd( 88.9697, -13.39, -111.064, 0.96 ) }
    dend_3 { pt3dadd( 89.7903, -14.0274, -112.193, 0.44 ) }
    dend_3 { pt3dadd( 90.1959, -14.2923, -112.707, 1.03 ) }
    dend_3 { pt3dadd( 90.5263, -14.4801, -113.1, 1.03 ) }
    dend_3 { pt3dadd( 91.2607, -14.8283, -113.939, 0.29 ) }
    dend_3 { pt3dadd( 91.6518, -14.971, -114.34, 0.29 ) }
    dend_3 { pt3dadd( 92.1298, -15.0918, -114.796, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 92.7543, -15.2021, -115.347, 0.96 ) }
    dend_3 { pt3dadd( 93.1399, -15.2694, -115.691, 0.37 ) }
    dend_3 { pt3dadd( 93.7765, -15.3931, -116.275, 0.22 ) }
    dend_3 { pt3dadd( 94.4735, -15.5648, -116.948, 1.11 ) }
    dend_3 { pt3dadd( 95.2355, -15.7442, -117.708, 1.11 ) }
    dend_3 { pt3dadd( 96.2605, -15.9739, -118.78, 0.44 ) }
    dend_3 { pt3dadd( 96.7365, -16.0789, -119.305, 1.03 ) }
    dend_3 { pt3dadd( 97.0544, -16.1659, -119.67, 1.03 ) }
    dend_3 { pt3dadd( 97.7032, -16.4479, -120.443, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.76899, 65.662, -14.332, 0.29 ) }
    dend_2 { pt3dadd( 7.11212, 67.0377, -14.7407, 0.29 ) }
    dend_2 { pt3dadd( 7.27729, 67.6836, -14.9565, 0.29 ) }
    dend_2 { pt3dadd( 7.58839, 68.9238, -15.3663, 0.29 ) }
    dend_2 { pt3dadd( 7.80249, 69.7806, -15.6531, 0.81 ) }
    dend_2 { pt3dadd( 7.92793, 70.2833, -15.8293, 0.81 ) }
    dend_2 { pt3dadd( 8.17575, 71.3252, -16.1932, 0.29 ) }
    dend_2 { pt3dadd( 8.41984, 72.2917, -16.5582, 0.29 ) }
    dend_2 { pt3dadd( 8.64276, 73.212, -16.9138, 0.88 ) }
    dend_2 { pt3dadd( 8.7046, 73.4955, -17.0214, 0.88 ) }
    dend_2 { pt3dadd( 8.86882, 74.3045, -17.3406, 0.22 ) }
    dend_2 { pt3dadd( 9.07211, 75.3021, -17.7336, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -27.9933, -38.7226, -47.4452, 0.88 ) }
    dend_49 { pt3dadd( -30.5365, -37.1897, -57.7124, 0.88 ) }
    dend_49 { pt3dadd( -30.9388, -37.0276, -59.0491, 0.52 ) }
    dend_49 { pt3dadd( -31.1432, -36.9684, -59.6375, 0.52 ) }
    dend_49 { pt3dadd( -31.6909, -36.8573, -61.0042, 0.52 ) }
    dend_49 { pt3dadd( -32.3206, -36.7926, -62.3348, 0.52 ) }
    dend_49 { pt3dadd( -32.8934, -36.7864, -63.3392, 1.03 ) }
    dend_49 { pt3dadd( -33.3901, -36.9664, -63.5007, 1.62 ) }
    dend_49 { pt3dadd( -33.6416, -37.0666, -63.5671, 1.99 ) }
    dend_49 { pt3dadd( -34.2651, -37.2834, -63.7024, 2.14 ) }
    dend_49 { pt3dadd( -35.3406, -37.4981, -63.9379, 1.55 ) }
    dend_49 { pt3dadd( -36.3156, -37.5335, -64.3017, 0.74 ) }
    dend_49 { pt3dadd( -37.2124, -37.4562, -64.8487, 0.37 ) }
    dend_49 { pt3dadd( -38.0275, -37.3479, -65.481, 0.37 ) }
    dend_49 { pt3dadd( -38.5687, -37.3116, -66.037, 0.37 ) }
    dend_49 { pt3dadd( -39.7739, -37.3028, -67.5263, 0.74 ) }
    dend_49 { pt3dadd( -40.9556, -37.3566, -69.1188, 1.4 ) }
    dend_49 { pt3dadd( -41.577, -37.421, -69.9673, 1.92 ) }
    dend_49 { pt3dadd( -41.8829, -37.4708, -70.3803, 2.21 ) }
    dend_49 { pt3dadd( -43.5957, -37.7848, -72.7798, 0.52 ) }
    dend_49 { pt3dadd( -44.1184, -37.8857, -73.5442, 0.52 ) }
    dend_49 { pt3dadd( -44.7685, -38.0151, -74.524, 0.52 ) }
    dend_49 { pt3dadd( -45.2455, -38.0538, -75.2753, 0.59 ) }
    dend_49 { pt3dadd( -45.591, -38.0211, -75.8685, 0.59 ) }
    dend_49 { pt3dadd( -46.7485, -37.6553, -77.9314, 1.69 ) }
    dend_49 { pt3dadd( -47.7787, -37.0384, -79.7744, 2.06 ) }
    dend_49 { pt3dadd( -48.6552, -36.394, -81.3131, 1.03 ) }
    dend_49 { pt3dadd( -49.0746, -36.0382, -82.0569, 0.29 ) }
    dend_49 { pt3dadd( -49.5286, -35.6701, -82.8131, 0.29 ) }
    dend_49 { pt3dadd( -50.1447, -35.2521, -83.6693, 1.25 ) }
    dend_49 { pt3dadd( -50.5569, -35.0599, -84.1157, 1.62 ) }
    dend_49 { pt3dadd( -51.1516, -34.8595, -84.6874, 1.92 ) }
    dend_49 { pt3dadd( -52.9107, -34.5264, -86.3625, 0.81 ) }
    dend_49 { pt3dadd( -53.7868, -34.5346, -87.1921, 1.11 ) }
    dend_49 { pt3dadd( -54.2152, -34.5879, -87.6397, 1.11 ) }
    dend_49 { pt3dadd( -55.1604, -34.7481, -88.765, 0.37 ) }
    dend_49 { pt3dadd( -55.7446, -34.8458, -89.5261, 0.29 ) }
    dend_49 { pt3dadd( -56.3928, -34.9757, -90.388, 0.29 ) }
    dend_49 { pt3dadd( -57.095, -35.1238, -91.254, 0.29 ) }
    dend_49 { pt3dadd( -58.452, -35.323, -93.0017, 1.33 ) }
    dend_49 { pt3dadd( -58.9703, -35.3561, -93.7232, 1.55 ) }
    dend_49 { pt3dadd( -59.4457, -35.3346, -94.4502, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -27.9933, -38.7226, -47.4452, 1.18 ) }
    dend_38 { pt3dadd( -29.0802, -39.1067, -48.2588, 1.18 ) }
    dend_38 { pt3dadd( -30.416, -39.6146, -49.1457, 0.52 ) }
    dend_38 { pt3dadd( -31.1994, -39.9018, -49.6395, 0.52 ) }
    dend_38 { pt3dadd( -33.0673, -40.5334, -50.6042, 0.88 ) }
    dend_38 { pt3dadd( -34.2591, -40.9142, -51.1147, 1.18 ) }
    dend_38 { pt3dadd( -35.1528, -41.2133, -51.448, 1.18 ) }
    dend_38 { pt3dadd( -36.2633, -41.6324, -51.7639, 1.25 ) }
    dend_38 { pt3dadd( -37.2745, -42.057, -51.9913, 1.11 ) }
    dend_38 { pt3dadd( -39.0137, -42.8249, -52.1837, 0.88 ) }
    dend_38 { pt3dadd( -40.1107, -43.3088, -52.1894, 0.59 ) }
    dend_38 { pt3dadd( -41.0269, -43.7074, -52.1705, 0.44 ) }
    dend_38 { pt3dadd( -41.7021, -43.9873, -52.1458, 0.29 ) }
    dend_38 { pt3dadd( -42.4477, -44.2743, -52.1101, 0.29 ) }
    dend_38 { pt3dadd( -43.301, -44.5806, -52.0943, 0.88 ) }
    dend_38 { pt3dadd( -44.0594, -44.7992, -52.1686, 1.25 ) }
    dend_38 { pt3dadd( -44.5, -44.8982, -52.2436, 1.47 ) }
    dend_38 { pt3dadd( -45.1962, -45.0259, -52.3912, 1.47 ) }
    dend_38 { pt3dadd( -45.7754, -45.1422, -52.5378, 1.33 ) }
    dend_38 { pt3dadd( -46.6448, -45.3586, -52.7868, 0.59 ) }
    dend_38 { pt3dadd( -47.531, -45.6336, -53.0757, 0.44 ) }
    dend_38 { pt3dadd( -48.6414, -46.0232, -53.4614, 0.37 ) }
    dend_38 { pt3dadd( -49.3177, -46.2672, -53.7032, 0.96 ) }
    dend_38 { pt3dadd( -50.1821, -46.5747, -54.0177, 0.59 ) }
    dend_38 { pt3dadd( -51.3725, -46.9744, -54.4522, 0.52 ) }
    dend_38 { pt3dadd( -52.0468, -47.1686, -54.7006, 0.52 ) }
    dend_38 { pt3dadd( -52.7465, -47.3159, -54.9664, 1.11 ) }
    dend_38 { pt3dadd( -53.3634, -47.3827, -55.2048, 1.99 ) }
    dend_38 { pt3dadd( -54.0222, -47.3893, -55.4642, 2.28 ) }
    dend_38 { pt3dadd( -54.7069, -47.3267, -55.7459, 1.99 ) }
    dend_38 { pt3dadd( -55.5299, -47.1785, -56.1005, 1.69 ) }
    dend_38 { pt3dadd( -56.2866, -47.0058, -56.4539, 1.4 ) }
    dend_38 { pt3dadd( -56.8856, -46.8736, -56.7558, 0.66 ) }
    dend_38 { pt3dadd( -57.5965, -46.7529, -57.1324, 0.52 ) }
    dend_38 { pt3dadd( -58.31, -46.6975, -57.5216, 0.52 ) }
    dend_38 { pt3dadd( -58.8721, -46.754, -57.8267, 0.29 ) }
    dend_38 { pt3dadd( -59.4527, -47.017, -58.1149, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -60.1701, -47.5796, -58.3914, 0.81 ) }
    dend_38 { pt3dadd( -60.5799, -47.96, -58.494, 1.11 ) }
    dend_38 { pt3dadd( -61.1718, -48.5346, -58.5538, 0.96 ) }
    dend_38 { pt3dadd( -61.9302, -49.2003, -58.4894, 0.74 ) }
    dend_38 { pt3dadd( -62.6368, -49.678, -58.3724, 0.37 ) }
    dend_38 { pt3dadd( -63.6236, -50.0747, -58.1245, 1.11 ) }
    dend_38 { pt3dadd( -64.2665, -50.2472, -57.9445, 1.84 ) }
    dend_38 { pt3dadd( -64.9759, -50.3467, -57.7319, 2.36 ) }
    dend_38 { pt3dadd( -66.155, -50.3443, -57.353, 2.58 ) }
    dend_38 { pt3dadd( -67.358, -50.1743, -56.9453, 0.59 ) }
    dend_38 { pt3dadd( -68.367, -49.9098, -56.5777, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 22.3928, -66.454, -54.0218, 0.74 ) }
    dend_32 { pt3dadd( 23.8719, -67.6513, -54.9054, 0.74 ) }
    dend_32 { pt3dadd( 24.9236, -68.4939, -55.7053, 0.66 ) }
    dend_32 { pt3dadd( 25.5535, -68.9948, -56.2539, 1.11 ) }
    dend_32 { pt3dadd( 26.062, -69.3856, -56.7494, 1.11 ) }
    dend_32 { pt3dadd( 27.1048, -70.1219, -57.8414, 0.88 ) }
    dend_32 { pt3dadd( 27.8575, -70.6141, -58.6774, 0.59 ) }
    dend_32 { pt3dadd( 28.5813, -71.0826, -59.6323, 1.11 ) }
    dend_32 { pt3dadd( 28.7975, -71.2159, -59.9611, 1.47 ) }
    dend_32 { pt3dadd( 29.2327, -71.4415, -60.6494, 1.69 ) }
    dend_32 { pt3dadd( 29.8291, -71.6854, -61.5743, 1.69 ) }
    dend_32 { pt3dadd( 30.6042, -71.8703, -62.6547, 1.77 ) }
    dend_32 { pt3dadd( 31.0559, -71.955, -63.2747, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 22.3928, -66.454, -54.0218, 0.37 ) }
    dend_31 { pt3dadd( 22.1137, -67.2014, -55.1061, 0.37 ) }
    dend_31 { pt3dadd( 21.755, -67.9139, -56.1332, 1.03 ) }
    dend_31 { pt3dadd( 21.2331, -68.8206, -57.388, 1.25 ) }
    dend_31 { pt3dadd( 20.4042, -69.903, -58.9681, 0.66 ) }
    dend_31 { pt3dadd( 20.0903, -70.2365, -59.4883, 0.81 ) }
    dend_31 { pt3dadd( 18.9131, -71.2955, -61.3189, 1.11 ) }
    dend_31 { pt3dadd( 18.3873, -71.6471, -62.0222, 1.4 ) }
    dend_31 { pt3dadd( 17.7592, -71.9837, -62.7437, 0.88 ) }
    dend_31 { pt3dadd( 16.2169, -72.6155, -64.2847, 0.22 ) }
    dend_31 { pt3dadd( 14.7202, -73.1276, -65.664, 0.37 ) }
    dend_31 { pt3dadd( 13.0393, -73.6715, -67.1924, 1.03 ) }
    dend_31 { pt3dadd( 12.1634, -73.9503, -68.0003, 1.69 ) }
    dend_31 { pt3dadd( 11.6114, -74.1729, -68.6258, 1.69 ) }
    dend_31 { pt3dadd( 9.16992, -75.3715, -71.6143, 0.15 ) }
    dend_31 { pt3dadd( 8.78125, -75.6407, -72.2192, 0.15 ) }
    dend_31 { pt3dadd( 8.49305, -75.9007, -72.7759, 1.18 ) }
    dend_31 { pt3dadd( 8.1238, -76.3331, -73.6478, 1.47 ) }
    dend_31 { pt3dadd( 7.00435, -77.9918, -76.8174, 0.88 ) }
    dend_31 { pt3dadd( 6.53872, -78.8699, -78.4036, 1.55 ) }
    dend_31 { pt3dadd( 5.83854, -80.6838, -81.5025, 0.81 ) }
    dend_31 { pt3dadd( 5.56749, -81.3641, -82.6589, 0.37 ) }
    dend_31 { pt3dadd( 5.40632, -81.7362, -83.2616, 0.52 ) }
    dend_31 { pt3dadd( 5.19257, -82.2155, -83.9349, 0.52 ) }
    dend_31 { pt3dadd( 5.03903, -82.6557, -84.3485, 0.37 ) }
    dend_31 { pt3dadd( 4.83685, -83.3766, -84.7883, 0.37 ) }
    dend_31 { pt3dadd( 4.57765, -84.0984, -84.9116, 0.81 ) }
    dend_31 { pt3dadd( 4.34688, -84.738, -84.968, 1.11 ) }
    dend_31 { pt3dadd( 4.07684, -85.7348, -85.0254, 1.25 ) }
    dend_31 { pt3dadd( 3.7951, -87.0873, -85.1259, 0.29 ) }
    dend_31 { pt3dadd( 3.6573, -87.8532, -85.18, 0.29 ) }
    dend_31 { pt3dadd( 3.39851, -89.2018, -85.2396, 1.55 ) }
    dend_31 { pt3dadd( 3.23122, -89.9321, -85.2565, 1.77 ) }
    dend_31 { pt3dadd( 2.7523, -91.6465, -85.2732, 0.29 ) }
    dend_31 { pt3dadd( 2.25825, -92.9852, -85.2513, 0.22 ) }
    dend_31 { pt3dadd( 1.49271, -94.4469, -85.1666, 0.22 ) }
    dend_31 { pt3dadd( 0.735407, -95.582, -85.0403, 0.66 ) }
    dend_31 { pt3dadd( 0.165361, -96.2443, -84.9305, 1.4 ) }
    dend_31 { pt3dadd( 0.04215, -96.3617, -84.9033, 1.92 ) }
    dend_31 { pt3dadd( -0.658252, -96.9285, -84.7235, 1.62 ) }
    dend_31 { pt3dadd( -1.45326, -97.5545, -84.4837, 0.52 ) }
    dend_31 { pt3dadd( -2.17073, -98.1231, -84.2755, 0.29 ) }
    dend_31 { pt3dadd( -2.97612, -98.8043, -84.0562, 0.52 ) }
    dend_31 { pt3dadd( -3.32643, -99.1083, -83.9616, 0.52 ) }
    dend_31 { pt3dadd( -4.05873, -99.7671, -83.7649, 0.37 ) }
    dend_31 { pt3dadd( -4.37293, -100.052, -83.6782, 0.88 ) }
    dend_31 { pt3dadd( -4.85844, -100.474, -83.5596, 0.88 ) }
    dend_31 { pt3dadd( -5.42362, -100.943, -83.438, 0.44 ) }
    dend_31 { pt3dadd( -6.03178, -101.466, -83.3217, 0.22 ) }
    dend_31 { pt3dadd( -6.49904, -101.899, -83.2499, 0.96 ) }
    dend_31 { pt3dadd( -7.11428, -102.514, -83.2047, 0.96 ) }
    dend_31 { pt3dadd( -8.15507, -103.691, -83.1959, 0.29 ) }
    dend_31 { pt3dadd( -8.60159, -104.259, -83.2262, 1.25 ) }
    dend_31 { pt3dadd( -9.01158, -104.791, -83.2677, 1.25 ) }
    dend_31 { pt3dadd( -9.51232, -105.458, -83.3415, 0.96 ) }
    dend_31 { pt3dadd( -10.1213, -106.32, -83.4814, 0.96 ) }
    dend_31 { pt3dadd( -10.9568, -107.667, -83.7939, 0.29 ) }
    dend_31 { pt3dadd( -11.4984, -108.665, -84.0719, 0.29 ) }
    dend_31 { pt3dadd( -11.9123, -109.511, -84.3423, 0.66 ) }
    dend_31 { pt3dadd( -12.2535, -110.257, -84.6213, 0.37 ) }
    dend_31 { pt3dadd( -12.7311, -111.248, -85.0903, 0.96 ) }
    dend_31 { pt3dadd( -13.1385, -112.066, -85.6017, 1.18 ) }
    dend_31 { pt3dadd( -13.3477, -112.47, -85.9213, 0.81 ) }
    dend_31 { pt3dadd( -13.8529, -113.397, -86.7454, 0.52 ) }
    dend_31 { pt3dadd( -14.3707, -114.335, -87.5541, 0.44 ) }
    dend_31 { pt3dadd( -15.1776, -115.686, -88.7065, 0.96 ) }
    dend_31 { pt3dadd( -16.3422, -117.43, -90.2246, 0.37 ) }
    dend_31 { pt3dadd( -16.973, -118.327, -91.0053, 0.37 ) }
    dend_31 { pt3dadd( -17.8211, -119.553, -92.0903, 0.37 ) }
    dend_31 { pt3dadd( -18.5567, -120.7, -93.058, 1.18 ) }
    dend_31 { pt3dadd( -18.938, -121.387, -93.5926, 1.47 ) }
    dend_31 { pt3dadd( -19.2272, -122.006, -94.0369, 1.47 ) }
    dend_31 { pt3dadd( -19.9627, -123.934, -95.3454, 0.74 ) }
    dend_31 { pt3dadd( -20.3064, -125.129, -96.1369, 0.29 ) }
    dend_31 { pt3dadd( -20.5113, -126.171, -96.8109, 0.29 ) }
    dend_31 { pt3dadd( -20.7124, -127.744, -97.8016, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( -20.7501, -128.333, -98.1314, 1.11 ) }
    dend_31 { pt3dadd( -20.7363, -129.404, -98.6636, 0.29 ) }
    dend_31 { pt3dadd( -20.6241, -130.353, -99.0915, 0.29 ) }
    dend_31 { pt3dadd( -20.4332, -131.233, -99.4678, 0.44 ) }
    dend_31 { pt3dadd( -20.233, -131.854, -99.7373, 0.29 ) }
    dend_31 { pt3dadd( -19.9957, -132.497, -99.9631, 1.03 ) }
    dend_31 { pt3dadd( -19.7762, -133.121, -100.153, 1.03 ) }
    dend_31 { pt3dadd( -19.3436, -134.404, -100.526, 0.29 ) }
    dend_31 { pt3dadd( -18.9552, -135.392, -100.807, 1.11 ) }
    dend_31 { pt3dadd( -18.7714, -135.823, -100.927, 1.25 ) }
    dend_31 { pt3dadd( -18.2496, -137.054, -101.224, 0.22 ) }
    dend_31 { pt3dadd( -18.1174, -137.401, -101.284, 0.74 ) }
    dend_31 { pt3dadd( -18.0042, -137.74, -101.328, 0.74 ) }
    dend_31 { pt3dadd( -17.7316, -138.661, -101.397, 0.22 ) }
    dend_31 { pt3dadd( -17.5606, -139.292, -101.437, 0.66 ) }
    dend_31 { pt3dadd( -17.4023, -139.846, -101.476, 0.66 ) }
    dend_31 { pt3dadd( -17.1719, -140.605, -101.535, 0.22 ) }
    dend_31 { pt3dadd( -17.025, -141.145, -101.573, 0.81 ) }
    dend_31 { pt3dadd( -16.823, -142.002, -101.622, 0.22 ) }
    dend_31 { pt3dadd( -16.6042, -143.123, -101.668, 0.52 ) }
    dend_31 { pt3dadd( -16.4832, -143.832, -101.689, 0.66 ) }
    dend_31 { pt3dadd( -16.419, -144.237, -101.697, 0.66 ) }
    dend_31 { pt3dadd( -16.2603, -145.212, -101.712, 0.29 ) }
    dend_31 { pt3dadd( -16.0391, -146.644, -101.721, 0.29 ) }
    dend_31 { pt3dadd( -15.9223, -147.395, -101.726, 0.81 ) }
    dend_31 { pt3dadd( -15.8787, -147.678, -101.726, 0.81 ) }
    dend_31 { pt3dadd( -15.7023, -148.808, -101.727, 0.29 ) }
    dend_31 { pt3dadd( -15.5408, -149.786, -101.728, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.4922, 103.735, -15.4158, 1.25 ) }
    dend_16 { pt3dadd( -12.5922, 105.919, -14.3933, 1.25 ) }
    dend_16 { pt3dadd( -12.3829, 106.63, -14.3284, 1.25 ) }
    dend_16 { pt3dadd( -12.219, 107.677, -14.4943, 1.03 ) }
    dend_16 { pt3dadd( -12.1717, 108.219, -14.6421, 1.11 ) }
    dend_16 { pt3dadd( -12.1172, 109.188, -14.9562, 1.11 ) }
    dend_16 { pt3dadd( -12.0811, 110.203, -15.2995, 1.03 ) }
    dend_16 { pt3dadd( -12.1012, 111.599, -15.9285, 0.96 ) }
    dend_16 { pt3dadd( -12.1702, 112.825, -16.5095, 1.18 ) }
    dend_16 { pt3dadd( -12.273, 113.866, -17.0107, 1.18 ) }
    dend_16 { pt3dadd( -12.3959, 114.844, -17.4673, 1.4 ) }
    dend_16 { pt3dadd( -12.5561, 115.962, -17.9385, 1.55 ) }
    dend_16 { pt3dadd( -12.7588, 117.294, -18.4396, 1.18 ) }
    dend_16 { pt3dadd( -12.9033, 118.288, -18.7712, 0.96 ) }
    dend_16 { pt3dadd( -13.0699, 119.515, -19.1626, 1.25 ) }
    dend_16 { pt3dadd( -13.2087, 120.463, -19.4442, 1.25 ) }
    dend_16 { pt3dadd( -13.3368, 121.319, -19.6791, 1.03 ) }
    dend_16 { pt3dadd( -13.519, 122.557, -19.9709, 1.03 ) }
    dend_16 { pt3dadd( -13.6474, 123.391, -20.1217, 1.03 ) }
    dend_16 { pt3dadd( -13.8419, 124.707, -20.3047, 1.03 ) }
    dend_16 { pt3dadd( -14.0361, 126.22, -20.4504, 1.03 ) }
    dend_16 { pt3dadd( -14.1144, 126.901, -20.4952, 1.33 ) }
    dend_16 { pt3dadd( -14.2732, 128.436, -20.5654, 1.62 ) }
    dend_16 { pt3dadd( -14.3885, 129.676, -20.596, 1.11 ) }
    dend_16 { pt3dadd( -14.4735, 130.884, -20.5291, 1.4 ) }
    dend_16 { pt3dadd( -14.5154, 131.826, -20.422, 1.25 ) }
    dend_16 { pt3dadd( -14.5167, 132.962, -20.2616, 1.55 ) }
    dend_16 { pt3dadd( -14.5089, 133.193, -20.2266, 1.47 ) }
    dend_16 { pt3dadd( -14.4102, 134.664, -20.0008, 1.62 ) }
    dend_16 { pt3dadd( -14.2506, 136.634, -19.7042, 1.47 ) }
    dend_16 { pt3dadd( -14.206, 137.449, -19.5924, 1.55 ) }
    dend_16 { pt3dadd( -14.1901, 138.209, -19.5169, 1.11 ) }
    dend_16 { pt3dadd( -14.1863, 139.612, -19.4322, 0.88 ) }
    dend_16 { pt3dadd( -14.1908, 140.559, -19.4206, 0.88 ) }
    dend_16 { pt3dadd( -14.1889, 141.452, -19.4699, 0.88 ) }
    dend_16 { pt3dadd( -14.1501, 142.712, -19.638, 0.88 ) }
    dend_16 { pt3dadd( -14.0587, 143.667, -19.7873, 1.18 ) }
    dend_16 { pt3dadd( -13.8807, 144.766, -20.0061, 1.18 ) }
    dend_16 { pt3dadd( -13.6907, 145.565, -20.1963, 1.33 ) }
    dend_16 { pt3dadd( -13.4132, 146.488, -20.4049, 1.33 ) }
    dend_16 { pt3dadd( -12.9087, 147.936, -20.6738, 1.11 ) }
    dend_16 { pt3dadd( -12.36, 149.389, -20.8685, 0.88 ) }
    dend_16 { pt3dadd( -11.9816, 150.391, -20.935, 0.88 ) }
    dend_16 { pt3dadd( -11.5732, 151.553, -20.9414, 1.03 ) }
    dend_16 { pt3dadd( -11.2325, 152.718, -20.884, 1.33 ) }
    dend_16 { pt3dadd( -10.9927, 153.817, -20.7775, 1.33 ) }
    dend_16 { pt3dadd( -10.8719, 154.743, -20.6653, 1.47 ) }
    dend_16 { pt3dadd( -10.8221, 155.617, -20.5213, 1.4 ) }
    dend_16 { pt3dadd( -10.8163, 156.429, -20.3653, 1.4 ) }
    dend_16 { pt3dadd( -10.8468, 157.338, -20.1986, 1.18 ) }
    dend_16 { pt3dadd( -10.9028, 158.398, -20.0373, 1.18 ) }
    dend_16 { pt3dadd( -10.9379, 159.135, -19.9318, 1.03 ) }
    dend_16 { pt3dadd( -10.9617, 160.243, -19.7889, 1.03 ) }
    dend_16 { pt3dadd( -10.9299, 161.26, -19.6942, 0.88 ) }
    dend_16 { pt3dadd( -10.848, 162.343, -19.7077, 1.03 ) }
    dend_16 { pt3dadd( -10.7447, 163.334, -19.7888, 0.96 ) }
    dend_16 { pt3dadd( -10.6567, 164.088, -19.9176, 0.96 ) }
    dend_16 { pt3dadd( -10.5406, 165.11, -20.1703, 0.96 ) }
    dend_16 { pt3dadd( -10.4178, 166.438, -20.6556, 0.96 ) }
    dend_16 { pt3dadd( -10.3082, 168.412, -21.6718, 0.81 ) }
    dend_16 { pt3dadd( -10.3228, 169.612, -22.4331, 1.03 ) }
    dend_16 { pt3dadd( -10.3823, 170.344, -22.9442, 1.03 ) }
    dend_16 { pt3dadd( -10.5044, 171.393, -23.6698, 0.88 ) }
    dend_16 { pt3dadd( -10.7053, 172.909, -24.6775, 1.03 ) }
    dend_16 { pt3dadd( -10.9317, 174.565, -25.6819, 1.03 ) }
    dend_16 { pt3dadd( -11.0349, 175.536, -26.1638, 1.25 ) }
    dend_16 { pt3dadd( -11.1658, 176.824, -26.6941, 1.25 ) }
    dend_16 { pt3dadd( -11.3502, 178.663, -27.2507, 1.03 ) }
    dend_16 { pt3dadd( -11.4407, 179.626, -27.4506, 1.03 ) }
    dend_16 { pt3dadd( -11.5361, 180.94, -27.6539, 1.03 ) }
    dend_16 { pt3dadd( -11.5939, 182.639, -27.8727, 1.03 ) }
    dend_16 { pt3dadd( -11.5631, 184.438, -28.1254, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -11.4545, 186.004, -28.3823, 0.88 ) }
    dend_16 { pt3dadd( -11.3064, 187.369, -28.6261, 0.88 ) }
    dend_16 { pt3dadd( -10.9585, 189.888, -29.0832, 0.74 ) }
    dend_16 { pt3dadd( -10.6818, 191.527, -29.3761, 0.74 ) }
    dend_16 { pt3dadd( -10.3484, 193.228, -29.6499, 0.74 ) }
    dend_16 { pt3dadd( -10.0642, 194.623, -29.8842, 0.74 ) }
    dend_16 { pt3dadd( -9.86047, 196.089, -30.1854, 0.74 ) }
    dend_16 { pt3dadd( -9.86623, 197.614, -30.616, 0.74 ) }
    dend_16 { pt3dadd( -9.986, 198.336, -30.8641, 0.88 ) }
    dend_16 { pt3dadd( -10.2179, 199.171, -31.2255, 1.03 ) }
    dend_16 { pt3dadd( -10.6511, 200.638, -31.9133, 0.74 ) }
    dend_16 { pt3dadd( -11.1976, 202.7, -32.8876, 0.74 ) }
    dend_16 { pt3dadd( -11.5682, 204.455, -33.7259, 0.59 ) }
    dend_16 { pt3dadd( -11.6841, 205.249, -34.0857, 0.88 ) }
    dend_16 { pt3dadd( -11.8081, 206.607, -34.6486, 1.11 ) }
    dend_16 { pt3dadd( -11.8546, 208.57, -35.3582, 1.55 ) }
    dend_16 { pt3dadd( -11.786, 210.163, -35.796, 1.33 ) }
    dend_16 { pt3dadd( -11.6592, 211.533, -36.086, 1.11 ) }
    dend_16 { pt3dadd( -11.4603, 213.266, -36.4094, 1.11 ) }
    dend_16 { pt3dadd( -11.2801, 214.647, -36.6614, 1.11 ) }
    dend_16 { pt3dadd( -11.0499, 216.043, -36.9002, 1.03 ) }
    dend_16 { pt3dadd( -10.7123, 217.632, -37.1663, 0.88 ) }
    dend_16 { pt3dadd( -10.4747, 218.489, -37.3114, 1.18 ) }
    dend_16 { pt3dadd( -10.2935, 219.026, -37.3919, 1.4 ) }
    dend_16 { pt3dadd( -10.0081, 219.804, -37.4874, 1.25 ) }
    dend_16 { pt3dadd( -9.69162, 220.708, -37.5894, 1.25 ) }
    dend_16 { pt3dadd( -9.53186, 221.274, -37.665, 1.11 ) }
    dend_16 { pt3dadd( -9.39702, 221.923, -37.7637, 0.96 ) }
    dend_16 { pt3dadd( -9.31476, 222.753, -37.8746, 0.96 ) }
    dend_16 { pt3dadd( -9.3018, 223.337, -37.948, 0.88 ) }
    dend_16 { pt3dadd( -9.31832, 224.487, -38.082, 0.66 ) }
    dend_16 { pt3dadd( -9.31917, 225.239, -38.1346, 0.81 ) }
    dend_16 { pt3dadd( -9.28587, 226.036, -38.1527, 0.81 ) }
    dend_16 { pt3dadd( -9.18485, 226.967, -38.1207, 0.74 ) }
    dend_16 { pt3dadd( -8.85206, 228.793, -37.9774, 0.88 ) }
    dend_16 { pt3dadd( -8.73017, 229.286, -37.9113, 1.18 ) }
    dend_16 { pt3dadd( -8.31203, 230.564, -37.6846, 1.18 ) }
    dend_16 { pt3dadd( -8.02495, 231.286, -37.5322, 1.18 ) }
    dend_16 { pt3dadd( -7.6767, 232.048, -37.3702, 1.11 ) }
    dend_16 { pt3dadd( -7.24002, 232.918, -37.1997, 0.96 ) }
    dend_16 { pt3dadd( -6.93792, 233.517, -37.0873, 0.96 ) }
    dend_16 { pt3dadd( -6.60112, 234.245, -37.0004, 0.81 ) }
    dend_16 { pt3dadd( -6.28884, 234.997, -36.971, 1.11 ) }
    dend_16 { pt3dadd( -6.1298, 235.424, -36.9976, 1.47 ) }
    dend_16 { pt3dadd( -5.83038, 236.347, -37.1639, 1.03 ) }
    dend_16 { pt3dadd( -5.61387, 237.116, -37.3688, 1.03 ) }
    dend_16 { pt3dadd( -5.40682, 237.954, -37.665, 1.25 ) }
    dend_16 { pt3dadd( -5.2902, 238.538, -37.8736, 1.25 ) }
    dend_16 { pt3dadd( -5.05777, 239.962, -38.3277, 0.88 ) }
    dend_16 { pt3dadd( -4.95978, 240.716, -38.5047, 0.88 ) }
    dend_16 { pt3dadd( -4.86932, 241.685, -38.652, 1.18 ) }
    dend_16 { pt3dadd( -4.79102, 242.751, -38.7249, 0.96 ) }
    dend_16 { pt3dadd( -4.6944, 243.947, -38.6855, 0.81 ) }
    dend_16 { pt3dadd( -4.5863, 245.0, -38.5554, 1.25 ) }
    dend_16 { pt3dadd( -4.47166, 245.846, -38.3787, 0.66 ) }
    dend_16 { pt3dadd( -4.3313, 246.7, -38.1675, 0.96 ) }
    dend_16 { pt3dadd( -4.18748, 247.48, -37.9855, 1.25 ) }
    dend_16 { pt3dadd( -4.03416, 248.241, -37.833, 0.96 ) }
    dend_16 { pt3dadd( -3.87169, 248.974, -37.7526, 0.96 ) }
    dend_16 { pt3dadd( -3.66813, 249.806, -37.6987, 1.25 ) }
    dend_16 { pt3dadd( -3.49315, 250.447, -37.6669, 1.55 ) }
    dend_16 { pt3dadd( -3.26226, 251.214, -37.6313, 1.55 ) }
    dend_16 { pt3dadd( -3.08195, 251.771, -37.6151, 1.25 ) }
    dend_16 { pt3dadd( -2.83666, 252.581, -37.6277, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.4922, 103.735, -15.4158, 0.59 ) }
    dend_13 { pt3dadd( -13.2401, 107.57, -17.08, 0.59 ) }
    dend_13 { pt3dadd( -13.1803, 108.994, -17.651, 0.88 ) }
    dend_13 { pt3dadd( -13.1432, 110.689, -18.2462, 1.18 ) }
    dend_13 { pt3dadd( -13.0853, 112.82, -18.8886, 1.18 ) }
    dend_13 { pt3dadd( -12.9923, 114.311, -19.3383, 0.96 ) }
    dend_13 { pt3dadd( -12.8684, 115.976, -19.8325, 0.59 ) }
    dend_13 { pt3dadd( -12.8027, 117.048, -20.071, 0.96 ) }
    dend_13 { pt3dadd( -12.6936, 118.797, -20.4605, 0.96 ) }
    dend_13 { pt3dadd( -12.5888, 120.872, -20.9667, 0.96 ) }
    dend_13 { pt3dadd( -12.5461, 122.818, -21.4818, 0.52 ) }
    dend_13 { pt3dadd( -12.5859, 124.236, -21.8791, 0.37 ) }
    dend_13 { pt3dadd( -12.7036, 125.152, -22.1726, 0.37 ) }
    dend_13 { pt3dadd( -12.9617, 126.075, -22.4878, 0.81 ) }
    dend_13 { pt3dadd( -13.3335, 126.847, -22.8194, 1.18 ) }
    dend_13 { pt3dadd( -13.6216, 127.378, -23.0657, 1.18 ) }
    dend_13 { pt3dadd( -14.0817, 128.33, -23.4627, 0.66 ) }
    dend_13 { pt3dadd( -14.3905, 129.181, -23.8075, 0.66 ) }
    dend_13 { pt3dadd( -14.7403, 130.599, -24.3235, 0.59 ) }
    dend_13 { pt3dadd( -14.9866, 132.346, -24.8897, 0.88 ) }
    dend_13 { pt3dadd( -15.1548, 134.85, -25.6242, 1.11 ) }
    dend_13 { pt3dadd( -15.1725, 136.243, -25.9911, 1.11 ) }
    dend_13 { pt3dadd( -15.1406, 137.438, -26.2449, 1.11 ) }
    dend_13 { pt3dadd( -15.0835, 138.876, -26.4398, 0.37 ) }
    dend_13 { pt3dadd( -15.0517, 140.433, -26.4938, 0.37 ) }
    dend_13 { pt3dadd( -15.0931, 141.472, -26.4034, 0.74 ) }
    dend_13 { pt3dadd( -15.1306, 141.805, -26.3535, 0.88 ) }
    dend_13 { pt3dadd( -15.3388, 143.294, -26.0762, 0.88 ) }
    dend_13 { pt3dadd( -15.4868, 144.425, -25.807, 0.66 ) }
    dend_13 { pt3dadd( -15.6349, 145.974, -25.3786, 0.52 ) }
    dend_13 { pt3dadd( -15.6519, 146.695, -25.2045, 0.52 ) }
    dend_13 { pt3dadd( -15.5691, 148.067, -24.9711, 0.96 ) }
    dend_13 { pt3dadd( -15.4325, 148.995, -24.899, 0.96 ) }
    dend_13 { pt3dadd( -15.2648, 149.759, -24.9077, 1.18 ) }
    dend_13 { pt3dadd( -15.1144, 150.39, -24.9567, 1.18 ) }
    dend_13 { pt3dadd( -14.7549, 152.044, -25.149, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -14.6293, 152.97, -25.2717, 0.88 ) }
    dend_13 { pt3dadd( -14.5897, 154.202, -25.4333, 0.88 ) }
    dend_13 { pt3dadd( -14.6227, 155.167, -25.5942, 0.44 ) }
    dend_13 { pt3dadd( -14.693, 156.225, -25.7737, 0.74 ) }
    dend_13 { pt3dadd( -14.7429, 156.875, -25.8719, 0.74 ) }
    dend_13 { pt3dadd( -14.7976, 157.742, -25.9657, 0.52 ) }
    dend_13 { pt3dadd( -14.8105, 158.824, -26.0719, 0.37 ) }
    dend_13 { pt3dadd( -14.7706, 159.734, -26.1469, 0.37 ) }
    dend_13 { pt3dadd( -14.6469, 160.847, -26.2125, 0.74 ) }
    dend_13 { pt3dadd( -14.5284, 161.553, -26.2385, 0.74 ) }
    dend_13 { pt3dadd( -14.3489, 162.5, -26.2623, 0.66 ) }
    dend_13 { pt3dadd( -14.0469, 164.035, -26.2824, 0.74 ) }
    dend_13 { pt3dadd( -13.9527, 164.496, -26.2832, 1.4 ) }
    dend_13 { pt3dadd( -13.7139, 165.468, -26.2662, 1.4 ) }
    dend_13 { pt3dadd( -13.4495, 166.371, -26.2841, 1.33 ) }
    dend_13 { pt3dadd( -12.8837, 167.973, -26.3738, 0.44 ) }
    dend_13 { pt3dadd( -12.3056, 169.354, -26.4947, 0.44 ) }
    dend_13 { pt3dadd( -11.9048, 170.268, -26.6077, 0.37 ) }
    dend_13 { pt3dadd( -11.211, 171.921, -26.8689, 0.37 ) }
    dend_13 { pt3dadd( -10.669, 173.308, -27.1256, 0.59 ) }
    dend_13 { pt3dadd( -10.3826, 174.173, -27.3103, 0.59 ) }
    dend_13 { pt3dadd( -10.1913, 174.972, -27.5027, 0.29 ) }
    dend_13 { pt3dadd( -10.0956, 176.935, -27.9721, 0.88 ) }
    dend_13 { pt3dadd( -10.2136, 177.876, -28.1665, 1.77 ) }
    dend_13 { pt3dadd( -10.4078, 178.732, -28.3006, 2.06 ) }
    dend_13 { pt3dadd( -10.6044, 179.483, -28.3769, 1.69 ) }
    dend_13 { pt3dadd( -10.8962, 180.566, -28.4913, 1.18 ) }
    dend_13 { pt3dadd( -11.336, 182.219, -28.6965, 0.44 ) }
    dend_13 { pt3dadd( -11.7283, 183.698, -28.8925, 0.37 ) }
    dend_13 { pt3dadd( -12.1654, 185.369, -29.1276, 0.74 ) }
    dend_13 { pt3dadd( -12.3517, 186.047, -29.2349, 0.74 ) }
    dend_13 { pt3dadd( -12.7548, 187.522, -29.5062, 0.52 ) }
    dend_13 { pt3dadd( -13.0581, 188.596, -29.6717, 0.44 ) }
    dend_13 { pt3dadd( -13.253, 189.273, -29.7389, 0.66 ) }
    dend_13 { pt3dadd( -13.4711, 189.935, -29.757, 0.66 ) }
    dend_13 { pt3dadd( -13.8042, 190.819, -29.7483, 0.37 ) }
    dend_13 { pt3dadd( -14.0671, 191.493, -29.6985, 0.37 ) }
    dend_13 { pt3dadd( -14.8359, 193.475, -29.3224, 0.59 ) }
    dend_13 { pt3dadd( -15.3073, 194.874, -28.9406, 1.03 ) }
    dend_13 { pt3dadd( -15.5236, 195.661, -28.6919, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -42.2403, 116.489, -1.01144, 0.29 ) }
    dend_11 { pt3dadd( -42.4216, 118.12, -0.832169, 0.29 ) }
    dend_11 { pt3dadd( -42.5692, 118.892, -0.730299, 0.44 ) }
    dend_11 { pt3dadd( -42.7627, 119.46, -0.592354, 0.66 ) }
    dend_11 { pt3dadd( -43.0886, 120.068, -0.309517, 0.29 ) }
    dend_11 { pt3dadd( -43.4743, 120.619, 0.0304363, 0.29 ) }
    dend_11 { pt3dadd( -43.6918, 120.905, 0.220374, 0.74 ) }
    dend_11 { pt3dadd( -43.999, 121.208, 0.499713, 0.88 ) }
    dend_11 { pt3dadd( -44.7157, 121.843, 1.10539, 0.44 ) }
    dend_11 { pt3dadd( -45.4217, 122.466, 1.65548, 0.52 ) }
    dend_11 { pt3dadd( -45.622, 122.669, 1.80659, 0.81 ) }
    dend_11 { pt3dadd( -45.9365, 123.109, 2.06566, 0.44 ) }
    dend_11 { pt3dadd( -46.1888, 123.616, 2.33453, 0.88 ) }
    dend_11 { pt3dadd( -46.4063, 124.249, 2.66578, 0.59 ) }
    dend_11 { pt3dadd( -46.5484, 124.902, 2.92573, 0.29 ) }
    dend_11 { pt3dadd( -46.627, 125.465, 3.10394, 0.29 ) }
    dend_11 { pt3dadd( -46.7334, 126.447, 3.38145, 0.96 ) }
    dend_11 { pt3dadd( -46.8191, 127.328, 3.61882, 1.18 ) }
    dend_11 { pt3dadd( -46.8917, 128.24, 3.8617, 0.81 ) }
    dend_11 { pt3dadd( -46.991, 129.494, 4.14765, 0.52 ) }
    dend_11 { pt3dadd( -47.0514, 130.15, 4.27936, 0.52 ) }
    dend_11 { pt3dadd( -47.1781, 131.127, 4.41248, 0.44 ) }
    dend_11 { pt3dadd( -47.2991, 131.894, 4.48589, 0.66 ) }
    dend_11 { pt3dadd( -47.435, 132.752, 4.58491, 0.88 ) }
    dend_11 { pt3dadd( -47.5213, 133.265, 4.65786, 0.52 ) }
    dend_11 { pt3dadd( -47.6196, 133.902, 4.78404, 0.29 ) }
    dend_11 { pt3dadd( -47.7609, 134.791, 4.96098, 0.29 ) }
    dend_11 { pt3dadd( -47.9469, 135.977, 5.1909, 0.52 ) }
    dend_11 { pt3dadd( -48.1341, 136.885, 5.36148, 0.81 ) }
    dend_11 { pt3dadd( -48.3305, 137.707, 5.47692, 0.22 ) }
    dend_11 { pt3dadd( -48.4732, 138.326, 5.54653, 0.22 ) }
    dend_11 { pt3dadd( -48.7233, 139.346, 5.64095, 0.37 ) }
    dend_11 { pt3dadd( -48.8705, 139.87, 5.68122, 0.37 ) }
    dend_11 { pt3dadd( -49.2262, 140.968, 5.7547, 0.37 ) }
    dend_11 { pt3dadd( -49.5995, 142.018, 5.8285, 0.29 ) }
    dend_11 { pt3dadd( -49.9621, 143.111, 5.91942, 0.52 ) }
    dend_11 { pt3dadd( -50.1329, 143.689, 5.96435, 0.88 ) }
    dend_11 { pt3dadd( -50.4001, 144.874, 6.03925, 0.59 ) }
    dend_11 { pt3dadd( -50.5038, 145.496, 6.06457, 0.44 ) }
    dend_11 { pt3dadd( -50.5743, 146.265, 6.08562, 0.22 ) }
    dend_11 { pt3dadd( -50.6658, 147.803, 6.1168, 0.22 ) }
    dend_11 { pt3dadd( -50.678, 148.492, 6.10744, 0.81 ) }
    dend_11 { pt3dadd( -50.6637, 149.063, 6.06381, 1.33 ) }
    dend_11 { pt3dadd( -50.645, 149.619, 5.98802, 1.33 ) }
    dend_11 { pt3dadd( -50.5984, 150.628, 5.81067, 0.59 ) }
    dend_11 { pt3dadd( -50.5473, 151.289, 5.66221, 0.81 ) }
    dend_11 { pt3dadd( -50.4784, 151.898, 5.49701, 0.81 ) }
    dend_11 { pt3dadd( -50.3534, 152.835, 5.18412, 0.52 ) }
    dend_11 { pt3dadd( -50.1861, 154.015, 4.72318, 0.22 ) }
    dend_11 { pt3dadd( -50.0456, 154.942, 4.32187, 0.22 ) }
    dend_11 { pt3dadd( -49.858, 156.053, 3.79879, 0.59 ) }
    dend_11 { pt3dadd( -49.7193, 156.749, 3.46526, 0.81 ) }
    dend_11 { pt3dadd( -49.5216, 157.731, 2.99036, 0.29 ) }
    dend_11 { pt3dadd( -49.3761, 158.446, 2.67285, 0.22 ) }
    dend_11 { pt3dadd( -49.3131, 158.816, 2.51605, 0.59 ) }
    dend_11 { pt3dadd( -49.3048, 159.101, 2.41105, 0.59 ) }
    dend_11 { pt3dadd( -49.4541, 159.838, 2.18759, 0.22 ) }
    dend_11 { pt3dadd( -49.7164, 160.489, 1.98466, 0.29 ) }
    dend_11 { pt3dadd( -49.9537, 160.922, 1.83143, 0.81 ) }
    dend_11 { pt3dadd( -50.1391, 161.212, 1.69481, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -50.281, 161.434, 1.57517, 1.11 ) }
    dend_11 { pt3dadd( -50.9119, 162.518, 0.95628, 0.37 ) }
    dend_11 { pt3dadd( -51.1488, 163.026, 0.682411, 0.96 ) }
    dend_11 { pt3dadd( -51.4128, 163.749, 0.328964, 0.88 ) }
    dend_11 { pt3dadd( -51.6097, 164.328, 0.0620637, 0.88 ) }
    dend_11 { pt3dadd( -51.8853, 165.111, -0.26089, 0.52 ) }
    dend_11 { pt3dadd( -52.0953, 165.696, -0.473763, 0.74 ) }
    dend_11 { pt3dadd( -52.4782, 166.748, -0.80016, 0.29 ) }
    dend_11 { pt3dadd( -52.8689, 167.717, -1.10763, 0.59 ) }
    dend_11 { pt3dadd( -53.167, 168.375, -1.32458, 0.59 ) }
    dend_11 { pt3dadd( -53.5486, 169.192, -1.69179, 0.29 ) }
    dend_11 { pt3dadd( -53.8669, 169.84, -2.09229, 1.18 ) }
    dend_11 { pt3dadd( -54.0051, 170.135, -2.31471, 1.47 ) }
    dend_11 { pt3dadd( -54.2956, 170.831, -2.92191, 1.18 ) }
    dend_11 { pt3dadd( -54.5393, 171.511, -3.52088, 0.44 ) }
    dend_11 { pt3dadd( -54.8887, 172.687, -4.53443, 0.22 ) }
    dend_11 { pt3dadd( -54.9996, 173.146, -4.94779, 0.22 ) }
    dend_11 { pt3dadd( -55.1745, 174.078, -5.74023, 1.18 ) }
    dend_11 { pt3dadd( -55.2057, 174.317, -5.9302, 1.4 ) }
    dend_11 { pt3dadd( -55.2603, 175.427, -6.70881, 0.44 ) }
    dend_11 { pt3dadd( -55.2483, 176.069, -7.12711, 0.66 ) }
    dend_11 { pt3dadd( -55.2337, 176.69, -7.47264, 0.66 ) }
    dend_11 { pt3dadd( -55.1642, 177.571, -7.97802, 0.22 ) }
    dend_11 { pt3dadd( -55.106, 177.948, -8.21633, 0.59 ) }
    dend_11 { pt3dadd( -54.9863, 178.52, -8.60117, 0.52 ) }
    dend_11 { pt3dadd( -54.8106, 179.177, -9.05097, 0.96 ) }
    dend_11 { pt3dadd( -54.6786, 179.783, -9.4911, 0.59 ) }
    dend_11 { pt3dadd( -54.5731, 180.36, -9.92696, 0.37 ) }
    dend_11 { pt3dadd( -54.4648, 180.941, -10.3921, 0.59 ) }
    dend_11 { pt3dadd( -54.3756, 181.342, -10.6962, 0.81 ) }
    dend_11 { pt3dadd( -54.1713, 182.294, -11.4024, 0.22 ) }
    dend_11 { pt3dadd( -53.9973, 183.116, -11.9633, 0.59 ) }
    dend_11 { pt3dadd( -53.8933, 183.638, -12.2997, 0.52 ) }
    dend_11 { pt3dadd( -53.8028, 184.262, -12.6761, 0.22 ) }
    dend_11 { pt3dadd( -53.6919, 185.225, -13.2318, 0.22 ) }
    dend_11 { pt3dadd( -53.5951, 186.294, -13.8352, 0.88 ) }
    dend_11 { pt3dadd( -53.5583, 186.909, -14.1676, 1.69 ) }
    dend_11 { pt3dadd( -53.5493, 187.254, -14.3309, 1.92 ) }
    dend_11 { pt3dadd( -53.581, 187.909, -14.6411, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -42.2403, 116.489, -1.01144, 0.52 ) }
    dend_8 { pt3dadd( -43.6009, 116.807, -0.882211, 0.52 ) }
    dend_8 { pt3dadd( -44.4797, 116.996, -0.793897, 0.59 ) }
    dend_8 { pt3dadd( -45.4307, 117.192, -0.692315, 0.44 ) }
    dend_8 { pt3dadd( -46.0829, 117.347, -0.619078, 0.59 ) }
    dend_8 { pt3dadd( -46.8175, 117.565, -0.52696, 0.59 ) }
    dend_8 { pt3dadd( -47.7052, 117.885, -0.406646, 0.52 ) }
    dend_8 { pt3dadd( -48.2702, 118.123, -0.318835, 0.74 ) }
    dend_8 { pt3dadd( -48.9932, 118.487, -0.195296, 0.37 ) }
    dend_8 { pt3dadd( -49.5327, 118.791, -0.0861111, 0.37 ) }
    dend_8 { pt3dadd( -50.2231, 119.197, 0.0661691, 0.37 ) }
    dend_8 { pt3dadd( -50.8272, 119.531, 0.215673, 0.52 ) }
    dend_8 { pt3dadd( -51.5949, 119.841, 0.401142, 0.52 ) }
    dend_8 { pt3dadd( -52.1994, 119.942, 0.529292, 0.29 ) }
    dend_8 { pt3dadd( -53.0334, 119.935, 0.649353, 0.81 ) }
    dend_8 { pt3dadd( -53.5417, 119.888, 0.698458, 1.11 ) }
    dend_8 { pt3dadd( -54.2483, 119.809, 0.741614, 1.25 ) }
    dend_8 { pt3dadd( -55.3473, 119.696, 0.784652, 0.66 ) }
    dend_8 { pt3dadd( -56.2991, 119.626, 0.794328, 0.37 ) }
    dend_8 { pt3dadd( -57.6676, 119.612, 0.727761, 0.37 ) }
    dend_8 { pt3dadd( -58.5761, 119.674, 0.615975, 0.29 ) }
    dend_8 { pt3dadd( -59.771, 119.835, 0.398692, 0.66 ) }
    dend_8 { pt3dadd( -60.233, 119.934, 0.280429, 0.88 ) }
    dend_8 { pt3dadd( -60.8941, 120.119, 0.0313233, 0.59 ) }
    dend_8 { pt3dadd( -61.9215, 120.417, -0.475449, 0.37 ) }
    dend_8 { pt3dadd( -62.6263, 120.594, -0.893823, 0.37 ) }
    dend_8 { pt3dadd( -63.1557, 120.693, -1.24791, 0.96 ) }
    dend_8 { pt3dadd( -63.9964, 120.778, -1.88273, 1.18 ) }
    dend_8 { pt3dadd( -65.4271, 120.825, -2.98701, 0.59 ) }
    dend_8 { pt3dadd( -65.9603, 120.813, -3.39627, 0.44 ) }
    dend_8 { pt3dadd( -66.5599, 120.761, -3.82408, 0.29 ) }
    dend_8 { pt3dadd( -67.265, 120.667, -4.2797, 0.15 ) }
    dend_8 { pt3dadd( -68.4138, 120.457, -4.95774, 0.88 ) }
    dend_8 { pt3dadd( -68.9523, 120.354, -5.22047, 1.18 ) }
    dend_8 { pt3dadd( -69.7142, 120.243, -5.5273, 0.44 ) }
    dend_8 { pt3dadd( -70.4353, 120.192, -5.77921, 0.37 ) }
    dend_8 { pt3dadd( -71.0948, 120.194, -5.96067, 0.96 ) }
    dend_8 { pt3dadd( -72.1779, 120.29, -6.14423, 1.25 ) }
    dend_8 { pt3dadd( -73.3249, 120.505, -6.20427, 0.44 ) }
    dend_8 { pt3dadd( -74.0564, 120.702, -6.17001, 0.44 ) }
    dend_8 { pt3dadd( -74.9865, 121.014, -6.04581, 1.03 ) }
    dend_8 { pt3dadd( -75.7409, 121.319, -5.86587, 0.88 ) }
    dend_8 { pt3dadd( -76.72, 121.762, -5.5766, 0.74 ) }
    dend_8 { pt3dadd( -78.1952, 122.506, -5.01557, 0.37 ) }
    dend_8 { pt3dadd( -79.1744, 123.02, -4.57089, 0.88 ) }
    dend_8 { pt3dadd( -79.4859, 123.186, -4.40563, 1.18 ) }
    dend_8 { pt3dadd( -80.2816, 123.654, -3.9317, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 97.7032, -16.4479, -120.443, 0.29 ) }
    dend_5 { pt3dadd( 96.3826, -15.4926, -124.837, 0.29 ) }
    dend_5 { pt3dadd( 96.0168, -15.1499, -125.965, 0.52 ) }
    dend_5 { pt3dadd( 95.894, -15.014, -126.296, 0.52 ) }
    dend_5 { pt3dadd( 95.4371, -14.4613, -127.331, 0.29 ) }
    dend_5 { pt3dadd( 94.9934, -13.9022, -128.195, 0.96 ) }
    dend_5 { pt3dadd( 94.857, -13.7152, -128.455, 1.33 ) }
    dend_5 { pt3dadd( 94.6941, -13.3912, -128.685, 1.33 ) }
    dend_5 { pt3dadd( 94.3814, -12.7353, -129.159, 0.59 ) }
    dend_5 { pt3dadd( 94.1358, -12.1497, -129.676, 0.37 ) }
    dend_5 { pt3dadd( 93.9924, -11.656, -130.324, 0.22 ) }
    dend_5 { pt3dadd( 94.0686, -11.1925, -131.354, 0.22 ) }
    dend_5 { pt3dadd( 94.1943, -11.0929, -131.786, 0.59 ) }
    dend_5 { pt3dadd( 94.4975, -11.0377, -132.486, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 94.8099, -11.0561, -133.046, 0.37 ) }
    dend_5 { pt3dadd( 95.2432, -11.1282, -133.711, 0.96 ) }
    dend_5 { pt3dadd( 95.693, -11.2196, -134.326, 0.96 ) }
    dend_5 { pt3dadd( 96.2955, -11.3664, -135.115, 0.44 ) }
    dend_5 { pt3dadd( 96.6004, -11.4442, -135.514, 0.52 ) }
    dend_5 { pt3dadd( 96.995, -11.5616, -136.032, 0.22 ) }
    dend_5 { pt3dadd( 97.259, -11.6415, -136.4, 0.74 ) }
    dend_5 { pt3dadd( 97.8184, -11.7928, -137.219, 0.29 ) }
    dend_5 { pt3dadd( 98.0658, -11.8422, -137.61, 0.29 ) }
    dend_5 { pt3dadd( 98.427, -11.8757, -138.251, 0.88 ) }
    dend_5 { pt3dadd( 98.8358, -11.8735, -139.038, 0.37 ) }
    dend_5 { pt3dadd( 99.491, -11.7829, -140.41, 0.96 ) }
    dend_5 { pt3dadd( 99.7617, -11.694, -141.039, 1.4 ) }
    dend_5 { pt3dadd( 99.984, -11.5494, -141.634, 0.59 ) }
    dend_5 { pt3dadd( 100.294, -11.1941, -142.617, 0.22 ) }
    dend_5 { pt3dadd( 100.525, -10.7438, -143.52, 0.22 ) }
    dend_5 { pt3dadd( 100.664, -10.2209, -144.295, 1.11 ) }
    dend_5 { pt3dadd( 100.702, -9.67703, -144.901, 1.33 ) }
    dend_5 { pt3dadd( 100.68, -9.03853, -145.514, 1.33 ) }
    dend_5 { pt3dadd( 100.637, -8.51971, -145.949, 1.33 ) }
    dend_5 { pt3dadd( 100.577, -8.00912, -146.314, 0.59 ) }
    dend_5 { pt3dadd( 100.459, -7.11471, -146.906, 0.22 ) }
    dend_5 { pt3dadd( 100.381, -6.09529, -147.572, 1.4 ) }
    dend_5 { pt3dadd( 100.389, -5.61485, -147.91, 1.69 ) }
    dend_5 { pt3dadd( 100.477, -4.69534, -148.625, 0.29 ) }
    dend_5 { pt3dadd( 100.545, -4.33786, -148.986, 0.66 ) }
    dend_5 { pt3dadd( 100.685, -3.92284, -149.604, 0.66 ) }
    dend_5 { pt3dadd( 100.952, -3.64092, -150.686, 0.22 ) }
    dend_5 { pt3dadd( 101.136, -3.77675, -151.674, 1.03 ) }
    dend_5 { pt3dadd( 101.163, -3.99253, -152.181, 1.03 ) }
    dend_5 { pt3dadd( 100.998, -5.01724, -153.793, 0.74 ) }
    dend_5 { pt3dadd( 100.871, -5.67408, -154.704, 1.03 ) }
    dend_5 { pt3dadd( 100.627, -6.74347, -156.002, 1.11 ) }
    dend_5 { pt3dadd( 100.305, -7.89718, -157.24, 1.11 ) }
    dend_5 { pt3dadd( 99.8996, -9.1629, -158.459, 0.74 ) }
    dend_5 { pt3dadd( 99.4487, -10.3808, -159.555, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 97.7032, -16.4479, -120.443, 0.37 ) }
    dend_4 { pt3dadd( 99.4712, -18.1331, -121.434, 0.37 ) }
    dend_4 { pt3dadd( 100.2, -18.6378, -121.606, 0.44 ) }
    dend_4 { pt3dadd( 100.712, -18.8925, -121.553, 0.44 ) }
    dend_4 { pt3dadd( 102.439, -19.5605, -121.115, 0.74 ) }
    dend_4 { pt3dadd( 102.699, -19.6308, -121.037, 0.88 ) }
    dend_4 { pt3dadd( 103.626, -19.8078, -120.767, 0.37 ) }
    dend_4 { pt3dadd( 104.864, -19.9422, -120.324, 0.37 ) }
    dend_4 { pt3dadd( 106.794, -20.0914, -119.597, 0.88 ) }
    dend_4 { pt3dadd( 107.473, -20.1265, -119.334, 1.03 ) }
    dend_4 { pt3dadd( 108.509, -20.163, -118.94, 0.29 ) }
    dend_4 { pt3dadd( 109.509, -20.1744, -118.534, 0.29 ) }
    dend_4 { pt3dadd( 110.318, -20.1571, -118.182, 0.29 ) }
    dend_4 { pt3dadd( 111.857, -20.0691, -117.628, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -59.4457, -35.3346, -94.4502, 0.74 ) }
    dend_51 { pt3dadd( -60.2731, -35.0272, -94.9263, 0.74 ) }
    dend_51 { pt3dadd( -60.9184, -34.8142, -95.2835, 1.03 ) }
    dend_51 { pt3dadd( -61.9621, -34.5123, -95.9122, 0.37 ) }
    dend_51 { pt3dadd( -62.4952, -34.384, -96.2707, 0.22 ) }
    dend_51 { pt3dadd( -63.1318, -34.2616, -96.7472, 1.4 ) }
    dend_51 { pt3dadd( -63.5747, -34.1906, -97.0975, 1.55 ) }
    dend_51 { pt3dadd( -64.1495, -34.1441, -97.6019, 1.55 ) }
    dend_51 { pt3dadd( -65.1111, -34.1269, -98.5219, 0.81 ) }
    dend_51 { pt3dadd( -65.7977, -34.1601, -99.2097, 0.52 ) }
    dend_51 { pt3dadd( -66.3771, -34.2254, -99.7988, 0.88 ) }
    dend_51 { pt3dadd( -67.0312, -34.3173, -100.479, 0.22 ) }
    dend_51 { pt3dadd( -67.5321, -34.3784, -101.007, 0.74 ) }
    dend_51 { pt3dadd( -67.9742, -34.3984, -101.469, 0.74 ) }
    dend_51 { pt3dadd( -68.3126, -34.3655, -101.866, 0.74 ) }
    dend_51 { pt3dadd( -68.8667, -34.2491, -102.602, 0.44 ) }
    dend_51 { pt3dadd( -69.3094, -34.1373, -103.244, 0.22 ) }
    dend_51 { pt3dadd( -69.5354, -34.0785, -103.627, 0.81 ) }
    dend_51 { pt3dadd( -69.8598, -33.9966, -104.196, 0.81 ) }
    dend_51 { pt3dadd( -71.0564, -33.6905, -106.302, 0.52 ) }
    dend_51 { pt3dadd( -71.531, -33.5808, -107.113, 1.03 ) }
    dend_51 { pt3dadd( -71.9327, -33.5209, -107.746, 1.4 ) }
    dend_51 { pt3dadd( -72.6177, -33.47, -108.736, 1.18 ) }
    dend_51 { pt3dadd( -73.0297, -33.4615, -109.285, 0.66 ) }
    dend_51 { pt3dadd( -73.6708, -33.4599, -110.072, 1.18 ) }
    dend_51 { pt3dadd( -74.0559, -33.457, -110.496, 1.55 ) }
    dend_51 { pt3dadd( -74.9574, -33.4327, -111.509, 0.52 ) }
    dend_51 { pt3dadd( -75.3245, -33.4194, -111.951, 1.18 ) }
    dend_51 { pt3dadd( -75.8319, -33.4065, -112.601, 1.18 ) }
    dend_51 { pt3dadd( -76.7109, -33.3785, -113.855, 0.29 ) }
    dend_51 { pt3dadd( -77.0366, -33.3678, -114.381, 0.29 ) }
    dend_51 { pt3dadd( -77.4111, -33.3491, -115.034, 0.29 ) }
    dend_51 { pt3dadd( -77.8243, -33.3116, -115.789, 0.59 ) }
    dend_51 { pt3dadd( -78.1963, -33.2715, -116.48, 0.59 ) }
    dend_51 { pt3dadd( -78.4755, -33.2295, -116.978, 0.44 ) }
    dend_51 { pt3dadd( -79.1502, -33.0974, -118.118, 1.03 ) }
    dend_51 { pt3dadd( -79.4835, -33.0069, -118.699, 1.33 ) }
    dend_51 { pt3dadd( -80.2599, -32.7626, -120.019, 0.29 ) }
    dend_51 { pt3dadd( -80.6068, -32.6412, -120.573, 0.29 ) }
    dend_51 { pt3dadd( -80.93, -32.5209, -121.051, 0.96 ) }
    dend_51 { pt3dadd( -81.3734, -32.355, -121.638, 0.96 ) }
    dend_51 { pt3dadd( -82.9225, -31.752, -123.292, 0.29 ) }
    dend_51 { pt3dadd( -83.2335, -31.6207, -123.551, 0.29 ) }
    dend_51 { pt3dadd( -83.7997, -31.3913, -123.899, 1.03 ) }
    dend_51 { pt3dadd( -84.3781, -31.1755, -124.162, 1.33 ) }
    dend_51 { pt3dadd( -85.1121, -30.92, -124.398, 0.74 ) }
    dend_51 { pt3dadd( -86.1445, -30.5696, -124.617, 0.37 ) }
    dend_51 { pt3dadd( -87.4046, -30.1551, -124.764, 0.29 ) }
    dend_51 { pt3dadd( -88.1477, -29.9176, -124.862, 0.22 ) }
    dend_51 { pt3dadd( -88.9429, -29.6788, -124.97, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -89.7534, -29.4229, -125.083, 0.52 ) }
    dend_51 { pt3dadd( -90.3448, -29.2267, -125.172, 0.96 ) }
    dend_51 { pt3dadd( -90.8554, -29.0511, -125.264, 1.18 ) }
    dend_51 { pt3dadd( -91.3757, -28.8828, -125.368, 1.18 ) }
    dend_51 { pt3dadd( -92.1053, -28.6243, -125.517, 0.74 ) }
    dend_51 { pt3dadd( -92.7757, -28.3909, -125.649, 0.22 ) }
    dend_51 { pt3dadd( -93.1162, -28.278, -125.705, 0.44 ) }
    dend_51 { pt3dadd( -93.5736, -28.1266, -125.757, 0.44 ) }
    dend_51 { pt3dadd( -94.1443, -27.9154, -125.808, 0.22 ) }
    dend_51 { pt3dadd( -94.7288, -27.6716, -125.844, 0.22 ) }
    dend_51 { pt3dadd( -95.121, -27.4879, -125.861, 0.88 ) }
    dend_51 { pt3dadd( -95.5494, -27.2788, -125.87, 1.25 ) }
    dend_51 { pt3dadd( -95.7548, -27.1613, -125.867, 1.25 ) }
    dend_51 { pt3dadd( -96.7015, -26.5324, -125.824, 0.22 ) }
    dend_51 { pt3dadd( -97.1829, -26.1692, -125.794, 0.22 ) }
    dend_51 { pt3dadd( -97.6721, -25.761, -125.761, 0.88 ) }
    dend_51 { pt3dadd( -98.0791, -25.3844, -125.732, 1.25 ) }
    dend_51 { pt3dadd( -98.6776, -24.7748, -125.689, 0.22 ) }
    dend_51 { pt3dadd( -99.3786, -24.0025, -125.635, 0.22 ) }
    dend_51 { pt3dadd( -99.9289, -23.3383, -125.598, 0.88 ) }
    dend_51 { pt3dadd( -100.248, -22.9146, -125.577, 0.88 ) }
    dend_51 { pt3dadd( -100.535, -22.5008, -125.534, 0.37 ) }
    dend_51 { pt3dadd( -100.951, -21.8319, -125.423, 0.15 ) }
    dend_51 { pt3dadd( -101.327, -21.1519, -125.276, 0.96 ) }
    dend_51 { pt3dadd( -101.583, -20.6406, -125.146, 1.18 ) }
    dend_51 { pt3dadd( -102.227, -19.337, -124.726, 0.22 ) }
    dend_51 { pt3dadd( -102.826, -18.1586, -124.278, 0.81 ) }
    dend_51 { pt3dadd( -103.131, -17.5429, -124.02, 0.74 ) }
    dend_51 { pt3dadd( -103.51, -16.738, -123.645, 0.29 ) }
    dend_51 { pt3dadd( -103.635, -16.4623, -123.506, 0.29 ) }
    dend_51 { pt3dadd( -103.979, -15.6988, -123.094, 0.52 ) }
    dend_51 { pt3dadd( -104.142, -15.3197, -122.885, 0.66 ) }
    dend_51 { pt3dadd( -104.407, -14.5823, -122.553, 0.22 ) }
    dend_51 { pt3dadd( -104.517, -14.1967, -122.408, 0.22 ) }
    dend_51 { pt3dadd( -104.639, -13.5178, -122.196, 0.81 ) }
    dend_51 { pt3dadd( -104.668, -13.1233, -122.107, 1.11 ) }
    dend_51 { pt3dadd( -104.637, -12.5065, -122.036, 1.11 ) }
    dend_51 { pt3dadd( -104.502, -11.5628, -122.016, 0.22 ) }
    dend_51 { pt3dadd( -104.397, -11.0582, -122.052, 0.59 ) }
    dend_51 { pt3dadd( -104.329, -10.7473, -122.089, 0.59 ) }
    dend_51 { pt3dadd( -104.197, -10.1192, -122.176, 0.29 ) }
    dend_51 { pt3dadd( -104.033, -9.13843, -122.343, 0.22 ) }
    dend_51 { pt3dadd( -103.892, -8.16075, -122.539, 0.88 ) }
    dend_51 { pt3dadd( -103.809, -7.29214, -122.707, 1.11 ) }
    dend_51 { pt3dadd( -103.733, -5.92762, -122.934, 0.22 ) }
    dend_51 { pt3dadd( -103.712, -5.30175, -123.024, 0.52 ) }
    dend_51 { pt3dadd( -103.709, -4.30764, -123.176, 0.22 ) }
    dend_51 { pt3dadd( -103.747, -3.18599, -123.371, 0.22 ) }
    dend_51 { pt3dadd( -103.817, -2.04891, -123.587, 0.66 ) }
    dend_51 { pt3dadd( -103.884, -1.12322, -123.795, 0.66 ) }
    dend_51 { pt3dadd( -103.962, -0.111589, -124.094, 0.88 ) }
    dend_51 { pt3dadd( -104.054, 1.07448, -124.496, 0.66 ) }
    dend_51 { pt3dadd( -104.118, 1.83308, -124.775, 0.44 ) }
    dend_51 { pt3dadd( -104.19, 2.51399, -125.056, 0.66 ) }
    dend_51 { pt3dadd( -104.217, 2.81706, -125.203, 0.66 ) }
    dend_51 { pt3dadd( -104.339, 4.0971, -125.913, 0.22 ) }
    dend_51 { pt3dadd( -104.44, 5.00408, -126.435, 0.22 ) }
    dend_51 { pt3dadd( -104.482, 5.45732, -126.668, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -59.4457, -35.3346, -94.4502, 0.44 ) }
    dend_50 { pt3dadd( -59.9939, -36.8234, -95.3586, 0.44 ) }
    dend_50 { pt3dadd( -60.3997, -37.9576, -96.1212, 0.29 ) }
    dend_50 { pt3dadd( -60.5906, -38.4804, -96.5149, 0.66 ) }
    dend_50 { pt3dadd( -60.7946, -38.9967, -96.9669, 0.66 ) }
    dend_50 { pt3dadd( -61.1668, -39.8558, -97.8768, 0.29 ) }
    dend_50 { pt3dadd( -61.368, -40.2734, -98.3607, 0.59 ) }
    dend_50 { pt3dadd( -61.6775, -40.9328, -99.2254, 0.37 ) }
    dend_50 { pt3dadd( -62.0279, -41.6522, -100.287, 1.18 ) }
    dend_50 { pt3dadd( -62.3054, -42.2863, -101.316, 1.62 ) }
    dend_50 { pt3dadd( -62.4951, -42.9611, -102.621, 1.62 ) }
    dend_50 { pt3dadd( -62.55, -43.8863, -104.826, 0.29 ) }
    dend_50 { pt3dadd( -62.4905, -44.2576, -105.862, 0.29 ) }
    dend_50 { pt3dadd( -62.4048, -44.4892, -106.57, 0.66 ) }
    dend_50 { pt3dadd( -62.1846, -44.9691, -107.985, 0.52 ) }
    dend_50 { pt3dadd( -61.7288, -45.9688, -110.627, 1.18 ) }
    dend_50 { pt3dadd( -61.3981, -46.717, -112.375, 1.77 ) }
    dend_50 { pt3dadd( -61.2095, -47.179, -113.387, 1.77 ) }
    dend_50 { pt3dadd( -60.9291, -48.4538, -116.022, 0.29 ) }
    dend_50 { pt3dadd( -60.8882, -49.0191, -117.036, 0.29 ) }
    dend_50 { pt3dadd( -60.8881, -49.6426, -118.028, 0.29 ) }
    dend_50 { pt3dadd( -60.8789, -50.6155, -119.471, 1.62 ) }
    dend_50 { pt3dadd( -60.8197, -51.239, -120.418, 1.69 ) }
    dend_50 { pt3dadd( -60.2572, -53.6624, -124.341, 0.29 ) }
    dend_50 { pt3dadd( -59.9761, -54.3645, -125.56, 0.29 ) }
    dend_50 { pt3dadd( -59.6589, -54.9019, -126.569, 0.29 ) }
    dend_50 { pt3dadd( -58.752, -56.0328, -128.786, 1.25 ) }
    dend_50 { pt3dadd( -57.841, -56.8535, -130.493, 0.66 ) }
    dend_50 { pt3dadd( -56.9113, -57.4619, -131.781, 0.29 ) }
    dend_50 { pt3dadd( -56.1336, -57.8321, -132.556, 1.03 ) }
    dend_50 { pt3dadd( -55.4637, -58.0925, -133.173, 1.03 ) }
    dend_50 { pt3dadd( -54.6393, -58.4053, -133.868, 0.44 ) }
    dend_50 { pt3dadd( -53.501, -58.8235, -134.693, 0.29 ) }
    dend_50 { pt3dadd( -52.8001, -59.0813, -135.177, 0.88 ) }
    dend_50 { pt3dadd( -52.3623, -59.2545, -135.482, 1.33 ) }
    dend_50 { pt3dadd( -50.0447, -60.3483, -137.351, 0.29 ) }
    dend_50 { pt3dadd( -49.3441, -60.778, -138.004, 0.96 ) }
    dend_50 { pt3dadd( -48.9775, -61.0708, -138.402, 0.81 ) }
    dend_50 { pt3dadd( -48.397, -61.6693, -139.17, 0.37 ) }
    dend_50 { pt3dadd( -47.7298, -62.4691, -140.19, 0.66 ) }
    dend_50 { pt3dadd( -46.9366, -63.5048, -141.501, 0.52 ) }
    dend_50 { pt3dadd( -46.4642, -64.1569, -142.33, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -46.105, -64.622, -143.014, 0.88 ) }
    dend_50 { pt3dadd( -44.9502, -65.8647, -145.455, 0.44 ) }
    dend_50 { pt3dadd( -44.5624, -66.2377, -146.407, 0.37 ) }
    dend_50 { pt3dadd( -44.0225, -66.6867, -147.839, 0.29 ) }
    dend_50 { pt3dadd( -43.5891, -66.971, -148.942, 0.96 ) }
    dend_50 { pt3dadd( -42.895, -67.3533, -150.714, 1.03 ) }
    dend_50 { pt3dadd( -41.5162, -68.0681, -154.204, 0.74 ) }
    dend_50 { pt3dadd( -40.7151, -68.5039, -156.186, 1.33 ) }
    dend_50 { pt3dadd( -40.0638, -68.9166, -157.743, 1.11 ) }
    dend_50 { pt3dadd( -39.4712, -69.3749, -159.108, 0.44 ) }
    dend_50 { pt3dadd( -39.0613, -69.7714, -159.976, 0.81 ) }
    dend_50 { pt3dadd( -38.5424, -70.3495, -160.9, 0.88 ) }
    dend_50 { pt3dadd( -37.6276, -71.4462, -162.273, 0.22 ) }
    dend_50 { pt3dadd( -37.0153, -72.1112, -163.127, 0.22 ) }
    dend_50 { pt3dadd( -36.7006, -72.447, -163.606, 0.59 ) }
    dend_50 { pt3dadd( -36.3038, -72.8801, -164.281, 0.59 ) }
    dend_50 { pt3dadd( -35.2306, -74.0063, -166.212, 0.37 ) }
    dend_50 { pt3dadd( -34.6236, -74.5751, -167.388, 0.59 ) }
    dend_50 { pt3dadd( -33.784, -75.3109, -169.095, 0.44 ) }
    dend_50 { pt3dadd( -33.3574, -75.6472, -170.061, 0.74 ) }
    dend_50 { pt3dadd( -33.0746, -75.8726, -170.768, 0.74 ) }
    dend_50 { pt3dadd( -32.6269, -76.2796, -172.046, 0.37 ) }
    dend_50 { pt3dadd( -31.9519, -76.9133, -174.442, 0.96 ) }
    dend_50 { pt3dadd( -31.6864, -77.1397, -175.563, 0.88 ) }
    dend_50 { pt3dadd( -31.0342, -77.74, -179.073, 0.66 ) }
    dend_50 { pt3dadd( -30.8266, -77.9304, -180.378, 0.96 ) }
    dend_50 { pt3dadd( -30.6564, -78.0993, -181.632, 0.96 ) }
    dend_50 { pt3dadd( -30.107, -78.745, -186.384, 0.66 ) }
    dend_50 { pt3dadd( -29.7292, -79.3097, -189.796, 0.66 ) }
    dend_50 { pt3dadd( -29.2751, -80.082, -193.747, 0.44 ) }
    dend_50 { pt3dadd( -28.9874, -80.6712, -195.995, 0.74 ) }
    dend_50 { pt3dadd( -28.8234, -81.0397, -197.09, 0.37 ) }
    dend_50 { pt3dadd( -28.6185, -81.5622, -198.227, 0.81 ) }
    dend_50 { pt3dadd( -28.2545, -82.7852, -199.889, 0.22 ) }
    dend_50 { pt3dadd( -28.0672, -83.442, -200.556, 0.81 ) }
    dend_50 { pt3dadd( -27.6336, -84.8145, -201.599, 0.22 ) }
    dend_50 { pt3dadd( -27.0746, -86.5791, -202.737, 0.22 ) }
    dend_50 { pt3dadd( -26.8131, -87.3704, -203.236, 0.88 ) }
    dend_50 { pt3dadd( -26.6231, -87.9657, -203.621, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -68.367, -49.9098, -56.5777, 0.96 ) }
    dend_46 { pt3dadd( -69.5759, -50.762, -58.0922, 0.96 ) }
    dend_46 { pt3dadd( -70.4494, -51.2836, -58.9356, 0.22 ) }
    dend_46 { pt3dadd( -70.8968, -51.5508, -59.3677, 0.52 ) }
    dend_46 { pt3dadd( -71.2489, -51.761, -59.7076, 0.66 ) }
    dend_46 { pt3dadd( -71.7749, -52.075, -60.2155, 0.44 ) }
    dend_46 { pt3dadd( -72.3708, -52.4308, -60.7908, 1.33 ) }
    dend_46 { pt3dadd( -73.3028, -52.7357, -61.3659, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -68.367, -49.9098, -56.5777, 0.37 ) }
    dend_39 { pt3dadd( -70.2008, -48.4, -56.3212, 0.37 ) }
    dend_39 { pt3dadd( -70.8437, -47.9119, -56.2218, 0.37 ) }
    dend_39 { pt3dadd( -71.9223, -47.0932, -56.0551, 0.22 ) }
    dend_39 { pt3dadd( -72.5049, -46.6509, -55.965, 1.03 ) }
    dend_39 { pt3dadd( -73.1032, -46.1967, -55.8725, 1.77 ) }
    dend_39 { pt3dadd( -73.8164, -45.6553, -55.7623, 2.14 ) }
    dend_39 { pt3dadd( -74.277, -45.3455, -55.7589, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 31.0559, -71.955, -63.2747, 0.44 ) }
    dend_36 { pt3dadd( 32.1024, -71.6131, -63.4744, 0.44 ) }
    dend_36 { pt3dadd( 32.7489, -71.3251, -63.5946, 0.22 ) }
    dend_36 { pt3dadd( 33.3334, -70.9263, -63.7497, 0.22 ) }
    dend_36 { pt3dadd( 33.9827, -70.3965, -64.0078, 0.44 ) }
    dend_36 { pt3dadd( 34.1694, -70.2124, -64.1201, 0.81 ) }
    dend_36 { pt3dadd( 34.4623, -69.8966, -64.3241, 0.81 ) }
    dend_36 { pt3dadd( 34.6909, -69.5778, -64.5962, 0.37 ) }
    dend_36 { pt3dadd( 35.0573, -68.8641, -65.2968, 0.44 ) }
    dend_36 { pt3dadd( 35.1494, -68.472, -65.832, 0.59 ) }
    dend_36 { pt3dadd( 35.1908, -67.8822, -66.7707, 0.15 ) }
    dend_36 { pt3dadd( 35.1872, -67.499, -67.4617, 0.29 ) }
    dend_36 { pt3dadd( 35.1557, -66.8203, -68.8086, 1.18 ) }
    dend_36 { pt3dadd( 35.1308, -66.4603, -69.587, 1.18 ) }
    dend_36 { pt3dadd( 35.068, -65.0805, -72.702, 0.74 ) }
    dend_36 { pt3dadd( 35.0663, -64.8247, -73.2587, 0.74 ) }
    dend_36 { pt3dadd( 35.0835, -64.488, -73.9703, 0.96 ) }
    dend_36 { pt3dadd( 35.1192, -64.1892, -74.5566, 0.96 ) }
    dend_36 { pt3dadd( 35.2423, -63.6632, -75.4192, 0.52 ) }
    dend_36 { pt3dadd( 35.4622, -62.969, -76.3146, 0.29 ) }
    dend_36 { pt3dadd( 35.7338, -62.3246, -76.9513, 0.29 ) }
    dend_36 { pt3dadd( 36.105, -61.4727, -77.7224, 1.33 ) }
    dend_36 { pt3dadd( 36.3001, -61.0469, -78.0736, 1.33 ) }
    dend_36 { pt3dadd( 36.7184, -60.1735, -78.7101, 0.44 ) }
    dend_36 { pt3dadd( 37.1798, -59.2657, -79.2783, 0.37 ) }
    dend_36 { pt3dadd( 37.5805, -58.5205, -79.665, 0.37 ) }
    dend_36 { pt3dadd( 37.7796, -58.1894, -79.8051, 0.37 ) }
    dend_36 { pt3dadd( 38.1677, -57.5992, -80.0067, 0.22 ) }
    dend_36 { pt3dadd( 39.0157, -56.3962, -80.3782, 1.55 ) }
    dend_36 { pt3dadd( 39.3903, -55.9134, -80.5123, 1.77 ) }
    dend_36 { pt3dadd( 40.2696, -54.7881, -80.827, 0.37 ) }
    dend_36 { pt3dadd( 40.5622, -54.3597, -80.9334, 0.44 ) }
    dend_36 { pt3dadd( 40.7653, -54.0049, -81.0142, 0.44 ) }
    dend_36 { pt3dadd( 40.9593, -53.6108, -81.1049, 0.44 ) }
    dend_36 { pt3dadd( 41.3863, -52.679, -81.343, 0.29 ) }
    dend_36 { pt3dadd( 41.6561, -52.048, -81.5242, 0.22 ) }
    dend_36 { pt3dadd( 41.9592, -51.3209, -81.7498, 0.22 ) }
    dend_36 { pt3dadd( 42.4911, -50.0542, -82.1351, 1.18 ) }
    dend_36 { pt3dadd( 42.8306, -49.2524, -82.3583, 1.4 ) }
    dend_36 { pt3dadd( 42.9553, -48.9694, -82.4301, 1.62 ) }
    dend_36 { pt3dadd( 43.1139, -48.6281, -82.5189, 1.62 ) }
    dend_36 { pt3dadd( 43.5356, -47.8643, -82.7771, 0.96 ) }
    dend_36 { pt3dadd( 43.8765, -47.3247, -82.9926, 0.59 ) }
    dend_36 { pt3dadd( 44.389, -46.5597, -83.3318, 0.52 ) }
    dend_36 { pt3dadd( 44.9318, -45.7656, -83.6902, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 45.3615, -45.1606, -83.9775, 1.03 ) }
    dend_36 { pt3dadd( 46.3422, -43.9226, -84.6312, 0.22 ) }
    dend_36 { pt3dadd( 46.6992, -43.5463, -84.8576, 0.66 ) }
    dend_36 { pt3dadd( 46.9783, -43.3148, -85.0188, 0.66 ) }
    dend_36 { pt3dadd( 47.6756, -42.9488, -85.3647, 0.29 ) }
    dend_36 { pt3dadd( 48.2415, -42.8794, -85.5633, 0.29 ) }
    dend_36 { pt3dadd( 49.0074, -43.0875, -85.8549, 0.29 ) }
    dend_36 { pt3dadd( 49.8317, -43.6236, -86.2367, 1.33 ) }
    dend_36 { pt3dadd( 50.1827, -43.9833, -86.5006, 1.47 ) }
    dend_36 { pt3dadd( 50.6941, -44.652, -87.0466, 0.74 ) }
    dend_36 { pt3dadd( 51.0733, -45.2135, -87.5682, 0.44 ) }
    dend_36 { pt3dadd( 51.9781, -46.5341, -89.0438, 0.96 ) }
    dend_36 { pt3dadd( 52.2381, -46.8776, -89.5165, 0.74 ) }
    dend_36 { pt3dadd( 52.8929, -47.6453, -90.7577, 0.29 ) }
    dend_36 { pt3dadd( 53.2699, -47.99, -91.4014, 0.52 ) }
    dend_36 { pt3dadd( 53.776, -48.3386, -92.1318, 0.29 ) }
    dend_36 { pt3dadd( 54.3427, -48.6324, -92.7863, 0.66 ) }
    dend_36 { pt3dadd( 54.7383, -48.7791, -93.1307, 0.66 ) }
    dend_36 { pt3dadd( 55.2936, -48.9134, -93.6026, 0.29 ) }
    dend_36 { pt3dadd( 56.2526, -49.0698, -94.3883, 0.96 ) }
    dend_36 { pt3dadd( 56.8612, -49.1789, -94.9029, 0.29 ) }
    dend_36 { pt3dadd( 57.4936, -49.2925, -95.4665, 1.11 ) }
    dend_36 { pt3dadd( 58.4838, -49.4522, -96.3736, 0.37 ) }
    dend_36 { pt3dadd( 59.486, -49.5735, -97.3023, 0.96 ) }
    dend_36 { pt3dadd( 60.1682, -49.6159, -97.9396, 0.52 ) }
    dend_36 { pt3dadd( 60.7889, -49.6332, -98.523, 0.96 ) }
    dend_36 { pt3dadd( 61.0246, -49.6328, -98.7358, 0.96 ) }
    dend_36 { pt3dadd( 61.9364, -49.6391, -99.5252, 0.29 ) }
    dend_36 { pt3dadd( 62.3737, -49.6498, -99.8624, 0.81 ) }
    dend_36 { pt3dadd( 62.7154, -49.6556, -100.082, 0.81 ) }
    dend_36 { pt3dadd( 63.4924, -49.6265, -100.545, 0.29 ) }
    dend_36 { pt3dadd( 64.1155, -49.565, -100.89, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 31.0559, -71.955, -63.2747, 0.74 ) }
    dend_33 { pt3dadd( 31.6808, -73.1342, -63.2334, 0.74 ) }
    dend_33 { pt3dadd( 32.2563, -73.9871, -63.1627, 0.81 ) }
    dend_33 { pt3dadd( 32.9352, -74.8337, -63.071, 0.81 ) }
    dend_33 { pt3dadd( 33.7463, -75.7093, -62.9727, 0.59 ) }
    dend_33 { pt3dadd( 34.4501, -76.3623, -62.9081, 0.37 ) }
    dend_33 { pt3dadd( 34.8851, -76.7044, -62.8705, 0.37 ) }
    dend_33 { pt3dadd( 35.8298, -77.3074, -62.7564, 0.88 ) }
    dend_33 { pt3dadd( 36.2183, -77.5045, -62.7222, 0.88 ) }
    dend_33 { pt3dadd( 36.6749, -77.7196, -62.6875, 0.88 ) }
    dend_33 { pt3dadd( 37.2776, -78.0417, -62.6716, 0.29 ) }
    dend_33 { pt3dadd( 38.2875, -78.7517, -62.6842, 0.29 ) }
    dend_33 { pt3dadd( 38.8043, -79.2604, -62.7143, 1.03 ) }
    dend_33 { pt3dadd( 39.1415, -79.6498, -62.7402, 1.33 ) }
    dend_33 { pt3dadd( 39.7162, -80.3246, -62.7716, 1.18 ) }
    dend_33 { pt3dadd( 40.4158, -81.1083, -62.802, 1.03 ) }
    dend_33 { pt3dadd( 40.9821, -81.6773, -62.8278, 0.81 ) }
    dend_33 { pt3dadd( 41.9243, -82.4075, -62.8729, 0.37 ) }
    dend_33 { pt3dadd( 42.9534, -82.9682, -62.9088, 0.96 ) }
    dend_33 { pt3dadd( 43.6062, -83.2233, -62.9357, 1.18 ) }
    dend_33 { pt3dadd( 44.3176, -83.4074, -62.9537, 1.18 ) }
    dend_33 { pt3dadd( 44.9962, -83.5062, -62.9776, 0.88 ) }
    dend_33 { pt3dadd( 46.0284, -83.5568, -63.0813, 0.44 ) }
    dend_33 { pt3dadd( 46.5005, -83.5391, -63.1985, 0.44 ) }
    dend_33 { pt3dadd( 47.3238, -83.4685, -63.5579, 0.37 ) }
    dend_33 { pt3dadd( 47.9439, -83.3992, -63.966, 0.37 ) }
    dend_33 { pt3dadd( 48.7675, -83.3144, -64.6956, 0.66 ) }
    dend_33 { pt3dadd( 49.3453, -83.2857, -65.3066, 1.03 ) }
    dend_33 { pt3dadd( 50.0456, -83.2442, -66.1692, 0.74 ) }
    dend_33 { pt3dadd( 50.5065, -83.2138, -66.7979, 0.52 ) }
    dend_33 { pt3dadd( 51.0623, -83.1655, -67.6569, 0.44 ) }
    dend_33 { pt3dadd( 51.4939, -83.1558, -68.3931, 0.44 ) }
    dend_33 { pt3dadd( 51.9437, -83.21, -69.122, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.83666, 252.581, -37.6277, 0.29 ) }
    dend_26 { pt3dadd( -3.02746, 254.647, -38.1069, 0.29 ) }
    dend_26 { pt3dadd( -2.99909, 255.109, -38.1779, 0.29 ) }
    dend_26 { pt3dadd( -2.94967, 255.601, -38.214, 0.66 ) }
    dend_26 { pt3dadd( -2.91534, 256.124, -38.1899, 0.88 ) }
    dend_26 { pt3dadd( -2.90482, 256.751, -38.1095, 0.88 ) }
    dend_26 { pt3dadd( -2.89866, 257.84, -37.7889, 0.52 ) }
    dend_26 { pt3dadd( -2.86321, 258.687, -37.315, 0.66 ) }
    dend_26 { pt3dadd( -2.83864, 259.2, -36.8949, 0.81 ) }
    dend_26 { pt3dadd( -2.82016, 259.945, -36.1582, 0.37 ) }
    dend_26 { pt3dadd( -2.832, 260.472, -35.584, 0.52 ) }
    dend_26 { pt3dadd( -2.9141, 261.545, -34.3334, 0.74 ) }
    dend_26 { pt3dadd( -3.02907, 262.294, -33.4383, 1.03 ) }
    dend_26 { pt3dadd( -3.30478, 263.578, -31.8474, 1.03 ) }
    dend_26 { pt3dadd( -3.45055, 264.179, -31.1058, 0.74 ) }
    dend_26 { pt3dadd( -3.56632, 264.678, -30.5215, 0.44 ) }
    dend_26 { pt3dadd( -3.67674, 265.174, -29.9671, 0.44 ) }
    dend_26 { pt3dadd( -3.87002, 265.994, -29.1298, 0.44 ) }
    dend_26 { pt3dadd( -4.17523, 267.259, -27.9277, 0.88 ) }
    dend_26 { pt3dadd( -4.34047, 267.971, -27.3117, 1.18 ) }
    dend_26 { pt3dadd( -4.43537, 268.477, -26.8701, 0.52 ) }
    dend_26 { pt3dadd( -4.5086, 269.039, -26.3864, 0.52 ) }
    dend_26 { pt3dadd( -4.56522, 269.84, -25.755, 0.59 ) }
    dend_26 { pt3dadd( -4.58251, 270.412, -25.3794, 0.81 ) }
    dend_26 { pt3dadd( -4.61942, 271.136, -25.0375, 0.29 ) }
    dend_26 { pt3dadd( -4.68018, 271.571, -24.8498, 0.29 ) }
    dend_26 { pt3dadd( -4.82183, 272.073, -24.6117, 0.66 ) }
    dend_26 { pt3dadd( -5.00472, 272.507, -24.3172, 0.66 ) }
    dend_26 { pt3dadd( -5.16071, 272.86, -24.0075, 0.37 ) }
    dend_26 { pt3dadd( -5.29076, 273.202, -23.6534, 0.66 ) }
    dend_26 { pt3dadd( -5.43309, 273.679, -23.1587, 0.81 ) }
    dend_26 { pt3dadd( -5.5318, 274.135, -22.7224, 0.74 ) }
    dend_26 { pt3dadd( -5.71118, 275.569, -21.4712, 0.44 ) }
    dend_26 { pt3dadd( -5.72367, 276.198, -20.9892, 0.37 ) }
    dend_26 { pt3dadd( -5.67069, 276.771, -20.639, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -5.52362, 277.555, -20.2898, 0.29 ) }
    dend_26 { pt3dadd( -5.36673, 278.154, -20.0872, 0.15 ) }
    dend_26 { pt3dadd( -5.21905, 278.619, -19.9892, 0.44 ) }
    dend_26 { pt3dadd( -5.1322, 278.866, -19.9876, 0.44 ) }
    dend_26 { pt3dadd( -5.05688, 279.092, -19.9882, 0.44 ) }
    dend_26 { pt3dadd( -4.66056, 280.594, -19.8403, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.83666, 252.581, -37.6277, 0.74 ) }
    dend_17 { pt3dadd( -2.97418, 253.586, -38.1091, 0.74 ) }
    dend_17 { pt3dadd( -3.12263, 254.474, -38.4857, 0.74 ) }
    dend_17 { pt3dadd( -3.40137, 255.912, -39.0385, 0.96 ) }
    dend_17 { pt3dadd( -3.62419, 256.967, -39.3645, 0.96 ) }
    dend_17 { pt3dadd( -3.91183, 258.224, -39.6503, 0.74 ) }
    dend_17 { pt3dadd( -4.33545, 259.973, -39.9466, 0.59 ) }
    dend_17 { pt3dadd( -4.5497, 260.83, -40.0135, 0.81 ) }
    dend_17 { pt3dadd( -4.80845, 261.97, -40.0279, 0.81 ) }
    dend_17 { pt3dadd( -5.08563, 263.419, -39.9643, 0.81 ) }
    dend_17 { pt3dadd( -5.29303, 265.012, -39.8479, 0.96 ) }
    dend_17 { pt3dadd( -5.36491, 266.088, -39.7595, 0.96 ) }
    dend_17 { pt3dadd( -5.35865, 267.892, -39.6529, 0.74 ) }
    dend_17 { pt3dadd( -5.28082, 268.878, -39.6267, 1.03 ) }
    dend_17 { pt3dadd( -5.17008, 269.585, -39.6409, 1.03 ) }
    dend_17 { pt3dadd( -4.92235, 270.777, -39.7515, 1.03 ) }
    dend_17 { pt3dadd( -4.78211, 271.4, -39.8379, 1.03 ) }
    dend_17 { pt3dadd( -4.61253, 272.346, -39.9919, 1.03 ) }
    dend_17 { pt3dadd( -4.53657, 273.162, -40.1051, 1.03 ) }
    dend_17 { pt3dadd( -4.52975, 274.113, -40.2233, 0.96 ) }
    dend_17 { pt3dadd( -4.62411, 275.169, -40.3258, 0.74 ) }
    dend_17 { pt3dadd( -4.76947, 276.034, -40.4001, 0.74 ) }
    dend_17 { pt3dadd( -4.99446, 277.056, -40.4635, 0.88 ) }
    dend_17 { pt3dadd( -5.3429, 278.37, -40.5087, 1.11 ) }
    dend_17 { pt3dadd( -5.64202, 279.361, -40.5306, 1.11 ) }
    dend_17 { pt3dadd( -6.15087, 280.972, -40.5484, 0.96 ) }
    dend_17 { pt3dadd( -6.41519, 281.854, -40.5502, 0.96 ) }
    dend_17 { pt3dadd( -6.65168, 282.715, -40.5381, 0.96 ) }
    dend_17 { pt3dadd( -6.84655, 283.452, -40.5111, 0.96 ) }
    dend_17 { pt3dadd( -7.09419, 284.389, -40.4521, 0.81 ) }
    dend_17 { pt3dadd( -7.37424, 285.525, -40.3612, 0.96 ) }
    dend_17 { pt3dadd( -7.55394, 286.374, -40.2723, 0.96 ) }
    dend_17 { pt3dadd( -7.72777, 287.373, -40.1234, 0.96 ) }
    dend_17 { pt3dadd( -7.81741, 288.124, -39.9951, 1.25 ) }
    dend_17 { pt3dadd( -7.87051, 289.017, -39.8018, 1.25 ) }
    dend_17 { pt3dadd( -7.86208, 290.321, -39.4635, 1.11 ) }
    dend_17 { pt3dadd( -7.78669, 291.424, -39.1891, 0.88 ) }
    dend_17 { pt3dadd( -7.62131, 292.564, -38.9426, 0.74 ) }
    dend_17 { pt3dadd( -7.45183, 293.334, -38.827, 1.18 ) }
    dend_17 { pt3dadd( -7.18749, 294.244, -38.7373, 1.18 ) }
    dend_17 { pt3dadd( -7.00447, 294.813, -38.6867, 1.18 ) }
    dend_17 { pt3dadd( -6.68123, 295.847, -38.5849, 0.96 ) }
    dend_17 { pt3dadd( -6.48181, 296.612, -38.5329, 0.81 ) }
    dend_17 { pt3dadd( -6.3196, 297.457, -38.4955, 0.81 ) }
    dend_17 { pt3dadd( -6.18651, 298.432, -38.4495, 0.81 ) }
    dend_17 { pt3dadd( -6.06433, 299.662, -38.3994, 0.81 ) }
    dend_17 { pt3dadd( -6.00192, 300.645, -38.3462, 1.11 ) }
    dend_17 { pt3dadd( -5.96798, 301.693, -38.292, 1.11 ) }
    dend_17 { pt3dadd( -5.98146, 302.803, -38.3088, 0.96 ) }
    dend_17 { pt3dadd( -6.04252, 303.954, -38.4041, 0.96 ) }
    dend_17 { pt3dadd( -6.19828, 305.508, -38.6568, 0.88 ) }
    dend_17 { pt3dadd( -6.39832, 306.916, -39.0002, 0.88 ) }
    dend_17 { pt3dadd( -6.60915, 308.099, -39.3658, 0.88 ) }
    dend_17 { pt3dadd( -6.97127, 309.926, -40.0187, 0.88 ) }
    dend_17 { pt3dadd( -7.25469, 311.288, -40.5369, 1.11 ) }
    dend_17 { pt3dadd( -7.49553, 312.412, -40.9862, 1.11 ) }
    dend_17 { pt3dadd( -7.69997, 313.455, -41.3578, 1.11 ) }
    dend_17 { pt3dadd( -7.86219, 314.655, -41.7002, 0.81 ) }
    dend_17 { pt3dadd( -7.9684, 316.531, -42.0924, 1.11 ) }
    dend_17 { pt3dadd( -7.93865, 317.324, -42.1927, 1.11 ) }
    dend_17 { pt3dadd( -7.78744, 318.638, -42.3312, 1.11 ) }
    dend_17 { pt3dadd( -7.46063, 320.612, -42.5086, 0.96 ) }
    dend_17 { pt3dadd( -7.16695, 322.118, -42.6314, 0.96 ) }
    dend_17 { pt3dadd( -6.97205, 323.131, -42.7442, 0.96 ) }
    dend_17 { pt3dadd( -6.82867, 323.987, -42.8889, 0.96 ) }
    dend_17 { pt3dadd( -6.5641, 325.577, -43.2303, 0.81 ) }
    dend_17 { pt3dadd( -6.37735, 326.631, -43.5025, 0.81 ) }
    dend_17 { pt3dadd( -6.16996, 327.855, -43.863, 0.66 ) }
    dend_17 { pt3dadd( -5.86901, 329.739, -44.4465, 0.66 ) }
    dend_17 { pt3dadd( -5.64635, 331.292, -44.9173, 0.66 ) }
    dend_17 { pt3dadd( -5.44585, 333.213, -45.4729, 1.03 ) }
    dend_17 { pt3dadd( -5.3915, 334.104, -45.7007, 1.03 ) }
    dend_17 { pt3dadd( -5.37105, 335.837, -46.1541, 0.81 ) }
    dend_17 { pt3dadd( -5.41266, 336.888, -46.4266, 0.81 ) }
    dend_17 { pt3dadd( -5.50675, 337.983, -46.6978, 0.96 ) }
    dend_17 { pt3dadd( -5.70419, 339.592, -47.1006, 0.66 ) }
    dend_17 { pt3dadd( -5.88082, 340.755, -47.4004, 0.88 ) }
    dend_17 { pt3dadd( -6.06588, 342.099, -47.7346, 0.88 ) }
    dend_17 { pt3dadd( -6.22234, 343.555, -48.0617, 0.88 ) }
    dend_17 { pt3dadd( -6.34012, 345.201, -48.3822, 1.03 ) }
    dend_17 { pt3dadd( -6.36139, 346.105, -48.5664, 1.03 ) }
    dend_17 { pt3dadd( -6.34355, 347.024, -48.7574, 1.03 ) }
    dend_17 { pt3dadd( -6.27266, 348.622, -49.0675, 0.81 ) }
    dend_17 { pt3dadd( -6.19397, 350.144, -49.3108, 0.81 ) }
    dend_17 { pt3dadd( -6.15917, 351.16, -49.4565, 0.81 ) }
    dend_17 { pt3dadd( -6.14019, 353.257, -49.7115, 0.81 ) }
    dend_17 { pt3dadd( -6.20146, 354.813, -49.8702, 1.25 ) }
    dend_17 { pt3dadd( -6.25636, 355.368, -49.923, 1.33 ) }
    dend_17 { pt3dadd( -6.39246, 356.297, -50.02, 1.33 ) }
    dend_17 { pt3dadd( -6.57472, 357.349, -50.1456, 1.18 ) }
    dend_17 { pt3dadd( -6.73938, 358.239, -50.2747, 0.74 ) }
    dend_17 { pt3dadd( -6.99546, 359.527, -50.4674, 0.66 ) }
    dend_17 { pt3dadd( -7.19491, 360.553, -50.6567, 0.96 ) }
    dend_17 { pt3dadd( -7.35376, 361.48, -50.8616, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -7.45211, 362.292, -51.0468, 0.66 ) }
    dend_17 { pt3dadd( -7.51114, 363.38, -51.2585, 0.66 ) }
    dend_17 { pt3dadd( -7.52899, 364.772, -51.4676, 0.66 ) }
    dend_17 { pt3dadd( -7.51651, 365.87, -51.5822, 0.96 ) }
    dend_17 { pt3dadd( -7.52355, 366.736, -51.6538, 0.96 ) }
    dend_17 { pt3dadd( -7.57735, 367.666, -51.7461, 0.74 ) }
    dend_17 { pt3dadd( -7.76153, 369.728, -51.9993, 0.74 ) }
    dend_17 { pt3dadd( -7.83484, 370.398, -52.0897, 0.88 ) }
    dend_17 { pt3dadd( -8.04678, 372.131, -52.3628, 0.96 ) }
    dend_17 { pt3dadd( -8.25492, 373.758, -52.6277, 0.81 ) }
    dend_17 { pt3dadd( -8.47409, 375.428, -52.916, 0.66 ) }
    dend_17 { pt3dadd( -8.64843, 376.887, -53.1937, 0.81 ) }
    dend_17 { pt3dadd( -8.75974, 378.047, -53.4031, 0.96 ) }
    dend_17 { pt3dadd( -8.86486, 379.797, -53.6929, 0.74 ) }
    dend_17 { pt3dadd( -8.89653, 380.672, -53.8103, 1.03 ) }
    dend_17 { pt3dadd( -8.91746, 381.801, -53.8829, 1.03 ) }
    dend_17 { pt3dadd( -8.9522, 383.439, -53.9124, 1.33 ) }
    dend_17 { pt3dadd( -8.99595, 384.487, -53.9166, 1.55 ) }
    dend_17 { pt3dadd( -9.09407, 386.2, -53.914, 0.81 ) }
    dend_17 { pt3dadd( -9.19391, 387.369, -53.9091, 0.66 ) }
    dend_17 { pt3dadd( -9.33105, 388.549, -53.9191, 0.66 ) }
    dend_17 { pt3dadd( -9.45844, 389.403, -53.948, 0.66 ) }
    dend_17 { pt3dadd( -9.67424, 390.7, -54.0394, 0.66 ) }
    dend_17 { pt3dadd( -9.83299, 391.779, -54.1539, 0.66 ) }
    dend_17 { pt3dadd( -9.96378, 392.947, -54.2826, 1.25 ) }
    dend_17 { pt3dadd( -10.0027, 393.47, -54.3506, 1.03 ) }
    dend_17 { pt3dadd( -10.0528, 394.885, -54.5703, 0.81 ) }
    dend_17 { pt3dadd( -10.0546, 396.147, -54.765, 0.81 ) }
    dend_17 { pt3dadd( -10.022, 397.533, -54.9877, 0.66 ) }
    dend_17 { pt3dadd( -9.95518, 398.702, -55.1735, 0.66 ) }
    dend_17 { pt3dadd( -9.85428, 399.859, -55.3506, 0.96 ) }
    dend_17 { pt3dadd( -9.74848, 400.878, -55.4972, 1.4 ) }
    dend_17 { pt3dadd( -9.6547, 401.695, -55.6062, 1.4 ) }
    dend_17 { pt3dadd( -9.59413, 402.299, -55.6828, 1.4 ) }
    dend_17 { pt3dadd( -9.51989, 403.379, -55.8106, 0.88 ) }
    dend_17 { pt3dadd( -9.44151, 404.716, -55.9713, 0.74 ) }
    dend_17 { pt3dadd( -9.38691, 405.591, -56.0851, 0.74 ) }
    dend_17 { pt3dadd( -9.30144, 407.04, -56.2839, 0.74 ) }
    dend_17 { pt3dadd( -9.22087, 408.266, -56.4658, 0.66 ) }
    dend_17 { pt3dadd( -9.11928, 409.642, -56.6895, 0.66 ) }
    dend_17 { pt3dadd( -8.97049, 411.512, -57.0216, 0.66 ) }
    dend_17 { pt3dadd( -8.84147, 412.87, -57.2721, 0.74 ) }
    dend_17 { pt3dadd( -8.74378, 413.709, -57.4347, 0.74 ) }
    dend_17 { pt3dadd( -8.60479, 414.703, -57.6368, 0.96 ) }
    dend_17 { pt3dadd( -8.4658, 415.588, -57.8159, 1.11 ) }
    dend_17 { pt3dadd( -8.36229, 416.253, -57.9516, 1.11 ) }
    dend_17 { pt3dadd( -8.21818, 417.392, -58.1762, 0.74 ) }
    dend_17 { pt3dadd( -8.11352, 418.377, -58.3762, 0.59 ) }
    dend_17 { pt3dadd( -7.98689, 419.492, -58.605, 0.59 ) }
    dend_17 { pt3dadd( -7.85032, 420.55, -58.8395, 0.88 ) }
    dend_17 { pt3dadd( -7.78571, 421.071, -58.9641, 1.25 ) }
    dend_17 { pt3dadd( -7.69979, 421.85, -59.1635, 1.4 ) }
    dend_17 { pt3dadd( -7.65067, 422.397, -59.3114, 1.4 ) }
    dend_17 { pt3dadd( -7.60525, 423.222, -59.5355, 0.88 ) }
    dend_17 { pt3dadd( -7.5837, 424.216, -59.8043, 0.66 ) }
    dend_17 { pt3dadd( -7.60053, 425.519, -60.143, 0.66 ) }
    dend_17 { pt3dadd( -7.62733, 426.493, -60.3702, 0.66 ) }
    dend_17 { pt3dadd( -7.65509, 427.151, -60.5101, 0.52 ) }
    dend_17 { pt3dadd( -7.71875, 428.407, -60.756, 0.81 ) }
    dend_17 { pt3dadd( -7.77831, 429.383, -60.9448, 0.81 ) }
    dend_17 { pt3dadd( -7.82972, 430.341, -61.1214, 0.66 ) }
    dend_17 { pt3dadd( -7.86708, 431.792, -61.3848, 0.59 ) }
    dend_17 { pt3dadd( -7.86744, 432.593, -61.5235, 0.88 ) }
    dend_17 { pt3dadd( -7.84834, 433.544, -61.6893, 1.11 ) }
    dend_17 { pt3dadd( -7.81087, 434.488, -61.8513, 1.11 ) }
    dend_17 { pt3dadd( -7.76906, 435.244, -61.9797, 1.11 ) }
    dend_17 { pt3dadd( -7.71882, 435.935, -62.0974, 0.88 ) }
    dend_17 { pt3dadd( -7.64544, 436.768, -62.2569, 0.52 ) }
    dend_17 { pt3dadd( -7.56063, 437.608, -62.4207, 0.81 ) }
    dend_17 { pt3dadd( -7.46959, 438.461, -62.5725, 0.81 ) }
    dend_17 { pt3dadd( -7.4175, 438.966, -62.6442, 0.81 ) }
    dend_17 { pt3dadd( -7.33194, 439.872, -62.7608, 0.96 ) }
    dend_17 { pt3dadd( -7.24248, 441.0, -62.8914, 0.59 ) }
    dend_17 { pt3dadd( -7.18185, 441.808, -62.9802, 0.44 ) }
    dend_17 { pt3dadd( -7.08729, 442.987, -63.0926, 0.44 ) }
    dend_17 { pt3dadd( -7.00927, 443.886, -63.1703, 1.11 ) }
    dend_17 { pt3dadd( -6.97591, 444.293, -63.2012, 1.4 ) }
    dend_17 { pt3dadd( -6.92783, 445.175, -63.24, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.5236, 195.661, -28.6919, 0.29 ) }
    dend_15 { pt3dadd( -16.3772, 197.059, -28.8812, 0.29 ) }
    dend_15 { pt3dadd( -17.0895, 198.243, -29.1542, 0.52 ) }
    dend_15 { pt3dadd( -17.5989, 199.077, -29.3913, 0.52 ) }
    dend_15 { pt3dadd( -18.5295, 200.642, -29.8712, 0.66 ) }
    dend_15 { pt3dadd( -18.8917, 201.272, -30.0737, 0.66 ) }
    dend_15 { pt3dadd( -19.2353, 201.923, -30.2347, 0.37 ) }
    dend_15 { pt3dadd( -20.0248, 203.777, -30.4764, 0.29 ) }
    dend_15 { pt3dadd( -20.2305, 204.466, -30.4953, 0.59 ) }
    dend_15 { pt3dadd( -20.4034, 205.316, -30.4652, 0.81 ) }
    dend_15 { pt3dadd( -20.4738, 205.842, -30.4066, 0.81 ) }
    dend_15 { pt3dadd( -20.7044, 208.077, -30.034, 0.74 ) }
    dend_15 { pt3dadd( -20.8122, 209.278, -29.7708, 0.74 ) }
    dend_15 { pt3dadd( -20.9596, 210.764, -29.3646, 0.44 ) }
    dend_15 { pt3dadd( -21.0875, 211.753, -29.1163, 0.29 ) }
    dend_15 { pt3dadd( -21.2497, 212.741, -28.9097, 0.29 ) }
    dend_15 { pt3dadd( -21.3821, 213.402, -28.8123, 0.52 ) }
    dend_15 { pt3dadd( -21.5583, 214.168, -28.7845, 0.52 ) }
    dend_15 { pt3dadd( -21.7805, 215.096, -28.8104, 0.52 ) }
    dend_15 { pt3dadd( -22.1588, 216.57, -28.9204, 0.74 ) }
    dend_15 { pt3dadd( -22.4002, 217.467, -29.0263, 0.96 ) }
    dend_15 { pt3dadd( -22.571, 218.12, -29.1251, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -22.7955, 219.051, -29.2846, 0.59 ) }
    dend_15 { pt3dadd( -23.0376, 220.181, -29.5011, 0.37 ) }
    dend_15 { pt3dadd( -23.2322, 221.225, -29.794, 0.22 ) }
    dend_15 { pt3dadd( -23.331, 221.917, -30.0322, 0.22 ) }
    dend_15 { pt3dadd( -23.3955, 222.568, -30.263, 0.74 ) }
    dend_15 { pt3dadd( -23.47, 223.517, -30.6116, 1.03 ) }
    dend_15 { pt3dadd( -23.5113, 224.023, -30.7928, 1.03 ) }
    dend_15 { pt3dadd( -23.671, 225.934, -31.4511, 0.44 ) }
    dend_15 { pt3dadd( -23.767, 227.255, -31.9115, 0.44 ) }
    dend_15 { pt3dadd( -23.846, 228.454, -32.2847, 0.37 ) }
    dend_15 { pt3dadd( -23.918, 229.545, -32.5939, 0.37 ) }
    dend_15 { pt3dadd( -23.9805, 230.586, -32.8541, 0.37 ) }
    dend_15 { pt3dadd( -24.0214, 231.694, -33.0742, 0.37 ) }
    dend_15 { pt3dadd( -24.0135, 232.77, -33.243, 0.37 ) }
    dend_15 { pt3dadd( -23.9023, 234.471, -33.5505, 0.88 ) }
    dend_15 { pt3dadd( -23.7897, 235.33, -33.7127, 1.18 ) }
    dend_15 { pt3dadd( -23.674, 235.968, -33.8357, 1.18 ) }
    dend_15 { pt3dadd( -23.4417, 236.993, -34.0373, 0.74 ) }
    dend_15 { pt3dadd( -23.1103, 238.317, -34.285, 0.52 ) }
    dend_15 { pt3dadd( -22.8037, 239.555, -34.5021, 0.44 ) }
    dend_15 { pt3dadd( -22.4494, 240.93, -34.7391, 0.37 ) }
    dend_15 { pt3dadd( -22.2545, 241.66, -34.8512, 0.37 ) }
    dend_15 { pt3dadd( -21.9354, 242.796, -34.9926, 0.37 ) }
    dend_15 { pt3dadd( -21.5265, 244.169, -35.1103, 0.59 ) }
    dend_15 { pt3dadd( -21.2555, 245.029, -35.1418, 1.03 ) }
    dend_15 { pt3dadd( -20.9891, 245.833, -35.1507, 1.03 ) }
    dend_15 { pt3dadd( -20.7071, 246.701, -35.147, 0.96 ) }
    dend_15 { pt3dadd( -20.3697, 247.907, -35.1172, 0.29 ) }
    dend_15 { pt3dadd( -20.1295, 249.023, -35.1113, 0.29 ) }
    dend_15 { pt3dadd( -20.0397, 249.657, -35.1275, 0.52 ) }
    dend_15 { pt3dadd( -19.9988, 250.262, -35.1475, 0.52 ) }
    dend_15 { pt3dadd( -19.9994, 250.988, -35.1771, 0.29 ) }
    dend_15 { pt3dadd( -20.0594, 251.99, -35.2343, 0.52 ) }
    dend_15 { pt3dadd( -20.1585, 253.203, -35.2928, 0.66 ) }
    dend_15 { pt3dadd( -20.1879, 254.249, -35.3156, 0.66 ) }
    dend_15 { pt3dadd( -20.1426, 255.231, -35.3311, 0.52 ) }
    dend_15 { pt3dadd( -20.0737, 255.903, -35.3522, 0.81 ) }
    dend_15 { pt3dadd( -19.9736, 256.654, -35.4192, 1.11 ) }
    dend_15 { pt3dadd( -19.8174, 257.834, -35.5853, 0.15 ) }
    dend_15 { pt3dadd( -19.6688, 258.967, -35.7731, 0.15 ) }
    dend_15 { pt3dadd( -19.5583, 259.75, -35.9307, 0.52 ) }
    dend_15 { pt3dadd( -19.3587, 261.074, -36.2463, 0.59 ) }
    dend_15 { pt3dadd( -19.1292, 262.548, -36.6292, 0.29 ) }
    dend_15 { pt3dadd( -18.9647, 263.717, -36.9434, 0.29 ) }
    dend_15 { pt3dadd( -18.856, 264.686, -37.2286, 0.96 ) }
    dend_15 { pt3dadd( -18.8096, 265.221, -37.3813, 0.96 ) }
    dend_15 { pt3dadd( -18.7208, 266.099, -37.5931, 0.59 ) }
    dend_15 { pt3dadd( -18.6176, 266.906, -37.7761, 0.22 ) }
    dend_15 { pt3dadd( -18.4708, 268.052, -38.0069, 0.22 ) }
    dend_15 { pt3dadd( -18.3603, 269.026, -38.2123, 0.88 ) }
    dend_15 { pt3dadd( -18.3206, 269.592, -38.3316, 0.88 ) }
    dend_15 { pt3dadd( -18.3041, 270.298, -38.4728, 0.88 ) }
    dend_15 { pt3dadd( -18.3347, 271.489, -38.7077, 0.29 ) }
    dend_15 { pt3dadd( -18.439, 272.671, -38.9288, 0.22 ) }
    dend_15 { pt3dadd( -18.5215, 273.191, -39.003, 0.22 ) }
    dend_15 { pt3dadd( -18.7719, 274.308, -39.0856, 0.81 ) }
    dend_15 { pt3dadd( -18.902, 274.883, -39.0884, 1.11 ) }
    dend_15 { pt3dadd( -18.9678, 275.22, -39.0727, 1.11 ) }
    dend_15 { pt3dadd( -19.0604, 276.193, -39.0393, 0.88 ) }
    dend_15 { pt3dadd( -19.0598, 277.144, -39.058, 0.59 ) }
    dend_15 { pt3dadd( -18.9845, 278.239, -39.123, 0.29 ) }
    dend_15 { pt3dadd( -18.81, 279.783, -39.2579, 0.29 ) }
    dend_15 { pt3dadd( -18.6688, 281.021, -39.3856, 0.74 ) }
    dend_15 { pt3dadd( -18.4832, 282.941, -39.6577, 0.52 ) }
    dend_15 { pt3dadd( -18.3926, 284.129, -39.8963, 1.03 ) }
    dend_15 { pt3dadd( -18.3581, 285.06, -40.1415, 1.03 ) }
    dend_15 { pt3dadd( -18.3843, 285.64, -40.3159, 0.74 ) }
    dend_15 { pt3dadd( -18.608, 286.874, -40.7335, 0.44 ) }
    dend_15 { pt3dadd( -18.9909, 288.149, -41.1326, 0.88 ) }
    dend_15 { pt3dadd( -19.2824, 288.968, -41.3457, 1.18 ) }
    dend_15 { pt3dadd( -19.4262, 289.374, -41.4587, 1.18 ) }
    dend_15 { pt3dadd( -19.7249, 290.3, -41.7187, 0.59 ) }
    dend_15 { pt3dadd( -20.0935, 291.68, -42.102, 0.29 ) }
    dend_15 { pt3dadd( -20.3859, 293.116, -42.4759, 0.81 ) }
    dend_15 { pt3dadd( -20.615, 294.502, -42.7875, 0.52 ) }
    dend_15 { pt3dadd( -20.7559, 295.412, -42.9791, 0.52 ) }
    dend_15 { pt3dadd( -20.8925, 296.305, -43.1714, 0.74 ) }
    dend_15 { pt3dadd( -21.0756, 297.422, -43.3986, 0.74 ) }
    dend_15 { pt3dadd( -21.3079, 298.664, -43.604, 0.22 ) }
    dend_15 { pt3dadd( -21.4229, 299.117, -43.6801, 0.22 ) }
    dend_15 { pt3dadd( -21.6394, 299.818, -43.7902, 0.52 ) }
    dend_15 { pt3dadd( -21.7936, 300.317, -43.852, 0.52 ) }
    dend_15 { pt3dadd( -22.074, 301.279, -43.9826, 0.29 ) }
    dend_15 { pt3dadd( -22.2931, 302.098, -44.0999, 0.29 ) }
    dend_15 { pt3dadd( -22.5396, 303.11, -44.2561, 1.03 ) }
    dend_15 { pt3dadd( -22.7158, 303.968, -44.3889, 1.03 ) }
    dend_15 { pt3dadd( -22.8188, 304.565, -44.465, 1.03 ) }
    dend_15 { pt3dadd( -22.9339, 305.445, -44.5438, 0.52 ) }
    dend_15 { pt3dadd( -22.9858, 306.184, -44.5841, 0.29 ) }
    dend_15 { pt3dadd( -23.0173, 306.946, -44.5864, 0.59 ) }
    dend_15 { pt3dadd( -23.0155, 307.463, -44.5526, 0.59 ) }
    dend_15 { pt3dadd( -22.963, 308.542, -44.4533, 0.22 ) }
    dend_15 { pt3dadd( -22.8688, 309.631, -44.3414, 0.81 ) }
    dend_15 { pt3dadd( -22.7755, 310.342, -44.2686, 1.03 ) }
    dend_15 { pt3dadd( -22.7336, 310.592, -44.2472, 1.03 ) }
    dend_15 { pt3dadd( -22.5568, 311.647, -44.1745, 0.59 ) }
    dend_15 { pt3dadd( -22.4129, 312.691, -44.1137, 0.37 ) }
    dend_15 { pt3dadd( -22.3644, 313.28, -44.074, 0.37 ) }
    dend_15 { pt3dadd( -22.3689, 314.074, -44.006, 0.66 ) }
    dend_15 { pt3dadd( -22.4061, 314.58, -43.9526, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -22.6271, 316.008, -43.7948, 0.29 ) }
    dend_15 { pt3dadd( -22.7872, 316.703, -43.7236, 0.29 ) }
    dend_15 { pt3dadd( -23.0842, 317.79, -43.6196, 0.74 ) }
    dend_15 { pt3dadd( -23.3155, 318.617, -43.5417, 0.74 ) }
    dend_15 { pt3dadd( -23.5625, 319.517, -43.4527, 0.74 ) }
    dend_15 { pt3dadd( -23.8644, 320.738, -43.323, 0.29 ) }
    dend_15 { pt3dadd( -24.0927, 321.828, -43.2022, 0.29 ) }
    dend_15 { pt3dadd( -24.3044, 323.417, -43.0197, 1.33 ) }
    dend_15 { pt3dadd( -24.336, 324.216, -42.9105, 1.33 ) }
    dend_15 { pt3dadd( -24.2918, 325.35, -42.7524, 1.11 ) }
    dend_15 { pt3dadd( -24.1773, 326.311, -42.6155, 0.59 ) }
    dend_15 { pt3dadd( -23.9522, 327.331, -42.4974, 0.44 ) }
    dend_15 { pt3dadd( -23.3599, 329.352, -42.403, 0.29 ) }
    dend_15 { pt3dadd( -22.8348, 330.772, -42.4657, 0.74 ) }
    dend_15 { pt3dadd( -22.5131, 331.585, -42.5857, 0.81 ) }
    dend_15 { pt3dadd( -22.239, 332.268, -42.7591, 0.44 ) }
    dend_15 { pt3dadd( -21.737, 333.581, -43.2105, 0.22 ) }
    dend_15 { pt3dadd( -21.331, 334.715, -43.6841, 0.81 ) }
    dend_15 { pt3dadd( -21.1578, 335.228, -43.9377, 0.81 ) }
    dend_15 { pt3dadd( -20.8336, 336.267, -44.4876, 0.22 ) }
    dend_15 { pt3dadd( -20.59, 337.091, -44.8963, 0.22 ) }
    dend_15 { pt3dadd( -20.313, 338.1, -45.3808, 0.81 ) }
    dend_15 { pt3dadd( -20.2376, 338.388, -45.5027, 0.81 ) }
    dend_15 { pt3dadd( -19.9542, 339.4, -45.8911, 0.29 ) }
    dend_15 { pt3dadd( -19.7028, 340.233, -46.194, 0.88 ) }
    dend_15 { pt3dadd( -19.3818, 341.162, -46.503, 0.88 ) }
    dend_15 { pt3dadd( -18.8722, 342.613, -46.9377, 0.22 ) }
    dend_15 { pt3dadd( -18.55, 343.635, -47.2014, 0.74 ) }
    dend_15 { pt3dadd( -18.4606, 343.966, -47.2707, 0.88 ) }
    dend_15 { pt3dadd( -18.2385, 345.129, -47.4799, 0.15 ) }
    dend_15 { pt3dadd( -18.101, 346.094, -47.6283, 0.52 ) }
    dend_15 { pt3dadd( -18.0133, 346.941, -47.7457, 0.22 ) }
    dend_15 { pt3dadd( -17.9602, 347.784, -47.8782, 0.66 ) }
    dend_15 { pt3dadd( -17.951, 348.204, -47.963, 0.88 ) }
    dend_15 { pt3dadd( -18.0034, 349.907, -48.3628, 0.22 ) }
    dend_15 { pt3dadd( -18.0483, 350.422, -48.4942, 0.59 ) }
    dend_15 { pt3dadd( -18.1422, 351.151, -48.6952, 0.44 ) }
    dend_15 { pt3dadd( -18.2938, 352.16, -48.9518, 0.22 ) }
    dend_15 { pt3dadd( -18.3909, 352.777, -49.0849, 0.37 ) }
    dend_15 { pt3dadd( -18.5787, 353.872, -49.2618, 0.15 ) }
    dend_15 { pt3dadd( -18.7799, 354.949, -49.3609, 0.81 ) }
    dend_15 { pt3dadd( -18.8984, 355.578, -49.3955, 1.11 ) }
    dend_15 { pt3dadd( -19.0745, 356.563, -49.4131, 1.03 ) }
    dend_15 { pt3dadd( -19.2225, 357.489, -49.3997, 0.29 ) }
    dend_15 { pt3dadd( -19.3576, 358.408, -49.3903, 0.29 ) }
    dend_15 { pt3dadd( -19.4871, 359.244, -49.3885, 0.29 ) }
    dend_15 { pt3dadd( -19.727, 360.744, -49.4062, 0.22 ) }
    dend_15 { pt3dadd( -19.8811, 361.658, -49.4274, 0.74 ) }
    dend_15 { pt3dadd( -20.2363, 363.657, -49.515, 0.22 ) }
    dend_15 { pt3dadd( -20.4671, 364.852, -49.574, 0.81 ) }
    dend_15 { pt3dadd( -20.9685, 367.305, -49.7056, 0.22 ) }
    dend_15 { pt3dadd( -21.0583, 367.734, -49.7298, 0.22 ) }
    dend_15 { pt3dadd( -21.2412, 368.63, -49.7823, 0.81 ) }
    dend_15 { pt3dadd( -21.2996, 368.961, -49.7995, 1.03 ) }
    dend_15 { pt3dadd( -21.416, 369.747, -49.8277, 0.22 ) }
    dend_15 { pt3dadd( -21.5133, 370.495, -49.8263, 0.44 ) }
    dend_15 { pt3dadd( -21.6143, 371.441, -49.7969, 0.22 ) }
    dend_15 { pt3dadd( -21.6842, 372.162, -49.7674, 0.44 ) }
    dend_15 { pt3dadd( -21.7621, 373.078, -49.7185, 0.22 ) }
    dend_15 { pt3dadd( -21.8518, 373.981, -49.6613, 0.44 ) }
    dend_15 { pt3dadd( -21.9735, 374.921, -49.5818, 0.59 ) }
    dend_15 { pt3dadd( -22.154, 375.91, -49.5241, 0.29 ) }
    dend_15 { pt3dadd( -22.4582, 377.181, -49.5088, 0.44 ) }
    dend_15 { pt3dadd( -22.8363, 378.486, -49.5365, 0.44 ) }
    dend_15 { pt3dadd( -23.3995, 380.278, -49.6263, 0.81 ) }
    dend_15 { pt3dadd( -23.71, 381.267, -49.7384, 0.96 ) }
    dend_15 { pt3dadd( -24.1248, 382.577, -49.9898, 0.66 ) }
    dend_15 { pt3dadd( -24.7392, 384.236, -50.408, 0.29 ) }
    dend_15 { pt3dadd( -24.9667, 384.764, -50.5773, 0.44 ) }
    dend_15 { pt3dadd( -25.3636, 385.626, -50.916, 0.15 ) }
    dend_15 { pt3dadd( -25.936, 386.833, -51.4863, 0.44 ) }
    dend_15 { pt3dadd( -26.3199, 387.686, -51.9219, 0.44 ) }
    dend_15 { pt3dadd( -26.7082, 388.609, -52.3595, 0.15 ) }
    dend_15 { pt3dadd( -26.8581, 388.947, -52.5476, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.5236, 195.661, -28.6919, 0.22 ) }
    dend_14 { pt3dadd( -14.4012, 197.483, -30.0657, 0.22 ) }
    dend_14 { pt3dadd( -13.773, 198.271, -30.6689, 0.22 ) }
    dend_14 { pt3dadd( -13.1652, 199.032, -31.2525, 0.22 ) }
    dend_14 { pt3dadd( -12.5298, 199.828, -31.8626, 0.22 ) }
    dend_14 { pt3dadd( -12.0224, 200.464, -32.3498, 0.44 ) }
    dend_14 { pt3dadd( -11.047, 201.686, -33.2864, 0.74 ) }
    dend_14 { pt3dadd( -10.3191, 202.61, -33.8506, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -80.2816, 123.654, -3.9317, 0.29 ) }
    dend_10 { pt3dadd( -81.2006, 123.341, -3.51771, 0.29 ) }
    dend_10 { pt3dadd( -81.7552, 123.153, -3.26791, 0.29 ) }
    dend_10 { pt3dadd( -82.5725, 122.875, -2.89975, 0.29 ) }
    dend_10 { pt3dadd( -83.4727, 122.569, -2.49428, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -80.2816, 123.654, -3.9317, 0.22 ) }
    dend_9 { pt3dadd( -81.489, 125.497, -3.92929, 0.22 ) }
    dend_9 { pt3dadd( -82.1132, 126.45, -3.92805, 0.66 ) }
    dend_9 { pt3dadd( -82.3923, 126.876, -3.92749, 0.66 ) }
    dend_9 { pt3dadd( -82.9188, 127.679, -3.92644, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -104.482, 5.45732, -126.668, 0.22 ) }
    dend_53 { pt3dadd( -102.639, 8.63283, -129.211, 0.22 ) }
    dend_53 { pt3dadd( -102.194, 9.40029, -129.826, 0.22 ) }
    dend_53 { pt3dadd( -101.334, 10.8824, -131.013, 0.88 ) }
    dend_53 { pt3dadd( -101.058, 11.3593, -131.395, 0.66 ) }
    dend_53 { pt3dadd( -100.819, 11.7704, -131.724, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -104.482, 5.45732, -126.668, 0.22 ) }
    dend_52 { pt3dadd( -105.079, 6.33974, -127.101, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -105.347, 6.64974, -127.298, 0.44 ) }
    dend_52 { pt3dadd( -105.882, 7.1931, -127.707, 0.22 ) }
    dend_52 { pt3dadd( -106.094, 7.39187, -127.864, 0.59 ) }
    dend_52 { pt3dadd( -106.671, 7.92983, -128.271, 0.29 ) }
    dend_52 { pt3dadd( -107.386, 8.59722, -128.776, 0.29 ) }
    dend_52 { pt3dadd( -107.785, 8.91488, -129.059, 0.29 ) }
    dend_52 { pt3dadd( -108.106, 9.13418, -129.301, 0.59 ) }
    dend_52 { pt3dadd( -108.573, 9.39604, -129.677, 0.22 ) }
    dend_52 { pt3dadd( -108.961, 9.60037, -129.986, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.3028, -52.7357, -61.3659, 0.37 ) }
    dend_48 { pt3dadd( -73.6187, -54.2855, -61.7847, 0.37 ) }
    dend_48 { pt3dadd( -73.8288, -55.3694, -62.0499, 0.15 ) }
    dend_48 { pt3dadd( -74.0002, -56.2747, -62.215, 0.44 ) }
    dend_48 { pt3dadd( -74.1524, -57.0498, -62.3316, 0.44 ) }
    dend_48 { pt3dadd( -74.3745, -58.1435, -62.4733, 0.22 ) }
    dend_48 { pt3dadd( -74.5794, -59.0713, -62.5778, 1.03 ) }
    dend_48 { pt3dadd( -74.6758, -59.4243, -62.593, 1.03 ) }
    dend_48 { pt3dadd( -75.0822, -60.6679, -62.5735, 0.29 ) }
    dend_48 { pt3dadd( -75.393, -61.4919, -62.5379, 1.03 ) }
    dend_48 { pt3dadd( -75.7365, -62.2546, -62.4768, 1.03 ) }
    dend_48 { pt3dadd( -76.125, -63.0, -62.3957, 0.29 ) }
    dend_48 { pt3dadd( -76.6956, -63.9912, -62.2533, 0.29 ) }
    dend_48 { pt3dadd( -77.0395, -64.5352, -62.1513, 0.81 ) }
    dend_48 { pt3dadd( -77.4043, -65.0528, -62.0355, 0.52 ) }
    dend_48 { pt3dadd( -78.2638, -66.2029, -61.7507, 0.29 ) }
    dend_48 { pt3dadd( -79.0025, -67.1459, -61.5032, 0.74 ) }
    dend_48 { pt3dadd( -79.4565, -67.6693, -61.3339, 1.03 ) }
    dend_48 { pt3dadd( -80.472, -68.7507, -60.9332, 0.22 ) }
    dend_48 { pt3dadd( -80.9552, -69.2253, -60.7324, 0.22 ) }
    dend_48 { pt3dadd( -81.2215, -69.4604, -60.6188, 0.59 ) }
    dend_48 { pt3dadd( -81.4297, -69.634, -60.5339, 0.59 ) }
    dend_48 { pt3dadd( -82.6587, -70.6753, -60.0414, 0.59 ) }
    dend_48 { pt3dadd( -83.2389, -71.2351, -59.852, 0.37 ) }
    dend_48 { pt3dadd( -84.1063, -72.1443, -59.631, 1.25 ) }
    dend_48 { pt3dadd( -84.4144, -72.4898, -59.5614, 1.47 ) }
    dend_48 { pt3dadd( -85.2038, -73.4071, -59.4188, 0.37 ) }
    dend_48 { pt3dadd( -85.7192, -74.0219, -59.3771, 1.03 ) }
    dend_48 { pt3dadd( -86.6011, -75.112, -59.417, 0.29 ) }
    dend_48 { pt3dadd( -87.0015, -75.5761, -59.4482, 0.44 ) }
    dend_48 { pt3dadd( -87.2675, -75.8715, -59.4427, 0.66 ) }
    dend_48 { pt3dadd( -87.5478, -76.1786, -59.4067, 0.52 ) }
    dend_48 { pt3dadd( -88.1604, -76.7819, -59.2414, 0.29 ) }
    dend_48 { pt3dadd( -88.7481, -77.3106, -58.9931, 0.74 ) }
    dend_48 { pt3dadd( -88.9985, -77.5144, -58.8286, 0.74 ) }
    dend_48 { pt3dadd( -90.1808, -78.5071, -57.9381, 0.22 ) }
    dend_48 { pt3dadd( -90.4635, -78.7635, -57.6957, 0.44 ) }
    dend_48 { pt3dadd( -90.7929, -79.0762, -57.3591, 0.59 ) }
    dend_48 { pt3dadd( -91.3528, -79.596, -56.7497, 0.37 ) }
    dend_48 { pt3dadd( -92.0224, -80.2078, -56.0322, 0.74 ) }
    dend_48 { pt3dadd( -92.3934, -80.5302, -55.6762, 0.74 ) }
    dend_48 { pt3dadd( -92.922, -80.9749, -55.2565, 0.29 ) }
    dend_48 { pt3dadd( -93.8398, -81.7579, -54.6055, 1.03 ) }
    dend_48 { pt3dadd( -94.7207, -82.5476, -54.0737, 0.22 ) }
    dend_48 { pt3dadd( -95.0858, -82.8736, -53.8978, 0.88 ) }
    dend_48 { pt3dadd( -96.141, -83.8481, -53.5285, 0.29 ) }
    dend_48 { pt3dadd( -96.7989, -84.4572, -53.3476, 0.15 ) }
    dend_48 { pt3dadd( -97.2957, -84.9208, -53.2664, 0.74 ) }
    dend_48 { pt3dadd( -98.0276, -85.6361, -53.267, 1.03 ) }
    dend_48 { pt3dadd( -98.5329, -86.1508, -53.3274, 1.11 ) }
    dend_48 { pt3dadd( -99.4787, -87.1286, -53.5207, 0.22 ) }
    dend_48 { pt3dadd( -99.7146, -87.3851, -53.5899, 0.59 ) }
    dend_48 { pt3dadd( -99.8952, -87.5966, -53.6487, 0.59 ) }
    dend_48 { pt3dadd( -100.816, -88.7393, -53.9658, 0.22 ) }
    dend_48 { pt3dadd( -101.115, -89.1551, -54.0625, 0.74 ) }
    dend_48 { pt3dadd( -101.417, -89.6248, -54.1107, 0.74 ) }
    dend_48 { pt3dadd( -101.887, -90.4598, -54.025, 0.22 ) }
    dend_48 { pt3dadd( -102.329, -91.4193, -53.7851, 0.59 ) }
    dend_48 { pt3dadd( -102.468, -91.8118, -53.655, 0.74 ) }
    dend_48 { pt3dadd( -102.714, -92.7486, -53.2912, 0.22 ) }
    dend_48 { pt3dadd( -102.978, -93.8791, -52.7873, 0.88 ) }
    dend_48 { pt3dadd( -103.221, -95.1406, -52.1505, 0.15 ) }
    dend_48 { pt3dadd( -103.285, -95.5725, -51.8928, 0.15 ) }
    dend_48 { pt3dadd( -103.381, -96.2514, -51.4048, 0.74 ) }
    dend_48 { pt3dadd( -103.441, -96.7122, -51.0624, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -73.3028, -52.7357, -61.3659, 0.29 ) }
    dend_47 { pt3dadd( -73.984, -51.6781, -61.4796, 0.29 ) }
    dend_47 { pt3dadd( -74.6375, -50.8433, -61.5894, 0.29 ) }
    dend_47 { pt3dadd( -75.3661, -50.0424, -61.6491, 0.29 ) }
    dend_47 { pt3dadd( -75.7382, -49.6651, -61.666, 0.29 ) }
    dend_47 { pt3dadd( -76.6009, -48.8544, -61.6795, 0.52 ) }
    dend_47 { pt3dadd( -77.1846, -48.3669, -61.6838, 0.74 ) }
    dend_47 { pt3dadd( -77.7883, -47.9383, -61.6512, 0.37 ) }
    dend_47 { pt3dadd( -78.6212, -47.4379, -61.6058, 0.66 ) }
    dend_47 { pt3dadd( -78.9599, -47.2749, -61.5989, 1.03 ) }
    dend_47 { pt3dadd( -79.7767, -46.9714, -61.5747, 1.03 ) }
    dend_47 { pt3dadd( -80.9426, -46.6706, -61.5108, 0.22 ) }
    dend_47 { pt3dadd( -81.6936, -46.5334, -61.4469, 0.22 ) }
    dend_47 { pt3dadd( -82.5084, -46.4726, -61.2954, 0.44 ) }
    dend_47 { pt3dadd( -83.0413, -46.474, -61.1605, 0.44 ) }
    dend_47 { pt3dadd( -83.8664, -46.5147, -60.8962, 0.29 ) }
    dend_47 { pt3dadd( -84.6141, -46.6039, -60.6112, 1.11 ) }
    dend_47 { pt3dadd( -84.9961, -46.672, -60.4496, 1.25 ) }
    dend_47 { pt3dadd( -86.5723, -47.0482, -59.7544, 0.66 ) }
    dend_47 { pt3dadd( -87.4531, -47.2976, -59.3456, 0.22 ) }
    dend_47 { pt3dadd( -87.9575, -47.4674, -59.0956, 0.22 ) }
    dend_47 { pt3dadd( -88.5462, -47.7115, -58.7755, 0.22 ) }
    dend_47 { pt3dadd( -89.0506, -47.9656, -58.5061, 0.81 ) }
    dend_47 { pt3dadd( -89.4539, -48.1934, -58.3064, 0.81 ) }
    dend_47 { pt3dadd( -89.8988, -48.4792, -58.1229, 0.29 ) }
    dend_47 { pt3dadd( -90.5971, -48.9251, -57.8644, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -91.7003, -49.5421, -57.5263, 0.22 ) }
    dend_47 { pt3dadd( -92.1466, -49.7391, -57.4265, 0.52 ) }
    dend_47 { pt3dadd( -92.828, -49.9868, -57.3155, 0.29 ) }
    dend_47 { pt3dadd( -93.3262, -50.1407, -57.2739, 0.66 ) }
    dend_47 { pt3dadd( -94.2908, -50.3987, -57.2778, 0.29 ) }
    dend_47 { pt3dadd( -94.7587, -50.5366, -57.3289, 0.96 ) }
    dend_47 { pt3dadd( -95.0453, -50.6268, -57.3759, 0.96 ) }
    dend_47 { pt3dadd( -96.0586, -50.9557, -57.5299, 0.29 ) }
    dend_47 { pt3dadd( -96.6797, -51.1583, -57.5849, 1.33 ) }
    dend_47 { pt3dadd( -97.2905, -51.3406, -57.6007, 1.55 ) }
    dend_47 { pt3dadd( -98.332, -51.5903, -57.5721, 0.29 ) }
    dend_47 { pt3dadd( -98.8611, -51.6851, -57.5292, 0.29 ) }
    dend_47 { pt3dadd( -99.5944, -51.7892, -57.4263, 0.52 ) }
    dend_47 { pt3dadd( -100.521, -51.8757, -57.2838, 0.96 ) }
    dend_47 { pt3dadd( -101.164, -51.9158, -57.1521, 0.44 ) }
    dend_47 { pt3dadd( -101.978, -51.951, -56.9316, 0.29 ) }
    dend_47 { pt3dadd( -103.027, -51.9573, -56.5717, 0.88 ) }
    dend_47 { pt3dadd( -103.725, -51.9926, -56.3046, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.277, -45.3455, -55.7589, 0.29 ) }
    dend_45 { pt3dadd( -74.7399, -45.8053, -56.0641, 0.29 ) }
    dend_45 { pt3dadd( -75.3145, -46.3102, -56.2054, 0.29 ) }
    dend_45 { pt3dadd( -75.8324, -46.7041, -56.2374, 0.81 ) }
    dend_45 { pt3dadd( -76.2994, -47.0038, -56.217, 0.81 ) }
    dend_45 { pt3dadd( -76.8265, -47.2651, -56.1308, 0.37 ) }
    dend_45 { pt3dadd( -78.0957, -47.711, -55.7793, 0.37 ) }
    dend_45 { pt3dadd( -78.7102, -47.7885, -55.4898, 0.59 ) }
    dend_45 { pt3dadd( -79.1298, -47.7881, -55.2661, 0.88 ) }
    dend_45 { pt3dadd( -79.609, -47.7529, -54.9961, 0.88 ) }
    dend_45 { pt3dadd( -80.4026, -47.6671, -54.5245, 1.03 ) }
    dend_45 { pt3dadd( -81.0827, -47.5943, -54.1028, 1.03 ) }
    dend_45 { pt3dadd( -81.9571, -47.5349, -53.5182, 0.59 ) }
    dend_45 { pt3dadd( -82.5318, -47.5545, -53.0674, 0.37 ) }
    dend_45 { pt3dadd( -83.2093, -47.6929, -52.4434, 0.37 ) }
    dend_45 { pt3dadd( -83.7845, -47.9326, -51.8521, 0.66 ) }
    dend_45 { pt3dadd( -84.1996, -48.2012, -51.4039, 0.96 ) }
    dend_45 { pt3dadd( -84.9166, -48.7899, -50.6101, 1.03 ) }
    dend_45 { pt3dadd( -85.4331, -49.2631, -50.0275, 0.44 ) }
    dend_45 { pt3dadd( -85.855, -49.6301, -49.5587, 0.44 ) }
    dend_45 { pt3dadd( -86.1211, -49.8605, -49.2685, 0.66 ) }
    dend_45 { pt3dadd( -86.4215, -50.1061, -48.9467, 0.88 ) }
    dend_45 { pt3dadd( -86.7727, -50.3436, -48.4505, 0.88 ) }
    dend_45 { pt3dadd( -87.1515, -50.5742, -47.7283, 0.44 ) }
    dend_45 { pt3dadd( -87.4358, -50.7366, -47.001, 0.74 ) }
    dend_45 { pt3dadd( -87.6215, -50.8713, -46.3325, 0.74 ) }
    dend_45 { pt3dadd( -87.7536, -51.0318, -45.5399, 1.03 ) }
    dend_45 { pt3dadd( -87.9094, -51.4762, -43.2638, 0.44 ) }
    dend_45 { pt3dadd( -87.8898, -51.5876, -42.653, 0.44 ) }
    dend_45 { pt3dadd( -87.857, -51.6242, -42.3833, 0.74 ) }
    dend_45 { pt3dadd( -87.7233, -51.6907, -41.6252, 0.74 ) }
    dend_45 { pt3dadd( -87.5738, -51.6997, -40.8696, 0.66 ) }
    dend_45 { pt3dadd( -87.459, -51.6513, -40.4153, 0.52 ) }
    dend_45 { pt3dadd( -87.2942, -51.5378, -39.936, 0.52 ) }
    dend_45 { pt3dadd( -86.9306, -51.0075, -38.816, 1.03 ) }
    dend_45 { pt3dadd( -86.7017, -50.4292, -38.1254, 0.22 ) }
    dend_45 { pt3dadd( -86.6267, -49.8889, -37.8618, 0.22 ) }
    dend_45 { pt3dadd( -86.6891, -48.7678, -37.7299, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -74.277, -45.3455, -55.7589, 0.29 ) }
    dend_40 { pt3dadd( -75.2588, -44.3231, -56.3137, 0.29 ) }
    dend_40 { pt3dadd( -75.7387, -43.8812, -56.4526, 0.29 ) }
    dend_40 { pt3dadd( -76.1117, -43.5462, -56.464, 0.66 ) }
    dend_40 { pt3dadd( -76.5317, -43.1636, -56.4434, 0.66 ) }
    dend_40 { pt3dadd( -77.0704, -42.6941, -56.3979, 0.44 ) }
    dend_40 { pt3dadd( -77.5992, -42.2332, -56.3534, 0.29 ) }
    dend_40 { pt3dadd( -78.6651, -41.385, -56.1916, 0.59 ) }
    dend_40 { pt3dadd( -79.5588, -40.6847, -55.9532, 1.03 ) }
    dend_40 { pt3dadd( -80.2732, -40.1204, -55.6862, 1.4 ) }
    dend_40 { pt3dadd( -80.58, -39.8774, -55.5334, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 51.9437, -83.21, -69.122, 0.81 ) }
    dend_35 { pt3dadd( 52.5366, -83.8496, -70.559, 0.81 ) }
    dend_35 { pt3dadd( 52.8721, -84.206, -71.2944, 1.11 ) }
    dend_35 { pt3dadd( 54.7359, -85.99, -74.9508, 0.44 ) }
    dend_35 { pt3dadd( 55.0906, -86.2734, -75.5771, 0.29 ) }
    dend_35 { pt3dadd( 55.552, -86.5795, -76.3134, 0.29 ) }
    dend_35 { pt3dadd( 56.3837, -87.0737, -77.579, 0.29 ) }
    dend_35 { pt3dadd( 56.9809, -87.3104, -78.4848, 0.59 ) }
    dend_35 { pt3dadd( 57.3346, -87.4509, -79.2298, 0.74 ) }
    dend_35 { pt3dadd( 57.7496, -87.5904, -80.1387, 0.37 ) }
    dend_35 { pt3dadd( 58.1833, -87.6799, -81.2127, 0.81 ) }
    dend_35 { pt3dadd( 58.4044, -87.6926, -81.7833, 0.96 ) }
    dend_35 { pt3dadd( 59.2401, -87.6611, -84.0487, 1.4 ) }
    dend_35 { pt3dadd( 60.6007, -87.4388, -88.7743, 0.74 ) }
    dend_35 { pt3dadd( 60.9283, -87.3464, -90.0954, 0.29 ) }
    dend_35 { pt3dadd( 61.2169, -87.2419, -91.3561, 0.29 ) }
    dend_35 { pt3dadd( 61.3831, -87.1647, -92.0874, 0.66 ) }
    dend_35 { pt3dadd( 62.1022, -86.8122, -94.9474, 1.69 ) }
    dend_35 { pt3dadd( 63.5463, -86.1151, -99.8512, 1.18 ) }
    dend_35 { pt3dadd( 64.6428, -85.6674, -103.016, 0.74 ) }
    dend_35 { pt3dadd( 65.249, -85.5139, -104.701, 1.47 ) }
    dend_35 { pt3dadd( 65.4929, -85.5049, -105.32, 1.47 ) }
    dend_35 { pt3dadd( 66.1596, -85.612, -106.841, 0.29 ) }
    dend_35 { pt3dadd( 67.0248, -85.9807, -108.327, 0.29 ) }
    dend_35 { pt3dadd( 67.987, -86.7273, -109.395, 1.11 ) }
    dend_35 { pt3dadd( 68.8838, -87.7111, -110.198, 0.29 ) }
    dend_35 { pt3dadd( 69.4508, -88.4881, -110.65, 1.25 ) }
    dend_35 { pt3dadd( 69.7677, -88.9746, -110.902, 1.25 ) }
    dend_35 { pt3dadd( 70.4373, -90.0917, -111.435, 0.15 ) }
    dend_35 { pt3dadd( 70.8549, -90.6954, -111.755, 0.59 ) }
    dend_35 { pt3dadd( 71.1378, -90.974, -111.974, 0.59 ) }
    dend_35 { pt3dadd( 71.9521, -91.5575, -112.631, 0.22 ) }
    dend_35 { pt3dadd( 72.9111, -92.0976, -113.389, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 73.5592, -92.3937, -113.89, 1.84 ) }
    dend_35 { pt3dadd( 74.9573, -92.9093, -114.93, 0.22 ) }
    dend_35 { pt3dadd( 75.8488, -93.2132, -115.541, 0.59 ) }
    dend_35 { pt3dadd( 76.9322, -93.6014, -116.23, 0.22 ) }
    dend_35 { pt3dadd( 77.7846, -93.9455, -116.73, 0.22 ) }
    dend_35 { pt3dadd( 78.6897, -94.4143, -117.197, 0.88 ) }
    dend_35 { pt3dadd( 79.1894, -94.7185, -117.43, 1.11 ) }
    dend_35 { pt3dadd( 80.586, -95.6922, -118.013, 0.22 ) }
    dend_35 { pt3dadd( 81.3161, -96.2306, -118.286, 1.33 ) }
    dend_35 { pt3dadd( 81.712, -96.5376, -118.434, 1.55 ) }
    dend_35 { pt3dadd( 82.7901, -97.4857, -118.841, 0.22 ) }
    dend_35 { pt3dadd( 83.4756, -98.1564, -119.101, 0.66 ) }
    dend_35 { pt3dadd( 83.8198, -98.5293, -119.241, 0.66 ) }
    dend_35 { pt3dadd( 84.503, -99.352, -119.558, 0.22 ) }
    dend_35 { pt3dadd( 85.1119, -100.118, -119.872, 0.44 ) }
    dend_35 { pt3dadd( 85.5979, -100.753, -120.151, 0.22 ) }
    dend_35 { pt3dadd( 86.0597, -101.358, -120.449, 0.96 ) }
    dend_35 { pt3dadd( 86.4286, -101.831, -120.65, 1.18 ) }
    dend_35 { pt3dadd( 87.6792, -103.454, -121.23, 0.15 ) }
    dend_35 { pt3dadd( 88.1987, -104.105, -121.426, 0.96 ) }
    dend_35 { pt3dadd( 88.5743, -104.556, -121.594, 0.96 ) }
    dend_35 { pt3dadd( 89.2488, -105.355, -121.932, 0.15 ) }
    dend_35 { pt3dadd( 90.5798, -106.962, -122.677, 0.81 ) }
    dend_35 { pt3dadd( 91.2498, -107.748, -123.124, 0.81 ) }
    dend_35 { pt3dadd( 92.1356, -108.728, -123.803, 0.29 ) }
    dend_35 { pt3dadd( 93.5751, -110.188, -125.033, 0.44 ) }
    dend_35 { pt3dadd( 94.1369, -110.688, -125.545, 0.81 ) }
    dend_35 { pt3dadd( 94.5729, -110.992, -125.962, 0.81 ) }
    dend_35 { pt3dadd( 95.6225, -111.516, -127.086, 0.37 ) }
    dend_35 { pt3dadd( 96.3385, -111.759, -127.824, 0.29 ) }
    dend_35 { pt3dadd( 97.1308, -111.956, -128.565, 0.59 ) }
    dend_35 { pt3dadd( 97.9512, -112.132, -129.245, 0.44 ) }
    dend_35 { pt3dadd( 99.0061, -112.326, -130.094, 0.29 ) }
    dend_35 { pt3dadd( 100.333, -112.551, -131.105, 0.59 ) }
    dend_35 { pt3dadd( 101.147, -112.674, -131.766, 0.59 ) }
    dend_35 { pt3dadd( 101.85, -112.76, -132.393, 0.29 ) }
    dend_35 { pt3dadd( 103.0, -112.861, -133.465, 0.29 ) }
    dend_35 { pt3dadd( 103.687, -112.91, -134.132, 0.29 ) }
    dend_35 { pt3dadd( 104.287, -112.963, -134.668, 0.74 ) }
    dend_35 { pt3dadd( 105.787, -113.083, -135.871, 0.74 ) }
    dend_35 { pt3dadd( 106.462, -113.153, -136.4, 0.37 ) }
    dend_35 { pt3dadd( 106.894, -113.203, -136.73, 1.03 ) }
    dend_35 { pt3dadd( 107.517, -113.279, -137.186, 1.03 ) }
    dend_35 { pt3dadd( 108.785, -113.504, -138.121, 0.29 ) }
    dend_35 { pt3dadd( 110.669, -113.961, -139.456, 1.11 ) }
    dend_35 { pt3dadd( 112.101, -114.415, -140.359, 0.44 ) }
    dend_35 { pt3dadd( 112.529, -114.576, -140.647, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 51.9437, -83.21, -69.122, 0.52 ) }
    dend_34 { pt3dadd( 53.3069, -83.1386, -69.0456, 0.52 ) }
    dend_34 { pt3dadd( 54.1855, -83.0365, -69.0192, 0.52 ) }
    dend_34 { pt3dadd( 55.0844, -82.8991, -68.9989, 0.81 ) }
    dend_34 { pt3dadd( 55.7639, -82.7272, -69.0004, 0.81 ) }
    dend_34 { pt3dadd( 56.8945, -82.3268, -69.0256, 0.29 ) }
    dend_34 { pt3dadd( 57.7408, -81.9231, -69.072, 0.29 ) }
    dend_34 { pt3dadd( 58.4406, -81.3731, -69.1666, 0.88 ) }
    dend_34 { pt3dadd( 58.989, -80.7565, -69.2689, 1.11 ) }
    dend_34 { pt3dadd( 59.6181, -79.7923, -69.4455, 0.44 ) }
    dend_34 { pt3dadd( 60.05, -78.8295, -69.6386, 0.37 ) }
    dend_34 { pt3dadd( 60.3858, -77.71, -69.8864, 0.37 ) }
    dend_34 { pt3dadd( 60.682, -76.2144, -70.1866, 0.66 ) }
    dend_34 { pt3dadd( 60.799, -75.2402, -70.3606, 1.03 ) }
    dend_34 { pt3dadd( 60.8578, -74.2184, -70.4856, 1.03 ) }
    dend_34 { pt3dadd( 60.8767, -72.6091, -70.5187, 0.52 ) }
    dend_34 { pt3dadd( 60.8726, -72.0121, -70.4707, 0.37 ) }
    dend_34 { pt3dadd( 60.8838, -71.0244, -70.2901, 1.03 ) }
    dend_34 { pt3dadd( 60.9224, -70.4346, -70.1208, 1.03 ) }
    dend_34 { pt3dadd( 61.1117, -69.1497, -69.6942, 0.29 ) }
    dend_34 { pt3dadd( 61.578, -67.0947, -68.9052, 0.22 ) }
    dend_34 { pt3dadd( 61.803, -66.3647, -68.5945, 0.66 ) }
    dend_34 { pt3dadd( 62.0175, -65.7433, -68.3403, 0.52 ) }
    dend_34 { pt3dadd( 62.3335, -64.8368, -68.0293, 0.37 ) }
    dend_34 { pt3dadd( 62.7875, -63.6029, -67.6795, 0.74 ) }
    dend_34 { pt3dadd( 63.1138, -62.8091, -67.4888, 0.22 ) }
    dend_34 { pt3dadd( 63.5445, -61.8425, -67.2641, 0.88 ) }
    dend_34 { pt3dadd( 63.7436, -61.3535, -67.1336, 0.88 ) }
    dend_34 { pt3dadd( 64.2388, -59.9822, -66.7422, 0.29 ) }
    dend_34 { pt3dadd( 64.4462, -59.2808, -66.5368, 0.44 ) }
    dend_34 { pt3dadd( 64.6165, -58.5557, -66.3089, 0.29 ) }
    dend_34 { pt3dadd( 64.7635, -57.7418, -66.1004, 0.29 ) }
    dend_34 { pt3dadd( 64.8904, -56.5374, -65.8613, 0.81 ) }
    dend_34 { pt3dadd( 64.9567, -55.6598, -65.7005, 1.03 ) }
    dend_34 { pt3dadd( 64.9826, -55.0514, -65.6046, 1.03 ) }
    dend_34 { pt3dadd( 64.9829, -54.3784, -65.5232, 0.22 ) }
    dend_34 { pt3dadd( 64.977, -53.0488, -65.3629, 0.22 ) }
    dend_34 { pt3dadd( 65.0237, -51.9729, -65.1706, 0.81 ) }
    dend_34 { pt3dadd( 65.0925, -51.4426, -65.0239, 0.81 ) }
    dend_34 { pt3dadd( 65.2777, -50.6876, -64.6885, 0.44 ) }
    dend_34 { pt3dadd( 65.5408, -49.9583, -64.2733, 0.44 ) }
    dend_34 { pt3dadd( 65.9708, -48.9632, -63.6051, 0.96 ) }
    dend_34 { pt3dadd( 66.4228, -47.9967, -62.8492, 0.96 ) }
    dend_34 { pt3dadd( 66.7176, -47.3548, -62.3395, 1.11 ) }
    dend_34 { pt3dadd( 67.1234, -46.4311, -61.6447, 0.29 ) }
    dend_34 { pt3dadd( 67.4463, -45.7041, -61.1161, 0.81 ) }
    dend_34 { pt3dadd( 67.8166, -44.9079, -60.5788, 0.81 ) }
    dend_34 { pt3dadd( 68.3496, -43.7888, -59.9587, 0.44 ) }
    dend_34 { pt3dadd( 68.8163, -42.7084, -59.4731, 1.11 ) }
    dend_34 { pt3dadd( 69.1413, -41.9365, -59.1701, 1.11 ) }
    dend_34 { pt3dadd( 69.3763, -41.3793, -58.9797, 0.81 ) }
    dend_34 { pt3dadd( 69.6642, -40.807, -58.7941, 0.52 ) }
    dend_34 { pt3dadd( 70.3945, -39.685, -58.4763, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 71.2177, -38.752, -58.2942, 0.22 ) }
    dend_34 { pt3dadd( 71.8958, -38.2338, -58.2645, 0.59 ) }
    dend_34 { pt3dadd( 72.1646, -38.1008, -58.2928, 0.59 ) }
    dend_34 { pt3dadd( 73.7302, -37.5729, -58.6343, 0.52 ) }
    dend_34 { pt3dadd( 74.6515, -37.3823, -58.8939, 0.29 ) }
    dend_34 { pt3dadd( 75.8719, -37.2302, -59.282, 0.52 ) }
    dend_34 { pt3dadd( 77.0559, -37.0964, -59.7045, 0.44 ) }
    dend_34 { pt3dadd( 77.8473, -36.9876, -60.0158, 0.81 ) }
    dend_34 { pt3dadd( 78.5136, -36.8523, -60.2834, 1.03 ) }
    dend_34 { pt3dadd( 79.7433, -36.4677, -60.7595, 0.29 ) }
    dend_34 { pt3dadd( 80.3663, -36.2206, -60.9383, 0.29 ) }
    dend_34 { pt3dadd( 81.0898, -35.9151, -61.073, 0.81 ) }
    dend_34 { pt3dadd( 81.6004, -35.7138, -61.1293, 0.81 ) }
    dend_34 { pt3dadd( 82.6349, -35.3841, -61.1957, 0.52 ) }
    dend_34 { pt3dadd( 83.9712, -35.1374, -61.214, 0.15 ) }
    dend_34 { pt3dadd( 85.0237, -35.1461, -61.1672, 0.44 ) }
    dend_34 { pt3dadd( 85.7368, -35.2797, -61.0425, 0.74 ) }
    dend_34 { pt3dadd( 86.2714, -35.4194, -60.8955, 1.03 ) }
    dend_34 { pt3dadd( 86.8326, -35.568, -60.7032, 1.03 ) }
    dend_34 { pt3dadd( 87.6495, -35.755, -60.357, 0.88 ) }
    dend_34 { pt3dadd( 88.6954, -35.8507, -59.8468, 0.37 ) }
    dend_34 { pt3dadd( 90.2813, -35.5784, -59.0902, 0.81 ) }
    dend_34 { pt3dadd( 91.1067, -35.2036, -58.7208, 0.81 ) }
    dend_34 { pt3dadd( 91.889, -34.6377, -58.3206, 0.29 ) }
    dend_34 { pt3dadd( 92.4237, -34.1342, -58.0044, 0.29 ) }
    dend_34 { pt3dadd( 93.1495, -33.3235, -57.5441, 0.15 ) }
    dend_34 { pt3dadd( 93.7442, -32.6637, -57.2047, 1.03 ) }
    dend_34 { pt3dadd( 94.12, -32.3011, -57.0134, 1.03 ) }
    dend_34 { pt3dadd( 95.7093, -31.1, -56.2488, 0.52 ) }
    dend_34 { pt3dadd( 96.6086, -30.5871, -55.8423, 0.52 ) }
    dend_34 { pt3dadd( 97.6233, -30.1686, -55.4203, 0.44 ) }
    dend_34 { pt3dadd( 99.373, -29.6517, -54.7629, 0.88 ) }
    dend_34 { pt3dadd( 100.445, -29.3972, -54.4148, 0.74 ) }
    dend_34 { pt3dadd( 101.483, -29.1961, -54.17, 0.44 ) }
    dend_34 { pt3dadd( 102.178, -29.1024, -54.0852, 0.37 ) }
    dend_34 { pt3dadd( 103.092, -29.0178, -54.0331, 0.22 ) }
    dend_34 { pt3dadd( 103.871, -28.9932, -54.0359, 0.22 ) }
    dend_34 { pt3dadd( 104.906, -28.9583, -54.0829, 0.44 ) }
    dend_34 { pt3dadd( 105.558, -28.9135, -54.1466, 0.22 ) }
    dend_34 { pt3dadd( 106.417, -28.8268, -54.2554, 0.22 ) }
    dend_34 { pt3dadd( 107.267, -28.7395, -54.403, 0.44 ) }
    dend_34 { pt3dadd( 108.645, -28.6801, -54.7115, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.92783, 445.175, -63.24, 0.74 ) }
    dend_19 { pt3dadd( -6.83917, 447.322, -63.9622, 0.74 ) }
    dend_19 { pt3dadd( -6.80598, 448.228, -64.2337, 0.52 ) }
    dend_19 { pt3dadd( -6.75846, 449.122, -64.4704, 0.37 ) }
    dend_19 { pt3dadd( -6.68859, 450.544, -64.8122, 0.37 ) }
    dend_19 { pt3dadd( -6.66214, 451.08, -64.9321, 0.59 ) }
    dend_19 { pt3dadd( -6.59248, 452.22, -65.1718, 0.74 ) }
    dend_19 { pt3dadd( -6.54232, 452.941, -65.2889, 0.74 ) }
    dend_19 { pt3dadd( -6.431, 454.312, -65.5421, 0.37 ) }
    dend_19 { pt3dadd( -6.34969, 455.311, -65.738, 0.37 ) }
    dend_19 { pt3dadd( -6.21358, 457.041, -66.08, 0.81 ) }
    dend_19 { pt3dadd( -6.12683, 458.202, -66.3106, 0.96 ) }
    dend_19 { pt3dadd( -6.03328, 459.382, -66.5414, 0.96 ) }
    dend_19 { pt3dadd( -5.91134, 460.926, -66.8432, 0.66 ) }
    dend_19 { pt3dadd( -5.84672, 461.83, -67.0195, 0.44 ) }
    dend_19 { pt3dadd( -5.79351, 462.534, -67.1487, 0.44 ) }
    dend_19 { pt3dadd( -5.71064, 463.861, -67.376, 0.44 ) }
    dend_19 { pt3dadd( -5.65765, 465.031, -67.5606, 0.81 ) }
    dend_19 { pt3dadd( -5.64128, 465.841, -67.6784, 1.03 ) }
    dend_19 { pt3dadd( -5.6389, 466.685, -67.7942, 1.03 ) }
    dend_19 { pt3dadd( -5.66466, 468.105, -68.0002, 0.74 ) }
    dend_19 { pt3dadd( -5.71268, 469.211, -68.1678, 0.74 ) }
    dend_19 { pt3dadd( -5.82951, 470.983, -68.432, 0.44 ) }
    dend_19 { pt3dadd( -5.99313, 472.735, -68.6974, 0.44 ) }
    dend_19 { pt3dadd( -6.07857, 473.581, -68.8418, 1.03 ) }
    dend_19 { pt3dadd( -6.15969, 474.394, -68.9979, 1.18 ) }
    dend_19 { pt3dadd( -6.28558, 475.699, -69.3027, 0.52 ) }
    dend_19 { pt3dadd( -6.39194, 476.949, -69.6686, 0.74 ) }
    dend_19 { pt3dadd( -6.49971, 478.205, -70.1177, 1.11 ) }
    dend_19 { pt3dadd( -6.59357, 479.359, -70.5807, 0.44 ) }
    dend_19 { pt3dadd( -6.68283, 480.383, -71.0199, 0.37 ) }
    dend_19 { pt3dadd( -6.76695, 481.475, -71.5053, 0.37 ) }
    dend_19 { pt3dadd( -6.86335, 483.008, -72.194, 0.59 ) }
    dend_19 { pt3dadd( -6.91334, 484.126, -72.6808, 0.96 ) }
    dend_19 { pt3dadd( -6.92935, 484.925, -72.9926, 1.18 ) }
    dend_19 { pt3dadd( -6.92795, 485.663, -73.234, 1.18 ) }
    dend_19 { pt3dadd( -6.87309, 487.312, -73.6988, 0.44 ) }
    dend_19 { pt3dadd( -6.78807, 488.465, -73.9488, 0.37 ) }
    dend_19 { pt3dadd( -6.69328, 489.291, -74.0888, 0.59 ) }
    dend_19 { pt3dadd( -6.53961, 490.321, -74.2582, 0.44 ) }
    dend_19 { pt3dadd( -6.34245, 491.571, -74.4963, 0.44 ) }
    dend_19 { pt3dadd( -6.19593, 492.494, -74.6921, 0.74 ) }
    dend_19 { pt3dadd( -6.09686, 493.185, -74.851, 0.74 ) }
    dend_19 { pt3dadd( -6.03502, 493.712, -74.985, 0.74 ) }
    dend_19 { pt3dadd( -5.94558, 494.776, -75.2736, 0.37 ) }
    dend_19 { pt3dadd( -5.87479, 496.084, -75.6399, 1.18 ) }
    dend_19 { pt3dadd( -5.85595, 496.571, -75.7729, 1.18 ) }
    dend_19 { pt3dadd( -5.79924, 497.628, -76.0337, 0.88 ) }
    dend_19 { pt3dadd( -5.71288, 498.693, -76.2716, 0.59 ) }
    dend_19 { pt3dadd( -5.56543, 500.085, -76.5405, 0.88 ) }
    dend_19 { pt3dadd( -5.45102, 501.105, -76.7066, 1.11 ) }
    dend_19 { pt3dadd( -5.32019, 502.14, -76.8476, 1.11 ) }
    dend_19 { pt3dadd( -5.12593, 503.538, -77.0329, 0.52 ) }
    dend_19 { pt3dadd( -4.89384, 504.927, -77.2167, 0.44 ) }
    dend_19 { pt3dadd( -4.73546, 505.705, -77.3197, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.92783, 445.175, -63.24, 0.29 ) }
    dend_18 { pt3dadd( -7.06661, 446.305, -62.7714, 0.29 ) }
    dend_18 { pt3dadd( -7.18775, 447.535, -62.3286, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -7.25483, 448.247, -62.076, 0.66 ) }
    dend_18 { pt3dadd( -7.30977, 448.887, -61.8438, 0.37 ) }
    dend_18 { pt3dadd( -7.4031, 449.976, -61.4307, 0.22 ) }
    dend_18 { pt3dadd( -7.43258, 450.315, -61.2966, 0.66 ) }
    dend_18 { pt3dadd( -7.45413, 450.759, -61.1181, 0.66 ) }
    dend_18 { pt3dadd( -7.51516, 451.976, -60.6691, 0.37 ) }
    dend_18 { pt3dadd( -7.56867, 452.712, -60.4106, 0.37 ) }
    dend_18 { pt3dadd( -7.66154, 453.704, -60.0949, 0.59 ) }
    dend_18 { pt3dadd( -7.69947, 454.167, -59.9661, 0.37 ) }
    dend_18 { pt3dadd( -7.75441, 454.88, -59.7861, 0.29 ) }
    dend_18 { pt3dadd( -7.81922, 455.679, -59.6177, 0.74 ) }
    dend_18 { pt3dadd( -7.85716, 456.118, -59.55, 0.96 ) }
    dend_18 { pt3dadd( -7.91127, 456.698, -59.4674, 0.52 ) }
    dend_18 { pt3dadd( -8.00372, 457.516, -59.3566, 0.44 ) }
    dend_18 { pt3dadd( -8.08809, 458.275, -59.2343, 0.29 ) }
    dend_18 { pt3dadd( -8.19011, 459.285, -59.0239, 0.29 ) }
    dend_18 { pt3dadd( -8.25308, 459.922, -58.8508, 0.66 ) }
    dend_18 { pt3dadd( -8.30796, 460.596, -58.6431, 0.81 ) }
    dend_18 { pt3dadd( -8.36585, 461.725, -58.27, 0.29 ) }
    dend_18 { pt3dadd( -8.38544, 463.15, -57.7775, 0.29 ) }
    dend_18 { pt3dadd( -8.35698, 464.136, -57.4319, 0.29 ) }
    dend_18 { pt3dadd( -8.29769, 464.992, -57.1504, 0.88 ) }
    dend_18 { pt3dadd( -8.23607, 465.642, -56.9632, 0.88 ) }
    dend_18 { pt3dadd( -8.14775, 466.409, -56.7706, 0.29 ) }
    dend_18 { pt3dadd( -7.99894, 467.36, -56.5955, 0.29 ) }
    dend_18 { pt3dadd( -7.94816, 467.657, -56.5658, 0.52 ) }
    dend_18 { pt3dadd( -7.74653, 468.708, -56.5242, 0.22 ) }
    dend_18 { pt3dadd( -7.59392, 469.339, -56.5308, 0.52 ) }
    dend_18 { pt3dadd( -7.42739, 469.919, -56.5441, 0.52 ) }
    dend_18 { pt3dadd( -6.90697, 471.441, -56.588, 0.44 ) }
    dend_18 { pt3dadd( -6.58807, 472.249, -56.6194, 0.96 ) }
    dend_18 { pt3dadd( -6.37821, 472.723, -56.6405, 0.96 ) }
    dend_18 { pt3dadd( -5.86248, 473.776, -56.681, 0.29 ) }
    dend_18 { pt3dadd( -5.4101, 474.634, -56.7127, 0.22 ) }
    dend_18 { pt3dadd( -4.98723, 475.408, -56.7332, 0.81 ) }
    dend_18 { pt3dadd( -4.48465, 476.31, -56.7326, 0.29 ) }
    dend_18 { pt3dadd( -4.09431, 477.016, -56.7191, 0.29 ) }
    dend_18 { pt3dadd( -3.74387, 477.673, -56.69, 0.66 ) }
    dend_18 { pt3dadd( -3.60352, 477.945, -56.6641, 0.81 ) }
    dend_18 { pt3dadd( -3.18845, 478.782, -56.5537, 0.29 ) }
    dend_18 { pt3dadd( -2.94255, 479.312, -56.4646, 0.29 ) }
    dend_18 { pt3dadd( -2.77399, 479.704, -56.3862, 0.81 ) }
    dend_18 { pt3dadd( -2.60943, 480.126, -56.3006, 0.81 ) }
    dend_18 { pt3dadd( -2.30707, 480.991, -56.1549, 0.29 ) }
    dend_18 { pt3dadd( -1.9759, 482.062, -56.0084, 0.29 ) }
    dend_18 { pt3dadd( -1.75959, 482.856, -55.9231, 0.88 ) }
    dend_18 { pt3dadd( -1.65281, 483.28, -55.8894, 1.03 ) }
    dend_18 { pt3dadd( -1.49043, 483.943, -55.8496, 0.74 ) }
    dend_18 { pt3dadd( -1.04612, 485.812, -55.7656, 0.22 ) }
    dend_18 { pt3dadd( -0.871366, 486.531, -55.7418, 0.96 ) }
    dend_18 { pt3dadd( -0.716519, 487.102, -55.7155, 1.11 ) }
    dend_18 { pt3dadd( -0.380258, 488.3, -55.6465, 0.29 ) }
    dend_18 { pt3dadd( -0.189107, 488.958, -55.6, 0.59 ) }
    dend_18 { pt3dadd( -0.0556371, 489.444, -55.5449, 0.59 ) }
    dend_18 { pt3dadd( 0.14223, 490.199, -55.4235, 0.59 ) }
    dend_18 { pt3dadd( 0.378875, 491.161, -55.2244, 0.29 ) }
    dend_18 { pt3dadd( 0.544095, 491.864, -55.0494, 0.44 ) }
    dend_18 { pt3dadd( 0.741131, 492.966, -54.7123, 0.29 ) }
    dend_18 { pt3dadd( 0.895508, 494.127, -54.3268, 0.81 ) }
    dend_18 { pt3dadd( 0.932807, 494.451, -54.211, 0.81 ) }
    dend_18 { pt3dadd( 0.971886, 494.875, -54.0557, 1.03 ) }
    dend_18 { pt3dadd( 1.03252, 495.538, -53.8088, 0.37 ) }
    dend_18 { pt3dadd( 1.15908, 496.675, -53.3715, 0.29 ) }
    dend_18 { pt3dadd( 1.24131, 497.302, -53.15, 0.29 ) }
    dend_18 { pt3dadd( 1.41418, 498.501, -52.7886, 0.29 ) }
    dend_18 { pt3dadd( 1.50086, 499.113, -52.6502, 0.81 ) }
    dend_18 { pt3dadd( 1.63689, 500.308, -52.4358, 0.37 ) }
    dend_18 { pt3dadd( 1.72355, 501.262, -52.2509, 0.29 ) }
    dend_18 { pt3dadd( 1.82992, 502.203, -52.0431, 1.11 ) }
    dend_18 { pt3dadd( 1.87853, 502.805, -51.8774, 0.66 ) }
    dend_18 { pt3dadd( 1.8784, 503.975, -51.4632, 0.29 ) }
    dend_18 { pt3dadd( 1.8046, 505.034, -50.974, 0.29 ) }
    dend_18 { pt3dadd( 1.65336, 506.171, -50.2879, 0.29 ) }
    dend_18 { pt3dadd( 1.57438, 506.81, -49.7947, 0.29 ) }
    dend_18 { pt3dadd( 1.50239, 507.342, -49.3323, 0.29 ) }
    dend_18 { pt3dadd( 1.37437, 508.085, -48.6516, 0.81 ) }
    dend_18 { pt3dadd( 1.26684, 508.506, -48.2435, 1.11 ) }
    dend_18 { pt3dadd( 1.12814, 509.052, -47.7594, 0.88 ) }
    dend_18 { pt3dadd( 0.75854, 510.664, -46.5576, 0.29 ) }
    dend_18 { pt3dadd( 0.637908, 511.313, -46.1149, 0.29 ) }
    dend_18 { pt3dadd( 0.551327, 512.019, -45.6791, 0.74 ) }
    dend_18 { pt3dadd( 0.439842, 513.09, -45.1043, 0.29 ) }
    dend_18 { pt3dadd( 0.325612, 513.995, -44.6692, 0.29 ) }
    dend_18 { pt3dadd( 0.187002, 515.007, -44.2339, 0.66 ) }
    dend_18 { pt3dadd( 0.136353, 515.466, -44.0755, 0.88 ) }
    dend_18 { pt3dadd( 0.136237, 516.51, -43.7455, 0.22 ) }
    dend_18 { pt3dadd( 0.207822, 517.207, -43.5627, 0.37 ) }
    dend_18 { pt3dadd( 0.217072, 517.276, -43.5531, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -80.58, -39.8774, -55.5334, 0.22 ) }
    dend_44 { pt3dadd( -81.918, -39.4119, -56.1953, 0.22 ) }
    dend_44 { pt3dadd( -82.4934, -39.2548, -56.4626, 0.22 ) }
    dend_44 { pt3dadd( -83.351, -39.0825, -56.8366, 0.37 ) }
    dend_44 { pt3dadd( -84.2322, -38.9492, -57.204, 0.22 ) }
    dend_44 { pt3dadd( -85.3527, -38.8237, -57.6543, 0.22 ) }
    dend_44 { pt3dadd( -86.5357, -38.7128, -58.1218, 0.81 ) }
    dend_44 { pt3dadd( -87.104, -38.6899, -58.345, 0.81 ) }
    dend_44 { pt3dadd( -87.8701, -38.7008, -58.6422, 0.52 ) }
    dend_44 { pt3dadd( -88.5509, -38.7478, -58.9066, 0.29 ) }
    dend_44 { pt3dadd( -89.1187, -38.8018, -59.1306, 0.66 ) }
    dend_44 { pt3dadd( -89.9207, -38.8841, -59.4845, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -90.5373, -38.9298, -59.7921, 0.29 ) }
    dend_44 { pt3dadd( -91.3825, -38.9822, -60.2606, 0.29 ) }
    dend_44 { pt3dadd( -92.1963, -39.0137, -60.7633, 0.96 ) }
    dend_44 { pt3dadd( -92.9452, -39.0602, -61.322, 1.03 ) }
    dend_44 { pt3dadd( -93.9575, -39.153, -62.1678, 0.22 ) }
    dend_44 { pt3dadd( -94.2119, -39.1863, -62.3976, 0.22 ) }
    dend_44 { pt3dadd( -94.6911, -39.269, -62.8406, 0.88 ) }
    dend_44 { pt3dadd( -95.1043, -39.38, -63.2242, 0.88 ) }
    dend_44 { pt3dadd( -96.2139, -39.7926, -64.2926, 0.22 ) }
    dend_44 { pt3dadd( -96.7799, -40.0675, -64.8815, 0.22 ) }
    dend_44 { pt3dadd( -97.2775, -40.3586, -65.397, 0.22 ) }
    dend_44 { pt3dadd( -97.7109, -40.6593, -65.8362, 0.88 ) }
    dend_44 { pt3dadd( -98.1882, -41.0906, -66.3075, 1.11 ) }
    dend_44 { pt3dadd( -98.7097, -41.7331, -66.8325, 0.88 ) }
    dend_44 { pt3dadd( -99.3511, -42.8351, -67.4749, 0.29 ) }
    dend_44 { pt3dadd( -99.7255, -43.7855, -67.9102, 1.18 ) }
    dend_44 { pt3dadd( -99.8914, -44.3086, -68.1285, 1.33 ) }
    dend_44 { pt3dadd( -100.208, -45.582, -68.6189, 0.29 ) }
    dend_44 { pt3dadd( -100.378, -46.5671, -68.9286, 0.22 ) }
    dend_44 { pt3dadd( -100.481, -47.465, -69.0881, 0.22 ) }
    dend_44 { pt3dadd( -100.523, -48.6585, -69.1397, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -80.58, -39.8774, -55.5334, 0.66 ) }
    dend_41 { pt3dadd( -82.426, -38.5651, -53.906, 0.66 ) }
    dend_41 { pt3dadd( -82.9836, -38.0912, -53.3822, 0.66 ) }
    dend_41 { pt3dadd( -83.6242, -37.4415, -52.7448, 0.81 ) }
    dend_41 { pt3dadd( -84.1662, -36.8457, -52.2214, 0.81 ) }
    dend_41 { pt3dadd( -85.5077, -35.3938, -51.0299, 0.96 ) }
    dend_41 { pt3dadd( -86.5897, -34.2592, -50.1504, 1.33 ) }
    dend_41 { pt3dadd( -87.2522, -33.5143, -49.7038, 0.44 ) }
    dend_41 { pt3dadd( -87.8351, -32.8364, -49.3679, 0.44 ) }
    dend_41 { pt3dadd( -88.375, -32.1997, -49.1729, 0.37 ) }
    dend_41 { pt3dadd( -89.1985, -31.2425, -49.1756, 0.37 ) }
    dend_41 { pt3dadd( -89.558, -30.8895, -49.3345, 0.37 ) }
    dend_41 { pt3dadd( -90.2087, -30.3418, -49.7505, 0.29 ) }
    dend_41 { pt3dadd( -90.9174, -29.8165, -50.2086, 0.66 ) }
    dend_41 { pt3dadd( -91.4663, -29.4248, -50.4812, 0.88 ) }
    dend_41 { pt3dadd( -92.1348, -28.97, -50.7123, 0.88 ) }
    dend_41 { pt3dadd( -93.1254, -28.3946, -50.8731, 0.66 ) }
    dend_41 { pt3dadd( -93.7663, -28.1118, -50.814, 0.66 ) }
    dend_41 { pt3dadd( -94.6277, -27.8084, -50.5754, 0.81 ) }
    dend_41 { pt3dadd( -96.8172, -27.1016, -49.694, 0.81 ) }
    dend_41 { pt3dadd( -97.7628, -26.7717, -49.2003, 0.59 ) }
    dend_41 { pt3dadd( -98.775, -26.3505, -48.5593, 0.44 ) }
    dend_41 { pt3dadd( -99.7848, -25.8025, -47.8216, 0.44 ) }
    dend_41 { pt3dadd( -100.326, -25.4203, -47.4116, 0.37 ) }
    dend_41 { pt3dadd( -100.877, -24.8792, -47.0322, 0.37 ) }
    dend_41 { pt3dadd( -101.445, -24.009, -46.7735, 0.66 ) }
    dend_41 { pt3dadd( -101.838, -23.2327, -46.728, 0.66 ) }
    dend_41 { pt3dadd( -102.27, -22.3286, -46.8921, 0.44 ) }
    dend_41 { pt3dadd( -102.645, -21.705, -47.1739, 0.66 ) }
    dend_41 { pt3dadd( -103.048, -21.2677, -47.5163, 0.66 ) }
    dend_41 { pt3dadd( -103.705, -20.809, -48.0485, 0.66 ) }
    dend_41 { pt3dadd( -105.319, -20.0351, -49.2412, 0.37 ) }
    dend_41 { pt3dadd( -105.965, -19.7961, -49.6668, 0.66 ) }
    dend_41 { pt3dadd( -106.926, -19.5137, -50.2449, 0.66 ) }
    dend_41 { pt3dadd( -107.741, -19.3243, -50.6649, 0.44 ) }
    dend_41 { pt3dadd( -108.521, -19.1784, -50.9957, 0.37 ) }
    dend_41 { pt3dadd( -109.152, -19.074, -51.1615, 0.59 ) }
    dend_41 { pt3dadd( -110.163, -18.8984, -51.261, 0.44 ) }
    dend_41 { pt3dadd( -110.876, -18.7784, -51.2952, 0.37 ) }
    dend_41 { pt3dadd( -111.825, -18.6143, -51.284, 0.37 ) }
    dend_41 { pt3dadd( -113.054, -18.4195, -51.2306, 0.37 ) }
    dend_41 { pt3dadd( -114.675, -18.1749, -51.1194, 0.37 ) }
    dend_41 { pt3dadd( -115.803, -17.9997, -51.0165, 0.29 ) }
    dend_41 { pt3dadd( -116.407, -17.8911, -50.9608, 0.52 ) }
    dend_41 { pt3dadd( -117.668, -17.581, -50.8711, 0.29 ) }
    dend_41 { pt3dadd( -118.704, -17.2793, -50.7928, 0.37 ) }
    dend_41 { pt3dadd( -119.352, -17.0538, -50.7611, 0.37 ) }
    dend_41 { pt3dadd( -120.006, -16.7812, -50.8131, 0.96 ) }
    dend_41 { pt3dadd( -120.809, -16.37, -50.9526, 0.66 ) }
    dend_41 { pt3dadd( -121.31, -16.0543, -51.0726, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.73546, 505.705, -77.3197, 0.52 ) }
    dend_21 { pt3dadd( -4.67348, 506.84, -77.5284, 0.52 ) }
    dend_21 { pt3dadd( -4.64028, 507.719, -77.6812, 1.03 ) }
    dend_21 { pt3dadd( -4.621, 508.43, -77.801, 1.03 ) }
    dend_21 { pt3dadd( -4.59798, 509.805, -78.0389, 1.11 ) }
    dend_21 { pt3dadd( -4.56188, 511.393, -78.303, 0.29 ) }
    dend_21 { pt3dadd( -4.51944, 512.863, -78.555, 0.29 ) }
    dend_21 { pt3dadd( -4.47065, 514.236, -78.813, 0.96 ) }
    dend_21 { pt3dadd( -4.44472, 514.865, -78.9217, 1.11 ) }
    dend_21 { pt3dadd( -4.38415, 516.305, -79.1408, 0.66 ) }
    dend_21 { pt3dadd( -4.33401, 517.919, -79.3478, 0.52 ) }
    dend_21 { pt3dadd( -4.31093, 519.356, -79.4957, 0.52 ) }
    dend_21 { pt3dadd( -4.29346, 520.853, -79.6152, 0.52 ) }
    dend_21 { pt3dadd( -4.29302, 521.981, -79.6723, 0.81 ) }
    dend_21 { pt3dadd( -4.31505, 523.831, -79.734, 1.11 ) }
    dend_21 { pt3dadd( -4.33663, 524.858, -79.7497, 1.33 ) }
    dend_21 { pt3dadd( -4.42629, 527.449, -79.7755, 0.44 ) }
    dend_21 { pt3dadd( -4.47374, 528.645, -79.7823, 0.44 ) }
    dend_21 { pt3dadd( -4.54187, 530.714, -79.8144, 0.37 ) }
    dend_21 { pt3dadd( -4.56502, 531.957, -79.8526, 0.96 ) }
    dend_21 { pt3dadd( -4.56083, 533.269, -79.9253, 1.25 ) }
    dend_21 { pt3dadd( -4.53439, 534.138, -79.9946, 1.25 ) }
    dend_21 { pt3dadd( -4.47022, 535.082, -80.0934, 1.03 ) }
    dend_21 { pt3dadd( -4.40204, 535.808, -80.1807, 0.74 ) }
    dend_21 { pt3dadd( -4.28555, 536.85, -80.3129, 0.52 ) }
    dend_21 { pt3dadd( -4.18724, 537.809, -80.42, 0.37 ) }
    dend_21 { pt3dadd( -4.09057, 538.829, -80.5224, 0.37 ) }
    dend_21 { pt3dadd( -3.98144, 540.148, -80.63, 0.37 ) }
    dend_21 { pt3dadd( -3.87032, 541.831, -80.7522, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( -3.82657, 542.764, -80.8141, 0.66 ) }
    dend_21 { pt3dadd( -3.76352, 544.33, -80.9299, 0.66 ) }
    dend_21 { pt3dadd( -3.71731, 545.678, -81.0295, 0.29 ) }
    dend_21 { pt3dadd( -3.67866, 546.883, -81.131, 0.29 ) }
    dend_21 { pt3dadd( -3.65606, 547.728, -81.2075, 0.81 ) }
    dend_21 { pt3dadd( -3.62067, 549.216, -81.3587, 1.03 ) }
    dend_21 { pt3dadd( -3.597, 550.419, -81.4877, 1.18 ) }
    dend_21 { pt3dadd( -3.58002, 551.331, -81.5937, 0.81 ) }
    dend_21 { pt3dadd( -3.56591, 552.583, -81.7537, 0.29 ) }
    dend_21 { pt3dadd( -3.55517, 553.692, -81.8972, 0.29 ) }
    dend_21 { pt3dadd( -3.54161, 554.822, -82.0441, 0.96 ) }
    dend_21 { pt3dadd( -3.5295, 556.106, -82.2084, 1.11 ) }
    dend_21 { pt3dadd( -3.50947, 557.071, -82.3255, 1.11 ) }
    dend_21 { pt3dadd( -3.45055, 558.656, -82.522, 0.74 ) }
    dend_21 { pt3dadd( -3.3799, 560.025, -82.6811, 0.44 ) }
    dend_21 { pt3dadd( -3.284, 561.402, -82.8306, 0.88 ) }
    dend_21 { pt3dadd( -3.20595, 562.398, -82.9302, 0.88 ) }
    dend_21 { pt3dadd( -3.07864, 563.811, -83.0729, 0.52 ) }
    dend_21 { pt3dadd( -2.92632, 565.304, -83.2271, 0.52 ) }
    dend_21 { pt3dadd( -2.75655, 566.798, -83.3843, 0.52 ) }
    dend_21 { pt3dadd( -2.5934, 568.369, -83.5524, 0.52 ) }
    dend_21 { pt3dadd( -2.48645, 569.659, -83.6867, 1.11 ) }
    dend_21 { pt3dadd( -2.44055, 570.318, -83.7578, 1.11 ) }
    dend_21 { pt3dadd( -2.38199, 571.559, -83.8893, 0.81 ) }
    dend_21 { pt3dadd( -2.317, 573.237, -84.0707, 0.29 ) }
    dend_21 { pt3dadd( -2.27246, 574.827, -84.2505, 0.29 ) }
    dend_21 { pt3dadd( -2.25831, 575.753, -84.3543, 0.96 ) }
    dend_21 { pt3dadd( -2.25604, 576.805, -84.4581, 1.11 ) }
    dend_21 { pt3dadd( -2.28527, 577.915, -84.545, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.73546, 505.705, -77.3197, 0.44 ) }
    dend_20 { pt3dadd( -3.50922, 504.463, -76.8166, 0.44 ) }
    dend_20 { pt3dadd( -2.65731, 503.6, -76.4671, 0.37 ) }
    dend_20 { pt3dadd( -1.28687, 502.211, -75.9048, 0.29 ) }
    dend_20 { pt3dadd( -0.631913, 501.548, -75.636, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -121.31, -16.0543, -51.0726, 0.22 ) }
    dend_43 { pt3dadd( -120.303, -15.3627, -50.7737, 0.22 ) }
    dend_43 { pt3dadd( -119.589, -14.8722, -50.5617, 0.22 ) }
    dend_43 { pt3dadd( -118.881, -14.3859, -50.3515, 0.59 ) }
    dend_43 { pt3dadd( -118.401, -14.0564, -50.2091, 0.59 ) }
    dend_43 { pt3dadd( -117.772, -13.6243, -50.0223, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -121.31, -16.0543, -51.0726, 0.37 ) }
    dend_42 { pt3dadd( -122.083, -14.4703, -51.6822, 0.37 ) }
    dend_42 { pt3dadd( -122.747, -13.2725, -52.1815, 0.37 ) }
    dend_42 { pt3dadd( -123.463, -12.1206, -52.7014, 0.22 ) }
    dend_42 { pt3dadd( -124.23, -10.8865, -53.2584, 0.22 ) }
    dend_42 { pt3dadd( -124.782, -9.99908, -53.6589, 0.22 ) }
    dend_42 { pt3dadd( -125.373, -9.04722, -54.0886, 0.22 ) }
    dend_42 { pt3dadd( -125.589, -8.7535, -54.2343, 0.52 ) }
    dend_42 { pt3dadd( -126.112, -8.17868, -54.566, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.28527, 577.915, -84.545, 0.22 ) }
    dend_23 { pt3dadd( -2.48627, 579.886, -86.6261, 0.22 ) }
    dend_23 { pt3dadd( -2.58141, 580.244, -86.9775, 0.29 ) }
    dend_23 { pt3dadd( -2.84841, 580.873, -87.5824, 0.29 ) }
    dend_23 { pt3dadd( -2.99352, 581.063, -87.7827, 0.66 ) }
    dend_23 { pt3dadd( -3.27807, 581.329, -88.0838, 0.66 ) }
    dend_23 { pt3dadd( -3.64948, 581.664, -88.4439, 0.29 ) }
    dend_23 { pt3dadd( -4.23878, 582.071, -88.7507, 0.88 ) }
    dend_23 { pt3dadd( -4.51054, 582.258, -88.8804, 0.88 ) }
    dend_23 { pt3dadd( -5.40122, 582.9, -89.279, 0.29 ) }
    dend_23 { pt3dadd( -5.73977, 583.192, -89.4288, 0.29 ) }
    dend_23 { pt3dadd( -6.14949, 583.681, -89.6102, 0.29 ) }
    dend_23 { pt3dadd( -6.50558, 584.311, -89.8167, 0.66 ) }
    dend_23 { pt3dadd( -6.77193, 584.924, -90.0087, 0.22 ) }
    dend_23 { pt3dadd( -6.96279, 585.417, -90.1544, 0.22 ) }
    dend_23 { pt3dadd( -7.16442, 585.924, -90.294, 0.22 ) }
    dend_23 { pt3dadd( -7.57473, 586.825, -90.5416, 0.96 ) }
    dend_23 { pt3dadd( -8.13659, 587.84, -90.8484, 1.33 ) }
    dend_23 { pt3dadd( -8.82393, 588.923, -91.2102, 0.29 ) }
    dend_23 { pt3dadd( -9.03957, 589.25, -91.3264, 0.29 ) }
    dend_23 { pt3dadd( -9.51913, 589.937, -91.5748, 0.29 ) }
    dend_23 { pt3dadd( -9.92724, 590.46, -91.7704, 0.29 ) }
    dend_23 { pt3dadd( -10.4121, 590.952, -91.9471, 0.96 ) }
    dend_23 { pt3dadd( -10.7018, 591.177, -91.9951, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.28527, 577.915, -84.545, 0.29 ) }
    dend_22 { pt3dadd( -2.1353, 579.803, -84.5662, 0.29 ) }
    dend_22 { pt3dadd( -2.02361, 581.227, -84.5817, 0.29 ) }
    dend_22 { pt3dadd( -1.88794, 583.253, -84.605, 0.29 ) }
    dend_22 { pt3dadd( -1.7918, 584.961, -84.626, 0.74 ) }
    dend_22 { pt3dadd( -1.73585, 586.167, -84.6417, 1.03 ) }
    dend_22 { pt3dadd( -1.70345, 587.001, -84.6531, 1.03 ) }
    dend_22 { pt3dadd( -1.63475, 589.046, -84.677, 0.29 ) }
    dend_22 { pt3dadd( -1.55567, 590.882, -84.701, 0.29 ) }
    dend_22 { pt3dadd( -1.50983, 591.796, -84.7107, 0.96 ) }
    dend_22 { pt3dadd( -1.45881, 592.711, -84.7185, 1.18 ) }
    dend_22 { pt3dadd( -1.37972, 594.135, -84.735, 0.59 ) }
    dend_22 { pt3dadd( -1.29994, 595.478, -84.7439, 0.37 ) }
    dend_22 { pt3dadd( -1.16256, 597.434, -84.7472, 0.37 ) }
    dend_22 { pt3dadd( -1.02895, 599.022, -84.743, 0.29 ) }
    dend_22 { pt3dadd( -0.858309, 601.125, -84.734, 0.29 ) }
    dend_22 { pt3dadd( -0.759243, 602.617, -84.7195, 0.88 ) }
    dend_22 { pt3dadd( -0.729609, 603.205, -84.7134, 1.03 ) }
    dend_22 { pt3dadd( -0.704343, 604.173, -84.7063, 1.03 ) }
    dend_22 { pt3dadd( -0.690068, 605.458, -84.7008, 1.03 ) }
    dend_22 { pt3dadd( -0.670915, 607.207, -84.6998, 0.44 ) }
    dend_22 { pt3dadd( -0.630956, 608.892, -84.7011, 0.74 ) }
    dend_22 { pt3dadd( -0.617367, 609.438, -84.7038, 0.74 ) }
    dend_22 { pt3dadd( -0.588926, 610.775, -84.7252, 0.44 ) }
    dend_22 { pt3dadd( -0.581133, 611.56, -84.7401, 0.37 ) }
    dend_22 { pt3dadd( -0.560701, 612.499, -84.7593, 0.74 ) }
    dend_22 { pt3dadd( -0.518441, 613.284, -84.7756, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( -0.406511, 614.62, -84.8196, 0.29 ) }
    dend_22 { pt3dadd( -0.327249, 615.386, -84.8399, 0.29 ) }
    dend_22 { pt3dadd( -0.185142, 616.544, -84.8682, 0.81 ) }
    dend_22 { pt3dadd( -0.124975, 616.963, -84.8782, 0.81 ) }
    dend_22 { pt3dadd( 0.0027585, 617.794, -84.9048, 0.37 ) }
    dend_22 { pt3dadd( 0.17123, 619.063, -84.9497, 0.37 ) }
    dend_22 { pt3dadd( 0.269425, 619.899, -84.9849, 1.03 ) }
    dend_22 { pt3dadd( 0.321001, 620.638, -85.0218, 1.03 ) }
    dend_22 { pt3dadd( 0.36697, 622.092, -85.1008, 1.03 ) }
    dend_22 { pt3dadd( 0.354776, 623.442, -85.1804, 0.37 ) }
    dend_22 { pt3dadd( 0.263585, 625.279, -85.281, 0.29 ) }
    dend_22 { pt3dadd( 0.179418, 626.291, -85.3299, 0.29 ) }
    dend_22 { pt3dadd( 0.0321896, 627.661, -85.3837, 0.88 ) }
    dend_22 { pt3dadd( -0.0713577, 628.498, -85.4057, 1.25 ) }
    dend_22 { pt3dadd( -0.180131, 629.238, -85.4123, 1.25 ) }
    dend_22 { pt3dadd( -0.349164, 630.413, -85.3992, 0.74 ) }
    dend_22 { pt3dadd( -0.479131, 631.411, -85.3765, 0.74 ) }
    dend_22 { pt3dadd( -0.697905, 633.238, -85.317, 1.25 ) }
    dend_22 { pt3dadd( -0.798241, 634.24, -85.2845, 1.25 ) }
    dend_22 { pt3dadd( -0.881006, 635.121, -85.2628, 0.52 ) }
    dend_22 { pt3dadd( -0.980363, 636.292, -85.2423, 0.29 ) }
    dend_22 { pt3dadd( -1.05338, 637.212, -85.2374, 0.52 ) }
    dend_22 { pt3dadd( -1.12139, 638.126, -85.2397, 0.81 ) }
    dend_22 { pt3dadd( -1.29147, 640.378, -85.2732, 0.37 ) }
    dend_22 { pt3dadd( -1.42378, 642.043, -85.3048, 0.37 ) }
    dend_22 { pt3dadd( -1.45687, 642.466, -85.3147, 1.03 ) }
    dend_22 { pt3dadd( -1.52892, 643.31, -85.3351, 1.4 ) }
    dend_22 { pt3dadd( -1.57926, 643.88, -85.3489, 1.4 ) }
    dend_22 { pt3dadd( -1.70657, 645.467, -85.3865, 0.52 ) }
    dend_22 { pt3dadd( -1.80431, 646.803, -85.4172, 0.52 ) }
    dend_22 { pt3dadd( -1.88664, 648.148, -85.4468, 0.81 ) }
    dend_22 { pt3dadd( -1.93228, 649.143, -85.4674, 0.81 ) }
    dend_22 { pt3dadd( -1.96433, 650.146, -85.487, 0.81 ) }
    dend_22 { pt3dadd( -1.99124, 651.365, -85.5098, 0.44 ) }
    dend_22 { pt3dadd( -1.99722, 652.197, -85.5242, 0.44 ) }
    dend_22 { pt3dadd( -1.9906, 653.445, -85.5446, 0.81 ) }
    dend_22 { pt3dadd( -1.97862, 654.731, -85.5651, 0.88 ) }
    dend_22 { pt3dadd( -1.95099, 656.139, -85.5864, 1.18 ) }
    dend_22 { pt3dadd( -1.92498, 657.393, -85.6052, 1.4 ) }
    dend_22 { pt3dadd( -1.91281, 657.997, -85.6143, 1.4 ) }
    dend_22 { pt3dadd( -1.8857, 658.902, -85.6346, 0.88 ) }
    dend_22 { pt3dadd( -1.78369, 661.237, -85.7011, 0.37 ) }
    dend_22 { pt3dadd( -1.71598, 662.442, -85.7417, 0.37 ) }
    dend_22 { pt3dadd( -1.65727, 663.275, -85.7726, 0.66 ) }
    dend_22 { pt3dadd( -1.58802, 664.105, -85.8029, 0.96 ) }
    dend_22 { pt3dadd( -1.49427, 665.102, -85.8362, 0.37 ) }
    dend_22 { pt3dadd( -1.41378, 665.894, -85.8615, 0.74 ) }
    dend_22 { pt3dadd( -1.26533, 667.247, -85.921, 0.37 ) }
    dend_22 { pt3dadd( -1.14272, 668.426, -85.9798, 0.81 ) }
    dend_22 { pt3dadd( -1.03598, 669.51, -86.0426, 1.03 ) }
    dend_22 { pt3dadd( -0.845584, 671.628, -86.2087, 0.22 ) }
    dend_22 { pt3dadd( -0.723026, 673.103, -86.3435, 0.22 ) }
    dend_22 { pt3dadd( -0.583732, 674.818, -86.5245, 0.22 ) }
    dend_22 { pt3dadd( -0.46004, 676.401, -86.7208, 1.25 ) }
    dend_22 { pt3dadd( -0.400935, 677.175, -86.8342, 1.33 ) }
    dend_22 { pt3dadd( -0.309631, 678.492, -87.0491, 0.44 ) }
    dend_22 { pt3dadd( -0.2338, 679.602, -87.2629, 0.44 ) }
    dend_22 { pt3dadd( -0.120894, 680.963, -87.5443, 0.44 ) }
    dend_22 { pt3dadd( -0.0151789, 682.051, -87.7774, 0.37 ) }
    dend_22 { pt3dadd( 0.14788, 683.658, -88.1226, 0.37 ) }
    dend_22 { pt3dadd( 0.237555, 684.48, -88.2834, 0.37 ) }
    dend_22 { pt3dadd( 0.363101, 685.687, -88.4951, 0.74 ) }
    dend_22 { pt3dadd( 0.445694, 686.58, -88.6453, 1.03 ) }
    dend_22 { pt3dadd( 0.522158, 687.519, -88.7835, 0.74 ) }
    dend_22 { pt3dadd( 0.580987, 688.288, -88.8676, 0.29 ) }
    dend_22 { pt3dadd( 0.661786, 689.443, -88.9528, 0.29 ) }
    dend_22 { pt3dadd( 0.70085, 690.106, -88.9829, 0.66 ) }
    dend_22 { pt3dadd( 0.749322, 691.04, -89.0023, 0.66 ) }
    dend_22 { pt3dadd( 0.80475, 692.375, -89.0296, 0.22 ) }
    dend_22 { pt3dadd( 0.846095, 693.382, -89.0431, 0.52 ) }
    dend_22 { pt3dadd( 0.88075, 694.085, -89.0529, 0.52 ) }
    dend_22 { pt3dadd( 1.00659, 696.514, -89.0712, 0.22 ) }
    dend_22 { pt3dadd( 1.10534, 697.886, -89.056, 0.59 ) }
    dend_22 { pt3dadd( 1.1476, 698.387, -89.0424, 0.59 ) }
    dend_22 { pt3dadd( 1.27024, 699.653, -88.9881, 0.22 ) }
    dend_22 { pt3dadd( 1.35539, 700.469, -88.9467, 0.81 ) }
    dend_22 { pt3dadd( 1.42127, 701.062, -88.9133, 0.81 ) }
    dend_22 { pt3dadd( 1.61926, 702.631, -88.824, 0.22 ) }
    dend_22 { pt3dadd( 1.70726, 703.286, -88.7907, 0.59 ) }
    dend_22 { pt3dadd( 1.76292, 703.649, -88.7763, 0.59 ) }
    dend_22 { pt3dadd( 2.13345, 706.078, -88.721, 0.22 ) }
    dend_22 { pt3dadd( 2.23763, 706.841, -88.7132, 0.22 ) }
    dend_22 { pt3dadd( 2.39575, 708.158, -88.7203, 0.74 ) }
    dend_22 { pt3dadd( 2.45065, 708.779, -88.7321, 0.81 ) }
    dend_22 { pt3dadd( 2.51274, 709.69, -88.7481, 0.81 ) }
    dend_22 { pt3dadd( 2.59148, 711.266, -88.772, 0.22 ) }
    dend_22 { pt3dadd( 2.64705, 712.85, -88.7923, 0.22 ) }
    dend_22 { pt3dadd( 2.66947, 713.848, -88.8026, 0.22 ) }
    dend_22 { pt3dadd( 2.67865, 715.111, -88.8132, 0.81 ) }
    dend_22 { pt3dadd( 2.67937, 715.453, -88.8153, 0.81 ) }
    dend_22 { pt3dadd( 2.70463, 717.53, -88.8366, 0.22 ) }
    dend_22 { pt3dadd( 2.70856, 717.635, -88.8386, 0.52 ) }
    dend_22 { pt3dadd( 2.87602, 719.993, -88.9083, 0.29 ) }
    dend_22 { pt3dadd( 3.00525, 721.319, -88.9595, 0.88 ) }
    dend_22 { pt3dadd( 3.09652, 722.075, -88.9963, 0.88 ) }
    dend_22 { pt3dadd( 3.26652, 723.438, -89.0725, 0.22 ) }
    dend_22 { pt3dadd( 3.36563, 724.306, -89.1253, 0.22 ) }
    dend_22 { pt3dadd( 3.48735, 725.323, -89.1848, 0.96 ) }
    dend_22 { pt3dadd( 3.5407, 725.743, -89.2079, 0.96 ) }
    dend_22 { pt3dadd( 3.7627, 727.425, -89.2879, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( 3.87792, 728.421, -89.3256, 0.22 ) }
    dend_22 { pt3dadd( 4.02578, 729.748, -89.355, 0.88 ) }
    dend_22 { pt3dadd( 4.16721, 731.087, -89.3722, 0.22 ) }
    dend_22 { pt3dadd( 4.29645, 732.431, -89.3836, 0.88 ) }
    dend_22 { pt3dadd( 4.34103, 732.85, -89.3868, 0.88 ) }
    dend_22 { pt3dadd( 4.51023, 734.247, -89.3958, 0.22 ) }
    dend_22 { pt3dadd( 4.66014, 735.271, -89.4001, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.7018, 591.177, -91.9951, 0.37 ) }
    dend_25 { pt3dadd( -11.2654, 592.361, -92.2274, 0.37 ) }
    dend_25 { pt3dadd( -11.4481, 592.758, -92.3098, 0.59 ) }
    dend_25 { pt3dadd( -11.7508, 593.493, -92.463, 0.59 ) }
    dend_25 { pt3dadd( -11.9754, 594.117, -92.6002, 0.29 ) }
    dend_25 { pt3dadd( -12.3446, 595.192, -92.8586, 0.29 ) }
    dend_25 { pt3dadd( -12.5434, 595.777, -93.0111, 0.29 ) }
    dend_25 { pt3dadd( -12.7178, 596.289, -93.1863, 0.52 ) }
    dend_25 { pt3dadd( -12.8789, 596.779, -93.3931, 0.22 ) }
    dend_25 { pt3dadd( -13.0837, 597.39, -93.7019, 0.52 ) }
    dend_25 { pt3dadd( -13.3241, 598.047, -94.0487, 0.81 ) }
    dend_25 { pt3dadd( -13.4973, 598.517, -94.2769, 0.81 ) }
    dend_25 { pt3dadd( -13.971, 599.687, -94.7963, 0.22 ) }
    dend_25 { pt3dadd( -14.2318, 600.275, -95.0334, 0.81 ) }
    dend_25 { pt3dadd( -14.5404, 600.914, -95.2536, 0.81 ) }
    dend_25 { pt3dadd( -14.9028, 601.641, -95.4439, 0.29 ) }
    dend_25 { pt3dadd( -15.4213, 602.667, -95.6548, 0.29 ) }
    dend_25 { pt3dadd( -15.8114, 603.39, -95.7888, 0.81 ) }
    dend_25 { pt3dadd( -16.1297, 603.917, -95.889, 1.11 ) }
    dend_25 { pt3dadd( -16.4278, 604.39, -96.0138, 0.74 ) }
    dend_25 { pt3dadd( -16.8158, 605.029, -96.2248, 0.29 ) }
    dend_25 { pt3dadd( -17.3512, 605.915, -96.5705, 0.29 ) }
    dend_25 { pt3dadd( -17.7878, 606.644, -96.866, 0.29 ) }
    dend_25 { pt3dadd( -18.3506, 607.653, -97.277, 1.03 ) }
    dend_25 { pt3dadd( -18.7866, 608.495, -97.605, 1.18 ) }
    dend_25 { pt3dadd( -19.5056, 609.977, -98.1566, 0.29 ) }
    dend_25 { pt3dadd( -19.7627, 610.559, -98.3602, 0.29 ) }
    dend_25 { pt3dadd( -20.1299, 611.498, -98.6657, 1.55 ) }
    dend_25 { pt3dadd( -20.3133, 612.001, -98.8232, 1.33 ) }
    dend_25 { pt3dadd( -20.5835, 612.714, -99.0378, 0.81 ) }
    dend_25 { pt3dadd( -20.8989, 613.463, -99.2703, 0.52 ) }
    dend_25 { pt3dadd( -21.3935, 614.564, -99.6341, 0.29 ) }
    dend_25 { pt3dadd( -21.8184, 615.506, -99.9575, 0.52 ) }
    dend_25 { pt3dadd( -21.9721, 615.864, -100.079, 0.81 ) }
    dend_25 { pt3dadd( -22.5601, 617.346, -100.557, 0.22 ) }
    dend_25 { pt3dadd( -22.9123, 618.372, -100.873, 0.22 ) }
    dend_25 { pt3dadd( -23.0659, 618.925, -101.015, 0.66 ) }
    dend_25 { pt3dadd( -23.1873, 619.53, -101.16, 0.66 ) }
    dend_25 { pt3dadd( -23.331, 620.691, -101.436, 0.22 ) }
    dend_25 { pt3dadd( -23.3622, 621.215, -101.592, 0.52 ) }
    dend_25 { pt3dadd( -23.3746, 621.665, -101.753, 0.52 ) }
    dend_25 { pt3dadd( -23.4436, 622.635, -102.119, 0.29 ) }
    dend_25 { pt3dadd( -23.5726, 623.659, -102.518, 0.96 ) }
    dend_25 { pt3dadd( -23.6694, 624.181, -102.72, 0.96 ) }
    dend_25 { pt3dadd( -24.0383, 625.794, -103.372, 0.22 ) }
    dend_25 { pt3dadd( -24.345, 626.939, -103.84, 0.96 ) }
    dend_25 { pt3dadd( -24.5968, 627.732, -104.168, 0.22 ) }
    dend_25 { pt3dadd( -24.7443, 628.106, -104.323, 0.59 ) }
    dend_25 { pt3dadd( -24.9437, 628.522, -104.47, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.7018, 591.177, -91.9951, 0.15 ) }
    dend_24 { pt3dadd( -12.2125, 590.866, -91.9809, 0.15 ) }
    dend_24 { pt3dadd( -12.6553, 590.783, -91.9629, 0.52 ) }
    dend_24 { pt3dadd( -12.9436, 590.731, -91.9472, 0.66 ) }
    dend_24 { pt3dadd( -13.9795, 590.547, -91.8834, 0.22 ) }
    dend_24 { pt3dadd( -14.907, 590.373, -91.8137, 0.22 ) }
    dend_24 { pt3dadd( -15.291, 590.295, -91.773, 0.59 ) }
    dend_24 { pt3dadd( -15.8649, 590.202, -91.6986, 0.66 ) }
    dend_24 { pt3dadd( -16.8774, 590.028, -91.5377, 0.29 ) }
    dend_24 { pt3dadd( -17.2406, 589.962, -91.4678, 0.81 ) }
    dend_24 { pt3dadd( -17.9628, 589.815, -91.3175, 0.96 ) }
    dend_24 { pt3dadd( -18.7872, 589.634, -91.1568, 0.15 ) }
    dend_24 { pt3dadd( -19.6376, 589.438, -91.0121, 0.15 ) }
    dend_24 { pt3dadd( -20.4691, 589.241, -90.8821, 0.15 ) }
    dend_24 { pt3dadd( -21.1593, 589.074, -90.7757, 0.88 ) }
    dend_24 { pt3dadd( -21.6639, 588.934, -90.702, 0.88 ) }
    dend_24 { pt3dadd( -23.0668, 588.536, -90.5201, 0.22 ) }
    dend_24 { pt3dadd( -23.6123, 588.371, -90.4607, 0.74 ) }
    dend_24 { pt3dadd( -24.3638, 588.116, -90.3782, 0.74 ) }
    dend_24 { pt3dadd( -25.2392, 587.781, -90.2885, 0.29 ) }
    dend_24 { pt3dadd( -25.985, 587.469, -90.2062, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_56 nseg = 7
    dend_28 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_7 nseg = 3
    dend_3 nseg = 9
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 7
    dend_16 nseg = 7
    dend_13 nseg = 5
    dend_11 nseg = 5
    dend_8 nseg = 3
    dend_5 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 7
    dend_36 nseg = 3
    dend_17 nseg = 9
    dend_15 nseg = 11
    dend_48 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 3
    dend_22 nseg = 7
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_SBC_194972ee43_0_0


