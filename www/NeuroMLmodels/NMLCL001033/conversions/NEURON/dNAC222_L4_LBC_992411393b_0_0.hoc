// Cell: dNAC222_L4_LBC_992411393b_0_0
/*
{
  "id" : "dNAC222_L4_LBC_992411393b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.1095, -11.685, 0.570337, 3.16052", "-4.63521, -10.5008, 0.513621, 5.45982", "-4.16092, -9.31666, 0.456904, 7.50899", "-3.68663, -8.13248, 0.400188, 11.3322", "-3.21235, -6.9483, 0.343471, 12.8266", "-2.73806, -5.76412, 0.286755, 14.3389", "-2.26377, -4.57994, 0.230039, 15.4162", "-1.78948, -3.39575, 0.173322, 16.3756", "-1.3152, -2.21157, 0.116606, 17.1148", "-0.840909, -1.02739, 0.0598891, 17.5087", "-0.366622, 0.156787, 0.00317258, 18.1754", "0.107666, 1.34097, -0.0535439, 18.705", "0.581953, 2.52515, -0.11026, 18.3379", "1.05624, 3.70933, -0.166977, 17.6777", "1.53053, 4.89351, -0.223693, 16.2317", "2.00482, 6.07769, -0.28041, 14.5638", "2.4791, 7.26187, -0.337126, 12.887", "2.95339, 8.44605, -0.393843, 11.0587", "3.42768, 9.63023, -0.450559, 9.10164", "3.90197, 10.8144, -0.507276, 6.70215", "4.37625, 11.9986, -0.563992, 4.57645" ]
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.68434, 6.30127, -20.3386, 1.67", "6.94548, 9.5296, -22.5151, 1.67", "8.42093, 13.3065, -25.0616, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "7.73434, 4.99027, -12.2086, 1.11", "8.72287, 4.10744, -13.4808, 1.11", "10.1301, 3.25316, -15.3482, 0.83", "13.9744, 1.68626, -20.2331, 1.39", "14.8212, 1.46966, -21.1212, 1.39", "17.1503, 1.01778, -23.0515, 0.56", "20.1974, 0.450477, -24.9874, 1.11", "22.7952, 0.0440818, -26.0702, 1.39", "24.1384, -0.130776, -26.4728, 0.83", "27.8096, -0.579065, -27.2301, 1.11", "30.6352, -0.899195, -27.9375, 0.56", "33.4652, -1.20853, -28.7212, 1.11", "37.4763, -1.74576, -30.0278, 0.83", "40.3921, -2.08606, -31.3279, 0.56", "42.9643, -2.29141, -32.8915, 1.11", "45.774, -2.25642, -35.319, 0.56", "46.7312, -2.14133, -36.2879, 0.28", "48.1755, -1.85961, -37.997, 0.83", "50.0167, -1.39257, -40.2643, 0.83", "50.8295, -1.232, -41.1852, 0.83", "53.0789, -0.955415, -43.2846, 0.56", "55.071, -0.855935, -45.0056, 1.11", "57.8183, -0.808565, -47.5282, 1.11", "59.0523, -0.810835, -48.6564, 0.28", "61.7123, -0.892565, -51.1429, 0.83", "67.5226, -1.156, -56.4404, 0.28", "71.2175, -1.40221, -59.7313, 1.94", "76.5101, -1.83895, -64.3398, 0.28", "78.0553, -1.95522, -65.6413, 0.56", "81.9645, -2.29587, -69.0226, 0.28", "83.7594, -2.47594, -70.8398, 0.83", "87.4309, -2.95404, -74.9353, 0.28", "88.7286, -3.15707, -76.4647, 1.39", "91.0771, -3.55362, -79.4014, 0.28", "92.6161, -3.79811, -81.486, 1.39", "100.329, -4.91319, -92.5365, 0.28", "101.512, -5.10705, -94.5219, 1.39", "105.355, -5.85598, -101.559, 0.28", "107.11, -6.25078, -105.029, 1.11", "108.732, -6.6991, -108.493, 0.28", "108.97, -6.77727, -109.051, 1.11", "113.358, -9.09245, -122.02, 0.28", "113.719, -9.35336, -123.337, 0.28", "114.14, -9.82848, -125.197, 0.83", "114.841, -10.9069, -128.658, 0.28", "115.273, -11.8395, -130.952, 1.11", "117.238, -16.6752, -140.938, 0.28", "117.41, -17.1106, -141.674, 1.11", "118.694, -20.1385, -146.512, 0.28", "119.862, -22.5192, -150.045, 0.83", "122.07, -26.6483, -155.673, 0.28", "122.322, -27.1003, -156.245, 0.83", "124.614, -31.0039, -160.618, 0.28", "124.98, -31.603, -161.299, 1.11", "127.711, -35.6875, -165.934, 0.28", "128.078, -36.1708, -166.472, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-8.92566, -4.19623, -8.61862, 1.39", "-11.1458, -4.32872, -9.75527, 1.39", "-15.7214, -4.34571, -11.7213, 1.39", "-19.3291, -4.19543, -12.9684, 1.39", "-25.1671, -3.68792, -14.6838, 1.11", "-29.2636, -3.33179, -15.8875, 1.11", "-32.8774, -3.01764, -16.9494, 1.11", "-36.7126, -2.49934, -17.86, 0.83", "-39.5175, -1.9087, -18.1427, 0.83", "-41.4535, -1.40999, -18.0923, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-9.85566, -1.37473, -2.22863, 1.67", "-11.6517, -1.20226, -1.79457, 1.67", "-15.3093, -0.850995, -0.910583, 1.67", "-18.6481, -0.530366, -0.103679, 1.94", "-21.9263, -0.215547, 0.688604, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.56434, 11.9062, -4.92863, 3.89", "3.56434, 14.0247, -4.92863, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.73434, 4.99027, -12.2086, 1.11", "8.72287, 4.10744, -13.4808, 1.11", "10.1301, 3.25316, -15.3482, 0.83", "13.9744, 1.68626, -20.2331, 1.39", "14.8212, 1.46966, -21.1212, 1.39", "17.1503, 1.01778, -23.0515, 0.56", "20.1974, 0.450477, -24.9874, 1.11", "22.7952, 0.0440818, -26.0702, 1.39", "24.1384, -0.130776, -26.4728, 0.83", "27.8096, -0.579065, -27.2301, 1.11", "30.6352, -0.899195, -27.9375, 0.56", "33.4652, -1.20853, -28.7212, 1.11", "37.4763, -1.74576, -30.0278, 0.83", "40.3921, -2.08606, -31.3279, 0.56", "42.9643, -2.29141, -32.8915, 1.11", "45.774, -2.25642, -35.319, 0.56", "46.7312, -2.14133, -36.2879, 0.28", "48.1755, -1.85961, -37.997, 0.83", "50.0167, -1.39257, -40.2643, 0.83", "50.8295, -1.232, -41.1852, 0.83", "53.0789, -0.955415, -43.2846, 0.56", "55.071, -0.855935, -45.0056, 1.11", "57.8183, -0.808565, -47.5282, 1.11", "59.0523, -0.810835, -48.6564, 0.28", "61.7123, -0.892565, -51.1429, 0.83", "67.5226, -1.156, -56.4404, 0.28", "71.2175, -1.40221, -59.7313, 1.94", "76.5101, -1.83895, -64.3398, 0.28", "78.0553, -1.95522, -65.6413, 0.56", "81.9645, -2.29587, -69.0226, 0.28", "83.7594, -2.47594, -70.8398, 0.83", "87.4309, -2.95404, -74.9353, 0.28", "88.7286, -3.15707, -76.4647, 1.39", "91.0771, -3.55362, -79.4014, 0.28", "92.6161, -3.79811, -81.486, 1.39", "100.329, -4.91319, -92.5365, 0.28", "101.512, -5.10705, -94.5219, 1.39", "105.355, -5.85598, -101.559, 0.28", "107.11, -6.25078, -105.029, 1.11", "108.732, -6.6991, -108.493, 0.28", "108.97, -6.77727, -109.051, 1.11", "113.358, -9.09245, -122.02, 0.28", "113.719, -9.35336, -123.337, 0.28", "114.14, -9.82848, -125.197, 0.83", "114.841, -10.9069, -128.658, 0.28", "115.273, -11.8395, -130.952, 1.11", "117.238, -16.6752, -140.938, 0.28", "117.41, -17.1106, -141.674, 1.11", "118.694, -20.1385, -146.512, 0.28", "119.862, -22.5192, -150.045, 0.83", "122.07, -26.6483, -155.673, 0.28", "122.322, -27.1003, -156.245, 0.83", "124.614, -31.0039, -160.618, 0.28", "124.98, -31.603, -161.299, 1.11", "127.711, -35.6875, -165.934, 0.28", "128.078, -36.1708, -166.472, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "9.05434, 0.477776, 1.01137, 1.94", "10.8019, 0.368257, 1.89215, 1.94", "14.1264, 0.540431, 3.50755, 1.39", "18.7946, 1.55832, 5.12712, 1.39", "21.3905, 2.53044, 5.69197, 1.67", "23.1597, 3.43611, 5.90316, 1.67", "26.2439, 5.32772, 6.30948, 1.11", "29.1613, 7.62299, 6.53222, 1.11", "35.0195, 13.216, 6.98364, 1.11", "36.0829, 14.3635, 7.04409, 1.11", "37.8969, 16.3699, 7.22066, 1.39", "41.4064, 20.2065, 7.78349, 1.11", "43.4668, 22.3157, 8.19878, 1.11", "46.343, 24.8794, 9.07738, 1.11", "49.485, 27.4325, 10.3189, 1.11", "52.7355, 30.07, 11.5852, 1.11", "55.0609, 31.9452, 12.4275, 1.11", "57.154, 33.6306, 13.03, 1.11", "60.3061, 36.1996, 13.984, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.21434, 2.69127, -15.0986, 1.39", "13.0663, 1.50948, -14.6417, 1.39", "23.1358, -0.943095, -13.6934, 1.11", "28.0972, -2.15153, -13.2262, 1.11", "31.1487, -2.89478, -12.9388, 1.11", "34.1445, -3.62445, -12.6567, 1.11", "36.0206, -4.08141, -12.48, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.86566, -10.1718, 5.67137, 3.61", "-2.40519, -12.2367, 5.71441, 3.05", "-3.80705, -17.6021, 5.82624, 3.05", "-4.68387, -20.958, 5.89619, 2.5", "-5.79667, -25.2171, 5.98496, 2.22", "-6.16963, -26.6445, 6.01471, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.37625, 11.9986, -0.563992, 1.67", "9.95335, 25.9233, -0.563992, 1.67", "15.5304, 39.8479, -0.563992, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "8.42093, 13.3065, -25.0616, 1.39", "8.94617, 12.741, -26.7891, 1.39", "9.15122, 12.625, -27.3874, 1.39", "10.7638, 12.3976, -33.5685, 0.83", "11.6579, 12.5207, -38.3259, 1.39", "12.4216, 12.7046, -43.0001, 0.56", "12.6396, 12.7813, -44.3735, 0.56", "13.4639, 13.177, -50.1873, 1.67", "14.7756, 14.0591, -59.7302, 1.67", "15.6268, 14.7884, -65.7806, 1.67", "16.6453, 15.6525, -72.8755, 0.83", "16.9628, 15.8152, -74.892, 1.67", "17.9416, 16.222, -80.7202, 0.83", "18.6695, 16.4771, -84.4635, 0.28", "19.4311, 16.5867, -87.3889, 1.11", "20.2326, 16.6357, -89.7578, 1.39", "21.771, 16.6554, -93.5703, 0.28", "21.771, 16.6554, -93.5703, 0.56", "23.0626, 16.7303, -96.2917, 0.28", "24.04, 16.784, -98.2833, 0.83", "26.7693, 16.9514, -103.807, 0.56", "27.644, 17.0008, -105.597, 1.94", "35.8149, 17.3219, -122.372, 0.28", "36.0602, 17.3254, -122.87, 0.83", "37.8603, 17.2742, -126.76, 0.56", "38.7557, 17.1963, -128.781, 0.83", "40.7876, 16.787, -133.774, 0.28", "41.1966, 16.6686, -134.827, 1.39", "41.5764, 16.5054, -135.898, 1.39", "46.051, 14.6278, -148.995, 0.28", "46.479, 14.4582, -150.342, 1.11", "48.5299, 13.7302, -156.729, 0.28", "48.8809, 13.6184, -157.838, 0.83", "50.7809, 13.0673, -163.974, 0.28", "51.1375, 12.9658, -165.151, 1.11", "54.4887, 12.1387, -175.431, 0.28", "55.2904, 11.9921, -178.025, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "8.42093, 13.3065, -25.0616, 0.56", "7.65557, 16.9675, -24.2237, 0.56", "6.8958, 18.2167, -24.6385, 0.56", "5.7824, 19.8794, -25.5231, 0.83", "5.01912, 20.9603, -26.1208, 0.56", "3.62893, 22.8027, -27.1181, 0.83", "1.15335, 25.9149, -28.8288, 2.22", "-1.58974, 28.935, -30.6966, 0.56", "-3.74717, 31.1528, -32.0433, 0.56", "-5.14247, 32.5247, -32.853, 0.56", "-6.52087, 33.9442, -33.6331, 1.67", "-9.27211, 37.0339, -35.1071, 0.56", "-10.7885, 39.1244, -35.8452, 1.11", "-11.8202, 40.8713, -36.3659, 0.28", "-12.4995, 42.3678, -36.8154, 0.83", "-13.5301, 45.4184, -37.5749, 0.28", "-14.0373, 47.387, -38.2531, 1.39", "-15.3818, 53.718, -40.7615, 0.28", "-15.7283, 55.6358, -41.6084, 1.39", "-16.4853, 60.2685, -43.8406, 0.28", "-17.0508, 64.0372, -45.6763, 1.67", "-18.4218, 73.5082, -50.5311, 0.28", "-18.5933, 74.6818, -51.136, 0.28", "-18.7216, 75.5314, -51.5792, 0.56", "-18.9392, 77.2644, -52.5257, 0.28", "-19.1553, 79.5328, -53.7507, 0.56", "-19.311, 82.2897, -55.1567, 0.28", "-19.3404, 85.2224, -56.2026, 1.94", "-19.3778, 88.6543, -57.6238, 0.28", "-19.507, 91.961, -59.2826, 1.39", "-19.5976, 93.3914, -60.0375, 0.28", "-19.6807, 94.3102, -60.5911, 0.56", "-19.9734, 97.0353, -62.3211, 0.28", "-20.0701, 97.6718, -62.8116, 0.56", "-20.5604, 100.026, -64.654, 0.28", "-21.008, 101.884, -66.0728, 1.39", "-21.8833, 105.36, -68.769, 0.28", "-22.3388, 107.29, -70.3633, 1.67", "-22.8688, 109.581, -72.312, 0.28", "-23.1358, 110.963, -73.598, 1.11", "-23.3015, 112.107, -74.7458, 0.28", "-23.3452, 112.539, -75.1674, 0.83", "-23.4938, 115.323, -77.0676, 0.28", "-23.4885, 115.652, -77.2514, 0.56", "-23.3006, 117.508, -78.0667, 0.28", "-23.1889, 118.361, -78.4546, 0.83", "-22.826, 121.748, -79.7319, 0.28", "-22.755, 124.187, -80.1251, 1.39" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-41.4535, -1.40999, -18.0923, 0.56", "-44.4801, -1.72193, -18.0842, 0.56", "-47.1209, -1.74335, -18.1471, 0.56", "-49.3433, -1.58757, -18.2317, 0.56", "-52.161, -1.17729, -18.3609, 0.56", "-56.0453, -0.470137, -18.6474, 0.56", "-57.6266, -0.152993, -18.8236, 0.28", "-59.1915, 0.295506, -19.1248, 0.83", "-60.2809, 0.674788, -19.3517, 0.28", "-61.5545, 1.11537, -19.6424, 0.56", "-63.5449, 1.72282, -20.1506, 0.28", "-65.1731, 2.06478, -20.4718, 1.67", "-66.6358, 2.2204, -20.7559, 1.94", "-68.3518, 2.31863, -21.1103, 1.11", "-70.4676, 2.38624, -21.5046, 0.56", "-72.0549, 2.36835, -21.8094, 0.56", "-74.0306, 2.30822, -22.1637, 0.56", "-74.8984, 2.24422, -22.2681, 0.56", "-78.3268, 1.84824, -22.6016, 0.28", "-79.9144, 1.59319, -22.7635, 1.39", "-84.653, 0.747745, -23.2346, 0.56", "-86.5489, 0.378624, -23.4154, 1.67", "-90.6216, -0.500666, -23.7628, 0.28", "-92.8807, -1.0686, -23.8547, 0.83", "-95.4151, -1.80893, -23.631, 0.28", "-96.5871, -2.13558, -23.4182, 0.56", "-99.1213, -2.78657, -22.6806, 0.28", "-101.141, -3.29814, -21.9153, 0.28", "-103.555, -3.85883, -20.8528, 2.22", "-108.46, -4.955, -18.4798, 0.28", "-110.491, -5.42178, -17.55, 0.28", "-112.208, -5.87649, -16.7715, 1.39", "-115.587, -6.8614, -15.2638, 0.28", "-117.072, -7.35721, -14.645, 0.28", "-118.603, -7.99995, -14.0799, 0.83", "-121.693, -9.63347, -12.9707, 0.28", "-124.503, -11.4279, -11.921, 0.28", "-125.167, -11.9103, -11.6768, 0.28", "-126.199, -12.7302, -11.299, 0.56", "-129.045, -15.2388, -10.0775, 0.28", "-129.934, -16.0593, -9.73839, 1.11", "-132.054, -18.1199, -9.06087, 0.28", "-133.032, -19.053, -8.87005, 0.56", "-134.942, -20.84, -8.56751, 0.28", "-136.258, -22.0759, -8.4171, 1.11", "-138.804, -24.3869, -8.27747, 0.28", "-139.262, -24.7934, -8.26516, 0.83", "-141.657, -26.8579, -8.04938, 0.28", "-142.073, -27.2054, -8.03201, 0.56", "-144.475, -29.1241, -8.01906, 0.28", "-145.676, -30.0461, -8.01148, 1.11", "-149.676, -33.005, -7.92331, 0.28", "-151.779, -34.4666, -7.8567, 1.94", "-154.476, -36.2247, -7.80335, 0.28", "-155.697, -36.8929, -7.68498, 0.83", "-156.95, -37.414, -7.46157, 0.28", "-157.987, -37.6981, -7.20977, 0.56", "-160.624, -37.9463, -6.4412, 0.28", "-161.569, -37.949, -6.09421, 0.83", "-165.122, -37.7146, -4.48803, 0.28", "-165.473, -37.6799, -4.31798, 0.83", "-167.869, -37.3903, -3.12698, 0.28", "-169.701, -37.1793, -2.30505, 0.83", "-173.868, -36.7858, -0.756612, 0.28", "-174.302, -36.7508, -0.626445, 0.83", "-175.659, -36.635, -0.325802, 0.28", "-175.936, -36.6099, -0.282217, 0.83", "-179.304, -36.231, 0.0251823, 0.28", "-180.927, -35.9033, -0.0681008, 0.83", "-183.241, -35.2413, -0.443685, 0.28", "-183.83, -35.0661, -0.549451, 0.83", "-186.775, -34.1239, -1.13927, 0.28", "-188.06, -33.6633, -1.40421, 0.56", "-192.852, -31.5669, -2.44048, 0.28", "-194.252, -30.8691, -2.74736, 0.83" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-41.4535, -1.40999, -18.0923, 0.56", "-43.8762, -1.82074, -23.9583, 0.56", "-45.7765, -1.54278, -26.3014, 0.56", "-46.5257, -1.28243, -27.088, 0.56", "-47.1259, -0.924485, -27.9918, 1.39", "-48.0247, -0.346703, -29.3775, 1.67", "-49.445, 0.522139, -31.5673, 0.83", "-51.0614, 1.60504, -33.9409, 0.28", "-52.5023, 2.60495, -36.0773, 1.11", "-56.9074, 5.78348, -42.8245, 0.28", "-57.6171, 6.31704, -43.9113, 0.28", "-58.8828, 7.26216, -45.9954, 1.67", "-60.7247, 8.54988, -48.9603, 0.56", "-62.5558, 9.54605, -51.6299, 0.83", "-63.5472, 9.95881, -52.9114, 1.39", "-65.1585, 10.4535, -54.6039, 0.28", "-70.3838, 11.7387, -59.6607, 0.28", "-71.9677, 11.8864, -61.0522, 1.39", "-76.8605, 11.9624, -65.0741, 0.28", "-77.167, 11.9472, -65.318, 0.56", "-79.7367, 11.7073, -67.4459, 0.28", "-81.4618, 11.4859, -68.8546, 1.39", "-93.4416, 10.1139, -77.8404, 0.28", "-94.1576, 10.0415, -78.403, 0.83", "-95.7237, 9.91213, -79.6471, 0.83", "-100.388, 9.57528, -83.4393, 0.28", "-101.053, 9.50319, -84.006, 0.56", "-108.084, 8.57558, -90.1697, 0.28", "-110.166, 8.19901, -92.0085, 1.11", "-115.043, 7.19485, -96.3435, 0.28", "-115.503, 7.09588, -96.7553, 0.83", "-126.256, 4.48611, -106.204, 0.28", "-127.588, 4.07896, -107.467, 1.11", "-131.471, 2.5261, -111.589, 0.28", "-132.632, 2.03412, -112.839, 0.83", "-136.066, 0.463717, -116.771, 0.28", "-136.579, 0.22843, -117.382, 0.83", "-139.924, -1.48504, -121.991, 0.28", "-141.578, -2.38458, -124.372, 1.39" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-21.9263, -0.215547, 0.688604, 1.11", "-30.7109, 0.0673518, -5.28117, 1.11", "-33.6375, 0.451161, -6.92166, 0.83", "-36.8813, 0.84242, -8.65061, 0.83", "-39.6481, 1.16765, -10.0393, 0.83", "-41.7754, 1.45338, -11.0417, 0.83", "-44.8452, 1.95796, -12.4779, 0.83", "-50.3013, 2.90481, -14.2878, 0.83", "-52.8097, 3.37872, -15.2421, 0.56", "-54.4153, 3.67405, -15.8797, 0.56", "-56.415, 4.08807, -16.5857, 1.11", "-59.7035, 4.76704, -17.7022, 0.56", "-62.9657, 5.42295, -18.7087, 0.56", "-66.9186, 6.23561, -19.7107, 0.56", "-69.5103, 6.90805, -20.2933, 1.94", "-72.7876, 7.83185, -21.1072, 0.56", "-73.5993, 8.10719, -21.2754, 0.56", "-76.314, 9.18312, -21.8132, 0.56", "-78.58, 10.2708, -22.2879, 0.28", "-82.235, 12.1887, -22.9635, 2.22", "-85.4282, 13.9875, -23.5617, 0.56", "-89.8779, 16.6081, -24.4006, 0.56", "-92.8425, 18.3781, -24.9118, 0.28", "-93.8799, 19.0061, -25.1011, 0.28", "-95.283, 19.892, -25.45, 0.83", "-97.1034, 21.0538, -25.8878, 0.28", "-98.0181, 21.6464, -26.1933, 0.56", "-99.5162, 22.6247, -26.9428, 0.28", "-101.698, 24.1911, -28.2886, 1.39", "-104.541, 26.163, -30.2363, 0.28", "-105.753, 27.0285, -31.1203, 0.56", "-107.684, 28.4655, -32.4813, 0.28", "-108.064, 28.7643, -32.7352, 0.56", "-109.901, 30.3156, -33.7936, 0.28", "-112.827, 32.9602, -35.0459, 0.28", "-114.271, 34.3836, -35.4486, 1.67", "-116.383, 36.5578, -35.8679, 0.28", "-117.156, 37.3612, -35.9496, 0.56", "-119.388, 39.7349, -36.1285, 0.28", "-120.707, 41.1633, -36.1709, 1.67", "-122.924, 43.5958, -36.3627, 0.28", "-123.457, 44.1382, -36.4346, 0.28", "-123.902, 44.5375, -36.5421, 0.56", "-125.149, 45.4106, -36.9274, 0.28", "-126.07, 45.8589, -37.3276, 0.83", "-128.151, 46.6509, -38.3739, 0.28", "-129.287, 47.0198, -39.0764, 0.83", "-131.896, 47.8504, -40.7982, 0.28", "-133.652, 48.3932, -42.0413, 1.39", "-136.888, 49.3845, -44.3323, 0.28", "-138.274, 49.8157, -45.2931, 1.67", "-141.801, 50.8554, -47.5686, 0.28", "-142.442, 51.0319, -47.9801, 0.56", "-145.165, 51.8298, -49.7125, 0.28", "-147.192, 52.4792, -50.974, 1.11", "-148.646, 52.9698, -51.8135, 0.28", "-150.532, 53.5808, -52.8397, 0.28", "-152.826, 54.3265, -53.9263, 0.56", "-154.973, 55.0313, -54.8582, 0.28", "-156.261, 55.491, -55.4525, 0.83", "-158.139, 56.2176, -56.4171, 0.28", "-158.662, 56.4037, -56.7, 0.56", "-160.312, 56.9642, -57.5744, 0.28", "-162.218, 57.528, -58.3959, 1.39", "-166.549, 58.727, -60.0555, 0.28", "-167.598, 59.0072, -60.4764, 0.83", "-171.31, 59.9484, -62.0601, 0.28", "-172.34, 60.215, -62.5555, 0.83", "-179.2, 62.2023, -66.0871, 0.28", "-180.371, 62.5814, -66.7083, 0.83", "-182.908, 63.5213, -68.0417, 0.28", "-184.817, 64.3507, -69.1207, 0.83", "-186.806, 65.4141, -70.347, 0.83", "-190.072, 67.3571, -72.4674, 0.28", "-190.503, 67.6621, -72.7708, 0.56", "-192.858, 69.3542, -74.1288, 0.28", "-193.614, 69.8974, -74.4479, 0.83", "-195.805, 71.4575, -75.149, 0.28", "-198.058, 72.9078, -75.704, 0.83", "-200.238, 74.1478, -76.0681, 0.28", "-203.065, 75.6928, -76.2989, 1.11", "-205.341, 76.847, -76.1752, 0.28", "-206.223, 77.2838, -76.0545, 0.56", "-208.594, 78.4398, -75.6262, 0.28", "-211.031, 79.591, -75.2228, 0.83", "-212.051, 80.0546, -75.0367, 0.83", "-214.506, 81.2021, -74.8059, 0.28", "-215.009, 81.4363, -74.7194, 0.56", "-217.456, 82.6308, -74.3883, 0.28", "-218.495, 83.2623, -74.3664, 0.56" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-21.9263, -0.215547, 0.688604, 0.83", "-26.0507, 3.26589, 3.01916, 0.83", "-28.2054, 5.32085, 4.61036, 0.83", "-31.0084, 8.05335, 6.88253, 0.83", "-35.0358, 11.9761, 10.3852, 0.83", "-37.6655, 14.4326, 12.7771, 0.83", "-39.6109, 16.081, 14.5808, 1.39", "-43.401, 19.2755, 18.4287, 0.56", "-45.4356, 20.8765, 20.3361, 0.56", "-47.1051, 21.8922, 21.5228, 0.83", "-49.1272, 22.727, 22.4985, 0.83", "-52.6408, 23.9096, 23.4123, 0.83", "-56.4739, 25.0412, 23.9247, 1.11", "-61.8084, 26.5215, 23.4981, 0.83", "-64.5049, 27.3749, 23.1479, 0.83", "-67.2358, 28.457, 22.652, 1.11", "-69.3268, 29.469, 22.4169, 0.56", "-71.8181, 30.7291, 22.5746, 1.39", "-74.7751, 32.1029, 23.4923, 1.11", "-76.5206, 32.7734, 24.3662, 0.83", "-78.4931, 33.3809, 25.4179, 0.83", "-82.3677, 34.4367, 27.7332, 0.83", "-85.6453, 35.3922, 29.8383, 0.83", "-86.7662, 35.7401, 30.4956, 0.83", "-88.9057, 36.427, 31.8147, 0.56", "-91.0583, 37.107, 33.0262, 0.83", "-93.2928, 37.8053, 34.2148, 0.83", "-95.1004, 38.4698, 34.996, 0.56", "-100.078, 40.6849, 36.9364, 0.83", "-103.144, 42.1117, 38.1014, 0.56", "-104.634, 42.816, 38.6663, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.56434, 14.0247, -4.92863, 2.22", "3.45434, 19.0408, -9.36862, 2.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.56434, 14.0247, -4.92863, 0.83", "6.33434, 16.1813, -0.62862, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "60.3061, 36.1996, 13.984, 1.11", "62.3792, 34.5297, 17.1367, 1.11", "62.8773, 34.1286, 17.8941, 1.39" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "60.3061, 36.1996, 13.984, 0.56", "59.7415, 42.1174, 15.5388, 0.56", "59.6603, 45.0951, 17.3167, 0.56", "59.6061, 47.3435, 18.8226, 0.28", "59.6171, 47.8394, 19.1511, 0.83", "59.7274, 49.7977, 20.4908, 0.28", "59.9751, 53.3516, 22.9039, 0.56", "60.4971, 57.2464, 25.975, 0.56", "60.7432, 58.8097, 27.0113, 0.56", "61.084, 60.7778, 28.0857, 0.56", "61.5183, 63.3231, 29.2707, 0.28", "61.6822, 64.3215, 29.6177, 0.28", "61.8034, 65.6304, 29.7073, 0.83", "62.1946, 68.8332, 29.1624, 0.28", "62.5077, 71.0255, 28.744, 0.28", "62.5762, 71.3763, 28.63, 0.56", "63.0185, 72.7518, 28.0519, 0.28", "63.0185, 72.7518, 28.0519, 0.56", "64.1002, 74.8503, 27.2286, 0.28", "64.9834, 76.2119, 26.8414, 0.56", "67.7075, 79.8263, 25.6635, 0.28", "68.5935, 80.901, 25.2516, 0.28", "68.7767, 81.1019, 25.2052, 0.56", "69.5066, 81.8931, 25.4443, 0.28", "70.4611, 82.9476, 26.5526, 0.83", "71.2659, 83.8346, 27.8387, 0.28", "71.9067, 84.5507, 29.2014, 0.83", "73.8538, 86.8376, 34.0211, 0.28", "75.3949, 88.6657, 38.1839, 0.28", "75.6719, 89.0105, 39.0801, 0.56", "78.9793, 97.4238, 42.3405, 0.56", "83.5341, 105.222, 45.7872, 0.56", "87.8504, 113.63, 47.5265, 0.56", "93.0296, 121.022, 51.0817, 0.56", "98.6738, 128.121, 54.5883, 0.56", "104.037, 134.943, 59.0223, 0.56" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "36.0206, -4.08141, -12.48, 0.83", "40.8374, -5.52819, -12.1662, 0.83", "42.7584, -6.03102, -12.0051, 0.28", "44.478, -6.47083, -11.8544, 0.83", "46.7774, -7.02508, -11.6552, 0.56", "51.9472, -8.03539, -11.0966, 0.56", "56.2433, -8.84475, -10.5847, 0.56", "59.8841, -9.44428, -10.299, 0.56", "61.8471, -9.74627, -10.0542, 1.39", "63.4761, -9.98708, -9.8435, 0.83", "67.6927, -10.5517, -9.30777, 0.56", "69.0509, -10.7864, -9.14151, 0.83", "71.1724, -11.1427, -8.92877, 0.56", "73.5826, -11.6238, -8.75682, 0.56", "76.9273, -12.3216, -8.66446, 0.83", "80.9842, -13.2003, -8.71688, 0.56", "83.6654, -13.8773, -8.8848, 0.56", "85.9458, -14.4588, -9.05479, 0.56", "89.2553, -15.4125, -9.33768, 1.94", "92.5071, -16.5269, -9.64367, 0.56", "94.8252, -17.4316, -9.7871, 0.56", "99.2603, -19.5194, -10.0193, 0.56", "101.508, -20.6846, -10.1147, 0.56", "102.937, -21.5394, -10.1642, 0.28", "104.535, -22.6282, -10.1543, 0.28", "106.169, -23.8995, -10.0743, 1.67", "110.351, -27.6648, -9.69512, 0.28", "111.707, -29.0391, -9.43579, 0.28", "112.62, -30.0396, -9.19938, 0.56", "114.416, -32.1319, -8.73903, 0.28", "116.654, -35.0005, -8.16195, 0.28", "118.606, -37.7807, -7.59909, 0.28", "120.001, -40.0219, -7.15309, 1.39", "120.774, -41.2925, -6.89249, 1.39", "122.393, -43.9587, -6.36813, 0.28", "122.868, -44.7867, -6.24687, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "36.0206, -4.08141, -12.48, 0.83", "36.6693, -3.84703, -15.1935, 0.83", "40.7668, -2.49134, -29.3141, 0.56", "41.4294, -2.30739, -31.2707, 0.56", "42.9279, -1.99565, -35.0483, 1.11", "44.8302, -1.64752, -39.3831, 0.56", "46.4574, -1.40551, -42.7651, 1.67", "48.06, -1.28353, -45.5187, 0.28", "49.2305, -1.19084, -46.9608, 1.11", "54.4049, -0.963015, -52.6948, 0.28", "55.2352, -0.949935, -53.4844, 0.83", "56.7968, -0.845365, -54.7348, 0.83", "59.9666, -0.282815, -57.0296, 0.28", "60.6509, -0.0407242, -57.5147, 1.11", "61.9699, 0.569505, -58.3893, 0.28", "63.1861, 1.15638, -59.1593, 0.83", "66.6358, 2.74772, -61.3687, 0.28", "69.6684, 4.0377, -63.4043, 1.67", "77.1712, 6.94876, -68.4315, 0.28", "79.1887, 7.60067, -69.8421, 2.22", "86.0495, 9.4427, -74.8207, 0.28", "87.6201, 9.78833, -76.0278, 1.11", "92.5364, 10.6382, -79.8943, 0.28", "93.8333, 10.8312, -80.9319, 1.11", "98.3192, 11.3986, -84.7268, 0.28", "99.8329, 11.8032, -86.34, 1.11", "103.039, 13.1974, -90.6235, 0.28", "104.224, 13.8544, -92.4591, 1.11", "105.449, 14.6605, -94.5429, 0.28", "105.837, 14.9762, -95.2556, 0.56", "112.368, 21.3471, -108.003, 0.28", "114.076, 23.1462, -111.822, 1.67", "116.177, 25.4565, -116.749, 0.28", "116.369, 25.6731, -117.218, 0.56", "119.436, 29.1252, -124.719, 0.28", "119.831, 29.586, -125.725, 1.39", "124.085, 34.9864, -137.261, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.16963, -26.6445, 6.01471, 1.67", "-6.73476, -32.5175, 6.72967, 1.67", "-7.34175, -37.0796, 7.25867, 1.67", "-7.92047, -40.8001, 7.65271, 1.67", "-8.73282, -46.2323, 7.93151, 1.67", "-9.11009, -48.6397, 7.95982, 1.67", "-9.74669, -52.4138, 7.95269, 1.67", "-10.3618, -55.7144, 7.8434, 1.67", "-11.0478, -59.2115, 7.4212, 1.67", "-12.0867, -64.2643, 6.30458, 1.39", "-13.2997, -70.1901, 4.53251, 1.39", "-13.6636, -72.4048, 3.79798, 1.39", "-14.1164, -76.4341, 2.42839, 1.39", "-14.55, -84.6915, -0.248745, 1.39", "-14.5264, -88.0022, -1.22332, 1.39", "-14.262, -93.6864, -2.49596, 1.11", "-13.8171, -98.6084, -3.34916, 1.11", "-13.5222, -101.57, -3.57367, 1.11", "-13.2654, -104.865, -3.39916, 1.11", "-13.1109, -109.022, -2.63457, 1.11", "-13.1905, -116.596, -0.858201, 1.11", "-13.602, -120.409, 0.219315, 1.11", "-14.5702, -125.24, 1.70954, 1.11", "-15.5591, -128.853, 2.80029, 1.11", "-16.3381, -131.239, 3.52409, 1.11", "-16.6911, -132.24, 3.81236, 1.11", "-18.1265, -136.539, 4.82199, 1.11", "-18.8134, -139.351, 5.10567, 1.11", "-19.1485, -141.688, 5.05901, 1.39", "-19.3111, -144.579, 4.87197, 1.39", "-19.3209, -147.65, 4.62264, 1.11", "-19.2602, -150.335, 4.36993, 1.11", "-19.0717, -155.689, 3.79461, 1.11", "-19.0293, -158.58, 3.46815, 1.11", "-19.0627, -161.216, 3.09941, 1.11", "-19.2231, -163.391, 2.76027, 1.39", "-19.3925, -165.234, 2.45742, 1.67", "-19.6764, -167.248, 2.1231, 1.67", "-20.3117, -169.868, 1.72671, 1.11", "-21.3551, -173.254, 1.13006, 1.11", "-22.8952, -177.296, 0.335086, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.16963, -26.6445, 6.01471, 0.83", "-12.5734, -31.162, 3.66781, 0.83", "-16.4385, -33.5619, 2.52045, 0.83", "-19.5968, -35.3412, 1.54297, 0.83", "-22.975, -37.1774, 0.571034, 0.83", "-26.3258, -38.932, -0.311506, 0.83", "-28.0913, -39.7602, -0.779667, 0.83", "-31.1332, -41.0138, -1.29456, 0.83", "-34.6373, -42.3963, -2.07605, 1.11", "-36.9641, -43.2301, -2.66566, 0.83", "-39.3096, -44.0654, -3.23277, 1.11", "-44.1856, -45.8978, -4.38337, 0.83", "-47.4783, -47.2583, -5.11995, 0.83", "-52.0709, -49.2925, -6.18028, 0.83", "-54.9167, -50.6525, -6.79123, 1.39", "-57.7477, -52.1222, -7.43588, 0.56", "-59.4496, -53.1336, -7.85431, 0.56", "-60.8158, -54.0431, -8.18642, 1.11", "-64.0803, -56.2737, -9.00309, 0.56", "-68.0042, -58.9754, -9.82292, 0.56", "-69.222, -59.9053, -10.0676, 0.83", "-72.0485, -62.2925, -10.5861, 0.28", "-73.2222, -63.4144, -10.739, 0.28", "-74.3827, -64.628, -10.8191, 1.39", "-76.4299, -66.9353, -10.7662, 0.83", "-78.2393, -69.0341, -10.6159, 0.28", "-79.2206, -70.2577, -10.55, 0.83", "-80.5293, -72.0317, -10.4689, 0.28", "-81.3829, -73.3357, -10.484, 0.56", "-82.5039, -75.1059, -10.6022, 0.28", "-83.243, -76.2903, -10.735, 1.67", "-85.2693, -79.5182, -11.1376, 0.56", "-86.7539, -81.9235, -11.4451, 0.28", "-88.1631, -84.2369, -11.8151, 0.28", "-88.5977, -84.9047, -11.9418, 1.67", "-89.9032, -86.7677, -12.3409, 1.11", "-92.3344, -89.9952, -13.0752, 0.28", "-92.9419, -90.7321, -13.2303, 0.56", "-95.081, -93.0659, -13.7788, 0.28", "-97.6826, -95.5366, -14.3814, 0.28", "-98.1494, -95.923, -14.4328, 0.56", "-99.4295, -96.7949, -14.436, 0.28", "-99.9102, -97.0543, -14.3965, 0.83", "-102.126, -98.1145, -14.1062, 0.28", "-104.461, -99.1474, -13.5534, 1.39", "-108.389, -100.987, -12.1697, 0.28", "-109.849, -101.746, -11.5369, 0.56", "-111.863, -102.955, -10.4931, 0.28", "-112.584, -103.467, -10.0309, 0.28", "-114.675, -105.18, -8.37571, 1.67", "-116.648, -107.297, -6.47091, 0.56", "-117.166, -108.065, -5.88221, 0.28", "-117.805, -109.25, -4.91974, 0.56", "-118.774, -111.268, -3.17069, 0.28", "-119.105, -111.913, -2.58472, 0.83", "-120.045, -113.439, -1.24798, 0.28", "-120.642, -114.251, -0.545907, 0.28", "-122.055, -116.063, 1.04437, 0.83", "-123.768, -118.262, 2.95649, 0.28", "-124.426, -119.163, 3.74659, 0.83", "-126.92, -122.754, 6.88783, 0.28", "-127.479, -123.551, 7.60098, 1.11", "-129.846, -127.257, 11.0307, 0.28", "-130.071, -127.679, 11.4062, 0.83", "-131.273, -130.492, 13.8922, 0.28", "-131.618, -131.466, 14.7669, 0.28", "-131.641, -131.569, 14.8678, 0.83", "-132.142, -134.748, 18.1457, 0.28", "-132.212, -135.893, 19.4232, 0.28", "-132.243, -136.295, 19.887, 0.56" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "15.5304, 39.8479, -0.563992, 0.28", "21.1075, 53.7726, -0.563992, 0.28", "26.6846, 67.6972, -0.563992, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-22.755, 124.187, -80.1251, 0.28", "-20.2651, 130.86, -82.419, 0.28", "-19.1528, 133.841, -83.4439, 0.28", "-18.5844, 135.365, -83.9675, 1.39" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-22.755, 124.187, -80.1251, 0.28", "-23.7673, 126.546, -80.9109, 0.28", "-24.0666, 127.243, -81.1432, 0.56" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-104.634, 42.816, 38.6663, 0.56", "-105.992, 44.6347, 39.1122, 0.56", "-106.732, 45.7384, 39.3104, 1.11", "-109.284, 49.9856, 39.8298, 0.56", "-111.365, 53.728, 40.1778, 0.83", "-112.166, 55.4808, 40.2816, 0.83", "-112.621, 56.7582, 40.3241, 0.28", "-112.659, 57.3504, 40.2713, 0.56", "-112.444, 58.2333, 40.0548, 0.28", "-112.336, 58.4593, 39.9809, 0.83", "-110.95, 60.5468, 39.7553, 0.28", "-110.439, 61.511, 39.7477, 0.83", "-109.908, 62.8509, 39.9166, 0.28", "-109.554, 63.8666, 40.0833, 0.83", "-108.757, 67.0387, 40.7758, 0.28", "-108.613, 68.1743, 41.0723, 0.83", "-108.701, 70.5601, 41.84, 0.28", "-108.875, 72.0516, 42.378, 1.11", "-112.131, 80.8451, 44.3068, 1.11", "-117.719, 88.4941, 46.293, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-104.634, 42.816, 38.6663, 0.56", "-104.41, 41.3524, 39.5307, 0.56", "-104.197, 39.9583, 40.3541, 0.28", "-103.811, 37.4345, 41.8447, 0.56", "-103.584, 30.4223, 48.5874, 0.56", "-104.32, 23.2575, 55.1126, 0.56", "-105.037, 16.4462, 62.0466, 0.56", "-107.215, 10.4439, 69.4855, 0.56", "-107.742, 4.42307, 77.2027, 0.56", "-107.713, -1.57671, 84.9559, 0.56", "-108.853, -7.01152, 93.0783, 0.56", "-110.358, -12.3685, 101.198, 0.56" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "3.45434, 19.0408, -9.36862, 1.11", "1.15567, 24.4624, -13.3588, 1.11", "-0.122322, 27.4767, -15.5772, 1.11", "-1.11481, 29.8175, -17.3001, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.45434, 19.0408, -9.36862, 1.11", "9.97003, 26.299, 1.51156, 1.11", "11.6052, 28.4066, 4.38163, 1.11", "13.5625, 31.3799, 8.13981, 1.11", "15.0768, 33.6803, 11.0475, 1.11", "16.2028, 35.3909, 13.2097, 1.11", "17.2063, 36.9152, 15.1364, 1.11", "19.3915, 40.4589, 17.6651, 1.11", "20.2412, 41.9655, 18.8673, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.33434, 16.1813, -0.62862, 0.83", "7.3613, 17.5384, 1.93198, 0.83", "8.84419, 19.4968, 5.74336, 0.56", "9.80653, 20.8282, 8.22429, 0.56", "10.7044, 22.1188, 10.4982, 0.56", "13.8228, 26.6624, 17.9153, 1.11", "15.3277, 28.8601, 21.2932, 0.56", "16.1637, 29.9908, 22.9023, 0.83", "17.3189, 31.5787, 25.1065, 0.56", "17.7476, 32.1804, 25.9703, 0.56", "19.236, 34.0383, 28.4818, 0.83", "20.6116, 35.7858, 29.5127, 0.56", "24.2294, 40.074, 30.8199, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.33434, 16.1813, -0.62862, 0.56", "7.87114, 15.7138, 0.501209, 0.56", "9.83007, 15.1179, 1.94137, 0.83", "17.6572, 13.5851, 7.95238, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "62.8773, 34.1286, 17.8941, 0.83", "66.9957, 36.6259, 19.8523, 0.83", "68.862, 37.7576, 20.7397, 0.83", "70.9326, 39.0132, 21.7242, 0.83", "72.9108, 40.2128, 22.6648, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "62.8773, 34.1286, 17.8941, 0.83", "64.7602, 33.9049, 20.8139, 0.83", "67.7924, 33.5447, 25.5159, 0.83", "69.1585, 33.3825, 27.6343, 0.56", "70.0964, 33.2711, 29.0888, 0.56", "71.6677, 33.0844, 31.5254, 0.56", "72.8386, 32.9454, 33.341, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "122.868, -44.7867, -6.24687, 0.28", "125.551, -46.9916, -6.37728, 0.28", "128.025, -49.4177, -6.71782, 0.28", "128.983, -50.3579, -6.8498, 0.56", "132.258, -53.5692, -7.30055, 0.28", "132.963, -54.2606, -7.3976, 0.56", "136.327, -57.5598, -7.8607, 0.28", "137.602, -59.1123, -8.24611, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "122.868, -44.7867, -6.24687, 0.28", "125.601, -47.3326, -5.74781, 0.28", "126.867, -48.4857, -5.12398, 0.28", "127.411, -49.0107, -4.81185, 0.56", "128.707, -50.2614, -4.03447, 0.28", "129.834, -51.3736, -3.38336, 1.11", "130.859, -52.3804, -2.82564, 0.83", "134.177, -55.5455, -1.07242, 0.28", "135.761, -56.9937, -0.184217, 0.28", "136.014, -57.2246, -0.00969433, 0.56", "137.806, -58.8794, 1.37372, 0.28", "138.676, -59.6945, 2.0423, 1.11", "139.986, -60.886, 3.07733, 0.28", "142.598, -63.0664, 5.08731, 0.56", "145.544, -65.3721, 7.76307, 0.28", "146.148, -65.8451, 8.39587, 0.56", "152.378, -71.7146, 13.1937, 0.56" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-22.8952, -177.296, 0.335086, 1.11", "-22.2029, -180.155, -0.466701, 1.11", "-21.362, -184.352, -1.60176, 1.11", "-20.5891, -188.732, -3.26312, 1.11", "-20.3244, -190.233, -3.79071, 1.11", "-19.6542, -193.369, -4.68117, 2.22", "-19.028, -195.907, -5.36515, 3.33", "-18.5933, -197.675, -5.80338, 1.94", "-17.6366, -203.178, -6.84761, 0.83", "-17.308, -206.54, -7.42488, 1.67", "-17.0332, -210.678, -7.91691, 2.22", "-16.9457, -213.338, -8.0792, 0.83", "-16.9782, -216.773, -8.31404, 0.83", "-17.2325, -220.469, -8.52032, 0.83", "-17.7266, -224.728, -8.80384, 1.11", "-18.0762, -227.049, -9.18691, 0.83", "-18.4877, -229.328, -9.67673, 0.83", "-19.1378, -233.115, -10.5195, 2.22", "-19.6563, -236.577, -11.3746, 1.11", "-20.4258, -242.015, -12.8172, 0.83", "-20.9273, -245.149, -13.6553, 2.22", "-21.0612, -245.95, -13.8516, 2.22", "-21.8077, -250.425, -14.7306, 0.83", "-22.2946, -253.553, -15.1289, 0.83", "-22.4374, -254.495, -15.2227, 1.39", "-22.9766, -257.79, -15.2993, 2.22", "-23.6827, -262.31, -15.1367, 0.83", "-23.9695, -264.244, -15.0547, 1.67", "-24.4466, -267.909, -14.845, 2.5" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.8952, -177.296, 0.335086, 0.56", "-24.922, -177.868, -0.91834, 0.56", "-26.3169, -178.261, -1.78098, 0.56", "-27.342, -178.549, -2.41496, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-132.243, -136.295, 19.887, 0.28", "-134.001, -136.982, 20.9774, 0.28", "-134.802, -137.294, 21.4736, 0.56", "-137.689, -138.421, 23.2641, 0.28", "-139.033, -138.945, 24.0975, 0.56", "-141.858, -140.048, 25.8494, 0.56", "-150.479, -142.747, 30.0447, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-132.243, -136.295, 19.887, 0.28", "-131.686, -137.599, 19.3317, 0.28", "-131.467, -138.111, 19.1135, 0.56", "-128.258, -146.931, 17.238, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-1.11481, 29.8175, -17.3001, 0.83", "-1.8216, 33.3376, -17.9405, 0.83", "-2.37929, 38.2699, -19.129, 0.83", "-2.77895, 43.7178, -20.5518, 0.83", "-2.96623, 46.7935, -21.2783, 0.83", "-3.0283, 47.7355, -21.5092, 0.83", "-3.26534, 51.109, -22.3298, 0.83", "-3.58592, 56.0744, -23.3408, 0.83", "-3.79612, 59.1735, -24.0606, 0.83", "-4.02136, 62.6904, -24.8757, 1.11", "-4.43652, 66.9274, -25.8543, 0.83", "-4.77416, 68.9773, -26.2331, 1.11", "-5.41535, 72.0375, -26.7556, 0.83", "-6.73678, 76.9658, -27.4078, 0.83", "-7.76751, 80.6442, -27.9373, 0.83", "-8.51742, 83.1629, -28.3382, 0.83", "-9.56766, 86.4081, -28.6895, 2.5" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.11481, 29.8175, -17.3001, 0.56", "-0.510159, 33.2688, -20.0067, 0.56", "0.38795, 37.4196, -22.688, 0.56", "0.89042, 39.8636, -24.2518, 1.11", "1.78604, 43.8079, -26.6783, 0.56", "2.30248, 46.0198, -27.9694, 0.56", "3.13626, 49.2987, -29.8321, 1.11", "3.84844, 52.2685, -31.2649, 0.56", "4.94348, 55.9503, -32.8112, 0.56", "5.61345, 57.7555, -33.6031, 0.28", "6.22818, 59.1662, -34.1318, 0.56", "7.23543, 61.4363, -34.8401, 0.28", "7.46948, 61.9641, -34.9506, 0.56", "8.0276, 63.2288, -35.1818, 0.28", "8.18297, 63.5766, -35.2015, 0.56", "8.62622, 64.7106, -35.2521, 0.28", "9.82296, 67.7689, -35.4296, 1.67", "11.105, 71.223, -35.6358, 0.28", "11.2861, 71.7252, -35.7144, 0.56", "12.0046, 73.6879, -36.1487, 0.28", "12.171, 74.1692, -36.3003, 1.39", "13.2297, 77.1279, -37.4375, 0.28", "13.5938, 78.1587, -37.9227, 0.83", "14.8724, 81.5385, -39.4645, 0.28", "15.5039, 83.149, -40.3151, 1.39", "16.9474, 86.7693, -42.466, 0.28", "17.2918, 87.6606, -43.0086, 0.83", "18.2285, 90.2879, -44.6499, 0.28", "18.8427, 92.0829, -45.8451, 1.39", "19.9091, 95.4426, -48.1324, 0.28", "19.9316, 95.5364, -48.1968, 0.56", "20.1591, 96.9186, -49.016, 0.28", "20.2046, 97.4582, -49.2818, 0.56", "20.3412, 100.377, -50.4876, 0.28", "20.3549, 101.159, -50.8021, 0.83", "20.3859, 104.307, -51.8998, 0.28", "20.4221, 106.34, -52.5984, 1.11", "20.6519, 113.694, -55.0851, 0.28", "20.7191, 115.227, -55.5534, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "20.2412, 41.9655, 18.8673, 0.83", "19.3672, 44.3854, 19.5091, 0.83", "18.614, 46.2851, 20.1812, 0.83", "17.8765, 47.9333, 20.7455, 0.83", "16.417, 50.9586, 21.8516, 0.83", "15.5259, 52.8063, 22.6469, 0.83", "13.4628, 57.0413, 24.5114, 0.83", "12.1125, 59.9452, 25.8123, 0.83", "10.7449, 62.9263, 27.1393, 0.83", "9.96329, 64.6451, 27.8255, 0.83", "8.39424, 67.9845, 29.0998, 0.83", "7.66366, 69.7566, 29.7854, 0.83", "6.53938, 72.861, 30.8729, 0.83", "5.92654, 74.456, 31.4091, 1.94", "4.91162, 77.1414, 32.2903, 1.39", "3.01781, 82.0499, 33.6802, 0.83", "1.8153, 85.1191, 34.4375, 0.83", "0.757633, 87.8026, 35.1563, 1.11", "-0.920033, 91.932, 36.2474, 0.83", "-1.57835, 93.6446, 36.6473, 0.83", "-1.95466, 94.847, 36.8612, 1.11", "-2.59998, 97.4201, 37.052, 0.83", "-2.89259, 98.7178, 37.0995, 0.56", "-3.27689, 100.818, 37.1731, 1.39", "-3.8204, 104.227, 37.2767, 0.83", "-4.3758, 107.389, 37.3948, 1.67", "-5.04444, 110.778, 37.525, 0.83", "-5.31935, 112.073, 37.5353, 0.28", "-5.56509, 113.221, 37.4921, 0.83", "-5.9306, 114.786, 37.403, 0.28", "-6.15077, 115.586, 37.302, 0.83", "-6.65199, 117.105, 37.1404, 0.28", "-7.33523, 119.066, 37.0049, 1.67", "-8.17818, 121.36, 36.969, 0.28", "-8.52613, 122.271, 36.9998, 1.39", "-9.55863, 124.757, 37.0947, 0.83", "-10.7983, 127.582, 37.0941, 0.28", "-11.2189, 128.468, 37.0805, 1.67", "-12.0371, 130.056, 37.0749, 2.5", "-12.7231, 131.317, 37.0471, 1.39", "-13.8202, 133.336, 36.8947, 0.56", "-14.8233, 135.168, 36.6605, 1.11", "-15.7621, 136.922, 36.1189, 0.28", "-16.5123, 138.307, 35.6036, 1.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "20.2412, 41.9655, 18.8673, 0.56", "20.5815, 43.0483, 19.7725, 0.56", "20.8086, 44.148, 20.5087, 0.56", "21.113, 48.1105, 23.0329, 0.56", "21.1584, 51.1104, 24.9091, 0.83", "21.1747, 52.1294, 25.5305, 0.83", "21.2496, 54.2824, 26.7953, 0.83", "21.2124, 57.0131, 28.1821, 0.56", "21.1645, 60.3917, 29.6276, 0.56", "21.1916, 61.0325, 29.8154, 0.56", "21.4022, 62.6461, 30.1955, 0.56", "21.5989, 63.9319, 30.4666, 0.56", "22.1823, 66.8292, 31.1251, 0.83", "22.6444, 69.115, 31.8001, 0.56", "22.7576, 70.9034, 32.3746, 0.56", "22.6456, 71.4511, 32.6064, 0.83", "21.7945, 73.2572, 33.5613, 0.56", "20.4141, 75.2558, 34.7353, 1.67", "19.0623, 76.6579, 35.6685, 1.11", "16.8501, 78.4019, 36.7355, 0.83", "15.4802, 79.2535, 37.3686, 0.83", "13.7753, 80.0832, 38.1451, 0.28", "12.7245, 80.3883, 38.629, 0.56", "11.6398, 80.4875, 38.9832, 0.83", "9.47757, 80.2565, 39.3668, 0.56", "6.11241, 79.3634, 39.8877, 0.83", "4.22963, 78.7829, 40.2215, 0.28", "2.63682, 78.3318, 40.4987, 0.28", "0.419311, 77.7114, 40.9372, 0.83", "-2.29383, 77.0111, 41.452, 0.28", "-5.7451, 76.232, 42.017, 0.83", "-9.40602, 75.6828, 42.1785, 0.28", "-11.1712, 75.5644, 42.2964, 1.11", "-15.4147, 83.1036, 46.6567, 1.11", "-20.6602, 89.3173, 52.1069, 1.11", "-25.5462, 96.1602, 57.0306, 1.11", "-30.809, 102.641, 62.1068, 1.11", "-35.4215, 108.777, 68.1904, 1.11", "-41.3342, 113.798, 74.2816, 1.11", "-48.53, 118.141, 79.5083, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "24.2294, 40.074, 30.8199, 0.56", "25.2226, 41.9896, 31.2458, 0.56", "25.7459, 42.9523, 31.5331, 0.83", "27.5241, 46.0875, 32.6514, 0.56", "29.4894, 49.3384, 33.9381, 0.56", "31.9472, 53.0142, 35.426, 0.56", "33.6536, 55.5526, 36.5411, 0.56", "33.9642, 56.0038, 36.7728, 0.56", "35.2104, 57.7173, 37.6359, 0.28", "35.6742, 58.2745, 37.9517, 0.83", "37.0641, 59.4618, 38.7877, 0.56", "39.3118, 60.9992, 39.7105, 0.28", "40.3501, 61.6908, 39.9712, 0.83", "41.631, 62.4935, 40.2639, 0.56", "44.2723, 63.9261, 40.701, 1.11", "47.3734, 65.5893, 41.1722, 0.56", "53.3506, 72.59, 44.3294, 0.56", "59.9498, 79.5321, 46.0761, 0.56", "68.0447, 84.6538, 48.4015, 0.56", "76.5697, 88.6612, 51.4885, 0.56", "85.6742, 92.1983, 53.2901, 0.56", "95.0667, 94.5723, 55.643, 0.56", "104.741, 95.7633, 57.8449, 0.56", "114.206, 97.0432, 60.7759, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "24.2294, 40.074, 30.8199, 0.56", "25.3882, 40.3481, 31.1652, 0.56", "26.9193, 40.7104, 31.6214, 0.56", "27.9611, 40.9568, 31.9319, 0.83", "31.2406, 41.7327, 32.9091, 0.56", "35.4414, 42.7265, 34.1608, 0.28", "44.7463, 45.6834, 36.0926, 0.28", "53.9175, 48.83, 38.3104, 0.28", "63.6747, 50.4675, 39.6618, 0.28", "73.6707, 50.4497, 39.3811, 0.28", "83.6663, 50.7224, 39.457, 0.28", "93.5385, 52.0516, 38.6947, 0.28", "102.596, 55.1417, 35.9773, 0.28", "111.781, 57.308, 32.7479, 0.28", "121.113, 60.1687, 30.7847, 0.28", "129.849, 64.0448, 28.1312, 0.28", "138.508, 68.7485, 27.4227, 0.28", "147.27, 73.119, 25.9874, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "72.9108, 40.2128, 22.6648, 0.83", "74.688, 41.0669, 22.9618, 0.83", "76.7516, 42.1346, 23.2756, 0.83", "79.0783, 43.2782, 23.5286, 0.83", "82.1518, 44.6468, 23.9448, 0.83", "83.4576, 45.1491, 24.1926, 0.83", "87.2696, 46.4857, 25.0118, 0.83", "90.2572, 47.5006, 25.7215, 0.83", "92.3208, 48.1863, 26.229, 0.83", "94.8426, 49.008, 26.8322, 1.39", "98.4687, 49.9693, 27.6211, 0.83", "100.406, 50.3667, 28.0145, 0.83", "102.515, 50.6958, 28.4023, 1.11", "104.426, 50.9628, 28.7239, 0.83", "106.617, 51.2872, 29.0188, 0.83", "108.21, 51.5369, 29.0878, 0.83", "110.049, 51.7991, 29.0701, 0.83", "111.152, 51.9541, 28.9739, 0.83", "112.338, 52.1109, 28.7971, 1.39", "112.939, 52.2206, 28.6643, 1.39", "115.056, 52.7606, 28.0301, 0.56", "117.074, 53.4257, 27.1986, 1.67", "120.379, 54.6757, 25.5957, 0.56", "120.886, 54.8774, 25.3164, 0.83", "122.486, 55.5087, 24.3694, 0.28", "123.182, 55.7611, 23.9884, 0.56", "125.723, 56.4592, 22.7272, 0.28", "126.735, 56.6946, 22.2639, 0.56", "129.007, 57.0947, 21.4862, 0.28", "129.746, 57.2142, 21.2416, 0.56", "132.315, 57.4935, 20.494, 0.28", "134.252, 57.6473, 20.0422, 1.11", "143.934, 59.3257, 18.2727, 1.11", "153.911, 59.5614, 17.6378, 1.11", "163.779, 58.0783, 17.1921, 1.11", "173.754, 57.55, 17.6194, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "72.9108, 40.2128, 22.6648, 0.56", "75.0916, 41.6935, 23.9423, 0.56", "76.0726, 42.3613, 24.6126, 0.56", "77.594, 43.3322, 25.6662, 0.56", "81.6099, 45.8065, 28.3933, 0.56", "82.2585, 46.2018, 28.8208, 0.56", "86.8003, 48.8242, 31.6311, 0.56", "88.5097, 49.7194, 32.6014, 0.28", "89.7237, 50.3292, 33.2095, 0.56", "90.7742, 50.8312, 33.602, 0.28", "91.989, 51.4293, 33.8547, 0.56", "94.9926, 53.0356, 34.1055, 0.28", "97.95, 54.6556, 33.9136, 0.28", "99.0898, 55.422, 33.6942, 0.56", "101.665, 57.4501, 33.2326, 0.28", "102.431, 58.0854, 33.0747, 0.56", "104.66, 60.0939, 32.5209, 0.28", "105.022, 60.4779, 32.4046, 0.56", "108.755, 64.9915, 31.144, 0.28", "110.969, 67.9484, 30.3864, 1.94", "118.989, 73.1719, 32.7196, 1.94", "128.012, 77.1928, 33.5462, 1.94", "136.463, 82.1663, 34.6265, 1.94", "144.542, 86.8534, 37.8486, 1.94", "152.932, 89.5335, 42.5019, 1.94", "162.593, 90.3636, 44.9304, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "72.8386, 32.9454, 33.341, 0.56", "76.0461, 33.1703, 34.3963, 0.56", "78.7352, 33.3589, 35.281, 0.56", "80.5902, 33.489, 35.8913, 0.56", "83.7057, 33.7075, 36.9163, 0.56", "87.1469, 33.9488, 38.0485, 0.83", "96.3324, 36.2152, 41.2006, 0.83", "105.11, 39.9858, 43.8833, 0.83", "113.455, 44.7515, 46.1657, 0.83", "121.695, 50.1192, 46.5874, 0.83", "130.2, 55.0435, 47.4717, 0.83", "137.939, 61.0592, 47.5954, 0.83", "145.8, 66.8882, 46.8491, 0.83", "154.18, 72.0165, 47.6458, 0.83", "161.911, 77.7586, 49.5674, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "72.8386, 32.9454, 33.341, 0.83", "72.3778, 31.6147, 33.588, 0.83", "71.7705, 29.861, 33.9134, 0.83", "70.254, 20.5649, 35.3089, 0.83", "68.3657, 11.238, 35.5198, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.4466, -267.909, -14.845, 0.56", "-25.0279, -271.361, -14.1982, 0.56", "-25.1779, -272.932, -14.0038, 0.83", "-25.7149, -277.916, -13.3359, 0.56", "-26.1637, -281.654, -12.9775, 0.83", "-26.5267, -284.347, -12.7804, 1.94", "-26.8755, -286.98, -12.6259, 2.22", "-27.2364, -290.974, -12.3717, 0.83", "-27.4447, -294.648, -12.0107, 0.83", "-27.4794, -297.542, -11.6664, 0.83", "-27.5107, -298.835, -11.3714, 0.56", "-27.5843, -300.418, -10.8385, 0.56", "-27.7153, -303.022, -9.71182, 1.11", "-27.7598, -306.255, -7.8171, 0.56", "-27.6537, -307.235, -7.13532, 0.56", "-27.3505, -309.285, -5.3356, 0.56", "-27.1149, -310.871, -3.86142, 1.39" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-24.4466, -267.909, -14.845, 0.56", "-21.8127, -271.576, -18.3984, 0.56", "-19.5574, -275.697, -22.731, 0.56", "-18.5076, -277.988, -25.0792, 0.56", "-17.8083, -279.646, -26.6891, 0.28", "-17.2656, -281.001, -28.009, 0.28", "-16.5506, -283.042, -30.005, 1.11", "-15.9691, -285.712, -32.604, 0.28", "-15.7373, -287.348, -34.2233, 0.28", "-15.4509, -288.53, -35.5774, 2.22", "-14.4567, -291.001, -39.2586, 0.28", "-13.8536, -291.924, -41.4306, 0.28", "-13.4097, -292.244, -42.7821, 0.28", "-12.4881, -292.306, -45.1537, 0.83", "-10.0228, -291.381, -52.0335, 0.28", "-9.3845, -290.963, -53.8607, 1.67", "-8.37277, -290.076, -56.5977, 0.28", "-8.00373, -289.724, -57.5755, 0.83", "-6.94887, -288.639, -60.4638, 0.28", "-6.05368, -287.735, -62.9148, 1.67", "-4.66913, -286.384, -66.3854, 0.56", "-3.49489, -285.254, -69.3659, 0.28", "-3.36122, -285.127, -69.71, 0.83", "-1.17179, -282.952, -75.6352, 0.28", "-0.182089, -281.99, -78.2395, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.56766, 86.4081, -28.6895, 0.56", "-14.1538, 88.1967, -26.3864, 0.56", "-15.7564, 89.0112, -25.6977, 1.39", "-20.8712, 92.4543, -23.7379, 0.56", "-22.1316, 93.5339, -23.2896, 0.28", "-23.8922, 95.4488, -22.5617, 0.28", "-26.2702, 98.3354, -21.51, 0.56", "-27.9283, 100.892, -20.7149, 1.11", "-29.6887, 104.081, -19.891, 0.28", "-30.9851, 106.718, -19.3834, 1.67", "-33.4466, 111.989, -18.1531, 0.28", "-33.7476, 112.658, -17.9849, 0.28", "-34.7028, 114.624, -17.3651, 0.83", "-35.9338, 116.702, -16.5897, 0.28", "-36.7201, 117.713, -16.1807, 0.28", "-38.0686, 119.061, -15.5797, 0.83", "-40.3345, 120.822, -14.9034, 0.28", "-42.8503, 122.532, -13.9924, 1.11", "-44.8112, 123.221, -13.4148, 0.56", "-46.4161, 123.446, -12.9849, 0.28", "-48.3214, 123.598, -12.4894, 0.28", "-50.6803, 123.61, -11.9231, 0.28", "-54.0828, 123.312, -11.0668, 0.56", "-61.8189, 122.095, -9.5081, 0.28", "-63.6553, 121.7, -9.10782, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-9.56766, 86.4081, -28.6895, 0.83", "-9.50196, 88.3219, -28.5435, 0.83", "-9.29355, 90.6942, -28.6471, 0.83", "-8.79291, 95.4264, -29.1002, 0.56", "-8.29249, 99.9518, -29.8654, 0.56", "-8.02419, 102.278, -30.3547, 0.28", "-7.73886, 104.792, -30.9299, 1.67", "-6.84537, 110.961, -32.7727, 0.28", "-6.74987, 111.521, -32.9751, 0.56", "-6.31111, 114.086, -34.0754, 0.28", "-6.26314, 114.627, -34.3094, 0.83", "-6.21247, 116.164, -34.8437, 0.28", "-6.20966, 117.287, -35.2729, 0.83", "-6.34318, 120.036, -36.1731, 0.28", "-6.50964, 122.24, -37.0571, 1.94", "-6.87268, 125.732, -38.549, 0.28", "-7.17595, 127.472, -39.5513, 0.83", "-7.96631, 131.153, -41.9959, 0.28", "-8.14264, 131.891, -42.6018, 0.83", "-8.90019, 134.814, -45.396, 0.28", "-9.14582, 135.823, -46.4165, 1.11", "-10.2973, 140.944, -51.363, 0.28", "-10.59, 142.329, -52.6573, 1.39", "-11.615, 147.743, -57.0148, 0.28", "-11.6823, 148.175, -57.324, 0.56", "-12.0987, 151.83, -59.4498, 0.28", "-12.344, 155.036, -61.0312, 1.39", "-12.4503, 157.842, -61.828, 1.11", "-12.6106, 161.033, -62.3653, 0.28", "-12.6695, 161.817, -62.4104, 0.56", "-13.0456, 165.46, -62.7227, 0.28", "-13.1435, 166.286, -62.7928, 0.83", "-13.7196, 170.791, -63.3763, 0.28", "-13.8707, 171.911, -63.4743, 1.39", "-14.4229, 175.615, -63.9136, 0.28", "-14.707, 177.276, -64.1101, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-16.5123, 138.307, 35.6036, 1.94", "-17.2525, 139.759, 36.9603, 1.94", "-18.1182, 141.583, 38.6695, 0.28", "-18.4568, 142.396, 39.1552, 0.83", "-19.7546, 146.026, 40.8327, 0.28", "-20.037, 146.915, 41.041, 1.11", "-20.535, 148.561, 41.2398, 0.28", "-20.8325, 149.725, 41.3477, 1.67", "-21.7924, 153.57, 41.5276, 0.28", "-22.0038, 154.488, 41.4048, 0.83", "-22.7723, 157.902, 40.238, 0.28", "-22.8691, 158.437, 40.0146, 0.56", "-25.6717, 167.522, 40.8417, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-16.5123, 138.307, 35.6036, 0.28", "-15.9552, 141.906, 37.0423, 0.28", "-15.8797, 142.393, 37.2372, 0.83", "-15.2801, 146.268, 38.7859, 0.28", "-15.2427, 146.509, 38.8824, 0.56", "-14.8664, 148.941, 39.8545, 0.28", "-14.4456, 151.66, 40.9412, 1.11", "-14.0778, 159.861, 45.9747, 1.11", "-15.2078, 166.67, 52.8561, 1.11", "-16.1601, 173.82, 59.371, 1.11", "-16.5613, 181.049, 65.8477, 1.11", "-17.682, 188.573, 71.849, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "114.206, 97.0432, 60.7759, 0.28", "122.255, 101.976, 63.6482, 0.28", "130.976, 106.364, 65.2631, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "114.206, 97.0432, 60.7759, 0.28", "122.16, 102.366, 63.0859, 0.28", "131.004, 106.36, 65.1124, 0.28", "140.279, 108.968, 67.6504, 0.28", "149.486, 110.842, 71.0172, 0.28", "159.036, 110.891, 73.9856, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-27.1149, -310.871, -3.86142, 0.56", "-28.4682, -310.481, -3.86809, 0.56", "-30.3855, -309.929, -3.87755, 1.11", "-32.0632, -309.445, -3.88583, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-27.1149, -310.871, -3.86142, 1.39", "-27.4621, -311.788, -2.76224, 1.39", "-28.4326, -314.35, 0.309339, 1.39" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-14.707, 177.276, -64.1101, 0.28", "-14.5585, 181.005, -62.7283, 0.28", "-14.5484, 181.258, -62.6344, 0.56", "-14.4564, 183.569, -61.7781, 0.28", "-14.4251, 184.354, -61.4872, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.707, 177.276, -64.1101, 0.28", "-16.286, 177.072, -65.2078, 0.28", "-16.611, 177.03, -65.4337, 0.56", "-18.7478, 176.754, -66.9192, 0.28", "-20.2719, 176.557, -67.9787, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-28.4326, -314.35, 0.309339, 0.56", "-30.6774, -317.867, 2.83074, 0.56", "-32.5206, -320.21, 4.22295, 0.56", "-34.8111, -322.923, 5.38225, 0.56", "-36.1976, -324.58, 5.9178, 0.56", "-38.2054, -326.99, 6.80594, 0.56", "-40.8581, -330.468, 8.26653, 0.56", "-42.6362, -332.75, 9.22358, 0.56", "-44.4645, -335.36, 10.4967, 0.56", "-45.1621, -336.69, 11.1414, 0.56", "-47.0241, -341.007, 13.4137, 0.56", "-47.9187, -343.672, 14.9687, 0.56", "-48.4141, -346.28, 16.8201, 0.56", "-48.7474, -348.822, 18.9078, 0.83", "-48.9215, -350.868, 20.8422, 1.39" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-28.4326, -314.35, 0.309339, 0.56", "-26.8146, -318.801, 0.309339, 0.56", "-24.282, -325.621, -0.104851, 0.56", "-23.4207, -328.072, -0.327514, 0.56", "-22.8941, -329.76, -0.506484, 0.56", "-21.9091, -333.139, -0.88839, 0.83", "-20.8535, -337.003, -1.45594, 0.56", "-20.2854, -339.773, -2.03545, 0.56", "-20.048, -341.477, -2.49375, 1.11", "-19.9165, -343.268, -3.00796, 0.28", "-19.8343, -345.665, -3.75928, 0.28", "-19.8449, -347.995, -4.57126, 1.67", "-20.047, -350.003, -5.27277, 2.5", "-20.5516, -355.41, -6.80736, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-48.9215, -350.868, 20.8422, 0.56", "-51.588, -354.333, 21.8622, 0.56", "-53.3127, -356.923, 22.7491, 0.56", "-53.7174, -357.642, 22.9254, 0.56", "-55.2575, -360.675, 23.4285, 0.56", "-56.212, -362.837, 23.6955, 0.56", "-56.8509, -364.285, 23.8742, 0.56", "-57.5527, -366.495, 24.1443, 0.56", "-58.5222, -370.084, 24.4458, 0.56", "-59.2163, -372.877, 24.5011, 0.56", "-59.5649, -374.611, 24.2981, 0.56", "-61.6923, -383.879, 24.8337, 0.56" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-48.9215, -350.868, 20.8422, 0.28", "-49.6524, -352.907, 20.5374, 0.28", "-50.2716, -354.677, 20.1368, 0.28", "-51.29, -357.182, 19.4837, 0.28", "-51.9121, -358.573, 19.1058, 0.28", "-52.7522, -360.089, 18.668, 0.28", "-54.7939, -363.249, 17.667, 0.28", "-55.4419, -364.073, 17.2828, 0.28", "-56.5544, -365.442, 16.5366, 0.28", "-57.3215, -366.402, 15.9837, 0.28", "-59.0572, -368.527, 14.7004, 0.56", "-60.1204, -369.777, 13.9521, 0.56", "-62.4827, -372.515, 12.5089, 0.28", "-64.2037, -374.634, 11.3089, 0.28", "-65.0077, -375.851, 10.5911, 0.83", "-68.8093, -384.392, 8.41869, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-20.5516, -355.41, -6.80736, 0.28", "-20.0572, -357.984, -6.07207, 0.28", "-19.9398, -358.751, -5.88798, 0.56", "-19.8325, -359.862, -5.81775, 0.28", "-19.6585, -361.54, -5.84621, 0.28", "-19.4887, -362.841, -5.97476, 0.56", "-19.0367, -365.708, -6.35884, 0.28", "-18.7096, -367.496, -6.79848, 0.83", "-18.1346, -370.566, -7.62589, 0.28", "-17.9294, -371.629, -7.94579, 0.56", "-17.4099, -374.775, -9.03288, 0.28", "-17.2591, -375.651, -9.38976, 0.56", "-16.6456, -378.05, -10.6399, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.5516, -355.41, -6.80736, 0.28", "-19.7692, -357.128, -5.4559, 0.28", "-19.0857, -358.542, -4.27178, 0.28", "-16.6376, -362.788, -0.615644, 0.28", "-15.0997, -365.455, 1.68125, 0.28", "-14.8572, -365.876, 2.04343, 0.83", "-12.9246, -369.227, 4.92978, 0.28", "-12.4229, -370.146, 5.79808, 0.28", "-11.3736, -371.886, 7.67924, 0.28", "-8.34649, -378.791, 13.844, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_40", "dend_33", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_LBC_992411393b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_67
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_62(0), soma_0(0.4999995714066505)
    connect dend_61(0), soma_0(0.4999995714066505)
    connect dend_58(0), soma_0(0.4999995714066505)
    connect dend_53(0), soma_0(0.4999995714066505)
    connect dend_32(0), soma_0(0.4999995714066505)
    connect dend_31(0), soma_0(0.4999995714066505)
    connect dend_22(0), soma_0(0.4999995714066505)
    connect dend_17(0), soma_0(0.4999995714066505)
    connect dend_0(0), soma_0(0.4999995714066505)
    connect axon_0(0), soma_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.1095, -11.685, 0.570337, 3.16052 ) }
    soma_0 { pt3dadd( -4.63521, -10.5008, 0.513621, 5.45982 ) }
    soma_0 { pt3dadd( -4.16092, -9.31666, 0.456904, 7.50899 ) }
    soma_0 { pt3dadd( -3.68663, -8.13248, 0.400188, 11.3322 ) }
    soma_0 { pt3dadd( -3.21235, -6.9483, 0.343471, 12.8266 ) }
    soma_0 { pt3dadd( -2.73806, -5.76412, 0.286755, 14.3389 ) }
    soma_0 { pt3dadd( -2.26377, -4.57994, 0.230039, 15.4162 ) }
    soma_0 { pt3dadd( -1.78948, -3.39575, 0.173322, 16.3756 ) }
    soma_0 { pt3dadd( -1.3152, -2.21157, 0.116606, 17.1148 ) }
    soma_0 { pt3dadd( -0.840909, -1.02739, 0.0598891, 17.5087 ) }
    soma_0 { pt3dadd( -0.366622, 0.156787, 0.00317258, 18.1754 ) }
    soma_0 { pt3dadd( 0.107666, 1.34097, -0.0535439, 18.705 ) }
    soma_0 { pt3dadd( 0.581953, 2.52515, -0.11026, 18.3379 ) }
    soma_0 { pt3dadd( 1.05624, 3.70933, -0.166977, 17.6777 ) }
    soma_0 { pt3dadd( 1.53053, 4.89351, -0.223693, 16.2317 ) }
    soma_0 { pt3dadd( 2.00482, 6.07769, -0.28041, 14.5638 ) }
    soma_0 { pt3dadd( 2.4791, 7.26187, -0.337126, 12.887 ) }
    soma_0 { pt3dadd( 2.95339, 8.44605, -0.393843, 11.0587 ) }
    soma_0 { pt3dadd( 3.42768, 9.63023, -0.450559, 9.10164 ) }
    soma_0 { pt3dadd( 3.90197, 10.8144, -0.507276, 6.70215 ) }
    soma_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 4.57645 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.68434, 6.30127, -20.3386, 1.67 ) }
    dend_62 { pt3dadd( 6.94548, 9.5296, -22.5151, 1.67 ) }
    dend_62 { pt3dadd( 8.42093, 13.3065, -25.0616, 2.22 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 7.73434, 4.99027, -12.2086, 1.11 ) }
    dend_61 { pt3dadd( 8.72287, 4.10744, -13.4808, 1.11 ) }
    dend_61 { pt3dadd( 10.1301, 3.25316, -15.3482, 0.83 ) }
    dend_61 { pt3dadd( 13.9744, 1.68626, -20.2331, 1.39 ) }
    dend_61 { pt3dadd( 14.8212, 1.46966, -21.1212, 1.39 ) }
    dend_61 { pt3dadd( 17.1503, 1.01778, -23.0515, 0.56 ) }
    dend_61 { pt3dadd( 20.1974, 0.450477, -24.9874, 1.11 ) }
    dend_61 { pt3dadd( 22.7952, 0.0440818, -26.0702, 1.39 ) }
    dend_61 { pt3dadd( 24.1384, -0.130776, -26.4728, 0.83 ) }
    dend_61 { pt3dadd( 27.8096, -0.579065, -27.2301, 1.11 ) }
    dend_61 { pt3dadd( 30.6352, -0.899195, -27.9375, 0.56 ) }
    dend_61 { pt3dadd( 33.4652, -1.20853, -28.7212, 1.11 ) }
    dend_61 { pt3dadd( 37.4763, -1.74576, -30.0278, 0.83 ) }
    dend_61 { pt3dadd( 40.3921, -2.08606, -31.3279, 0.56 ) }
    dend_61 { pt3dadd( 42.9643, -2.29141, -32.8915, 1.11 ) }
    dend_61 { pt3dadd( 45.774, -2.25642, -35.319, 0.56 ) }
    dend_61 { pt3dadd( 46.7312, -2.14133, -36.2879, 0.28 ) }
    dend_61 { pt3dadd( 48.1755, -1.85961, -37.997, 0.83 ) }
    dend_61 { pt3dadd( 50.0167, -1.39257, -40.2643, 0.83 ) }
    dend_61 { pt3dadd( 50.8295, -1.232, -41.1852, 0.83 ) }
    dend_61 { pt3dadd( 53.0789, -0.955415, -43.2846, 0.56 ) }
    dend_61 { pt3dadd( 55.071, -0.855935, -45.0056, 1.11 ) }
    dend_61 { pt3dadd( 57.8183, -0.808565, -47.5282, 1.11 ) }
    dend_61 { pt3dadd( 59.0523, -0.810835, -48.6564, 0.28 ) }
    dend_61 { pt3dadd( 61.7123, -0.892565, -51.1429, 0.83 ) }
    dend_61 { pt3dadd( 67.5226, -1.156, -56.4404, 0.28 ) }
    dend_61 { pt3dadd( 71.2175, -1.40221, -59.7313, 1.94 ) }
    dend_61 { pt3dadd( 76.5101, -1.83895, -64.3398, 0.28 ) }
    dend_61 { pt3dadd( 78.0553, -1.95522, -65.6413, 0.56 ) }
    dend_61 { pt3dadd( 81.9645, -2.29587, -69.0226, 0.28 ) }
    dend_61 { pt3dadd( 83.7594, -2.47594, -70.8398, 0.83 ) }
    dend_61 { pt3dadd( 87.4309, -2.95404, -74.9353, 0.28 ) }
    dend_61 { pt3dadd( 88.7286, -3.15707, -76.4647, 1.39 ) }
    dend_61 { pt3dadd( 91.0771, -3.55362, -79.4014, 0.28 ) }
    dend_61 { pt3dadd( 92.6161, -3.79811, -81.486, 1.39 ) }
    dend_61 { pt3dadd( 100.329, -4.91319, -92.5365, 0.28 ) }
    dend_61 { pt3dadd( 101.512, -5.10705, -94.5219, 1.39 ) }
    dend_61 { pt3dadd( 105.355, -5.85598, -101.559, 0.28 ) }
    dend_61 { pt3dadd( 107.11, -6.25078, -105.029, 1.11 ) }
    dend_61 { pt3dadd( 108.732, -6.6991, -108.493, 0.28 ) }
    dend_61 { pt3dadd( 108.97, -6.77727, -109.051, 1.11 ) }
    dend_61 { pt3dadd( 113.358, -9.09245, -122.02, 0.28 ) }
    dend_61 { pt3dadd( 113.719, -9.35336, -123.337, 0.28 ) }
    dend_61 { pt3dadd( 114.14, -9.82848, -125.197, 0.83 ) }
    dend_61 { pt3dadd( 114.841, -10.9069, -128.658, 0.28 ) }
    dend_61 { pt3dadd( 115.273, -11.8395, -130.952, 1.11 ) }
    dend_61 { pt3dadd( 117.238, -16.6752, -140.938, 0.28 ) }
    dend_61 { pt3dadd( 117.41, -17.1106, -141.674, 1.11 ) }
    dend_61 { pt3dadd( 118.694, -20.1385, -146.512, 0.28 ) }
    dend_61 { pt3dadd( 119.862, -22.5192, -150.045, 0.83 ) }
    dend_61 { pt3dadd( 122.07, -26.6483, -155.673, 0.28 ) }
    dend_61 { pt3dadd( 122.322, -27.1003, -156.245, 0.83 ) }
    dend_61 { pt3dadd( 124.614, -31.0039, -160.618, 0.28 ) }
    dend_61 { pt3dadd( 124.98, -31.603, -161.299, 1.11 ) }
    dend_61 { pt3dadd( 127.711, -35.6875, -165.934, 0.28 ) }
    dend_61 { pt3dadd( 128.078, -36.1708, -166.472, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -8.92566, -4.19623, -8.61862, 1.39 ) }
    dend_58 { pt3dadd( -11.1458, -4.32872, -9.75527, 1.39 ) }
    dend_58 { pt3dadd( -15.7214, -4.34571, -11.7213, 1.39 ) }
    dend_58 { pt3dadd( -19.3291, -4.19543, -12.9684, 1.39 ) }
    dend_58 { pt3dadd( -25.1671, -3.68792, -14.6838, 1.11 ) }
    dend_58 { pt3dadd( -29.2636, -3.33179, -15.8875, 1.11 ) }
    dend_58 { pt3dadd( -32.8774, -3.01764, -16.9494, 1.11 ) }
    dend_58 { pt3dadd( -36.7126, -2.49934, -17.86, 0.83 ) }
    dend_58 { pt3dadd( -39.5175, -1.9087, -18.1427, 0.83 ) }
    dend_58 { pt3dadd( -41.4535, -1.40999, -18.0923, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -9.85566, -1.37473, -2.22863, 1.67 ) }
    dend_53 { pt3dadd( -11.6517, -1.20226, -1.79457, 1.67 ) }
    dend_53 { pt3dadd( -15.3093, -0.850995, -0.910583, 1.67 ) }
    dend_53 { pt3dadd( -18.6481, -0.530366, -0.103679, 1.94 ) }
    dend_53 { pt3dadd( -21.9263, -0.215547, 0.688604, 1.67 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.56434, 11.9062, -4.92863, 3.89 ) }
    dend_32 { pt3dadd( 3.56434, 14.0247, -4.92863, 3.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.73434, 4.99027, -12.2086, 1.11 ) }
    dend_31 { pt3dadd( 8.72287, 4.10744, -13.4808, 1.11 ) }
    dend_31 { pt3dadd( 10.1301, 3.25316, -15.3482, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 13.9744, 1.68626, -20.2331, 1.39 ) }
    dend_31 { pt3dadd( 14.8212, 1.46966, -21.1212, 1.39 ) }
    dend_31 { pt3dadd( 17.1503, 1.01778, -23.0515, 0.56 ) }
    dend_31 { pt3dadd( 20.1974, 0.450477, -24.9874, 1.11 ) }
    dend_31 { pt3dadd( 22.7952, 0.0440818, -26.0702, 1.39 ) }
    dend_31 { pt3dadd( 24.1384, -0.130776, -26.4728, 0.83 ) }
    dend_31 { pt3dadd( 27.8096, -0.579065, -27.2301, 1.11 ) }
    dend_31 { pt3dadd( 30.6352, -0.899195, -27.9375, 0.56 ) }
    dend_31 { pt3dadd( 33.4652, -1.20853, -28.7212, 1.11 ) }
    dend_31 { pt3dadd( 37.4763, -1.74576, -30.0278, 0.83 ) }
    dend_31 { pt3dadd( 40.3921, -2.08606, -31.3279, 0.56 ) }
    dend_31 { pt3dadd( 42.9643, -2.29141, -32.8915, 1.11 ) }
    dend_31 { pt3dadd( 45.774, -2.25642, -35.319, 0.56 ) }
    dend_31 { pt3dadd( 46.7312, -2.14133, -36.2879, 0.28 ) }
    dend_31 { pt3dadd( 48.1755, -1.85961, -37.997, 0.83 ) }
    dend_31 { pt3dadd( 50.0167, -1.39257, -40.2643, 0.83 ) }
    dend_31 { pt3dadd( 50.8295, -1.232, -41.1852, 0.83 ) }
    dend_31 { pt3dadd( 53.0789, -0.955415, -43.2846, 0.56 ) }
    dend_31 { pt3dadd( 55.071, -0.855935, -45.0056, 1.11 ) }
    dend_31 { pt3dadd( 57.8183, -0.808565, -47.5282, 1.11 ) }
    dend_31 { pt3dadd( 59.0523, -0.810835, -48.6564, 0.28 ) }
    dend_31 { pt3dadd( 61.7123, -0.892565, -51.1429, 0.83 ) }
    dend_31 { pt3dadd( 67.5226, -1.156, -56.4404, 0.28 ) }
    dend_31 { pt3dadd( 71.2175, -1.40221, -59.7313, 1.94 ) }
    dend_31 { pt3dadd( 76.5101, -1.83895, -64.3398, 0.28 ) }
    dend_31 { pt3dadd( 78.0553, -1.95522, -65.6413, 0.56 ) }
    dend_31 { pt3dadd( 81.9645, -2.29587, -69.0226, 0.28 ) }
    dend_31 { pt3dadd( 83.7594, -2.47594, -70.8398, 0.83 ) }
    dend_31 { pt3dadd( 87.4309, -2.95404, -74.9353, 0.28 ) }
    dend_31 { pt3dadd( 88.7286, -3.15707, -76.4647, 1.39 ) }
    dend_31 { pt3dadd( 91.0771, -3.55362, -79.4014, 0.28 ) }
    dend_31 { pt3dadd( 92.6161, -3.79811, -81.486, 1.39 ) }
    dend_31 { pt3dadd( 100.329, -4.91319, -92.5365, 0.28 ) }
    dend_31 { pt3dadd( 101.512, -5.10705, -94.5219, 1.39 ) }
    dend_31 { pt3dadd( 105.355, -5.85598, -101.559, 0.28 ) }
    dend_31 { pt3dadd( 107.11, -6.25078, -105.029, 1.11 ) }
    dend_31 { pt3dadd( 108.732, -6.6991, -108.493, 0.28 ) }
    dend_31 { pt3dadd( 108.97, -6.77727, -109.051, 1.11 ) }
    dend_31 { pt3dadd( 113.358, -9.09245, -122.02, 0.28 ) }
    dend_31 { pt3dadd( 113.719, -9.35336, -123.337, 0.28 ) }
    dend_31 { pt3dadd( 114.14, -9.82848, -125.197, 0.83 ) }
    dend_31 { pt3dadd( 114.841, -10.9069, -128.658, 0.28 ) }
    dend_31 { pt3dadd( 115.273, -11.8395, -130.952, 1.11 ) }
    dend_31 { pt3dadd( 117.238, -16.6752, -140.938, 0.28 ) }
    dend_31 { pt3dadd( 117.41, -17.1106, -141.674, 1.11 ) }
    dend_31 { pt3dadd( 118.694, -20.1385, -146.512, 0.28 ) }
    dend_31 { pt3dadd( 119.862, -22.5192, -150.045, 0.83 ) }
    dend_31 { pt3dadd( 122.07, -26.6483, -155.673, 0.28 ) }
    dend_31 { pt3dadd( 122.322, -27.1003, -156.245, 0.83 ) }
    dend_31 { pt3dadd( 124.614, -31.0039, -160.618, 0.28 ) }
    dend_31 { pt3dadd( 124.98, -31.603, -161.299, 1.11 ) }
    dend_31 { pt3dadd( 127.711, -35.6875, -165.934, 0.28 ) }
    dend_31 { pt3dadd( 128.078, -36.1708, -166.472, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 9.05434, 0.477776, 1.01137, 1.94 ) }
    dend_22 { pt3dadd( 10.8019, 0.368257, 1.89215, 1.94 ) }
    dend_22 { pt3dadd( 14.1264, 0.540431, 3.50755, 1.39 ) }
    dend_22 { pt3dadd( 18.7946, 1.55832, 5.12712, 1.39 ) }
    dend_22 { pt3dadd( 21.3905, 2.53044, 5.69197, 1.67 ) }
    dend_22 { pt3dadd( 23.1597, 3.43611, 5.90316, 1.67 ) }
    dend_22 { pt3dadd( 26.2439, 5.32772, 6.30948, 1.11 ) }
    dend_22 { pt3dadd( 29.1613, 7.62299, 6.53222, 1.11 ) }
    dend_22 { pt3dadd( 35.0195, 13.216, 6.98364, 1.11 ) }
    dend_22 { pt3dadd( 36.0829, 14.3635, 7.04409, 1.11 ) }
    dend_22 { pt3dadd( 37.8969, 16.3699, 7.22066, 1.39 ) }
    dend_22 { pt3dadd( 41.4064, 20.2065, 7.78349, 1.11 ) }
    dend_22 { pt3dadd( 43.4668, 22.3157, 8.19878, 1.11 ) }
    dend_22 { pt3dadd( 46.343, 24.8794, 9.07738, 1.11 ) }
    dend_22 { pt3dadd( 49.485, 27.4325, 10.3189, 1.11 ) }
    dend_22 { pt3dadd( 52.7355, 30.07, 11.5852, 1.11 ) }
    dend_22 { pt3dadd( 55.0609, 31.9452, 12.4275, 1.11 ) }
    dend_22 { pt3dadd( 57.154, 33.6306, 13.03, 1.11 ) }
    dend_22 { pt3dadd( 60.3061, 36.1996, 13.984, 1.94 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.21434, 2.69127, -15.0986, 1.39 ) }
    dend_17 { pt3dadd( 13.0663, 1.50948, -14.6417, 1.39 ) }
    dend_17 { pt3dadd( 23.1358, -0.943095, -13.6934, 1.11 ) }
    dend_17 { pt3dadd( 28.0972, -2.15153, -13.2262, 1.11 ) }
    dend_17 { pt3dadd( 31.1487, -2.89478, -12.9388, 1.11 ) }
    dend_17 { pt3dadd( 34.1445, -3.62445, -12.6567, 1.11 ) }
    dend_17 { pt3dadd( 36.0206, -4.08141, -12.48, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 79/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.86566, -10.1718, 5.67137, 3.61 ) }
    dend_0 { pt3dadd( -2.40519, -12.2367, 5.71441, 3.05 ) }
    dend_0 { pt3dadd( -3.80705, -17.6021, 5.82624, 3.05 ) }
    dend_0 { pt3dadd( -4.68387, -20.958, 5.89619, 2.5 ) }
    dend_0 { pt3dadd( -5.79667, -25.2171, 5.98496, 2.22 ) }
    dend_0 { pt3dadd( -6.16963, -26.6445, 6.01471, 2.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 9.95335, 25.9233, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 15.5304, 39.8479, -0.563992, 1.67 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 88/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 8.42093, 13.3065, -25.0616, 1.39 ) }
    dend_66 { pt3dadd( 8.94617, 12.741, -26.7891, 1.39 ) }
    dend_66 { pt3dadd( 9.15122, 12.625, -27.3874, 1.39 ) }
    dend_66 { pt3dadd( 10.7638, 12.3976, -33.5685, 0.83 ) }
    dend_66 { pt3dadd( 11.6579, 12.5207, -38.3259, 1.39 ) }
    dend_66 { pt3dadd( 12.4216, 12.7046, -43.0001, 0.56 ) }
    dend_66 { pt3dadd( 12.6396, 12.7813, -44.3735, 0.56 ) }
    dend_66 { pt3dadd( 13.4639, 13.177, -50.1873, 1.67 ) }
    dend_66 { pt3dadd( 14.7756, 14.0591, -59.7302, 1.67 ) }
    dend_66 { pt3dadd( 15.6268, 14.7884, -65.7806, 1.67 ) }
    dend_66 { pt3dadd( 16.6453, 15.6525, -72.8755, 0.83 ) }
    dend_66 { pt3dadd( 16.9628, 15.8152, -74.892, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_66 { pt3dadd( 17.9416, 16.222, -80.7202, 0.83 ) }
    dend_66 { pt3dadd( 18.6695, 16.4771, -84.4635, 0.28 ) }
    dend_66 { pt3dadd( 19.4311, 16.5867, -87.3889, 1.11 ) }
    dend_66 { pt3dadd( 20.2326, 16.6357, -89.7578, 1.39 ) }
    dend_66 { pt3dadd( 21.771, 16.6554, -93.5703, 0.28 ) }
    dend_66 { pt3dadd( 21.771, 16.6554, -93.5703, 0.56 ) }
    dend_66 { pt3dadd( 23.0626, 16.7303, -96.2917, 0.28 ) }
    dend_66 { pt3dadd( 24.04, 16.784, -98.2833, 0.83 ) }
    dend_66 { pt3dadd( 26.7693, 16.9514, -103.807, 0.56 ) }
    dend_66 { pt3dadd( 27.644, 17.0008, -105.597, 1.94 ) }
    dend_66 { pt3dadd( 35.8149, 17.3219, -122.372, 0.28 ) }
    dend_66 { pt3dadd( 36.0602, 17.3254, -122.87, 0.83 ) }
    dend_66 { pt3dadd( 37.8603, 17.2742, -126.76, 0.56 ) }
    dend_66 { pt3dadd( 38.7557, 17.1963, -128.781, 0.83 ) }
    dend_66 { pt3dadd( 40.7876, 16.787, -133.774, 0.28 ) }
    dend_66 { pt3dadd( 41.1966, 16.6686, -134.827, 1.39 ) }
    dend_66 { pt3dadd( 41.5764, 16.5054, -135.898, 1.39 ) }
    dend_66 { pt3dadd( 46.051, 14.6278, -148.995, 0.28 ) }
    dend_66 { pt3dadd( 46.479, 14.4582, -150.342, 1.11 ) }
    dend_66 { pt3dadd( 48.5299, 13.7302, -156.729, 0.28 ) }
    dend_66 { pt3dadd( 48.8809, 13.6184, -157.838, 0.83 ) }
    dend_66 { pt3dadd( 50.7809, 13.0673, -163.974, 0.28 ) }
    dend_66 { pt3dadd( 51.1375, 12.9658, -165.151, 1.11 ) }
    dend_66 { pt3dadd( 54.4887, 12.1387, -175.431, 0.28 ) }
    dend_66 { pt3dadd( 55.2904, 11.9921, -178.025, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 25/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 8.42093, 13.3065, -25.0616, 0.56 ) }
    dend_63 { pt3dadd( 7.65557, 16.9675, -24.2237, 0.56 ) }
    dend_63 { pt3dadd( 6.8958, 18.2167, -24.6385, 0.56 ) }
    dend_63 { pt3dadd( 5.7824, 19.8794, -25.5231, 0.83 ) }
    dend_63 { pt3dadd( 5.01912, 20.9603, -26.1208, 0.56 ) }
    dend_63 { pt3dadd( 3.62893, 22.8027, -27.1181, 0.83 ) }
    dend_63 { pt3dadd( 1.15335, 25.9149, -28.8288, 2.22 ) }
    dend_63 { pt3dadd( -1.58974, 28.935, -30.6966, 0.56 ) }
    dend_63 { pt3dadd( -3.74717, 31.1528, -32.0433, 0.56 ) }
    dend_63 { pt3dadd( -5.14247, 32.5247, -32.853, 0.56 ) }
    dend_63 { pt3dadd( -6.52087, 33.9442, -33.6331, 1.67 ) }
    dend_63 { pt3dadd( -9.27211, 37.0339, -35.1071, 0.56 ) }
    dend_63 { pt3dadd( -10.7885, 39.1244, -35.8452, 1.11 ) }
    dend_63 { pt3dadd( -11.8202, 40.8713, -36.3659, 0.28 ) }
    dend_63 { pt3dadd( -12.4995, 42.3678, -36.8154, 0.83 ) }
    dend_63 { pt3dadd( -13.5301, 45.4184, -37.5749, 0.28 ) }
    dend_63 { pt3dadd( -14.0373, 47.387, -38.2531, 1.39 ) }
    dend_63 { pt3dadd( -15.3818, 53.718, -40.7615, 0.28 ) }
    dend_63 { pt3dadd( -15.7283, 55.6358, -41.6084, 1.39 ) }
    dend_63 { pt3dadd( -16.4853, 60.2685, -43.8406, 0.28 ) }
    dend_63 { pt3dadd( -17.0508, 64.0372, -45.6763, 1.67 ) }
    dend_63 { pt3dadd( -18.4218, 73.5082, -50.5311, 0.28 ) }
    dend_63 { pt3dadd( -18.5933, 74.6818, -51.136, 0.28 ) }
    dend_63 { pt3dadd( -18.7216, 75.5314, -51.5792, 0.56 ) }
    dend_63 { pt3dadd( -18.9392, 77.2644, -52.5257, 0.28 ) }
    dend_63 { pt3dadd( -19.1553, 79.5328, -53.7507, 0.56 ) }
    dend_63 { pt3dadd( -19.311, 82.2897, -55.1567, 0.28 ) }
    dend_63 { pt3dadd( -19.3404, 85.2224, -56.2026, 1.94 ) }
    dend_63 { pt3dadd( -19.3778, 88.6543, -57.6238, 0.28 ) }
    dend_63 { pt3dadd( -19.507, 91.961, -59.2826, 1.39 ) }
    dend_63 { pt3dadd( -19.5976, 93.3914, -60.0375, 0.28 ) }
    dend_63 { pt3dadd( -19.6807, 94.3102, -60.5911, 0.56 ) }
    dend_63 { pt3dadd( -19.9734, 97.0353, -62.3211, 0.28 ) }
    dend_63 { pt3dadd( -20.0701, 97.6718, -62.8116, 0.56 ) }
    dend_63 { pt3dadd( -20.5604, 100.026, -64.654, 0.28 ) }
    dend_63 { pt3dadd( -21.008, 101.884, -66.0728, 1.39 ) }
    dend_63 { pt3dadd( -21.8833, 105.36, -68.769, 0.28 ) }
    dend_63 { pt3dadd( -22.3388, 107.29, -70.3633, 1.67 ) }
    dend_63 { pt3dadd( -22.8688, 109.581, -72.312, 0.28 ) }
    dend_63 { pt3dadd( -23.1358, 110.963, -73.598, 1.11 ) }
    dend_63 { pt3dadd( -23.3015, 112.107, -74.7458, 0.28 ) }
    dend_63 { pt3dadd( -23.3452, 112.539, -75.1674, 0.83 ) }
    dend_63 { pt3dadd( -23.4938, 115.323, -77.0676, 0.28 ) }
    dend_63 { pt3dadd( -23.4885, 115.652, -77.2514, 0.56 ) }
    dend_63 { pt3dadd( -23.3006, 117.508, -78.0667, 0.28 ) }
    dend_63 { pt3dadd( -23.1889, 118.361, -78.4546, 0.83 ) }
    dend_63 { pt3dadd( -22.826, 121.748, -79.7319, 0.28 ) }
    dend_63 { pt3dadd( -22.755, 124.187, -80.1251, 1.39 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 73/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -41.4535, -1.40999, -18.0923, 0.56 ) }
    dend_60 { pt3dadd( -44.4801, -1.72193, -18.0842, 0.56 ) }
    dend_60 { pt3dadd( -47.1209, -1.74335, -18.1471, 0.56 ) }
    dend_60 { pt3dadd( -49.3433, -1.58757, -18.2317, 0.56 ) }
    dend_60 { pt3dadd( -52.161, -1.17729, -18.3609, 0.56 ) }
    dend_60 { pt3dadd( -56.0453, -0.470137, -18.6474, 0.56 ) }
    dend_60 { pt3dadd( -57.6266, -0.152993, -18.8236, 0.28 ) }
    dend_60 { pt3dadd( -59.1915, 0.295506, -19.1248, 0.83 ) }
    dend_60 { pt3dadd( -60.2809, 0.674788, -19.3517, 0.28 ) }
    dend_60 { pt3dadd( -61.5545, 1.11537, -19.6424, 0.56 ) }
    dend_60 { pt3dadd( -63.5449, 1.72282, -20.1506, 0.28 ) }
    dend_60 { pt3dadd( -65.1731, 2.06478, -20.4718, 1.67 ) }
    dend_60 { pt3dadd( -66.6358, 2.2204, -20.7559, 1.94 ) }
    dend_60 { pt3dadd( -68.3518, 2.31863, -21.1103, 1.11 ) }
    dend_60 { pt3dadd( -70.4676, 2.38624, -21.5046, 0.56 ) }
    dend_60 { pt3dadd( -72.0549, 2.36835, -21.8094, 0.56 ) }
    dend_60 { pt3dadd( -74.0306, 2.30822, -22.1637, 0.56 ) }
    dend_60 { pt3dadd( -74.8984, 2.24422, -22.2681, 0.56 ) }
    dend_60 { pt3dadd( -78.3268, 1.84824, -22.6016, 0.28 ) }
    dend_60 { pt3dadd( -79.9144, 1.59319, -22.7635, 1.39 ) }
    dend_60 { pt3dadd( -84.653, 0.747745, -23.2346, 0.56 ) }
    dend_60 { pt3dadd( -86.5489, 0.378624, -23.4154, 1.67 ) }
    dend_60 { pt3dadd( -90.6216, -0.500666, -23.7628, 0.28 ) }
    dend_60 { pt3dadd( -92.8807, -1.0686, -23.8547, 0.83 ) }
    dend_60 { pt3dadd( -95.4151, -1.80893, -23.631, 0.28 ) }
    dend_60 { pt3dadd( -96.5871, -2.13558, -23.4182, 0.56 ) }
    dend_60 { pt3dadd( -99.1213, -2.78657, -22.6806, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_60 { pt3dadd( -101.141, -3.29814, -21.9153, 0.28 ) }
    dend_60 { pt3dadd( -103.555, -3.85883, -20.8528, 2.22 ) }
    dend_60 { pt3dadd( -108.46, -4.955, -18.4798, 0.28 ) }
    dend_60 { pt3dadd( -110.491, -5.42178, -17.55, 0.28 ) }
    dend_60 { pt3dadd( -112.208, -5.87649, -16.7715, 1.39 ) }
    dend_60 { pt3dadd( -115.587, -6.8614, -15.2638, 0.28 ) }
    dend_60 { pt3dadd( -117.072, -7.35721, -14.645, 0.28 ) }
    dend_60 { pt3dadd( -118.603, -7.99995, -14.0799, 0.83 ) }
    dend_60 { pt3dadd( -121.693, -9.63347, -12.9707, 0.28 ) }
    dend_60 { pt3dadd( -124.503, -11.4279, -11.921, 0.28 ) }
    dend_60 { pt3dadd( -125.167, -11.9103, -11.6768, 0.28 ) }
    dend_60 { pt3dadd( -126.199, -12.7302, -11.299, 0.56 ) }
    dend_60 { pt3dadd( -129.045, -15.2388, -10.0775, 0.28 ) }
    dend_60 { pt3dadd( -129.934, -16.0593, -9.73839, 1.11 ) }
    dend_60 { pt3dadd( -132.054, -18.1199, -9.06087, 0.28 ) }
    dend_60 { pt3dadd( -133.032, -19.053, -8.87005, 0.56 ) }
    dend_60 { pt3dadd( -134.942, -20.84, -8.56751, 0.28 ) }
    dend_60 { pt3dadd( -136.258, -22.0759, -8.4171, 1.11 ) }
    dend_60 { pt3dadd( -138.804, -24.3869, -8.27747, 0.28 ) }
    dend_60 { pt3dadd( -139.262, -24.7934, -8.26516, 0.83 ) }
    dend_60 { pt3dadd( -141.657, -26.8579, -8.04938, 0.28 ) }
    dend_60 { pt3dadd( -142.073, -27.2054, -8.03201, 0.56 ) }
    dend_60 { pt3dadd( -144.475, -29.1241, -8.01906, 0.28 ) }
    dend_60 { pt3dadd( -145.676, -30.0461, -8.01148, 1.11 ) }
    dend_60 { pt3dadd( -149.676, -33.005, -7.92331, 0.28 ) }
    dend_60 { pt3dadd( -151.779, -34.4666, -7.8567, 1.94 ) }
    dend_60 { pt3dadd( -154.476, -36.2247, -7.80335, 0.28 ) }
    dend_60 { pt3dadd( -155.697, -36.8929, -7.68498, 0.83 ) }
    dend_60 { pt3dadd( -156.95, -37.414, -7.46157, 0.28 ) }
    dend_60 { pt3dadd( -157.987, -37.6981, -7.20977, 0.56 ) }
    dend_60 { pt3dadd( -160.624, -37.9463, -6.4412, 0.28 ) }
    dend_60 { pt3dadd( -161.569, -37.949, -6.09421, 0.83 ) }
    dend_60 { pt3dadd( -165.122, -37.7146, -4.48803, 0.28 ) }
    dend_60 { pt3dadd( -165.473, -37.6799, -4.31798, 0.83 ) }
    dend_60 { pt3dadd( -167.869, -37.3903, -3.12698, 0.28 ) }
    dend_60 { pt3dadd( -169.701, -37.1793, -2.30505, 0.83 ) }
    dend_60 { pt3dadd( -173.868, -36.7858, -0.756612, 0.28 ) }
    dend_60 { pt3dadd( -174.302, -36.7508, -0.626445, 0.83 ) }
    dend_60 { pt3dadd( -175.659, -36.635, -0.325802, 0.28 ) }
    dend_60 { pt3dadd( -175.936, -36.6099, -0.282217, 0.83 ) }
    dend_60 { pt3dadd( -179.304, -36.231, 0.0251823, 0.28 ) }
    dend_60 { pt3dadd( -180.927, -35.9033, -0.0681008, 0.83 ) }
    dend_60 { pt3dadd( -183.241, -35.2413, -0.443685, 0.28 ) }
    dend_60 { pt3dadd( -183.83, -35.0661, -0.549451, 0.83 ) }
    dend_60 { pt3dadd( -186.775, -34.1239, -1.13927, 0.28 ) }
    dend_60 { pt3dadd( -188.06, -33.6633, -1.40421, 0.56 ) }
    dend_60 { pt3dadd( -192.852, -31.5669, -2.44048, 0.28 ) }
    dend_60 { pt3dadd( -194.252, -30.8691, -2.74736, 0.83 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 48/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -41.4535, -1.40999, -18.0923, 0.56 ) }
    dend_59 { pt3dadd( -43.8762, -1.82074, -23.9583, 0.56 ) }
    dend_59 { pt3dadd( -45.7765, -1.54278, -26.3014, 0.56 ) }
    dend_59 { pt3dadd( -46.5257, -1.28243, -27.088, 0.56 ) }
    dend_59 { pt3dadd( -47.1259, -0.924485, -27.9918, 1.39 ) }
    dend_59 { pt3dadd( -48.0247, -0.346703, -29.3775, 1.67 ) }
    dend_59 { pt3dadd( -49.445, 0.522139, -31.5673, 0.83 ) }
    dend_59 { pt3dadd( -51.0614, 1.60504, -33.9409, 0.28 ) }
    dend_59 { pt3dadd( -52.5023, 2.60495, -36.0773, 1.11 ) }
    dend_59 { pt3dadd( -56.9074, 5.78348, -42.8245, 0.28 ) }
    dend_59 { pt3dadd( -57.6171, 6.31704, -43.9113, 0.28 ) }
    dend_59 { pt3dadd( -58.8828, 7.26216, -45.9954, 1.67 ) }
    dend_59 { pt3dadd( -60.7247, 8.54988, -48.9603, 0.56 ) }
    dend_59 { pt3dadd( -62.5558, 9.54605, -51.6299, 0.83 ) }
    dend_59 { pt3dadd( -63.5472, 9.95881, -52.9114, 1.39 ) }
    dend_59 { pt3dadd( -65.1585, 10.4535, -54.6039, 0.28 ) }
    dend_59 { pt3dadd( -70.3838, 11.7387, -59.6607, 0.28 ) }
    dend_59 { pt3dadd( -71.9677, 11.8864, -61.0522, 1.39 ) }
    dend_59 { pt3dadd( -76.8605, 11.9624, -65.0741, 0.28 ) }
    dend_59 { pt3dadd( -77.167, 11.9472, -65.318, 0.56 ) }
    dend_59 { pt3dadd( -79.7367, 11.7073, -67.4459, 0.28 ) }
    dend_59 { pt3dadd( -81.4618, 11.4859, -68.8546, 1.39 ) }
    dend_59 { pt3dadd( -93.4416, 10.1139, -77.8404, 0.28 ) }
    dend_59 { pt3dadd( -94.1576, 10.0415, -78.403, 0.83 ) }
    dend_59 { pt3dadd( -95.7237, 9.91213, -79.6471, 0.83 ) }
    dend_59 { pt3dadd( -100.388, 9.57528, -83.4393, 0.28 ) }
    dend_59 { pt3dadd( -101.053, 9.50319, -84.006, 0.56 ) }
    dend_59 { pt3dadd( -108.084, 8.57558, -90.1697, 0.28 ) }
    dend_59 { pt3dadd( -110.166, 8.19901, -92.0085, 1.11 ) }
    dend_59 { pt3dadd( -115.043, 7.19485, -96.3435, 0.28 ) }
    dend_59 { pt3dadd( -115.503, 7.09588, -96.7553, 0.83 ) }
    dend_59 { pt3dadd( -126.256, 4.48611, -106.204, 0.28 ) }
    dend_59 { pt3dadd( -127.588, 4.07896, -107.467, 1.11 ) }
    dend_59 { pt3dadd( -131.471, 2.5261, -111.589, 0.28 ) }
    dend_59 { pt3dadd( -132.632, 2.03412, -112.839, 0.83 ) }
    dend_59 { pt3dadd( -136.066, 0.463717, -116.771, 0.28 ) }
    dend_59 { pt3dadd( -136.579, 0.22843, -117.382, 0.83 ) }
    dend_59 { pt3dadd( -139.924, -1.48504, -121.991, 0.28 ) }
    dend_59 { pt3dadd( -141.578, -2.38458, -124.372, 1.39 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 87/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -21.9263, -0.215547, 0.688604, 1.11 ) }
    dend_57 { pt3dadd( -30.7109, 0.0673518, -5.28117, 1.11 ) }
    dend_57 { pt3dadd( -33.6375, 0.451161, -6.92166, 0.83 ) }
    dend_57 { pt3dadd( -36.8813, 0.84242, -8.65061, 0.83 ) }
    dend_57 { pt3dadd( -39.6481, 1.16765, -10.0393, 0.83 ) }
    dend_57 { pt3dadd( -41.7754, 1.45338, -11.0417, 0.83 ) }
    dend_57 { pt3dadd( -44.8452, 1.95796, -12.4779, 0.83 ) }
    dend_57 { pt3dadd( -50.3013, 2.90481, -14.2878, 0.83 ) }
    dend_57 { pt3dadd( -52.8097, 3.37872, -15.2421, 0.56 ) }
    dend_57 { pt3dadd( -54.4153, 3.67405, -15.8797, 0.56 ) }
    dend_57 { pt3dadd( -56.415, 4.08807, -16.5857, 1.11 ) }
    dend_57 { pt3dadd( -59.7035, 4.76704, -17.7022, 0.56 ) }
    dend_57 { pt3dadd( -62.9657, 5.42295, -18.7087, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_57 { pt3dadd( -66.9186, 6.23561, -19.7107, 0.56 ) }
    dend_57 { pt3dadd( -69.5103, 6.90805, -20.2933, 1.94 ) }
    dend_57 { pt3dadd( -72.7876, 7.83185, -21.1072, 0.56 ) }
    dend_57 { pt3dadd( -73.5993, 8.10719, -21.2754, 0.56 ) }
    dend_57 { pt3dadd( -76.314, 9.18312, -21.8132, 0.56 ) }
    dend_57 { pt3dadd( -78.58, 10.2708, -22.2879, 0.28 ) }
    dend_57 { pt3dadd( -82.235, 12.1887, -22.9635, 2.22 ) }
    dend_57 { pt3dadd( -85.4282, 13.9875, -23.5617, 0.56 ) }
    dend_57 { pt3dadd( -89.8779, 16.6081, -24.4006, 0.56 ) }
    dend_57 { pt3dadd( -92.8425, 18.3781, -24.9118, 0.28 ) }
    dend_57 { pt3dadd( -93.8799, 19.0061, -25.1011, 0.28 ) }
    dend_57 { pt3dadd( -95.283, 19.892, -25.45, 0.83 ) }
    dend_57 { pt3dadd( -97.1034, 21.0538, -25.8878, 0.28 ) }
    dend_57 { pt3dadd( -98.0181, 21.6464, -26.1933, 0.56 ) }
    dend_57 { pt3dadd( -99.5162, 22.6247, -26.9428, 0.28 ) }
    dend_57 { pt3dadd( -101.698, 24.1911, -28.2886, 1.39 ) }
    dend_57 { pt3dadd( -104.541, 26.163, -30.2363, 0.28 ) }
    dend_57 { pt3dadd( -105.753, 27.0285, -31.1203, 0.56 ) }
    dend_57 { pt3dadd( -107.684, 28.4655, -32.4813, 0.28 ) }
    dend_57 { pt3dadd( -108.064, 28.7643, -32.7352, 0.56 ) }
    dend_57 { pt3dadd( -109.901, 30.3156, -33.7936, 0.28 ) }
    dend_57 { pt3dadd( -112.827, 32.9602, -35.0459, 0.28 ) }
    dend_57 { pt3dadd( -114.271, 34.3836, -35.4486, 1.67 ) }
    dend_57 { pt3dadd( -116.383, 36.5578, -35.8679, 0.28 ) }
    dend_57 { pt3dadd( -117.156, 37.3612, -35.9496, 0.56 ) }
    dend_57 { pt3dadd( -119.388, 39.7349, -36.1285, 0.28 ) }
    dend_57 { pt3dadd( -120.707, 41.1633, -36.1709, 1.67 ) }
    dend_57 { pt3dadd( -122.924, 43.5958, -36.3627, 0.28 ) }
    dend_57 { pt3dadd( -123.457, 44.1382, -36.4346, 0.28 ) }
    dend_57 { pt3dadd( -123.902, 44.5375, -36.5421, 0.56 ) }
    dend_57 { pt3dadd( -125.149, 45.4106, -36.9274, 0.28 ) }
    dend_57 { pt3dadd( -126.07, 45.8589, -37.3276, 0.83 ) }
    dend_57 { pt3dadd( -128.151, 46.6509, -38.3739, 0.28 ) }
    dend_57 { pt3dadd( -129.287, 47.0198, -39.0764, 0.83 ) }
    dend_57 { pt3dadd( -131.896, 47.8504, -40.7982, 0.28 ) }
    dend_57 { pt3dadd( -133.652, 48.3932, -42.0413, 1.39 ) }
    dend_57 { pt3dadd( -136.888, 49.3845, -44.3323, 0.28 ) }
    dend_57 { pt3dadd( -138.274, 49.8157, -45.2931, 1.67 ) }
    dend_57 { pt3dadd( -141.801, 50.8554, -47.5686, 0.28 ) }
    dend_57 { pt3dadd( -142.442, 51.0319, -47.9801, 0.56 ) }
    dend_57 { pt3dadd( -145.165, 51.8298, -49.7125, 0.28 ) }
    dend_57 { pt3dadd( -147.192, 52.4792, -50.974, 1.11 ) }
    dend_57 { pt3dadd( -148.646, 52.9698, -51.8135, 0.28 ) }
    dend_57 { pt3dadd( -150.532, 53.5808, -52.8397, 0.28 ) }
    dend_57 { pt3dadd( -152.826, 54.3265, -53.9263, 0.56 ) }
    dend_57 { pt3dadd( -154.973, 55.0313, -54.8582, 0.28 ) }
    dend_57 { pt3dadd( -156.261, 55.491, -55.4525, 0.83 ) }
    dend_57 { pt3dadd( -158.139, 56.2176, -56.4171, 0.28 ) }
    dend_57 { pt3dadd( -158.662, 56.4037, -56.7, 0.56 ) }
    dend_57 { pt3dadd( -160.312, 56.9642, -57.5744, 0.28 ) }
    dend_57 { pt3dadd( -162.218, 57.528, -58.3959, 1.39 ) }
    dend_57 { pt3dadd( -166.549, 58.727, -60.0555, 0.28 ) }
    dend_57 { pt3dadd( -167.598, 59.0072, -60.4764, 0.83 ) }
    dend_57 { pt3dadd( -171.31, 59.9484, -62.0601, 0.28 ) }
    dend_57 { pt3dadd( -172.34, 60.215, -62.5555, 0.83 ) }
    dend_57 { pt3dadd( -179.2, 62.2023, -66.0871, 0.28 ) }
    dend_57 { pt3dadd( -180.371, 62.5814, -66.7083, 0.83 ) }
    dend_57 { pt3dadd( -182.908, 63.5213, -68.0417, 0.28 ) }
    dend_57 { pt3dadd( -184.817, 64.3507, -69.1207, 0.83 ) }
    dend_57 { pt3dadd( -186.806, 65.4141, -70.347, 0.83 ) }
    dend_57 { pt3dadd( -190.072, 67.3571, -72.4674, 0.28 ) }
    dend_57 { pt3dadd( -190.503, 67.6621, -72.7708, 0.56 ) }
    dend_57 { pt3dadd( -192.858, 69.3542, -74.1288, 0.28 ) }
    dend_57 { pt3dadd( -193.614, 69.8974, -74.4479, 0.83 ) }
    dend_57 { pt3dadd( -195.805, 71.4575, -75.149, 0.28 ) }
    dend_57 { pt3dadd( -198.058, 72.9078, -75.704, 0.83 ) }
    dend_57 { pt3dadd( -200.238, 74.1478, -76.0681, 0.28 ) }
    dend_57 { pt3dadd( -203.065, 75.6928, -76.2989, 1.11 ) }
    dend_57 { pt3dadd( -205.341, 76.847, -76.1752, 0.28 ) }
    dend_57 { pt3dadd( -206.223, 77.2838, -76.0545, 0.56 ) }
    dend_57 { pt3dadd( -208.594, 78.4398, -75.6262, 0.28 ) }
    dend_57 { pt3dadd( -211.031, 79.591, -75.2228, 0.83 ) }
    dend_57 { pt3dadd( -212.051, 80.0546, -75.0367, 0.83 ) }
    dend_57 { pt3dadd( -214.506, 81.2021, -74.8059, 0.28 ) }
    dend_57 { pt3dadd( -215.009, 81.4363, -74.7194, 0.56 ) }
    dend_57 { pt3dadd( -217.456, 82.6308, -74.3883, 0.28 ) }
    dend_57 { pt3dadd( -218.495, 83.2623, -74.3664, 0.56 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -21.9263, -0.215547, 0.688604, 0.83 ) }
    dend_54 { pt3dadd( -26.0507, 3.26589, 3.01916, 0.83 ) }
    dend_54 { pt3dadd( -28.2054, 5.32085, 4.61036, 0.83 ) }
    dend_54 { pt3dadd( -31.0084, 8.05335, 6.88253, 0.83 ) }
    dend_54 { pt3dadd( -35.0358, 11.9761, 10.3852, 0.83 ) }
    dend_54 { pt3dadd( -37.6655, 14.4326, 12.7771, 0.83 ) }
    dend_54 { pt3dadd( -39.6109, 16.081, 14.5808, 1.39 ) }
    dend_54 { pt3dadd( -43.401, 19.2755, 18.4287, 0.56 ) }
    dend_54 { pt3dadd( -45.4356, 20.8765, 20.3361, 0.56 ) }
    dend_54 { pt3dadd( -47.1051, 21.8922, 21.5228, 0.83 ) }
    dend_54 { pt3dadd( -49.1272, 22.727, 22.4985, 0.83 ) }
    dend_54 { pt3dadd( -52.6408, 23.9096, 23.4123, 0.83 ) }
    dend_54 { pt3dadd( -56.4739, 25.0412, 23.9247, 1.11 ) }
    dend_54 { pt3dadd( -61.8084, 26.5215, 23.4981, 0.83 ) }
    dend_54 { pt3dadd( -64.5049, 27.3749, 23.1479, 0.83 ) }
    dend_54 { pt3dadd( -67.2358, 28.457, 22.652, 1.11 ) }
    dend_54 { pt3dadd( -69.3268, 29.469, 22.4169, 0.56 ) }
    dend_54 { pt3dadd( -71.8181, 30.7291, 22.5746, 1.39 ) }
    dend_54 { pt3dadd( -74.7751, 32.1029, 23.4923, 1.11 ) }
    dend_54 { pt3dadd( -76.5206, 32.7734, 24.3662, 0.83 ) }
    dend_54 { pt3dadd( -78.4931, 33.3809, 25.4179, 0.83 ) }
    dend_54 { pt3dadd( -82.3677, 34.4367, 27.7332, 0.83 ) }
    dend_54 { pt3dadd( -85.6453, 35.3922, 29.8383, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -86.7662, 35.7401, 30.4956, 0.83 ) }
    dend_54 { pt3dadd( -88.9057, 36.427, 31.8147, 0.56 ) }
    dend_54 { pt3dadd( -91.0583, 37.107, 33.0262, 0.83 ) }
    dend_54 { pt3dadd( -93.2928, 37.8053, 34.2148, 0.83 ) }
    dend_54 { pt3dadd( -95.1004, 38.4698, 34.996, 0.56 ) }
    dend_54 { pt3dadd( -100.078, 40.6849, 36.9364, 0.83 ) }
    dend_54 { pt3dadd( -103.144, 42.1117, 38.1014, 0.56 ) }
    dend_54 { pt3dadd( -104.634, 42.816, 38.6663, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.56434, 14.0247, -4.92863, 2.22 ) }
    dend_40 { pt3dadd( 3.45434, 19.0408, -9.36862, 2.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.56434, 14.0247, -4.92863, 0.83 ) }
    dend_33 { pt3dadd( 6.33434, 16.1813, -0.62862, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 60.3061, 36.1996, 13.984, 1.11 ) }
    dend_24 { pt3dadd( 62.3792, 34.5297, 17.1367, 1.11 ) }
    dend_24 { pt3dadd( 62.8773, 34.1286, 17.8941, 1.39 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 60.3061, 36.1996, 13.984, 0.56 ) }
    dend_23 { pt3dadd( 59.7415, 42.1174, 15.5388, 0.56 ) }
    dend_23 { pt3dadd( 59.6603, 45.0951, 17.3167, 0.56 ) }
    dend_23 { pt3dadd( 59.6061, 47.3435, 18.8226, 0.28 ) }
    dend_23 { pt3dadd( 59.6171, 47.8394, 19.1511, 0.83 ) }
    dend_23 { pt3dadd( 59.7274, 49.7977, 20.4908, 0.28 ) }
    dend_23 { pt3dadd( 59.9751, 53.3516, 22.9039, 0.56 ) }
    dend_23 { pt3dadd( 60.4971, 57.2464, 25.975, 0.56 ) }
    dend_23 { pt3dadd( 60.7432, 58.8097, 27.0113, 0.56 ) }
    dend_23 { pt3dadd( 61.084, 60.7778, 28.0857, 0.56 ) }
    dend_23 { pt3dadd( 61.5183, 63.3231, 29.2707, 0.28 ) }
    dend_23 { pt3dadd( 61.6822, 64.3215, 29.6177, 0.28 ) }
    dend_23 { pt3dadd( 61.8034, 65.6304, 29.7073, 0.83 ) }
    dend_23 { pt3dadd( 62.1946, 68.8332, 29.1624, 0.28 ) }
    dend_23 { pt3dadd( 62.5077, 71.0255, 28.744, 0.28 ) }
    dend_23 { pt3dadd( 62.5762, 71.3763, 28.63, 0.56 ) }
    dend_23 { pt3dadd( 63.0185, 72.7518, 28.0519, 0.28 ) }
    dend_23 { pt3dadd( 63.0185, 72.7518, 28.0519, 0.56 ) }
    dend_23 { pt3dadd( 64.1002, 74.8503, 27.2286, 0.28 ) }
    dend_23 { pt3dadd( 64.9834, 76.2119, 26.8414, 0.56 ) }
    dend_23 { pt3dadd( 67.7075, 79.8263, 25.6635, 0.28 ) }
    dend_23 { pt3dadd( 68.5935, 80.901, 25.2516, 0.28 ) }
    dend_23 { pt3dadd( 68.7767, 81.1019, 25.2052, 0.56 ) }
    dend_23 { pt3dadd( 69.5066, 81.8931, 25.4443, 0.28 ) }
    dend_23 { pt3dadd( 70.4611, 82.9476, 26.5526, 0.83 ) }
    dend_23 { pt3dadd( 71.2659, 83.8346, 27.8387, 0.28 ) }
    dend_23 { pt3dadd( 71.9067, 84.5507, 29.2014, 0.83 ) }
    dend_23 { pt3dadd( 73.8538, 86.8376, 34.0211, 0.28 ) }
    dend_23 { pt3dadd( 75.3949, 88.6657, 38.1839, 0.28 ) }
    dend_23 { pt3dadd( 75.6719, 89.0105, 39.0801, 0.56 ) }
    dend_23 { pt3dadd( 78.9793, 97.4238, 42.3405, 0.56 ) }
    dend_23 { pt3dadd( 83.5341, 105.222, 45.7872, 0.56 ) }
    dend_23 { pt3dadd( 87.8504, 113.63, 47.5265, 0.56 ) }
    dend_23 { pt3dadd( 93.0296, 121.022, 51.0817, 0.56 ) }
    dend_23 { pt3dadd( 98.6738, 128.121, 54.5883, 0.56 ) }
    dend_23 { pt3dadd( 104.037, 134.943, 59.0223, 0.56 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 51/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 36.0206, -4.08141, -12.48, 0.83 ) }
    dend_19 { pt3dadd( 40.8374, -5.52819, -12.1662, 0.83 ) }
    dend_19 { pt3dadd( 42.7584, -6.03102, -12.0051, 0.28 ) }
    dend_19 { pt3dadd( 44.478, -6.47083, -11.8544, 0.83 ) }
    dend_19 { pt3dadd( 46.7774, -7.02508, -11.6552, 0.56 ) }
    dend_19 { pt3dadd( 51.9472, -8.03539, -11.0966, 0.56 ) }
    dend_19 { pt3dadd( 56.2433, -8.84475, -10.5847, 0.56 ) }
    dend_19 { pt3dadd( 59.8841, -9.44428, -10.299, 0.56 ) }
    dend_19 { pt3dadd( 61.8471, -9.74627, -10.0542, 1.39 ) }
    dend_19 { pt3dadd( 63.4761, -9.98708, -9.8435, 0.83 ) }
    dend_19 { pt3dadd( 67.6927, -10.5517, -9.30777, 0.56 ) }
    dend_19 { pt3dadd( 69.0509, -10.7864, -9.14151, 0.83 ) }
    dend_19 { pt3dadd( 71.1724, -11.1427, -8.92877, 0.56 ) }
    dend_19 { pt3dadd( 73.5826, -11.6238, -8.75682, 0.56 ) }
    dend_19 { pt3dadd( 76.9273, -12.3216, -8.66446, 0.83 ) }
    dend_19 { pt3dadd( 80.9842, -13.2003, -8.71688, 0.56 ) }
    dend_19 { pt3dadd( 83.6654, -13.8773, -8.8848, 0.56 ) }
    dend_19 { pt3dadd( 85.9458, -14.4588, -9.05479, 0.56 ) }
    dend_19 { pt3dadd( 89.2553, -15.4125, -9.33768, 1.94 ) }
    dend_19 { pt3dadd( 92.5071, -16.5269, -9.64367, 0.56 ) }
    dend_19 { pt3dadd( 94.8252, -17.4316, -9.7871, 0.56 ) }
    dend_19 { pt3dadd( 99.2603, -19.5194, -10.0193, 0.56 ) }
    dend_19 { pt3dadd( 101.508, -20.6846, -10.1147, 0.56 ) }
    dend_19 { pt3dadd( 102.937, -21.5394, -10.1642, 0.28 ) }
    dend_19 { pt3dadd( 104.535, -22.6282, -10.1543, 0.28 ) }
    dend_19 { pt3dadd( 106.169, -23.8995, -10.0743, 1.67 ) }
    dend_19 { pt3dadd( 110.351, -27.6648, -9.69512, 0.28 ) }
    dend_19 { pt3dadd( 111.707, -29.0391, -9.43579, 0.28 ) }
    dend_19 { pt3dadd( 112.62, -30.0396, -9.19938, 0.56 ) }
    dend_19 { pt3dadd( 114.416, -32.1319, -8.73903, 0.28 ) }
    dend_19 { pt3dadd( 116.654, -35.0005, -8.16195, 0.28 ) }
    dend_19 { pt3dadd( 118.606, -37.7807, -7.59909, 0.28 ) }
    dend_19 { pt3dadd( 120.001, -40.0219, -7.15309, 1.39 ) }
    dend_19 { pt3dadd( 120.774, -41.2925, -6.89249, 1.39 ) }
    dend_19 { pt3dadd( 122.393, -43.9587, -6.36813, 0.28 ) }
    dend_19 { pt3dadd( 122.868, -44.7867, -6.24687, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 36.0206, -4.08141, -12.48, 0.83 ) }
    dend_18 { pt3dadd( 36.6693, -3.84703, -15.1935, 0.83 ) }
    dend_18 { pt3dadd( 40.7668, -2.49134, -29.3141, 0.56 ) }
    dend_18 { pt3dadd( 41.4294, -2.30739, -31.2707, 0.56 ) }
    dend_18 { pt3dadd( 42.9279, -1.99565, -35.0483, 1.11 ) }
    dend_18 { pt3dadd( 44.8302, -1.64752, -39.3831, 0.56 ) }
    dend_18 { pt3dadd( 46.4574, -1.40551, -42.7651, 1.67 ) }
    dend_18 { pt3dadd( 48.06, -1.28353, -45.5187, 0.28 ) }
    dend_18 { pt3dadd( 49.2305, -1.19084, -46.9608, 1.11 ) }
    dend_18 { pt3dadd( 54.4049, -0.963015, -52.6948, 0.28 ) }
    dend_18 { pt3dadd( 55.2352, -0.949935, -53.4844, 0.83 ) }
    dend_18 { pt3dadd( 56.7968, -0.845365, -54.7348, 0.83 ) }
    dend_18 { pt3dadd( 59.9666, -0.282815, -57.0296, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 60.6509, -0.0407242, -57.5147, 1.11 ) }
    dend_18 { pt3dadd( 61.9699, 0.569505, -58.3893, 0.28 ) }
    dend_18 { pt3dadd( 63.1861, 1.15638, -59.1593, 0.83 ) }
    dend_18 { pt3dadd( 66.6358, 2.74772, -61.3687, 0.28 ) }
    dend_18 { pt3dadd( 69.6684, 4.0377, -63.4043, 1.67 ) }
    dend_18 { pt3dadd( 77.1712, 6.94876, -68.4315, 0.28 ) }
    dend_18 { pt3dadd( 79.1887, 7.60067, -69.8421, 2.22 ) }
    dend_18 { pt3dadd( 86.0495, 9.4427, -74.8207, 0.28 ) }
    dend_18 { pt3dadd( 87.6201, 9.78833, -76.0278, 1.11 ) }
    dend_18 { pt3dadd( 92.5364, 10.6382, -79.8943, 0.28 ) }
    dend_18 { pt3dadd( 93.8333, 10.8312, -80.9319, 1.11 ) }
    dend_18 { pt3dadd( 98.3192, 11.3986, -84.7268, 0.28 ) }
    dend_18 { pt3dadd( 99.8329, 11.8032, -86.34, 1.11 ) }
    dend_18 { pt3dadd( 103.039, 13.1974, -90.6235, 0.28 ) }
    dend_18 { pt3dadd( 104.224, 13.8544, -92.4591, 1.11 ) }
    dend_18 { pt3dadd( 105.449, 14.6605, -94.5429, 0.28 ) }
    dend_18 { pt3dadd( 105.837, 14.9762, -95.2556, 0.56 ) }
    dend_18 { pt3dadd( 112.368, 21.3471, -108.003, 0.28 ) }
    dend_18 { pt3dadd( 114.076, 23.1462, -111.822, 1.67 ) }
    dend_18 { pt3dadd( 116.177, 25.4565, -116.749, 0.28 ) }
    dend_18 { pt3dadd( 116.369, 25.6731, -117.218, 0.56 ) }
    dend_18 { pt3dadd( 119.436, 29.1252, -124.719, 0.28 ) }
    dend_18 { pt3dadd( 119.831, 29.586, -125.725, 1.39 ) }
    dend_18 { pt3dadd( 124.085, 34.9864, -137.261, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.16963, -26.6445, 6.01471, 1.67 ) }
    dend_4 { pt3dadd( -6.73476, -32.5175, 6.72967, 1.67 ) }
    dend_4 { pt3dadd( -7.34175, -37.0796, 7.25867, 1.67 ) }
    dend_4 { pt3dadd( -7.92047, -40.8001, 7.65271, 1.67 ) }
    dend_4 { pt3dadd( -8.73282, -46.2323, 7.93151, 1.67 ) }
    dend_4 { pt3dadd( -9.11009, -48.6397, 7.95982, 1.67 ) }
    dend_4 { pt3dadd( -9.74669, -52.4138, 7.95269, 1.67 ) }
    dend_4 { pt3dadd( -10.3618, -55.7144, 7.8434, 1.67 ) }
    dend_4 { pt3dadd( -11.0478, -59.2115, 7.4212, 1.67 ) }
    dend_4 { pt3dadd( -12.0867, -64.2643, 6.30458, 1.39 ) }
    dend_4 { pt3dadd( -13.2997, -70.1901, 4.53251, 1.39 ) }
    dend_4 { pt3dadd( -13.6636, -72.4048, 3.79798, 1.39 ) }
    dend_4 { pt3dadd( -14.1164, -76.4341, 2.42839, 1.39 ) }
    dend_4 { pt3dadd( -14.55, -84.6915, -0.248745, 1.39 ) }
    dend_4 { pt3dadd( -14.5264, -88.0022, -1.22332, 1.39 ) }
    dend_4 { pt3dadd( -14.262, -93.6864, -2.49596, 1.11 ) }
    dend_4 { pt3dadd( -13.8171, -98.6084, -3.34916, 1.11 ) }
    dend_4 { pt3dadd( -13.5222, -101.57, -3.57367, 1.11 ) }
    dend_4 { pt3dadd( -13.2654, -104.865, -3.39916, 1.11 ) }
    dend_4 { pt3dadd( -13.1109, -109.022, -2.63457, 1.11 ) }
    dend_4 { pt3dadd( -13.1905, -116.596, -0.858201, 1.11 ) }
    dend_4 { pt3dadd( -13.602, -120.409, 0.219315, 1.11 ) }
    dend_4 { pt3dadd( -14.5702, -125.24, 1.70954, 1.11 ) }
    dend_4 { pt3dadd( -15.5591, -128.853, 2.80029, 1.11 ) }
    dend_4 { pt3dadd( -16.3381, -131.239, 3.52409, 1.11 ) }
    dend_4 { pt3dadd( -16.6911, -132.24, 3.81236, 1.11 ) }
    dend_4 { pt3dadd( -18.1265, -136.539, 4.82199, 1.11 ) }
    dend_4 { pt3dadd( -18.8134, -139.351, 5.10567, 1.11 ) }
    dend_4 { pt3dadd( -19.1485, -141.688, 5.05901, 1.39 ) }
    dend_4 { pt3dadd( -19.3111, -144.579, 4.87197, 1.39 ) }
    dend_4 { pt3dadd( -19.3209, -147.65, 4.62264, 1.11 ) }
    dend_4 { pt3dadd( -19.2602, -150.335, 4.36993, 1.11 ) }
    dend_4 { pt3dadd( -19.0717, -155.689, 3.79461, 1.11 ) }
    dend_4 { pt3dadd( -19.0293, -158.58, 3.46815, 1.11 ) }
    dend_4 { pt3dadd( -19.0627, -161.216, 3.09941, 1.11 ) }
    dend_4 { pt3dadd( -19.2231, -163.391, 2.76027, 1.39 ) }
    dend_4 { pt3dadd( -19.3925, -165.234, 2.45742, 1.67 ) }
    dend_4 { pt3dadd( -19.6764, -167.248, 2.1231, 1.67 ) }
    dend_4 { pt3dadd( -20.3117, -169.868, 1.72671, 1.11 ) }
    dend_4 { pt3dadd( -21.3551, -173.254, 1.13006, 1.11 ) }
    dend_4 { pt3dadd( -22.8952, -177.296, 0.335086, 1.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.16963, -26.6445, 6.01471, 0.83 ) }
    dend_1 { pt3dadd( -12.5734, -31.162, 3.66781, 0.83 ) }
    dend_1 { pt3dadd( -16.4385, -33.5619, 2.52045, 0.83 ) }
    dend_1 { pt3dadd( -19.5968, -35.3412, 1.54297, 0.83 ) }
    dend_1 { pt3dadd( -22.975, -37.1774, 0.571034, 0.83 ) }
    dend_1 { pt3dadd( -26.3258, -38.932, -0.311506, 0.83 ) }
    dend_1 { pt3dadd( -28.0913, -39.7602, -0.779667, 0.83 ) }
    dend_1 { pt3dadd( -31.1332, -41.0138, -1.29456, 0.83 ) }
    dend_1 { pt3dadd( -34.6373, -42.3963, -2.07605, 1.11 ) }
    dend_1 { pt3dadd( -36.9641, -43.2301, -2.66566, 0.83 ) }
    dend_1 { pt3dadd( -39.3096, -44.0654, -3.23277, 1.11 ) }
    dend_1 { pt3dadd( -44.1856, -45.8978, -4.38337, 0.83 ) }
    dend_1 { pt3dadd( -47.4783, -47.2583, -5.11995, 0.83 ) }
    dend_1 { pt3dadd( -52.0709, -49.2925, -6.18028, 0.83 ) }
    dend_1 { pt3dadd( -54.9167, -50.6525, -6.79123, 1.39 ) }
    dend_1 { pt3dadd( -57.7477, -52.1222, -7.43588, 0.56 ) }
    dend_1 { pt3dadd( -59.4496, -53.1336, -7.85431, 0.56 ) }
    dend_1 { pt3dadd( -60.8158, -54.0431, -8.18642, 1.11 ) }
    dend_1 { pt3dadd( -64.0803, -56.2737, -9.00309, 0.56 ) }
    dend_1 { pt3dadd( -68.0042, -58.9754, -9.82292, 0.56 ) }
    dend_1 { pt3dadd( -69.222, -59.9053, -10.0676, 0.83 ) }
    dend_1 { pt3dadd( -72.0485, -62.2925, -10.5861, 0.28 ) }
    dend_1 { pt3dadd( -73.2222, -63.4144, -10.739, 0.28 ) }
    dend_1 { pt3dadd( -74.3827, -64.628, -10.8191, 1.39 ) }
    dend_1 { pt3dadd( -76.4299, -66.9353, -10.7662, 0.83 ) }
    dend_1 { pt3dadd( -78.2393, -69.0341, -10.6159, 0.28 ) }
    dend_1 { pt3dadd( -79.2206, -70.2577, -10.55, 0.83 ) }
    dend_1 { pt3dadd( -80.5293, -72.0317, -10.4689, 0.28 ) }
    dend_1 { pt3dadd( -81.3829, -73.3357, -10.484, 0.56 ) }
    dend_1 { pt3dadd( -82.5039, -75.1059, -10.6022, 0.28 ) }
    dend_1 { pt3dadd( -83.243, -76.2903, -10.735, 1.67 ) }
    dend_1 { pt3dadd( -85.2693, -79.5182, -11.1376, 0.56 ) }
    dend_1 { pt3dadd( -86.7539, -81.9235, -11.4451, 0.28 ) }
    dend_1 { pt3dadd( -88.1631, -84.2369, -11.8151, 0.28 ) }
    dend_1 { pt3dadd( -88.5977, -84.9047, -11.9418, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -89.9032, -86.7677, -12.3409, 1.11 ) }
    dend_1 { pt3dadd( -92.3344, -89.9952, -13.0752, 0.28 ) }
    dend_1 { pt3dadd( -92.9419, -90.7321, -13.2303, 0.56 ) }
    dend_1 { pt3dadd( -95.081, -93.0659, -13.7788, 0.28 ) }
    dend_1 { pt3dadd( -97.6826, -95.5366, -14.3814, 0.28 ) }
    dend_1 { pt3dadd( -98.1494, -95.923, -14.4328, 0.56 ) }
    dend_1 { pt3dadd( -99.4295, -96.7949, -14.436, 0.28 ) }
    dend_1 { pt3dadd( -99.9102, -97.0543, -14.3965, 0.83 ) }
    dend_1 { pt3dadd( -102.126, -98.1145, -14.1062, 0.28 ) }
    dend_1 { pt3dadd( -104.461, -99.1474, -13.5534, 1.39 ) }
    dend_1 { pt3dadd( -108.389, -100.987, -12.1697, 0.28 ) }
    dend_1 { pt3dadd( -109.849, -101.746, -11.5369, 0.56 ) }
    dend_1 { pt3dadd( -111.863, -102.955, -10.4931, 0.28 ) }
    dend_1 { pt3dadd( -112.584, -103.467, -10.0309, 0.28 ) }
    dend_1 { pt3dadd( -114.675, -105.18, -8.37571, 1.67 ) }
    dend_1 { pt3dadd( -116.648, -107.297, -6.47091, 0.56 ) }
    dend_1 { pt3dadd( -117.166, -108.065, -5.88221, 0.28 ) }
    dend_1 { pt3dadd( -117.805, -109.25, -4.91974, 0.56 ) }
    dend_1 { pt3dadd( -118.774, -111.268, -3.17069, 0.28 ) }
    dend_1 { pt3dadd( -119.105, -111.913, -2.58472, 0.83 ) }
    dend_1 { pt3dadd( -120.045, -113.439, -1.24798, 0.28 ) }
    dend_1 { pt3dadd( -120.642, -114.251, -0.545907, 0.28 ) }
    dend_1 { pt3dadd( -122.055, -116.063, 1.04437, 0.83 ) }
    dend_1 { pt3dadd( -123.768, -118.262, 2.95649, 0.28 ) }
    dend_1 { pt3dadd( -124.426, -119.163, 3.74659, 0.83 ) }
    dend_1 { pt3dadd( -126.92, -122.754, 6.88783, 0.28 ) }
    dend_1 { pt3dadd( -127.479, -123.551, 7.60098, 1.11 ) }
    dend_1 { pt3dadd( -129.846, -127.257, 11.0307, 0.28 ) }
    dend_1 { pt3dadd( -130.071, -127.679, 11.4062, 0.83 ) }
    dend_1 { pt3dadd( -131.273, -130.492, 13.8922, 0.28 ) }
    dend_1 { pt3dadd( -131.618, -131.466, 14.7669, 0.28 ) }
    dend_1 { pt3dadd( -131.641, -131.569, 14.8678, 0.83 ) }
    dend_1 { pt3dadd( -132.142, -134.748, 18.1457, 0.28 ) }
    dend_1 { pt3dadd( -132.212, -135.893, 19.4232, 0.28 ) }
    dend_1 { pt3dadd( -132.243, -136.295, 19.887, 0.56 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 15.5304, 39.8479, -0.563992, 0.28 ) }
    axon_1 { pt3dadd( 21.1075, 53.7726, -0.563992, 0.28 ) }
    axon_1 { pt3dadd( 26.6846, 67.6972, -0.563992, 0.28 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 38/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -22.755, 124.187, -80.1251, 0.28 ) }
    dend_65 { pt3dadd( -20.2651, 130.86, -82.419, 0.28 ) }
    dend_65 { pt3dadd( -19.1528, 133.841, -83.4439, 0.28 ) }
    dend_65 { pt3dadd( -18.5844, 135.365, -83.9675, 1.39 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 42/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -22.755, 124.187, -80.1251, 0.28 ) }
    dend_64 { pt3dadd( -23.7673, 126.546, -80.9109, 0.28 ) }
    dend_64 { pt3dadd( -24.0666, 127.243, -81.1432, 0.56 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -104.634, 42.816, 38.6663, 0.56 ) }
    dend_56 { pt3dadd( -105.992, 44.6347, 39.1122, 0.56 ) }
    dend_56 { pt3dadd( -106.732, 45.7384, 39.3104, 1.11 ) }
    dend_56 { pt3dadd( -109.284, 49.9856, 39.8298, 0.56 ) }
    dend_56 { pt3dadd( -111.365, 53.728, 40.1778, 0.83 ) }
    dend_56 { pt3dadd( -112.166, 55.4808, 40.2816, 0.83 ) }
    dend_56 { pt3dadd( -112.621, 56.7582, 40.3241, 0.28 ) }
    dend_56 { pt3dadd( -112.659, 57.3504, 40.2713, 0.56 ) }
    dend_56 { pt3dadd( -112.444, 58.2333, 40.0548, 0.28 ) }
    dend_56 { pt3dadd( -112.336, 58.4593, 39.9809, 0.83 ) }
    dend_56 { pt3dadd( -110.95, 60.5468, 39.7553, 0.28 ) }
    dend_56 { pt3dadd( -110.439, 61.511, 39.7477, 0.83 ) }
    dend_56 { pt3dadd( -109.908, 62.8509, 39.9166, 0.28 ) }
    dend_56 { pt3dadd( -109.554, 63.8666, 40.0833, 0.83 ) }
    dend_56 { pt3dadd( -108.757, 67.0387, 40.7758, 0.28 ) }
    dend_56 { pt3dadd( -108.613, 68.1743, 41.0723, 0.83 ) }
    dend_56 { pt3dadd( -108.701, 70.5601, 41.84, 0.28 ) }
    dend_56 { pt3dadd( -108.875, 72.0516, 42.378, 1.11 ) }
    dend_56 { pt3dadd( -112.131, 80.8451, 44.3068, 1.11 ) }
    dend_56 { pt3dadd( -117.719, 88.4941, 46.293, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 65/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -104.634, 42.816, 38.6663, 0.56 ) }
    dend_55 { pt3dadd( -104.41, 41.3524, 39.5307, 0.56 ) }
    dend_55 { pt3dadd( -104.197, 39.9583, 40.3541, 0.28 ) }
    dend_55 { pt3dadd( -103.811, 37.4345, 41.8447, 0.56 ) }
    dend_55 { pt3dadd( -103.584, 30.4223, 48.5874, 0.56 ) }
    dend_55 { pt3dadd( -104.32, 23.2575, 55.1126, 0.56 ) }
    dend_55 { pt3dadd( -105.037, 16.4462, 62.0466, 0.56 ) }
    dend_55 { pt3dadd( -107.215, 10.4439, 69.4855, 0.56 ) }
    dend_55 { pt3dadd( -107.742, 4.42307, 77.2027, 0.56 ) }
    dend_55 { pt3dadd( -107.713, -1.57671, 84.9559, 0.56 ) }
    dend_55 { pt3dadd( -108.853, -7.01152, 93.0783, 0.56 ) }
    dend_55 { pt3dadd( -110.358, -12.3685, 101.198, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 77/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 3.45434, 19.0408, -9.36862, 1.11 ) }
    dend_46 { pt3dadd( 1.15567, 24.4624, -13.3588, 1.11 ) }
    dend_46 { pt3dadd( -0.122322, 27.4767, -15.5772, 1.11 ) }
    dend_46 { pt3dadd( -1.11481, 29.8175, -17.3001, 1.39 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.45434, 19.0408, -9.36862, 1.11 ) }
    dend_41 { pt3dadd( 9.97003, 26.299, 1.51156, 1.11 ) }
    dend_41 { pt3dadd( 11.6052, 28.4066, 4.38163, 1.11 ) }
    dend_41 { pt3dadd( 13.5625, 31.3799, 8.13981, 1.11 ) }
    dend_41 { pt3dadd( 15.0768, 33.6803, 11.0475, 1.11 ) }
    dend_41 { pt3dadd( 16.2028, 35.3909, 13.2097, 1.11 ) }
    dend_41 { pt3dadd( 17.2063, 36.9152, 15.1364, 1.11 ) }
    dend_41 { pt3dadd( 19.3915, 40.4589, 17.6651, 1.11 ) }
    dend_41 { pt3dadd( 20.2412, 41.9655, 18.8673, 1.39 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.33434, 16.1813, -0.62862, 0.83 ) }
    dend_35 { pt3dadd( 7.3613, 17.5384, 1.93198, 0.83 ) }
    dend_35 { pt3dadd( 8.84419, 19.4968, 5.74336, 0.56 ) }
    dend_35 { pt3dadd( 9.80653, 20.8282, 8.22429, 0.56 ) }
    dend_35 { pt3dadd( 10.7044, 22.1188, 10.4982, 0.56 ) }
    dend_35 { pt3dadd( 13.8228, 26.6624, 17.9153, 1.11 ) }
    dend_35 { pt3dadd( 15.3277, 28.8601, 21.2932, 0.56 ) }
    dend_35 { pt3dadd( 16.1637, 29.9908, 22.9023, 0.83 ) }
    dend_35 { pt3dadd( 17.3189, 31.5787, 25.1065, 0.56 ) }
    dend_35 { pt3dadd( 17.7476, 32.1804, 25.9703, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 19.236, 34.0383, 28.4818, 0.83 ) }
    dend_35 { pt3dadd( 20.6116, 35.7858, 29.5127, 0.56 ) }
    dend_35 { pt3dadd( 24.2294, 40.074, 30.8199, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 3/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.33434, 16.1813, -0.62862, 0.56 ) }
    dend_34 { pt3dadd( 7.87114, 15.7138, 0.501209, 0.56 ) }
    dend_34 { pt3dadd( 9.83007, 15.1179, 1.94137, 0.83 ) }
    dend_34 { pt3dadd( 17.6572, 13.5851, 7.95238, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 62.8773, 34.1286, 17.8941, 0.83 ) }
    dend_28 { pt3dadd( 66.9957, 36.6259, 19.8523, 0.83 ) }
    dend_28 { pt3dadd( 68.862, 37.7576, 20.7397, 0.83 ) }
    dend_28 { pt3dadd( 70.9326, 39.0132, 21.7242, 0.83 ) }
    dend_28 { pt3dadd( 72.9108, 40.2128, 22.6648, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 12/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 62.8773, 34.1286, 17.8941, 0.83 ) }
    dend_25 { pt3dadd( 64.7602, 33.9049, 20.8139, 0.83 ) }
    dend_25 { pt3dadd( 67.7924, 33.5447, 25.5159, 0.83 ) }
    dend_25 { pt3dadd( 69.1585, 33.3825, 27.6343, 0.56 ) }
    dend_25 { pt3dadd( 70.0964, 33.2711, 29.0888, 0.56 ) }
    dend_25 { pt3dadd( 71.6677, 33.0844, 31.5254, 0.56 ) }
    dend_25 { pt3dadd( 72.8386, 32.9454, 33.341, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 19/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 122.868, -44.7867, -6.24687, 0.28 ) }
    dend_21 { pt3dadd( 125.551, -46.9916, -6.37728, 0.28 ) }
    dend_21 { pt3dadd( 128.025, -49.4177, -6.71782, 0.28 ) }
    dend_21 { pt3dadd( 128.983, -50.3579, -6.8498, 0.56 ) }
    dend_21 { pt3dadd( 132.258, -53.5692, -7.30055, 0.28 ) }
    dend_21 { pt3dadd( 132.963, -54.2606, -7.3976, 0.56 ) }
    dend_21 { pt3dadd( 136.327, -57.5598, -7.8607, 0.28 ) }
    dend_21 { pt3dadd( 137.602, -59.1123, -8.24611, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 122.868, -44.7867, -6.24687, 0.28 ) }
    dend_20 { pt3dadd( 125.601, -47.3326, -5.74781, 0.28 ) }
    dend_20 { pt3dadd( 126.867, -48.4857, -5.12398, 0.28 ) }
    dend_20 { pt3dadd( 127.411, -49.0107, -4.81185, 0.56 ) }
    dend_20 { pt3dadd( 128.707, -50.2614, -4.03447, 0.28 ) }
    dend_20 { pt3dadd( 129.834, -51.3736, -3.38336, 1.11 ) }
    dend_20 { pt3dadd( 130.859, -52.3804, -2.82564, 0.83 ) }
    dend_20 { pt3dadd( 134.177, -55.5455, -1.07242, 0.28 ) }
    dend_20 { pt3dadd( 135.761, -56.9937, -0.184217, 0.28 ) }
    dend_20 { pt3dadd( 136.014, -57.2246, -0.00969433, 0.56 ) }
    dend_20 { pt3dadd( 137.806, -58.8794, 1.37372, 0.28 ) }
    dend_20 { pt3dadd( 138.676, -59.6945, 2.0423, 1.11 ) }
    dend_20 { pt3dadd( 139.986, -60.886, 3.07733, 0.28 ) }
    dend_20 { pt3dadd( 142.598, -63.0664, 5.08731, 0.56 ) }
    dend_20 { pt3dadd( 145.544, -65.3721, 7.76307, 0.28 ) }
    dend_20 { pt3dadd( 146.148, -65.8451, 8.39587, 0.56 ) }
    dend_20 { pt3dadd( 152.378, -71.7146, 13.1937, 0.56 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -22.8952, -177.296, 0.335086, 1.11 ) }
    dend_6 { pt3dadd( -22.2029, -180.155, -0.466701, 1.11 ) }
    dend_6 { pt3dadd( -21.362, -184.352, -1.60176, 1.11 ) }
    dend_6 { pt3dadd( -20.5891, -188.732, -3.26312, 1.11 ) }
    dend_6 { pt3dadd( -20.3244, -190.233, -3.79071, 1.11 ) }
    dend_6 { pt3dadd( -19.6542, -193.369, -4.68117, 2.22 ) }
    dend_6 { pt3dadd( -19.028, -195.907, -5.36515, 3.33 ) }
    dend_6 { pt3dadd( -18.5933, -197.675, -5.80338, 1.94 ) }
    dend_6 { pt3dadd( -17.6366, -203.178, -6.84761, 0.83 ) }
    dend_6 { pt3dadd( -17.308, -206.54, -7.42488, 1.67 ) }
    dend_6 { pt3dadd( -17.0332, -210.678, -7.91691, 2.22 ) }
    dend_6 { pt3dadd( -16.9457, -213.338, -8.0792, 0.83 ) }
    dend_6 { pt3dadd( -16.9782, -216.773, -8.31404, 0.83 ) }
    dend_6 { pt3dadd( -17.2325, -220.469, -8.52032, 0.83 ) }
    dend_6 { pt3dadd( -17.7266, -224.728, -8.80384, 1.11 ) }
    dend_6 { pt3dadd( -18.0762, -227.049, -9.18691, 0.83 ) }
    dend_6 { pt3dadd( -18.4877, -229.328, -9.67673, 0.83 ) }
    dend_6 { pt3dadd( -19.1378, -233.115, -10.5195, 2.22 ) }
    dend_6 { pt3dadd( -19.6563, -236.577, -11.3746, 1.11 ) }
    dend_6 { pt3dadd( -20.4258, -242.015, -12.8172, 0.83 ) }
    dend_6 { pt3dadd( -20.9273, -245.149, -13.6553, 2.22 ) }
    dend_6 { pt3dadd( -21.0612, -245.95, -13.8516, 2.22 ) }
    dend_6 { pt3dadd( -21.8077, -250.425, -14.7306, 0.83 ) }
    dend_6 { pt3dadd( -22.2946, -253.553, -15.1289, 0.83 ) }
    dend_6 { pt3dadd( -22.4374, -254.495, -15.2227, 1.39 ) }
    dend_6 { pt3dadd( -22.9766, -257.79, -15.2993, 2.22 ) }
    dend_6 { pt3dadd( -23.6827, -262.31, -15.1367, 0.83 ) }
    dend_6 { pt3dadd( -23.9695, -264.244, -15.0547, 1.67 ) }
    dend_6 { pt3dadd( -24.4466, -267.909, -14.845, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 73/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.8952, -177.296, 0.335086, 0.56 ) }
    dend_5 { pt3dadd( -24.922, -177.868, -0.91834, 0.56 ) }
    dend_5 { pt3dadd( -26.3169, -178.261, -1.78098, 0.56 ) }
    dend_5 { pt3dadd( -27.342, -178.549, -2.41496, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -132.243, -136.295, 19.887, 0.28 ) }
    dend_3 { pt3dadd( -134.001, -136.982, 20.9774, 0.28 ) }
    dend_3 { pt3dadd( -134.802, -137.294, 21.4736, 0.56 ) }
    dend_3 { pt3dadd( -137.689, -138.421, 23.2641, 0.28 ) }
    dend_3 { pt3dadd( -139.033, -138.945, 24.0975, 0.56 ) }
    dend_3 { pt3dadd( -141.858, -140.048, 25.8494, 0.56 ) }
    dend_3 { pt3dadd( -150.479, -142.747, 30.0447, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 84/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -132.243, -136.295, 19.887, 0.28 ) }
    dend_2 { pt3dadd( -131.686, -137.599, 19.3317, 0.28 ) }
    dend_2 { pt3dadd( -131.467, -138.111, 19.1135, 0.56 ) }
    dend_2 { pt3dadd( -128.258, -146.931, 17.238, 0.56 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -1.11481, 29.8175, -17.3001, 0.83 ) }
    dend_48 { pt3dadd( -1.8216, 33.3376, -17.9405, 0.83 ) }
    dend_48 { pt3dadd( -2.37929, 38.2699, -19.129, 0.83 ) }
    dend_48 { pt3dadd( -2.77895, 43.7178, -20.5518, 0.83 ) }
    dend_48 { pt3dadd( -2.96623, 46.7935, -21.2783, 0.83 ) }
    dend_48 { pt3dadd( -3.0283, 47.7355, -21.5092, 0.83 ) }
    dend_48 { pt3dadd( -3.26534, 51.109, -22.3298, 0.83 ) }
    dend_48 { pt3dadd( -3.58592, 56.0744, -23.3408, 0.83 ) }
    dend_48 { pt3dadd( -3.79612, 59.1735, -24.0606, 0.83 ) }
    dend_48 { pt3dadd( -4.02136, 62.6904, -24.8757, 1.11 ) }
    dend_48 { pt3dadd( -4.43652, 66.9274, -25.8543, 0.83 ) }
    dend_48 { pt3dadd( -4.77416, 68.9773, -26.2331, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -5.41535, 72.0375, -26.7556, 0.83 ) }
    dend_48 { pt3dadd( -6.73678, 76.9658, -27.4078, 0.83 ) }
    dend_48 { pt3dadd( -7.76751, 80.6442, -27.9373, 0.83 ) }
    dend_48 { pt3dadd( -8.51742, 83.1629, -28.3382, 0.83 ) }
    dend_48 { pt3dadd( -9.56766, 86.4081, -28.6895, 2.5 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.11481, 29.8175, -17.3001, 0.56 ) }
    dend_47 { pt3dadd( -0.510159, 33.2688, -20.0067, 0.56 ) }
    dend_47 { pt3dadd( 0.38795, 37.4196, -22.688, 0.56 ) }
    dend_47 { pt3dadd( 0.89042, 39.8636, -24.2518, 1.11 ) }
    dend_47 { pt3dadd( 1.78604, 43.8079, -26.6783, 0.56 ) }
    dend_47 { pt3dadd( 2.30248, 46.0198, -27.9694, 0.56 ) }
    dend_47 { pt3dadd( 3.13626, 49.2987, -29.8321, 1.11 ) }
    dend_47 { pt3dadd( 3.84844, 52.2685, -31.2649, 0.56 ) }
    dend_47 { pt3dadd( 4.94348, 55.9503, -32.8112, 0.56 ) }
    dend_47 { pt3dadd( 5.61345, 57.7555, -33.6031, 0.28 ) }
    dend_47 { pt3dadd( 6.22818, 59.1662, -34.1318, 0.56 ) }
    dend_47 { pt3dadd( 7.23543, 61.4363, -34.8401, 0.28 ) }
    dend_47 { pt3dadd( 7.46948, 61.9641, -34.9506, 0.56 ) }
    dend_47 { pt3dadd( 8.0276, 63.2288, -35.1818, 0.28 ) }
    dend_47 { pt3dadd( 8.18297, 63.5766, -35.2015, 0.56 ) }
    dend_47 { pt3dadd( 8.62622, 64.7106, -35.2521, 0.28 ) }
    dend_47 { pt3dadd( 9.82296, 67.7689, -35.4296, 1.67 ) }
    dend_47 { pt3dadd( 11.105, 71.223, -35.6358, 0.28 ) }
    dend_47 { pt3dadd( 11.2861, 71.7252, -35.7144, 0.56 ) }
    dend_47 { pt3dadd( 12.0046, 73.6879, -36.1487, 0.28 ) }
    dend_47 { pt3dadd( 12.171, 74.1692, -36.3003, 1.39 ) }
    dend_47 { pt3dadd( 13.2297, 77.1279, -37.4375, 0.28 ) }
    dend_47 { pt3dadd( 13.5938, 78.1587, -37.9227, 0.83 ) }
    dend_47 { pt3dadd( 14.8724, 81.5385, -39.4645, 0.28 ) }
    dend_47 { pt3dadd( 15.5039, 83.149, -40.3151, 1.39 ) }
    dend_47 { pt3dadd( 16.9474, 86.7693, -42.466, 0.28 ) }
    dend_47 { pt3dadd( 17.2918, 87.6606, -43.0086, 0.83 ) }
    dend_47 { pt3dadd( 18.2285, 90.2879, -44.6499, 0.28 ) }
    dend_47 { pt3dadd( 18.8427, 92.0829, -45.8451, 1.39 ) }
    dend_47 { pt3dadd( 19.9091, 95.4426, -48.1324, 0.28 ) }
    dend_47 { pt3dadd( 19.9316, 95.5364, -48.1968, 0.56 ) }
    dend_47 { pt3dadd( 20.1591, 96.9186, -49.016, 0.28 ) }
    dend_47 { pt3dadd( 20.2046, 97.4582, -49.2818, 0.56 ) }
    dend_47 { pt3dadd( 20.3412, 100.377, -50.4876, 0.28 ) }
    dend_47 { pt3dadd( 20.3549, 101.159, -50.8021, 0.83 ) }
    dend_47 { pt3dadd( 20.3859, 104.307, -51.8998, 0.28 ) }
    dend_47 { pt3dadd( 20.4221, 106.34, -52.5984, 1.11 ) }
    dend_47 { pt3dadd( 20.6519, 113.694, -55.0851, 0.28 ) }
    dend_47 { pt3dadd( 20.7191, 115.227, -55.5534, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 20.2412, 41.9655, 18.8673, 0.83 ) }
    dend_43 { pt3dadd( 19.3672, 44.3854, 19.5091, 0.83 ) }
    dend_43 { pt3dadd( 18.614, 46.2851, 20.1812, 0.83 ) }
    dend_43 { pt3dadd( 17.8765, 47.9333, 20.7455, 0.83 ) }
    dend_43 { pt3dadd( 16.417, 50.9586, 21.8516, 0.83 ) }
    dend_43 { pt3dadd( 15.5259, 52.8063, 22.6469, 0.83 ) }
    dend_43 { pt3dadd( 13.4628, 57.0413, 24.5114, 0.83 ) }
    dend_43 { pt3dadd( 12.1125, 59.9452, 25.8123, 0.83 ) }
    dend_43 { pt3dadd( 10.7449, 62.9263, 27.1393, 0.83 ) }
    dend_43 { pt3dadd( 9.96329, 64.6451, 27.8255, 0.83 ) }
    dend_43 { pt3dadd( 8.39424, 67.9845, 29.0998, 0.83 ) }
    dend_43 { pt3dadd( 7.66366, 69.7566, 29.7854, 0.83 ) }
    dend_43 { pt3dadd( 6.53938, 72.861, 30.8729, 0.83 ) }
    dend_43 { pt3dadd( 5.92654, 74.456, 31.4091, 1.94 ) }
    dend_43 { pt3dadd( 4.91162, 77.1414, 32.2903, 1.39 ) }
    dend_43 { pt3dadd( 3.01781, 82.0499, 33.6802, 0.83 ) }
    dend_43 { pt3dadd( 1.8153, 85.1191, 34.4375, 0.83 ) }
    dend_43 { pt3dadd( 0.757633, 87.8026, 35.1563, 1.11 ) }
    dend_43 { pt3dadd( -0.920033, 91.932, 36.2474, 0.83 ) }
    dend_43 { pt3dadd( -1.57835, 93.6446, 36.6473, 0.83 ) }
    dend_43 { pt3dadd( -1.95466, 94.847, 36.8612, 1.11 ) }
    dend_43 { pt3dadd( -2.59998, 97.4201, 37.052, 0.83 ) }
    dend_43 { pt3dadd( -2.89259, 98.7178, 37.0995, 0.56 ) }
    dend_43 { pt3dadd( -3.27689, 100.818, 37.1731, 1.39 ) }
    dend_43 { pt3dadd( -3.8204, 104.227, 37.2767, 0.83 ) }
    dend_43 { pt3dadd( -4.3758, 107.389, 37.3948, 1.67 ) }
    dend_43 { pt3dadd( -5.04444, 110.778, 37.525, 0.83 ) }
    dend_43 { pt3dadd( -5.31935, 112.073, 37.5353, 0.28 ) }
    dend_43 { pt3dadd( -5.56509, 113.221, 37.4921, 0.83 ) }
    dend_43 { pt3dadd( -5.9306, 114.786, 37.403, 0.28 ) }
    dend_43 { pt3dadd( -6.15077, 115.586, 37.302, 0.83 ) }
    dend_43 { pt3dadd( -6.65199, 117.105, 37.1404, 0.28 ) }
    dend_43 { pt3dadd( -7.33523, 119.066, 37.0049, 1.67 ) }
    dend_43 { pt3dadd( -8.17818, 121.36, 36.969, 0.28 ) }
    dend_43 { pt3dadd( -8.52613, 122.271, 36.9998, 1.39 ) }
    dend_43 { pt3dadd( -9.55863, 124.757, 37.0947, 0.83 ) }
    dend_43 { pt3dadd( -10.7983, 127.582, 37.0941, 0.28 ) }
    dend_43 { pt3dadd( -11.2189, 128.468, 37.0805, 1.67 ) }
    dend_43 { pt3dadd( -12.0371, 130.056, 37.0749, 2.5 ) }
    dend_43 { pt3dadd( -12.7231, 131.317, 37.0471, 1.39 ) }
    dend_43 { pt3dadd( -13.8202, 133.336, 36.8947, 0.56 ) }
    dend_43 { pt3dadd( -14.8233, 135.168, 36.6605, 1.11 ) }
    dend_43 { pt3dadd( -15.7621, 136.922, 36.1189, 0.28 ) }
    dend_43 { pt3dadd( -16.5123, 138.307, 35.6036, 1.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 20.2412, 41.9655, 18.8673, 0.56 ) }
    dend_42 { pt3dadd( 20.5815, 43.0483, 19.7725, 0.56 ) }
    dend_42 { pt3dadd( 20.8086, 44.148, 20.5087, 0.56 ) }
    dend_42 { pt3dadd( 21.113, 48.1105, 23.0329, 0.56 ) }
    dend_42 { pt3dadd( 21.1584, 51.1104, 24.9091, 0.83 ) }
    dend_42 { pt3dadd( 21.1747, 52.1294, 25.5305, 0.83 ) }
    dend_42 { pt3dadd( 21.2496, 54.2824, 26.7953, 0.83 ) }
    dend_42 { pt3dadd( 21.2124, 57.0131, 28.1821, 0.56 ) }
    dend_42 { pt3dadd( 21.1645, 60.3917, 29.6276, 0.56 ) }
    dend_42 { pt3dadd( 21.1916, 61.0325, 29.8154, 0.56 ) }
    dend_42 { pt3dadd( 21.4022, 62.6461, 30.1955, 0.56 ) }
    dend_42 { pt3dadd( 21.5989, 63.9319, 30.4666, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_42 { pt3dadd( 22.1823, 66.8292, 31.1251, 0.83 ) }
    dend_42 { pt3dadd( 22.6444, 69.115, 31.8001, 0.56 ) }
    dend_42 { pt3dadd( 22.7576, 70.9034, 32.3746, 0.56 ) }
    dend_42 { pt3dadd( 22.6456, 71.4511, 32.6064, 0.83 ) }
    dend_42 { pt3dadd( 21.7945, 73.2572, 33.5613, 0.56 ) }
    dend_42 { pt3dadd( 20.4141, 75.2558, 34.7353, 1.67 ) }
    dend_42 { pt3dadd( 19.0623, 76.6579, 35.6685, 1.11 ) }
    dend_42 { pt3dadd( 16.8501, 78.4019, 36.7355, 0.83 ) }
    dend_42 { pt3dadd( 15.4802, 79.2535, 37.3686, 0.83 ) }
    dend_42 { pt3dadd( 13.7753, 80.0832, 38.1451, 0.28 ) }
    dend_42 { pt3dadd( 12.7245, 80.3883, 38.629, 0.56 ) }
    dend_42 { pt3dadd( 11.6398, 80.4875, 38.9832, 0.83 ) }
    dend_42 { pt3dadd( 9.47757, 80.2565, 39.3668, 0.56 ) }
    dend_42 { pt3dadd( 6.11241, 79.3634, 39.8877, 0.83 ) }
    dend_42 { pt3dadd( 4.22963, 78.7829, 40.2215, 0.28 ) }
    dend_42 { pt3dadd( 2.63682, 78.3318, 40.4987, 0.28 ) }
    dend_42 { pt3dadd( 0.419311, 77.7114, 40.9372, 0.83 ) }
    dend_42 { pt3dadd( -2.29383, 77.0111, 41.452, 0.28 ) }
    dend_42 { pt3dadd( -5.7451, 76.232, 42.017, 0.83 ) }
    dend_42 { pt3dadd( -9.40602, 75.6828, 42.1785, 0.28 ) }
    dend_42 { pt3dadd( -11.1712, 75.5644, 42.2964, 1.11 ) }
    dend_42 { pt3dadd( -15.4147, 83.1036, 46.6567, 1.11 ) }
    dend_42 { pt3dadd( -20.6602, 89.3173, 52.1069, 1.11 ) }
    dend_42 { pt3dadd( -25.5462, 96.1602, 57.0306, 1.11 ) }
    dend_42 { pt3dadd( -30.809, 102.641, 62.1068, 1.11 ) }
    dend_42 { pt3dadd( -35.4215, 108.777, 68.1904, 1.11 ) }
    dend_42 { pt3dadd( -41.3342, 113.798, 74.2816, 1.11 ) }
    dend_42 { pt3dadd( -48.53, 118.141, 79.5083, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 28/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 24.2294, 40.074, 30.8199, 0.56 ) }
    dend_37 { pt3dadd( 25.2226, 41.9896, 31.2458, 0.56 ) }
    dend_37 { pt3dadd( 25.7459, 42.9523, 31.5331, 0.83 ) }
    dend_37 { pt3dadd( 27.5241, 46.0875, 32.6514, 0.56 ) }
    dend_37 { pt3dadd( 29.4894, 49.3384, 33.9381, 0.56 ) }
    dend_37 { pt3dadd( 31.9472, 53.0142, 35.426, 0.56 ) }
    dend_37 { pt3dadd( 33.6536, 55.5526, 36.5411, 0.56 ) }
    dend_37 { pt3dadd( 33.9642, 56.0038, 36.7728, 0.56 ) }
    dend_37 { pt3dadd( 35.2104, 57.7173, 37.6359, 0.28 ) }
    dend_37 { pt3dadd( 35.6742, 58.2745, 37.9517, 0.83 ) }
    dend_37 { pt3dadd( 37.0641, 59.4618, 38.7877, 0.56 ) }
    dend_37 { pt3dadd( 39.3118, 60.9992, 39.7105, 0.28 ) }
    dend_37 { pt3dadd( 40.3501, 61.6908, 39.9712, 0.83 ) }
    dend_37 { pt3dadd( 41.631, 62.4935, 40.2639, 0.56 ) }
    dend_37 { pt3dadd( 44.2723, 63.9261, 40.701, 1.11 ) }
    dend_37 { pt3dadd( 47.3734, 65.5893, 41.1722, 0.56 ) }
    dend_37 { pt3dadd( 53.3506, 72.59, 44.3294, 0.56 ) }
    dend_37 { pt3dadd( 59.9498, 79.5321, 46.0761, 0.56 ) }
    dend_37 { pt3dadd( 68.0447, 84.6538, 48.4015, 0.56 ) }
    dend_37 { pt3dadd( 76.5697, 88.6612, 51.4885, 0.56 ) }
    dend_37 { pt3dadd( 85.6742, 92.1983, 53.2901, 0.56 ) }
    dend_37 { pt3dadd( 95.0667, 94.5723, 55.643, 0.56 ) }
    dend_37 { pt3dadd( 104.741, 95.7633, 57.8449, 0.56 ) }
    dend_37 { pt3dadd( 114.206, 97.0432, 60.7759, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 52/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 24.2294, 40.074, 30.8199, 0.56 ) }
    dend_36 { pt3dadd( 25.3882, 40.3481, 31.1652, 0.56 ) }
    dend_36 { pt3dadd( 26.9193, 40.7104, 31.6214, 0.56 ) }
    dend_36 { pt3dadd( 27.9611, 40.9568, 31.9319, 0.83 ) }
    dend_36 { pt3dadd( 31.2406, 41.7327, 32.9091, 0.56 ) }
    dend_36 { pt3dadd( 35.4414, 42.7265, 34.1608, 0.28 ) }
    dend_36 { pt3dadd( 44.7463, 45.6834, 36.0926, 0.28 ) }
    dend_36 { pt3dadd( 53.9175, 48.83, 38.3104, 0.28 ) }
    dend_36 { pt3dadd( 63.6747, 50.4675, 39.6618, 0.28 ) }
    dend_36 { pt3dadd( 73.6707, 50.4497, 39.3811, 0.28 ) }
    dend_36 { pt3dadd( 83.6663, 50.7224, 39.457, 0.28 ) }
    dend_36 { pt3dadd( 93.5385, 52.0516, 38.6947, 0.28 ) }
    dend_36 { pt3dadd( 102.596, 55.1417, 35.9773, 0.28 ) }
    dend_36 { pt3dadd( 111.781, 57.308, 32.7479, 0.28 ) }
    dend_36 { pt3dadd( 121.113, 60.1687, 30.7847, 0.28 ) }
    dend_36 { pt3dadd( 129.849, 64.0448, 28.1312, 0.28 ) }
    dend_36 { pt3dadd( 138.508, 68.7485, 27.4227, 0.28 ) }
    dend_36 { pt3dadd( 147.27, 73.119, 25.9874, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 70/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 72.9108, 40.2128, 22.6648, 0.83 ) }
    dend_30 { pt3dadd( 74.688, 41.0669, 22.9618, 0.83 ) }
    dend_30 { pt3dadd( 76.7516, 42.1346, 23.2756, 0.83 ) }
    dend_30 { pt3dadd( 79.0783, 43.2782, 23.5286, 0.83 ) }
    dend_30 { pt3dadd( 82.1518, 44.6468, 23.9448, 0.83 ) }
    dend_30 { pt3dadd( 83.4576, 45.1491, 24.1926, 0.83 ) }
    dend_30 { pt3dadd( 87.2696, 46.4857, 25.0118, 0.83 ) }
    dend_30 { pt3dadd( 90.2572, 47.5006, 25.7215, 0.83 ) }
    dend_30 { pt3dadd( 92.3208, 48.1863, 26.229, 0.83 ) }
    dend_30 { pt3dadd( 94.8426, 49.008, 26.8322, 1.39 ) }
    dend_30 { pt3dadd( 98.4687, 49.9693, 27.6211, 0.83 ) }
    dend_30 { pt3dadd( 100.406, 50.3667, 28.0145, 0.83 ) }
    dend_30 { pt3dadd( 102.515, 50.6958, 28.4023, 1.11 ) }
    dend_30 { pt3dadd( 104.426, 50.9628, 28.7239, 0.83 ) }
    dend_30 { pt3dadd( 106.617, 51.2872, 29.0188, 0.83 ) }
    dend_30 { pt3dadd( 108.21, 51.5369, 29.0878, 0.83 ) }
    dend_30 { pt3dadd( 110.049, 51.7991, 29.0701, 0.83 ) }
    dend_30 { pt3dadd( 111.152, 51.9541, 28.9739, 0.83 ) }
    dend_30 { pt3dadd( 112.338, 52.1109, 28.7971, 1.39 ) }
    dend_30 { pt3dadd( 112.939, 52.2206, 28.6643, 1.39 ) }
    dend_30 { pt3dadd( 115.056, 52.7606, 28.0301, 0.56 ) }
    dend_30 { pt3dadd( 117.074, 53.4257, 27.1986, 1.67 ) }
    dend_30 { pt3dadd( 120.379, 54.6757, 25.5957, 0.56 ) }
    dend_30 { pt3dadd( 120.886, 54.8774, 25.3164, 0.83 ) }
    dend_30 { pt3dadd( 122.486, 55.5087, 24.3694, 0.28 ) }
    dend_30 { pt3dadd( 123.182, 55.7611, 23.9884, 0.56 ) }
    dend_30 { pt3dadd( 125.723, 56.4592, 22.7272, 0.28 ) }
    dend_30 { pt3dadd( 126.735, 56.6946, 22.2639, 0.56 ) }
    dend_30 { pt3dadd( 129.007, 57.0947, 21.4862, 0.28 ) }
    dend_30 { pt3dadd( 129.746, 57.2142, 21.2416, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( 132.315, 57.4935, 20.494, 0.28 ) }
    dend_30 { pt3dadd( 134.252, 57.6473, 20.0422, 1.11 ) }
    dend_30 { pt3dadd( 143.934, 59.3257, 18.2727, 1.11 ) }
    dend_30 { pt3dadd( 153.911, 59.5614, 17.6378, 1.11 ) }
    dend_30 { pt3dadd( 163.779, 58.0783, 17.1921, 1.11 ) }
    dend_30 { pt3dadd( 173.754, 57.55, 17.6194, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 72.9108, 40.2128, 22.6648, 0.56 ) }
    dend_29 { pt3dadd( 75.0916, 41.6935, 23.9423, 0.56 ) }
    dend_29 { pt3dadd( 76.0726, 42.3613, 24.6126, 0.56 ) }
    dend_29 { pt3dadd( 77.594, 43.3322, 25.6662, 0.56 ) }
    dend_29 { pt3dadd( 81.6099, 45.8065, 28.3933, 0.56 ) }
    dend_29 { pt3dadd( 82.2585, 46.2018, 28.8208, 0.56 ) }
    dend_29 { pt3dadd( 86.8003, 48.8242, 31.6311, 0.56 ) }
    dend_29 { pt3dadd( 88.5097, 49.7194, 32.6014, 0.28 ) }
    dend_29 { pt3dadd( 89.7237, 50.3292, 33.2095, 0.56 ) }
    dend_29 { pt3dadd( 90.7742, 50.8312, 33.602, 0.28 ) }
    dend_29 { pt3dadd( 91.989, 51.4293, 33.8547, 0.56 ) }
    dend_29 { pt3dadd( 94.9926, 53.0356, 34.1055, 0.28 ) }
    dend_29 { pt3dadd( 97.95, 54.6556, 33.9136, 0.28 ) }
    dend_29 { pt3dadd( 99.0898, 55.422, 33.6942, 0.56 ) }
    dend_29 { pt3dadd( 101.665, 57.4501, 33.2326, 0.28 ) }
    dend_29 { pt3dadd( 102.431, 58.0854, 33.0747, 0.56 ) }
    dend_29 { pt3dadd( 104.66, 60.0939, 32.5209, 0.28 ) }
    dend_29 { pt3dadd( 105.022, 60.4779, 32.4046, 0.56 ) }
    dend_29 { pt3dadd( 108.755, 64.9915, 31.144, 0.28 ) }
    dend_29 { pt3dadd( 110.969, 67.9484, 30.3864, 1.94 ) }
    dend_29 { pt3dadd( 118.989, 73.1719, 32.7196, 1.94 ) }
    dend_29 { pt3dadd( 128.012, 77.1928, 33.5462, 1.94 ) }
    dend_29 { pt3dadd( 136.463, 82.1663, 34.6265, 1.94 ) }
    dend_29 { pt3dadd( 144.542, 86.8534, 37.8486, 1.94 ) }
    dend_29 { pt3dadd( 152.932, 89.5335, 42.5019, 1.94 ) }
    dend_29 { pt3dadd( 162.593, 90.3636, 44.9304, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 32/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 72.8386, 32.9454, 33.341, 0.56 ) }
    dend_27 { pt3dadd( 76.0461, 33.1703, 34.3963, 0.56 ) }
    dend_27 { pt3dadd( 78.7352, 33.3589, 35.281, 0.56 ) }
    dend_27 { pt3dadd( 80.5902, 33.489, 35.8913, 0.56 ) }
    dend_27 { pt3dadd( 83.7057, 33.7075, 36.9163, 0.56 ) }
    dend_27 { pt3dadd( 87.1469, 33.9488, 38.0485, 0.83 ) }
    dend_27 { pt3dadd( 96.3324, 36.2152, 41.2006, 0.83 ) }
    dend_27 { pt3dadd( 105.11, 39.9858, 43.8833, 0.83 ) }
    dend_27 { pt3dadd( 113.455, 44.7515, 46.1657, 0.83 ) }
    dend_27 { pt3dadd( 121.695, 50.1192, 46.5874, 0.83 ) }
    dend_27 { pt3dadd( 130.2, 55.0435, 47.4717, 0.83 ) }
    dend_27 { pt3dadd( 137.939, 61.0592, 47.5954, 0.83 ) }
    dend_27 { pt3dadd( 145.8, 66.8882, 46.8491, 0.83 ) }
    dend_27 { pt3dadd( 154.18, 72.0165, 47.6458, 0.83 ) }
    dend_27 { pt3dadd( 161.911, 77.7586, 49.5674, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 72.8386, 32.9454, 33.341, 0.83 ) }
    dend_26 { pt3dadd( 72.3778, 31.6147, 33.588, 0.83 ) }
    dend_26 { pt3dadd( 71.7705, 29.861, 33.9134, 0.83 ) }
    dend_26 { pt3dadd( 70.254, 20.5649, 35.3089, 0.83 ) }
    dend_26 { pt3dadd( 68.3657, 11.238, 35.5198, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.4466, -267.909, -14.845, 0.56 ) }
    dend_8 { pt3dadd( -25.0279, -271.361, -14.1982, 0.56 ) }
    dend_8 { pt3dadd( -25.1779, -272.932, -14.0038, 0.83 ) }
    dend_8 { pt3dadd( -25.7149, -277.916, -13.3359, 0.56 ) }
    dend_8 { pt3dadd( -26.1637, -281.654, -12.9775, 0.83 ) }
    dend_8 { pt3dadd( -26.5267, -284.347, -12.7804, 1.94 ) }
    dend_8 { pt3dadd( -26.8755, -286.98, -12.6259, 2.22 ) }
    dend_8 { pt3dadd( -27.2364, -290.974, -12.3717, 0.83 ) }
    dend_8 { pt3dadd( -27.4447, -294.648, -12.0107, 0.83 ) }
    dend_8 { pt3dadd( -27.4794, -297.542, -11.6664, 0.83 ) }
    dend_8 { pt3dadd( -27.5107, -298.835, -11.3714, 0.56 ) }
    dend_8 { pt3dadd( -27.5843, -300.418, -10.8385, 0.56 ) }
    dend_8 { pt3dadd( -27.7153, -303.022, -9.71182, 1.11 ) }
    dend_8 { pt3dadd( -27.7598, -306.255, -7.8171, 0.56 ) }
    dend_8 { pt3dadd( -27.6537, -307.235, -7.13532, 0.56 ) }
    dend_8 { pt3dadd( -27.3505, -309.285, -5.3356, 0.56 ) }
    dend_8 { pt3dadd( -27.1149, -310.871, -3.86142, 1.39 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 69/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -24.4466, -267.909, -14.845, 0.56 ) }
    dend_7 { pt3dadd( -21.8127, -271.576, -18.3984, 0.56 ) }
    dend_7 { pt3dadd( -19.5574, -275.697, -22.731, 0.56 ) }
    dend_7 { pt3dadd( -18.5076, -277.988, -25.0792, 0.56 ) }
    dend_7 { pt3dadd( -17.8083, -279.646, -26.6891, 0.28 ) }
    dend_7 { pt3dadd( -17.2656, -281.001, -28.009, 0.28 ) }
    dend_7 { pt3dadd( -16.5506, -283.042, -30.005, 1.11 ) }
    dend_7 { pt3dadd( -15.9691, -285.712, -32.604, 0.28 ) }
    dend_7 { pt3dadd( -15.7373, -287.348, -34.2233, 0.28 ) }
    dend_7 { pt3dadd( -15.4509, -288.53, -35.5774, 2.22 ) }
    dend_7 { pt3dadd( -14.4567, -291.001, -39.2586, 0.28 ) }
    dend_7 { pt3dadd( -13.8536, -291.924, -41.4306, 0.28 ) }
    dend_7 { pt3dadd( -13.4097, -292.244, -42.7821, 0.28 ) }
    dend_7 { pt3dadd( -12.4881, -292.306, -45.1537, 0.83 ) }
    dend_7 { pt3dadd( -10.0228, -291.381, -52.0335, 0.28 ) }
    dend_7 { pt3dadd( -9.3845, -290.963, -53.8607, 1.67 ) }
    dend_7 { pt3dadd( -8.37277, -290.076, -56.5977, 0.28 ) }
    dend_7 { pt3dadd( -8.00373, -289.724, -57.5755, 0.83 ) }
    dend_7 { pt3dadd( -6.94887, -288.639, -60.4638, 0.28 ) }
    dend_7 { pt3dadd( -6.05368, -287.735, -62.9148, 1.67 ) }
    dend_7 { pt3dadd( -4.66913, -286.384, -66.3854, 0.56 ) }
    dend_7 { pt3dadd( -3.49489, -285.254, -69.3659, 0.28 ) }
    dend_7 { pt3dadd( -3.36122, -285.127, -69.71, 0.83 ) }
    dend_7 { pt3dadd( -1.17179, -282.952, -75.6352, 0.28 ) }
    dend_7 { pt3dadd( -0.182089, -281.99, -78.2395, 1.11 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 94/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.56766, 86.4081, -28.6895, 0.56 ) }
    dend_52 { pt3dadd( -14.1538, 88.1967, -26.3864, 0.56 ) }
    dend_52 { pt3dadd( -15.7564, 89.0112, -25.6977, 1.39 ) }
    dend_52 { pt3dadd( -20.8712, 92.4543, -23.7379, 0.56 ) }
    dend_52 { pt3dadd( -22.1316, 93.5339, -23.2896, 0.28 ) }
    dend_52 { pt3dadd( -23.8922, 95.4488, -22.5617, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_52 { pt3dadd( -26.2702, 98.3354, -21.51, 0.56 ) }
    dend_52 { pt3dadd( -27.9283, 100.892, -20.7149, 1.11 ) }
    dend_52 { pt3dadd( -29.6887, 104.081, -19.891, 0.28 ) }
    dend_52 { pt3dadd( -30.9851, 106.718, -19.3834, 1.67 ) }
    dend_52 { pt3dadd( -33.4466, 111.989, -18.1531, 0.28 ) }
    dend_52 { pt3dadd( -33.7476, 112.658, -17.9849, 0.28 ) }
    dend_52 { pt3dadd( -34.7028, 114.624, -17.3651, 0.83 ) }
    dend_52 { pt3dadd( -35.9338, 116.702, -16.5897, 0.28 ) }
    dend_52 { pt3dadd( -36.7201, 117.713, -16.1807, 0.28 ) }
    dend_52 { pt3dadd( -38.0686, 119.061, -15.5797, 0.83 ) }
    dend_52 { pt3dadd( -40.3345, 120.822, -14.9034, 0.28 ) }
    dend_52 { pt3dadd( -42.8503, 122.532, -13.9924, 1.11 ) }
    dend_52 { pt3dadd( -44.8112, 123.221, -13.4148, 0.56 ) }
    dend_52 { pt3dadd( -46.4161, 123.446, -12.9849, 0.28 ) }
    dend_52 { pt3dadd( -48.3214, 123.598, -12.4894, 0.28 ) }
    dend_52 { pt3dadd( -50.6803, 123.61, -11.9231, 0.28 ) }
    dend_52 { pt3dadd( -54.0828, 123.312, -11.0668, 0.56 ) }
    dend_52 { pt3dadd( -61.8189, 122.095, -9.5081, 0.28 ) }
    dend_52 { pt3dadd( -63.6553, 121.7, -9.10782, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 19/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -9.56766, 86.4081, -28.6895, 0.83 ) }
    dend_49 { pt3dadd( -9.50196, 88.3219, -28.5435, 0.83 ) }
    dend_49 { pt3dadd( -9.29355, 90.6942, -28.6471, 0.83 ) }
    dend_49 { pt3dadd( -8.79291, 95.4264, -29.1002, 0.56 ) }
    dend_49 { pt3dadd( -8.29249, 99.9518, -29.8654, 0.56 ) }
    dend_49 { pt3dadd( -8.02419, 102.278, -30.3547, 0.28 ) }
    dend_49 { pt3dadd( -7.73886, 104.792, -30.9299, 1.67 ) }
    dend_49 { pt3dadd( -6.84537, 110.961, -32.7727, 0.28 ) }
    dend_49 { pt3dadd( -6.74987, 111.521, -32.9751, 0.56 ) }
    dend_49 { pt3dadd( -6.31111, 114.086, -34.0754, 0.28 ) }
    dend_49 { pt3dadd( -6.26314, 114.627, -34.3094, 0.83 ) }
    dend_49 { pt3dadd( -6.21247, 116.164, -34.8437, 0.28 ) }
    dend_49 { pt3dadd( -6.20966, 117.287, -35.2729, 0.83 ) }
    dend_49 { pt3dadd( -6.34318, 120.036, -36.1731, 0.28 ) }
    dend_49 { pt3dadd( -6.50964, 122.24, -37.0571, 1.94 ) }
    dend_49 { pt3dadd( -6.87268, 125.732, -38.549, 0.28 ) }
    dend_49 { pt3dadd( -7.17595, 127.472, -39.5513, 0.83 ) }
    dend_49 { pt3dadd( -7.96631, 131.153, -41.9959, 0.28 ) }
    dend_49 { pt3dadd( -8.14264, 131.891, -42.6018, 0.83 ) }
    dend_49 { pt3dadd( -8.90019, 134.814, -45.396, 0.28 ) }
    dend_49 { pt3dadd( -9.14582, 135.823, -46.4165, 1.11 ) }
    dend_49 { pt3dadd( -10.2973, 140.944, -51.363, 0.28 ) }
    dend_49 { pt3dadd( -10.59, 142.329, -52.6573, 1.39 ) }
    dend_49 { pt3dadd( -11.615, 147.743, -57.0148, 0.28 ) }
    dend_49 { pt3dadd( -11.6823, 148.175, -57.324, 0.56 ) }
    dend_49 { pt3dadd( -12.0987, 151.83, -59.4498, 0.28 ) }
    dend_49 { pt3dadd( -12.344, 155.036, -61.0312, 1.39 ) }
    dend_49 { pt3dadd( -12.4503, 157.842, -61.828, 1.11 ) }
    dend_49 { pt3dadd( -12.6106, 161.033, -62.3653, 0.28 ) }
    dend_49 { pt3dadd( -12.6695, 161.817, -62.4104, 0.56 ) }
    dend_49 { pt3dadd( -13.0456, 165.46, -62.7227, 0.28 ) }
    dend_49 { pt3dadd( -13.1435, 166.286, -62.7928, 0.83 ) }
    dend_49 { pt3dadd( -13.7196, 170.791, -63.3763, 0.28 ) }
    dend_49 { pt3dadd( -13.8707, 171.911, -63.4743, 1.39 ) }
    dend_49 { pt3dadd( -14.4229, 175.615, -63.9136, 0.28 ) }
    dend_49 { pt3dadd( -14.707, 177.276, -64.1101, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 55/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -16.5123, 138.307, 35.6036, 1.94 ) }
    dend_45 { pt3dadd( -17.2525, 139.759, 36.9603, 1.94 ) }
    dend_45 { pt3dadd( -18.1182, 141.583, 38.6695, 0.28 ) }
    dend_45 { pt3dadd( -18.4568, 142.396, 39.1552, 0.83 ) }
    dend_45 { pt3dadd( -19.7546, 146.026, 40.8327, 0.28 ) }
    dend_45 { pt3dadd( -20.037, 146.915, 41.041, 1.11 ) }
    dend_45 { pt3dadd( -20.535, 148.561, 41.2398, 0.28 ) }
    dend_45 { pt3dadd( -20.8325, 149.725, 41.3477, 1.67 ) }
    dend_45 { pt3dadd( -21.7924, 153.57, 41.5276, 0.28 ) }
    dend_45 { pt3dadd( -22.0038, 154.488, 41.4048, 0.83 ) }
    dend_45 { pt3dadd( -22.7723, 157.902, 40.238, 0.28 ) }
    dend_45 { pt3dadd( -22.8691, 158.437, 40.0146, 0.56 ) }
    dend_45 { pt3dadd( -25.6717, 167.522, 40.8417, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 68/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -16.5123, 138.307, 35.6036, 0.28 ) }
    dend_44 { pt3dadd( -15.9552, 141.906, 37.0423, 0.28 ) }
    dend_44 { pt3dadd( -15.8797, 142.393, 37.2372, 0.83 ) }
    dend_44 { pt3dadd( -15.2801, 146.268, 38.7859, 0.28 ) }
    dend_44 { pt3dadd( -15.2427, 146.509, 38.8824, 0.56 ) }
    dend_44 { pt3dadd( -14.8664, 148.941, 39.8545, 0.28 ) }
    dend_44 { pt3dadd( -14.4456, 151.66, 40.9412, 1.11 ) }
    dend_44 { pt3dadd( -14.0778, 159.861, 45.9747, 1.11 ) }
    dend_44 { pt3dadd( -15.2078, 166.67, 52.8561, 1.11 ) }
    dend_44 { pt3dadd( -16.1601, 173.82, 59.371, 1.11 ) }
    dend_44 { pt3dadd( -16.5613, 181.049, 65.8477, 1.11 ) }
    dend_44 { pt3dadd( -17.682, 188.573, 71.849, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 114.206, 97.0432, 60.7759, 0.28 ) }
    dend_39 { pt3dadd( 122.255, 101.976, 63.6482, 0.28 ) }
    dend_39 { pt3dadd( 130.976, 106.364, 65.2631, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 114.206, 97.0432, 60.7759, 0.28 ) }
    dend_38 { pt3dadd( 122.16, 102.366, 63.0859, 0.28 ) }
    dend_38 { pt3dadd( 131.004, 106.36, 65.1124, 0.28 ) }
    dend_38 { pt3dadd( 140.279, 108.968, 67.6504, 0.28 ) }
    dend_38 { pt3dadd( 149.486, 110.842, 71.0172, 0.28 ) }
    dend_38 { pt3dadd( 159.036, 110.891, 73.9856, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -27.1149, -310.871, -3.86142, 0.56 ) }
    dend_16 { pt3dadd( -28.4682, -310.481, -3.86809, 0.56 ) }
    dend_16 { pt3dadd( -30.3855, -309.929, -3.87755, 1.11 ) }
    dend_16 { pt3dadd( -32.0632, -309.445, -3.88583, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -27.1149, -310.871, -3.86142, 1.39 ) }
    dend_9 { pt3dadd( -27.4621, -311.788, -2.76224, 1.39 ) }
    dend_9 { pt3dadd( -28.4326, -314.35, 0.309339, 1.39 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 96/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -14.707, 177.276, -64.1101, 0.28 ) }
    dend_51 { pt3dadd( -14.5585, 181.005, -62.7283, 0.28 ) }
    dend_51 { pt3dadd( -14.5484, 181.258, -62.6344, 0.56 ) }
    dend_51 { pt3dadd( -14.4564, 183.569, -61.7781, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( -14.4251, 184.354, -61.4872, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.707, 177.276, -64.1101, 0.28 ) }
    dend_50 { pt3dadd( -16.286, 177.072, -65.2078, 0.28 ) }
    dend_50 { pt3dadd( -16.611, 177.03, -65.4337, 0.56 ) }
    dend_50 { pt3dadd( -18.7478, 176.754, -66.9192, 0.28 ) }
    dend_50 { pt3dadd( -20.2719, 176.557, -67.9787, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -28.4326, -314.35, 0.309339, 0.56 ) }
    dend_13 { pt3dadd( -30.6774, -317.867, 2.83074, 0.56 ) }
    dend_13 { pt3dadd( -32.5206, -320.21, 4.22295, 0.56 ) }
    dend_13 { pt3dadd( -34.8111, -322.923, 5.38225, 0.56 ) }
    dend_13 { pt3dadd( -36.1976, -324.58, 5.9178, 0.56 ) }
    dend_13 { pt3dadd( -38.2054, -326.99, 6.80594, 0.56 ) }
    dend_13 { pt3dadd( -40.8581, -330.468, 8.26653, 0.56 ) }
    dend_13 { pt3dadd( -42.6362, -332.75, 9.22358, 0.56 ) }
    dend_13 { pt3dadd( -44.4645, -335.36, 10.4967, 0.56 ) }
    dend_13 { pt3dadd( -45.1621, -336.69, 11.1414, 0.56 ) }
    dend_13 { pt3dadd( -47.0241, -341.007, 13.4137, 0.56 ) }
    dend_13 { pt3dadd( -47.9187, -343.672, 14.9687, 0.56 ) }
    dend_13 { pt3dadd( -48.4141, -346.28, 16.8201, 0.56 ) }
    dend_13 { pt3dadd( -48.7474, -348.822, 18.9078, 0.83 ) }
    dend_13 { pt3dadd( -48.9215, -350.868, 20.8422, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 21/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -28.4326, -314.35, 0.309339, 0.56 ) }
    dend_10 { pt3dadd( -26.8146, -318.801, 0.309339, 0.56 ) }
    dend_10 { pt3dadd( -24.282, -325.621, -0.104851, 0.56 ) }
    dend_10 { pt3dadd( -23.4207, -328.072, -0.327514, 0.56 ) }
    dend_10 { pt3dadd( -22.8941, -329.76, -0.506484, 0.56 ) }
    dend_10 { pt3dadd( -21.9091, -333.139, -0.88839, 0.83 ) }
    dend_10 { pt3dadd( -20.8535, -337.003, -1.45594, 0.56 ) }
    dend_10 { pt3dadd( -20.2854, -339.773, -2.03545, 0.56 ) }
    dend_10 { pt3dadd( -20.048, -341.477, -2.49375, 1.11 ) }
    dend_10 { pt3dadd( -19.9165, -343.268, -3.00796, 0.28 ) }
    dend_10 { pt3dadd( -19.8343, -345.665, -3.75928, 0.28 ) }
    dend_10 { pt3dadd( -19.8449, -347.995, -4.57126, 1.67 ) }
    dend_10 { pt3dadd( -20.047, -350.003, -5.27277, 2.5 ) }
    dend_10 { pt3dadd( -20.5516, -355.41, -6.80736, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -48.9215, -350.868, 20.8422, 0.56 ) }
    dend_15 { pt3dadd( -51.588, -354.333, 21.8622, 0.56 ) }
    dend_15 { pt3dadd( -53.3127, -356.923, 22.7491, 0.56 ) }
    dend_15 { pt3dadd( -53.7174, -357.642, 22.9254, 0.56 ) }
    dend_15 { pt3dadd( -55.2575, -360.675, 23.4285, 0.56 ) }
    dend_15 { pt3dadd( -56.212, -362.837, 23.6955, 0.56 ) }
    dend_15 { pt3dadd( -56.8509, -364.285, 23.8742, 0.56 ) }
    dend_15 { pt3dadd( -57.5527, -366.495, 24.1443, 0.56 ) }
    dend_15 { pt3dadd( -58.5222, -370.084, 24.4458, 0.56 ) }
    dend_15 { pt3dadd( -59.2163, -372.877, 24.5011, 0.56 ) }
    dend_15 { pt3dadd( -59.5649, -374.611, 24.2981, 0.56 ) }
    dend_15 { pt3dadd( -61.6923, -383.879, 24.8337, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -48.9215, -350.868, 20.8422, 0.28 ) }
    dend_14 { pt3dadd( -49.6524, -352.907, 20.5374, 0.28 ) }
    dend_14 { pt3dadd( -50.2716, -354.677, 20.1368, 0.28 ) }
    dend_14 { pt3dadd( -51.29, -357.182, 19.4837, 0.28 ) }
    dend_14 { pt3dadd( -51.9121, -358.573, 19.1058, 0.28 ) }
    dend_14 { pt3dadd( -52.7522, -360.089, 18.668, 0.28 ) }
    dend_14 { pt3dadd( -54.7939, -363.249, 17.667, 0.28 ) }
    dend_14 { pt3dadd( -55.4419, -364.073, 17.2828, 0.28 ) }
    dend_14 { pt3dadd( -56.5544, -365.442, 16.5366, 0.28 ) }
    dend_14 { pt3dadd( -57.3215, -366.402, 15.9837, 0.28 ) }
    dend_14 { pt3dadd( -59.0572, -368.527, 14.7004, 0.56 ) }
    dend_14 { pt3dadd( -60.1204, -369.777, 13.9521, 0.56 ) }
    dend_14 { pt3dadd( -62.4827, -372.515, 12.5089, 0.28 ) }
    dend_14 { pt3dadd( -64.2037, -374.634, 11.3089, 0.28 ) }
    dend_14 { pt3dadd( -65.0077, -375.851, 10.5911, 0.83 ) }
    dend_14 { pt3dadd( -68.8093, -384.392, 8.41869, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -20.5516, -355.41, -6.80736, 0.28 ) }
    dend_12 { pt3dadd( -20.0572, -357.984, -6.07207, 0.28 ) }
    dend_12 { pt3dadd( -19.9398, -358.751, -5.88798, 0.56 ) }
    dend_12 { pt3dadd( -19.8325, -359.862, -5.81775, 0.28 ) }
    dend_12 { pt3dadd( -19.6585, -361.54, -5.84621, 0.28 ) }
    dend_12 { pt3dadd( -19.4887, -362.841, -5.97476, 0.56 ) }
    dend_12 { pt3dadd( -19.0367, -365.708, -6.35884, 0.28 ) }
    dend_12 { pt3dadd( -18.7096, -367.496, -6.79848, 0.83 ) }
    dend_12 { pt3dadd( -18.1346, -370.566, -7.62589, 0.28 ) }
    dend_12 { pt3dadd( -17.9294, -371.629, -7.94579, 0.56 ) }
    dend_12 { pt3dadd( -17.4099, -374.775, -9.03288, 0.28 ) }
    dend_12 { pt3dadd( -17.2591, -375.651, -9.38976, 0.56 ) }
    dend_12 { pt3dadd( -16.6456, -378.05, -10.6399, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 76/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.5516, -355.41, -6.80736, 0.28 ) }
    dend_11 { pt3dadd( -19.7692, -357.128, -5.4559, 0.28 ) }
    dend_11 { pt3dadd( -19.0857, -358.542, -4.27178, 0.28 ) }
    dend_11 { pt3dadd( -16.6376, -362.788, -0.615644, 0.28 ) }
    dend_11 { pt3dadd( -15.0997, -365.455, 1.68125, 0.28 ) }
    dend_11 { pt3dadd( -14.8572, -365.876, 2.04343, 0.83 ) }
    dend_11 { pt3dadd( -12.9246, -369.227, 4.92978, 0.28 ) }
    dend_11 { pt3dadd( -12.4229, -370.146, 5.79808, 0.28 ) }
    dend_11 { pt3dadd( -11.3736, -371.886, 7.67924, 0.28 ) }
    dend_11 { pt3dadd( -8.34649, -378.791, 13.844, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_61 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_60 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_59 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_57 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_54 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_19 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_1 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_55 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_43 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_42 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_44 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_13 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_10 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_14 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_40 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_62 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_17 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_58 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_24 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_45 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_51 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_2 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_12 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_11 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_15 OneSecGrp_SectionRef_67.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_61 nseg = 11
    dend_31 nseg = 11
    dend_22 nseg = 3
    dend_66 nseg = 9
    dend_63 nseg = 7
    dend_60 nseg = 9
    dend_59 nseg = 7
    dend_57 nseg = 11
    dend_54 nseg = 5
    dend_23 nseg = 7
    dend_19 nseg = 5
    dend_18 nseg = 9
    dend_4 nseg = 7
    dend_1 nseg = 9
    dend_56 nseg = 3
    dend_55 nseg = 5
    dend_41 nseg = 3
    dend_35 nseg = 3
    dend_20 nseg = 3
    dend_6 nseg = 5
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 7
    dend_37 nseg = 5
    dend_36 nseg = 7
    dend_30 nseg = 5
    dend_29 nseg = 5
    dend_27 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_52 nseg = 3
    dend_49 nseg = 5
    dend_44 nseg = 3
    dend_38 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_14 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_LBC_992411393b_0_0


