// Cell: cACint209_L23_ChC_87b9dd7336_0_0
/*
{
  "id" : "cACint209_L23_ChC_87b9dd7336_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96523, -8.50396, 0.0192879, 2.77292", "-4.44098, -7.63716, 0.0179479, 3.51612", "-3.91674, -6.77037, 0.0166079, 5.09768", "-3.3925, -5.90357, 0.0152679, 6.03936", "-2.86825, -5.03677, 0.0139278, 6.97148", "-2.34401, -4.16997, 0.0125878, 7.92835", "-1.81976, -3.30317, 0.0112478, 9.28613", "-1.29552, -2.43637, 0.00990778, 9.94241", "-0.771277, -1.56957, 0.00856776, 10.1843", "-0.247034, -0.702773, 0.00722774, 10.3452", "0.27721, 0.164025, 0.00588772, 10.228", "0.801453, 1.03082, 0.0045477, 9.54324", "1.3257, 1.89762, 0.00320768, 8.78219", "1.84994, 2.76442, 0.00186766, 7.98349", "2.37418, 3.63122, 5.27637E-4, 7.19659", "2.89843, 4.49802, -8.12382E-4, 6.4097", "3.42267, 5.36482, -0.0021524, 5.30941", "3.94692, 6.23162, -0.00349242, 4.2542", "4.47116, 7.09842, -0.00483244, 3.4094", "4.9954, 7.96521, -0.00617246, 2.28943", "5.51965, 8.83201, -0.00751248, 1.46335" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.16275, -8.65838, 5.04691, 2.4", "-4.70788, -13.9727, 3.54397, 2.22", "-5.14963, -18.2792, 2.32607, 2.22", "-5.68384, -23.487, 0.853241, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.23725, 3.80562, -2.37309, 0.55", "8.20446, 5.64003, -3.56572, 0.55", "10.3311, 7.62304, -4.85495, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.56725, 7.52012, -2.03309, 1.94", "4.77725, 9.09712, -3.41309, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.51965, 8.83201, -0.00751248, 0.83", "13.2824, 21.6671, -0.00751248, 0.83", "21.0451, 34.5022, -0.00751248, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.68384, -23.487, 0.853241, 0.83", "-2.99265, -24.8881, 0.101257, 0.83", "-0.816042, -26.0214, -0.50694, 0.83", "2.40707, -27.6995, -1.40755, 0.83", "4.36396, -28.7183, -1.95436, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.68384, -23.487, 0.853241, 2.22", "-6.54384, -25.7575, -1.46676, 2.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.3311, 7.62304, -4.85495, 0.55", "12.1549, 9.27733, -5.16431, 0.55", "13.8281, 10.831, -5.40674, 1.11", "15.681, 12.6044, -5.63146, 0.55", "16.8184, 13.7736, -5.75074, 0.55", "18.6726, 15.813, -6.08425, 0.83", "20.0393, 17.4601, -6.47489, 0.55", "20.915, 18.7015, -6.81906, 0.55", "22.2026, 20.7817, -7.47033, 1.11", "23.2947, 22.8443, -8.20654, 1.11", "24.5476, 25.5874, -9.40192, 0.55", "25.5897, 28.4039, -10.7594, 0.83", "26.1755, 30.2335, -11.7314, 0.55", "26.3773, 30.9599, -12.1318, 0.55", "26.9072, 33.1549, -13.3745, 1.11", "27.4073, 35.4179, -14.6073, 0.28", "27.6276, 36.4141, -15.0588, 0.55", "28.1208, 38.6647, -16.0703, 0.28", "28.3702, 39.8509, -16.6081, 0.83", "28.8328, 42.0361, -17.6111, 0.28", "29.0171, 43.0328, -18.0439, 0.83", "29.3446, 45.3295, -19.0144, 0.83", "29.7975, 48.6472, -20.5826, 0.28", "29.9125, 49.6281, -21.0951, 0.55", "30.0816, 51.0708, -21.9046, 0.28", "30.2446, 52.4158, -22.6654, 1.11", "30.7073, 56.163, -24.7954, 0.28", "30.9661, 58.1833, -25.9325, 0.83", "31.2927, 60.4506, -27.0905, 0.28", "31.4743, 61.5132, -27.5934, 0.55", "31.8663, 63.4228, -28.4957, 0.28", "32.0552, 64.1793, -28.8214, 0.55", "32.3521, 65.3366, -29.236, 0.28", "32.617, 66.4334, -29.6432, 0.83", "33.0295, 68.2764, -30.3105, 0.83", "33.9115, 72.8534, -32.0903, 0.28", "34.2434, 74.8896, -32.8421, 0.55", "34.5062, 76.9595, -33.5694, 0.28", "34.905, 80.7505, -34.8247, 0.55", "35.2051, 83.8228, -35.7327, 0.28", "35.3179, 85.4424, -36.1339, 0.55", "35.5116, 87.8538, -36.617, 0.28", "35.727, 89.9651, -37.1069, 0.55", "35.8709, 91.0588, -37.2995, 0.55", "36.4221, 94.438, -37.5968, 0.28", "36.6809, 95.7446, -37.7032, 0.55", "37.5177, 99.3749, -37.9303, 0.28", "37.8212, 100.602, -38.0009, 0.55", "38.5562, 103.402, -38.0741, 0.28", "39.1894, 105.933, -38.1649, 0.55", "40.0217, 109.373, -38.2954, 0.28", "40.2381, 110.3, -38.3248, 0.55", "40.7783, 112.622, -38.445, 0.28", "41.352, 115.052, -38.7113, 0.55", "42.0434, 117.923, -39.2213, 0.28", "42.5209, 119.954, -39.6353, 0.55", "43.1196, 122.481, -40.2175, 0.28", "43.8998, 125.808, -41.0536, 0.55", "44.5738, 128.638, -41.8401, 0.28", "44.8845, 129.916, -42.2088, 0.55", "45.6269, 132.88, -43.0448, 0.55", "46.218, 135.148, -43.6366, 0.28", "46.5442, 136.403, -43.9163, 0.55", "46.9548, 138.053, -44.1512, 0.28", "47.2847, 139.321, -44.2571, 0.55", "47.5925, 140.471, -44.2768, 0.55", "48.1511, 142.563, -44.1254, 0.28", "48.3442, 143.366, -44.0327, 0.55", "48.9143, 145.736, -43.7896, 0.28", "49.2279, 147.017, -43.6505, 0.83", "49.6314, 148.667, -43.5931, 0.28", "49.9525, 149.705, -43.6869, 0.55", "50.5368, 151.279, -44.0272, 0.28", "51.0511, 152.316, -44.29, 0.55", "52.4141, 154.467, -44.88, 0.28", "53.5958, 156.14, -45.3807, 0.55", "55.59, 158.663, -46.1651, 0.28", "56.6478, 159.886, -46.5503, 0.55", "58.8764, 162.191, -47.2815, 0.28", "60.4931, 163.757, -47.9063, 0.28", "60.9319, 164.138, -48.104, 0.28", "63.0689, 165.827, -49.0939, 0.28", "64.6882, 167.077, -49.8723, 0.83", "68.7521, 170.181, -52.0194, 0.28", "70.6767, 171.622, -53.196, 0.55", "73.6089, 173.724, -55.099, 0.28", "74.4846, 174.328, -55.6773, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.3311, 7.62304, -4.85495, 0.55", "11.2471, 10.0951, -5.07115, 0.55", "12.2407, 12.7671, -5.17605, 0.55", "12.7842, 14.3069, -5.14855, 0.55", "13.6931, 17.0774, -5.18488, 0.55", "14.241, 18.8387, -5.20187, 0.28", "15.0097, 21.154, -5.21829, 1.11", "15.7692, 23.5828, -5.26282, 0.55", "16.2157, 25.2029, -5.31205, 0.55", "16.9595, 28.2961, -5.30542, 0.83", "17.4801, 30.5287, -5.27767, 0.55", "18.1566, 33.6708, -5.17385, 0.55", "18.7541, 36.6712, -5.13166, 0.55", "19.273, 39.4476, -5.18801, 0.55", "19.8858, 42.7393, -5.23191, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.77725, 9.09712, -3.41309, 0.83", "7.10492, 10.782, -3.37761, 0.83", "9.98695, 12.8681, -3.33367, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.77725, 9.09712, -3.41309, 1.11", "4.05287, 12.2418, -2.8298, 1.11", "3.62681, 14.0914, -2.48672, 0.83", "2.75848, 17.8611, -1.78752, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.0451, 34.5022, -0.00751248, 0.28", "28.8079, 47.3373, -0.00751248, 0.28", "36.5706, 60.1724, -0.00751248, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "4.36396, -28.7183, -1.95436, 0.55", "6.55686, -30.1887, -1.38189, 0.55", "8.72882, -31.645, -0.814892, 0.55", "10.5279, -32.8513, -0.34525, 0.28", "12.3051, -34.043, 0.118707, 0.55", "14.5503, -35.5484, 0.704825, 0.55", "16.2292, -36.6741, 1.14311, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.36396, -28.7183, -1.95436, 0.55", "6.07418, -29.5184, -2.29455, 0.55", "8.26515, -30.4708, -2.83853, 0.55", "9.78684, -31.0767, -3.22291, 0.83", "11.9715, -31.9761, -3.8633, 0.55", "13.9888, -32.8012, -4.48414, 0.55", "16.4904, -33.8007, -5.24115, 0.83", "18.2469, -34.4511, -5.83809, 0.28", "19.9773, -35.0286, -6.4547, 0.55", "22.0008, -35.7417, -7.34751, 0.28", "23.1588, -36.1923, -7.95765, 0.55", "24.9216, -36.9484, -9.06551, 0.55", "26.4535, -37.6703, -10.1077, 0.55", "28.0656, -38.4564, -11.2469, 0.55", "30.9495, -39.8288, -13.4021, 0.55", "32.2565, -40.4588, -14.412, 0.28", "33.1278, -40.9275, -15.1067, 0.55", "34.3657, -41.6416, -16.1116, 0.55", "35.9186, -42.5951, -17.3341, 0.55", "37.8343, -43.8004, -18.7446, 0.55", "39.7849, -45.0129, -20.0622, 0.55", "41.2029, -45.9179, -21.0074, 0.55", "42.8585, -46.9875, -22.1203, 0.55", "44.2365, -47.8981, -23.0917, 0.55", "45.5225, -48.8007, -24.0331, 0.55", "47.4213, -50.1124, -25.3934, 0.55", "48.822, -51.0104, -26.387, 0.55", "50.3805, -51.9734, -27.5462, 0.83", "51.9648, -52.962, -28.7485, 0.83", "53.3357, -53.8258, -29.8196, 0.55", "54.8291, -54.7984, -31.1213, 0.55", "55.8007, -55.4364, -31.9924, 0.83", "57.5039, -56.4671, -33.5076, 0.28", "58.712, -57.1221, -34.5412, 0.55", "61.4355, -58.4277, -36.6773, 0.55", "64.0425, -59.5595, -38.6646, 0.55", "65.2201, -60.043, -39.5398, 0.28", "66.809, -60.6153, -40.6025, 0.55", "69.4224, -61.4681, -42.189, 0.28", "70.9836, -61.9978, -43.0348, 0.28", "72.3034, -62.4724, -43.7371, 0.28", "73.912, -63.1582, -44.6268, 0.55", "75.2059, -63.837, -45.4383, 0.55", "77.0474, -65.0938, -46.7865, 0.55", "78.8207, -66.5314, -48.3054, 0.55", "80.7636, -68.201, -50.194, 0.55", "81.9223, -69.243, -51.3187, 0.28", "82.7789, -70.0518, -52.1681, 0.55", "84.4706, -71.7421, -53.9059, 0.55", "86.0979, -73.3704, -55.4994, 0.55", "87.5595, -74.7952, -56.8874, 0.83", "88.8255, -76.0182, -57.9058, 0.83", "89.4641, -76.5833, -58.3904, 0.83", "90.9316, -77.7643, -59.4195, 0.28", "92.0372, -78.5066, -60.0418, 0.83", "94.3472, -79.8046, -61.0984, 0.28", "95.8885, -80.539, -61.7836, 0.83", "98.1469, -81.4442, -62.6216, 0.55", "99.7586, -81.9592, -63.0683, 0.55", "103.458, -82.9254, -63.6948, 0.55", "105.406, -83.3641, -63.7615, 0.55", "107.449, -83.7615, -63.5457, 0.55", "110.756, -84.3686, -62.6501, 0.55", "112.0, -84.6436, -62.1059, 0.55", "113.487, -85.024, -61.2946, 0.83", "116.23, -85.9174, -59.545, 0.28", "117.111, -86.2606, -58.9668, 0.55", "119.78, -87.3719, -57.239, 0.28", "122.028, -88.4668, -56.0207, 0.55", "122.921, -88.9595, -55.6184, 0.55", "124.753, -90.0467, -55.0247, 0.28", "125.773, -90.7068, -54.8786, 0.28", "126.701, -91.3294, -54.8518, 0.55", "128.532, -92.526, -55.0603, 0.28", "129.577, -93.1488, -55.2466, 0.28", "130.257, -93.5144, -55.3784, 0.55", "132.207, -94.3681, -55.7572, 0.28", "134.062, -95.1048, -56.0824, 0.55", "135.694, -95.6204, -56.3304, 0.28", "137.226, -96.0276, -56.5423, 0.55", "139.648, -96.6055, -56.8591, 0.28", "141.603, -97.0146, -57.0942, 0.28", "144.104, -97.458, -57.3308, 0.55", "146.225, -97.8018, -57.4833, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.54384, -25.7575, -1.46676, 0.55", "-8.23045, -27.4919, -2.58056, 0.55", "-9.13662, -28.3308, -3.10431, 0.55", "-10.6277, -29.7322, -3.89051, 0.83", "-13.2273, -32.3899, -5.30342, 0.55", "-14.9823, -34.305, -6.22915, 0.55", "-16.8216, -36.3671, -7.17759, 0.83", "-18.4713, -38.3264, -8.01271, 0.55", "-19.6987, -39.7684, -8.5354, 1.11", "-21.0471, -41.3782, -8.95218, 0.28", "-22.4908, -43.2722, -9.19992, 0.55", "-23.1552, -44.2618, -9.32949, 0.28", "-24.4514, -46.1385, -9.52243, 0.55", "-25.384, -47.3374, -9.57517, 0.28", "-27.5, -49.6616, -9.58352, 0.83", "-29.8896, -51.9073, -9.453, 0.55", "-32.4002, -54.1729, -9.29356, 0.55", "-34.7052, -56.1744, -9.12304, 0.55", "-37.259, -58.2311, -8.93059, 0.55", "-39.4339, -59.8535, -8.76944, 0.55", "-41.9207, -61.4239, -8.48245, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-6.54384, -25.7575, -1.46676, 1.66", "-5.53273, -27.9846, -1.3577, 1.66", "-4.04782, -31.2552, -1.19754, 0.83", "-2.1849, -35.3585, -0.996604, 0.83", "-0.508841, -39.0501, -0.815825, 0.83", "0.779686, -41.8882, -0.676845, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "19.8858, 42.7393, -5.23191, 0.55", "20.7207, 44.6831, -6.28939, 0.55", "21.8606, 47.0354, -7.64373, 0.55", "23.1474, 49.6529, -9.02563, 0.28", "24.2793, 51.962, -10.1466, 0.83", "25.0447, 53.5582, -10.8796, 0.55", "26.0632, 55.6692, -11.8001, 0.55", "27.3385, 58.1542, -12.8286, 0.55", "28.8649, 60.8979, -13.6709, 0.83", "29.9509, 62.7976, -13.994, 0.28", "30.2434, 63.3189, -14.0321, 0.28", "31.2973, 65.2384, -14.0408, 0.55", "32.2483, 67.0134, -13.972, 0.55", "34.1746, 70.6564, -13.8359, 0.55", "35.1166, 72.4551, -13.8207, 0.55", "37.0785, 76.2685, -13.9059, 0.55", "38.2608, 78.6189, -14.0219, 0.55", "39.6553, 81.4919, -14.2673, 0.55", "41.1762, 84.7083, -14.8256, 0.55", "41.9118, 86.1729, -15.2382, 0.55", "42.5366, 87.2643, -15.6836, 0.28", "42.9896, 87.9236, -16.0394, 0.55", "43.8194, 88.9197, -16.6591, 0.28", "45.4652, 90.6673, -17.8118, 0.55", "48.2225, 93.3709, -19.4731, 0.55", "50.4034, 95.5239, -20.8533, 0.55", "51.6583, 96.7404, -21.6414, 0.55", "54.5458, 99.4739, -23.5438, 0.55", "55.703, 100.62, -24.316, 0.55", "56.6795, 101.679, -24.9668, 0.28", "57.9473, 103.31, -25.9302, 0.55", "59.0047, 104.916, -26.735, 0.55", "60.0403, 106.964, -27.6825, 0.55", "60.9202, 109.302, -28.6011, 0.55", "61.8173, 112.075, -29.6707, 0.55", "62.2756, 113.599, -30.2366, 0.55", "62.7042, 115.06, -30.7094, 0.55", "63.2674, 116.847, -31.3428, 0.55", "64.3208, 119.534, -32.377, 0.55", "65.7084, 122.106, -33.6445, 0.55", "66.4886, 123.203, -34.3622, 0.55", "67.2509, 124.1, -35.0482, 0.55", "69.4743, 126.392, -37.0569, 0.55", "70.371, 127.214, -37.8253, 0.55", "71.8813, 128.519, -39.1422, 0.55", "73.6405, 130.012, -40.6039, 0.55", "74.6756, 130.919, -41.4849, 0.28", "75.4216, 131.583, -42.1764, 0.28", "76.2191, 132.323, -42.9514, 0.55", "78.3045, 134.209, -44.9914, 0.55", "80.4584, 136.12, -47.1446, 0.55", "81.4872, 136.951, -48.2093, 0.83", "84.0748, 139.157, -51.691, 0.55", "85.466, 140.346, -53.9741, 0.55", "86.4655, 141.252, -55.8324, 0.55", "87.9655, 142.671, -59.0319, 0.55", "89.9344, 144.602, -63.5034, 0.55", "93.0714, 147.608, -71.0449, 0.55", "95.3683, 149.842, -76.8658, 0.55", "96.209, 150.664, -79.1302, 0.55", "97.9584, 152.394, -84.1373, 0.55", "98.9193, 153.32, -86.9351, 0.55", "100.487, 154.897, -91.4284, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.8858, 42.7393, -5.23191, 0.28", "19.7927, 45.2467, -4.41581, 0.28", "19.7685, 46.5567, -3.97919, 0.83", "19.7851, 48.6153, -3.27148, 0.55", "19.8217, 50.6541, -2.57483, 0.55", "19.8941, 53.3651, -1.68632, 0.28", "19.9564, 55.1586, -1.12801, 0.28", "20.0054, 55.8476, -0.93495, 0.55", "20.1193, 57.2674, -0.535658, 0.28", "20.2057, 58.0819, -0.327703, 0.55", "20.3429, 59.097, -0.092639, 0.28", "20.5273, 60.1294, 0.01563, 0.55", "20.7806, 61.6311, 0.0737809, 0.28", "20.7806, 61.6311, 0.0737809, 0.55", "21.2441, 63.4556, -0.00482903, 0.55", "21.7911, 65.1303, -0.215332, 0.83", "22.6392, 67.2032, -0.639832, 0.55", "23.1355, 68.2478, -0.910613, 0.55", "24.1089, 70.1061, -1.38588, 0.55", "25.0783, 71.8497, -1.7909, 0.28", "26.667, 74.592, -2.34247, 0.83", "27.6794, 76.3373, -2.61626, 0.28", "28.4158, 77.5746, -2.68064, 0.55", "29.6282, 79.6388, -2.70122, 0.28", "30.1612, 80.601, -2.6439, 0.55", "30.9808, 82.254, -2.35784, 0.28", "31.3421, 83.1249, -2.09549, 0.55", "32.0889, 85.0695, -1.46347, 0.28", "32.7043, 86.5768, -0.951671, 0.55", "33.3517, 88.0942, -0.453535, 0.28", "34.0156, 89.7099, 0.0490068, 0.55", "34.7379, 91.4326, 0.541847, 0.28", "35.7681, 93.9589, 1.15275, 0.55", "36.4482, 95.4948, 1.47332, 0.28", "36.7782, 96.1933, 1.65487, 0.55", "37.4519, 97.5191, 2.01997, 0.28", "37.9755, 98.476, 2.28498, 0.55", "38.7488, 99.8696, 2.66469, 0.55", "39.4998, 101.234, 3.11326, 0.55", "40.797, 103.559, 4.00697, 0.55", "41.8592, 105.514, 4.85359, 0.55", "42.9386, 107.535, 5.74446, 0.55", "44.2458, 110.15, 6.85702, 0.55", "45.5686, 112.934, 7.98505, 0.55", "46.2886, 114.535, 8.56814, 0.28", "46.9953, 116.033, 9.06527, 0.55", "47.7194, 117.564, 9.52319, 0.55", "48.1794, 118.523, 9.77039, 0.83", "49.2514, 120.853, 10.2361, 0.28", "50.1805, 123.028, 9.86479, 0.55", "51.0372, 125.104, 8.90088, 0.28", "51.3132, 125.817, 8.42159, 0.55", "52.1456, 128.137, 6.70165, 0.55", "52.5331, 129.352, 5.7112, 0.55", "54.9621, 137.806, -1.55093, 0.28", "55.4098, 139.494, -2.9722, 0.28", "55.7995, 141.064, -4.22488, 0.55", "56.3105, 143.1, -5.83971, 0.55", "56.544, 144.026, -6.54941, 0.55", "57.116, 146.113, -7.49938, 0.55", "57.8298, 148.515, -7.12079, 0.55", "58.1262, 149.565, -6.99293, 0.55", "63.7629, 157.313, -5.68372, 0.55", "70.2617, 164.532, -5.80981, 0.55", "75.7265, 172.412, -4.65315, 0.55", "81.2036, 180.312, -3.72688, 0.55", "85.2973, 188.77, -1.7349, 0.55", "90.5007, 196.305, 1.43064, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.98695, 12.8681, -3.33367, 0.55", "12.2176, 14.1489, -3.50878, 0.55", "14.3232, 15.3857, -3.548, 0.83", "16.4984, 16.6981, -3.52062, 0.28", "18.0649, 17.6461, -3.40414, 0.55", "19.891, 18.7401, -3.21161, 0.28", "21.2665, 19.5272, -3.08088, 0.83", "23.3525, 20.6768, -2.81674, 0.55", "25.0516, 21.5767, -2.54156, 0.83", "27.2301, 22.6502, -2.15127, 0.28", "28.6696, 23.2933, -1.92106, 0.55", "31.2344, 24.3561, -1.56433, 0.28", "33.3356, 25.193, -1.34945, 0.83", "35.0414, 25.8505, -1.2565, 0.28", "37.1216, 26.6188, -1.21624, 0.55", "39.5723, 27.5048, -1.25772, 0.28", "40.6468, 27.8963, -1.29651, 0.83", "43.0461, 28.7977, -1.39988, 0.28", "43.793, 29.0738, -1.46007, 0.55", "46.0919, 29.9242, -1.74034, 0.83", "48.0644, 30.6359, -2.01405, 0.28", "49.527, 31.1609, -2.25062, 0.83", "50.8508, 31.663, -2.48334, 0.28", "51.3725, 31.8675, -2.57273, 0.55", "52.994, 32.5513, -2.83924, 0.28", "54.7374, 33.3599, -3.17362, 0.83", "56.5807, 34.288, -3.51436, 0.28", "57.3306, 34.6973, -3.62677, 0.55", "59.2211, 35.7836, -3.87333, 0.28", "60.5585, 36.6386, -4.00463, 0.55", "63.2112, 38.46, -4.21914, 0.28", "64.0891, 39.1216, -4.26193, 0.83", "66.0471, 40.67, -4.28378, 0.28", "67.2645, 41.6861, -4.27256, 0.83", "70.1789, 44.3083, -4.18136, 0.28", "71.3683, 45.4224, -4.05224, 0.83", "73.5241, 47.4596, -3.69107, 0.28", "74.2434, 48.1338, -3.5458, 0.55", "75.2318, 49.0584, -3.29133, 0.28", "75.6646, 49.4494, -3.14043, 0.55", "77.8363, 51.2755, -2.13284, 0.28", "79.076, 52.2792, -1.57082, 0.55", "80.7797, 53.6081, -0.88869, 0.28", "81.3798, 54.0523, -0.633546, 0.83", "84.2449, 56.0579, 0.545466, 0.28", "85.6005, 56.9842, 1.09235, 0.55", "87.5592, 58.3202, 1.8441, 0.28", "88.9323, 59.2472, 2.36438, 0.83", "92.2083, 61.4024, 3.49501, 0.28", "94.3971, 62.8166, 4.32264, 0.55", "95.958, 63.8104, 4.93193, 0.28", "96.7484, 64.308, 5.27008, 0.55", "98.44, 65.3379, 6.07755, 0.28", "99.2365, 65.817, 6.45094, 0.55", "102.447, 67.7313, 7.76076, 0.28", "103.714, 68.4678, 8.25648, 0.83", "106.677, 70.069, 9.43673, 0.28", "107.631, 70.5501, 9.85486, 0.28", "108.618, 71.0183, 10.2805, 0.55", "110.058, 71.6921, 10.8889, 0.28", "111.252, 72.2215, 11.3117, 0.55", "113.857, 73.3057, 12.331, 0.28", "115.601, 73.9837, 13.0927, 0.83", "117.087, 74.5778, 13.8717, 0.28", "118.312, 75.056, 14.6574, 0.55", "126.966, 79.8137, 14.835, 0.55", "136.035, 83.7323, 13.9775, 0.55", "145.013, 87.7686, 15.1386, 0.55", "154.703, 90.0179, 15.8453, 0.55", "164.193, 93.0051, 15.6383, 0.55", "173.366, 96.3083, 13.6957, 0.55", "182.305, 99.7143, 11.0054, 0.55", "191.396, 101.165, 7.12984, 0.55", "200.711, 101.951, 3.5872, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.98695, 12.8681, -3.33367, 0.55", "10.8909, 16.2261, -1.21828, 0.55", "12.2359, 20.6653, 1.53897, 0.83", "12.894, 22.4354, 2.63783, 0.55", "13.5659, 24.2402, 3.83609, 0.83", "14.8785, 27.7965, 6.52797, 0.83", "15.6022, 29.6178, 8.01857, 0.55", "16.4384, 31.4064, 9.65528, 0.55", "17.0559, 32.6158, 10.9878, 0.55", "18.3588, 34.867, 13.6341, 0.55", "19.6882, 37.269, 16.7378, 0.55", "20.0964, 38.1885, 17.8082, 0.55", "23.7633, 45.474, 23.0751, 0.55", "27.5852, 52.5783, 28.5037, 0.55", "30.3778, 60.4265, 33.3979, 0.55", "33.4677, 68.0257, 38.5423, 0.55", "35.4817, 76.7974, 41.8118, 0.55", "39.49, 84.8562, 45.2719, 0.55", "44.9622, 92.2864, 48.2522, 0.55", "49.4146, 100.171, 51.6128, 0.55", "52.661, 108.469, 55.2413, 0.55", "55.6003, 117.078, 58.2807, 0.55", "56.8891, 125.728, 62.2096, 0.55", "56.9862, 134.637, 65.6797, 0.55", "55.9734, 143.403, 69.4003, 0.55", "54.9909, 152.003, 73.5323, 0.55", "53.3331, 160.958, 76.4321, 0.55", "52.1064, 169.887, 79.6164, 0.55", "51.6447, 178.605, 83.5647, 0.55", "51.357, 187.345, 87.473, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.75848, 17.8611, -1.78752, 0.28", "1.48642, 17.9875, -1.70585, 0.28", "0.944832, 18.0392, -1.69112, 0.55", "-1.87486, 18.3085, -1.6144, 0.28", "-2.64078, 18.3816, -1.59357, 0.55", "-5.52549, 18.6572, -1.51509, 0.28", "-7.01625, 18.7995, -1.47453, 0.28", "-7.61817, 18.8474, -1.48195, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.75848, 17.8611, -1.78752, 0.83", "3.14779, 20.8341, -0.755694, 0.83", "3.6043, 24.3205, 0.454283, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "16.2292, -36.6741, 1.14311, 0.55", "18.6335, -37.0014, 3.4944, 0.55", "20.1104, -36.9661, 4.83448, 0.55", "22.7102, -36.6321, 7.03676, 0.55", "24.2007, -36.296, 8.26935, 0.55", "26.5023, -35.777, 10.1726, 0.55", "28.3821, -35.3532, 11.7271, 0.55", "30.7604, -34.621, 13.5173, 0.55", "32.8695, -33.7547, 15.0978, 0.55", "36.4762, -31.9604, 17.5854, 0.55", "43.8563, -29.2818, 23.7162, 0.55", "50.4665, -25.8602, 30.2989, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "16.2292, -36.6741, 1.14311, 0.55", "18.3797, -37.9794, 1.07716, 0.55", "21.0065, -39.5628, 0.99513, 0.28", "22.9821, -40.7766, 0.9014, 0.83", "25.3873, -42.2651, 0.828148, 0.28", "27.4305, -43.5648, 0.785957, 0.28", "28.5668, -44.3094, 0.762811, 0.55", "29.9572, -45.34, 0.73999, 0.28", "30.4317, -45.7365, 0.767976, 0.55", "32.0851, -47.1958, 0.984095, 0.28", "32.4895, -47.5654, 1.04354, 0.83", "33.4576, -48.527, 1.28039, 0.28", "34.134, -49.2078, 1.48208, 0.55", "36.0438, -51.1688, 2.11608, 0.28", "36.5613, -51.6852, 2.30158, 0.55", "37.7716, -52.8937, 2.73968, 0.28", "38.6197, -53.685, 3.07901, 0.55", "40.1512, -55.0295, 3.79608, 0.28", "40.946, -55.663, 4.29188, 0.55", "42.424, -56.797, 5.2607, 0.28", "42.9724, -57.1812, 5.61659, 0.55", "44.5706, -58.2521, 6.60732, 0.28", "45.4861, -58.8201, 7.12315, 0.55", "49.6227, -61.2452, 9.05944, 0.28", "51.1689, -61.9892, 9.59996, 0.55", "52.6535, -62.577, 9.91782, 0.28", "54.0146, -63.0021, 9.999, 0.55", "56.1993, -63.4855, 9.8058, 0.28", "57.6389, -63.7466, 9.55073, 0.55", "60.3437, -64.0435, 8.7814, 0.28", "61.8914, -64.1571, 8.41162, 0.55", "64.0842, -64.2734, 7.89326, 0.28", "65.4285, -64.25, 7.54852, 0.55", "74.5208, -68.1611, 6.93213, 0.55", "83.2123, -72.7319, 8.07604, 0.55", "92.4751, -76.2879, 7.63974, 0.55", "101.957, -79.0453, 8.92891, 0.55", "111.043, -82.4037, 11.1527, 0.55", "119.963, -84.4862, 15.1054, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-41.9207, -61.4239, -8.48245, 0.28", "-42.8961, -61.8399, -7.29267, 0.28", "-43.2787, -62.0146, -6.85814, 0.55", "-45.2225, -62.7208, -4.16231, 0.28", "-45.9884, -63.0282, -3.01895, 0.55", "-48.2579, -64.1422, 0.515818, 0.28", "-48.5674, -64.3201, 1.01068, 0.55", "-49.3745, -64.9205, 2.4233, 0.55", "-51.3772, -66.746, 6.34746, 0.55", "-51.9091, -67.3486, 7.48472, 0.28", "-52.5079, -67.9492, 8.61177, 0.55", "-53.0102, -68.4152, 9.37444, 0.28", "-53.4813, -68.8766, 10.1133, 0.55", "-54.2842, -69.7666, 11.4059, 0.28", "-54.7836, -70.3363, 12.0415, 0.55", "-56.353, -71.7707, 14.0425, 0.28", "-57.5607, -72.6721, 15.5934, 0.55", "-62.8018, -74.9841, 23.7548, 0.55", "-68.2106, -75.4008, 32.1543, 0.55", "-74.209, -74.3883, 40.0842, 0.55", "-79.4211, -74.1956, 48.6161, 0.55", "-85.375, -75.1396, 56.5887, 0.55", "-92.0414, -75.838, 64.0063, 0.55", "-98.2195, -78.3576, 71.4087, 0.55", "-103.17, -79.1185, 80.0605, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-41.9207, -61.4239, -8.48245, 0.28", "-43.5063, -62.841, -8.48251, 0.28", "-43.9224, -63.1906, -8.48597, 0.55", "-45.242, -64.3587, -8.46967, 0.28", "-46.7193, -65.6329, -8.43575, 0.55", "-49.4065, -67.9348, -8.24145, 0.55", "-51.2593, -69.5303, -8.06166, 0.28", "-53.3047, -71.2832, -7.76991, 0.55", "-55.8777, -73.5396, -7.32135, 0.55", "-58.8124, -76.2731, -6.68739, 0.55", "-60.3731, -77.7718, -6.30414, 0.28", "-61.2019, -78.6091, -6.07421, 0.55", "-62.1727, -79.6376, -5.80147, 0.28", "-63.6953, -81.2141, -5.40857, 0.55", "-65.0408, -82.5713, -5.1745, 0.28", "-66.1422, -83.6802, -4.91561, 0.55", "-67.246, -84.7736, -4.64091, 0.28", "-69.1788, -86.5863, -4.10465, 0.55", "-71.7052, -88.8242, -3.39363, 0.55", "-72.9267, -89.8787, -3.02805, 0.55", "-76.7325, -93.111, -1.86538, 0.55", "-78.4286, -94.5858, -1.32722, 0.55", "-80.2838, -96.2678, -0.718275, 0.28", "-81.7578, -97.701, -0.249695, 0.28", "-82.8429, -98.851, 0.0453647, 0.55", "-83.8595, -100.034, 0.211556, 0.55", "-84.9451, -101.386, 0.155698, 0.28", "-85.7527, -102.488, 0.0806371, 0.55", "-86.441, -103.478, -0.00476443, 0.28", "-87.5591, -105.002, -0.104049, 0.55", "-88.9996, -106.789, -0.182842, 0.55", "-90.3169, -108.347, -0.255168, 0.55", "-91.9409, -110.176, -0.329635, 0.28", "-93.5544, -111.851, -0.366042, 0.55", "-94.831, -113.096, -0.347803, 0.55", "-96.1301, -114.245, -0.32457, 0.55", "-97.746, -115.587, -0.285114, 0.83", "-105.124, -121.937, 0.663544, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "0.779686, -41.8882, -0.676845, 0.83", "2.34985, -42.7763, -0.879205, 0.83", "4.05948, -43.6677, -1.08115, 0.83", "6.67025, -44.9292, -1.36589, 0.83", "9.66102, -46.2803, -1.66717, 0.83", "13.1378, -47.8076, -1.99301, 0.83", "15.9438, -49.0403, -2.256, 0.83", "20.3565, -50.9159, -2.68424, 0.83", "22.3571, -51.7552, -2.88314, 0.55", "24.1589, -52.4308, -3.0571, 0.55", "25.8849, -53.0639, -3.19732, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.779686, -41.8882, -0.676845, 1.11", "-0.772903, -43.3684, -2.6603, 1.11", "-5.19946, -47.5883, -8.31528, 0.83", "-6.89509, -49.2048, -10.4815, 0.83", "-8.19333, -50.4425, -12.14, 0.83", "-9.80608, -51.98, -14.2003, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "100.487, 154.897, -91.4284, 0.55", "101.909, 154.912, -91.5686, 0.55", "104.804, 154.77, -92.2555, 0.55", "105.761, 154.715, -92.5272, 0.55", "107.799, 154.599, -93.1682, 0.55", "110.902, 154.475, -94.3001, 0.55", "113.988, 154.351, -95.4256, 0.55", "118.916, 154.122, -97.4369, 0.55", "120.028, 154.041, -97.9565, 0.83", "122.168, 153.879, -99.0357, 0.28", "124.486, 153.776, -100.33, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "100.487, 154.897, -91.4284, 0.55", "101.467, 156.403, -94.0928, 0.55", "102.802, 158.452, -97.7188, 0.55", "104.412, 160.925, -102.094, 0.28", "104.904, 161.68, -103.43, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "90.5007, 196.305, 1.43064, 0.55", "91.286, 205.723, 2.47769, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "90.5007, 196.305, 1.43064, 0.55", "98.5574, 201.887, 0.684377, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "200.711, 101.951, 3.5872, 0.55", "208.283, 106.827, 7.62813, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "200.711, 101.951, 3.5872, 0.55", "209.675, 104.897, 0.421166, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "51.357, 187.345, 87.473, 0.55", "53.2047, 195.784, 91.6768, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "51.357, 187.345, 87.473, 0.55", "53.5, 195.572, 91.9909, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.6043, 24.3205, 0.454283, 0.83", "4.59881, 26.1937, 0.640363, 0.83", "5.5979, 28.3209, 0.948372, 0.83", "6.32003, 30.2459, 1.31162, 0.28", "6.5707, 30.995, 1.43053, 1.11", "7.3149, 33.347, 1.80813, 0.28", "7.83463, 35.0268, 2.04586, 0.83", "8.44459, 37.2075, 2.30468, 0.28", "9.07939, 39.5275, 2.57887, 0.83", "9.9004, 42.546, 2.9762, 0.55", "10.2818, 44.0002, 3.19274, 1.11", "10.9001, 46.3814, 3.58447, 0.55", "11.4765, 48.5705, 3.90141, 0.83", "12.0544, 50.6127, 4.12671, 0.28", "12.6209, 52.5506, 4.31485, 0.83", "13.0488, 54.1709, 4.58527, 0.28", "13.2622, 55.0769, 4.75864, 0.55", "13.6612, 56.9069, 5.14201, 0.28", "13.9211, 58.1739, 5.39545, 0.83", "14.4059, 60.482, 5.80037, 0.83", "15.0131, 63.0664, 6.26664, 0.28", "15.2748, 64.3528, 6.6198, 0.55", "15.4443, 65.525, 7.00097, 0.28", "15.5428, 66.2901, 7.26859, 0.55", "15.7031, 67.7301, 7.73579, 0.28", "15.82, 68.8657, 8.04318, 0.83", "16.1794, 72.0481, 8.66909, 0.55", "16.3012, 73.2103, 8.89108, 0.83", "16.4428, 74.7793, 9.18064, 0.55", "16.611, 76.6172, 9.36399, 0.55", "16.7745, 78.2078, 9.4105, 0.28", "16.9072, 79.2802, 9.4034, 0.55", "17.1665, 80.9547, 9.31221, 0.28", "17.204, 81.2103, 9.3052, 0.55", "17.4872, 83.4668, 9.28429, 0.28", "17.7155, 84.985, 9.27782, 0.55", "17.9356, 86.2784, 9.33979, 0.28", "18.2065, 87.6772, 9.46939, 0.83", "18.5895, 89.2018, 9.67072, 0.83", "18.8898, 90.2836, 9.85859, 0.28", "19.2948, 91.5948, 10.2473, 0.55", "19.873, 93.3537, 10.6893, 0.28", "19.9592, 93.6064, 10.741, 0.55", "20.6419, 95.4744, 11.0626, 0.28", "20.8176, 96.0042, 11.1576, 0.55", "21.4205, 98.4341, 11.49, 0.28", "21.8793, 100.743, 11.8004, 0.55", "22.0134, 101.666, 11.9151, 0.28", "22.158, 102.992, 12.1064, 0.55", "22.3432, 105.646, 12.594, 0.55", "22.4304, 107.287, 12.926, 0.28", "22.5022, 109.08, 13.3094, 0.55", "22.5631, 110.714, 13.8222, 0.28", "22.5801, 111.202, 13.9955, 0.55", "22.5893, 112.414, 14.4555, 0.28", "22.5915, 113.442, 14.8391, 0.83", "25.9007, 122.323, 16.1315, 0.83", "28.7484, 131.183, 18.3462, 0.83", "30.143, 140.362, 20.5159, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.6043, 24.3205, 0.454283, 0.55", "2.17359, 26.3215, 1.033, 0.55", "1.88622, 26.7449, 1.15128, 0.55", "0.437234, 29.0142, 1.7347, 0.83", "-1.11159, 31.5574, 2.26689, 0.55", "-1.66738, 32.4978, 2.44097, 0.55", "-2.38777, 33.7893, 2.6539, 0.55", "-3.14471, 35.2761, 2.7866, 0.83", "-4.13401, 37.1928, 2.85014, 0.28", "-4.74639, 38.4475, 2.79776, 0.55", "-5.15588, 39.3538, 2.69124, 0.28", "-5.84334, 40.7913, 2.49541, 0.83", "-6.90386, 42.9231, 2.2126, 0.55", "-7.3942, 43.9049, 2.10834, 0.55", "-8.65672, 46.4736, 1.95234, 0.55", "-9.33167, 47.8642, 1.84692, 0.28", "-10.1436, 49.5604, 1.82626, 0.55", "-10.8915, 51.1939, 1.79429, 0.28", "-11.6307, 52.8911, 1.75774, 0.28", "-12.2707, 54.3833, 1.67746, 0.55", "-13.4891, 57.1341, 1.45293, 0.55", "-14.9671, 60.7012, 0.905666, 0.28", "-16.096, 63.477, 0.423933, 0.83", "-17.0055, 65.7313, 0.0775685, 0.55", "-17.9119, 67.9895, -0.215453, 0.55", "-18.5211, 69.6481, -0.381275, 0.55", "-19.4489, 72.4473, -0.531499, 0.28", "-20.1659, 74.8102, -0.635499, 0.55", "-20.6978, 76.8095, -0.534648, 0.55", "-20.9528, 77.9088, -0.446225, 0.28", "-21.2005, 78.9211, -0.342266, 0.83", "-21.7279, 80.7097, -0.133387, 0.28", "-22.2983, 82.231, 0.059017, 0.55", "-23.2698, 84.4448, 0.26591, 0.55", "-24.1706, 86.1606, 0.401715, 0.55", "-24.8639, 87.2787, 0.552727, 0.28", "-25.2079, 87.7638, 0.635247, 0.55", "-26.0023, 88.8214, 0.901383, 0.55", "-27.6026, 90.7811, 1.45572, 0.28", "-29.1045, 92.4527, 1.96292, 0.55", "-30.5272, 93.9426, 2.31054, 0.28", "-31.1237, 94.5424, 2.46077, 0.55", "-32.503, 95.849, 2.82937, 0.28", "-34.3018, 97.4185, 3.2893, 0.55", "-35.9395, 98.6733, 3.64162, 0.28", "-37.202, 99.5777, 3.90719, 0.55", "-40.4564, 101.955, 4.71431, 0.55", "-41.5489, 102.728, 5.01052, 0.55", "-43.0091, 103.742, 5.41327, 0.55", "-44.5087, 104.865, 5.84407, 0.55", "-47.2813, 107.052, 6.77353, 0.55", "-49.1707, 108.56, 7.48712, 0.55", "-50.45, 109.559, 7.82955, 0.55", "-52.8255, 111.463, 8.46068, 0.55", "-54.8931, 113.156, 9.04489, 0.55", "-57.0375, 114.95, 9.67018, 0.83", "-59.5938, 116.981, 10.358, 0.28", "-62.6674, 119.374, 10.9004, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "50.4665, -25.8602, 30.2989, 0.55", "57.1474, -23.7749, 37.4086, 0.55", "64.1557, -23.0224, 44.4977, 0.55", "70.5898, -21.594, 52.0038, 0.55", "76.5101, -21.3137, 60.0576, 0.55", "83.0451, -20.1099, 67.5201, 0.55", "88.302, -17.4678, 75.5593, 0.55", "93.4781, -14.1352, 83.3633, 0.55", "100.189, -10.019, 89.3789, 0.55", "106.345, -5.62283, 95.7575, 0.55", "111.914, 0.0302034, 101.552, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "50.4665, -25.8602, 30.2989, 0.55", "58.5974, -23.2608, 35.4373, 0.55", "67.1555, -22.5692, 40.5587, 0.55", "75.5092, -22.9223, 46.0429, 0.55", "84.327, -24.4355, 50.4824, 0.55", "92.9162, -25.5426, 55.4692, 0.55", "100.866, -26.517, 61.4473, 0.55", "107.971, -27.0846, 68.4591, 0.55", "114.853, -26.3445, 75.6728, 0.55", "120.75, -25.3097, 83.675, 0.55", "125.861, -23.5516, 92.0688, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "119.963, -84.4862, 15.1054, 0.55", "128.585, -88.5474, 17.8253, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "119.963, -84.4862, 15.1054, 0.55", "128.928, -88.4692, 13.6679, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-103.17, -79.1185, 80.0605, 0.55", "-108.726, -80.8351, 88.1765, 0.55", "-112.728, -83.6786, 96.8383, 0.55", "-116.83, -87.9424, 104.777, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-103.17, -79.1185, 80.0605, 0.55", "-108.83, -80.6306, 88.1495, 0.55", "-114.728, -82.977, 95.8379, 0.55", "-122.315, -84.4204, 102.173, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "25.8849, -53.0639, -3.19732, 0.55", "28.8716, -53.0759, -3.86242, 0.55", "31.3692, -53.1192, -4.38279, 0.55", "34.0765, -53.1017, -4.91373, 0.55", "37.0208, -53.0869, -5.42664, 0.55", "40.7537, -52.9791, -6.02714, 0.55", "43.4887, -52.8594, -6.44458, 0.55", "46.6027, -52.5752, -6.90773, 0.55", "48.3289, -52.33, -7.13967, 0.55", "51.8287, -51.5371, -7.54235, 0.55", "53.5998, -51.0128, -7.69666, 0.55", "54.9363, -50.5413, -7.7821, 0.55", "58.0619, -49.2703, -7.96609, 0.55", "60.1729, -48.2768, -8.09121, 0.83", "61.5663, -47.5587, -8.16792, 0.55", "63.4104, -46.4855, -8.25752, 0.55", "67.3549, -44.0075, -8.43319, 0.55", "68.4738, -43.2422, -8.47508, 0.55", "69.1704, -42.7108, -8.5013, 0.83", "71.4116, -40.8284, -8.58426, 0.55", "72.8166, -39.511, -8.60692, 0.55", "74.5288, -37.7074, -8.54636, 0.55", "76.3731, -35.4734, -8.39089, 0.55", "78.8148, -32.3486, -8.07492, 0.55", "79.8466, -30.9803, -7.90092, 0.28", "81.6424, -28.5191, -7.49269, 0.55", "83.2845, -26.2498, -7.05377, 0.28", "84.0515, -25.1691, -6.82956, 0.55", "85.0078, -23.7532, -6.54243, 0.28", "85.3439, -23.2706, -6.47452, 0.55", "86.5333, -21.7218, -6.41578, 0.55", "88.9402, -18.9765, -6.55531, 0.55", "90.4604, -17.3803, -6.72829, 0.55", "91.8437, -16.0339, -6.90203, 0.55", "94.7428, -13.3237, -7.30219, 0.55", "97.7177, -10.5746, -7.78573, 0.55", "100.113, -8.37848, -8.23721, 0.55", "101.73, -6.95411, -8.55429, 0.55", "102.937, -5.94819, -8.77242, 0.83", "103.595, -5.41333, -8.88092, 0.83", "105.195, -4.13748, -9.08103, 0.55", "105.854, -3.58694, -9.16393, 0.83", "107.72, -1.94719, -9.41232, 0.28", "109.313, -0.545015, -9.60557, 0.55", "110.325, 0.337398, -9.68349, 0.55", "111.76, 1.59464, -9.76133, 0.55", "113.555, 3.14144, -9.80959, 0.28", "114.95, 4.31132, -9.8473, 0.55", "116.488, 5.50325, -9.9087, 0.83", "117.984, 6.51504, -9.98381, 0.55", "120.146, 7.67312, -9.9935, 0.28", "122.652, 8.79363, -9.94126, 0.55", "124.623, 9.51554, -9.8578, 0.55", "127.332, 10.339, -9.73714, 0.55", "129.803, 10.9718, -9.62624, 0.55", "133.319, 11.7738, -9.4621, 0.55", "135.353, 12.1758, -9.30692, 0.55", "138.365, 12.8313, -9.04688, 0.55", "139.736, 13.2209, -8.91623, 0.28", "142.158, 14.1777, -8.67398, 0.55", "143.053, 14.5827, -8.60149, 0.28", "143.854, 14.9969, -8.57171, 0.83", "146.458, 16.3155, -8.40374, 0.55", "148.478, 17.5155, -8.23768, 0.28", "150.098, 18.6512, -8.06844, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "25.8849, -53.0639, -3.19732, 0.55", "27.2432, -54.4595, -3.31833, 0.55", "28.7611, -56.0015, -3.41166, 0.55", "30.6169, -57.9084, -3.2717, 0.28", "31.3528, -58.6657, -3.16929, 0.28", "32.32, -59.6954, -2.8353, 0.55", "33.2679, -60.7131, -2.4216, 0.28", "34.4356, -61.9573, -1.80076, 0.55", "36.2749, -63.9883, -0.629621, 0.28", "37.3383, -65.1282, 0.132018, 0.55", "40.0507, -67.9149, 2.10306, 0.55", "41.7214, -69.6401, 3.30378, 0.55", "42.7628, -70.6721, 3.9908, 0.28", "43.2387, -71.144, 4.29491, 0.55", "45.243, -73.1085, 5.44514, 0.28", "46.1224, -73.9974, 5.9728, 0.55", "47.7379, -75.6452, 6.89485, 0.55", "49.2402, -77.186, 7.85211, 0.55", "50.7701, -78.8134, 8.88889, 0.28", "51.1404, -79.2122, 9.13983, 0.55", "52.8219, -81.1744, 10.3723, 0.28", "52.9686, -81.3447, 10.4958, 0.55", "53.8638, -82.4333, 11.4397, 0.28", "54.2416, -83.0166, 11.9399, 0.55", "60.8361, -88.5097, 16.744, 0.55", "65.8315, -95.2894, 21.6548, 0.55", "69.0891, -103.067, 26.3839, 0.55", "73.2395, -111.011, 29.9671, 0.55", "78.0879, -118.246, 34.2673, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.80608, -51.98, -14.2003, 0.55", "-10.6554, -51.627, -15.2936, 0.55", "-12.567, -50.8426, -17.6284, 0.55", "-15.4129, -49.5043, -20.8554, 0.28", "-16.1966, -49.1357, -21.744, 0.83", "-18.7987, -47.9121, -24.6946, 0.55", "-21.1348, -46.8135, -27.3435, 0.55", "-21.8756, -46.4836, -28.2499, 0.28", "-23.3134, -45.9693, -30.0799, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.80608, -51.98, -14.2003, 0.83", "-11.2166, -54.0789, -14.2003, 0.83", "-12.9647, -56.6802, -14.2003, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "30.143, 140.362, 20.5159, 0.83", "33.1397, 149.359, 21.6677, 0.83", "37.0837, 158.085, 21.4119, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "30.143, 140.362, 20.5159, 0.55", "30.1744, 149.564, 22.9981, 0.83", "30.2053, 158.956, 24.5057, 0.83", "29.653, 168.054, 27.3292, 0.83", "30.3605, 177.229, 29.8261, 0.83", "30.6264, 186.356, 32.5879, 0.83", "29.2317, 195.61, 34.3651, 0.83", "27.1156, 204.818, 35.6217, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-62.6674, 119.374, 10.9004, 0.28", "-66.6624, 118.719, 13.0881, 0.28", "-67.8768, 118.52, 13.7532, 0.28", "-69.5152, 118.251, 14.6504, 0.55", "-71.0183, 118.005, 15.4735, 0.28", "-72.5466, 117.755, 16.3105, 0.28", "-75.2682, 117.308, 17.8009, 0.83", "-83.8922, 114.97, 22.2247, 0.83", "-92.0517, 113.562, 27.8128, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-62.6674, 119.374, 10.9004, 0.28", "-65.2188, 121.347, 11.7278, 0.28", "-67.8897, 123.313, 12.676, 0.55", "-70.2242, 125.055, 13.5909, 0.55", "-70.8098, 125.485, 13.8497, 0.55", "-72.1615, 126.541, 14.505, 0.28", "-73.4268, 127.532, 15.1097, 0.55", "-74.989, 128.7, 15.9939, 0.28", "-76.0269, 129.413, 16.6149, 0.28", "-78.0721, 130.808, 17.9411, 0.55", "-80.2032, 132.235, 19.3676, 0.28", "-82.2735, 133.601, 20.7996, 0.55", "-84.9998, 135.348, 22.5995, 0.28", "-86.0923, 136.041, 23.3219, 0.55", "-93.0495, 140.842, 28.4267, 0.55", "-100.132, 144.946, 34.01, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.9647, -56.6802, -14.2003, 0.55", "-12.8152, -58.1821, -14.3968, 0.55", "-12.7389, -60.3885, -14.7071, 0.55", "-12.6941, -63.8153, -15.2467, 0.55", "-12.8942, -67.7552, -15.9312, 0.55", "-13.1619, -70.6869, -16.5502, 0.55", "-13.5007, -72.8654, -17.0923, 0.55", "-13.9055, -74.3302, -17.5269, 0.55", "-14.7379, -76.7902, -18.3115, 0.55", "-15.8941, -79.711, -19.3157, 0.55", "-16.8174, -82.1353, -20.2207, 0.55", "-17.8558, -85.0211, -21.2847, 0.55", "-19.1581, -89.2682, -22.8722, 0.55", "-20.0106, -92.4244, -24.0263, 0.55", "-21.0254, -96.7048, -25.4899, 0.55", "-21.6579, -100.337, -26.6321, 0.55", "-21.9998, -102.75, -27.2601, 0.55", "-22.2775, -105.652, -27.873, 0.55", "-22.3877, -107.287, -28.15, 0.55", "-22.6194, -110.946, -28.62, 0.55", "-22.6263, -112.363, -28.7096, 0.55", "-22.6984, -115.71, -28.7597, 0.55", "-22.6669, -118.37, -28.7327, 0.55", "-22.6177, -120.13, -28.63, 0.55", "-22.5715, -121.321, -28.5457, 0.55", "-22.3895, -123.162, -28.3712, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.9647, -56.6802, -14.2003, 0.55", "-13.8163, -59.348, -13.6415, 0.55", "-14.7132, -62.7233, -13.0173, 0.55", "-15.3288, -65.3279, -12.6153, 0.55", "-16.3577, -70.0432, -11.9831, 0.55", "-16.8085, -71.9323, -11.7535, 0.55", "-17.3818, -74.2268, -11.4737, 0.55", "-17.8975, -76.3412, -11.2256, 0.55", "-19.0513, -80.6772, -10.684, 0.55", "-19.7858, -82.9135, -10.2751, 0.55", "-20.6701, -85.2785, -9.58811, 0.55", "-22.0303, -88.4099, -8.43393, 0.55", "-23.2319, -90.8876, -7.32955, 0.55", "-24.3166, -92.9687, -6.27433, 0.55", "-25.6307, -95.4393, -4.85129, 0.55", "-27.183, -98.5479, -2.91834, 0.55", "-27.7432, -99.9306, -2.07123, 0.55", "-28.0264, -100.845, -1.5364, 0.83", "-28.3416, -102.727, -0.5694, 0.83", "-28.3953, -104.278, 0.0694711, 0.83", "-27.9872, -107.749, 1.27329, 0.55", "-27.4898, -110.211, 1.97475, 0.83", "-27.116, -111.878, 2.54984, 0.55", "-26.7939, -113.432, 3.13908, 0.55", "-26.2521, -116.185, 4.2873, 0.55", "-26.0189, -117.99, 5.11749, 0.55", "-26.0365, -119.426, 5.80999, 0.55", "-26.6023, -122.845, 7.5453, 0.55", "-27.0644, -124.73, 8.45478, 0.55", "-27.5144, -126.342, 9.142, 0.55", "-28.1731, -128.936, 10.0883, 0.55", "-28.9338, -132.062, 11.0205, 0.55", "-29.3744, -134.069, 11.5276, 0.55", "-29.8484, -136.584, 12.0583, 0.55", "-30.6796, -141.214, 12.9409, 0.55", "-31.4419, -145.563, 13.5998, 0.55", "-31.7625, -147.654, 13.8851, 0.55", "-32.2178, -150.888, 14.3324, 0.55", "-32.9594, -155.725, 15.0214, 0.83", "-33.9096, -160.882, 15.7593, 0.83", "-34.3509, -163.041, 16.0482, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.1156, 204.818, 35.6217, 0.83", "26.5642, 214.151, 37.4031, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "27.1156, 204.818, 35.6217, 0.55", "26.718, 214.056, 37.9171, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-22.3895, -123.162, -28.3712, 0.55", "-21.5399, -124.496, -28.7673, 0.55", "-20.6887, -125.841, -29.1299, 0.55", "-19.2726, -128.177, -29.7081, 0.55", "-17.8941, -130.433, -30.2653, 0.55", "-16.9506, -131.935, -30.6119, 0.55", "-16.0257, -133.381, -30.9185, 0.55", "-14.6022, -135.79, -31.3659, 0.55", "-13.589, -137.539, -31.6332, 0.55", "-13.1451, -138.355, -31.7326, 0.55", "-11.7665, -141.009, -32.007, 0.83", "-10.8207, -142.857, -32.2015, 0.55", "-9.57141, -145.176, -32.4166, 0.55", "-8.58926, -147.02, -32.5719, 0.55", "-7.39394, -149.309, -32.7422, 0.55", "-5.93521, -152.2, -32.9325, 0.55", "-5.03221, -154.047, -33.0667, 0.55", "-4.18198, -155.837, -33.2204, 0.55", "-3.62516, -157.024, -33.3076, 0.55", "-3.24203, -158.012, -33.3445, 0.28", "-3.03698, -158.738, -33.3292, 0.55", "-2.86062, -159.583, -33.3059, 0.28", "-2.67864, -160.851, -33.3006, 0.55", "-2.39338, -162.713, -33.3472, 0.28", "-2.00318, -164.69, -33.3495, 0.55", "-1.60364, -166.523, -33.3522, 0.55", "-1.29822, -167.973, -33.3708, 0.55", "-0.848348, -169.819, -33.4252, 0.55", "-0.455735, -171.462, -33.4038, 0.55", "0.154505, -174.071, -33.4364, 0.83", "0.498857, -175.5, -33.4457, 0.28", "0.948141, -177.614, -33.4562, 0.28", "1.32828, -179.68, -33.469, 0.28", "2.0357, -183.781, -33.5248, 0.55", "2.50947, -186.774, -33.6122, 1.66", "3.03318, -190.057, -33.749, 0.55", "3.58143, -193.228, -33.8692, 0.55", "4.1774, -196.788, -34.0134, 0.28", "4.5592, -199.507, -34.147, 0.55", "4.92882, -202.505, -34.3112, 0.28", "5.087, -204.262, -34.3359, 0.83", "5.21948, -206.516, -34.3444, 0.55", "5.32321, -208.669, -34.2954, 0.55", "5.30531, -210.795, -34.2185, 0.83", "5.19541, -212.905, -34.1328, 0.28", "5.19541, -212.905, -34.1328, 0.55", "5.05146, -214.256, -34.1337, 0.28", "4.98639, -214.77, -34.1429, 0.55", "4.88592, -216.23, -34.2212, 0.28", "4.87007, -217.535, -34.371, 0.55", "4.9583, -219.938, -34.8322, 0.28", "4.99299, -220.517, -34.9432, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-22.3895, -123.162, -28.3712, 0.55", "-22.2875, -124.783, -28.3335, 0.55", "-22.2527, -125.577, -28.3043, 0.28", "-22.1955, -126.397, -28.2682, 0.55", "-21.9326, -128.808, -28.1582, 0.28", "-21.8903, -129.074, -28.1642, 0.55", "-21.4988, -131.161, -28.2778, 0.28", "-21.2838, -132.106, -28.3481, 0.55", "-20.9904, -133.394, -28.4751, 0.28", "-20.6485, -135.119, -28.6884, 0.55", "-20.252, -137.498, -29.0428, 0.28", "-20.1888, -138.075, -29.147, 0.55", "-20.1872, -139.384, -29.4264, 0.28", "-20.2006, -139.948, -29.5555, 0.55", "-20.3823, -141.517, -29.9269, 0.28", "-20.5549, -142.268, -30.0952, 0.55", "-21.0595, -143.74, -30.3323, 0.28", "-21.7258, -145.526, -30.6832, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-34.3509, -163.041, 16.0482, 0.55", "-35.1178, -164.161, 15.8682, 0.55", "-37.0896, -167.039, 15.4053, 0.55", "-39.2309, -170.164, 14.9027, 0.55", "-40.7017, -172.311, 14.5575, 0.55", "-46.5987, -179.974, 14.1538, 0.55", "-52.5866, -187.569, 13.6683, 0.55", "-60.1572, -193.69, 14.7474, 0.55", "-68.1937, -199.322, 15.2661, 0.55", "-76.5264, -204.536, 15.9337, 0.55", "-85.0013, -209.107, 18.1758, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-34.3509, -163.041, 16.0482, 0.55", "-34.862, -164.55, 16.5636, 0.55", "-35.3458, -166.477, 17.1446, 0.55", "-36.4039, -170.691, 18.4151, 0.55", "-37.4244, -174.756, 19.6405, 0.55", "-38.1109, -177.49, 20.4648, 0.55", "-38.7955, -180.217, 21.2868, 0.55", "-39.6205, -183.642, 22.3973, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-21.7258, -145.526, -30.6832, 0.28", "-22.9945, -148.812, -31.5189, 0.28", "-23.3418, -149.832, -31.7975, 0.55", "-24.3324, -152.673, -32.5876, 0.28", "-24.7859, -153.973, -32.9492, 0.55", "-25.809, -156.908, -33.7652, 0.28", "-26.506, -158.907, -34.3211, 0.83", "-27.0948, -161.026, -34.9881, 0.28", "-27.4926, -162.609, -35.5018, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-21.7258, -145.526, -30.6832, 0.55", "-21.6442, -146.9, -30.303, 0.55", "-21.5154, -148.813, -29.6727, 0.55", "-21.4491, -150.938, -29.0179, 0.55", "-21.406, -152.391, -28.5847, 0.55", "-21.3708, -153.497, -28.2702, 0.28", "-21.3369, -155.603, -27.7075, 0.55", "-21.3188, -157.809, -27.1238, 0.28", "-21.3321, -160.417, -26.6418, 0.55", "-21.365, -161.88, -26.4735, 0.28", "-21.4293, -162.947, -26.4138, 0.55", "-21.5322, -164.134, -26.3775, 0.28", "-21.6377, -165.182, -26.3865, 0.55", "-21.9029, -167.906, -26.6187, 0.28", "-22.1198, -170.181, -26.891, 0.28", "-22.289, -171.561, -27.1026, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-39.6205, -183.642, 22.3973, 0.28", "-37.4298, -184.172, 22.0997, 0.28", "-36.8485, -184.313, 22.0208, 0.55", "-35.181, -184.716, 21.7943, 0.28", "-34.0562, -184.988, 21.6415, 0.55", "-32.3009, -185.413, 21.4031, 0.28", "-31.4648, -185.615, 21.2895, 0.55", "-22.1461, -188.643, 19.556, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-39.6205, -183.642, 22.3973, 0.55", "-40.0205, -186.787, 22.4273, 0.55", "-39.866, -196.216, 23.6377, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.1461, -188.643, 19.556, 0.55", "-12.6363, -191.344, 18.3387, 0.55", "-2.78577, -192.792, 17.5374, 0.55", "7.12089, -193.853, 16.7558, 0.55", "16.9623, -193.125, 15.1557, 0.55", "26.9229, -192.359, 14.7874, 0.55", "36.5691, -190.144, 13.5551, 0.55", "45.8913, -186.73, 13.9746, 0.55", "54.1784, -181.439, 14.536, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.1461, -188.643, 19.556, 0.55", "-12.7279, -191.353, 17.779, 0.55", "-3.19193, -194.213, 17.7117, 0.55", "6.55763, -196.181, 18.5195, 0.55", "16.3064, -198.079, 17.5324, 0.55", "25.6566, -201.443, 17.6973, 0.55", "34.3159, -206.008, 16.3071, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "axon_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "axon_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_58", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_9", "dend_8", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_ChC_87b9dd7336_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_28
create dend_54
public dend_54
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_29
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_31
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_28, dend_19, dend_0, axon_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, axon_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999999999991157)
    connect dend_19(0), soma_0(0.4999999999991157)
    connect dend_0(0), soma_0(0.4999999999991157)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96523, -8.50396, 0.0192879, 2.77292 ) }
    soma_0 { pt3dadd( -4.44098, -7.63716, 0.0179479, 3.51612 ) }
    soma_0 { pt3dadd( -3.91674, -6.77037, 0.0166079, 5.09768 ) }
    soma_0 { pt3dadd( -3.3925, -5.90357, 0.0152679, 6.03936 ) }
    soma_0 { pt3dadd( -2.86825, -5.03677, 0.0139278, 6.97148 ) }
    soma_0 { pt3dadd( -2.34401, -4.16997, 0.0125878, 7.92835 ) }
    soma_0 { pt3dadd( -1.81976, -3.30317, 0.0112478, 9.28613 ) }
    soma_0 { pt3dadd( -1.29552, -2.43637, 0.00990778, 9.94241 ) }
    soma_0 { pt3dadd( -0.771277, -1.56957, 0.00856776, 10.1843 ) }
    soma_0 { pt3dadd( -0.247034, -0.702773, 0.00722774, 10.3452 ) }
    soma_0 { pt3dadd( 0.27721, 0.164025, 0.00588772, 10.228 ) }
    soma_0 { pt3dadd( 0.801453, 1.03082, 0.0045477, 9.54324 ) }
    soma_0 { pt3dadd( 1.3257, 1.89762, 0.00320768, 8.78219 ) }
    soma_0 { pt3dadd( 1.84994, 2.76442, 0.00186766, 7.98349 ) }
    soma_0 { pt3dadd( 2.37418, 3.63122, 5.27637E-4, 7.19659 ) }
    soma_0 { pt3dadd( 2.89843, 4.49802, -8.12382E-4, 6.4097 ) }
    soma_0 { pt3dadd( 3.42267, 5.36482, -0.0021524, 5.30941 ) }
    soma_0 { pt3dadd( 3.94692, 6.23162, -0.00349242, 4.2542 ) }
    soma_0 { pt3dadd( 4.47116, 7.09842, -0.00483244, 3.4094 ) }
    soma_0 { pt3dadd( 4.9954, 7.96521, -0.00617246, 2.28943 ) }
    soma_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 1.46335 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.16275, -8.65838, 5.04691, 2.4 ) }
    dend_28 { pt3dadd( -4.70788, -13.9727, 3.54397, 2.22 ) }
    dend_28 { pt3dadd( -5.14963, -18.2792, 2.32607, 2.22 ) }
    dend_28 { pt3dadd( -5.68384, -23.487, 0.853241, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.23725, 3.80562, -2.37309, 0.55 ) }
    dend_19 { pt3dadd( 8.20446, 5.64003, -3.56572, 0.55 ) }
    dend_19 { pt3dadd( 10.3311, 7.62304, -4.85495, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.56725, 7.52012, -2.03309, 1.94 ) }
    dend_0 { pt3dadd( 4.77725, 9.09712, -3.41309, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 13.2824, 21.6671, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_28 (entry count 33/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.68384, -23.487, 0.853241, 0.83 ) }
    dend_54 { pt3dadd( -2.99265, -24.8881, 0.101257, 0.83 ) }
    dend_54 { pt3dadd( -0.816042, -26.0214, -0.50694, 0.83 ) }
    dend_54 { pt3dadd( 2.40707, -27.6995, -1.40755, 0.83 ) }
    dend_54 { pt3dadd( 4.36396, -28.7183, -1.95436, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.68384, -23.487, 0.853241, 2.22 ) }
    dend_29 { pt3dadd( -6.54384, -25.7575, -1.46676, 2.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.3311, 7.62304, -4.85495, 0.55 ) }
    dend_27 { pt3dadd( 12.1549, 9.27733, -5.16431, 0.55 ) }
    dend_27 { pt3dadd( 13.8281, 10.831, -5.40674, 1.11 ) }
    dend_27 { pt3dadd( 15.681, 12.6044, -5.63146, 0.55 ) }
    dend_27 { pt3dadd( 16.8184, 13.7736, -5.75074, 0.55 ) }
    dend_27 { pt3dadd( 18.6726, 15.813, -6.08425, 0.83 ) }
    dend_27 { pt3dadd( 20.0393, 17.4601, -6.47489, 0.55 ) }
    dend_27 { pt3dadd( 20.915, 18.7015, -6.81906, 0.55 ) }
    dend_27 { pt3dadd( 22.2026, 20.7817, -7.47033, 1.11 ) }
    dend_27 { pt3dadd( 23.2947, 22.8443, -8.20654, 1.11 ) }
    dend_27 { pt3dadd( 24.5476, 25.5874, -9.40192, 0.55 ) }
    dend_27 { pt3dadd( 25.5897, 28.4039, -10.7594, 0.83 ) }
    dend_27 { pt3dadd( 26.1755, 30.2335, -11.7314, 0.55 ) }
    dend_27 { pt3dadd( 26.3773, 30.9599, -12.1318, 0.55 ) }
    dend_27 { pt3dadd( 26.9072, 33.1549, -13.3745, 1.11 ) }
    dend_27 { pt3dadd( 27.4073, 35.4179, -14.6073, 0.28 ) }
    dend_27 { pt3dadd( 27.6276, 36.4141, -15.0588, 0.55 ) }
    dend_27 { pt3dadd( 28.1208, 38.6647, -16.0703, 0.28 ) }
    dend_27 { pt3dadd( 28.3702, 39.8509, -16.6081, 0.83 ) }
    dend_27 { pt3dadd( 28.8328, 42.0361, -17.6111, 0.28 ) }
    dend_27 { pt3dadd( 29.0171, 43.0328, -18.0439, 0.83 ) }
    dend_27 { pt3dadd( 29.3446, 45.3295, -19.0144, 0.83 ) }
    dend_27 { pt3dadd( 29.7975, 48.6472, -20.5826, 0.28 ) }
    dend_27 { pt3dadd( 29.9125, 49.6281, -21.0951, 0.55 ) }
    dend_27 { pt3dadd( 30.0816, 51.0708, -21.9046, 0.28 ) }
    dend_27 { pt3dadd( 30.2446, 52.4158, -22.6654, 1.11 ) }
    dend_27 { pt3dadd( 30.7073, 56.163, -24.7954, 0.28 ) }
    dend_27 { pt3dadd( 30.9661, 58.1833, -25.9325, 0.83 ) }
    dend_27 { pt3dadd( 31.2927, 60.4506, -27.0905, 0.28 ) }
    dend_27 { pt3dadd( 31.4743, 61.5132, -27.5934, 0.55 ) }
    dend_27 { pt3dadd( 31.8663, 63.4228, -28.4957, 0.28 ) }
    dend_27 { pt3dadd( 32.0552, 64.1793, -28.8214, 0.55 ) }
    dend_27 { pt3dadd( 32.3521, 65.3366, -29.236, 0.28 ) }
    dend_27 { pt3dadd( 32.617, 66.4334, -29.6432, 0.83 ) }
    dend_27 { pt3dadd( 33.0295, 68.2764, -30.3105, 0.83 ) }
    dend_27 { pt3dadd( 33.9115, 72.8534, -32.0903, 0.28 ) }
    dend_27 { pt3dadd( 34.2434, 74.8896, -32.8421, 0.55 ) }
    dend_27 { pt3dadd( 34.5062, 76.9595, -33.5694, 0.28 ) }
    dend_27 { pt3dadd( 34.905, 80.7505, -34.8247, 0.55 ) }
    dend_27 { pt3dadd( 35.2051, 83.8228, -35.7327, 0.28 ) }
    dend_27 { pt3dadd( 35.3179, 85.4424, -36.1339, 0.55 ) }
    dend_27 { pt3dadd( 35.5116, 87.8538, -36.617, 0.28 ) }
    dend_27 { pt3dadd( 35.727, 89.9651, -37.1069, 0.55 ) }
    dend_27 { pt3dadd( 35.8709, 91.0588, -37.2995, 0.55 ) }
    dend_27 { pt3dadd( 36.4221, 94.438, -37.5968, 0.28 ) }
    dend_27 { pt3dadd( 36.6809, 95.7446, -37.7032, 0.55 ) }
    dend_27 { pt3dadd( 37.5177, 99.3749, -37.9303, 0.28 ) }
    dend_27 { pt3dadd( 37.8212, 100.602, -38.0009, 0.55 ) }
    dend_27 { pt3dadd( 38.5562, 103.402, -38.0741, 0.28 ) }
    dend_27 { pt3dadd( 39.1894, 105.933, -38.1649, 0.55 ) }
    dend_27 { pt3dadd( 40.0217, 109.373, -38.2954, 0.28 ) }
    dend_27 { pt3dadd( 40.2381, 110.3, -38.3248, 0.55 ) }
    dend_27 { pt3dadd( 40.7783, 112.622, -38.445, 0.28 ) }
    dend_27 { pt3dadd( 41.352, 115.052, -38.7113, 0.55 ) }
    dend_27 { pt3dadd( 42.0434, 117.923, -39.2213, 0.28 ) }
    dend_27 { pt3dadd( 42.5209, 119.954, -39.6353, 0.55 ) }
    dend_27 { pt3dadd( 43.1196, 122.481, -40.2175, 0.28 ) }
    dend_27 { pt3dadd( 43.8998, 125.808, -41.0536, 0.55 ) }
    dend_27 { pt3dadd( 44.5738, 128.638, -41.8401, 0.28 ) }
    dend_27 { pt3dadd( 44.8845, 129.916, -42.2088, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 45.6269, 132.88, -43.0448, 0.55 ) }
    dend_27 { pt3dadd( 46.218, 135.148, -43.6366, 0.28 ) }
    dend_27 { pt3dadd( 46.5442, 136.403, -43.9163, 0.55 ) }
    dend_27 { pt3dadd( 46.9548, 138.053, -44.1512, 0.28 ) }
    dend_27 { pt3dadd( 47.2847, 139.321, -44.2571, 0.55 ) }
    dend_27 { pt3dadd( 47.5925, 140.471, -44.2768, 0.55 ) }
    dend_27 { pt3dadd( 48.1511, 142.563, -44.1254, 0.28 ) }
    dend_27 { pt3dadd( 48.3442, 143.366, -44.0327, 0.55 ) }
    dend_27 { pt3dadd( 48.9143, 145.736, -43.7896, 0.28 ) }
    dend_27 { pt3dadd( 49.2279, 147.017, -43.6505, 0.83 ) }
    dend_27 { pt3dadd( 49.6314, 148.667, -43.5931, 0.28 ) }
    dend_27 { pt3dadd( 49.9525, 149.705, -43.6869, 0.55 ) }
    dend_27 { pt3dadd( 50.5368, 151.279, -44.0272, 0.28 ) }
    dend_27 { pt3dadd( 51.0511, 152.316, -44.29, 0.55 ) }
    dend_27 { pt3dadd( 52.4141, 154.467, -44.88, 0.28 ) }
    dend_27 { pt3dadd( 53.5958, 156.14, -45.3807, 0.55 ) }
    dend_27 { pt3dadd( 55.59, 158.663, -46.1651, 0.28 ) }
    dend_27 { pt3dadd( 56.6478, 159.886, -46.5503, 0.55 ) }
    dend_27 { pt3dadd( 58.8764, 162.191, -47.2815, 0.28 ) }
    dend_27 { pt3dadd( 60.4931, 163.757, -47.9063, 0.28 ) }
    dend_27 { pt3dadd( 60.9319, 164.138, -48.104, 0.28 ) }
    dend_27 { pt3dadd( 63.0689, 165.827, -49.0939, 0.28 ) }
    dend_27 { pt3dadd( 64.6882, 167.077, -49.8723, 0.83 ) }
    dend_27 { pt3dadd( 68.7521, 170.181, -52.0194, 0.28 ) }
    dend_27 { pt3dadd( 70.6767, 171.622, -53.196, 0.55 ) }
    dend_27 { pt3dadd( 73.6089, 173.724, -55.099, 0.28 ) }
    dend_27 { pt3dadd( 74.4846, 174.328, -55.6773, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.3311, 7.62304, -4.85495, 0.55 ) }
    dend_20 { pt3dadd( 11.2471, 10.0951, -5.07115, 0.55 ) }
    dend_20 { pt3dadd( 12.2407, 12.7671, -5.17605, 0.55 ) }
    dend_20 { pt3dadd( 12.7842, 14.3069, -5.14855, 0.55 ) }
    dend_20 { pt3dadd( 13.6931, 17.0774, -5.18488, 0.55 ) }
    dend_20 { pt3dadd( 14.241, 18.8387, -5.20187, 0.28 ) }
    dend_20 { pt3dadd( 15.0097, 21.154, -5.21829, 1.11 ) }
    dend_20 { pt3dadd( 15.7692, 23.5828, -5.26282, 0.55 ) }
    dend_20 { pt3dadd( 16.2157, 25.2029, -5.31205, 0.55 ) }
    dend_20 { pt3dadd( 16.9595, 28.2961, -5.30542, 0.83 ) }
    dend_20 { pt3dadd( 17.4801, 30.5287, -5.27767, 0.55 ) }
    dend_20 { pt3dadd( 18.1566, 33.6708, -5.17385, 0.55 ) }
    dend_20 { pt3dadd( 18.7541, 36.6712, -5.13166, 0.55 ) }
    dend_20 { pt3dadd( 19.273, 39.4476, -5.18801, 0.55 ) }
    dend_20 { pt3dadd( 19.8858, 42.7393, -5.23191, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.77725, 9.09712, -3.41309, 0.83 ) }
    dend_12 { pt3dadd( 7.10492, 10.782, -3.37761, 0.83 ) }
    dend_12 { pt3dadd( 9.98695, 12.8681, -3.33367, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.77725, 9.09712, -3.41309, 1.11 ) }
    dend_1 { pt3dadd( 4.05287, 12.2418, -2.8298, 1.11 ) }
    dend_1 { pt3dadd( 3.62681, 14.0914, -2.48672, 0.83 ) }
    dend_1 { pt3dadd( 2.75848, 17.8611, -1.78752, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 28.8079, 47.3373, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 36.5706, 60.1724, -0.00751248, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 4.36396, -28.7183, -1.95436, 0.55 ) }
    dend_56 { pt3dadd( 6.55686, -30.1887, -1.38189, 0.55 ) }
    dend_56 { pt3dadd( 8.72882, -31.645, -0.814892, 0.55 ) }
    dend_56 { pt3dadd( 10.5279, -32.8513, -0.34525, 0.28 ) }
    dend_56 { pt3dadd( 12.3051, -34.043, 0.118707, 0.55 ) }
    dend_56 { pt3dadd( 14.5503, -35.5484, 0.704825, 0.55 ) }
    dend_56 { pt3dadd( 16.2292, -36.6741, 1.14311, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 59/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.36396, -28.7183, -1.95436, 0.55 ) }
    dend_55 { pt3dadd( 6.07418, -29.5184, -2.29455, 0.55 ) }
    dend_55 { pt3dadd( 8.26515, -30.4708, -2.83853, 0.55 ) }
    dend_55 { pt3dadd( 9.78684, -31.0767, -3.22291, 0.83 ) }
    dend_55 { pt3dadd( 11.9715, -31.9761, -3.8633, 0.55 ) }
    dend_55 { pt3dadd( 13.9888, -32.8012, -4.48414, 0.55 ) }
    dend_55 { pt3dadd( 16.4904, -33.8007, -5.24115, 0.83 ) }
    dend_55 { pt3dadd( 18.2469, -34.4511, -5.83809, 0.28 ) }
    dend_55 { pt3dadd( 19.9773, -35.0286, -6.4547, 0.55 ) }
    dend_55 { pt3dadd( 22.0008, -35.7417, -7.34751, 0.28 ) }
    dend_55 { pt3dadd( 23.1588, -36.1923, -7.95765, 0.55 ) }
    dend_55 { pt3dadd( 24.9216, -36.9484, -9.06551, 0.55 ) }
    dend_55 { pt3dadd( 26.4535, -37.6703, -10.1077, 0.55 ) }
    dend_55 { pt3dadd( 28.0656, -38.4564, -11.2469, 0.55 ) }
    dend_55 { pt3dadd( 30.9495, -39.8288, -13.4021, 0.55 ) }
    dend_55 { pt3dadd( 32.2565, -40.4588, -14.412, 0.28 ) }
    dend_55 { pt3dadd( 33.1278, -40.9275, -15.1067, 0.55 ) }
    dend_55 { pt3dadd( 34.3657, -41.6416, -16.1116, 0.55 ) }
    dend_55 { pt3dadd( 35.9186, -42.5951, -17.3341, 0.55 ) }
    dend_55 { pt3dadd( 37.8343, -43.8004, -18.7446, 0.55 ) }
    dend_55 { pt3dadd( 39.7849, -45.0129, -20.0622, 0.55 ) }
    dend_55 { pt3dadd( 41.2029, -45.9179, -21.0074, 0.55 ) }
    dend_55 { pt3dadd( 42.8585, -46.9875, -22.1203, 0.55 ) }
    dend_55 { pt3dadd( 44.2365, -47.8981, -23.0917, 0.55 ) }
    dend_55 { pt3dadd( 45.5225, -48.8007, -24.0331, 0.55 ) }
    dend_55 { pt3dadd( 47.4213, -50.1124, -25.3934, 0.55 ) }
    dend_55 { pt3dadd( 48.822, -51.0104, -26.387, 0.55 ) }
    dend_55 { pt3dadd( 50.3805, -51.9734, -27.5462, 0.83 ) }
    dend_55 { pt3dadd( 51.9648, -52.962, -28.7485, 0.83 ) }
    dend_55 { pt3dadd( 53.3357, -53.8258, -29.8196, 0.55 ) }
    dend_55 { pt3dadd( 54.8291, -54.7984, -31.1213, 0.55 ) }
    dend_55 { pt3dadd( 55.8007, -55.4364, -31.9924, 0.83 ) }
    dend_55 { pt3dadd( 57.5039, -56.4671, -33.5076, 0.28 ) }
    dend_55 { pt3dadd( 58.712, -57.1221, -34.5412, 0.55 ) }
    dend_55 { pt3dadd( 61.4355, -58.4277, -36.6773, 0.55 ) }
    dend_55 { pt3dadd( 64.0425, -59.5595, -38.6646, 0.55 ) }
    dend_55 { pt3dadd( 65.2201, -60.043, -39.5398, 0.28 ) }
    dend_55 { pt3dadd( 66.809, -60.6153, -40.6025, 0.55 ) }
    dend_55 { pt3dadd( 69.4224, -61.4681, -42.189, 0.28 ) }
    dend_55 { pt3dadd( 70.9836, -61.9978, -43.0348, 0.28 ) }
    dend_55 { pt3dadd( 72.3034, -62.4724, -43.7371, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_55 { pt3dadd( 73.912, -63.1582, -44.6268, 0.55 ) }
    dend_55 { pt3dadd( 75.2059, -63.837, -45.4383, 0.55 ) }
    dend_55 { pt3dadd( 77.0474, -65.0938, -46.7865, 0.55 ) }
    dend_55 { pt3dadd( 78.8207, -66.5314, -48.3054, 0.55 ) }
    dend_55 { pt3dadd( 80.7636, -68.201, -50.194, 0.55 ) }
    dend_55 { pt3dadd( 81.9223, -69.243, -51.3187, 0.28 ) }
    dend_55 { pt3dadd( 82.7789, -70.0518, -52.1681, 0.55 ) }
    dend_55 { pt3dadd( 84.4706, -71.7421, -53.9059, 0.55 ) }
    dend_55 { pt3dadd( 86.0979, -73.3704, -55.4994, 0.55 ) }
    dend_55 { pt3dadd( 87.5595, -74.7952, -56.8874, 0.83 ) }
    dend_55 { pt3dadd( 88.8255, -76.0182, -57.9058, 0.83 ) }
    dend_55 { pt3dadd( 89.4641, -76.5833, -58.3904, 0.83 ) }
    dend_55 { pt3dadd( 90.9316, -77.7643, -59.4195, 0.28 ) }
    dend_55 { pt3dadd( 92.0372, -78.5066, -60.0418, 0.83 ) }
    dend_55 { pt3dadd( 94.3472, -79.8046, -61.0984, 0.28 ) }
    dend_55 { pt3dadd( 95.8885, -80.539, -61.7836, 0.83 ) }
    dend_55 { pt3dadd( 98.1469, -81.4442, -62.6216, 0.55 ) }
    dend_55 { pt3dadd( 99.7586, -81.9592, -63.0683, 0.55 ) }
    dend_55 { pt3dadd( 103.458, -82.9254, -63.6948, 0.55 ) }
    dend_55 { pt3dadd( 105.406, -83.3641, -63.7615, 0.55 ) }
    dend_55 { pt3dadd( 107.449, -83.7615, -63.5457, 0.55 ) }
    dend_55 { pt3dadd( 110.756, -84.3686, -62.6501, 0.55 ) }
    dend_55 { pt3dadd( 112.0, -84.6436, -62.1059, 0.55 ) }
    dend_55 { pt3dadd( 113.487, -85.024, -61.2946, 0.83 ) }
    dend_55 { pt3dadd( 116.23, -85.9174, -59.545, 0.28 ) }
    dend_55 { pt3dadd( 117.111, -86.2606, -58.9668, 0.55 ) }
    dend_55 { pt3dadd( 119.78, -87.3719, -57.239, 0.28 ) }
    dend_55 { pt3dadd( 122.028, -88.4668, -56.0207, 0.55 ) }
    dend_55 { pt3dadd( 122.921, -88.9595, -55.6184, 0.55 ) }
    dend_55 { pt3dadd( 124.753, -90.0467, -55.0247, 0.28 ) }
    dend_55 { pt3dadd( 125.773, -90.7068, -54.8786, 0.28 ) }
    dend_55 { pt3dadd( 126.701, -91.3294, -54.8518, 0.55 ) }
    dend_55 { pt3dadd( 128.532, -92.526, -55.0603, 0.28 ) }
    dend_55 { pt3dadd( 129.577, -93.1488, -55.2466, 0.28 ) }
    dend_55 { pt3dadd( 130.257, -93.5144, -55.3784, 0.55 ) }
    dend_55 { pt3dadd( 132.207, -94.3681, -55.7572, 0.28 ) }
    dend_55 { pt3dadd( 134.062, -95.1048, -56.0824, 0.55 ) }
    dend_55 { pt3dadd( 135.694, -95.6204, -56.3304, 0.28 ) }
    dend_55 { pt3dadd( 137.226, -96.0276, -56.5423, 0.55 ) }
    dend_55 { pt3dadd( 139.648, -96.6055, -56.8591, 0.28 ) }
    dend_55 { pt3dadd( 141.603, -97.0146, -57.0942, 0.28 ) }
    dend_55 { pt3dadd( 144.104, -97.458, -57.3308, 0.55 ) }
    dend_55 { pt3dadd( 146.225, -97.8018, -57.4833, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_29 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.54384, -25.7575, -1.46676, 0.55 ) }
    dend_49 { pt3dadd( -8.23045, -27.4919, -2.58056, 0.55 ) }
    dend_49 { pt3dadd( -9.13662, -28.3308, -3.10431, 0.55 ) }
    dend_49 { pt3dadd( -10.6277, -29.7322, -3.89051, 0.83 ) }
    dend_49 { pt3dadd( -13.2273, -32.3899, -5.30342, 0.55 ) }
    dend_49 { pt3dadd( -14.9823, -34.305, -6.22915, 0.55 ) }
    dend_49 { pt3dadd( -16.8216, -36.3671, -7.17759, 0.83 ) }
    dend_49 { pt3dadd( -18.4713, -38.3264, -8.01271, 0.55 ) }
    dend_49 { pt3dadd( -19.6987, -39.7684, -8.5354, 1.11 ) }
    dend_49 { pt3dadd( -21.0471, -41.3782, -8.95218, 0.28 ) }
    dend_49 { pt3dadd( -22.4908, -43.2722, -9.19992, 0.55 ) }
    dend_49 { pt3dadd( -23.1552, -44.2618, -9.32949, 0.28 ) }
    dend_49 { pt3dadd( -24.4514, -46.1385, -9.52243, 0.55 ) }
    dend_49 { pt3dadd( -25.384, -47.3374, -9.57517, 0.28 ) }
    dend_49 { pt3dadd( -27.5, -49.6616, -9.58352, 0.83 ) }
    dend_49 { pt3dadd( -29.8896, -51.9073, -9.453, 0.55 ) }
    dend_49 { pt3dadd( -32.4002, -54.1729, -9.29356, 0.55 ) }
    dend_49 { pt3dadd( -34.7052, -56.1744, -9.12304, 0.55 ) }
    dend_49 { pt3dadd( -37.259, -58.2311, -8.93059, 0.55 ) }
    dend_49 { pt3dadd( -39.4339, -59.8535, -8.76944, 0.55 ) }
    dend_49 { pt3dadd( -41.9207, -61.4239, -8.48245, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -6.54384, -25.7575, -1.46676, 1.66 ) }
    dend_30 { pt3dadd( -5.53273, -27.9846, -1.3577, 1.66 ) }
    dend_30 { pt3dadd( -4.04782, -31.2552, -1.19754, 0.83 ) }
    dend_30 { pt3dadd( -2.1849, -35.3585, -0.996604, 0.83 ) }
    dend_30 { pt3dadd( -0.508841, -39.0501, -0.815825, 0.83 ) }
    dend_30 { pt3dadd( 0.779686, -41.8882, -0.676845, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 19.8858, 42.7393, -5.23191, 0.55 ) }
    dend_24 { pt3dadd( 20.7207, 44.6831, -6.28939, 0.55 ) }
    dend_24 { pt3dadd( 21.8606, 47.0354, -7.64373, 0.55 ) }
    dend_24 { pt3dadd( 23.1474, 49.6529, -9.02563, 0.28 ) }
    dend_24 { pt3dadd( 24.2793, 51.962, -10.1466, 0.83 ) }
    dend_24 { pt3dadd( 25.0447, 53.5582, -10.8796, 0.55 ) }
    dend_24 { pt3dadd( 26.0632, 55.6692, -11.8001, 0.55 ) }
    dend_24 { pt3dadd( 27.3385, 58.1542, -12.8286, 0.55 ) }
    dend_24 { pt3dadd( 28.8649, 60.8979, -13.6709, 0.83 ) }
    dend_24 { pt3dadd( 29.9509, 62.7976, -13.994, 0.28 ) }
    dend_24 { pt3dadd( 30.2434, 63.3189, -14.0321, 0.28 ) }
    dend_24 { pt3dadd( 31.2973, 65.2384, -14.0408, 0.55 ) }
    dend_24 { pt3dadd( 32.2483, 67.0134, -13.972, 0.55 ) }
    dend_24 { pt3dadd( 34.1746, 70.6564, -13.8359, 0.55 ) }
    dend_24 { pt3dadd( 35.1166, 72.4551, -13.8207, 0.55 ) }
    dend_24 { pt3dadd( 37.0785, 76.2685, -13.9059, 0.55 ) }
    dend_24 { pt3dadd( 38.2608, 78.6189, -14.0219, 0.55 ) }
    dend_24 { pt3dadd( 39.6553, 81.4919, -14.2673, 0.55 ) }
    dend_24 { pt3dadd( 41.1762, 84.7083, -14.8256, 0.55 ) }
    dend_24 { pt3dadd( 41.9118, 86.1729, -15.2382, 0.55 ) }
    dend_24 { pt3dadd( 42.5366, 87.2643, -15.6836, 0.28 ) }
    dend_24 { pt3dadd( 42.9896, 87.9236, -16.0394, 0.55 ) }
    dend_24 { pt3dadd( 43.8194, 88.9197, -16.6591, 0.28 ) }
    dend_24 { pt3dadd( 45.4652, 90.6673, -17.8118, 0.55 ) }
    dend_24 { pt3dadd( 48.2225, 93.3709, -19.4731, 0.55 ) }
    dend_24 { pt3dadd( 50.4034, 95.5239, -20.8533, 0.55 ) }
    dend_24 { pt3dadd( 51.6583, 96.7404, -21.6414, 0.55 ) }
    dend_24 { pt3dadd( 54.5458, 99.4739, -23.5438, 0.55 ) }
    dend_24 { pt3dadd( 55.703, 100.62, -24.316, 0.55 ) }
    dend_24 { pt3dadd( 56.6795, 101.679, -24.9668, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 57.9473, 103.31, -25.9302, 0.55 ) }
    dend_24 { pt3dadd( 59.0047, 104.916, -26.735, 0.55 ) }
    dend_24 { pt3dadd( 60.0403, 106.964, -27.6825, 0.55 ) }
    dend_24 { pt3dadd( 60.9202, 109.302, -28.6011, 0.55 ) }
    dend_24 { pt3dadd( 61.8173, 112.075, -29.6707, 0.55 ) }
    dend_24 { pt3dadd( 62.2756, 113.599, -30.2366, 0.55 ) }
    dend_24 { pt3dadd( 62.7042, 115.06, -30.7094, 0.55 ) }
    dend_24 { pt3dadd( 63.2674, 116.847, -31.3428, 0.55 ) }
    dend_24 { pt3dadd( 64.3208, 119.534, -32.377, 0.55 ) }
    dend_24 { pt3dadd( 65.7084, 122.106, -33.6445, 0.55 ) }
    dend_24 { pt3dadd( 66.4886, 123.203, -34.3622, 0.55 ) }
    dend_24 { pt3dadd( 67.2509, 124.1, -35.0482, 0.55 ) }
    dend_24 { pt3dadd( 69.4743, 126.392, -37.0569, 0.55 ) }
    dend_24 { pt3dadd( 70.371, 127.214, -37.8253, 0.55 ) }
    dend_24 { pt3dadd( 71.8813, 128.519, -39.1422, 0.55 ) }
    dend_24 { pt3dadd( 73.6405, 130.012, -40.6039, 0.55 ) }
    dend_24 { pt3dadd( 74.6756, 130.919, -41.4849, 0.28 ) }
    dend_24 { pt3dadd( 75.4216, 131.583, -42.1764, 0.28 ) }
    dend_24 { pt3dadd( 76.2191, 132.323, -42.9514, 0.55 ) }
    dend_24 { pt3dadd( 78.3045, 134.209, -44.9914, 0.55 ) }
    dend_24 { pt3dadd( 80.4584, 136.12, -47.1446, 0.55 ) }
    dend_24 { pt3dadd( 81.4872, 136.951, -48.2093, 0.83 ) }
    dend_24 { pt3dadd( 84.0748, 139.157, -51.691, 0.55 ) }
    dend_24 { pt3dadd( 85.466, 140.346, -53.9741, 0.55 ) }
    dend_24 { pt3dadd( 86.4655, 141.252, -55.8324, 0.55 ) }
    dend_24 { pt3dadd( 87.9655, 142.671, -59.0319, 0.55 ) }
    dend_24 { pt3dadd( 89.9344, 144.602, -63.5034, 0.55 ) }
    dend_24 { pt3dadd( 93.0714, 147.608, -71.0449, 0.55 ) }
    dend_24 { pt3dadd( 95.3683, 149.842, -76.8658, 0.55 ) }
    dend_24 { pt3dadd( 96.209, 150.664, -79.1302, 0.55 ) }
    dend_24 { pt3dadd( 97.9584, 152.394, -84.1373, 0.55 ) }
    dend_24 { pt3dadd( 98.9193, 153.32, -86.9351, 0.55 ) }
    dend_24 { pt3dadd( 100.487, 154.897, -91.4284, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.8858, 42.7393, -5.23191, 0.28 ) }
    dend_21 { pt3dadd( 19.7927, 45.2467, -4.41581, 0.28 ) }
    dend_21 { pt3dadd( 19.7685, 46.5567, -3.97919, 0.83 ) }
    dend_21 { pt3dadd( 19.7851, 48.6153, -3.27148, 0.55 ) }
    dend_21 { pt3dadd( 19.8217, 50.6541, -2.57483, 0.55 ) }
    dend_21 { pt3dadd( 19.8941, 53.3651, -1.68632, 0.28 ) }
    dend_21 { pt3dadd( 19.9564, 55.1586, -1.12801, 0.28 ) }
    dend_21 { pt3dadd( 20.0054, 55.8476, -0.93495, 0.55 ) }
    dend_21 { pt3dadd( 20.1193, 57.2674, -0.535658, 0.28 ) }
    dend_21 { pt3dadd( 20.2057, 58.0819, -0.327703, 0.55 ) }
    dend_21 { pt3dadd( 20.3429, 59.097, -0.092639, 0.28 ) }
    dend_21 { pt3dadd( 20.5273, 60.1294, 0.01563, 0.55 ) }
    dend_21 { pt3dadd( 20.7806, 61.6311, 0.0737809, 0.28 ) }
    dend_21 { pt3dadd( 20.7806, 61.6311, 0.0737809, 0.55 ) }
    dend_21 { pt3dadd( 21.2441, 63.4556, -0.00482903, 0.55 ) }
    dend_21 { pt3dadd( 21.7911, 65.1303, -0.215332, 0.83 ) }
    dend_21 { pt3dadd( 22.6392, 67.2032, -0.639832, 0.55 ) }
    dend_21 { pt3dadd( 23.1355, 68.2478, -0.910613, 0.55 ) }
    dend_21 { pt3dadd( 24.1089, 70.1061, -1.38588, 0.55 ) }
    dend_21 { pt3dadd( 25.0783, 71.8497, -1.7909, 0.28 ) }
    dend_21 { pt3dadd( 26.667, 74.592, -2.34247, 0.83 ) }
    dend_21 { pt3dadd( 27.6794, 76.3373, -2.61626, 0.28 ) }
    dend_21 { pt3dadd( 28.4158, 77.5746, -2.68064, 0.55 ) }
    dend_21 { pt3dadd( 29.6282, 79.6388, -2.70122, 0.28 ) }
    dend_21 { pt3dadd( 30.1612, 80.601, -2.6439, 0.55 ) }
    dend_21 { pt3dadd( 30.9808, 82.254, -2.35784, 0.28 ) }
    dend_21 { pt3dadd( 31.3421, 83.1249, -2.09549, 0.55 ) }
    dend_21 { pt3dadd( 32.0889, 85.0695, -1.46347, 0.28 ) }
    dend_21 { pt3dadd( 32.7043, 86.5768, -0.951671, 0.55 ) }
    dend_21 { pt3dadd( 33.3517, 88.0942, -0.453535, 0.28 ) }
    dend_21 { pt3dadd( 34.0156, 89.7099, 0.0490068, 0.55 ) }
    dend_21 { pt3dadd( 34.7379, 91.4326, 0.541847, 0.28 ) }
    dend_21 { pt3dadd( 35.7681, 93.9589, 1.15275, 0.55 ) }
    dend_21 { pt3dadd( 36.4482, 95.4948, 1.47332, 0.28 ) }
    dend_21 { pt3dadd( 36.7782, 96.1933, 1.65487, 0.55 ) }
    dend_21 { pt3dadd( 37.4519, 97.5191, 2.01997, 0.28 ) }
    dend_21 { pt3dadd( 37.9755, 98.476, 2.28498, 0.55 ) }
    dend_21 { pt3dadd( 38.7488, 99.8696, 2.66469, 0.55 ) }
    dend_21 { pt3dadd( 39.4998, 101.234, 3.11326, 0.55 ) }
    dend_21 { pt3dadd( 40.797, 103.559, 4.00697, 0.55 ) }
    dend_21 { pt3dadd( 41.8592, 105.514, 4.85359, 0.55 ) }
    dend_21 { pt3dadd( 42.9386, 107.535, 5.74446, 0.55 ) }
    dend_21 { pt3dadd( 44.2458, 110.15, 6.85702, 0.55 ) }
    dend_21 { pt3dadd( 45.5686, 112.934, 7.98505, 0.55 ) }
    dend_21 { pt3dadd( 46.2886, 114.535, 8.56814, 0.28 ) }
    dend_21 { pt3dadd( 46.9953, 116.033, 9.06527, 0.55 ) }
    dend_21 { pt3dadd( 47.7194, 117.564, 9.52319, 0.55 ) }
    dend_21 { pt3dadd( 48.1794, 118.523, 9.77039, 0.83 ) }
    dend_21 { pt3dadd( 49.2514, 120.853, 10.2361, 0.28 ) }
    dend_21 { pt3dadd( 50.1805, 123.028, 9.86479, 0.55 ) }
    dend_21 { pt3dadd( 51.0372, 125.104, 8.90088, 0.28 ) }
    dend_21 { pt3dadd( 51.3132, 125.817, 8.42159, 0.55 ) }
    dend_21 { pt3dadd( 52.1456, 128.137, 6.70165, 0.55 ) }
    dend_21 { pt3dadd( 52.5331, 129.352, 5.7112, 0.55 ) }
    dend_21 { pt3dadd( 54.9621, 137.806, -1.55093, 0.28 ) }
    dend_21 { pt3dadd( 55.4098, 139.494, -2.9722, 0.28 ) }
    dend_21 { pt3dadd( 55.7995, 141.064, -4.22488, 0.55 ) }
    dend_21 { pt3dadd( 56.3105, 143.1, -5.83971, 0.55 ) }
    dend_21 { pt3dadd( 56.544, 144.026, -6.54941, 0.55 ) }
    dend_21 { pt3dadd( 57.116, 146.113, -7.49938, 0.55 ) }
    dend_21 { pt3dadd( 57.8298, 148.515, -7.12079, 0.55 ) }
    dend_21 { pt3dadd( 58.1262, 149.565, -6.99293, 0.55 ) }
    dend_21 { pt3dadd( 63.7629, 157.313, -5.68372, 0.55 ) }
    dend_21 { pt3dadd( 70.2617, 164.532, -5.80981, 0.55 ) }
    dend_21 { pt3dadd( 75.7265, 172.412, -4.65315, 0.55 ) }
    dend_21 { pt3dadd( 81.2036, 180.312, -3.72688, 0.55 ) }
    dend_21 { pt3dadd( 85.2973, 188.77, -1.7349, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 90.5007, 196.305, 1.43064, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.98695, 12.8681, -3.33367, 0.55 ) }
    dend_16 { pt3dadd( 12.2176, 14.1489, -3.50878, 0.55 ) }
    dend_16 { pt3dadd( 14.3232, 15.3857, -3.548, 0.83 ) }
    dend_16 { pt3dadd( 16.4984, 16.6981, -3.52062, 0.28 ) }
    dend_16 { pt3dadd( 18.0649, 17.6461, -3.40414, 0.55 ) }
    dend_16 { pt3dadd( 19.891, 18.7401, -3.21161, 0.28 ) }
    dend_16 { pt3dadd( 21.2665, 19.5272, -3.08088, 0.83 ) }
    dend_16 { pt3dadd( 23.3525, 20.6768, -2.81674, 0.55 ) }
    dend_16 { pt3dadd( 25.0516, 21.5767, -2.54156, 0.83 ) }
    dend_16 { pt3dadd( 27.2301, 22.6502, -2.15127, 0.28 ) }
    dend_16 { pt3dadd( 28.6696, 23.2933, -1.92106, 0.55 ) }
    dend_16 { pt3dadd( 31.2344, 24.3561, -1.56433, 0.28 ) }
    dend_16 { pt3dadd( 33.3356, 25.193, -1.34945, 0.83 ) }
    dend_16 { pt3dadd( 35.0414, 25.8505, -1.2565, 0.28 ) }
    dend_16 { pt3dadd( 37.1216, 26.6188, -1.21624, 0.55 ) }
    dend_16 { pt3dadd( 39.5723, 27.5048, -1.25772, 0.28 ) }
    dend_16 { pt3dadd( 40.6468, 27.8963, -1.29651, 0.83 ) }
    dend_16 { pt3dadd( 43.0461, 28.7977, -1.39988, 0.28 ) }
    dend_16 { pt3dadd( 43.793, 29.0738, -1.46007, 0.55 ) }
    dend_16 { pt3dadd( 46.0919, 29.9242, -1.74034, 0.83 ) }
    dend_16 { pt3dadd( 48.0644, 30.6359, -2.01405, 0.28 ) }
    dend_16 { pt3dadd( 49.527, 31.1609, -2.25062, 0.83 ) }
    dend_16 { pt3dadd( 50.8508, 31.663, -2.48334, 0.28 ) }
    dend_16 { pt3dadd( 51.3725, 31.8675, -2.57273, 0.55 ) }
    dend_16 { pt3dadd( 52.994, 32.5513, -2.83924, 0.28 ) }
    dend_16 { pt3dadd( 54.7374, 33.3599, -3.17362, 0.83 ) }
    dend_16 { pt3dadd( 56.5807, 34.288, -3.51436, 0.28 ) }
    dend_16 { pt3dadd( 57.3306, 34.6973, -3.62677, 0.55 ) }
    dend_16 { pt3dadd( 59.2211, 35.7836, -3.87333, 0.28 ) }
    dend_16 { pt3dadd( 60.5585, 36.6386, -4.00463, 0.55 ) }
    dend_16 { pt3dadd( 63.2112, 38.46, -4.21914, 0.28 ) }
    dend_16 { pt3dadd( 64.0891, 39.1216, -4.26193, 0.83 ) }
    dend_16 { pt3dadd( 66.0471, 40.67, -4.28378, 0.28 ) }
    dend_16 { pt3dadd( 67.2645, 41.6861, -4.27256, 0.83 ) }
    dend_16 { pt3dadd( 70.1789, 44.3083, -4.18136, 0.28 ) }
    dend_16 { pt3dadd( 71.3683, 45.4224, -4.05224, 0.83 ) }
    dend_16 { pt3dadd( 73.5241, 47.4596, -3.69107, 0.28 ) }
    dend_16 { pt3dadd( 74.2434, 48.1338, -3.5458, 0.55 ) }
    dend_16 { pt3dadd( 75.2318, 49.0584, -3.29133, 0.28 ) }
    dend_16 { pt3dadd( 75.6646, 49.4494, -3.14043, 0.55 ) }
    dend_16 { pt3dadd( 77.8363, 51.2755, -2.13284, 0.28 ) }
    dend_16 { pt3dadd( 79.076, 52.2792, -1.57082, 0.55 ) }
    dend_16 { pt3dadd( 80.7797, 53.6081, -0.88869, 0.28 ) }
    dend_16 { pt3dadd( 81.3798, 54.0523, -0.633546, 0.83 ) }
    dend_16 { pt3dadd( 84.2449, 56.0579, 0.545466, 0.28 ) }
    dend_16 { pt3dadd( 85.6005, 56.9842, 1.09235, 0.55 ) }
    dend_16 { pt3dadd( 87.5592, 58.3202, 1.8441, 0.28 ) }
    dend_16 { pt3dadd( 88.9323, 59.2472, 2.36438, 0.83 ) }
    dend_16 { pt3dadd( 92.2083, 61.4024, 3.49501, 0.28 ) }
    dend_16 { pt3dadd( 94.3971, 62.8166, 4.32264, 0.55 ) }
    dend_16 { pt3dadd( 95.958, 63.8104, 4.93193, 0.28 ) }
    dend_16 { pt3dadd( 96.7484, 64.308, 5.27008, 0.55 ) }
    dend_16 { pt3dadd( 98.44, 65.3379, 6.07755, 0.28 ) }
    dend_16 { pt3dadd( 99.2365, 65.817, 6.45094, 0.55 ) }
    dend_16 { pt3dadd( 102.447, 67.7313, 7.76076, 0.28 ) }
    dend_16 { pt3dadd( 103.714, 68.4678, 8.25648, 0.83 ) }
    dend_16 { pt3dadd( 106.677, 70.069, 9.43673, 0.28 ) }
    dend_16 { pt3dadd( 107.631, 70.5501, 9.85486, 0.28 ) }
    dend_16 { pt3dadd( 108.618, 71.0183, 10.2805, 0.55 ) }
    dend_16 { pt3dadd( 110.058, 71.6921, 10.8889, 0.28 ) }
    dend_16 { pt3dadd( 111.252, 72.2215, 11.3117, 0.55 ) }
    dend_16 { pt3dadd( 113.857, 73.3057, 12.331, 0.28 ) }
    dend_16 { pt3dadd( 115.601, 73.9837, 13.0927, 0.83 ) }
    dend_16 { pt3dadd( 117.087, 74.5778, 13.8717, 0.28 ) }
    dend_16 { pt3dadd( 118.312, 75.056, 14.6574, 0.55 ) }
    dend_16 { pt3dadd( 126.966, 79.8137, 14.835, 0.55 ) }
    dend_16 { pt3dadd( 136.035, 83.7323, 13.9775, 0.55 ) }
    dend_16 { pt3dadd( 145.013, 87.7686, 15.1386, 0.55 ) }
    dend_16 { pt3dadd( 154.703, 90.0179, 15.8453, 0.55 ) }
    dend_16 { pt3dadd( 164.193, 93.0051, 15.6383, 0.55 ) }
    dend_16 { pt3dadd( 173.366, 96.3083, 13.6957, 0.55 ) }
    dend_16 { pt3dadd( 182.305, 99.7143, 11.0054, 0.55 ) }
    dend_16 { pt3dadd( 191.396, 101.165, 7.12984, 0.55 ) }
    dend_16 { pt3dadd( 200.711, 101.951, 3.5872, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.98695, 12.8681, -3.33367, 0.55 ) }
    dend_13 { pt3dadd( 10.8909, 16.2261, -1.21828, 0.55 ) }
    dend_13 { pt3dadd( 12.2359, 20.6653, 1.53897, 0.83 ) }
    dend_13 { pt3dadd( 12.894, 22.4354, 2.63783, 0.55 ) }
    dend_13 { pt3dadd( 13.5659, 24.2402, 3.83609, 0.83 ) }
    dend_13 { pt3dadd( 14.8785, 27.7965, 6.52797, 0.83 ) }
    dend_13 { pt3dadd( 15.6022, 29.6178, 8.01857, 0.55 ) }
    dend_13 { pt3dadd( 16.4384, 31.4064, 9.65528, 0.55 ) }
    dend_13 { pt3dadd( 17.0559, 32.6158, 10.9878, 0.55 ) }
    dend_13 { pt3dadd( 18.3588, 34.867, 13.6341, 0.55 ) }
    dend_13 { pt3dadd( 19.6882, 37.269, 16.7378, 0.55 ) }
    dend_13 { pt3dadd( 20.0964, 38.1885, 17.8082, 0.55 ) }
    dend_13 { pt3dadd( 23.7633, 45.474, 23.0751, 0.55 ) }
    dend_13 { pt3dadd( 27.5852, 52.5783, 28.5037, 0.55 ) }
    dend_13 { pt3dadd( 30.3778, 60.4265, 33.3979, 0.55 ) }
    dend_13 { pt3dadd( 33.4677, 68.0257, 38.5423, 0.55 ) }
    dend_13 { pt3dadd( 35.4817, 76.7974, 41.8118, 0.55 ) }
    dend_13 { pt3dadd( 39.49, 84.8562, 45.2719, 0.55 ) }
    dend_13 { pt3dadd( 44.9622, 92.2864, 48.2522, 0.55 ) }
    dend_13 { pt3dadd( 49.4146, 100.171, 51.6128, 0.55 ) }
    dend_13 { pt3dadd( 52.661, 108.469, 55.2413, 0.55 ) }
    dend_13 { pt3dadd( 55.6003, 117.078, 58.2807, 0.55 ) }
    dend_13 { pt3dadd( 56.8891, 125.728, 62.2096, 0.55 ) }
    dend_13 { pt3dadd( 56.9862, 134.637, 65.6797, 0.55 ) }
    dend_13 { pt3dadd( 55.9734, 143.403, 69.4003, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 54.9909, 152.003, 73.5323, 0.55 ) }
    dend_13 { pt3dadd( 53.3331, 160.958, 76.4321, 0.55 ) }
    dend_13 { pt3dadd( 52.1064, 169.887, 79.6164, 0.55 ) }
    dend_13 { pt3dadd( 51.6447, 178.605, 83.5647, 0.55 ) }
    dend_13 { pt3dadd( 51.357, 187.345, 87.473, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.75848, 17.8611, -1.78752, 0.28 ) }
    dend_11 { pt3dadd( 1.48642, 17.9875, -1.70585, 0.28 ) }
    dend_11 { pt3dadd( 0.944832, 18.0392, -1.69112, 0.55 ) }
    dend_11 { pt3dadd( -1.87486, 18.3085, -1.6144, 0.28 ) }
    dend_11 { pt3dadd( -2.64078, 18.3816, -1.59357, 0.55 ) }
    dend_11 { pt3dadd( -5.52549, 18.6572, -1.51509, 0.28 ) }
    dend_11 { pt3dadd( -7.01625, 18.7995, -1.47453, 0.28 ) }
    dend_11 { pt3dadd( -7.61817, 18.8474, -1.48195, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.75848, 17.8611, -1.78752, 0.83 ) }
    dend_2 { pt3dadd( 3.14779, 20.8341, -0.755694, 0.83 ) }
    dend_2 { pt3dadd( 3.6043, 24.3205, 0.454283, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 16.2292, -36.6741, 1.14311, 0.55 ) }
    dend_60 { pt3dadd( 18.6335, -37.0014, 3.4944, 0.55 ) }
    dend_60 { pt3dadd( 20.1104, -36.9661, 4.83448, 0.55 ) }
    dend_60 { pt3dadd( 22.7102, -36.6321, 7.03676, 0.55 ) }
    dend_60 { pt3dadd( 24.2007, -36.296, 8.26935, 0.55 ) }
    dend_60 { pt3dadd( 26.5023, -35.777, 10.1726, 0.55 ) }
    dend_60 { pt3dadd( 28.3821, -35.3532, 11.7271, 0.55 ) }
    dend_60 { pt3dadd( 30.7604, -34.621, 13.5173, 0.55 ) }
    dend_60 { pt3dadd( 32.8695, -33.7547, 15.0978, 0.55 ) }
    dend_60 { pt3dadd( 36.4762, -31.9604, 17.5854, 0.55 ) }
    dend_60 { pt3dadd( 43.8563, -29.2818, 23.7162, 0.55 ) }
    dend_60 { pt3dadd( 50.4665, -25.8602, 30.2989, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 28/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 16.2292, -36.6741, 1.14311, 0.55 ) }
    dend_57 { pt3dadd( 18.3797, -37.9794, 1.07716, 0.55 ) }
    dend_57 { pt3dadd( 21.0065, -39.5628, 0.99513, 0.28 ) }
    dend_57 { pt3dadd( 22.9821, -40.7766, 0.9014, 0.83 ) }
    dend_57 { pt3dadd( 25.3873, -42.2651, 0.828148, 0.28 ) }
    dend_57 { pt3dadd( 27.4305, -43.5648, 0.785957, 0.28 ) }
    dend_57 { pt3dadd( 28.5668, -44.3094, 0.762811, 0.55 ) }
    dend_57 { pt3dadd( 29.9572, -45.34, 0.73999, 0.28 ) }
    dend_57 { pt3dadd( 30.4317, -45.7365, 0.767976, 0.55 ) }
    dend_57 { pt3dadd( 32.0851, -47.1958, 0.984095, 0.28 ) }
    dend_57 { pt3dadd( 32.4895, -47.5654, 1.04354, 0.83 ) }
    dend_57 { pt3dadd( 33.4576, -48.527, 1.28039, 0.28 ) }
    dend_57 { pt3dadd( 34.134, -49.2078, 1.48208, 0.55 ) }
    dend_57 { pt3dadd( 36.0438, -51.1688, 2.11608, 0.28 ) }
    dend_57 { pt3dadd( 36.5613, -51.6852, 2.30158, 0.55 ) }
    dend_57 { pt3dadd( 37.7716, -52.8937, 2.73968, 0.28 ) }
    dend_57 { pt3dadd( 38.6197, -53.685, 3.07901, 0.55 ) }
    dend_57 { pt3dadd( 40.1512, -55.0295, 3.79608, 0.28 ) }
    dend_57 { pt3dadd( 40.946, -55.663, 4.29188, 0.55 ) }
    dend_57 { pt3dadd( 42.424, -56.797, 5.2607, 0.28 ) }
    dend_57 { pt3dadd( 42.9724, -57.1812, 5.61659, 0.55 ) }
    dend_57 { pt3dadd( 44.5706, -58.2521, 6.60732, 0.28 ) }
    dend_57 { pt3dadd( 45.4861, -58.8201, 7.12315, 0.55 ) }
    dend_57 { pt3dadd( 49.6227, -61.2452, 9.05944, 0.28 ) }
    dend_57 { pt3dadd( 51.1689, -61.9892, 9.59996, 0.55 ) }
    dend_57 { pt3dadd( 52.6535, -62.577, 9.91782, 0.28 ) }
    dend_57 { pt3dadd( 54.0146, -63.0021, 9.999, 0.55 ) }
    dend_57 { pt3dadd( 56.1993, -63.4855, 9.8058, 0.28 ) }
    dend_57 { pt3dadd( 57.6389, -63.7466, 9.55073, 0.55 ) }
    dend_57 { pt3dadd( 60.3437, -64.0435, 8.7814, 0.28 ) }
    dend_57 { pt3dadd( 61.8914, -64.1571, 8.41162, 0.55 ) }
    dend_57 { pt3dadd( 64.0842, -64.2734, 7.89326, 0.28 ) }
    dend_57 { pt3dadd( 65.4285, -64.25, 7.54852, 0.55 ) }
    dend_57 { pt3dadd( 74.5208, -68.1611, 6.93213, 0.55 ) }
    dend_57 { pt3dadd( 83.2123, -72.7319, 8.07604, 0.55 ) }
    dend_57 { pt3dadd( 92.4751, -76.2879, 7.63974, 0.55 ) }
    dend_57 { pt3dadd( 101.957, -79.0453, 8.92891, 0.55 ) }
    dend_57 { pt3dadd( 111.043, -82.4037, 11.1527, 0.55 ) }
    dend_57 { pt3dadd( 119.963, -84.4862, 15.1054, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -41.9207, -61.4239, -8.48245, 0.28 ) }
    dend_51 { pt3dadd( -42.8961, -61.8399, -7.29267, 0.28 ) }
    dend_51 { pt3dadd( -43.2787, -62.0146, -6.85814, 0.55 ) }
    dend_51 { pt3dadd( -45.2225, -62.7208, -4.16231, 0.28 ) }
    dend_51 { pt3dadd( -45.9884, -63.0282, -3.01895, 0.55 ) }
    dend_51 { pt3dadd( -48.2579, -64.1422, 0.515818, 0.28 ) }
    dend_51 { pt3dadd( -48.5674, -64.3201, 1.01068, 0.55 ) }
    dend_51 { pt3dadd( -49.3745, -64.9205, 2.4233, 0.55 ) }
    dend_51 { pt3dadd( -51.3772, -66.746, 6.34746, 0.55 ) }
    dend_51 { pt3dadd( -51.9091, -67.3486, 7.48472, 0.28 ) }
    dend_51 { pt3dadd( -52.5079, -67.9492, 8.61177, 0.55 ) }
    dend_51 { pt3dadd( -53.0102, -68.4152, 9.37444, 0.28 ) }
    dend_51 { pt3dadd( -53.4813, -68.8766, 10.1133, 0.55 ) }
    dend_51 { pt3dadd( -54.2842, -69.7666, 11.4059, 0.28 ) }
    dend_51 { pt3dadd( -54.7836, -70.3363, 12.0415, 0.55 ) }
    dend_51 { pt3dadd( -56.353, -71.7707, 14.0425, 0.28 ) }
    dend_51 { pt3dadd( -57.5607, -72.6721, 15.5934, 0.55 ) }
    dend_51 { pt3dadd( -62.8018, -74.9841, 23.7548, 0.55 ) }
    dend_51 { pt3dadd( -68.2106, -75.4008, 32.1543, 0.55 ) }
    dend_51 { pt3dadd( -74.209, -74.3883, 40.0842, 0.55 ) }
    dend_51 { pt3dadd( -79.4211, -74.1956, 48.6161, 0.55 ) }
    dend_51 { pt3dadd( -85.375, -75.1396, 56.5887, 0.55 ) }
    dend_51 { pt3dadd( -92.0414, -75.838, 64.0063, 0.55 ) }
    dend_51 { pt3dadd( -98.2195, -78.3576, 71.4087, 0.55 ) }
    dend_51 { pt3dadd( -103.17, -79.1185, 80.0605, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -41.9207, -61.4239, -8.48245, 0.28 ) }
    dend_50 { pt3dadd( -43.5063, -62.841, -8.48251, 0.28 ) }
    dend_50 { pt3dadd( -43.9224, -63.1906, -8.48597, 0.55 ) }
    dend_50 { pt3dadd( -45.242, -64.3587, -8.46967, 0.28 ) }
    dend_50 { pt3dadd( -46.7193, -65.6329, -8.43575, 0.55 ) }
    dend_50 { pt3dadd( -49.4065, -67.9348, -8.24145, 0.55 ) }
    dend_50 { pt3dadd( -51.2593, -69.5303, -8.06166, 0.28 ) }
    dend_50 { pt3dadd( -53.3047, -71.2832, -7.76991, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -55.8777, -73.5396, -7.32135, 0.55 ) }
    dend_50 { pt3dadd( -58.8124, -76.2731, -6.68739, 0.55 ) }
    dend_50 { pt3dadd( -60.3731, -77.7718, -6.30414, 0.28 ) }
    dend_50 { pt3dadd( -61.2019, -78.6091, -6.07421, 0.55 ) }
    dend_50 { pt3dadd( -62.1727, -79.6376, -5.80147, 0.28 ) }
    dend_50 { pt3dadd( -63.6953, -81.2141, -5.40857, 0.55 ) }
    dend_50 { pt3dadd( -65.0408, -82.5713, -5.1745, 0.28 ) }
    dend_50 { pt3dadd( -66.1422, -83.6802, -4.91561, 0.55 ) }
    dend_50 { pt3dadd( -67.246, -84.7736, -4.64091, 0.28 ) }
    dend_50 { pt3dadd( -69.1788, -86.5863, -4.10465, 0.55 ) }
    dend_50 { pt3dadd( -71.7052, -88.8242, -3.39363, 0.55 ) }
    dend_50 { pt3dadd( -72.9267, -89.8787, -3.02805, 0.55 ) }
    dend_50 { pt3dadd( -76.7325, -93.111, -1.86538, 0.55 ) }
    dend_50 { pt3dadd( -78.4286, -94.5858, -1.32722, 0.55 ) }
    dend_50 { pt3dadd( -80.2838, -96.2678, -0.718275, 0.28 ) }
    dend_50 { pt3dadd( -81.7578, -97.701, -0.249695, 0.28 ) }
    dend_50 { pt3dadd( -82.8429, -98.851, 0.0453647, 0.55 ) }
    dend_50 { pt3dadd( -83.8595, -100.034, 0.211556, 0.55 ) }
    dend_50 { pt3dadd( -84.9451, -101.386, 0.155698, 0.28 ) }
    dend_50 { pt3dadd( -85.7527, -102.488, 0.0806371, 0.55 ) }
    dend_50 { pt3dadd( -86.441, -103.478, -0.00476443, 0.28 ) }
    dend_50 { pt3dadd( -87.5591, -105.002, -0.104049, 0.55 ) }
    dend_50 { pt3dadd( -88.9996, -106.789, -0.182842, 0.55 ) }
    dend_50 { pt3dadd( -90.3169, -108.347, -0.255168, 0.55 ) }
    dend_50 { pt3dadd( -91.9409, -110.176, -0.329635, 0.28 ) }
    dend_50 { pt3dadd( -93.5544, -111.851, -0.366042, 0.55 ) }
    dend_50 { pt3dadd( -94.831, -113.096, -0.347803, 0.55 ) }
    dend_50 { pt3dadd( -96.1301, -114.245, -0.32457, 0.55 ) }
    dend_50 { pt3dadd( -97.746, -115.587, -0.285114, 0.83 ) }
    dend_50 { pt3dadd( -105.124, -121.937, 0.663544, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 0.779686, -41.8882, -0.676845, 0.83 ) }
    dend_46 { pt3dadd( 2.34985, -42.7763, -0.879205, 0.83 ) }
    dend_46 { pt3dadd( 4.05948, -43.6677, -1.08115, 0.83 ) }
    dend_46 { pt3dadd( 6.67025, -44.9292, -1.36589, 0.83 ) }
    dend_46 { pt3dadd( 9.66102, -46.2803, -1.66717, 0.83 ) }
    dend_46 { pt3dadd( 13.1378, -47.8076, -1.99301, 0.83 ) }
    dend_46 { pt3dadd( 15.9438, -49.0403, -2.256, 0.83 ) }
    dend_46 { pt3dadd( 20.3565, -50.9159, -2.68424, 0.83 ) }
    dend_46 { pt3dadd( 22.3571, -51.7552, -2.88314, 0.55 ) }
    dend_46 { pt3dadd( 24.1589, -52.4308, -3.0571, 0.55 ) }
    dend_46 { pt3dadd( 25.8849, -53.0639, -3.19732, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.779686, -41.8882, -0.676845, 1.11 ) }
    dend_31 { pt3dadd( -0.772903, -43.3684, -2.6603, 1.11 ) }
    dend_31 { pt3dadd( -5.19946, -47.5883, -8.31528, 0.83 ) }
    dend_31 { pt3dadd( -6.89509, -49.2048, -10.4815, 0.83 ) }
    dend_31 { pt3dadd( -8.19333, -50.4425, -12.14, 0.83 ) }
    dend_31 { pt3dadd( -9.80608, -51.98, -14.2003, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 100.487, 154.897, -91.4284, 0.55 ) }
    dend_26 { pt3dadd( 101.909, 154.912, -91.5686, 0.55 ) }
    dend_26 { pt3dadd( 104.804, 154.77, -92.2555, 0.55 ) }
    dend_26 { pt3dadd( 105.761, 154.715, -92.5272, 0.55 ) }
    dend_26 { pt3dadd( 107.799, 154.599, -93.1682, 0.55 ) }
    dend_26 { pt3dadd( 110.902, 154.475, -94.3001, 0.55 ) }
    dend_26 { pt3dadd( 113.988, 154.351, -95.4256, 0.55 ) }
    dend_26 { pt3dadd( 118.916, 154.122, -97.4369, 0.55 ) }
    dend_26 { pt3dadd( 120.028, 154.041, -97.9565, 0.83 ) }
    dend_26 { pt3dadd( 122.168, 153.879, -99.0357, 0.28 ) }
    dend_26 { pt3dadd( 124.486, 153.776, -100.33, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 100.487, 154.897, -91.4284, 0.55 ) }
    dend_25 { pt3dadd( 101.467, 156.403, -94.0928, 0.55 ) }
    dend_25 { pt3dadd( 102.802, 158.452, -97.7188, 0.55 ) }
    dend_25 { pt3dadd( 104.412, 160.925, -102.094, 0.28 ) }
    dend_25 { pt3dadd( 104.904, 161.68, -103.43, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 90.5007, 196.305, 1.43064, 0.55 ) }
    dend_23 { pt3dadd( 91.286, 205.723, 2.47769, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 90.5007, 196.305, 1.43064, 0.55 ) }
    dend_22 { pt3dadd( 98.5574, 201.887, 0.684377, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 200.711, 101.951, 3.5872, 0.55 ) }
    dend_18 { pt3dadd( 208.283, 106.827, 7.62813, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 200.711, 101.951, 3.5872, 0.55 ) }
    dend_17 { pt3dadd( 209.675, 104.897, 0.421166, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 51.357, 187.345, 87.473, 0.55 ) }
    dend_15 { pt3dadd( 53.2047, 195.784, 91.6768, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 51.357, 187.345, 87.473, 0.55 ) }
    dend_14 { pt3dadd( 53.5, 195.572, 91.9909, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.6043, 24.3205, 0.454283, 0.83 ) }
    dend_6 { pt3dadd( 4.59881, 26.1937, 0.640363, 0.83 ) }
    dend_6 { pt3dadd( 5.5979, 28.3209, 0.948372, 0.83 ) }
    dend_6 { pt3dadd( 6.32003, 30.2459, 1.31162, 0.28 ) }
    dend_6 { pt3dadd( 6.5707, 30.995, 1.43053, 1.11 ) }
    dend_6 { pt3dadd( 7.3149, 33.347, 1.80813, 0.28 ) }
    dend_6 { pt3dadd( 7.83463, 35.0268, 2.04586, 0.83 ) }
    dend_6 { pt3dadd( 8.44459, 37.2075, 2.30468, 0.28 ) }
    dend_6 { pt3dadd( 9.07939, 39.5275, 2.57887, 0.83 ) }
    dend_6 { pt3dadd( 9.9004, 42.546, 2.9762, 0.55 ) }
    dend_6 { pt3dadd( 10.2818, 44.0002, 3.19274, 1.11 ) }
    dend_6 { pt3dadd( 10.9001, 46.3814, 3.58447, 0.55 ) }
    dend_6 { pt3dadd( 11.4765, 48.5705, 3.90141, 0.83 ) }
    dend_6 { pt3dadd( 12.0544, 50.6127, 4.12671, 0.28 ) }
    dend_6 { pt3dadd( 12.6209, 52.5506, 4.31485, 0.83 ) }
    dend_6 { pt3dadd( 13.0488, 54.1709, 4.58527, 0.28 ) }
    dend_6 { pt3dadd( 13.2622, 55.0769, 4.75864, 0.55 ) }
    dend_6 { pt3dadd( 13.6612, 56.9069, 5.14201, 0.28 ) }
    dend_6 { pt3dadd( 13.9211, 58.1739, 5.39545, 0.83 ) }
    dend_6 { pt3dadd( 14.4059, 60.482, 5.80037, 0.83 ) }
    dend_6 { pt3dadd( 15.0131, 63.0664, 6.26664, 0.28 ) }
    dend_6 { pt3dadd( 15.2748, 64.3528, 6.6198, 0.55 ) }
    dend_6 { pt3dadd( 15.4443, 65.525, 7.00097, 0.28 ) }
    dend_6 { pt3dadd( 15.5428, 66.2901, 7.26859, 0.55 ) }
    dend_6 { pt3dadd( 15.7031, 67.7301, 7.73579, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 15.82, 68.8657, 8.04318, 0.83 ) }
    dend_6 { pt3dadd( 16.1794, 72.0481, 8.66909, 0.55 ) }
    dend_6 { pt3dadd( 16.3012, 73.2103, 8.89108, 0.83 ) }
    dend_6 { pt3dadd( 16.4428, 74.7793, 9.18064, 0.55 ) }
    dend_6 { pt3dadd( 16.611, 76.6172, 9.36399, 0.55 ) }
    dend_6 { pt3dadd( 16.7745, 78.2078, 9.4105, 0.28 ) }
    dend_6 { pt3dadd( 16.9072, 79.2802, 9.4034, 0.55 ) }
    dend_6 { pt3dadd( 17.1665, 80.9547, 9.31221, 0.28 ) }
    dend_6 { pt3dadd( 17.204, 81.2103, 9.3052, 0.55 ) }
    dend_6 { pt3dadd( 17.4872, 83.4668, 9.28429, 0.28 ) }
    dend_6 { pt3dadd( 17.7155, 84.985, 9.27782, 0.55 ) }
    dend_6 { pt3dadd( 17.9356, 86.2784, 9.33979, 0.28 ) }
    dend_6 { pt3dadd( 18.2065, 87.6772, 9.46939, 0.83 ) }
    dend_6 { pt3dadd( 18.5895, 89.2018, 9.67072, 0.83 ) }
    dend_6 { pt3dadd( 18.8898, 90.2836, 9.85859, 0.28 ) }
    dend_6 { pt3dadd( 19.2948, 91.5948, 10.2473, 0.55 ) }
    dend_6 { pt3dadd( 19.873, 93.3537, 10.6893, 0.28 ) }
    dend_6 { pt3dadd( 19.9592, 93.6064, 10.741, 0.55 ) }
    dend_6 { pt3dadd( 20.6419, 95.4744, 11.0626, 0.28 ) }
    dend_6 { pt3dadd( 20.8176, 96.0042, 11.1576, 0.55 ) }
    dend_6 { pt3dadd( 21.4205, 98.4341, 11.49, 0.28 ) }
    dend_6 { pt3dadd( 21.8793, 100.743, 11.8004, 0.55 ) }
    dend_6 { pt3dadd( 22.0134, 101.666, 11.9151, 0.28 ) }
    dend_6 { pt3dadd( 22.158, 102.992, 12.1064, 0.55 ) }
    dend_6 { pt3dadd( 22.3432, 105.646, 12.594, 0.55 ) }
    dend_6 { pt3dadd( 22.4304, 107.287, 12.926, 0.28 ) }
    dend_6 { pt3dadd( 22.5022, 109.08, 13.3094, 0.55 ) }
    dend_6 { pt3dadd( 22.5631, 110.714, 13.8222, 0.28 ) }
    dend_6 { pt3dadd( 22.5801, 111.202, 13.9955, 0.55 ) }
    dend_6 { pt3dadd( 22.5893, 112.414, 14.4555, 0.28 ) }
    dend_6 { pt3dadd( 22.5915, 113.442, 14.8391, 0.83 ) }
    dend_6 { pt3dadd( 25.9007, 122.323, 16.1315, 0.83 ) }
    dend_6 { pt3dadd( 28.7484, 131.183, 18.3462, 0.83 ) }
    dend_6 { pt3dadd( 30.143, 140.362, 20.5159, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.6043, 24.3205, 0.454283, 0.55 ) }
    dend_3 { pt3dadd( 2.17359, 26.3215, 1.033, 0.55 ) }
    dend_3 { pt3dadd( 1.88622, 26.7449, 1.15128, 0.55 ) }
    dend_3 { pt3dadd( 0.437234, 29.0142, 1.7347, 0.83 ) }
    dend_3 { pt3dadd( -1.11159, 31.5574, 2.26689, 0.55 ) }
    dend_3 { pt3dadd( -1.66738, 32.4978, 2.44097, 0.55 ) }
    dend_3 { pt3dadd( -2.38777, 33.7893, 2.6539, 0.55 ) }
    dend_3 { pt3dadd( -3.14471, 35.2761, 2.7866, 0.83 ) }
    dend_3 { pt3dadd( -4.13401, 37.1928, 2.85014, 0.28 ) }
    dend_3 { pt3dadd( -4.74639, 38.4475, 2.79776, 0.55 ) }
    dend_3 { pt3dadd( -5.15588, 39.3538, 2.69124, 0.28 ) }
    dend_3 { pt3dadd( -5.84334, 40.7913, 2.49541, 0.83 ) }
    dend_3 { pt3dadd( -6.90386, 42.9231, 2.2126, 0.55 ) }
    dend_3 { pt3dadd( -7.3942, 43.9049, 2.10834, 0.55 ) }
    dend_3 { pt3dadd( -8.65672, 46.4736, 1.95234, 0.55 ) }
    dend_3 { pt3dadd( -9.33167, 47.8642, 1.84692, 0.28 ) }
    dend_3 { pt3dadd( -10.1436, 49.5604, 1.82626, 0.55 ) }
    dend_3 { pt3dadd( -10.8915, 51.1939, 1.79429, 0.28 ) }
    dend_3 { pt3dadd( -11.6307, 52.8911, 1.75774, 0.28 ) }
    dend_3 { pt3dadd( -12.2707, 54.3833, 1.67746, 0.55 ) }
    dend_3 { pt3dadd( -13.4891, 57.1341, 1.45293, 0.55 ) }
    dend_3 { pt3dadd( -14.9671, 60.7012, 0.905666, 0.28 ) }
    dend_3 { pt3dadd( -16.096, 63.477, 0.423933, 0.83 ) }
    dend_3 { pt3dadd( -17.0055, 65.7313, 0.0775685, 0.55 ) }
    dend_3 { pt3dadd( -17.9119, 67.9895, -0.215453, 0.55 ) }
    dend_3 { pt3dadd( -18.5211, 69.6481, -0.381275, 0.55 ) }
    dend_3 { pt3dadd( -19.4489, 72.4473, -0.531499, 0.28 ) }
    dend_3 { pt3dadd( -20.1659, 74.8102, -0.635499, 0.55 ) }
    dend_3 { pt3dadd( -20.6978, 76.8095, -0.534648, 0.55 ) }
    dend_3 { pt3dadd( -20.9528, 77.9088, -0.446225, 0.28 ) }
    dend_3 { pt3dadd( -21.2005, 78.9211, -0.342266, 0.83 ) }
    dend_3 { pt3dadd( -21.7279, 80.7097, -0.133387, 0.28 ) }
    dend_3 { pt3dadd( -22.2983, 82.231, 0.059017, 0.55 ) }
    dend_3 { pt3dadd( -23.2698, 84.4448, 0.26591, 0.55 ) }
    dend_3 { pt3dadd( -24.1706, 86.1606, 0.401715, 0.55 ) }
    dend_3 { pt3dadd( -24.8639, 87.2787, 0.552727, 0.28 ) }
    dend_3 { pt3dadd( -25.2079, 87.7638, 0.635247, 0.55 ) }
    dend_3 { pt3dadd( -26.0023, 88.8214, 0.901383, 0.55 ) }
    dend_3 { pt3dadd( -27.6026, 90.7811, 1.45572, 0.28 ) }
    dend_3 { pt3dadd( -29.1045, 92.4527, 1.96292, 0.55 ) }
    dend_3 { pt3dadd( -30.5272, 93.9426, 2.31054, 0.28 ) }
    dend_3 { pt3dadd( -31.1237, 94.5424, 2.46077, 0.55 ) }
    dend_3 { pt3dadd( -32.503, 95.849, 2.82937, 0.28 ) }
    dend_3 { pt3dadd( -34.3018, 97.4185, 3.2893, 0.55 ) }
    dend_3 { pt3dadd( -35.9395, 98.6733, 3.64162, 0.28 ) }
    dend_3 { pt3dadd( -37.202, 99.5777, 3.90719, 0.55 ) }
    dend_3 { pt3dadd( -40.4564, 101.955, 4.71431, 0.55 ) }
    dend_3 { pt3dadd( -41.5489, 102.728, 5.01052, 0.55 ) }
    dend_3 { pt3dadd( -43.0091, 103.742, 5.41327, 0.55 ) }
    dend_3 { pt3dadd( -44.5087, 104.865, 5.84407, 0.55 ) }
    dend_3 { pt3dadd( -47.2813, 107.052, 6.77353, 0.55 ) }
    dend_3 { pt3dadd( -49.1707, 108.56, 7.48712, 0.55 ) }
    dend_3 { pt3dadd( -50.45, 109.559, 7.82955, 0.55 ) }
    dend_3 { pt3dadd( -52.8255, 111.463, 8.46068, 0.55 ) }
    dend_3 { pt3dadd( -54.8931, 113.156, 9.04489, 0.55 ) }
    dend_3 { pt3dadd( -57.0375, 114.95, 9.67018, 0.83 ) }
    dend_3 { pt3dadd( -59.5938, 116.981, 10.358, 0.28 ) }
    dend_3 { pt3dadd( -62.6674, 119.374, 10.9004, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 92/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 50.4665, -25.8602, 30.2989, 0.55 ) }
    dend_62 { pt3dadd( 57.1474, -23.7749, 37.4086, 0.55 ) }
    dend_62 { pt3dadd( 64.1557, -23.0224, 44.4977, 0.55 ) }
    dend_62 { pt3dadd( 70.5898, -21.594, 52.0038, 0.55 ) }
    dend_62 { pt3dadd( 76.5101, -21.3137, 60.0576, 0.55 ) }
    dend_62 { pt3dadd( 83.0451, -20.1099, 67.5201, 0.55 ) }
    dend_62 { pt3dadd( 88.302, -17.4678, 75.5593, 0.55 ) }
    dend_62 { pt3dadd( 93.4781, -14.1352, 83.3633, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( 100.189, -10.019, 89.3789, 0.55 ) }
    dend_62 { pt3dadd( 106.345, -5.62283, 95.7575, 0.55 ) }
    dend_62 { pt3dadd( 111.914, 0.0302034, 101.552, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 50.4665, -25.8602, 30.2989, 0.55 ) }
    dend_61 { pt3dadd( 58.5974, -23.2608, 35.4373, 0.55 ) }
    dend_61 { pt3dadd( 67.1555, -22.5692, 40.5587, 0.55 ) }
    dend_61 { pt3dadd( 75.5092, -22.9223, 46.0429, 0.55 ) }
    dend_61 { pt3dadd( 84.327, -24.4355, 50.4824, 0.55 ) }
    dend_61 { pt3dadd( 92.9162, -25.5426, 55.4692, 0.55 ) }
    dend_61 { pt3dadd( 100.866, -26.517, 61.4473, 0.55 ) }
    dend_61 { pt3dadd( 107.971, -27.0846, 68.4591, 0.55 ) }
    dend_61 { pt3dadd( 114.853, -26.3445, 75.6728, 0.55 ) }
    dend_61 { pt3dadd( 120.75, -25.3097, 83.675, 0.55 ) }
    dend_61 { pt3dadd( 125.861, -23.5516, 92.0688, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 14/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 119.963, -84.4862, 15.1054, 0.55 ) }
    dend_59 { pt3dadd( 128.585, -88.5474, 17.8253, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 16/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 119.963, -84.4862, 15.1054, 0.55 ) }
    dend_58 { pt3dadd( 128.928, -88.4692, 13.6679, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 18/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -103.17, -79.1185, 80.0605, 0.55 ) }
    dend_53 { pt3dadd( -108.726, -80.8351, 88.1765, 0.55 ) }
    dend_53 { pt3dadd( -112.728, -83.6786, 96.8383, 0.55 ) }
    dend_53 { pt3dadd( -116.83, -87.9424, 104.777, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 22/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -103.17, -79.1185, 80.0605, 0.55 ) }
    dend_52 { pt3dadd( -108.83, -80.6306, 88.1495, 0.55 ) }
    dend_52 { pt3dadd( -114.728, -82.977, 95.8379, 0.55 ) }
    dend_52 { pt3dadd( -122.315, -84.4204, 102.173, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 25.8849, -53.0639, -3.19732, 0.55 ) }
    dend_48 { pt3dadd( 28.8716, -53.0759, -3.86242, 0.55 ) }
    dend_48 { pt3dadd( 31.3692, -53.1192, -4.38279, 0.55 ) }
    dend_48 { pt3dadd( 34.0765, -53.1017, -4.91373, 0.55 ) }
    dend_48 { pt3dadd( 37.0208, -53.0869, -5.42664, 0.55 ) }
    dend_48 { pt3dadd( 40.7537, -52.9791, -6.02714, 0.55 ) }
    dend_48 { pt3dadd( 43.4887, -52.8594, -6.44458, 0.55 ) }
    dend_48 { pt3dadd( 46.6027, -52.5752, -6.90773, 0.55 ) }
    dend_48 { pt3dadd( 48.3289, -52.33, -7.13967, 0.55 ) }
    dend_48 { pt3dadd( 51.8287, -51.5371, -7.54235, 0.55 ) }
    dend_48 { pt3dadd( 53.5998, -51.0128, -7.69666, 0.55 ) }
    dend_48 { pt3dadd( 54.9363, -50.5413, -7.7821, 0.55 ) }
    dend_48 { pt3dadd( 58.0619, -49.2703, -7.96609, 0.55 ) }
    dend_48 { pt3dadd( 60.1729, -48.2768, -8.09121, 0.83 ) }
    dend_48 { pt3dadd( 61.5663, -47.5587, -8.16792, 0.55 ) }
    dend_48 { pt3dadd( 63.4104, -46.4855, -8.25752, 0.55 ) }
    dend_48 { pt3dadd( 67.3549, -44.0075, -8.43319, 0.55 ) }
    dend_48 { pt3dadd( 68.4738, -43.2422, -8.47508, 0.55 ) }
    dend_48 { pt3dadd( 69.1704, -42.7108, -8.5013, 0.83 ) }
    dend_48 { pt3dadd( 71.4116, -40.8284, -8.58426, 0.55 ) }
    dend_48 { pt3dadd( 72.8166, -39.511, -8.60692, 0.55 ) }
    dend_48 { pt3dadd( 74.5288, -37.7074, -8.54636, 0.55 ) }
    dend_48 { pt3dadd( 76.3731, -35.4734, -8.39089, 0.55 ) }
    dend_48 { pt3dadd( 78.8148, -32.3486, -8.07492, 0.55 ) }
    dend_48 { pt3dadd( 79.8466, -30.9803, -7.90092, 0.28 ) }
    dend_48 { pt3dadd( 81.6424, -28.5191, -7.49269, 0.55 ) }
    dend_48 { pt3dadd( 83.2845, -26.2498, -7.05377, 0.28 ) }
    dend_48 { pt3dadd( 84.0515, -25.1691, -6.82956, 0.55 ) }
    dend_48 { pt3dadd( 85.0078, -23.7532, -6.54243, 0.28 ) }
    dend_48 { pt3dadd( 85.3439, -23.2706, -6.47452, 0.55 ) }
    dend_48 { pt3dadd( 86.5333, -21.7218, -6.41578, 0.55 ) }
    dend_48 { pt3dadd( 88.9402, -18.9765, -6.55531, 0.55 ) }
    dend_48 { pt3dadd( 90.4604, -17.3803, -6.72829, 0.55 ) }
    dend_48 { pt3dadd( 91.8437, -16.0339, -6.90203, 0.55 ) }
    dend_48 { pt3dadd( 94.7428, -13.3237, -7.30219, 0.55 ) }
    dend_48 { pt3dadd( 97.7177, -10.5746, -7.78573, 0.55 ) }
    dend_48 { pt3dadd( 100.113, -8.37848, -8.23721, 0.55 ) }
    dend_48 { pt3dadd( 101.73, -6.95411, -8.55429, 0.55 ) }
    dend_48 { pt3dadd( 102.937, -5.94819, -8.77242, 0.83 ) }
    dend_48 { pt3dadd( 103.595, -5.41333, -8.88092, 0.83 ) }
    dend_48 { pt3dadd( 105.195, -4.13748, -9.08103, 0.55 ) }
    dend_48 { pt3dadd( 105.854, -3.58694, -9.16393, 0.83 ) }
    dend_48 { pt3dadd( 107.72, -1.94719, -9.41232, 0.28 ) }
    dend_48 { pt3dadd( 109.313, -0.545015, -9.60557, 0.55 ) }
    dend_48 { pt3dadd( 110.325, 0.337398, -9.68349, 0.55 ) }
    dend_48 { pt3dadd( 111.76, 1.59464, -9.76133, 0.55 ) }
    dend_48 { pt3dadd( 113.555, 3.14144, -9.80959, 0.28 ) }
    dend_48 { pt3dadd( 114.95, 4.31132, -9.8473, 0.55 ) }
    dend_48 { pt3dadd( 116.488, 5.50325, -9.9087, 0.83 ) }
    dend_48 { pt3dadd( 117.984, 6.51504, -9.98381, 0.55 ) }
    dend_48 { pt3dadd( 120.146, 7.67312, -9.9935, 0.28 ) }
    dend_48 { pt3dadd( 122.652, 8.79363, -9.94126, 0.55 ) }
    dend_48 { pt3dadd( 124.623, 9.51554, -9.8578, 0.55 ) }
    dend_48 { pt3dadd( 127.332, 10.339, -9.73714, 0.55 ) }
    dend_48 { pt3dadd( 129.803, 10.9718, -9.62624, 0.55 ) }
    dend_48 { pt3dadd( 133.319, 11.7738, -9.4621, 0.55 ) }
    dend_48 { pt3dadd( 135.353, 12.1758, -9.30692, 0.55 ) }
    dend_48 { pt3dadd( 138.365, 12.8313, -9.04688, 0.55 ) }
    dend_48 { pt3dadd( 139.736, 13.2209, -8.91623, 0.28 ) }
    dend_48 { pt3dadd( 142.158, 14.1777, -8.67398, 0.55 ) }
    dend_48 { pt3dadd( 143.053, 14.5827, -8.60149, 0.28 ) }
    dend_48 { pt3dadd( 143.854, 14.9969, -8.57171, 0.83 ) }
    dend_48 { pt3dadd( 146.458, 16.3155, -8.40374, 0.55 ) }
    dend_48 { pt3dadd( 148.478, 17.5155, -8.23768, 0.28 ) }
    dend_48 { pt3dadd( 150.098, 18.6512, -8.06844, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 25.8849, -53.0639, -3.19732, 0.55 ) }
    dend_47 { pt3dadd( 27.2432, -54.4595, -3.31833, 0.55 ) }
    dend_47 { pt3dadd( 28.7611, -56.0015, -3.41166, 0.55 ) }
    dend_47 { pt3dadd( 30.6169, -57.9084, -3.2717, 0.28 ) }
    dend_47 { pt3dadd( 31.3528, -58.6657, -3.16929, 0.28 ) }
    dend_47 { pt3dadd( 32.32, -59.6954, -2.8353, 0.55 ) }
    dend_47 { pt3dadd( 33.2679, -60.7131, -2.4216, 0.28 ) }
    dend_47 { pt3dadd( 34.4356, -61.9573, -1.80076, 0.55 ) }
    dend_47 { pt3dadd( 36.2749, -63.9883, -0.629621, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 37.3383, -65.1282, 0.132018, 0.55 ) }
    dend_47 { pt3dadd( 40.0507, -67.9149, 2.10306, 0.55 ) }
    dend_47 { pt3dadd( 41.7214, -69.6401, 3.30378, 0.55 ) }
    dend_47 { pt3dadd( 42.7628, -70.6721, 3.9908, 0.28 ) }
    dend_47 { pt3dadd( 43.2387, -71.144, 4.29491, 0.55 ) }
    dend_47 { pt3dadd( 45.243, -73.1085, 5.44514, 0.28 ) }
    dend_47 { pt3dadd( 46.1224, -73.9974, 5.9728, 0.55 ) }
    dend_47 { pt3dadd( 47.7379, -75.6452, 6.89485, 0.55 ) }
    dend_47 { pt3dadd( 49.2402, -77.186, 7.85211, 0.55 ) }
    dend_47 { pt3dadd( 50.7701, -78.8134, 8.88889, 0.28 ) }
    dend_47 { pt3dadd( 51.1404, -79.2122, 9.13983, 0.55 ) }
    dend_47 { pt3dadd( 52.8219, -81.1744, 10.3723, 0.28 ) }
    dend_47 { pt3dadd( 52.9686, -81.3447, 10.4958, 0.55 ) }
    dend_47 { pt3dadd( 53.8638, -82.4333, 11.4397, 0.28 ) }
    dend_47 { pt3dadd( 54.2416, -83.0166, 11.9399, 0.55 ) }
    dend_47 { pt3dadd( 60.8361, -88.5097, 16.744, 0.55 ) }
    dend_47 { pt3dadd( 65.8315, -95.2894, 21.6548, 0.55 ) }
    dend_47 { pt3dadd( 69.0891, -103.067, 26.3839, 0.55 ) }
    dend_47 { pt3dadd( 73.2395, -111.011, 29.9671, 0.55 ) }
    dend_47 { pt3dadd( 78.0879, -118.246, 34.2673, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_31 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.80608, -51.98, -14.2003, 0.55 ) }
    dend_45 { pt3dadd( -10.6554, -51.627, -15.2936, 0.55 ) }
    dend_45 { pt3dadd( -12.567, -50.8426, -17.6284, 0.55 ) }
    dend_45 { pt3dadd( -15.4129, -49.5043, -20.8554, 0.28 ) }
    dend_45 { pt3dadd( -16.1966, -49.1357, -21.744, 0.83 ) }
    dend_45 { pt3dadd( -18.7987, -47.9121, -24.6946, 0.55 ) }
    dend_45 { pt3dadd( -21.1348, -46.8135, -27.3435, 0.55 ) }
    dend_45 { pt3dadd( -21.8756, -46.4836, -28.2499, 0.28 ) }
    dend_45 { pt3dadd( -23.3134, -45.9693, -30.0799, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.80608, -51.98, -14.2003, 0.83 ) }
    dend_32 { pt3dadd( -11.2166, -54.0789, -14.2003, 0.83 ) }
    dend_32 { pt3dadd( -12.9647, -56.6802, -14.2003, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 30.143, 140.362, 20.5159, 0.83 ) }
    dend_10 { pt3dadd( 33.1397, 149.359, 21.6677, 0.83 ) }
    dend_10 { pt3dadd( 37.0837, 158.085, 21.4119, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 30.143, 140.362, 20.5159, 0.55 ) }
    dend_7 { pt3dadd( 30.1744, 149.564, 22.9981, 0.83 ) }
    dend_7 { pt3dadd( 30.2053, 158.956, 24.5057, 0.83 ) }
    dend_7 { pt3dadd( 29.653, 168.054, 27.3292, 0.83 ) }
    dend_7 { pt3dadd( 30.3605, 177.229, 29.8261, 0.83 ) }
    dend_7 { pt3dadd( 30.6264, 186.356, 32.5879, 0.83 ) }
    dend_7 { pt3dadd( 29.2317, 195.61, 34.3651, 0.83 ) }
    dend_7 { pt3dadd( 27.1156, 204.818, 35.6217, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -62.6674, 119.374, 10.9004, 0.28 ) }
    dend_5 { pt3dadd( -66.6624, 118.719, 13.0881, 0.28 ) }
    dend_5 { pt3dadd( -67.8768, 118.52, 13.7532, 0.28 ) }
    dend_5 { pt3dadd( -69.5152, 118.251, 14.6504, 0.55 ) }
    dend_5 { pt3dadd( -71.0183, 118.005, 15.4735, 0.28 ) }
    dend_5 { pt3dadd( -72.5466, 117.755, 16.3105, 0.28 ) }
    dend_5 { pt3dadd( -75.2682, 117.308, 17.8009, 0.83 ) }
    dend_5 { pt3dadd( -83.8922, 114.97, 22.2247, 0.83 ) }
    dend_5 { pt3dadd( -92.0517, 113.562, 27.8128, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -62.6674, 119.374, 10.9004, 0.28 ) }
    dend_4 { pt3dadd( -65.2188, 121.347, 11.7278, 0.28 ) }
    dend_4 { pt3dadd( -67.8897, 123.313, 12.676, 0.55 ) }
    dend_4 { pt3dadd( -70.2242, 125.055, 13.5909, 0.55 ) }
    dend_4 { pt3dadd( -70.8098, 125.485, 13.8497, 0.55 ) }
    dend_4 { pt3dadd( -72.1615, 126.541, 14.505, 0.28 ) }
    dend_4 { pt3dadd( -73.4268, 127.532, 15.1097, 0.55 ) }
    dend_4 { pt3dadd( -74.989, 128.7, 15.9939, 0.28 ) }
    dend_4 { pt3dadd( -76.0269, 129.413, 16.6149, 0.28 ) }
    dend_4 { pt3dadd( -78.0721, 130.808, 17.9411, 0.55 ) }
    dend_4 { pt3dadd( -80.2032, 132.235, 19.3676, 0.28 ) }
    dend_4 { pt3dadd( -82.2735, 133.601, 20.7996, 0.55 ) }
    dend_4 { pt3dadd( -84.9998, 135.348, 22.5995, 0.28 ) }
    dend_4 { pt3dadd( -86.0923, 136.041, 23.3219, 0.55 ) }
    dend_4 { pt3dadd( -93.0495, 140.842, 28.4267, 0.55 ) }
    dend_4 { pt3dadd( -100.132, 144.946, 34.01, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.9647, -56.6802, -14.2003, 0.55 ) }
    dend_40 { pt3dadd( -12.8152, -58.1821, -14.3968, 0.55 ) }
    dend_40 { pt3dadd( -12.7389, -60.3885, -14.7071, 0.55 ) }
    dend_40 { pt3dadd( -12.6941, -63.8153, -15.2467, 0.55 ) }
    dend_40 { pt3dadd( -12.8942, -67.7552, -15.9312, 0.55 ) }
    dend_40 { pt3dadd( -13.1619, -70.6869, -16.5502, 0.55 ) }
    dend_40 { pt3dadd( -13.5007, -72.8654, -17.0923, 0.55 ) }
    dend_40 { pt3dadd( -13.9055, -74.3302, -17.5269, 0.55 ) }
    dend_40 { pt3dadd( -14.7379, -76.7902, -18.3115, 0.55 ) }
    dend_40 { pt3dadd( -15.8941, -79.711, -19.3157, 0.55 ) }
    dend_40 { pt3dadd( -16.8174, -82.1353, -20.2207, 0.55 ) }
    dend_40 { pt3dadd( -17.8558, -85.0211, -21.2847, 0.55 ) }
    dend_40 { pt3dadd( -19.1581, -89.2682, -22.8722, 0.55 ) }
    dend_40 { pt3dadd( -20.0106, -92.4244, -24.0263, 0.55 ) }
    dend_40 { pt3dadd( -21.0254, -96.7048, -25.4899, 0.55 ) }
    dend_40 { pt3dadd( -21.6579, -100.337, -26.6321, 0.55 ) }
    dend_40 { pt3dadd( -21.9998, -102.75, -27.2601, 0.55 ) }
    dend_40 { pt3dadd( -22.2775, -105.652, -27.873, 0.55 ) }
    dend_40 { pt3dadd( -22.3877, -107.287, -28.15, 0.55 ) }
    dend_40 { pt3dadd( -22.6194, -110.946, -28.62, 0.55 ) }
    dend_40 { pt3dadd( -22.6263, -112.363, -28.7096, 0.55 ) }
    dend_40 { pt3dadd( -22.6984, -115.71, -28.7597, 0.55 ) }
    dend_40 { pt3dadd( -22.6669, -118.37, -28.7327, 0.55 ) }
    dend_40 { pt3dadd( -22.6177, -120.13, -28.63, 0.55 ) }
    dend_40 { pt3dadd( -22.5715, -121.321, -28.5457, 0.55 ) }
    dend_40 { pt3dadd( -22.3895, -123.162, -28.3712, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.9647, -56.6802, -14.2003, 0.55 ) }
    dend_33 { pt3dadd( -13.8163, -59.348, -13.6415, 0.55 ) }
    dend_33 { pt3dadd( -14.7132, -62.7233, -13.0173, 0.55 ) }
    dend_33 { pt3dadd( -15.3288, -65.3279, -12.6153, 0.55 ) }
    dend_33 { pt3dadd( -16.3577, -70.0432, -11.9831, 0.55 ) }
    dend_33 { pt3dadd( -16.8085, -71.9323, -11.7535, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -17.3818, -74.2268, -11.4737, 0.55 ) }
    dend_33 { pt3dadd( -17.8975, -76.3412, -11.2256, 0.55 ) }
    dend_33 { pt3dadd( -19.0513, -80.6772, -10.684, 0.55 ) }
    dend_33 { pt3dadd( -19.7858, -82.9135, -10.2751, 0.55 ) }
    dend_33 { pt3dadd( -20.6701, -85.2785, -9.58811, 0.55 ) }
    dend_33 { pt3dadd( -22.0303, -88.4099, -8.43393, 0.55 ) }
    dend_33 { pt3dadd( -23.2319, -90.8876, -7.32955, 0.55 ) }
    dend_33 { pt3dadd( -24.3166, -92.9687, -6.27433, 0.55 ) }
    dend_33 { pt3dadd( -25.6307, -95.4393, -4.85129, 0.55 ) }
    dend_33 { pt3dadd( -27.183, -98.5479, -2.91834, 0.55 ) }
    dend_33 { pt3dadd( -27.7432, -99.9306, -2.07123, 0.55 ) }
    dend_33 { pt3dadd( -28.0264, -100.845, -1.5364, 0.83 ) }
    dend_33 { pt3dadd( -28.3416, -102.727, -0.5694, 0.83 ) }
    dend_33 { pt3dadd( -28.3953, -104.278, 0.0694711, 0.83 ) }
    dend_33 { pt3dadd( -27.9872, -107.749, 1.27329, 0.55 ) }
    dend_33 { pt3dadd( -27.4898, -110.211, 1.97475, 0.83 ) }
    dend_33 { pt3dadd( -27.116, -111.878, 2.54984, 0.55 ) }
    dend_33 { pt3dadd( -26.7939, -113.432, 3.13908, 0.55 ) }
    dend_33 { pt3dadd( -26.2521, -116.185, 4.2873, 0.55 ) }
    dend_33 { pt3dadd( -26.0189, -117.99, 5.11749, 0.55 ) }
    dend_33 { pt3dadd( -26.0365, -119.426, 5.80999, 0.55 ) }
    dend_33 { pt3dadd( -26.6023, -122.845, 7.5453, 0.55 ) }
    dend_33 { pt3dadd( -27.0644, -124.73, 8.45478, 0.55 ) }
    dend_33 { pt3dadd( -27.5144, -126.342, 9.142, 0.55 ) }
    dend_33 { pt3dadd( -28.1731, -128.936, 10.0883, 0.55 ) }
    dend_33 { pt3dadd( -28.9338, -132.062, 11.0205, 0.55 ) }
    dend_33 { pt3dadd( -29.3744, -134.069, 11.5276, 0.55 ) }
    dend_33 { pt3dadd( -29.8484, -136.584, 12.0583, 0.55 ) }
    dend_33 { pt3dadd( -30.6796, -141.214, 12.9409, 0.55 ) }
    dend_33 { pt3dadd( -31.4419, -145.563, 13.5998, 0.55 ) }
    dend_33 { pt3dadd( -31.7625, -147.654, 13.8851, 0.55 ) }
    dend_33 { pt3dadd( -32.2178, -150.888, 14.3324, 0.55 ) }
    dend_33 { pt3dadd( -32.9594, -155.725, 15.0214, 0.83 ) }
    dend_33 { pt3dadd( -33.9096, -160.882, 15.7593, 0.83 ) }
    dend_33 { pt3dadd( -34.3509, -163.041, 16.0482, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.1156, 204.818, 35.6217, 0.83 ) }
    dend_9 { pt3dadd( 26.5642, 214.151, 37.4031, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 27.1156, 204.818, 35.6217, 0.55 ) }
    dend_8 { pt3dadd( 26.718, 214.056, 37.9171, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -22.3895, -123.162, -28.3712, 0.55 ) }
    dend_44 { pt3dadd( -21.5399, -124.496, -28.7673, 0.55 ) }
    dend_44 { pt3dadd( -20.6887, -125.841, -29.1299, 0.55 ) }
    dend_44 { pt3dadd( -19.2726, -128.177, -29.7081, 0.55 ) }
    dend_44 { pt3dadd( -17.8941, -130.433, -30.2653, 0.55 ) }
    dend_44 { pt3dadd( -16.9506, -131.935, -30.6119, 0.55 ) }
    dend_44 { pt3dadd( -16.0257, -133.381, -30.9185, 0.55 ) }
    dend_44 { pt3dadd( -14.6022, -135.79, -31.3659, 0.55 ) }
    dend_44 { pt3dadd( -13.589, -137.539, -31.6332, 0.55 ) }
    dend_44 { pt3dadd( -13.1451, -138.355, -31.7326, 0.55 ) }
    dend_44 { pt3dadd( -11.7665, -141.009, -32.007, 0.83 ) }
    dend_44 { pt3dadd( -10.8207, -142.857, -32.2015, 0.55 ) }
    dend_44 { pt3dadd( -9.57141, -145.176, -32.4166, 0.55 ) }
    dend_44 { pt3dadd( -8.58926, -147.02, -32.5719, 0.55 ) }
    dend_44 { pt3dadd( -7.39394, -149.309, -32.7422, 0.55 ) }
    dend_44 { pt3dadd( -5.93521, -152.2, -32.9325, 0.55 ) }
    dend_44 { pt3dadd( -5.03221, -154.047, -33.0667, 0.55 ) }
    dend_44 { pt3dadd( -4.18198, -155.837, -33.2204, 0.55 ) }
    dend_44 { pt3dadd( -3.62516, -157.024, -33.3076, 0.55 ) }
    dend_44 { pt3dadd( -3.24203, -158.012, -33.3445, 0.28 ) }
    dend_44 { pt3dadd( -3.03698, -158.738, -33.3292, 0.55 ) }
    dend_44 { pt3dadd( -2.86062, -159.583, -33.3059, 0.28 ) }
    dend_44 { pt3dadd( -2.67864, -160.851, -33.3006, 0.55 ) }
    dend_44 { pt3dadd( -2.39338, -162.713, -33.3472, 0.28 ) }
    dend_44 { pt3dadd( -2.00318, -164.69, -33.3495, 0.55 ) }
    dend_44 { pt3dadd( -1.60364, -166.523, -33.3522, 0.55 ) }
    dend_44 { pt3dadd( -1.29822, -167.973, -33.3708, 0.55 ) }
    dend_44 { pt3dadd( -0.848348, -169.819, -33.4252, 0.55 ) }
    dend_44 { pt3dadd( -0.455735, -171.462, -33.4038, 0.55 ) }
    dend_44 { pt3dadd( 0.154505, -174.071, -33.4364, 0.83 ) }
    dend_44 { pt3dadd( 0.498857, -175.5, -33.4457, 0.28 ) }
    dend_44 { pt3dadd( 0.948141, -177.614, -33.4562, 0.28 ) }
    dend_44 { pt3dadd( 1.32828, -179.68, -33.469, 0.28 ) }
    dend_44 { pt3dadd( 2.0357, -183.781, -33.5248, 0.55 ) }
    dend_44 { pt3dadd( 2.50947, -186.774, -33.6122, 1.66 ) }
    dend_44 { pt3dadd( 3.03318, -190.057, -33.749, 0.55 ) }
    dend_44 { pt3dadd( 3.58143, -193.228, -33.8692, 0.55 ) }
    dend_44 { pt3dadd( 4.1774, -196.788, -34.0134, 0.28 ) }
    dend_44 { pt3dadd( 4.5592, -199.507, -34.147, 0.55 ) }
    dend_44 { pt3dadd( 4.92882, -202.505, -34.3112, 0.28 ) }
    dend_44 { pt3dadd( 5.087, -204.262, -34.3359, 0.83 ) }
    dend_44 { pt3dadd( 5.21948, -206.516, -34.3444, 0.55 ) }
    dend_44 { pt3dadd( 5.32321, -208.669, -34.2954, 0.55 ) }
    dend_44 { pt3dadd( 5.30531, -210.795, -34.2185, 0.83 ) }
    dend_44 { pt3dadd( 5.19541, -212.905, -34.1328, 0.28 ) }
    dend_44 { pt3dadd( 5.19541, -212.905, -34.1328, 0.55 ) }
    dend_44 { pt3dadd( 5.05146, -214.256, -34.1337, 0.28 ) }
    dend_44 { pt3dadd( 4.98639, -214.77, -34.1429, 0.55 ) }
    dend_44 { pt3dadd( 4.88592, -216.23, -34.2212, 0.28 ) }
    dend_44 { pt3dadd( 4.87007, -217.535, -34.371, 0.55 ) }
    dend_44 { pt3dadd( 4.9583, -219.938, -34.8322, 0.28 ) }
    dend_44 { pt3dadd( 4.99299, -220.517, -34.9432, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -22.3895, -123.162, -28.3712, 0.55 ) }
    dend_41 { pt3dadd( -22.2875, -124.783, -28.3335, 0.55 ) }
    dend_41 { pt3dadd( -22.2527, -125.577, -28.3043, 0.28 ) }
    dend_41 { pt3dadd( -22.1955, -126.397, -28.2682, 0.55 ) }
    dend_41 { pt3dadd( -21.9326, -128.808, -28.1582, 0.28 ) }
    dend_41 { pt3dadd( -21.8903, -129.074, -28.1642, 0.55 ) }
    dend_41 { pt3dadd( -21.4988, -131.161, -28.2778, 0.28 ) }
    dend_41 { pt3dadd( -21.2838, -132.106, -28.3481, 0.55 ) }
    dend_41 { pt3dadd( -20.9904, -133.394, -28.4751, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -20.6485, -135.119, -28.6884, 0.55 ) }
    dend_41 { pt3dadd( -20.252, -137.498, -29.0428, 0.28 ) }
    dend_41 { pt3dadd( -20.1888, -138.075, -29.147, 0.55 ) }
    dend_41 { pt3dadd( -20.1872, -139.384, -29.4264, 0.28 ) }
    dend_41 { pt3dadd( -20.2006, -139.948, -29.5555, 0.55 ) }
    dend_41 { pt3dadd( -20.3823, -141.517, -29.9269, 0.28 ) }
    dend_41 { pt3dadd( -20.5549, -142.268, -30.0952, 0.55 ) }
    dend_41 { pt3dadd( -21.0595, -143.74, -30.3323, 0.28 ) }
    dend_41 { pt3dadd( -21.7258, -145.526, -30.6832, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -34.3509, -163.041, 16.0482, 0.55 ) }
    dend_39 { pt3dadd( -35.1178, -164.161, 15.8682, 0.55 ) }
    dend_39 { pt3dadd( -37.0896, -167.039, 15.4053, 0.55 ) }
    dend_39 { pt3dadd( -39.2309, -170.164, 14.9027, 0.55 ) }
    dend_39 { pt3dadd( -40.7017, -172.311, 14.5575, 0.55 ) }
    dend_39 { pt3dadd( -46.5987, -179.974, 14.1538, 0.55 ) }
    dend_39 { pt3dadd( -52.5866, -187.569, 13.6683, 0.55 ) }
    dend_39 { pt3dadd( -60.1572, -193.69, 14.7474, 0.55 ) }
    dend_39 { pt3dadd( -68.1937, -199.322, 15.2661, 0.55 ) }
    dend_39 { pt3dadd( -76.5264, -204.536, 15.9337, 0.55 ) }
    dend_39 { pt3dadd( -85.0013, -209.107, 18.1758, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -34.3509, -163.041, 16.0482, 0.55 ) }
    dend_34 { pt3dadd( -34.862, -164.55, 16.5636, 0.55 ) }
    dend_34 { pt3dadd( -35.3458, -166.477, 17.1446, 0.55 ) }
    dend_34 { pt3dadd( -36.4039, -170.691, 18.4151, 0.55 ) }
    dend_34 { pt3dadd( -37.4244, -174.756, 19.6405, 0.55 ) }
    dend_34 { pt3dadd( -38.1109, -177.49, 20.4648, 0.55 ) }
    dend_34 { pt3dadd( -38.7955, -180.217, 21.2868, 0.55 ) }
    dend_34 { pt3dadd( -39.6205, -183.642, 22.3973, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -21.7258, -145.526, -30.6832, 0.28 ) }
    dend_43 { pt3dadd( -22.9945, -148.812, -31.5189, 0.28 ) }
    dend_43 { pt3dadd( -23.3418, -149.832, -31.7975, 0.55 ) }
    dend_43 { pt3dadd( -24.3324, -152.673, -32.5876, 0.28 ) }
    dend_43 { pt3dadd( -24.7859, -153.973, -32.9492, 0.55 ) }
    dend_43 { pt3dadd( -25.809, -156.908, -33.7652, 0.28 ) }
    dend_43 { pt3dadd( -26.506, -158.907, -34.3211, 0.83 ) }
    dend_43 { pt3dadd( -27.0948, -161.026, -34.9881, 0.28 ) }
    dend_43 { pt3dadd( -27.4926, -162.609, -35.5018, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -21.7258, -145.526, -30.6832, 0.55 ) }
    dend_42 { pt3dadd( -21.6442, -146.9, -30.303, 0.55 ) }
    dend_42 { pt3dadd( -21.5154, -148.813, -29.6727, 0.55 ) }
    dend_42 { pt3dadd( -21.4491, -150.938, -29.0179, 0.55 ) }
    dend_42 { pt3dadd( -21.406, -152.391, -28.5847, 0.55 ) }
    dend_42 { pt3dadd( -21.3708, -153.497, -28.2702, 0.28 ) }
    dend_42 { pt3dadd( -21.3369, -155.603, -27.7075, 0.55 ) }
    dend_42 { pt3dadd( -21.3188, -157.809, -27.1238, 0.28 ) }
    dend_42 { pt3dadd( -21.3321, -160.417, -26.6418, 0.55 ) }
    dend_42 { pt3dadd( -21.365, -161.88, -26.4735, 0.28 ) }
    dend_42 { pt3dadd( -21.4293, -162.947, -26.4138, 0.55 ) }
    dend_42 { pt3dadd( -21.5322, -164.134, -26.3775, 0.28 ) }
    dend_42 { pt3dadd( -21.6377, -165.182, -26.3865, 0.55 ) }
    dend_42 { pt3dadd( -21.9029, -167.906, -26.6187, 0.28 ) }
    dend_42 { pt3dadd( -22.1198, -170.181, -26.891, 0.28 ) }
    dend_42 { pt3dadd( -22.289, -171.561, -27.1026, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -39.6205, -183.642, 22.3973, 0.28 ) }
    dend_36 { pt3dadd( -37.4298, -184.172, 22.0997, 0.28 ) }
    dend_36 { pt3dadd( -36.8485, -184.313, 22.0208, 0.55 ) }
    dend_36 { pt3dadd( -35.181, -184.716, 21.7943, 0.28 ) }
    dend_36 { pt3dadd( -34.0562, -184.988, 21.6415, 0.55 ) }
    dend_36 { pt3dadd( -32.3009, -185.413, 21.4031, 0.28 ) }
    dend_36 { pt3dadd( -31.4648, -185.615, 21.2895, 0.55 ) }
    dend_36 { pt3dadd( -22.1461, -188.643, 19.556, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -39.6205, -183.642, 22.3973, 0.55 ) }
    dend_35 { pt3dadd( -40.0205, -186.787, 22.4273, 0.55 ) }
    dend_35 { pt3dadd( -39.866, -196.216, 23.6377, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.1461, -188.643, 19.556, 0.55 ) }
    dend_38 { pt3dadd( -12.6363, -191.344, 18.3387, 0.55 ) }
    dend_38 { pt3dadd( -2.78577, -192.792, 17.5374, 0.55 ) }
    dend_38 { pt3dadd( 7.12089, -193.853, 16.7558, 0.55 ) }
    dend_38 { pt3dadd( 16.9623, -193.125, 15.1557, 0.55 ) }
    dend_38 { pt3dadd( 26.9229, -192.359, 14.7874, 0.55 ) }
    dend_38 { pt3dadd( 36.5691, -190.144, 13.5551, 0.55 ) }
    dend_38 { pt3dadd( 45.8913, -186.73, 13.9746, 0.55 ) }
    dend_38 { pt3dadd( 54.1784, -181.439, 14.536, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.1461, -188.643, 19.556, 0.55 ) }
    dend_37 { pt3dadd( -12.7279, -191.353, 17.779, 0.55 ) }
    dend_37 { pt3dadd( -3.19193, -194.213, 17.7117, 0.55 ) }
    dend_37 { pt3dadd( 6.55763, -196.181, 18.5195, 0.55 ) }
    dend_37 { pt3dadd( 16.3064, -198.079, 17.5324, 0.55 ) }
    dend_37 { pt3dadd( 25.6566, -201.443, 17.6973, 0.55 ) }
    dend_37 { pt3dadd( 34.3159, -206.008, 16.3071, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_28, dend_19, dend_0, axon_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, axon_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_48 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_40 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_44 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_38 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_29 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_54 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_58 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_9 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_61 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 9
    dend_55 nseg = 9
    dend_49 nseg = 3
    dend_24 nseg = 9
    dend_21 nseg = 9
    dend_16 nseg = 11
    dend_13 nseg = 11
    dend_60 nseg = 3
    dend_57 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_6 nseg = 7
    dend_3 nseg = 7
    dend_62 nseg = 5
    dend_61 nseg = 5
    dend_48 nseg = 7
    dend_47 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_33 nseg = 5
    dend_44 nseg = 5
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_ChC_87b9dd7336_0_0


