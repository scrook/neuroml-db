// Cell: dNAC222_L5_LBC_0ffcc91920_0_0
/*
{
  "id" : "dNAC222_L5_LBC_0ffcc91920_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.29271, -11.6867, 4.83325, 4.84982", "1.10949, -10.459, 4.33282, 5.97061", "0.926272, -9.23135, 3.83238, 8.0692", "0.743056, -8.00367, 3.33195, 9.40358", "0.559839, -6.77598, 2.83151, 10.6995", "0.376623, -5.5483, 2.33108, 11.9706", "0.193406, -4.32062, 1.83064, 13.8162", "0.0101893, -3.09294, 1.3302, 15.6871", "-0.173027, -1.86526, 0.82977, 15.9633", "-0.356244, -0.637576, 0.329335, 16.579", "-0.539461, 0.590106, -0.171101, 17.1395", "-0.722677, 1.81779, -0.671536, 17.1456", "-0.905894, 3.04547, -1.17197, 17.1167", "-1.08911, 4.27315, -1.67241, 16.9505", "-1.27233, 5.50083, -2.17284, 16.6868", "-1.45554, 6.72851, -2.67328, 16.2042", "-1.63876, 7.9562, -3.17371, 15.3999", "-1.82198, 9.18388, -3.67415, 12.8578", "-2.00519, 10.4116, -4.17458, 8.89972", "-2.18841, 11.6392, -4.67502, 6.31689", "-2.37163, 12.8669, -5.17545, 3.58193" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-0.157219, 9.25154, -10.0838, 1.68", "1.93983, 10.8045, -10.0838, 1.68", "4.68612, 12.8383, -10.0838, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-6.15722, 10.7115, -7.69378, 1.44", "-7.44185, 10.781, -7.93453, 1.44", "-10.0081, 10.8194, -8.79287, 1.44", "-13.7723, 10.8487, -10.1462, 1.44", "-16.5494, 10.909, -11.117, 1.44", "-19.73, 10.9893, -12.3042, 1.44", "-25.4628, 11.1349, -14.4598, 1.08", "-30.9487, 11.229, -16.5848, 1.08", "-34.7159, 11.2557, -18.0847, 1.08", "-38.9617, 11.2464, -19.7956, 1.08", "-43.4992, 11.2135, -21.5579, 0.96", "-45.74, 11.1951, -22.3719, 0.96", "-48.2998, 11.1831, -23.1116, 1.44", "-49.7661, 11.1595, -23.4608, 1.44", "-50.9269, 11.1315, -23.7712, 0.84", "-52.7365, 11.0862, -24.2519, 0.72", "-56.7478, 11.0322, -25.2295, 1.32", "-59.2241, 11.0034, -25.8306, 1.32", "-63.2403, 11.0096, -26.9242, 0.72", "-67.4488, 11.1032, -28.1664, 0.72", "-70.7817, 11.2327, -29.1993, 0.72", "-74.301, 11.4259, -30.2969, 1.08", "-78.5956, 11.6536, -31.6311, 0.6", "-82.4512, 11.8044, -32.8697, 0.6", "-86.1316, 11.9046, -34.1501, 0.6", "-88.4723, 11.9878, -34.9563, 0.6", "-91.1056, 12.1573, -35.9972, 0.6", "-92.7621, 12.3267, -36.705, 0.6", "-94.5723, 12.6374, -37.487, 1.2", "-97.3418, 13.3323, -38.5539, 1.2", "-99.9607, 14.3883, -39.506, 0.6", "-102.753, 15.9353, -40.5401, 0.96", "-104.004, 16.895, -41.0002, 0.48", "-106.445, 19.1733, -41.8329, 0.24", "-108.061, 20.9704, -42.3383, 1.2", "-110.419, 23.953, -43.2422, 0.84", "-111.865, 25.9729, -43.9231, 0.48", "-114.786, 30.1238, -45.5489, 0.36", "-115.825, 31.5281, -46.198, 1.44", "-117.3, 33.376, -47.1917, 0.72", "-120.784, 37.2701, -49.6297, 0.48", "-122.487, 38.9388, -50.8029, 0.12", "-124.575, 40.7603, -52.2049, 0.12", "-127.606, 43.0391, -54.3524, 0.12", "-128.456, 43.6315, -54.9495, 0.6", "-130.29, 44.8115, -56.2571, 0.84", "-131.666, 45.6793, -57.201, 0.12", "-133.128, 46.5604, -58.422, 0.12", "-134.789, 47.5976, -59.9524, 0.84", "-135.545, 48.0805, -60.7105, 1.2", "-137.741, 49.436, -62.8845, 0.84", "-139.425, 50.4558, -64.4637, 0.84", "-142.458, 52.2368, -67.0227, 0.48", "-143.981, 53.1063, -68.1182, 0.24", "-145.292, 53.8422, -68.9299, 0.84", "-147.197, 54.8866, -70.0015, 0.6", "-148.47, 55.585, -70.5831, 0.12", "-150.484, 56.7431, -71.531, 0.12", "-151.248, 57.2048, -71.8883, 0.72", "-151.94, 57.6229, -72.2447, 0.72", "-154.063, 58.9426, -73.3316, 0.12", "-155.238, 59.7078, -73.9136, 0.12", "-157.432, 61.1437, -74.9553, 1.2", "-158.86, 62.1333, -75.6682, 0.84", "-159.529, 62.6123, -75.9757, 0.12", "-161.665, 64.1322, -76.7999, 0.12", "-162.063, 64.4259, -76.9293, 1.08", "-164.152, 65.9691, -77.703, 0.36", "-166.476, 67.6565, -78.7211, 0.36", "-168.243, 68.9365, -79.6163, 0.36", "-170.31, 70.3936, -80.7226, 0.84", "-172.216, 71.6508, -81.8209, 0.36", "-174.879, 73.3027, -83.3837, 0.24", "-177.299, 74.7336, -84.809, 0.24", "-179.86, 76.2203, -86.2662, 0.6", "-181.118, 76.9519, -86.9957, 0.6", "-184.306, 78.8122, -88.7571, 0.12", "-185.091, 79.2729, -89.1419, 0.6", "-186.776, 80.3397, -89.8031, 0.12", "-187.974, 81.173, -90.219, 0.12", "-188.546, 81.6167, -90.4257, 0.84", "-189.926, 82.8483, -90.8177, 0.84", "-191.54, 84.4406, -91.1275, 0.12", "-192.497, 85.41, -91.2795, 0.84", "-193.256, 86.2047, -91.3779, 1.08", "-194.317, 87.3472, -91.479, 0.36", "-197.644, 91.1024, -91.7355, 0.12", "-198.27, 91.8539, -91.7549, 0.6", "-199.05, 92.9092, -91.7369, 0.6", "-199.72, 93.8843, -91.714, 0.12", "-201.338, 96.4776, -91.6368, 0.12", "-201.622, 96.9753, -91.5999, 0.72", "-202.486, 98.6075, -91.4246, 0.24", "-205.367, 103.978, -90.7674, 0.12", "-205.926, 105.005, -90.6358, 0.84", "-206.612, 106.233, -90.4761, 0.24", "-208.827, 110.143, -89.9667, 0.24", "-209.511, 111.339, -89.8225, 0.72", "-210.594, 113.209, -89.6208, 0.12", "-212.627, 116.742, -89.2634, 0.12", "-213.578, 118.453, -89.1022, 0.96", "-214.133, 119.439, -89.0251, 0.12", "-215.549, 121.952, -88.8985, 0.12", "-216.165, 122.883, -88.853, 0.72", "-217.299, 124.447, -88.7769, 0.12", "-219.113, 126.753, -88.6709, 0.12", "-220.405, 128.29, -88.6093, 0.96", "-221.901, 130.002, -88.5506, 0.12", "-228.614, 137.35, -88.3392, 0.12", "-229.695, 138.512, -88.3027, 1.32", "-230.787, 139.64, -88.3226, 0.12", "-233.474, 142.38, -88.5128, 0.12", "-234.56, 143.519, -88.6304, 0.12", "-235.421, 144.463, -88.768, 0.84", "-236.129, 145.456, -88.9543, 0.12", "-238.511, 149.304, -89.6697, 0.12", "-238.896, 150.045, -89.8034, 0.72", "-239.466, 151.409, -90.0335, 0.72", "-240.008, 152.994, -90.2471, 0.12", "-241.326, 157.818, -90.7365, 0.12", "-241.431, 158.307, -90.7469, 0.48", "-241.558, 159.166, -90.6704, 0.96", "-241.724, 160.437, -90.5207, 0.12", "-242.055, 163.426, -90.0885, 0.12", "-242.109, 163.863, -90.0015, 0.72", "-242.421, 166.057, -89.4568, 0.12", "-242.825, 168.311, -88.8855, 0.12", "-243.176, 169.47, -88.5898, 0.6", "-243.432, 170.102, -88.4291, 0.12", "-245.227, 173.524, -87.5995, 0.12", "-245.589, 174.104, -87.4868, 0.84", "-246.577, 175.446, -87.3074, 0.12", "-249.18, 178.521, -86.9388, 0.12", "-249.479, 178.853, -86.8889, 0.6", "-250.339, 179.795, -86.734, 0.12", "-251.738, 181.336, -86.4875, 0.12", "-252.436, 182.258, -86.3207, 0.6", "-252.871, 183.003, -86.1749, 0.12", "-253.777, 185.301, -85.4742, 0.12", "-253.978, 185.935, -85.2436, 0.36", "-254.217, 186.972, -84.8288, 0.12", "-254.551, 189.299, -83.921, 0.12", "-254.661, 190.341, -83.5234, 0.48", "-255.002, 193.796, -82.2894, 0.12", "-255.133, 194.995, -81.9284, 0.48", "-255.272, 196.123, -81.6024, 0.12", "-255.69, 199.167, -80.7608, 0.12", "-255.981, 200.643, -80.4232, 0.48", "-256.294, 201.829, -80.2258, 0.12", "-257.249, 204.595, -80.0093, 0.12", "-257.368, 204.847, -80.0048, 0.6", "-257.604, 205.224, -80.0221, 0.12", "-260.075, 208.253, -80.4036, 0.12", "-260.579, 208.735, -80.5014, 0.48", "-261.982, 209.856, -80.7615, 0.12", "-264.245, 211.359, -81.1852, 0.12", "-265.092, 211.894, -81.3457, 0.6", "-266.259, 212.579, -81.571, 0.24", "-269.851, 214.359, -82.2755, 0.12", "-271.336, 215.075, -82.5443, 0.48", "-272.947, 215.788, -82.7745, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-8.14722, 7.33154, -9.06378, 1.92", "-9.30532, 7.74298, -9.14307, 1.92", "-11.8162, 8.63503, -9.31497, 1.68", "-13.3904, 9.19431, -9.42275, 1.68", "-15.4493, 9.92574, -9.5637, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.74278, -4.14846, 3.55622, 2.4", "8.04906, -5.34884, 3.55622, 2.4", "8.52847, -7.22774, 3.55622, 2.4", "8.84173, -8.45545, 3.55622, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.17722, 9.55154, 8.44622, 1.44", "-3.97332, 11.4792, 12.626, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.34278, 8.34154, 5.94622, 1.8", "1.4572, 9.89124, 6.56592, 1.8", "1.38285, 12.6902, 7.53823, 1.56", "1.08183, 16.7657, 8.9495, 1.56", "0.597014, 21.6241, 10.7469, 1.44", "0.428628, 23.0751, 11.2787, 1.44", "0.0132871, 26.6543, 12.5907, 1.32", "-1.02824, 33.9332, 15.3127, 1.2", "-1.49624, 36.5788, 16.3086, 1.2", "-2.13296, 39.4775, 17.3153, 1.2", "-2.97325, 42.672, 18.4273, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.91278, 7.07154, 0.266218, 2.4", "8.89601, 8.24312, 0.266218, 2.4", "12.5527, 10.4033, 0.266218, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.167218, -13.0985, 3.95622, 3.0", "-0.067775, -13.8145, 3.95622, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001421830143
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.37163, 12.8669, -5.17545, 0.84", "-4.58569, 27.7026, -5.17545, 0.84", "-6.79974, 42.5383, -5.17545, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "4.68612, 12.8383, -10.0838, 0.96", "3.68458, 14.2977, -11.0625, 0.96", "3.20878, 15.0179, -11.5029, 0.96", "1.69114, 17.6684, -13.3717, 0.96", "0.853283, 19.2782, -14.5413, 1.44", "-0.255149, 21.4877, -16.1724, 1.44", "-0.814304, 22.6595, -17.0372, 0.96", "-1.30565, 23.717, -17.8566, 0.96", "-2.31295, 26.2549, -19.9049, 0.96", "-2.48456, 26.9524, -20.4607, 0.48", "-2.59594, 27.7136, -21.1388, 0.24", "-2.65095, 28.4976, -21.8328, 0.36", "-2.68149, 29.3427, -22.6124, 0.96", "-2.74273, 29.7648, -23.1328, 0.96", "-2.88251, 30.3945, -23.9287, 0.36", "-3.06125, 31.0638, -25.0638, 0.36", "-3.15421, 31.4478, -25.7784, 1.08", "-3.23698, 31.8749, -26.6017, 1.08", "-3.59588, 34.2578, -31.1583, 0.36", "-3.64556, 34.8924, -32.3559, 1.08", "-3.30767, 37.1163, -35.7415, 0.36", "-3.08806, 37.7934, -36.5722, 0.36", "-2.72118, 38.6831, -37.4758, 1.32", "-2.52536, 39.1154, -37.8166, 1.32", "-1.79204, 40.6808, -38.6094, 0.36", "0.283363, 45.2661, -40.44, 0.24", "1.42715, 47.8877, -41.1815, 0.72", "1.70248, 48.6199, -41.3429, 0.96", "2.2452, 50.3423, -41.6192, 0.24", "3.08071, 53.5592, -42.0799, 0.12", "3.24786, 54.4258, -42.1726, 0.72", "3.4043, 55.8177, -42.3005, 0.12", "3.76206, 59.4591, -42.5337, 0.12", "3.86265, 60.4872, -42.6306, 0.48", "4.07635, 62.7918, -42.9177, 0.12", "4.1007, 63.1815, -42.9993, 0.12", "4.19127, 64.157, -43.2457, 1.08", "4.29652, 65.0325, -43.4876, 0.12", "4.66791, 67.2729, -44.1934, 0.12", "4.84283, 68.1848, -44.4496, 0.72", "5.23516, 70.2666, -45.0451, 0.12", "5.74945, 73.0153, -45.9441, 0.12", "5.94803, 74.0672, -46.2956, 0.96", "6.19841, 75.363, -46.7288, 0.12", "6.55265, 77.1262, -47.2942, 0.12", "6.98318, 79.1713, -47.9627, 0.84", "7.10866, 79.7806, -48.142, 0.12", "7.65487, 82.4968, -49.0128, 0.12", "7.75119, 82.9238, -49.1382, 0.96", "8.00549, 83.9758, -49.3979, 0.12", "8.58307, 86.2132, -49.8808, 0.12", "8.85142, 87.2046, -50.107, 0.84", "9.10138, 88.1298, -50.3569, 0.12", "9.67303, 90.3948, -51.1759, 0.12", "9.86269, 91.22, -51.4769, 0.96", "10.0854, 92.2315, -51.8441, 0.12", "10.8774, 95.882, -53.0983, 0.12", "11.0814, 96.913, -53.4653, 0.72", "11.4751, 99.246, -54.2835, 0.12", "11.8951, 102.361, -55.4689, 0.12", "11.9387, 102.675, -55.5658, 0.84", "12.0909, 103.774, -55.8132, 0.72", "12.5976, 107.147, -56.1928, 0.12", "12.7482, 108.251, -56.4113, 0.6", "13.0859, 110.847, -57.0716, 0.12", "13.4885, 114.515, -58.4073, 0.12", "13.5723, 115.333, -58.7519, 0.6", "13.7165, 116.467, -59.2187, 0.12", "14.593, 122.183, -61.5402, 0.12", "14.8736, 123.715, -62.1428, 0.12", "15.013, 124.433, -62.4602, 0.84", "15.1552, 125.181, -62.8316, 0.24", "16.0286, 129.398, -64.6917, 0.12", "16.118, 129.813, -64.8359, 0.6", "16.3782, 130.916, -65.0695, 0.12", "17.1652, 134.457, -65.8843, 0.12", "17.4519, 135.954, -66.2207, 0.48", "17.573, 136.873, -66.3996, 0.12", "17.6886, 138.189, -66.6851, 0.12", "17.7482, 138.979, -66.8347, 0.6", "17.814, 139.872, -66.9804, 0.12", "18.0412, 141.652, -67.1676, 0.12", "18.4162, 143.946, -67.4511, 0.12", "18.843, 146.019, -67.735, 0.36", "19.0767, 147.033, -67.9083, 0.6", "19.6784, 149.427, -68.3686, 0.12", "20.7256, 153.164, -69.1497, 0.12", "21.0568, 154.203, -69.3677, 0.84", "21.3176, 154.931, -69.51, 0.12", "22.0525, 156.982, -69.8161, 0.12", "22.2374, 157.503, -69.9109, 0.96", "22.4857, 158.245, -70.0624, 0.24", "23.1822, 160.635, -70.6452, 0.24", "23.3725, 161.431, -70.8563, 0.72", "23.5058, 162.074, -71.0236, 0.12", "23.8848, 164.06, -71.6211, 0.12", "23.9416, 164.374, -71.728, 0.96", "24.1861, 165.723, -72.2226, 0.12", "24.5279, 167.484, -72.8975, 0.12", "24.7297, 168.621, -73.4319, 0.24", "25.0916, 170.813, -74.5275, 0.12", "25.2753, 172.136, -75.1887, 0.12", "25.3577, 173.122, -75.6985, 0.72", "25.3792, 174.059, -76.1814, 0.12", "25.1241, 178.568, -78.554, 0.12", "24.9872, 179.531, -79.0621, 0.6", "24.7836, 180.428, -79.5124, 0.12", "24.0767, 182.916, -80.6971, 0.12", "23.7314, 183.965, -81.1512, 0.6", "22.8464, 186.344, -82.0586, 0.12", "22.5521, 187.135, -82.2801, 0.6", "22.2464, 188.01, -82.5288, 0.12", "21.6839, 189.656, -82.9569, 0.12", "21.453, 190.247, -83.0584, 0.48", "20.6109, 192.214, -83.3218, 0.12", "20.1215, 193.262, -83.3881, 0.12", "19.7293, 194.039, -83.4502, 0.96", "19.0808, 195.24, -83.4985, 0.12", "17.7678, 197.562, -83.5285, 0.12", "17.4033, 198.199, -83.5128, 0.72", "16.9583, 198.946, -83.4526, 0.12", "15.8209, 200.823, -83.2777, 0.12", "13.686, 204.432, -82.8827, 0.12", "13.4615, 204.827, -82.8313, 0.84", "12.9567, 205.745, -82.6896, 0.12", "11.744, 207.866, -82.3959, 0.12", "11.5423, 208.202, -82.355, 0.72", "10.1744, 210.324, -82.1073, 0.12", "9.26414, 211.668, -82.0795, 0.12", "8.58578, 212.657, -82.1158, 0.6", "7.21088, 214.745, -82.6156, 0.12", "6.78042, 215.456, -82.8801, 0.12", "6.41356, 216.068, -83.1543, 0.6", "5.45964, 217.711, -84.1219, 0.12", "5.19386, 218.179, -84.4503, 0.48", "3.49483, 221.297, -86.9367, 0.12", "2.93926, 222.496, -87.9682, 0.12" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "4.68612, 12.8383, -10.0838, 1.08", "6.84226, 13.5457, -11.1003, 1.08", "9.22204, 14.5622, -12.3659, 1.08", "11.8942, 15.9883, -13.8818, 1.08", "13.5412, 16.9763, -14.8326, 1.08", "16.0386, 18.5191, -16.2925, 0.84", "19.3012, 20.6531, -18.3491, 0.84", "20.1774, 21.3964, -18.9717, 0.84", "21.1107, 22.3885, -19.721, 1.2", "21.5834, 23.0515, -20.2243, 1.2", "22.6087, 24.9298, -21.5703, 0.48", "23.3893, 26.6429, -22.6982, 0.48", "23.8263, 27.6028, -23.2177, 1.32", "24.354, 28.6434, -23.7993, 1.32", "25.791, 31.2312, -25.2653, 0.6", "26.6415, 32.9475, -26.1692, 0.6", "27.5025, 34.9518, -27.0663, 0.48", "27.6544, 35.2693, -27.1899, 0.48", "28.5779, 36.8742, -27.8411, 1.2", "29.3387, 37.8154, -28.1969, 1.2" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-15.4493, 9.92574, -9.5637, 1.56", "-18.059, 12.52, -14.8408, 1.56", "-20.8154, 14.9217, -19.3961, 1.56", "-21.9104, 15.9034, -21.0327, 1.32", "-23.4081, 17.2423, -23.1296, 1.32", "-25.2836, 18.8249, -25.7383, 1.32", "-27.5296, 20.5459, -28.7901, 1.32", "-29.7902, 21.887, -31.4099, 1.08", "-31.9653, 23.0154, -33.9264, 1.08", "-33.016, 23.5138, -35.278, 1.08", "-35.2943, 24.5225, -38.3776, 1.08", "-36.2993, 24.9792, -39.9584, 1.08", "-38.4348, 25.905, -43.3938, 1.08", "-39.9704, 26.5538, -45.9149, 1.08", "-41.5067, 27.2274, -48.4931, 1.08", "-42.0861, 27.5245, -49.4607, 1.08", "-44.9164, 29.1529, -53.9904, 1.08", "-47.3729, 30.7115, -57.7314, 1.08", "-49.0405, 31.8328, -60.1537, 1.08", "-52.3094, 34.1228, -64.8322, 1.08", "-53.6048, 35.0987, -66.6575, 1.08", "-55.0537, 36.2692, -68.6775, 1.08", "-56.7572, 37.646, -70.7719, 1.08", "-59.0126, 39.454, -73.3718, 0.36", "-60.994, 40.9887, -75.3427, 1.08", "-62.3595, 41.9747, -76.5403, 1.08", "-66.337, 44.5884, -79.8375, 0.24", "-69.091, 46.2712, -82.044, 0.72", "-72.2635, 48.0013, -84.4071, 0.12", "-75.4399, 49.551, -86.5597, 0.12", "-79.0841, 51.0847, -88.9107, 0.12", "-81.7365, 52.0603, -90.5752, 0.48", "-82.3342, 52.2431, -90.9221, 1.32", "-84.069, 52.7533, -92.0273, 1.32", "-85.8869, 53.2911, -93.2321, 1.32", "-89.7994, 54.4883, -95.9187, 0.96", "-90.9445, 54.9022, -96.6008, 0.96", "-93.0876, 55.7276, -97.9264, 0.48", "-96.5152, 57.0903, -100.039, 0.48", "-98.3392, 57.848, -101.158, 1.2", "-100.016, 58.6151, -102.221, 0.36", "-103.921, 60.678, -104.964, 0.36", "-107.81, 62.8999, -107.948, 0.36", "-108.788, 63.5159, -108.75, 1.08", "-110.364, 64.6213, -110.045, 0.48", "-113.781, 67.3205, -112.967, 0.36", "-116.613, 69.9512, -115.698, 0.36", "-117.627, 71.0774, -116.764, 1.2", "-118.729, 72.5078, -117.872, 1.2", "-120.284, 74.7608, -119.397, 1.2", "-121.117, 76.0336, -120.242, 0.96", "-122.856, 78.7256, -121.922, 0.24", "-124.123, 80.6302, -123.104, 0.24", "-125.028, 81.8939, -123.953, 1.2", "-126.526, 83.9292, -125.37, 0.12", "-129.717, 88.3078, -128.418, 0.12", "-130.272, 89.0931, -128.928, 0.12", "-130.993, 90.1542, -129.608, 0.84", "-132.355, 92.1521, -130.96, 0.12", "-133.75, 94.0746, -132.235, 0.12", "-135.022, 95.6375, -133.417, 0.12", "-135.584, 96.3142, -133.88, 0.96", "-137.946, 98.8684, -135.684, 0.12", "-139.165, 100.031, -136.633, 0.12", "-141.013, 101.515, -137.99, 1.32", "-145.303, 104.492, -140.985, 0.36", "-148.18, 106.483, -143.021, 0.36", "-150.108, 107.927, -144.435, 1.2", "-153.03, 110.429, -146.832, 0.36", "-154.291, 111.776, -148.108, 0.36", "-154.933, 112.647, -148.898, 0.36", "-156.225, 114.804, -150.627, 0.36", "-156.803, 115.998, -151.752, 1.32", "-157.969, 119.176, -154.574, 0.36", "-158.402, 120.417, -155.607, 0.36", "-158.608, 120.875, -156.038, 0.36", "-159.243, 121.953, -157.083, 1.08", "-160.894, 124.023, -159.186, 0.24", "-162.468, 125.663, -160.882, 0.24", "-164.088, 127.243, -162.505, 1.2", "-166.427, 129.446, -164.916, 0.36", "-167.996, 130.917, -166.565, 0.36", "-169.577, 132.394, -168.241, 1.32", "-170.394, 133.077, -168.99, 1.32" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-15.4493, 9.92574, -9.5637, 1.08", "-17.4999, 10.73, -9.81108, 1.08", "-18.9159, 11.2378, -9.95188, 1.08", "-21.1182, 12.0398, -10.1373, 1.08", "-23.2325, 12.7664, -10.2897, 1.08", "-30.36, 15.0819, -10.7804, 1.08", "-35.8564, 16.8675, -11.1588, 1.08", "-40.529, 18.3829, -11.4867, 1.08", "-44.8775, 19.7668, -11.7889, 1.08", "-47.7291, 20.6552, -11.9777, 1.08", "-54.4878, 22.6203, -12.3419, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "8.84173, -8.45545, 3.55622, 1.68", "11.6228, -8.44103, 4.53084, 1.68", "14.914, -8.29658, 5.50445, 0.96", "19.3427, -8.05699, 6.82655, 0.96", "21.8152, -8.01526, 7.60522, 0.96", "26.6668, -7.95212, 9.24006, 0.96", "29.7815, -7.90258, 10.3244, 0.96", "32.0495, -7.88094, 11.0444, 0.96", "37.0562, -7.77393, 12.6982, 0.84", "40.5474, -7.63587, 13.9089, 0.84", "43.6968, -7.40843, 15.1021, 0.84", "46.8215, -7.11718, 16.2833, 0.84", "50.2899, -6.86791, 17.6132, 0.6", "53.4773, -6.67972, 18.7556, 0.6", "54.8402, -6.54808, 19.1797, 0.96", "56.4754, -6.32509, 19.6343, 0.48", "58.3851, -6.13592, 20.1085, 0.12", "61.0781, -5.93852, 20.7773, 0.24", "64.4014, -5.83998, 21.6392, 0.24", "72.6152, -6.28956, 25.362, 0.24", "81.2207, -6.98031, 28.0069, 0.24", "90.2257, -6.45516, 28.4102, 0.24", "99.0702, -6.89572, 30.1733, 0.24", "107.354, -5.91362, 33.6274, 0.24", "115.365, -5.8, 37.793, 0.24", "123.762, -4.92646, 40.9944, 0.24", "132.16, -2.73707, 43.4854, 0.24", "140.207, 0.709391, 45.6996, 0.24", "148.007, 2.72122, 49.779, 0.24", "156.512, 2.81363, 52.8081, 0.24", "164.484, 2.06926, 56.9823, 0.24", "171.361, 2.30471, 62.8288, 0.24", "178.464, 1.40607, 68.3307, 0.24", "185.74, 1.35393, 73.677, 0.24", "192.452, 0.398751, 79.6407, 0.24", "198.316, -1.87025, 86.1207, 0.24", "203.855, -3.80571, 92.9838, 0.24", "209.9, -4.43172, 99.6616, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.84173, -8.45545, 3.55622, 1.92", "10.142, -11.577, 4.73382, 1.92", "11.5716, -15.0093, 6.02866, 1.32", "12.8427, -18.0608, 7.17982, 1.44", "13.6634, -20.0312, 7.92317, 1.44", "14.2189, -21.3648, 8.42628, 1.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-3.97332, 11.4792, 12.626, 0.96", "-4.1005, 12.9681, 14.3202, 0.96", "-4.54128, 14.3709, 16.068, 0.6", "-4.87865, 15.3371, 17.2898, 0.6", "-5.34137, 16.7434, 19.0693, 0.6", "-5.59354, 17.6768, 20.3164, 0.6", "-5.92537, 18.9007, 21.9192, 0.6", "-6.3992, 19.8668, 23.2147, 0.6", "-6.71708, 20.3717, 23.893, 0.6", "-6.94828, 20.7577, 24.358, 0.6", "-7.68136, 22.3336, 25.9174, 0.6", "-8.0103, 23.4735, 26.9231, 0.6", "-8.26442, 24.8767, 27.9391, 0.6", "-8.49278, 26.3257, 28.8004, 0.6", "-8.74761, 27.7183, 29.5936, 0.12", "-9.00204, 29.0932, 30.3191, 0.12", "-9.20359, 30.4771, 30.9345, 0.12", "-9.26515, 32.2607, 31.7215, 0.12", "-9.09992, 34.4288, 32.5676, 0.12", "-12.1789, 39.4904, 37.3909, 0.12" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.97332, 11.4792, 12.626, 1.08", "-4.75796, 10.6191, 13.2971, 1.08", "-6.22627, 8.86507, 14.5685, 0.84", "-7.48788, 7.2775, 15.6366, 0.84", "-8.63252, 5.95411, 16.6179, 0.84", "-10.7678, 3.70108, 18.4767, 0.84", "-11.9933, 2.52801, 19.4956, 0.84", "-13.3877, 1.26655, 20.555, 0.84", "-14.0816, 0.654721, 21.0315, 0.84", "-15.5804, -0.658256, 22.0233, 0.84", "-16.4281, -1.49951, 22.6902, 0.84", "-17.9773, -3.25951, 24.0078, 0.84", "-19.9017, -5.30305, 25.4691, 0.84", "-21.2332, -6.53534, 26.3753, 0.84", "-22.7818, -7.78663, 27.4288, 0.84", "-24.707, -9.14772, 28.7463, 0.84", "-26.3874, -9.99155, 29.9379, 0.84", "-28.3683, -10.3818, 31.4744, 0.24", "-30.7173, -10.1109, 33.3057, 0.36", "-32.7316, -9.37332, 34.8609, 0.12", "-34.1717, -8.43188, 36.0172, 0.12", "-35.5776, -7.05202, 37.1467, 0.12", "-36.3416, -5.85496, 37.9715, 0.12", "-42.0611, -9.03638, 43.3364, 0.12", "-47.7834, -12.3554, 48.6141, 0.12", "-52.4196, -16.8685, 54.0687, 0.12", "-56.9756, -20.9687, 59.9036, 0.12", "-61.9221, -24.1683, 65.979, 0.12", "-66.1345, -28.6183, 71.8158, 0.12", "-69.9535, -34.2331, 76.866, 0.12", "-74.8017, -39.9863, 80.7403, 0.12", "-78.8496, -47.0833, 82.9451, 0.12", "-82.2741, -54.453, 85.3064, 0.12", "-86.1892, -61.0903, 88.804, 0.12", "-90.3911, -67.2852, 92.7515, 0.12", "-94.9436, -72.6053, 97.5041, 0.12", "-99.1473, -78.8545, 101.363, 0.12", "-103.58, -85.3105, 104.57, 0.12", "-108.402, -91.23, 108.22, 0.12", "-112.603, -96.5481, 113.288, 0.12", "-117.287, -101.935, 117.833, 0.12" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.97325, 42.672, 18.4273, 0.72", "-3.10416, 38.9793, 17.3844, 0.72", "-3.28003, 35.2983, 16.1465, 0.72", "-3.42396, 32.9691, 15.2412, 0.72", "-3.60962, 30.0093, 14.0761, 0.72", "-3.73109, 26.8083, 12.7836, 0.72", "-3.8444, 23.8225, 11.5781, 0.72", "-3.94998, 21.6117, 10.4983, 0.72", "-4.11434, 18.0095, 8.62127, 0.72", "-4.29451, 14.81, 7.02832, 0.72", "-4.55895, 11.5818, 5.43128, 0.72", "-6.85569, 4.03018, 0.675305, 0.72" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.97325, 42.672, 18.4273, 1.2", "-2.37341, 47.6442, 20.23, 1.2", "-1.90073, 52.4123, 21.7147, 1.08", "-1.36992, 58.0764, 23.2178, 1.08", "-0.996149, 62.5561, 24.1898, 1.08", "-0.810205, 65.3635, 24.7493, 1.08", "-0.708528, 67.9422, 25.2488, 0.84", "-0.644958, 71.0004, 25.6665, 0.84", "-0.688475, 74.4973, 26.0091, 0.84", "-0.924829, 79.8184, 26.4755, 0.84", "-1.18063, 83.6115, 26.8998, 0.84", "-1.55573, 87.2334, 27.3589, 0.84", "-1.84458, 89.591, 27.6733, 0.72", "-2.36069, 93.5004, 28.2271, 0.72", "-2.83869, 96.5891, 28.6862, 0.72", "-3.61085, 101.204, 29.3757, 0.72", "-4.43686, 106.26, 30.0213, 0.72", "-4.95288, 109.496, 30.413, 0.72", "-3.81308, 122.642, 30.0057, 0.72", "-1.58114, 135.567, 28.5074, 0.72", "2.96255, 147.522, 25.2316, 0.72", "7.50218, 159.618, 22.5218, 0.72", "10.7733, 172.271, 20.6505, 0.72", "15.0538, 184.567, 18.471, 0.72", "19.2082, 196.954, 16.5732, 0.72", "25.3304, 208.649, 16.7463, 0.72", "32.2349, 219.901, 16.7613, 0.72", "38.5606, 231.48, 17.192, 0.72", "42.8031, 243.977, 17.5177, 0.72", "45.1469, 256.867, 15.8967, 0.72", "46.029, 270.039, 15.9761, 0.72", "48.36, 282.991, 17.0291, 0.72", "48.3034, 295.984, 19.3653, 0.72", "50.275, 308.071, 24.2932, 0.72", "52.9907, 319.347, 30.5988, 0.72" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.5527, 10.4033, 0.266218, 1.32", "12.7242, 12.0764, 0.215666, 1.32", "12.8937, 15.6035, 0.346399, 1.32", "12.9666, 17.3149, 0.484007, 1.32", "13.0003, 18.0674, 0.621953, 1.32", "13.0791, 20.0466, 1.09955, 1.32", "13.1833, 22.356, 1.7245, 1.2", "13.2502, 24.1371, 2.35779, 1.2", "13.3221, 26.4421, 3.32498, 1.2", "13.4849, 29.352, 4.54578, 1.2", "13.6741, 31.376, 5.37251, 0.96", "14.0428, 34.6295, 6.66109, 0.96", "14.255, 36.4432, 7.35724, 0.72", "14.7095, 40.7052, 8.92643, 0.72", "14.9047, 42.7654, 9.62914, 1.08", "15.0656, 44.6684, 10.1858, 0.48", "15.2255, 47.081, 10.8744, 0.12", "15.2617, 47.9744, 11.1429, 0.72", "15.2762, 48.6559, 11.347, 1.08", "15.2782, 49.4791, 11.6191, 0.48", "15.2382, 50.5776, 12.0194, 0.48", "15.1407, 52.3869, 12.741, 1.08", "15.1343, 54.576, 13.6724, 0.36", "15.1775, 56.8253, 14.6683, 0.36" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.5527, 10.4033, 0.266218, 1.32", "13.1849, 10.088, 0.221027, 1.32", "14.6122, 9.42244, 0.0703931, 1.08", "17.3396, 8.19589, -0.365116, 0.84", "19.9837, 7.08341, -0.859382, 0.6", "21.3815, 6.53227, -1.15479, 0.6", "23.5385, 5.66496, -1.62204, 0.6", "25.9331, 4.69887, -2.20578, 0.6", "28.6684, 3.6249, -2.96992, 0.6", "30.7019, 2.88994, -3.56965, 0.6", "34.0995, 1.73838, -4.56981, 0.6", "35.6389, 1.2432, -4.99898, 0.6", "38.9639, 0.231382, -5.83453, 0.6", "42.0771, -0.716453, -6.68278, 0.6", "44.0407, -1.2547, -7.20876, 0.12", "44.6334, -1.4018, -7.37258, 0.12", "45.2339, -1.51445, -7.56229, 0.36", "45.3786, -1.53328, -7.61244, 0.84", "47.0136, -1.68443, -8.20288, 0.12", "48.2671, -1.82212, -8.70011, 0.12", "48.918, -1.9068, -8.9891, 1.2", "50.6413, -2.14325, -9.75838, 0.12", "52.6871, -2.43765, -10.6426, 0.12", "53.2304, -2.5176, -10.8679, 0.84", "53.5532, -2.56704, -10.9889, 0.12", "55.5539, -2.87692, -11.7747, 0.12", "55.6251, -2.88657, -11.8051, 0.72", "55.9872, -2.92697, -11.9597, 0.12", "57.5664, -3.0456, -12.7062, 0.12", "58.0781, -3.0769, -12.9481, 1.56", "59.7408, -3.15059, -13.7057, 0.12", "61.9022, -3.24357, -14.5855, 0.12", "62.2262, -3.25554, -14.7097, 0.84", "62.8196, -3.26987, -14.9189, 0.84", "63.1272, -3.2695, -15.0392, 0.84", "63.6471, -3.25498, -15.2621, 0.12", "64.7592, -3.20217, -15.7419, 0.12", "65.2908, -3.16786, -15.9516, 0.72", "65.7792, -3.15381, -16.1357, 0.12", "68.196, -3.15944, -16.9754, 0.12", "68.6491, -3.16097, -17.1129, 0.72", "69.4142, -3.17085, -17.2924, 0.12", "70.5861, -3.27036, -17.5927, 0.12", "71.7889, -3.45229, -17.8872, 0.12", "72.9049, -3.68254, -18.1863, 0.84", "74.0397, -3.97677, -18.4843, 0.12", "76.0629, -4.58901, -19.0913, 0.12", "78.7504, -5.56358, -20.1161, 0.6", "79.6078, -5.93154, -20.5246, 0.12", "81.7651, -6.93486, -21.7986, 0.12", "82.4372, -7.26566, -22.2544, 0.84", "83.1676, -7.65652, -22.8043, 0.12", "84.7583, -8.55357, -24.1577, 0.12", "85.6528, -9.03883, -24.9412, 0.72", "86.9506, -9.77357, -26.2428, 0.12", "87.3239, -10.0034, -26.6838, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.067775, -13.8145, 3.95622, 0.96", "-2.00321, -15.5141, 6.21788, 0.96", "-3.66341, -17.356, 8.7598, 0.96", "-5.2184, -19.3463, 11.4193, 0.96", "-6.68846, -21.259, 13.8292, 0.96", "-7.13208, -21.8058, 14.4558, 1.08", "-8.95219, -23.7803, 16.52, 1.08", "-10.3301, -25.2565, 17.9922, 0.84", "-11.0678, -26.0647, 18.7465, 0.84", "-12.2793, -27.3789, 19.9372, 0.84", "-14.307, -29.5476, 21.6644, 0.84", "-16.4382, -32.0729, 23.6701, 0.84", "-17.0839, -33.0318, 24.4036, 0.84", "-17.995, -34.9056, 25.9245, 0.84", "-18.4366, -36.7015, 27.5776, 0.84", "-18.4096, -38.9505, 29.7954, 0.84", "-17.8228, -41.2616, 32.3407, 0.84", "-16.6587, -43.5795, 35.3375, 0.84", "-15.9632, -44.4701, 36.7553, 0.6", "-14.2063, -46.2063, 39.8182, 0.48", "-12.1296, -47.3086, 42.7764, 0.12", "-9.99992, -47.4377, 45.3588, 0.12", "-7.9685, -46.5899, 47.2878, 0.12", "-6.58561, -45.5271, 48.3646, 0.12", "-9.4634, -52.2101, 56.4376, 0.12", "-13.8938, -58.384, 64.2075, 0.12", "-17.4518, -63.9354, 72.8471, 0.12", "-21.1583, -68.8649, 81.7958, 0.12", "-26.4092, -71.7358, 90.8679, 0.12", "-32.4964, -75.26, 99.1531, 0.12", "-39.4327, -77.3307, 107.26, 0.12", "-46.5489, -79.0948, 115.282, 0.12", "-51.7681, -83.1682, 123.901, 0.12", "-58.1236, -85.3048, 132.455, 0.12", "-64.0375, -85.2423, 141.573, 0.12", "-70.0142, -87.1116, 150.455, 0.12", "-76.6168, -91.5706, 157.847, 0.12", "-83.5255, -95.6248, 165.192, 0.12", "-91.1013, -100.113, 171.563, 0.12", "-100.217, -103.529, 176.396, 0.12", "-110.411, -105.473, 179.626, 0.12", "-120.25, -107.833, 183.591, 0.12", "-130.962, -107.978, 185.421, 0.12", "-141.493, -108.797, 187.981, 0.12", "-151.795, -109.07, 191.434, 0.12", "-162.399, -111.175, 192.543, 0.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.067775, -13.8145, 3.95622, 2.16", "0.400265, -21.5334, 5.52248, 2.16", "0.862043, -29.1491, 7.06779, 2.04", "1.2377, -35.3445, 8.32491, 2.04", "1.45535, -38.934, 9.05326, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.79974, 42.5383, -5.17545, 0.84", "-9.0138, 57.374, -5.17545, 0.84", "-11.2279, 72.2097, -5.17545, 0.84" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "29.3387, 37.8154, -28.1969, 0.6", "30.1819, 38.0979, -28.8186, 0.6", "31.1863, 38.4701, -29.4985, 0.6", "32.2, 38.8421, -30.1215, 1.32", "33.1303, 39.1249, -30.7839, 0.48", "36.7042, 40.1159, -33.4056, 0.48", "37.8501, 40.4204, -34.2425, 0.48", "38.9572, 40.7146, -35.144, 1.08", "39.8334, 40.9642, -35.9103, 0.48", "42.8405, 41.9087, -38.6916, 0.12", "43.5242, 42.1405, -39.4642, 0.72", "43.9625, 42.2926, -40.0136, 0.12", "45.5766, 42.829, -42.3726, 0.12", "46.1245, 43.0416, -43.2499, 1.2", "47.073, 43.5188, -44.8602, 0.12", "48.9502, 44.666, -48.1307, 0.12", "49.5468, 45.083, -49.2243, 1.08", "50.5036, 45.8564, -51.0801, 0.12", "51.5579, 46.8129, -53.2541, 0.12", "52.0968, 47.3119, -54.3454, 0.84", "53.4, 48.4993, -56.7823, 0.12", "54.1037, 49.1385, -57.9467, 0.24", "54.6218, 49.6109, -58.8238, 0.72", "56.4224, 51.0934, -61.7002, 0.12", "57.1456, 51.5809, -62.8464, 0.72", "57.5448, 51.8073, -63.4634, 0.12", "58.1865, 52.1384, -64.5802, 0.12", "59.0199, 52.4996, -66.2644, 1.08", "60.0717, 52.9576, -68.482, 0.12", "60.9417, 53.3491, -70.4703, 0.12", "61.0693, 53.4114, -70.7669, 1.2", "62.7214, 54.2794, -74.5054, 0.12", "64.8609, 55.4755, -79.0308, 0.12", "65.3476, 55.7407, -79.9458, 1.2", "66.0758, 56.1286, -81.1232, 0.12", "67.4005, 56.8233, -82.8627, 0.12", "67.9406, 57.1194, -83.4382, 0.96", "68.7773, 57.6122, -84.0472, 0.12", "69.8855, 58.3424, -84.641, 0.12", "70.7968, 58.9121, -85.1377, 0.72", "71.4341, 59.3104, -85.5003, 0.12", "72.8176, 60.1478, -86.3434, 0.12", "73.2283, 60.3783, -86.6037, 0.48", "73.9331, 60.7489, -87.0708, 0.12", "76.7586, 61.7738, -89.1937, 0.12", "77.6444, 61.9533, -89.9186, 1.44", "78.6987, 62.0074, -90.8067, 0.12", "79.6115, 61.9061, -91.5717, 0.24", "80.2628, 61.7549, -92.1242, 0.72", "83.43, 60.6878, -95.0692, 0.12", "84.0587, 60.4059, -95.6835, 0.96", "84.5717, 60.1886, -96.2079, 0.84", "85.1147, 59.9798, -96.8344, 0.24", "85.6016, 59.8579, -97.4152, 0.24", "87.3417, 59.8706, -99.6616, 0.12", "87.6929, 60.0056, -100.162, 0.84", "88.9836, 60.7373, -102.199, 0.12", "89.5754, 61.1698, -103.201, 0.12", "90.0495, 61.5969, -104.025, 0.6", "91.1514, 62.7431, -105.951, 0.12", "92.0493, 63.7935, -107.371, 0.84", "92.6238, 64.5208, -108.221, 0.12", "92.9986, 65.0534, -108.714, 0.24", "93.4325, 65.6479, -109.164, 0.72", "94.2406, 66.5971, -109.735, 0.12", "95.2835, 67.646, -110.211, 0.12", "95.5655, 67.8945, -110.304, 0.72", "96.4131, 68.5484, -110.557, 0.48", "98.2219, 69.7732, -111.067, 0.12", "101.572, 71.7602, -111.927, 0.12", "102.444, 72.2052, -112.126, 1.2", "103.883, 72.9071, -112.476, 0.12", "105.702, 73.8025, -112.926, 0.12", "107.076, 74.4767, -113.262, 0.12", "108.211, 75.0783, -113.547, 0.84", "109.503, 75.8252, -113.868, 0.24", "114.136, 78.8863, -115.005, 0.24", "114.92, 79.498, -115.212, 0.84", "115.643, 80.166, -115.381, 0.12", "116.97, 81.583, -115.668, 0.12", "117.308, 82.0042, -115.732, 0.48", "118.131, 83.2031, -115.86, 0.12", "120.778, 87.54, -116.123, 0.12", "121.957, 89.5943, -116.265, 0.84", "122.832, 91.1953, -116.384, 0.12", "123.956, 93.3317, -116.552, 0.12", "124.492, 94.4018, -116.636, 0.72", "124.94, 95.363, -116.707, 0.12", "125.594, 97.0713, -116.81, 0.12", "125.792, 97.5606, -116.871, 0.72", "126.247, 98.6625, -117.017, 0.12", "126.653, 99.556, -117.184, 0.12", "127.216, 100.699, -117.435, 0.36", "127.803, 101.804, -117.697, 0.12", "127.928, 102.0, -117.747, 0.6", "128.592, 102.966, -118.018, 0.12", "129.768, 104.519, -118.486, 0.12", "130.206, 105.101, -118.717, 1.2", "130.873, 106.014, -119.12, 0.12", "132.98, 108.935, -120.457, 0.12", "133.447, 109.62, -120.766, 0.84", "133.96, 110.404, -121.112, 0.12", "135.743, 113.332, -122.523, 0.12", "136.404, 114.577, -123.187, 0.48", "136.669, 115.187, -123.538, 0.12", "136.878, 115.811, -123.911, 0.12", "137.027, 116.388, -124.242, 0.6", "137.446, 118.711, -125.503, 0.12", "137.629, 120.067, -126.145, 0.12", "137.7, 120.85, -126.479, 0.84", "137.8, 122.169, -126.971, 0.12", "138.023, 124.628, -127.743, 0.12", "138.091, 125.213, -127.887, 0.96", "138.233, 126.146, -128.075, 0.12", "138.72, 128.61, -128.639, 0.12", "138.912, 129.381, -128.795, 1.08", "139.238, 130.438, -128.963, 0.36", "139.577, 131.36, -129.048, 0.36", "140.176, 132.963, -129.157, 0.72", "140.455, 133.738, -129.193, 0.12", "140.986, 135.307, -129.229, 0.12", "141.214, 136.159, -129.286, 0.48", "141.369, 136.9, -129.355, 0.12", "141.736, 139.008, -129.578, 0.12", "141.829, 139.539, -129.662, 0.84", "142.043, 140.873, -130.009, 0.12", "142.421, 143.325, -130.86, 0.12", "142.532, 144.033, -131.131, 0.96", "142.669, 144.843, -131.47, 0.24", "143.04, 147.003, -132.446, 0.12", "143.135, 147.803, -132.867, 0.72", "143.182, 148.471, -133.261, 0.12", "143.172, 149.478, -133.876, 0.12", "143.141, 149.696, -134.009, 0.96", "142.946, 150.373, -134.513, 0.12", "141.974, 152.633, -136.334, 0.12", "141.82, 152.954, -136.591, 0.96", "141.487, 153.594, -137.069, 0.12", "140.818, 154.836, -137.898, 0.12", "139.536, 157.308, -139.038, 1.2", "139.115, 158.149, -139.292, 0.12", "138.515, 159.476, -139.597, 0.12", "137.947, 160.936, -139.93, 0.84", "137.671, 161.787, -140.112, 0.12", "136.833, 165.132, -140.714, 0.12", "136.645, 166.122, -140.838, 0.84", "136.385, 168.293, -141.207, 0.12", "136.303, 169.841, -141.557, 0.12", "136.312, 170.066, -141.62, 0.48", "136.413, 170.755, -141.806, 0.12", "136.803, 172.007, -142.147, 0.12", "136.944, 172.407, -142.227, 0.48", "137.096, 172.857, -142.244, 0.12", "137.462, 174.157, -142.293, 0.12", "137.682, 175.003, -142.325, 0.6" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "29.3387, 37.8154, -28.1969, 0.48", "29.5837, 36.7906, -28.3776, 0.48", "29.8528, 35.6652, -28.576, 0.12", "30.1551, 34.4006, -28.799, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-170.394, 133.077, -168.99, 0.36", "-167.502, 133.004, -171.872, 0.36", "-166.416, 132.92, -172.909, 0.12", "-165.734, 132.822, -173.588, 0.84", "-163.842, 132.477, -175.423, 0.12", "-163.203, 132.337, -176.137, 0.12", "-162.699, 132.208, -176.724, 0.12", "-162.352, 132.065, -177.15, 0.6", "-161.561, 131.587, -178.612, 0.6", "-160.97, 131.126, -179.975, 0.6", "-160.039, 130.076, -182.795, 0.12", "-159.82, 129.808, -183.492, 0.12", "-159.513, 129.463, -184.377, 0.84", "-157.998, 127.722, -188.863, 0.12", "-157.801, 127.48, -189.462, 0.6", "-156.826, 126.159, -192.615, 0.36", "-155.67, 124.642, -196.047, 0.36", "-155.1, 123.941, -197.707, 0.36" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-170.394, 133.077, -168.99, 0.48", "-173.09, 133.63, -170.477, 0.48", "-176.366, 134.369, -172.224, 0.48", "-177.854, 134.704, -172.968, 1.2", "-180.269, 135.297, -174.049, 0.24", "-181.656, 135.691, -174.623, 0.24", "-184.591, 136.589, -175.75, 0.24", "-185.435, 136.932, -176.067, 0.96", "-186.509, 137.423, -176.414, 0.36", "-188.666, 138.562, -177.116, 0.36", "-190.234, 139.639, -177.7, 0.84", "-191.031, 140.301, -178.04, 0.24", "-193.988, 143.234, -179.541, 0.24", "-194.175, 143.45, -179.67, 0.72", "-194.994, 144.557, -180.365, 0.72", "-197.186, 148.082, -182.607, 0.24", "-197.646, 148.911, -183.118, 1.44", "-198.722, 151.108, -184.396, 1.44", "-200.052, 154.144, -185.997, 0.48", "-200.558, 155.312, -186.565, 0.96", "-201.304, 156.749, -187.381, 0.36", "-202.038, 157.803, -187.984, 0.36", "-202.758, 158.474, -188.488, 0.36", "-203.79, 159.108, -189.203, 0.6", "-204.988, 159.578, -190.005, 0.24", "-209.908, 160.765, -192.998, 0.24", "-212.089, 161.091, -194.231, 1.32", "-216.25, 161.443, -196.37, 0.84", "-218.902, 161.625, -197.621, 0.12", "-220.539, 161.769, -198.323, 0.24", "-224.953, 162.426, -199.949, 0.24", "-226.127, 162.725, -200.278, 1.08", "-228.258, 163.513, -200.836, 0.36", "-231.754, 165.271, -201.458, 0.36", "-233.707, 166.429, -201.751, 1.32", "-235.91, 167.905, -202.293, 0.36", "-237.16, 168.842, -202.799, 0.6", "-238.395, 169.724, -203.416, 0.6", "-238.972, 170.131, -203.738, 0.6", "-240.347, 170.941, -204.57, 0.36", "-243.671, 172.49, -206.633, 0.36", "-245.594, 173.249, -208.07, 0.36", "-246.888, 173.741, -209.095, 0.96", "-249.792, 174.99, -211.393, 0.96", "-251.896, 176.068, -213.185, 0.36", "-252.83, 176.642, -213.997, 0.36", "-256.471, 179.325, -217.125, 0.96", "-257.453, 180.086, -218.007, 0.24", "-259.238, 181.44, -219.792, 0.12", "-261.299, 182.885, -221.967, 0.6", "-262.189, 183.526, -222.862, 0.6", "-263.222, 184.318, -223.87, 0.24", "-263.444, 184.476, -224.035, 0.48", "-265.378, 185.619, -225.583, 0.36", "-265.977, 185.816, -226.053, 1.2", "-266.535, 185.887, -226.327, 1.2" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-54.4878, 22.6203, -12.3419, 0.6", "-58.9182, 23.6514, -14.1096, 0.6", "-60.8483, 24.119, -14.7932, 0.6", "-62.4215, 24.5267, -15.2743, 0.6", "-67.5079, 25.9168, -16.6819, 0.6", "-70.0898, 26.6621, -17.3346, 0.6", "-72.6148, 27.389, -17.9697, 1.56", "-73.7138, 27.6993, -18.1746, 0.36", "-76.2773, 28.4178, -18.6462, 0.36", "-77.142, 28.6589, -18.8272, 0.72", "-78.2863, 28.9922, -19.1091, 0.96", "-81.2015, 29.8112, -20.0661, 0.12", "-82.8542, 30.2815, -20.6601, 0.12", "-83.614, 30.5043, -20.9253, 0.48", "-85.8793, 31.2106, -21.6825, 0.36", "-88.7733, 32.1534, -22.5533, 0.12", "-91.7795, 33.1887, -23.3281, 1.2", "-94.3667, 34.1613, -23.8406, 0.36", "-96.8593, 35.1368, -24.225, 0.12", "-98.1956, 35.636, -24.3578, 0.84", "-99.4876, 36.1, -24.3904, 0.12", "-101.395, 36.7499, -24.3722, 0.12", "-102.898, 37.2417, -24.4357, 1.2", "-104.648, 37.7604, -24.5885, 0.36", "-106.642, 38.3064, -24.8184, 0.36", "-109.832, 39.1018, -25.2324, 0.36", "-111.176, 39.4413, -25.4156, 1.08", "-114.163, 40.2046, -25.8332, 0.12", "-118.656, 41.3818, -26.464, 0.24", "-119.854, 41.7424, -26.6173, 1.56", "-121.994, 42.4899, -26.8797, 0.36", "-124.071, 43.2896, -27.1047, 0.36", "-125.219, 43.817, -27.1913, 0.72", "-126.207, 44.3353, -27.2545, 0.12", "-129.504, 46.3274, -27.7091, 0.36", "-131.193, 47.3702, -28.0331, 0.96", "-132.52, 48.1624, -28.3506, 0.24", "-135.264, 49.6122, -29.1128, 0.24", "-137.437, 50.6026, -29.7759, 0.72", "-139.353, 51.2355, -30.3915, 0.12", "-140.739, 51.4514, -30.8539, 0.12", "-142.194, 51.4631, -31.2803, 0.6", "-143.497, 51.1873, -31.5845, 0.6", "-144.24, 50.9117, -31.7451, 0.12", "-146.358, 49.9899, -32.1175, 0.12", "-147.272, 49.5793, -32.2863, 0.6", "-148.848, 48.9328, -32.6153, 0.12", "-153.113, 47.4556, -33.5533, 0.12", "-155.185, 46.8948, -34.0157, 0.84", "-156.37, 46.7039, -34.2738, 0.12", "-158.742, 46.6248, -34.7753, 0.12", "-160.739, 46.8743, -35.1594, 0.12", "-162.093, 47.4069, -35.4205, 0.84", "-163.27, 48.2154, -35.6285, 0.36", "-165.494, 50.0795, -35.9458, 0.12", "-165.972, 50.5313, -36.0089, 0.72", "-167.005, 51.5672, -36.1248, 0.12", "-169.299, 53.8181, -36.4062, 0.12", "-170.488, 54.9075, -36.5758, 0.96", "-171.562, 55.7371, -36.7297, 0.12", "-173.86, 57.224, -37.1658, 0.12", "-175.085, 57.9252, -37.4223, 0.84", "-176.486, 58.6338, -37.7112, 0.12", "-178.31, 59.4848, -38.1548, 0.12", "-181.224, 60.8364, -39.0082, 0.12", "-183.511, 61.8993, -39.7096, 0.84", "-184.341, 62.2824, -40.0095, 0.36", "-186.35, 63.2292, -40.7742, 0.12", "-188.724, 64.2878, -41.7085, 0.96", "-190.537, 65.0497, -42.4153, 0.12", "-193.865, 66.3655, -43.6893, 0.12", "-196.48, 67.292, -44.6008, 1.08", "-198.149, 67.8195, -45.1684, 0.12", "-202.326, 68.9299, -46.5119, 0.12", "-203.415, 69.1498, -46.7956, 0.96", "-204.532, 69.3105, -47.0645, 0.12", "-205.314, 69.3742, -47.2177, 0.12", "-206.242, 69.4167, -47.3211, 0.72", "-207.468, 69.4681, -47.5639, 0.12", "-210.027, 69.627, -48.17, 0.12", "-211.137, 69.7419, -48.4845, 0.12", "-212.646, 69.9616, -48.9394, 0.96", "-213.847, 70.1789, -49.3657, 0.12", "-218.201, 71.1318, -51.077, 0.12", "-219.542, 71.491, -51.6903, 0.84", "-220.685, 71.8606, -52.2568, 0.12", "-222.673, 72.5505, -53.2378, 0.12", "-224.642, 73.305, -54.1307, 1.2", "-225.578, 73.6855, -54.5022, 0.24", "-229.422, 75.2347, -55.668, 0.12", "-230.505, 75.6562, -55.9921, 0.84", "-231.419, 76.0168, -56.3116, 0.12", "-233.698, 76.9277, -57.1206, 0.12", "-234.287, 77.1662, -57.3172, 0.12", "-235.734, 77.7538, -57.7874, 0.96", "-237.37, 78.4136, -58.2879, 0.12", "-243.714, 80.8374, -60.236, 0.12", "-245.612, 81.5187, -60.8611, 1.08", "-246.342, 81.7471, -61.1057, 0.24", "-248.367, 82.3145, -61.7564, 0.12", "-249.227, 82.5274, -62.0185, 1.08", "-250.846, 82.8477, -62.4466, 0.12", "-255.823, 83.4233, -63.4525, 0.12", "-257.992, 83.6222, -63.9303, 0.12", "-259.325, 83.7127, -64.2412, 0.6", "-260.128, 83.7486, -64.4429, 0.12", "-261.71, 83.8143, -64.849, 0.12", "-262.767, 83.8342, -65.1096, 0.96" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-54.4878, 22.6203, -12.3419, 0.12", "-58.4625, 25.5033, -11.4606, 0.12", "-60.3408, 26.7611, -10.9493, 0.6", "-62.8897, 28.3974, -10.2106, 0.12", "-66.1351, 30.4413, -9.05, 0.12", "-67.8659, 31.4989, -8.37858, 0.96", "-69.0347, 32.1979, -7.91117, 0.12", "-71.7654, 33.6813, -6.6734, 0.12", "-72.9565, 34.2433, -6.15435, 0.84", "-75.7385, 35.4008, -5.01784, 0.12", "-77.2348, 35.9475, -4.44774, 0.12", "-78.3382, 36.3035, -4.05001, 1.44", "-80.1331, 36.8238, -3.47676, 0.12", "-83.3575, 37.6702, -2.67206, 0.12", "-83.8264, 37.7744, -2.58067, 0.84", "-85.7141, 38.1487, -2.33248, 0.12", "-88.141, 38.6226, -2.01284, 0.12", "-88.6737, 38.7317, -1.90484, 1.08", "-89.7149, 38.9854, -1.6298, 0.12", "-92.5562, 39.8321, -0.755992, 0.12", "-92.8283, 39.9251, -0.670433, 1.2", "-94.0936, 40.4239, -0.288074, 1.2", "-97.1636, 41.8117, 0.733947, 0.12", "-98.5867, 42.5177, 1.20617, 0.12", "-99.574, 43.0657, 1.53281, 0.6", "-99.9777, 43.3036, 1.66036, 0.12", "-101.294, 44.094, 1.9965, 0.12", "-102.435, 44.8067, 2.18393, 0.6", "-103.636, 45.5168, 2.31683, 0.12", "-104.571, 46.0022, 2.47076, 0.6", "-105.087, 46.2057, 2.5592, 0.12", "-106.089, 46.5064, 2.73086, 0.12", "-107.45, 46.7802, 2.96214, 0.96", "-110.397, 46.8523, 3.36989, 0.48", "-113.048, 46.5583, 3.66267, 0.12", "-116.192, 45.8712, 3.81255, 0.12", "-117.113, 45.5712, 3.80166, 0.72", "-118.268, 45.0333, 3.71222, 0.12", "-121.961, 42.7852, 3.17893, 0.12", "-122.877, 42.1064, 2.97647, 1.08", "-124.395, 40.8052, 2.60057, 0.12", "-126.032, 39.34, 2.18017, 0.12", "-127.964, 37.6485, 1.6979, 0.12", "-129.055, 36.7046, 1.4423, 0.96", "-129.885, 35.99, 1.26851, 0.12", "-131.034, 34.9994, 1.08029, 0.12", "-132.111, 34.0752, 0.979023, 0.72", "-132.319, 33.9021, 0.942439, 0.12", "-133.976, 32.6152, 0.608508, 0.12", "-134.544, 32.187, 0.481429, 0.6", "-135.194, 31.6834, 0.330225, 0.6", "-135.425, 31.5001, 0.275554, 0.12", "-137.252, 30.0394, -0.136617, 0.12", "-138.943, 28.7224, -0.512741, 0.84", "-139.47, 28.3215, -0.627453, 0.12", "-140.989, 27.1686, -0.926052, 0.12", "-141.526, 26.7774, -1.00744, 0.96", "-142.216, 26.2528, -1.05739, 0.96" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "14.2189, -21.3648, 8.42628, 1.08", "14.8142, -23.3511, 8.67255, 1.08", "15.3637, -25.2242, 8.88291, 0.96", "16.0351, -27.5467, 9.11078, 0.96", "16.4876, -29.3142, 9.25731, 0.96", "16.922, -31.1816, 9.39308, 0.96", "17.1855, -32.3106, 9.5218, 0.96", "17.6263, -34.1289, 9.83942, 1.56", "18.0296, -35.8172, 10.1976, 1.08", "18.7312, -38.7872, 10.8825, 0.96", "19.1248, -40.2945, 11.2711, 0.96", "19.9015, -42.7712, 11.9695, 0.96", "20.8808, -45.5144, 12.8919, 1.32", "21.5107, -47.1794, 13.523, 0.96", "22.1607, -48.7991, 14.2322, 0.72", "22.9886, -50.7055, 15.1539, 0.84", "23.7424, -52.6002, 16.0199, 0.6", "24.5327, -54.8971, 16.9541, 0.6", "24.8021, -55.72, 17.2829, 1.32", "25.2599, -57.1375, 17.811, 0.96", "25.4288, -57.6837, 17.9784, 0.96", "26.4213, -60.8365, 18.7281, 0.84", "26.8003, -61.8826, 18.9517, 0.72", "27.4672, -63.6454, 19.2356, 0.72", "28.4867, -66.206, 19.6033, 1.08", "29.5381, -68.5832, 19.8842, 1.08", "30.371, -70.3249, 20.1246, 0.72", "31.3896, -72.389, 20.4393, 0.72", "33.3577, -76.5499, 21.0804, 0.84", "34.3976, -78.8828, 21.4489, 0.84", "35.9287, -82.3274, 21.9776, 0.84", "36.7352, -84.1031, 22.2214, 0.6", "37.3147, -85.3658, 22.3969, 0.6", "38.096, -86.9865, 22.62, 0.6", "39.1906, -89.0521, 22.9491, 0.96", "40.4968, -91.7014, 23.3378, 0.96", "41.4695, -93.9761, 23.5975, 0.96", "42.2549, -95.9307, 23.767, 0.72", "42.8971, -97.6563, 23.9019, 0.96", "43.3496, -99.0531, 24.0004, 0.96", "44.8176, -104.436, 24.33, 0.72", "46.0093, -109.88, 24.5958, 0.72", "46.2512, -111.281, 24.6407, 0.72", "46.6333, -113.933, 24.6692, 0.36", "46.8302, -115.548, 24.7168, 0.12", "47.0014, -116.901, 24.7835, 0.84", "47.2235, -118.391, 24.9035, 0.48", "47.7836, -120.894, 25.1943, 0.12", "48.1977, -122.22, 25.3751, 0.72", "48.8404, -123.778, 25.6198, 0.12", "49.3715, -124.895, 25.8059, 0.12", "50.0924, -126.344, 26.0453, 0.48", "50.6807, -127.475, 26.2191, 0.24", "51.2533, -128.514, 26.367, 0.12", "51.5031, -129.024, 26.4155, 0.96", "51.7835, -129.703, 26.4199, 0.12", "52.1795, -130.983, 26.4303, 0.12", "52.3704, -131.802, 26.4379, 0.72", "53.3888, -139.208, 26.1323, 0.72", "53.0269, -146.584, 24.9293, 0.72", "53.4818, -153.639, 22.4822, 0.72", "53.6688, -160.808, 20.3499, 0.72" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "14.2189, -21.3648, 8.42628, 0.84", "15.7318, -25.7166, 11.8669, 0.84", "16.293, -27.8389, 13.4723, 0.84", "16.7714, -30.9739, 15.6746, 0.84", "16.9681, -33.0393, 17.064, 1.08", "17.0448, -35.1138, 18.4622, 0.72", "17.0812, -36.5048, 19.327, 0.72", "17.0099, -40.0957, 21.2101, 0.72", "17.1327, -42.9366, 22.5166, 0.96", "17.3611, -45.0333, 23.4183, 0.96", "18.1646, -49.4634, 25.2517, 0.84", "19.2403, -53.8124, 27.0212, 0.72", "19.7536, -55.4167, 27.6229, 0.72", "21.8205, -60.3322, 29.181, 0.72", "23.3179, -63.2402, 29.9967, 0.72", "23.9915, -64.3605, 30.2557, 1.2", "24.8433, -65.4607, 30.4993, 0.48", "26.7668, -67.5415, 31.0595, 0.48", "28.7292, -69.5984, 31.6363, 0.48", "30.34, -71.398, 32.103, 0.48", "31.57, -72.7952, 32.412, 0.48", "34.779, -76.2896, 33.254, 0.48", "35.6624, -77.1852, 33.4961, 0.48", "37.5383, -78.9359, 34.0445, 0.12", "39.5691, -80.9809, 34.7651, 0.12", "40.0003, -81.5359, 34.9528, 0.12", "44.5216, -90.5906, 37.4214, 0.12", "49.3486, -99.6757, 39.0593, 0.12", "54.2154, -108.516, 41.6456, 0.12", "58.5117, -117.919, 42.9251, 0.12", "63.3506, -127.144, 43.0289, 0.12", "66.9957, -136.901, 43.2295, 0.12", "69.5227, -146.902, 41.7776, 0.12", "74.2863, -156.013, 40.0981, 0.12", "77.7063, -165.67, 38.2068, 0.12", "82.1889, -174.724, 35.6658, 0.12", "85.9257, -184.277, 33.8496, 0.12", "90.6286, -193.572, 33.9056, 0.12", "95.8946, -202.552, 33.5123, 0.12", "101.739, -211.045, 35.0054, 0.12" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-12.1789, 39.4904, 37.3909, 0.12", "-14.1071, 46.6898, 43.7996, 0.12", "-14.9172, 52.6303, 51.589, 0.12", "-15.6118, 58.0838, 59.7376, 0.12", "-14.7245, 62.3552, 68.546, 0.12", "-13.678, 64.9161, 77.9783, 0.12", "-11.3521, 69.4072, 86.4069, 0.12", "-9.52925, 74.026, 94.8901, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-12.1789, 39.4904, 37.3909, 0.24", "-14.8965, 47.8226, 44.5074, 0.12", "-17.107, 56.9167, 50.8212, 0.12", "-19.2296, 66.8612, 55.7257, 0.12", "-22.4836, 77.0161, 59.4328, 0.12", "-24.0697, 87.7631, 62.5054, 0.12", "-27.2263, 97.5247, 67.2173, 0.12", "-30.7764, 105.801, 74.0259, 0.12", "-36.6498, 112.777, 80.6811, 0.12", "-44.1146, 118.557, 86.8715, 0.12", "-50.1112, 125.4, 93.5548, 0.12", "-55.5597, 133.282, 99.5245, 0.12", "-60.5026, 141.826, 105.004, 0.12", "-64.9109, 151.68, 108.307, 0.12", "-71.5951, 160.632, 109.933, 0.12", "-78.3696, 169.658, 110.235, 0.12", "-85.88, 178.048, 109.425, 0.12", "-93.1795, 186.641, 108.852, 0.12", "-100.841, 194.922, 109.285, 0.12", "-107.713, 203.879, 109.332, 0.12", "-116.397, 210.859, 111.153, 0.12", "-124.103, 218.867, 113.138, 0.12", "-130.345, 228.034, 115.252, 0.12", "-136.564, 237.456, 115.294, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-117.287, -101.935, 117.833, 0.12", "-122.736, -107.169, 122.677, 0.12", "-128.234, -110.988, 128.654, 0.12", "-134.54, -115.366, 133.302, 0.12", "-141.331, -118.493, 138.267, 0.12", "-147.492, -120.42, 144.503, 0.12", "-152.924, -123.161, 151.1, 0.12", "-158.337, -124.595, 158.114, 0.12", "-164.666, -124.455, 164.475, 0.12", "-169.943, -123.191, 171.623, 0.12", "-175.202, -120.081, 178.198, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-117.287, -101.935, 117.833, 0.24", "-123.425, -107.849, 123.264, 0.12", "-128.164, -114.482, 129.238, 0.12", "-131.876, -121.833, 135.096, 0.12", "-133.67, -129.511, 141.419, 0.12", "-134.602, -137.665, 147.316, 0.12", "-134.269, -146.015, 153.0, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-6.85569, 4.03018, 0.675305, 0.12", "-7.22093, -4.26288, -6.6879, 0.12", "-6.60459, -10.6381, -15.7489, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.85569, 4.03018, 0.675305, 0.12", "-8.44541, -8.62345, -3.14805, 0.12", "-7.73945, -21.7193, -5.44153, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "15.1775, 56.8253, 14.6683, 0.96", "15.2289, 62.2268, 15.8216, 0.96", "15.358, 65.7912, 16.6777, 0.24", "15.4768, 68.0123, 17.2368, 0.12", "15.5967, 70.1943, 17.8169, 1.32", "15.7496, 73.4054, 18.7107, 0.12", "15.8289, 75.2667, 19.2815, 0.12", "15.9829, 77.7371, 20.1893, 0.6", "16.0471, 79.5453, 20.8857, 0.12", "16.0385, 82.3549, 22.0083, 0.12", "15.9495, 84.6745, 22.9504, 1.2", "15.7967, 87.1215, 23.9467, 0.12", "15.4449, 92.4992, 26.0733, 0.12", "15.2361, 95.4514, 27.2351, 1.2", "14.9944, 98.5036, 28.433, 0.12", "14.7885, 101.294, 29.4915, 0.12", "14.727, 102.464, 29.9016, 0.84", "14.6981, 103.65, 30.2667, 0.24", "14.7178, 106.162, 30.993, 0.12", "14.7342, 107.481, 31.3698, 1.08", "14.749, 109.697, 32.0064, 0.12", "14.7085, 111.949, 32.6913, 0.12", "14.6582, 113.374, 33.1366, 1.2", "14.5767, 115.172, 33.7112, 0.12", "14.2621, 120.851, 35.5546, 0.12", "14.2153, 121.598, 35.7999, 1.08", "13.9748, 123.735, 36.5565, 0.12", "13.5925, 125.993, 37.4339, 0.12" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.1775, 56.8253, 14.6683, 0.12", "15.8433, 57.5602, 16.0153, 0.12", "16.0765, 57.8542, 16.5316, 0.96", "17.5894, 60.0211, 20.0929, 0.12", "18.4077, 61.3229, 22.1184, 0.12", "18.7043, 61.8779, 22.9088, 1.32", "18.9759, 62.5021, 23.7212, 0.12", "19.3571, 63.8391, 25.2783, 0.12", "19.4208, 64.417, 25.8455, 1.44", "19.3793, 64.8714, 26.1663, 0.24", "19.1761, 66.129, 26.947, 0.24", "19.0218, 67.213, 27.565, 0.24", "18.9359, 67.8335, 27.8822, 1.56", "18.7187, 69.744, 28.7118, 0.12", "18.6336, 70.6654, 29.094, 0.96", "18.5996, 71.4013, 29.4518, 0.12", "18.5666, 73.2926, 30.5034, 0.12", "18.5712, 73.9112, 30.8709, 0.96", "18.5743, 74.3794, 31.1582, 0.12", "18.5643, 75.8028, 32.0573, 0.12", "18.5069, 77.9569, 33.5046, 0.96", "18.4238, 79.2524, 34.4104, 0.12", "18.3215, 80.3042, 35.0926, 0.12", "18.2586, 80.8335, 35.3818, 0.84", "18.2296, 80.9917, 35.4667, 0.12", "17.989, 81.9334, 35.9274, 0.12", "17.7173, 82.7305, 36.2358, 0.84", "17.1082, 84.1718, 36.8892, 0.12", "16.6452, 84.9155, 37.3224, 1.08", "15.2879, 86.1095, 38.3969, 0.12", "14.6676, 86.1688, 38.7668, 0.12", "14.42, 86.0867, 38.8817, 0.84", "14.2538, 86.0018, 38.9534, 0.12", "13.436, 85.4677, 39.2841, 0.12", "12.3979, 84.6698, 39.5848, 0.12", "12.0399, 84.3869, 39.6055, 0.6", "11.6747, 84.1085, 39.6315, 0.12", "10.7007, 89.853, 44.4646, 0.12", "10.1637, 94.756, 50.2073, 0.12" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "87.3239, -10.0034, -26.6838, 0.24", "92.4439, -8.27087, -27.5111, 0.24", "93.5281, -7.89503, -27.6648, 0.96", "94.6691, -7.47255, -27.8312, 0.96", "97.4721, -6.41129, -28.2211, 0.12", "98.5969, -5.99316, -28.3503, 0.48", "103.131, -4.33268, -28.8142, 0.12", "104.62, -3.76116, -28.9097, 0.12", "106.042, -3.24282, -29.0545, 0.48", "106.787, -3.0027, -29.1497, 0.12", "109.824, -2.17752, -29.5755, 0.12", "110.856, -1.95144, -29.802, 0.48", "111.414, -1.88262, -30.0062, 0.12", "114.923, -1.55006, -31.593, 0.12", "115.712, -1.46586, -32.0695, 0.72", "116.416, -1.36639, -32.5871, 0.12", "119.029, -0.904377, -34.6947, 0.12", "121.762, -0.333907, -36.8372, 0.12", "122.232, -0.212644, -37.1887, 0.84", "125.763, 0.844271, -39.649, 0.12", "128.109, 1.60684, -41.1844, 0.12", "129.732, 2.14758, -42.1154, 0.12", "131.335, 2.63094, -42.8113, 0.12", "133.327, 3.10619, -43.5561, 0.72", "134.314, 3.25052, -43.9075, 0.12", "134.775, 3.26351, -44.0484, 0.12", "136.305, 3.20669, -44.5838, 0.12", "139.988, 2.96178, -46.1712, 0.12", "142.745, 2.73693, -47.4385, 0.12", "143.49, 2.67633, -47.803, 0.48", "145.065, 2.60072, -48.6103, 0.12", "147.394, 2.56129, -49.8629, 0.48", "150.156, 2.59647, -51.367, 0.12", "151.36, 2.64018, -52.1355, 0.24", "153.599, 2.72858, -53.7087, 0.24", "154.269, 2.72299, -54.2751, 0.6", "155.951, 2.52284, -56.0063, 0.24", "156.784, 2.20473, -57.0907, 0.12", "159.411, 0.463221, -61.2928, 0.12", "159.95, -0.112855, -62.3773, 0.48", "160.66, -1.26026, -64.105, 0.12", "161.128, -2.27304, -65.4105, 0.36", "161.677, -3.9501, -67.1973, 0.12", "162.185, -5.67493, -68.7357, 0.12", "162.806, -7.77267, -70.1903, 0.12", "163.088, -8.54051, -70.6278, 0.72", "163.448, -9.41234, -71.0111, 0.12", "164.414, -11.7326, -71.7932, 0.12", "165.129, -13.4364, -72.1996, 0.84", "165.633, -14.6708, -72.4161, 0.12", "167.032, -17.7654, -72.875, 0.12", "168.156, -20.344, -73.2517, 0.12", "168.335, -20.8275, -73.2812, 0.48", "168.575, -21.6082, -73.2864, 0.12", "168.984, -23.1986, -73.268, 0.12", "169.116, -23.7676, -73.2525, 0.36", "169.388, -25.0029, -73.2282, 0.12", "170.628, -30.0959, -72.8869, 0.12", "170.97, -31.2352, -72.75, 0.84", "171.232, -31.9577, -72.6393, 0.12", "172.211, -34.3302, -72.2545, 0.12", "172.724, -35.3552, -72.1405, 0.84", "173.185, -36.0893, -72.1036, 0.12", "175.582, -39.2867, -72.1821, 0.12", "176.316, -40.2228, -72.2013, 0.72", "177.283, -41.4208, -72.2523, 0.12", "179.086, -43.4613, -72.4679, 1.32", "179.67, -44.1239, -72.5721, 0.48" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "87.3239, -10.0034, -26.6838, 0.12", "89.8201, -8.25451, -25.3656, 0.12", "95.4011, -4.46717, -22.4643, 0.12", "99.7137, -1.70935, -20.3271, 0.12", "103.905, 0.834831, -18.3425, 0.12", "105.357, 1.66535, -17.6533, 0.48", "106.266, 2.16488, -17.2706, 0.12", "106.938, 2.47766, -17.0289, 0.12", "109.554, 3.32638, -16.4544, 0.12", "110.878, 3.66969, -16.2981, 0.84", "113.157, 4.12736, -16.4115, 0.12", "117.365, 4.96312, -16.8025, 0.12", "118.313, 5.14878, -16.9379, 0.48", "119.543, 5.37707, -17.2216, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.45535, -38.934, 9.05326, 1.44", "1.49215, -41.9022, 7.26492, 1.44", "1.42255, -43.7057, 6.28372, 1.44", "1.25021, -46.527, 4.88559, 1.44", "1.18861, -47.831, 4.29781, 1.44", "1.13339, -50.2102, 3.13399, 1.44", "1.08044, -52.6042, 1.90392, 1.44", "0.956985, -54.4331, 0.943439, 1.2", "0.938137, -55.565, 0.388917, 1.2", "1.00725, -56.939, -0.219282, 1.2", "1.28666, -59.9821, -1.44113, 1.2", "1.75267, -63.9909, -3.00422, 1.2", "1.99914, -65.7575, -3.69786, 1.2", "2.60925, -69.8764, -5.3633, 1.2", "3.03783, -72.7665, -6.50449, 1.2", "3.33375, -74.9366, -7.27502, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.45535, -38.934, 9.05326, 0.96", "0.717474, -43.3682, 10.5996, 0.96", "0.112936, -46.7913, 11.9152, 1.08", "-0.677073, -51.091, 13.7346, 1.32", "-0.926899, -52.5299, 14.3487, 1.32", "-1.4651, -55.9472, 15.7529, 1.32", "-2.05461, -60.3293, 17.4925, 1.32", "-2.25739, -62.6286, 18.3499, 1.32", "-2.42995, -65.5536, 19.5643, 1.32", "-2.52203, -67.7469, 20.4592, 1.32", "-2.5577, -70.3358, 21.4507, 1.32", "-2.48599, -72.0987, 22.0058, 1.32", "-2.19462, -75.5156, 22.8161, 1.2", "-1.94572, -78.07, 23.4302, 1.2", "-1.58543, -81.1118, 24.0675, 1.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-266.535, 185.887, -226.327, 0.12", "-266.473, 186.971, -227.384, 0.12", "-266.398, 188.272, -228.655, 0.12", "-266.252, 190.825, -231.146, 0.12", "-266.18, 192.09, -232.381, 0.36" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-266.535, 185.887, -226.327, 0.24", "-268.493, 184.448, -226.022, 0.24", "-269.312, 183.846, -225.894, 0.12", "-269.777, 183.504, -225.822, 0.6", "-270.562, 182.928, -225.7, 0.12", "-271.435, 182.286, -225.564, 0.12", "-272.957, 181.167, -225.327, 0.36" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-262.767, 83.8342, -65.1096, 0.12", "-265.807, 83.3306, -68.5662, 0.12", "-268.304, 82.917, -71.4051, 0.12", "-271.452, 82.3956, -74.9842, 0.12", "-274.539, 81.8844, -78.4929, 0.12" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-262.767, 83.8342, -65.1096, 0.12", "-264.499, 84.6693, -64.8433, 0.12", "-268.673, 86.8626, -64.2313, 0.12", "-269.694, 87.4459, -64.0862, 0.6", "-271.131, 88.3276, -63.8879, 0.12", "-272.923, 89.4735, -63.6505, 0.12", "-274.417, 90.4611, -63.4605, 0.6", "-275.281, 91.0672, -63.2942, 0.12", "-276.397, 91.8917, -63.0219, 0.12", "-277.62, 92.6972, -62.6836, 0.6", "-278.756, 93.3856, -62.3433, 0.12", "-280.051, 94.0746, -61.9566, 0.12", "-283.2, 95.6186, -60.7568, 0.72", "-283.964, 95.9763, -60.4332, 0.12", "-286.906, 97.3105, -58.9792, 0.12", "-287.556, 97.6109, -58.6714, 0.6", "-288.704, 98.1803, -58.1446, 0.6", "-293.102, 100.691, -56.6633, 0.12", "-293.839, 101.171, -56.5169, 0.48", "-296.241, 102.8, -56.2265, 0.12", "-298.988, 104.553, -56.2958, 0.84", "-299.819, 104.976, -56.4287, 0.12", "-304.306, 106.719, -57.7785, 0.12", "-305.284, 106.95, -58.3214, 0.96", "-306.301, 107.023, -58.9635, 0.24", "-309.291, 106.782, -61.0033, 0.12", "-311.641, 106.328, -62.5498, 0.12", "-312.473, 106.083, -63.108, 0.84", "-315.926, 104.499, -65.4639, 0.12", "-318.391, 103.267, -67.2938, 0.12", "-319.144, 102.877, -67.9091, 0.6" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-175.202, -120.081, 178.198, 0.12", "-184.396, -120.883, 183.261, 0.12", "-193.665, -123.281, 187.636, 0.12", "-201.571, -127.272, 193.326, 0.12", "-210.542, -131.563, 196.777, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-175.202, -120.081, 178.198, 0.24", "-184.24, -123.193, 189.252, 0.12", "-193.054, -128.428, 199.668, 0.12", "-201.922, -133.789, 209.972, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.60459, -10.6381, -15.7489, 0.12", "-6.09849, -16.1559, -26.1751, 0.12", "-4.78643, -21.3759, -36.6841, 0.12", "-4.68267, -25.5433, -47.7308, 0.12", "-4.69051, -31.3877, -57.9899, 0.12", "-3.36759, -35.774, -68.8719, 0.12", "-1.20433, -42.0276, -78.6505, 0.12", "-0.485819, -49.6639, -87.627, 0.12", "-0.087311, -57.7043, -96.2642, 0.12", "-0.857481, -64.5802, -105.832, 0.12", "-3.32911, -70.5466, -115.716, 0.12", "-4.50252, -77.0828, -125.479, 0.12", "-6.86043, -84.8257, -134.075, 0.12", "-7.04588, -92.6267, -142.936, 0.12", "-6.69912, -100.037, -152.122, 0.12", "-4.34114, -108.154, -160.365, 0.12", "-0.965669, -115.698, -168.798, 0.12", "3.96317, -123.516, -176.146, 0.12", "10.9701, -130.283, -182.818, 0.12", "18.2232, -136.728, -189.546, 0.12", "25.6224, -144.247, -194.849, 0.12", "30.9479, -152.518, -201.378, 0.12", "37.3282, -158.862, -209.023, 0.12", "43.2819, -164.384, -217.595, 0.12", "47.3017, -170.185, -227.061, 0.12", "51.2144, -177.227, -235.692, 0.12", "56.053, -184.795, -243.356, 0.12", "60.3002, -193.037, -250.666, 0.12", "63.6335, -201.874, -257.751, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-6.60459, -10.6381, -15.7489, 0.24", "-6.9998, -17.4871, -21.4749, 0.12", "-6.54121, -23.8984, -27.6827, 0.12", "-5.27785, -31.6365, -31.9696, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-7.73945, -21.7193, -5.44153, 0.12", "-7.49768, -31.1629, -11.5245, 0.12", "-8.39671, -41.1557, -16.5819, 0.12", "-7.56641, -51.9186, -19.6986, 0.12", "-6.45464, -62.9126, -21.7325, 0.12", "-4.09542, -73.8929, -22.0613, 0.12", "-2.26612, -84.9132, -20.8571, 0.12", "0.912016, -95.3531, -18.1834, 0.12", "5.06098, -105.185, -14.6679, 0.12", "8.72376, -115.716, -13.2776, 0.12", "11.1803, -126.493, -11.2632, 0.12", "15.427, -136.89, -11.581, 0.12", "19.37, -147.409, -11.3602, 0.12", "23.904, -157.58, -9.86138, 0.12", "28.8229, -167.385, -7.43017, 0.12", "33.0169, -177.369, -4.43594, 0.12", "38.2996, -187.226, -3.3542, 0.12", "43.3257, -197.272, -3.12818, 0.12", "48.5042, -207.202, -4.03397, 0.12", "52.9945, -217.486, -3.4619, 0.12", "57.7835, -227.456, -1.48661, 0.12", "62.7858, -237.2, 1.01839, 0.12", "68.3582, -246.913, 1.93909, 0.12", "74.8127, -256.016, 3.24936, 0.12", "83.2654, -263.198, 5.04196, 0.12", "90.2146, -272.026, 4.9287, 0.12", "96.9127, -281.003, 5.82444, 0.12", "103.168, -290.288, 4.88042, 0.12", "109.582, -298.938, 1.67256, 0.12", "115.722, -307.857, -1.32269, 0.12", "123.095, -314.756, -6.25268, 0.12", "130.278, -320.025, -13.0992, 0.12", "138.464, -324.328, -19.48, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.73945, -21.7193, -5.44153, 0.24", "-8.20524, -29.6623, -5.97329, 0.12", "-8.52031, -37.5041, -7.38713, 0.12", "-10.0405, -44.9796, -9.71018, 0.12", "-10.9726, -52.0518, -13.2747, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "13.5925, 125.993, 37.4339, 0.12", "12.8333, 130.077, 40.0686, 0.12", "12.5701, 131.493, 40.9819, 0.48", "12.4422, 132.181, 41.4256, 0.12", "11.2937, 138.359, 45.411, 0.12", "11.1428, 139.171, 45.9348, 0.72", "10.9809, 140.042, 46.4967, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.5925, 125.993, 37.4339, 0.24", "14.6515, 128.28, 37.7251, 0.24", "15.0638, 129.224, 37.8581, 0.36", "16.803, 133.105, 38.4143, 0.12", "18.1416, 136.332, 38.5983, 0.12", "18.6198, 137.539, 38.6184, 0.6", "18.8292, 138.081, 38.6168, 0.12", "20.5234, 142.662, 38.5256, 0.12", "21.7062, 145.969, 38.384, 0.12", "23.0186, 150.101, 38.1282, 0.96", "23.2696, 150.914, 38.0845, 0.36", "24.1514, 153.852, 38.012, 0.36", "24.6948, 155.774, 38.0419, 1.08", "24.8245, 156.33, 38.0145, 1.32", "25.2521, 158.395, 37.8856, 0.12", "26.259, 163.042, 37.6403, 0.12", "26.5574, 164.464, 37.5125, 1.32", "26.9906, 166.7, 37.2554, 0.12", "28.3075, 172.935, 36.4439, 0.12", "29.2415, 176.981, 35.7011, 0.12", "29.3844, 177.566, 35.56, 0.6", "29.6154, 178.532, 35.2851, 0.6", "29.93, 179.629, 34.8838, 0.12", "30.6173, 181.5, 34.1211, 0.12", "32.3282, 185.285, 32.5914, 0.12", "32.9586, 186.555, 31.9601, 1.32", "33.5997, 187.945, 31.0332, 0.12", "35.6367, 192.464, 27.4862, 0.12", "36.186, 193.911, 26.125, 0.12", "36.3995, 194.621, 25.3872, 0.96", "36.5118, 195.038, 24.9222, 0.12", "37.6448, 200.012, 19.236, 0.12", "37.7462, 200.757, 18.405, 1.08", "37.9511, 204.637, 14.9741, 0.12", "37.9686, 205.167, 14.6015, 1.08", "38.0181, 205.978, 14.1878, 1.08", "38.2834, 208.34, 13.5755, 0.24", "38.5558, 209.88, 13.5605, 0.12", "39.5894, 214.88, 13.8954, 0.12", "39.9067, 216.192, 14.0917, 0.48", "40.261, 217.6, 14.3037, 0.12", "41.0413, 220.633, 14.7787, 0.12", "41.3662, 221.739, 14.9634, 0.6", "41.6282, 222.512, 15.0846, 0.12", "42.2754, 224.271, 15.3224, 0.12", "42.6518, 225.223, 15.4392, 0.6", "43.04, 226.084, 15.5453, 0.12", "45.598, 231.059, 15.9382, 0.12", "47.0572, 233.597, 16.0663, 0.12", "47.4869, 234.302, 16.0254, 1.08", "48.1315, 235.244, 15.8843, 1.08", "50.8725, 238.815, 15.0445, 0.12", "54.7066, 243.154, 13.5996, 0.12", "56.8224, 245.287, 12.6771, 0.12", "60.682, 248.866, 11.1069, 0.12", "62.6095, 250.695, 10.3719, 1.2", "64.1072, 252.132, 9.82992, 0.12", "67.3893, 255.158, 8.59477, 0.12", "68.4351, 256.06, 8.27988, 0.48", "70.7665, 258.188, 7.86516, 0.12", "74.0242, 261.414, 8.11704, 0.12", "75.1339, 262.836, 8.31109, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.33375, -74.9366, -7.27502, 0.12", "4.86482, -77.0649, -8.81044, 0.12", "5.39035, -77.6249, -9.17166, 1.2", "5.70273, -77.8732, -9.32443, 1.2", "6.16566, -78.1994, -9.54508, 0.12", "7.78723, -79.244, -10.275, 0.12", "8.80619, -79.8808, -10.7106, 1.32", "10.3135, -80.7076, -11.2204, 0.12", "12.2054, -81.7229, -11.8438, 0.12", "13.9473, -82.6515, -12.3692, 0.96", "15.1495, -83.3094, -12.734, 0.12", "16.1645, -83.8852, -13.0317, 0.12", "17.1524, -84.5033, -13.3287, 0.6", "17.7603, -84.93, -13.5125, 0.12", "20.0954, -86.7363, -14.1917, 0.12", "21.3954, -87.8065, -14.5191, 1.44", "22.1409, -88.4658, -14.7086, 0.12", "23.5137, -89.7238, -15.0427, 0.12", "23.9977, -90.2015, -15.152, 0.6", "24.4309, -90.6603, -15.2628, 0.12", "25.8055, -92.2941, -15.6454, 0.12", "26.1975, -92.7854, -15.7507, 0.6", "26.5832, -93.2904, -15.8704, 0.12", "27.3461, -94.3381, -16.1379, 0.12", "28.3091, -95.7963, -16.4899, 1.08", "28.6815, -96.4176, -16.6765, 0.12", "29.4975, -97.9077, -17.19, 0.12", "29.7146, -98.3252, -17.335, 0.48", "30.0228, -98.9424, -17.5339, 0.12", "31.0009, -100.934, -18.1107, 0.12", "31.8166, -102.592, -18.6226, 0.96", "32.1646, -103.259, -18.8604, 0.12", "32.9602, -104.652, -19.4178, 0.12", "34.0524, -106.466, -20.1746, 0.12", "34.2751, -106.809, -20.3177, 0.96", "35.406, -108.353, -20.9544, 0.12", "36.4187, -109.7, -21.427, 0.12", "36.8196, -110.205, -21.6127, 0.6", "37.1561, -110.633, -21.7621, 0.12", "38.1965, -111.968, -22.2065, 0.12", "38.6145, -112.541, -22.3607, 0.6", "38.8124, -112.855, -22.4089, 0.6", "38.9092, -113.024, -22.4363, 0.12", "39.7175, -114.564, -22.6851, 0.12", "40.1985, -115.452, -22.9046, 0.48", "40.3779, -115.774, -23.0064, 0.48", "41.1186, -117.1, -23.4664, 0.12", "41.383, -117.557, -23.6263, 0.48", "41.6695, -118.059, -23.7949, 0.12", "42.8015, -120.019, -24.4295, 0.12", "42.9374, -120.277, -24.4963, 0.36", "43.1825, -120.863, -24.6071, 0.12", "43.755, -122.53, -24.8424, 0.12", "43.9006, -123.266, -24.9668, 0.48", "43.9411, -123.772, -25.0557, 0.12", "43.8621, -125.497, -25.3375, 0.12", "43.4564, -128.566, -25.8859, 0.12", "43.3456, -129.011, -25.9935, 0.12", "42.3041, -131.866, -26.8692, 0.12", "42.0339, -132.462, -27.0851, 1.08", "41.717, -133.023, -27.3199, 0.12", "41.2517, -133.67, -27.8102, 0.12", "40.42, -134.722, -28.9467, 0.72", "40.2457, -134.971, -29.2371, 0.12", "40.0708, -135.281, -29.6579, 0.12", "39.9006, -135.621, -30.1344, 0.96", "38.6946, -138.283, -33.9569, 0.12", "38.5381, -138.663, -34.4876, 0.12", "38.4784, -138.846, -34.714, 0.6", "38.0715, -140.166, -36.2587, 0.12", "37.8752, -140.895, -37.0369, 0.12", "37.8395, -141.055, -37.1816, 0.36", "37.7318, -141.648, -37.5016, 0.12", "37.3896, -143.557, -38.3629, 0.12", "37.2864, -144.165, -38.5775, 1.08", "37.1645, -144.704, -38.7426, 1.08", "37.0877, -144.978, -38.8357, 0.12", "36.676, -146.225, -39.2637, 0.12", "36.3633, -146.992, -39.6202, 0.6", "36.2418, -147.219, -39.7452, 0.6", "35.2278, -148.888, -40.8956, 0.12", "34.8456, -149.441, -41.4476, 0.48", "34.7022, -149.639, -41.6934, 0.48", "33.7767, -150.929, -43.4162, 0.12", "33.5062, -151.313, -43.994, 0.12", "33.1454, -151.959, -44.7977, 0.48", "32.4402, -153.577, -46.5092, 0.12", "32.1876, -154.228, -47.1231, 0.12", "31.7228, -155.664, -48.2454, 0.72", "30.9986, -158.379, -49.9426, 0.12", "30.3525, -161.096, -51.4546, 0.12", "30.2274, -161.644, -51.7319, 0.48", "30.1513, -161.994, -51.8895, 0.12", "29.6187, -164.397, -53.0082, 0.12", "29.4906, -164.982, -53.2871, 0.48", "29.3871, -165.537, -53.4945, 0.12", "29.0725, -167.182, -54.1922, 0.12", "29.0071, -167.708, -54.4091, 0.36", "28.9862, -168.386, -54.6792, 0.12", "29.0608, -169.352, -55.1046, 0.12", "29.1377, -169.683, -55.2619, 0.48", "29.2584, -170.005, -55.4324, 0.12", "30.1811, -171.704, -56.4611, 0.12", "30.4899, -172.19, -56.8312, 0.48", "31.2688, -173.25, -57.7581, 0.12", "32.7789, -174.976, -59.4094, 0.12", "33.3392, -175.516, -59.9587, 0.36", "34.1609, -176.193, -60.7204, 0.36", "35.007, -176.757, -61.3886, 0.12", "35.7783, -177.194, -61.876, 0.12", "37.2415, -177.906, -62.6347, 0.12", "39.1212, -178.717, -63.5614, 0.12", "40.2515, -179.203, -64.06, 0.36", "42.0748, -179.972, -64.7655, 0.12", "44.5431, -180.933, -65.5954, 0.12", "44.7932, -181.023, -65.679, 0.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.33375, -74.9366, -7.27502, 0.96", "2.18547, -77.2921, -8.532, 0.96", "1.68288, -78.4824, -9.15224, 0.96", "1.2811, -79.6456, -9.80478, 1.56", "0.859467, -81.1839, -10.6923, 0.96", "0.580781, -82.537, -11.4521, 0.96", "0.507992, -83.11, -11.7687, 0.96", "0.550255, -83.7917, -12.1408, 0.96", "0.741215, -84.9217, -12.7891, 0.48", "0.842939, -85.4147, -13.0582, 0.48", "1.07641, -86.4804, -13.5581, 0.96", "1.35019, -87.8899, -14.1349, 0.96", "1.53819, -89.2315, -14.7027, 0.96", "1.61572, -90.5378, -15.2424, 0.36", "1.59951, -91.4467, -15.6015, 0.36", "1.5562, -92.0757, -15.8541, 0.36", "1.46179, -92.9083, -16.1864, 0.84", "1.29775, -93.9491, -16.5521, 0.12", "1.14077, -94.8789, -16.8811, 0.12", "0.94863, -95.9738, -17.2588, 1.32", "0.777312, -96.9104, -17.5778, 1.32", "0.685494, -97.3647, -17.7207, 0.12", "0.518945, -98.1187, -17.9606, 0.12", "0.206709, -99.6255, -18.3932, 1.2", "0.0429638, -100.463, -18.6361, 0.48", "-0.192776, -101.527, -18.9553, 0.12", "-0.370344, -102.281, -19.2009, 1.32", "-0.643475, -103.369, -19.5533, 0.12", "-0.907849, -104.335, -19.8527, 0.12", "-1.04262, -104.842, -20.0283, 1.68", "-1.4072, -106.268, -20.5975, 0.12", "-1.76992, -107.92, -21.3339, 0.36", "-1.92, -108.614, -21.6525, 1.2", "-2.0794, -109.339, -21.9741, 0.48", "-2.45198, -110.979, -22.8845, 0.24", "-2.52488, -111.308, -23.0895, 0.72", "-2.83613, -112.776, -24.0499, 0.12", "-2.98793, -113.479, -24.5175, 0.12", "-3.13038, -114.232, -24.9798, 0.96", "-3.42776, -116.44, -26.051, 0.12", "-3.50084, -117.128, -26.2977, 0.12", "-3.56859, -118.164, -26.614, 1.44", "-3.58767, -118.923, -26.7972, 0.48", "-3.5345, -120.18, -27.0898, 0.12", "-3.31031, -122.445, -27.542, 0.12", "-3.23768, -122.971, -27.6352, 1.32", "-3.18154, -123.315, -27.7165, 0.84", "-3.14681, -123.542, -27.7922, 0.84", "-2.90781, -125.496, -28.6028, 0.12", "-2.86058, -126.169, -28.9242, 1.08", "-2.87889, -127.233, -29.5037, 1.08", "-2.97019, -128.46, -30.1714, 0.12", "-3.13488, -129.793, -30.8782, 0.12", "-3.23887, -130.358, -31.1453, 1.44", "-3.49004, -131.326, -31.5276, 0.12", "-3.95731, -132.992, -32.1099, 0.12", "-4.09076, -133.465, -32.2433, 0.6", "-4.15428, -133.72, -32.3025, 0.12", "-4.45072, -135.33, -32.636, 0.12", "-4.54382, -135.994, -32.7849, 1.2", "-4.60521, -136.608, -32.9257, 1.2", "-4.61654, -136.866, -32.9763, 0.12", "-4.63826, -137.802, -33.1709, 0.12", "-4.63668, -139.413, -33.5106, 0.84", "-4.61141, -139.942, -33.6231, 0.84", "-4.59487, -140.335, -33.6951, 0.12", "-4.57074, -141.881, -33.9242, 0.12", "-4.56701, -142.347, -33.973, 1.08", "-4.5822, -143.171, -34.0144, 1.08", "-4.60716, -143.71, -34.0092, 0.12", "-4.68598, -145.015, -34.1221, 0.12", "-4.72635, -145.679, -34.2245, 0.6", "-4.78417, -146.528, -34.4007, 0.12", "-4.95378, -147.922, -34.7048, 0.12", "-5.10331, -148.82, -34.9056, 1.56", "-5.52364, -151.011, -35.4932, 0.12", "-5.69218, -151.834, -35.7369, 0.12", "-5.87574, -152.723, -35.9996, 0.12", "-6.4201, -155.343, -36.7515, 0.12", "-6.56308, -156.056, -36.9426, 1.32", "-6.81798, -157.407, -37.2449, 0.48", "-7.00298, -158.465, -37.4023, 0.12", "-7.23055, -160.036, -37.6298, 0.12", "-7.28261, -160.634, -37.708, 0.84", "-7.27903, -161.096, -37.7626, 0.84", "-7.24141, -162.028, -37.8423, 0.12", "-7.17047, -163.17, -37.928, 0.12", "-7.13307, -163.567, -37.9783, 0.48", "-7.07811, -164.046, -38.0631, 0.12", "-6.91876, -165.251, -38.318, 0.12", "-6.81599, -165.893, -38.47, 0.84", "-6.64634, -166.808, -38.782, 0.84", "-6.51591, -167.332, -38.9773, 0.12", "-6.40991, -167.702, -39.1087, 0.12", "-6.3686, -167.836, -39.1531, 0.12", "-6.12739, -168.651, -39.4511, 0.96", "-5.79741, -169.854, -39.9067, 0.48", "-5.27435, -171.99, -40.674, 0.12", "-5.1281, -172.698, -40.9296, 0.6", "-5.04708, -173.182, -41.1205, 0.6", "-4.87306, -174.638, -41.7009, 0.12", "-4.83093, -175.368, -42.0305, 0.12", "-4.82383, -176.109, -42.3667, 0.6", "-4.85382, -176.727, -42.6515, 0.6", "-4.98583, -178.78, -43.5483, 0.12", "-5.04064, -179.556, -43.831, 0.96", "-5.15638, -181.605, -44.3927, 0.12", "-5.21571, -182.717, -44.6491, 0.12", "-5.30146, -184.636, -44.9912, 0.12", "-5.30827, -184.876, -45.0174, 1.08", "-5.32622, -186.212, -45.01, 0.12", "-5.31006, -187.505, -44.9294, 0.12", "-5.27309, -188.108, -44.8727, 0.96", "-5.19266, -188.647, -44.8531, 0.96", "-5.15659, -188.859, -44.8567, 0.12", "-4.87349, -190.768, -44.9577, 0.12", "-4.79394, -191.428, -45.0566, 1.56", "-4.6797, -193.021, -45.3688, 0.12", "-4.60865, -195.075, -45.8327, 0.12", "-4.61774, -196.965, -46.3696, 0.12", "-4.65205, -197.755, -46.6341, 0.96", "-4.80795, -199.382, -47.2825, 0.6", "-4.99079, -200.614, -47.87, 0.12", "-5.07946, -200.986, -48.0655, 0.12", "-5.35554, -202.001, -48.7521, 0.72", "-5.46745, -202.477, -49.1016, 0.72", "-5.51608, -202.712, -49.2908, 0.72", "-5.89774, -204.119, -50.4218, 0.12", "-6.25612, -205.21, -51.3516, 0.12", "-6.8701, -206.673, -52.5899, 1.08", "-7.15711, -207.24, -53.1021, 1.08", "-8.20145, -208.91, -54.717, 0.12", "-9.01766, -210.005, -55.8142, 0.12", "-9.29504, -210.309, -56.1144, 0.96", "-10.0413, -211.036, -56.8134, 0.96", "-11.2924, -212.196, -57.7365, 0.12", "-12.0998, -212.946, -58.2477, 0.12", "-12.3289, -213.169, -58.3463, 0.48", "-13.0383, -213.958, -58.6778, 0.12", "-13.5058, -214.499, -58.8761, 0.12", "-13.787, -214.867, -58.9624, 0.12", "-14.3192, -215.558, -58.9714, 0.12", "-14.9436, -216.452, -58.9799, 0.48" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.58543, -81.1118, 24.0675, 0.12", "-1.60739, -84.2733, 27.9784, 0.12", "-1.72396, -85.1441, 29.5599, 0.96", "-2.19672, -86.4596, 32.8743, 0.24", "-2.55871, -86.8182, 34.9749, 0.24", "-2.83542, -86.6767, 36.6648, 0.72", "-2.90576, -86.2787, 37.6223, 0.12", "-2.60609, -82.7861, 41.3798, 0.12", "-2.40824, -80.5508, 43.6088, 0.12", "-2.08882, -77.6511, 46.0846, 0.12", "-1.95352, -76.2411, 47.1729, 0.12", "-1.58179, -72.9946, 49.4988, 0.12", "-1.31691, -71.5207, 50.5092, 0.12", "0.119152, -67.9677, 52.8301, 0.12", "-1.01251, -61.0078, 62.9862, 0.12", "-3.54875, -53.6115, 72.5638, 0.12", "-3.98384, -44.8523, 81.2792, 0.12", "-4.40044, -37.1741, 90.9611, 0.12", "-4.67194, -29.4247, 100.591, 0.12", "-3.24127, -21.4175, 109.903, 0.12", "-2.24267, -13.4117, 119.272, 0.12", "0.187171, -6.27243, 129.07, 0.12", "3.79167, 0.43471, 138.811, 0.12", "8.88123, 6.72475, 148.16, 0.12", "14.5719, 11.0615, 158.243, 0.12", "21.683, 16.3825, 166.845, 0.12", "29.7019, 22.2904, 174.17, 0.12", "36.4581, 27.4398, 183.154, 0.12", "41.7017, 33.5193, 192.557, 0.12", "46.1644, 39.2328, 202.572, 0.12", "52.1272, 44.1839, 212.206, 0.12", "59.3019, 48.5273, 221.29, 0.12", "64.4202, 52.6201, 231.774, 0.12", "67.8586, 57.274, 242.701, 0.12", "69.3981, 63.4795, 253.283, 0.12", "71.1098, 68.3796, 264.505, 0.12", "74.9145, 72.9164, 275.359, 0.12", "77.4068, 77.3196, 286.641, 0.12", "81.7107, 79.8549, 297.951, 0.12", "87.1488, 83.8289, 308.319, 0.12", "94.5933, 88.911, 316.782, 0.12", "103.066, 94.522, 323.824, 0.12", "113.434, 97.8812, 329.662, 0.12", "122.812, 102.054, 336.555, 0.12", "132.782, 104.594, 343.413, 0.12", "142.674, 107.996, 350.003, 0.12", "152.38, 111.711, 356.701, 0.12", "161.14, 114.492, 364.972, 0.12", "169.535, 117.912, 373.38, 0.12", "177.094, 119.863, 382.967, 0.12" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.58543, -81.1118, 24.0675, 0.12", "-3.38695, -85.0608, 24.1555, 0.12", "-4.47753, -87.4514, 24.2088, 0.12", "-5.15726, -88.9413, 24.242, 0.12", "-10.1454, -100.134, 27.103, 0.12", "-14.7705, -110.581, 32.377, 0.12", "-21.732, -119.3, 38.1958, 0.12", "-27.7154, -128.415, 44.4767, 0.12", "-32.3413, -138.405, 50.5714, 0.12", "-38.615, -148.528, 54.6361, 0.12", "-45.9863, -157.955, 58.5271, 0.12", "-51.7116, -168.397, 62.5923, 0.12", "-55.3093, -179.476, 67.3514, 0.12", "-58.0374, -191.292, 70.7116, 0.12", "-59.4601, -202.943, 75.2477, 0.12", "-61.2086, -214.369, 80.2205, 0.12", "-61.8123, -226.199, 84.4658, 0.12", "-61.3542, -238.014, 88.7717, 0.12", "-61.0343, -249.285, 94.3576, 0.12", "-60.9316, -261.01, 98.925, 0.12", "-59.4348, -272.732, 103.248, 0.12", "-60.4543, -284.424, 107.788, 0.12", "-62.3506, -296.602, 110.328, 0.12", "-63.5667, -308.955, 112.39, 0.12", "-64.713, -321.486, 112.48, 0.12" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-10.9726, -52.0518, -13.2747, 0.12", "-11.1665, -58.0606, -18.9652, 0.12", "-11.3471, -65.0071, -23.4639, 0.12", "-11.259, -70.487, -29.6677, 0.12", "-9.66308, -75.4496, -36.0981, 0.12", "-7.91094, -78.7558, -43.4821, 0.12", "-5.74923, -81.9002, -50.8281, 0.12", "-3.24105, -85.5312, -57.8317, 0.12", "0.278042, -89.3693, -64.2667, 0.12", "2.33106, -93.921, -70.8691, 0.12", "4.80111, -97.9794, -77.6479, 0.12", "6.81332, -101.636, -84.7969, 0.12", "9.55088, -106.91, -90.5595, 0.12", "13.9884, -111.013, -96.2162, 0.12", "19.0345, -115.293, -101.191, 0.12", "23.8645, -119.567, -106.381, 0.12", "29.312, -123.144, -111.485, 0.12", "35.4973, -127.233, -115.165, 0.12", "42.3958, -130.334, -118.53, 0.12", "48.3372, -134.57, -122.438, 0.12" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-10.9726, -52.0518, -13.2747, 0.24", "-12.5598, -59.9809, -12.9536, 0.12", "-14.8771, -67.7163, -13.4892, 0.12", "-18.2663, -75.0616, -13.7194, 0.12", "-20.5953, -82.8118, -13.7717, 0.12", "-21.5423, -90.8466, -13.572, 0.12", "-23.715, -98.5818, -14.5414, 0.12", "-24.8616, -106.509, -15.7002, 0.12", "-25.8962, -114.529, -16.011, 0.12", "-26.7863, -122.382, -17.7511, 0.12", "-26.8204, -130.35, -19.1659, 0.12", "-27.1244, -138.039, -21.6739, 0.12", "-27.8236, -145.988, -23.0208, 0.12", "-28.6685, -154.036, -23.1341, 0.12", "-30.814, -161.797, -23.9444, 0.12", "-33.2206, -169.509, -24.414, 0.12", "-36.0003, -177.088, -23.8365, 0.12", "-38.4991, -184.563, -22.0029, 0.12" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.9809, 140.042, 46.4967, 0.12", "11.9469, 145.329, 48.136, 0.12", "12.2167, 147.239, 48.8356, 1.08", "12.3679, 148.485, 49.319, 0.12", "12.9287, 153.628, 51.3669, 0.12", "13.0887, 155.287, 52.0284, 0.48", "13.125, 156.084, 52.3819, 0.12", "12.9783, 159.563, 54.1937, 0.12", "12.9222, 160.45, 54.7185, 0.84", "12.8757, 161.173, 55.2009, 0.12", "12.6975, 164.267, 57.4046, 0.12", "12.4898, 168.851, 60.6885, 0.12", "12.4056, 171.305, 62.4281, 0.12", "12.3252, 173.906, 64.174, 0.84", "12.271, 175.748, 65.3671, 0.12", "12.1703, 179.969, 67.9897, 0.12", "12.1619, 180.683, 68.4179, 0.6", "12.1831, 181.845, 69.0271, 0.12", "12.1791, 188.27, 72.0712, 0.12", "12.1246, 189.211, 72.4691, 0.72", "12.0905, 189.75, 72.7011, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "10.9809, 140.042, 46.4967, 0.12", "10.7532, 141.148, 48.8519, 0.12", "10.6805, 141.502, 49.6048, 0.48", "10.3765, 142.979, 52.7495, 0.12", "10.3037, 143.332, 53.5023, 0.48", "9.72425, 147.1, 60.7155, 0.48", "9.77666, 150.868, 67.9508, 0.48", "9.52021, 154.673, 75.1632, 0.48", "9.71018, 158.005, 82.6076, 0.48", "10.5517, 161.726, 89.8189, 0.48", "11.5631, 164.93, 97.253, 0.48", "12.8633, 169.092, 104.148, 0.48", "15.7367, 172.725, 110.864, 0.48", "19.6246, 177.032, 116.599, 0.48", "24.9771, 179.908, 122.043, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.9436, -216.452, -58.9799, 0.12", "-15.0163, -218.777, -61.1586, 0.12", "-14.8884, -222.384, -64.7493, 0.48", "-14.7723, -224.298, -66.6975, 0.12", "-14.6672, -225.801, -68.205, 0.12", "-14.4719, -228.592, -71.0062, 0.96", "-14.154, -233.137, -75.5663, 0.12", "-13.7681, -235.344, -77.6599, 0.12", "-13.7681, -235.344, -77.6599, 0.48", "-13.5644, -236.111, -78.4262, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.9436, -216.452, -58.9799, 0.12", "-15.7945, -218.567, -61.3539, 0.12", "-16.0923, -219.307, -62.1849, 0.12" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "48.3372, -134.57, -122.438, 0.12", "52.9919, -141.12, -131.285, 0.12", "57.5744, -148.442, -139.544, 0.12", "61.1242, -156.333, -147.789, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "48.3372, -134.57, -122.438, 0.24", "50.9984, -139.346, -129.488, 0.12", "51.4663, -143.864, -137.167, 0.12", "51.5997, -149.293, -144.246, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-38.4991, -184.563, -22.0029, 0.12", "-40.8098, -193.589, -22.6681, 0.12", "-44.2485, -202.261, -23.1034, 0.12", "-47.0758, -211.161, -22.9156, 0.12", "-49.7157, -220.057, -23.9763, 0.12", "-51.3561, -229.165, -25.2373, 0.12", "-52.5845, -238.375, -26.1876, 0.12", "-55.3216, -247.023, -28.4142, 0.12", "-58.4698, -255.412, -31.0493, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-38.4991, -184.563, -22.0029, 0.24", "-39.8259, -193.174, -22.5828, 0.12", "-40.6106, -201.832, -21.7636, 0.12", "-40.2148, -210.511, -20.8983, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "12.0905, 189.75, 72.7011, 0.12", "14.8519, 194.035, 73.9805, 0.12", "17.1837, 197.918, 75.0674, 0.12", "18.2912, 199.763, 75.5837, 0.48", "19.0494, 201.026, 75.9371, 0.12", "22.3312, 206.492, 77.4669, 0.12", "23.4228, 208.31, 77.9757, 0.48", "24.5563, 210.016, 78.3679, 0.12", "31.5201, 218.263, 80.0395, 0.12", "39.1175, 226.087, 79.4297, 0.12", "46.4206, 234.206, 79.6443, 0.12", "54.5017, 241.39, 81.1896, 0.12", "61.3782, 249.86, 81.718, 0.12", "67.2347, 258.936, 83.3422, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "12.0905, 189.75, 72.7011, 0.12", "11.223, 193.447, 75.6655, 0.12", "11.0034, 194.383, 76.4159, 0.84", "10.8655, 194.971, 76.8873, 0.12", "7.27414, 201.814, 83.4586, 0.12", "4.78999, 207.912, 91.1749, 0.12", "2.36069, 213.754, 99.1049, 0.12", "1.25331, 220.469, 106.627, 0.12", "1.92646, 227.424, 113.98, 0.12", "3.8628, 233.964, 121.49, 0.12", "5.02181, 242.088, 127.453, 0.12", "7.10309, 249.258, 134.32, 0.12", "8.56987, 254.463, 142.903, 0.12", "10.8987, 259.594, 151.338, 0.12", "12.3402, 264.454, 160.125, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "24.9771, 179.908, 122.043, 0.12", "25.7244, 179.035, 130.451, 0.12", "26.0391, 177.111, 138.712, 0.12", "27.7548, 175.705, 146.903, 0.12", "29.0334, 175.461, 155.29, 0.12", "29.5901, 173.886, 163.611, 0.12", "30.1318, 173.301, 172.061, 0.12", "30.8044, 171.425, 180.31, 0.12", "29.7037, 170.918, 188.711, 0.12", "26.5398, 171.658, 196.551, 0.12", "23.1982, 173.109, 204.216, 0.12", "20.5072, 173.523, 212.255, 0.12", "17.8294, 173.912, 220.299, 0.12" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.9771, 179.908, 122.043, 0.12", "27.7379, 186.365, 124.771, 0.12", "31.2639, 192.703, 126.811, 0.12", "34.4832, 198.91, 129.615, 0.12", "35.9853, 205.864, 132.094, 0.12", "38.0835, 212.227, 135.539, 0.12", "41.0489, 218.154, 139.12, 0.12", "43.9202, 223.662, 143.384, 0.12", "45.2133, 229.868, 147.454, 0.12", "44.8685, 236.515, 150.984, 0.12" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.5644, -236.111, -78.4262, 0.12", "-13.2929, -236.961, -79.4197, 0.12", "-13.0928, -237.474, -80.2875, 0.96", "-12.7477, -238.36, -82.2965, 0.12", "-12.5742, -238.83, -83.6035, 0.12", "-12.4429, -239.069, -84.6201, 0.96", "-12.3812, -239.161, -85.1995, 0.96", "-12.202, -239.221, -87.6916, 0.12", "-12.1489, -239.121, -88.8084, 0.12", "-12.1393, -239.056, -89.1227, 0.84", "-12.1623, -238.301, -91.8094, 0.12", "-12.2055, -238.063, -92.5854, 0.12", "-12.2318, -237.974, -92.8823, 0.72", "-12.3152, -237.826, -93.4695, 0.72", "-12.393, -237.636, -94.203, 0.12", "-12.5123, -237.3, -95.2343, 0.12", "-12.518, -237.227, -95.4385, 0.6", "-12.4462, -237.063, -96.0344, 0.6", "-11.8789, -236.867, -98.0007, 0.12", "-11.4509, -236.879, -99.1537, 0.12", "-11.3599, -236.89, -99.3864, 0.84", "-10.5786, -237.066, -101.357, 0.12", "-10.2293, -237.201, -102.225, 0.72", "-8.50609, -238.223, -106.569, 0.12", "-7.59349, -239.018, -109.009, 0.12", "-7.40776, -239.229, -109.566, 0.72", "-7.19678, -239.524, -110.348, 0.72", "-6.7117, -240.376, -112.462, 0.12", "-6.55789, -240.71, -113.303, 0.48", "-6.52604, -240.925, -113.713, 0.12", "-6.50027, -241.711, -115.204, 0.12", "-6.38945, -242.601, -117.167, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.5644, -236.111, -78.4262, 0.12", "-14.0957, -237.476, -79.1996, 0.12", "-14.8673, -239.565, -80.4413, 0.48", "-15.937, -242.662, -82.2577, 0.12", "-16.1091, -243.16, -82.5429, 0.48", "-16.8303, -245.139, -83.6472, 0.12", "-17.7568, -247.452, -85.0907, 0.12", "-18.3207, -248.784, -86.0243, 0.48", "-18.5784, -249.332, -86.4407, 0.24", "-18.9032, -249.966, -86.8737, 0.24", "-19.339, -250.75, -87.3951, 0.6", "-21.0193, -253.415, -89.027, 0.12", "-21.9467, -254.693, -89.9829, 0.12", "-22.2315, -255.047, -90.2665, 0.6", "-22.6108, -255.493, -90.6501, 0.6", "-23.0344, -255.966, -91.1254, 0.12", "-23.7346, -256.623, -91.8961, 0.12", "-25.3212, -257.532, -93.6866, 0.12", "-25.4031, -257.569, -93.7863, 0.72", "-25.7626, -257.709, -94.2505, 0.72", "-27.1676, -258.133, -96.1636, 0.12", "-27.9291, -258.287, -97.2534, 0.12", "-29.7407, -258.456, -99.9408, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-58.4698, -255.412, -31.0493, 0.12", "-60.6145, -263.219, -31.8607, 0.12", "-63.8019, -270.702, -31.6411, 0.12", "-67.1101, -277.882, -29.7161, 0.12", "-69.7807, -285.002, -26.8231, 0.12", "-71.3988, -292.215, -23.4232, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-58.4698, -255.412, -31.0493, 0.24", "-61.6583, -266.648, -32.4485, 0.12", "-63.1903, -278.246, -33.6813, 0.12", "-66.3434, -289.452, -35.3668, 0.12", "-71.7299, -299.885, -36.0734, 0.12", "-76.7327, -310.493, -36.9859, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "17.8294, 173.912, 220.299, 0.12", "16.3522, 173.351, 229.961, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.8294, 173.912, 220.299, 0.24", "16.6381, 173.337, 231.401, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_72", "dend_61", "dend_56", "dend_47", "dend_30", "dend_13", "dend_0", "dend_77", "dend_74", "dend_67", "dend_62", "dend_60", "dend_57", "dend_53", "dend_48", "dend_32", "dend_31", "dend_17", "dend_14", "dend_12", "dend_1", "dend_76", "dend_75", "dend_71", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_50", "dend_49", "dend_44", "dend_33", "dend_19", "dend_18", "dend_16", "dend_15", "dend_5", "dend_2", "dend_70", "dend_69", "dend_66", "dend_65", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_34", "dend_21", "dend_20", "dend_11", "dend_6", "dend_4", "dend_3", "dend_40", "dend_35", "dend_27", "dend_22", "dend_8", "dend_7", "dend_42", "dend_41", "dend_37", "dend_36", "dend_29", "dend_28", "dend_24", "dend_23", "dend_10", "dend_9", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_72", "dend_61", "dend_56", "dend_47", "dend_30", "dend_13", "dend_0", "dend_77", "dend_74", "dend_67", "dend_62", "dend_60", "dend_57", "dend_53", "dend_48", "dend_32", "dend_31", "dend_17", "dend_14", "dend_12", "dend_1", "dend_76", "dend_75", "dend_71", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_50", "dend_49", "dend_44", "dend_33", "dend_19", "dend_18", "dend_16", "dend_15", "dend_5", "dend_2", "dend_70", "dend_69", "dend_66", "dend_65", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_34", "dend_21", "dend_20", "dend_11", "dend_6", "dend_4", "dend_3", "dend_40", "dend_35", "dend_27", "dend_22", "dend_8", "dend_7", "dend_42", "dend_41", "dend_37", "dend_36", "dend_29", "dend_28", "dend_24", "dend_23", "dend_10", "dend_9", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_47", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_13", "dend_0", "axon_0", "axon_0", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_33", "dend_33", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_LBC_0ffcc91920_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: soma_0
create dend_72
public dend_72
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_61
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_32
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.4500001421830143)
    connect dend_72(0), soma_0(0.4500001421830143)
    connect dend_61(0), soma_0(0.4500001421830143)
    connect dend_56(0), soma_0(0.4500001421830143)
    connect dend_47(0), soma_0(0.4500001421830143)
    connect dend_30(0), soma_0(0.4500001421830143)
    connect dend_13(0), soma_0(0.4500001421830143)
    connect dend_0(0), soma_0(0.4500001421830143)
    connect axon_0(0), soma_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.29271, -11.6867, 4.83325, 4.84982 ) }
    soma_0 { pt3dadd( 1.10949, -10.459, 4.33282, 5.97061 ) }
    soma_0 { pt3dadd( 0.926272, -9.23135, 3.83238, 8.0692 ) }
    soma_0 { pt3dadd( 0.743056, -8.00367, 3.33195, 9.40358 ) }
    soma_0 { pt3dadd( 0.559839, -6.77598, 2.83151, 10.6995 ) }
    soma_0 { pt3dadd( 0.376623, -5.5483, 2.33108, 11.9706 ) }
    soma_0 { pt3dadd( 0.193406, -4.32062, 1.83064, 13.8162 ) }
    soma_0 { pt3dadd( 0.0101893, -3.09294, 1.3302, 15.6871 ) }
    soma_0 { pt3dadd( -0.173027, -1.86526, 0.82977, 15.9633 ) }
    soma_0 { pt3dadd( -0.356244, -0.637576, 0.329335, 16.579 ) }
    soma_0 { pt3dadd( -0.539461, 0.590106, -0.171101, 17.1395 ) }
    soma_0 { pt3dadd( -0.722677, 1.81779, -0.671536, 17.1456 ) }
    soma_0 { pt3dadd( -0.905894, 3.04547, -1.17197, 17.1167 ) }
    soma_0 { pt3dadd( -1.08911, 4.27315, -1.67241, 16.9505 ) }
    soma_0 { pt3dadd( -1.27233, 5.50083, -2.17284, 16.6868 ) }
    soma_0 { pt3dadd( -1.45554, 6.72851, -2.67328, 16.2042 ) }
    soma_0 { pt3dadd( -1.63876, 7.9562, -3.17371, 15.3999 ) }
    soma_0 { pt3dadd( -1.82198, 9.18388, -3.67415, 12.8578 ) }
    soma_0 { pt3dadd( -2.00519, 10.4116, -4.17458, 8.89972 ) }
    soma_0 { pt3dadd( -2.18841, 11.6392, -4.67502, 6.31689 ) }
    soma_0 { pt3dadd( -2.37163, 12.8669, -5.17545, 3.58193 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -0.157219, 9.25154, -10.0838, 1.68 ) }
    dend_73 { pt3dadd( 1.93983, 10.8045, -10.0838, 1.68 ) }
    dend_73 { pt3dadd( 4.68612, 12.8383, -10.0838, 1.68 ) }
    // Section: dend_72, id: dend_72, parent: soma_0 (entry count 24/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -6.15722, 10.7115, -7.69378, 1.44 ) }
    dend_72 { pt3dadd( -7.44185, 10.781, -7.93453, 1.44 ) }
    dend_72 { pt3dadd( -10.0081, 10.8194, -8.79287, 1.44 ) }
    dend_72 { pt3dadd( -13.7723, 10.8487, -10.1462, 1.44 ) }
    dend_72 { pt3dadd( -16.5494, 10.909, -11.117, 1.44 ) }
    dend_72 { pt3dadd( -19.73, 10.9893, -12.3042, 1.44 ) }
    dend_72 { pt3dadd( -25.4628, 11.1349, -14.4598, 1.08 ) }
    dend_72 { pt3dadd( -30.9487, 11.229, -16.5848, 1.08 ) }
    dend_72 { pt3dadd( -34.7159, 11.2557, -18.0847, 1.08 ) }
    dend_72 { pt3dadd( -38.9617, 11.2464, -19.7956, 1.08 ) }
    dend_72 { pt3dadd( -43.4992, 11.2135, -21.5579, 0.96 ) }
    dend_72 { pt3dadd( -45.74, 11.1951, -22.3719, 0.96 ) }
    dend_72 { pt3dadd( -48.2998, 11.1831, -23.1116, 1.44 ) }
    dend_72 { pt3dadd( -49.7661, 11.1595, -23.4608, 1.44 ) }
    dend_72 { pt3dadd( -50.9269, 11.1315, -23.7712, 0.84 ) }
    dend_72 { pt3dadd( -52.7365, 11.0862, -24.2519, 0.72 ) }
    dend_72 { pt3dadd( -56.7478, 11.0322, -25.2295, 1.32 ) }
    dend_72 { pt3dadd( -59.2241, 11.0034, -25.8306, 1.32 ) }
    dend_72 { pt3dadd( -63.2403, 11.0096, -26.9242, 0.72 ) }
    dend_72 { pt3dadd( -67.4488, 11.1032, -28.1664, 0.72 ) }
    dend_72 { pt3dadd( -70.7817, 11.2327, -29.1993, 0.72 ) }
    dend_72 { pt3dadd( -74.301, 11.4259, -30.2969, 1.08 ) }
    dend_72 { pt3dadd( -78.5956, 11.6536, -31.6311, 0.6 ) }
    dend_72 { pt3dadd( -82.4512, 11.8044, -32.8697, 0.6 ) }
    dend_72 { pt3dadd( -86.1316, 11.9046, -34.1501, 0.6 ) }
    dend_72 { pt3dadd( -88.4723, 11.9878, -34.9563, 0.6 ) }
    dend_72 { pt3dadd( -91.1056, 12.1573, -35.9972, 0.6 ) }
    dend_72 { pt3dadd( -92.7621, 12.3267, -36.705, 0.6 ) }
    dend_72 { pt3dadd( -94.5723, 12.6374, -37.487, 1.2 ) }
    dend_72 { pt3dadd( -97.3418, 13.3323, -38.5539, 1.2 ) }
    dend_72 { pt3dadd( -99.9607, 14.3883, -39.506, 0.6 ) }
    dend_72 { pt3dadd( -102.753, 15.9353, -40.5401, 0.96 ) }
    dend_72 { pt3dadd( -104.004, 16.895, -41.0002, 0.48 ) }
    dend_72 { pt3dadd( -106.445, 19.1733, -41.8329, 0.24 ) }
    dend_72 { pt3dadd( -108.061, 20.9704, -42.3383, 1.2 ) }
    dend_72 { pt3dadd( -110.419, 23.953, -43.2422, 0.84 ) }
    dend_72 { pt3dadd( -111.865, 25.9729, -43.9231, 0.48 ) }
    dend_72 { pt3dadd( -114.786, 30.1238, -45.5489, 0.36 ) }
    dend_72 { pt3dadd( -115.825, 31.5281, -46.198, 1.44 ) }
    dend_72 { pt3dadd( -117.3, 33.376, -47.1917, 0.72 ) }
    dend_72 { pt3dadd( -120.784, 37.2701, -49.6297, 0.48 ) }
    dend_72 { pt3dadd( -122.487, 38.9388, -50.8029, 0.12 ) }
    dend_72 { pt3dadd( -124.575, 40.7603, -52.2049, 0.12 ) }
    dend_72 { pt3dadd( -127.606, 43.0391, -54.3524, 0.12 ) }
    dend_72 { pt3dadd( -128.456, 43.6315, -54.9495, 0.6 ) }
    dend_72 { pt3dadd( -130.29, 44.8115, -56.2571, 0.84 ) }
    dend_72 { pt3dadd( -131.666, 45.6793, -57.201, 0.12 ) }
    dend_72 { pt3dadd( -133.128, 46.5604, -58.422, 0.12 ) }
    dend_72 { pt3dadd( -134.789, 47.5976, -59.9524, 0.84 ) }
    dend_72 { pt3dadd( -135.545, 48.0805, -60.7105, 1.2 ) }
    dend_72 { pt3dadd( -137.741, 49.436, -62.8845, 0.84 ) }
    dend_72 { pt3dadd( -139.425, 50.4558, -64.4637, 0.84 ) }
    dend_72 { pt3dadd( -142.458, 52.2368, -67.0227, 0.48 ) }
    dend_72 { pt3dadd( -143.981, 53.1063, -68.1182, 0.24 ) }
    dend_72 { pt3dadd( -145.292, 53.8422, -68.9299, 0.84 ) }
    dend_72 { pt3dadd( -147.197, 54.8866, -70.0015, 0.6 ) }
    dend_72 { pt3dadd( -148.47, 55.585, -70.5831, 0.12 ) }
    dend_72 { pt3dadd( -150.484, 56.7431, -71.531, 0.12 ) }
    dend_72 { pt3dadd( -151.248, 57.2048, -71.8883, 0.72 ) }
    dend_72 { pt3dadd( -151.94, 57.6229, -72.2447, 0.72 ) }
    dend_72 { pt3dadd( -154.063, 58.9426, -73.3316, 0.12 ) }
    dend_72 { pt3dadd( -155.238, 59.7078, -73.9136, 0.12 ) }
    dend_72 { pt3dadd( -157.432, 61.1437, -74.9553, 1.2 ) }
    dend_72 { pt3dadd( -158.86, 62.1333, -75.6682, 0.84 ) }
    dend_72 { pt3dadd( -159.529, 62.6123, -75.9757, 0.12 ) }
    dend_72 { pt3dadd( -161.665, 64.1322, -76.7999, 0.12 ) }
    dend_72 { pt3dadd( -162.063, 64.4259, -76.9293, 1.08 ) }
    dend_72 { pt3dadd( -164.152, 65.9691, -77.703, 0.36 ) }
    dend_72 { pt3dadd( -166.476, 67.6565, -78.7211, 0.36 ) }
    dend_72 { pt3dadd( -168.243, 68.9365, -79.6163, 0.36 ) }
    dend_72 { pt3dadd( -170.31, 70.3936, -80.7226, 0.84 ) }
    dend_72 { pt3dadd( -172.216, 71.6508, -81.8209, 0.36 ) }
    dend_72 { pt3dadd( -174.879, 73.3027, -83.3837, 0.24 ) }
    dend_72 { pt3dadd( -177.299, 74.7336, -84.809, 0.24 ) }
    dend_72 { pt3dadd( -179.86, 76.2203, -86.2662, 0.6 ) }
    dend_72 { pt3dadd( -181.118, 76.9519, -86.9957, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_72 { pt3dadd( -184.306, 78.8122, -88.7571, 0.12 ) }
    dend_72 { pt3dadd( -185.091, 79.2729, -89.1419, 0.6 ) }
    dend_72 { pt3dadd( -186.776, 80.3397, -89.8031, 0.12 ) }
    dend_72 { pt3dadd( -187.974, 81.173, -90.219, 0.12 ) }
    dend_72 { pt3dadd( -188.546, 81.6167, -90.4257, 0.84 ) }
    dend_72 { pt3dadd( -189.926, 82.8483, -90.8177, 0.84 ) }
    dend_72 { pt3dadd( -191.54, 84.4406, -91.1275, 0.12 ) }
    dend_72 { pt3dadd( -192.497, 85.41, -91.2795, 0.84 ) }
    dend_72 { pt3dadd( -193.256, 86.2047, -91.3779, 1.08 ) }
    dend_72 { pt3dadd( -194.317, 87.3472, -91.479, 0.36 ) }
    dend_72 { pt3dadd( -197.644, 91.1024, -91.7355, 0.12 ) }
    dend_72 { pt3dadd( -198.27, 91.8539, -91.7549, 0.6 ) }
    dend_72 { pt3dadd( -199.05, 92.9092, -91.7369, 0.6 ) }
    dend_72 { pt3dadd( -199.72, 93.8843, -91.714, 0.12 ) }
    dend_72 { pt3dadd( -201.338, 96.4776, -91.6368, 0.12 ) }
    dend_72 { pt3dadd( -201.622, 96.9753, -91.5999, 0.72 ) }
    dend_72 { pt3dadd( -202.486, 98.6075, -91.4246, 0.24 ) }
    dend_72 { pt3dadd( -205.367, 103.978, -90.7674, 0.12 ) }
    dend_72 { pt3dadd( -205.926, 105.005, -90.6358, 0.84 ) }
    dend_72 { pt3dadd( -206.612, 106.233, -90.4761, 0.24 ) }
    dend_72 { pt3dadd( -208.827, 110.143, -89.9667, 0.24 ) }
    dend_72 { pt3dadd( -209.511, 111.339, -89.8225, 0.72 ) }
    dend_72 { pt3dadd( -210.594, 113.209, -89.6208, 0.12 ) }
    dend_72 { pt3dadd( -212.627, 116.742, -89.2634, 0.12 ) }
    dend_72 { pt3dadd( -213.578, 118.453, -89.1022, 0.96 ) }
    dend_72 { pt3dadd( -214.133, 119.439, -89.0251, 0.12 ) }
    dend_72 { pt3dadd( -215.549, 121.952, -88.8985, 0.12 ) }
    dend_72 { pt3dadd( -216.165, 122.883, -88.853, 0.72 ) }
    dend_72 { pt3dadd( -217.299, 124.447, -88.7769, 0.12 ) }
    dend_72 { pt3dadd( -219.113, 126.753, -88.6709, 0.12 ) }
    dend_72 { pt3dadd( -220.405, 128.29, -88.6093, 0.96 ) }
    dend_72 { pt3dadd( -221.901, 130.002, -88.5506, 0.12 ) }
    dend_72 { pt3dadd( -228.614, 137.35, -88.3392, 0.12 ) }
    dend_72 { pt3dadd( -229.695, 138.512, -88.3027, 1.32 ) }
    dend_72 { pt3dadd( -230.787, 139.64, -88.3226, 0.12 ) }
    dend_72 { pt3dadd( -233.474, 142.38, -88.5128, 0.12 ) }
    dend_72 { pt3dadd( -234.56, 143.519, -88.6304, 0.12 ) }
    dend_72 { pt3dadd( -235.421, 144.463, -88.768, 0.84 ) }
    dend_72 { pt3dadd( -236.129, 145.456, -88.9543, 0.12 ) }
    dend_72 { pt3dadd( -238.511, 149.304, -89.6697, 0.12 ) }
    dend_72 { pt3dadd( -238.896, 150.045, -89.8034, 0.72 ) }
    dend_72 { pt3dadd( -239.466, 151.409, -90.0335, 0.72 ) }
    dend_72 { pt3dadd( -240.008, 152.994, -90.2471, 0.12 ) }
    dend_72 { pt3dadd( -241.326, 157.818, -90.7365, 0.12 ) }
    dend_72 { pt3dadd( -241.431, 158.307, -90.7469, 0.48 ) }
    dend_72 { pt3dadd( -241.558, 159.166, -90.6704, 0.96 ) }
    dend_72 { pt3dadd( -241.724, 160.437, -90.5207, 0.12 ) }
    dend_72 { pt3dadd( -242.055, 163.426, -90.0885, 0.12 ) }
    dend_72 { pt3dadd( -242.109, 163.863, -90.0015, 0.72 ) }
    dend_72 { pt3dadd( -242.421, 166.057, -89.4568, 0.12 ) }
    dend_72 { pt3dadd( -242.825, 168.311, -88.8855, 0.12 ) }
    dend_72 { pt3dadd( -243.176, 169.47, -88.5898, 0.6 ) }
    dend_72 { pt3dadd( -243.432, 170.102, -88.4291, 0.12 ) }
    dend_72 { pt3dadd( -245.227, 173.524, -87.5995, 0.12 ) }
    dend_72 { pt3dadd( -245.589, 174.104, -87.4868, 0.84 ) }
    dend_72 { pt3dadd( -246.577, 175.446, -87.3074, 0.12 ) }
    dend_72 { pt3dadd( -249.18, 178.521, -86.9388, 0.12 ) }
    dend_72 { pt3dadd( -249.479, 178.853, -86.8889, 0.6 ) }
    dend_72 { pt3dadd( -250.339, 179.795, -86.734, 0.12 ) }
    dend_72 { pt3dadd( -251.738, 181.336, -86.4875, 0.12 ) }
    dend_72 { pt3dadd( -252.436, 182.258, -86.3207, 0.6 ) }
    dend_72 { pt3dadd( -252.871, 183.003, -86.1749, 0.12 ) }
    dend_72 { pt3dadd( -253.777, 185.301, -85.4742, 0.12 ) }
    dend_72 { pt3dadd( -253.978, 185.935, -85.2436, 0.36 ) }
    dend_72 { pt3dadd( -254.217, 186.972, -84.8288, 0.12 ) }
    dend_72 { pt3dadd( -254.551, 189.299, -83.921, 0.12 ) }
    dend_72 { pt3dadd( -254.661, 190.341, -83.5234, 0.48 ) }
    dend_72 { pt3dadd( -255.002, 193.796, -82.2894, 0.12 ) }
    dend_72 { pt3dadd( -255.133, 194.995, -81.9284, 0.48 ) }
    dend_72 { pt3dadd( -255.272, 196.123, -81.6024, 0.12 ) }
    dend_72 { pt3dadd( -255.69, 199.167, -80.7608, 0.12 ) }
    dend_72 { pt3dadd( -255.981, 200.643, -80.4232, 0.48 ) }
    dend_72 { pt3dadd( -256.294, 201.829, -80.2258, 0.12 ) }
    dend_72 { pt3dadd( -257.249, 204.595, -80.0093, 0.12 ) }
    dend_72 { pt3dadd( -257.368, 204.847, -80.0048, 0.6 ) }
    dend_72 { pt3dadd( -257.604, 205.224, -80.0221, 0.12 ) }
    dend_72 { pt3dadd( -260.075, 208.253, -80.4036, 0.12 ) }
    dend_72 { pt3dadd( -260.579, 208.735, -80.5014, 0.48 ) }
    dend_72 { pt3dadd( -261.982, 209.856, -80.7615, 0.12 ) }
    dend_72 { pt3dadd( -264.245, 211.359, -81.1852, 0.12 ) }
    dend_72 { pt3dadd( -265.092, 211.894, -81.3457, 0.6 ) }
    dend_72 { pt3dadd( -266.259, 212.579, -81.571, 0.24 ) }
    dend_72 { pt3dadd( -269.851, 214.359, -82.2755, 0.12 ) }
    dend_72 { pt3dadd( -271.336, 215.075, -82.5443, 0.48 ) }
    dend_72 { pt3dadd( -272.947, 215.788, -82.7745, 0.12 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 85/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -8.14722, 7.33154, -9.06378, 1.92 ) }
    dend_61 { pt3dadd( -9.30532, 7.74298, -9.14307, 1.92 ) }
    dend_61 { pt3dadd( -11.8162, 8.63503, -9.31497, 1.68 ) }
    dend_61 { pt3dadd( -13.3904, 9.19431, -9.42275, 1.68 ) }
    dend_61 { pt3dadd( -15.4493, 9.92574, -9.5637, 1.68 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 90/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.74278, -4.14846, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 8.04906, -5.34884, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 8.52847, -7.22774, 3.55622, 2.4 ) }
    dend_56 { pt3dadd( 8.84173, -8.45545, 3.55622, 2.4 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.17722, 9.55154, 8.44622, 1.44 ) }
    dend_47 { pt3dadd( -3.97332, 11.4792, 12.626, 1.44 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.34278, 8.34154, 5.94622, 1.8 ) }
    dend_30 { pt3dadd( 1.4572, 9.89124, 6.56592, 1.8 ) }
    dend_30 { pt3dadd( 1.38285, 12.6902, 7.53823, 1.56 ) }
    dend_30 { pt3dadd( 1.08183, 16.7657, 8.9495, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 0.597014, 21.6241, 10.7469, 1.44 ) }
    dend_30 { pt3dadd( 0.428628, 23.0751, 11.2787, 1.44 ) }
    dend_30 { pt3dadd( 0.0132871, 26.6543, 12.5907, 1.32 ) }
    dend_30 { pt3dadd( -1.02824, 33.9332, 15.3127, 1.2 ) }
    dend_30 { pt3dadd( -1.49624, 36.5788, 16.3086, 1.2 ) }
    dend_30 { pt3dadd( -2.13296, 39.4775, 17.3153, 1.2 ) }
    dend_30 { pt3dadd( -2.97325, 42.672, 18.4273, 1.2 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 7/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.91278, 7.07154, 0.266218, 2.4 ) }
    dend_13 { pt3dadd( 8.89601, 8.24312, 0.266218, 2.4 ) }
    dend_13 { pt3dadd( 12.5527, 10.4033, 0.266218, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.167218, -13.0985, 3.95622, 3.0 ) }
    dend_0 { pt3dadd( -0.067775, -13.8145, 3.95622, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.37163, 12.8669, -5.17545, 0.84 ) }
    axon_0 { pt3dadd( -4.58569, 27.7026, -5.17545, 0.84 ) }
    axon_0 { pt3dadd( -6.79974, 42.5383, -5.17545, 0.84 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 4.68612, 12.8383, -10.0838, 0.96 ) }
    dend_77 { pt3dadd( 3.68458, 14.2977, -11.0625, 0.96 ) }
    dend_77 { pt3dadd( 3.20878, 15.0179, -11.5029, 0.96 ) }
    dend_77 { pt3dadd( 1.69114, 17.6684, -13.3717, 0.96 ) }
    dend_77 { pt3dadd( 0.853283, 19.2782, -14.5413, 1.44 ) }
    dend_77 { pt3dadd( -0.255149, 21.4877, -16.1724, 1.44 ) }
    dend_77 { pt3dadd( -0.814304, 22.6595, -17.0372, 0.96 ) }
    dend_77 { pt3dadd( -1.30565, 23.717, -17.8566, 0.96 ) }
    dend_77 { pt3dadd( -2.31295, 26.2549, -19.9049, 0.96 ) }
    dend_77 { pt3dadd( -2.48456, 26.9524, -20.4607, 0.48 ) }
    dend_77 { pt3dadd( -2.59594, 27.7136, -21.1388, 0.24 ) }
    dend_77 { pt3dadd( -2.65095, 28.4976, -21.8328, 0.36 ) }
    dend_77 { pt3dadd( -2.68149, 29.3427, -22.6124, 0.96 ) }
    dend_77 { pt3dadd( -2.74273, 29.7648, -23.1328, 0.96 ) }
    dend_77 { pt3dadd( -2.88251, 30.3945, -23.9287, 0.36 ) }
    dend_77 { pt3dadd( -3.06125, 31.0638, -25.0638, 0.36 ) }
    dend_77 { pt3dadd( -3.15421, 31.4478, -25.7784, 1.08 ) }
    dend_77 { pt3dadd( -3.23698, 31.8749, -26.6017, 1.08 ) }
    dend_77 { pt3dadd( -3.59588, 34.2578, -31.1583, 0.36 ) }
    dend_77 { pt3dadd( -3.64556, 34.8924, -32.3559, 1.08 ) }
    dend_77 { pt3dadd( -3.30767, 37.1163, -35.7415, 0.36 ) }
    dend_77 { pt3dadd( -3.08806, 37.7934, -36.5722, 0.36 ) }
    dend_77 { pt3dadd( -2.72118, 38.6831, -37.4758, 1.32 ) }
    dend_77 { pt3dadd( -2.52536, 39.1154, -37.8166, 1.32 ) }
    dend_77 { pt3dadd( -1.79204, 40.6808, -38.6094, 0.36 ) }
    dend_77 { pt3dadd( 0.283363, 45.2661, -40.44, 0.24 ) }
    dend_77 { pt3dadd( 1.42715, 47.8877, -41.1815, 0.72 ) }
    dend_77 { pt3dadd( 1.70248, 48.6199, -41.3429, 0.96 ) }
    dend_77 { pt3dadd( 2.2452, 50.3423, -41.6192, 0.24 ) }
    dend_77 { pt3dadd( 3.08071, 53.5592, -42.0799, 0.12 ) }
    dend_77 { pt3dadd( 3.24786, 54.4258, -42.1726, 0.72 ) }
    dend_77 { pt3dadd( 3.4043, 55.8177, -42.3005, 0.12 ) }
    dend_77 { pt3dadd( 3.76206, 59.4591, -42.5337, 0.12 ) }
    dend_77 { pt3dadd( 3.86265, 60.4872, -42.6306, 0.48 ) }
    dend_77 { pt3dadd( 4.07635, 62.7918, -42.9177, 0.12 ) }
    dend_77 { pt3dadd( 4.1007, 63.1815, -42.9993, 0.12 ) }
    dend_77 { pt3dadd( 4.19127, 64.157, -43.2457, 1.08 ) }
    dend_77 { pt3dadd( 4.29652, 65.0325, -43.4876, 0.12 ) }
    dend_77 { pt3dadd( 4.66791, 67.2729, -44.1934, 0.12 ) }
    dend_77 { pt3dadd( 4.84283, 68.1848, -44.4496, 0.72 ) }
    dend_77 { pt3dadd( 5.23516, 70.2666, -45.0451, 0.12 ) }
    dend_77 { pt3dadd( 5.74945, 73.0153, -45.9441, 0.12 ) }
    dend_77 { pt3dadd( 5.94803, 74.0672, -46.2956, 0.96 ) }
    dend_77 { pt3dadd( 6.19841, 75.363, -46.7288, 0.12 ) }
    dend_77 { pt3dadd( 6.55265, 77.1262, -47.2942, 0.12 ) }
    dend_77 { pt3dadd( 6.98318, 79.1713, -47.9627, 0.84 ) }
    dend_77 { pt3dadd( 7.10866, 79.7806, -48.142, 0.12 ) }
    dend_77 { pt3dadd( 7.65487, 82.4968, -49.0128, 0.12 ) }
    dend_77 { pt3dadd( 7.75119, 82.9238, -49.1382, 0.96 ) }
    dend_77 { pt3dadd( 8.00549, 83.9758, -49.3979, 0.12 ) }
    dend_77 { pt3dadd( 8.58307, 86.2132, -49.8808, 0.12 ) }
    dend_77 { pt3dadd( 8.85142, 87.2046, -50.107, 0.84 ) }
    dend_77 { pt3dadd( 9.10138, 88.1298, -50.3569, 0.12 ) }
    dend_77 { pt3dadd( 9.67303, 90.3948, -51.1759, 0.12 ) }
    dend_77 { pt3dadd( 9.86269, 91.22, -51.4769, 0.96 ) }
    dend_77 { pt3dadd( 10.0854, 92.2315, -51.8441, 0.12 ) }
    dend_77 { pt3dadd( 10.8774, 95.882, -53.0983, 0.12 ) }
    dend_77 { pt3dadd( 11.0814, 96.913, -53.4653, 0.72 ) }
    dend_77 { pt3dadd( 11.4751, 99.246, -54.2835, 0.12 ) }
    dend_77 { pt3dadd( 11.8951, 102.361, -55.4689, 0.12 ) }
    dend_77 { pt3dadd( 11.9387, 102.675, -55.5658, 0.84 ) }
    dend_77 { pt3dadd( 12.0909, 103.774, -55.8132, 0.72 ) }
    dend_77 { pt3dadd( 12.5976, 107.147, -56.1928, 0.12 ) }
    dend_77 { pt3dadd( 12.7482, 108.251, -56.4113, 0.6 ) }
    dend_77 { pt3dadd( 13.0859, 110.847, -57.0716, 0.12 ) }
    dend_77 { pt3dadd( 13.4885, 114.515, -58.4073, 0.12 ) }
    dend_77 { pt3dadd( 13.5723, 115.333, -58.7519, 0.6 ) }
    dend_77 { pt3dadd( 13.7165, 116.467, -59.2187, 0.12 ) }
    dend_77 { pt3dadd( 14.593, 122.183, -61.5402, 0.12 ) }
    dend_77 { pt3dadd( 14.8736, 123.715, -62.1428, 0.12 ) }
    dend_77 { pt3dadd( 15.013, 124.433, -62.4602, 0.84 ) }
    dend_77 { pt3dadd( 15.1552, 125.181, -62.8316, 0.24 ) }
    dend_77 { pt3dadd( 16.0286, 129.398, -64.6917, 0.12 ) }
    dend_77 { pt3dadd( 16.118, 129.813, -64.8359, 0.6 ) }
    dend_77 { pt3dadd( 16.3782, 130.916, -65.0695, 0.12 ) }
    dend_77 { pt3dadd( 17.1652, 134.457, -65.8843, 0.12 ) }
    dend_77 { pt3dadd( 17.4519, 135.954, -66.2207, 0.48 ) }
    dend_77 { pt3dadd( 17.573, 136.873, -66.3996, 0.12 ) }
    dend_77 { pt3dadd( 17.6886, 138.189, -66.6851, 0.12 ) }
    dend_77 { pt3dadd( 17.7482, 138.979, -66.8347, 0.6 ) }
    dend_77 { pt3dadd( 17.814, 139.872, -66.9804, 0.12 ) }
    dend_77 { pt3dadd( 18.0412, 141.652, -67.1676, 0.12 ) }
    dend_77 { pt3dadd( 18.4162, 143.946, -67.4511, 0.12 ) }
    dend_77 { pt3dadd( 18.843, 146.019, -67.735, 0.36 ) }
    dend_77 { pt3dadd( 19.0767, 147.033, -67.9083, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_77 { pt3dadd( 19.6784, 149.427, -68.3686, 0.12 ) }
    dend_77 { pt3dadd( 20.7256, 153.164, -69.1497, 0.12 ) }
    dend_77 { pt3dadd( 21.0568, 154.203, -69.3677, 0.84 ) }
    dend_77 { pt3dadd( 21.3176, 154.931, -69.51, 0.12 ) }
    dend_77 { pt3dadd( 22.0525, 156.982, -69.8161, 0.12 ) }
    dend_77 { pt3dadd( 22.2374, 157.503, -69.9109, 0.96 ) }
    dend_77 { pt3dadd( 22.4857, 158.245, -70.0624, 0.24 ) }
    dend_77 { pt3dadd( 23.1822, 160.635, -70.6452, 0.24 ) }
    dend_77 { pt3dadd( 23.3725, 161.431, -70.8563, 0.72 ) }
    dend_77 { pt3dadd( 23.5058, 162.074, -71.0236, 0.12 ) }
    dend_77 { pt3dadd( 23.8848, 164.06, -71.6211, 0.12 ) }
    dend_77 { pt3dadd( 23.9416, 164.374, -71.728, 0.96 ) }
    dend_77 { pt3dadd( 24.1861, 165.723, -72.2226, 0.12 ) }
    dend_77 { pt3dadd( 24.5279, 167.484, -72.8975, 0.12 ) }
    dend_77 { pt3dadd( 24.7297, 168.621, -73.4319, 0.24 ) }
    dend_77 { pt3dadd( 25.0916, 170.813, -74.5275, 0.12 ) }
    dend_77 { pt3dadd( 25.2753, 172.136, -75.1887, 0.12 ) }
    dend_77 { pt3dadd( 25.3577, 173.122, -75.6985, 0.72 ) }
    dend_77 { pt3dadd( 25.3792, 174.059, -76.1814, 0.12 ) }
    dend_77 { pt3dadd( 25.1241, 178.568, -78.554, 0.12 ) }
    dend_77 { pt3dadd( 24.9872, 179.531, -79.0621, 0.6 ) }
    dend_77 { pt3dadd( 24.7836, 180.428, -79.5124, 0.12 ) }
    dend_77 { pt3dadd( 24.0767, 182.916, -80.6971, 0.12 ) }
    dend_77 { pt3dadd( 23.7314, 183.965, -81.1512, 0.6 ) }
    dend_77 { pt3dadd( 22.8464, 186.344, -82.0586, 0.12 ) }
    dend_77 { pt3dadd( 22.5521, 187.135, -82.2801, 0.6 ) }
    dend_77 { pt3dadd( 22.2464, 188.01, -82.5288, 0.12 ) }
    dend_77 { pt3dadd( 21.6839, 189.656, -82.9569, 0.12 ) }
    dend_77 { pt3dadd( 21.453, 190.247, -83.0584, 0.48 ) }
    dend_77 { pt3dadd( 20.6109, 192.214, -83.3218, 0.12 ) }
    dend_77 { pt3dadd( 20.1215, 193.262, -83.3881, 0.12 ) }
    dend_77 { pt3dadd( 19.7293, 194.039, -83.4502, 0.96 ) }
    dend_77 { pt3dadd( 19.0808, 195.24, -83.4985, 0.12 ) }
    dend_77 { pt3dadd( 17.7678, 197.562, -83.5285, 0.12 ) }
    dend_77 { pt3dadd( 17.4033, 198.199, -83.5128, 0.72 ) }
    dend_77 { pt3dadd( 16.9583, 198.946, -83.4526, 0.12 ) }
    dend_77 { pt3dadd( 15.8209, 200.823, -83.2777, 0.12 ) }
    dend_77 { pt3dadd( 13.686, 204.432, -82.8827, 0.12 ) }
    dend_77 { pt3dadd( 13.4615, 204.827, -82.8313, 0.84 ) }
    dend_77 { pt3dadd( 12.9567, 205.745, -82.6896, 0.12 ) }
    dend_77 { pt3dadd( 11.744, 207.866, -82.3959, 0.12 ) }
    dend_77 { pt3dadd( 11.5423, 208.202, -82.355, 0.72 ) }
    dend_77 { pt3dadd( 10.1744, 210.324, -82.1073, 0.12 ) }
    dend_77 { pt3dadd( 9.26414, 211.668, -82.0795, 0.12 ) }
    dend_77 { pt3dadd( 8.58578, 212.657, -82.1158, 0.6 ) }
    dend_77 { pt3dadd( 7.21088, 214.745, -82.6156, 0.12 ) }
    dend_77 { pt3dadd( 6.78042, 215.456, -82.8801, 0.12 ) }
    dend_77 { pt3dadd( 6.41356, 216.068, -83.1543, 0.6 ) }
    dend_77 { pt3dadd( 5.45964, 217.711, -84.1219, 0.12 ) }
    dend_77 { pt3dadd( 5.19386, 218.179, -84.4503, 0.48 ) }
    dend_77 { pt3dadd( 3.49483, 221.297, -86.9367, 0.12 ) }
    dend_77 { pt3dadd( 2.93926, 222.496, -87.9682, 0.12 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 52/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 4.68612, 12.8383, -10.0838, 1.08 ) }
    dend_74 { pt3dadd( 6.84226, 13.5457, -11.1003, 1.08 ) }
    dend_74 { pt3dadd( 9.22204, 14.5622, -12.3659, 1.08 ) }
    dend_74 { pt3dadd( 11.8942, 15.9883, -13.8818, 1.08 ) }
    dend_74 { pt3dadd( 13.5412, 16.9763, -14.8326, 1.08 ) }
    dend_74 { pt3dadd( 16.0386, 18.5191, -16.2925, 0.84 ) }
    dend_74 { pt3dadd( 19.3012, 20.6531, -18.3491, 0.84 ) }
    dend_74 { pt3dadd( 20.1774, 21.3964, -18.9717, 0.84 ) }
    dend_74 { pt3dadd( 21.1107, 22.3885, -19.721, 1.2 ) }
    dend_74 { pt3dadd( 21.5834, 23.0515, -20.2243, 1.2 ) }
    dend_74 { pt3dadd( 22.6087, 24.9298, -21.5703, 0.48 ) }
    dend_74 { pt3dadd( 23.3893, 26.6429, -22.6982, 0.48 ) }
    dend_74 { pt3dadd( 23.8263, 27.6028, -23.2177, 1.32 ) }
    dend_74 { pt3dadd( 24.354, 28.6434, -23.7993, 1.32 ) }
    dend_74 { pt3dadd( 25.791, 31.2312, -25.2653, 0.6 ) }
    dend_74 { pt3dadd( 26.6415, 32.9475, -26.1692, 0.6 ) }
    dend_74 { pt3dadd( 27.5025, 34.9518, -27.0663, 0.48 ) }
    dend_74 { pt3dadd( 27.6544, 35.2693, -27.1899, 0.48 ) }
    dend_74 { pt3dadd( 28.5779, 36.8742, -27.8411, 1.2 ) }
    dend_74 { pt3dadd( 29.3387, 37.8154, -28.1969, 1.2 ) }
    // Section: dend_67, id: dend_67, parent: dend_61 (entry count 72/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -15.4493, 9.92574, -9.5637, 1.56 ) }
    dend_67 { pt3dadd( -18.059, 12.52, -14.8408, 1.56 ) }
    dend_67 { pt3dadd( -20.8154, 14.9217, -19.3961, 1.56 ) }
    dend_67 { pt3dadd( -21.9104, 15.9034, -21.0327, 1.32 ) }
    dend_67 { pt3dadd( -23.4081, 17.2423, -23.1296, 1.32 ) }
    dend_67 { pt3dadd( -25.2836, 18.8249, -25.7383, 1.32 ) }
    dend_67 { pt3dadd( -27.5296, 20.5459, -28.7901, 1.32 ) }
    dend_67 { pt3dadd( -29.7902, 21.887, -31.4099, 1.08 ) }
    dend_67 { pt3dadd( -31.9653, 23.0154, -33.9264, 1.08 ) }
    dend_67 { pt3dadd( -33.016, 23.5138, -35.278, 1.08 ) }
    dend_67 { pt3dadd( -35.2943, 24.5225, -38.3776, 1.08 ) }
    dend_67 { pt3dadd( -36.2993, 24.9792, -39.9584, 1.08 ) }
    dend_67 { pt3dadd( -38.4348, 25.905, -43.3938, 1.08 ) }
    dend_67 { pt3dadd( -39.9704, 26.5538, -45.9149, 1.08 ) }
    dend_67 { pt3dadd( -41.5067, 27.2274, -48.4931, 1.08 ) }
    dend_67 { pt3dadd( -42.0861, 27.5245, -49.4607, 1.08 ) }
    dend_67 { pt3dadd( -44.9164, 29.1529, -53.9904, 1.08 ) }
    dend_67 { pt3dadd( -47.3729, 30.7115, -57.7314, 1.08 ) }
    dend_67 { pt3dadd( -49.0405, 31.8328, -60.1537, 1.08 ) }
    dend_67 { pt3dadd( -52.3094, 34.1228, -64.8322, 1.08 ) }
    dend_67 { pt3dadd( -53.6048, 35.0987, -66.6575, 1.08 ) }
    dend_67 { pt3dadd( -55.0537, 36.2692, -68.6775, 1.08 ) }
    dend_67 { pt3dadd( -56.7572, 37.646, -70.7719, 1.08 ) }
    dend_67 { pt3dadd( -59.0126, 39.454, -73.3718, 0.36 ) }
    dend_67 { pt3dadd( -60.994, 40.9887, -75.3427, 1.08 ) }
    dend_67 { pt3dadd( -62.3595, 41.9747, -76.5403, 1.08 ) }
    dend_67 { pt3dadd( -66.337, 44.5884, -79.8375, 0.24 ) }
    dend_67 { pt3dadd( -69.091, 46.2712, -82.044, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_67 { pt3dadd( -72.2635, 48.0013, -84.4071, 0.12 ) }
    dend_67 { pt3dadd( -75.4399, 49.551, -86.5597, 0.12 ) }
    dend_67 { pt3dadd( -79.0841, 51.0847, -88.9107, 0.12 ) }
    dend_67 { pt3dadd( -81.7365, 52.0603, -90.5752, 0.48 ) }
    dend_67 { pt3dadd( -82.3342, 52.2431, -90.9221, 1.32 ) }
    dend_67 { pt3dadd( -84.069, 52.7533, -92.0273, 1.32 ) }
    dend_67 { pt3dadd( -85.8869, 53.2911, -93.2321, 1.32 ) }
    dend_67 { pt3dadd( -89.7994, 54.4883, -95.9187, 0.96 ) }
    dend_67 { pt3dadd( -90.9445, 54.9022, -96.6008, 0.96 ) }
    dend_67 { pt3dadd( -93.0876, 55.7276, -97.9264, 0.48 ) }
    dend_67 { pt3dadd( -96.5152, 57.0903, -100.039, 0.48 ) }
    dend_67 { pt3dadd( -98.3392, 57.848, -101.158, 1.2 ) }
    dend_67 { pt3dadd( -100.016, 58.6151, -102.221, 0.36 ) }
    dend_67 { pt3dadd( -103.921, 60.678, -104.964, 0.36 ) }
    dend_67 { pt3dadd( -107.81, 62.8999, -107.948, 0.36 ) }
    dend_67 { pt3dadd( -108.788, 63.5159, -108.75, 1.08 ) }
    dend_67 { pt3dadd( -110.364, 64.6213, -110.045, 0.48 ) }
    dend_67 { pt3dadd( -113.781, 67.3205, -112.967, 0.36 ) }
    dend_67 { pt3dadd( -116.613, 69.9512, -115.698, 0.36 ) }
    dend_67 { pt3dadd( -117.627, 71.0774, -116.764, 1.2 ) }
    dend_67 { pt3dadd( -118.729, 72.5078, -117.872, 1.2 ) }
    dend_67 { pt3dadd( -120.284, 74.7608, -119.397, 1.2 ) }
    dend_67 { pt3dadd( -121.117, 76.0336, -120.242, 0.96 ) }
    dend_67 { pt3dadd( -122.856, 78.7256, -121.922, 0.24 ) }
    dend_67 { pt3dadd( -124.123, 80.6302, -123.104, 0.24 ) }
    dend_67 { pt3dadd( -125.028, 81.8939, -123.953, 1.2 ) }
    dend_67 { pt3dadd( -126.526, 83.9292, -125.37, 0.12 ) }
    dend_67 { pt3dadd( -129.717, 88.3078, -128.418, 0.12 ) }
    dend_67 { pt3dadd( -130.272, 89.0931, -128.928, 0.12 ) }
    dend_67 { pt3dadd( -130.993, 90.1542, -129.608, 0.84 ) }
    dend_67 { pt3dadd( -132.355, 92.1521, -130.96, 0.12 ) }
    dend_67 { pt3dadd( -133.75, 94.0746, -132.235, 0.12 ) }
    dend_67 { pt3dadd( -135.022, 95.6375, -133.417, 0.12 ) }
    dend_67 { pt3dadd( -135.584, 96.3142, -133.88, 0.96 ) }
    dend_67 { pt3dadd( -137.946, 98.8684, -135.684, 0.12 ) }
    dend_67 { pt3dadd( -139.165, 100.031, -136.633, 0.12 ) }
    dend_67 { pt3dadd( -141.013, 101.515, -137.99, 1.32 ) }
    dend_67 { pt3dadd( -145.303, 104.492, -140.985, 0.36 ) }
    dend_67 { pt3dadd( -148.18, 106.483, -143.021, 0.36 ) }
    dend_67 { pt3dadd( -150.108, 107.927, -144.435, 1.2 ) }
    dend_67 { pt3dadd( -153.03, 110.429, -146.832, 0.36 ) }
    dend_67 { pt3dadd( -154.291, 111.776, -148.108, 0.36 ) }
    dend_67 { pt3dadd( -154.933, 112.647, -148.898, 0.36 ) }
    dend_67 { pt3dadd( -156.225, 114.804, -150.627, 0.36 ) }
    dend_67 { pt3dadd( -156.803, 115.998, -151.752, 1.32 ) }
    dend_67 { pt3dadd( -157.969, 119.176, -154.574, 0.36 ) }
    dend_67 { pt3dadd( -158.402, 120.417, -155.607, 0.36 ) }
    dend_67 { pt3dadd( -158.608, 120.875, -156.038, 0.36 ) }
    dend_67 { pt3dadd( -159.243, 121.953, -157.083, 1.08 ) }
    dend_67 { pt3dadd( -160.894, 124.023, -159.186, 0.24 ) }
    dend_67 { pt3dadd( -162.468, 125.663, -160.882, 0.24 ) }
    dend_67 { pt3dadd( -164.088, 127.243, -162.505, 1.2 ) }
    dend_67 { pt3dadd( -166.427, 129.446, -164.916, 0.36 ) }
    dend_67 { pt3dadd( -167.996, 130.917, -166.565, 0.36 ) }
    dend_67 { pt3dadd( -169.577, 132.394, -168.241, 1.32 ) }
    dend_67 { pt3dadd( -170.394, 133.077, -168.99, 1.32 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 56/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -15.4493, 9.92574, -9.5637, 1.08 ) }
    dend_62 { pt3dadd( -17.4999, 10.73, -9.81108, 1.08 ) }
    dend_62 { pt3dadd( -18.9159, 11.2378, -9.95188, 1.08 ) }
    dend_62 { pt3dadd( -21.1182, 12.0398, -10.1373, 1.08 ) }
    dend_62 { pt3dadd( -23.2325, 12.7664, -10.2897, 1.08 ) }
    dend_62 { pt3dadd( -30.36, 15.0819, -10.7804, 1.08 ) }
    dend_62 { pt3dadd( -35.8564, 16.8675, -11.1588, 1.08 ) }
    dend_62 { pt3dadd( -40.529, 18.3829, -11.4867, 1.08 ) }
    dend_62 { pt3dadd( -44.8775, 19.7668, -11.7889, 1.08 ) }
    dend_62 { pt3dadd( -47.7291, 20.6552, -11.9777, 1.08 ) }
    dend_62 { pt3dadd( -54.4878, 22.6203, -12.3419, 1.08 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 67/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 8.84173, -8.45545, 3.55622, 1.68 ) }
    dend_60 { pt3dadd( 11.6228, -8.44103, 4.53084, 1.68 ) }
    dend_60 { pt3dadd( 14.914, -8.29658, 5.50445, 0.96 ) }
    dend_60 { pt3dadd( 19.3427, -8.05699, 6.82655, 0.96 ) }
    dend_60 { pt3dadd( 21.8152, -8.01526, 7.60522, 0.96 ) }
    dend_60 { pt3dadd( 26.6668, -7.95212, 9.24006, 0.96 ) }
    dend_60 { pt3dadd( 29.7815, -7.90258, 10.3244, 0.96 ) }
    dend_60 { pt3dadd( 32.0495, -7.88094, 11.0444, 0.96 ) }
    dend_60 { pt3dadd( 37.0562, -7.77393, 12.6982, 0.84 ) }
    dend_60 { pt3dadd( 40.5474, -7.63587, 13.9089, 0.84 ) }
    dend_60 { pt3dadd( 43.6968, -7.40843, 15.1021, 0.84 ) }
    dend_60 { pt3dadd( 46.8215, -7.11718, 16.2833, 0.84 ) }
    dend_60 { pt3dadd( 50.2899, -6.86791, 17.6132, 0.6 ) }
    dend_60 { pt3dadd( 53.4773, -6.67972, 18.7556, 0.6 ) }
    dend_60 { pt3dadd( 54.8402, -6.54808, 19.1797, 0.96 ) }
    dend_60 { pt3dadd( 56.4754, -6.32509, 19.6343, 0.48 ) }
    dend_60 { pt3dadd( 58.3851, -6.13592, 20.1085, 0.12 ) }
    dend_60 { pt3dadd( 61.0781, -5.93852, 20.7773, 0.24 ) }
    dend_60 { pt3dadd( 64.4014, -5.83998, 21.6392, 0.24 ) }
    dend_60 { pt3dadd( 72.6152, -6.28956, 25.362, 0.24 ) }
    dend_60 { pt3dadd( 81.2207, -6.98031, 28.0069, 0.24 ) }
    dend_60 { pt3dadd( 90.2257, -6.45516, 28.4102, 0.24 ) }
    dend_60 { pt3dadd( 99.0702, -6.89572, 30.1733, 0.24 ) }
    dend_60 { pt3dadd( 107.354, -5.91362, 33.6274, 0.24 ) }
    dend_60 { pt3dadd( 115.365, -5.8, 37.793, 0.24 ) }
    dend_60 { pt3dadd( 123.762, -4.92646, 40.9944, 0.24 ) }
    dend_60 { pt3dadd( 132.16, -2.73707, 43.4854, 0.24 ) }
    dend_60 { pt3dadd( 140.207, 0.709391, 45.6996, 0.24 ) }
    dend_60 { pt3dadd( 148.007, 2.72122, 49.779, 0.24 ) }
    dend_60 { pt3dadd( 156.512, 2.81363, 52.8081, 0.24 ) }
    dend_60 { pt3dadd( 164.484, 2.06926, 56.9823, 0.24 ) }
    dend_60 { pt3dadd( 171.361, 2.30471, 62.8288, 0.24 ) }
    dend_60 { pt3dadd( 178.464, 1.40607, 68.3307, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 185.74, 1.35393, 73.677, 0.24 ) }
    dend_60 { pt3dadd( 192.452, 0.398751, 79.6407, 0.24 ) }
    dend_60 { pt3dadd( 198.316, -1.87025, 86.1207, 0.24 ) }
    dend_60 { pt3dadd( 203.855, -3.80571, 92.9838, 0.24 ) }
    dend_60 { pt3dadd( 209.9, -4.43172, 99.6616, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.84173, -8.45545, 3.55622, 1.92 ) }
    dend_57 { pt3dadd( 10.142, -11.577, 4.73382, 1.92 ) }
    dend_57 { pt3dadd( 11.5716, -15.0093, 6.02866, 1.32 ) }
    dend_57 { pt3dadd( 12.8427, -18.0608, 7.17982, 1.44 ) }
    dend_57 { pt3dadd( 13.6634, -20.0312, 7.92317, 1.44 ) }
    dend_57 { pt3dadd( 14.2189, -21.3648, 8.42628, 1.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 11/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -3.97332, 11.4792, 12.626, 0.96 ) }
    dend_53 { pt3dadd( -4.1005, 12.9681, 14.3202, 0.96 ) }
    dend_53 { pt3dadd( -4.54128, 14.3709, 16.068, 0.6 ) }
    dend_53 { pt3dadd( -4.87865, 15.3371, 17.2898, 0.6 ) }
    dend_53 { pt3dadd( -5.34137, 16.7434, 19.0693, 0.6 ) }
    dend_53 { pt3dadd( -5.59354, 17.6768, 20.3164, 0.6 ) }
    dend_53 { pt3dadd( -5.92537, 18.9007, 21.9192, 0.6 ) }
    dend_53 { pt3dadd( -6.3992, 19.8668, 23.2147, 0.6 ) }
    dend_53 { pt3dadd( -6.71708, 20.3717, 23.893, 0.6 ) }
    dend_53 { pt3dadd( -6.94828, 20.7577, 24.358, 0.6 ) }
    dend_53 { pt3dadd( -7.68136, 22.3336, 25.9174, 0.6 ) }
    dend_53 { pt3dadd( -8.0103, 23.4735, 26.9231, 0.6 ) }
    dend_53 { pt3dadd( -8.26442, 24.8767, 27.9391, 0.6 ) }
    dend_53 { pt3dadd( -8.49278, 26.3257, 28.8004, 0.6 ) }
    dend_53 { pt3dadd( -8.74761, 27.7183, 29.5936, 0.12 ) }
    dend_53 { pt3dadd( -9.00204, 29.0932, 30.3191, 0.12 ) }
    dend_53 { pt3dadd( -9.20359, 30.4771, 30.9345, 0.12 ) }
    dend_53 { pt3dadd( -9.26515, 32.2607, 31.7215, 0.12 ) }
    dend_53 { pt3dadd( -9.09992, 34.4288, 32.5676, 0.12 ) }
    dend_53 { pt3dadd( -12.1789, 39.4904, 37.3909, 0.12 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 31/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.97332, 11.4792, 12.626, 1.08 ) }
    dend_48 { pt3dadd( -4.75796, 10.6191, 13.2971, 1.08 ) }
    dend_48 { pt3dadd( -6.22627, 8.86507, 14.5685, 0.84 ) }
    dend_48 { pt3dadd( -7.48788, 7.2775, 15.6366, 0.84 ) }
    dend_48 { pt3dadd( -8.63252, 5.95411, 16.6179, 0.84 ) }
    dend_48 { pt3dadd( -10.7678, 3.70108, 18.4767, 0.84 ) }
    dend_48 { pt3dadd( -11.9933, 2.52801, 19.4956, 0.84 ) }
    dend_48 { pt3dadd( -13.3877, 1.26655, 20.555, 0.84 ) }
    dend_48 { pt3dadd( -14.0816, 0.654721, 21.0315, 0.84 ) }
    dend_48 { pt3dadd( -15.5804, -0.658256, 22.0233, 0.84 ) }
    dend_48 { pt3dadd( -16.4281, -1.49951, 22.6902, 0.84 ) }
    dend_48 { pt3dadd( -17.9773, -3.25951, 24.0078, 0.84 ) }
    dend_48 { pt3dadd( -19.9017, -5.30305, 25.4691, 0.84 ) }
    dend_48 { pt3dadd( -21.2332, -6.53534, 26.3753, 0.84 ) }
    dend_48 { pt3dadd( -22.7818, -7.78663, 27.4288, 0.84 ) }
    dend_48 { pt3dadd( -24.707, -9.14772, 28.7463, 0.84 ) }
    dend_48 { pt3dadd( -26.3874, -9.99155, 29.9379, 0.84 ) }
    dend_48 { pt3dadd( -28.3683, -10.3818, 31.4744, 0.24 ) }
    dend_48 { pt3dadd( -30.7173, -10.1109, 33.3057, 0.36 ) }
    dend_48 { pt3dadd( -32.7316, -9.37332, 34.8609, 0.12 ) }
    dend_48 { pt3dadd( -34.1717, -8.43188, 36.0172, 0.12 ) }
    dend_48 { pt3dadd( -35.5776, -7.05202, 37.1467, 0.12 ) }
    dend_48 { pt3dadd( -36.3416, -5.85496, 37.9715, 0.12 ) }
    dend_48 { pt3dadd( -42.0611, -9.03638, 43.3364, 0.12 ) }
    dend_48 { pt3dadd( -47.7834, -12.3554, 48.6141, 0.12 ) }
    dend_48 { pt3dadd( -52.4196, -16.8685, 54.0687, 0.12 ) }
    dend_48 { pt3dadd( -56.9756, -20.9687, 59.9036, 0.12 ) }
    dend_48 { pt3dadd( -61.9221, -24.1683, 65.979, 0.12 ) }
    dend_48 { pt3dadd( -66.1345, -28.6183, 71.8158, 0.12 ) }
    dend_48 { pt3dadd( -69.9535, -34.2331, 76.866, 0.12 ) }
    dend_48 { pt3dadd( -74.8017, -39.9863, 80.7403, 0.12 ) }
    dend_48 { pt3dadd( -78.8496, -47.0833, 82.9451, 0.12 ) }
    dend_48 { pt3dadd( -82.2741, -54.453, 85.3064, 0.12 ) }
    dend_48 { pt3dadd( -86.1892, -61.0903, 88.804, 0.12 ) }
    dend_48 { pt3dadd( -90.3911, -67.2852, 92.7515, 0.12 ) }
    dend_48 { pt3dadd( -94.9436, -72.6053, 97.5041, 0.12 ) }
    dend_48 { pt3dadd( -99.1473, -78.8545, 101.363, 0.12 ) }
    dend_48 { pt3dadd( -103.58, -85.3105, 104.57, 0.12 ) }
    dend_48 { pt3dadd( -108.402, -91.23, 108.22, 0.12 ) }
    dend_48 { pt3dadd( -112.603, -96.5481, 113.288, 0.12 ) }
    dend_48 { pt3dadd( -117.287, -101.935, 117.833, 0.12 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.97325, 42.672, 18.4273, 0.72 ) }
    dend_32 { pt3dadd( -3.10416, 38.9793, 17.3844, 0.72 ) }
    dend_32 { pt3dadd( -3.28003, 35.2983, 16.1465, 0.72 ) }
    dend_32 { pt3dadd( -3.42396, 32.9691, 15.2412, 0.72 ) }
    dend_32 { pt3dadd( -3.60962, 30.0093, 14.0761, 0.72 ) }
    dend_32 { pt3dadd( -3.73109, 26.8083, 12.7836, 0.72 ) }
    dend_32 { pt3dadd( -3.8444, 23.8225, 11.5781, 0.72 ) }
    dend_32 { pt3dadd( -3.94998, 21.6117, 10.4983, 0.72 ) }
    dend_32 { pt3dadd( -4.11434, 18.0095, 8.62127, 0.72 ) }
    dend_32 { pt3dadd( -4.29451, 14.81, 7.02832, 0.72 ) }
    dend_32 { pt3dadd( -4.55895, 11.5818, 5.43128, 0.72 ) }
    dend_32 { pt3dadd( -6.85569, 4.03018, 0.675305, 0.72 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.97325, 42.672, 18.4273, 1.2 ) }
    dend_31 { pt3dadd( -2.37341, 47.6442, 20.23, 1.2 ) }
    dend_31 { pt3dadd( -1.90073, 52.4123, 21.7147, 1.08 ) }
    dend_31 { pt3dadd( -1.36992, 58.0764, 23.2178, 1.08 ) }
    dend_31 { pt3dadd( -0.996149, 62.5561, 24.1898, 1.08 ) }
    dend_31 { pt3dadd( -0.810205, 65.3635, 24.7493, 1.08 ) }
    dend_31 { pt3dadd( -0.708528, 67.9422, 25.2488, 0.84 ) }
    dend_31 { pt3dadd( -0.644958, 71.0004, 25.6665, 0.84 ) }
    dend_31 { pt3dadd( -0.688475, 74.4973, 26.0091, 0.84 ) }
    dend_31 { pt3dadd( -0.924829, 79.8184, 26.4755, 0.84 ) }
    dend_31 { pt3dadd( -1.18063, 83.6115, 26.8998, 0.84 ) }
    dend_31 { pt3dadd( -1.55573, 87.2334, 27.3589, 0.84 ) }
    dend_31 { pt3dadd( -1.84458, 89.591, 27.6733, 0.72 ) }
    dend_31 { pt3dadd( -2.36069, 93.5004, 28.2271, 0.72 ) }
    dend_31 { pt3dadd( -2.83869, 96.5891, 28.6862, 0.72 ) }
    dend_31 { pt3dadd( -3.61085, 101.204, 29.3757, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( -4.43686, 106.26, 30.0213, 0.72 ) }
    dend_31 { pt3dadd( -4.95288, 109.496, 30.413, 0.72 ) }
    dend_31 { pt3dadd( -3.81308, 122.642, 30.0057, 0.72 ) }
    dend_31 { pt3dadd( -1.58114, 135.567, 28.5074, 0.72 ) }
    dend_31 { pt3dadd( 2.96255, 147.522, 25.2316, 0.72 ) }
    dend_31 { pt3dadd( 7.50218, 159.618, 22.5218, 0.72 ) }
    dend_31 { pt3dadd( 10.7733, 172.271, 20.6505, 0.72 ) }
    dend_31 { pt3dadd( 15.0538, 184.567, 18.471, 0.72 ) }
    dend_31 { pt3dadd( 19.2082, 196.954, 16.5732, 0.72 ) }
    dend_31 { pt3dadd( 25.3304, 208.649, 16.7463, 0.72 ) }
    dend_31 { pt3dadd( 32.2349, 219.901, 16.7613, 0.72 ) }
    dend_31 { pt3dadd( 38.5606, 231.48, 17.192, 0.72 ) }
    dend_31 { pt3dadd( 42.8031, 243.977, 17.5177, 0.72 ) }
    dend_31 { pt3dadd( 45.1469, 256.867, 15.8967, 0.72 ) }
    dend_31 { pt3dadd( 46.029, 270.039, 15.9761, 0.72 ) }
    dend_31 { pt3dadd( 48.36, 282.991, 17.0291, 0.72 ) }
    dend_31 { pt3dadd( 48.3034, 295.984, 19.3653, 0.72 ) }
    dend_31 { pt3dadd( 50.275, 308.071, 24.2932, 0.72 ) }
    dend_31 { pt3dadd( 52.9907, 319.347, 30.5988, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.5527, 10.4033, 0.266218, 1.32 ) }
    dend_17 { pt3dadd( 12.7242, 12.0764, 0.215666, 1.32 ) }
    dend_17 { pt3dadd( 12.8937, 15.6035, 0.346399, 1.32 ) }
    dend_17 { pt3dadd( 12.9666, 17.3149, 0.484007, 1.32 ) }
    dend_17 { pt3dadd( 13.0003, 18.0674, 0.621953, 1.32 ) }
    dend_17 { pt3dadd( 13.0791, 20.0466, 1.09955, 1.32 ) }
    dend_17 { pt3dadd( 13.1833, 22.356, 1.7245, 1.2 ) }
    dend_17 { pt3dadd( 13.2502, 24.1371, 2.35779, 1.2 ) }
    dend_17 { pt3dadd( 13.3221, 26.4421, 3.32498, 1.2 ) }
    dend_17 { pt3dadd( 13.4849, 29.352, 4.54578, 1.2 ) }
    dend_17 { pt3dadd( 13.6741, 31.376, 5.37251, 0.96 ) }
    dend_17 { pt3dadd( 14.0428, 34.6295, 6.66109, 0.96 ) }
    dend_17 { pt3dadd( 14.255, 36.4432, 7.35724, 0.72 ) }
    dend_17 { pt3dadd( 14.7095, 40.7052, 8.92643, 0.72 ) }
    dend_17 { pt3dadd( 14.9047, 42.7654, 9.62914, 1.08 ) }
    dend_17 { pt3dadd( 15.0656, 44.6684, 10.1858, 0.48 ) }
    dend_17 { pt3dadd( 15.2255, 47.081, 10.8744, 0.12 ) }
    dend_17 { pt3dadd( 15.2617, 47.9744, 11.1429, 0.72 ) }
    dend_17 { pt3dadd( 15.2762, 48.6559, 11.347, 1.08 ) }
    dend_17 { pt3dadd( 15.2782, 49.4791, 11.6191, 0.48 ) }
    dend_17 { pt3dadd( 15.2382, 50.5776, 12.0194, 0.48 ) }
    dend_17 { pt3dadd( 15.1407, 52.3869, 12.741, 1.08 ) }
    dend_17 { pt3dadd( 15.1343, 54.576, 13.6724, 0.36 ) }
    dend_17 { pt3dadd( 15.1775, 56.8253, 14.6683, 0.36 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.5527, 10.4033, 0.266218, 1.32 ) }
    dend_14 { pt3dadd( 13.1849, 10.088, 0.221027, 1.32 ) }
    dend_14 { pt3dadd( 14.6122, 9.42244, 0.0703931, 1.08 ) }
    dend_14 { pt3dadd( 17.3396, 8.19589, -0.365116, 0.84 ) }
    dend_14 { pt3dadd( 19.9837, 7.08341, -0.859382, 0.6 ) }
    dend_14 { pt3dadd( 21.3815, 6.53227, -1.15479, 0.6 ) }
    dend_14 { pt3dadd( 23.5385, 5.66496, -1.62204, 0.6 ) }
    dend_14 { pt3dadd( 25.9331, 4.69887, -2.20578, 0.6 ) }
    dend_14 { pt3dadd( 28.6684, 3.6249, -2.96992, 0.6 ) }
    dend_14 { pt3dadd( 30.7019, 2.88994, -3.56965, 0.6 ) }
    dend_14 { pt3dadd( 34.0995, 1.73838, -4.56981, 0.6 ) }
    dend_14 { pt3dadd( 35.6389, 1.2432, -4.99898, 0.6 ) }
    dend_14 { pt3dadd( 38.9639, 0.231382, -5.83453, 0.6 ) }
    dend_14 { pt3dadd( 42.0771, -0.716453, -6.68278, 0.6 ) }
    dend_14 { pt3dadd( 44.0407, -1.2547, -7.20876, 0.12 ) }
    dend_14 { pt3dadd( 44.6334, -1.4018, -7.37258, 0.12 ) }
    dend_14 { pt3dadd( 45.2339, -1.51445, -7.56229, 0.36 ) }
    dend_14 { pt3dadd( 45.3786, -1.53328, -7.61244, 0.84 ) }
    dend_14 { pt3dadd( 47.0136, -1.68443, -8.20288, 0.12 ) }
    dend_14 { pt3dadd( 48.2671, -1.82212, -8.70011, 0.12 ) }
    dend_14 { pt3dadd( 48.918, -1.9068, -8.9891, 1.2 ) }
    dend_14 { pt3dadd( 50.6413, -2.14325, -9.75838, 0.12 ) }
    dend_14 { pt3dadd( 52.6871, -2.43765, -10.6426, 0.12 ) }
    dend_14 { pt3dadd( 53.2304, -2.5176, -10.8679, 0.84 ) }
    dend_14 { pt3dadd( 53.5532, -2.56704, -10.9889, 0.12 ) }
    dend_14 { pt3dadd( 55.5539, -2.87692, -11.7747, 0.12 ) }
    dend_14 { pt3dadd( 55.6251, -2.88657, -11.8051, 0.72 ) }
    dend_14 { pt3dadd( 55.9872, -2.92697, -11.9597, 0.12 ) }
    dend_14 { pt3dadd( 57.5664, -3.0456, -12.7062, 0.12 ) }
    dend_14 { pt3dadd( 58.0781, -3.0769, -12.9481, 1.56 ) }
    dend_14 { pt3dadd( 59.7408, -3.15059, -13.7057, 0.12 ) }
    dend_14 { pt3dadd( 61.9022, -3.24357, -14.5855, 0.12 ) }
    dend_14 { pt3dadd( 62.2262, -3.25554, -14.7097, 0.84 ) }
    dend_14 { pt3dadd( 62.8196, -3.26987, -14.9189, 0.84 ) }
    dend_14 { pt3dadd( 63.1272, -3.2695, -15.0392, 0.84 ) }
    dend_14 { pt3dadd( 63.6471, -3.25498, -15.2621, 0.12 ) }
    dend_14 { pt3dadd( 64.7592, -3.20217, -15.7419, 0.12 ) }
    dend_14 { pt3dadd( 65.2908, -3.16786, -15.9516, 0.72 ) }
    dend_14 { pt3dadd( 65.7792, -3.15381, -16.1357, 0.12 ) }
    dend_14 { pt3dadd( 68.196, -3.15944, -16.9754, 0.12 ) }
    dend_14 { pt3dadd( 68.6491, -3.16097, -17.1129, 0.72 ) }
    dend_14 { pt3dadd( 69.4142, -3.17085, -17.2924, 0.12 ) }
    dend_14 { pt3dadd( 70.5861, -3.27036, -17.5927, 0.12 ) }
    dend_14 { pt3dadd( 71.7889, -3.45229, -17.8872, 0.12 ) }
    dend_14 { pt3dadd( 72.9049, -3.68254, -18.1863, 0.84 ) }
    dend_14 { pt3dadd( 74.0397, -3.97677, -18.4843, 0.12 ) }
    dend_14 { pt3dadd( 76.0629, -4.58901, -19.0913, 0.12 ) }
    dend_14 { pt3dadd( 78.7504, -5.56358, -20.1161, 0.6 ) }
    dend_14 { pt3dadd( 79.6078, -5.93154, -20.5246, 0.12 ) }
    dend_14 { pt3dadd( 81.7651, -6.93486, -21.7986, 0.12 ) }
    dend_14 { pt3dadd( 82.4372, -7.26566, -22.2544, 0.84 ) }
    dend_14 { pt3dadd( 83.1676, -7.65652, -22.8043, 0.12 ) }
    dend_14 { pt3dadd( 84.7583, -8.55357, -24.1577, 0.12 ) }
    dend_14 { pt3dadd( 85.6528, -9.03883, -24.9412, 0.72 ) }
    dend_14 { pt3dadd( 86.9506, -9.77357, -26.2428, 0.12 ) }
    dend_14 { pt3dadd( 87.3239, -10.0034, -26.6838, 0.48 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.067775, -13.8145, 3.95622, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -2.00321, -15.5141, 6.21788, 0.96 ) }
    dend_12 { pt3dadd( -3.66341, -17.356, 8.7598, 0.96 ) }
    dend_12 { pt3dadd( -5.2184, -19.3463, 11.4193, 0.96 ) }
    dend_12 { pt3dadd( -6.68846, -21.259, 13.8292, 0.96 ) }
    dend_12 { pt3dadd( -7.13208, -21.8058, 14.4558, 1.08 ) }
    dend_12 { pt3dadd( -8.95219, -23.7803, 16.52, 1.08 ) }
    dend_12 { pt3dadd( -10.3301, -25.2565, 17.9922, 0.84 ) }
    dend_12 { pt3dadd( -11.0678, -26.0647, 18.7465, 0.84 ) }
    dend_12 { pt3dadd( -12.2793, -27.3789, 19.9372, 0.84 ) }
    dend_12 { pt3dadd( -14.307, -29.5476, 21.6644, 0.84 ) }
    dend_12 { pt3dadd( -16.4382, -32.0729, 23.6701, 0.84 ) }
    dend_12 { pt3dadd( -17.0839, -33.0318, 24.4036, 0.84 ) }
    dend_12 { pt3dadd( -17.995, -34.9056, 25.9245, 0.84 ) }
    dend_12 { pt3dadd( -18.4366, -36.7015, 27.5776, 0.84 ) }
    dend_12 { pt3dadd( -18.4096, -38.9505, 29.7954, 0.84 ) }
    dend_12 { pt3dadd( -17.8228, -41.2616, 32.3407, 0.84 ) }
    dend_12 { pt3dadd( -16.6587, -43.5795, 35.3375, 0.84 ) }
    dend_12 { pt3dadd( -15.9632, -44.4701, 36.7553, 0.6 ) }
    dend_12 { pt3dadd( -14.2063, -46.2063, 39.8182, 0.48 ) }
    dend_12 { pt3dadd( -12.1296, -47.3086, 42.7764, 0.12 ) }
    dend_12 { pt3dadd( -9.99992, -47.4377, 45.3588, 0.12 ) }
    dend_12 { pt3dadd( -7.9685, -46.5899, 47.2878, 0.12 ) }
    dend_12 { pt3dadd( -6.58561, -45.5271, 48.3646, 0.12 ) }
    dend_12 { pt3dadd( -9.4634, -52.2101, 56.4376, 0.12 ) }
    dend_12 { pt3dadd( -13.8938, -58.384, 64.2075, 0.12 ) }
    dend_12 { pt3dadd( -17.4518, -63.9354, 72.8471, 0.12 ) }
    dend_12 { pt3dadd( -21.1583, -68.8649, 81.7958, 0.12 ) }
    dend_12 { pt3dadd( -26.4092, -71.7358, 90.8679, 0.12 ) }
    dend_12 { pt3dadd( -32.4964, -75.26, 99.1531, 0.12 ) }
    dend_12 { pt3dadd( -39.4327, -77.3307, 107.26, 0.12 ) }
    dend_12 { pt3dadd( -46.5489, -79.0948, 115.282, 0.12 ) }
    dend_12 { pt3dadd( -51.7681, -83.1682, 123.901, 0.12 ) }
    dend_12 { pt3dadd( -58.1236, -85.3048, 132.455, 0.12 ) }
    dend_12 { pt3dadd( -64.0375, -85.2423, 141.573, 0.12 ) }
    dend_12 { pt3dadd( -70.0142, -87.1116, 150.455, 0.12 ) }
    dend_12 { pt3dadd( -76.6168, -91.5706, 157.847, 0.12 ) }
    dend_12 { pt3dadd( -83.5255, -95.6248, 165.192, 0.12 ) }
    dend_12 { pt3dadd( -91.1013, -100.113, 171.563, 0.12 ) }
    dend_12 { pt3dadd( -100.217, -103.529, 176.396, 0.12 ) }
    dend_12 { pt3dadd( -110.411, -105.473, 179.626, 0.12 ) }
    dend_12 { pt3dadd( -120.25, -107.833, 183.591, 0.12 ) }
    dend_12 { pt3dadd( -130.962, -107.978, 185.421, 0.12 ) }
    dend_12 { pt3dadd( -141.493, -108.797, 187.981, 0.12 ) }
    dend_12 { pt3dadd( -151.795, -109.07, 191.434, 0.12 ) }
    dend_12 { pt3dadd( -162.399, -111.175, 192.543, 0.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.067775, -13.8145, 3.95622, 2.16 ) }
    dend_1 { pt3dadd( 0.400265, -21.5334, 5.52248, 2.16 ) }
    dend_1 { pt3dadd( 0.862043, -29.1491, 7.06779, 2.04 ) }
    dend_1 { pt3dadd( 1.2377, -35.3445, 8.32491, 2.04 ) }
    dend_1 { pt3dadd( 1.45535, -38.934, 9.05326, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.79974, 42.5383, -5.17545, 0.84 ) }
    axon_1 { pt3dadd( -9.0138, 57.374, -5.17545, 0.84 ) }
    axon_1 { pt3dadd( -11.2279, 72.2097, -5.17545, 0.84 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 53/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 29.3387, 37.8154, -28.1969, 0.6 ) }
    dend_76 { pt3dadd( 30.1819, 38.0979, -28.8186, 0.6 ) }
    dend_76 { pt3dadd( 31.1863, 38.4701, -29.4985, 0.6 ) }
    dend_76 { pt3dadd( 32.2, 38.8421, -30.1215, 1.32 ) }
    dend_76 { pt3dadd( 33.1303, 39.1249, -30.7839, 0.48 ) }
    dend_76 { pt3dadd( 36.7042, 40.1159, -33.4056, 0.48 ) }
    dend_76 { pt3dadd( 37.8501, 40.4204, -34.2425, 0.48 ) }
    dend_76 { pt3dadd( 38.9572, 40.7146, -35.144, 1.08 ) }
    dend_76 { pt3dadd( 39.8334, 40.9642, -35.9103, 0.48 ) }
    dend_76 { pt3dadd( 42.8405, 41.9087, -38.6916, 0.12 ) }
    dend_76 { pt3dadd( 43.5242, 42.1405, -39.4642, 0.72 ) }
    dend_76 { pt3dadd( 43.9625, 42.2926, -40.0136, 0.12 ) }
    dend_76 { pt3dadd( 45.5766, 42.829, -42.3726, 0.12 ) }
    dend_76 { pt3dadd( 46.1245, 43.0416, -43.2499, 1.2 ) }
    dend_76 { pt3dadd( 47.073, 43.5188, -44.8602, 0.12 ) }
    dend_76 { pt3dadd( 48.9502, 44.666, -48.1307, 0.12 ) }
    dend_76 { pt3dadd( 49.5468, 45.083, -49.2243, 1.08 ) }
    dend_76 { pt3dadd( 50.5036, 45.8564, -51.0801, 0.12 ) }
    dend_76 { pt3dadd( 51.5579, 46.8129, -53.2541, 0.12 ) }
    dend_76 { pt3dadd( 52.0968, 47.3119, -54.3454, 0.84 ) }
    dend_76 { pt3dadd( 53.4, 48.4993, -56.7823, 0.12 ) }
    dend_76 { pt3dadd( 54.1037, 49.1385, -57.9467, 0.24 ) }
    dend_76 { pt3dadd( 54.6218, 49.6109, -58.8238, 0.72 ) }
    dend_76 { pt3dadd( 56.4224, 51.0934, -61.7002, 0.12 ) }
    dend_76 { pt3dadd( 57.1456, 51.5809, -62.8464, 0.72 ) }
    dend_76 { pt3dadd( 57.5448, 51.8073, -63.4634, 0.12 ) }
    dend_76 { pt3dadd( 58.1865, 52.1384, -64.5802, 0.12 ) }
    dend_76 { pt3dadd( 59.0199, 52.4996, -66.2644, 1.08 ) }
    dend_76 { pt3dadd( 60.0717, 52.9576, -68.482, 0.12 ) }
    dend_76 { pt3dadd( 60.9417, 53.3491, -70.4703, 0.12 ) }
    dend_76 { pt3dadd( 61.0693, 53.4114, -70.7669, 1.2 ) }
    dend_76 { pt3dadd( 62.7214, 54.2794, -74.5054, 0.12 ) }
    dend_76 { pt3dadd( 64.8609, 55.4755, -79.0308, 0.12 ) }
    dend_76 { pt3dadd( 65.3476, 55.7407, -79.9458, 1.2 ) }
    dend_76 { pt3dadd( 66.0758, 56.1286, -81.1232, 0.12 ) }
    dend_76 { pt3dadd( 67.4005, 56.8233, -82.8627, 0.12 ) }
    dend_76 { pt3dadd( 67.9406, 57.1194, -83.4382, 0.96 ) }
    dend_76 { pt3dadd( 68.7773, 57.6122, -84.0472, 0.12 ) }
    dend_76 { pt3dadd( 69.8855, 58.3424, -84.641, 0.12 ) }
    dend_76 { pt3dadd( 70.7968, 58.9121, -85.1377, 0.72 ) }
    dend_76 { pt3dadd( 71.4341, 59.3104, -85.5003, 0.12 ) }
    dend_76 { pt3dadd( 72.8176, 60.1478, -86.3434, 0.12 ) }
    dend_76 { pt3dadd( 73.2283, 60.3783, -86.6037, 0.48 ) }
    dend_76 { pt3dadd( 73.9331, 60.7489, -87.0708, 0.12 ) }
    dend_76 { pt3dadd( 76.7586, 61.7738, -89.1937, 0.12 ) }
    dend_76 { pt3dadd( 77.6444, 61.9533, -89.9186, 1.44 ) }
    dend_76 { pt3dadd( 78.6987, 62.0074, -90.8067, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_76 { pt3dadd( 79.6115, 61.9061, -91.5717, 0.24 ) }
    dend_76 { pt3dadd( 80.2628, 61.7549, -92.1242, 0.72 ) }
    dend_76 { pt3dadd( 83.43, 60.6878, -95.0692, 0.12 ) }
    dend_76 { pt3dadd( 84.0587, 60.4059, -95.6835, 0.96 ) }
    dend_76 { pt3dadd( 84.5717, 60.1886, -96.2079, 0.84 ) }
    dend_76 { pt3dadd( 85.1147, 59.9798, -96.8344, 0.24 ) }
    dend_76 { pt3dadd( 85.6016, 59.8579, -97.4152, 0.24 ) }
    dend_76 { pt3dadd( 87.3417, 59.8706, -99.6616, 0.12 ) }
    dend_76 { pt3dadd( 87.6929, 60.0056, -100.162, 0.84 ) }
    dend_76 { pt3dadd( 88.9836, 60.7373, -102.199, 0.12 ) }
    dend_76 { pt3dadd( 89.5754, 61.1698, -103.201, 0.12 ) }
    dend_76 { pt3dadd( 90.0495, 61.5969, -104.025, 0.6 ) }
    dend_76 { pt3dadd( 91.1514, 62.7431, -105.951, 0.12 ) }
    dend_76 { pt3dadd( 92.0493, 63.7935, -107.371, 0.84 ) }
    dend_76 { pt3dadd( 92.6238, 64.5208, -108.221, 0.12 ) }
    dend_76 { pt3dadd( 92.9986, 65.0534, -108.714, 0.24 ) }
    dend_76 { pt3dadd( 93.4325, 65.6479, -109.164, 0.72 ) }
    dend_76 { pt3dadd( 94.2406, 66.5971, -109.735, 0.12 ) }
    dend_76 { pt3dadd( 95.2835, 67.646, -110.211, 0.12 ) }
    dend_76 { pt3dadd( 95.5655, 67.8945, -110.304, 0.72 ) }
    dend_76 { pt3dadd( 96.4131, 68.5484, -110.557, 0.48 ) }
    dend_76 { pt3dadd( 98.2219, 69.7732, -111.067, 0.12 ) }
    dend_76 { pt3dadd( 101.572, 71.7602, -111.927, 0.12 ) }
    dend_76 { pt3dadd( 102.444, 72.2052, -112.126, 1.2 ) }
    dend_76 { pt3dadd( 103.883, 72.9071, -112.476, 0.12 ) }
    dend_76 { pt3dadd( 105.702, 73.8025, -112.926, 0.12 ) }
    dend_76 { pt3dadd( 107.076, 74.4767, -113.262, 0.12 ) }
    dend_76 { pt3dadd( 108.211, 75.0783, -113.547, 0.84 ) }
    dend_76 { pt3dadd( 109.503, 75.8252, -113.868, 0.24 ) }
    dend_76 { pt3dadd( 114.136, 78.8863, -115.005, 0.24 ) }
    dend_76 { pt3dadd( 114.92, 79.498, -115.212, 0.84 ) }
    dend_76 { pt3dadd( 115.643, 80.166, -115.381, 0.12 ) }
    dend_76 { pt3dadd( 116.97, 81.583, -115.668, 0.12 ) }
    dend_76 { pt3dadd( 117.308, 82.0042, -115.732, 0.48 ) }
    dend_76 { pt3dadd( 118.131, 83.2031, -115.86, 0.12 ) }
    dend_76 { pt3dadd( 120.778, 87.54, -116.123, 0.12 ) }
    dend_76 { pt3dadd( 121.957, 89.5943, -116.265, 0.84 ) }
    dend_76 { pt3dadd( 122.832, 91.1953, -116.384, 0.12 ) }
    dend_76 { pt3dadd( 123.956, 93.3317, -116.552, 0.12 ) }
    dend_76 { pt3dadd( 124.492, 94.4018, -116.636, 0.72 ) }
    dend_76 { pt3dadd( 124.94, 95.363, -116.707, 0.12 ) }
    dend_76 { pt3dadd( 125.594, 97.0713, -116.81, 0.12 ) }
    dend_76 { pt3dadd( 125.792, 97.5606, -116.871, 0.72 ) }
    dend_76 { pt3dadd( 126.247, 98.6625, -117.017, 0.12 ) }
    dend_76 { pt3dadd( 126.653, 99.556, -117.184, 0.12 ) }
    dend_76 { pt3dadd( 127.216, 100.699, -117.435, 0.36 ) }
    dend_76 { pt3dadd( 127.803, 101.804, -117.697, 0.12 ) }
    dend_76 { pt3dadd( 127.928, 102.0, -117.747, 0.6 ) }
    dend_76 { pt3dadd( 128.592, 102.966, -118.018, 0.12 ) }
    dend_76 { pt3dadd( 129.768, 104.519, -118.486, 0.12 ) }
    dend_76 { pt3dadd( 130.206, 105.101, -118.717, 1.2 ) }
    dend_76 { pt3dadd( 130.873, 106.014, -119.12, 0.12 ) }
    dend_76 { pt3dadd( 132.98, 108.935, -120.457, 0.12 ) }
    dend_76 { pt3dadd( 133.447, 109.62, -120.766, 0.84 ) }
    dend_76 { pt3dadd( 133.96, 110.404, -121.112, 0.12 ) }
    dend_76 { pt3dadd( 135.743, 113.332, -122.523, 0.12 ) }
    dend_76 { pt3dadd( 136.404, 114.577, -123.187, 0.48 ) }
    dend_76 { pt3dadd( 136.669, 115.187, -123.538, 0.12 ) }
    dend_76 { pt3dadd( 136.878, 115.811, -123.911, 0.12 ) }
    dend_76 { pt3dadd( 137.027, 116.388, -124.242, 0.6 ) }
    dend_76 { pt3dadd( 137.446, 118.711, -125.503, 0.12 ) }
    dend_76 { pt3dadd( 137.629, 120.067, -126.145, 0.12 ) }
    dend_76 { pt3dadd( 137.7, 120.85, -126.479, 0.84 ) }
    dend_76 { pt3dadd( 137.8, 122.169, -126.971, 0.12 ) }
    dend_76 { pt3dadd( 138.023, 124.628, -127.743, 0.12 ) }
    dend_76 { pt3dadd( 138.091, 125.213, -127.887, 0.96 ) }
    dend_76 { pt3dadd( 138.233, 126.146, -128.075, 0.12 ) }
    dend_76 { pt3dadd( 138.72, 128.61, -128.639, 0.12 ) }
    dend_76 { pt3dadd( 138.912, 129.381, -128.795, 1.08 ) }
    dend_76 { pt3dadd( 139.238, 130.438, -128.963, 0.36 ) }
    dend_76 { pt3dadd( 139.577, 131.36, -129.048, 0.36 ) }
    dend_76 { pt3dadd( 140.176, 132.963, -129.157, 0.72 ) }
    dend_76 { pt3dadd( 140.455, 133.738, -129.193, 0.12 ) }
    dend_76 { pt3dadd( 140.986, 135.307, -129.229, 0.12 ) }
    dend_76 { pt3dadd( 141.214, 136.159, -129.286, 0.48 ) }
    dend_76 { pt3dadd( 141.369, 136.9, -129.355, 0.12 ) }
    dend_76 { pt3dadd( 141.736, 139.008, -129.578, 0.12 ) }
    dend_76 { pt3dadd( 141.829, 139.539, -129.662, 0.84 ) }
    dend_76 { pt3dadd( 142.043, 140.873, -130.009, 0.12 ) }
    dend_76 { pt3dadd( 142.421, 143.325, -130.86, 0.12 ) }
    dend_76 { pt3dadd( 142.532, 144.033, -131.131, 0.96 ) }
    dend_76 { pt3dadd( 142.669, 144.843, -131.47, 0.24 ) }
    dend_76 { pt3dadd( 143.04, 147.003, -132.446, 0.12 ) }
    dend_76 { pt3dadd( 143.135, 147.803, -132.867, 0.72 ) }
    dend_76 { pt3dadd( 143.182, 148.471, -133.261, 0.12 ) }
    dend_76 { pt3dadd( 143.172, 149.478, -133.876, 0.12 ) }
    dend_76 { pt3dadd( 143.141, 149.696, -134.009, 0.96 ) }
    dend_76 { pt3dadd( 142.946, 150.373, -134.513, 0.12 ) }
    dend_76 { pt3dadd( 141.974, 152.633, -136.334, 0.12 ) }
    dend_76 { pt3dadd( 141.82, 152.954, -136.591, 0.96 ) }
    dend_76 { pt3dadd( 141.487, 153.594, -137.069, 0.12 ) }
    dend_76 { pt3dadd( 140.818, 154.836, -137.898, 0.12 ) }
    dend_76 { pt3dadd( 139.536, 157.308, -139.038, 1.2 ) }
    dend_76 { pt3dadd( 139.115, 158.149, -139.292, 0.12 ) }
    dend_76 { pt3dadd( 138.515, 159.476, -139.597, 0.12 ) }
    dend_76 { pt3dadd( 137.947, 160.936, -139.93, 0.84 ) }
    dend_76 { pt3dadd( 137.671, 161.787, -140.112, 0.12 ) }
    dend_76 { pt3dadd( 136.833, 165.132, -140.714, 0.12 ) }
    dend_76 { pt3dadd( 136.645, 166.122, -140.838, 0.84 ) }
    dend_76 { pt3dadd( 136.385, 168.293, -141.207, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_76 { pt3dadd( 136.303, 169.841, -141.557, 0.12 ) }
    dend_76 { pt3dadd( 136.312, 170.066, -141.62, 0.48 ) }
    dend_76 { pt3dadd( 136.413, 170.755, -141.806, 0.12 ) }
    dend_76 { pt3dadd( 136.803, 172.007, -142.147, 0.12 ) }
    dend_76 { pt3dadd( 136.944, 172.407, -142.227, 0.48 ) }
    dend_76 { pt3dadd( 137.096, 172.857, -142.244, 0.12 ) }
    dend_76 { pt3dadd( 137.462, 174.157, -142.293, 0.12 ) }
    dend_76 { pt3dadd( 137.682, 175.003, -142.325, 0.6 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 8/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 29.3387, 37.8154, -28.1969, 0.48 ) }
    dend_75 { pt3dadd( 29.5837, 36.7906, -28.3776, 0.48 ) }
    dend_75 { pt3dadd( 29.8528, 35.6652, -28.576, 0.12 ) }
    dend_75 { pt3dadd( 30.1551, 34.4006, -28.799, 0.96 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 12/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -170.394, 133.077, -168.99, 0.36 ) }
    dend_71 { pt3dadd( -167.502, 133.004, -171.872, 0.36 ) }
    dend_71 { pt3dadd( -166.416, 132.92, -172.909, 0.12 ) }
    dend_71 { pt3dadd( -165.734, 132.822, -173.588, 0.84 ) }
    dend_71 { pt3dadd( -163.842, 132.477, -175.423, 0.12 ) }
    dend_71 { pt3dadd( -163.203, 132.337, -176.137, 0.12 ) }
    dend_71 { pt3dadd( -162.699, 132.208, -176.724, 0.12 ) }
    dend_71 { pt3dadd( -162.352, 132.065, -177.15, 0.6 ) }
    dend_71 { pt3dadd( -161.561, 131.587, -178.612, 0.6 ) }
    dend_71 { pt3dadd( -160.97, 131.126, -179.975, 0.6 ) }
    dend_71 { pt3dadd( -160.039, 130.076, -182.795, 0.12 ) }
    dend_71 { pt3dadd( -159.82, 129.808, -183.492, 0.12 ) }
    dend_71 { pt3dadd( -159.513, 129.463, -184.377, 0.84 ) }
    dend_71 { pt3dadd( -157.998, 127.722, -188.863, 0.12 ) }
    dend_71 { pt3dadd( -157.801, 127.48, -189.462, 0.6 ) }
    dend_71 { pt3dadd( -156.826, 126.159, -192.615, 0.36 ) }
    dend_71 { pt3dadd( -155.67, 124.642, -196.047, 0.36 ) }
    dend_71 { pt3dadd( -155.1, 123.941, -197.707, 0.36 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 30/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -170.394, 133.077, -168.99, 0.48 ) }
    dend_68 { pt3dadd( -173.09, 133.63, -170.477, 0.48 ) }
    dend_68 { pt3dadd( -176.366, 134.369, -172.224, 0.48 ) }
    dend_68 { pt3dadd( -177.854, 134.704, -172.968, 1.2 ) }
    dend_68 { pt3dadd( -180.269, 135.297, -174.049, 0.24 ) }
    dend_68 { pt3dadd( -181.656, 135.691, -174.623, 0.24 ) }
    dend_68 { pt3dadd( -184.591, 136.589, -175.75, 0.24 ) }
    dend_68 { pt3dadd( -185.435, 136.932, -176.067, 0.96 ) }
    dend_68 { pt3dadd( -186.509, 137.423, -176.414, 0.36 ) }
    dend_68 { pt3dadd( -188.666, 138.562, -177.116, 0.36 ) }
    dend_68 { pt3dadd( -190.234, 139.639, -177.7, 0.84 ) }
    dend_68 { pt3dadd( -191.031, 140.301, -178.04, 0.24 ) }
    dend_68 { pt3dadd( -193.988, 143.234, -179.541, 0.24 ) }
    dend_68 { pt3dadd( -194.175, 143.45, -179.67, 0.72 ) }
    dend_68 { pt3dadd( -194.994, 144.557, -180.365, 0.72 ) }
    dend_68 { pt3dadd( -197.186, 148.082, -182.607, 0.24 ) }
    dend_68 { pt3dadd( -197.646, 148.911, -183.118, 1.44 ) }
    dend_68 { pt3dadd( -198.722, 151.108, -184.396, 1.44 ) }
    dend_68 { pt3dadd( -200.052, 154.144, -185.997, 0.48 ) }
    dend_68 { pt3dadd( -200.558, 155.312, -186.565, 0.96 ) }
    dend_68 { pt3dadd( -201.304, 156.749, -187.381, 0.36 ) }
    dend_68 { pt3dadd( -202.038, 157.803, -187.984, 0.36 ) }
    dend_68 { pt3dadd( -202.758, 158.474, -188.488, 0.36 ) }
    dend_68 { pt3dadd( -203.79, 159.108, -189.203, 0.6 ) }
    dend_68 { pt3dadd( -204.988, 159.578, -190.005, 0.24 ) }
    dend_68 { pt3dadd( -209.908, 160.765, -192.998, 0.24 ) }
    dend_68 { pt3dadd( -212.089, 161.091, -194.231, 1.32 ) }
    dend_68 { pt3dadd( -216.25, 161.443, -196.37, 0.84 ) }
    dend_68 { pt3dadd( -218.902, 161.625, -197.621, 0.12 ) }
    dend_68 { pt3dadd( -220.539, 161.769, -198.323, 0.24 ) }
    dend_68 { pt3dadd( -224.953, 162.426, -199.949, 0.24 ) }
    dend_68 { pt3dadd( -226.127, 162.725, -200.278, 1.08 ) }
    dend_68 { pt3dadd( -228.258, 163.513, -200.836, 0.36 ) }
    dend_68 { pt3dadd( -231.754, 165.271, -201.458, 0.36 ) }
    dend_68 { pt3dadd( -233.707, 166.429, -201.751, 1.32 ) }
    dend_68 { pt3dadd( -235.91, 167.905, -202.293, 0.36 ) }
    dend_68 { pt3dadd( -237.16, 168.842, -202.799, 0.6 ) }
    dend_68 { pt3dadd( -238.395, 169.724, -203.416, 0.6 ) }
    dend_68 { pt3dadd( -238.972, 170.131, -203.738, 0.6 ) }
    dend_68 { pt3dadd( -240.347, 170.941, -204.57, 0.36 ) }
    dend_68 { pt3dadd( -243.671, 172.49, -206.633, 0.36 ) }
    dend_68 { pt3dadd( -245.594, 173.249, -208.07, 0.36 ) }
    dend_68 { pt3dadd( -246.888, 173.741, -209.095, 0.96 ) }
    dend_68 { pt3dadd( -249.792, 174.99, -211.393, 0.96 ) }
    dend_68 { pt3dadd( -251.896, 176.068, -213.185, 0.36 ) }
    dend_68 { pt3dadd( -252.83, 176.642, -213.997, 0.36 ) }
    dend_68 { pt3dadd( -256.471, 179.325, -217.125, 0.96 ) }
    dend_68 { pt3dadd( -257.453, 180.086, -218.007, 0.24 ) }
    dend_68 { pt3dadd( -259.238, 181.44, -219.792, 0.12 ) }
    dend_68 { pt3dadd( -261.299, 182.885, -221.967, 0.6 ) }
    dend_68 { pt3dadd( -262.189, 183.526, -222.862, 0.6 ) }
    dend_68 { pt3dadd( -263.222, 184.318, -223.87, 0.24 ) }
    dend_68 { pt3dadd( -263.444, 184.476, -224.035, 0.48 ) }
    dend_68 { pt3dadd( -265.378, 185.619, -225.583, 0.36 ) }
    dend_68 { pt3dadd( -265.977, 185.816, -226.053, 1.2 ) }
    dend_68 { pt3dadd( -266.535, 185.887, -226.327, 1.2 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -54.4878, 22.6203, -12.3419, 0.6 ) }
    dend_64 { pt3dadd( -58.9182, 23.6514, -14.1096, 0.6 ) }
    dend_64 { pt3dadd( -60.8483, 24.119, -14.7932, 0.6 ) }
    dend_64 { pt3dadd( -62.4215, 24.5267, -15.2743, 0.6 ) }
    dend_64 { pt3dadd( -67.5079, 25.9168, -16.6819, 0.6 ) }
    dend_64 { pt3dadd( -70.0898, 26.6621, -17.3346, 0.6 ) }
    dend_64 { pt3dadd( -72.6148, 27.389, -17.9697, 1.56 ) }
    dend_64 { pt3dadd( -73.7138, 27.6993, -18.1746, 0.36 ) }
    dend_64 { pt3dadd( -76.2773, 28.4178, -18.6462, 0.36 ) }
    dend_64 { pt3dadd( -77.142, 28.6589, -18.8272, 0.72 ) }
    dend_64 { pt3dadd( -78.2863, 28.9922, -19.1091, 0.96 ) }
    dend_64 { pt3dadd( -81.2015, 29.8112, -20.0661, 0.12 ) }
    dend_64 { pt3dadd( -82.8542, 30.2815, -20.6601, 0.12 ) }
    dend_64 { pt3dadd( -83.614, 30.5043, -20.9253, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_64 { pt3dadd( -85.8793, 31.2106, -21.6825, 0.36 ) }
    dend_64 { pt3dadd( -88.7733, 32.1534, -22.5533, 0.12 ) }
    dend_64 { pt3dadd( -91.7795, 33.1887, -23.3281, 1.2 ) }
    dend_64 { pt3dadd( -94.3667, 34.1613, -23.8406, 0.36 ) }
    dend_64 { pt3dadd( -96.8593, 35.1368, -24.225, 0.12 ) }
    dend_64 { pt3dadd( -98.1956, 35.636, -24.3578, 0.84 ) }
    dend_64 { pt3dadd( -99.4876, 36.1, -24.3904, 0.12 ) }
    dend_64 { pt3dadd( -101.395, 36.7499, -24.3722, 0.12 ) }
    dend_64 { pt3dadd( -102.898, 37.2417, -24.4357, 1.2 ) }
    dend_64 { pt3dadd( -104.648, 37.7604, -24.5885, 0.36 ) }
    dend_64 { pt3dadd( -106.642, 38.3064, -24.8184, 0.36 ) }
    dend_64 { pt3dadd( -109.832, 39.1018, -25.2324, 0.36 ) }
    dend_64 { pt3dadd( -111.176, 39.4413, -25.4156, 1.08 ) }
    dend_64 { pt3dadd( -114.163, 40.2046, -25.8332, 0.12 ) }
    dend_64 { pt3dadd( -118.656, 41.3818, -26.464, 0.24 ) }
    dend_64 { pt3dadd( -119.854, 41.7424, -26.6173, 1.56 ) }
    dend_64 { pt3dadd( -121.994, 42.4899, -26.8797, 0.36 ) }
    dend_64 { pt3dadd( -124.071, 43.2896, -27.1047, 0.36 ) }
    dend_64 { pt3dadd( -125.219, 43.817, -27.1913, 0.72 ) }
    dend_64 { pt3dadd( -126.207, 44.3353, -27.2545, 0.12 ) }
    dend_64 { pt3dadd( -129.504, 46.3274, -27.7091, 0.36 ) }
    dend_64 { pt3dadd( -131.193, 47.3702, -28.0331, 0.96 ) }
    dend_64 { pt3dadd( -132.52, 48.1624, -28.3506, 0.24 ) }
    dend_64 { pt3dadd( -135.264, 49.6122, -29.1128, 0.24 ) }
    dend_64 { pt3dadd( -137.437, 50.6026, -29.7759, 0.72 ) }
    dend_64 { pt3dadd( -139.353, 51.2355, -30.3915, 0.12 ) }
    dend_64 { pt3dadd( -140.739, 51.4514, -30.8539, 0.12 ) }
    dend_64 { pt3dadd( -142.194, 51.4631, -31.2803, 0.6 ) }
    dend_64 { pt3dadd( -143.497, 51.1873, -31.5845, 0.6 ) }
    dend_64 { pt3dadd( -144.24, 50.9117, -31.7451, 0.12 ) }
    dend_64 { pt3dadd( -146.358, 49.9899, -32.1175, 0.12 ) }
    dend_64 { pt3dadd( -147.272, 49.5793, -32.2863, 0.6 ) }
    dend_64 { pt3dadd( -148.848, 48.9328, -32.6153, 0.12 ) }
    dend_64 { pt3dadd( -153.113, 47.4556, -33.5533, 0.12 ) }
    dend_64 { pt3dadd( -155.185, 46.8948, -34.0157, 0.84 ) }
    dend_64 { pt3dadd( -156.37, 46.7039, -34.2738, 0.12 ) }
    dend_64 { pt3dadd( -158.742, 46.6248, -34.7753, 0.12 ) }
    dend_64 { pt3dadd( -160.739, 46.8743, -35.1594, 0.12 ) }
    dend_64 { pt3dadd( -162.093, 47.4069, -35.4205, 0.84 ) }
    dend_64 { pt3dadd( -163.27, 48.2154, -35.6285, 0.36 ) }
    dend_64 { pt3dadd( -165.494, 50.0795, -35.9458, 0.12 ) }
    dend_64 { pt3dadd( -165.972, 50.5313, -36.0089, 0.72 ) }
    dend_64 { pt3dadd( -167.005, 51.5672, -36.1248, 0.12 ) }
    dend_64 { pt3dadd( -169.299, 53.8181, -36.4062, 0.12 ) }
    dend_64 { pt3dadd( -170.488, 54.9075, -36.5758, 0.96 ) }
    dend_64 { pt3dadd( -171.562, 55.7371, -36.7297, 0.12 ) }
    dend_64 { pt3dadd( -173.86, 57.224, -37.1658, 0.12 ) }
    dend_64 { pt3dadd( -175.085, 57.9252, -37.4223, 0.84 ) }
    dend_64 { pt3dadd( -176.486, 58.6338, -37.7112, 0.12 ) }
    dend_64 { pt3dadd( -178.31, 59.4848, -38.1548, 0.12 ) }
    dend_64 { pt3dadd( -181.224, 60.8364, -39.0082, 0.12 ) }
    dend_64 { pt3dadd( -183.511, 61.8993, -39.7096, 0.84 ) }
    dend_64 { pt3dadd( -184.341, 62.2824, -40.0095, 0.36 ) }
    dend_64 { pt3dadd( -186.35, 63.2292, -40.7742, 0.12 ) }
    dend_64 { pt3dadd( -188.724, 64.2878, -41.7085, 0.96 ) }
    dend_64 { pt3dadd( -190.537, 65.0497, -42.4153, 0.12 ) }
    dend_64 { pt3dadd( -193.865, 66.3655, -43.6893, 0.12 ) }
    dend_64 { pt3dadd( -196.48, 67.292, -44.6008, 1.08 ) }
    dend_64 { pt3dadd( -198.149, 67.8195, -45.1684, 0.12 ) }
    dend_64 { pt3dadd( -202.326, 68.9299, -46.5119, 0.12 ) }
    dend_64 { pt3dadd( -203.415, 69.1498, -46.7956, 0.96 ) }
    dend_64 { pt3dadd( -204.532, 69.3105, -47.0645, 0.12 ) }
    dend_64 { pt3dadd( -205.314, 69.3742, -47.2177, 0.12 ) }
    dend_64 { pt3dadd( -206.242, 69.4167, -47.3211, 0.72 ) }
    dend_64 { pt3dadd( -207.468, 69.4681, -47.5639, 0.12 ) }
    dend_64 { pt3dadd( -210.027, 69.627, -48.17, 0.12 ) }
    dend_64 { pt3dadd( -211.137, 69.7419, -48.4845, 0.12 ) }
    dend_64 { pt3dadd( -212.646, 69.9616, -48.9394, 0.96 ) }
    dend_64 { pt3dadd( -213.847, 70.1789, -49.3657, 0.12 ) }
    dend_64 { pt3dadd( -218.201, 71.1318, -51.077, 0.12 ) }
    dend_64 { pt3dadd( -219.542, 71.491, -51.6903, 0.84 ) }
    dend_64 { pt3dadd( -220.685, 71.8606, -52.2568, 0.12 ) }
    dend_64 { pt3dadd( -222.673, 72.5505, -53.2378, 0.12 ) }
    dend_64 { pt3dadd( -224.642, 73.305, -54.1307, 1.2 ) }
    dend_64 { pt3dadd( -225.578, 73.6855, -54.5022, 0.24 ) }
    dend_64 { pt3dadd( -229.422, 75.2347, -55.668, 0.12 ) }
    dend_64 { pt3dadd( -230.505, 75.6562, -55.9921, 0.84 ) }
    dend_64 { pt3dadd( -231.419, 76.0168, -56.3116, 0.12 ) }
    dend_64 { pt3dadd( -233.698, 76.9277, -57.1206, 0.12 ) }
    dend_64 { pt3dadd( -234.287, 77.1662, -57.3172, 0.12 ) }
    dend_64 { pt3dadd( -235.734, 77.7538, -57.7874, 0.96 ) }
    dend_64 { pt3dadd( -237.37, 78.4136, -58.2879, 0.12 ) }
    dend_64 { pt3dadd( -243.714, 80.8374, -60.236, 0.12 ) }
    dend_64 { pt3dadd( -245.612, 81.5187, -60.8611, 1.08 ) }
    dend_64 { pt3dadd( -246.342, 81.7471, -61.1057, 0.24 ) }
    dend_64 { pt3dadd( -248.367, 82.3145, -61.7564, 0.12 ) }
    dend_64 { pt3dadd( -249.227, 82.5274, -62.0185, 1.08 ) }
    dend_64 { pt3dadd( -250.846, 82.8477, -62.4466, 0.12 ) }
    dend_64 { pt3dadd( -255.823, 83.4233, -63.4525, 0.12 ) }
    dend_64 { pt3dadd( -257.992, 83.6222, -63.9303, 0.12 ) }
    dend_64 { pt3dadd( -259.325, 83.7127, -64.2412, 0.6 ) }
    dend_64 { pt3dadd( -260.128, 83.7486, -64.4429, 0.12 ) }
    dend_64 { pt3dadd( -261.71, 83.8143, -64.849, 0.12 ) }
    dend_64 { pt3dadd( -262.767, 83.8342, -65.1096, 0.96 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 94/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -54.4878, 22.6203, -12.3419, 0.12 ) }
    dend_63 { pt3dadd( -58.4625, 25.5033, -11.4606, 0.12 ) }
    dend_63 { pt3dadd( -60.3408, 26.7611, -10.9493, 0.6 ) }
    dend_63 { pt3dadd( -62.8897, 28.3974, -10.2106, 0.12 ) }
    dend_63 { pt3dadd( -66.1351, 30.4413, -9.05, 0.12 ) }
    dend_63 { pt3dadd( -67.8659, 31.4989, -8.37858, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_63 { pt3dadd( -69.0347, 32.1979, -7.91117, 0.12 ) }
    dend_63 { pt3dadd( -71.7654, 33.6813, -6.6734, 0.12 ) }
    dend_63 { pt3dadd( -72.9565, 34.2433, -6.15435, 0.84 ) }
    dend_63 { pt3dadd( -75.7385, 35.4008, -5.01784, 0.12 ) }
    dend_63 { pt3dadd( -77.2348, 35.9475, -4.44774, 0.12 ) }
    dend_63 { pt3dadd( -78.3382, 36.3035, -4.05001, 1.44 ) }
    dend_63 { pt3dadd( -80.1331, 36.8238, -3.47676, 0.12 ) }
    dend_63 { pt3dadd( -83.3575, 37.6702, -2.67206, 0.12 ) }
    dend_63 { pt3dadd( -83.8264, 37.7744, -2.58067, 0.84 ) }
    dend_63 { pt3dadd( -85.7141, 38.1487, -2.33248, 0.12 ) }
    dend_63 { pt3dadd( -88.141, 38.6226, -2.01284, 0.12 ) }
    dend_63 { pt3dadd( -88.6737, 38.7317, -1.90484, 1.08 ) }
    dend_63 { pt3dadd( -89.7149, 38.9854, -1.6298, 0.12 ) }
    dend_63 { pt3dadd( -92.5562, 39.8321, -0.755992, 0.12 ) }
    dend_63 { pt3dadd( -92.8283, 39.9251, -0.670433, 1.2 ) }
    dend_63 { pt3dadd( -94.0936, 40.4239, -0.288074, 1.2 ) }
    dend_63 { pt3dadd( -97.1636, 41.8117, 0.733947, 0.12 ) }
    dend_63 { pt3dadd( -98.5867, 42.5177, 1.20617, 0.12 ) }
    dend_63 { pt3dadd( -99.574, 43.0657, 1.53281, 0.6 ) }
    dend_63 { pt3dadd( -99.9777, 43.3036, 1.66036, 0.12 ) }
    dend_63 { pt3dadd( -101.294, 44.094, 1.9965, 0.12 ) }
    dend_63 { pt3dadd( -102.435, 44.8067, 2.18393, 0.6 ) }
    dend_63 { pt3dadd( -103.636, 45.5168, 2.31683, 0.12 ) }
    dend_63 { pt3dadd( -104.571, 46.0022, 2.47076, 0.6 ) }
    dend_63 { pt3dadd( -105.087, 46.2057, 2.5592, 0.12 ) }
    dend_63 { pt3dadd( -106.089, 46.5064, 2.73086, 0.12 ) }
    dend_63 { pt3dadd( -107.45, 46.7802, 2.96214, 0.96 ) }
    dend_63 { pt3dadd( -110.397, 46.8523, 3.36989, 0.48 ) }
    dend_63 { pt3dadd( -113.048, 46.5583, 3.66267, 0.12 ) }
    dend_63 { pt3dadd( -116.192, 45.8712, 3.81255, 0.12 ) }
    dend_63 { pt3dadd( -117.113, 45.5712, 3.80166, 0.72 ) }
    dend_63 { pt3dadd( -118.268, 45.0333, 3.71222, 0.12 ) }
    dend_63 { pt3dadd( -121.961, 42.7852, 3.17893, 0.12 ) }
    dend_63 { pt3dadd( -122.877, 42.1064, 2.97647, 1.08 ) }
    dend_63 { pt3dadd( -124.395, 40.8052, 2.60057, 0.12 ) }
    dend_63 { pt3dadd( -126.032, 39.34, 2.18017, 0.12 ) }
    dend_63 { pt3dadd( -127.964, 37.6485, 1.6979, 0.12 ) }
    dend_63 { pt3dadd( -129.055, 36.7046, 1.4423, 0.96 ) }
    dend_63 { pt3dadd( -129.885, 35.99, 1.26851, 0.12 ) }
    dend_63 { pt3dadd( -131.034, 34.9994, 1.08029, 0.12 ) }
    dend_63 { pt3dadd( -132.111, 34.0752, 0.979023, 0.72 ) }
    dend_63 { pt3dadd( -132.319, 33.9021, 0.942439, 0.12 ) }
    dend_63 { pt3dadd( -133.976, 32.6152, 0.608508, 0.12 ) }
    dend_63 { pt3dadd( -134.544, 32.187, 0.481429, 0.6 ) }
    dend_63 { pt3dadd( -135.194, 31.6834, 0.330225, 0.6 ) }
    dend_63 { pt3dadd( -135.425, 31.5001, 0.275554, 0.12 ) }
    dend_63 { pt3dadd( -137.252, 30.0394, -0.136617, 0.12 ) }
    dend_63 { pt3dadd( -138.943, 28.7224, -0.512741, 0.84 ) }
    dend_63 { pt3dadd( -139.47, 28.3215, -0.627453, 0.12 ) }
    dend_63 { pt3dadd( -140.989, 27.1686, -0.926052, 0.12 ) }
    dend_63 { pt3dadd( -141.526, 26.7774, -1.00744, 0.96 ) }
    dend_63 { pt3dadd( -142.216, 26.2528, -1.05739, 0.96 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 52/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 14.2189, -21.3648, 8.42628, 1.08 ) }
    dend_59 { pt3dadd( 14.8142, -23.3511, 8.67255, 1.08 ) }
    dend_59 { pt3dadd( 15.3637, -25.2242, 8.88291, 0.96 ) }
    dend_59 { pt3dadd( 16.0351, -27.5467, 9.11078, 0.96 ) }
    dend_59 { pt3dadd( 16.4876, -29.3142, 9.25731, 0.96 ) }
    dend_59 { pt3dadd( 16.922, -31.1816, 9.39308, 0.96 ) }
    dend_59 { pt3dadd( 17.1855, -32.3106, 9.5218, 0.96 ) }
    dend_59 { pt3dadd( 17.6263, -34.1289, 9.83942, 1.56 ) }
    dend_59 { pt3dadd( 18.0296, -35.8172, 10.1976, 1.08 ) }
    dend_59 { pt3dadd( 18.7312, -38.7872, 10.8825, 0.96 ) }
    dend_59 { pt3dadd( 19.1248, -40.2945, 11.2711, 0.96 ) }
    dend_59 { pt3dadd( 19.9015, -42.7712, 11.9695, 0.96 ) }
    dend_59 { pt3dadd( 20.8808, -45.5144, 12.8919, 1.32 ) }
    dend_59 { pt3dadd( 21.5107, -47.1794, 13.523, 0.96 ) }
    dend_59 { pt3dadd( 22.1607, -48.7991, 14.2322, 0.72 ) }
    dend_59 { pt3dadd( 22.9886, -50.7055, 15.1539, 0.84 ) }
    dend_59 { pt3dadd( 23.7424, -52.6002, 16.0199, 0.6 ) }
    dend_59 { pt3dadd( 24.5327, -54.8971, 16.9541, 0.6 ) }
    dend_59 { pt3dadd( 24.8021, -55.72, 17.2829, 1.32 ) }
    dend_59 { pt3dadd( 25.2599, -57.1375, 17.811, 0.96 ) }
    dend_59 { pt3dadd( 25.4288, -57.6837, 17.9784, 0.96 ) }
    dend_59 { pt3dadd( 26.4213, -60.8365, 18.7281, 0.84 ) }
    dend_59 { pt3dadd( 26.8003, -61.8826, 18.9517, 0.72 ) }
    dend_59 { pt3dadd( 27.4672, -63.6454, 19.2356, 0.72 ) }
    dend_59 { pt3dadd( 28.4867, -66.206, 19.6033, 1.08 ) }
    dend_59 { pt3dadd( 29.5381, -68.5832, 19.8842, 1.08 ) }
    dend_59 { pt3dadd( 30.371, -70.3249, 20.1246, 0.72 ) }
    dend_59 { pt3dadd( 31.3896, -72.389, 20.4393, 0.72 ) }
    dend_59 { pt3dadd( 33.3577, -76.5499, 21.0804, 0.84 ) }
    dend_59 { pt3dadd( 34.3976, -78.8828, 21.4489, 0.84 ) }
    dend_59 { pt3dadd( 35.9287, -82.3274, 21.9776, 0.84 ) }
    dend_59 { pt3dadd( 36.7352, -84.1031, 22.2214, 0.6 ) }
    dend_59 { pt3dadd( 37.3147, -85.3658, 22.3969, 0.6 ) }
    dend_59 { pt3dadd( 38.096, -86.9865, 22.62, 0.6 ) }
    dend_59 { pt3dadd( 39.1906, -89.0521, 22.9491, 0.96 ) }
    dend_59 { pt3dadd( 40.4968, -91.7014, 23.3378, 0.96 ) }
    dend_59 { pt3dadd( 41.4695, -93.9761, 23.5975, 0.96 ) }
    dend_59 { pt3dadd( 42.2549, -95.9307, 23.767, 0.72 ) }
    dend_59 { pt3dadd( 42.8971, -97.6563, 23.9019, 0.96 ) }
    dend_59 { pt3dadd( 43.3496, -99.0531, 24.0004, 0.96 ) }
    dend_59 { pt3dadd( 44.8176, -104.436, 24.33, 0.72 ) }
    dend_59 { pt3dadd( 46.0093, -109.88, 24.5958, 0.72 ) }
    dend_59 { pt3dadd( 46.2512, -111.281, 24.6407, 0.72 ) }
    dend_59 { pt3dadd( 46.6333, -113.933, 24.6692, 0.36 ) }
    dend_59 { pt3dadd( 46.8302, -115.548, 24.7168, 0.12 ) }
    dend_59 { pt3dadd( 47.0014, -116.901, 24.7835, 0.84 ) }
    dend_59 { pt3dadd( 47.2235, -118.391, 24.9035, 0.48 ) }
    dend_59 { pt3dadd( 47.7836, -120.894, 25.1943, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_59 { pt3dadd( 48.1977, -122.22, 25.3751, 0.72 ) }
    dend_59 { pt3dadd( 48.8404, -123.778, 25.6198, 0.12 ) }
    dend_59 { pt3dadd( 49.3715, -124.895, 25.8059, 0.12 ) }
    dend_59 { pt3dadd( 50.0924, -126.344, 26.0453, 0.48 ) }
    dend_59 { pt3dadd( 50.6807, -127.475, 26.2191, 0.24 ) }
    dend_59 { pt3dadd( 51.2533, -128.514, 26.367, 0.12 ) }
    dend_59 { pt3dadd( 51.5031, -129.024, 26.4155, 0.96 ) }
    dend_59 { pt3dadd( 51.7835, -129.703, 26.4199, 0.12 ) }
    dend_59 { pt3dadd( 52.1795, -130.983, 26.4303, 0.12 ) }
    dend_59 { pt3dadd( 52.3704, -131.802, 26.4379, 0.72 ) }
    dend_59 { pt3dadd( 53.3888, -139.208, 26.1323, 0.72 ) }
    dend_59 { pt3dadd( 53.0269, -146.584, 24.9293, 0.72 ) }
    dend_59 { pt3dadd( 53.4818, -153.639, 22.4822, 0.72 ) }
    dend_59 { pt3dadd( 53.6688, -160.808, 20.3499, 0.72 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 14/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 14.2189, -21.3648, 8.42628, 0.84 ) }
    dend_58 { pt3dadd( 15.7318, -25.7166, 11.8669, 0.84 ) }
    dend_58 { pt3dadd( 16.293, -27.8389, 13.4723, 0.84 ) }
    dend_58 { pt3dadd( 16.7714, -30.9739, 15.6746, 0.84 ) }
    dend_58 { pt3dadd( 16.9681, -33.0393, 17.064, 1.08 ) }
    dend_58 { pt3dadd( 17.0448, -35.1138, 18.4622, 0.72 ) }
    dend_58 { pt3dadd( 17.0812, -36.5048, 19.327, 0.72 ) }
    dend_58 { pt3dadd( 17.0099, -40.0957, 21.2101, 0.72 ) }
    dend_58 { pt3dadd( 17.1327, -42.9366, 22.5166, 0.96 ) }
    dend_58 { pt3dadd( 17.3611, -45.0333, 23.4183, 0.96 ) }
    dend_58 { pt3dadd( 18.1646, -49.4634, 25.2517, 0.84 ) }
    dend_58 { pt3dadd( 19.2403, -53.8124, 27.0212, 0.72 ) }
    dend_58 { pt3dadd( 19.7536, -55.4167, 27.6229, 0.72 ) }
    dend_58 { pt3dadd( 21.8205, -60.3322, 29.181, 0.72 ) }
    dend_58 { pt3dadd( 23.3179, -63.2402, 29.9967, 0.72 ) }
    dend_58 { pt3dadd( 23.9915, -64.3605, 30.2557, 1.2 ) }
    dend_58 { pt3dadd( 24.8433, -65.4607, 30.4993, 0.48 ) }
    dend_58 { pt3dadd( 26.7668, -67.5415, 31.0595, 0.48 ) }
    dend_58 { pt3dadd( 28.7292, -69.5984, 31.6363, 0.48 ) }
    dend_58 { pt3dadd( 30.34, -71.398, 32.103, 0.48 ) }
    dend_58 { pt3dadd( 31.57, -72.7952, 32.412, 0.48 ) }
    dend_58 { pt3dadd( 34.779, -76.2896, 33.254, 0.48 ) }
    dend_58 { pt3dadd( 35.6624, -77.1852, 33.4961, 0.48 ) }
    dend_58 { pt3dadd( 37.5383, -78.9359, 34.0445, 0.12 ) }
    dend_58 { pt3dadd( 39.5691, -80.9809, 34.7651, 0.12 ) }
    dend_58 { pt3dadd( 40.0003, -81.5359, 34.9528, 0.12 ) }
    dend_58 { pt3dadd( 44.5216, -90.5906, 37.4214, 0.12 ) }
    dend_58 { pt3dadd( 49.3486, -99.6757, 39.0593, 0.12 ) }
    dend_58 { pt3dadd( 54.2154, -108.516, 41.6456, 0.12 ) }
    dend_58 { pt3dadd( 58.5117, -117.919, 42.9251, 0.12 ) }
    dend_58 { pt3dadd( 63.3506, -127.144, 43.0289, 0.12 ) }
    dend_58 { pt3dadd( 66.9957, -136.901, 43.2295, 0.12 ) }
    dend_58 { pt3dadd( 69.5227, -146.902, 41.7776, 0.12 ) }
    dend_58 { pt3dadd( 74.2863, -156.013, 40.0981, 0.12 ) }
    dend_58 { pt3dadd( 77.7063, -165.67, 38.2068, 0.12 ) }
    dend_58 { pt3dadd( 82.1889, -174.724, 35.6658, 0.12 ) }
    dend_58 { pt3dadd( 85.9257, -184.277, 33.8496, 0.12 ) }
    dend_58 { pt3dadd( 90.6286, -193.572, 33.9056, 0.12 ) }
    dend_58 { pt3dadd( 95.8946, -202.552, 33.5123, 0.12 ) }
    dend_58 { pt3dadd( 101.739, -211.045, 35.0054, 0.12 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 54/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -12.1789, 39.4904, 37.3909, 0.12 ) }
    dend_55 { pt3dadd( -14.1071, 46.6898, 43.7996, 0.12 ) }
    dend_55 { pt3dadd( -14.9172, 52.6303, 51.589, 0.12 ) }
    dend_55 { pt3dadd( -15.6118, 58.0838, 59.7376, 0.12 ) }
    dend_55 { pt3dadd( -14.7245, 62.3552, 68.546, 0.12 ) }
    dend_55 { pt3dadd( -13.678, 64.9161, 77.9783, 0.12 ) }
    dend_55 { pt3dadd( -11.3521, 69.4072, 86.4069, 0.12 ) }
    dend_55 { pt3dadd( -9.52925, 74.026, 94.8901, 0.12 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 62/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -12.1789, 39.4904, 37.3909, 0.24 ) }
    dend_54 { pt3dadd( -14.8965, 47.8226, 44.5074, 0.12 ) }
    dend_54 { pt3dadd( -17.107, 56.9167, 50.8212, 0.12 ) }
    dend_54 { pt3dadd( -19.2296, 66.8612, 55.7257, 0.12 ) }
    dend_54 { pt3dadd( -22.4836, 77.0161, 59.4328, 0.12 ) }
    dend_54 { pt3dadd( -24.0697, 87.7631, 62.5054, 0.12 ) }
    dend_54 { pt3dadd( -27.2263, 97.5247, 67.2173, 0.12 ) }
    dend_54 { pt3dadd( -30.7764, 105.801, 74.0259, 0.12 ) }
    dend_54 { pt3dadd( -36.6498, 112.777, 80.6811, 0.12 ) }
    dend_54 { pt3dadd( -44.1146, 118.557, 86.8715, 0.12 ) }
    dend_54 { pt3dadd( -50.1112, 125.4, 93.5548, 0.12 ) }
    dend_54 { pt3dadd( -55.5597, 133.282, 99.5245, 0.12 ) }
    dend_54 { pt3dadd( -60.5026, 141.826, 105.004, 0.12 ) }
    dend_54 { pt3dadd( -64.9109, 151.68, 108.307, 0.12 ) }
    dend_54 { pt3dadd( -71.5951, 160.632, 109.933, 0.12 ) }
    dend_54 { pt3dadd( -78.3696, 169.658, 110.235, 0.12 ) }
    dend_54 { pt3dadd( -85.88, 178.048, 109.425, 0.12 ) }
    dend_54 { pt3dadd( -93.1795, 186.641, 108.852, 0.12 ) }
    dend_54 { pt3dadd( -100.841, 194.922, 109.285, 0.12 ) }
    dend_54 { pt3dadd( -107.713, 203.879, 109.332, 0.12 ) }
    dend_54 { pt3dadd( -116.397, 210.859, 111.153, 0.12 ) }
    dend_54 { pt3dadd( -124.103, 218.867, 113.138, 0.12 ) }
    dend_54 { pt3dadd( -130.345, 228.034, 115.252, 0.12 ) }
    dend_54 { pt3dadd( -136.564, 237.456, 115.294, 0.12 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 86/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -117.287, -101.935, 117.833, 0.12 ) }
    dend_50 { pt3dadd( -122.736, -107.169, 122.677, 0.12 ) }
    dend_50 { pt3dadd( -128.234, -110.988, 128.654, 0.12 ) }
    dend_50 { pt3dadd( -134.54, -115.366, 133.302, 0.12 ) }
    dend_50 { pt3dadd( -141.331, -118.493, 138.267, 0.12 ) }
    dend_50 { pt3dadd( -147.492, -120.42, 144.503, 0.12 ) }
    dend_50 { pt3dadd( -152.924, -123.161, 151.1, 0.12 ) }
    dend_50 { pt3dadd( -158.337, -124.595, 158.114, 0.12 ) }
    dend_50 { pt3dadd( -164.666, -124.455, 164.475, 0.12 ) }
    dend_50 { pt3dadd( -169.943, -123.191, 171.623, 0.12 ) }
    dend_50 { pt3dadd( -175.202, -120.081, 178.198, 0.12 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 97/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -117.287, -101.935, 117.833, 0.24 ) }
    dend_49 { pt3dadd( -123.425, -107.849, 123.264, 0.12 ) }
    dend_49 { pt3dadd( -128.164, -114.482, 129.238, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( -131.876, -121.833, 135.096, 0.12 ) }
    dend_49 { pt3dadd( -133.67, -129.511, 141.419, 0.12 ) }
    dend_49 { pt3dadd( -134.602, -137.665, 147.316, 0.12 ) }
    dend_49 { pt3dadd( -134.269, -146.015, 153.0, 0.12 ) }
    // Section: dend_44, id: dend_44, parent: dend_32 (entry count 4/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -6.85569, 4.03018, 0.675305, 0.12 ) }
    dend_44 { pt3dadd( -7.22093, -4.26288, -6.6879, 0.12 ) }
    dend_44 { pt3dadd( -6.60459, -10.6381, -15.7489, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 7/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.85569, 4.03018, 0.675305, 0.12 ) }
    dend_33 { pt3dadd( -8.44541, -8.62345, -3.14805, 0.12 ) }
    dend_33 { pt3dadd( -7.73945, -21.7193, -5.44153, 0.12 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 15.1775, 56.8253, 14.6683, 0.96 ) }
    dend_19 { pt3dadd( 15.2289, 62.2268, 15.8216, 0.96 ) }
    dend_19 { pt3dadd( 15.358, 65.7912, 16.6777, 0.24 ) }
    dend_19 { pt3dadd( 15.4768, 68.0123, 17.2368, 0.12 ) }
    dend_19 { pt3dadd( 15.5967, 70.1943, 17.8169, 1.32 ) }
    dend_19 { pt3dadd( 15.7496, 73.4054, 18.7107, 0.12 ) }
    dend_19 { pt3dadd( 15.8289, 75.2667, 19.2815, 0.12 ) }
    dend_19 { pt3dadd( 15.9829, 77.7371, 20.1893, 0.6 ) }
    dend_19 { pt3dadd( 16.0471, 79.5453, 20.8857, 0.12 ) }
    dend_19 { pt3dadd( 16.0385, 82.3549, 22.0083, 0.12 ) }
    dend_19 { pt3dadd( 15.9495, 84.6745, 22.9504, 1.2 ) }
    dend_19 { pt3dadd( 15.7967, 87.1215, 23.9467, 0.12 ) }
    dend_19 { pt3dadd( 15.4449, 92.4992, 26.0733, 0.12 ) }
    dend_19 { pt3dadd( 15.2361, 95.4514, 27.2351, 1.2 ) }
    dend_19 { pt3dadd( 14.9944, 98.5036, 28.433, 0.12 ) }
    dend_19 { pt3dadd( 14.7885, 101.294, 29.4915, 0.12 ) }
    dend_19 { pt3dadd( 14.727, 102.464, 29.9016, 0.84 ) }
    dend_19 { pt3dadd( 14.6981, 103.65, 30.2667, 0.24 ) }
    dend_19 { pt3dadd( 14.7178, 106.162, 30.993, 0.12 ) }
    dend_19 { pt3dadd( 14.7342, 107.481, 31.3698, 1.08 ) }
    dend_19 { pt3dadd( 14.749, 109.697, 32.0064, 0.12 ) }
    dend_19 { pt3dadd( 14.7085, 111.949, 32.6913, 0.12 ) }
    dend_19 { pt3dadd( 14.6582, 113.374, 33.1366, 1.2 ) }
    dend_19 { pt3dadd( 14.5767, 115.172, 33.7112, 0.12 ) }
    dend_19 { pt3dadd( 14.2621, 120.851, 35.5546, 0.12 ) }
    dend_19 { pt3dadd( 14.2153, 121.598, 35.7999, 1.08 ) }
    dend_19 { pt3dadd( 13.9748, 123.735, 36.5565, 0.12 ) }
    dend_19 { pt3dadd( 13.5925, 125.993, 37.4339, 0.12 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.1775, 56.8253, 14.6683, 0.12 ) }
    dend_18 { pt3dadd( 15.8433, 57.5602, 16.0153, 0.12 ) }
    dend_18 { pt3dadd( 16.0765, 57.8542, 16.5316, 0.96 ) }
    dend_18 { pt3dadd( 17.5894, 60.0211, 20.0929, 0.12 ) }
    dend_18 { pt3dadd( 18.4077, 61.3229, 22.1184, 0.12 ) }
    dend_18 { pt3dadd( 18.7043, 61.8779, 22.9088, 1.32 ) }
    dend_18 { pt3dadd( 18.9759, 62.5021, 23.7212, 0.12 ) }
    dend_18 { pt3dadd( 19.3571, 63.8391, 25.2783, 0.12 ) }
    dend_18 { pt3dadd( 19.4208, 64.417, 25.8455, 1.44 ) }
    dend_18 { pt3dadd( 19.3793, 64.8714, 26.1663, 0.24 ) }
    dend_18 { pt3dadd( 19.1761, 66.129, 26.947, 0.24 ) }
    dend_18 { pt3dadd( 19.0218, 67.213, 27.565, 0.24 ) }
    dend_18 { pt3dadd( 18.9359, 67.8335, 27.8822, 1.56 ) }
    dend_18 { pt3dadd( 18.7187, 69.744, 28.7118, 0.12 ) }
    dend_18 { pt3dadd( 18.6336, 70.6654, 29.094, 0.96 ) }
    dend_18 { pt3dadd( 18.5996, 71.4013, 29.4518, 0.12 ) }
    dend_18 { pt3dadd( 18.5666, 73.2926, 30.5034, 0.12 ) }
    dend_18 { pt3dadd( 18.5712, 73.9112, 30.8709, 0.96 ) }
    dend_18 { pt3dadd( 18.5743, 74.3794, 31.1582, 0.12 ) }
    dend_18 { pt3dadd( 18.5643, 75.8028, 32.0573, 0.12 ) }
    dend_18 { pt3dadd( 18.5069, 77.9569, 33.5046, 0.96 ) }
    dend_18 { pt3dadd( 18.4238, 79.2524, 34.4104, 0.12 ) }
    dend_18 { pt3dadd( 18.3215, 80.3042, 35.0926, 0.12 ) }
    dend_18 { pt3dadd( 18.2586, 80.8335, 35.3818, 0.84 ) }
    dend_18 { pt3dadd( 18.2296, 80.9917, 35.4667, 0.12 ) }
    dend_18 { pt3dadd( 17.989, 81.9334, 35.9274, 0.12 ) }
    dend_18 { pt3dadd( 17.7173, 82.7305, 36.2358, 0.84 ) }
    dend_18 { pt3dadd( 17.1082, 84.1718, 36.8892, 0.12 ) }
    dend_18 { pt3dadd( 16.6452, 84.9155, 37.3224, 1.08 ) }
    dend_18 { pt3dadd( 15.2879, 86.1095, 38.3969, 0.12 ) }
    dend_18 { pt3dadd( 14.6676, 86.1688, 38.7668, 0.12 ) }
    dend_18 { pt3dadd( 14.42, 86.0867, 38.8817, 0.84 ) }
    dend_18 { pt3dadd( 14.2538, 86.0018, 38.9534, 0.12 ) }
    dend_18 { pt3dadd( 13.436, 85.4677, 39.2841, 0.12 ) }
    dend_18 { pt3dadd( 12.3979, 84.6698, 39.5848, 0.12 ) }
    dend_18 { pt3dadd( 12.0399, 84.3869, 39.6055, 0.6 ) }
    dend_18 { pt3dadd( 11.6747, 84.1085, 39.6315, 0.12 ) }
    dend_18 { pt3dadd( 10.7007, 89.853, 44.4646, 0.12 ) }
    dend_18 { pt3dadd( 10.1637, 94.756, 50.2073, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 77/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 87.3239, -10.0034, -26.6838, 0.24 ) }
    dend_16 { pt3dadd( 92.4439, -8.27087, -27.5111, 0.24 ) }
    dend_16 { pt3dadd( 93.5281, -7.89503, -27.6648, 0.96 ) }
    dend_16 { pt3dadd( 94.6691, -7.47255, -27.8312, 0.96 ) }
    dend_16 { pt3dadd( 97.4721, -6.41129, -28.2211, 0.12 ) }
    dend_16 { pt3dadd( 98.5969, -5.99316, -28.3503, 0.48 ) }
    dend_16 { pt3dadd( 103.131, -4.33268, -28.8142, 0.12 ) }
    dend_16 { pt3dadd( 104.62, -3.76116, -28.9097, 0.12 ) }
    dend_16 { pt3dadd( 106.042, -3.24282, -29.0545, 0.48 ) }
    dend_16 { pt3dadd( 106.787, -3.0027, -29.1497, 0.12 ) }
    dend_16 { pt3dadd( 109.824, -2.17752, -29.5755, 0.12 ) }
    dend_16 { pt3dadd( 110.856, -1.95144, -29.802, 0.48 ) }
    dend_16 { pt3dadd( 111.414, -1.88262, -30.0062, 0.12 ) }
    dend_16 { pt3dadd( 114.923, -1.55006, -31.593, 0.12 ) }
    dend_16 { pt3dadd( 115.712, -1.46586, -32.0695, 0.72 ) }
    dend_16 { pt3dadd( 116.416, -1.36639, -32.5871, 0.12 ) }
    dend_16 { pt3dadd( 119.029, -0.904377, -34.6947, 0.12 ) }
    dend_16 { pt3dadd( 121.762, -0.333907, -36.8372, 0.12 ) }
    dend_16 { pt3dadd( 122.232, -0.212644, -37.1887, 0.84 ) }
    dend_16 { pt3dadd( 125.763, 0.844271, -39.649, 0.12 ) }
    dend_16 { pt3dadd( 128.109, 1.60684, -41.1844, 0.12 ) }
    dend_16 { pt3dadd( 129.732, 2.14758, -42.1154, 0.12 ) }
    dend_16 { pt3dadd( 131.335, 2.63094, -42.8113, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_16 { pt3dadd( 133.327, 3.10619, -43.5561, 0.72 ) }
    dend_16 { pt3dadd( 134.314, 3.25052, -43.9075, 0.12 ) }
    dend_16 { pt3dadd( 134.775, 3.26351, -44.0484, 0.12 ) }
    dend_16 { pt3dadd( 136.305, 3.20669, -44.5838, 0.12 ) }
    dend_16 { pt3dadd( 139.988, 2.96178, -46.1712, 0.12 ) }
    dend_16 { pt3dadd( 142.745, 2.73693, -47.4385, 0.12 ) }
    dend_16 { pt3dadd( 143.49, 2.67633, -47.803, 0.48 ) }
    dend_16 { pt3dadd( 145.065, 2.60072, -48.6103, 0.12 ) }
    dend_16 { pt3dadd( 147.394, 2.56129, -49.8629, 0.48 ) }
    dend_16 { pt3dadd( 150.156, 2.59647, -51.367, 0.12 ) }
    dend_16 { pt3dadd( 151.36, 2.64018, -52.1355, 0.24 ) }
    dend_16 { pt3dadd( 153.599, 2.72858, -53.7087, 0.24 ) }
    dend_16 { pt3dadd( 154.269, 2.72299, -54.2751, 0.6 ) }
    dend_16 { pt3dadd( 155.951, 2.52284, -56.0063, 0.24 ) }
    dend_16 { pt3dadd( 156.784, 2.20473, -57.0907, 0.12 ) }
    dend_16 { pt3dadd( 159.411, 0.463221, -61.2928, 0.12 ) }
    dend_16 { pt3dadd( 159.95, -0.112855, -62.3773, 0.48 ) }
    dend_16 { pt3dadd( 160.66, -1.26026, -64.105, 0.12 ) }
    dend_16 { pt3dadd( 161.128, -2.27304, -65.4105, 0.36 ) }
    dend_16 { pt3dadd( 161.677, -3.9501, -67.1973, 0.12 ) }
    dend_16 { pt3dadd( 162.185, -5.67493, -68.7357, 0.12 ) }
    dend_16 { pt3dadd( 162.806, -7.77267, -70.1903, 0.12 ) }
    dend_16 { pt3dadd( 163.088, -8.54051, -70.6278, 0.72 ) }
    dend_16 { pt3dadd( 163.448, -9.41234, -71.0111, 0.12 ) }
    dend_16 { pt3dadd( 164.414, -11.7326, -71.7932, 0.12 ) }
    dend_16 { pt3dadd( 165.129, -13.4364, -72.1996, 0.84 ) }
    dend_16 { pt3dadd( 165.633, -14.6708, -72.4161, 0.12 ) }
    dend_16 { pt3dadd( 167.032, -17.7654, -72.875, 0.12 ) }
    dend_16 { pt3dadd( 168.156, -20.344, -73.2517, 0.12 ) }
    dend_16 { pt3dadd( 168.335, -20.8275, -73.2812, 0.48 ) }
    dend_16 { pt3dadd( 168.575, -21.6082, -73.2864, 0.12 ) }
    dend_16 { pt3dadd( 168.984, -23.1986, -73.268, 0.12 ) }
    dend_16 { pt3dadd( 169.116, -23.7676, -73.2525, 0.36 ) }
    dend_16 { pt3dadd( 169.388, -25.0029, -73.2282, 0.12 ) }
    dend_16 { pt3dadd( 170.628, -30.0959, -72.8869, 0.12 ) }
    dend_16 { pt3dadd( 170.97, -31.2352, -72.75, 0.84 ) }
    dend_16 { pt3dadd( 171.232, -31.9577, -72.6393, 0.12 ) }
    dend_16 { pt3dadd( 172.211, -34.3302, -72.2545, 0.12 ) }
    dend_16 { pt3dadd( 172.724, -35.3552, -72.1405, 0.84 ) }
    dend_16 { pt3dadd( 173.185, -36.0893, -72.1036, 0.12 ) }
    dend_16 { pt3dadd( 175.582, -39.2867, -72.1821, 0.12 ) }
    dend_16 { pt3dadd( 176.316, -40.2228, -72.2013, 0.72 ) }
    dend_16 { pt3dadd( 177.283, -41.4208, -72.2523, 0.12 ) }
    dend_16 { pt3dadd( 179.086, -43.4613, -72.4679, 1.32 ) }
    dend_16 { pt3dadd( 179.67, -44.1239, -72.5721, 0.48 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 87.3239, -10.0034, -26.6838, 0.12 ) }
    dend_15 { pt3dadd( 89.8201, -8.25451, -25.3656, 0.12 ) }
    dend_15 { pt3dadd( 95.4011, -4.46717, -22.4643, 0.12 ) }
    dend_15 { pt3dadd( 99.7137, -1.70935, -20.3271, 0.12 ) }
    dend_15 { pt3dadd( 103.905, 0.834831, -18.3425, 0.12 ) }
    dend_15 { pt3dadd( 105.357, 1.66535, -17.6533, 0.48 ) }
    dend_15 { pt3dadd( 106.266, 2.16488, -17.2706, 0.12 ) }
    dend_15 { pt3dadd( 106.938, 2.47766, -17.0289, 0.12 ) }
    dend_15 { pt3dadd( 109.554, 3.32638, -16.4544, 0.12 ) }
    dend_15 { pt3dadd( 110.878, 3.66969, -16.2981, 0.84 ) }
    dend_15 { pt3dadd( 113.157, 4.12736, -16.4115, 0.12 ) }
    dend_15 { pt3dadd( 117.365, 4.96312, -16.8025, 0.12 ) }
    dend_15 { pt3dadd( 118.313, 5.14878, -16.9379, 0.48 ) }
    dend_15 { pt3dadd( 119.543, 5.37707, -17.2216, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 59/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.45535, -38.934, 9.05326, 1.44 ) }
    dend_5 { pt3dadd( 1.49215, -41.9022, 7.26492, 1.44 ) }
    dend_5 { pt3dadd( 1.42255, -43.7057, 6.28372, 1.44 ) }
    dend_5 { pt3dadd( 1.25021, -46.527, 4.88559, 1.44 ) }
    dend_5 { pt3dadd( 1.18861, -47.831, 4.29781, 1.44 ) }
    dend_5 { pt3dadd( 1.13339, -50.2102, 3.13399, 1.44 ) }
    dend_5 { pt3dadd( 1.08044, -52.6042, 1.90392, 1.44 ) }
    dend_5 { pt3dadd( 0.956985, -54.4331, 0.943439, 1.2 ) }
    dend_5 { pt3dadd( 0.938137, -55.565, 0.388917, 1.2 ) }
    dend_5 { pt3dadd( 1.00725, -56.939, -0.219282, 1.2 ) }
    dend_5 { pt3dadd( 1.28666, -59.9821, -1.44113, 1.2 ) }
    dend_5 { pt3dadd( 1.75267, -63.9909, -3.00422, 1.2 ) }
    dend_5 { pt3dadd( 1.99914, -65.7575, -3.69786, 1.2 ) }
    dend_5 { pt3dadd( 2.60925, -69.8764, -5.3633, 1.2 ) }
    dend_5 { pt3dadd( 3.03783, -72.7665, -6.50449, 1.2 ) }
    dend_5 { pt3dadd( 3.33375, -74.9366, -7.27502, 1.8 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 75/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.45535, -38.934, 9.05326, 0.96 ) }
    dend_2 { pt3dadd( 0.717474, -43.3682, 10.5996, 0.96 ) }
    dend_2 { pt3dadd( 0.112936, -46.7913, 11.9152, 1.08 ) }
    dend_2 { pt3dadd( -0.677073, -51.091, 13.7346, 1.32 ) }
    dend_2 { pt3dadd( -0.926899, -52.5299, 14.3487, 1.32 ) }
    dend_2 { pt3dadd( -1.4651, -55.9472, 15.7529, 1.32 ) }
    dend_2 { pt3dadd( -2.05461, -60.3293, 17.4925, 1.32 ) }
    dend_2 { pt3dadd( -2.25739, -62.6286, 18.3499, 1.32 ) }
    dend_2 { pt3dadd( -2.42995, -65.5536, 19.5643, 1.32 ) }
    dend_2 { pt3dadd( -2.52203, -67.7469, 20.4592, 1.32 ) }
    dend_2 { pt3dadd( -2.5577, -70.3358, 21.4507, 1.32 ) }
    dend_2 { pt3dadd( -2.48599, -72.0987, 22.0058, 1.32 ) }
    dend_2 { pt3dadd( -2.19462, -75.5156, 22.8161, 1.2 ) }
    dend_2 { pt3dadd( -1.94572, -78.07, 23.4302, 1.2 ) }
    dend_2 { pt3dadd( -1.58543, -81.1118, 24.0675, 1.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 90/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -266.535, 185.887, -226.327, 0.12 ) }
    dend_70 { pt3dadd( -266.473, 186.971, -227.384, 0.12 ) }
    dend_70 { pt3dadd( -266.398, 188.272, -228.655, 0.12 ) }
    dend_70 { pt3dadd( -266.252, 190.825, -231.146, 0.12 ) }
    dend_70 { pt3dadd( -266.18, 192.09, -232.381, 0.36 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 95/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -266.535, 185.887, -226.327, 0.24 ) }
    dend_69 { pt3dadd( -268.493, 184.448, -226.022, 0.24 ) }
    dend_69 { pt3dadd( -269.312, 183.846, -225.894, 0.12 ) }
    dend_69 { pt3dadd( -269.777, 183.504, -225.822, 0.6 ) }
    dend_69 { pt3dadd( -270.562, 182.928, -225.7, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_69 { pt3dadd( -271.435, 182.286, -225.564, 0.12 ) }
    dend_69 { pt3dadd( -272.957, 181.167, -225.327, 0.36 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 2/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -262.767, 83.8342, -65.1096, 0.12 ) }
    dend_66 { pt3dadd( -265.807, 83.3306, -68.5662, 0.12 ) }
    dend_66 { pt3dadd( -268.304, 82.917, -71.4051, 0.12 ) }
    dend_66 { pt3dadd( -271.452, 82.3956, -74.9842, 0.12 ) }
    dend_66 { pt3dadd( -274.539, 81.8844, -78.4929, 0.12 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 7/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -262.767, 83.8342, -65.1096, 0.12 ) }
    dend_65 { pt3dadd( -264.499, 84.6693, -64.8433, 0.12 ) }
    dend_65 { pt3dadd( -268.673, 86.8626, -64.2313, 0.12 ) }
    dend_65 { pt3dadd( -269.694, 87.4459, -64.0862, 0.6 ) }
    dend_65 { pt3dadd( -271.131, 88.3276, -63.8879, 0.12 ) }
    dend_65 { pt3dadd( -272.923, 89.4735, -63.6505, 0.12 ) }
    dend_65 { pt3dadd( -274.417, 90.4611, -63.4605, 0.6 ) }
    dend_65 { pt3dadd( -275.281, 91.0672, -63.2942, 0.12 ) }
    dend_65 { pt3dadd( -276.397, 91.8917, -63.0219, 0.12 ) }
    dend_65 { pt3dadd( -277.62, 92.6972, -62.6836, 0.6 ) }
    dend_65 { pt3dadd( -278.756, 93.3856, -62.3433, 0.12 ) }
    dend_65 { pt3dadd( -280.051, 94.0746, -61.9566, 0.12 ) }
    dend_65 { pt3dadd( -283.2, 95.6186, -60.7568, 0.72 ) }
    dend_65 { pt3dadd( -283.964, 95.9763, -60.4332, 0.12 ) }
    dend_65 { pt3dadd( -286.906, 97.3105, -58.9792, 0.12 ) }
    dend_65 { pt3dadd( -287.556, 97.6109, -58.6714, 0.6 ) }
    dend_65 { pt3dadd( -288.704, 98.1803, -58.1446, 0.6 ) }
    dend_65 { pt3dadd( -293.102, 100.691, -56.6633, 0.12 ) }
    dend_65 { pt3dadd( -293.839, 101.171, -56.5169, 0.48 ) }
    dend_65 { pt3dadd( -296.241, 102.8, -56.2265, 0.12 ) }
    dend_65 { pt3dadd( -298.988, 104.553, -56.2958, 0.84 ) }
    dend_65 { pt3dadd( -299.819, 104.976, -56.4287, 0.12 ) }
    dend_65 { pt3dadd( -304.306, 106.719, -57.7785, 0.12 ) }
    dend_65 { pt3dadd( -305.284, 106.95, -58.3214, 0.96 ) }
    dend_65 { pt3dadd( -306.301, 107.023, -58.9635, 0.24 ) }
    dend_65 { pt3dadd( -309.291, 106.782, -61.0033, 0.12 ) }
    dend_65 { pt3dadd( -311.641, 106.328, -62.5498, 0.12 ) }
    dend_65 { pt3dadd( -312.473, 106.083, -63.108, 0.84 ) }
    dend_65 { pt3dadd( -315.926, 104.499, -65.4639, 0.12 ) }
    dend_65 { pt3dadd( -318.391, 103.267, -67.2938, 0.12 ) }
    dend_65 { pt3dadd( -319.144, 102.877, -67.9091, 0.6 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 38/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -175.202, -120.081, 178.198, 0.12 ) }
    dend_52 { pt3dadd( -184.396, -120.883, 183.261, 0.12 ) }
    dend_52 { pt3dadd( -193.665, -123.281, 187.636, 0.12 ) }
    dend_52 { pt3dadd( -201.571, -127.272, 193.326, 0.12 ) }
    dend_52 { pt3dadd( -210.542, -131.563, 196.777, 0.12 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -175.202, -120.081, 178.198, 0.24 ) }
    dend_51 { pt3dadd( -184.24, -123.193, 189.252, 0.12 ) }
    dend_51 { pt3dadd( -193.054, -128.428, 199.668, 0.12 ) }
    dend_51 { pt3dadd( -201.922, -133.789, 209.972, 0.12 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.60459, -10.6381, -15.7489, 0.12 ) }
    dend_46 { pt3dadd( -6.09849, -16.1559, -26.1751, 0.12 ) }
    dend_46 { pt3dadd( -4.78643, -21.3759, -36.6841, 0.12 ) }
    dend_46 { pt3dadd( -4.68267, -25.5433, -47.7308, 0.12 ) }
    dend_46 { pt3dadd( -4.69051, -31.3877, -57.9899, 0.12 ) }
    dend_46 { pt3dadd( -3.36759, -35.774, -68.8719, 0.12 ) }
    dend_46 { pt3dadd( -1.20433, -42.0276, -78.6505, 0.12 ) }
    dend_46 { pt3dadd( -0.485819, -49.6639, -87.627, 0.12 ) }
    dend_46 { pt3dadd( -0.087311, -57.7043, -96.2642, 0.12 ) }
    dend_46 { pt3dadd( -0.857481, -64.5802, -105.832, 0.12 ) }
    dend_46 { pt3dadd( -3.32911, -70.5466, -115.716, 0.12 ) }
    dend_46 { pt3dadd( -4.50252, -77.0828, -125.479, 0.12 ) }
    dend_46 { pt3dadd( -6.86043, -84.8257, -134.075, 0.12 ) }
    dend_46 { pt3dadd( -7.04588, -92.6267, -142.936, 0.12 ) }
    dend_46 { pt3dadd( -6.69912, -100.037, -152.122, 0.12 ) }
    dend_46 { pt3dadd( -4.34114, -108.154, -160.365, 0.12 ) }
    dend_46 { pt3dadd( -0.965669, -115.698, -168.798, 0.12 ) }
    dend_46 { pt3dadd( 3.96317, -123.516, -176.146, 0.12 ) }
    dend_46 { pt3dadd( 10.9701, -130.283, -182.818, 0.12 ) }
    dend_46 { pt3dadd( 18.2232, -136.728, -189.546, 0.12 ) }
    dend_46 { pt3dadd( 25.6224, -144.247, -194.849, 0.12 ) }
    dend_46 { pt3dadd( 30.9479, -152.518, -201.378, 0.12 ) }
    dend_46 { pt3dadd( 37.3282, -158.862, -209.023, 0.12 ) }
    dend_46 { pt3dadd( 43.2819, -164.384, -217.595, 0.12 ) }
    dend_46 { pt3dadd( 47.3017, -170.185, -227.061, 0.12 ) }
    dend_46 { pt3dadd( 51.2144, -177.227, -235.692, 0.12 ) }
    dend_46 { pt3dadd( 56.053, -184.795, -243.356, 0.12 ) }
    dend_46 { pt3dadd( 60.3002, -193.037, -250.666, 0.12 ) }
    dend_46 { pt3dadd( 63.6335, -201.874, -257.751, 0.12 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 76/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -6.60459, -10.6381, -15.7489, 0.24 ) }
    dend_45 { pt3dadd( -6.9998, -17.4871, -21.4749, 0.12 ) }
    dend_45 { pt3dadd( -6.54121, -23.8984, -27.6827, 0.12 ) }
    dend_45 { pt3dadd( -5.27785, -31.6365, -31.9696, 0.12 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 80/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -7.73945, -21.7193, -5.44153, 0.12 ) }
    dend_43 { pt3dadd( -7.49768, -31.1629, -11.5245, 0.12 ) }
    dend_43 { pt3dadd( -8.39671, -41.1557, -16.5819, 0.12 ) }
    dend_43 { pt3dadd( -7.56641, -51.9186, -19.6986, 0.12 ) }
    dend_43 { pt3dadd( -6.45464, -62.9126, -21.7325, 0.12 ) }
    dend_43 { pt3dadd( -4.09542, -73.8929, -22.0613, 0.12 ) }
    dend_43 { pt3dadd( -2.26612, -84.9132, -20.8571, 0.12 ) }
    dend_43 { pt3dadd( 0.912016, -95.3531, -18.1834, 0.12 ) }
    dend_43 { pt3dadd( 5.06098, -105.185, -14.6679, 0.12 ) }
    dend_43 { pt3dadd( 8.72376, -115.716, -13.2776, 0.12 ) }
    dend_43 { pt3dadd( 11.1803, -126.493, -11.2632, 0.12 ) }
    dend_43 { pt3dadd( 15.427, -136.89, -11.581, 0.12 ) }
    dend_43 { pt3dadd( 19.37, -147.409, -11.3602, 0.12 ) }
    dend_43 { pt3dadd( 23.904, -157.58, -9.86138, 0.12 ) }
    dend_43 { pt3dadd( 28.8229, -167.385, -7.43017, 0.12 ) }
    dend_43 { pt3dadd( 33.0169, -177.369, -4.43594, 0.12 ) }
    dend_43 { pt3dadd( 38.2996, -187.226, -3.3542, 0.12 ) }
    dend_43 { pt3dadd( 43.3257, -197.272, -3.12818, 0.12 ) }
    dend_43 { pt3dadd( 48.5042, -207.202, -4.03397, 0.12 ) }
    dend_43 { pt3dadd( 52.9945, -217.486, -3.4619, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_43 { pt3dadd( 57.7835, -227.456, -1.48661, 0.12 ) }
    dend_43 { pt3dadd( 62.7858, -237.2, 1.01839, 0.12 ) }
    dend_43 { pt3dadd( 68.3582, -246.913, 1.93909, 0.12 ) }
    dend_43 { pt3dadd( 74.8127, -256.016, 3.24936, 0.12 ) }
    dend_43 { pt3dadd( 83.2654, -263.198, 5.04196, 0.12 ) }
    dend_43 { pt3dadd( 90.2146, -272.026, 4.9287, 0.12 ) }
    dend_43 { pt3dadd( 96.9127, -281.003, 5.82444, 0.12 ) }
    dend_43 { pt3dadd( 103.168, -290.288, 4.88042, 0.12 ) }
    dend_43 { pt3dadd( 109.582, -298.938, 1.67256, 0.12 ) }
    dend_43 { pt3dadd( 115.722, -307.857, -1.32269, 0.12 ) }
    dend_43 { pt3dadd( 123.095, -314.756, -6.25268, 0.12 ) }
    dend_43 { pt3dadd( 130.278, -320.025, -13.0992, 0.12 ) }
    dend_43 { pt3dadd( 138.464, -324.328, -19.48, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.73945, -21.7193, -5.44153, 0.24 ) }
    dend_34 { pt3dadd( -8.20524, -29.6623, -5.97329, 0.12 ) }
    dend_34 { pt3dadd( -8.52031, -37.5041, -7.38713, 0.12 ) }
    dend_34 { pt3dadd( -10.0405, -44.9796, -9.71018, 0.12 ) }
    dend_34 { pt3dadd( -10.9726, -52.0518, -13.2747, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 13.5925, 125.993, 37.4339, 0.12 ) }
    dend_21 { pt3dadd( 12.8333, 130.077, 40.0686, 0.12 ) }
    dend_21 { pt3dadd( 12.5701, 131.493, 40.9819, 0.48 ) }
    dend_21 { pt3dadd( 12.4422, 132.181, 41.4256, 0.12 ) }
    dend_21 { pt3dadd( 11.2937, 138.359, 45.411, 0.12 ) }
    dend_21 { pt3dadd( 11.1428, 139.171, 45.9348, 0.72 ) }
    dend_21 { pt3dadd( 10.9809, 140.042, 46.4967, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.5925, 125.993, 37.4339, 0.24 ) }
    dend_20 { pt3dadd( 14.6515, 128.28, 37.7251, 0.24 ) }
    dend_20 { pt3dadd( 15.0638, 129.224, 37.8581, 0.36 ) }
    dend_20 { pt3dadd( 16.803, 133.105, 38.4143, 0.12 ) }
    dend_20 { pt3dadd( 18.1416, 136.332, 38.5983, 0.12 ) }
    dend_20 { pt3dadd( 18.6198, 137.539, 38.6184, 0.6 ) }
    dend_20 { pt3dadd( 18.8292, 138.081, 38.6168, 0.12 ) }
    dend_20 { pt3dadd( 20.5234, 142.662, 38.5256, 0.12 ) }
    dend_20 { pt3dadd( 21.7062, 145.969, 38.384, 0.12 ) }
    dend_20 { pt3dadd( 23.0186, 150.101, 38.1282, 0.96 ) }
    dend_20 { pt3dadd( 23.2696, 150.914, 38.0845, 0.36 ) }
    dend_20 { pt3dadd( 24.1514, 153.852, 38.012, 0.36 ) }
    dend_20 { pt3dadd( 24.6948, 155.774, 38.0419, 1.08 ) }
    dend_20 { pt3dadd( 24.8245, 156.33, 38.0145, 1.32 ) }
    dend_20 { pt3dadd( 25.2521, 158.395, 37.8856, 0.12 ) }
    dend_20 { pt3dadd( 26.259, 163.042, 37.6403, 0.12 ) }
    dend_20 { pt3dadd( 26.5574, 164.464, 37.5125, 1.32 ) }
    dend_20 { pt3dadd( 26.9906, 166.7, 37.2554, 0.12 ) }
    dend_20 { pt3dadd( 28.3075, 172.935, 36.4439, 0.12 ) }
    dend_20 { pt3dadd( 29.2415, 176.981, 35.7011, 0.12 ) }
    dend_20 { pt3dadd( 29.3844, 177.566, 35.56, 0.6 ) }
    dend_20 { pt3dadd( 29.6154, 178.532, 35.2851, 0.6 ) }
    dend_20 { pt3dadd( 29.93, 179.629, 34.8838, 0.12 ) }
    dend_20 { pt3dadd( 30.6173, 181.5, 34.1211, 0.12 ) }
    dend_20 { pt3dadd( 32.3282, 185.285, 32.5914, 0.12 ) }
    dend_20 { pt3dadd( 32.9586, 186.555, 31.9601, 1.32 ) }
    dend_20 { pt3dadd( 33.5997, 187.945, 31.0332, 0.12 ) }
    dend_20 { pt3dadd( 35.6367, 192.464, 27.4862, 0.12 ) }
    dend_20 { pt3dadd( 36.186, 193.911, 26.125, 0.12 ) }
    dend_20 { pt3dadd( 36.3995, 194.621, 25.3872, 0.96 ) }
    dend_20 { pt3dadd( 36.5118, 195.038, 24.9222, 0.12 ) }
    dend_20 { pt3dadd( 37.6448, 200.012, 19.236, 0.12 ) }
    dend_20 { pt3dadd( 37.7462, 200.757, 18.405, 1.08 ) }
    dend_20 { pt3dadd( 37.9511, 204.637, 14.9741, 0.12 ) }
    dend_20 { pt3dadd( 37.9686, 205.167, 14.6015, 1.08 ) }
    dend_20 { pt3dadd( 38.0181, 205.978, 14.1878, 1.08 ) }
    dend_20 { pt3dadd( 38.2834, 208.34, 13.5755, 0.24 ) }
    dend_20 { pt3dadd( 38.5558, 209.88, 13.5605, 0.12 ) }
    dend_20 { pt3dadd( 39.5894, 214.88, 13.8954, 0.12 ) }
    dend_20 { pt3dadd( 39.9067, 216.192, 14.0917, 0.48 ) }
    dend_20 { pt3dadd( 40.261, 217.6, 14.3037, 0.12 ) }
    dend_20 { pt3dadd( 41.0413, 220.633, 14.7787, 0.12 ) }
    dend_20 { pt3dadd( 41.3662, 221.739, 14.9634, 0.6 ) }
    dend_20 { pt3dadd( 41.6282, 222.512, 15.0846, 0.12 ) }
    dend_20 { pt3dadd( 42.2754, 224.271, 15.3224, 0.12 ) }
    dend_20 { pt3dadd( 42.6518, 225.223, 15.4392, 0.6 ) }
    dend_20 { pt3dadd( 43.04, 226.084, 15.5453, 0.12 ) }
    dend_20 { pt3dadd( 45.598, 231.059, 15.9382, 0.12 ) }
    dend_20 { pt3dadd( 47.0572, 233.597, 16.0663, 0.12 ) }
    dend_20 { pt3dadd( 47.4869, 234.302, 16.0254, 1.08 ) }
    dend_20 { pt3dadd( 48.1315, 235.244, 15.8843, 1.08 ) }
    dend_20 { pt3dadd( 50.8725, 238.815, 15.0445, 0.12 ) }
    dend_20 { pt3dadd( 54.7066, 243.154, 13.5996, 0.12 ) }
    dend_20 { pt3dadd( 56.8224, 245.287, 12.6771, 0.12 ) }
    dend_20 { pt3dadd( 60.682, 248.866, 11.1069, 0.12 ) }
    dend_20 { pt3dadd( 62.6095, 250.695, 10.3719, 1.2 ) }
    dend_20 { pt3dadd( 64.1072, 252.132, 9.82992, 0.12 ) }
    dend_20 { pt3dadd( 67.3893, 255.158, 8.59477, 0.12 ) }
    dend_20 { pt3dadd( 68.4351, 256.06, 8.27988, 0.48 ) }
    dend_20 { pt3dadd( 70.7665, 258.188, 7.86516, 0.12 ) }
    dend_20 { pt3dadd( 74.0242, 261.414, 8.11704, 0.12 ) }
    dend_20 { pt3dadd( 75.1339, 262.836, 8.31109, 0.12 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.33375, -74.9366, -7.27502, 0.12 ) }
    dend_11 { pt3dadd( 4.86482, -77.0649, -8.81044, 0.12 ) }
    dend_11 { pt3dadd( 5.39035, -77.6249, -9.17166, 1.2 ) }
    dend_11 { pt3dadd( 5.70273, -77.8732, -9.32443, 1.2 ) }
    dend_11 { pt3dadd( 6.16566, -78.1994, -9.54508, 0.12 ) }
    dend_11 { pt3dadd( 7.78723, -79.244, -10.275, 0.12 ) }
    dend_11 { pt3dadd( 8.80619, -79.8808, -10.7106, 1.32 ) }
    dend_11 { pt3dadd( 10.3135, -80.7076, -11.2204, 0.12 ) }
    dend_11 { pt3dadd( 12.2054, -81.7229, -11.8438, 0.12 ) }
    dend_11 { pt3dadd( 13.9473, -82.6515, -12.3692, 0.96 ) }
    dend_11 { pt3dadd( 15.1495, -83.3094, -12.734, 0.12 ) }
    dend_11 { pt3dadd( 16.1645, -83.8852, -13.0317, 0.12 ) }
    dend_11 { pt3dadd( 17.1524, -84.5033, -13.3287, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_11 { pt3dadd( 17.7603, -84.93, -13.5125, 0.12 ) }
    dend_11 { pt3dadd( 20.0954, -86.7363, -14.1917, 0.12 ) }
    dend_11 { pt3dadd( 21.3954, -87.8065, -14.5191, 1.44 ) }
    dend_11 { pt3dadd( 22.1409, -88.4658, -14.7086, 0.12 ) }
    dend_11 { pt3dadd( 23.5137, -89.7238, -15.0427, 0.12 ) }
    dend_11 { pt3dadd( 23.9977, -90.2015, -15.152, 0.6 ) }
    dend_11 { pt3dadd( 24.4309, -90.6603, -15.2628, 0.12 ) }
    dend_11 { pt3dadd( 25.8055, -92.2941, -15.6454, 0.12 ) }
    dend_11 { pt3dadd( 26.1975, -92.7854, -15.7507, 0.6 ) }
    dend_11 { pt3dadd( 26.5832, -93.2904, -15.8704, 0.12 ) }
    dend_11 { pt3dadd( 27.3461, -94.3381, -16.1379, 0.12 ) }
    dend_11 { pt3dadd( 28.3091, -95.7963, -16.4899, 1.08 ) }
    dend_11 { pt3dadd( 28.6815, -96.4176, -16.6765, 0.12 ) }
    dend_11 { pt3dadd( 29.4975, -97.9077, -17.19, 0.12 ) }
    dend_11 { pt3dadd( 29.7146, -98.3252, -17.335, 0.48 ) }
    dend_11 { pt3dadd( 30.0228, -98.9424, -17.5339, 0.12 ) }
    dend_11 { pt3dadd( 31.0009, -100.934, -18.1107, 0.12 ) }
    dend_11 { pt3dadd( 31.8166, -102.592, -18.6226, 0.96 ) }
    dend_11 { pt3dadd( 32.1646, -103.259, -18.8604, 0.12 ) }
    dend_11 { pt3dadd( 32.9602, -104.652, -19.4178, 0.12 ) }
    dend_11 { pt3dadd( 34.0524, -106.466, -20.1746, 0.12 ) }
    dend_11 { pt3dadd( 34.2751, -106.809, -20.3177, 0.96 ) }
    dend_11 { pt3dadd( 35.406, -108.353, -20.9544, 0.12 ) }
    dend_11 { pt3dadd( 36.4187, -109.7, -21.427, 0.12 ) }
    dend_11 { pt3dadd( 36.8196, -110.205, -21.6127, 0.6 ) }
    dend_11 { pt3dadd( 37.1561, -110.633, -21.7621, 0.12 ) }
    dend_11 { pt3dadd( 38.1965, -111.968, -22.2065, 0.12 ) }
    dend_11 { pt3dadd( 38.6145, -112.541, -22.3607, 0.6 ) }
    dend_11 { pt3dadd( 38.8124, -112.855, -22.4089, 0.6 ) }
    dend_11 { pt3dadd( 38.9092, -113.024, -22.4363, 0.12 ) }
    dend_11 { pt3dadd( 39.7175, -114.564, -22.6851, 0.12 ) }
    dend_11 { pt3dadd( 40.1985, -115.452, -22.9046, 0.48 ) }
    dend_11 { pt3dadd( 40.3779, -115.774, -23.0064, 0.48 ) }
    dend_11 { pt3dadd( 41.1186, -117.1, -23.4664, 0.12 ) }
    dend_11 { pt3dadd( 41.383, -117.557, -23.6263, 0.48 ) }
    dend_11 { pt3dadd( 41.6695, -118.059, -23.7949, 0.12 ) }
    dend_11 { pt3dadd( 42.8015, -120.019, -24.4295, 0.12 ) }
    dend_11 { pt3dadd( 42.9374, -120.277, -24.4963, 0.36 ) }
    dend_11 { pt3dadd( 43.1825, -120.863, -24.6071, 0.12 ) }
    dend_11 { pt3dadd( 43.755, -122.53, -24.8424, 0.12 ) }
    dend_11 { pt3dadd( 43.9006, -123.266, -24.9668, 0.48 ) }
    dend_11 { pt3dadd( 43.9411, -123.772, -25.0557, 0.12 ) }
    dend_11 { pt3dadd( 43.8621, -125.497, -25.3375, 0.12 ) }
    dend_11 { pt3dadd( 43.4564, -128.566, -25.8859, 0.12 ) }
    dend_11 { pt3dadd( 43.3456, -129.011, -25.9935, 0.12 ) }
    dend_11 { pt3dadd( 42.3041, -131.866, -26.8692, 0.12 ) }
    dend_11 { pt3dadd( 42.0339, -132.462, -27.0851, 1.08 ) }
    dend_11 { pt3dadd( 41.717, -133.023, -27.3199, 0.12 ) }
    dend_11 { pt3dadd( 41.2517, -133.67, -27.8102, 0.12 ) }
    dend_11 { pt3dadd( 40.42, -134.722, -28.9467, 0.72 ) }
    dend_11 { pt3dadd( 40.2457, -134.971, -29.2371, 0.12 ) }
    dend_11 { pt3dadd( 40.0708, -135.281, -29.6579, 0.12 ) }
    dend_11 { pt3dadd( 39.9006, -135.621, -30.1344, 0.96 ) }
    dend_11 { pt3dadd( 38.6946, -138.283, -33.9569, 0.12 ) }
    dend_11 { pt3dadd( 38.5381, -138.663, -34.4876, 0.12 ) }
    dend_11 { pt3dadd( 38.4784, -138.846, -34.714, 0.6 ) }
    dend_11 { pt3dadd( 38.0715, -140.166, -36.2587, 0.12 ) }
    dend_11 { pt3dadd( 37.8752, -140.895, -37.0369, 0.12 ) }
    dend_11 { pt3dadd( 37.8395, -141.055, -37.1816, 0.36 ) }
    dend_11 { pt3dadd( 37.7318, -141.648, -37.5016, 0.12 ) }
    dend_11 { pt3dadd( 37.3896, -143.557, -38.3629, 0.12 ) }
    dend_11 { pt3dadd( 37.2864, -144.165, -38.5775, 1.08 ) }
    dend_11 { pt3dadd( 37.1645, -144.704, -38.7426, 1.08 ) }
    dend_11 { pt3dadd( 37.0877, -144.978, -38.8357, 0.12 ) }
    dend_11 { pt3dadd( 36.676, -146.225, -39.2637, 0.12 ) }
    dend_11 { pt3dadd( 36.3633, -146.992, -39.6202, 0.6 ) }
    dend_11 { pt3dadd( 36.2418, -147.219, -39.7452, 0.6 ) }
    dend_11 { pt3dadd( 35.2278, -148.888, -40.8956, 0.12 ) }
    dend_11 { pt3dadd( 34.8456, -149.441, -41.4476, 0.48 ) }
    dend_11 { pt3dadd( 34.7022, -149.639, -41.6934, 0.48 ) }
    dend_11 { pt3dadd( 33.7767, -150.929, -43.4162, 0.12 ) }
    dend_11 { pt3dadd( 33.5062, -151.313, -43.994, 0.12 ) }
    dend_11 { pt3dadd( 33.1454, -151.959, -44.7977, 0.48 ) }
    dend_11 { pt3dadd( 32.4402, -153.577, -46.5092, 0.12 ) }
    dend_11 { pt3dadd( 32.1876, -154.228, -47.1231, 0.12 ) }
    dend_11 { pt3dadd( 31.7228, -155.664, -48.2454, 0.72 ) }
    dend_11 { pt3dadd( 30.9986, -158.379, -49.9426, 0.12 ) }
    dend_11 { pt3dadd( 30.3525, -161.096, -51.4546, 0.12 ) }
    dend_11 { pt3dadd( 30.2274, -161.644, -51.7319, 0.48 ) }
    dend_11 { pt3dadd( 30.1513, -161.994, -51.8895, 0.12 ) }
    dend_11 { pt3dadd( 29.6187, -164.397, -53.0082, 0.12 ) }
    dend_11 { pt3dadd( 29.4906, -164.982, -53.2871, 0.48 ) }
    dend_11 { pt3dadd( 29.3871, -165.537, -53.4945, 0.12 ) }
    dend_11 { pt3dadd( 29.0725, -167.182, -54.1922, 0.12 ) }
    dend_11 { pt3dadd( 29.0071, -167.708, -54.4091, 0.36 ) }
    dend_11 { pt3dadd( 28.9862, -168.386, -54.6792, 0.12 ) }
    dend_11 { pt3dadd( 29.0608, -169.352, -55.1046, 0.12 ) }
    dend_11 { pt3dadd( 29.1377, -169.683, -55.2619, 0.48 ) }
    dend_11 { pt3dadd( 29.2584, -170.005, -55.4324, 0.12 ) }
    dend_11 { pt3dadd( 30.1811, -171.704, -56.4611, 0.12 ) }
    dend_11 { pt3dadd( 30.4899, -172.19, -56.8312, 0.48 ) }
    dend_11 { pt3dadd( 31.2688, -173.25, -57.7581, 0.12 ) }
    dend_11 { pt3dadd( 32.7789, -174.976, -59.4094, 0.12 ) }
    dend_11 { pt3dadd( 33.3392, -175.516, -59.9587, 0.36 ) }
    dend_11 { pt3dadd( 34.1609, -176.193, -60.7204, 0.36 ) }
    dend_11 { pt3dadd( 35.007, -176.757, -61.3886, 0.12 ) }
    dend_11 { pt3dadd( 35.7783, -177.194, -61.876, 0.12 ) }
    dend_11 { pt3dadd( 37.2415, -177.906, -62.6347, 0.12 ) }
    dend_11 { pt3dadd( 39.1212, -178.717, -63.5614, 0.12 ) }
    dend_11 { pt3dadd( 40.2515, -179.203, -64.06, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_11 { pt3dadd( 42.0748, -179.972, -64.7655, 0.12 ) }
    dend_11 { pt3dadd( 44.5431, -180.933, -65.5954, 0.12 ) }
    dend_11 { pt3dadd( 44.7932, -181.023, -65.679, 0.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 3/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.33375, -74.9366, -7.27502, 0.96 ) }
    dend_6 { pt3dadd( 2.18547, -77.2921, -8.532, 0.96 ) }
    dend_6 { pt3dadd( 1.68288, -78.4824, -9.15224, 0.96 ) }
    dend_6 { pt3dadd( 1.2811, -79.6456, -9.80478, 1.56 ) }
    dend_6 { pt3dadd( 0.859467, -81.1839, -10.6923, 0.96 ) }
    dend_6 { pt3dadd( 0.580781, -82.537, -11.4521, 0.96 ) }
    dend_6 { pt3dadd( 0.507992, -83.11, -11.7687, 0.96 ) }
    dend_6 { pt3dadd( 0.550255, -83.7917, -12.1408, 0.96 ) }
    dend_6 { pt3dadd( 0.741215, -84.9217, -12.7891, 0.48 ) }
    dend_6 { pt3dadd( 0.842939, -85.4147, -13.0582, 0.48 ) }
    dend_6 { pt3dadd( 1.07641, -86.4804, -13.5581, 0.96 ) }
    dend_6 { pt3dadd( 1.35019, -87.8899, -14.1349, 0.96 ) }
    dend_6 { pt3dadd( 1.53819, -89.2315, -14.7027, 0.96 ) }
    dend_6 { pt3dadd( 1.61572, -90.5378, -15.2424, 0.36 ) }
    dend_6 { pt3dadd( 1.59951, -91.4467, -15.6015, 0.36 ) }
    dend_6 { pt3dadd( 1.5562, -92.0757, -15.8541, 0.36 ) }
    dend_6 { pt3dadd( 1.46179, -92.9083, -16.1864, 0.84 ) }
    dend_6 { pt3dadd( 1.29775, -93.9491, -16.5521, 0.12 ) }
    dend_6 { pt3dadd( 1.14077, -94.8789, -16.8811, 0.12 ) }
    dend_6 { pt3dadd( 0.94863, -95.9738, -17.2588, 1.32 ) }
    dend_6 { pt3dadd( 0.777312, -96.9104, -17.5778, 1.32 ) }
    dend_6 { pt3dadd( 0.685494, -97.3647, -17.7207, 0.12 ) }
    dend_6 { pt3dadd( 0.518945, -98.1187, -17.9606, 0.12 ) }
    dend_6 { pt3dadd( 0.206709, -99.6255, -18.3932, 1.2 ) }
    dend_6 { pt3dadd( 0.0429638, -100.463, -18.6361, 0.48 ) }
    dend_6 { pt3dadd( -0.192776, -101.527, -18.9553, 0.12 ) }
    dend_6 { pt3dadd( -0.370344, -102.281, -19.2009, 1.32 ) }
    dend_6 { pt3dadd( -0.643475, -103.369, -19.5533, 0.12 ) }
    dend_6 { pt3dadd( -0.907849, -104.335, -19.8527, 0.12 ) }
    dend_6 { pt3dadd( -1.04262, -104.842, -20.0283, 1.68 ) }
    dend_6 { pt3dadd( -1.4072, -106.268, -20.5975, 0.12 ) }
    dend_6 { pt3dadd( -1.76992, -107.92, -21.3339, 0.36 ) }
    dend_6 { pt3dadd( -1.92, -108.614, -21.6525, 1.2 ) }
    dend_6 { pt3dadd( -2.0794, -109.339, -21.9741, 0.48 ) }
    dend_6 { pt3dadd( -2.45198, -110.979, -22.8845, 0.24 ) }
    dend_6 { pt3dadd( -2.52488, -111.308, -23.0895, 0.72 ) }
    dend_6 { pt3dadd( -2.83613, -112.776, -24.0499, 0.12 ) }
    dend_6 { pt3dadd( -2.98793, -113.479, -24.5175, 0.12 ) }
    dend_6 { pt3dadd( -3.13038, -114.232, -24.9798, 0.96 ) }
    dend_6 { pt3dadd( -3.42776, -116.44, -26.051, 0.12 ) }
    dend_6 { pt3dadd( -3.50084, -117.128, -26.2977, 0.12 ) }
    dend_6 { pt3dadd( -3.56859, -118.164, -26.614, 1.44 ) }
    dend_6 { pt3dadd( -3.58767, -118.923, -26.7972, 0.48 ) }
    dend_6 { pt3dadd( -3.5345, -120.18, -27.0898, 0.12 ) }
    dend_6 { pt3dadd( -3.31031, -122.445, -27.542, 0.12 ) }
    dend_6 { pt3dadd( -3.23768, -122.971, -27.6352, 1.32 ) }
    dend_6 { pt3dadd( -3.18154, -123.315, -27.7165, 0.84 ) }
    dend_6 { pt3dadd( -3.14681, -123.542, -27.7922, 0.84 ) }
    dend_6 { pt3dadd( -2.90781, -125.496, -28.6028, 0.12 ) }
    dend_6 { pt3dadd( -2.86058, -126.169, -28.9242, 1.08 ) }
    dend_6 { pt3dadd( -2.87889, -127.233, -29.5037, 1.08 ) }
    dend_6 { pt3dadd( -2.97019, -128.46, -30.1714, 0.12 ) }
    dend_6 { pt3dadd( -3.13488, -129.793, -30.8782, 0.12 ) }
    dend_6 { pt3dadd( -3.23887, -130.358, -31.1453, 1.44 ) }
    dend_6 { pt3dadd( -3.49004, -131.326, -31.5276, 0.12 ) }
    dend_6 { pt3dadd( -3.95731, -132.992, -32.1099, 0.12 ) }
    dend_6 { pt3dadd( -4.09076, -133.465, -32.2433, 0.6 ) }
    dend_6 { pt3dadd( -4.15428, -133.72, -32.3025, 0.12 ) }
    dend_6 { pt3dadd( -4.45072, -135.33, -32.636, 0.12 ) }
    dend_6 { pt3dadd( -4.54382, -135.994, -32.7849, 1.2 ) }
    dend_6 { pt3dadd( -4.60521, -136.608, -32.9257, 1.2 ) }
    dend_6 { pt3dadd( -4.61654, -136.866, -32.9763, 0.12 ) }
    dend_6 { pt3dadd( -4.63826, -137.802, -33.1709, 0.12 ) }
    dend_6 { pt3dadd( -4.63668, -139.413, -33.5106, 0.84 ) }
    dend_6 { pt3dadd( -4.61141, -139.942, -33.6231, 0.84 ) }
    dend_6 { pt3dadd( -4.59487, -140.335, -33.6951, 0.12 ) }
    dend_6 { pt3dadd( -4.57074, -141.881, -33.9242, 0.12 ) }
    dend_6 { pt3dadd( -4.56701, -142.347, -33.973, 1.08 ) }
    dend_6 { pt3dadd( -4.5822, -143.171, -34.0144, 1.08 ) }
    dend_6 { pt3dadd( -4.60716, -143.71, -34.0092, 0.12 ) }
    dend_6 { pt3dadd( -4.68598, -145.015, -34.1221, 0.12 ) }
    dend_6 { pt3dadd( -4.72635, -145.679, -34.2245, 0.6 ) }
    dend_6 { pt3dadd( -4.78417, -146.528, -34.4007, 0.12 ) }
    dend_6 { pt3dadd( -4.95378, -147.922, -34.7048, 0.12 ) }
    dend_6 { pt3dadd( -5.10331, -148.82, -34.9056, 1.56 ) }
    dend_6 { pt3dadd( -5.52364, -151.011, -35.4932, 0.12 ) }
    dend_6 { pt3dadd( -5.69218, -151.834, -35.7369, 0.12 ) }
    dend_6 { pt3dadd( -5.87574, -152.723, -35.9996, 0.12 ) }
    dend_6 { pt3dadd( -6.4201, -155.343, -36.7515, 0.12 ) }
    dend_6 { pt3dadd( -6.56308, -156.056, -36.9426, 1.32 ) }
    dend_6 { pt3dadd( -6.81798, -157.407, -37.2449, 0.48 ) }
    dend_6 { pt3dadd( -7.00298, -158.465, -37.4023, 0.12 ) }
    dend_6 { pt3dadd( -7.23055, -160.036, -37.6298, 0.12 ) }
    dend_6 { pt3dadd( -7.28261, -160.634, -37.708, 0.84 ) }
    dend_6 { pt3dadd( -7.27903, -161.096, -37.7626, 0.84 ) }
    dend_6 { pt3dadd( -7.24141, -162.028, -37.8423, 0.12 ) }
    dend_6 { pt3dadd( -7.17047, -163.17, -37.928, 0.12 ) }
    dend_6 { pt3dadd( -7.13307, -163.567, -37.9783, 0.48 ) }
    dend_6 { pt3dadd( -7.07811, -164.046, -38.0631, 0.12 ) }
    dend_6 { pt3dadd( -6.91876, -165.251, -38.318, 0.12 ) }
    dend_6 { pt3dadd( -6.81599, -165.893, -38.47, 0.84 ) }
    dend_6 { pt3dadd( -6.64634, -166.808, -38.782, 0.84 ) }
    dend_6 { pt3dadd( -6.51591, -167.332, -38.9773, 0.12 ) }
    dend_6 { pt3dadd( -6.40991, -167.702, -39.1087, 0.12 ) }
    dend_6 { pt3dadd( -6.3686, -167.836, -39.1531, 0.12 ) }
    dend_6 { pt3dadd( -6.12739, -168.651, -39.4511, 0.96 ) }
    dend_6 { pt3dadd( -5.79741, -169.854, -39.9067, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -5.27435, -171.99, -40.674, 0.12 ) }
    dend_6 { pt3dadd( -5.1281, -172.698, -40.9296, 0.6 ) }
    dend_6 { pt3dadd( -5.04708, -173.182, -41.1205, 0.6 ) }
    dend_6 { pt3dadd( -4.87306, -174.638, -41.7009, 0.12 ) }
    dend_6 { pt3dadd( -4.83093, -175.368, -42.0305, 0.12 ) }
    dend_6 { pt3dadd( -4.82383, -176.109, -42.3667, 0.6 ) }
    dend_6 { pt3dadd( -4.85382, -176.727, -42.6515, 0.6 ) }
    dend_6 { pt3dadd( -4.98583, -178.78, -43.5483, 0.12 ) }
    dend_6 { pt3dadd( -5.04064, -179.556, -43.831, 0.96 ) }
    dend_6 { pt3dadd( -5.15638, -181.605, -44.3927, 0.12 ) }
    dend_6 { pt3dadd( -5.21571, -182.717, -44.6491, 0.12 ) }
    dend_6 { pt3dadd( -5.30146, -184.636, -44.9912, 0.12 ) }
    dend_6 { pt3dadd( -5.30827, -184.876, -45.0174, 1.08 ) }
    dend_6 { pt3dadd( -5.32622, -186.212, -45.01, 0.12 ) }
    dend_6 { pt3dadd( -5.31006, -187.505, -44.9294, 0.12 ) }
    dend_6 { pt3dadd( -5.27309, -188.108, -44.8727, 0.96 ) }
    dend_6 { pt3dadd( -5.19266, -188.647, -44.8531, 0.96 ) }
    dend_6 { pt3dadd( -5.15659, -188.859, -44.8567, 0.12 ) }
    dend_6 { pt3dadd( -4.87349, -190.768, -44.9577, 0.12 ) }
    dend_6 { pt3dadd( -4.79394, -191.428, -45.0566, 1.56 ) }
    dend_6 { pt3dadd( -4.6797, -193.021, -45.3688, 0.12 ) }
    dend_6 { pt3dadd( -4.60865, -195.075, -45.8327, 0.12 ) }
    dend_6 { pt3dadd( -4.61774, -196.965, -46.3696, 0.12 ) }
    dend_6 { pt3dadd( -4.65205, -197.755, -46.6341, 0.96 ) }
    dend_6 { pt3dadd( -4.80795, -199.382, -47.2825, 0.6 ) }
    dend_6 { pt3dadd( -4.99079, -200.614, -47.87, 0.12 ) }
    dend_6 { pt3dadd( -5.07946, -200.986, -48.0655, 0.12 ) }
    dend_6 { pt3dadd( -5.35554, -202.001, -48.7521, 0.72 ) }
    dend_6 { pt3dadd( -5.46745, -202.477, -49.1016, 0.72 ) }
    dend_6 { pt3dadd( -5.51608, -202.712, -49.2908, 0.72 ) }
    dend_6 { pt3dadd( -5.89774, -204.119, -50.4218, 0.12 ) }
    dend_6 { pt3dadd( -6.25612, -205.21, -51.3516, 0.12 ) }
    dend_6 { pt3dadd( -6.8701, -206.673, -52.5899, 1.08 ) }
    dend_6 { pt3dadd( -7.15711, -207.24, -53.1021, 1.08 ) }
    dend_6 { pt3dadd( -8.20145, -208.91, -54.717, 0.12 ) }
    dend_6 { pt3dadd( -9.01766, -210.005, -55.8142, 0.12 ) }
    dend_6 { pt3dadd( -9.29504, -210.309, -56.1144, 0.96 ) }
    dend_6 { pt3dadd( -10.0413, -211.036, -56.8134, 0.96 ) }
    dend_6 { pt3dadd( -11.2924, -212.196, -57.7365, 0.12 ) }
    dend_6 { pt3dadd( -12.0998, -212.946, -58.2477, 0.12 ) }
    dend_6 { pt3dadd( -12.3289, -213.169, -58.3463, 0.48 ) }
    dend_6 { pt3dadd( -13.0383, -213.958, -58.6778, 0.12 ) }
    dend_6 { pt3dadd( -13.5058, -214.499, -58.8761, 0.12 ) }
    dend_6 { pt3dadd( -13.787, -214.867, -58.9624, 0.12 ) }
    dend_6 { pt3dadd( -14.3192, -215.558, -58.9714, 0.12 ) }
    dend_6 { pt3dadd( -14.9436, -216.452, -58.9799, 0.48 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 46/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.58543, -81.1118, 24.0675, 0.12 ) }
    dend_4 { pt3dadd( -1.60739, -84.2733, 27.9784, 0.12 ) }
    dend_4 { pt3dadd( -1.72396, -85.1441, 29.5599, 0.96 ) }
    dend_4 { pt3dadd( -2.19672, -86.4596, 32.8743, 0.24 ) }
    dend_4 { pt3dadd( -2.55871, -86.8182, 34.9749, 0.24 ) }
    dend_4 { pt3dadd( -2.83542, -86.6767, 36.6648, 0.72 ) }
    dend_4 { pt3dadd( -2.90576, -86.2787, 37.6223, 0.12 ) }
    dend_4 { pt3dadd( -2.60609, -82.7861, 41.3798, 0.12 ) }
    dend_4 { pt3dadd( -2.40824, -80.5508, 43.6088, 0.12 ) }
    dend_4 { pt3dadd( -2.08882, -77.6511, 46.0846, 0.12 ) }
    dend_4 { pt3dadd( -1.95352, -76.2411, 47.1729, 0.12 ) }
    dend_4 { pt3dadd( -1.58179, -72.9946, 49.4988, 0.12 ) }
    dend_4 { pt3dadd( -1.31691, -71.5207, 50.5092, 0.12 ) }
    dend_4 { pt3dadd( 0.119152, -67.9677, 52.8301, 0.12 ) }
    dend_4 { pt3dadd( -1.01251, -61.0078, 62.9862, 0.12 ) }
    dend_4 { pt3dadd( -3.54875, -53.6115, 72.5638, 0.12 ) }
    dend_4 { pt3dadd( -3.98384, -44.8523, 81.2792, 0.12 ) }
    dend_4 { pt3dadd( -4.40044, -37.1741, 90.9611, 0.12 ) }
    dend_4 { pt3dadd( -4.67194, -29.4247, 100.591, 0.12 ) }
    dend_4 { pt3dadd( -3.24127, -21.4175, 109.903, 0.12 ) }
    dend_4 { pt3dadd( -2.24267, -13.4117, 119.272, 0.12 ) }
    dend_4 { pt3dadd( 0.187171, -6.27243, 129.07, 0.12 ) }
    dend_4 { pt3dadd( 3.79167, 0.43471, 138.811, 0.12 ) }
    dend_4 { pt3dadd( 8.88123, 6.72475, 148.16, 0.12 ) }
    dend_4 { pt3dadd( 14.5719, 11.0615, 158.243, 0.12 ) }
    dend_4 { pt3dadd( 21.683, 16.3825, 166.845, 0.12 ) }
    dend_4 { pt3dadd( 29.7019, 22.2904, 174.17, 0.12 ) }
    dend_4 { pt3dadd( 36.4581, 27.4398, 183.154, 0.12 ) }
    dend_4 { pt3dadd( 41.7017, 33.5193, 192.557, 0.12 ) }
    dend_4 { pt3dadd( 46.1644, 39.2328, 202.572, 0.12 ) }
    dend_4 { pt3dadd( 52.1272, 44.1839, 212.206, 0.12 ) }
    dend_4 { pt3dadd( 59.3019, 48.5273, 221.29, 0.12 ) }
    dend_4 { pt3dadd( 64.4202, 52.6201, 231.774, 0.12 ) }
    dend_4 { pt3dadd( 67.8586, 57.274, 242.701, 0.12 ) }
    dend_4 { pt3dadd( 69.3981, 63.4795, 253.283, 0.12 ) }
    dend_4 { pt3dadd( 71.1098, 68.3796, 264.505, 0.12 ) }
    dend_4 { pt3dadd( 74.9145, 72.9164, 275.359, 0.12 ) }
    dend_4 { pt3dadd( 77.4068, 77.3196, 286.641, 0.12 ) }
    dend_4 { pt3dadd( 81.7107, 79.8549, 297.951, 0.12 ) }
    dend_4 { pt3dadd( 87.1488, 83.8289, 308.319, 0.12 ) }
    dend_4 { pt3dadd( 94.5933, 88.911, 316.782, 0.12 ) }
    dend_4 { pt3dadd( 103.066, 94.522, 323.824, 0.12 ) }
    dend_4 { pt3dadd( 113.434, 97.8812, 329.662, 0.12 ) }
    dend_4 { pt3dadd( 122.812, 102.054, 336.555, 0.12 ) }
    dend_4 { pt3dadd( 132.782, 104.594, 343.413, 0.12 ) }
    dend_4 { pt3dadd( 142.674, 107.996, 350.003, 0.12 ) }
    dend_4 { pt3dadd( 152.38, 111.711, 356.701, 0.12 ) }
    dend_4 { pt3dadd( 161.14, 114.492, 364.972, 0.12 ) }
    dend_4 { pt3dadd( 169.535, 117.912, 373.38, 0.12 ) }
    dend_4 { pt3dadd( 177.094, 119.863, 382.967, 0.12 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 96/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.58543, -81.1118, 24.0675, 0.12 ) }
    dend_3 { pt3dadd( -3.38695, -85.0608, 24.1555, 0.12 ) }
    dend_3 { pt3dadd( -4.47753, -87.4514, 24.2088, 0.12 ) }
    dend_3 { pt3dadd( -5.15726, -88.9413, 24.242, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_3 { pt3dadd( -10.1454, -100.134, 27.103, 0.12 ) }
    dend_3 { pt3dadd( -14.7705, -110.581, 32.377, 0.12 ) }
    dend_3 { pt3dadd( -21.732, -119.3, 38.1958, 0.12 ) }
    dend_3 { pt3dadd( -27.7154, -128.415, 44.4767, 0.12 ) }
    dend_3 { pt3dadd( -32.3413, -138.405, 50.5714, 0.12 ) }
    dend_3 { pt3dadd( -38.615, -148.528, 54.6361, 0.12 ) }
    dend_3 { pt3dadd( -45.9863, -157.955, 58.5271, 0.12 ) }
    dend_3 { pt3dadd( -51.7116, -168.397, 62.5923, 0.12 ) }
    dend_3 { pt3dadd( -55.3093, -179.476, 67.3514, 0.12 ) }
    dend_3 { pt3dadd( -58.0374, -191.292, 70.7116, 0.12 ) }
    dend_3 { pt3dadd( -59.4601, -202.943, 75.2477, 0.12 ) }
    dend_3 { pt3dadd( -61.2086, -214.369, 80.2205, 0.12 ) }
    dend_3 { pt3dadd( -61.8123, -226.199, 84.4658, 0.12 ) }
    dend_3 { pt3dadd( -61.3542, -238.014, 88.7717, 0.12 ) }
    dend_3 { pt3dadd( -61.0343, -249.285, 94.3576, 0.12 ) }
    dend_3 { pt3dadd( -60.9316, -261.01, 98.925, 0.12 ) }
    dend_3 { pt3dadd( -59.4348, -272.732, 103.248, 0.12 ) }
    dend_3 { pt3dadd( -60.4543, -284.424, 107.788, 0.12 ) }
    dend_3 { pt3dadd( -62.3506, -296.602, 110.328, 0.12 ) }
    dend_3 { pt3dadd( -63.5667, -308.955, 112.39, 0.12 ) }
    dend_3 { pt3dadd( -64.713, -321.486, 112.48, 0.12 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -10.9726, -52.0518, -13.2747, 0.12 ) }
    dend_40 { pt3dadd( -11.1665, -58.0606, -18.9652, 0.12 ) }
    dend_40 { pt3dadd( -11.3471, -65.0071, -23.4639, 0.12 ) }
    dend_40 { pt3dadd( -11.259, -70.487, -29.6677, 0.12 ) }
    dend_40 { pt3dadd( -9.66308, -75.4496, -36.0981, 0.12 ) }
    dend_40 { pt3dadd( -7.91094, -78.7558, -43.4821, 0.12 ) }
    dend_40 { pt3dadd( -5.74923, -81.9002, -50.8281, 0.12 ) }
    dend_40 { pt3dadd( -3.24105, -85.5312, -57.8317, 0.12 ) }
    dend_40 { pt3dadd( 0.278042, -89.3693, -64.2667, 0.12 ) }
    dend_40 { pt3dadd( 2.33106, -93.921, -70.8691, 0.12 ) }
    dend_40 { pt3dadd( 4.80111, -97.9794, -77.6479, 0.12 ) }
    dend_40 { pt3dadd( 6.81332, -101.636, -84.7969, 0.12 ) }
    dend_40 { pt3dadd( 9.55088, -106.91, -90.5595, 0.12 ) }
    dend_40 { pt3dadd( 13.9884, -111.013, -96.2162, 0.12 ) }
    dend_40 { pt3dadd( 19.0345, -115.293, -101.191, 0.12 ) }
    dend_40 { pt3dadd( 23.8645, -119.567, -106.381, 0.12 ) }
    dend_40 { pt3dadd( 29.312, -123.144, -111.485, 0.12 ) }
    dend_40 { pt3dadd( 35.4973, -127.233, -115.165, 0.12 ) }
    dend_40 { pt3dadd( 42.3958, -130.334, -118.53, 0.12 ) }
    dend_40 { pt3dadd( 48.3372, -134.57, -122.438, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 41/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -10.9726, -52.0518, -13.2747, 0.24 ) }
    dend_35 { pt3dadd( -12.5598, -59.9809, -12.9536, 0.12 ) }
    dend_35 { pt3dadd( -14.8771, -67.7163, -13.4892, 0.12 ) }
    dend_35 { pt3dadd( -18.2663, -75.0616, -13.7194, 0.12 ) }
    dend_35 { pt3dadd( -20.5953, -82.8118, -13.7717, 0.12 ) }
    dend_35 { pt3dadd( -21.5423, -90.8466, -13.572, 0.12 ) }
    dend_35 { pt3dadd( -23.715, -98.5818, -14.5414, 0.12 ) }
    dend_35 { pt3dadd( -24.8616, -106.509, -15.7002, 0.12 ) }
    dend_35 { pt3dadd( -25.8962, -114.529, -16.011, 0.12 ) }
    dend_35 { pt3dadd( -26.7863, -122.382, -17.7511, 0.12 ) }
    dend_35 { pt3dadd( -26.8204, -130.35, -19.1659, 0.12 ) }
    dend_35 { pt3dadd( -27.1244, -138.039, -21.6739, 0.12 ) }
    dend_35 { pt3dadd( -27.8236, -145.988, -23.0208, 0.12 ) }
    dend_35 { pt3dadd( -28.6685, -154.036, -23.1341, 0.12 ) }
    dend_35 { pt3dadd( -30.814, -161.797, -23.9444, 0.12 ) }
    dend_35 { pt3dadd( -33.2206, -169.509, -24.414, 0.12 ) }
    dend_35 { pt3dadd( -36.0003, -177.088, -23.8365, 0.12 ) }
    dend_35 { pt3dadd( -38.4991, -184.563, -22.0029, 0.12 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.9809, 140.042, 46.4967, 0.12 ) }
    dend_27 { pt3dadd( 11.9469, 145.329, 48.136, 0.12 ) }
    dend_27 { pt3dadd( 12.2167, 147.239, 48.8356, 1.08 ) }
    dend_27 { pt3dadd( 12.3679, 148.485, 49.319, 0.12 ) }
    dend_27 { pt3dadd( 12.9287, 153.628, 51.3669, 0.12 ) }
    dend_27 { pt3dadd( 13.0887, 155.287, 52.0284, 0.48 ) }
    dend_27 { pt3dadd( 13.125, 156.084, 52.3819, 0.12 ) }
    dend_27 { pt3dadd( 12.9783, 159.563, 54.1937, 0.12 ) }
    dend_27 { pt3dadd( 12.9222, 160.45, 54.7185, 0.84 ) }
    dend_27 { pt3dadd( 12.8757, 161.173, 55.2009, 0.12 ) }
    dend_27 { pt3dadd( 12.6975, 164.267, 57.4046, 0.12 ) }
    dend_27 { pt3dadd( 12.4898, 168.851, 60.6885, 0.12 ) }
    dend_27 { pt3dadd( 12.4056, 171.305, 62.4281, 0.12 ) }
    dend_27 { pt3dadd( 12.3252, 173.906, 64.174, 0.84 ) }
    dend_27 { pt3dadd( 12.271, 175.748, 65.3671, 0.12 ) }
    dend_27 { pt3dadd( 12.1703, 179.969, 67.9897, 0.12 ) }
    dend_27 { pt3dadd( 12.1619, 180.683, 68.4179, 0.6 ) }
    dend_27 { pt3dadd( 12.1831, 181.845, 69.0271, 0.12 ) }
    dend_27 { pt3dadd( 12.1791, 188.27, 72.0712, 0.12 ) }
    dend_27 { pt3dadd( 12.1246, 189.211, 72.4691, 0.72 ) }
    dend_27 { pt3dadd( 12.0905, 189.75, 72.7011, 0.12 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 80/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 10.9809, 140.042, 46.4967, 0.12 ) }
    dend_22 { pt3dadd( 10.7532, 141.148, 48.8519, 0.12 ) }
    dend_22 { pt3dadd( 10.6805, 141.502, 49.6048, 0.48 ) }
    dend_22 { pt3dadd( 10.3765, 142.979, 52.7495, 0.12 ) }
    dend_22 { pt3dadd( 10.3037, 143.332, 53.5023, 0.48 ) }
    dend_22 { pt3dadd( 9.72425, 147.1, 60.7155, 0.48 ) }
    dend_22 { pt3dadd( 9.77666, 150.868, 67.9508, 0.48 ) }
    dend_22 { pt3dadd( 9.52021, 154.673, 75.1632, 0.48 ) }
    dend_22 { pt3dadd( 9.71018, 158.005, 82.6076, 0.48 ) }
    dend_22 { pt3dadd( 10.5517, 161.726, 89.8189, 0.48 ) }
    dend_22 { pt3dadd( 11.5631, 164.93, 97.253, 0.48 ) }
    dend_22 { pt3dadd( 12.8633, 169.092, 104.148, 0.48 ) }
    dend_22 { pt3dadd( 15.7367, 172.725, 110.864, 0.48 ) }
    dend_22 { pt3dadd( 19.6246, 177.032, 116.599, 0.48 ) }
    dend_22 { pt3dadd( 24.9771, 179.908, 122.043, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.9436, -216.452, -58.9799, 0.12 ) }
    dend_8 { pt3dadd( -15.0163, -218.777, -61.1586, 0.12 ) }
    dend_8 { pt3dadd( -14.8884, -222.384, -64.7493, 0.48 ) }
    dend_8 { pt3dadd( -14.7723, -224.298, -66.6975, 0.12 ) }
    dend_8 { pt3dadd( -14.6672, -225.801, -68.205, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_8 { pt3dadd( -14.4719, -228.592, -71.0062, 0.96 ) }
    dend_8 { pt3dadd( -14.154, -233.137, -75.5663, 0.12 ) }
    dend_8 { pt3dadd( -13.7681, -235.344, -77.6599, 0.12 ) }
    dend_8 { pt3dadd( -13.7681, -235.344, -77.6599, 0.48 ) }
    dend_8 { pt3dadd( -13.5644, -236.111, -78.4262, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 5/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.9436, -216.452, -58.9799, 0.12 ) }
    dend_7 { pt3dadd( -15.7945, -218.567, -61.3539, 0.12 ) }
    dend_7 { pt3dadd( -16.0923, -219.307, -62.1849, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 8/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 48.3372, -134.57, -122.438, 0.12 ) }
    dend_42 { pt3dadd( 52.9919, -141.12, -131.285, 0.12 ) }
    dend_42 { pt3dadd( 57.5744, -148.442, -139.544, 0.12 ) }
    dend_42 { pt3dadd( 61.1242, -156.333, -147.789, 0.12 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 12/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 48.3372, -134.57, -122.438, 0.24 ) }
    dend_41 { pt3dadd( 50.9984, -139.346, -129.488, 0.12 ) }
    dend_41 { pt3dadd( 51.4663, -143.864, -137.167, 0.12 ) }
    dend_41 { pt3dadd( 51.5997, -149.293, -144.246, 0.12 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -38.4991, -184.563, -22.0029, 0.12 ) }
    dend_37 { pt3dadd( -40.8098, -193.589, -22.6681, 0.12 ) }
    dend_37 { pt3dadd( -44.2485, -202.261, -23.1034, 0.12 ) }
    dend_37 { pt3dadd( -47.0758, -211.161, -22.9156, 0.12 ) }
    dend_37 { pt3dadd( -49.7157, -220.057, -23.9763, 0.12 ) }
    dend_37 { pt3dadd( -51.3561, -229.165, -25.2373, 0.12 ) }
    dend_37 { pt3dadd( -52.5845, -238.375, -26.1876, 0.12 ) }
    dend_37 { pt3dadd( -55.3216, -247.023, -28.4142, 0.12 ) }
    dend_37 { pt3dadd( -58.4698, -255.412, -31.0493, 0.12 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -38.4991, -184.563, -22.0029, 0.24 ) }
    dend_36 { pt3dadd( -39.8259, -193.174, -22.5828, 0.12 ) }
    dend_36 { pt3dadd( -40.6106, -201.832, -21.7636, 0.12 ) }
    dend_36 { pt3dadd( -40.2148, -210.511, -20.8983, 0.12 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 29/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 12.0905, 189.75, 72.7011, 0.12 ) }
    dend_29 { pt3dadd( 14.8519, 194.035, 73.9805, 0.12 ) }
    dend_29 { pt3dadd( 17.1837, 197.918, 75.0674, 0.12 ) }
    dend_29 { pt3dadd( 18.2912, 199.763, 75.5837, 0.48 ) }
    dend_29 { pt3dadd( 19.0494, 201.026, 75.9371, 0.12 ) }
    dend_29 { pt3dadd( 22.3312, 206.492, 77.4669, 0.12 ) }
    dend_29 { pt3dadd( 23.4228, 208.31, 77.9757, 0.48 ) }
    dend_29 { pt3dadd( 24.5563, 210.016, 78.3679, 0.12 ) }
    dend_29 { pt3dadd( 31.5201, 218.263, 80.0395, 0.12 ) }
    dend_29 { pt3dadd( 39.1175, 226.087, 79.4297, 0.12 ) }
    dend_29 { pt3dadd( 46.4206, 234.206, 79.6443, 0.12 ) }
    dend_29 { pt3dadd( 54.5017, 241.39, 81.1896, 0.12 ) }
    dend_29 { pt3dadd( 61.3782, 249.86, 81.718, 0.12 ) }
    dend_29 { pt3dadd( 67.2347, 258.936, 83.3422, 0.12 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 12.0905, 189.75, 72.7011, 0.12 ) }
    dend_28 { pt3dadd( 11.223, 193.447, 75.6655, 0.12 ) }
    dend_28 { pt3dadd( 11.0034, 194.383, 76.4159, 0.84 ) }
    dend_28 { pt3dadd( 10.8655, 194.971, 76.8873, 0.12 ) }
    dend_28 { pt3dadd( 7.27414, 201.814, 83.4586, 0.12 ) }
    dend_28 { pt3dadd( 4.78999, 207.912, 91.1749, 0.12 ) }
    dend_28 { pt3dadd( 2.36069, 213.754, 99.1049, 0.12 ) }
    dend_28 { pt3dadd( 1.25331, 220.469, 106.627, 0.12 ) }
    dend_28 { pt3dadd( 1.92646, 227.424, 113.98, 0.12 ) }
    dend_28 { pt3dadd( 3.8628, 233.964, 121.49, 0.12 ) }
    dend_28 { pt3dadd( 5.02181, 242.088, 127.453, 0.12 ) }
    dend_28 { pt3dadd( 7.10309, 249.258, 134.32, 0.12 ) }
    dend_28 { pt3dadd( 8.56987, 254.463, 142.903, 0.12 ) }
    dend_28 { pt3dadd( 10.8987, 259.594, 151.338, 0.12 ) }
    dend_28 { pt3dadd( 12.3402, 264.454, 160.125, 0.12 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 24.9771, 179.908, 122.043, 0.12 ) }
    dend_24 { pt3dadd( 25.7244, 179.035, 130.451, 0.12 ) }
    dend_24 { pt3dadd( 26.0391, 177.111, 138.712, 0.12 ) }
    dend_24 { pt3dadd( 27.7548, 175.705, 146.903, 0.12 ) }
    dend_24 { pt3dadd( 29.0334, 175.461, 155.29, 0.12 ) }
    dend_24 { pt3dadd( 29.5901, 173.886, 163.611, 0.12 ) }
    dend_24 { pt3dadd( 30.1318, 173.301, 172.061, 0.12 ) }
    dend_24 { pt3dadd( 30.8044, 171.425, 180.31, 0.12 ) }
    dend_24 { pt3dadd( 29.7037, 170.918, 188.711, 0.12 ) }
    dend_24 { pt3dadd( 26.5398, 171.658, 196.551, 0.12 ) }
    dend_24 { pt3dadd( 23.1982, 173.109, 204.216, 0.12 ) }
    dend_24 { pt3dadd( 20.5072, 173.523, 212.255, 0.12 ) }
    dend_24 { pt3dadd( 17.8294, 173.912, 220.299, 0.12 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 71/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.9771, 179.908, 122.043, 0.12 ) }
    dend_23 { pt3dadd( 27.7379, 186.365, 124.771, 0.12 ) }
    dend_23 { pt3dadd( 31.2639, 192.703, 126.811, 0.12 ) }
    dend_23 { pt3dadd( 34.4832, 198.91, 129.615, 0.12 ) }
    dend_23 { pt3dadd( 35.9853, 205.864, 132.094, 0.12 ) }
    dend_23 { pt3dadd( 38.0835, 212.227, 135.539, 0.12 ) }
    dend_23 { pt3dadd( 41.0489, 218.154, 139.12, 0.12 ) }
    dend_23 { pt3dadd( 43.9202, 223.662, 143.384, 0.12 ) }
    dend_23 { pt3dadd( 45.2133, 229.868, 147.454, 0.12 ) }
    dend_23 { pt3dadd( 44.8685, 236.515, 150.984, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.5644, -236.111, -78.4262, 0.12 ) }
    dend_10 { pt3dadd( -13.2929, -236.961, -79.4197, 0.12 ) }
    dend_10 { pt3dadd( -13.0928, -237.474, -80.2875, 0.96 ) }
    dend_10 { pt3dadd( -12.7477, -238.36, -82.2965, 0.12 ) }
    dend_10 { pt3dadd( -12.5742, -238.83, -83.6035, 0.12 ) }
    dend_10 { pt3dadd( -12.4429, -239.069, -84.6201, 0.96 ) }
    dend_10 { pt3dadd( -12.3812, -239.161, -85.1995, 0.96 ) }
    dend_10 { pt3dadd( -12.202, -239.221, -87.6916, 0.12 ) }
    dend_10 { pt3dadd( -12.1489, -239.121, -88.8084, 0.12 ) }
    dend_10 { pt3dadd( -12.1393, -239.056, -89.1227, 0.84 ) }
    dend_10 { pt3dadd( -12.1623, -238.301, -91.8094, 0.12 ) }
    dend_10 { pt3dadd( -12.2055, -238.063, -92.5854, 0.12 ) }
    dend_10 { pt3dadd( -12.2318, -237.974, -92.8823, 0.72 ) }
    dend_10 { pt3dadd( -12.3152, -237.826, -93.4695, 0.72 ) }
    dend_10 { pt3dadd( -12.393, -237.636, -94.203, 0.12 ) }
    dend_10 { pt3dadd( -12.5123, -237.3, -95.2343, 0.12 ) }
    dend_10 { pt3dadd( -12.518, -237.227, -95.4385, 0.6 ) }
    dend_10 { pt3dadd( -12.4462, -237.063, -96.0344, 0.6 ) }
    dend_10 { pt3dadd( -11.8789, -236.867, -98.0007, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_10 { pt3dadd( -11.4509, -236.879, -99.1537, 0.12 ) }
    dend_10 { pt3dadd( -11.3599, -236.89, -99.3864, 0.84 ) }
    dend_10 { pt3dadd( -10.5786, -237.066, -101.357, 0.12 ) }
    dend_10 { pt3dadd( -10.2293, -237.201, -102.225, 0.72 ) }
    dend_10 { pt3dadd( -8.50609, -238.223, -106.569, 0.12 ) }
    dend_10 { pt3dadd( -7.59349, -239.018, -109.009, 0.12 ) }
    dend_10 { pt3dadd( -7.40776, -239.229, -109.566, 0.72 ) }
    dend_10 { pt3dadd( -7.19678, -239.524, -110.348, 0.72 ) }
    dend_10 { pt3dadd( -6.7117, -240.376, -112.462, 0.12 ) }
    dend_10 { pt3dadd( -6.55789, -240.71, -113.303, 0.48 ) }
    dend_10 { pt3dadd( -6.52604, -240.925, -113.713, 0.12 ) }
    dend_10 { pt3dadd( -6.50027, -241.711, -115.204, 0.12 ) }
    dend_10 { pt3dadd( -6.38945, -242.601, -117.167, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.5644, -236.111, -78.4262, 0.12 ) }
    dend_9 { pt3dadd( -14.0957, -237.476, -79.1996, 0.12 ) }
    dend_9 { pt3dadd( -14.8673, -239.565, -80.4413, 0.48 ) }
    dend_9 { pt3dadd( -15.937, -242.662, -82.2577, 0.12 ) }
    dend_9 { pt3dadd( -16.1091, -243.16, -82.5429, 0.48 ) }
    dend_9 { pt3dadd( -16.8303, -245.139, -83.6472, 0.12 ) }
    dend_9 { pt3dadd( -17.7568, -247.452, -85.0907, 0.12 ) }
    dend_9 { pt3dadd( -18.3207, -248.784, -86.0243, 0.48 ) }
    dend_9 { pt3dadd( -18.5784, -249.332, -86.4407, 0.24 ) }
    dend_9 { pt3dadd( -18.9032, -249.966, -86.8737, 0.24 ) }
    dend_9 { pt3dadd( -19.339, -250.75, -87.3951, 0.6 ) }
    dend_9 { pt3dadd( -21.0193, -253.415, -89.027, 0.12 ) }
    dend_9 { pt3dadd( -21.9467, -254.693, -89.9829, 0.12 ) }
    dend_9 { pt3dadd( -22.2315, -255.047, -90.2665, 0.6 ) }
    dend_9 { pt3dadd( -22.6108, -255.493, -90.6501, 0.6 ) }
    dend_9 { pt3dadd( -23.0344, -255.966, -91.1254, 0.12 ) }
    dend_9 { pt3dadd( -23.7346, -256.623, -91.8961, 0.12 ) }
    dend_9 { pt3dadd( -25.3212, -257.532, -93.6866, 0.12 ) }
    dend_9 { pt3dadd( -25.4031, -257.569, -93.7863, 0.72 ) }
    dend_9 { pt3dadd( -25.7626, -257.709, -94.2505, 0.72 ) }
    dend_9 { pt3dadd( -27.1676, -258.133, -96.1636, 0.12 ) }
    dend_9 { pt3dadd( -27.9291, -258.287, -97.2534, 0.12 ) }
    dend_9 { pt3dadd( -29.7407, -258.456, -99.9408, 0.12 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -58.4698, -255.412, -31.0493, 0.12 ) }
    dend_39 { pt3dadd( -60.6145, -263.219, -31.8607, 0.12 ) }
    dend_39 { pt3dadd( -63.8019, -270.702, -31.6411, 0.12 ) }
    dend_39 { pt3dadd( -67.1101, -277.882, -29.7161, 0.12 ) }
    dend_39 { pt3dadd( -69.7807, -285.002, -26.8231, 0.12 ) }
    dend_39 { pt3dadd( -71.3988, -292.215, -23.4232, 0.12 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -58.4698, -255.412, -31.0493, 0.24 ) }
    dend_38 { pt3dadd( -61.6583, -266.648, -32.4485, 0.12 ) }
    dend_38 { pt3dadd( -63.1903, -278.246, -33.6813, 0.12 ) }
    dend_38 { pt3dadd( -66.3434, -289.452, -35.3668, 0.12 ) }
    dend_38 { pt3dadd( -71.7299, -299.885, -36.0734, 0.12 ) }
    dend_38 { pt3dadd( -76.7327, -310.493, -36.9859, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 48/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 17.8294, 173.912, 220.299, 0.12 ) }
    dend_26 { pt3dadd( 16.3522, 173.351, 229.961, 0.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 50/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.8294, 173.912, 220.299, 0.24 ) }
    dend_25 { pt3dadd( 16.6381, 173.337, 231.401, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_73, dend_72, dend_61, dend_56, dend_47, dend_30, dend_13, dend_0, dend_77, dend_74, dend_67, dend_62, dend_60, dend_57, dend_53, dend_48, dend_32, dend_31, dend_17, dend_14, dend_12, dend_1, dend_76, dend_75, dend_71, dend_68, dend_64, dend_63, dend_59, dend_58, dend_55, dend_54, dend_50, dend_49, dend_44, dend_33, dend_19, dend_18, dend_16, dend_15, dend_5, dend_2, dend_70, dend_69, dend_66, dend_65, dend_52, dend_51, dend_46, dend_45, dend_43, dend_34, dend_21, dend_20, dend_11, dend_6, dend_4, dend_3, dend_40, dend_35, dend_27, dend_22, dend_8, dend_7, dend_42, dend_41, dend_37, dend_36, dend_29, dend_28, dend_24, dend_23, dend_10, dend_9, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_72 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_77 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_74 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_62 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_60 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_32 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_14 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_76 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_68 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_64 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_63 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_59 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_58 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_50 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_2 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_65 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_51 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_43 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_3 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_40 OneSecGrp_SectionRef_62.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_22 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_37 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_28 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_24 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_23 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_10 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_39 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_38 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_47 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_13 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_57 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_75 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_44 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_7 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_8 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_9 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_66 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_36 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_41 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_42 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_69 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_70 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_72 nseg = 19
    dend_77 nseg = 13
    dend_74 nseg = 3
    dend_67 nseg = 13
    dend_62 nseg = 3
    dend_60 nseg = 11
    dend_48 nseg = 11
    dend_32 nseg = 3
    dend_31 nseg = 15
    dend_17 nseg = 3
    dend_14 nseg = 5
    dend_12 nseg = 15
    dend_76 nseg = 13
    dend_68 nseg = 7
    dend_64 nseg = 11
    dend_63 nseg = 5
    dend_59 nseg = 7
    dend_58 nseg = 11
    dend_55 nseg = 3
    dend_54 nseg = 13
    dend_50 nseg = 5
    dend_49 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_2 nseg = 3
    dend_65 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 17
    dend_43 nseg = 17
    dend_20 nseg = 9
    dend_11 nseg = 7
    dend_6 nseg = 7
    dend_4 nseg = 25
    dend_3 nseg = 13
    dend_40 nseg = 7
    dend_35 nseg = 7
    dend_27 nseg = 3
    dend_22 nseg = 5
    dend_37 nseg = 3
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_24 nseg = 5
    dend_23 nseg = 3
    dend_10 nseg = 3
    dend_39 nseg = 3
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_LBC_0ffcc91920_0_0


