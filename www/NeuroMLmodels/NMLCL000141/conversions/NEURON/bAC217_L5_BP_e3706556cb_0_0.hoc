// Cell: bAC217_L5_BP_e3706556cb_0_0
/*
{
  "id" : "bAC217_L5_BP_e3706556cb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.37774, 2.40803, 0.83", "-3.09965, 8.50051, 2.84464, 0.83", "-5.96224, 10.7747, 3.27636, 1.11", "-7.65004, 12.1147, 3.50093, 0.83", "-9.2898, 13.4053, 3.70214, 0.83", "-10.2607, 14.1412, 3.8124, 1.11", "-13.301, 16.4408, 4.16578, 1.11", "-18.7389, 20.3778, 4.79046, 0.83", "-20.6979, 21.7421, 4.99674, 0.83", "-22.2493, 22.7904, 5.12487, 0.83", "-23.7621, 23.8293, 5.23578, 0.83", "-24.9936, 24.6855, 5.29562, 0.55", "-25.9193, 25.2653, 5.35636, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.57824, -5.68197, 0.55", "4.5801, 6.3825, -6.21816, 0.55", "7.22185, 6.96825, -6.80811, 0.55", "8.75475, 7.11612, -7.58873, 0.83", "11.1808, 7.27348, -9.0388, 0.55", "12.352, 7.34944, -9.73878, 1.38", "15.2315, 7.5362, -11.4598, 0.55", "16.4579, 7.47296, -12.281, 0.83", "22.8021, 6.31308, -16.8951, 0.55", "23.4158, 6.15711, -17.4027, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.45401, 2.42803, 1.11", "-0.683627, -10.7094, 3.21687, 1.11", "-0.731018, -14.9953, 4.71586, 1.11", "-0.750318, -16.7407, 5.32635, 0.83", "-0.775961, -19.0597, 6.13742, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.78199, -1.26197, 1.11", "0.819009, 9.27405, -1.35123, 1.11", "0.857985, 10.5891, -1.36035, 1.11", "0.905412, 12.7359, -1.30034, 1.38", "0.90976, 12.8555, -1.29465, 1.38", "1.04752, 14.3369, -1.19765, 0.83", "1.24306, 15.9057, -1.00577, 0.83", "1.58035, 17.6823, -0.562389, 0.83", "1.77709, 18.3586, -0.303382, 0.83", "1.97575, 18.8499, -0.0597643, 1.11", "2.5703, 20.0485, 0.581531, 0.55", "3.2612, 21.3022, 1.34847, 0.83", "4.18712, 22.5955, 2.24056, 0.55", "4.66694, 23.1344, 2.65381, 0.83", "5.33021, 23.8659, 3.28945, 0.55", "6.14296, 24.7968, 4.14014, 0.55", "7.26368, 26.1969, 5.42457, 0.55", "8.49771, 27.7959, 6.84134, 0.55", "9.25576, 28.8355, 7.88156, 0.55", "10.1604, 30.1522, 9.33164, 0.55", "10.345, 30.417, 9.65862, 0.83", "10.8252, 31.1178, 10.5766, 0.55", "11.2365, 31.6645, 11.3018, 0.83", "12.1743, 33.1515, 13.013, 0.55", "12.546, 33.6926, 13.5235, 0.83", "12.9114, 34.0919, 13.8839, 0.55", "13.2842, 34.4357, 14.1716, 0.83", "14.1256, 35.0765, 14.7141, 0.83", "15.2526, 35.946, 15.3224, 0.83", "15.9544, 36.5184, 15.614, 0.55", "16.4885, 37.0124, 15.8383, 0.55", "17.8918, 38.2889, 16.4043, 0.83", "18.8034, 39.1069, 16.7311, 0.55", "20.1956, 40.3048, 17.1685, 0.55", "21.4793, 41.3099, 17.5174, 0.55", "22.6324, 42.1616, 17.7982, 0.55", "24.0992, 43.1597, 18.0859, 0.55", "25.001, 43.6505, 18.234, 0.55", "25.6266, 43.9263, 18.2611, 0.55", "26.4683, 44.1348, 18.2299, 0.55", "27.74, 44.2362, 18.0858, 0.55", "28.5378, 44.1978, 17.9682, 0.55", "29.694, 44.1116, 17.876, 0.55", "31.871, 44.0213, 17.891, 0.55", "33.5631, 44.0331, 18.0212, 0.55", "35.3419, 44.1353, 18.2641, 0.55", "36.4705, 44.2429, 18.5095, 0.55", "39.3745, 44.8041, 19.3376, 0.55", "41.0742, 45.2786, 19.9574, 0.55", "42.3319, 45.7259, 20.5442, 0.55", "43.0905, 46.1359, 20.9293, 0.55", "43.969, 46.7408, 21.3686, 0.55", "45.4719, 47.926, 21.9682, 0.55", "45.8229, 48.2102, 22.0554, 0.55", "46.8391, 48.9698, 22.2382, 0.55", "47.7721, 49.7769, 22.4005, 0.83", "48.2823, 50.2244, 22.4807, 0.55", "49.049, 50.9904, 22.5679, 0.83", "52.9482, 55.1004, 24.1082, 0.83", "56.3616, 59.7902, 25.1431, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-25.9193, 25.2653, 5.35636, 0.55", "-27.9208, 26.4734, 4.25223, 0.55", "-30.0972, 27.7871, 3.0516, 0.55", "-32.7237, 29.3724, 1.60271, 0.55", "-34.8925, 30.6815, 0.406313, 0.83", "-36.7099, 31.7785, -0.596263, 0.55", "-40.0833, 33.8146, -2.45719, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.9193, 25.2653, 5.35636, 0.55", "-28.1681, 25.6756, 5.13107, 0.55", "-30.5554, 26.039, 5.13052, 0.55", "-33.2609, 26.4477, 5.19608, 0.55", "-37.171, 27.0013, 5.65217, 0.55", "-40.4371, 27.3701, 6.26922, 0.55", "-43.859, 27.7046, 7.06474, 0.55", "-47.1573, 27.8019, 8.19758, 0.55", "-49.9886, 27.6031, 9.45628, 0.55", "-53.5064, 27.1039, 11.414, 0.55", "-55.0303, 26.7729, 12.4851, 0.55", "-56.6745, 26.3979, 13.7152, 0.55", "-59.5766, 25.5038, 15.7536, 0.55", "-61.1268, 25.0293, 16.5886, 0.55", "-62.7505, 24.4801, 17.4543, 0.55", "-64.6861, 23.8495, 18.2832, 0.55", "-66.7912, 23.2091, 19.1245, 0.55", "-69.7972, 22.2864, 20.2586, 0.55", "-73.822, 21.3282, 21.4017, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "23.4158, 6.15711, -17.4027, 0.55", "28.3678, 7.67642, -18.4874, 0.55", "31.236, 8.36111, -19.5125, 0.55", "34.0736, 8.90371, -20.5603, 0.55", "36.0162, 9.19459, -21.2722, 0.55", "38.8582, 9.55282, -22.288, 0.55", "44.762, 10.171, -24.5753, 0.55", "51.468, 10.8103, -27.6161, 0.55", "54.7328, 10.9024, -29.3076, 0.55", "56.4851, 10.903, -30.3263, 0.55", "58.407, 10.91, -31.5213, 0.55", "61.8411, 10.8253, -33.6365, 0.55", "63.0923, 10.7182, -34.4428, 0.55", "68.3887, 10.3822, -38.2678, 0.55", "72.1387, 10.1941, -41.2532, 0.55", "74.2964, 10.126, -43.0327, 0.55", "76.4494, 10.0389, -44.8051, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "23.4158, 6.15711, -17.4027, 0.83", "25.2677, 7.14594, -17.3506, 0.83", "26.3252, 7.71572, -17.3673, 0.55", "27.882, 8.60306, -17.5147, 0.83", "28.93, 9.22954, -17.6411, 0.55", "30.3786, 10.129, -17.7905, 0.83", "32.1243, 11.2365, -17.9047, 0.55", "32.9986, 11.7264, -17.9351, 0.55", "34.9932, 12.5701, -17.9008, 0.83", "36.7923, 13.0937, -17.6677, 0.55", "37.799, 13.365, -17.4448, 0.83", "39.3148, 13.7867, -16.952, 0.55", "41.4999, 14.3991, -15.9694, 0.55", "44.5255, 15.0775, -14.4726, 0.55", "47.4065, 15.599, -12.8641, 0.55", "49.6878, 15.9834, -11.5528, 0.55", "53.4505, 16.6323, -9.36971, 0.55", "56.2101, 17.1785, -7.70432, 0.55", "57.8874, 17.6394, -6.62295, 0.55", "60.9992, 18.7959, -4.56669, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.775961, -19.0597, 6.13742, 0.83", "-1.056, -21.5538, 6.05011, 0.83", "-1.32884, -23.9839, 5.96505, 0.83", "-1.63346, -26.697, 5.87008, 0.83", "-1.79253, -28.1137, 5.82049, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.775961, -19.0597, 6.13742, 0.55", "-0.438846, -20.2438, 7.03729, 0.55", "-0.179826, -21.7017, 8.17538, 0.55", "-0.139643, -23.6286, 9.68964, 0.55", "-0.178587, -24.3804, 10.2887, 0.83", "-0.487075, -26.3085, 11.9988, 0.55", "-0.728404, -27.3086, 12.8859, 0.55", "-1.25169, -29.2556, 14.6831, 0.83", "-1.73632, -30.7057, 16.0913, 0.55", "-2.23451, -31.9077, 17.2167, 0.55", "-3.21965, -34.187, 19.2999, 0.55", "-3.99937, -36.0037, 20.9403, 0.55", "-4.5999, -37.4583, 22.2798, 0.55", "-5.14804, -38.9983, 23.6704, 0.28", "-5.32061, -39.6369, 24.2354, 0.55", "-5.59824, -40.8149, 25.2202, 0.28", "-5.74146, -42.6406, 26.5266, 0.55", "-7.68921, -48.7942, 30.9341, 0.55", "-9.89933, -54.4934, 35.7777, 0.55", "-11.997, -59.1709, 41.6131, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-40.0833, 33.8146, -2.45719, 0.55", "-43.0413, 34.3133, -0.498096, 0.55", "-44.2661, 34.4669, 0.496823, 0.83", "-45.6739, 34.5895, 1.87435, 0.55", "-46.7387, 34.6942, 3.03586, 0.83", "-49.5333, 35.0792, 6.03984, 0.55", "-50.5906, 35.2461, 7.18436, 0.28", "-52.3345, 35.5644, 9.25581, 0.55", "-54.676, 36.0061, 12.0212, 0.55", "-56.4647, 36.3323, 14.0291, 0.55", "-58.8641, 36.7583, 16.6261, 0.28", "-59.4975, 36.8654, 17.2166, 0.55", "-60.815, 37.0986, 18.3826, 0.28", "-61.7207, 37.2732, 19.08, 0.55", "-63.5897, 37.597, 20.3324, 0.28", "-64.6933, 37.7142, 21.014, 0.55", "-66.6369, 37.7681, 22.2502, 0.28", "-67.9479, 37.7897, 23.0329, 0.55", "-75.4865, 37.6316, 31.6279, 0.55", "-82.2251, 36.4321, 40.7968, 0.55", "-88.6607, 34.1341, 49.9901, 0.55", "-95.1007, 30.4484, 58.7464, 0.55", "-100.165, 27.3566, 68.5614, 0.55", "-106.115, 24.6444, 77.9743, 0.55", "-112.171, 23.8608, 87.6469, 0.55", "-118.202, 22.1422, 97.2249, 0.55", "-123.994, 21.2262, 107.047, 0.55", "-129.231, 20.1736, 117.166, 0.55", "-133.317, 17.8415, 127.613, 0.55", "-137.493, 16.6042, 138.196, 0.55", "-141.846, 14.1772, 148.515, 0.55", "-144.836, 11.3009, 159.206, 0.55", "-145.87, 9.27936, 170.434, 0.55", "-146.895, 5.06671, 181.08, 0.55", "-146.29, 0.641367, 191.677, 0.55", "-146.273, -3.28309, 202.476, 0.55", "-147.456, -6.35508, 213.465, 0.55", "-151.018, -7.63343, 224.266, 0.55", "-153.59, -10.1961, 235.139, 0.55", "-153.974, -10.7608, 246.558, 0.55", "-156.197, -10.4899, 257.77, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.0833, 33.8146, -2.45719, 0.55", "-42.2462, 34.5895, -4.90517, 0.55", "-43.9405, 35.4441, -7.65915, 0.55", "-45.5351, 36.5374, -10.5955, 0.55", "-46.5337, 37.222, -12.4341, 0.55", "-48.3552, 38.4708, -15.7881, 0.83", "-49.6878, 39.3844, -18.2419, 0.55", "-51.2405, 40.6128, -21.8541, 0.83", "-51.8337, 41.4755, -23.9069, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.822, 21.3282, 21.4017, 0.28", "-74.9317, 19.3278, 20.9481, 0.28", "-75.4629, 18.4709, 20.6818, 0.28", "-76.156, 17.2606, 20.2608, 0.55", "-76.7282, 16.196, 19.8996, 0.28", "-77.5727, 14.5732, 19.3694, 0.55", "-79.9241, 9.80006, 17.8874, 0.28", "-80.6957, 8.13089, 17.2354, 0.55", "-81.8674, 5.56348, 16.1453, 0.28", "-82.543, 4.03027, 15.4244, 0.55", "-83.0103, 2.97461, 14.9024, 0.28", "-83.5427, 1.7626, 14.3131, 0.55", "-85.1556, -2.28681, 12.4439, 0.28", "-85.6632, -3.51004, 11.8357, 0.55", "-86.5512, -5.37268, 10.7142, 0.28", "-87.2785, -6.5605, 9.89295, 0.28", "-87.9266, -7.35151, 9.3148, 0.55", "-90.1728, -9.57002, 7.7541, 0.28", "-91.2138, -10.4676, 7.14119, 0.55", "-93.7605, -12.5054, 5.61619, 0.28", "-96.3047, -14.3046, 4.22078, 0.28", "-99.0687, -16.0144, 2.79799, 0.28", "-100.331, -16.6563, 2.25448, 0.55", "-106.461, -23.9409, -1.62985, 0.55", "-113.229, -31.4111, -3.65788, 0.55", "-119.888, -38.4096, -7.14705, 0.55", "-126.727, -44.7233, -11.4425, 0.55", "-133.661, -50.2509, -16.5413, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-73.822, 21.3282, 21.4017, 0.55", "-74.7752, 21.2436, 21.5672, 0.55", "-77.4521, 21.0299, 22.3846, 0.55", "-78.456, 20.9262, 22.7476, 0.55", "-80.8146, 20.6102, 23.6423, 0.55", "-84.4485, 20.1518, 24.838, 0.55", "-86.3387, 19.9717, 25.4219, 0.28", "-89.2815, 19.6215, 26.2762, 0.55", "-91.4691, 19.31, 26.8339, 0.55", "-92.3928, 19.1723, 27.0718, 0.28", "-97.9335, 18.3426, 28.4915, 0.55", "-100.527, 17.8213, 29.0024, 0.28", "-104.032, 17.0916, 29.4856, 0.28", "-107.061, 16.4972, 29.7213, 0.55", "-118.81, 16.1186, 33.1143, 0.55", "-130.105, 15.5088, 37.7775, 0.55", "-140.684, 13.7078, 43.6667, 0.55", "-150.933, 14.0667, 50.3392, 0.55", "-159.58, 14.1496, 58.994, 0.55", "-166.412, 15.0349, 69.1067, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "76.4494, 10.0389, -44.8051, 0.55", "80.2073, 11.4323, -47.5321, 0.55", "81.3851, 11.8455, -48.4791, 0.55", "82.851, 12.3112, -49.6623, 0.55", "85.5046, 13.1805, -51.9641, 0.55", "88.2533, 13.9983, -54.4659, 0.55", "89.5783, 14.2831, -55.6891, 0.83", "90.6543, 14.4686, -56.7993, 0.55", "91.4457, 14.5658, -57.7306, 0.83", "93.3007, 14.5692, -60.1932, 0.55", "94.8004, 14.4251, -62.2788, 0.55", "96.5244, 14.2183, -64.5915, 0.55", "98.4541, 14.0604, -67.1894, 0.55", "99.7419, 13.9324, -68.976, 0.55", "101.194, 13.7987, -71.042, 0.55", "102.455, 13.7602, -72.9054, 0.55", "103.262, 13.849, -74.1647, 0.55", "104.26, 14.1796, -76.6438, 0.55", "104.79, 14.355, -78.2027, 0.55", "105.204, 14.5489, -80.282, 0.55", "105.723, 14.8035, -83.8167, 0.55", "105.82, 14.8352, -84.6213, 0.28", "107.091, 15.1001, -94.4412, 0.28", "107.548, 15.1826, -97.3234, 0.83", "109.382, 15.2644, -107.613, 0.83", "110.321, 15.1052, -112.453, 0.83", "110.782, 14.9517, -114.441, 0.55", "111.335, 14.7764, -116.388, 0.55", "112.975, 14.2665, -120.057, 0.55", "114.777, 13.7256, -123.313, 0.28", "115.355, 13.4714, -123.576, 0.55", "116.652, 12.8579, -123.652, 0.28", "117.467, 12.5003, -123.562, 0.55", "118.315, 12.0933, -123.398, 0.28", "119.344, 11.6421, -123.139, 0.55", "120.897, 11.1003, -122.89, 0.28", "122.135, 10.6395, -122.742, 0.55", "123.522, 10.2553, -122.659, 0.28", "125.406, 9.79057, -122.708, 0.55", "127.527, 9.35726, -122.874, 0.55", "129.395, 9.0361, -123.135, 0.28", "131.982, 8.65869, -123.628, 0.55", "136.472, 8.27397, -124.91, 0.55", "138.471, 8.27843, -125.679, 0.55", "139.336, 8.34317, -126.088, 0.83", "140.984, 8.5233, -127.009, 0.55", "142.135, 8.71505, -127.703, 0.83", "145.246, 9.32052, -129.581, 0.55", "147.121, 9.5785, -130.813, 0.28", "147.903, 9.61243, -131.261, 0.55", "150.011, 9.4376, -132.316, 0.28", "150.737, 9.29329, -132.658, 0.55", "152.219, 8.82815, -133.16, 0.28", "153.703, 8.1218, -133.453, 0.55", "156.676, 6.35805, -133.551, 0.28", "158.037, 5.43397, -133.464, 0.55", "160.04, 3.90139, -133.259, 0.28", "162.572, 1.94578, -132.9, 0.55", "164.41, 0.548808, -132.602, 0.55", "167.613, -1.78176, -131.998, 0.28", "168.938, -2.63849, -131.843, 0.55", "171.244, -3.89729, -131.796, 0.28", "173.575, -4.91719, -131.859, 0.55", "174.879, -5.27181, -132.028, 0.28", "176.085, -5.40406, -132.225, 0.55", "179.525, -5.48068, -133.031, 0.28", "182.011, -5.35795, -133.594, 0.28", "184.201, -5.09025, -134.068, 0.55", "186.629, -4.69457, -134.687, 0.28", "187.248, -4.56458, -134.813, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "76.4494, 10.0389, -44.8051, 0.55", "76.9969, 7.64287, -47.0389, 0.55", "77.2609, 5.59001, -48.7695, 0.28", "77.5017, 3.67405, -50.182, 0.55", "78.2361, -0.386598, -53.2214, 0.28", "78.2746, -0.634106, -53.4507, 0.55", "78.5149, -1.90822, -54.7691, 0.28", "78.6032, -2.92026, -56.0433, 0.55", "78.6236, -3.94557, -57.5117, 0.28", "78.601, -5.32645, -59.591, 0.55", "78.5422, -8.81009, -64.7326, 0.55", "78.4434, -11.9697, -69.486, 0.55", "78.3336, -14.4931, -73.2889, 0.55", "78.1701, -16.9826, -76.9722, 0.55", "78.1255, -17.6325, -77.8907, 0.28", "78.1024, -18.3418, -78.8031, 0.55", "78.1801, -19.3501, -79.963, 0.28", "78.5331, -21.2042, -81.8583, 0.55", "79.554, -24.8951, -84.8727, 0.55", "80.1231, -26.9194, -86.3048, 0.28", "80.5748, -28.9532, -87.8516, 0.55", "80.9837, -31.7699, -90.1259, 0.28", "81.1561, -34.0256, -92.0146, 0.55", "81.2572, -37.3908, -94.842, 0.28", "81.3902, -40.8973, -97.6523, 0.55", "81.5099, -45.9761, -101.779, 0.28", "81.5095, -48.679, -103.987, 0.55", "81.4598, -51.4275, -106.314, 0.28", "81.3871, -53.8137, -108.524, 0.28", "81.4078, -56.7466, -111.574, 0.55", "81.6399, -59.4891, -114.329, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "60.9992, 18.7959, -4.56669, 0.55", "63.9127, 18.0706, -4.18084, 0.55", "66.0185, 17.4968, -4.11627, 0.55", "70.6112, 16.2318, -4.22709, 0.55", "72.6629, 15.6538, -4.47067, 0.55", "74.9011, 15.0943, -4.84259, 0.55", "77.9009, 14.4387, -5.54765, 0.55", "81.0409, 13.7174, -6.61311, 0.55", "82.6767, 13.3527, -7.36951, 0.55", "85.9764, 12.6991, -9.37573, 0.55", "87.4948, 12.421, -10.3475, 0.55", "91.0401, 11.7148, -12.7344, 0.55", "93.4316, 11.1288, -14.35, 0.55", "95.195, 10.6696, -15.4569, 0.83", "98.0025, 9.81663, -17.2133, 0.55", "100.744, 8.81455, -18.8483, 0.83", "103.062, 7.83136, -20.1697, 0.55", "105.135, 6.96742, -21.2245, 0.55", "106.323, 6.51908, -21.7447, 0.83", "109.107, 5.45249, -22.8037, 0.28", "110.504, 4.96606, -23.2266, 0.28", "111.841, 4.41797, -23.7257, 0.28", "113.29, 3.86832, -24.2641, 0.28", "115.612, 3.04506, -25.1669, 0.28", "116.549, 2.72064, -25.4987, 0.55", "118.805, 1.92583, -26.0591, 0.55", "122.875, 0.413528, -26.8641, 0.55", "124.0, -0.0461674, -27.0419, 0.55", "125.004, -0.499919, -27.1628, 0.83", "127.204, -1.44883, -27.2296, 0.55", "129.117, -2.27571, -27.2555, 0.55", "130.927, -3.05061, -27.2698, 0.55", "132.323, -3.66862, -27.3265, 0.55", "134.514, -4.79014, -27.5593, 0.55", "137.06, -6.32586, -28.0293, 0.55", "140.946, -9.1381, -29.1467, 0.55", "143.032, -11.0003, -29.9738, 0.55", "144.795, -12.9444, -30.8595, 0.28", "145.304, -13.6515, -31.1846, 0.55", "146.376, -15.6093, -32.0522, 0.28", "147.236, -17.7879, -32.9578, 0.55", "147.973, -20.5204, -33.8535, 0.55", "148.481, -22.3334, -34.3609, 0.28", "148.672, -22.9801, -34.511, 0.55", "149.176, -24.5927, -34.8646, 0.28", "149.878, -26.7029, -35.28, 0.55", "151.762, -31.8226, -36.175, 0.55", "152.756, -34.4152, -36.5785, 0.55", "153.684, -36.7959, -36.9296, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "60.9992, 18.7959, -4.56669, 0.55", "63.8287, 18.3343, -2.74694, 0.55", "64.7333, 18.1981, -2.20942, 0.55", "68.0845, 17.5856, -0.390363, 0.55", "71.8344, 16.9531, 1.71478, 0.55", "76.6459, 16.0938, 4.52555, 0.55", "77.9746, 15.8606, 5.29434, 0.55", "80.3503, 15.3647, 6.62262, 0.55", "82.9544, 14.9066, 8.00854, 0.55", "85.9818, 14.494, 9.52335, 0.55", "88.8382, 14.1394, 10.9733, 0.55", "90.4072, 14.033, 11.7258, 0.55", "92.253, 13.9581, 12.6238, 0.55", "94.5395, 13.9388, 13.7188, 0.83", "98.2644, 14.0185, 15.155, 0.55", "100.718, 14.0175, 15.9664, 0.83", "104.106, 13.9067, 16.9346, 0.55", "105.141, 13.8244, 17.1994, 0.55", "108.337, 13.44, 17.9061, 0.55", "114.017, 12.4978, 18.8432, 0.55", "118.153, 11.6183, 19.3626, 0.55", "121.419, 10.7526, 19.7946, 0.55", "124.742, 9.66598, 20.2831, 0.55", "125.439, 9.41827, 20.3828, 0.28", "126.849, 8.86255, 20.5624, 0.83", "132.632, 6.48822, 21.3033, 0.55", "136.674, 4.85704, 21.7484, 0.55", "140.002, 3.57269, 22.2223, 0.55", "141.991, 2.79338, 22.5215, 0.83", "143.56, 2.20089, 22.7675, 0.28", "144.981, 1.66999, 22.9787, 0.55", "156.366, -0.378157, 27.0679, 0.55", "168.128, -3.56566, 28.4425, 0.55", "179.992, -5.50859, 30.8706, 0.55", "190.616, -9.84372, 35.1979, 0.55", "200.399, -15.8694, 39.4993, 0.55", "210.731, -22.5194, 39.9152, 0.55", "220.658, -29.5644, 38.0143, 0.55", "231.791, -34.385, 36.0853, 0.55", "242.829, -39.6403, 34.8717, 0.55", "254.407, -43.4096, 33.3469, 0.55", "266.079, -47.1767, 33.4966, 0.55", "276.855, -53.0759, 33.5845, 0.55", "288.19, -57.3387, 35.5285, 0.55", "299.294, -60.405, 39.7365, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.79253, -28.1137, 5.82049, 1.38", "0.0781879, -30.8654, 4.4183, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.79253, -28.1137, 5.82049, 0.55", "-3.28256, -29.8183, 6.10623, 0.55", "-4.94613, -32.0174, 6.41885, 0.55", "-6.22485, -33.4636, 6.67963, 0.55", "-7.33364, -34.6682, 6.73605, 0.55", "-9.78745, -37.1518, 6.64534, 0.55", "-11.5126, -38.8048, 6.5385, 0.55", "-13.0575, -40.2863, 6.38947, 0.55", "-17.0151, -43.8805, 6.01299, 0.55", "-21.7551, -48.0329, 5.59791, 0.55", "-25.4335, -51.172, 5.21851, 0.55", "-27.7905, -53.2364, 4.94407, 0.55", "-30.4992, -55.7206, 4.6351, 0.55", "-33.9498, -59.3103, 4.27845, 0.55", "-35.9854, -61.8824, 4.10211, 0.55", "-38.4861, -65.6104, 4.07666, 0.55", "-40.4944, -69.1246, 4.12063, 0.55", "-42.5631, -73.5364, 4.18437, 0.55", "-44.5543, -78.7431, 4.30405, 0.55", "-45.6777, -82.7469, 4.4158, 0.55", "-46.081, -84.7497, 4.57267, 0.55", "-46.7088, -89.4769, 5.13679, 0.55", "-47.1992, -93.9068, 5.76133, 0.55", "-47.4122, -98.3888, 6.66529, 0.55", "-47.5342, -100.961, 7.3229, 0.55", "-47.8116, -108.925, 9.62647, 0.55", "-47.8339, -109.511, 9.80663, 0.55", "-47.8896, -113.107, 10.9815, 0.55", "-48.2469, -119.525, 13.2812, 0.55", "-48.4018, -121.668, 13.9308, 0.55", "-48.8285, -125.002, 14.4124, 0.55", "-49.0087, -126.236, 14.3132, 0.55", "-49.5861, -130.408, 13.187, 0.55", "-49.9206, -133.107, 11.8797, 0.55", "-50.5024, -137.395, 8.93129, 0.55", "-51.084, -142.644, 4.89145, 0.28", "-51.2408, -143.939, 3.71908, 0.55", "-51.5046, -145.899, 1.77249, 0.28", "-51.5499, -146.194, 1.46439, 0.55", "-51.7821, -147.811, -0.086012, 0.28", "-51.8738, -148.361, -0.482414, 0.55", "-52.3099, -151.227, -1.99481, 0.28", "-52.4925, -152.2, -2.49043, 0.55", "-53.0249, -155.016, -3.76177, 0.28", "-53.1881, -155.902, -4.15957, 0.55", "-53.7661, -158.962, -5.47918, 0.28", "-54.0261, -160.37, -6.09457, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.997, -59.1709, 41.6131, 0.55", "-17.4677, -68.5994, 48.4516, 0.55", "-24.378, -77.1377, 55.0903, 0.55", "-30.6358, -86.4531, 61.372, 0.55", "-37.0186, -95.8541, 67.3994, 0.55", "-41.6355, -106.451, 73.1527, 0.55", "-46.4201, -116.611, 79.491, 0.55", "-48.6944, -128.513, 84.1288, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.997, -59.1709, 41.6131, 0.55", "-12.1966, -68.1687, 50.2535, 0.55", "-11.5263, -78.5284, 57.2663, 0.55", "-12.791, -89.0895, 63.8961, 0.55", "-14.5216, -100.296, 69.2963, 0.55", "-15.7997, -111.427, 74.9668, 0.55", "-17.1439, -122.102, 81.4047, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-51.8337, 41.4755, -23.9069, 0.83", "-52.2552, 42.2356, -26.9005, 0.83", "-53.2379, 44.2785, -33.7624, 0.55", "-53.5876, 45.2425, -36.5766, 0.83", "-53.8911, 46.3454, -39.4614, 0.55", "-54.07, 47.6367, -42.1543, 0.55", "-54.0901, 48.3548, -43.3853, 0.28", "-54.0702, 48.9326, -44.0217, 0.55", "-53.7057, 51.1059, -45.7175, 0.28", "-53.5012, 52.056, -46.4067, 0.55", "-52.7709, 55.4421, -48.6566, 0.28", "-52.2241, 58.1897, -50.3259, 0.55", "-51.5235, 62.5957, -52.7285, 0.28", "-51.0123, 66.5357, -54.7209, 0.28", "-50.8345, 68.7894, -55.7494, 0.55", "-50.7829, 71.4962, -56.9055, 0.28", "-50.8322, 72.8136, -57.4101, 0.55", "-51.1654, 75.8805, -58.6506, 0.28", "-51.5612, 77.9011, -59.5163, 0.28", "-52.016, 79.8651, -60.4018, 0.28", "-52.2195, 80.8929, -60.8883, 0.55", "-52.8669, 84.9595, -63.0261, 0.28", "-53.5124, 89.7001, -65.6996, 0.55", "-53.7139, 91.3292, -66.6382, 0.55", "-53.9267, 92.9857, -67.5371, 0.55", "-54.5919, 96.5138, -69.4238, 0.55", "-55.2003, 98.8345, -70.6474, 0.28", "-55.5378, 99.7271, -71.0807, 0.55", "-56.5972, 102.202, -72.1431, 0.28", "-57.873, 104.807, -73.3214, 0.55", "-60.1095, 108.546, -75.0061, 0.28", "-61.2298, 110.114, -75.6872, 0.28", "-63.153, 112.241, -76.7132, 0.55", "-65.3552, 114.427, -77.8263, 0.28", "-65.7606, 114.772, -77.9956, 0.55", "-67.2292, 115.877, -78.5135, 0.28", "-72.2759, 119.466, -80.0649, 0.55", "-79.4402, 123.803, -82.1039, 0.28", "-80.8003, 124.499, -82.4982, 0.55", "-84.5673, 126.263, -83.5558, 0.28", "-86.1667, 126.968, -84.0208, 0.28", "-87.5843, 127.524, -84.4561, 0.55", "-91.88, 128.628, -85.7214, 0.28", "-94.8871, 129.217, -86.3876, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-51.8337, 41.4755, -23.9069, 0.55", "-52.0813, 43.1237, -24.6084, 0.55", "-52.228, 44.1273, -24.9282, 0.28", "-52.4278, 44.9108, -24.9565, 0.55", "-52.8867, 46.7103, -25.0216, 0.28", "-53.209, 47.9741, -25.0673, 0.55", "-53.8032, 50.3042, -25.1515, 0.28", "-54.1833, 51.6234, -24.9808, 0.55", "-55.635, 55.1279, -23.4637, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-133.661, -50.2509, -16.5413, 0.55", "-139.287, -57.8567, -18.6861, 0.55", "-143.401, -66.3034, -21.2173, 0.55", "-146.578, -74.3404, -25.6397, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-133.661, -50.2509, -16.5413, 0.55", "-139.261, -55.6035, -21.1734, 0.55", "-144.018, -60.8185, -26.803, 0.55", "-148.426, -66.1191, -32.6406, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-166.412, 15.0349, 69.1067, 0.55", "-173.371, 14.8466, 73.9983, 0.55", "-180.687, 15.8603, 78.2321, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-166.412, 15.0349, 69.1067, 0.55", "-173.348, 14.1585, 71.802, 0.55", "-180.294, 14.5497, 74.5781, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "81.6399, -59.4891, -114.329, 0.28", "88.0482, -62.1917, -125.69, 0.28", "88.6701, -62.5332, -126.714, 0.55", "89.7201, -63.1098, -128.444, 0.28", "90.6042, -63.5952, -129.901, 0.28", "91.7745, -64.2378, -131.828, 0.55", "93.3175, -65.0851, -134.37, 0.55", "95.2203, -66.9613, -135.864, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "81.6399, -59.4891, -114.329, 0.55", "82.2433, -60.5414, -115.775, 0.55", "82.411, -61.0079, -116.419, 0.28", "82.6472, -61.8006, -117.541, 0.55", "83.1676, -63.5469, -120.015, 0.28", "83.5282, -64.7572, -121.729, 0.55", "84.1392, -66.8076, -124.633, 0.28", "84.7996, -69.2636, -128.42, 0.28", "85.043, -70.3839, -130.189, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "153.684, -36.7959, -36.9296, 0.28", "155.284, -39.9567, -38.7671, 0.28", "157.209, -44.3599, -40.9544, 0.28", "158.393, -47.2883, -42.2975, 0.55", "159.129, -48.9813, -42.9838, 0.28", "159.516, -49.8968, -43.348, 0.28", "161.452, -54.374, -45.1898, 0.55", "161.886, -55.4609, -45.5157, 0.28", "162.823, -58.4019, -46.2672, 0.55", "163.626, -60.8901, -46.9821, 0.28", "164.366, -62.9079, -47.584, 0.55", "165.242, -65.2232, -48.3937, 0.55", "166.704, -68.6091, -49.964, 0.55", "167.058, -69.417, -50.3696, 0.55", "168.301, -72.3913, -51.9099, 0.28", "168.772, -73.5743, -52.5629, 0.55", "169.465, -75.1015, -53.398, 0.28", "170.455, -77.1959, -54.654, 0.55", "172.215, -80.1643, -56.98, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "153.684, -36.7959, -36.9296, 0.55", "151.601, -36.2886, -36.9165, 0.55", "149.909, -35.8766, -36.9059, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.0781879, -30.8654, 4.4183, 0.83", "0.153096, -31.059, 4.38202, 0.83", "1.07754, -32.7847, 4.11014, 0.83", "1.86759, -34.2938, 3.77722, 0.55", "2.49789, -35.4977, 3.51162, 0.55", "3.8376, -38.0567, 2.94708, 0.83", "5.46259, -41.1606, 2.26232, 0.55", "6.35999, -42.7876, 1.92569, 0.83", "7.9906, -45.3858, 1.46071, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.0781879, -30.8654, 4.4183, 0.55", "-2.39288, -31.7836, 2.19371, 0.55", "-5.04527, -32.7692, -0.194111, 0.55", "-8.17643, -33.9327, -3.01296, 0.55", "-11.9787, -35.3455, -6.43595, 0.55", "-14.1364, -36.1473, -8.37838, 0.55", "-14.5698, -36.3083, -8.76859, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.1439, -122.102, 81.4047, 0.55", "-17.6066, -131.53, 87.6639, 0.55", "-16.7297, -141.68, 92.6636, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-17.1439, -122.102, 81.4047, 0.55", "-18.1775, -130.491, 85.9863, 0.55", "-19.6461, -138.666, 90.8101, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-55.635, 55.1279, -23.4637, 0.28", "-56.2833, 57.5882, -22.2824, 0.28", "-56.4944, 58.5504, -21.7671, 0.55", "-57.0691, 61.3505, -20.2461, 0.28", "-57.3973, 62.7, -19.5786, 0.55", "-58.3433, 66.3198, -17.846, 0.28", "-59.3049, 69.9989, -16.0851, 0.55", "-60.8866, 75.8886, -13.0356, 0.28", "-61.2226, 77.15, -12.3889, 0.55", "-61.9873, 80.0145, -11.0842, 0.28", "-62.2813, 81.1805, -10.5935, 0.55", "-66.5434, 89.95, -5.03508, 0.55", "-72.4517, 98.9909, -1.85948, 0.55", "-76.7424, 108.665, 1.99767, 0.55", "-79.7525, 119.258, 4.56794, 0.55", "-84.119, 129.362, 7.10114, 0.55", "-88.9565, 138.46, 11.5963, 0.55", "-92.532, 147.267, 17.5581, 0.55", "-94.6074, 155.451, 24.913, 0.55", "-96.8249, 164.091, 31.7014, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-55.635, 55.1279, -23.4637, 0.55", "-57.5382, 55.1666, -21.3945, 0.55", "-58.5285, 55.1455, -20.3022, 0.28", "-59.2654, 55.1297, -19.4893, 0.55", "-59.8796, 55.1166, -18.8118, 0.28", "-60.3098, 55.1074, -18.3373, 0.55", "-61.4961, 55.0821, -17.0288, 0.28", "-62.3361, 54.9319, -16.23, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-146.578, -74.3404, -25.6397, 0.55", "-150.897, -83.0162, -24.9515, 0.55", "-155.162, -91.576, -23.1905, 0.55", "-158.539, -100.692, -22.9219, 0.55", "-162.985, -109.238, -21.6401, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-146.578, -74.3404, -25.6397, 0.55", "-151.291, -79.6045, -32.9365, 0.55", "-155.521, -83.5641, -41.2429, 0.55", "-160.585, -88.6321, -48.4364, 0.55", "-167.586, -92.0362, -54.9011, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-148.426, -66.1191, -32.6406, 0.55", "-154.409, -68.1617, -41.0041, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-148.426, -66.1191, -32.6406, 0.55", "-150.86, -71.8291, -34.9404, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "95.2203, -66.9613, -135.864, 0.28", "98.1467, -69.0481, -137.98, 0.28", "99.506, -70.0174, -138.963, 0.55", "102.099, -71.8659, -140.837, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "95.2203, -66.9613, -135.864, 0.55", "94.9087, -67.1896, -136.973, 0.55", "94.2854, -67.6461, -139.192, 0.28", "94.0823, -67.7948, -139.914, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "85.043, -70.3839, -130.189, 0.28", "85.768, -72.4949, -134.754, 0.28", "86.1269, -73.5401, -137.014, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "85.043, -70.3839, -130.189, 0.55", "83.1464, -70.7508, -129.804, 0.55", "77.8578, -71.7738, -128.728, 0.28", "76.6014, -72.0168, -128.473, 0.55", "73.1645, -72.6816, -127.774, 0.28", "70.9492, -73.1101, -127.323, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.9906, -45.3858, 1.46071, 0.83", "8.01319, -45.6142, 1.41694, 0.83", "8.34718, -48.6085, 0.928743, 0.83", "8.39652, -50.8575, 0.689813, 0.83", "8.27943, -53.0405, 0.667917, 0.83", "8.00833, -55.9578, 0.844981, 0.83", "7.59734, -59.3248, 1.16289, 0.83", "7.1404, -63.0976, 1.70958, 0.83", "6.68591, -66.7732, 2.40378, 0.83", "5.8518, -71.2722, 3.13573, 0.83", "5.36682, -73.3288, 3.35101, 0.83", "5.00297, -74.869, 3.41782, 0.83", "4.24793, -77.8183, 3.48067, 0.83", "3.64254, -80.452, 3.3986, 0.83", "2.69472, -86.0353, 2.62983, 0.83", "2.23931, -89.0638, 1.81899, 0.83", "1.83227, -91.8407, 0.869024, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "7.9906, -45.3858, 1.46071, 0.55", "6.54813, -48.4487, 1.76922, 0.55", "5.49262, -50.6722, 2.16225, 0.55", "4.87473, -52.0964, 2.54939, 0.55", "4.04195, -54.3306, 3.35426, 0.55", "2.54514, -58.7604, 5.21212, 0.55", "1.43586, -62.1152, 6.98449, 0.55", "0.588852, -64.8064, 8.68652, 0.55", "-0.30485, -67.5239, 10.6037, 0.55", "-1.0482, -69.7777, 12.312, 0.28", "-1.64424, -71.6203, 13.9759, 0.55", "-2.7395, -74.9739, 17.477, 0.55", "-3.49036, -77.0272, 19.8567, 0.55", "-3.92513, -78.1769, 21.1804, 0.55", "-4.51534, -79.5302, 22.6811, 0.83", "-6.33852, -83.5401, 26.8706, 0.28", "-6.94568, -84.8669, 28.2211, 0.55", "-7.97889, -87.2645, 30.5713, 0.28", "-8.28916, -88.0039, 31.349, 0.55", "-8.92673, -89.7435, 33.1279, 0.28", "-9.29295, -90.7325, 34.0665, 0.55", "-10.8034, -93.9385, 36.2926, 0.55", "-12.2498, -102.678, 45.3413, 0.55", "-13.0219, -111.029, 54.811, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.5698, -36.3083, -8.76859, 0.55", "-17.5185, -37.1839, -11.2267, 0.55", "-18.3808, -37.376, -11.9158, 0.55", "-20.5422, -37.8586, -13.5709, 0.55", "-25.251, -38.7809, -17.0136, 0.28", "-25.9482, -38.9029, -17.4861, 0.55", "-28.8565, -39.4872, -19.3523, 0.55", "-32.8164, -40.289, -21.5599, 0.55", "-34.3257, -40.5516, -22.3719, 0.28", "-35.6364, -40.6982, -23.0162, 0.28", "-37.8501, -40.9071, -23.8435, 0.55", "-40.5496, -41.0436, -24.9465, 0.28", "-43.0325, -40.9707, -26.0192, 0.55", "-44.9376, -40.7658, -26.8169, 0.55", "-46.2451, -40.5212, -27.4059, 0.55", "-50.0838, -39.6387, -29.2453, 0.55", "-54.0984, -38.4501, -31.1141, 0.55", "-55.7468, -37.872, -31.849, 0.28", "-57.3175, -37.3464, -32.574, 0.55", "-60.5176, -36.4771, -34.0114, 0.28", "-61.596, -36.2139, -34.4846, 0.83", "-63.5975, -35.7003, -35.2412, 0.28", "-65.032, -35.4342, -35.6092, 0.55", "-67.1172, -35.1179, -36.103, 0.28", "-67.9444, -34.9818, -36.2742, 0.55", "-69.472, -34.7576, -36.5133, 0.55", "-71.753, -34.1961, -36.7946, 0.55", "-73.227, -33.7398, -36.8996, 0.28", "-74.3925, -33.2275, -36.8952, 0.55", "-75.7526, -32.4546, -36.8985, 0.28", "-75.9758, -32.3094, -36.9069, 0.55", "-78.078, -30.9197, -37.3393, 0.28", "-79.6214, -29.8798, -37.8119, 0.55", "-81.6804, -28.3742, -38.708, 0.83", "-83.3958, -27.0952, -39.6284, 0.28", "-83.8442, -26.7676, -39.9075, 0.55", "-87.309, -24.303, -42.2271, 0.28", "-87.9226, -23.881, -42.6887, 0.55", "-89.7354, -22.52, -44.1574, 0.28", "-90.2037, -22.1697, -44.5398, 0.55", "-91.3965, -21.2599, -45.4447, 0.28", "-92.2352, -20.6064, -46.0359, 0.55", "-94.0799, -19.1482, -47.0899, 0.28", "-95.1786, -18.3584, -47.6738, 0.55", "-97.5252, -16.8168, -48.7971, 0.28", "-98.2269, -16.3952, -49.1204, 0.55", "-99.3316, -15.817, -49.5874, 0.28", "-100.262, -15.33, -49.9395, 0.55", "-102.186, -14.3447, -50.5589, 0.28", "-102.765, -14.0608, -50.7269, 0.55", "-107.033, -11.8705, -51.7832, 0.28", "-108.503, -10.9983, -52.0285, 0.55", "-111.089, -9.31671, -52.302, 0.28", "-112.245, -8.51186, -52.39, 0.55", "-114.875, -6.68747, -52.438, 0.28", "-115.839, -6.06288, -52.4119, 0.55", "-119.329, -4.13174, -52.1198, 0.28", "-120.802, -3.51711, -51.9806, 0.55", "-122.938, -2.99654, -51.7504, 0.55", "-124.254, -2.76151, -51.5759, 0.55", "-126.91, -2.35539, -51.0139, 0.28", "-129.493, -1.98486, -50.2955, 0.28", "-131.631, -1.66882, -49.6338, 0.55", "-134.156, -1.04904, -48.5383, 0.28", "-135.344, -0.575363, -47.8233, 0.55", "-138.032, 1.06941, -45.8209, 0.28", "-139.263, 2.23935, -44.4165, 0.55", "-139.964, 3.161, -43.2874, 0.28", "-140.644, 4.19297, -41.7403, 0.55", "-141.417, 5.53621, -39.6297, 0.28", "-141.72, 6.01176, -38.8348, 0.55", "-143.481, 8.17563, -35.0528, 0.28", "-144.087, 8.86175, -33.7862, 0.55", "-145.515, 10.3888, -30.7128, 0.28", "-146.293, 11.201, -29.0431, 0.55", "-146.936, 11.8667, -27.6724, 0.55", "-147.721, 12.6523, -26.0673, 0.28", "-148.185, 13.0564, -25.3395, 0.55", "-149.796, 14.4976, -23.0365, 0.28", "-150.608, 15.402, -21.8104, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.5698, -36.3083, -8.76859, 0.55", "-14.4381, -36.4254, -9.57098, 0.55", "-14.2731, -36.4545, -10.3749, 0.55", "-14.0102, -36.4241, -11.3656, 0.55", "-13.7555, -36.3365, -12.1629, 0.55", "-11.6604, -35.2413, -17.2509, 0.55", "-11.1846, -34.8622, -18.4069, 0.55", "-10.4962, -34.1762, -20.1332, 0.55", "-10.0107, -33.6496, -21.3592, 0.55", "-9.51007, -33.0693, -22.5383, 0.28", "-8.66011, -32.0793, -24.3015, 0.55", "-7.27077, -30.532, -26.839, 0.28", "-7.19729, -30.4405, -27.0971, 0.55", "-7.15915, -30.1435, -28.9116, 0.28", "-7.3441, -30.0068, -30.1365, 0.55", "-7.6756, -29.9467, -31.445, 0.55", "-8.31379, -29.9614, -33.7894, 0.55", "-9.55614, -30.025, -38.3936, 0.55", "-10.3381, -30.105, -41.4996, 0.55", "-10.5801, -30.1445, -42.5783, 0.55", "-11.9982, -30.3553, -49.7018, 0.55", "-12.2986, -30.3883, -51.6451, 0.55", "-12.3851, -30.4118, -52.7476, 0.55", "-12.3672, -30.5436, -55.3345, 0.55", "-11.9822, -31.1953, -61.5386, 0.55", "-11.8112, -31.4427, -63.205, 0.28", "-11.6445, -31.6294, -64.1457, 0.55", "-11.3746, -31.9647, -65.5351, 0.28", "-11.2243, -32.1622, -66.0968, 0.55", "-10.3888, -33.0248, -67.5999, 0.28", "-9.3758, -34.1457, -68.1398, 0.55", "-8.75802, -34.9331, -68.4146, 0.28", "-8.17026, -35.7912, -68.5824, 0.55", "-7.6489, -36.7143, -68.673, 0.28", "-7.433, -37.1856, -68.7195, 0.55", "-6.92504, -38.4144, -68.7735, 0.28", "-6.81638, -38.7783, -68.8339, 0.55", "-6.23974, -40.862, -69.2837, 0.28", "-5.98867, -41.8255, -69.6143, 0.55", "-5.45987, -43.8838, -70.5574, 0.28", "-5.26382, -44.6422, -70.9927, 0.55", "-4.58006, -47.1355, -72.595, 0.28", "-4.41878, -47.7414, -73.0097, 0.55", "-3.98004, -49.6554, -74.3685, 0.28", "-3.88983, -50.103, -74.6464, 0.55", "-3.68421, -51.2837, -75.3579, 0.28", "-3.58116, -51.9678, -75.8343, 0.55", "-3.47632, -52.6398, -76.3596, 0.55", "-3.26306, -53.9809, -77.3986, 0.28", "-3.09188, -54.8133, -78.1569, 0.55", "-2.44643, -56.9064, -80.6307, 0.28", "-2.18459, -57.5889, -81.6316, 0.55", "-1.98702, -58.024, -82.3169, 0.28", "-1.76951, -58.4235, -83.0075, 0.55", "-1.04523, -59.5493, -85.1186, 0.28", "-0.474795, -60.4233, -86.6874, 0.55", "0.585211, -62.0843, -89.2141, 0.28", "0.922599, -62.6016, -90.007, 0.55", "1.64847, -63.5596, -91.4304, 0.28", "1.91279, -63.8758, -91.8735, 0.55", "2.41717, -64.387, -92.4778, 0.28", "2.89443, -64.8219, -92.9622, 0.55", "4.29364, -65.915, -94.1149, 0.28", "5.92752, -67.0856, -95.4098, 0.28", "6.79624, -67.6332, -96.0006, 0.28", "7.64726, -68.1497, -96.6545, 0.55", "8.89801, -68.8326, -97.6179, 0.28", "9.46269, -69.1264, -98.0336, 0.83", "10.9308, -69.9014, -99.0332, 0.28", "11.5457, -70.2535, -99.5043, 0.55", "14.1577, -71.9235, -101.711, 0.28", "15.3968, -72.7737, -102.932, 0.28", "16.2588, -73.3887, -103.89, 0.55", "16.7188, -73.7591, -104.518, 0.55", "17.8587, -74.7621, -106.311, 0.28", "18.8746, -75.7775, -108.046, 0.55", "19.7919, -76.7528, -109.624, 0.28", "20.5773, -77.653, -111.116, 0.55", "21.2328, -78.3829, -112.344, 0.28", "21.809, -78.9108, -113.306, 0.55", "23.2796, -80.0527, -115.541, 0.28", "24.0523, -80.6317, -116.632, 0.55", "25.2482, -81.5091, -118.213, 0.28", "26.2518, -82.185, -119.479, 0.55", "28.6211, -83.612, -122.453, 0.28", "29.547, -84.1077, -123.748, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.7297, -141.68, 92.6636, 0.55", "-17.3131, -152.498, 97.3523, 0.55", "-17.0839, -164.164, 99.3444, 0.55", "-17.3611, -175.416, 102.958, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-16.7297, -141.68, 92.6636, 0.55", "-16.2341, -149.428, 97.6696, 0.55", "-16.6203, -155.999, 104.102, 0.55", "-16.6117, -161.11, 111.702, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-19.6461, -138.666, 90.8101, 0.55", "-19.5982, -146.97, 95.9556, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-19.6461, -138.666, 90.8101, 0.55", "-21.5927, -148.227, 96.061, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.83227, -91.8407, 0.869024, 0.83", "2.64441, -95.985, 1.22666, 0.83", "3.4667, -99.4949, 1.78452, 0.83", "4.28406, -102.984, 2.33904, 0.83", "5.0603, -106.297, 2.86565, 0.83", "6.25653, -111.403, 3.67719, 0.83", "7.44412, -116.472, 4.48288, 0.83", "8.46057, -119.856, 5.44434, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.83227, -91.8407, 0.869024, 0.55", "2.98575, -93.5596, 0.919821, 0.55", "3.90171, -94.8867, 0.736394, 0.55", "4.54844, -95.861, 0.501481, 0.55", "5.15714, -96.991, 0.0634322, 0.83", "5.78594, -98.2628, -0.598641, 0.55", "6.40098, -99.5068, -1.24623, 0.83", "7.00905, -100.846, -2.08292, 0.55", "7.37007, -101.619, -2.64096, 0.83", "8.45893, -104.102, -4.65739, 0.55", "9.16695, -106.041, -6.38643, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.0219, -111.029, 54.811, 0.55", "-15.3985, -119.896, 62.3717, 0.55", "-18.7974, -127.39, 70.8998, 0.55", "-22.4455, -133.688, 80.2087, 0.55", "-26.5855, -138.47, 90.1476, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.0219, -111.029, 54.811, 0.55", "-14.3348, -116.87, 60.0957, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "8.46057, -119.856, 5.44434, 0.55", "8.35885, -122.862, 5.94102, 0.55", "8.27647, -126.708, 6.70295, 0.55", "8.20847, -130.338, 7.40581, 0.55", "8.15182, -132.915, 7.85905, 0.55", "8.03779, -137.507, 8.58489, 0.55", "8.02892, -150.392, 10.4299, 0.55", "8.19886, -154.752, 10.9413, 0.55", "8.39647, -157.815, 11.1744, 0.55", "8.77012, -161.29, 11.2117, 0.55", "9.1247, -163.957, 11.0139, 0.55", "10.2303, -170.169, 10.4085, 0.55", "10.9272, -174.884, 9.87018, 0.55", "11.4178, -177.988, 9.6339, 0.55", "12.4823, -186.071, 9.36991, 0.55", "13.0616, -191.526, 9.38745, 0.55", "13.6645, -198.591, 9.769, 0.55", "14.1706, -206.66, 10.7818, 0.55", "14.5743, -212.076, 11.8498, 0.55", "14.8428, -215.284, 12.5874, 0.55", "15.0468, -218.241, 13.2367, 0.55", "15.4353, -221.971, 13.9351, 0.55", "16.5412, -230.913, 15.0497, 0.55", "17.1264, -234.362, 15.4206, 0.55", "17.7094, -238.202, 15.7713, 0.55", "18.5564, -243.964, 16.2515, 0.55", "19.0093, -248.397, 16.5681, 0.55", "19.2507, -252.603, 16.7164, 0.55", "19.3247, -256.611, 16.7812, 0.55", "19.3137, -260.528, 16.8648, 0.55", "19.3328, -263.314, 16.9075, 0.55", "19.4574, -267.857, 16.8529, 0.55", "19.7226, -273.278, 16.392, 0.55", "19.9992, -275.894, 16.0242, 0.55", "20.3422, -278.177, 15.5585, 0.55", "21.2813, -282.462, 14.5401, 0.55", "21.8861, -285.171, 13.8143, 0.55", "22.6081, -288.523, 13.0502, 0.55", "22.9709, -290.89, 12.601, 0.55", "23.7063, -297.066, 11.5983, 0.55", "24.0067, -301.719, 11.0909, 0.55", "24.1017, -308.971, 10.7719, 0.55", "24.0561, -313.688, 10.9964, 0.55", "23.9041, -318.655, 11.355, 0.28", "23.7639, -320.658, 11.5486, 0.28", "23.2103, -325.556, 12.3888, 0.28", "22.5066, -330.11, 13.4541, 0.28", "21.7813, -336.184, 15.6274, 0.28", "23.1565, -349.569, 18.3362, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "8.46057, -119.856, 5.44434, 0.55", "9.63021, -120.492, 6.49232, 0.55", "11.9095, -122.084, 8.81664, 0.55", "13.8138, -123.632, 10.9057, 0.28", "15.8087, -125.385, 13.2128, 0.55", "16.8814, -126.507, 14.7976, 0.28", "18.5829, -128.532, 17.7734, 0.55", "19.0823, -129.593, 19.3006, 0.28", "19.2123, -129.981, 19.9225, 0.28", "19.4326, -130.548, 21.0135, 0.55", "20.4681, -132.445, 25.0867, 0.28", "20.9488, -133.192, 26.7806, 0.55", "22.7366, -135.356, 31.5241, 0.28", "23.823, -136.432, 33.976, 0.28", "25.291, -137.801, 36.8948, 0.55", "27.7221, -139.898, 40.9356, 0.28", "28.0915, -140.174, 41.4329, 0.55", "30.0319, -141.514, 43.7264, 0.28", "30.2254, -141.637, 43.9112, 0.55", "31.8852, -143.047, 45.5767, 0.28", "32.6338, -143.809, 46.4176, 0.55", "38.752, -149.51, 53.4395, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-26.5855, -138.47, 90.1476, 0.55", "-26.0774, -143.512, 100.618, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.5855, -138.47, 90.1476, 0.55", "-29.4869, -143.084, 94.4331, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BP_e3706556cb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.37774, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.09965, 8.50051, 2.84464, 0.83 ) }
    dend_43 { pt3dadd( -5.96224, 10.7747, 3.27636, 1.11 ) }
    dend_43 { pt3dadd( -7.65004, 12.1147, 3.50093, 0.83 ) }
    dend_43 { pt3dadd( -9.2898, 13.4053, 3.70214, 0.83 ) }
    dend_43 { pt3dadd( -10.2607, 14.1412, 3.8124, 1.11 ) }
    dend_43 { pt3dadd( -13.301, 16.4408, 4.16578, 1.11 ) }
    dend_43 { pt3dadd( -18.7389, 20.3778, 4.79046, 0.83 ) }
    dend_43 { pt3dadd( -20.6979, 21.7421, 4.99674, 0.83 ) }
    dend_43 { pt3dadd( -22.2493, 22.7904, 5.12487, 0.83 ) }
    dend_43 { pt3dadd( -23.7621, 23.8293, 5.23578, 0.83 ) }
    dend_43 { pt3dadd( -24.9936, 24.6855, 5.29562, 0.55 ) }
    dend_43 { pt3dadd( -25.9193, 25.2653, 5.35636, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.57824, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.5801, 6.3825, -6.21816, 0.55 ) }
    dend_28 { pt3dadd( 7.22185, 6.96825, -6.80811, 0.55 ) }
    dend_28 { pt3dadd( 8.75475, 7.11612, -7.58873, 0.83 ) }
    dend_28 { pt3dadd( 11.1808, 7.27348, -9.0388, 0.55 ) }
    dend_28 { pt3dadd( 12.352, 7.34944, -9.73878, 1.38 ) }
    dend_28 { pt3dadd( 15.2315, 7.5362, -11.4598, 0.55 ) }
    dend_28 { pt3dadd( 16.4579, 7.47296, -12.281, 0.83 ) }
    dend_28 { pt3dadd( 22.8021, 6.31308, -16.8951, 0.55 ) }
    dend_28 { pt3dadd( 23.4158, 6.15711, -17.4027, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.45401, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.683627, -10.7094, 3.21687, 1.11 ) }
    dend_1 { pt3dadd( -0.731018, -14.9953, 4.71586, 1.11 ) }
    dend_1 { pt3dadd( -0.750318, -16.7407, 5.32635, 0.83 ) }
    dend_1 { pt3dadd( -0.775961, -19.0597, 6.13742, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.78199, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.819009, 9.27405, -1.35123, 1.11 ) }
    dend_0 { pt3dadd( 0.857985, 10.5891, -1.36035, 1.11 ) }
    dend_0 { pt3dadd( 0.905412, 12.7359, -1.30034, 1.38 ) }
    dend_0 { pt3dadd( 0.90976, 12.8555, -1.29465, 1.38 ) }
    dend_0 { pt3dadd( 1.04752, 14.3369, -1.19765, 0.83 ) }
    dend_0 { pt3dadd( 1.24306, 15.9057, -1.00577, 0.83 ) }
    dend_0 { pt3dadd( 1.58035, 17.6823, -0.562389, 0.83 ) }
    dend_0 { pt3dadd( 1.77709, 18.3586, -0.303382, 0.83 ) }
    dend_0 { pt3dadd( 1.97575, 18.8499, -0.0597643, 1.11 ) }
    dend_0 { pt3dadd( 2.5703, 20.0485, 0.581531, 0.55 ) }
    dend_0 { pt3dadd( 3.2612, 21.3022, 1.34847, 0.83 ) }
    dend_0 { pt3dadd( 4.18712, 22.5955, 2.24056, 0.55 ) }
    dend_0 { pt3dadd( 4.66694, 23.1344, 2.65381, 0.83 ) }
    dend_0 { pt3dadd( 5.33021, 23.8659, 3.28945, 0.55 ) }
    dend_0 { pt3dadd( 6.14296, 24.7968, 4.14014, 0.55 ) }
    dend_0 { pt3dadd( 7.26368, 26.1969, 5.42457, 0.55 ) }
    dend_0 { pt3dadd( 8.49771, 27.7959, 6.84134, 0.55 ) }
    dend_0 { pt3dadd( 9.25576, 28.8355, 7.88156, 0.55 ) }
    dend_0 { pt3dadd( 10.1604, 30.1522, 9.33164, 0.55 ) }
    dend_0 { pt3dadd( 10.345, 30.417, 9.65862, 0.83 ) }
    dend_0 { pt3dadd( 10.8252, 31.1178, 10.5766, 0.55 ) }
    dend_0 { pt3dadd( 11.2365, 31.6645, 11.3018, 0.83 ) }
    dend_0 { pt3dadd( 12.1743, 33.1515, 13.013, 0.55 ) }
    dend_0 { pt3dadd( 12.546, 33.6926, 13.5235, 0.83 ) }
    dend_0 { pt3dadd( 12.9114, 34.0919, 13.8839, 0.55 ) }
    dend_0 { pt3dadd( 13.2842, 34.4357, 14.1716, 0.83 ) }
    dend_0 { pt3dadd( 14.1256, 35.0765, 14.7141, 0.83 ) }
    dend_0 { pt3dadd( 15.2526, 35.946, 15.3224, 0.83 ) }
    dend_0 { pt3dadd( 15.9544, 36.5184, 15.614, 0.55 ) }
    dend_0 { pt3dadd( 16.4885, 37.0124, 15.8383, 0.55 ) }
    dend_0 { pt3dadd( 17.8918, 38.2889, 16.4043, 0.83 ) }
    dend_0 { pt3dadd( 18.8034, 39.1069, 16.7311, 0.55 ) }
    dend_0 { pt3dadd( 20.1956, 40.3048, 17.1685, 0.55 ) }
    dend_0 { pt3dadd( 21.4793, 41.3099, 17.5174, 0.55 ) }
    dend_0 { pt3dadd( 22.6324, 42.1616, 17.7982, 0.55 ) }
    dend_0 { pt3dadd( 24.0992, 43.1597, 18.0859, 0.55 ) }
    dend_0 { pt3dadd( 25.001, 43.6505, 18.234, 0.55 ) }
    dend_0 { pt3dadd( 25.6266, 43.9263, 18.2611, 0.55 ) }
    dend_0 { pt3dadd( 26.4683, 44.1348, 18.2299, 0.55 ) }
    dend_0 { pt3dadd( 27.74, 44.2362, 18.0858, 0.55 ) }
    dend_0 { pt3dadd( 28.5378, 44.1978, 17.9682, 0.55 ) }
    dend_0 { pt3dadd( 29.694, 44.1116, 17.876, 0.55 ) }
    dend_0 { pt3dadd( 31.871, 44.0213, 17.891, 0.55 ) }
    dend_0 { pt3dadd( 33.5631, 44.0331, 18.0212, 0.55 ) }
    dend_0 { pt3dadd( 35.3419, 44.1353, 18.2641, 0.55 ) }
    dend_0 { pt3dadd( 36.4705, 44.2429, 18.5095, 0.55 ) }
    dend_0 { pt3dadd( 39.3745, 44.8041, 19.3376, 0.55 ) }
    dend_0 { pt3dadd( 41.0742, 45.2786, 19.9574, 0.55 ) }
    dend_0 { pt3dadd( 42.3319, 45.7259, 20.5442, 0.55 ) }
    dend_0 { pt3dadd( 43.0905, 46.1359, 20.9293, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 43.969, 46.7408, 21.3686, 0.55 ) }
    dend_0 { pt3dadd( 45.4719, 47.926, 21.9682, 0.55 ) }
    dend_0 { pt3dadd( 45.8229, 48.2102, 22.0554, 0.55 ) }
    dend_0 { pt3dadd( 46.8391, 48.9698, 22.2382, 0.55 ) }
    dend_0 { pt3dadd( 47.7721, 49.7769, 22.4005, 0.83 ) }
    dend_0 { pt3dadd( 48.2823, 50.2244, 22.4807, 0.55 ) }
    dend_0 { pt3dadd( 49.049, 50.9904, 22.5679, 0.83 ) }
    dend_0 { pt3dadd( 52.9482, 55.1004, 24.1082, 0.83 ) }
    dend_0 { pt3dadd( 56.3616, 59.7902, 25.1431, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -25.9193, 25.2653, 5.35636, 0.55 ) }
    dend_55 { pt3dadd( -27.9208, 26.4734, 4.25223, 0.55 ) }
    dend_55 { pt3dadd( -30.0972, 27.7871, 3.0516, 0.55 ) }
    dend_55 { pt3dadd( -32.7237, 29.3724, 1.60271, 0.55 ) }
    dend_55 { pt3dadd( -34.8925, 30.6815, 0.406313, 0.83 ) }
    dend_55 { pt3dadd( -36.7099, 31.7785, -0.596263, 0.55 ) }
    dend_55 { pt3dadd( -40.0833, 33.8146, -2.45719, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.9193, 25.2653, 5.35636, 0.55 ) }
    dend_44 { pt3dadd( -28.1681, 25.6756, 5.13107, 0.55 ) }
    dend_44 { pt3dadd( -30.5554, 26.039, 5.13052, 0.55 ) }
    dend_44 { pt3dadd( -33.2609, 26.4477, 5.19608, 0.55 ) }
    dend_44 { pt3dadd( -37.171, 27.0013, 5.65217, 0.55 ) }
    dend_44 { pt3dadd( -40.4371, 27.3701, 6.26922, 0.55 ) }
    dend_44 { pt3dadd( -43.859, 27.7046, 7.06474, 0.55 ) }
    dend_44 { pt3dadd( -47.1573, 27.8019, 8.19758, 0.55 ) }
    dend_44 { pt3dadd( -49.9886, 27.6031, 9.45628, 0.55 ) }
    dend_44 { pt3dadd( -53.5064, 27.1039, 11.414, 0.55 ) }
    dend_44 { pt3dadd( -55.0303, 26.7729, 12.4851, 0.55 ) }
    dend_44 { pt3dadd( -56.6745, 26.3979, 13.7152, 0.55 ) }
    dend_44 { pt3dadd( -59.5766, 25.5038, 15.7536, 0.55 ) }
    dend_44 { pt3dadd( -61.1268, 25.0293, 16.5886, 0.55 ) }
    dend_44 { pt3dadd( -62.7505, 24.4801, 17.4543, 0.55 ) }
    dend_44 { pt3dadd( -64.6861, 23.8495, 18.2832, 0.55 ) }
    dend_44 { pt3dadd( -66.7912, 23.2091, 19.1245, 0.55 ) }
    dend_44 { pt3dadd( -69.7972, 22.2864, 20.2586, 0.55 ) }
    dend_44 { pt3dadd( -73.822, 21.3282, 21.4017, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 23.4158, 6.15711, -17.4027, 0.55 ) }
    dend_34 { pt3dadd( 28.3678, 7.67642, -18.4874, 0.55 ) }
    dend_34 { pt3dadd( 31.236, 8.36111, -19.5125, 0.55 ) }
    dend_34 { pt3dadd( 34.0736, 8.90371, -20.5603, 0.55 ) }
    dend_34 { pt3dadd( 36.0162, 9.19459, -21.2722, 0.55 ) }
    dend_34 { pt3dadd( 38.8582, 9.55282, -22.288, 0.55 ) }
    dend_34 { pt3dadd( 44.762, 10.171, -24.5753, 0.55 ) }
    dend_34 { pt3dadd( 51.468, 10.8103, -27.6161, 0.55 ) }
    dend_34 { pt3dadd( 54.7328, 10.9024, -29.3076, 0.55 ) }
    dend_34 { pt3dadd( 56.4851, 10.903, -30.3263, 0.55 ) }
    dend_34 { pt3dadd( 58.407, 10.91, -31.5213, 0.55 ) }
    dend_34 { pt3dadd( 61.8411, 10.8253, -33.6365, 0.55 ) }
    dend_34 { pt3dadd( 63.0923, 10.7182, -34.4428, 0.55 ) }
    dend_34 { pt3dadd( 68.3887, 10.3822, -38.2678, 0.55 ) }
    dend_34 { pt3dadd( 72.1387, 10.1941, -41.2532, 0.55 ) }
    dend_34 { pt3dadd( 74.2964, 10.126, -43.0327, 0.55 ) }
    dend_34 { pt3dadd( 76.4494, 10.0389, -44.8051, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 23.4158, 6.15711, -17.4027, 0.83 ) }
    dend_29 { pt3dadd( 25.2677, 7.14594, -17.3506, 0.83 ) }
    dend_29 { pt3dadd( 26.3252, 7.71572, -17.3673, 0.55 ) }
    dend_29 { pt3dadd( 27.882, 8.60306, -17.5147, 0.83 ) }
    dend_29 { pt3dadd( 28.93, 9.22954, -17.6411, 0.55 ) }
    dend_29 { pt3dadd( 30.3786, 10.129, -17.7905, 0.83 ) }
    dend_29 { pt3dadd( 32.1243, 11.2365, -17.9047, 0.55 ) }
    dend_29 { pt3dadd( 32.9986, 11.7264, -17.9351, 0.55 ) }
    dend_29 { pt3dadd( 34.9932, 12.5701, -17.9008, 0.83 ) }
    dend_29 { pt3dadd( 36.7923, 13.0937, -17.6677, 0.55 ) }
    dend_29 { pt3dadd( 37.799, 13.365, -17.4448, 0.83 ) }
    dend_29 { pt3dadd( 39.3148, 13.7867, -16.952, 0.55 ) }
    dend_29 { pt3dadd( 41.4999, 14.3991, -15.9694, 0.55 ) }
    dend_29 { pt3dadd( 44.5255, 15.0775, -14.4726, 0.55 ) }
    dend_29 { pt3dadd( 47.4065, 15.599, -12.8641, 0.55 ) }
    dend_29 { pt3dadd( 49.6878, 15.9834, -11.5528, 0.55 ) }
    dend_29 { pt3dadd( 53.4505, 16.6323, -9.36971, 0.55 ) }
    dend_29 { pt3dadd( 56.2101, 17.1785, -7.70432, 0.55 ) }
    dend_29 { pt3dadd( 57.8874, 17.6394, -6.62295, 0.55 ) }
    dend_29 { pt3dadd( 60.9992, 18.7959, -4.56669, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.775961, -19.0597, 6.13742, 0.83 ) }
    dend_11 { pt3dadd( -1.056, -21.5538, 6.05011, 0.83 ) }
    dend_11 { pt3dadd( -1.32884, -23.9839, 5.96505, 0.83 ) }
    dend_11 { pt3dadd( -1.63346, -26.697, 5.87008, 0.83 ) }
    dend_11 { pt3dadd( -1.79253, -28.1137, 5.82049, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.775961, -19.0597, 6.13742, 0.55 ) }
    dend_2 { pt3dadd( -0.438846, -20.2438, 7.03729, 0.55 ) }
    dend_2 { pt3dadd( -0.179826, -21.7017, 8.17538, 0.55 ) }
    dend_2 { pt3dadd( -0.139643, -23.6286, 9.68964, 0.55 ) }
    dend_2 { pt3dadd( -0.178587, -24.3804, 10.2887, 0.83 ) }
    dend_2 { pt3dadd( -0.487075, -26.3085, 11.9988, 0.55 ) }
    dend_2 { pt3dadd( -0.728404, -27.3086, 12.8859, 0.55 ) }
    dend_2 { pt3dadd( -1.25169, -29.2556, 14.6831, 0.83 ) }
    dend_2 { pt3dadd( -1.73632, -30.7057, 16.0913, 0.55 ) }
    dend_2 { pt3dadd( -2.23451, -31.9077, 17.2167, 0.55 ) }
    dend_2 { pt3dadd( -3.21965, -34.187, 19.2999, 0.55 ) }
    dend_2 { pt3dadd( -3.99937, -36.0037, 20.9403, 0.55 ) }
    dend_2 { pt3dadd( -4.5999, -37.4583, 22.2798, 0.55 ) }
    dend_2 { pt3dadd( -5.14804, -38.9983, 23.6704, 0.28 ) }
    dend_2 { pt3dadd( -5.32061, -39.6369, 24.2354, 0.55 ) }
    dend_2 { pt3dadd( -5.59824, -40.8149, 25.2202, 0.28 ) }
    dend_2 { pt3dadd( -5.74146, -42.6406, 26.5266, 0.55 ) }
    dend_2 { pt3dadd( -7.68921, -48.7942, 30.9341, 0.55 ) }
    dend_2 { pt3dadd( -9.89933, -54.4934, 35.7777, 0.55 ) }
    dend_2 { pt3dadd( -11.997, -59.1709, 41.6131, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -40.0833, 33.8146, -2.45719, 0.55 ) }
    dend_61 { pt3dadd( -43.0413, 34.3133, -0.498096, 0.55 ) }
    dend_61 { pt3dadd( -44.2661, 34.4669, 0.496823, 0.83 ) }
    dend_61 { pt3dadd( -45.6739, 34.5895, 1.87435, 0.55 ) }
    dend_61 { pt3dadd( -46.7387, 34.6942, 3.03586, 0.83 ) }
    dend_61 { pt3dadd( -49.5333, 35.0792, 6.03984, 0.55 ) }
    dend_61 { pt3dadd( -50.5906, 35.2461, 7.18436, 0.28 ) }
    dend_61 { pt3dadd( -52.3345, 35.5644, 9.25581, 0.55 ) }
    dend_61 { pt3dadd( -54.676, 36.0061, 12.0212, 0.55 ) }
    dend_61 { pt3dadd( -56.4647, 36.3323, 14.0291, 0.55 ) }
    dend_61 { pt3dadd( -58.8641, 36.7583, 16.6261, 0.28 ) }
    dend_61 { pt3dadd( -59.4975, 36.8654, 17.2166, 0.55 ) }
    dend_61 { pt3dadd( -60.815, 37.0986, 18.3826, 0.28 ) }
    dend_61 { pt3dadd( -61.7207, 37.2732, 19.08, 0.55 ) }
    dend_61 { pt3dadd( -63.5897, 37.597, 20.3324, 0.28 ) }
    dend_61 { pt3dadd( -64.6933, 37.7142, 21.014, 0.55 ) }
    dend_61 { pt3dadd( -66.6369, 37.7681, 22.2502, 0.28 ) }
    dend_61 { pt3dadd( -67.9479, 37.7897, 23.0329, 0.55 ) }
    dend_61 { pt3dadd( -75.4865, 37.6316, 31.6279, 0.55 ) }
    dend_61 { pt3dadd( -82.2251, 36.4321, 40.7968, 0.55 ) }
    dend_61 { pt3dadd( -88.6607, 34.1341, 49.9901, 0.55 ) }
    dend_61 { pt3dadd( -95.1007, 30.4484, 58.7464, 0.55 ) }
    dend_61 { pt3dadd( -100.165, 27.3566, 68.5614, 0.55 ) }
    dend_61 { pt3dadd( -106.115, 24.6444, 77.9743, 0.55 ) }
    dend_61 { pt3dadd( -112.171, 23.8608, 87.6469, 0.55 ) }
    dend_61 { pt3dadd( -118.202, 22.1422, 97.2249, 0.55 ) }
    dend_61 { pt3dadd( -123.994, 21.2262, 107.047, 0.55 ) }
    dend_61 { pt3dadd( -129.231, 20.1736, 117.166, 0.55 ) }
    dend_61 { pt3dadd( -133.317, 17.8415, 127.613, 0.55 ) }
    dend_61 { pt3dadd( -137.493, 16.6042, 138.196, 0.55 ) }
    dend_61 { pt3dadd( -141.846, 14.1772, 148.515, 0.55 ) }
    dend_61 { pt3dadd( -144.836, 11.3009, 159.206, 0.55 ) }
    dend_61 { pt3dadd( -145.87, 9.27936, 170.434, 0.55 ) }
    dend_61 { pt3dadd( -146.895, 5.06671, 181.08, 0.55 ) }
    dend_61 { pt3dadd( -146.29, 0.641367, 191.677, 0.55 ) }
    dend_61 { pt3dadd( -146.273, -3.28309, 202.476, 0.55 ) }
    dend_61 { pt3dadd( -147.456, -6.35508, 213.465, 0.55 ) }
    dend_61 { pt3dadd( -151.018, -7.63343, 224.266, 0.55 ) }
    dend_61 { pt3dadd( -153.59, -10.1961, 235.139, 0.55 ) }
    dend_61 { pt3dadd( -153.974, -10.7608, 246.558, 0.55 ) }
    dend_61 { pt3dadd( -156.197, -10.4899, 257.77, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.0833, 33.8146, -2.45719, 0.55 ) }
    dend_56 { pt3dadd( -42.2462, 34.5895, -4.90517, 0.55 ) }
    dend_56 { pt3dadd( -43.9405, 35.4441, -7.65915, 0.55 ) }
    dend_56 { pt3dadd( -45.5351, 36.5374, -10.5955, 0.55 ) }
    dend_56 { pt3dadd( -46.5337, 37.222, -12.4341, 0.55 ) }
    dend_56 { pt3dadd( -48.3552, 38.4708, -15.7881, 0.83 ) }
    dend_56 { pt3dadd( -49.6878, 39.3844, -18.2419, 0.55 ) }
    dend_56 { pt3dadd( -51.2405, 40.6128, -21.8541, 0.83 ) }
    dend_56 { pt3dadd( -51.8337, 41.4755, -23.9069, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.822, 21.3282, 21.4017, 0.28 ) }
    dend_48 { pt3dadd( -74.9317, 19.3278, 20.9481, 0.28 ) }
    dend_48 { pt3dadd( -75.4629, 18.4709, 20.6818, 0.28 ) }
    dend_48 { pt3dadd( -76.156, 17.2606, 20.2608, 0.55 ) }
    dend_48 { pt3dadd( -76.7282, 16.196, 19.8996, 0.28 ) }
    dend_48 { pt3dadd( -77.5727, 14.5732, 19.3694, 0.55 ) }
    dend_48 { pt3dadd( -79.9241, 9.80006, 17.8874, 0.28 ) }
    dend_48 { pt3dadd( -80.6957, 8.13089, 17.2354, 0.55 ) }
    dend_48 { pt3dadd( -81.8674, 5.56348, 16.1453, 0.28 ) }
    dend_48 { pt3dadd( -82.543, 4.03027, 15.4244, 0.55 ) }
    dend_48 { pt3dadd( -83.0103, 2.97461, 14.9024, 0.28 ) }
    dend_48 { pt3dadd( -83.5427, 1.7626, 14.3131, 0.55 ) }
    dend_48 { pt3dadd( -85.1556, -2.28681, 12.4439, 0.28 ) }
    dend_48 { pt3dadd( -85.6632, -3.51004, 11.8357, 0.55 ) }
    dend_48 { pt3dadd( -86.5512, -5.37268, 10.7142, 0.28 ) }
    dend_48 { pt3dadd( -87.2785, -6.5605, 9.89295, 0.28 ) }
    dend_48 { pt3dadd( -87.9266, -7.35151, 9.3148, 0.55 ) }
    dend_48 { pt3dadd( -90.1728, -9.57002, 7.7541, 0.28 ) }
    dend_48 { pt3dadd( -91.2138, -10.4676, 7.14119, 0.55 ) }
    dend_48 { pt3dadd( -93.7605, -12.5054, 5.61619, 0.28 ) }
    dend_48 { pt3dadd( -96.3047, -14.3046, 4.22078, 0.28 ) }
    dend_48 { pt3dadd( -99.0687, -16.0144, 2.79799, 0.28 ) }
    dend_48 { pt3dadd( -100.331, -16.6563, 2.25448, 0.55 ) }
    dend_48 { pt3dadd( -106.461, -23.9409, -1.62985, 0.55 ) }
    dend_48 { pt3dadd( -113.229, -31.4111, -3.65788, 0.55 ) }
    dend_48 { pt3dadd( -119.888, -38.4096, -7.14705, 0.55 ) }
    dend_48 { pt3dadd( -126.727, -44.7233, -11.4425, 0.55 ) }
    dend_48 { pt3dadd( -133.661, -50.2509, -16.5413, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -73.822, 21.3282, 21.4017, 0.55 ) }
    dend_45 { pt3dadd( -74.7752, 21.2436, 21.5672, 0.55 ) }
    dend_45 { pt3dadd( -77.4521, 21.0299, 22.3846, 0.55 ) }
    dend_45 { pt3dadd( -78.456, 20.9262, 22.7476, 0.55 ) }
    dend_45 { pt3dadd( -80.8146, 20.6102, 23.6423, 0.55 ) }
    dend_45 { pt3dadd( -84.4485, 20.1518, 24.838, 0.55 ) }
    dend_45 { pt3dadd( -86.3387, 19.9717, 25.4219, 0.28 ) }
    dend_45 { pt3dadd( -89.2815, 19.6215, 26.2762, 0.55 ) }
    dend_45 { pt3dadd( -91.4691, 19.31, 26.8339, 0.55 ) }
    dend_45 { pt3dadd( -92.3928, 19.1723, 27.0718, 0.28 ) }
    dend_45 { pt3dadd( -97.9335, 18.3426, 28.4915, 0.55 ) }
    dend_45 { pt3dadd( -100.527, 17.8213, 29.0024, 0.28 ) }
    dend_45 { pt3dadd( -104.032, 17.0916, 29.4856, 0.28 ) }
    dend_45 { pt3dadd( -107.061, 16.4972, 29.7213, 0.55 ) }
    dend_45 { pt3dadd( -118.81, 16.1186, 33.1143, 0.55 ) }
    dend_45 { pt3dadd( -130.105, 15.5088, 37.7775, 0.55 ) }
    dend_45 { pt3dadd( -140.684, 13.7078, 43.6667, 0.55 ) }
    dend_45 { pt3dadd( -150.933, 14.0667, 50.3392, 0.55 ) }
    dend_45 { pt3dadd( -159.58, 14.1496, 58.994, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -166.412, 15.0349, 69.1067, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 76.4494, 10.0389, -44.8051, 0.55 ) }
    dend_42 { pt3dadd( 80.2073, 11.4323, -47.5321, 0.55 ) }
    dend_42 { pt3dadd( 81.3851, 11.8455, -48.4791, 0.55 ) }
    dend_42 { pt3dadd( 82.851, 12.3112, -49.6623, 0.55 ) }
    dend_42 { pt3dadd( 85.5046, 13.1805, -51.9641, 0.55 ) }
    dend_42 { pt3dadd( 88.2533, 13.9983, -54.4659, 0.55 ) }
    dend_42 { pt3dadd( 89.5783, 14.2831, -55.6891, 0.83 ) }
    dend_42 { pt3dadd( 90.6543, 14.4686, -56.7993, 0.55 ) }
    dend_42 { pt3dadd( 91.4457, 14.5658, -57.7306, 0.83 ) }
    dend_42 { pt3dadd( 93.3007, 14.5692, -60.1932, 0.55 ) }
    dend_42 { pt3dadd( 94.8004, 14.4251, -62.2788, 0.55 ) }
    dend_42 { pt3dadd( 96.5244, 14.2183, -64.5915, 0.55 ) }
    dend_42 { pt3dadd( 98.4541, 14.0604, -67.1894, 0.55 ) }
    dend_42 { pt3dadd( 99.7419, 13.9324, -68.976, 0.55 ) }
    dend_42 { pt3dadd( 101.194, 13.7987, -71.042, 0.55 ) }
    dend_42 { pt3dadd( 102.455, 13.7602, -72.9054, 0.55 ) }
    dend_42 { pt3dadd( 103.262, 13.849, -74.1647, 0.55 ) }
    dend_42 { pt3dadd( 104.26, 14.1796, -76.6438, 0.55 ) }
    dend_42 { pt3dadd( 104.79, 14.355, -78.2027, 0.55 ) }
    dend_42 { pt3dadd( 105.204, 14.5489, -80.282, 0.55 ) }
    dend_42 { pt3dadd( 105.723, 14.8035, -83.8167, 0.55 ) }
    dend_42 { pt3dadd( 105.82, 14.8352, -84.6213, 0.28 ) }
    dend_42 { pt3dadd( 107.091, 15.1001, -94.4412, 0.28 ) }
    dend_42 { pt3dadd( 107.548, 15.1826, -97.3234, 0.83 ) }
    dend_42 { pt3dadd( 109.382, 15.2644, -107.613, 0.83 ) }
    dend_42 { pt3dadd( 110.321, 15.1052, -112.453, 0.83 ) }
    dend_42 { pt3dadd( 110.782, 14.9517, -114.441, 0.55 ) }
    dend_42 { pt3dadd( 111.335, 14.7764, -116.388, 0.55 ) }
    dend_42 { pt3dadd( 112.975, 14.2665, -120.057, 0.55 ) }
    dend_42 { pt3dadd( 114.777, 13.7256, -123.313, 0.28 ) }
    dend_42 { pt3dadd( 115.355, 13.4714, -123.576, 0.55 ) }
    dend_42 { pt3dadd( 116.652, 12.8579, -123.652, 0.28 ) }
    dend_42 { pt3dadd( 117.467, 12.5003, -123.562, 0.55 ) }
    dend_42 { pt3dadd( 118.315, 12.0933, -123.398, 0.28 ) }
    dend_42 { pt3dadd( 119.344, 11.6421, -123.139, 0.55 ) }
    dend_42 { pt3dadd( 120.897, 11.1003, -122.89, 0.28 ) }
    dend_42 { pt3dadd( 122.135, 10.6395, -122.742, 0.55 ) }
    dend_42 { pt3dadd( 123.522, 10.2553, -122.659, 0.28 ) }
    dend_42 { pt3dadd( 125.406, 9.79057, -122.708, 0.55 ) }
    dend_42 { pt3dadd( 127.527, 9.35726, -122.874, 0.55 ) }
    dend_42 { pt3dadd( 129.395, 9.0361, -123.135, 0.28 ) }
    dend_42 { pt3dadd( 131.982, 8.65869, -123.628, 0.55 ) }
    dend_42 { pt3dadd( 136.472, 8.27397, -124.91, 0.55 ) }
    dend_42 { pt3dadd( 138.471, 8.27843, -125.679, 0.55 ) }
    dend_42 { pt3dadd( 139.336, 8.34317, -126.088, 0.83 ) }
    dend_42 { pt3dadd( 140.984, 8.5233, -127.009, 0.55 ) }
    dend_42 { pt3dadd( 142.135, 8.71505, -127.703, 0.83 ) }
    dend_42 { pt3dadd( 145.246, 9.32052, -129.581, 0.55 ) }
    dend_42 { pt3dadd( 147.121, 9.5785, -130.813, 0.28 ) }
    dend_42 { pt3dadd( 147.903, 9.61243, -131.261, 0.55 ) }
    dend_42 { pt3dadd( 150.011, 9.4376, -132.316, 0.28 ) }
    dend_42 { pt3dadd( 150.737, 9.29329, -132.658, 0.55 ) }
    dend_42 { pt3dadd( 152.219, 8.82815, -133.16, 0.28 ) }
    dend_42 { pt3dadd( 153.703, 8.1218, -133.453, 0.55 ) }
    dend_42 { pt3dadd( 156.676, 6.35805, -133.551, 0.28 ) }
    dend_42 { pt3dadd( 158.037, 5.43397, -133.464, 0.55 ) }
    dend_42 { pt3dadd( 160.04, 3.90139, -133.259, 0.28 ) }
    dend_42 { pt3dadd( 162.572, 1.94578, -132.9, 0.55 ) }
    dend_42 { pt3dadd( 164.41, 0.548808, -132.602, 0.55 ) }
    dend_42 { pt3dadd( 167.613, -1.78176, -131.998, 0.28 ) }
    dend_42 { pt3dadd( 168.938, -2.63849, -131.843, 0.55 ) }
    dend_42 { pt3dadd( 171.244, -3.89729, -131.796, 0.28 ) }
    dend_42 { pt3dadd( 173.575, -4.91719, -131.859, 0.55 ) }
    dend_42 { pt3dadd( 174.879, -5.27181, -132.028, 0.28 ) }
    dend_42 { pt3dadd( 176.085, -5.40406, -132.225, 0.55 ) }
    dend_42 { pt3dadd( 179.525, -5.48068, -133.031, 0.28 ) }
    dend_42 { pt3dadd( 182.011, -5.35795, -133.594, 0.28 ) }
    dend_42 { pt3dadd( 184.201, -5.09025, -134.068, 0.55 ) }
    dend_42 { pt3dadd( 186.629, -4.69457, -134.687, 0.28 ) }
    dend_42 { pt3dadd( 187.248, -4.56458, -134.813, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 76.4494, 10.0389, -44.8051, 0.55 ) }
    dend_35 { pt3dadd( 76.9969, 7.64287, -47.0389, 0.55 ) }
    dend_35 { pt3dadd( 77.2609, 5.59001, -48.7695, 0.28 ) }
    dend_35 { pt3dadd( 77.5017, 3.67405, -50.182, 0.55 ) }
    dend_35 { pt3dadd( 78.2361, -0.386598, -53.2214, 0.28 ) }
    dend_35 { pt3dadd( 78.2746, -0.634106, -53.4507, 0.55 ) }
    dend_35 { pt3dadd( 78.5149, -1.90822, -54.7691, 0.28 ) }
    dend_35 { pt3dadd( 78.6032, -2.92026, -56.0433, 0.55 ) }
    dend_35 { pt3dadd( 78.6236, -3.94557, -57.5117, 0.28 ) }
    dend_35 { pt3dadd( 78.601, -5.32645, -59.591, 0.55 ) }
    dend_35 { pt3dadd( 78.5422, -8.81009, -64.7326, 0.55 ) }
    dend_35 { pt3dadd( 78.4434, -11.9697, -69.486, 0.55 ) }
    dend_35 { pt3dadd( 78.3336, -14.4931, -73.2889, 0.55 ) }
    dend_35 { pt3dadd( 78.1701, -16.9826, -76.9722, 0.55 ) }
    dend_35 { pt3dadd( 78.1255, -17.6325, -77.8907, 0.28 ) }
    dend_35 { pt3dadd( 78.1024, -18.3418, -78.8031, 0.55 ) }
    dend_35 { pt3dadd( 78.1801, -19.3501, -79.963, 0.28 ) }
    dend_35 { pt3dadd( 78.5331, -21.2042, -81.8583, 0.55 ) }
    dend_35 { pt3dadd( 79.554, -24.8951, -84.8727, 0.55 ) }
    dend_35 { pt3dadd( 80.1231, -26.9194, -86.3048, 0.28 ) }
    dend_35 { pt3dadd( 80.5748, -28.9532, -87.8516, 0.55 ) }
    dend_35 { pt3dadd( 80.9837, -31.7699, -90.1259, 0.28 ) }
    dend_35 { pt3dadd( 81.1561, -34.0256, -92.0146, 0.55 ) }
    dend_35 { pt3dadd( 81.2572, -37.3908, -94.842, 0.28 ) }
    dend_35 { pt3dadd( 81.3902, -40.8973, -97.6523, 0.55 ) }
    dend_35 { pt3dadd( 81.5099, -45.9761, -101.779, 0.28 ) }
    dend_35 { pt3dadd( 81.5095, -48.679, -103.987, 0.55 ) }
    dend_35 { pt3dadd( 81.4598, -51.4275, -106.314, 0.28 ) }
    dend_35 { pt3dadd( 81.3871, -53.8137, -108.524, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 81.4078, -56.7466, -111.574, 0.55 ) }
    dend_35 { pt3dadd( 81.6399, -59.4891, -114.329, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 60.9992, 18.7959, -4.56669, 0.55 ) }
    dend_31 { pt3dadd( 63.9127, 18.0706, -4.18084, 0.55 ) }
    dend_31 { pt3dadd( 66.0185, 17.4968, -4.11627, 0.55 ) }
    dend_31 { pt3dadd( 70.6112, 16.2318, -4.22709, 0.55 ) }
    dend_31 { pt3dadd( 72.6629, 15.6538, -4.47067, 0.55 ) }
    dend_31 { pt3dadd( 74.9011, 15.0943, -4.84259, 0.55 ) }
    dend_31 { pt3dadd( 77.9009, 14.4387, -5.54765, 0.55 ) }
    dend_31 { pt3dadd( 81.0409, 13.7174, -6.61311, 0.55 ) }
    dend_31 { pt3dadd( 82.6767, 13.3527, -7.36951, 0.55 ) }
    dend_31 { pt3dadd( 85.9764, 12.6991, -9.37573, 0.55 ) }
    dend_31 { pt3dadd( 87.4948, 12.421, -10.3475, 0.55 ) }
    dend_31 { pt3dadd( 91.0401, 11.7148, -12.7344, 0.55 ) }
    dend_31 { pt3dadd( 93.4316, 11.1288, -14.35, 0.55 ) }
    dend_31 { pt3dadd( 95.195, 10.6696, -15.4569, 0.83 ) }
    dend_31 { pt3dadd( 98.0025, 9.81663, -17.2133, 0.55 ) }
    dend_31 { pt3dadd( 100.744, 8.81455, -18.8483, 0.83 ) }
    dend_31 { pt3dadd( 103.062, 7.83136, -20.1697, 0.55 ) }
    dend_31 { pt3dadd( 105.135, 6.96742, -21.2245, 0.55 ) }
    dend_31 { pt3dadd( 106.323, 6.51908, -21.7447, 0.83 ) }
    dend_31 { pt3dadd( 109.107, 5.45249, -22.8037, 0.28 ) }
    dend_31 { pt3dadd( 110.504, 4.96606, -23.2266, 0.28 ) }
    dend_31 { pt3dadd( 111.841, 4.41797, -23.7257, 0.28 ) }
    dend_31 { pt3dadd( 113.29, 3.86832, -24.2641, 0.28 ) }
    dend_31 { pt3dadd( 115.612, 3.04506, -25.1669, 0.28 ) }
    dend_31 { pt3dadd( 116.549, 2.72064, -25.4987, 0.55 ) }
    dend_31 { pt3dadd( 118.805, 1.92583, -26.0591, 0.55 ) }
    dend_31 { pt3dadd( 122.875, 0.413528, -26.8641, 0.55 ) }
    dend_31 { pt3dadd( 124.0, -0.0461674, -27.0419, 0.55 ) }
    dend_31 { pt3dadd( 125.004, -0.499919, -27.1628, 0.83 ) }
    dend_31 { pt3dadd( 127.204, -1.44883, -27.2296, 0.55 ) }
    dend_31 { pt3dadd( 129.117, -2.27571, -27.2555, 0.55 ) }
    dend_31 { pt3dadd( 130.927, -3.05061, -27.2698, 0.55 ) }
    dend_31 { pt3dadd( 132.323, -3.66862, -27.3265, 0.55 ) }
    dend_31 { pt3dadd( 134.514, -4.79014, -27.5593, 0.55 ) }
    dend_31 { pt3dadd( 137.06, -6.32586, -28.0293, 0.55 ) }
    dend_31 { pt3dadd( 140.946, -9.1381, -29.1467, 0.55 ) }
    dend_31 { pt3dadd( 143.032, -11.0003, -29.9738, 0.55 ) }
    dend_31 { pt3dadd( 144.795, -12.9444, -30.8595, 0.28 ) }
    dend_31 { pt3dadd( 145.304, -13.6515, -31.1846, 0.55 ) }
    dend_31 { pt3dadd( 146.376, -15.6093, -32.0522, 0.28 ) }
    dend_31 { pt3dadd( 147.236, -17.7879, -32.9578, 0.55 ) }
    dend_31 { pt3dadd( 147.973, -20.5204, -33.8535, 0.55 ) }
    dend_31 { pt3dadd( 148.481, -22.3334, -34.3609, 0.28 ) }
    dend_31 { pt3dadd( 148.672, -22.9801, -34.511, 0.55 ) }
    dend_31 { pt3dadd( 149.176, -24.5927, -34.8646, 0.28 ) }
    dend_31 { pt3dadd( 149.878, -26.7029, -35.28, 0.55 ) }
    dend_31 { pt3dadd( 151.762, -31.8226, -36.175, 0.55 ) }
    dend_31 { pt3dadd( 152.756, -34.4152, -36.5785, 0.55 ) }
    dend_31 { pt3dadd( 153.684, -36.7959, -36.9296, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 60.9992, 18.7959, -4.56669, 0.55 ) }
    dend_30 { pt3dadd( 63.8287, 18.3343, -2.74694, 0.55 ) }
    dend_30 { pt3dadd( 64.7333, 18.1981, -2.20942, 0.55 ) }
    dend_30 { pt3dadd( 68.0845, 17.5856, -0.390363, 0.55 ) }
    dend_30 { pt3dadd( 71.8344, 16.9531, 1.71478, 0.55 ) }
    dend_30 { pt3dadd( 76.6459, 16.0938, 4.52555, 0.55 ) }
    dend_30 { pt3dadd( 77.9746, 15.8606, 5.29434, 0.55 ) }
    dend_30 { pt3dadd( 80.3503, 15.3647, 6.62262, 0.55 ) }
    dend_30 { pt3dadd( 82.9544, 14.9066, 8.00854, 0.55 ) }
    dend_30 { pt3dadd( 85.9818, 14.494, 9.52335, 0.55 ) }
    dend_30 { pt3dadd( 88.8382, 14.1394, 10.9733, 0.55 ) }
    dend_30 { pt3dadd( 90.4072, 14.033, 11.7258, 0.55 ) }
    dend_30 { pt3dadd( 92.253, 13.9581, 12.6238, 0.55 ) }
    dend_30 { pt3dadd( 94.5395, 13.9388, 13.7188, 0.83 ) }
    dend_30 { pt3dadd( 98.2644, 14.0185, 15.155, 0.55 ) }
    dend_30 { pt3dadd( 100.718, 14.0175, 15.9664, 0.83 ) }
    dend_30 { pt3dadd( 104.106, 13.9067, 16.9346, 0.55 ) }
    dend_30 { pt3dadd( 105.141, 13.8244, 17.1994, 0.55 ) }
    dend_30 { pt3dadd( 108.337, 13.44, 17.9061, 0.55 ) }
    dend_30 { pt3dadd( 114.017, 12.4978, 18.8432, 0.55 ) }
    dend_30 { pt3dadd( 118.153, 11.6183, 19.3626, 0.55 ) }
    dend_30 { pt3dadd( 121.419, 10.7526, 19.7946, 0.55 ) }
    dend_30 { pt3dadd( 124.742, 9.66598, 20.2831, 0.55 ) }
    dend_30 { pt3dadd( 125.439, 9.41827, 20.3828, 0.28 ) }
    dend_30 { pt3dadd( 126.849, 8.86255, 20.5624, 0.83 ) }
    dend_30 { pt3dadd( 132.632, 6.48822, 21.3033, 0.55 ) }
    dend_30 { pt3dadd( 136.674, 4.85704, 21.7484, 0.55 ) }
    dend_30 { pt3dadd( 140.002, 3.57269, 22.2223, 0.55 ) }
    dend_30 { pt3dadd( 141.991, 2.79338, 22.5215, 0.83 ) }
    dend_30 { pt3dadd( 143.56, 2.20089, 22.7675, 0.28 ) }
    dend_30 { pt3dadd( 144.981, 1.66999, 22.9787, 0.55 ) }
    dend_30 { pt3dadd( 156.366, -0.378157, 27.0679, 0.55 ) }
    dend_30 { pt3dadd( 168.128, -3.56566, 28.4425, 0.55 ) }
    dend_30 { pt3dadd( 179.992, -5.50859, 30.8706, 0.55 ) }
    dend_30 { pt3dadd( 190.616, -9.84372, 35.1979, 0.55 ) }
    dend_30 { pt3dadd( 200.399, -15.8694, 39.4993, 0.55 ) }
    dend_30 { pt3dadd( 210.731, -22.5194, 39.9152, 0.55 ) }
    dend_30 { pt3dadd( 220.658, -29.5644, 38.0143, 0.55 ) }
    dend_30 { pt3dadd( 231.791, -34.385, 36.0853, 0.55 ) }
    dend_30 { pt3dadd( 242.829, -39.6403, 34.8717, 0.55 ) }
    dend_30 { pt3dadd( 254.407, -43.4096, 33.3469, 0.55 ) }
    dend_30 { pt3dadd( 266.079, -47.1767, 33.4966, 0.55 ) }
    dend_30 { pt3dadd( 276.855, -53.0759, 33.5845, 0.55 ) }
    dend_30 { pt3dadd( 288.19, -57.3387, 35.5285, 0.55 ) }
    dend_30 { pt3dadd( 299.294, -60.405, 39.7365, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.79253, -28.1137, 5.82049, 1.38 ) }
    dend_13 { pt3dadd( 0.0781879, -30.8654, 4.4183, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.79253, -28.1137, 5.82049, 0.55 ) }
    dend_12 { pt3dadd( -3.28256, -29.8183, 6.10623, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.94613, -32.0174, 6.41885, 0.55 ) }
    dend_12 { pt3dadd( -6.22485, -33.4636, 6.67963, 0.55 ) }
    dend_12 { pt3dadd( -7.33364, -34.6682, 6.73605, 0.55 ) }
    dend_12 { pt3dadd( -9.78745, -37.1518, 6.64534, 0.55 ) }
    dend_12 { pt3dadd( -11.5126, -38.8048, 6.5385, 0.55 ) }
    dend_12 { pt3dadd( -13.0575, -40.2863, 6.38947, 0.55 ) }
    dend_12 { pt3dadd( -17.0151, -43.8805, 6.01299, 0.55 ) }
    dend_12 { pt3dadd( -21.7551, -48.0329, 5.59791, 0.55 ) }
    dend_12 { pt3dadd( -25.4335, -51.172, 5.21851, 0.55 ) }
    dend_12 { pt3dadd( -27.7905, -53.2364, 4.94407, 0.55 ) }
    dend_12 { pt3dadd( -30.4992, -55.7206, 4.6351, 0.55 ) }
    dend_12 { pt3dadd( -33.9498, -59.3103, 4.27845, 0.55 ) }
    dend_12 { pt3dadd( -35.9854, -61.8824, 4.10211, 0.55 ) }
    dend_12 { pt3dadd( -38.4861, -65.6104, 4.07666, 0.55 ) }
    dend_12 { pt3dadd( -40.4944, -69.1246, 4.12063, 0.55 ) }
    dend_12 { pt3dadd( -42.5631, -73.5364, 4.18437, 0.55 ) }
    dend_12 { pt3dadd( -44.5543, -78.7431, 4.30405, 0.55 ) }
    dend_12 { pt3dadd( -45.6777, -82.7469, 4.4158, 0.55 ) }
    dend_12 { pt3dadd( -46.081, -84.7497, 4.57267, 0.55 ) }
    dend_12 { pt3dadd( -46.7088, -89.4769, 5.13679, 0.55 ) }
    dend_12 { pt3dadd( -47.1992, -93.9068, 5.76133, 0.55 ) }
    dend_12 { pt3dadd( -47.4122, -98.3888, 6.66529, 0.55 ) }
    dend_12 { pt3dadd( -47.5342, -100.961, 7.3229, 0.55 ) }
    dend_12 { pt3dadd( -47.8116, -108.925, 9.62647, 0.55 ) }
    dend_12 { pt3dadd( -47.8339, -109.511, 9.80663, 0.55 ) }
    dend_12 { pt3dadd( -47.8896, -113.107, 10.9815, 0.55 ) }
    dend_12 { pt3dadd( -48.2469, -119.525, 13.2812, 0.55 ) }
    dend_12 { pt3dadd( -48.4018, -121.668, 13.9308, 0.55 ) }
    dend_12 { pt3dadd( -48.8285, -125.002, 14.4124, 0.55 ) }
    dend_12 { pt3dadd( -49.0087, -126.236, 14.3132, 0.55 ) }
    dend_12 { pt3dadd( -49.5861, -130.408, 13.187, 0.55 ) }
    dend_12 { pt3dadd( -49.9206, -133.107, 11.8797, 0.55 ) }
    dend_12 { pt3dadd( -50.5024, -137.395, 8.93129, 0.55 ) }
    dend_12 { pt3dadd( -51.084, -142.644, 4.89145, 0.28 ) }
    dend_12 { pt3dadd( -51.2408, -143.939, 3.71908, 0.55 ) }
    dend_12 { pt3dadd( -51.5046, -145.899, 1.77249, 0.28 ) }
    dend_12 { pt3dadd( -51.5499, -146.194, 1.46439, 0.55 ) }
    dend_12 { pt3dadd( -51.7821, -147.811, -0.086012, 0.28 ) }
    dend_12 { pt3dadd( -51.8738, -148.361, -0.482414, 0.55 ) }
    dend_12 { pt3dadd( -52.3099, -151.227, -1.99481, 0.28 ) }
    dend_12 { pt3dadd( -52.4925, -152.2, -2.49043, 0.55 ) }
    dend_12 { pt3dadd( -53.0249, -155.016, -3.76177, 0.28 ) }
    dend_12 { pt3dadd( -53.1881, -155.902, -4.15957, 0.55 ) }
    dend_12 { pt3dadd( -53.7661, -158.962, -5.47918, 0.28 ) }
    dend_12 { pt3dadd( -54.0261, -160.37, -6.09457, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.997, -59.1709, 41.6131, 0.55 ) }
    dend_10 { pt3dadd( -17.4677, -68.5994, 48.4516, 0.55 ) }
    dend_10 { pt3dadd( -24.378, -77.1377, 55.0903, 0.55 ) }
    dend_10 { pt3dadd( -30.6358, -86.4531, 61.372, 0.55 ) }
    dend_10 { pt3dadd( -37.0186, -95.8541, 67.3994, 0.55 ) }
    dend_10 { pt3dadd( -41.6355, -106.451, 73.1527, 0.55 ) }
    dend_10 { pt3dadd( -46.4201, -116.611, 79.491, 0.55 ) }
    dend_10 { pt3dadd( -48.6944, -128.513, 84.1288, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.997, -59.1709, 41.6131, 0.55 ) }
    dend_3 { pt3dadd( -12.1966, -68.1687, 50.2535, 0.55 ) }
    dend_3 { pt3dadd( -11.5263, -78.5284, 57.2663, 0.55 ) }
    dend_3 { pt3dadd( -12.791, -89.0895, 63.8961, 0.55 ) }
    dend_3 { pt3dadd( -14.5216, -100.296, 69.2963, 0.55 ) }
    dend_3 { pt3dadd( -15.7997, -111.427, 74.9668, 0.55 ) }
    dend_3 { pt3dadd( -17.1439, -122.102, 81.4047, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -51.8337, 41.4755, -23.9069, 0.83 ) }
    dend_60 { pt3dadd( -52.2552, 42.2356, -26.9005, 0.83 ) }
    dend_60 { pt3dadd( -53.2379, 44.2785, -33.7624, 0.55 ) }
    dend_60 { pt3dadd( -53.5876, 45.2425, -36.5766, 0.83 ) }
    dend_60 { pt3dadd( -53.8911, 46.3454, -39.4614, 0.55 ) }
    dend_60 { pt3dadd( -54.07, 47.6367, -42.1543, 0.55 ) }
    dend_60 { pt3dadd( -54.0901, 48.3548, -43.3853, 0.28 ) }
    dend_60 { pt3dadd( -54.0702, 48.9326, -44.0217, 0.55 ) }
    dend_60 { pt3dadd( -53.7057, 51.1059, -45.7175, 0.28 ) }
    dend_60 { pt3dadd( -53.5012, 52.056, -46.4067, 0.55 ) }
    dend_60 { pt3dadd( -52.7709, 55.4421, -48.6566, 0.28 ) }
    dend_60 { pt3dadd( -52.2241, 58.1897, -50.3259, 0.55 ) }
    dend_60 { pt3dadd( -51.5235, 62.5957, -52.7285, 0.28 ) }
    dend_60 { pt3dadd( -51.0123, 66.5357, -54.7209, 0.28 ) }
    dend_60 { pt3dadd( -50.8345, 68.7894, -55.7494, 0.55 ) }
    dend_60 { pt3dadd( -50.7829, 71.4962, -56.9055, 0.28 ) }
    dend_60 { pt3dadd( -50.8322, 72.8136, -57.4101, 0.55 ) }
    dend_60 { pt3dadd( -51.1654, 75.8805, -58.6506, 0.28 ) }
    dend_60 { pt3dadd( -51.5612, 77.9011, -59.5163, 0.28 ) }
    dend_60 { pt3dadd( -52.016, 79.8651, -60.4018, 0.28 ) }
    dend_60 { pt3dadd( -52.2195, 80.8929, -60.8883, 0.55 ) }
    dend_60 { pt3dadd( -52.8669, 84.9595, -63.0261, 0.28 ) }
    dend_60 { pt3dadd( -53.5124, 89.7001, -65.6996, 0.55 ) }
    dend_60 { pt3dadd( -53.7139, 91.3292, -66.6382, 0.55 ) }
    dend_60 { pt3dadd( -53.9267, 92.9857, -67.5371, 0.55 ) }
    dend_60 { pt3dadd( -54.5919, 96.5138, -69.4238, 0.55 ) }
    dend_60 { pt3dadd( -55.2003, 98.8345, -70.6474, 0.28 ) }
    dend_60 { pt3dadd( -55.5378, 99.7271, -71.0807, 0.55 ) }
    dend_60 { pt3dadd( -56.5972, 102.202, -72.1431, 0.28 ) }
    dend_60 { pt3dadd( -57.873, 104.807, -73.3214, 0.55 ) }
    dend_60 { pt3dadd( -60.1095, 108.546, -75.0061, 0.28 ) }
    dend_60 { pt3dadd( -61.2298, 110.114, -75.6872, 0.28 ) }
    dend_60 { pt3dadd( -63.153, 112.241, -76.7132, 0.55 ) }
    dend_60 { pt3dadd( -65.3552, 114.427, -77.8263, 0.28 ) }
    dend_60 { pt3dadd( -65.7606, 114.772, -77.9956, 0.55 ) }
    dend_60 { pt3dadd( -67.2292, 115.877, -78.5135, 0.28 ) }
    dend_60 { pt3dadd( -72.2759, 119.466, -80.0649, 0.55 ) }
    dend_60 { pt3dadd( -79.4402, 123.803, -82.1039, 0.28 ) }
    dend_60 { pt3dadd( -80.8003, 124.499, -82.4982, 0.55 ) }
    dend_60 { pt3dadd( -84.5673, 126.263, -83.5558, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -86.1667, 126.968, -84.0208, 0.28 ) }
    dend_60 { pt3dadd( -87.5843, 127.524, -84.4561, 0.55 ) }
    dend_60 { pt3dadd( -91.88, 128.628, -85.7214, 0.28 ) }
    dend_60 { pt3dadd( -94.8871, 129.217, -86.3876, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -51.8337, 41.4755, -23.9069, 0.55 ) }
    dend_57 { pt3dadd( -52.0813, 43.1237, -24.6084, 0.55 ) }
    dend_57 { pt3dadd( -52.228, 44.1273, -24.9282, 0.28 ) }
    dend_57 { pt3dadd( -52.4278, 44.9108, -24.9565, 0.55 ) }
    dend_57 { pt3dadd( -52.8867, 46.7103, -25.0216, 0.28 ) }
    dend_57 { pt3dadd( -53.209, 47.9741, -25.0673, 0.55 ) }
    dend_57 { pt3dadd( -53.8032, 50.3042, -25.1515, 0.28 ) }
    dend_57 { pt3dadd( -54.1833, 51.6234, -24.9808, 0.55 ) }
    dend_57 { pt3dadd( -55.635, 55.1279, -23.4637, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -133.661, -50.2509, -16.5413, 0.55 ) }
    dend_52 { pt3dadd( -139.287, -57.8567, -18.6861, 0.55 ) }
    dend_52 { pt3dadd( -143.401, -66.3034, -21.2173, 0.55 ) }
    dend_52 { pt3dadd( -146.578, -74.3404, -25.6397, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -133.661, -50.2509, -16.5413, 0.55 ) }
    dend_49 { pt3dadd( -139.261, -55.6035, -21.1734, 0.55 ) }
    dend_49 { pt3dadd( -144.018, -60.8185, -26.803, 0.55 ) }
    dend_49 { pt3dadd( -148.426, -66.1191, -32.6406, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -166.412, 15.0349, 69.1067, 0.55 ) }
    dend_47 { pt3dadd( -173.371, 14.8466, 73.9983, 0.55 ) }
    dend_47 { pt3dadd( -180.687, 15.8603, 78.2321, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -166.412, 15.0349, 69.1067, 0.55 ) }
    dend_46 { pt3dadd( -173.348, 14.1585, 71.802, 0.55 ) }
    dend_46 { pt3dadd( -180.294, 14.5497, 74.5781, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 81.6399, -59.4891, -114.329, 0.28 ) }
    dend_39 { pt3dadd( 88.0482, -62.1917, -125.69, 0.28 ) }
    dend_39 { pt3dadd( 88.6701, -62.5332, -126.714, 0.55 ) }
    dend_39 { pt3dadd( 89.7201, -63.1098, -128.444, 0.28 ) }
    dend_39 { pt3dadd( 90.6042, -63.5952, -129.901, 0.28 ) }
    dend_39 { pt3dadd( 91.7745, -64.2378, -131.828, 0.55 ) }
    dend_39 { pt3dadd( 93.3175, -65.0851, -134.37, 0.55 ) }
    dend_39 { pt3dadd( 95.2203, -66.9613, -135.864, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 81.6399, -59.4891, -114.329, 0.55 ) }
    dend_36 { pt3dadd( 82.2433, -60.5414, -115.775, 0.55 ) }
    dend_36 { pt3dadd( 82.411, -61.0079, -116.419, 0.28 ) }
    dend_36 { pt3dadd( 82.6472, -61.8006, -117.541, 0.55 ) }
    dend_36 { pt3dadd( 83.1676, -63.5469, -120.015, 0.28 ) }
    dend_36 { pt3dadd( 83.5282, -64.7572, -121.729, 0.55 ) }
    dend_36 { pt3dadd( 84.1392, -66.8076, -124.633, 0.28 ) }
    dend_36 { pt3dadd( 84.7996, -69.2636, -128.42, 0.28 ) }
    dend_36 { pt3dadd( 85.043, -70.3839, -130.189, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 153.684, -36.7959, -36.9296, 0.28 ) }
    dend_33 { pt3dadd( 155.284, -39.9567, -38.7671, 0.28 ) }
    dend_33 { pt3dadd( 157.209, -44.3599, -40.9544, 0.28 ) }
    dend_33 { pt3dadd( 158.393, -47.2883, -42.2975, 0.55 ) }
    dend_33 { pt3dadd( 159.129, -48.9813, -42.9838, 0.28 ) }
    dend_33 { pt3dadd( 159.516, -49.8968, -43.348, 0.28 ) }
    dend_33 { pt3dadd( 161.452, -54.374, -45.1898, 0.55 ) }
    dend_33 { pt3dadd( 161.886, -55.4609, -45.5157, 0.28 ) }
    dend_33 { pt3dadd( 162.823, -58.4019, -46.2672, 0.55 ) }
    dend_33 { pt3dadd( 163.626, -60.8901, -46.9821, 0.28 ) }
    dend_33 { pt3dadd( 164.366, -62.9079, -47.584, 0.55 ) }
    dend_33 { pt3dadd( 165.242, -65.2232, -48.3937, 0.55 ) }
    dend_33 { pt3dadd( 166.704, -68.6091, -49.964, 0.55 ) }
    dend_33 { pt3dadd( 167.058, -69.417, -50.3696, 0.55 ) }
    dend_33 { pt3dadd( 168.301, -72.3913, -51.9099, 0.28 ) }
    dend_33 { pt3dadd( 168.772, -73.5743, -52.5629, 0.55 ) }
    dend_33 { pt3dadd( 169.465, -75.1015, -53.398, 0.28 ) }
    dend_33 { pt3dadd( 170.455, -77.1959, -54.654, 0.55 ) }
    dend_33 { pt3dadd( 172.215, -80.1643, -56.98, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 153.684, -36.7959, -36.9296, 0.55 ) }
    dend_32 { pt3dadd( 151.601, -36.2886, -36.9165, 0.55 ) }
    dend_32 { pt3dadd( 149.909, -35.8766, -36.9059, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.0781879, -30.8654, 4.4183, 0.83 ) }
    dend_17 { pt3dadd( 0.153096, -31.059, 4.38202, 0.83 ) }
    dend_17 { pt3dadd( 1.07754, -32.7847, 4.11014, 0.83 ) }
    dend_17 { pt3dadd( 1.86759, -34.2938, 3.77722, 0.55 ) }
    dend_17 { pt3dadd( 2.49789, -35.4977, 3.51162, 0.55 ) }
    dend_17 { pt3dadd( 3.8376, -38.0567, 2.94708, 0.83 ) }
    dend_17 { pt3dadd( 5.46259, -41.1606, 2.26232, 0.55 ) }
    dend_17 { pt3dadd( 6.35999, -42.7876, 1.92569, 0.83 ) }
    dend_17 { pt3dadd( 7.9906, -45.3858, 1.46071, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.0781879, -30.8654, 4.4183, 0.55 ) }
    dend_14 { pt3dadd( -2.39288, -31.7836, 2.19371, 0.55 ) }
    dend_14 { pt3dadd( -5.04527, -32.7692, -0.194111, 0.55 ) }
    dend_14 { pt3dadd( -8.17643, -33.9327, -3.01296, 0.55 ) }
    dend_14 { pt3dadd( -11.9787, -35.3455, -6.43595, 0.55 ) }
    dend_14 { pt3dadd( -14.1364, -36.1473, -8.37838, 0.55 ) }
    dend_14 { pt3dadd( -14.5698, -36.3083, -8.76859, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.1439, -122.102, 81.4047, 0.55 ) }
    dend_7 { pt3dadd( -17.6066, -131.53, 87.6639, 0.55 ) }
    dend_7 { pt3dadd( -16.7297, -141.68, 92.6636, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -17.1439, -122.102, 81.4047, 0.55 ) }
    dend_4 { pt3dadd( -18.1775, -130.491, 85.9863, 0.55 ) }
    dend_4 { pt3dadd( -19.6461, -138.666, 90.8101, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -55.635, 55.1279, -23.4637, 0.28 ) }
    dend_59 { pt3dadd( -56.2833, 57.5882, -22.2824, 0.28 ) }
    dend_59 { pt3dadd( -56.4944, 58.5504, -21.7671, 0.55 ) }
    dend_59 { pt3dadd( -57.0691, 61.3505, -20.2461, 0.28 ) }
    dend_59 { pt3dadd( -57.3973, 62.7, -19.5786, 0.55 ) }
    dend_59 { pt3dadd( -58.3433, 66.3198, -17.846, 0.28 ) }
    dend_59 { pt3dadd( -59.3049, 69.9989, -16.0851, 0.55 ) }
    dend_59 { pt3dadd( -60.8866, 75.8886, -13.0356, 0.28 ) }
    dend_59 { pt3dadd( -61.2226, 77.15, -12.3889, 0.55 ) }
    dend_59 { pt3dadd( -61.9873, 80.0145, -11.0842, 0.28 ) }
    dend_59 { pt3dadd( -62.2813, 81.1805, -10.5935, 0.55 ) }
    dend_59 { pt3dadd( -66.5434, 89.95, -5.03508, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -72.4517, 98.9909, -1.85948, 0.55 ) }
    dend_59 { pt3dadd( -76.7424, 108.665, 1.99767, 0.55 ) }
    dend_59 { pt3dadd( -79.7525, 119.258, 4.56794, 0.55 ) }
    dend_59 { pt3dadd( -84.119, 129.362, 7.10114, 0.55 ) }
    dend_59 { pt3dadd( -88.9565, 138.46, 11.5963, 0.55 ) }
    dend_59 { pt3dadd( -92.532, 147.267, 17.5581, 0.55 ) }
    dend_59 { pt3dadd( -94.6074, 155.451, 24.913, 0.55 ) }
    dend_59 { pt3dadd( -96.8249, 164.091, 31.7014, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -55.635, 55.1279, -23.4637, 0.55 ) }
    dend_58 { pt3dadd( -57.5382, 55.1666, -21.3945, 0.55 ) }
    dend_58 { pt3dadd( -58.5285, 55.1455, -20.3022, 0.28 ) }
    dend_58 { pt3dadd( -59.2654, 55.1297, -19.4893, 0.55 ) }
    dend_58 { pt3dadd( -59.8796, 55.1166, -18.8118, 0.28 ) }
    dend_58 { pt3dadd( -60.3098, 55.1074, -18.3373, 0.55 ) }
    dend_58 { pt3dadd( -61.4961, 55.0821, -17.0288, 0.28 ) }
    dend_58 { pt3dadd( -62.3361, 54.9319, -16.23, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -146.578, -74.3404, -25.6397, 0.55 ) }
    dend_54 { pt3dadd( -150.897, -83.0162, -24.9515, 0.55 ) }
    dend_54 { pt3dadd( -155.162, -91.576, -23.1905, 0.55 ) }
    dend_54 { pt3dadd( -158.539, -100.692, -22.9219, 0.55 ) }
    dend_54 { pt3dadd( -162.985, -109.238, -21.6401, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -146.578, -74.3404, -25.6397, 0.55 ) }
    dend_53 { pt3dadd( -151.291, -79.6045, -32.9365, 0.55 ) }
    dend_53 { pt3dadd( -155.521, -83.5641, -41.2429, 0.55 ) }
    dend_53 { pt3dadd( -160.585, -88.6321, -48.4364, 0.55 ) }
    dend_53 { pt3dadd( -167.586, -92.0362, -54.9011, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -148.426, -66.1191, -32.6406, 0.55 ) }
    dend_51 { pt3dadd( -154.409, -68.1617, -41.0041, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -148.426, -66.1191, -32.6406, 0.55 ) }
    dend_50 { pt3dadd( -150.86, -71.8291, -34.9404, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 95.2203, -66.9613, -135.864, 0.28 ) }
    dend_41 { pt3dadd( 98.1467, -69.0481, -137.98, 0.28 ) }
    dend_41 { pt3dadd( 99.506, -70.0174, -138.963, 0.55 ) }
    dend_41 { pt3dadd( 102.099, -71.8659, -140.837, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 95.2203, -66.9613, -135.864, 0.55 ) }
    dend_40 { pt3dadd( 94.9087, -67.1896, -136.973, 0.55 ) }
    dend_40 { pt3dadd( 94.2854, -67.6461, -139.192, 0.28 ) }
    dend_40 { pt3dadd( 94.0823, -67.7948, -139.914, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 85.043, -70.3839, -130.189, 0.28 ) }
    dend_38 { pt3dadd( 85.768, -72.4949, -134.754, 0.28 ) }
    dend_38 { pt3dadd( 86.1269, -73.5401, -137.014, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 85.043, -70.3839, -130.189, 0.55 ) }
    dend_37 { pt3dadd( 83.1464, -70.7508, -129.804, 0.55 ) }
    dend_37 { pt3dadd( 77.8578, -71.7738, -128.728, 0.28 ) }
    dend_37 { pt3dadd( 76.6014, -72.0168, -128.473, 0.55 ) }
    dend_37 { pt3dadd( 73.1645, -72.6816, -127.774, 0.28 ) }
    dend_37 { pt3dadd( 70.9492, -73.1101, -127.323, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.9906, -45.3858, 1.46071, 0.83 ) }
    dend_23 { pt3dadd( 8.01319, -45.6142, 1.41694, 0.83 ) }
    dend_23 { pt3dadd( 8.34718, -48.6085, 0.928743, 0.83 ) }
    dend_23 { pt3dadd( 8.39652, -50.8575, 0.689813, 0.83 ) }
    dend_23 { pt3dadd( 8.27943, -53.0405, 0.667917, 0.83 ) }
    dend_23 { pt3dadd( 8.00833, -55.9578, 0.844981, 0.83 ) }
    dend_23 { pt3dadd( 7.59734, -59.3248, 1.16289, 0.83 ) }
    dend_23 { pt3dadd( 7.1404, -63.0976, 1.70958, 0.83 ) }
    dend_23 { pt3dadd( 6.68591, -66.7732, 2.40378, 0.83 ) }
    dend_23 { pt3dadd( 5.8518, -71.2722, 3.13573, 0.83 ) }
    dend_23 { pt3dadd( 5.36682, -73.3288, 3.35101, 0.83 ) }
    dend_23 { pt3dadd( 5.00297, -74.869, 3.41782, 0.83 ) }
    dend_23 { pt3dadd( 4.24793, -77.8183, 3.48067, 0.83 ) }
    dend_23 { pt3dadd( 3.64254, -80.452, 3.3986, 0.83 ) }
    dend_23 { pt3dadd( 2.69472, -86.0353, 2.62983, 0.83 ) }
    dend_23 { pt3dadd( 2.23931, -89.0638, 1.81899, 0.83 ) }
    dend_23 { pt3dadd( 1.83227, -91.8407, 0.869024, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 7.9906, -45.3858, 1.46071, 0.55 ) }
    dend_18 { pt3dadd( 6.54813, -48.4487, 1.76922, 0.55 ) }
    dend_18 { pt3dadd( 5.49262, -50.6722, 2.16225, 0.55 ) }
    dend_18 { pt3dadd( 4.87473, -52.0964, 2.54939, 0.55 ) }
    dend_18 { pt3dadd( 4.04195, -54.3306, 3.35426, 0.55 ) }
    dend_18 { pt3dadd( 2.54514, -58.7604, 5.21212, 0.55 ) }
    dend_18 { pt3dadd( 1.43586, -62.1152, 6.98449, 0.55 ) }
    dend_18 { pt3dadd( 0.588852, -64.8064, 8.68652, 0.55 ) }
    dend_18 { pt3dadd( -0.30485, -67.5239, 10.6037, 0.55 ) }
    dend_18 { pt3dadd( -1.0482, -69.7777, 12.312, 0.28 ) }
    dend_18 { pt3dadd( -1.64424, -71.6203, 13.9759, 0.55 ) }
    dend_18 { pt3dadd( -2.7395, -74.9739, 17.477, 0.55 ) }
    dend_18 { pt3dadd( -3.49036, -77.0272, 19.8567, 0.55 ) }
    dend_18 { pt3dadd( -3.92513, -78.1769, 21.1804, 0.55 ) }
    dend_18 { pt3dadd( -4.51534, -79.5302, 22.6811, 0.83 ) }
    dend_18 { pt3dadd( -6.33852, -83.5401, 26.8706, 0.28 ) }
    dend_18 { pt3dadd( -6.94568, -84.8669, 28.2211, 0.55 ) }
    dend_18 { pt3dadd( -7.97889, -87.2645, 30.5713, 0.28 ) }
    dend_18 { pt3dadd( -8.28916, -88.0039, 31.349, 0.55 ) }
    dend_18 { pt3dadd( -8.92673, -89.7435, 33.1279, 0.28 ) }
    dend_18 { pt3dadd( -9.29295, -90.7325, 34.0665, 0.55 ) }
    dend_18 { pt3dadd( -10.8034, -93.9385, 36.2926, 0.55 ) }
    dend_18 { pt3dadd( -12.2498, -102.678, 45.3413, 0.55 ) }
    dend_18 { pt3dadd( -13.0219, -111.029, 54.811, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.5698, -36.3083, -8.76859, 0.55 ) }
    dend_16 { pt3dadd( -17.5185, -37.1839, -11.2267, 0.55 ) }
    dend_16 { pt3dadd( -18.3808, -37.376, -11.9158, 0.55 ) }
    dend_16 { pt3dadd( -20.5422, -37.8586, -13.5709, 0.55 ) }
    dend_16 { pt3dadd( -25.251, -38.7809, -17.0136, 0.28 ) }
    dend_16 { pt3dadd( -25.9482, -38.9029, -17.4861, 0.55 ) }
    dend_16 { pt3dadd( -28.8565, -39.4872, -19.3523, 0.55 ) }
    dend_16 { pt3dadd( -32.8164, -40.289, -21.5599, 0.55 ) }
    dend_16 { pt3dadd( -34.3257, -40.5516, -22.3719, 0.28 ) }
    dend_16 { pt3dadd( -35.6364, -40.6982, -23.0162, 0.28 ) }
    dend_16 { pt3dadd( -37.8501, -40.9071, -23.8435, 0.55 ) }
    dend_16 { pt3dadd( -40.5496, -41.0436, -24.9465, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -43.0325, -40.9707, -26.0192, 0.55 ) }
    dend_16 { pt3dadd( -44.9376, -40.7658, -26.8169, 0.55 ) }
    dend_16 { pt3dadd( -46.2451, -40.5212, -27.4059, 0.55 ) }
    dend_16 { pt3dadd( -50.0838, -39.6387, -29.2453, 0.55 ) }
    dend_16 { pt3dadd( -54.0984, -38.4501, -31.1141, 0.55 ) }
    dend_16 { pt3dadd( -55.7468, -37.872, -31.849, 0.28 ) }
    dend_16 { pt3dadd( -57.3175, -37.3464, -32.574, 0.55 ) }
    dend_16 { pt3dadd( -60.5176, -36.4771, -34.0114, 0.28 ) }
    dend_16 { pt3dadd( -61.596, -36.2139, -34.4846, 0.83 ) }
    dend_16 { pt3dadd( -63.5975, -35.7003, -35.2412, 0.28 ) }
    dend_16 { pt3dadd( -65.032, -35.4342, -35.6092, 0.55 ) }
    dend_16 { pt3dadd( -67.1172, -35.1179, -36.103, 0.28 ) }
    dend_16 { pt3dadd( -67.9444, -34.9818, -36.2742, 0.55 ) }
    dend_16 { pt3dadd( -69.472, -34.7576, -36.5133, 0.55 ) }
    dend_16 { pt3dadd( -71.753, -34.1961, -36.7946, 0.55 ) }
    dend_16 { pt3dadd( -73.227, -33.7398, -36.8996, 0.28 ) }
    dend_16 { pt3dadd( -74.3925, -33.2275, -36.8952, 0.55 ) }
    dend_16 { pt3dadd( -75.7526, -32.4546, -36.8985, 0.28 ) }
    dend_16 { pt3dadd( -75.9758, -32.3094, -36.9069, 0.55 ) }
    dend_16 { pt3dadd( -78.078, -30.9197, -37.3393, 0.28 ) }
    dend_16 { pt3dadd( -79.6214, -29.8798, -37.8119, 0.55 ) }
    dend_16 { pt3dadd( -81.6804, -28.3742, -38.708, 0.83 ) }
    dend_16 { pt3dadd( -83.3958, -27.0952, -39.6284, 0.28 ) }
    dend_16 { pt3dadd( -83.8442, -26.7676, -39.9075, 0.55 ) }
    dend_16 { pt3dadd( -87.309, -24.303, -42.2271, 0.28 ) }
    dend_16 { pt3dadd( -87.9226, -23.881, -42.6887, 0.55 ) }
    dend_16 { pt3dadd( -89.7354, -22.52, -44.1574, 0.28 ) }
    dend_16 { pt3dadd( -90.2037, -22.1697, -44.5398, 0.55 ) }
    dend_16 { pt3dadd( -91.3965, -21.2599, -45.4447, 0.28 ) }
    dend_16 { pt3dadd( -92.2352, -20.6064, -46.0359, 0.55 ) }
    dend_16 { pt3dadd( -94.0799, -19.1482, -47.0899, 0.28 ) }
    dend_16 { pt3dadd( -95.1786, -18.3584, -47.6738, 0.55 ) }
    dend_16 { pt3dadd( -97.5252, -16.8168, -48.7971, 0.28 ) }
    dend_16 { pt3dadd( -98.2269, -16.3952, -49.1204, 0.55 ) }
    dend_16 { pt3dadd( -99.3316, -15.817, -49.5874, 0.28 ) }
    dend_16 { pt3dadd( -100.262, -15.33, -49.9395, 0.55 ) }
    dend_16 { pt3dadd( -102.186, -14.3447, -50.5589, 0.28 ) }
    dend_16 { pt3dadd( -102.765, -14.0608, -50.7269, 0.55 ) }
    dend_16 { pt3dadd( -107.033, -11.8705, -51.7832, 0.28 ) }
    dend_16 { pt3dadd( -108.503, -10.9983, -52.0285, 0.55 ) }
    dend_16 { pt3dadd( -111.089, -9.31671, -52.302, 0.28 ) }
    dend_16 { pt3dadd( -112.245, -8.51186, -52.39, 0.55 ) }
    dend_16 { pt3dadd( -114.875, -6.68747, -52.438, 0.28 ) }
    dend_16 { pt3dadd( -115.839, -6.06288, -52.4119, 0.55 ) }
    dend_16 { pt3dadd( -119.329, -4.13174, -52.1198, 0.28 ) }
    dend_16 { pt3dadd( -120.802, -3.51711, -51.9806, 0.55 ) }
    dend_16 { pt3dadd( -122.938, -2.99654, -51.7504, 0.55 ) }
    dend_16 { pt3dadd( -124.254, -2.76151, -51.5759, 0.55 ) }
    dend_16 { pt3dadd( -126.91, -2.35539, -51.0139, 0.28 ) }
    dend_16 { pt3dadd( -129.493, -1.98486, -50.2955, 0.28 ) }
    dend_16 { pt3dadd( -131.631, -1.66882, -49.6338, 0.55 ) }
    dend_16 { pt3dadd( -134.156, -1.04904, -48.5383, 0.28 ) }
    dend_16 { pt3dadd( -135.344, -0.575363, -47.8233, 0.55 ) }
    dend_16 { pt3dadd( -138.032, 1.06941, -45.8209, 0.28 ) }
    dend_16 { pt3dadd( -139.263, 2.23935, -44.4165, 0.55 ) }
    dend_16 { pt3dadd( -139.964, 3.161, -43.2874, 0.28 ) }
    dend_16 { pt3dadd( -140.644, 4.19297, -41.7403, 0.55 ) }
    dend_16 { pt3dadd( -141.417, 5.53621, -39.6297, 0.28 ) }
    dend_16 { pt3dadd( -141.72, 6.01176, -38.8348, 0.55 ) }
    dend_16 { pt3dadd( -143.481, 8.17563, -35.0528, 0.28 ) }
    dend_16 { pt3dadd( -144.087, 8.86175, -33.7862, 0.55 ) }
    dend_16 { pt3dadd( -145.515, 10.3888, -30.7128, 0.28 ) }
    dend_16 { pt3dadd( -146.293, 11.201, -29.0431, 0.55 ) }
    dend_16 { pt3dadd( -146.936, 11.8667, -27.6724, 0.55 ) }
    dend_16 { pt3dadd( -147.721, 12.6523, -26.0673, 0.28 ) }
    dend_16 { pt3dadd( -148.185, 13.0564, -25.3395, 0.55 ) }
    dend_16 { pt3dadd( -149.796, 14.4976, -23.0365, 0.28 ) }
    dend_16 { pt3dadd( -150.608, 15.402, -21.8104, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.5698, -36.3083, -8.76859, 0.55 ) }
    dend_15 { pt3dadd( -14.4381, -36.4254, -9.57098, 0.55 ) }
    dend_15 { pt3dadd( -14.2731, -36.4545, -10.3749, 0.55 ) }
    dend_15 { pt3dadd( -14.0102, -36.4241, -11.3656, 0.55 ) }
    dend_15 { pt3dadd( -13.7555, -36.3365, -12.1629, 0.55 ) }
    dend_15 { pt3dadd( -11.6604, -35.2413, -17.2509, 0.55 ) }
    dend_15 { pt3dadd( -11.1846, -34.8622, -18.4069, 0.55 ) }
    dend_15 { pt3dadd( -10.4962, -34.1762, -20.1332, 0.55 ) }
    dend_15 { pt3dadd( -10.0107, -33.6496, -21.3592, 0.55 ) }
    dend_15 { pt3dadd( -9.51007, -33.0693, -22.5383, 0.28 ) }
    dend_15 { pt3dadd( -8.66011, -32.0793, -24.3015, 0.55 ) }
    dend_15 { pt3dadd( -7.27077, -30.532, -26.839, 0.28 ) }
    dend_15 { pt3dadd( -7.19729, -30.4405, -27.0971, 0.55 ) }
    dend_15 { pt3dadd( -7.15915, -30.1435, -28.9116, 0.28 ) }
    dend_15 { pt3dadd( -7.3441, -30.0068, -30.1365, 0.55 ) }
    dend_15 { pt3dadd( -7.6756, -29.9467, -31.445, 0.55 ) }
    dend_15 { pt3dadd( -8.31379, -29.9614, -33.7894, 0.55 ) }
    dend_15 { pt3dadd( -9.55614, -30.025, -38.3936, 0.55 ) }
    dend_15 { pt3dadd( -10.3381, -30.105, -41.4996, 0.55 ) }
    dend_15 { pt3dadd( -10.5801, -30.1445, -42.5783, 0.55 ) }
    dend_15 { pt3dadd( -11.9982, -30.3553, -49.7018, 0.55 ) }
    dend_15 { pt3dadd( -12.2986, -30.3883, -51.6451, 0.55 ) }
    dend_15 { pt3dadd( -12.3851, -30.4118, -52.7476, 0.55 ) }
    dend_15 { pt3dadd( -12.3672, -30.5436, -55.3345, 0.55 ) }
    dend_15 { pt3dadd( -11.9822, -31.1953, -61.5386, 0.55 ) }
    dend_15 { pt3dadd( -11.8112, -31.4427, -63.205, 0.28 ) }
    dend_15 { pt3dadd( -11.6445, -31.6294, -64.1457, 0.55 ) }
    dend_15 { pt3dadd( -11.3746, -31.9647, -65.5351, 0.28 ) }
    dend_15 { pt3dadd( -11.2243, -32.1622, -66.0968, 0.55 ) }
    dend_15 { pt3dadd( -10.3888, -33.0248, -67.5999, 0.28 ) }
    dend_15 { pt3dadd( -9.3758, -34.1457, -68.1398, 0.55 ) }
    dend_15 { pt3dadd( -8.75802, -34.9331, -68.4146, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -8.17026, -35.7912, -68.5824, 0.55 ) }
    dend_15 { pt3dadd( -7.6489, -36.7143, -68.673, 0.28 ) }
    dend_15 { pt3dadd( -7.433, -37.1856, -68.7195, 0.55 ) }
    dend_15 { pt3dadd( -6.92504, -38.4144, -68.7735, 0.28 ) }
    dend_15 { pt3dadd( -6.81638, -38.7783, -68.8339, 0.55 ) }
    dend_15 { pt3dadd( -6.23974, -40.862, -69.2837, 0.28 ) }
    dend_15 { pt3dadd( -5.98867, -41.8255, -69.6143, 0.55 ) }
    dend_15 { pt3dadd( -5.45987, -43.8838, -70.5574, 0.28 ) }
    dend_15 { pt3dadd( -5.26382, -44.6422, -70.9927, 0.55 ) }
    dend_15 { pt3dadd( -4.58006, -47.1355, -72.595, 0.28 ) }
    dend_15 { pt3dadd( -4.41878, -47.7414, -73.0097, 0.55 ) }
    dend_15 { pt3dadd( -3.98004, -49.6554, -74.3685, 0.28 ) }
    dend_15 { pt3dadd( -3.88983, -50.103, -74.6464, 0.55 ) }
    dend_15 { pt3dadd( -3.68421, -51.2837, -75.3579, 0.28 ) }
    dend_15 { pt3dadd( -3.58116, -51.9678, -75.8343, 0.55 ) }
    dend_15 { pt3dadd( -3.47632, -52.6398, -76.3596, 0.55 ) }
    dend_15 { pt3dadd( -3.26306, -53.9809, -77.3986, 0.28 ) }
    dend_15 { pt3dadd( -3.09188, -54.8133, -78.1569, 0.55 ) }
    dend_15 { pt3dadd( -2.44643, -56.9064, -80.6307, 0.28 ) }
    dend_15 { pt3dadd( -2.18459, -57.5889, -81.6316, 0.55 ) }
    dend_15 { pt3dadd( -1.98702, -58.024, -82.3169, 0.28 ) }
    dend_15 { pt3dadd( -1.76951, -58.4235, -83.0075, 0.55 ) }
    dend_15 { pt3dadd( -1.04523, -59.5493, -85.1186, 0.28 ) }
    dend_15 { pt3dadd( -0.474795, -60.4233, -86.6874, 0.55 ) }
    dend_15 { pt3dadd( 0.585211, -62.0843, -89.2141, 0.28 ) }
    dend_15 { pt3dadd( 0.922599, -62.6016, -90.007, 0.55 ) }
    dend_15 { pt3dadd( 1.64847, -63.5596, -91.4304, 0.28 ) }
    dend_15 { pt3dadd( 1.91279, -63.8758, -91.8735, 0.55 ) }
    dend_15 { pt3dadd( 2.41717, -64.387, -92.4778, 0.28 ) }
    dend_15 { pt3dadd( 2.89443, -64.8219, -92.9622, 0.55 ) }
    dend_15 { pt3dadd( 4.29364, -65.915, -94.1149, 0.28 ) }
    dend_15 { pt3dadd( 5.92752, -67.0856, -95.4098, 0.28 ) }
    dend_15 { pt3dadd( 6.79624, -67.6332, -96.0006, 0.28 ) }
    dend_15 { pt3dadd( 7.64726, -68.1497, -96.6545, 0.55 ) }
    dend_15 { pt3dadd( 8.89801, -68.8326, -97.6179, 0.28 ) }
    dend_15 { pt3dadd( 9.46269, -69.1264, -98.0336, 0.83 ) }
    dend_15 { pt3dadd( 10.9308, -69.9014, -99.0332, 0.28 ) }
    dend_15 { pt3dadd( 11.5457, -70.2535, -99.5043, 0.55 ) }
    dend_15 { pt3dadd( 14.1577, -71.9235, -101.711, 0.28 ) }
    dend_15 { pt3dadd( 15.3968, -72.7737, -102.932, 0.28 ) }
    dend_15 { pt3dadd( 16.2588, -73.3887, -103.89, 0.55 ) }
    dend_15 { pt3dadd( 16.7188, -73.7591, -104.518, 0.55 ) }
    dend_15 { pt3dadd( 17.8587, -74.7621, -106.311, 0.28 ) }
    dend_15 { pt3dadd( 18.8746, -75.7775, -108.046, 0.55 ) }
    dend_15 { pt3dadd( 19.7919, -76.7528, -109.624, 0.28 ) }
    dend_15 { pt3dadd( 20.5773, -77.653, -111.116, 0.55 ) }
    dend_15 { pt3dadd( 21.2328, -78.3829, -112.344, 0.28 ) }
    dend_15 { pt3dadd( 21.809, -78.9108, -113.306, 0.55 ) }
    dend_15 { pt3dadd( 23.2796, -80.0527, -115.541, 0.28 ) }
    dend_15 { pt3dadd( 24.0523, -80.6317, -116.632, 0.55 ) }
    dend_15 { pt3dadd( 25.2482, -81.5091, -118.213, 0.28 ) }
    dend_15 { pt3dadd( 26.2518, -82.185, -119.479, 0.55 ) }
    dend_15 { pt3dadd( 28.6211, -83.612, -122.453, 0.28 ) }
    dend_15 { pt3dadd( 29.547, -84.1077, -123.748, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.7297, -141.68, 92.6636, 0.55 ) }
    dend_9 { pt3dadd( -17.3131, -152.498, 97.3523, 0.55 ) }
    dend_9 { pt3dadd( -17.0839, -164.164, 99.3444, 0.55 ) }
    dend_9 { pt3dadd( -17.3611, -175.416, 102.958, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -16.7297, -141.68, 92.6636, 0.55 ) }
    dend_8 { pt3dadd( -16.2341, -149.428, 97.6696, 0.55 ) }
    dend_8 { pt3dadd( -16.6203, -155.999, 104.102, 0.55 ) }
    dend_8 { pt3dadd( -16.6117, -161.11, 111.702, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -19.6461, -138.666, 90.8101, 0.55 ) }
    dend_6 { pt3dadd( -19.5982, -146.97, 95.9556, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -19.6461, -138.666, 90.8101, 0.55 ) }
    dend_5 { pt3dadd( -21.5927, -148.227, 96.061, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.83227, -91.8407, 0.869024, 0.83 ) }
    dend_25 { pt3dadd( 2.64441, -95.985, 1.22666, 0.83 ) }
    dend_25 { pt3dadd( 3.4667, -99.4949, 1.78452, 0.83 ) }
    dend_25 { pt3dadd( 4.28406, -102.984, 2.33904, 0.83 ) }
    dend_25 { pt3dadd( 5.0603, -106.297, 2.86565, 0.83 ) }
    dend_25 { pt3dadd( 6.25653, -111.403, 3.67719, 0.83 ) }
    dend_25 { pt3dadd( 7.44412, -116.472, 4.48288, 0.83 ) }
    dend_25 { pt3dadd( 8.46057, -119.856, 5.44434, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.83227, -91.8407, 0.869024, 0.55 ) }
    dend_24 { pt3dadd( 2.98575, -93.5596, 0.919821, 0.55 ) }
    dend_24 { pt3dadd( 3.90171, -94.8867, 0.736394, 0.55 ) }
    dend_24 { pt3dadd( 4.54844, -95.861, 0.501481, 0.55 ) }
    dend_24 { pt3dadd( 5.15714, -96.991, 0.0634322, 0.83 ) }
    dend_24 { pt3dadd( 5.78594, -98.2628, -0.598641, 0.55 ) }
    dend_24 { pt3dadd( 6.40098, -99.5068, -1.24623, 0.83 ) }
    dend_24 { pt3dadd( 7.00905, -100.846, -2.08292, 0.55 ) }
    dend_24 { pt3dadd( 7.37007, -101.619, -2.64096, 0.83 ) }
    dend_24 { pt3dadd( 8.45893, -104.102, -4.65739, 0.55 ) }
    dend_24 { pt3dadd( 9.16695, -106.041, -6.38643, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.0219, -111.029, 54.811, 0.55 ) }
    dend_20 { pt3dadd( -15.3985, -119.896, 62.3717, 0.55 ) }
    dend_20 { pt3dadd( -18.7974, -127.39, 70.8998, 0.55 ) }
    dend_20 { pt3dadd( -22.4455, -133.688, 80.2087, 0.55 ) }
    dend_20 { pt3dadd( -26.5855, -138.47, 90.1476, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.0219, -111.029, 54.811, 0.55 ) }
    dend_19 { pt3dadd( -14.3348, -116.87, 60.0957, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 8.46057, -119.856, 5.44434, 0.55 ) }
    dend_27 { pt3dadd( 8.35885, -122.862, 5.94102, 0.55 ) }
    dend_27 { pt3dadd( 8.27647, -126.708, 6.70295, 0.55 ) }
    dend_27 { pt3dadd( 8.20847, -130.338, 7.40581, 0.55 ) }
    dend_27 { pt3dadd( 8.15182, -132.915, 7.85905, 0.55 ) }
    dend_27 { pt3dadd( 8.03779, -137.507, 8.58489, 0.55 ) }
    dend_27 { pt3dadd( 8.02892, -150.392, 10.4299, 0.55 ) }
    dend_27 { pt3dadd( 8.19886, -154.752, 10.9413, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 8.39647, -157.815, 11.1744, 0.55 ) }
    dend_27 { pt3dadd( 8.77012, -161.29, 11.2117, 0.55 ) }
    dend_27 { pt3dadd( 9.1247, -163.957, 11.0139, 0.55 ) }
    dend_27 { pt3dadd( 10.2303, -170.169, 10.4085, 0.55 ) }
    dend_27 { pt3dadd( 10.9272, -174.884, 9.87018, 0.55 ) }
    dend_27 { pt3dadd( 11.4178, -177.988, 9.6339, 0.55 ) }
    dend_27 { pt3dadd( 12.4823, -186.071, 9.36991, 0.55 ) }
    dend_27 { pt3dadd( 13.0616, -191.526, 9.38745, 0.55 ) }
    dend_27 { pt3dadd( 13.6645, -198.591, 9.769, 0.55 ) }
    dend_27 { pt3dadd( 14.1706, -206.66, 10.7818, 0.55 ) }
    dend_27 { pt3dadd( 14.5743, -212.076, 11.8498, 0.55 ) }
    dend_27 { pt3dadd( 14.8428, -215.284, 12.5874, 0.55 ) }
    dend_27 { pt3dadd( 15.0468, -218.241, 13.2367, 0.55 ) }
    dend_27 { pt3dadd( 15.4353, -221.971, 13.9351, 0.55 ) }
    dend_27 { pt3dadd( 16.5412, -230.913, 15.0497, 0.55 ) }
    dend_27 { pt3dadd( 17.1264, -234.362, 15.4206, 0.55 ) }
    dend_27 { pt3dadd( 17.7094, -238.202, 15.7713, 0.55 ) }
    dend_27 { pt3dadd( 18.5564, -243.964, 16.2515, 0.55 ) }
    dend_27 { pt3dadd( 19.0093, -248.397, 16.5681, 0.55 ) }
    dend_27 { pt3dadd( 19.2507, -252.603, 16.7164, 0.55 ) }
    dend_27 { pt3dadd( 19.3247, -256.611, 16.7812, 0.55 ) }
    dend_27 { pt3dadd( 19.3137, -260.528, 16.8648, 0.55 ) }
    dend_27 { pt3dadd( 19.3328, -263.314, 16.9075, 0.55 ) }
    dend_27 { pt3dadd( 19.4574, -267.857, 16.8529, 0.55 ) }
    dend_27 { pt3dadd( 19.7226, -273.278, 16.392, 0.55 ) }
    dend_27 { pt3dadd( 19.9992, -275.894, 16.0242, 0.55 ) }
    dend_27 { pt3dadd( 20.3422, -278.177, 15.5585, 0.55 ) }
    dend_27 { pt3dadd( 21.2813, -282.462, 14.5401, 0.55 ) }
    dend_27 { pt3dadd( 21.8861, -285.171, 13.8143, 0.55 ) }
    dend_27 { pt3dadd( 22.6081, -288.523, 13.0502, 0.55 ) }
    dend_27 { pt3dadd( 22.9709, -290.89, 12.601, 0.55 ) }
    dend_27 { pt3dadd( 23.7063, -297.066, 11.5983, 0.55 ) }
    dend_27 { pt3dadd( 24.0067, -301.719, 11.0909, 0.55 ) }
    dend_27 { pt3dadd( 24.1017, -308.971, 10.7719, 0.55 ) }
    dend_27 { pt3dadd( 24.0561, -313.688, 10.9964, 0.55 ) }
    dend_27 { pt3dadd( 23.9041, -318.655, 11.355, 0.28 ) }
    dend_27 { pt3dadd( 23.7639, -320.658, 11.5486, 0.28 ) }
    dend_27 { pt3dadd( 23.2103, -325.556, 12.3888, 0.28 ) }
    dend_27 { pt3dadd( 22.5066, -330.11, 13.4541, 0.28 ) }
    dend_27 { pt3dadd( 21.7813, -336.184, 15.6274, 0.28 ) }
    dend_27 { pt3dadd( 23.1565, -349.569, 18.3362, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 8.46057, -119.856, 5.44434, 0.55 ) }
    dend_26 { pt3dadd( 9.63021, -120.492, 6.49232, 0.55 ) }
    dend_26 { pt3dadd( 11.9095, -122.084, 8.81664, 0.55 ) }
    dend_26 { pt3dadd( 13.8138, -123.632, 10.9057, 0.28 ) }
    dend_26 { pt3dadd( 15.8087, -125.385, 13.2128, 0.55 ) }
    dend_26 { pt3dadd( 16.8814, -126.507, 14.7976, 0.28 ) }
    dend_26 { pt3dadd( 18.5829, -128.532, 17.7734, 0.55 ) }
    dend_26 { pt3dadd( 19.0823, -129.593, 19.3006, 0.28 ) }
    dend_26 { pt3dadd( 19.2123, -129.981, 19.9225, 0.28 ) }
    dend_26 { pt3dadd( 19.4326, -130.548, 21.0135, 0.55 ) }
    dend_26 { pt3dadd( 20.4681, -132.445, 25.0867, 0.28 ) }
    dend_26 { pt3dadd( 20.9488, -133.192, 26.7806, 0.55 ) }
    dend_26 { pt3dadd( 22.7366, -135.356, 31.5241, 0.28 ) }
    dend_26 { pt3dadd( 23.823, -136.432, 33.976, 0.28 ) }
    dend_26 { pt3dadd( 25.291, -137.801, 36.8948, 0.55 ) }
    dend_26 { pt3dadd( 27.7221, -139.898, 40.9356, 0.28 ) }
    dend_26 { pt3dadd( 28.0915, -140.174, 41.4329, 0.55 ) }
    dend_26 { pt3dadd( 30.0319, -141.514, 43.7264, 0.28 ) }
    dend_26 { pt3dadd( 30.2254, -141.637, 43.9112, 0.55 ) }
    dend_26 { pt3dadd( 31.8852, -143.047, 45.5767, 0.28 ) }
    dend_26 { pt3dadd( 32.6338, -143.809, 46.4176, 0.55 ) }
    dend_26 { pt3dadd( 38.752, -149.51, 53.4395, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -26.5855, -138.47, 90.1476, 0.55 ) }
    dend_22 { pt3dadd( -26.0774, -143.512, 100.618, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.5855, -138.47, 90.1476, 0.55 ) }
    dend_21 { pt3dadd( -29.4869, -143.084, 94.4331, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 13
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_20 nseg = 3
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BP_e3706556cb_0_0


