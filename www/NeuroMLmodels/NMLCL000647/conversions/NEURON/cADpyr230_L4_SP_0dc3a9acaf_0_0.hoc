// Cell: cADpyr230_L4_SP_0dc3a9acaf_0_0
/*
{
  "id" : "cADpyr230_L4_SP_0dc3a9acaf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.7762, -6.65843, 1.68973, 1.62225", "-3.37091, -6.05756, 1.49202, 2.68302", "-2.96562, -5.45669, 1.29431, 4.18183", "-2.56033, -4.85582, 1.09659, 5.23637", "-2.15504, -4.25495, 0.898882, 5.96111", "-1.74975, -3.65409, 0.701169, 6.6575", "-1.34446, -3.05322, 0.503456, 7.22539", "-0.939173, -2.45235, 0.305744, 7.74314", "-0.533883, -1.85148, 0.108031, 8.02668", "-0.128593, -1.25061, -0.0896814, 7.99979", "0.276697, -0.649743, -0.287394, 7.71194", "0.681986, -0.0488738, -0.485107, 7.51065", "1.08728, 0.551995, -0.682819, 7.35885", "1.49257, 1.15286, -0.880532, 7.1093", "1.89786, 1.75373, -1.07824, 6.85975", "2.30315, 2.3546, -1.27596, 6.61021", "2.70844, 2.95547, -1.47367, 6.35799", "3.11373, 3.55634, -1.67138, 5.44931", "3.51902, 4.15721, -1.86909, 4.29173", "3.92431, 4.75808, -2.06681, 2.41932", "4.3296, 5.35894, -2.26452, 1.40798" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-0.790603, 5.91784, -1.87579, 2.22", "-0.935459, 6.83891, -2.16742, 2.22", "-0.960909, 9.65111, -2.00596, 1.66", "-1.01239, 15.3388, -1.67942, 1.66", "-1.03836, 18.209, -1.51463, 1.39", "-1.0617, 20.7872, -1.36661, 1.39", "-1.08143, 22.9678, -1.24142, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.42677, -4.17199, -2.46667, 1.94", "-4.22628, -5.15218, -3.0112, 1.94", "-5.15328, -7.88415, -3.50984, 1.11", "-5.97555, -10.3075, -3.95214, 1.11", "-6.50768, -11.8757, -4.23838, 1.11", "-7.36826, -14.4119, -4.70129, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.13212, -1.65457, -2.57467, 0.83", "-9.12733, -3.04297, -4.49337, 0.83", "-10.1131, -3.84341, -4.25307, 0.83", "-12.9952, -6.1332, -3.72622, 1.11", "-15.6836, -8.14067, -3.14719, 0.55", "-16.8563, -8.99279, -2.89538, 0.55", "-18.7263, -10.2674, -2.55109, 0.55", "-20.5942, -11.2781, -2.42226, 0.55", "-21.4782, -11.7462, -2.4086, 0.55", "-24.0199, -12.9949, -2.43318, 0.55", "-26.031, -14.0079, -2.32638, 0.55", "-28.0784, -14.9457, -2.1489, 0.83", "-30.2576, -15.8866, -1.87236, 0.55", "-31.175, -16.2969, -1.7595, 0.83", "-33.4336, -17.3672, -1.62613, 0.55", "-36.3992, -18.8707, -1.70272, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.00657, -1.7762, 3.02105, 1.39", "11.6911, -4.43282, 7.22394, 1.39", "13.1144, -5.07896, 4.67484, 1.39", "14.4673, -5.69311, 2.25193, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.10871, 3.75617, -3.97262, 1.39", "4.03133, 4.86133, -5.17927, 1.39", "6.82781, 5.14375, -8.72135, 1.39", "9.49538, 5.41314, -12.1001, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.3296, 5.35894, -2.26452, 1.20052", "12.7175, 17.7945, -2.26452, 1.20052", "21.1054, 30.2301, -2.26452, 1.20052" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.08143, 22.9678, -1.24142, 1.94", "-3.14013, 27.9556, -2.62525, 1.11", "-4.44492, 31.1168, -3.50232, 1.11" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-1.08143, 22.9678, -1.24142, 1.94", "-6.33578, 25.0068, 1.45723, 1.11", "-10.7854, 26.5168, 3.83156, 0.83", "-13.1359, 27.2298, 5.1529, 0.83", "-16.9719, 28.4151, 7.44779, 0.83", "-20.1587, 29.3063, 9.30377, 0.83", "-22.0332, 29.7446, 10.3852, 0.83", "-25.4412, 30.3393, 12.7401, 0.83", "-27.9172, 30.5465, 14.4982, 0.83", "-30.8601, 30.5834, 16.6469, 0.83", "-34.0823, 30.4457, 19.113, 0.83", "-36.5695, 30.4036, 21.1426, 0.83", "-39.7367, 30.4636, 23.8456, 0.83", "-41.9847, 30.7136, 25.812, 0.55", "-45.1629, 31.2396, 28.5956, 0.55", "-48.9493, 32.2459, 31.9768, 0.55", "-50.9058, 32.9806, 33.8417, 0.55", "-53.0016, 33.9569, 35.8238, 0.55", "-56.724, 35.644, 39.2184, 0.55", "-57.3961, 35.9546, 39.8447, 0.83", "-61.3379, 37.6768, 43.5674, 0.55", "-64.516, 38.8852, 46.5948, 0.55", "-65.7381, 39.3424, 47.8225, 0.55", "-70.4154, 41.162, 52.5493, 0.55", "-72.2749, 41.8479, 54.6104, 0.55", "-73.807, 42.494, 56.4702, 0.55", "-75.116, 43.1064, 58.1139, 0.55", "-77.5619, 44.5138, 61.235, 0.55", "-79.4258, 45.7184, 63.6955, 0.55", "-81.7043, 47.6853, 67.4463, 0.55", "-83.3006, 49.1528, 70.5635, 0.55", "-84.2193, 50.1122, 72.9608, 1.11", "-84.9662, 50.9473, 75.1139, 0.55", "-85.6693, 51.6666, 77.3215, 0.83", "-86.8782, 53.236, 82.3787, 0.28", "-87.4115, 53.9691, 84.6576, 0.28", "-87.9867, 54.7957, 88.5814, 0.55" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.36826, -14.4119, -4.70129, 1.94", "-7.92389, -15.4685, -6.56934, 1.39", "-8.22967, -16.05, -7.5974, 1.39" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-7.36826, -14.4119, -4.70129, 1.94", "-9.33942, -16.7546, -4.77335, 0.55", "-10.342, -18.0483, -4.87941, 0.83", "-11.8559, -20.038, -5.19383, 0.55", "-12.8953, -21.4673, -5.3705, 0.55", "-14.7563, -24.1608, -5.58644, 0.55", "-16.1046, -26.0255, -5.67406, 0.55", "-17.4706, -27.8925, -5.72169, 0.55", "-18.8499, -29.5812, -5.75958, 0.55", "-20.7126, -31.86, -5.78478, 0.55", "-21.8113, -33.1892, -5.80432, 0.55", "-23.3679, -34.981, -5.75562, 0.55", "-24.5978, -36.1791, -5.61333, 0.55", "-27.1211, -38.3132, -5.28424, 0.55", "-28.8493, -39.6547, -5.09243, 0.55", "-29.4977, -40.1126, -5.04973, 0.55", "-31.7408, -41.5921, -4.83888, 0.83", "-33.5792, -42.7283, -4.54145, 0.55", "-35.2748, -43.7431, -4.12624, 1.11", "-38.208, -45.4324, -3.165, 0.55", "-39.8924, -46.4088, -2.56762, 0.55", "-41.7214, -47.5585, -1.83899, 0.83", "-44.2075, -49.3401, -0.729168, 0.55", "-46.0709, -50.7997, 0.21658, 0.55", "-47.3643, -51.9611, 0.968118, 0.55", "-48.2147, -52.8688, 1.48999, 0.55", "-49.2706, -54.1545, 2.0996, 0.55", "-50.5479, -55.848, 2.77312, 0.55", "-51.109, -56.6284, 3.03306, 0.55", "-52.7533, -58.8115, 3.67055, 0.55", "-54.3079, -60.8541, 4.23056, 0.55", "-55.5502, -62.4146, 4.64678, 0.55", "-56.6233, -63.7238, 4.9725, 0.28", "-57.1768, -64.3876, 5.14528, 0.55", "-58.4457, -65.9445, 5.5492, 0.28", "-59.4468, -67.1409, 5.88754, 0.83", "-60.3655, -68.3978, 6.18944, 0.55", "-61.3966, -69.9553, 6.48968, 0.28", "-61.7541, -70.5471, 6.57153, 0.55", "-62.4132, -71.7182, 6.68818, 0.28", "-62.715, -72.3543, 6.71203, 0.55", "-63.4426, -74.2212, 6.68322, 0.28", "-63.7545, -75.1604, 6.63703, 0.55", "-64.1064, -76.3814, 6.54111, 0.28", "-64.2899, -77.0405, 6.48669, 0.55", "-64.5266, -77.9939, 6.39659, 0.28", "-64.9265, -79.5589, 6.26514, 0.28", "-65.1967, -80.6223, 6.18986, 0.55", "-65.7407, -82.4484, 6.20401, 0.28", "-66.0257, -83.2808, 6.25886, 0.28", "-66.3586, -84.0983, 6.38175, 0.83", "-67.379, -86.3004, 6.86244, 0.28", "-68.0784, -87.6913, 7.27568, 0.83", "-69.8735, -90.9298, 8.4945, 0.28", "-70.1157, -91.3348, 8.67368, 0.55", "-71.3206, -93.2635, 9.62315, 0.28", "-71.4789, -93.5021, 9.75876, 0.55", "-72.2329, -94.5219, 10.4998, 0.28", "-72.4985, -94.818, 10.7755, 0.55", "-76.8636, -101.091, 13.031, 0.55", "-81.8547, -106.323, 16.3779, 0.55", "-85.679, -111.859, 20.6459, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.3992, -18.8707, -1.70272, 0.83", "-37.4485, -20.1646, -3.01671, 0.55", "-39.9795, -22.8436, -6.34637, 0.55", "-41.6753, -24.8189, -8.41177, 0.55", "-42.8806, -26.4489, -9.9728, 0.55", "-44.8021, -29.5851, -13.0429, 0.55", "-45.732, -31.1733, -14.799, 0.55", "-46.9285, -33.582, -17.5974, 0.55", "-47.319, -34.6341, -18.9798, 0.55", "-47.5881, -36.0838, -21.1914, 0.55", "-47.5869, -38.0865, -24.2676, 0.83", "-47.5386, -40.8489, -28.373, 0.55", "-47.5109, -41.3366, -29.2027, 0.55", "-47.462, -42.9468, -32.6245, 0.28", "-47.5561, -44.0113, -35.0618, 0.83", "-47.6675, -44.759, -36.883, 0.83", "-48.0346, -46.4407, -41.2297, 0.28", "-48.1354, -47.0276, -42.7613, 0.28", "-48.5678, -49.2857, -48.886, 1.66", "-48.8545, -50.7448, -52.6946, 0.28", "-48.9604, -51.306, -54.111, 0.28", "-49.1955, -52.0945, -56.3606, 1.11", "-49.5057, -53.0829, -58.9743, 0.55", "-49.9467, -54.1418, -61.1609, 0.28", "-50.2495, -54.6892, -62.1636, 0.55", "-51.3248, -56.2699, -65.2791, 0.55", "-53.4616, -59.1823, -71.1989, 0.55", "-55.1668, -61.1458, -75.4726, 0.28", "-55.9507, -61.9543, -77.331, 0.83", "-58.6092, -64.5683, -83.3229, 0.83", "-60.0629, -65.8687, -86.5935, 0.28", "-60.2996, -66.0537, -87.1326, 0.83", "-62.999, -67.9522, -93.1723, 0.28", "-63.5225, -68.1887, -94.3381, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.3992, -18.8707, -1.70272, 0.83", "-39.2844, -19.2876, -1.95597, 0.55", "-41.2589, -19.6301, -2.0705, 0.55", "-45.4546, -20.2178, -2.32541, 0.55", "-50.1543, -21.1182, -2.35415, 0.55", "-53.4486, -21.8967, -2.30489, 0.55", "-57.0943, -22.8775, -2.15609, 0.55", "-58.5837, -23.3915, -2.09892, 0.55", "-61.4223, -24.6013, -1.92147, 0.55", "-66.1698, -27.1474, -1.60487, 0.55", "-69.3575, -29.2238, -1.24158, 0.83", "-71.2344, -30.5129, -1.07086, 0.55", "-74.4141, -32.6885, -1.00167, 0.55", "-75.3825, -33.3375, -1.01775, 0.55", "-77.4894, -34.7429, -1.05175, 0.55", "-80.1988, -36.4602, -1.28821, 1.11", "-84.2448, -38.9367, -1.66105, 0.55", "-85.9771, -39.9129, -1.90664, 0.55", "-87.576, -40.6631, -2.16661, 0.83", "-89.2156, -41.4163, -2.50213, 0.55", "-92.5154, -43.141, -3.29681, 0.55", "-93.2322, -43.5327, -3.48846, 0.55", "-96.2815, -44.9224, -4.25789, 1.39", "-98.9267, -46.1207, -4.84926, 0.83", "-101.527, -47.1905, -5.34461, 0.55", "-103.003, -47.6277, -5.59587, 0.55", "-105.149, -48.0845, -5.83894, 0.55", "-109.602, -48.8978, -6.33177, 0.55", "-111.849, -49.2426, -6.57567, 0.55", "-113.299, -49.5004, -6.80129, 0.55", "-116.656, -50.2071, -7.5558, 0.83", "-118.707, -50.7202, -8.14581, 0.83", "-122.165, -51.9202, -9.37459, 0.55", "-124.128, -52.8187, -10.1901, 0.83", "-126.314, -53.9767, -11.1549, 0.28", "-128.256, -55.2492, -12.0151, 0.55", "-128.935, -55.8374, -12.2516, 0.28", "-129.97, -56.8578, -12.6021, 0.83", "-131.07, -58.1394, -12.8801, 0.55", "-132.76, -60.1644, -13.1183, 0.28", "-134.216, -61.9318, -13.1649, 0.55", "-136.287, -64.3921, -13.1698, 0.28", "-138.935, -67.325, -13.2365, 0.83", "-140.693, -69.1118, -13.4119, 0.83", "-143.87, -72.3859, -13.7735, 0.28", "-146.397, -74.8933, -14.1079, 0.55", "-148.423, -76.9039, -14.3832, 0.28", "-149.919, -78.2749, -14.6325, 0.83", "-152.636, -80.7411, -14.8597, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "14.4673, -5.69311, 2.25193, 1.39", "17.2252, -3.54502, -0.678868, 0.83", "18.9219, -2.2235, -2.48191, 0.83", "19.9613, -1.41392, -3.58648, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.4673, -5.69311, 2.25193, 1.39", "16.9482, -3.0307, 3.49239, 1.11", "17.7186, -2.20386, 3.87763, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.49538, 5.41314, -12.1001, 1.39", "10.679, 8.32653, -16.4525, 1.11", "11.4312, 10.1782, -19.2187, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.49538, 5.41314, -12.1001, 1.39", "10.8337, 4.40296, -14.6996, 0.55", "12.8796, 2.55284, -18.4725, 0.55", "13.893, 1.78842, -19.7194, 0.83", "15.3528, 0.875206, -21.0629, 0.83", "17.5464, -0.351409, -22.7227, 0.28", "19.011, -1.11252, -23.6129, 0.83", "21.8899, -2.62377, -25.1458, 0.83", "27.3319, -5.54828, -27.5646, 0.83", "30.8757, -7.58615, -29.0966, 0.83", "33.258, -8.9447, -30.0115, 0.55", "34.1961, -9.45233, -30.3226, 0.55", "35.5463, -10.1634, -30.7316, 1.11", "38.5274, -11.7972, -31.7171, 0.83", "41.36, -14.6387, -32.665, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.1054, 30.2301, -2.26452, 0.33", "29.4932, 42.6657, -2.26452, 0.33", "37.8811, 55.1012, -2.26452, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-4.44492, 31.1168, -3.50232, 1.11", "-4.86766, 32.7074, -5.13188, 1.11", "-5.71747, 35.9049, -8.40766, 1.11", "-7.59749, 42.9787, -15.6546, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-4.44492, 31.1168, -3.50232, 1.11", "-17.6403, 31.0536, -5.71377, 0.83", "-23.8292, 31.3456, -6.65459, 0.83", "-26.4125, 31.5326, -7.15216, 0.83", "-31.8161, 31.9268, -8.55058, 0.83", "-35.983, 32.1526, -9.94609, 0.83", "-39.6854, 32.2029, -11.4994, 0.83", "-43.2027, 31.7051, -12.963, 0.83", "-45.6278, 31.49, -16.6978, 0.83", "-46.9697, 31.5433, -20.1954, 0.83", "-47.6013, 31.4888, -22.715, 0.83", "-48.2325, 31.3104, -25.3712, 0.83", "-49.0813, 30.9392, -28.2448, 0.83", "-52.3353, 29.6114, -35.7732, 0.83", "-53.8241, 29.2885, -38.4624, 0.83", "-55.9433, 29.1582, -41.7151, 0.83", "-57.6316, 29.1386, -44.0566, 0.83", "-59.6474, 29.1065, -46.7646, 0.83", "-62.4516, 29.0044, -50.192, 0.83", "-66.0516, 28.7414, -53.9391, 1.11", "-68.8592, 28.5356, -56.6226, 0.55", "-71.6703, 28.2904, -59.3571, 0.55", "-73.5254, 27.9833, -61.2481, 0.55", "-76.8409, 27.1639, -64.5637, 0.83", "-79.3314, 26.158, -66.9405, 0.55", "-81.3436, 24.991, -68.8017, 0.55", "-83.6374, 23.3102, -70.8827, 1.11", "-85.3863, 21.9088, -72.3313, 0.55", "-87.4318, 20.1995, -73.8041, 0.55", "-89.0749, 18.7061, -75.0295, 0.55", "-90.2347, 17.7141, -75.9149, 0.55", "-92.7956, 15.6435, -77.851, 0.83", "-95.6798, 13.4018, -79.8973, 0.28", "-97.6819, 11.8334, -81.4125, 1.39", "-100.281, 9.76452, -83.4278, 1.11", "-102.469, 8.11216, -85.0008, 0.28", "-103.861, 7.08703, -85.9727, 0.55", "-105.895, 5.62874, -87.5192, 0.28", "-107.667, 4.2365, -88.9936, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.22967, -16.05, -7.5974, 1.39", "-14.6831, -15.5323, -8.17444, 0.83", "-17.0712, -15.3407, -8.38797, 0.83", "-18.7313, -15.2075, -8.53641, 0.83", "-20.6095, -15.0568, -8.70435, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.22967, -16.05, -7.5974, 1.39", "-7.13207, -18.2625, -10.4961, 0.83", "-6.11152, -20.2357, -13.4132, 0.83", "-5.37199, -21.9108, -15.6317, 0.83", "-4.44306, -24.2299, -18.6864, 0.83", "-3.88108, -25.8587, -20.693, 0.83", "-2.85496, -29.15, -24.7348, 0.83", "-1.89594, -32.3478, -28.2912, 0.83", "-0.99935, -35.7312, -31.8194, 0.83", "-0.181749, -38.8197, -34.9333, 0.83", "0.402494, -41.029, -37.0692, 0.83", "1.34498, -44.6089, -40.1968, 0.83", "1.92126, -46.8904, -42.0001, 0.83", "2.3763, -48.71, -43.2471, 0.83", "3.09468, -51.2076, -44.9226, 0.55", "3.69742, -53.1428, -46.0157, 1.39", "5.02335, -56.9283, -48.0703, 1.39" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.9613, -1.41392, -3.58648, 0.83", "21.313, -1.66013, -5.06945, 0.83", "24.5523, -2.65031, -8.72729, 0.55", "26.3628, -3.33008, -10.7431, 0.55", "28.1369, -4.08285, -12.5986, 0.55", "29.6435, -4.73464, -14.125, 0.55", "31.5504, -5.61572, -16.0247, 0.55", "33.1947, -6.29121, -17.665, 0.55", "35.2166, -7.04012, -19.7744, 0.55", "38.7121, -8.13138, -23.607, 0.55", "39.8582, -8.40403, -24.8983, 0.55", "41.9963, -8.78641, -27.4137, 0.55", "43.9554, -9.0287, -29.8112, 0.55", "46.3139, -9.24948, -32.7941, 0.55", "47.8262, -9.3961, -34.7045, 0.55", "49.414, -9.54411, -36.7835, 0.55", "51.7912, -9.78658, -39.7551, 0.55", "52.7038, -9.9016, -40.8269, 0.55", "54.29, -10.101, -42.5288, 0.55", "57.0066, -10.3244, -45.238, 0.55", "59.99, -10.39, -48.072, 0.55", "62.034, -10.313, -49.9646, 0.55", "64.6855, -10.0526, -52.3534, 0.55", "67.1921, -9.66484, -54.541, 0.55", "69.6256, -9.15639, -56.6056, 0.55", "71.2759, -8.76139, -57.9386, 0.55", "72.8819, -8.41181, -59.1688, 0.55", "74.0093, -8.20688, -60.0545, 0.83", "76.4788, -7.72943, -61.9823, 0.55", "77.4435, -7.58015, -62.7551, 0.83", "80.685, -7.13234, -65.495, 0.55", "81.6133, -7.02195, -66.3146, 0.83", "85.1093, -6.65327, -69.5048, 0.55", "86.5214, -6.57764, -70.8565, 0.55", "88.0251, -6.54797, -72.3741, 0.55", "89.7861, -6.53408, -74.1962, 0.55", "90.8742, -6.51255, -75.3549, 0.55", "91.9341, -6.50498, -76.5207, 0.55", "94.085, -6.57297, -79.0555, 0.83", "94.814, -6.65966, -79.9559, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.9613, -1.41392, -3.58648, 0.83", "22.1376, -3.32579, -1.05772, 0.83", "23.6234, -4.21844, 0.355992, 0.83", "26.4576, -5.22365, 2.56214, 0.83", "27.9308, -5.74614, 3.70887, 0.83", "28.9984, -6.12481, 4.53995, 0.83", "31.4611, -6.99825, 6.45692, 0.55", "33.2244, -7.19198, 7.64666, 0.55", "35.2888, -7.06619, 8.75932, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "17.7186, -2.20386, 3.87763, 1.11", "20.7717, 0.984499, 4.34189, 0.55", "22.9131, 3.7316, 4.67115, 0.83", "24.4082, 5.84926, 5.08893, 0.55", "26.5654, 8.90455, 5.6917, 0.55", "27.1889, 9.78764, 5.86592, 0.55", "28.1961, 11.2142, 6.14736, 0.83", "29.0452, 12.3479, 6.59384, 0.55", "37.6241, 21.2861, 6.50607, 0.83", "45.4608, 28.3827, 5.12646, 0.83", "53.5128, 35.3476, 4.54878, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.7186, -2.20386, 3.87763, 1.11", "17.0457, -1.89683, 7.11801, 0.55", "16.8029, -1.84836, 8.5126, 0.55", "16.598, -1.73551, 10.2698, 0.55", "16.2654, -1.40638, 17.2826, 0.55", "16.2282, -1.26176, 19.4114, 0.55", "16.2491, -1.15752, 20.6494, 0.55", "16.5531, -0.813118, 24.279, 0.55", "16.9737, -0.47365, 27.5958, 0.55", "17.6202, -0.0141411, 31.2984, 0.55", "18.0097, 0.181587, 33.0136, 0.55", "18.6687, 0.357535, 35.3575, 1.11", "19.0171, 3.04111, 44.9249, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.4312, 10.1782, -19.2187, 1.39", "17.6688, 10.5548, -24.2821, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.4312, 10.1782, -19.2187, 1.39", "11.8428, 10.9715, -20.99, 0.83", "12.3491, 12.5824, -23.9189, 0.83", "12.8322, 15.2268, -27.9404, 0.83", "12.9491, 16.0725, -29.2013, 0.83", "12.9401, 17.7385, -31.6447, 0.83", "12.9218, 21.1454, -36.6414, 0.83", "12.8212, 23.024, -39.3304, 0.83", "12.6708, 24.1959, -40.8246, 0.83", "12.4631, 26.2721, -43.2492, 0.83", "11.6758, 29.63, -47.5617, 1.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "41.36, -14.6387, -32.665, 0.83", "43.7933, -15.7658, -33.554, 0.83", "46.3904, -17.3606, -34.5525, 0.83", "47.8922, -18.2645, -35.0831, 0.83", "50.3141, -19.7117, -35.8143, 0.83", "53.701, -21.7424, -36.8267, 0.83", "58.7273, -24.7632, -38.277, 0.83", "62.0114, -26.7759, -39.1971, 0.83", "65.7884, -29.1626, -40.1172, 0.83", "69.5546, -31.5689, -40.993, 0.83", "71.304, -32.7166, -41.3651, 1.11", "76.8462, -36.4055, -42.3828, 0.83", "79.2694, -37.9614, -42.8399, 0.83", "81.7975, -39.5493, -43.2871, 0.83", "85.021, -41.7569, -43.8912, 0.83", "87.099, -43.2069, -44.2945, 0.83", "89.6095, -44.9824, -44.6811, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "41.36, -14.6387, -32.665, 0.83", "42.5165, -16.5002, -33.605, 0.28", "42.7622, -16.8199, -33.7591, 0.55", "43.9243, -18.2412, -34.4251, 0.28", "45.2549, -19.7969, -35.1023, 1.11", "49.1381, -24.1862, -36.9928, 0.28", "49.6397, -24.7389, -37.2228, 0.83", "52.4716, -27.5382, -38.3646, 0.28", "53.0843, -28.0976, -38.5797, 0.55", "54.2328, -29.0863, -38.9234, 0.28", "56.2, -30.6474, -39.4514, 0.83", "58.785, -32.5119, -40.0207, 0.28", "60.2052, -33.5397, -40.3466, 0.55", "62.2051, -34.995, -40.8423, 0.28", "62.9569, -35.5189, -41.0292, 0.55", "65.6799, -37.3409, -41.7405, 0.28", "67.955, -38.7468, -42.2448, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-7.59749, 42.9787, -15.6546, 1.11", "-7.02227, 48.6237, -16.4804, 1.11", "-6.27229, 52.9763, -16.9451, 1.11", "-5.38624, 58.1187, -17.4941, 1.11", "-4.85408, 61.2071, -17.8239, 1.11", "-4.19921, 65.0078, -18.2297, 1.11", "-3.18266, 70.9075, -18.8595, 1.11", "-3.06006, 77.2031, -20.4697, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-7.59749, 42.9787, -15.6546, 1.11", "-9.95951, 42.3569, -14.0486, 1.11", "-13.6088, 41.3964, -11.5672, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-20.6095, -15.0568, -8.70435, 1.11", "-21.578, -15.0749, -12.0414, 0.55", "-21.7296, -15.1571, -12.5191, 0.55", "-22.1776, -15.5305, -13.7701, 0.55", "-24.9229, -18.0584, -20.2353, 0.55", "-25.6594, -18.6487, -21.6443, 0.55", "-26.0705, -18.9782, -22.4306, 0.55", "-28.1674, -20.8209, -25.8612, 0.55", "-28.8939, -21.5307, -26.9905, 0.55", "-29.66, -22.4288, -28.0663, 0.55", "-31.3858, -24.6829, -29.1063, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-20.6095, -15.0568, -8.70435, 1.11", "-22.0841, -18.3815, -10.0957, 0.83", "-24.1, -22.044, -11.6534, 0.83", "-24.7745, -23.2473, -12.1111, 0.28", "-25.2313, -24.1081, -12.4295, 0.83", "-26.2769, -26.0983, -13.0234, 0.55", "-28.0403, -29.2247, -13.8827, 0.55", "-30.8199, -33.719, -15.07, 0.55", "-32.0503, -35.6145, -15.6354, 0.55", "-34.486, -39.2327, -16.7993, 0.83", "-37.3611, -43.3397, -18.1926, 0.83", "-39.7644, -46.7586, -19.3318, 0.83", "-41.2816, -48.9639, -20.0383, 0.83", "-42.5542, -50.78, -20.7021, 0.83", "-43.6743, -52.2422, -21.3367, 0.83", "-44.1925, -52.842, -21.6512, 0.83", "-45.5395, -54.4393, -22.9905, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "5.02335, -56.9283, -48.0703, 1.39", "9.1311, -59.0794, -49.4187, 0.55", "11.2864, -60.208, -50.1262, 0.83", "13.8543, -61.5527, -50.9691, 0.55", "15.1795, -62.2466, -51.4041, 0.55", "16.1788, -62.7699, -51.7322, 0.55", "18.0237, -63.736, -52.3378, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.02335, -56.9283, -48.0703, 1.39", "5.44003, -57.7236, -49.2461, 0.55", "7.56409, -61.7722, -54.9443, 0.55", "8.20572, -62.9385, -56.6817, 0.55", "9.36849, -65.0488, -59.7826, 0.55", "9.64704, -65.5915, -60.545, 0.55", "10.5128, -67.3326, -62.8895, 1.11", "11.3677, -69.3653, -65.3651, 0.28", "12.0488, -71.2752, -67.2429, 0.28", "12.3322, -72.3079, -68.1117, 0.28", "12.5222, -73.6093, -68.9286, 0.83", "12.729, -74.8932, -69.6293, 0.28", "12.9376, -76.4935, -70.2632, 0.28", "13.159, -77.9186, -70.6164, 0.55", "13.2937, -78.9808, -70.9054, 0.28", "13.4163, -80.0633, -71.3395, 0.28", "13.5628, -81.4552, -72.0477, 0.83", "13.7609, -84.3465, -73.8233, 0.83", "13.9137, -87.0433, -75.5335, 0.28", "13.9539, -88.9571, -76.8258, 0.83", "14.0364, -91.6944, -78.74, 0.28", "14.1029, -93.4873, -80.0618, 0.55", "14.0951, -95.8566, -82.1084, 0.28", "14.0868, -97.4069, -83.644, 1.11", "14.0912, -100.251, -86.721, 0.28", "14.1939, -102.411, -89.0307, 0.28", "14.277, -103.479, -90.2119, 0.83", "14.5176, -107.185, -94.5813, 0.28", "14.5736, -108.136, -95.7864, 0.55", "14.6007, -109.28, -97.3699, 0.55", "14.6681, -110.775, -99.5552, 0.55", "14.6206, -112.308, -101.797, 0.28", "14.6365, -112.885, -102.523, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "35.2888, -7.06619, 8.75932, 0.55", "36.0174, -3.05741, 10.0759, 0.28", "36.1412, -2.37651, 10.2996, 0.83", "36.4188, -0.848802, 10.8013, 0.28", "37.3007, 4.00272, 12.3947, 0.83", "40.3568, 16.0233, 16.4457, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.2888, -7.06619, 8.75932, 0.55", "41.3856, -9.8716, 11.9677, 0.28", "41.9447, -10.1289, 12.2619, 0.83", "43.6865, -10.9304, 13.1786, 0.55", "48.3003, -13.0534, 15.6065, 1.11", "58.7055, -14.9938, 21.2859, 1.11", "69.3822, -17.9226, 25.9464, 1.11", "78.9694, -22.5867, 31.48, 1.11", "88.0845, -28.0909, 37.0395, 1.11", "97.2199, -34.5368, 41.4308, 1.11", "104.672, -42.2125, 46.8932, 1.11", "113.019, -47.7865, 53.4921, 1.11", "119.695, -55.2258, 60.1543, 1.11", "124.467, -64.1939, 66.5645, 1.11", "130.607, -72.9856, 71.9767, 1.11", "137.135, -81.2352, 77.7751, 1.11", "143.744, -89.4242, 83.5671, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "53.5128, 35.3476, 4.54878, 0.83", "61.1992, 43.2825, 4.28215, 0.83", "68.8298, 51.2099, 5.30468, 0.83", "76.4301, 59.2066, 5.93885, 0.83", "82.3246, 68.3996, 7.62967, 0.83", "88.974, 76.8256, 10.2569, 0.83", "96.6719, 84.4172, 12.5427, 0.83", "103.125, 93.2898, 13.8671, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "53.5128, 35.3476, 4.54878, 0.83", "58.7186, 40.8269, 4.73351, 0.83", "70.4789, 49.653, 7.83773, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.0171, 3.04111, 44.9249, 1.11", "19.4661, 1.95009, 58.779, 0.83", "18.2847, 1.98113, 72.6329, 0.83", "13.958, 4.33227, 85.6359, 0.83", "9.00589, 4.74131, 98.622, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.0171, 3.04111, 44.9249, 1.11", "19.7216, 5.79518, 55.3003, 0.83", "22.3449, 7.99877, 65.4981, 0.83", "24.4106, 8.03988, 76.0557, 0.83", "27.4744, 7.06309, 86.3217, 0.83", "30.1949, 5.68507, 96.6383, 0.83", "32.967, 2.40634, 106.503, 0.83", "36.6878, -0.774172, 116.082, 0.83", "40.7928, -3.0894, 125.753, 0.83", "45.0049, -5.70102, 135.301, 0.83", "49.4046, -9.12711, 144.501, 0.83", "53.2254, -10.7654, 154.423, 0.83", "55.3401, -12.5786, 164.814, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.6688, 10.5548, -24.2821, 0.83", "19.7999, 11.9009, -26.7051, 0.83", "24.7242, 14.7971, -31.823, 0.83", "27.2883, 16.0102, -34.232, 0.83", "29.2633, 16.8498, -36.0397, 0.83", "32.1234, 17.9763, -38.6089, 0.83", "33.8437, 18.527, -40.0845, 0.83", "36.7859, 19.2682, -42.3567, 0.83", "38.1648, 19.5935, -43.4068, 0.83", "39.5331, 19.8536, -44.4736, 0.83", "40.9111, 20.1751, -45.526, 0.83", "42.1065, 20.4622, -46.4706, 0.83", "44.92, 21.2688, -48.739, 0.83", "46.6721, 21.8912, -50.192, 0.83", "48.3678, 22.5187, -51.5877, 0.83", "52.6239, 24.1158, -55.0903, 0.83", "54.9426, 24.9238, -56.9208, 0.83", "56.7814, 25.5578, -58.3047, 0.55", "58.2457, 26.0565, -59.3594, 0.55", "59.6408, 26.5538, -60.3069, 0.55", "60.8724, 26.9994, -61.1004, 0.55", "65.2517, 28.5457, -63.8088, 0.55", "67.1913, 29.2571, -64.9754, 0.55", "68.4583, 29.6599, -65.7636, 1.11", "69.3447, 29.9561, -66.3238, 0.55", "70.2869, 30.2673, -66.9505, 0.55", "72.4727, 30.9794, -68.4498, 0.55", "73.6514, 31.3357, -69.2309, 0.83", "75.4763, 31.7821, -70.3891, 0.55", "78.3857, 32.3903, -72.0754, 0.55", "79.6966, 32.63, -72.8007, 0.55", "82.912, 33.2308, -74.5173, 0.55", "85.1852, 33.6373, -75.7023, 0.55", "86.8937, 33.9377, -76.611, 0.55", "89.3633, 34.3986, -77.9669, 0.55", "92.1807, 34.8886, -79.6241, 0.55", "94.9316, 35.4674, -81.3141, 0.28", "95.3268, 35.5528, -81.5843, 0.55", "96.3992, 35.8083, -82.4092, 0.28", "98.2015, 36.3379, -83.8079, 0.28", "98.716, 36.5261, -84.2514, 0.83", "100.196, 37.2398, -85.4363, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.6688, 10.5548, -24.2821, 0.83", "18.8624, 7.53177, -29.6566, 0.55", "20.4225, 4.87793, -35.0532, 0.55", "21.1683, 3.94177, -37.0665, 0.55", "21.5337, 3.5254, -37.9345, 0.83", "23.0345, 2.11865, -41.0368, 0.55", "25.135, 0.464482, -44.5669, 0.55", "26.8531, -0.890942, -47.8379, 0.55", "28.1651, -1.9534, -50.6852, 0.55", "29.3065, -2.96476, -53.4556, 0.55", "30.7, -4.30557, -57.0845, 0.55", "31.7769, -5.57966, -60.3719, 0.55", "33.2112, -7.80869, -66.4329, 0.83", "33.6191, -8.50322, -68.5178, 0.55", "33.8031, -8.84928, -69.6197, 0.55", "34.3324, -9.69781, -72.4808, 0.83", "35.099, -10.6672, -75.4597, 0.55", "36.3341, -11.7129, -78.5156, 0.55", "36.915, -12.168, -79.4693, 0.83", "38.3392, -13.3667, -81.8679, 0.28", "38.7422, -13.6982, -82.531, 0.83", "40.0616, -14.911, -84.6955, 0.28", "40.9084, -15.7785, -86.1288, 0.55", "42.4728, -17.7733, -89.3746, 0.55", "43.8896, -19.856, -93.0041, 0.28", "44.449, -20.6909, -94.5843, 0.28", "44.8499, -21.2806, -95.8644, 0.28", "45.3995, -22.0846, -97.8289, 0.83", "46.1507, -23.129, -100.544, 0.28", "46.5868, -23.7997, -102.358, 0.83", "47.4033, -25.3821, -106.088, 0.55", "48.2278, -27.0089, -109.741, 0.28", "48.4874, -27.5064, -110.786, 0.83", "48.81, -28.2228, -112.332, 0.83", "49.3279, -29.5565, -115.279, 0.55", "49.6835, -30.6452, -117.846, 0.55", "49.9402, -31.9877, -121.269, 0.55", "50.2437, -33.0112, -123.652, 0.55", "51.1672, -35.3409, -128.676, 0.55", "51.6027, -36.209, -130.407, 0.28", "51.8096, -36.5769, -131.121, 0.83", "52.9906, -38.478, -135.097, 0.28", "54.4449, -41.2411, -140.098, 0.55", "55.2415, -42.4009, -141.648, 0.28", "55.727, -42.9979, -141.928, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.6758, 29.63, -47.5617, 1.66", "11.2286, 31.6548, -49.742, 0.55", "9.95492, 37.0592, -54.483, 0.55", "9.43289, 38.9878, -55.9981, 0.28", "8.80919, 40.4081, -57.4322, 0.55", "7.57254, 42.8228, -60.3533, 0.55", "6.97358, 43.5814, -61.6132, 0.55", "5.48045, 44.8681, -64.2457, 0.55", "4.54111, 45.5794, -65.8703, 0.55", "0.705157, 48.2523, -72.6214, 1.39", "-0.734535, 49.2568, -75.3345, 0.55", "-2.58678, 50.5651, -79.0438, 0.55", "-5.6463, 52.7716, -85.7274, 0.55", "-6.1776, 53.1762, -86.9925, 0.55", "-8.32832, 54.9949, -92.5824, 0.55", "-9.92131, 56.7298, -97.8682, 0.55", "-10.549, 57.5817, -100.427, 0.55", "-10.8159, 58.2563, -102.359, 0.55", "-10.9216, 58.9719, -104.62, 0.28", "-10.8815, 59.4517, -106.171, 1.11", "-10.3973, 60.7187, -110.089, 0.28", "-10.2493, 61.0135, -110.94, 0.83", "-9.32224, 62.7937, -115.634, 0.28", "-9.23307, 62.9774, -116.051, 0.83", "-8.5205, 64.4494, -119.109, 0.28", "-7.96438, 65.6978, -121.431, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.6758, 29.63, -47.5617, 1.66", "12.0372, 27.9051, -50.2903, 0.83", "12.5726, 25.2282, -55.287, 0.83", "12.6658, 24.1726, -57.7113, 0.83", "12.6285, 23.5635, -59.0891, 0.55", "12.2187, 21.4899, -65.021, 0.55", "11.6411, 20.8004, -67.6514, 0.55", "10.9155, 20.5098, -69.7191, 0.55", "9.80676, 20.2986, -72.4915, 0.83", "8.58359, 20.0992, -75.1997, 0.28", "6.05833, 19.4396, -80.2631, 1.66", "2.08092, 17.3534, -86.5838, 0.83", "0.125522, 15.8656, -89.0701, 0.83", "-3.20603, 12.5964, -92.6775, 0.28", "-3.63846, 12.054, -93.0765, 0.55", "-5.65633, 9.19651, -94.4704, 0.28", "-8.17338, 5.00927, -95.5733, 0.28", "-10.0115, 1.55372, -96.2224, 0.83", "-11.5702, -1.01509, -96.7134, 0.28", "-12.0402, -1.67589, -96.9076, 0.55", "-14.8565, -5.60447, -98.0245, 0.28", "-16.1927, -7.42157, -98.4471, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-3.06006, 77.2031, -20.4697, 1.11", "-7.23213, 87.0056, -23.9949, 1.11" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-3.06006, 77.2031, -20.4697, 1.11", "-1.04683, 78.72, -20.6952, 0.55", "2.28272, 80.9005, -20.8836, 0.55", "4.89688, 82.5433, -20.9436, 0.55", "9.07163, 85.0004, -21.21, 0.55", "16.7906, 89.2374, -21.539, 0.55", "24.4656, 93.2912, -21.9653, 0.55", "27.9558, 94.9787, -22.2786, 0.55", "30.6914, 96.1568, -22.6824, 0.55", "36.6571, 98.6776, -23.981, 0.55", "40.8675, 100.381, -25.2891, 0.55", "44.7243, 102.058, -26.9122, 0.55", "51.2904, 105.079, -30.161, 0.55", "55.2641, 106.864, -32.1838, 0.55", "59.4683, 108.771, -34.447, 0.28", "61.0847, 109.551, -35.3383, 0.55", "65.1374, 111.582, -37.8293, 0.28", "66.8868, 112.423, -38.7443, 0.28", "70.9369, 114.245, -40.0825, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-13.6088, 41.3964, -11.5672, 1.11", "-18.3887, 39.682, -9.85319, 0.55", "-22.5012, 38.4343, -8.96307, 0.55", "-25.8795, 37.4139, -8.40369, 0.55", "-27.1241, 37.0493, -8.20479, 0.55", "-31.1207, 35.8711, -7.57105, 0.55", "-34.2564, 34.987, -7.04772, 0.55", "-39.8392, 33.6809, -6.26456, 0.55", "-46.0295, 32.644, -5.37331, 0.55", "-50.8213, 32.0391, -4.76831, 0.55", "-52.2905, 31.9234, -4.6128, 0.55", "-56.1127, 31.7617, -4.39313, 0.55", "-60.4266, 31.5839, -4.35833, 0.55", "-65.136, 31.5417, -4.4668, 0.55", "-68.7216, 31.5759, -4.79837, 0.55", "-71.03, 31.5905, -5.11371, 0.55", "-75.3318, 31.6064, -5.76739, 0.55", "-78.0796, 31.5713, -6.21466, 0.55", "-82.2515, 31.5036, -6.82998, 0.55", "-85.0486, 31.4219, -7.09531, 0.55", "-87.2472, 31.4794, -7.07598, 0.83", "-89.1092, 31.6272, -6.90134, 0.55", "-90.9436, 31.8399, -6.6083, 0.55", "-93.0096, 32.149, -6.26985, 0.55", "-95.1809, 32.4727, -5.87184, 0.83", "-97.3886, 32.7471, -5.46359, 0.55", "-99.2259, 32.8505, -5.15908, 1.11", "-101.718, 32.8686, -4.89231, 0.83", "-103.603, 32.8119, -4.78222, 0.83", "-105.688, 32.6842, -4.80193, 0.55", "-107.359, 32.6233, -4.96051, 0.55", "-109.916, 32.4971, -5.36309, 0.83", "-112.995, 32.1677, -6.04441, 0.55", "-113.627, 32.0676, -6.20075, 0.83", "-115.635, 31.5847, -6.68591, 0.55", "-117.053, 31.2249, -7.01874, 0.55", "-120.0, 30.4764, -7.6141, 0.55", "-121.983, 29.9674, -7.993, 0.55", "-125.276, 29.1469, -8.54917, 0.55", "-130.127, 27.9342, -9.32931, 0.83", "-133.379, 27.0328, -9.87556, 0.28", "-134.25, 26.7536, -10.0462, 0.55", "-136.139, 26.1051, -10.4752, 0.28", "-138.014, 25.3793, -10.9212, 0.28", "-139.972, 24.3789, -11.4779, 0.28", "-142.058, 23.0233, -12.3129, 0.28", "-142.946, 22.3488, -12.7869, 0.28", "-143.155, 22.1774, -12.9251, 0.83", "-144.249, 21.2012, -13.7205, 0.28", "-144.776, 20.7095, -14.1742, 0.83", "-147.633, 18.3111, -16.8016, 0.28", "-148.977, 17.3697, -18.0424, 0.55", "-149.686, 16.9442, -18.7163, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-13.6088, 41.3964, -11.5672, 1.11", "-16.9442, 40.2504, -10.9125, 0.83", "-20.022, 39.303, -10.3717, 0.83", "-23.579, 38.1323, -9.80958, 0.83", "-27.8643, 36.7347, -9.13182, 0.83", "-29.492, 36.2077, -8.91039, 0.83", "-31.1921, 35.6938, -8.7593, 0.55", "-33.2632, 35.1924, -8.73759, 0.55", "-37.1676, 34.3258, -8.918, 0.55", "-39.6075, 33.726, -9.16949, 0.55", "-41.8889, 33.1536, -9.46179, 0.55", "-46.9318, 31.8459, -10.179, 0.83", "-49.1653, 31.2767, -10.5331, 0.83", "-50.3567, 30.9583, -10.7356, 0.83", "-53.1411, 30.2225, -11.267, 0.83", "-55.7129, 29.4659, -11.7379, 0.55", "-56.7057, 29.1617, -11.8636, 0.83", "-59.288, 28.3247, -12.0144, 0.55", "-59.7288, 28.1863, -12.0182, 0.83", "-61.577, 27.6518, -12.0545, 0.55", "-62.9903, 27.28, -12.079, 0.55", "-64.0194, 27.0444, -12.0933, 0.55", "-66.2199, 26.5264, -12.0181, 0.55", "-67.8502, 26.0977, -11.8942, 0.55", "-69.4391, 25.6509, -11.7986, 0.55", "-71.4354, 25.0225, -11.7092, 0.55", "-73.3891, 24.3574, -11.7013, 0.55", "-76.1234, 23.4407, -11.727, 0.55", "-76.9181, 23.1698, -11.7337, 0.83", "-78.6018, 22.607, -11.7495, 0.55", "-79.4595, 22.3168, -11.7731, 0.83", "-81.878, 21.4704, -11.9026, 0.55", "-83.4791, 20.8417, -12.0228, 0.55", "-85.9311, 19.8296, -12.2702, 0.55", "-86.9812, 19.3543, -12.3768, 0.83", "-89.1084, 18.2474, -12.5715, 0.28", "-89.8282, 17.8426, -12.6582, 0.55", "-90.8379, 17.1708, -12.8242, 0.28", "-91.6848, 16.5621, -12.9555, 0.83", "-93.2261, 15.4288, -13.1377, 0.28", "-93.9913, 14.8882, -13.1861, 0.55", "-94.9254, 14.2589, -13.2008, 0.28", "-95.6312, 13.8039, -13.2046, 0.83", "-98.1172, 12.2475, -13.1878, 0.28", "-99.0726, 11.6508, -13.1618, 0.83", "-101.496, 10.0893, -13.0093, 0.28", "-102.993, 9.10828, -12.9162, 0.28", "-103.337, 8.88036, -12.8909, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-31.3858, -24.6829, -29.1063, 0.83", "-34.6623, -25.286, -30.7552, 0.83", "-38.5604, -26.1146, -32.5018, 0.55", "-43.2604, -27.1826, -34.3695, 0.55", "-45.3147, -27.7047, -35.1892, 0.55", "-48.5859, -28.6471, -36.5126, 0.83", "-52.2751, -29.8466, -38.076, 0.55", "-55.2586, -31.1822, -39.6194, 0.55", "-56.0945, -31.6431, -40.0588, 0.55", "-57.4765, -32.3928, -40.7846, 0.55", "-58.458, -32.9521, -41.3989, 0.55", "-60.2998, -34.0732, -42.7076, 0.83", "-62.5543, -35.3614, -44.2434, 0.28", "-64.1742, -36.3604, -45.5898, 1.94", "-66.9276, -37.9461, -47.88, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-31.3858, -24.6829, -29.1063, 0.83", "-30.2553, -24.3961, -32.3083, 0.55", "-29.5815, -24.3481, -34.09, 0.55", "-28.8991, -24.3676, -35.8662, 0.55", "-28.2857, -24.4047, -37.5439, 0.55", "-27.8877, -24.3943, -38.9207, 1.11", "-27.0393, -24.3825, -41.8694, 0.28", "-26.8609, -24.4119, -42.4911, 0.55", "-26.5124, -24.4667, -43.8327, 0.28", "-26.0655, -24.5549, -45.5279, 0.83", "-25.1798, -24.7034, -49.4915, 0.83", "-24.922, -24.7321, -50.6578, 0.55", "-24.5118, -24.8244, -52.4818, 1.11", "-24.3114, -24.9104, -53.4351, 0.28", "-24.1214, -25.0368, -54.205, 0.28", "-23.686, -25.4203, -55.9823, 1.11", "-23.1034, -26.0048, -58.298, 0.55", "-22.5573, -26.5988, -60.7054, 0.55", "-22.2366, -26.9707, -62.1512, 0.55", "-21.6681, -27.7523, -65.0205, 0.55", "-20.894, -28.8697, -69.1323, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-45.5395, -54.4393, -22.9905, 0.83", "-45.4143, -56.148, -22.3769, 0.55", "-45.0105, -61.3373, -20.6867, 0.55", "-44.7803, -65.0096, -19.4554, 0.55", "-44.6151, -67.4794, -18.7023, 0.55", "-44.3987, -70.5102, -17.75, 0.55", "-44.2451, -73.1501, -16.9061, 0.55", "-44.1682, -74.5787, -16.4537, 0.83", "-44.0922, -76.6149, -15.7882, 0.55", "-43.9316, -79.9122, -14.4567, 0.55", "-43.8557, -81.8628, -13.5583, 0.55", "-43.7698, -84.267, -12.3557, 0.55", "-43.6359, -87.6468, -10.5672, 0.55", "-43.5193, -90.1731, -9.11943, 0.55", "-43.3543, -92.6584, -7.6471, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-45.5395, -54.4393, -22.9905, 0.83", "-45.6842, -54.585, -23.014, 0.83", "-47.6686, -55.9875, -23.4152, 0.83", "-49.2258, -57.1355, -23.7848, 0.83", "-50.186, -57.8288, -24.0183, 0.83", "-51.4431, -58.8047, -24.3406, 1.11", "-53.1749, -60.3046, -24.8611, 0.55", "-55.1912, -62.3128, -25.5795, 0.55", "-56.1062, -63.338, -25.9381, 0.55", "-56.6689, -64.0929, -26.208, 0.55", "-57.6069, -65.7331, -26.7419, 0.55", "-58.296, -67.4784, -27.2836, 0.55", "-58.5331, -68.5735, -27.595, 0.28", "-58.6439, -69.4041, -27.821, 0.83", "-58.7986, -70.7598, -28.219, 0.28", "-58.9512, -71.9573, -28.5654, 0.28", "-59.1078, -72.7591, -28.8052, 0.83", "-59.5575, -74.423, -29.2906, 0.28", "-59.9539, -75.4254, -29.6006, 0.55", "-60.4545, -76.4611, -29.9235, 0.28", "-60.9931, -77.4452, -30.2208, 1.11", "-61.7946, -78.7741, -30.6366, 0.83", "-62.3407, -79.634, -30.8852, 0.55", "-63.3379, -81.0911, -31.289, 0.55", "-64.0629, -82.2365, -31.5898, 0.55", "-64.5568, -83.0029, -31.7883, 0.55", "-65.2589, -84.0495, -32.0859, 0.55", "-66.1135, -85.3321, -32.4697, 0.55", "-66.8879, -86.5374, -32.824, 0.28", "-67.2796, -87.1743, -32.996, 0.28", "-68.6294, -89.2614, -33.5754, 0.28", "-69.0197, -89.8737, -33.7441, 1.11", "-70.6039, -92.538, -34.5059, 0.28", "-71.1627, -93.5696, -34.8283, 0.28", "-71.6324, -94.505, -35.1362, 0.55", "-72.1546, -95.5755, -35.4992, 0.28", "-72.5216, -96.4611, -35.815, 1.11", "-73.3481, -98.647, -36.6495, 0.28", "-73.5015, -99.0683, -36.8369, 0.83", "-73.9754, -100.414, -37.483, 0.28", "-74.024, -100.567, -37.5566, 0.83", "-74.5504, -102.357, -38.3625, 0.28", "-74.7078, -102.835, -38.5696, 0.55", "-75.0637, -103.953, -39.03, 0.28", "-75.1334, -104.174, -39.1176, 0.55", "-75.424, -105.225, -39.506, 0.28", "-75.5215, -105.537, -39.62, 0.55", "-76.295, -107.411, -40.2336, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "18.0237, -63.736, -52.3378, 0.55", "19.036, -65.716, -53.1326, 0.55", "21.0498, -69.8643, -54.8504, 0.55", "22.7006, -72.7841, -56.2605, 0.55", "24.2123, -75.0086, -57.6723, 0.55", "25.6766, -77.0059, -59.1289, 0.55", "26.7453, -78.4636, -60.1919, 0.55", "28.6377, -80.8662, -62.0763, 0.55", "30.8827, -83.4755, -64.3509, 0.55", "33.9795, -86.5952, -67.7511, 0.55", "35.7816, -88.3229, -69.9246, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "18.0237, -63.736, -52.3378, 0.55", "18.9419, -64.1736, -52.6546, 0.83", "21.7701, -65.9019, -53.6743, 0.55", "23.5486, -67.1558, -54.3444, 0.55", "27.1685, -69.9763, -55.8883, 0.28", "28.7056, -71.2049, -56.5937, 0.28", "30.2425, -72.4275, -57.2544, 0.28", "31.3509, -73.3774, -57.7093, 0.83", "31.6559, -73.6527, -57.8161, 0.83", "33.0828, -75.1747, -58.3533, 0.28", "34.0155, -76.342, -58.9726, 0.83", "36.4047, -78.8432, -60.2153, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "40.3568, 16.0233, 16.4457, 0.83", "42.6362, 25.3332, 18.3103, 0.83", "45.6597, 34.5097, 19.7243, 0.83", "49.3425, 43.1943, 22.2466, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "40.3568, 16.0233, 16.4457, 0.83", "42.8589, 26.3224, 19.8279, 0.83", "46.6553, 36.423, 22.5364, 0.83", "48.8981, 47.2742, 23.5333, 0.83", "49.3515, 58.0221, 26.3704, 0.83", "49.7286, 68.6818, 29.5326, 0.83", "49.2164, 79.3622, 32.605, 0.83", "50.7185, 89.4089, 37.1415, 0.83", "53.0989, 98.4122, 43.228, 0.83", "54.3408, 106.99, 50.2029, 0.83", "57.8662, 116.048, 55.6158, 0.83", "61.6501, 125.566, 59.9575, 0.83", "63.7533, 136.2, 62.4628, 0.83", "66.9332, 146.096, 66.4277, 0.83", "70.1988, 155.437, 71.5122, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-7.23213, 87.0056, -23.9949, 1.11", "-6.73612, 88.6209, -24.5259, 1.11", "-5.4501, 92.8087, -25.9027, 1.11" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-7.23213, 87.0056, -23.9949, 1.11", "-6.79738, 89.848, -21.3733, 0.55", "-6.68847, 91.4711, -19.8348, 0.55", "-6.70562, 93.9487, -17.3378, 0.55", "-6.73807, 97.5877, -13.7107, 0.55", "-6.78354, 99.5598, -11.7319, 0.55", "-6.88934, 102.001, -9.12813, 0.55", "-6.98011, 102.839, -8.22281, 0.55", "-7.49758, 106.126, -4.57404, 0.55", "-7.85154, 107.877, -2.62461, 0.55", "-8.03896, 108.712, -1.54123, 0.55", "-8.19599, 110.162, 0.412977, 0.55", "-8.21657, 111.884, 2.76926, 0.55", "-8.15813, 112.878, 4.07578, 0.55", "-8.11677, 113.777, 5.29224, 0.55", "-8.08796, 114.859, 6.68174, 0.55", "-8.07013, 117.351, 9.59811, 0.55", "-8.06766, 119.069, 11.5618, 0.55", "-8.13293, 120.274, 12.9271, 0.55", "-8.42725, 122.841, 15.7123, 0.55", "-8.80235, 125.588, 18.4237, 0.55", "-9.04382, 127.005, 19.7375, 0.55", "-9.61639, 129.203, 21.7021, 0.55", "-10.1536, 130.902, 23.2611, 0.28", "-10.2486, 131.239, 23.5867, 0.55", "-10.458, 132.219, 24.354, 0.55" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-66.9276, -37.9461, -47.88, 0.55", "-64.4217, -39.768, -45.393, 0.55", "-62.0064, -41.5235, -42.4774, 0.55", "-61.9109, -41.8429, -44.1371, 0.55", "-61.5696, -42.2378, -45.3706, 0.55", "-61.1892, -42.969, -47.3784, 0.55", "-60.7058, -44.8359, -51.9216, 0.55", "-60.5897, -45.6603, -53.83, 0.83", "-60.5972, -46.6895, -56.0669, 0.83", "-60.7769, -47.6498, -58.1181, 0.55", "-61.3029, -49.1111, -60.9831, 0.55", "-61.9659, -50.5609, -63.7906, 0.55", "-62.3349, -51.283, -65.1729, 0.55", "-63.2134, -52.5535, -67.8733, 0.28", "-64.4539, -53.9535, -71.277, 0.28", "-64.9442, -54.507, -72.8932, 0.83", "-66.0707, -55.649, -76.8413, 0.28", "-66.4985, -56.0084, -78.343, 0.83", "-68.0021, -57.0419, -83.668, 0.55", "-68.7075, -57.4521, -86.424, 0.55", "-69.7099, -58.0761, -91.9027, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-66.9276, -37.9461, -47.88, 0.55", "-68.1733, -38.3365, -49.2071, 0.55", "-71.3974, -39.475, -52.5853, 0.55", "-75.8326, -41.2335, -57.1662, 1.11", "-76.9578, -41.7191, -58.2834, 0.55", "-79.3377, -42.8432, -60.5435, 0.55", "-81.6539, -43.9418, -62.6392, 0.55", "-82.8742, -44.4926, -63.6565, 0.55", "-83.5447, -44.8161, -64.1713, 0.55", "-85.2569, -45.6406, -65.3531, 0.55", "-88.3551, -46.9967, -67.5159, 0.28", "-89.3233, -47.4153, -68.2073, 0.55", "-92.9967, -48.6537, -70.714, 0.28", "-93.9608, -48.9317, -71.361, 0.55", "-96.2525, -49.5157, -72.9139, 0.55", "-97.6449, -49.8281, -73.8662, 0.83", "-100.214, -50.3079, -75.5681, 0.28", "-102.659, -50.8085, -77.1672, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "36.4047, -78.8432, -60.2153, 0.55", "36.2193, -81.7683, -63.4426, 0.55", "36.1899, -82.2323, -63.9545, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "36.4047, -78.8432, -60.2153, 0.55", "38.6552, -82.2247, -56.9314, 0.28", "39.3516, -83.2711, -55.9152, 0.28", "39.9854, -84.2235, -54.9903, 0.83", "42.6006, -88.1529, -51.1743, 0.55", "43.2403, -89.1141, -50.2408, 0.55", "44.1389, -90.4644, -48.9295, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "49.3425, 43.1943, 22.2466, 0.83", "52.514, 53.011, 24.6524, 0.83", "55.2871, 62.4658, 28.5424, 0.83", "58.1239, 71.799, 32.6725, 0.83", "62.1218, 79.8642, 38.2567, 0.83", "66.4852, 86.9022, 44.8629, 0.83", "68.9881, 93.8402, 52.4664, 0.83", "72.7353, 100.883, 59.4357, 0.83", "76.9565, 106.675, 67.2357, 0.83", "81.7946, 112.58, 74.58, 0.83", "87.3419, 118.989, 80.9341, 0.83", "92.2253, 125.121, 88.059, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "49.3425, 43.1943, 22.2466, 0.83", "53.0784, 53.998, 24.0486, 0.83", "58.243, 64.2582, 25.4559, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-5.4501, 92.8087, -25.9027, 1.11", "-3.96665, 101.957, -26.978, 1.11", "-3.34555, 110.519, -27.8163, 0.83", "-2.93693, 116.307, -28.197, 0.83", "-2.67432, 120.061, -28.6118, 0.83", "-2.36158, 124.756, -29.1776, 0.83", "-2.23597, 127.878, -29.655, 0.83", "-2.04809, 138.763, -31.2114, 0.83", "-2.01606, 141.573, -31.4969, 0.83", "-1.94263, 146.32, -31.587, 0.83", "-1.85719, 149.081, -31.7056, 0.83", "-1.68471, 151.458, -31.7832, 0.83", "-1.35397, 157.336, -32.0164, 0.83", "-1.18287, 162.069, -32.223, 0.83", "-0.846235, 172.273, -32.5382, 0.83", "-0.462043, 179.369, -32.8101, 1.11", "0.128301, 188.02, -33.2769, 1.11", "0.680869, 194.119, -33.7067, 1.11", "1.1979, 198.854, -34.0226, 1.11", "1.76798, 203.214, -34.3356, 1.11", "2.75211, 208.825, -34.8087, 1.11", "3.683, 213.182, -35.1727, 1.11", "4.85823, 218.177, -35.695, 1.11", "5.98622, 222.223, -36.1569, 1.11", "7.19406, 226.421, -36.6615, 1.11", "8.70785, 231.716, -37.3291, 1.11", "10.0279, 237.029, -38.0375, 1.11", "11.8817, 245.452, -39.2058, 0.83", "12.4967, 249.102, -39.5644, 0.83", "12.7209, 250.842, -39.6784, 0.83", "13.0461, 254.467, -39.7474, 0.83", "13.1779, 259.967, -39.5702, 0.83", "13.0232, 264.505, -39.079, 0.83", "12.7557, 268.21, -38.5968, 0.83", "12.4972, 272.114, -38.0587, 0.83", "12.319, 275.62, -37.6955, 0.83", "12.0706, 281.167, -37.0548, 0.83", "11.8266, 285.028, -36.6, 0.83", "11.6126, 288.279, -36.3865, 0.83", "11.3485, 291.262, -36.2324, 0.83", "10.9968, 295.031, -36.2296, 0.83", "10.6639, 299.797, -36.4787, 0.83", "10.4218, 303.583, -36.7771, 0.83", "10.2238, 308.299, -37.3778, 0.83", "10.2134, 314.534, -38.2493, 0.83", "10.5114, 324.892, -39.6016, 0.83", "11.0697, 334.184, -41.0069, 0.83", "11.5538, 339.559, -41.9658, 0.83", "12.4151, 347.164, -43.2614, 0.83", "13.9403, 358.416, -45.1075, 0.83", "14.6255, 362.361, -45.7195, 0.83", "15.4277, 366.739, -46.2953, 0.83", "16.1788, 370.608, -46.7923, 0.83", "17.1387, 375.386, -47.3964, 0.83", "18.3379, 381.91, -48.1748, 0.83", "19.0341, 385.672, -48.7282, 0.83", "19.8042, 391.349, -49.6538, 0.83", "20.0235, 393.404, -49.9864, 0.83", "20.493, 399.218, -50.9147, 0.83", "20.7223, 403.395, -51.5381, 0.83", "20.7642, 405.996, -51.8553, 0.83", "20.6288, 413.073, -52.7515, 0.83", "20.4127, 419.243, -53.4763, 0.83", "19.8534, 428.673, -54.8248, 0.83", "19.6921, 431.137, -55.2118, 0.83", "19.3911, 438.053, -56.3983, 0.83", "19.3681, 442.916, -57.3419, 0.83", "19.5261, 449.139, -58.5848, 0.83", "19.4427, 453.857, -59.5902, 0.83", "19.4445, 457.453, -60.3559, 0.83", "19.5542, 460.696, -60.8345, 0.83", "19.6411, 461.928, -60.8602, 0.83", "19.9537, 465.704, -60.5918, 0.83", "20.2332, 469.723, -60.082, 0.83", "20.9336, 476.884, -59.4484, 0.83", "21.1094, 479.869, -59.4263, 0.83", "21.3513, 483.614, -59.6854, 0.83", "21.7388, 487.88, -60.2653, 0.83", "22.0484, 490.579, -60.8602, 0.83", "22.9697, 498.607, -63.0585, 0.83", "23.6504, 505.607, -65.2564, 0.83", "24.0182, 508.967, -66.2494, 0.83", "24.3492, 511.99, -67.0142, 0.83", "24.8014, 516.678, -67.8575, 0.83", "25.2463, 522.349, -68.5541, 0.83", "25.5244, 525.402, -68.7489, 0.83", "26.7664, 536.541, -69.179, 0.83", "27.0886, 539.351, -69.172, 0.83", "27.577, 543.23, -68.9537, 0.83", "27.8097, 544.836, -68.805, 0.83", "28.8002, 550.842, -68.1134, 0.83", "29.5952, 555.106, -67.4472, 0.83", "30.398, 558.914, -66.6691, 0.83", "32.0016, 567.593, -65.1095, 0.83", "32.8598, 573.397, -64.0551, 0.83", "33.2411, 577.47, -63.3817, 0.83", "33.3756, 580.879, -62.7651, 0.83", "33.463, 583.589, -62.3359, 0.83", "33.577, 590.299, -61.3482, 0.83", "33.7366, 597.783, -60.438, 0.83", "33.7965, 608.721, -59.0106, 0.83", "33.7243, 613.248, -58.467, 0.83", "33.5507, 620.285, -57.6606, 0.83", "32.8487, 631.807, -56.0827, 0.83", "32.2427, 638.709, -55.1034, 0.83", "31.5973, 643.577, -54.5457, 0.83", "30.2943, 650.661, -53.7994, 0.83", "29.6521, 653.425, -53.5506, 0.83", "27.4416, 660.618, -52.9432, 0.55", "25.7235, 665.572, -52.732, 0.55", "24.9604, 667.953, -52.6064, 0.55", "23.363, 673.883, -52.5843, 0.55", "22.4209, 677.696, -52.6103, 0.55", "21.3767, 682.153, -52.5785, 0.55", "20.1326, 688.481, -52.5378, 0.55", "18.333, 696.782, -52.1063, 0.55", "16.8056, 703.466, -51.6334, 0.55", "16.1334, 706.382, -51.374, 0.55", "14.7472, 712.781, -50.6951, 0.55", "14.0857, 715.827, -50.1767, 0.55", "13.0585, 721.739, -48.8312, 0.55", "12.2344, 727.067, -47.3924, 0.55", "11.8246, 730.597, -46.3915, 0.55", "11.5733, 733.476, -45.6032, 0.55", "11.3824, 735.855, -44.9784, 0.55", "10.6122, 746.985, -42.5608, 0.55", "10.3539, 751.281, -41.8276, 0.55", "9.73302, 758.829, -40.7818, 0.55", "9.22678, 763.799, -40.3953, 0.55", "8.92847, 766.467, -40.2366, 0.55", "7.40959, 778.995, -39.8193, 0.55", "6.8218, 782.909, -39.7919, 0.55", "5.99986, 789.056, -39.8978, 0.55", "4.9411, 795.234, -40.2144, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 35
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-5.4501, 92.8087, -25.9027, 1.11", "-3.7462, 91.589, -29.586, 0.83", "-1.47148, 89.2919, -35.0146, 0.55", "0.0248444, 87.5385, -38.8421, 0.55", "2.5906, 84.2226, -45.6705, 0.55", "3.76677, 82.5686, -48.8898, 0.55", "4.51, 81.4458, -50.9465, 0.55", "5.81773, 78.6739, -55.5612, 0.55", "6.51263, 76.8394, -58.1984, 0.55", "7.3211, 74.7809, -61.124, 0.55", "7.84648, 73.4626, -62.9384, 0.55", "9.93796, 69.119, -68.994, 0.55", "11.1797, 66.8691, -72.3758, 0.55", "13.6237, 63.173, -78.5546, 0.55", "14.7922, 61.6784, -81.2823, 0.55", "15.6089, 60.7174, -83.1726, 0.55", "16.309, 59.9813, -84.7575, 0.55", "17.5466, 58.9152, -87.5438, 0.55", "19.3576, 57.5879, -91.7706, 0.55", "20.2497, 56.9571, -94.2938, 0.55", "21.4066, 55.8479, -98.5841, 0.55", "21.9409, 55.339, -100.746, 0.55", "22.7313, 54.5576, -104.425, 0.55", "23.3975, 53.9587, -107.814, 0.55", "23.7591, 53.6254, -110.146, 0.55", "24.5021, 53.1608, -114.978, 0.55", "25.0006, 53.0698, -117.865, 0.55", "25.7281, 52.9833, -122.368, 0.55", "26.171, 52.9064, -125.131, 0.55", "26.6412, 52.9388, -127.96, 0.55", "27.0621, 53.1208, -130.48, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-10.458, 132.219, 24.354, 0.55", "-11.984, 133.053, 25.0569, 0.55", "-13.3162, 133.781, 25.6706, 0.55", "-14.1629, 134.243, 26.0606, 0.28", "-14.8499, 134.618, 26.377, 0.28", "-17.5015, 136.067, 27.5984, 0.28", "-18.7002, 136.722, 28.1505, 0.28", "-25.1474, 140.834, 31.6937, 0.28", "-32.0162, 144.011, 35.4033, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-10.458, 132.219, 24.354, 0.55", "-9.13753, 134.665, 24.5923, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_28", "dend_11", "dend_0", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SP_0dc3a9acaf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999998123122724)
    connect dend_31(0), soma_0(0.49999998123122724)
    connect dend_28(0), soma_0(0.49999998123122724)
    connect dend_11(0), soma_0(0.49999998123122724)
    connect dend_0(0), soma_0(0.49999998123122724)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.7762, -6.65843, 1.68973, 1.62225 ) }
    soma_0 { pt3dadd( -3.37091, -6.05756, 1.49202, 2.68302 ) }
    soma_0 { pt3dadd( -2.96562, -5.45669, 1.29431, 4.18183 ) }
    soma_0 { pt3dadd( -2.56033, -4.85582, 1.09659, 5.23637 ) }
    soma_0 { pt3dadd( -2.15504, -4.25495, 0.898882, 5.96111 ) }
    soma_0 { pt3dadd( -1.74975, -3.65409, 0.701169, 6.6575 ) }
    soma_0 { pt3dadd( -1.34446, -3.05322, 0.503456, 7.22539 ) }
    soma_0 { pt3dadd( -0.939173, -2.45235, 0.305744, 7.74314 ) }
    soma_0 { pt3dadd( -0.533883, -1.85148, 0.108031, 8.02668 ) }
    soma_0 { pt3dadd( -0.128593, -1.25061, -0.0896814, 7.99979 ) }
    soma_0 { pt3dadd( 0.276697, -0.649743, -0.287394, 7.71194 ) }
    soma_0 { pt3dadd( 0.681986, -0.0488738, -0.485107, 7.51065 ) }
    soma_0 { pt3dadd( 1.08728, 0.551995, -0.682819, 7.35885 ) }
    soma_0 { pt3dadd( 1.49257, 1.15286, -0.880532, 7.1093 ) }
    soma_0 { pt3dadd( 1.89786, 1.75373, -1.07824, 6.85975 ) }
    soma_0 { pt3dadd( 2.30315, 2.3546, -1.27596, 6.61021 ) }
    soma_0 { pt3dadd( 2.70844, 2.95547, -1.47367, 6.35799 ) }
    soma_0 { pt3dadd( 3.11373, 3.55634, -1.67138, 5.44931 ) }
    soma_0 { pt3dadd( 3.51902, 4.15721, -1.86909, 4.29173 ) }
    soma_0 { pt3dadd( 3.92431, 4.75808, -2.06681, 2.41932 ) }
    soma_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 1.40798 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -0.790603, 5.91784, -1.87579, 2.22 ) }
    apic_0 { pt3dadd( -0.935459, 6.83891, -2.16742, 2.22 ) }
    apic_0 { pt3dadd( -0.960909, 9.65111, -2.00596, 1.66 ) }
    apic_0 { pt3dadd( -1.01239, 15.3388, -1.67942, 1.66 ) }
    apic_0 { pt3dadd( -1.03836, 18.209, -1.51463, 1.39 ) }
    apic_0 { pt3dadd( -1.0617, 20.7872, -1.36661, 1.39 ) }
    apic_0 { pt3dadd( -1.08143, 22.9678, -1.24142, 1.94 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.42677, -4.17199, -2.46667, 1.94 ) }
    dend_31 { pt3dadd( -4.22628, -5.15218, -3.0112, 1.94 ) }
    dend_31 { pt3dadd( -5.15328, -7.88415, -3.50984, 1.11 ) }
    dend_31 { pt3dadd( -5.97555, -10.3075, -3.95214, 1.11 ) }
    dend_31 { pt3dadd( -6.50768, -11.8757, -4.23838, 1.11 ) }
    dend_31 { pt3dadd( -7.36826, -14.4119, -4.70129, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.13212, -1.65457, -2.57467, 0.83 ) }
    dend_28 { pt3dadd( -9.12733, -3.04297, -4.49337, 0.83 ) }
    dend_28 { pt3dadd( -10.1131, -3.84341, -4.25307, 0.83 ) }
    dend_28 { pt3dadd( -12.9952, -6.1332, -3.72622, 1.11 ) }
    dend_28 { pt3dadd( -15.6836, -8.14067, -3.14719, 0.55 ) }
    dend_28 { pt3dadd( -16.8563, -8.99279, -2.89538, 0.55 ) }
    dend_28 { pt3dadd( -18.7263, -10.2674, -2.55109, 0.55 ) }
    dend_28 { pt3dadd( -20.5942, -11.2781, -2.42226, 0.55 ) }
    dend_28 { pt3dadd( -21.4782, -11.7462, -2.4086, 0.55 ) }
    dend_28 { pt3dadd( -24.0199, -12.9949, -2.43318, 0.55 ) }
    dend_28 { pt3dadd( -26.031, -14.0079, -2.32638, 0.55 ) }
    dend_28 { pt3dadd( -28.0784, -14.9457, -2.1489, 0.83 ) }
    dend_28 { pt3dadd( -30.2576, -15.8866, -1.87236, 0.55 ) }
    dend_28 { pt3dadd( -31.175, -16.2969, -1.7595, 0.83 ) }
    dend_28 { pt3dadd( -33.4336, -17.3672, -1.62613, 0.55 ) }
    dend_28 { pt3dadd( -36.3992, -18.8707, -1.70272, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.00657, -1.7762, 3.02105, 1.39 ) }
    dend_11 { pt3dadd( 11.6911, -4.43282, 7.22394, 1.39 ) }
    dend_11 { pt3dadd( 13.1144, -5.07896, 4.67484, 1.39 ) }
    dend_11 { pt3dadd( 14.4673, -5.69311, 2.25193, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 54/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.10871, 3.75617, -3.97262, 1.39 ) }
    dend_0 { pt3dadd( 4.03133, 4.86133, -5.17927, 1.39 ) }
    dend_0 { pt3dadd( 6.82781, 5.14375, -8.72135, 1.39 ) }
    dend_0 { pt3dadd( 9.49538, 5.41314, -12.1001, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 58/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 1.20052 ) }
    axon_0 { pt3dadd( 12.7175, 17.7945, -2.26452, 1.20052 ) }
    axon_0 { pt3dadd( 21.1054, 30.2301, -2.26452, 1.20052 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 61/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.08143, 22.9678, -1.24142, 1.94 ) }
    apic_2 { pt3dadd( -3.14013, 27.9556, -2.62525, 1.11 ) }
    apic_2 { pt3dadd( -4.44492, 31.1168, -3.50232, 1.11 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -1.08143, 22.9678, -1.24142, 1.94 ) }
    apic_1 { pt3dadd( -6.33578, 25.0068, 1.45723, 1.11 ) }
    apic_1 { pt3dadd( -10.7854, 26.5168, 3.83156, 0.83 ) }
    apic_1 { pt3dadd( -13.1359, 27.2298, 5.1529, 0.83 ) }
    apic_1 { pt3dadd( -16.9719, 28.4151, 7.44779, 0.83 ) }
    apic_1 { pt3dadd( -20.1587, 29.3063, 9.30377, 0.83 ) }
    apic_1 { pt3dadd( -22.0332, 29.7446, 10.3852, 0.83 ) }
    apic_1 { pt3dadd( -25.4412, 30.3393, 12.7401, 0.83 ) }
    apic_1 { pt3dadd( -27.9172, 30.5465, 14.4982, 0.83 ) }
    apic_1 { pt3dadd( -30.8601, 30.5834, 16.6469, 0.83 ) }
    apic_1 { pt3dadd( -34.0823, 30.4457, 19.113, 0.83 ) }
    apic_1 { pt3dadd( -36.5695, 30.4036, 21.1426, 0.83 ) }
    apic_1 { pt3dadd( -39.7367, 30.4636, 23.8456, 0.83 ) }
    apic_1 { pt3dadd( -41.9847, 30.7136, 25.812, 0.55 ) }
    apic_1 { pt3dadd( -45.1629, 31.2396, 28.5956, 0.55 ) }
    apic_1 { pt3dadd( -48.9493, 32.2459, 31.9768, 0.55 ) }
    apic_1 { pt3dadd( -50.9058, 32.9806, 33.8417, 0.55 ) }
    apic_1 { pt3dadd( -53.0016, 33.9569, 35.8238, 0.55 ) }
    apic_1 { pt3dadd( -56.724, 35.644, 39.2184, 0.55 ) }
    apic_1 { pt3dadd( -57.3961, 35.9546, 39.8447, 0.83 ) }
    apic_1 { pt3dadd( -61.3379, 37.6768, 43.5674, 0.55 ) }
    apic_1 { pt3dadd( -64.516, 38.8852, 46.5948, 0.55 ) }
    apic_1 { pt3dadd( -65.7381, 39.3424, 47.8225, 0.55 ) }
    apic_1 { pt3dadd( -70.4154, 41.162, 52.5493, 0.55 ) }
    apic_1 { pt3dadd( -72.2749, 41.8479, 54.6104, 0.55 ) }
    apic_1 { pt3dadd( -73.807, 42.494, 56.4702, 0.55 ) }
    apic_1 { pt3dadd( -75.116, 43.1064, 58.1139, 0.55 ) }
    apic_1 { pt3dadd( -77.5619, 44.5138, 61.235, 0.55 ) }
    apic_1 { pt3dadd( -79.4258, 45.7184, 63.6955, 0.55 ) }
    apic_1 { pt3dadd( -81.7043, 47.6853, 67.4463, 0.55 ) }
    apic_1 { pt3dadd( -83.3006, 49.1528, 70.5635, 0.55 ) }
    apic_1 { pt3dadd( -84.2193, 50.1122, 72.9608, 1.11 ) }
    apic_1 { pt3dadd( -84.9662, 50.9473, 75.1139, 0.55 ) }
    apic_1 { pt3dadd( -85.6693, 51.6666, 77.3215, 0.83 ) }
    apic_1 { pt3dadd( -86.8782, 53.236, 82.3787, 0.28 ) }
    apic_1 { pt3dadd( -87.4115, 53.9691, 84.6576, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_1 { pt3dadd( -87.9867, 54.7957, 88.5814, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.36826, -14.4119, -4.70129, 1.94 ) }
    dend_33 { pt3dadd( -7.92389, -15.4685, -6.56934, 1.39 ) }
    dend_33 { pt3dadd( -8.22967, -16.05, -7.5974, 1.39 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -7.36826, -14.4119, -4.70129, 1.94 ) }
    dend_32 { pt3dadd( -9.33942, -16.7546, -4.77335, 0.55 ) }
    dend_32 { pt3dadd( -10.342, -18.0483, -4.87941, 0.83 ) }
    dend_32 { pt3dadd( -11.8559, -20.038, -5.19383, 0.55 ) }
    dend_32 { pt3dadd( -12.8953, -21.4673, -5.3705, 0.55 ) }
    dend_32 { pt3dadd( -14.7563, -24.1608, -5.58644, 0.55 ) }
    dend_32 { pt3dadd( -16.1046, -26.0255, -5.67406, 0.55 ) }
    dend_32 { pt3dadd( -17.4706, -27.8925, -5.72169, 0.55 ) }
    dend_32 { pt3dadd( -18.8499, -29.5812, -5.75958, 0.55 ) }
    dend_32 { pt3dadd( -20.7126, -31.86, -5.78478, 0.55 ) }
    dend_32 { pt3dadd( -21.8113, -33.1892, -5.80432, 0.55 ) }
    dend_32 { pt3dadd( -23.3679, -34.981, -5.75562, 0.55 ) }
    dend_32 { pt3dadd( -24.5978, -36.1791, -5.61333, 0.55 ) }
    dend_32 { pt3dadd( -27.1211, -38.3132, -5.28424, 0.55 ) }
    dend_32 { pt3dadd( -28.8493, -39.6547, -5.09243, 0.55 ) }
    dend_32 { pt3dadd( -29.4977, -40.1126, -5.04973, 0.55 ) }
    dend_32 { pt3dadd( -31.7408, -41.5921, -4.83888, 0.83 ) }
    dend_32 { pt3dadd( -33.5792, -42.7283, -4.54145, 0.55 ) }
    dend_32 { pt3dadd( -35.2748, -43.7431, -4.12624, 1.11 ) }
    dend_32 { pt3dadd( -38.208, -45.4324, -3.165, 0.55 ) }
    dend_32 { pt3dadd( -39.8924, -46.4088, -2.56762, 0.55 ) }
    dend_32 { pt3dadd( -41.7214, -47.5585, -1.83899, 0.83 ) }
    dend_32 { pt3dadd( -44.2075, -49.3401, -0.729168, 0.55 ) }
    dend_32 { pt3dadd( -46.0709, -50.7997, 0.21658, 0.55 ) }
    dend_32 { pt3dadd( -47.3643, -51.9611, 0.968118, 0.55 ) }
    dend_32 { pt3dadd( -48.2147, -52.8688, 1.48999, 0.55 ) }
    dend_32 { pt3dadd( -49.2706, -54.1545, 2.0996, 0.55 ) }
    dend_32 { pt3dadd( -50.5479, -55.848, 2.77312, 0.55 ) }
    dend_32 { pt3dadd( -51.109, -56.6284, 3.03306, 0.55 ) }
    dend_32 { pt3dadd( -52.7533, -58.8115, 3.67055, 0.55 ) }
    dend_32 { pt3dadd( -54.3079, -60.8541, 4.23056, 0.55 ) }
    dend_32 { pt3dadd( -55.5502, -62.4146, 4.64678, 0.55 ) }
    dend_32 { pt3dadd( -56.6233, -63.7238, 4.9725, 0.28 ) }
    dend_32 { pt3dadd( -57.1768, -64.3876, 5.14528, 0.55 ) }
    dend_32 { pt3dadd( -58.4457, -65.9445, 5.5492, 0.28 ) }
    dend_32 { pt3dadd( -59.4468, -67.1409, 5.88754, 0.83 ) }
    dend_32 { pt3dadd( -60.3655, -68.3978, 6.18944, 0.55 ) }
    dend_32 { pt3dadd( -61.3966, -69.9553, 6.48968, 0.28 ) }
    dend_32 { pt3dadd( -61.7541, -70.5471, 6.57153, 0.55 ) }
    dend_32 { pt3dadd( -62.4132, -71.7182, 6.68818, 0.28 ) }
    dend_32 { pt3dadd( -62.715, -72.3543, 6.71203, 0.55 ) }
    dend_32 { pt3dadd( -63.4426, -74.2212, 6.68322, 0.28 ) }
    dend_32 { pt3dadd( -63.7545, -75.1604, 6.63703, 0.55 ) }
    dend_32 { pt3dadd( -64.1064, -76.3814, 6.54111, 0.28 ) }
    dend_32 { pt3dadd( -64.2899, -77.0405, 6.48669, 0.55 ) }
    dend_32 { pt3dadd( -64.5266, -77.9939, 6.39659, 0.28 ) }
    dend_32 { pt3dadd( -64.9265, -79.5589, 6.26514, 0.28 ) }
    dend_32 { pt3dadd( -65.1967, -80.6223, 6.18986, 0.55 ) }
    dend_32 { pt3dadd( -65.7407, -82.4484, 6.20401, 0.28 ) }
    dend_32 { pt3dadd( -66.0257, -83.2808, 6.25886, 0.28 ) }
    dend_32 { pt3dadd( -66.3586, -84.0983, 6.38175, 0.83 ) }
    dend_32 { pt3dadd( -67.379, -86.3004, 6.86244, 0.28 ) }
    dend_32 { pt3dadd( -68.0784, -87.6913, 7.27568, 0.83 ) }
    dend_32 { pt3dadd( -69.8735, -90.9298, 8.4945, 0.28 ) }
    dend_32 { pt3dadd( -70.1157, -91.3348, 8.67368, 0.55 ) }
    dend_32 { pt3dadd( -71.3206, -93.2635, 9.62315, 0.28 ) }
    dend_32 { pt3dadd( -71.4789, -93.5021, 9.75876, 0.55 ) }
    dend_32 { pt3dadd( -72.2329, -94.5219, 10.4998, 0.28 ) }
    dend_32 { pt3dadd( -72.4985, -94.818, 10.7755, 0.55 ) }
    dend_32 { pt3dadd( -76.8636, -101.091, 13.031, 0.55 ) }
    dend_32 { pt3dadd( -81.8547, -106.323, 16.3779, 0.55 ) }
    dend_32 { pt3dadd( -85.679, -111.859, 20.6459, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.3992, -18.8707, -1.70272, 0.83 ) }
    dend_30 { pt3dadd( -37.4485, -20.1646, -3.01671, 0.55 ) }
    dend_30 { pt3dadd( -39.9795, -22.8436, -6.34637, 0.55 ) }
    dend_30 { pt3dadd( -41.6753, -24.8189, -8.41177, 0.55 ) }
    dend_30 { pt3dadd( -42.8806, -26.4489, -9.9728, 0.55 ) }
    dend_30 { pt3dadd( -44.8021, -29.5851, -13.0429, 0.55 ) }
    dend_30 { pt3dadd( -45.732, -31.1733, -14.799, 0.55 ) }
    dend_30 { pt3dadd( -46.9285, -33.582, -17.5974, 0.55 ) }
    dend_30 { pt3dadd( -47.319, -34.6341, -18.9798, 0.55 ) }
    dend_30 { pt3dadd( -47.5881, -36.0838, -21.1914, 0.55 ) }
    dend_30 { pt3dadd( -47.5869, -38.0865, -24.2676, 0.83 ) }
    dend_30 { pt3dadd( -47.5386, -40.8489, -28.373, 0.55 ) }
    dend_30 { pt3dadd( -47.5109, -41.3366, -29.2027, 0.55 ) }
    dend_30 { pt3dadd( -47.462, -42.9468, -32.6245, 0.28 ) }
    dend_30 { pt3dadd( -47.5561, -44.0113, -35.0618, 0.83 ) }
    dend_30 { pt3dadd( -47.6675, -44.759, -36.883, 0.83 ) }
    dend_30 { pt3dadd( -48.0346, -46.4407, -41.2297, 0.28 ) }
    dend_30 { pt3dadd( -48.1354, -47.0276, -42.7613, 0.28 ) }
    dend_30 { pt3dadd( -48.5678, -49.2857, -48.886, 1.66 ) }
    dend_30 { pt3dadd( -48.8545, -50.7448, -52.6946, 0.28 ) }
    dend_30 { pt3dadd( -48.9604, -51.306, -54.111, 0.28 ) }
    dend_30 { pt3dadd( -49.1955, -52.0945, -56.3606, 1.11 ) }
    dend_30 { pt3dadd( -49.5057, -53.0829, -58.9743, 0.55 ) }
    dend_30 { pt3dadd( -49.9467, -54.1418, -61.1609, 0.28 ) }
    dend_30 { pt3dadd( -50.2495, -54.6892, -62.1636, 0.55 ) }
    dend_30 { pt3dadd( -51.3248, -56.2699, -65.2791, 0.55 ) }
    dend_30 { pt3dadd( -53.4616, -59.1823, -71.1989, 0.55 ) }
    dend_30 { pt3dadd( -55.1668, -61.1458, -75.4726, 0.28 ) }
    dend_30 { pt3dadd( -55.9507, -61.9543, -77.331, 0.83 ) }
    dend_30 { pt3dadd( -58.6092, -64.5683, -83.3229, 0.83 ) }
    dend_30 { pt3dadd( -60.0629, -65.8687, -86.5935, 0.28 ) }
    dend_30 { pt3dadd( -60.2996, -66.0537, -87.1326, 0.83 ) }
    dend_30 { pt3dadd( -62.999, -67.9522, -93.1723, 0.28 ) }
    dend_30 { pt3dadd( -63.5225, -68.1887, -94.3381, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.3992, -18.8707, -1.70272, 0.83 ) }
    dend_29 { pt3dadd( -39.2844, -19.2876, -1.95597, 0.55 ) }
    dend_29 { pt3dadd( -41.2589, -19.6301, -2.0705, 0.55 ) }
    dend_29 { pt3dadd( -45.4546, -20.2178, -2.32541, 0.55 ) }
    dend_29 { pt3dadd( -50.1543, -21.1182, -2.35415, 0.55 ) }
    dend_29 { pt3dadd( -53.4486, -21.8967, -2.30489, 0.55 ) }
    dend_29 { pt3dadd( -57.0943, -22.8775, -2.15609, 0.55 ) }
    dend_29 { pt3dadd( -58.5837, -23.3915, -2.09892, 0.55 ) }
    dend_29 { pt3dadd( -61.4223, -24.6013, -1.92147, 0.55 ) }
    dend_29 { pt3dadd( -66.1698, -27.1474, -1.60487, 0.55 ) }
    dend_29 { pt3dadd( -69.3575, -29.2238, -1.24158, 0.83 ) }
    dend_29 { pt3dadd( -71.2344, -30.5129, -1.07086, 0.55 ) }
    dend_29 { pt3dadd( -74.4141, -32.6885, -1.00167, 0.55 ) }
    dend_29 { pt3dadd( -75.3825, -33.3375, -1.01775, 0.55 ) }
    dend_29 { pt3dadd( -77.4894, -34.7429, -1.05175, 0.55 ) }
    dend_29 { pt3dadd( -80.1988, -36.4602, -1.28821, 1.11 ) }
    dend_29 { pt3dadd( -84.2448, -38.9367, -1.66105, 0.55 ) }
    dend_29 { pt3dadd( -85.9771, -39.9129, -1.90664, 0.55 ) }
    dend_29 { pt3dadd( -87.576, -40.6631, -2.16661, 0.83 ) }
    dend_29 { pt3dadd( -89.2156, -41.4163, -2.50213, 0.55 ) }
    dend_29 { pt3dadd( -92.5154, -43.141, -3.29681, 0.55 ) }
    dend_29 { pt3dadd( -93.2322, -43.5327, -3.48846, 0.55 ) }
    dend_29 { pt3dadd( -96.2815, -44.9224, -4.25789, 1.39 ) }
    dend_29 { pt3dadd( -98.9267, -46.1207, -4.84926, 0.83 ) }
    dend_29 { pt3dadd( -101.527, -47.1905, -5.34461, 0.55 ) }
    dend_29 { pt3dadd( -103.003, -47.6277, -5.59587, 0.55 ) }
    dend_29 { pt3dadd( -105.149, -48.0845, -5.83894, 0.55 ) }
    dend_29 { pt3dadd( -109.602, -48.8978, -6.33177, 0.55 ) }
    dend_29 { pt3dadd( -111.849, -49.2426, -6.57567, 0.55 ) }
    dend_29 { pt3dadd( -113.299, -49.5004, -6.80129, 0.55 ) }
    dend_29 { pt3dadd( -116.656, -50.2071, -7.5558, 0.83 ) }
    dend_29 { pt3dadd( -118.707, -50.7202, -8.14581, 0.83 ) }
    dend_29 { pt3dadd( -122.165, -51.9202, -9.37459, 0.55 ) }
    dend_29 { pt3dadd( -124.128, -52.8187, -10.1901, 0.83 ) }
    dend_29 { pt3dadd( -126.314, -53.9767, -11.1549, 0.28 ) }
    dend_29 { pt3dadd( -128.256, -55.2492, -12.0151, 0.55 ) }
    dend_29 { pt3dadd( -128.935, -55.8374, -12.2516, 0.28 ) }
    dend_29 { pt3dadd( -129.97, -56.8578, -12.6021, 0.83 ) }
    dend_29 { pt3dadd( -131.07, -58.1394, -12.8801, 0.55 ) }
    dend_29 { pt3dadd( -132.76, -60.1644, -13.1183, 0.28 ) }
    dend_29 { pt3dadd( -134.216, -61.9318, -13.1649, 0.55 ) }
    dend_29 { pt3dadd( -136.287, -64.3921, -13.1698, 0.28 ) }
    dend_29 { pt3dadd( -138.935, -67.325, -13.2365, 0.83 ) }
    dend_29 { pt3dadd( -140.693, -69.1118, -13.4119, 0.83 ) }
    dend_29 { pt3dadd( -143.87, -72.3859, -13.7735, 0.28 ) }
    dend_29 { pt3dadd( -146.397, -74.8933, -14.1079, 0.55 ) }
    dend_29 { pt3dadd( -148.423, -76.9039, -14.3832, 0.28 ) }
    dend_29 { pt3dadd( -149.919, -78.2749, -14.6325, 0.83 ) }
    dend_29 { pt3dadd( -152.636, -80.7411, -14.8597, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 14.4673, -5.69311, 2.25193, 1.39 ) }
    dend_19 { pt3dadd( 17.2252, -3.54502, -0.678868, 0.83 ) }
    dend_19 { pt3dadd( 18.9219, -2.2235, -2.48191, 0.83 ) }
    dend_19 { pt3dadd( 19.9613, -1.41392, -3.58648, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.4673, -5.69311, 2.25193, 1.39 ) }
    dend_12 { pt3dadd( 16.9482, -3.0307, 3.49239, 1.11 ) }
    dend_12 { pt3dadd( 17.7186, -2.20386, 3.87763, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.49538, 5.41314, -12.1001, 1.39 ) }
    dend_4 { pt3dadd( 10.679, 8.32653, -16.4525, 1.11 ) }
    dend_4 { pt3dadd( 11.4312, 10.1782, -19.2187, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 59/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.49538, 5.41314, -12.1001, 1.39 ) }
    dend_1 { pt3dadd( 10.8337, 4.40296, -14.6996, 0.55 ) }
    dend_1 { pt3dadd( 12.8796, 2.55284, -18.4725, 0.55 ) }
    dend_1 { pt3dadd( 13.893, 1.78842, -19.7194, 0.83 ) }
    dend_1 { pt3dadd( 15.3528, 0.875206, -21.0629, 0.83 ) }
    dend_1 { pt3dadd( 17.5464, -0.351409, -22.7227, 0.28 ) }
    dend_1 { pt3dadd( 19.011, -1.11252, -23.6129, 0.83 ) }
    dend_1 { pt3dadd( 21.8899, -2.62377, -25.1458, 0.83 ) }
    dend_1 { pt3dadd( 27.3319, -5.54828, -27.5646, 0.83 ) }
    dend_1 { pt3dadd( 30.8757, -7.58615, -29.0966, 0.83 ) }
    dend_1 { pt3dadd( 33.258, -8.9447, -30.0115, 0.55 ) }
    dend_1 { pt3dadd( 34.1961, -9.45233, -30.3226, 0.55 ) }
    dend_1 { pt3dadd( 35.5463, -10.1634, -30.7316, 1.11 ) }
    dend_1 { pt3dadd( 38.5274, -11.7972, -31.7171, 0.83 ) }
    dend_1 { pt3dadd( 41.36, -14.6387, -32.665, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 74/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.33 ) }
    axon_1 { pt3dadd( 29.4932, 42.6657, -2.26452, 0.33 ) }
    axon_1 { pt3dadd( 37.8811, 55.1012, -2.26452, 0.33 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 77/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -4.44492, 31.1168, -3.50232, 1.11 ) }
    apic_4 { pt3dadd( -4.86766, 32.7074, -5.13188, 1.11 ) }
    apic_4 { pt3dadd( -5.71747, 35.9049, -8.40766, 1.11 ) }
    apic_4 { pt3dadd( -7.59749, 42.9787, -15.6546, 1.11 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 81/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -4.44492, 31.1168, -3.50232, 1.11 ) }
    apic_3 { pt3dadd( -17.6403, 31.0536, -5.71377, 0.83 ) }
    apic_3 { pt3dadd( -23.8292, 31.3456, -6.65459, 0.83 ) }
    apic_3 { pt3dadd( -26.4125, 31.5326, -7.15216, 0.83 ) }
    apic_3 { pt3dadd( -31.8161, 31.9268, -8.55058, 0.83 ) }
    apic_3 { pt3dadd( -35.983, 32.1526, -9.94609, 0.83 ) }
    apic_3 { pt3dadd( -39.6854, 32.2029, -11.4994, 0.83 ) }
    apic_3 { pt3dadd( -43.2027, 31.7051, -12.963, 0.83 ) }
    apic_3 { pt3dadd( -45.6278, 31.49, -16.6978, 0.83 ) }
    apic_3 { pt3dadd( -46.9697, 31.5433, -20.1954, 0.83 ) }
    apic_3 { pt3dadd( -47.6013, 31.4888, -22.715, 0.83 ) }
    apic_3 { pt3dadd( -48.2325, 31.3104, -25.3712, 0.83 ) }
    apic_3 { pt3dadd( -49.0813, 30.9392, -28.2448, 0.83 ) }
    apic_3 { pt3dadd( -52.3353, 29.6114, -35.7732, 0.83 ) }
    apic_3 { pt3dadd( -53.8241, 29.2885, -38.4624, 0.83 ) }
    apic_3 { pt3dadd( -55.9433, 29.1582, -41.7151, 0.83 ) }
    apic_3 { pt3dadd( -57.6316, 29.1386, -44.0566, 0.83 ) }
    apic_3 { pt3dadd( -59.6474, 29.1065, -46.7646, 0.83 ) }
    apic_3 { pt3dadd( -62.4516, 29.0044, -50.192, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_3 { pt3dadd( -66.0516, 28.7414, -53.9391, 1.11 ) }
    apic_3 { pt3dadd( -68.8592, 28.5356, -56.6226, 0.55 ) }
    apic_3 { pt3dadd( -71.6703, 28.2904, -59.3571, 0.55 ) }
    apic_3 { pt3dadd( -73.5254, 27.9833, -61.2481, 0.55 ) }
    apic_3 { pt3dadd( -76.8409, 27.1639, -64.5637, 0.83 ) }
    apic_3 { pt3dadd( -79.3314, 26.158, -66.9405, 0.55 ) }
    apic_3 { pt3dadd( -81.3436, 24.991, -68.8017, 0.55 ) }
    apic_3 { pt3dadd( -83.6374, 23.3102, -70.8827, 1.11 ) }
    apic_3 { pt3dadd( -85.3863, 21.9088, -72.3313, 0.55 ) }
    apic_3 { pt3dadd( -87.4318, 20.1995, -73.8041, 0.55 ) }
    apic_3 { pt3dadd( -89.0749, 18.7061, -75.0295, 0.55 ) }
    apic_3 { pt3dadd( -90.2347, 17.7141, -75.9149, 0.55 ) }
    apic_3 { pt3dadd( -92.7956, 15.6435, -77.851, 0.83 ) }
    apic_3 { pt3dadd( -95.6798, 13.4018, -79.8973, 0.28 ) }
    apic_3 { pt3dadd( -97.6819, 11.8334, -81.4125, 1.39 ) }
    apic_3 { pt3dadd( -100.281, 9.76452, -83.4278, 1.11 ) }
    apic_3 { pt3dadd( -102.469, 8.11216, -85.0008, 0.28 ) }
    apic_3 { pt3dadd( -103.861, 7.08703, -85.9727, 0.55 ) }
    apic_3 { pt3dadd( -105.895, 5.62874, -87.5192, 0.28 ) }
    apic_3 { pt3dadd( -107.667, 4.2365, -88.9936, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 20/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.22967, -16.05, -7.5974, 1.39 ) }
    dend_41 { pt3dadd( -14.6831, -15.5323, -8.17444, 0.83 ) }
    dend_41 { pt3dadd( -17.0712, -15.3407, -8.38797, 0.83 ) }
    dend_41 { pt3dadd( -18.7313, -15.2075, -8.53641, 0.83 ) }
    dend_41 { pt3dadd( -20.6095, -15.0568, -8.70435, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.22967, -16.05, -7.5974, 1.39 ) }
    dend_34 { pt3dadd( -7.13207, -18.2625, -10.4961, 0.83 ) }
    dend_34 { pt3dadd( -6.11152, -20.2357, -13.4132, 0.83 ) }
    dend_34 { pt3dadd( -5.37199, -21.9108, -15.6317, 0.83 ) }
    dend_34 { pt3dadd( -4.44306, -24.2299, -18.6864, 0.83 ) }
    dend_34 { pt3dadd( -3.88108, -25.8587, -20.693, 0.83 ) }
    dend_34 { pt3dadd( -2.85496, -29.15, -24.7348, 0.83 ) }
    dend_34 { pt3dadd( -1.89594, -32.3478, -28.2912, 0.83 ) }
    dend_34 { pt3dadd( -0.99935, -35.7312, -31.8194, 0.83 ) }
    dend_34 { pt3dadd( -0.181749, -38.8197, -34.9333, 0.83 ) }
    dend_34 { pt3dadd( 0.402494, -41.029, -37.0692, 0.83 ) }
    dend_34 { pt3dadd( 1.34498, -44.6089, -40.1968, 0.83 ) }
    dend_34 { pt3dadd( 1.92126, -46.8904, -42.0001, 0.83 ) }
    dend_34 { pt3dadd( 2.3763, -48.71, -43.2471, 0.83 ) }
    dend_34 { pt3dadd( 3.09468, -51.2076, -44.9226, 0.55 ) }
    dend_34 { pt3dadd( 3.69742, -53.1428, -46.0157, 1.39 ) }
    dend_34 { pt3dadd( 5.02335, -56.9283, -48.0703, 1.39 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 42/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.9613, -1.41392, -3.58648, 0.83 ) }
    dend_27 { pt3dadd( 21.313, -1.66013, -5.06945, 0.83 ) }
    dend_27 { pt3dadd( 24.5523, -2.65031, -8.72729, 0.55 ) }
    dend_27 { pt3dadd( 26.3628, -3.33008, -10.7431, 0.55 ) }
    dend_27 { pt3dadd( 28.1369, -4.08285, -12.5986, 0.55 ) }
    dend_27 { pt3dadd( 29.6435, -4.73464, -14.125, 0.55 ) }
    dend_27 { pt3dadd( 31.5504, -5.61572, -16.0247, 0.55 ) }
    dend_27 { pt3dadd( 33.1947, -6.29121, -17.665, 0.55 ) }
    dend_27 { pt3dadd( 35.2166, -7.04012, -19.7744, 0.55 ) }
    dend_27 { pt3dadd( 38.7121, -8.13138, -23.607, 0.55 ) }
    dend_27 { pt3dadd( 39.8582, -8.40403, -24.8983, 0.55 ) }
    dend_27 { pt3dadd( 41.9963, -8.78641, -27.4137, 0.55 ) }
    dend_27 { pt3dadd( 43.9554, -9.0287, -29.8112, 0.55 ) }
    dend_27 { pt3dadd( 46.3139, -9.24948, -32.7941, 0.55 ) }
    dend_27 { pt3dadd( 47.8262, -9.3961, -34.7045, 0.55 ) }
    dend_27 { pt3dadd( 49.414, -9.54411, -36.7835, 0.55 ) }
    dend_27 { pt3dadd( 51.7912, -9.78658, -39.7551, 0.55 ) }
    dend_27 { pt3dadd( 52.7038, -9.9016, -40.8269, 0.55 ) }
    dend_27 { pt3dadd( 54.29, -10.101, -42.5288, 0.55 ) }
    dend_27 { pt3dadd( 57.0066, -10.3244, -45.238, 0.55 ) }
    dend_27 { pt3dadd( 59.99, -10.39, -48.072, 0.55 ) }
    dend_27 { pt3dadd( 62.034, -10.313, -49.9646, 0.55 ) }
    dend_27 { pt3dadd( 64.6855, -10.0526, -52.3534, 0.55 ) }
    dend_27 { pt3dadd( 67.1921, -9.66484, -54.541, 0.55 ) }
    dend_27 { pt3dadd( 69.6256, -9.15639, -56.6056, 0.55 ) }
    dend_27 { pt3dadd( 71.2759, -8.76139, -57.9386, 0.55 ) }
    dend_27 { pt3dadd( 72.8819, -8.41181, -59.1688, 0.55 ) }
    dend_27 { pt3dadd( 74.0093, -8.20688, -60.0545, 0.83 ) }
    dend_27 { pt3dadd( 76.4788, -7.72943, -61.9823, 0.55 ) }
    dend_27 { pt3dadd( 77.4435, -7.58015, -62.7551, 0.83 ) }
    dend_27 { pt3dadd( 80.685, -7.13234, -65.495, 0.55 ) }
    dend_27 { pt3dadd( 81.6133, -7.02195, -66.3146, 0.83 ) }
    dend_27 { pt3dadd( 85.1093, -6.65327, -69.5048, 0.55 ) }
    dend_27 { pt3dadd( 86.5214, -6.57764, -70.8565, 0.55 ) }
    dend_27 { pt3dadd( 88.0251, -6.54797, -72.3741, 0.55 ) }
    dend_27 { pt3dadd( 89.7861, -6.53408, -74.1962, 0.55 ) }
    dend_27 { pt3dadd( 90.8742, -6.51255, -75.3549, 0.55 ) }
    dend_27 { pt3dadd( 91.9341, -6.50498, -76.5207, 0.55 ) }
    dend_27 { pt3dadd( 94.085, -6.57297, -79.0555, 0.83 ) }
    dend_27 { pt3dadd( 94.814, -6.65966, -79.9559, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 82/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.9613, -1.41392, -3.58648, 0.83 ) }
    dend_20 { pt3dadd( 22.1376, -3.32579, -1.05772, 0.83 ) }
    dend_20 { pt3dadd( 23.6234, -4.21844, 0.355992, 0.83 ) }
    dend_20 { pt3dadd( 26.4576, -5.22365, 2.56214, 0.83 ) }
    dend_20 { pt3dadd( 27.9308, -5.74614, 3.70887, 0.83 ) }
    dend_20 { pt3dadd( 28.9984, -6.12481, 4.53995, 0.83 ) }
    dend_20 { pt3dadd( 31.4611, -6.99825, 6.45692, 0.55 ) }
    dend_20 { pt3dadd( 33.2244, -7.19198, 7.64666, 0.55 ) }
    dend_20 { pt3dadd( 35.2888, -7.06619, 8.75932, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 91/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 17.7186, -2.20386, 3.87763, 1.11 ) }
    dend_16 { pt3dadd( 20.7717, 0.984499, 4.34189, 0.55 ) }
    dend_16 { pt3dadd( 22.9131, 3.7316, 4.67115, 0.83 ) }
    dend_16 { pt3dadd( 24.4082, 5.84926, 5.08893, 0.55 ) }
    dend_16 { pt3dadd( 26.5654, 8.90455, 5.6917, 0.55 ) }
    dend_16 { pt3dadd( 27.1889, 9.78764, 5.86592, 0.55 ) }
    dend_16 { pt3dadd( 28.1961, 11.2142, 6.14736, 0.83 ) }
    dend_16 { pt3dadd( 29.0452, 12.3479, 6.59384, 0.55 ) }
    dend_16 { pt3dadd( 37.6241, 21.2861, 6.50607, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 45.4608, 28.3827, 5.12646, 0.83 ) }
    dend_16 { pt3dadd( 53.5128, 35.3476, 4.54878, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 2/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.7186, -2.20386, 3.87763, 1.11 ) }
    dend_13 { pt3dadd( 17.0457, -1.89683, 7.11801, 0.55 ) }
    dend_13 { pt3dadd( 16.8029, -1.84836, 8.5126, 0.55 ) }
    dend_13 { pt3dadd( 16.598, -1.73551, 10.2698, 0.55 ) }
    dend_13 { pt3dadd( 16.2654, -1.40638, 17.2826, 0.55 ) }
    dend_13 { pt3dadd( 16.2282, -1.26176, 19.4114, 0.55 ) }
    dend_13 { pt3dadd( 16.2491, -1.15752, 20.6494, 0.55 ) }
    dend_13 { pt3dadd( 16.5531, -0.813118, 24.279, 0.55 ) }
    dend_13 { pt3dadd( 16.9737, -0.47365, 27.5958, 0.55 ) }
    dend_13 { pt3dadd( 17.6202, -0.0141411, 31.2984, 0.55 ) }
    dend_13 { pt3dadd( 18.0097, 0.181587, 33.0136, 0.55 ) }
    dend_13 { pt3dadd( 18.6687, 0.357535, 35.3575, 1.11 ) }
    dend_13 { pt3dadd( 19.0171, 3.04111, 44.9249, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 15/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.4312, 10.1782, -19.2187, 1.39 ) }
    dend_8 { pt3dadd( 17.6688, 10.5548, -24.2821, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 17/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.4312, 10.1782, -19.2187, 1.39 ) }
    dend_5 { pt3dadd( 11.8428, 10.9715, -20.99, 0.83 ) }
    dend_5 { pt3dadd( 12.3491, 12.5824, -23.9189, 0.83 ) }
    dend_5 { pt3dadd( 12.8322, 15.2268, -27.9404, 0.83 ) }
    dend_5 { pt3dadd( 12.9491, 16.0725, -29.2013, 0.83 ) }
    dend_5 { pt3dadd( 12.9401, 17.7385, -31.6447, 0.83 ) }
    dend_5 { pt3dadd( 12.9218, 21.1454, -36.6414, 0.83 ) }
    dend_5 { pt3dadd( 12.8212, 23.024, -39.3304, 0.83 ) }
    dend_5 { pt3dadd( 12.6708, 24.1959, -40.8246, 0.83 ) }
    dend_5 { pt3dadd( 12.4631, 26.2721, -43.2492, 0.83 ) }
    dend_5 { pt3dadd( 11.6758, 29.63, -47.5617, 1.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 28/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 41.36, -14.6387, -32.665, 0.83 ) }
    dend_3 { pt3dadd( 43.7933, -15.7658, -33.554, 0.83 ) }
    dend_3 { pt3dadd( 46.3904, -17.3606, -34.5525, 0.83 ) }
    dend_3 { pt3dadd( 47.8922, -18.2645, -35.0831, 0.83 ) }
    dend_3 { pt3dadd( 50.3141, -19.7117, -35.8143, 0.83 ) }
    dend_3 { pt3dadd( 53.701, -21.7424, -36.8267, 0.83 ) }
    dend_3 { pt3dadd( 58.7273, -24.7632, -38.277, 0.83 ) }
    dend_3 { pt3dadd( 62.0114, -26.7759, -39.1971, 0.83 ) }
    dend_3 { pt3dadd( 65.7884, -29.1626, -40.1172, 0.83 ) }
    dend_3 { pt3dadd( 69.5546, -31.5689, -40.993, 0.83 ) }
    dend_3 { pt3dadd( 71.304, -32.7166, -41.3651, 1.11 ) }
    dend_3 { pt3dadd( 76.8462, -36.4055, -42.3828, 0.83 ) }
    dend_3 { pt3dadd( 79.2694, -37.9614, -42.8399, 0.83 ) }
    dend_3 { pt3dadd( 81.7975, -39.5493, -43.2871, 0.83 ) }
    dend_3 { pt3dadd( 85.021, -41.7569, -43.8912, 0.83 ) }
    dend_3 { pt3dadd( 87.099, -43.2069, -44.2945, 0.83 ) }
    dend_3 { pt3dadd( 89.6095, -44.9824, -44.6811, 0.28 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 45/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 41.36, -14.6387, -32.665, 0.83 ) }
    dend_2 { pt3dadd( 42.5165, -16.5002, -33.605, 0.28 ) }
    dend_2 { pt3dadd( 42.7622, -16.8199, -33.7591, 0.55 ) }
    dend_2 { pt3dadd( 43.9243, -18.2412, -34.4251, 0.28 ) }
    dend_2 { pt3dadd( 45.2549, -19.7969, -35.1023, 1.11 ) }
    dend_2 { pt3dadd( 49.1381, -24.1862, -36.9928, 0.28 ) }
    dend_2 { pt3dadd( 49.6397, -24.7389, -37.2228, 0.83 ) }
    dend_2 { pt3dadd( 52.4716, -27.5382, -38.3646, 0.28 ) }
    dend_2 { pt3dadd( 53.0843, -28.0976, -38.5797, 0.55 ) }
    dend_2 { pt3dadd( 54.2328, -29.0863, -38.9234, 0.28 ) }
    dend_2 { pt3dadd( 56.2, -30.6474, -39.4514, 0.83 ) }
    dend_2 { pt3dadd( 58.785, -32.5119, -40.0207, 0.28 ) }
    dend_2 { pt3dadd( 60.2052, -33.5397, -40.3466, 0.55 ) }
    dend_2 { pt3dadd( 62.2051, -34.995, -40.8423, 0.28 ) }
    dend_2 { pt3dadd( 62.9569, -35.5189, -41.0292, 0.55 ) }
    dend_2 { pt3dadd( 65.6799, -37.3409, -41.7405, 0.28 ) }
    dend_2 { pt3dadd( 67.955, -38.7468, -42.2448, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 62/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -7.59749, 42.9787, -15.6546, 1.11 ) }
    apic_8 { pt3dadd( -7.02227, 48.6237, -16.4804, 1.11 ) }
    apic_8 { pt3dadd( -6.27229, 52.9763, -16.9451, 1.11 ) }
    apic_8 { pt3dadd( -5.38624, 58.1187, -17.4941, 1.11 ) }
    apic_8 { pt3dadd( -4.85408, 61.2071, -17.8239, 1.11 ) }
    apic_8 { pt3dadd( -4.19921, 65.0078, -18.2297, 1.11 ) }
    apic_8 { pt3dadd( -3.18266, 70.9075, -18.8595, 1.11 ) }
    apic_8 { pt3dadd( -3.06006, 77.2031, -20.4697, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 70/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -7.59749, 42.9787, -15.6546, 1.11 ) }
    apic_5 { pt3dadd( -9.95951, 42.3569, -14.0486, 1.11 ) }
    apic_5 { pt3dadd( -13.6088, 41.3964, -11.5672, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 73/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -20.6095, -15.0568, -8.70435, 1.11 ) }
    dend_45 { pt3dadd( -21.578, -15.0749, -12.0414, 0.55 ) }
    dend_45 { pt3dadd( -21.7296, -15.1571, -12.5191, 0.55 ) }
    dend_45 { pt3dadd( -22.1776, -15.5305, -13.7701, 0.55 ) }
    dend_45 { pt3dadd( -24.9229, -18.0584, -20.2353, 0.55 ) }
    dend_45 { pt3dadd( -25.6594, -18.6487, -21.6443, 0.55 ) }
    dend_45 { pt3dadd( -26.0705, -18.9782, -22.4306, 0.55 ) }
    dend_45 { pt3dadd( -28.1674, -20.8209, -25.8612, 0.55 ) }
    dend_45 { pt3dadd( -28.8939, -21.5307, -26.9905, 0.55 ) }
    dend_45 { pt3dadd( -29.66, -22.4288, -28.0663, 0.55 ) }
    dend_45 { pt3dadd( -31.3858, -24.6829, -29.1063, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 84/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -20.6095, -15.0568, -8.70435, 1.11 ) }
    dend_42 { pt3dadd( -22.0841, -18.3815, -10.0957, 0.83 ) }
    dend_42 { pt3dadd( -24.1, -22.044, -11.6534, 0.83 ) }
    dend_42 { pt3dadd( -24.7745, -23.2473, -12.1111, 0.28 ) }
    dend_42 { pt3dadd( -25.2313, -24.1081, -12.4295, 0.83 ) }
    dend_42 { pt3dadd( -26.2769, -26.0983, -13.0234, 0.55 ) }
    dend_42 { pt3dadd( -28.0403, -29.2247, -13.8827, 0.55 ) }
    dend_42 { pt3dadd( -30.8199, -33.719, -15.07, 0.55 ) }
    dend_42 { pt3dadd( -32.0503, -35.6145, -15.6354, 0.55 ) }
    dend_42 { pt3dadd( -34.486, -39.2327, -16.7993, 0.83 ) }
    dend_42 { pt3dadd( -37.3611, -43.3397, -18.1926, 0.83 ) }
    dend_42 { pt3dadd( -39.7644, -46.7586, -19.3318, 0.83 ) }
    dend_42 { pt3dadd( -41.2816, -48.9639, -20.0383, 0.83 ) }
    dend_42 { pt3dadd( -42.5542, -50.78, -20.7021, 0.83 ) }
    dend_42 { pt3dadd( -43.6743, -52.2422, -21.3367, 0.83 ) }
    dend_42 { pt3dadd( -44.1925, -52.842, -21.6512, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_42 { pt3dadd( -45.5395, -54.4393, -22.9905, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 1/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 5.02335, -56.9283, -48.0703, 1.39 ) }
    dend_36 { pt3dadd( 9.1311, -59.0794, -49.4187, 0.55 ) }
    dend_36 { pt3dadd( 11.2864, -60.208, -50.1262, 0.83 ) }
    dend_36 { pt3dadd( 13.8543, -61.5527, -50.9691, 0.55 ) }
    dend_36 { pt3dadd( 15.1795, -62.2466, -51.4041, 0.55 ) }
    dend_36 { pt3dadd( 16.1788, -62.7699, -51.7322, 0.55 ) }
    dend_36 { pt3dadd( 18.0237, -63.736, -52.3378, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 8/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.02335, -56.9283, -48.0703, 1.39 ) }
    dend_35 { pt3dadd( 5.44003, -57.7236, -49.2461, 0.55 ) }
    dend_35 { pt3dadd( 7.56409, -61.7722, -54.9443, 0.55 ) }
    dend_35 { pt3dadd( 8.20572, -62.9385, -56.6817, 0.55 ) }
    dend_35 { pt3dadd( 9.36849, -65.0488, -59.7826, 0.55 ) }
    dend_35 { pt3dadd( 9.64704, -65.5915, -60.545, 0.55 ) }
    dend_35 { pt3dadd( 10.5128, -67.3326, -62.8895, 1.11 ) }
    dend_35 { pt3dadd( 11.3677, -69.3653, -65.3651, 0.28 ) }
    dend_35 { pt3dadd( 12.0488, -71.2752, -67.2429, 0.28 ) }
    dend_35 { pt3dadd( 12.3322, -72.3079, -68.1117, 0.28 ) }
    dend_35 { pt3dadd( 12.5222, -73.6093, -68.9286, 0.83 ) }
    dend_35 { pt3dadd( 12.729, -74.8932, -69.6293, 0.28 ) }
    dend_35 { pt3dadd( 12.9376, -76.4935, -70.2632, 0.28 ) }
    dend_35 { pt3dadd( 13.159, -77.9186, -70.6164, 0.55 ) }
    dend_35 { pt3dadd( 13.2937, -78.9808, -70.9054, 0.28 ) }
    dend_35 { pt3dadd( 13.4163, -80.0633, -71.3395, 0.28 ) }
    dend_35 { pt3dadd( 13.5628, -81.4552, -72.0477, 0.83 ) }
    dend_35 { pt3dadd( 13.7609, -84.3465, -73.8233, 0.83 ) }
    dend_35 { pt3dadd( 13.9137, -87.0433, -75.5335, 0.28 ) }
    dend_35 { pt3dadd( 13.9539, -88.9571, -76.8258, 0.83 ) }
    dend_35 { pt3dadd( 14.0364, -91.6944, -78.74, 0.28 ) }
    dend_35 { pt3dadd( 14.1029, -93.4873, -80.0618, 0.55 ) }
    dend_35 { pt3dadd( 14.0951, -95.8566, -82.1084, 0.28 ) }
    dend_35 { pt3dadd( 14.0868, -97.4069, -83.644, 1.11 ) }
    dend_35 { pt3dadd( 14.0912, -100.251, -86.721, 0.28 ) }
    dend_35 { pt3dadd( 14.1939, -102.411, -89.0307, 0.28 ) }
    dend_35 { pt3dadd( 14.277, -103.479, -90.2119, 0.83 ) }
    dend_35 { pt3dadd( 14.5176, -107.185, -94.5813, 0.28 ) }
    dend_35 { pt3dadd( 14.5736, -108.136, -95.7864, 0.55 ) }
    dend_35 { pt3dadd( 14.6007, -109.28, -97.3699, 0.55 ) }
    dend_35 { pt3dadd( 14.6681, -110.775, -99.5552, 0.55 ) }
    dend_35 { pt3dadd( 14.6206, -112.308, -101.797, 0.28 ) }
    dend_35 { pt3dadd( 14.6365, -112.885, -102.523, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 35.2888, -7.06619, 8.75932, 0.55 ) }
    dend_22 { pt3dadd( 36.0174, -3.05741, 10.0759, 0.28 ) }
    dend_22 { pt3dadd( 36.1412, -2.37651, 10.2996, 0.83 ) }
    dend_22 { pt3dadd( 36.4188, -0.848802, 10.8013, 0.28 ) }
    dend_22 { pt3dadd( 37.3007, 4.00272, 12.3947, 0.83 ) }
    dend_22 { pt3dadd( 40.3568, 16.0233, 16.4457, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 47/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.2888, -7.06619, 8.75932, 0.55 ) }
    dend_21 { pt3dadd( 41.3856, -9.8716, 11.9677, 0.28 ) }
    dend_21 { pt3dadd( 41.9447, -10.1289, 12.2619, 0.83 ) }
    dend_21 { pt3dadd( 43.6865, -10.9304, 13.1786, 0.55 ) }
    dend_21 { pt3dadd( 48.3003, -13.0534, 15.6065, 1.11 ) }
    dend_21 { pt3dadd( 58.7055, -14.9938, 21.2859, 1.11 ) }
    dend_21 { pt3dadd( 69.3822, -17.9226, 25.9464, 1.11 ) }
    dend_21 { pt3dadd( 78.9694, -22.5867, 31.48, 1.11 ) }
    dend_21 { pt3dadd( 88.0845, -28.0909, 37.0395, 1.11 ) }
    dend_21 { pt3dadd( 97.2199, -34.5368, 41.4308, 1.11 ) }
    dend_21 { pt3dadd( 104.672, -42.2125, 46.8932, 1.11 ) }
    dend_21 { pt3dadd( 113.019, -47.7865, 53.4921, 1.11 ) }
    dend_21 { pt3dadd( 119.695, -55.2258, 60.1543, 1.11 ) }
    dend_21 { pt3dadd( 124.467, -64.1939, 66.5645, 1.11 ) }
    dend_21 { pt3dadd( 130.607, -72.9856, 71.9767, 1.11 ) }
    dend_21 { pt3dadd( 137.135, -81.2352, 77.7751, 1.11 ) }
    dend_21 { pt3dadd( 143.744, -89.4242, 83.5671, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 53.5128, 35.3476, 4.54878, 0.83 ) }
    dend_18 { pt3dadd( 61.1992, 43.2825, 4.28215, 0.83 ) }
    dend_18 { pt3dadd( 68.8298, 51.2099, 5.30468, 0.83 ) }
    dend_18 { pt3dadd( 76.4301, 59.2066, 5.93885, 0.83 ) }
    dend_18 { pt3dadd( 82.3246, 68.3996, 7.62967, 0.83 ) }
    dend_18 { pt3dadd( 88.974, 76.8256, 10.2569, 0.83 ) }
    dend_18 { pt3dadd( 96.6719, 84.4172, 12.5427, 0.83 ) }
    dend_18 { pt3dadd( 103.125, 93.2898, 13.8671, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 53.5128, 35.3476, 4.54878, 0.83 ) }
    dend_17 { pt3dadd( 58.7186, 40.8269, 4.73351, 0.83 ) }
    dend_17 { pt3dadd( 70.4789, 49.653, 7.83773, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.0171, 3.04111, 44.9249, 1.11 ) }
    dend_15 { pt3dadd( 19.4661, 1.95009, 58.779, 0.83 ) }
    dend_15 { pt3dadd( 18.2847, 1.98113, 72.6329, 0.83 ) }
    dend_15 { pt3dadd( 13.958, 4.33227, 85.6359, 0.83 ) }
    dend_15 { pt3dadd( 9.00589, 4.74131, 98.622, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 80/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.0171, 3.04111, 44.9249, 1.11 ) }
    dend_14 { pt3dadd( 19.7216, 5.79518, 55.3003, 0.83 ) }
    dend_14 { pt3dadd( 22.3449, 7.99877, 65.4981, 0.83 ) }
    dend_14 { pt3dadd( 24.4106, 8.03988, 76.0557, 0.83 ) }
    dend_14 { pt3dadd( 27.4744, 7.06309, 86.3217, 0.83 ) }
    dend_14 { pt3dadd( 30.1949, 5.68507, 96.6383, 0.83 ) }
    dend_14 { pt3dadd( 32.967, 2.40634, 106.503, 0.83 ) }
    dend_14 { pt3dadd( 36.6878, -0.774172, 116.082, 0.83 ) }
    dend_14 { pt3dadd( 40.7928, -3.0894, 125.753, 0.83 ) }
    dend_14 { pt3dadd( 45.0049, -5.70102, 135.301, 0.83 ) }
    dend_14 { pt3dadd( 49.4046, -9.12711, 144.501, 0.83 ) }
    dend_14 { pt3dadd( 53.2254, -10.7654, 154.423, 0.83 ) }
    dend_14 { pt3dadd( 55.3401, -12.5786, 164.814, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.6688, 10.5548, -24.2821, 0.83 ) }
    dend_10 { pt3dadd( 19.7999, 11.9009, -26.7051, 0.83 ) }
    dend_10 { pt3dadd( 24.7242, 14.7971, -31.823, 0.83 ) }
    dend_10 { pt3dadd( 27.2883, 16.0102, -34.232, 0.83 ) }
    dend_10 { pt3dadd( 29.2633, 16.8498, -36.0397, 0.83 ) }
    dend_10 { pt3dadd( 32.1234, 17.9763, -38.6089, 0.83 ) }
    dend_10 { pt3dadd( 33.8437, 18.527, -40.0845, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 36.7859, 19.2682, -42.3567, 0.83 ) }
    dend_10 { pt3dadd( 38.1648, 19.5935, -43.4068, 0.83 ) }
    dend_10 { pt3dadd( 39.5331, 19.8536, -44.4736, 0.83 ) }
    dend_10 { pt3dadd( 40.9111, 20.1751, -45.526, 0.83 ) }
    dend_10 { pt3dadd( 42.1065, 20.4622, -46.4706, 0.83 ) }
    dend_10 { pt3dadd( 44.92, 21.2688, -48.739, 0.83 ) }
    dend_10 { pt3dadd( 46.6721, 21.8912, -50.192, 0.83 ) }
    dend_10 { pt3dadd( 48.3678, 22.5187, -51.5877, 0.83 ) }
    dend_10 { pt3dadd( 52.6239, 24.1158, -55.0903, 0.83 ) }
    dend_10 { pt3dadd( 54.9426, 24.9238, -56.9208, 0.83 ) }
    dend_10 { pt3dadd( 56.7814, 25.5578, -58.3047, 0.55 ) }
    dend_10 { pt3dadd( 58.2457, 26.0565, -59.3594, 0.55 ) }
    dend_10 { pt3dadd( 59.6408, 26.5538, -60.3069, 0.55 ) }
    dend_10 { pt3dadd( 60.8724, 26.9994, -61.1004, 0.55 ) }
    dend_10 { pt3dadd( 65.2517, 28.5457, -63.8088, 0.55 ) }
    dend_10 { pt3dadd( 67.1913, 29.2571, -64.9754, 0.55 ) }
    dend_10 { pt3dadd( 68.4583, 29.6599, -65.7636, 1.11 ) }
    dend_10 { pt3dadd( 69.3447, 29.9561, -66.3238, 0.55 ) }
    dend_10 { pt3dadd( 70.2869, 30.2673, -66.9505, 0.55 ) }
    dend_10 { pt3dadd( 72.4727, 30.9794, -68.4498, 0.55 ) }
    dend_10 { pt3dadd( 73.6514, 31.3357, -69.2309, 0.83 ) }
    dend_10 { pt3dadd( 75.4763, 31.7821, -70.3891, 0.55 ) }
    dend_10 { pt3dadd( 78.3857, 32.3903, -72.0754, 0.55 ) }
    dend_10 { pt3dadd( 79.6966, 32.63, -72.8007, 0.55 ) }
    dend_10 { pt3dadd( 82.912, 33.2308, -74.5173, 0.55 ) }
    dend_10 { pt3dadd( 85.1852, 33.6373, -75.7023, 0.55 ) }
    dend_10 { pt3dadd( 86.8937, 33.9377, -76.611, 0.55 ) }
    dend_10 { pt3dadd( 89.3633, 34.3986, -77.9669, 0.55 ) }
    dend_10 { pt3dadd( 92.1807, 34.8886, -79.6241, 0.55 ) }
    dend_10 { pt3dadd( 94.9316, 35.4674, -81.3141, 0.28 ) }
    dend_10 { pt3dadd( 95.3268, 35.5528, -81.5843, 0.55 ) }
    dend_10 { pt3dadd( 96.3992, 35.8083, -82.4092, 0.28 ) }
    dend_10 { pt3dadd( 98.2015, 36.3379, -83.8079, 0.28 ) }
    dend_10 { pt3dadd( 98.716, 36.5261, -84.2514, 0.83 ) }
    dend_10 { pt3dadd( 100.196, 37.2398, -85.4363, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.6688, 10.5548, -24.2821, 0.83 ) }
    dend_9 { pt3dadd( 18.8624, 7.53177, -29.6566, 0.55 ) }
    dend_9 { pt3dadd( 20.4225, 4.87793, -35.0532, 0.55 ) }
    dend_9 { pt3dadd( 21.1683, 3.94177, -37.0665, 0.55 ) }
    dend_9 { pt3dadd( 21.5337, 3.5254, -37.9345, 0.83 ) }
    dend_9 { pt3dadd( 23.0345, 2.11865, -41.0368, 0.55 ) }
    dend_9 { pt3dadd( 25.135, 0.464482, -44.5669, 0.55 ) }
    dend_9 { pt3dadd( 26.8531, -0.890942, -47.8379, 0.55 ) }
    dend_9 { pt3dadd( 28.1651, -1.9534, -50.6852, 0.55 ) }
    dend_9 { pt3dadd( 29.3065, -2.96476, -53.4556, 0.55 ) }
    dend_9 { pt3dadd( 30.7, -4.30557, -57.0845, 0.55 ) }
    dend_9 { pt3dadd( 31.7769, -5.57966, -60.3719, 0.55 ) }
    dend_9 { pt3dadd( 33.2112, -7.80869, -66.4329, 0.83 ) }
    dend_9 { pt3dadd( 33.6191, -8.50322, -68.5178, 0.55 ) }
    dend_9 { pt3dadd( 33.8031, -8.84928, -69.6197, 0.55 ) }
    dend_9 { pt3dadd( 34.3324, -9.69781, -72.4808, 0.83 ) }
    dend_9 { pt3dadd( 35.099, -10.6672, -75.4597, 0.55 ) }
    dend_9 { pt3dadd( 36.3341, -11.7129, -78.5156, 0.55 ) }
    dend_9 { pt3dadd( 36.915, -12.168, -79.4693, 0.83 ) }
    dend_9 { pt3dadd( 38.3392, -13.3667, -81.8679, 0.28 ) }
    dend_9 { pt3dadd( 38.7422, -13.6982, -82.531, 0.83 ) }
    dend_9 { pt3dadd( 40.0616, -14.911, -84.6955, 0.28 ) }
    dend_9 { pt3dadd( 40.9084, -15.7785, -86.1288, 0.55 ) }
    dend_9 { pt3dadd( 42.4728, -17.7733, -89.3746, 0.55 ) }
    dend_9 { pt3dadd( 43.8896, -19.856, -93.0041, 0.28 ) }
    dend_9 { pt3dadd( 44.449, -20.6909, -94.5843, 0.28 ) }
    dend_9 { pt3dadd( 44.8499, -21.2806, -95.8644, 0.28 ) }
    dend_9 { pt3dadd( 45.3995, -22.0846, -97.8289, 0.83 ) }
    dend_9 { pt3dadd( 46.1507, -23.129, -100.544, 0.28 ) }
    dend_9 { pt3dadd( 46.5868, -23.7997, -102.358, 0.83 ) }
    dend_9 { pt3dadd( 47.4033, -25.3821, -106.088, 0.55 ) }
    dend_9 { pt3dadd( 48.2278, -27.0089, -109.741, 0.28 ) }
    dend_9 { pt3dadd( 48.4874, -27.5064, -110.786, 0.83 ) }
    dend_9 { pt3dadd( 48.81, -28.2228, -112.332, 0.83 ) }
    dend_9 { pt3dadd( 49.3279, -29.5565, -115.279, 0.55 ) }
    dend_9 { pt3dadd( 49.6835, -30.6452, -117.846, 0.55 ) }
    dend_9 { pt3dadd( 49.9402, -31.9877, -121.269, 0.55 ) }
    dend_9 { pt3dadd( 50.2437, -33.0112, -123.652, 0.55 ) }
    dend_9 { pt3dadd( 51.1672, -35.3409, -128.676, 0.55 ) }
    dend_9 { pt3dadd( 51.6027, -36.209, -130.407, 0.28 ) }
    dend_9 { pt3dadd( 51.8096, -36.5769, -131.121, 0.83 ) }
    dend_9 { pt3dadd( 52.9906, -38.478, -135.097, 0.28 ) }
    dend_9 { pt3dadd( 54.4449, -41.2411, -140.098, 0.55 ) }
    dend_9 { pt3dadd( 55.2415, -42.4009, -141.648, 0.28 ) }
    dend_9 { pt3dadd( 55.727, -42.9979, -141.928, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 80/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.6758, 29.63, -47.5617, 1.66 ) }
    dend_7 { pt3dadd( 11.2286, 31.6548, -49.742, 0.55 ) }
    dend_7 { pt3dadd( 9.95492, 37.0592, -54.483, 0.55 ) }
    dend_7 { pt3dadd( 9.43289, 38.9878, -55.9981, 0.28 ) }
    dend_7 { pt3dadd( 8.80919, 40.4081, -57.4322, 0.55 ) }
    dend_7 { pt3dadd( 7.57254, 42.8228, -60.3533, 0.55 ) }
    dend_7 { pt3dadd( 6.97358, 43.5814, -61.6132, 0.55 ) }
    dend_7 { pt3dadd( 5.48045, 44.8681, -64.2457, 0.55 ) }
    dend_7 { pt3dadd( 4.54111, 45.5794, -65.8703, 0.55 ) }
    dend_7 { pt3dadd( 0.705157, 48.2523, -72.6214, 1.39 ) }
    dend_7 { pt3dadd( -0.734535, 49.2568, -75.3345, 0.55 ) }
    dend_7 { pt3dadd( -2.58678, 50.5651, -79.0438, 0.55 ) }
    dend_7 { pt3dadd( -5.6463, 52.7716, -85.7274, 0.55 ) }
    dend_7 { pt3dadd( -6.1776, 53.1762, -86.9925, 0.55 ) }
    dend_7 { pt3dadd( -8.32832, 54.9949, -92.5824, 0.55 ) }
    dend_7 { pt3dadd( -9.92131, 56.7298, -97.8682, 0.55 ) }
    dend_7 { pt3dadd( -10.549, 57.5817, -100.427, 0.55 ) }
    dend_7 { pt3dadd( -10.8159, 58.2563, -102.359, 0.55 ) }
    dend_7 { pt3dadd( -10.9216, 58.9719, -104.62, 0.28 ) }
    dend_7 { pt3dadd( -10.8815, 59.4517, -106.171, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( -10.3973, 60.7187, -110.089, 0.28 ) }
    dend_7 { pt3dadd( -10.2493, 61.0135, -110.94, 0.83 ) }
    dend_7 { pt3dadd( -9.32224, 62.7937, -115.634, 0.28 ) }
    dend_7 { pt3dadd( -9.23307, 62.9774, -116.051, 0.83 ) }
    dend_7 { pt3dadd( -8.5205, 64.4494, -119.109, 0.28 ) }
    dend_7 { pt3dadd( -7.96438, 65.6978, -121.431, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.6758, 29.63, -47.5617, 1.66 ) }
    dend_6 { pt3dadd( 12.0372, 27.9051, -50.2903, 0.83 ) }
    dend_6 { pt3dadd( 12.5726, 25.2282, -55.287, 0.83 ) }
    dend_6 { pt3dadd( 12.6658, 24.1726, -57.7113, 0.83 ) }
    dend_6 { pt3dadd( 12.6285, 23.5635, -59.0891, 0.55 ) }
    dend_6 { pt3dadd( 12.2187, 21.4899, -65.021, 0.55 ) }
    dend_6 { pt3dadd( 11.6411, 20.8004, -67.6514, 0.55 ) }
    dend_6 { pt3dadd( 10.9155, 20.5098, -69.7191, 0.55 ) }
    dend_6 { pt3dadd( 9.80676, 20.2986, -72.4915, 0.83 ) }
    dend_6 { pt3dadd( 8.58359, 20.0992, -75.1997, 0.28 ) }
    dend_6 { pt3dadd( 6.05833, 19.4396, -80.2631, 1.66 ) }
    dend_6 { pt3dadd( 2.08092, 17.3534, -86.5838, 0.83 ) }
    dend_6 { pt3dadd( 0.125522, 15.8656, -89.0701, 0.83 ) }
    dend_6 { pt3dadd( -3.20603, 12.5964, -92.6775, 0.28 ) }
    dend_6 { pt3dadd( -3.63846, 12.054, -93.0765, 0.55 ) }
    dend_6 { pt3dadd( -5.65633, 9.19651, -94.4704, 0.28 ) }
    dend_6 { pt3dadd( -8.17338, 5.00927, -95.5733, 0.28 ) }
    dend_6 { pt3dadd( -10.0115, 1.55372, -96.2224, 0.83 ) }
    dend_6 { pt3dadd( -11.5702, -1.01509, -96.7134, 0.28 ) }
    dend_6 { pt3dadd( -12.0402, -1.67589, -96.9076, 0.55 ) }
    dend_6 { pt3dadd( -14.8565, -5.60447, -98.0245, 0.28 ) }
    dend_6 { pt3dadd( -16.1927, -7.42157, -98.4471, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 28/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -3.06006, 77.2031, -20.4697, 1.11 ) }
    apic_10 { pt3dadd( -7.23213, 87.0056, -23.9949, 1.11 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 30/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -3.06006, 77.2031, -20.4697, 1.11 ) }
    apic_9 { pt3dadd( -1.04683, 78.72, -20.6952, 0.55 ) }
    apic_9 { pt3dadd( 2.28272, 80.9005, -20.8836, 0.55 ) }
    apic_9 { pt3dadd( 4.89688, 82.5433, -20.9436, 0.55 ) }
    apic_9 { pt3dadd( 9.07163, 85.0004, -21.21, 0.55 ) }
    apic_9 { pt3dadd( 16.7906, 89.2374, -21.539, 0.55 ) }
    apic_9 { pt3dadd( 24.4656, 93.2912, -21.9653, 0.55 ) }
    apic_9 { pt3dadd( 27.9558, 94.9787, -22.2786, 0.55 ) }
    apic_9 { pt3dadd( 30.6914, 96.1568, -22.6824, 0.55 ) }
    apic_9 { pt3dadd( 36.6571, 98.6776, -23.981, 0.55 ) }
    apic_9 { pt3dadd( 40.8675, 100.381, -25.2891, 0.55 ) }
    apic_9 { pt3dadd( 44.7243, 102.058, -26.9122, 0.55 ) }
    apic_9 { pt3dadd( 51.2904, 105.079, -30.161, 0.55 ) }
    apic_9 { pt3dadd( 55.2641, 106.864, -32.1838, 0.55 ) }
    apic_9 { pt3dadd( 59.4683, 108.771, -34.447, 0.28 ) }
    apic_9 { pt3dadd( 61.0847, 109.551, -35.3383, 0.55 ) }
    apic_9 { pt3dadd( 65.1374, 111.582, -37.8293, 0.28 ) }
    apic_9 { pt3dadd( 66.8868, 112.423, -38.7443, 0.28 ) }
    apic_9 { pt3dadd( 70.9369, 114.245, -40.0825, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 49/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -13.6088, 41.3964, -11.5672, 1.11 ) }
    apic_7 { pt3dadd( -18.3887, 39.682, -9.85319, 0.55 ) }
    apic_7 { pt3dadd( -22.5012, 38.4343, -8.96307, 0.55 ) }
    apic_7 { pt3dadd( -25.8795, 37.4139, -8.40369, 0.55 ) }
    apic_7 { pt3dadd( -27.1241, 37.0493, -8.20479, 0.55 ) }
    apic_7 { pt3dadd( -31.1207, 35.8711, -7.57105, 0.55 ) }
    apic_7 { pt3dadd( -34.2564, 34.987, -7.04772, 0.55 ) }
    apic_7 { pt3dadd( -39.8392, 33.6809, -6.26456, 0.55 ) }
    apic_7 { pt3dadd( -46.0295, 32.644, -5.37331, 0.55 ) }
    apic_7 { pt3dadd( -50.8213, 32.0391, -4.76831, 0.55 ) }
    apic_7 { pt3dadd( -52.2905, 31.9234, -4.6128, 0.55 ) }
    apic_7 { pt3dadd( -56.1127, 31.7617, -4.39313, 0.55 ) }
    apic_7 { pt3dadd( -60.4266, 31.5839, -4.35833, 0.55 ) }
    apic_7 { pt3dadd( -65.136, 31.5417, -4.4668, 0.55 ) }
    apic_7 { pt3dadd( -68.7216, 31.5759, -4.79837, 0.55 ) }
    apic_7 { pt3dadd( -71.03, 31.5905, -5.11371, 0.55 ) }
    apic_7 { pt3dadd( -75.3318, 31.6064, -5.76739, 0.55 ) }
    apic_7 { pt3dadd( -78.0796, 31.5713, -6.21466, 0.55 ) }
    apic_7 { pt3dadd( -82.2515, 31.5036, -6.82998, 0.55 ) }
    apic_7 { pt3dadd( -85.0486, 31.4219, -7.09531, 0.55 ) }
    apic_7 { pt3dadd( -87.2472, 31.4794, -7.07598, 0.83 ) }
    apic_7 { pt3dadd( -89.1092, 31.6272, -6.90134, 0.55 ) }
    apic_7 { pt3dadd( -90.9436, 31.8399, -6.6083, 0.55 ) }
    apic_7 { pt3dadd( -93.0096, 32.149, -6.26985, 0.55 ) }
    apic_7 { pt3dadd( -95.1809, 32.4727, -5.87184, 0.83 ) }
    apic_7 { pt3dadd( -97.3886, 32.7471, -5.46359, 0.55 ) }
    apic_7 { pt3dadd( -99.2259, 32.8505, -5.15908, 1.11 ) }
    apic_7 { pt3dadd( -101.718, 32.8686, -4.89231, 0.83 ) }
    apic_7 { pt3dadd( -103.603, 32.8119, -4.78222, 0.83 ) }
    apic_7 { pt3dadd( -105.688, 32.6842, -4.80193, 0.55 ) }
    apic_7 { pt3dadd( -107.359, 32.6233, -4.96051, 0.55 ) }
    apic_7 { pt3dadd( -109.916, 32.4971, -5.36309, 0.83 ) }
    apic_7 { pt3dadd( -112.995, 32.1677, -6.04441, 0.55 ) }
    apic_7 { pt3dadd( -113.627, 32.0676, -6.20075, 0.83 ) }
    apic_7 { pt3dadd( -115.635, 31.5847, -6.68591, 0.55 ) }
    apic_7 { pt3dadd( -117.053, 31.2249, -7.01874, 0.55 ) }
    apic_7 { pt3dadd( -120.0, 30.4764, -7.6141, 0.55 ) }
    apic_7 { pt3dadd( -121.983, 29.9674, -7.993, 0.55 ) }
    apic_7 { pt3dadd( -125.276, 29.1469, -8.54917, 0.55 ) }
    apic_7 { pt3dadd( -130.127, 27.9342, -9.32931, 0.83 ) }
    apic_7 { pt3dadd( -133.379, 27.0328, -9.87556, 0.28 ) }
    apic_7 { pt3dadd( -134.25, 26.7536, -10.0462, 0.55 ) }
    apic_7 { pt3dadd( -136.139, 26.1051, -10.4752, 0.28 ) }
    apic_7 { pt3dadd( -138.014, 25.3793, -10.9212, 0.28 ) }
    apic_7 { pt3dadd( -139.972, 24.3789, -11.4779, 0.28 ) }
    apic_7 { pt3dadd( -142.058, 23.0233, -12.3129, 0.28 ) }
    apic_7 { pt3dadd( -142.946, 22.3488, -12.7869, 0.28 ) }
    apic_7 { pt3dadd( -143.155, 22.1774, -12.9251, 0.83 ) }
    apic_7 { pt3dadd( -144.249, 21.2012, -13.7205, 0.28 ) }
    apic_7 { pt3dadd( -144.776, 20.7095, -14.1742, 0.83 ) }
    apic_7 { pt3dadd( -147.633, 18.3111, -16.8016, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_7 { pt3dadd( -148.977, 17.3697, -18.0424, 0.55 ) }
    apic_7 { pt3dadd( -149.686, 16.9442, -18.7163, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 2/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -13.6088, 41.3964, -11.5672, 1.11 ) }
    apic_6 { pt3dadd( -16.9442, 40.2504, -10.9125, 0.83 ) }
    apic_6 { pt3dadd( -20.022, 39.303, -10.3717, 0.83 ) }
    apic_6 { pt3dadd( -23.579, 38.1323, -9.80958, 0.83 ) }
    apic_6 { pt3dadd( -27.8643, 36.7347, -9.13182, 0.83 ) }
    apic_6 { pt3dadd( -29.492, 36.2077, -8.91039, 0.83 ) }
    apic_6 { pt3dadd( -31.1921, 35.6938, -8.7593, 0.55 ) }
    apic_6 { pt3dadd( -33.2632, 35.1924, -8.73759, 0.55 ) }
    apic_6 { pt3dadd( -37.1676, 34.3258, -8.918, 0.55 ) }
    apic_6 { pt3dadd( -39.6075, 33.726, -9.16949, 0.55 ) }
    apic_6 { pt3dadd( -41.8889, 33.1536, -9.46179, 0.55 ) }
    apic_6 { pt3dadd( -46.9318, 31.8459, -10.179, 0.83 ) }
    apic_6 { pt3dadd( -49.1653, 31.2767, -10.5331, 0.83 ) }
    apic_6 { pt3dadd( -50.3567, 30.9583, -10.7356, 0.83 ) }
    apic_6 { pt3dadd( -53.1411, 30.2225, -11.267, 0.83 ) }
    apic_6 { pt3dadd( -55.7129, 29.4659, -11.7379, 0.55 ) }
    apic_6 { pt3dadd( -56.7057, 29.1617, -11.8636, 0.83 ) }
    apic_6 { pt3dadd( -59.288, 28.3247, -12.0144, 0.55 ) }
    apic_6 { pt3dadd( -59.7288, 28.1863, -12.0182, 0.83 ) }
    apic_6 { pt3dadd( -61.577, 27.6518, -12.0545, 0.55 ) }
    apic_6 { pt3dadd( -62.9903, 27.28, -12.079, 0.55 ) }
    apic_6 { pt3dadd( -64.0194, 27.0444, -12.0933, 0.55 ) }
    apic_6 { pt3dadd( -66.2199, 26.5264, -12.0181, 0.55 ) }
    apic_6 { pt3dadd( -67.8502, 26.0977, -11.8942, 0.55 ) }
    apic_6 { pt3dadd( -69.4391, 25.6509, -11.7986, 0.55 ) }
    apic_6 { pt3dadd( -71.4354, 25.0225, -11.7092, 0.55 ) }
    apic_6 { pt3dadd( -73.3891, 24.3574, -11.7013, 0.55 ) }
    apic_6 { pt3dadd( -76.1234, 23.4407, -11.727, 0.55 ) }
    apic_6 { pt3dadd( -76.9181, 23.1698, -11.7337, 0.83 ) }
    apic_6 { pt3dadd( -78.6018, 22.607, -11.7495, 0.55 ) }
    apic_6 { pt3dadd( -79.4595, 22.3168, -11.7731, 0.83 ) }
    apic_6 { pt3dadd( -81.878, 21.4704, -11.9026, 0.55 ) }
    apic_6 { pt3dadd( -83.4791, 20.8417, -12.0228, 0.55 ) }
    apic_6 { pt3dadd( -85.9311, 19.8296, -12.2702, 0.55 ) }
    apic_6 { pt3dadd( -86.9812, 19.3543, -12.3768, 0.83 ) }
    apic_6 { pt3dadd( -89.1084, 18.2474, -12.5715, 0.28 ) }
    apic_6 { pt3dadd( -89.8282, 17.8426, -12.6582, 0.55 ) }
    apic_6 { pt3dadd( -90.8379, 17.1708, -12.8242, 0.28 ) }
    apic_6 { pt3dadd( -91.6848, 16.5621, -12.9555, 0.83 ) }
    apic_6 { pt3dadd( -93.2261, 15.4288, -13.1377, 0.28 ) }
    apic_6 { pt3dadd( -93.9913, 14.8882, -13.1861, 0.55 ) }
    apic_6 { pt3dadd( -94.9254, 14.2589, -13.2008, 0.28 ) }
    apic_6 { pt3dadd( -95.6312, 13.8039, -13.2046, 0.83 ) }
    apic_6 { pt3dadd( -98.1172, 12.2475, -13.1878, 0.28 ) }
    apic_6 { pt3dadd( -99.0726, 11.6508, -13.1618, 0.83 ) }
    apic_6 { pt3dadd( -101.496, 10.0893, -13.0093, 0.28 ) }
    apic_6 { pt3dadd( -102.993, 9.10828, -12.9162, 0.28 ) }
    apic_6 { pt3dadd( -103.337, 8.88036, -12.8909, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 50/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -31.3858, -24.6829, -29.1063, 0.83 ) }
    dend_47 { pt3dadd( -34.6623, -25.286, -30.7552, 0.83 ) }
    dend_47 { pt3dadd( -38.5604, -26.1146, -32.5018, 0.55 ) }
    dend_47 { pt3dadd( -43.2604, -27.1826, -34.3695, 0.55 ) }
    dend_47 { pt3dadd( -45.3147, -27.7047, -35.1892, 0.55 ) }
    dend_47 { pt3dadd( -48.5859, -28.6471, -36.5126, 0.83 ) }
    dend_47 { pt3dadd( -52.2751, -29.8466, -38.076, 0.55 ) }
    dend_47 { pt3dadd( -55.2586, -31.1822, -39.6194, 0.55 ) }
    dend_47 { pt3dadd( -56.0945, -31.6431, -40.0588, 0.55 ) }
    dend_47 { pt3dadd( -57.4765, -32.3928, -40.7846, 0.55 ) }
    dend_47 { pt3dadd( -58.458, -32.9521, -41.3989, 0.55 ) }
    dend_47 { pt3dadd( -60.2998, -34.0732, -42.7076, 0.83 ) }
    dend_47 { pt3dadd( -62.5543, -35.3614, -44.2434, 0.28 ) }
    dend_47 { pt3dadd( -64.1742, -36.3604, -45.5898, 1.94 ) }
    dend_47 { pt3dadd( -66.9276, -37.9461, -47.88, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 65/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -31.3858, -24.6829, -29.1063, 0.83 ) }
    dend_46 { pt3dadd( -30.2553, -24.3961, -32.3083, 0.55 ) }
    dend_46 { pt3dadd( -29.5815, -24.3481, -34.09, 0.55 ) }
    dend_46 { pt3dadd( -28.8991, -24.3676, -35.8662, 0.55 ) }
    dend_46 { pt3dadd( -28.2857, -24.4047, -37.5439, 0.55 ) }
    dend_46 { pt3dadd( -27.8877, -24.3943, -38.9207, 1.11 ) }
    dend_46 { pt3dadd( -27.0393, -24.3825, -41.8694, 0.28 ) }
    dend_46 { pt3dadd( -26.8609, -24.4119, -42.4911, 0.55 ) }
    dend_46 { pt3dadd( -26.5124, -24.4667, -43.8327, 0.28 ) }
    dend_46 { pt3dadd( -26.0655, -24.5549, -45.5279, 0.83 ) }
    dend_46 { pt3dadd( -25.1798, -24.7034, -49.4915, 0.83 ) }
    dend_46 { pt3dadd( -24.922, -24.7321, -50.6578, 0.55 ) }
    dend_46 { pt3dadd( -24.5118, -24.8244, -52.4818, 1.11 ) }
    dend_46 { pt3dadd( -24.3114, -24.9104, -53.4351, 0.28 ) }
    dend_46 { pt3dadd( -24.1214, -25.0368, -54.205, 0.28 ) }
    dend_46 { pt3dadd( -23.686, -25.4203, -55.9823, 1.11 ) }
    dend_46 { pt3dadd( -23.1034, -26.0048, -58.298, 0.55 ) }
    dend_46 { pt3dadd( -22.5573, -26.5988, -60.7054, 0.55 ) }
    dend_46 { pt3dadd( -22.2366, -26.9707, -62.1512, 0.55 ) }
    dend_46 { pt3dadd( -21.6681, -27.7523, -65.0205, 0.55 ) }
    dend_46 { pt3dadd( -20.894, -28.8697, -69.1323, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 86/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -45.5395, -54.4393, -22.9905, 0.83 ) }
    dend_44 { pt3dadd( -45.4143, -56.148, -22.3769, 0.55 ) }
    dend_44 { pt3dadd( -45.0105, -61.3373, -20.6867, 0.55 ) }
    dend_44 { pt3dadd( -44.7803, -65.0096, -19.4554, 0.55 ) }
    dend_44 { pt3dadd( -44.6151, -67.4794, -18.7023, 0.55 ) }
    dend_44 { pt3dadd( -44.3987, -70.5102, -17.75, 0.55 ) }
    dend_44 { pt3dadd( -44.2451, -73.1501, -16.9061, 0.55 ) }
    dend_44 { pt3dadd( -44.1682, -74.5787, -16.4537, 0.83 ) }
    dend_44 { pt3dadd( -44.0922, -76.6149, -15.7882, 0.55 ) }
    dend_44 { pt3dadd( -43.9316, -79.9122, -14.4567, 0.55 ) }
    dend_44 { pt3dadd( -43.8557, -81.8628, -13.5583, 0.55 ) }
    dend_44 { pt3dadd( -43.7698, -84.267, -12.3557, 0.55 ) }
    dend_44 { pt3dadd( -43.6359, -87.6468, -10.5672, 0.55 ) }
    dend_44 { pt3dadd( -43.5193, -90.1731, -9.11943, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_44 { pt3dadd( -43.3543, -92.6584, -7.6471, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 1/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -45.5395, -54.4393, -22.9905, 0.83 ) }
    dend_43 { pt3dadd( -45.6842, -54.585, -23.014, 0.83 ) }
    dend_43 { pt3dadd( -47.6686, -55.9875, -23.4152, 0.83 ) }
    dend_43 { pt3dadd( -49.2258, -57.1355, -23.7848, 0.83 ) }
    dend_43 { pt3dadd( -50.186, -57.8288, -24.0183, 0.83 ) }
    dend_43 { pt3dadd( -51.4431, -58.8047, -24.3406, 1.11 ) }
    dend_43 { pt3dadd( -53.1749, -60.3046, -24.8611, 0.55 ) }
    dend_43 { pt3dadd( -55.1912, -62.3128, -25.5795, 0.55 ) }
    dend_43 { pt3dadd( -56.1062, -63.338, -25.9381, 0.55 ) }
    dend_43 { pt3dadd( -56.6689, -64.0929, -26.208, 0.55 ) }
    dend_43 { pt3dadd( -57.6069, -65.7331, -26.7419, 0.55 ) }
    dend_43 { pt3dadd( -58.296, -67.4784, -27.2836, 0.55 ) }
    dend_43 { pt3dadd( -58.5331, -68.5735, -27.595, 0.28 ) }
    dend_43 { pt3dadd( -58.6439, -69.4041, -27.821, 0.83 ) }
    dend_43 { pt3dadd( -58.7986, -70.7598, -28.219, 0.28 ) }
    dend_43 { pt3dadd( -58.9512, -71.9573, -28.5654, 0.28 ) }
    dend_43 { pt3dadd( -59.1078, -72.7591, -28.8052, 0.83 ) }
    dend_43 { pt3dadd( -59.5575, -74.423, -29.2906, 0.28 ) }
    dend_43 { pt3dadd( -59.9539, -75.4254, -29.6006, 0.55 ) }
    dend_43 { pt3dadd( -60.4545, -76.4611, -29.9235, 0.28 ) }
    dend_43 { pt3dadd( -60.9931, -77.4452, -30.2208, 1.11 ) }
    dend_43 { pt3dadd( -61.7946, -78.7741, -30.6366, 0.83 ) }
    dend_43 { pt3dadd( -62.3407, -79.634, -30.8852, 0.55 ) }
    dend_43 { pt3dadd( -63.3379, -81.0911, -31.289, 0.55 ) }
    dend_43 { pt3dadd( -64.0629, -82.2365, -31.5898, 0.55 ) }
    dend_43 { pt3dadd( -64.5568, -83.0029, -31.7883, 0.55 ) }
    dend_43 { pt3dadd( -65.2589, -84.0495, -32.0859, 0.55 ) }
    dend_43 { pt3dadd( -66.1135, -85.3321, -32.4697, 0.55 ) }
    dend_43 { pt3dadd( -66.8879, -86.5374, -32.824, 0.28 ) }
    dend_43 { pt3dadd( -67.2796, -87.1743, -32.996, 0.28 ) }
    dend_43 { pt3dadd( -68.6294, -89.2614, -33.5754, 0.28 ) }
    dend_43 { pt3dadd( -69.0197, -89.8737, -33.7441, 1.11 ) }
    dend_43 { pt3dadd( -70.6039, -92.538, -34.5059, 0.28 ) }
    dend_43 { pt3dadd( -71.1627, -93.5696, -34.8283, 0.28 ) }
    dend_43 { pt3dadd( -71.6324, -94.505, -35.1362, 0.55 ) }
    dend_43 { pt3dadd( -72.1546, -95.5755, -35.4992, 0.28 ) }
    dend_43 { pt3dadd( -72.5216, -96.4611, -35.815, 1.11 ) }
    dend_43 { pt3dadd( -73.3481, -98.647, -36.6495, 0.28 ) }
    dend_43 { pt3dadd( -73.5015, -99.0683, -36.8369, 0.83 ) }
    dend_43 { pt3dadd( -73.9754, -100.414, -37.483, 0.28 ) }
    dend_43 { pt3dadd( -74.024, -100.567, -37.5566, 0.83 ) }
    dend_43 { pt3dadd( -74.5504, -102.357, -38.3625, 0.28 ) }
    dend_43 { pt3dadd( -74.7078, -102.835, -38.5696, 0.55 ) }
    dend_43 { pt3dadd( -75.0637, -103.953, -39.03, 0.28 ) }
    dend_43 { pt3dadd( -75.1334, -104.174, -39.1176, 0.55 ) }
    dend_43 { pt3dadd( -75.424, -105.225, -39.506, 0.28 ) }
    dend_43 { pt3dadd( -75.5215, -105.537, -39.62, 0.55 ) }
    dend_43 { pt3dadd( -76.295, -107.411, -40.2336, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 49/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 18.0237, -63.736, -52.3378, 0.55 ) }
    dend_40 { pt3dadd( 19.036, -65.716, -53.1326, 0.55 ) }
    dend_40 { pt3dadd( 21.0498, -69.8643, -54.8504, 0.55 ) }
    dend_40 { pt3dadd( 22.7006, -72.7841, -56.2605, 0.55 ) }
    dend_40 { pt3dadd( 24.2123, -75.0086, -57.6723, 0.55 ) }
    dend_40 { pt3dadd( 25.6766, -77.0059, -59.1289, 0.55 ) }
    dend_40 { pt3dadd( 26.7453, -78.4636, -60.1919, 0.55 ) }
    dend_40 { pt3dadd( 28.6377, -80.8662, -62.0763, 0.55 ) }
    dend_40 { pt3dadd( 30.8827, -83.4755, -64.3509, 0.55 ) }
    dend_40 { pt3dadd( 33.9795, -86.5952, -67.7511, 0.55 ) }
    dend_40 { pt3dadd( 35.7816, -88.3229, -69.9246, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 60/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 18.0237, -63.736, -52.3378, 0.55 ) }
    dend_37 { pt3dadd( 18.9419, -64.1736, -52.6546, 0.83 ) }
    dend_37 { pt3dadd( 21.7701, -65.9019, -53.6743, 0.55 ) }
    dend_37 { pt3dadd( 23.5486, -67.1558, -54.3444, 0.55 ) }
    dend_37 { pt3dadd( 27.1685, -69.9763, -55.8883, 0.28 ) }
    dend_37 { pt3dadd( 28.7056, -71.2049, -56.5937, 0.28 ) }
    dend_37 { pt3dadd( 30.2425, -72.4275, -57.2544, 0.28 ) }
    dend_37 { pt3dadd( 31.3509, -73.3774, -57.7093, 0.83 ) }
    dend_37 { pt3dadd( 31.6559, -73.6527, -57.8161, 0.83 ) }
    dend_37 { pt3dadd( 33.0828, -75.1747, -58.3533, 0.28 ) }
    dend_37 { pt3dadd( 34.0155, -76.342, -58.9726, 0.83 ) }
    dend_37 { pt3dadd( 36.4047, -78.8432, -60.2153, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 72/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 40.3568, 16.0233, 16.4457, 0.83 ) }
    dend_24 { pt3dadd( 42.6362, 25.3332, 18.3103, 0.83 ) }
    dend_24 { pt3dadd( 45.6597, 34.5097, 19.7243, 0.83 ) }
    dend_24 { pt3dadd( 49.3425, 43.1943, 22.2466, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 40.3568, 16.0233, 16.4457, 0.83 ) }
    dend_23 { pt3dadd( 42.8589, 26.3224, 19.8279, 0.83 ) }
    dend_23 { pt3dadd( 46.6553, 36.423, 22.5364, 0.83 ) }
    dend_23 { pt3dadd( 48.8981, 47.2742, 23.5333, 0.83 ) }
    dend_23 { pt3dadd( 49.3515, 58.0221, 26.3704, 0.83 ) }
    dend_23 { pt3dadd( 49.7286, 68.6818, 29.5326, 0.83 ) }
    dend_23 { pt3dadd( 49.2164, 79.3622, 32.605, 0.83 ) }
    dend_23 { pt3dadd( 50.7185, 89.4089, 37.1415, 0.83 ) }
    dend_23 { pt3dadd( 53.0989, 98.4122, 43.228, 0.83 ) }
    dend_23 { pt3dadd( 54.3408, 106.99, 50.2029, 0.83 ) }
    dend_23 { pt3dadd( 57.8662, 116.048, 55.6158, 0.83 ) }
    dend_23 { pt3dadd( 61.6501, 125.566, 59.9575, 0.83 ) }
    dend_23 { pt3dadd( 63.7533, 136.2, 62.4628, 0.83 ) }
    dend_23 { pt3dadd( 66.9332, 146.096, 66.4277, 0.83 ) }
    dend_23 { pt3dadd( 70.1988, 155.437, 71.5122, 0.83 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 91/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -7.23213, 87.0056, -23.9949, 1.11 ) }
    apic_14 { pt3dadd( -6.73612, 88.6209, -24.5259, 1.11 ) }
    apic_14 { pt3dadd( -5.4501, 92.8087, -25.9027, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 94/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -7.23213, 87.0056, -23.9949, 1.11 ) }
    apic_11 { pt3dadd( -6.79738, 89.848, -21.3733, 0.55 ) }
    apic_11 { pt3dadd( -6.68847, 91.4711, -19.8348, 0.55 ) }
    apic_11 { pt3dadd( -6.70562, 93.9487, -17.3378, 0.55 ) }
    apic_11 { pt3dadd( -6.73807, 97.5877, -13.7107, 0.55 ) }
    apic_11 { pt3dadd( -6.78354, 99.5598, -11.7319, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_11 { pt3dadd( -6.88934, 102.001, -9.12813, 0.55 ) }
    apic_11 { pt3dadd( -6.98011, 102.839, -8.22281, 0.55 ) }
    apic_11 { pt3dadd( -7.49758, 106.126, -4.57404, 0.55 ) }
    apic_11 { pt3dadd( -7.85154, 107.877, -2.62461, 0.55 ) }
    apic_11 { pt3dadd( -8.03896, 108.712, -1.54123, 0.55 ) }
    apic_11 { pt3dadd( -8.19599, 110.162, 0.412977, 0.55 ) }
    apic_11 { pt3dadd( -8.21657, 111.884, 2.76926, 0.55 ) }
    apic_11 { pt3dadd( -8.15813, 112.878, 4.07578, 0.55 ) }
    apic_11 { pt3dadd( -8.11677, 113.777, 5.29224, 0.55 ) }
    apic_11 { pt3dadd( -8.08796, 114.859, 6.68174, 0.55 ) }
    apic_11 { pt3dadd( -8.07013, 117.351, 9.59811, 0.55 ) }
    apic_11 { pt3dadd( -8.06766, 119.069, 11.5618, 0.55 ) }
    apic_11 { pt3dadd( -8.13293, 120.274, 12.9271, 0.55 ) }
    apic_11 { pt3dadd( -8.42725, 122.841, 15.7123, 0.55 ) }
    apic_11 { pt3dadd( -8.80235, 125.588, 18.4237, 0.55 ) }
    apic_11 { pt3dadd( -9.04382, 127.005, 19.7375, 0.55 ) }
    apic_11 { pt3dadd( -9.61639, 129.203, 21.7021, 0.55 ) }
    apic_11 { pt3dadd( -10.1536, 130.902, 23.2611, 0.28 ) }
    apic_11 { pt3dadd( -10.2486, 131.239, 23.5867, 0.55 ) }
    apic_11 { pt3dadd( -10.458, 132.219, 24.354, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 20/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -66.9276, -37.9461, -47.88, 0.55 ) }
    dend_49 { pt3dadd( -64.4217, -39.768, -45.393, 0.55 ) }
    dend_49 { pt3dadd( -62.0064, -41.5235, -42.4774, 0.55 ) }
    dend_49 { pt3dadd( -61.9109, -41.8429, -44.1371, 0.55 ) }
    dend_49 { pt3dadd( -61.5696, -42.2378, -45.3706, 0.55 ) }
    dend_49 { pt3dadd( -61.1892, -42.969, -47.3784, 0.55 ) }
    dend_49 { pt3dadd( -60.7058, -44.8359, -51.9216, 0.55 ) }
    dend_49 { pt3dadd( -60.5897, -45.6603, -53.83, 0.83 ) }
    dend_49 { pt3dadd( -60.5972, -46.6895, -56.0669, 0.83 ) }
    dend_49 { pt3dadd( -60.7769, -47.6498, -58.1181, 0.55 ) }
    dend_49 { pt3dadd( -61.3029, -49.1111, -60.9831, 0.55 ) }
    dend_49 { pt3dadd( -61.9659, -50.5609, -63.7906, 0.55 ) }
    dend_49 { pt3dadd( -62.3349, -51.283, -65.1729, 0.55 ) }
    dend_49 { pt3dadd( -63.2134, -52.5535, -67.8733, 0.28 ) }
    dend_49 { pt3dadd( -64.4539, -53.9535, -71.277, 0.28 ) }
    dend_49 { pt3dadd( -64.9442, -54.507, -72.8932, 0.83 ) }
    dend_49 { pt3dadd( -66.0707, -55.649, -76.8413, 0.28 ) }
    dend_49 { pt3dadd( -66.4985, -56.0084, -78.343, 0.83 ) }
    dend_49 { pt3dadd( -68.0021, -57.0419, -83.668, 0.55 ) }
    dend_49 { pt3dadd( -68.7075, -57.4521, -86.424, 0.55 ) }
    dend_49 { pt3dadd( -69.7099, -58.0761, -91.9027, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -66.9276, -37.9461, -47.88, 0.55 ) }
    dend_48 { pt3dadd( -68.1733, -38.3365, -49.2071, 0.55 ) }
    dend_48 { pt3dadd( -71.3974, -39.475, -52.5853, 0.55 ) }
    dend_48 { pt3dadd( -75.8326, -41.2335, -57.1662, 1.11 ) }
    dend_48 { pt3dadd( -76.9578, -41.7191, -58.2834, 0.55 ) }
    dend_48 { pt3dadd( -79.3377, -42.8432, -60.5435, 0.55 ) }
    dend_48 { pt3dadd( -81.6539, -43.9418, -62.6392, 0.55 ) }
    dend_48 { pt3dadd( -82.8742, -44.4926, -63.6565, 0.55 ) }
    dend_48 { pt3dadd( -83.5447, -44.8161, -64.1713, 0.55 ) }
    dend_48 { pt3dadd( -85.2569, -45.6406, -65.3531, 0.55 ) }
    dend_48 { pt3dadd( -88.3551, -46.9967, -67.5159, 0.28 ) }
    dend_48 { pt3dadd( -89.3233, -47.4153, -68.2073, 0.55 ) }
    dend_48 { pt3dadd( -92.9967, -48.6537, -70.714, 0.28 ) }
    dend_48 { pt3dadd( -93.9608, -48.9317, -71.361, 0.55 ) }
    dend_48 { pt3dadd( -96.2525, -49.5157, -72.9139, 0.55 ) }
    dend_48 { pt3dadd( -97.6449, -49.8281, -73.8662, 0.83 ) }
    dend_48 { pt3dadd( -100.214, -50.3079, -75.5681, 0.28 ) }
    dend_48 { pt3dadd( -102.659, -50.8085, -77.1672, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 36.4047, -78.8432, -60.2153, 0.55 ) }
    dend_39 { pt3dadd( 36.2193, -81.7683, -63.4426, 0.55 ) }
    dend_39 { pt3dadd( 36.1899, -82.2323, -63.9545, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 62/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 36.4047, -78.8432, -60.2153, 0.55 ) }
    dend_38 { pt3dadd( 38.6552, -82.2247, -56.9314, 0.28 ) }
    dend_38 { pt3dadd( 39.3516, -83.2711, -55.9152, 0.28 ) }
    dend_38 { pt3dadd( 39.9854, -84.2235, -54.9903, 0.83 ) }
    dend_38 { pt3dadd( 42.6006, -88.1529, -51.1743, 0.55 ) }
    dend_38 { pt3dadd( 43.2403, -89.1141, -50.2408, 0.55 ) }
    dend_38 { pt3dadd( 44.1389, -90.4644, -48.9295, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 69/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 49.3425, 43.1943, 22.2466, 0.83 ) }
    dend_26 { pt3dadd( 52.514, 53.011, 24.6524, 0.83 ) }
    dend_26 { pt3dadd( 55.2871, 62.4658, 28.5424, 0.83 ) }
    dend_26 { pt3dadd( 58.1239, 71.799, 32.6725, 0.83 ) }
    dend_26 { pt3dadd( 62.1218, 79.8642, 38.2567, 0.83 ) }
    dend_26 { pt3dadd( 66.4852, 86.9022, 44.8629, 0.83 ) }
    dend_26 { pt3dadd( 68.9881, 93.8402, 52.4664, 0.83 ) }
    dend_26 { pt3dadd( 72.7353, 100.883, 59.4357, 0.83 ) }
    dend_26 { pt3dadd( 76.9565, 106.675, 67.2357, 0.83 ) }
    dend_26 { pt3dadd( 81.7946, 112.58, 74.58, 0.83 ) }
    dend_26 { pt3dadd( 87.3419, 118.989, 80.9341, 0.83 ) }
    dend_26 { pt3dadd( 92.2253, 125.121, 88.059, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 49.3425, 43.1943, 22.2466, 0.83 ) }
    dend_25 { pt3dadd( 53.0784, 53.998, 24.0486, 0.83 ) }
    dend_25 { pt3dadd( 58.243, 64.2582, 25.4559, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 84/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -5.4501, 92.8087, -25.9027, 1.11 ) }
    apic_16 { pt3dadd( -3.96665, 101.957, -26.978, 1.11 ) }
    apic_16 { pt3dadd( -3.34555, 110.519, -27.8163, 0.83 ) }
    apic_16 { pt3dadd( -2.93693, 116.307, -28.197, 0.83 ) }
    apic_16 { pt3dadd( -2.67432, 120.061, -28.6118, 0.83 ) }
    apic_16 { pt3dadd( -2.36158, 124.756, -29.1776, 0.83 ) }
    apic_16 { pt3dadd( -2.23597, 127.878, -29.655, 0.83 ) }
    apic_16 { pt3dadd( -2.04809, 138.763, -31.2114, 0.83 ) }
    apic_16 { pt3dadd( -2.01606, 141.573, -31.4969, 0.83 ) }
    apic_16 { pt3dadd( -1.94263, 146.32, -31.587, 0.83 ) }
    apic_16 { pt3dadd( -1.85719, 149.081, -31.7056, 0.83 ) }
    apic_16 { pt3dadd( -1.68471, 151.458, -31.7832, 0.83 ) }
    apic_16 { pt3dadd( -1.35397, 157.336, -32.0164, 0.83 ) }
    apic_16 { pt3dadd( -1.18287, 162.069, -32.223, 0.83 ) }
    apic_16 { pt3dadd( -0.846235, 172.273, -32.5382, 0.83 ) }
    apic_16 { pt3dadd( -0.462043, 179.369, -32.8101, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_16 { pt3dadd( 0.128301, 188.02, -33.2769, 1.11 ) }
    apic_16 { pt3dadd( 0.680869, 194.119, -33.7067, 1.11 ) }
    apic_16 { pt3dadd( 1.1979, 198.854, -34.0226, 1.11 ) }
    apic_16 { pt3dadd( 1.76798, 203.214, -34.3356, 1.11 ) }
    apic_16 { pt3dadd( 2.75211, 208.825, -34.8087, 1.11 ) }
    apic_16 { pt3dadd( 3.683, 213.182, -35.1727, 1.11 ) }
    apic_16 { pt3dadd( 4.85823, 218.177, -35.695, 1.11 ) }
    apic_16 { pt3dadd( 5.98622, 222.223, -36.1569, 1.11 ) }
    apic_16 { pt3dadd( 7.19406, 226.421, -36.6615, 1.11 ) }
    apic_16 { pt3dadd( 8.70785, 231.716, -37.3291, 1.11 ) }
    apic_16 { pt3dadd( 10.0279, 237.029, -38.0375, 1.11 ) }
    apic_16 { pt3dadd( 11.8817, 245.452, -39.2058, 0.83 ) }
    apic_16 { pt3dadd( 12.4967, 249.102, -39.5644, 0.83 ) }
    apic_16 { pt3dadd( 12.7209, 250.842, -39.6784, 0.83 ) }
    apic_16 { pt3dadd( 13.0461, 254.467, -39.7474, 0.83 ) }
    apic_16 { pt3dadd( 13.1779, 259.967, -39.5702, 0.83 ) }
    apic_16 { pt3dadd( 13.0232, 264.505, -39.079, 0.83 ) }
    apic_16 { pt3dadd( 12.7557, 268.21, -38.5968, 0.83 ) }
    apic_16 { pt3dadd( 12.4972, 272.114, -38.0587, 0.83 ) }
    apic_16 { pt3dadd( 12.319, 275.62, -37.6955, 0.83 ) }
    apic_16 { pt3dadd( 12.0706, 281.167, -37.0548, 0.83 ) }
    apic_16 { pt3dadd( 11.8266, 285.028, -36.6, 0.83 ) }
    apic_16 { pt3dadd( 11.6126, 288.279, -36.3865, 0.83 ) }
    apic_16 { pt3dadd( 11.3485, 291.262, -36.2324, 0.83 ) }
    apic_16 { pt3dadd( 10.9968, 295.031, -36.2296, 0.83 ) }
    apic_16 { pt3dadd( 10.6639, 299.797, -36.4787, 0.83 ) }
    apic_16 { pt3dadd( 10.4218, 303.583, -36.7771, 0.83 ) }
    apic_16 { pt3dadd( 10.2238, 308.299, -37.3778, 0.83 ) }
    apic_16 { pt3dadd( 10.2134, 314.534, -38.2493, 0.83 ) }
    apic_16 { pt3dadd( 10.5114, 324.892, -39.6016, 0.83 ) }
    apic_16 { pt3dadd( 11.0697, 334.184, -41.0069, 0.83 ) }
    apic_16 { pt3dadd( 11.5538, 339.559, -41.9658, 0.83 ) }
    apic_16 { pt3dadd( 12.4151, 347.164, -43.2614, 0.83 ) }
    apic_16 { pt3dadd( 13.9403, 358.416, -45.1075, 0.83 ) }
    apic_16 { pt3dadd( 14.6255, 362.361, -45.7195, 0.83 ) }
    apic_16 { pt3dadd( 15.4277, 366.739, -46.2953, 0.83 ) }
    apic_16 { pt3dadd( 16.1788, 370.608, -46.7923, 0.83 ) }
    apic_16 { pt3dadd( 17.1387, 375.386, -47.3964, 0.83 ) }
    apic_16 { pt3dadd( 18.3379, 381.91, -48.1748, 0.83 ) }
    apic_16 { pt3dadd( 19.0341, 385.672, -48.7282, 0.83 ) }
    apic_16 { pt3dadd( 19.8042, 391.349, -49.6538, 0.83 ) }
    apic_16 { pt3dadd( 20.0235, 393.404, -49.9864, 0.83 ) }
    apic_16 { pt3dadd( 20.493, 399.218, -50.9147, 0.83 ) }
    apic_16 { pt3dadd( 20.7223, 403.395, -51.5381, 0.83 ) }
    apic_16 { pt3dadd( 20.7642, 405.996, -51.8553, 0.83 ) }
    apic_16 { pt3dadd( 20.6288, 413.073, -52.7515, 0.83 ) }
    apic_16 { pt3dadd( 20.4127, 419.243, -53.4763, 0.83 ) }
    apic_16 { pt3dadd( 19.8534, 428.673, -54.8248, 0.83 ) }
    apic_16 { pt3dadd( 19.6921, 431.137, -55.2118, 0.83 ) }
    apic_16 { pt3dadd( 19.3911, 438.053, -56.3983, 0.83 ) }
    apic_16 { pt3dadd( 19.3681, 442.916, -57.3419, 0.83 ) }
    apic_16 { pt3dadd( 19.5261, 449.139, -58.5848, 0.83 ) }
    apic_16 { pt3dadd( 19.4427, 453.857, -59.5902, 0.83 ) }
    apic_16 { pt3dadd( 19.4445, 457.453, -60.3559, 0.83 ) }
    apic_16 { pt3dadd( 19.5542, 460.696, -60.8345, 0.83 ) }
    apic_16 { pt3dadd( 19.6411, 461.928, -60.8602, 0.83 ) }
    apic_16 { pt3dadd( 19.9537, 465.704, -60.5918, 0.83 ) }
    apic_16 { pt3dadd( 20.2332, 469.723, -60.082, 0.83 ) }
    apic_16 { pt3dadd( 20.9336, 476.884, -59.4484, 0.83 ) }
    apic_16 { pt3dadd( 21.1094, 479.869, -59.4263, 0.83 ) }
    apic_16 { pt3dadd( 21.3513, 483.614, -59.6854, 0.83 ) }
    apic_16 { pt3dadd( 21.7388, 487.88, -60.2653, 0.83 ) }
    apic_16 { pt3dadd( 22.0484, 490.579, -60.8602, 0.83 ) }
    apic_16 { pt3dadd( 22.9697, 498.607, -63.0585, 0.83 ) }
    apic_16 { pt3dadd( 23.6504, 505.607, -65.2564, 0.83 ) }
    apic_16 { pt3dadd( 24.0182, 508.967, -66.2494, 0.83 ) }
    apic_16 { pt3dadd( 24.3492, 511.99, -67.0142, 0.83 ) }
    apic_16 { pt3dadd( 24.8014, 516.678, -67.8575, 0.83 ) }
    apic_16 { pt3dadd( 25.2463, 522.349, -68.5541, 0.83 ) }
    apic_16 { pt3dadd( 25.5244, 525.402, -68.7489, 0.83 ) }
    apic_16 { pt3dadd( 26.7664, 536.541, -69.179, 0.83 ) }
    apic_16 { pt3dadd( 27.0886, 539.351, -69.172, 0.83 ) }
    apic_16 { pt3dadd( 27.577, 543.23, -68.9537, 0.83 ) }
    apic_16 { pt3dadd( 27.8097, 544.836, -68.805, 0.83 ) }
    apic_16 { pt3dadd( 28.8002, 550.842, -68.1134, 0.83 ) }
    apic_16 { pt3dadd( 29.5952, 555.106, -67.4472, 0.83 ) }
    apic_16 { pt3dadd( 30.398, 558.914, -66.6691, 0.83 ) }
    apic_16 { pt3dadd( 32.0016, 567.593, -65.1095, 0.83 ) }
    apic_16 { pt3dadd( 32.8598, 573.397, -64.0551, 0.83 ) }
    apic_16 { pt3dadd( 33.2411, 577.47, -63.3817, 0.83 ) }
    apic_16 { pt3dadd( 33.3756, 580.879, -62.7651, 0.83 ) }
    apic_16 { pt3dadd( 33.463, 583.589, -62.3359, 0.83 ) }
    apic_16 { pt3dadd( 33.577, 590.299, -61.3482, 0.83 ) }
    apic_16 { pt3dadd( 33.7366, 597.783, -60.438, 0.83 ) }
    apic_16 { pt3dadd( 33.7965, 608.721, -59.0106, 0.83 ) }
    apic_16 { pt3dadd( 33.7243, 613.248, -58.467, 0.83 ) }
    apic_16 { pt3dadd( 33.5507, 620.285, -57.6606, 0.83 ) }
    apic_16 { pt3dadd( 32.8487, 631.807, -56.0827, 0.83 ) }
    apic_16 { pt3dadd( 32.2427, 638.709, -55.1034, 0.83 ) }
    apic_16 { pt3dadd( 31.5973, 643.577, -54.5457, 0.83 ) }
    apic_16 { pt3dadd( 30.2943, 650.661, -53.7994, 0.83 ) }
    apic_16 { pt3dadd( 29.6521, 653.425, -53.5506, 0.83 ) }
    apic_16 { pt3dadd( 27.4416, 660.618, -52.9432, 0.55 ) }
    apic_16 { pt3dadd( 25.7235, 665.572, -52.732, 0.55 ) }
    apic_16 { pt3dadd( 24.9604, 667.953, -52.6064, 0.55 ) }
    apic_16 { pt3dadd( 23.363, 673.883, -52.5843, 0.55 ) }
    apic_16 { pt3dadd( 22.4209, 677.696, -52.6103, 0.55 ) }
    apic_16 { pt3dadd( 21.3767, 682.153, -52.5785, 0.55 ) }
    apic_16 { pt3dadd( 20.1326, 688.481, -52.5378, 0.55 ) }
    apic_16 { pt3dadd( 18.333, 696.782, -52.1063, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_16 { pt3dadd( 16.8056, 703.466, -51.6334, 0.55 ) }
    apic_16 { pt3dadd( 16.1334, 706.382, -51.374, 0.55 ) }
    apic_16 { pt3dadd( 14.7472, 712.781, -50.6951, 0.55 ) }
    apic_16 { pt3dadd( 14.0857, 715.827, -50.1767, 0.55 ) }
    apic_16 { pt3dadd( 13.0585, 721.739, -48.8312, 0.55 ) }
    apic_16 { pt3dadd( 12.2344, 727.067, -47.3924, 0.55 ) }
    apic_16 { pt3dadd( 11.8246, 730.597, -46.3915, 0.55 ) }
    apic_16 { pt3dadd( 11.5733, 733.476, -45.6032, 0.55 ) }
    apic_16 { pt3dadd( 11.3824, 735.855, -44.9784, 0.55 ) }
    apic_16 { pt3dadd( 10.6122, 746.985, -42.5608, 0.55 ) }
    apic_16 { pt3dadd( 10.3539, 751.281, -41.8276, 0.55 ) }
    apic_16 { pt3dadd( 9.73302, 758.829, -40.7818, 0.55 ) }
    apic_16 { pt3dadd( 9.22678, 763.799, -40.3953, 0.55 ) }
    apic_16 { pt3dadd( 8.92847, 766.467, -40.2366, 0.55 ) }
    apic_16 { pt3dadd( 7.40959, 778.995, -39.8193, 0.55 ) }
    apic_16 { pt3dadd( 6.8218, 782.909, -39.7919, 0.55 ) }
    apic_16 { pt3dadd( 5.99986, 789.056, -39.8978, 0.55 ) }
    apic_16 { pt3dadd( 4.9411, 795.234, -40.2144, 0.28 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 18/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -5.4501, 92.8087, -25.9027, 1.11 ) }
    apic_15 { pt3dadd( -3.7462, 91.589, -29.586, 0.83 ) }
    apic_15 { pt3dadd( -1.47148, 89.2919, -35.0146, 0.55 ) }
    apic_15 { pt3dadd( 0.0248444, 87.5385, -38.8421, 0.55 ) }
    apic_15 { pt3dadd( 2.5906, 84.2226, -45.6705, 0.55 ) }
    apic_15 { pt3dadd( 3.76677, 82.5686, -48.8898, 0.55 ) }
    apic_15 { pt3dadd( 4.51, 81.4458, -50.9465, 0.55 ) }
    apic_15 { pt3dadd( 5.81773, 78.6739, -55.5612, 0.55 ) }
    apic_15 { pt3dadd( 6.51263, 76.8394, -58.1984, 0.55 ) }
    apic_15 { pt3dadd( 7.3211, 74.7809, -61.124, 0.55 ) }
    apic_15 { pt3dadd( 7.84648, 73.4626, -62.9384, 0.55 ) }
    apic_15 { pt3dadd( 9.93796, 69.119, -68.994, 0.55 ) }
    apic_15 { pt3dadd( 11.1797, 66.8691, -72.3758, 0.55 ) }
    apic_15 { pt3dadd( 13.6237, 63.173, -78.5546, 0.55 ) }
    apic_15 { pt3dadd( 14.7922, 61.6784, -81.2823, 0.55 ) }
    apic_15 { pt3dadd( 15.6089, 60.7174, -83.1726, 0.55 ) }
    apic_15 { pt3dadd( 16.309, 59.9813, -84.7575, 0.55 ) }
    apic_15 { pt3dadd( 17.5466, 58.9152, -87.5438, 0.55 ) }
    apic_15 { pt3dadd( 19.3576, 57.5879, -91.7706, 0.55 ) }
    apic_15 { pt3dadd( 20.2497, 56.9571, -94.2938, 0.55 ) }
    apic_15 { pt3dadd( 21.4066, 55.8479, -98.5841, 0.55 ) }
    apic_15 { pt3dadd( 21.9409, 55.339, -100.746, 0.55 ) }
    apic_15 { pt3dadd( 22.7313, 54.5576, -104.425, 0.55 ) }
    apic_15 { pt3dadd( 23.3975, 53.9587, -107.814, 0.55 ) }
    apic_15 { pt3dadd( 23.7591, 53.6254, -110.146, 0.55 ) }
    apic_15 { pt3dadd( 24.5021, 53.1608, -114.978, 0.55 ) }
    apic_15 { pt3dadd( 25.0006, 53.0698, -117.865, 0.55 ) }
    apic_15 { pt3dadd( 25.7281, 52.9833, -122.368, 0.55 ) }
    apic_15 { pt3dadd( 26.171, 52.9064, -125.131, 0.55 ) }
    apic_15 { pt3dadd( 26.6412, 52.9388, -127.96, 0.55 ) }
    apic_15 { pt3dadd( 27.0621, 53.1208, -130.48, 0.28 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 49/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -10.458, 132.219, 24.354, 0.55 ) }
    apic_13 { pt3dadd( -11.984, 133.053, 25.0569, 0.55 ) }
    apic_13 { pt3dadd( -13.3162, 133.781, 25.6706, 0.55 ) }
    apic_13 { pt3dadd( -14.1629, 134.243, 26.0606, 0.28 ) }
    apic_13 { pt3dadd( -14.8499, 134.618, 26.377, 0.28 ) }
    apic_13 { pt3dadd( -17.5015, 136.067, 27.5984, 0.28 ) }
    apic_13 { pt3dadd( -18.7002, 136.722, 28.1505, 0.28 ) }
    apic_13 { pt3dadd( -25.1474, 140.834, 31.6937, 0.28 ) }
    apic_13 { pt3dadd( -32.0162, 144.011, 35.4033, 0.28 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 58/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -10.458, 132.219, 24.354, 0.55 ) }
    apic_12 { pt3dadd( -9.13753, 134.665, 24.5923, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_2 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_1 nseg = 7
    dend_32 nseg = 7
    dend_30 nseg = 5
    dend_29 nseg = 7
    dend_1 nseg = 3
    apic_3 nseg = 7
    dend_34 nseg = 3
    dend_27 nseg = 5
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_3 nseg = 3
    dend_42 nseg = 3
    dend_35 nseg = 5
    dend_21 nseg = 9
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 7
    dend_10 nseg = 5
    dend_9 nseg = 7
    dend_7 nseg = 5
    dend_6 nseg = 3
    apic_9 nseg = 5
    apic_7 nseg = 7
    apic_6 nseg = 5
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_23 nseg = 7
    apic_11 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_26 nseg = 5
    apic_16 nseg = 35
    apic_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SP_0dc3a9acaf_0_0


