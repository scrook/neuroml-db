// Cell: cNAC187_L23_BP_84f37d935d_0_0
/*
{
  "id" : "cNAC187_L23_BP_84f37d935d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.47449, 10.7418, 1.66", "-0.655899, -10.7146, 12.6956, 1.66", "-1.30672, -13.1323, 14.8044, 1.66", "-2.42443, -17.2845, 18.4259, 1.39", "-6.86955, -33.7978, 32.8289, 1.11", "-7.64933, -36.6947, 35.3555, 1.11", "-8.63693, -40.3636, 38.5555, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.47601, -0.778182, 1.39", "0.628605, 13.4312, 1.95701, 0.83", "0.632398, 15.392, 2.85763, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.63693, -40.3636, 38.5555, 0.83", "-10.1708, -45.1636, 36.7541, 0.83", "-10.5361, -46.3066, 36.3251, 0.83", "-11.4684, -49.2241, 35.2302, 0.83", "-11.8863, -50.5319, 34.7394, 0.83", "-12.7851, -53.3445, 33.6838, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.63693, -40.3636, 38.5555, 0.83", "-8.75162, -41.6575, 38.7541, 0.83", "-8.85764, -42.8289, 38.9151, 0.83", "-9.05117, -44.3572, 39.11, 0.83", "-9.4383, -47.8551, 39.4508, 0.83", "-9.72199, -50.7452, 39.6818, 0.55", "-10.2157, -55.6445, 39.9605, 0.55", "-10.3869, -58.0893, 40.1145, 0.83", "-10.5152, -60.8922, 40.2876, 0.55", "-10.5689, -65.4892, 40.6995, 0.55", "-10.5546, -66.8054, 40.8311, 0.55", "-10.5021, -70.376, 41.2081, 0.55", "-10.4084, -74.8824, 41.8005, 0.55", "-10.3525, -77.581, 42.1876, 0.55", "-10.3104, -81.1714, 42.7415, 0.55", "-10.4625, -87.6131, 43.8362, 0.55", "-10.6464, -91.0029, 44.4109, 0.55", "-10.8453, -93.5265, 44.8082, 0.55", "-11.1022, -95.2635, 45.017, 0.55", "-11.4149, -96.7751, 45.175, 0.55", "-12.1745, -99.7922, 45.5773, 0.55", "-12.5904, -101.298, 45.7963, 0.55", "-13.2279, -103.599, 46.2375, 0.55", "-14.0873, -106.679, 46.8854, 0.55", "-15.3777, -111.119, 47.9001, 0.55", "-16.5058, -115.12, 48.8753, 0.55", "-17.5166, -118.607, 49.8095, 0.83", "-18.4793, -121.937, 50.8302, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.632398, 15.392, 2.85763, 0.83", "-0.921219, 24.4001, -1.38119, 0.83", "-1.2338, 26.7766, -2.42371, 0.83", "-1.62588, 29.6892, -3.73122, 0.83", "-1.89611, 32.0962, -4.74727, 0.83", "-2.28928, 35.946, -6.29338, 0.83", "-2.71016, 40.9827, -8.21624, 0.83", "-2.97434, 44.5609, -9.27075, 0.83", "-3.24059, 48.4339, -10.4901, 0.83", "-3.49618, 52.413, -11.9179, 0.55", "-3.57893, 53.6731, -12.3778, 0.55", "-3.7586, 55.8278, -13.1705, 0.55", "-4.05029, 60.3287, -14.7563, 0.55", "-4.28559, 63.5928, -15.8577, 0.55", "-4.80469, 71.7748, -18.6223, 0.55", "-5.11461, 75.4674, -20.0232, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.632398, 15.392, 2.85763, 0.83", "1.45746, 17.6506, 3.76585, 0.83", "2.05642, 19.4327, 4.54929, 0.83", "2.91702, 22.244, 5.88483, 0.83", "3.71375, 24.9539, 7.19885, 0.83", "4.61633, 28.3846, 8.70295, 0.83", "5.29445, 30.9707, 9.76153, 0.83", "5.73125, 32.9274, 10.5637, 0.83", "6.18674, 35.0741, 11.3618, 0.83", "6.28508, 35.6586, 11.5422, 0.83", "7.42069, 42.3783, 13.2261, 0.83", "7.63153, 43.8069, 13.4806, 0.83", "7.90198, 45.7496, 13.7162, 0.83", "8.11821, 47.4315, 13.8778, 0.83", "8.33633, 49.3822, 14.0286, 0.83", "8.63167, 51.8459, 14.2217, 0.83", "8.86704, 54.3851, 14.4065, 0.83", "9.02903, 55.8355, 14.5156, 0.83", "9.34517, 58.0785, 14.6854, 0.83", "9.61656, 60.2842, 14.8552, 0.83", "9.94569, 62.6021, 15.0075, 0.83", "10.3737, 65.6315, 15.2418, 0.83", "10.6503, 67.6104, 15.4923, 0.83", "10.7799, 68.7057, 15.6621, 0.83", "10.8979, 69.9447, 15.9205, 0.83", "11.0652, 71.7778, 16.4197, 0.83", "11.1758, 74.47, 17.3301, 0.55", "11.3317, 78.0009, 18.6803, 0.55", "11.3202, 79.04, 19.0934, 0.55", "11.287, 81.2254, 19.9478, 0.55", "11.2484, 82.1418, 20.2896, 0.55", "11.1463, 83.8605, 20.9242, 0.55", "11.0787, 85.6533, 21.4981, 0.55", "11.1086, 88.2578, 22.1783, 0.55", "11.1355, 89.9742, 22.5987, 0.55", "11.1333, 91.5363, 22.9252, 0.55", "11.1868, 93.4883, 23.3286, 0.55", "11.3707, 95.5207, 23.7151, 0.55", "11.7077, 98.2918, 24.292, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.7851, -53.3445, 33.6838, 0.83", "-14.4233, -58.5736, 35.7469, 0.83", "-15.6408, -62.7203, 37.1914, 0.83", "-17.0214, -67.725, 38.7247, 0.83", "-18.1243, -71.8667, 39.8531, 0.83", "-18.7946, -74.3836, 40.5389, 0.83", "-19.5938, -77.3846, 41.3565, 0.83", "-20.0413, -79.5483, 41.8222, 0.83", "-20.5099, -82.0201, 42.2487, 0.83", "-20.8888, -85.1833, 42.3522, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.7851, -53.3445, 33.6838, 0.55", "-11.0348, -53.685, 40.4313, 0.55", "-8.9487, -54.0135, 47.599, 0.55", "-7.88899, -54.1804, 51.24, 0.55", "-6.55427, -54.3906, 55.8259, 0.28", "-6.33378, -54.4253, 56.5835, 0.83", "-5.17707, -54.6075, 60.5578, 0.28", "-4.95453, -54.5968, 61.2321, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.11461, 75.4674, -20.0232, 0.55", "-4.98281, 77.4932, -20.1032, 0.55", "-4.82405, 79.6358, -20.2466, 0.55", "-4.71573, 81.1416, -20.3321, 0.55", "-4.53309, 83.4034, -20.4413, 0.83", "-4.40469, 85.011, -20.5091, 0.55", "-4.27141, 86.5111, -20.5611, 0.55", "-4.1565, 87.9132, -20.5687, 1.11", "-3.92029, 90.3517, -20.6517, 0.55", "-3.85962, 91.1661, -20.7021, 0.55", "-3.7843, 92.1934, -20.7789, 1.11", "-3.69498, 93.4681, -20.8858, 0.55", "-3.65259, 94.2996, -20.9607, 1.11", "-3.55563, 96.8344, -21.1698, 0.55", "-3.52758, 98.1692, -21.3893, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.11461, 75.4674, -20.0232, 0.28", "-5.36659, 78.5932, -23.3713, 0.28", "-5.3845, 79.0618, -23.857, 0.55", "-5.47154, 83.2079, -27.9608, 0.28", "-5.43541, 87.0796, -32.0036, 1.11", "-5.3497, 89.096, -34.2215, 0.28", "-5.3497, 89.096, -34.2215, 0.55", "-4.93571, 91.5567, -36.3568, 0.28", "-4.68918, 92.5019, -37.0601, 1.11", "-2.79466, 96.7108, -38.8279, 0.55", "-0.826435, 99.9945, -39.0598, 0.28", "2.60149, 105.135, -38.7136, 1.11", "5.70777, 109.494, -37.8949, 0.28", "5.78904, 109.596, -37.8511, 0.55", "8.30373, 112.47, -35.9999, 0.28", "8.53865, 112.722, -35.7617, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.8888, -85.1833, 42.3522, 0.83", "-20.7461, -88.5303, 43.5105, 0.83", "-20.6406, -91.2178, 44.6309, 0.83", "-20.5547, -92.4759, 45.1616, 0.83", "-20.5143, -93.1999, 45.532, 0.83", "-20.4556, -95.1794, 46.5969, 0.83", "-20.4309, -96.3492, 47.1389, 0.83", "-20.3666, -98.5704, 47.9412, 0.83", "-20.2554, -100.111, 48.5005, 0.83", "-19.932, -102.742, 49.357, 0.83", "-19.6934, -104.095, 49.7009, 0.83", "-19.0285, -107.422, 50.2097, 0.83", "-18.4626, -110.389, 50.4612, 0.83", "-18.0658, -112.841, 50.4483, 0.83", "-17.8695, -114.616, 50.3874, 0.83", "-17.8358, -114.974, 50.3631, 0.83", "-17.7284, -117.029, 50.3373, 0.28", "-17.7384, -117.573, 50.3722, 0.83", "-17.8641, -118.976, 50.4255, 0.28", "-18.1231, -121.467, 50.4801, 0.28", "-18.1846, -122.002, 50.513, 0.28", "-18.3675, -123.707, 50.6313, 0.83", "-18.4897, -125.216, 50.7563, 0.28", "-18.5794, -126.426, 50.8738, 0.83", "-18.6094, -127.395, 50.9943, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.8888, -85.1833, 42.3522, 0.55", "-23.9982, -91.1941, 40.2102, 0.55", "-25.4246, -93.7663, 39.3812, 0.55", "-28.5717, -99.2188, 37.7854, 0.55", "-29.98, -101.549, 37.164, 0.55", "-31.4389, -103.812, 36.6253, 0.28", "-32.0908, -104.823, 36.3845, 0.55", "-33.8226, -107.151, 36.0214, 0.28", "-34.9737, -108.662, 35.8312, 0.55", "-36.4276, -110.413, 35.7964, 0.28", "-38.7391, -113.038, 35.7345, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BP_84f37d935d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.47449, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.655899, -10.7146, 12.6956, 1.66 ) }
    dend_5 { pt3dadd( -1.30672, -13.1323, 14.8044, 1.66 ) }
    dend_5 { pt3dadd( -2.42443, -17.2845, 18.4259, 1.39 ) }
    dend_5 { pt3dadd( -6.86955, -33.7978, 32.8289, 1.11 ) }
    dend_5 { pt3dadd( -7.64933, -36.6947, 35.3555, 1.11 ) }
    dend_5 { pt3dadd( -8.63693, -40.3636, 38.5555, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.47601, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628605, 13.4312, 1.95701, 0.83 ) }
    dend_0 { pt3dadd( 0.632398, 15.392, 2.85763, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.63693, -40.3636, 38.5555, 0.83 ) }
    dend_7 { pt3dadd( -10.1708, -45.1636, 36.7541, 0.83 ) }
    dend_7 { pt3dadd( -10.5361, -46.3066, 36.3251, 0.83 ) }
    dend_7 { pt3dadd( -11.4684, -49.2241, 35.2302, 0.83 ) }
    dend_7 { pt3dadd( -11.8863, -50.5319, 34.7394, 0.83 ) }
    dend_7 { pt3dadd( -12.7851, -53.3445, 33.6838, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.63693, -40.3636, 38.5555, 0.83 ) }
    dend_6 { pt3dadd( -8.75162, -41.6575, 38.7541, 0.83 ) }
    dend_6 { pt3dadd( -8.85764, -42.8289, 38.9151, 0.83 ) }
    dend_6 { pt3dadd( -9.05117, -44.3572, 39.11, 0.83 ) }
    dend_6 { pt3dadd( -9.4383, -47.8551, 39.4508, 0.83 ) }
    dend_6 { pt3dadd( -9.72199, -50.7452, 39.6818, 0.55 ) }
    dend_6 { pt3dadd( -10.2157, -55.6445, 39.9605, 0.55 ) }
    dend_6 { pt3dadd( -10.3869, -58.0893, 40.1145, 0.83 ) }
    dend_6 { pt3dadd( -10.5152, -60.8922, 40.2876, 0.55 ) }
    dend_6 { pt3dadd( -10.5689, -65.4892, 40.6995, 0.55 ) }
    dend_6 { pt3dadd( -10.5546, -66.8054, 40.8311, 0.55 ) }
    dend_6 { pt3dadd( -10.5021, -70.376, 41.2081, 0.55 ) }
    dend_6 { pt3dadd( -10.4084, -74.8824, 41.8005, 0.55 ) }
    dend_6 { pt3dadd( -10.3525, -77.581, 42.1876, 0.55 ) }
    dend_6 { pt3dadd( -10.3104, -81.1714, 42.7415, 0.55 ) }
    dend_6 { pt3dadd( -10.4625, -87.6131, 43.8362, 0.55 ) }
    dend_6 { pt3dadd( -10.6464, -91.0029, 44.4109, 0.55 ) }
    dend_6 { pt3dadd( -10.8453, -93.5265, 44.8082, 0.55 ) }
    dend_6 { pt3dadd( -11.1022, -95.2635, 45.017, 0.55 ) }
    dend_6 { pt3dadd( -11.4149, -96.7751, 45.175, 0.55 ) }
    dend_6 { pt3dadd( -12.1745, -99.7922, 45.5773, 0.55 ) }
    dend_6 { pt3dadd( -12.5904, -101.298, 45.7963, 0.55 ) }
    dend_6 { pt3dadd( -13.2279, -103.599, 46.2375, 0.55 ) }
    dend_6 { pt3dadd( -14.0873, -106.679, 46.8854, 0.55 ) }
    dend_6 { pt3dadd( -15.3777, -111.119, 47.9001, 0.55 ) }
    dend_6 { pt3dadd( -16.5058, -115.12, 48.8753, 0.55 ) }
    dend_6 { pt3dadd( -17.5166, -118.607, 49.8095, 0.83 ) }
    dend_6 { pt3dadd( -18.4793, -121.937, 50.8302, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.632398, 15.392, 2.85763, 0.83 ) }
    dend_2 { pt3dadd( -0.921219, 24.4001, -1.38119, 0.83 ) }
    dend_2 { pt3dadd( -1.2338, 26.7766, -2.42371, 0.83 ) }
    dend_2 { pt3dadd( -1.62588, 29.6892, -3.73122, 0.83 ) }
    dend_2 { pt3dadd( -1.89611, 32.0962, -4.74727, 0.83 ) }
    dend_2 { pt3dadd( -2.28928, 35.946, -6.29338, 0.83 ) }
    dend_2 { pt3dadd( -2.71016, 40.9827, -8.21624, 0.83 ) }
    dend_2 { pt3dadd( -2.97434, 44.5609, -9.27075, 0.83 ) }
    dend_2 { pt3dadd( -3.24059, 48.4339, -10.4901, 0.83 ) }
    dend_2 { pt3dadd( -3.49618, 52.413, -11.9179, 0.55 ) }
    dend_2 { pt3dadd( -3.57893, 53.6731, -12.3778, 0.55 ) }
    dend_2 { pt3dadd( -3.7586, 55.8278, -13.1705, 0.55 ) }
    dend_2 { pt3dadd( -4.05029, 60.3287, -14.7563, 0.55 ) }
    dend_2 { pt3dadd( -4.28559, 63.5928, -15.8577, 0.55 ) }
    dend_2 { pt3dadd( -4.80469, 71.7748, -18.6223, 0.55 ) }
    dend_2 { pt3dadd( -5.11461, 75.4674, -20.0232, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.632398, 15.392, 2.85763, 0.83 ) }
    dend_1 { pt3dadd( 1.45746, 17.6506, 3.76585, 0.83 ) }
    dend_1 { pt3dadd( 2.05642, 19.4327, 4.54929, 0.83 ) }
    dend_1 { pt3dadd( 2.91702, 22.244, 5.88483, 0.83 ) }
    dend_1 { pt3dadd( 3.71375, 24.9539, 7.19885, 0.83 ) }
    dend_1 { pt3dadd( 4.61633, 28.3846, 8.70295, 0.83 ) }
    dend_1 { pt3dadd( 5.29445, 30.9707, 9.76153, 0.83 ) }
    dend_1 { pt3dadd( 5.73125, 32.9274, 10.5637, 0.83 ) }
    dend_1 { pt3dadd( 6.18674, 35.0741, 11.3618, 0.83 ) }
    dend_1 { pt3dadd( 6.28508, 35.6586, 11.5422, 0.83 ) }
    dend_1 { pt3dadd( 7.42069, 42.3783, 13.2261, 0.83 ) }
    dend_1 { pt3dadd( 7.63153, 43.8069, 13.4806, 0.83 ) }
    dend_1 { pt3dadd( 7.90198, 45.7496, 13.7162, 0.83 ) }
    dend_1 { pt3dadd( 8.11821, 47.4315, 13.8778, 0.83 ) }
    dend_1 { pt3dadd( 8.33633, 49.3822, 14.0286, 0.83 ) }
    dend_1 { pt3dadd( 8.63167, 51.8459, 14.2217, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 8.86704, 54.3851, 14.4065, 0.83 ) }
    dend_1 { pt3dadd( 9.02903, 55.8355, 14.5156, 0.83 ) }
    dend_1 { pt3dadd( 9.34517, 58.0785, 14.6854, 0.83 ) }
    dend_1 { pt3dadd( 9.61656, 60.2842, 14.8552, 0.83 ) }
    dend_1 { pt3dadd( 9.94569, 62.6021, 15.0075, 0.83 ) }
    dend_1 { pt3dadd( 10.3737, 65.6315, 15.2418, 0.83 ) }
    dend_1 { pt3dadd( 10.6503, 67.6104, 15.4923, 0.83 ) }
    dend_1 { pt3dadd( 10.7799, 68.7057, 15.6621, 0.83 ) }
    dend_1 { pt3dadd( 10.8979, 69.9447, 15.9205, 0.83 ) }
    dend_1 { pt3dadd( 11.0652, 71.7778, 16.4197, 0.83 ) }
    dend_1 { pt3dadd( 11.1758, 74.47, 17.3301, 0.55 ) }
    dend_1 { pt3dadd( 11.3317, 78.0009, 18.6803, 0.55 ) }
    dend_1 { pt3dadd( 11.3202, 79.04, 19.0934, 0.55 ) }
    dend_1 { pt3dadd( 11.287, 81.2254, 19.9478, 0.55 ) }
    dend_1 { pt3dadd( 11.2484, 82.1418, 20.2896, 0.55 ) }
    dend_1 { pt3dadd( 11.1463, 83.8605, 20.9242, 0.55 ) }
    dend_1 { pt3dadd( 11.0787, 85.6533, 21.4981, 0.55 ) }
    dend_1 { pt3dadd( 11.1086, 88.2578, 22.1783, 0.55 ) }
    dend_1 { pt3dadd( 11.1355, 89.9742, 22.5987, 0.55 ) }
    dend_1 { pt3dadd( 11.1333, 91.5363, 22.9252, 0.55 ) }
    dend_1 { pt3dadd( 11.1868, 93.4883, 23.3286, 0.55 ) }
    dend_1 { pt3dadd( 11.3707, 95.5207, 23.7151, 0.55 ) }
    dend_1 { pt3dadd( 11.7077, 98.2918, 24.292, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.7851, -53.3445, 33.6838, 0.83 ) }
    dend_9 { pt3dadd( -14.4233, -58.5736, 35.7469, 0.83 ) }
    dend_9 { pt3dadd( -15.6408, -62.7203, 37.1914, 0.83 ) }
    dend_9 { pt3dadd( -17.0214, -67.725, 38.7247, 0.83 ) }
    dend_9 { pt3dadd( -18.1243, -71.8667, 39.8531, 0.83 ) }
    dend_9 { pt3dadd( -18.7946, -74.3836, 40.5389, 0.83 ) }
    dend_9 { pt3dadd( -19.5938, -77.3846, 41.3565, 0.83 ) }
    dend_9 { pt3dadd( -20.0413, -79.5483, 41.8222, 0.83 ) }
    dend_9 { pt3dadd( -20.5099, -82.0201, 42.2487, 0.83 ) }
    dend_9 { pt3dadd( -20.8888, -85.1833, 42.3522, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.7851, -53.3445, 33.6838, 0.55 ) }
    dend_8 { pt3dadd( -11.0348, -53.685, 40.4313, 0.55 ) }
    dend_8 { pt3dadd( -8.9487, -54.0135, 47.599, 0.55 ) }
    dend_8 { pt3dadd( -7.88899, -54.1804, 51.24, 0.55 ) }
    dend_8 { pt3dadd( -6.55427, -54.3906, 55.8259, 0.28 ) }
    dend_8 { pt3dadd( -6.33378, -54.4253, 56.5835, 0.83 ) }
    dend_8 { pt3dadd( -5.17707, -54.6075, 60.5578, 0.28 ) }
    dend_8 { pt3dadd( -4.95453, -54.5968, 61.2321, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.11461, 75.4674, -20.0232, 0.55 ) }
    dend_4 { pt3dadd( -4.98281, 77.4932, -20.1032, 0.55 ) }
    dend_4 { pt3dadd( -4.82405, 79.6358, -20.2466, 0.55 ) }
    dend_4 { pt3dadd( -4.71573, 81.1416, -20.3321, 0.55 ) }
    dend_4 { pt3dadd( -4.53309, 83.4034, -20.4413, 0.83 ) }
    dend_4 { pt3dadd( -4.40469, 85.011, -20.5091, 0.55 ) }
    dend_4 { pt3dadd( -4.27141, 86.5111, -20.5611, 0.55 ) }
    dend_4 { pt3dadd( -4.1565, 87.9132, -20.5687, 1.11 ) }
    dend_4 { pt3dadd( -3.92029, 90.3517, -20.6517, 0.55 ) }
    dend_4 { pt3dadd( -3.85962, 91.1661, -20.7021, 0.55 ) }
    dend_4 { pt3dadd( -3.7843, 92.1934, -20.7789, 1.11 ) }
    dend_4 { pt3dadd( -3.69498, 93.4681, -20.8858, 0.55 ) }
    dend_4 { pt3dadd( -3.65259, 94.2996, -20.9607, 1.11 ) }
    dend_4 { pt3dadd( -3.55563, 96.8344, -21.1698, 0.55 ) }
    dend_4 { pt3dadd( -3.52758, 98.1692, -21.3893, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.11461, 75.4674, -20.0232, 0.28 ) }
    dend_3 { pt3dadd( -5.36659, 78.5932, -23.3713, 0.28 ) }
    dend_3 { pt3dadd( -5.3845, 79.0618, -23.857, 0.55 ) }
    dend_3 { pt3dadd( -5.47154, 83.2079, -27.9608, 0.28 ) }
    dend_3 { pt3dadd( -5.43541, 87.0796, -32.0036, 1.11 ) }
    dend_3 { pt3dadd( -5.3497, 89.096, -34.2215, 0.28 ) }
    dend_3 { pt3dadd( -5.3497, 89.096, -34.2215, 0.55 ) }
    dend_3 { pt3dadd( -4.93571, 91.5567, -36.3568, 0.28 ) }
    dend_3 { pt3dadd( -4.68918, 92.5019, -37.0601, 1.11 ) }
    dend_3 { pt3dadd( -2.79466, 96.7108, -38.8279, 0.55 ) }
    dend_3 { pt3dadd( -0.826435, 99.9945, -39.0598, 0.28 ) }
    dend_3 { pt3dadd( 2.60149, 105.135, -38.7136, 1.11 ) }
    dend_3 { pt3dadd( 5.70777, 109.494, -37.8949, 0.28 ) }
    dend_3 { pt3dadd( 5.78904, 109.596, -37.8511, 0.55 ) }
    dend_3 { pt3dadd( 8.30373, 112.47, -35.9999, 0.28 ) }
    dend_3 { pt3dadd( 8.53865, 112.722, -35.7617, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.8888, -85.1833, 42.3522, 0.83 ) }
    dend_11 { pt3dadd( -20.7461, -88.5303, 43.5105, 0.83 ) }
    dend_11 { pt3dadd( -20.6406, -91.2178, 44.6309, 0.83 ) }
    dend_11 { pt3dadd( -20.5547, -92.4759, 45.1616, 0.83 ) }
    dend_11 { pt3dadd( -20.5143, -93.1999, 45.532, 0.83 ) }
    dend_11 { pt3dadd( -20.4556, -95.1794, 46.5969, 0.83 ) }
    dend_11 { pt3dadd( -20.4309, -96.3492, 47.1389, 0.83 ) }
    dend_11 { pt3dadd( -20.3666, -98.5704, 47.9412, 0.83 ) }
    dend_11 { pt3dadd( -20.2554, -100.111, 48.5005, 0.83 ) }
    dend_11 { pt3dadd( -19.932, -102.742, 49.357, 0.83 ) }
    dend_11 { pt3dadd( -19.6934, -104.095, 49.7009, 0.83 ) }
    dend_11 { pt3dadd( -19.0285, -107.422, 50.2097, 0.83 ) }
    dend_11 { pt3dadd( -18.4626, -110.389, 50.4612, 0.83 ) }
    dend_11 { pt3dadd( -18.0658, -112.841, 50.4483, 0.83 ) }
    dend_11 { pt3dadd( -17.8695, -114.616, 50.3874, 0.83 ) }
    dend_11 { pt3dadd( -17.8358, -114.974, 50.3631, 0.83 ) }
    dend_11 { pt3dadd( -17.7284, -117.029, 50.3373, 0.28 ) }
    dend_11 { pt3dadd( -17.7384, -117.573, 50.3722, 0.83 ) }
    dend_11 { pt3dadd( -17.8641, -118.976, 50.4255, 0.28 ) }
    dend_11 { pt3dadd( -18.1231, -121.467, 50.4801, 0.28 ) }
    dend_11 { pt3dadd( -18.1846, -122.002, 50.513, 0.28 ) }
    dend_11 { pt3dadd( -18.3675, -123.707, 50.6313, 0.83 ) }
    dend_11 { pt3dadd( -18.4897, -125.216, 50.7563, 0.28 ) }
    dend_11 { pt3dadd( -18.5794, -126.426, 50.8738, 0.83 ) }
    dend_11 { pt3dadd( -18.6094, -127.395, 50.9943, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.8888, -85.1833, 42.3522, 0.55 ) }
    dend_10 { pt3dadd( -23.9982, -91.1941, 40.2102, 0.55 ) }
    dend_10 { pt3dadd( -25.4246, -93.7663, 39.3812, 0.55 ) }
    dend_10 { pt3dadd( -28.5717, -99.2188, 37.7854, 0.55 ) }
    dend_10 { pt3dadd( -29.98, -101.549, 37.164, 0.55 ) }
    dend_10 { pt3dadd( -31.4389, -103.812, 36.6253, 0.28 ) }
    dend_10 { pt3dadd( -32.0908, -104.823, 36.3845, 0.55 ) }
    dend_10 { pt3dadd( -33.8226, -107.151, 36.0214, 0.28 ) }
    dend_10 { pt3dadd( -34.9737, -108.662, 35.8312, 0.55 ) }
    dend_10 { pt3dadd( -36.4276, -110.413, 35.7964, 0.28 ) }
    dend_10 { pt3dadd( -38.7391, -113.038, 35.7345, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BP_84f37d935d_0_0


