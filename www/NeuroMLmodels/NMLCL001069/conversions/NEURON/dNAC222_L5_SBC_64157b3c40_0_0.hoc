// Cell: dNAC222_L5_SBC_64157b3c40_0_0
/*
{
  "id" : "dNAC222_L5_SBC_64157b3c40_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -11.5065, 3.2994, 4.13", "-1.63702, -11.5065, 3.2994, 4.13", "-1.52749, -12.4289, 3.62134, 4.13", "-1.36723, -13.7786, 4.09239, 3.76", "-1.11379, -15.9131, 4.83734, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -4.76153, -15.4506, 1.69", "0.00524711, -4.77835, -15.4506, 1.69", "0.291781, -4.83472, -15.4506, 1.69", "1.44754, -5.07365, -15.4434, 1.69", "3.13012, -5.48312, -15.3779, 1.69", "3.24701, -5.51659, -15.3879, 1.69", "5.08642, -6.21112, -15.7962, 1.69", "5.17282, -6.25628, -15.8359, 1.69", "6.26806, -7.26359, -17.1949, 1.84", "6.14404, -8.0965, -19.1209, 1.84", "5.18189, -8.8883, -22.0213, 1.99", "4.23501, -9.5322, -24.5398, 1.99", "3.1134, -10.1485, -27.1572, 1.99", "1.37256, -10.9383, -30.8158, 2.14", "-0.58953, -11.6223, -34.4469, 2.43", "-3.85058, -12.4315, -39.826, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 10.562, -5.6406, 2.58", "0.632978, 10.562, -5.6406, 2.58", "0.93455, 10.8048, -5.76073, 2.28", "1.24424, 11.0708, -5.87187, 2.21", "1.84014, 11.6549, -6.06911, 0.81", "2.52053, 12.445, -6.28083, 0.81", "2.86087, 12.8803, -6.38182, 1.25", "3.2586, 13.4846, -6.47629, 1.99", "3.27603, 13.5205, -6.47888, 1.99", "3.43686, 14.1153, -6.47003, 2.14", "3.48787, 14.7223, -6.42018, 2.14", "3.48618, 14.7621, -6.41694, 2.14", "3.41999, 15.4792, -6.37882, 1.84", "3.32754, 16.1636, -6.39155, 1.4", "3.15849, 17.0879, -6.46287, 0.81", "3.0074, 17.7096, -6.56686, 0.81", "2.77762, 18.4965, -6.75893, 1.11", "2.76686, 18.5284, -6.76989, 1.11", "2.5361, 19.1183, -7.04382, 1.69", "2.26561, 19.7586, -7.40757, 1.77", "2.04939, 20.3044, -7.76753, 1.18", "2.04188, 20.3327, -7.78714, 1.18", "2.00866, 20.8219, -8.10085, 0.88", "2.06132, 21.2075, -8.31034, 0.74", "2.08768, 21.2738, -8.3376, 0.74", "2.36082, 21.7339, -8.46962, 0.74", "2.76182, 22.316, -8.57919, 0.88", "3.07059, 22.7395, -8.63676, 1.69", "3.28768, 23.0312, -8.65883, 1.92", "3.46747, 23.2881, -8.67474, 2.21", "3.65361, 23.5822, -8.68862, 1.84", "3.87292, 24.0033, -8.7, 1.25", "4.07195, 24.517, -8.72893, 0.81", "4.19987, 24.9794, -8.78644, 0.81", "4.26013, 25.4356, -8.8913, 1.11", "4.25734, 25.4716, -8.90852, 1.11", "4.18205, 25.7703, -9.13698, 1.11", "3.98245, 26.2739, -9.62187, 0.59", "3.88088, 26.4777, -9.85004, 0.59", "3.65481, 26.8745, -10.3782, 0.52", "3.21357, 27.5922, -11.4183, 1.99", "2.99932, 27.9274, -11.9296, 3.02", "2.89713, 28.077, -12.1792, 3.02", "2.87953, 28.1004, -12.221, 3.02", "2.57144, 28.5089, -12.9898, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 7.82597, 1.3594, 1.47", "3.06382, 8.05324, 1.3803, 1.47", "3.65655, 8.48401, 1.49025, 1.25", "3.8491, 8.61942, 1.53328, 1.62", "4.21055, 8.84651, 1.61574, 1.92", "4.6268, 9.09142, 1.71129, 1.69", "5.2517, 9.38787, 1.89107, 0.88", "5.88885, 9.58484, 2.28658, 0.88", "5.91548, 9.5917, 2.31869, 0.88", "6.1851, 9.66029, 2.80155, 0.81", "6.19692, 9.66457, 2.83609, 0.81", "6.40282, 9.85013, 3.94199, 1.03", "6.52499, 10.2945, 5.85582, 1.11", "6.50081, 10.627, 6.93265, 1.11", "6.497, 10.6437, 6.97099, 1.11", "6.35316, 11.0774, 7.73645, 1.33", "6.18523, 11.5471, 8.31682, 1.99", "6.06426, 11.8784, 8.56952, 2.73", "5.99197, 12.1774, 8.72321, 2.65", "5.93811, 12.7936, 9.01228, 2.36", "5.94018, 12.8253, 9.0263, 2.36", "6.13152, 13.6581, 9.35961, 0.81", "6.32642, 14.1786, 9.56722, 0.59", "6.78837, 15.1378, 9.92829, 0.44", "7.17446, 15.7774, 10.1303, 0.44", "7.56467, 16.3119, 10.238, 1.18", "7.88489, 16.6943, 10.286, 1.99", "8.21817, 17.049, 10.3521, 2.65", "8.4042, 17.2457, 10.3995, 2.65", "8.92324, 17.8236, 10.5962, 1.77", "9.42257, 18.3983, 10.9106, 0.44", "9.91248, 18.9946, 11.3159, 0.44", "10.7802, 20.1209, 12.2407, 1.25", "11.0289, 20.477, 12.5606, 2.43", "11.4317, 21.1178, 13.1539, 2.43", "11.741, 21.6719, 13.6932, 2.21", "11.9651, 22.1272, 14.1244, 1.25", "12.2225, 22.72, 14.592, 0.52", "12.4054, 23.1542, 14.8301, 0.52", "12.6284, 23.6811, 15.056, 0.52", "12.6439, 23.7174, 15.0655, 0.52", "12.871, 24.2116, 15.1614, 0.88", "13.109, 24.6897, 15.2374, 1.25", "13.3261, 25.1093, 15.2677, 1.69", "13.4884, 25.4036, 15.2951, 1.69", "13.5184, 25.4573, 15.3016, 1.69", "13.812, 25.9664, 15.3756, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 10.657, -3.0206, 1.62", "-3.16702, 10.657, -3.0206, 1.62", "-3.52192, 11.2801, -2.52814, 1.4", "-4.16342, 12.4109, -1.5429, 1.4", "-4.60366, 13.1791, -0.89588, 1.4", "-4.99333, 13.8705, -0.330276, 1.69", "-5.5472, 14.848, 0.452398, 1.99", "-6.14535, 15.8985, 1.26296, 2.36", "-6.72861, 16.9195, 2.01195, 3.09", "-7.31362, 17.8832, 2.64521, 3.32", "-7.85944, 18.7323, 3.10704, 3.09", "-8.35439, 19.4382, 3.37739, 2.43", "-8.98306, 20.2641, 3.47822, 1.4", "-9.37701, 20.7488, 3.46043, 1.33", "-10.0071, 21.4698, 3.30989, 1.18", "-10.6156, 22.1019, 3.07372, 1.4", "-11.4425, 22.8701, 2.59256, 1.69", "-12.4033, 23.6973, 1.84902, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02029", "-0.412752, -28.0939, 2.58385, 1.02029", "-0.444525, -43.0938, 2.58385, 1.02029" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.11379, -15.9131, 4.83734, 1.99", "-0.437714, -16.8607, 4.8396, 1.99", "0.260727, -17.7761, 4.89222, 1.62", "0.29753, -17.8229, 4.89626, 1.62", "1.13402, -18.8834, 5.0436, 1.18", "1.60354, -19.4899, 5.14087, 1.18", "2.21021, -20.295, 5.27558, 1.18", "3.06832, -21.4618, 5.50118, 1.18", "3.78451, -22.4806, 5.71375, 1.47", "4.52734, -23.621, 5.95773, 2.21", "5.15658, -24.6328, 6.1927, 2.73", "5.75591, -25.6533, 6.43038, 2.8", "6.27949, -26.6024, 6.64804, 2.95", "6.78822, -27.6169, 6.86382, 2.95", "7.02409, -28.138, 6.96857, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.11379, -15.9131, 4.83734, 1.18", "-3.55849, -17.4965, 7.65508, 1.18", "-5.33614, -18.6479, 9.70399, 1.18", "-6.43392, -19.359, 10.9693, 1.69", "-7.33313, -19.9414, 12.0057, 2.36", "-7.87423, -20.2919, 12.6294, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.85058, -12.4315, -39.826, 0.66", "-2.18244, -14.1137, -41.321, 0.66", "-1.18881, -15.0368, -42.1034, 0.74", "-0.475872, -15.6432, -42.6909, 0.74", "0.114765, -16.1014, -43.1922, 0.74", "0.1621, -16.1354, -43.2332, 0.74", "1.31427, -16.8954, -44.2458, 0.52", "1.90024, -17.0645, -44.6966, 0.52", "2.64513, -16.9688, -45.5184, 0.44", "3.10613, -16.7912, -46.176, 0.44", "3.23016, -16.7469, -46.3614, 0.44", "3.67677, -16.6551, -46.9623, 0.44", "4.76752, -16.5459, -48.4065, 0.88", "4.81202, -16.5476, -48.4633, 0.88", "5.78146, -16.6923, -49.6066, 1.11", "7.08967, -16.9739, -51.0908, 1.84", "8.57774, -17.3537, -52.6955, 2.14", "10.9197, -18.0431, -55.0988, 0.29", "11.7358, -18.3031, -55.8695, 0.29", "12.367, -18.4999, -56.4072, 1.03", "12.4319, -18.5206, -56.4532, 1.03", "12.9428, -18.7116, -56.7403, 1.33", "13.0027, -18.7351, -56.7736, 1.33", "13.63, -18.9389, -57.1739, 1.18", "14.712, -19.175, -57.9998, 0.37", "15.4423, -19.2691, -58.6515, 0.37", "16.6475, -19.3197, -59.9307, 0.52", "18.1723, -19.2949, -61.7979, 0.74", "18.9594, -19.2782, -62.8351, 1.62", "19.3879, -19.2621, -63.4335, 1.92", "20.1586, -19.2115, -64.5394, 2.43", "21.4275, -19.045, -66.2901, 1.69", "22.5775, -18.7897, -67.855, 0.37", "23.1253, -18.6586, -68.5854, 0.37", "23.5035, -18.5745, -69.0805, 0.37", "24.0035, -18.4868, -69.7419, 1.11", "24.5739, -18.4294, -70.4075, 1.33", "26.4948, -18.2664, -72.2528, 0.22", "26.5589, -18.2621, -72.3055, 0.22", "27.1803, -18.2668, -72.7821, 0.22", "27.9812, -18.4137, -73.3288, 0.22", "28.9977, -18.7248, -73.9319, 0.88", "30.0375, -19.0845, -74.5286, 1.55", "30.7034, -19.2565, -75.0754, 1.77", "31.8662, -19.3993, -76.5399, 0.22", "32.5438, -19.3868, -77.711, 0.22", "33.1013, -19.3241, -78.8326, 1.47", "33.8213, -19.2216, -80.4284, 2.43", "35.9523, -18.8157, -85.4069, 1.99", "37.2171, -18.4882, -88.6014, 1.77", "38.6932, -17.973, -92.653, 0.22", "38.7128, -17.9643, -92.711, 0.22", "39.041, -17.8046, -93.7764, 0.22", "39.3162, -17.6699, -94.7196, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.85058, -12.4315, -39.826, 1.03", "-5.19895, -14.5234, -40.5724, 1.03", "-5.98798, -16.2133, -41.0241, 0.88", "-6.02658, -16.3134, -41.0468, 0.88", "-6.41218, -17.5904, -41.2863, 0.88", "-6.59042, -18.7661, -41.5584, 1.69", "-6.66294, -19.7916, -41.802, 1.84", "-6.617, -20.4046, -41.9565, 1.99", "-6.61083, -20.4745, -41.9754, 1.99", "-6.5764, -21.3343, -42.2595, 1.69", "-6.66469, -23.6597, -43.2295, 1.03", "-6.98758, -25.0671, -44.1357, 0.88", "-7.40678, -26.0329, -44.9344, 0.66", "-7.70777, -26.5866, -45.4401, 0.66", "-8.26654, -27.3955, -46.2676, 0.52", "-8.84558, -27.92, -46.9585, 0.52", "-10.9216, -28.8047, -48.7665, 1.77", "-11.4566, -28.9351, -49.25, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.57144, 28.5089, -12.9898, 0.52", "3.84496, 29.3593, -16.4327, 0.52", "4.06119, 29.4951, -16.9894, 0.52", "4.4515, 29.8087, -18.1544, 0.37", "4.92485, 30.3203, -19.7448, 1.4", "5.02471, 30.4755, -20.1346, 1.55", "5.84461, 32.1192, -23.6855, 0.74", "5.92514, 32.4651, -24.2772, 0.74", "6.07816, 33.9086, -26.5086, 0.29", "6.08134, 34.6566, -27.5249, 0.29", "5.98224, 35.9124, -29.0406, 1.92", "5.9004, 36.4226, -29.5766, 2.28", "5.49244, 38.3474, -31.3072, 0.22", "5.47237, 38.4529, -31.4037, 0.22", "5.41572, 38.9102, -31.8143, 0.22", "5.38376, 40.1365, -33.0531, 1.18", "5.40618, 40.6158, -33.5646, 1.77", "5.57774, 42.6712, -35.6762, 0.22", "5.72601, 43.8432, -36.8015, 1.84", "5.81415, 44.4154, -37.3262, 2.21", "6.21194, 46.313, -38.951, 0.22", "6.22862, 46.3697, -38.9927, 0.22", "6.6935, 47.6082, -39.7737, 0.22", "6.72598, 47.677, -39.8045, 0.22", "7.22538, 48.5525, -40.1666, 0.66", "7.69545, 49.31, -40.6185, 0.88", "8.33568, 50.3029, -41.3046, 0.22", "8.93619, 51.1929, -42.0462, 1.99", "9.24512, 51.6473, -42.5018, 2.5", "10.0362, 52.9283, -43.9193, 0.22", "11.1325, 54.9134, -46.3041, 0.59", "11.245, 55.1763, -46.6349, 0.59", "11.2589, 55.2208, -46.6915, 0.59", "11.4941, 56.34, -47.9893, 0.96", "11.5837, 56.9288, -48.608, 1.11", "11.6556, 57.5038, -49.1281, 0.96", "11.8442, 58.7949, -50.1536, 0.22", "11.8756, 58.9823, -50.3869, 0.22", "11.999, 59.6409, -51.4407, 0.22", "12.1037, 60.1907, -52.5356, 1.11", "12.1742, 60.8776, -54.2329, 1.4", "12.2014, 61.3926, -55.6809, 2.06", "12.3048, 63.428, -61.8322, 1.18", "12.3304, 64.1912, -64.3038, 1.18", "12.3309, 65.1492, -67.7277, 1.4", "12.2718, 66.4011, -72.5492, 1.55", "12.2698, 66.4178, -72.6218, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.57144, 28.5089, -12.9898, 0.52", "2.69006, 30.6701, -12.7402, 0.52", "2.78562, 32.0288, -12.5937, 0.52", "2.90806, 33.4848, -12.5664, 1.18", "3.03517, 34.6681, -12.6066, 1.99", "3.10615, 35.1635, -12.6363, 2.28", "3.24001, 35.7701, -12.6785, 1.84", "3.45866, 36.3659, -12.7337, 1.55", "4.08829, 37.8405, -12.9416, 0.88", "4.53619, 38.8652, -13.1877, 0.29", "4.91248, 39.7575, -13.4126, 0.29", "5.37959, 41.0688, -13.79, 0.29", "5.41595, 41.1773, -13.8268, 0.29", "5.6843, 42.0793, -14.1471, 0.29", "6.14676, 44.0461, -14.8287, 1.92", "6.30671, 45.201, -15.2378, 2.21", "6.38849, 46.9549, -15.9099, 0.29", "6.34406, 48.4295, -16.4945, 0.29", "6.19809, 49.6432, -17.0226, 0.29", "5.95102, 50.6811, -17.4946, 0.29", "5.43776, 52.0999, -18.1311, 1.84", "4.83146, 53.3726, -18.7138, 2.58", "4.61766, 53.7298, -18.8738, 2.5", "2.81489, 56.256, -20.0525, 0.22", "1.82878, 57.5062, -20.6817, 0.22", "1.17265, 58.2933, -21.0782, 0.96", "0.818244, 58.6939, -21.2784, 1.18", "0.494157, 59.0484, -21.4401, 1.18", "-0.630099, 60.267, -21.9871, 0.29", "-1.22153, 60.8936, -22.2507, 0.29", "-2.38284, 62.1468, -22.8288, 0.29", "-3.90765, 63.8147, -23.6319, 2.21", "-4.43246, 64.4011, -23.9134, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "13.812, 25.9664, 15.3756, 0.29", "14.3, 27.25, 15.2826, 0.29", "14.6413, 28.1758, 15.2823, 0.59", "14.8628, 28.7513, 15.3566, 0.74", "15.2455, 29.7401, 15.5332, 0.22", "15.6068, 30.6804, 15.7171, 0.22", "16.1654, 32.1438, 16.0123, 2.28", "16.3503, 32.6535, 16.1483, 2.28", "17.0021, 34.4588, 16.6682, 0.29", "17.1558, 34.8764, 16.7958, 0.29", "17.5776, 36.0169, 17.1601, 0.22", "17.6937, 36.3233, 17.2487, 0.88", "17.7434, 36.439, 17.2727, 0.88", "17.8859, 36.7384, 17.3169, 0.88", "17.9736, 36.9053, 17.3251, 0.88", "18.284, 37.4523, 17.3781, 0.52", "18.4903, 37.8306, 17.4802, 0.15", "18.7718, 38.3845, 17.6745, 0.15", "18.8974, 38.6715, 17.786, 0.15", "19.1745, 39.3895, 18.0695, 0.81", "19.2866, 39.7676, 18.2354, 0.96", "19.54, 40.9374, 18.7988, 0.15", "19.5518, 41.0118, 18.837, 0.15", "19.7058, 42.0038, 19.3502, 1.55", "19.8024, 42.5419, 19.6276, 2.28", "20.1686, 44.2174, 20.5119, 0.22", "20.4628, 45.3832, 21.183, 2.65", "20.9169, 47.015, 22.1552, 0.29", "21.095, 47.578, 22.5049, 0.15", "21.2277, 47.9694, 22.7601, 0.15", "21.8013, 49.5255, 23.8104, 2.58", "22.5181, 51.1596, 24.9327, 0.15", "22.6727, 51.4679, 25.1525, 0.37", "22.8746, 51.8336, 25.4311, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.812, 25.9664, 15.3756, 0.29", "12.5696, 27.0284, 15.8429, 0.29", "11.7763, 27.8218, 16.129, 0.29", "11.3349, 28.3383, 16.2817, 0.29", "10.9309, 28.8655, 16.4164, 0.88", "10.8963, 28.9276, 16.4273, 0.88", "10.7071, 29.3886, 16.5285, 0.88", "10.6642, 29.6037, 16.5616, 0.88", "10.6514, 29.8911, 16.6143, 0.88", "10.6534, 29.9693, 16.6363, 0.88", "10.7198, 31.0232, 16.9793, 0.44", "10.7904, 31.8967, 17.2678, 0.44", "10.7953, 31.9624, 17.2959, 0.44", "10.8057, 32.7751, 17.6675, 0.44", "10.7535, 34.088, 18.4031, 1.77", "10.7506, 34.6371, 18.7407, 2.65", "10.7727, 35.1316, 19.0673, 3.02", "11.001, 37.3219, 20.5065, 0.22", "11.2317, 38.4635, 21.3226, 1.03", "11.6778, 40.0528, 22.5184, 0.29", "12.0679, 41.1574, 23.4052, 0.22", "12.3442, 41.8119, 23.9521, 1.92", "12.6788, 42.4682, 24.4965, 2.28", "13.7476, 44.1486, 25.8381, 0.22", "14.0356, 44.6142, 26.261, 0.22", "14.5266, 45.6067, 27.2566, 1.11", "14.638, 45.9647, 27.6539, 1.55", "14.7319, 46.4432, 28.2411, 1.84", "14.735, 46.4874, 28.2995, 1.84", "14.6889, 48.6663, 31.2954, 0.29", "14.5969, 49.6781, 32.7363, 0.29", "14.4457, 50.6213, 34.0634, 2.65", "14.2778, 51.3819, 35.1168, 2.36", "13.9089, 52.6851, 36.8729, 0.37", "13.8956, 52.7239, 36.9196, 0.37", "13.6492, 53.2595, 37.4133, 0.22", "13.3603, 53.7565, 37.7767, 0.66", "13.0162, 54.2994, 38.0952, 0.96", "12.6642, 54.8472, 38.3564, 0.96", "12.1309, 55.6712, 38.7035, 0.22", "11.7405, 56.2962, 39.0071, 0.22", "11.0704, 57.3921, 39.6388, 2.43", "9.99245, 59.0552, 40.8503, 0.22", "9.82098, 59.3142, 41.0562, 0.88", "9.62038, 59.6236, 41.3078, 1.03", "8.92882, 60.6969, 42.2299, 0.66", "8.31751, 61.7065, 43.3535, 1.62", "7.8834, 62.6299, 44.5211, 1.62", "7.59655, 63.5206, 45.7001, 0.37", "7.54785, 63.8855, 46.1779, 2.06", "7.54756, 63.9241, 46.2267, 2.06", "7.77679, 66.5988, 49.2486, 1.62", "7.95447, 67.6314, 50.4006, 0.22", "8.10385, 68.265, 51.0952, 2.06", "8.6884, 70.2227, 53.3862, 0.29", "8.77883, 70.516, 53.724, 0.29", "9.05578, 71.4031, 54.6312, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.4033, 23.6973, 1.84902, 1.18", "-15.3909, 25.5894, -1.60609, 1.18", "-16.1106, 26.061, -2.32508, 1.18", "-17.0345, 26.677, -3.1349, 1.4", "-17.9769, 27.3297, -3.85466, 1.4", "-19.1808, 28.2268, -4.77917, 1.03", "-20.2349, 29.0705, -5.5661, 0.66", "-21.0902, 29.834, -6.06684, 0.66", "-21.6743, 30.4227, -6.4204, 1.11", "-22.4954, 31.3592, -6.85962, 0.81", "-24.29, 33.6891, -7.66792, 0.66", "-25.0576, 34.7959, -7.90636, 0.66", "-25.6328, 35.7132, -8.02166, 0.66", "-26.4442, 37.0934, -8.11409, 1.25", "-27.2658, 38.6109, -8.05904, 1.62", "-27.9545, 39.9686, -7.84673, 1.99", "-28.4383, 40.9687, -7.56322, 1.99", "-28.5285, 41.1589, -7.50819, 1.99", "-28.9339, 42.0318, -7.26386, 1.84", "-29.5705, 43.4166, -6.94046, 1.03", "-30.0728, 44.5261, -6.77085, 0.74", "-30.6456, 45.8148, -6.63027, 0.74", "-31.0735, 46.7959, -6.53904, 0.44", "-31.3873, 47.5116, -6.48119, 0.59", "-31.7942, 48.3502, -6.45494, 0.59", "-32.2335, 49.1371, -6.48279, 0.59", "-32.2908, 49.2254, -6.48976, 0.59", "-32.9651, 50.1235, -6.59556, 0.44", "-33.4736, 50.7339, -6.68565, 0.29", "-34.4103, 51.7852, -6.91918, 0.29", "-35.0985, 52.5846, -7.13091, 1.47", "-35.8287, 53.5111, -7.39262, 2.06", "-36.073, 53.9002, -7.50554, 2.21", "-36.2601, 54.3439, -7.66435, 2.21", "-36.5843, 55.674, -8.1825, 1.18", "-36.7217, 57.1858, -8.77534, 0.37", "-36.7063, 57.9994, -9.10762, 0.37", "-36.538, 59.5844, -9.72468, 0.37", "-36.2801, 61.4402, -10.4523, 1.33", "-36.2037, 61.9775, -10.6358, 1.77", "-36.1899, 62.0918, -10.6672, 1.77", "-36.162, 62.6864, -10.7537, 1.77", "-36.2484, 64.0132, -10.7119, 0.81", "-36.4466, 65.4527, -10.466, 0.29", "-36.578, 66.654, -10.04, 0.74", "-36.6318, 67.4136, -9.7246, 0.74", "-36.6861, 69.2673, -8.88425, 0.37", "-36.667, 70.5108, -8.27909, 0.37", "-36.5956, 71.4974, -7.75848, 0.37", "-36.3149, 73.4713, -6.6227, 1.4", "-36.1437, 74.2387, -6.25656, 2.06", "-36.0223, 74.7253, -6.06586, 2.5", "-35.8359, 75.4661, -5.84949, 2.5", "-35.821, 75.5531, -5.82796, 2.5", "-35.6048, 78.5937, -5.22475, 0.44", "-35.7124, 80.4641, -5.00861, 0.37", "-35.8673, 81.4645, -4.8969, 0.37", "-35.8972, 81.5898, -4.88384, 0.37", "-36.4461, 83.4014, -4.73908, 0.37", "-36.5142, 83.599, -4.73176, 0.37", "-36.8805, 84.5111, -4.76822, 0.37", "-36.9055, 84.598, -4.77492, 0.37", "-37.0431, 85.5434, -4.98271, 1.47", "-37.1306, 86.6302, -5.31306, 2.21", "-37.1546, 87.3705, -5.58289, 2.65", "-37.1998, 88.0952, -5.86308, 2.5", "-37.4328, 90.4518, -6.79736, 0.29", "-37.614, 91.492, -7.26339, 0.29", "-37.8667, 92.4645, -7.74257, 0.29", "-38.114, 93.1316, -8.05774, 0.29", "-38.4455, 93.8994, -8.38563, 1.33", "-38.9142, 94.9215, -8.75613, 2.28", "-39.5197, 96.2389, -9.10967, 2.73", "-39.8299, 96.9814, -9.30029, 2.43", "-40.506, 98.7446, -9.80311, 0.29", "-40.7989, 99.4977, -10.0541, 0.29", "-41.0479, 100.185, -10.2898, 0.29", "-41.2345, 100.735, -10.4741, 0.29", "-41.6209, 102.039, -10.8318, 0.88", "-41.7889, 102.587, -11.0284, 1.55", "-42.1788, 103.543, -11.5746, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-12.4033, 23.6973, 1.84902, 0.74", "-13.7663, 23.8718, 1.85074, 0.74", "-14.8982, 24.058, 1.84761, 0.74", "-15.928, 24.2432, 1.84916, 0.59", "-16.5493, 24.3658, 1.85468, 0.74", "-17.5239, 24.5713, 1.87266, 0.74", "-18.2555, 24.7324, 1.89427, 1.03", "-19.208, 24.9697, 1.93376, 1.33", "-19.9903, 25.1596, 1.97862, 1.55", "-20.9332, 25.3633, 2.05252, 1.4", "-22.0827, 25.5765, 2.19533, 1.25", "-23.5475, 25.8406, 2.48297, 0.74", "-24.3039, 25.9928, 2.69604, 0.96", "-25.1063, 26.1705, 2.99895, 0.96", "-26.2719, 26.4901, 3.60768, 0.52", "-27.2816, 26.8551, 4.34363, 0.52", "-28.0025, 27.2422, 5.09334, 0.88", "-28.4936, 27.6177, 5.75942, 0.59", "-28.5276, 27.6486, 5.80447, 0.59", "-29.0397, 28.1918, 6.45546, 0.29", "-29.4224, 28.5602, 6.75232, 0.29", "-30.1998, 28.9969, 6.85592, 0.74", "-30.8962, 29.2497, 6.79069, 0.96", "-32.2197, 29.5791, 6.57913, 0.59", "-32.3039, 29.5934, 6.56188, 0.59", "-33.3546, 29.6928, 6.30141, 0.29", "-34.0462, 29.7239, 6.11863, 0.29", "-35.005, 29.7104, 5.86552, 1.62", "-36.0136, 29.6323, 5.66666, 2.43", "-36.8701, 29.529, 5.56706, 2.65", "-37.6261, 29.4213, 5.51036, 2.65", "-37.6904, 29.4124, 5.5082, 2.65", "-39.4373, 29.2288, 5.54482, 1.11", "-40.7898, 29.1614, 5.67451, 0.37", "-41.6592, 29.1907, 5.80567, 0.37", "-42.5755, 29.3105, 5.99794, 0.37", "-43.354, 29.5247, 6.2555, 0.37", "-44.2194, 29.9156, 6.67242, 0.81", "-44.8469, 30.318, 7.09604, 1.47", "-45.2974, 30.6392, 7.47054, 1.69", "-45.5729, 30.8207, 7.71892, 1.69", "-46.7678, 31.4815, 8.841, 0.66", "-47.6795, 31.8781, 9.69761, 0.37", "-48.2953, 32.0858, 10.2741, 0.37", "-49.4023, 32.322, 11.2494, 1.25", "-50.2305, 32.3826, 11.9833, 2.36", "-50.9548, 32.3929, 12.6377, 2.36", "-51.0084, 32.3915, 12.6912, 2.36", "-51.4648, 32.376, 13.188, 2.21", "-52.5949, 32.3738, 14.5569, 0.37", "-53.8783, 32.404, 16.2681, 0.59", "-54.6526, 32.4373, 17.3382, 0.37", "-55.9634, 32.5075, 19.0928, 1.18", "-56.3154, 32.5274, 19.5342, 1.4", "-57.0535, 32.569, 20.4217, 1.25", "-57.0996, 32.5714, 20.4818, 1.25", "-57.7267, 32.5739, 21.3931, 0.52", "-58.4113, 32.5114, 22.4248, 2.14", "-59.0389, 32.469, 23.4025, 2.95", "-59.8895, 32.3839, 24.8352, 1.92", "-61.1923, 32.2953, 26.9813, 1.03", "-62.6583, 32.2913, 29.3927, 0.44", "-62.9946, 32.294, 29.9821, 0.44", "-63.9451, 32.3147, 31.6913, 0.44", "-65.115, 32.3635, 33.7886, 2.36", "-66.4992, 32.4786, 36.0565, 0.22", "-67.1444, 32.5731, 36.924, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.361546", "-0.476297, -58.0938, 2.58385, 0.361546", "-0.508069, -73.0938, 2.58385, 0.361546" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "7.02409, -28.138, 6.96857, 0.37", "7.84615, -28.723, 6.50963, 0.37", "8.53026, -29.1184, 6.09888, 0.29", "8.95234, -29.3399, 5.84254, 0.29", "10.1864, -29.8827, 5.12648, 0.74", "10.2411, -29.9019, 5.09727, 0.74", "11.2556, -30.189, 4.59139, 0.66", "12.1816, -30.3514, 4.0944, 0.29", "12.2488, -30.3516, 4.06205, 0.29", "12.8672, -30.247, 3.85049, 0.29", "13.4367, -30.0336, 3.78992, 0.74", "13.6027, -29.9451, 3.79424, 0.74", "13.9113, -29.7535, 3.85301, 1.03", "14.0287, -29.6889, 3.88527, 1.03", "14.3335, -29.5818, 3.96552, 1.03", "14.996, -29.4689, 4.1343, 0.59", "15.8126, -29.4489, 4.33868, 0.22", "16.5092, -29.5086, 4.53093, 0.22", "17.0149, -29.5862, 4.6785, 0.88", "17.98, -29.7339, 4.93551, 1.84", "18.4769, -29.8175, 5.06131, 2.14", "19.1679, -29.9328, 5.24824, 2.36", "20.3545, -30.0767, 5.61281, 0.66", "21.2821, -30.1037, 5.92945, 0.59", "22.658, -30.0302, 6.44105, 0.52", "22.7179, -30.0203, 6.46525, 0.52", "23.4188, -29.8253, 6.73422, 1.33", "24.2679, -29.4709, 7.0374, 1.77", "24.7817, -29.195, 7.244, 1.77", "24.9807, -29.0895, 7.33371, 1.77", "25.6683, -28.7892, 7.6632, 1.25", "26.6774, -28.4342, 8.11739, 0.52", "27.6578, -28.17, 8.51594, 0.29", "28.6653, -27.973, 8.91061, 0.29", "29.6381, -27.8244, 9.30669, 0.22", "30.5719, -27.7288, 9.5795, 0.22", "30.645, -27.7229, 9.59306, 0.22", "31.1313, -27.6593, 9.62361, 1.03", "31.553, -27.5954, 9.59404, 1.47", "32.1134, -27.4848, 9.49954, 1.47", "33.909, -27.0729, 9.11737, 0.59", "34.6812, -26.9059, 8.92046, 0.22", "35.5818, -26.7648, 8.70719, 0.22", "36.1891, -26.7064, 8.56534, 0.22", "36.2524, -26.7038, 8.55196, 0.22", "37.0581, -26.7344, 8.43678, 0.22", "37.1221, -26.7389, 8.42828, 0.22", "38.0454, -26.8195, 8.20372, 1.03", "38.8376, -26.9127, 7.9894, 1.62", "38.8996, -26.9174, 7.97132, 1.62", "39.1904, -26.9372, 7.89202, 1.62", "40.9233, -27.0459, 7.4933, 0.15", "40.9871, -27.0527, 7.48148, 0.15", "41.8259, -27.1948, 7.34826, 0.15", "41.8978, -27.2092, 7.34001, 0.15", "43.1528, -27.4729, 7.22614, 1.77", "43.9857, -27.6904, 7.20314, 2.73", "44.4782, -27.8371, 7.26344, 3.02", "47.071, -28.6143, 7.77533, 0.22", "47.5763, -28.7592, 7.92772, 0.22", "47.6256, -28.773, 7.94849, 0.22", "48.7758, -29.0692, 8.66303, 0.22", "50.2514, -29.3377, 9.8673, 0.22", "50.3417, -29.3508, 9.95953, 0.22", "50.8984, -29.4331, 10.6853, 1.55", "51.4536, -29.513, 11.375, 2.21", "51.9906, -29.585, 11.9891, 1.4", "52.967, -29.6892, 12.9503, 0.22", "53.6384, -29.8096, 13.5562, 0.22", "54.19, -29.9316, 14.0896, 0.22", "54.5048, -30.0281, 14.4394, 0.44", "54.5453, -30.0428, 14.4882, 0.44", "54.9352, -30.2243, 15.0364, 0.22", "55.8036, -30.6941, 16.3546, 1.62", "56.1389, -30.8975, 16.8712, 2.14", "57.426, -31.7492, 18.8045, 0.22", "57.7814, -32.0049, 19.3243, 1.47", "58.9471, -32.892, 20.9572, 1.11", "59.3129, -33.192, 21.4362, 1.33", "60.3386, -34.0142, 22.5593, 0.22", "60.8492, -34.4155, 23.1043, 0.22", "61.1252, -34.6212, 23.3778, 1.47", "61.3787, -34.8009, 23.6786, 2.14", "61.8538, -35.106, 24.2692, 2.14", "62.9968, -35.869, 25.8534, 0.22", "63.9439, -36.5184, 27.2903, 1.77", "64.155, -36.6738, 27.6313, 2.36", "65.6545, -37.8845, 30.2731, 0.29", "66.1302, -38.2936, 31.1431, 0.29", "66.4404, -38.591, 31.7386, 0.29", "66.4675, -38.6207, 31.7892, 0.29", "66.7383, -38.9236, 32.2566, 0.29", "67.6895, -39.9858, 33.8301, 2.28", "67.9856, -40.2965, 34.2774, 2.65", "69.0858, -41.4137, 36.0084, 0.22", "69.4881, -41.7993, 36.6353, 0.22", "70.1927, -42.4121, 37.6499, 0.96", "70.5763, -42.7, 38.1493, 1.47", "71.9794, -43.5424, 39.6683, 0.22", "72.7127, -43.876, 40.3694, 0.81", "72.8183, -43.9098, 40.4554, 0.81", "74.1729, -44.1856, 41.3766, 0.22", "74.9037, -44.2658, 41.7399, 0.22", "76.5267, -44.3586, 42.4473, 0.22", "77.4277, -44.3375, 42.7273, 0.22", "77.4909, -44.333, 42.7433, 0.22", "78.9663, -44.1919, 43.0676, 0.96", "79.883, -44.0461, 43.1747, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.02409, -28.138, 6.96857, 1.25", "6.60726, -29.3581, 6.8682, 1.25", "6.28859, -30.5951, 6.74408, 0.81", "6.14566, -31.5647, 6.62383, 0.81", "6.1029, -32.6812, 6.47872, 0.96", "6.16135, -33.8203, 6.31569, 0.74", "6.20567, -34.684, 6.19209, 1.11", "6.30555, -35.26, 6.07275, 1.69", "6.63019, -36.1915, 5.85561, 2.36", "7.02306, -36.8951, 5.67951, 2.65", "7.3732, -37.3215, 5.57376, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-7.87423, -20.2919, 12.6294, 0.81", "-8.59661, -19.3913, 12.3134, 0.81", "-9.12391, -18.6433, 11.9867, 0.66", "-9.63698, -17.8642, 11.6285, 0.66", "-9.92281, -17.4328, 11.3938, 0.96", "-10.4485, -16.6991, 10.9477, 0.44", "-10.8494, -16.1691, 10.6027, 0.44", "-11.4568, -15.3774, 9.98604, 0.59", "-11.6938, -15.1271, 9.73637, 0.59", "-12.2827, -14.7721, 9.20754, 0.59", "-12.7887, -14.6619, 8.85409, 0.59", "-12.8479, -14.6661, 8.82376, 0.59", "-13.4374, -14.8039, 8.57996, 0.59", "-14.248, -15.0622, 8.34879, 1.33", "-14.9618, -15.3055, 8.19313, 1.69", "-15.7026, -15.5509, 8.09813, 1.55", "-16.597, -15.8247, 8.10448, 0.88", "-17.4104, -16.0096, 8.35237, 0.44", "-18.1442, -16.1448, 8.80875, 0.44", "-18.4554, -16.2089, 9.09662, 0.74", "-18.8972, -16.3311, 9.63564, 0.88", "-19.8972, -16.6702, 11.0329, 1.03", "-21.5016, -17.3153, 13.4635, 0.52", "-22.2506, -17.657, 14.6483, 1.25", "-22.9145, -18.0169, 15.7349, 1.25", "-23.4754, -18.3769, 16.8052, 0.44", "-23.8686, -18.6719, 17.6415, 0.44", "-24.3478, -19.0145, 18.7705, 0.29", "-25.0511, -19.4132, 20.6409, 1.99", "-25.2569, -19.5089, 21.1688, 1.99", "-26.7795, -20.1342, 24.8913, 1.99", "-26.8051, -20.1436, 24.952, 1.99", "-29.2454, -21.0023, 30.7147, 2.73", "-32.1266, -21.9978, 37.2851, 1.4", "-32.5736, -22.1468, 38.2424, 1.25", "-33.0202, -22.2837, 39.0975, 0.22", "-33.3423, -22.387, 39.6248, 0.22", "-33.4909, -22.444, 39.8542, 1.11", "-34.0302, -22.7247, 40.5273, 1.47", "-35.7514, -23.8429, 42.2631, 1.18", "-36.2277, -24.146, 42.7936, 1.99", "-37.3626, -24.8444, 44.1221, 0.22", "-38.0671, -25.2795, 44.946, 0.22", "-38.2825, -25.411, 45.1862, 0.66", "-39.1945, -25.9559, 46.1652, 0.66", "-39.8416, -26.3418, 46.7204, 0.29", "-40.5792, -26.7092, 47.3329, 1.33", "-40.8376, -26.772, 47.4851, 1.62", "-41.3295, -26.8384, 47.7475, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.87423, -20.2919, 12.6294, 1.62", "-7.83018, -21.1923, 12.4891, 1.62", "-7.8015, -21.9039, 12.3692, 1.33", "-7.76368, -22.7876, 12.2063, 0.88", "-7.70765, -23.7997, 12.01, 0.74", "-7.63416, -25.0053, 11.7754, 0.74", "-7.54677, -26.1208, 11.5783, 2.14", "-7.44108, -27.1629, 11.429, 2.21", "-7.27944, -28.3972, 11.3442, 1.47", "-7.10523, -29.3384, 11.3706, 1.18", "-6.96062, -29.8739, 11.4572, 0.88", "-6.66324, -30.6771, 11.7648, 0.59", "-6.25275, -31.5795, 12.2804, 0.59", "-5.84029, -32.4245, 12.8771, 1.18", "-5.67187, -32.7802, 13.1741, 1.47", "-5.45723, -33.3136, 13.6484, 1.11", "-5.22385, -34.2448, 14.4036, 0.74", "-5.31602, -34.7669, 14.6261, 0.44", "-5.7293, -35.3848, 14.5846, 0.44", "-6.17459, -35.9082, 14.4337, 0.52", "-6.70131, -36.419, 14.2248, 0.52", "-7.21245, -36.868, 14.0004, 1.18", "-7.89928, -37.4697, 13.6772, 1.92", "-8.59115, -38.1535, 13.3352, 2.5", "-9.21978, -38.9035, 13.0012, 2.36", "-9.91684, -39.9065, 12.6008, 2.06", "-10.4361, -40.7953, 12.2728, 0.59", "-10.8746, -41.6234, 11.9982, 0.52", "-11.2961, -42.5177, 11.7373, 0.44", "-11.6766, -43.4661, 11.4626, 1.4", "-11.9659, -44.3188, 11.2285, 1.84", "-12.2395, -45.295, 10.9692, 1.84", "-12.4388, -46.074, 10.7619, 1.69", "-12.6416, -46.9322, 10.5352, 1.18", "-12.8122, -47.7987, 10.3003, 0.74", "-12.8821, -48.3446, 10.1374, 0.66", "-12.9225, -49.1508, 9.87204, 0.59", "-12.8954, -49.8485, 9.60505, 0.52", "-12.846, -50.3421, 9.38494, 0.37", "-12.7369, -51.2298, 8.9645, 0.29", "-12.6463, -52.0519, 8.56647, 0.29", "-12.6419, -52.1118, 8.5357, 0.29", "-12.6368, -53.2552, 7.93055, 1.77", "-12.7102, -54.217, 7.47866, 2.36", "-12.7157, -54.2628, 7.45904, 2.36", "-12.7982, -54.7962, 7.26597, 2.58", "-12.8908, -55.377, 7.07023, 2.58", "-13.0465, -56.3103, 6.74754, 1.84", "-13.1999, -57.3216, 6.41229, 0.81", "-13.313, -58.2315, 6.12462, 0.52", "-13.3976, -59.0419, 5.90075, 0.44", "-13.5046, -60.1423, 5.63655, 0.44", "-13.5903, -61.0982, 5.47127, 0.37", "-13.6405, -61.7252, 5.42102, 0.37", "-13.6857, -62.3273, 5.41954, 0.37", "-13.7506, -63.1503, 5.49619, 0.29", "-13.7852, -63.8265, 5.59889, 0.29", "-13.828, -64.8911, 5.87559, 1.99", "-13.8666, -65.5821, 6.10929, 2.95", "-13.9037, -66.0092, 6.27378, 2.95", "-14.0308, -67.4313, 6.85764, 0.59", "-14.0903, -68.2476, 7.2303, 0.44", "-14.1552, -69.3497, 7.78732, 0.37", "-14.1836, -70.1377, 8.20932, 0.37", "-14.1586, -70.9018, 8.65111, 1.69", "-14.1171, -71.3229, 8.91818, 2.58", "-14.0161, -71.9474, 9.34208, 2.58", "-13.8341, -72.9925, 10.0353, 0.29", "-13.6972, -73.715, 10.4499, 0.29", "-13.5404, -74.6809, 11.0198, 0.29", "-13.4388, -75.4207, 11.4681, 0.66", "-13.412, -75.6956, 11.6424, 0.74", "-13.3621, -76.3987, 12.0964, 0.29", "-13.3413, -77.0661, 12.5716, 0.29", "-13.3792, -78.1809, 13.3664, 1.4", "-13.3997, -78.5535, 13.6115, 1.92", "-13.3983, -78.6031, 13.6419, 1.92", "-13.3631, -78.8731, 13.8081, 1.92", "-13.1152, -79.8447, 14.3574, 0.22", "-13.0977, -79.8942, 14.3837, 0.22", "-12.847, -80.5148, 14.7009, 0.66", "-12.7399, -80.7644, 14.8346, 0.81", "-12.3629, -81.5192, 15.256, 0.22", "-11.9896, -82.2054, 15.6389, 2.14", "-11.6595, -82.7592, 15.9431, 2.58", "-10.827, -84.0569, 16.6864, 0.22", "-10.4011, -84.6934, 17.0629, 0.22", "-9.90833, -85.4051, 17.487, 0.22", "-9.51528, -85.9422, 17.8048, 0.22", "-9.11777, -86.4486, 18.1186, 2.36", "-8.47908, -87.2147, 18.5795, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "39.3162, -17.6699, -94.7196, 0.15", "42.5637, -20.1078, -115.533, 0.15", "42.7949, -20.3014, -116.941, 1.69", "42.9132, -20.4065, -117.637, 1.92", "42.9312, -20.4234, -117.735, 1.92", "43.6531, -21.1201, -121.277, 0.22", "43.806, -21.271, -121.949, 0.22", "44.3515, -21.9326, -122.728, 1.18", "44.3863, -21.9822, -122.789, 1.18", "45.0515, -22.9722, -124.102, 0.29", "45.3516, -23.3811, -124.665, 0.59", "45.9573, -24.1434, -125.728, 0.37", "47.0608, -25.266, -127.517, 0.74", "47.1088, -25.308, -127.593, 0.74", "48.0566, -26.1814, -129.278, 0.15", "48.4977, -26.6041, -130.194, 0.15", "48.5306, -26.6402, -130.266, 0.15", "48.7345, -26.8942, -130.744, 0.15", "48.7758, -26.9577, -130.839, 0.15", "49.3171, -27.8003, -132.009, 0.15", "49.7381, -28.4693, -132.878, 1.4", "50.0307, -28.926, -133.465, 1.69", "51.3366, -30.9306, -136.01, 0.22", "51.789, -31.6043, -136.87, 0.22", "52.3417, -32.414, -137.828, 0.22", "52.7578, -32.9805, -138.44, 0.96", "52.9236, -33.2211, -138.67, 0.96", "53.7027, -34.2958, -139.632, 0.22", "53.7392, -34.3462, -139.67, 0.22", "54.4445, -35.3458, -140.438, 0.22", "55.0958, -36.3906, -141.134, 1.55", "55.4556, -36.9457, -141.46, 1.99", "56.4853, -38.5053, -142.422, 0.29", "56.5283, -38.5675, -142.463, 0.29", "57.1431, -39.4745, -143.145, 0.29", "57.8958, -40.6965, -144.142, 0.29", "58.1232, -41.1408, -144.547, 0.29", "58.8553, -42.8264, -146.359, 1.4", "59.0526, -43.3949, -147.053, 1.69", "59.5279, -44.937, -149.063, 0.29", "59.7941, -46.0309, -150.615, 0.29", "60.0302, -47.4166, -152.651, 1.47", "60.1617, -48.9515, -154.898, 1.18", "60.1648, -50.3665, -156.893, 0.22", "60.1166, -50.957, -157.679, 0.22", "59.9219, -52.0931, -159.072, 1.69", "59.7956, -52.6257, -159.664, 1.77", "59.3506, -54.0191, -160.862, 0.66", "59.0525, -54.7482, -161.352, 0.22", "58.6295, -55.6547, -161.893, 0.96", "58.1929, -56.5839, -162.478, 0.22", "58.0115, -57.0344, -162.839, 0.15", "57.7761, -57.8084, -163.677, 0.15", "57.5635, -58.7634, -164.822, 0.44", "57.4071, -59.5361, -165.841, 1.33", "57.2725, -60.2016, -166.776, 1.25", "56.6995, -62.3305, -170.007, 1.25", "56.2617, -63.7916, -172.367, 0.15", "56.0861, -64.324, -173.249, 0.15", "55.7988, -65.0166, -174.43, 0.81", "55.6693, -65.2877, -174.884, 0.96", "55.0247, -66.5908, -176.885, 0.52", "54.4743, -67.7287, -178.458, 0.22", "54.2294, -68.2746, -179.181, 1.18", "53.4368, -70.3892, -182.014, 0.22", "53.2098, -71.1314, -182.985, 0.96", "52.8447, -72.6626, -184.918, 0.22", "52.7753, -73.1245, -185.454, 0.52", "52.7478, -73.3038, -185.654, 0.52", "52.5203, -75.1627, -187.717, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.3162, -17.6699, -94.7196, 1.55", "39.9465, -16.3211, -99.763, 1.55", "40.1163, -16.0488, -100.725, 1.62", "41.3276, -14.5453, -105.777, 0.22", "41.3558, -14.5159, -105.873, 0.22", "41.7401, -14.1897, -106.964, 1.33", "41.9807, -14.0108, -107.564, 1.25", "43.542, -13.0727, -110.37, 0.22", "44.2225, -12.709, -111.429, 1.18", "44.603, -12.5228, -111.902, 1.33", "46.3586, -11.6811, -113.987, 0.22", "47.6059, -11.0997, -115.416, 1.84", "47.9746, -10.9124, -115.815, 1.84", "49.0794, -10.2929, -116.852, 0.29", "49.3635, -10.1197, -117.11, 0.74", "50.5336, -9.33364, -118.108, 0.22", "50.6544, -9.23769, -118.205, 0.22", "51.1482, -8.80237, -118.623, 0.88", "52.2506, -7.65003, -119.868, 0.22", "52.4531, -7.40425, -120.149, 0.52", "52.7803, -6.96953, -120.665, 0.22", "53.49, -5.98789, -121.911, 1.92", "53.7949, -5.54346, -122.489, 1.92", "54.6793, -4.11918, -124.382, 0.22", "54.8097, -3.8772, -124.694, 0.88", "54.9232, -3.67168, -124.959, 0.88", "55.4239, -2.84019, -125.991, 0.22", "55.6773, -2.44885, -126.477, 0.22", "55.7046, -2.40254, -126.535, 0.22", "55.8585, -2.19009, -126.818, 0.22", "56.5264, -1.37767, -127.996, 1.4", "56.6831, -1.20153, -128.256, 1.4", "57.554, -0.29986, -129.617, 0.22", "57.9179, 0.00886954, -130.112, 0.96", "58.8325, 0.691031, -131.215, 0.22", "59.0971, 0.85976, -131.494, 0.22", "59.5294, 1.06787, -131.833, 0.66", "60.1989, 1.31162, -132.234, 0.66", "61.4497, 1.62492, -132.734, 0.22", "62.0831, 1.73494, -132.927, 1.11", "62.5068, 1.77943, -133.027, 1.4", "64.2822, 1.79969, -133.381, 0.22", "65.0925, 1.74461, -133.512, 0.22", "66.0796, 1.61367, -133.627, 0.96", "66.9113, 1.47019, -133.707, 1.47", "68.2945, 1.19645, -133.847, 0.22", "69.0202, 1.05352, -133.973, 0.22", "69.1485, 1.02683, -134.006, 0.22", "69.9372, 0.887627, -134.26, 0.22", "71.051, 0.717103, -134.679, 1.33", "71.5406, 0.666943, -134.888, 1.62", "73.2708, 0.57972, -135.701, 0.22", "74.0516, 0.559731, -136.073, 0.66", "74.5096, 0.544301, -136.297, 0.66", "74.6503, 0.536682, -136.37, 0.66", "76.0342, 0.439745, -137.086, 0.22", "77.0277, 0.336373, -137.673, 1.11", "77.7105, 0.246739, -138.097, 1.33", "79.1771, 0.0344254, -139.079, 0.22", "80.2067, -0.103765, -139.826, 1.25", "80.6269, -0.156601, -140.197, 1.33", "82.5573, -0.400037, -142.146, 0.22", "82.7903, -0.427184, -142.402, 0.44", "82.8916, -0.436803, -142.524, 0.44", "83.6834, -0.492556, -143.595, 1.18", "85.5143, -0.537279, -146.255, 0.22", "85.9333, -0.529486, -146.901, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.4566, -28.9351, -49.25, 1.55", "-12.6203, -30.1443, -52.2398, 1.55", "-13.6724, -30.978, -54.7556, 0.22", "-14.1231, -31.3615, -55.8067, 0.22", "-14.8647, -32.0529, -57.773, 2.36", "-15.423, -32.6295, -59.6295, 2.87", "-17.7511, -34.7912, -67.932, 0.81", "-17.7715, -34.8058, -68.0176, 0.81", "-18.1696, -35.0758, -70.2388, 0.81", "-18.5956, -35.4717, -74.5335, 2.06", "-18.7007, -35.8268, -79.03, 1.25", "-18.5805, -36.1386, -82.3002, 0.81", "-18.0838, -36.9751, -88.3747, 0.96", "-18.0369, -37.151, -89.6442, 1.47", "-18.0257, -37.5152, -92.3264, 0.22", "-18.0345, -37.7021, -93.4317, 0.22", "-18.076, -38.1969, -96.4762, 1.4", "-18.1253, -38.7812, -99.9767, 1.03", "-18.2544, -39.3225, -103.079, 1.69", "-18.4372, -39.9551, -106.739, 1.4", "-18.5562, -40.5702, -110.39, 1.4", "-18.527, -41.6833, -116.996, 1.84", "-18.2353, -42.5532, -121.954, 0.15", "-18.0301, -42.9061, -123.673, 1.84", "-17.9209, -43.0597, -124.293, 1.84", "-17.1467, -44.2041, -128.055, 0.22", "-16.8217, -44.6639, -129.502, 1.55", "-16.6752, -44.8022, -129.972, 1.77", "-15.8586, -45.2314, -132.396, 0.22", "-15.5988, -45.3142, -133.149, 0.22", "-14.9634, -45.4602, -134.905, 1.77", "-12.0141, -45.8789, -142.724, 1.25", "-10.7074, -45.983, -146.052, 0.81", "-9.77407, -46.0369, -148.361, 0.15", "-9.35704, -46.0459, -149.366, 0.37", "-8.61033, -46.0834, -151.016, 0.22", "-7.53765, -46.1459, -153.051, 1.77", "-7.19804, -46.1873, -153.569, 1.84", "-4.55078, -46.5734, -157.563, 0.96", "-3.65695, -46.7092, -158.865, 1.4", "-1.9401, -46.8691, -161.404, 0.22", "-1.58395, -46.8714, -161.914, 0.22", "-1.44766, -46.8593, -162.082, 0.22", "-0.390704, -46.6895, -163.189, 0.22", "0.25647, -46.5526, -163.641, 1.18", "0.344451, -46.5356, -163.69, 1.18", "1.09256, -46.3864, -164.051, 1.18", "3.25747, -46.0812, -165.093, 0.29", "4.18012, -45.972, -165.557, 0.44", "4.93061, -45.8793, -165.935, 0.44", "6.1367, -45.7241, -166.522, 0.22", "7.55691, -45.5362, -167.186, 1.47", "8.28942, -45.4458, -167.511, 1.62", "10.3533, -45.1974, -168.332, 0.22", "11.4322, -45.0654, -168.8, 0.22", "12.0336, -45.0226, -169.092, 0.59", "12.1112, -45.0304, -169.134, 0.59", "12.4636, -45.1718, -169.41, 0.59", "12.5955, -45.2897, -169.647, 0.59", "13.0056, -45.9684, -170.891, 0.15", "13.1891, -46.3548, -171.585, 1.18", "13.3829, -46.8155, -172.43, 1.18", "13.8336, -48.0464, -174.726, 0.44", "14.3284, -49.8308, -177.99, 0.22", "14.3779, -50.2223, -178.72, 0.22", "14.336, -50.4708, -179.283, 0.74", "14.2963, -50.5296, -179.447, 0.74", "13.5274, -51.1303, -181.491, 0.22", "13.1563, -51.3518, -182.293, 0.22", "11.7249, -52.0201, -184.975, 1.47", "9.88639, -52.6947, -188.105, 1.33", "7.89674, -53.3361, -191.356, 0.59", "6.50416, -53.7232, -193.534, 0.44", "6.0285, -53.8238, -194.224, 0.44", "4.80177, -54.0349, -195.96, 0.22", "4.03459, -54.1582, -196.912, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-11.4566, -28.9351, -49.25, 2.87", "-11.9429, -29.191, -49.4232, 2.87", "-12.7928, -29.6544, -49.6642, 2.73", "-14.2393, -30.4522, -50.0147, 0.29", "-14.4286, -30.5546, -50.0696, 0.29", "-15.5276, -31.1387, -50.3946, 0.29", "-16.6382, -31.696, -50.7241, 1.55", "-17.1603, -31.9313, -50.8551, 2.21", "-17.4013, -32.0267, -50.9208, 2.21", "-19.0537, -32.6277, -51.4811, 0.22", "-19.6179, -32.8205, -51.7292, 0.22", "-20.1201, -32.9802, -51.9997, 0.66", "-20.3207, -33.0322, -52.1134, 0.81", "-21.5191, -33.302, -52.77, 0.22", "-21.9976, -33.4041, -53.006, 0.22", "-22.8542, -33.5885, -53.3846, 1.84", "-23.2924, -33.6908, -53.584, 2.21", "-23.9925, -33.8865, -53.9564, 2.06", "-25.1344, -34.2457, -54.6526, 0.29", "-25.6095, -34.4268, -55.0044, 0.29", "-26.5488, -34.8414, -55.826, 1.69", "-26.9278, -35.0363, -56.2024, 1.99", "-28.2079, -35.7841, -57.6104, 1.11", "-28.7333, -36.1623, -58.2713, 1.11", "-29.5024, -36.866, -59.4263, 0.29", "-29.7359, -37.1251, -59.8326, 0.29", "-29.7987, -37.216, -59.967, 0.52", "-29.9435, -37.4896, -60.3372, 0.52", "-30.0446, -37.8403, -60.7988, 0.22", "-30.0755, -38.069, -61.1177, 0.22", "-30.0765, -38.0983, -61.1592, 0.22", "-30.0613, -39.4256, -63.0049, 2.06", "-30.0588, -39.7834, -63.483, 2.36", "-30.1202, -40.9226, -64.9658, 0.22", "-30.1481, -41.1944, -65.3348, 0.22", "-30.1836, -41.515, -65.7492, 0.22", "-30.2354, -42.1332, -66.4933, 1.33", "-30.2681, -42.5725, -67.0276, 1.47", "-30.3755, -43.4428, -68.1392, 0.22", "-30.6109, -44.3023, -69.4456, 0.22", "-30.7384, -44.6914, -70.0853, 1.4", "-30.8024, -44.8753, -70.4126, 1.69", "-31.1831, -46.0871, -72.6871, 0.22", "-31.3191, -46.5753, -73.6914, 1.92", "-31.6644, -47.7303, -76.4533, 0.29", "-31.7475, -47.9653, -77.1149, 0.29", "-31.7583, -47.9991, -77.2197, 0.29", "-31.8217, -48.2569, -77.9757, 0.74", "-31.8781, -48.7365, -79.2648, 1.55", "-31.8916, -49.906, -82.2033, 1.47", "-31.7958, -51.0087, -84.7326, 0.29", "-31.7732, -51.2982, -85.3832, 0.29", "-31.7323, -51.8383, -86.5088, 1.4", "-31.6545, -52.8009, -88.307, 1.69", "-31.6159, -53.0376, -88.6923, 1.69", "-31.2035, -54.4098, -90.6902, 0.22", "-31.1821, -54.4683, -90.7795, 0.22", "-31.0804, -54.7131, -91.1872, 0.22", "-30.9123, -55.0743, -91.8378, 1.47", "-30.4689, -56.0114, -93.4904, 0.22", "-30.3515, -56.248, -93.9059, 1.4", "-29.957, -56.9893, -95.3408, 1.4", "-29.6395, -57.5655, -96.5435, 0.22", "-29.3281, -58.1472, -98.0164, 1.62", "-29.3195, -58.1641, -98.0646, 1.62", "-29.2584, -58.3344, -98.5746, 1.62", "-29.1031, -59.1697, -101.125, 0.15", "-29.0985, -59.346, -101.676, 1.4", "-29.2995, -60.224, -104.655, 1.11", "-29.3046, -60.2375, -104.697, 1.11", "-29.5508, -60.7381, -106.052, 0.37", "-29.6905, -60.9704, -106.566, 0.74", "-29.7929, -61.1272, -106.829, 0.88", "-30.4534, -62.1835, -108.342, 0.22", "-30.7069, -62.7123, -108.852, 1.33", "-30.864, -63.2463, -109.266, 1.11", "-30.9856, -63.917, -109.727, 0.22", "-30.9899, -63.9592, -109.755, 0.22", "-31.0053, -64.7106, -110.153, 0.22", "-30.9303, -65.5292, -110.352, 0.22", "-30.7069, -66.7365, -110.587, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "12.2698, 66.4178, -72.6218, 0.22", "12.0777, 68.2832, -72.7165, 0.22", "12.0668, 68.4245, -72.7227, 0.22", "12.0221, 69.522, -72.839, 0.22", "12.0487, 70.3529, -73.0335, 0.66", "12.0615, 70.4783, -73.0727, 0.66", "12.1316, 70.9012, -73.2607, 0.66", "12.1513, 70.959, -73.2979, 0.66", "12.4413, 71.6306, -73.8121, 0.22", "12.9186, 72.4463, -74.5652, 0.88", "13.1123, 72.7164, -74.8309, 0.88", "13.7876, 73.5316, -75.6407, 0.29", "13.8534, 73.5986, -75.6973, 0.29", "14.4218, 74.1436, -76.0396, 0.29", "15.2861, 74.9399, -76.3334, 1.03", "15.6809, 75.3028, -76.4021, 1.25", "16.6936, 76.2605, -76.4842, 0.37", "18.0413, 77.5149, -76.4932, 0.22", "19.1485, 78.5618, -76.4615, 0.22", "20.074, 79.4613, -76.3745, 0.81", "20.8384, 80.2403, -76.2255, 0.22", "21.1929, 80.6255, -76.13, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.2698, 66.4178, -72.6218, 0.81", "13.0867, 67.5003, -73.4348, 0.81", "13.5855, 68.0346, -73.8579, 0.22", "14.0034, 68.4522, -74.1717, 0.22", "14.4465, 68.8941, -74.4817, 1.18", "14.7873, 69.2273, -74.6909, 1.18", "14.8261, 69.2648, -74.7147, 1.18", "15.6687, 70.0809, -75.1318, 0.29", "16.0779, 70.4409, -75.3141, 0.44", "16.2723, 70.612, -75.49, 0.44", "16.7524, 71.0904, -76.1169, 0.22", "17.0432, 71.4226, -76.5943, 1.18", "17.1464, 71.6016, -76.9861, 1.47", "17.1747, 71.7185, -77.3232, 1.47", "17.1799, 72.776, -80.5716, 0.52", "17.1463, 72.9365, -81.1377, 0.81", "17.1073, 73.0315, -81.5078, 0.81", "16.4644, 74.0865, -86.0958, 1.11", "15.9228, 74.6549, -88.9691, 0.59", "15.6274, 74.8473, -90.154, 0.29", "15.0752, 75.0109, -91.7387, 0.74", "15.0475, 75.0117, -91.8011, 0.74", "14.6748, 74.9149, -92.3501, 0.81", "13.7548, 74.3723, -92.8302, 0.29", "13.0791, 73.8938, -93.0224, 0.29", "12.0885, 73.1355, -93.2329, 0.29", "11.0645, 72.3608, -93.3607, 0.29", "9.98099, 71.5401, -93.4881, 0.22", "9.3039, 71.0301, -93.5568, 0.59", "9.11249, 70.8731, -93.5681, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.43246, 64.4011, -23.9134, 0.22", "-6.42653, 66.0567, -22.6782, 0.22", "-6.90941, 66.4456, -22.4329, 0.66", "-7.82888, 67.1817, -22.0226, 0.22", "-8.76154, 67.9168, -21.6414, 1.4", "-9.26249, 68.2926, -21.4375, 1.4", "-11.2315, 69.7547, -20.6443, 0.22", "-12.3173, 70.5147, -20.291, 0.22", "-13.9096, 71.6056, -19.8198, 1.47", "-14.2424, 71.8368, -19.7308, 1.84", "-16.4353, 73.4035, -19.2246, 0.22", "-16.7967, 73.6674, -19.1505, 0.52", "-17.9769, 74.5719, -18.9853, 0.15", "-18.6873, 75.1464, -18.9113, 0.88", "-19.5318, 75.876, -18.8744, 0.22", "-20.6364, 76.8948, -18.8885, 1.84", "-21.0192, 77.2666, -18.9245, 1.99", "-22.7706, 78.9706, -19.1013, 0.22", "-23.2953, 79.4948, -19.1581, 1.11", "-23.7425, 79.944, -19.1966, 1.25", "-24.8602, 81.0256, -19.2478, 0.15", "-25.4696, 81.5954, -19.2344, 0.44", "-25.7114, 81.8146, -19.2149, 0.44", "-25.7859, 81.8804, -19.2036, 0.44", "-27.0042, 82.9306, -18.9349, 0.15", "-27.8029, 83.6407, -18.7156, 0.15", "-27.8552, 83.6905, -18.6979, 0.15", "-28.2486, 84.0914, -18.5631, 0.66", "-28.7383, 84.6258, -18.4166, 0.81", "-29.7371, 85.7705, -18.177, 0.15", "-30.118, 86.2314, -18.1137, 0.15", "-30.9701, 87.3203, -18.0171, 1.47", "-31.3692, 87.8497, -17.985, 1.47", "-32.1078, 88.8583, -17.9481, 0.22", "-32.4307, 89.32, -17.9662, 0.52", "-32.5752, 89.5349, -17.9933, 0.52", "-33.153, 90.4014, -18.1424, 0.15", "-33.8241, 91.4095, -18.4214, 1.33", "-34.0671, 91.7712, -18.5397, 1.69", "-34.8237, 92.8786, -18.9773, 0.22", "-35.2025, 93.4392, -19.211, 0.59", "-35.524, 93.9143, -19.423, 0.59", "-36.1011, 94.749, -19.8436, 0.15", "-37.0363, 96.0748, -20.5925, 1.33", "-37.4256, 96.6239, -20.9099, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.43246, 64.4011, -23.9134, 0.29", "-5.58632, 65.3295, -25.1331, 0.29", "-6.03709, 65.6869, -25.575, 0.52", "-6.74392, 66.2448, -26.2082, 0.74", "-7.02798, 66.4668, -26.4406, 0.88", "-7.79344, 67.0774, -27.0266, 0.15", "-8.07986, 67.3182, -27.2341, 0.15", "-8.45918, 67.6747, -27.4614, 1.33", "-8.83541, 68.0561, -27.6555, 1.77", "-9.56752, 68.8238, -27.9615, 0.22", "-9.87201, 69.1573, -28.0675, 0.22", "-10.2707, 69.6503, -28.1796, 0.88", "-10.4498, 69.9009, -28.2333, 0.88", "-10.8676, 70.5591, -28.3633, 0.15", "-11.1208, 71.0703, -28.4268, 0.15", "-11.267, 71.4923, -28.447, 0.15", "-11.4725, 72.3474, -28.4612, 2.14", "-11.5118, 72.6452, -28.4569, 2.14", "-11.5127, 72.7027, -28.4543, 2.14", "-11.3728, 73.9308, -28.3611, 0.15", "-11.2738, 74.3213, -28.3285, 0.15", "-11.1555, 74.6517, -28.316, 0.15", "-11.0049, 74.9955, -28.3161, 0.66", "-10.8089, 75.4018, -28.3482, 0.81", "-10.77, 75.4728, -28.3606, 0.81", "-10.4114, 76.0059, -28.5961, 0.15", "-10.0614, 76.5424, -28.8807, 0.88", "-10.0369, 76.58, -28.9065, 0.88", "-9.918, 76.7748, -29.0508, 0.88", "-9.87064, 76.862, -29.1145, 0.88", "-9.504, 77.6602, -29.6468, 0.15", "-9.39301, 77.96, -29.8368, 0.15", "-9.20283, 78.5878, -30.2136, 1.11", "-9.09766, 79.0547, -30.4842, 1.11", "-8.88411, 80.4017, -31.2279, 0.22", "-8.84294, 80.8552, -31.4977, 0.22", "-8.82744, 81.5464, -31.92, 1.47", "-8.84832, 82.0521, -32.238, 1.69", "-9.04808, 83.409, -33.3756, 0.15", "-9.14326, 83.7522, -33.7494, 0.88", "-9.53193, 84.6963, -34.9717, 0.22", "-9.61218, 84.862, -35.2134, 1.55", "-9.78933, 85.1838, -35.7107, 1.84", "-10.788, 86.8241, -38.3491, 0.59", "-11.1128, 87.2818, -39.1163, 0.22", "-11.2553, 87.4794, -39.4288, 0.74", "-11.7082, 88.0936, -40.2776, 0.15", "-11.9899, 88.4764, -40.7456, 0.15", "-12.2069, 88.762, -41.0397, 0.81", "-12.4137, 89.0052, -41.2247, 0.81", "-12.9924, 89.6075, -41.8371, 0.15", "-13.2502, 89.8467, -42.2025, 0.96", "-13.4954, 90.0537, -42.5855, 0.96", "-14.1902, 90.6039, -43.7284, 0.22", "-14.5684, 90.8985, -44.3601, 1.4", "-15.3864, 91.5383, -45.7586, 1.69", "-16.3319, 92.2952, -47.3798, 0.74", "-16.7101, 92.6084, -48.0252, 0.22", "-16.9038, 92.7753, -48.3321, 0.59", "-17.2245, 93.0656, -48.7193, 0.22", "-17.2579, 93.0989, -48.741, 0.22", "-17.6491, 93.5169, -48.7853, 0.22", "-17.8932, 93.8007, -48.7435, 0.52", "-18.3903, 94.4831, -48.6102, 0.15", "-18.8755, 95.2641, -48.4253, 1.84", "-19.4995, 96.3936, -48.1216, 0.15", "-19.6667, 96.7207, -48.0177, 0.29", "-19.7117, 96.826, -47.9816, 0.29", "-19.9245, 97.4433, -47.7588, 0.15", "-20.0688, 97.9836, -47.5611, 0.74", "-20.1068, 98.1649, -47.5036, 0.74", "-20.2929, 99.1136, -47.2467, 0.22", "-20.4794, 99.9632, -47.0294, 0.22", "-20.6449, 100.672, -46.8592, 1.69", "-20.7157, 100.974, -46.7941, 1.69", "-20.8823, 101.813, -46.6468, 0.22", "-20.9436, 102.178, -46.5947, 0.37", "-21.0303, 102.865, -46.5306, 0.15", "-21.0493, 103.034, -46.5202, 0.37", "-21.1132, 103.652, -46.5126, 0.15", "-21.1472, 104.172, -46.5462, 0.74", "-21.1524, 104.278, -46.5601, 0.74", "-21.1603, 104.423, -46.5862, 0.74", "-21.1953, 105.152, -46.7353, 0.15", "-21.227, 105.669, -46.8447, 1.03", "-21.316, 106.733, -47.0412, 0.15", "-21.4111, 107.671, -47.1958, 1.99", "-21.4699, 108.058, -47.2523, 1.99", "-21.6644, 108.925, -47.3632, 0.22", "-21.8271, 109.48, -47.4262, 0.81", "-22.1036, 110.243, -47.4955, 0.22", "-22.1245, 110.289, -47.4986, 0.22", "-22.4317, 110.883, -47.5493, 0.22", "-22.737, 111.394, -47.6281, 0.22", "-23.0235, 111.829, -47.7543, 0.22", "-23.3873, 112.397, -47.9885, 0.22", "-23.5965, 112.761, -48.1425, 1.03", "-23.6979, 112.963, -48.2242, 1.03", "-24.0904, 113.955, -48.5835, 0.22", "-24.4017, 114.783, -48.8825, 0.59", "-24.6826, 115.54, -49.151, 0.22", "-24.9816, 116.423, -49.4597, 2.06", "-25.0927, 116.798, -49.5785, 1.69", "-25.3295, 117.811, -49.8548, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-42.1788, 103.543, -11.5746, 0.22", "-42.6782, 104.676, -12.0249, 0.22", "-42.9561, 105.235, -12.2799, 0.66", "-43.1577, 105.633, -12.4665, 0.81", "-43.7822, 106.819, -13.012, 0.22", "-44.1881, 107.551, -13.3339, 0.66", "-44.4954, 108.041, -13.5294, 0.96", "-45.3071, 109.194, -13.9683, 0.22", "-45.5014, 109.455, -14.0567, 0.22", "-45.7683, 109.82, -14.1604, 0.52", "-46.0479, 110.254, -14.2581, 0.52", "-46.6931, 111.416, -14.4821, 0.22", "-47.0944, 112.249, -14.6431, 0.22", "-47.4135, 113.036, -14.7428, 1.77", "-47.5717, 113.542, -14.772, 2.06", "-47.9328, 115.399, -14.7507, 0.22", "-47.977, 115.853, -14.7275, 0.59", "-47.9815, 116.505, -14.6641, 0.66", "-47.9356, 118.324, -14.4145, 0.22", "-47.856, 119.902, -14.1531, 0.22", "-47.7485, 121.513, -13.8542, 1.47", "-47.7019, 122.102, -13.7275, 1.92", "-47.5816, 123.938, -13.3615, 0.22", "-47.5543, 124.52, -13.2629, 0.22", "-47.5406, 125.257, -13.1793, 0.74", "-47.5545, 125.516, -13.1631, 0.74", "-47.7017, 126.657, -13.1149, 0.15", "-47.8623, 127.632, -13.0519, 0.15", "-47.9875, 128.274, -13.0066, 0.96", "-48.0523, 128.6, -12.9779, 1.33", "-48.1141, 128.886, -12.9518, 1.33", "-48.1309, 128.956, -12.9457, 1.33", "-48.5234, 130.264, -12.8363, 0.22", "-48.6821, 130.73, -12.7837, 0.81", "-48.8911, 131.273, -12.7137, 0.81", "-49.2201, 132.082, -12.6033, 0.22", "-49.3412, 132.358, -12.5656, 0.44", "-49.9039, 133.52, -12.4109, 0.22", "-50.0956, 133.865, -12.3656, 0.59", "-50.3666, 134.361, -12.2741, 0.59", "-50.7516, 135.088, -12.1169, 0.15", "-51.1678, 135.892, -11.9233, 0.15", "-51.51, 136.567, -11.7573, 1.11", "-51.7232, 136.984, -11.6526, 1.62", "-52.4692, 138.371, -11.3046, 0.15", "-52.6907, 138.766, -11.2013, 0.59", "-52.7922, 138.938, -11.1567, 0.59", "-53.1411, 139.556, -11.0112, 0.22", "-53.4297, 140.082, -10.9043, 0.22", "-53.5876, 140.373, -10.8602, 0.59", "-53.766, 140.707, -10.8358, 0.59", "-54.0543, 141.327, -10.8031, 0.22", "-54.4101, 142.268, -10.7807, 0.22", "-54.4101, 142.268, -10.7807, 0.66", "-54.4857, 142.753, -10.8177, 0.66", "-54.5785, 143.596, -10.9047, 0.22", "-54.627, 144.244, -10.9856, 1.4", "-54.6472, 144.634, -11.041, 1.77", "-54.7259, 146.515, -11.3297, 0.22", "-54.7477, 147.108, -11.4226, 0.96", "-54.7649, 147.62, -11.5041, 0.96", "-54.7996, 148.519, -11.6475, 0.22", "-54.8627, 149.693, -11.8264, 0.22", "-54.9188, 150.524, -11.9469, 0.88", "-54.9522, 150.976, -12.0089, 1.25", "-55.0018, 151.762, -12.1142, 0.22", "-55.0085, 151.895, -12.1293, 0.22", "-54.9963, 152.39, -12.1605, 0.22", "-54.9477, 152.802, -12.1723, 0.22", "-54.7463, 153.778, -12.156, 0.22", "-54.6418, 154.18, -12.1416, 0.81", "-54.4493, 154.747, -12.0733, 0.81", "-54.0027, 155.921, -11.8748, 0.15", "-53.647, 156.757, -11.7026, 0.15", "-53.0749, 158.021, -11.3955, 1.4", "-52.932, 158.336, -11.3093, 1.84", "-52.1896, 160.018, -10.8329, 0.22", "-52.1651, 160.075, -10.8168, 0.22", "-52.0778, 160.289, -10.7539, 0.22", "-52.0561, 160.346, -10.7378, 0.22", "-51.8237, 161.063, -10.5662, 0.22", "-51.5504, 161.976, -10.4031, 0.88", "-51.528, 162.044, -10.3958, 0.88", "-51.4203, 162.318, -10.369, 1.03", "-50.8928, 163.544, -10.2604, 0.22", "-50.2926, 164.833, -10.1643, 1.55", "-50.0166, 165.373, -10.1113, 1.92", "-49.2154, 166.899, -9.94792, 0.22", "-48.9952, 167.314, -9.89906, 0.22", "-48.804, 167.663, -9.85448, 0.52", "-48.625, 167.949, -9.81267, 0.52", "-47.9715, 168.936, -9.66959, 0.22", "-47.785, 169.209, -9.60977, 0.59", "-47.6003, 169.473, -9.53384, 0.59", "-47.539, 169.561, -9.50953, 0.59", "-46.9948, 170.314, -9.33092, 0.22", "-46.9609, 170.367, -9.32115, 0.22", "-46.486, 171.19, -9.22146, 0.22", "-46.4631, 171.239, -9.21673, 0.22", "-46.1544, 172.128, -9.17039, 0.88", "-46.035, 172.595, -9.16444, 1.47", "-45.8336, 173.843, -9.1745, 0.22", "-45.828, 173.896, -9.17519, 0.22", "-45.7636, 175.012, -9.21297, 0.22", "-45.6977, 175.978, -9.27168, 0.88", "-45.6688, 176.318, -9.30465, 1.33", "-45.5523, 177.353, -9.44004, 0.15", "-45.501, 177.738, -9.50708, 0.15", "-45.3522, 178.747, -9.68721, 0.15", "-45.0888, 180.262, -9.97749, 1.77", "-44.801, 181.719, -10.2803, 0.22", "-44.6477, 182.447, -10.4492, 0.22", "-44.5417, 182.901, -10.5765, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-42.1788, 103.543, -11.5746, 0.22", "-43.6384, 104.773, -12.81, 0.22", "-43.6774, 104.813, -12.862, 0.22", "-43.992, 105.2, -13.3887, 0.22", "-44.3656, 105.712, -14.0929, 1.11", "-44.6968, 106.174, -14.7638, 1.92", "-44.94, 106.524, -15.2551, 2.14", "-45.9532, 108.326, -17.5475, 0.22", "-46.1805, 108.687, -18.1383, 0.22", "-46.2051, 108.727, -18.2102, 0.22", "-46.5599, 109.343, -19.3519, 0.22", "-46.7118, 109.698, -19.9811, 0.88", "-46.8441, 110.052, -20.5735, 0.88", "-47.5066, 112.106, -23.6371, 1.25", "-47.7509, 112.863, -24.6967, 1.62", "-47.7651, 112.914, -24.7635, 1.62", "-47.9974, 114.038, -26.1315, 0.29", "-48.0593, 114.383, -26.5268, 0.66", "-48.067, 114.437, -26.5773, 0.66", "-48.1678, 114.896, -26.9974, 0.66", "-48.1821, 114.947, -27.0501, 0.66", "-48.4912, 115.933, -28.2025, 0.22", "-48.9061, 116.964, -29.5758, 2.14", "-49.062, 117.324, -30.0712, 2.8", "-50.1155, 119.646, -33.328, 0.37", "-50.5241, 120.525, -34.579, 0.37", "-51.1475, 121.859, -36.4559, 0.96", "-51.7173, 123.153, -38.2379, 0.22", "-51.9336, 123.687, -38.9588, 1.11", "-51.9491, 123.732, -39.016, 1.11", "-52.0091, 123.999, -39.2852, 1.11", "-52.1725, 124.961, -40.1567, 0.15", "-52.2945, 125.893, -40.838, 0.15", "-52.3724, 126.682, -41.3692, 0.15", "-52.5254, 127.8, -42.1296, 1.99", "-52.6642, 128.503, -42.5886, 2.21", "-52.9501, 129.619, -43.2449, 0.74", "-53.3081, 130.742, -43.8027, 0.29", "-53.3317, 130.807, -43.8285, 0.29", "-53.5435, 131.355, -44.0236, 0.52", "-53.7287, 131.829, -44.1897, 0.52", "-53.9862, 132.509, -44.4541, 0.29", "-54.1406, 132.934, -44.6498, 0.74", "-54.3763, 133.6, -45.1132, 0.96", "-54.756, 134.727, -46.0451, 0.22", "-55.0558, 135.661, -46.9082, 1.55", "-55.2161, 136.151, -47.3816, 1.99", "-55.5535, 136.879, -48.2214, 1.99", "-56.378, 138.214, -49.9193, 0.37", "-56.6231, 138.366, -50.3342, 0.37", "-56.9246, 138.472, -50.7887, 0.37", "-57.4112, 138.579, -51.4484, 0.37", "-59.0831, 138.816, -53.5066, 1.92", "-59.5729, 138.858, -54.0521, 2.43", "-65.5895, 139.162, -60.1802, 0.37", "-66.1037, 139.178, -60.6888, 0.44", "-66.7533, 139.192, -61.3072, 0.29", "-67.298, 139.203, -61.7999, 0.29", "-67.776, 139.241, -62.1811, 0.66", "-68.1344, 139.281, -62.4498, 0.88", "-69.323, 139.406, -63.297, 0.66", "-69.993, 139.421, -63.8808, 0.22", "-70.6366, 139.371, -64.5167, 1.55", "-71.4651, 139.293, -65.3758, 2.36", "-73.6219, 139.036, -67.6987, 2.36", "-76.698, 138.585, -71.1118, 0.88", "-77.6521, 138.416, -72.203, 0.52", "-79.5721, 137.993, -74.5342, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "7.3732, -37.3215, 5.57376, 0.37", "8.72735, -37.6869, 5.52836, 0.37", "9.43104, -37.9355, 5.51379, 0.29", "10.262, -38.2923, 5.54091, 0.66", "11.0206, -38.646, 5.58986, 1.33", "11.5015, -38.8788, 5.63023, 1.62", "12.0345, -39.1414, 5.681, 1.62", "12.805, -39.6071, 5.77001, 0.59", "13.5406, -40.1103, 5.85728, 0.37", "13.9312, -40.4035, 5.87982, 0.74", "14.2168, -40.6352, 5.85886, 0.74", "14.2559, -40.6688, 5.84985, 0.74", "14.6822, -41.0733, 5.67466, 0.29", "15.2755, -41.7088, 5.38955, 0.29", "15.7991, -42.3377, 5.19263, 1.92", "16.36, -43.0574, 5.06458, 3.09", "16.5204, -43.2673, 5.05834, 3.61", "17.0005, -43.8909, 5.13552, 3.32", "17.8222, -44.9543, 5.4176, 0.88", "18.5909, -45.9134, 5.87213, 0.44", "18.9928, -46.3872, 6.16828, 0.44", "19.5124, -46.9685, 6.60111, 1.18", "19.9821, -47.4359, 6.99569, 1.69", "20.2983, -47.6903, 7.25963, 1.69", "21.4645, -48.3941, 8.14563, 0.44", "21.9325, -48.6247, 8.458, 0.66", "21.9734, -48.6436, 8.48604, 0.66", "22.4028, -48.8392, 8.77046, 0.66", "23.0087, -49.1786, 9.23669, 0.29", "23.2025, -49.3687, 9.45193, 0.29", "23.2499, -49.8597, 9.81177, 0.29", "23.1994, -50.4629, 10.2269, 0.81", "23.171, -50.7603, 10.4217, 1.03", "23.1353, -51.6406, 11.041, 0.37", "23.1587, -52.0548, 11.3321, 0.37", "23.1754, -52.1381, 11.4025, 0.37", "23.39, -52.7115, 11.9539, 0.52", "23.594, -53.0937, 12.3482, 0.88", "24.0935, -53.8461, 13.2161, 0.37", "24.4861, -54.3525, 13.7898, 0.29", "25.1234, -55.1295, 14.6292, 1.77", "25.414, -55.5087, 15.037, 2.58", "25.4507, -55.5632, 15.0969, 2.58", "25.8571, -56.3272, 15.98, 2.58", "26.1932, -57.0909, 16.8583, 0.37", "26.5017, -57.8575, 17.7585, 0.37", "26.8003, -58.604, 18.5999, 0.66", "27.0459, -59.1987, 19.2696, 0.74", "27.3989, -59.9325, 20.0632, 0.29", "27.5941, -60.2755, 20.4321, 0.29", "27.7349, -60.4643, 20.6415, 1.11", "27.9301, -60.67, 20.8501, 1.33", "28.3638, -61.0455, 21.1896, 0.88", "29.0598, -61.5977, 21.6821, 0.29", "29.799, -62.137, 22.1705, 0.29", "30.5004, -62.6309, 22.6481, 2.65", "30.5362, -62.657, 22.6757, 2.65", "30.9485, -62.9762, 23.0518, 3.09", "31.58, -63.5617, 23.8929, 0.37", "32.0127, -64.0323, 24.6037, 0.15", "32.2679, -64.3426, 25.0695, 0.15", "32.7055, -64.9312, 25.9614, 2.14", "33.0456, -65.4666, 26.7563, 2.58", "33.8809, -67.013, 28.9283, 0.44", "34.0247, -67.3631, 29.4144, 0.88", "34.0653, -67.4914, 29.5928, 0.88", "34.0741, -67.5263, 29.6401, 0.88", "34.251, -68.3329, 30.6465, 0.22", "34.36, -68.853, 31.2476, 0.22", "34.498, -69.5252, 31.9714, 1.55", "34.6817, -70.4002, 32.9219, 2.14", "34.8881, -71.4333, 33.9953, 0.15", "34.9491, -71.7786, 34.3328, 0.81", "35.0764, -72.5022, 34.9968, 0.15", "35.1546, -72.9871, 35.4241, 1.55", "35.1923, -73.2112, 35.6076, 1.77", "35.3619, -74.3048, 36.4562, 0.15", "35.5071, -75.4795, 37.4451, 0.15", "35.5218, -75.6988, 37.6687, 0.52", "35.5249, -76.4278, 38.4998, 0.22", "35.4935, -77.0666, 39.3079, 0.74", "35.4818, -77.2135, 39.5095, 0.74", "35.3838, -77.9771, 40.7124, 0.59", "35.1964, -78.8402, 42.2638, 0.22", "35.1568, -78.9665, 42.51, 0.52", "35.0379, -79.2226, 43.0847, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.3732, -37.3215, 5.57376, 0.88", "6.73929, -38.6275, 5.71435, 0.88", "6.34462, -39.4454, 5.80572, 0.37", "5.91574, -40.3412, 5.92623, 0.37", "5.27449, -41.6769, 6.08664, 0.37", "4.94272, -42.4121, 6.16438, 1.47", "4.59376, -43.2927, 6.17219, 2.14", "4.4599, -43.6654, 6.15518, 2.14", "4.19943, -44.6995, 6.02299, 1.03", "4.16095, -45.5713, 5.69993, 0.44", "4.24179, -46.4347, 5.23808, 0.37", "4.50392, -48.0919, 4.18605, 1.77", "4.57359, -48.5376, 3.87704, 2.14", "4.66237, -49.323, 3.31956, 2.21", "4.81869, -51.817, 1.56107, 0.29", "4.82001, -52.5625, 1.06768, 0.29", "4.71058, -53.6669, 0.391482, 0.29", "4.50127, -54.7038, -0.148696, 0.29", "4.19507, -55.8225, -0.70406, 0.29", "3.80692, -56.832, -1.13469, 0.88", "3.56005, -57.3029, -1.26773, 1.62", "2.95073, -58.3753, -1.56846, 1.99", "2.7753, -58.6955, -1.63954, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.47908, -87.2147, 18.5795, 0.29", "-6.51017, -88.8049, 18.0694, 0.29", "-6.04504, -89.1914, 17.9648, 0.44", "-4.49043, -90.5531, 17.7197, 0.22", "-3.3136, -91.68, 17.6672, 0.22", "-3.25232, -91.7421, 17.6693, 0.22", "-2.96367, -92.0445, 17.6937, 0.66", "-2.58611, -92.4941, 17.7987, 0.66", "-1.6902, -93.5433, 18.1608, 0.22", "-0.788717, -94.5955, 18.6384, 1.4", "-0.413768, -95.0321, 18.8354, 1.84", "-0.367713, -95.0859, 18.859, 1.84", "0.712308, -96.3778, 19.4016, 0.29", "1.66891, -97.6577, 19.9058, 0.29", "2.30079, -98.652, 20.2446, 0.29", "2.88129, -99.7801, 20.557, 1.69", "3.12133, -100.42, 20.7233, 2.28", "3.25724, -100.95, 20.8429, 2.5", "3.45161, -102.85, 21.2862, 0.29", "3.45794, -104.197, 21.6018, 0.29", "3.41254, -105.546, 21.9243, 0.29", "3.34258, -107.08, 22.3128, 2.06", "3.29772, -108.192, 22.611, 2.65", "3.26128, -110.558, 23.2923, 0.29", "3.28215, -111.697, 23.6494, 0.22", "3.32193, -112.59, 23.9552, 0.22", "3.37885, -113.303, 24.2031, 0.88", "3.44083, -113.813, 24.3772, 1.18", "3.50975, -114.229, 24.5248, 1.18", "3.79598, -115.429, 24.9485, 0.22", "3.94853, -115.994, 25.1749, 0.22", "4.12286, -116.659, 25.4789, 0.22", "4.28734, -117.237, 25.7608, 1.25", "4.47974, -117.775, 26.0768, 1.25", "5.09659, -119.242, 27.0069, 0.22", "5.53525, -119.99, 27.5342, 0.22", "6.30701, -120.987, 28.2804, 1.11", "6.70621, -121.409, 28.6104, 1.55", "8.06572, -122.646, 29.5922, 0.22", "9.03264, -123.347, 30.1627, 0.22", "10.6077, -124.195, 30.866, 0.22", "11.6932, -124.668, 31.2674, 1.69", "12.1274, -124.808, 31.3824, 1.99", "12.2126, -124.83, 31.4, 1.99", "14.0912, -125.125, 31.5124, 0.29", "15.7089, -125.297, 31.5103, 0.29", "15.7993, -125.305, 31.5044, 0.29", "17.4423, -125.443, 31.3751, 1.4", "18.3054, -125.503, 31.2857, 1.62", "21.2524, -125.668, 30.885, 0.22", "21.3406, -125.669, 30.8667, 0.22", "22.6081, -125.652, 30.5146, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.47908, -87.2147, 18.5795, 0.29", "-8.26115, -89.058, 19.0862, 0.29", "-8.11249, -90.2618, 19.4164, 0.29", "-8.04297, -90.8026, 19.5598, 0.74", "-7.9188, -91.7817, 19.7961, 0.81", "-7.83916, -92.3996, 19.9368, 1.11", "-7.72034, -93.2855, 20.1259, 0.44", "-7.60824, -94.0434, 20.2577, 0.29", "-7.46676, -94.9671, 20.4106, 0.29", "-7.24994, -96.2723, 20.6213, 2.21", "-7.13289, -96.8737, 20.7067, 2.73", "-6.74686, -98.53, 20.9193, 0.29", "-6.57318, -99.1652, 20.9888, 0.29", "-6.35239, -99.8627, 21.0672, 0.81", "-6.30119, -100.002, 21.0836, 0.96", "-5.91455, -100.92, 21.2207, 0.22", "-5.56161, -101.714, 21.3616, 0.22", "-5.33341, -102.205, 21.4674, 1.33", "-5.16247, -102.632, 21.5802, 1.62", "-5.14075, -102.701, 21.5998, 1.62", "-4.90058, -103.685, 21.9115, 0.29", "-4.75527, -104.396, 22.1674, 0.22", "-4.62643, -105.051, 22.4249, 0.22", "-4.48487, -105.765, 22.7218, 1.11", "-4.37572, -106.326, 22.9619, 1.47", "-4.23388, -107.329, 23.4402, 0.22", "-4.19206, -108.018, 23.8047, 0.22", "-4.18695, -108.724, 24.2055, 0.74", "-4.20515, -108.923, 24.3162, 0.74", "-4.21541, -108.979, 24.3468, 0.74", "-4.72275, -110.699, 25.2686, 0.22", "-5.08222, -111.678, 25.7739, 1.99", "-5.21993, -112.015, 25.9407, 1.99", "-5.88984, -113.458, 26.6812, 0.22", "-6.60446, -114.904, 27.4446, 0.22", "-7.13978, -115.939, 27.9876, 1.84", "-7.24299, -116.131, 28.0865, 1.99", "-7.31506, -116.26, 28.1554, 1.99", "-8.39882, -118.128, 29.2042, 0.22", "-8.71251, -118.655, 29.5278, 0.96", "-9.23096, -119.487, 30.0543, 0.22", "-9.44998, -119.843, 30.2915, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.7069, -66.7365, -110.587, 0.29", "-29.4257, -68.205, -110.899, 0.29", "-28.0477, -69.8364, -111.28, 0.22", "-27.5884, -70.4361, -111.418, 0.52", "-27.2362, -70.979, -111.549, 0.52", "-26.5118, -72.2578, -111.852, 0.22", "-25.9329, -73.3476, -112.109, 0.22", "-25.5351, -74.2952, -112.341, 0.81", "-25.1906, -75.2006, -112.563, 1.11", "-24.6186, -76.835, -112.917, 0.22", "-24.3025, -77.8409, -113.109, 0.22", "-23.9897, -78.9916, -113.296, 0.22", "-23.7923, -79.8483, -113.444, 1.11", "-23.3857, -81.6044, -113.762, 0.22", "-22.8442, -83.72, -114.164, 0.22", "-22.4935, -84.9342, -114.4, 1.33", "-22.345, -85.371, -114.507, 1.47", "-21.456, -87.7396, -115.192, 0.22", "-20.9825, -88.7404, -115.557, 1.11", "-20.5857, -89.4167, -115.869, 1.47", "-20.155, -90.029, -116.203, 1.47", "-18.702, -91.7612, -117.278, 0.15", "-18.6427, -91.8199, -117.32, 0.15", "-17.4012, -92.6808, -118.122, 0.88", "-17.3323, -92.7248, -118.171, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-30.7069, -66.7365, -110.587, 1.69", "-31.4688, -67.9716, -110.738, 1.69", "-32.3897, -69.0343, -110.952, 0.22", "-32.4375, -69.0827, -110.963, 0.22", "-33.3544, -69.9657, -111.167, 0.22", "-34.1262, -70.6785, -111.387, 0.88", "-34.8359, -71.3184, -111.611, 1.11", "-36.0947, -72.2601, -112.014, 0.22", "-36.6186, -72.6017, -112.174, 0.52", "-36.7951, -72.6994, -112.227, 0.52", "-38.1474, -73.2443, -112.684, 0.37", "-38.2086, -73.267, -112.705, 0.29", "-38.826, -73.5095, -112.889, 0.22", "-39.1417, -73.6459, -112.976, 0.37", "-39.8275, -73.9466, -113.207, 0.37", "-40.9384, -74.5519, -113.87, 0.29", "-41.7261, -75.1039, -114.491, 0.29", "-42.3433, -75.6148, -115.084, 0.22", "-43.123, -76.4371, -116.036, 1.11", "-43.6162, -77.06, -116.752, 1.33", "-44.9995, -78.9447, -118.948, 0.29", "-45.3539, -79.4908, -119.6, 0.59", "-45.3737, -79.5238, -119.644, 0.59", "-45.8476, -80.4068, -120.883, 0.29", "-45.8648, -80.4461, -120.936, 0.29", "-46.3645, -81.6187, -122.286, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-25.3295, 117.811, -49.8548, 0.22", "-24.8821, 119.814, -52.1429, 0.22", "-24.712, 120.488, -52.8813, 0.37", "-24.6124, 120.862, -53.2543, 0.15", "-24.522, 121.143, -53.5419, 0.44", "-24.3155, 121.78, -54.2014, 0.22", "-24.0683, 122.61, -55.0741, 1.25", "-23.7859, 123.656, -56.0434, 0.22", "-23.6736, 124.143, -56.5303, 1.03", "-23.4394, 125.358, -57.8062, 0.22", "-23.4028, 125.592, -58.0582, 0.22", "-23.3333, 126.268, -58.7686, 1.11", "-23.3263, 126.49, -58.9878, 1.4", "-23.3709, 127.52, -59.8912, 0.22", "-23.3906, 127.755, -60.0796, 0.59", "-23.5156, 128.887, -60.7827, 0.22", "-23.5549, 129.302, -61.003, 0.88", "-23.5854, 129.638, -61.1331, 1.03", "-23.6837, 130.513, -61.3884, 0.22", "-23.7393, 130.959, -61.4671, 0.59", "-23.8615, 131.798, -61.5693, 0.22", "-23.9403, 132.383, -61.6135, 0.22", "-24.0432, 133.391, -61.6957, 1.47", "-24.0634, 133.682, -61.718, 1.47", "-24.0757, 134.472, -61.8089, 0.22", "-24.0629, 134.866, -61.879, 0.52", "-23.9981, 135.935, -62.1196, 0.22", "-23.9723, 136.246, -62.2003, 1.03", "-23.9532, 136.448, -62.2636, 1.03", "-23.7527, 138.616, -63.0269, 0.22", "-23.6942, 139.278, -63.2687, 0.96", "-23.6675, 139.619, -63.3986, 0.96", "-23.6654, 139.665, -63.4165, 0.96", "-23.6146, 140.83, -63.905, 0.22", "-23.5856, 141.478, -64.1994, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-25.3295, 117.811, -49.8548, 0.22", "-25.7597, 117.969, -51.1915, 0.22", "-26.4594, 118.136, -53.3513, 0.15", "-26.9867, 118.224, -54.9305, 1.4", "-27.418, 118.296, -56.2225, 1.4", "-27.9643, 118.387, -57.8588, 0.22", "-28.1788, 118.423, -58.5014, 0.22", "-28.4039, 118.433, -59.3281, 0.88", "-28.4804, 118.418, -59.5633, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-79.5721, 137.993, -74.5342, 0.66", "-83.6369, 136.777, -80.7464, 0.66", "-84.2086, 136.701, -81.5538, 0.29", "-84.5393, 136.722, -81.9847, 0.22", "-85.0885, 136.825, -82.6495, 0.22", "-85.577, 136.956, -83.2105, 1.03", "-86.0051, 137.089, -83.6646, 1.47", "-86.9426, 137.866, -84.0856, 0.88", "-87.8383, 138.549, -84.4886, 0.22", "-88.1174, 138.704, -84.6175, 0.29", "-88.2011, 138.732, -84.6498, 0.29", "-88.8445, 138.858, -84.8665, 0.15", "-89.5958, 138.917, -85.1114, 0.96", "-90.2999, 138.923, -85.3107, 1.4", "-91.73, 138.878, -85.8475, 0.22", "-92.7396, 138.862, -86.3345, 0.22", "-93.5948, 138.857, -86.9201, 0.74", "-94.7647, 138.875, -87.8703, 0.22", "-95.178, 138.888, -88.2477, 0.96", "-96.6235, 138.962, -89.7339, 1.33", "-97.253, 139.033, -90.4205, 1.84", "-99.4944, 139.339, -93.0308, 0.88", "-99.8209, 139.382, -93.4104, 1.03", "-99.8718, 139.389, -93.4658, 1.03", "-101.611, 139.598, -95.2531, 0.22", "-102.583, 139.711, -96.1232, 1.33", "-104.971, 139.95, -97.967, 0.22", "-105.973, 140.05, -98.5902, 1.33", "-107.083, 140.123, -99.1864, 0.22", "-107.135, 140.124, -99.209, 0.22", "-108.174, 140.066, -99.4781, 0.22", "-109.134, 139.921, -99.5976, 1.4", "-109.695, 139.808, -99.5451, 1.84", "-110.435, 139.593, -99.4239, 1.33", "-111.35, 139.247, -99.261, 0.81", "-112.159, 138.891, -99.1122, 0.22", "-112.904, 138.462, -98.9719, 1.4", "-113.308, 138.194, -98.8926, 1.69", "-113.555, 138.022, -98.8388, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-79.5721, 137.993, -74.5342, 0.29", "-82.6918, 139.619, -77.5934, 0.29", "-83.5412, 140.126, -78.41, 0.22", "-83.9575, 140.417, -78.8308, 0.96", "-84.2357, 140.628, -79.1196, 1.18", "-85.2925, 141.53, -80.2501, 0.22", "-85.6303, 141.842, -80.6192, 0.52", "-85.7766, 142.061, -80.7733, 0.52", "-86.7403, 143.597, -81.7298, 0.22", "-86.7744, 143.656, -81.7599, 0.22", "-87.1794, 144.422, -82.0742, 0.22", "-87.2085, 144.486, -82.0916, 0.22", "-87.8983, 146.037, -82.3428, 0.22", "-87.9273, 146.104, -82.3467, 0.22", "-88.5399, 147.499, -82.4107, 0.22", "-88.5691, 147.566, -82.4179, 0.22", "-88.8762, 148.271, -82.5288, 0.44", "-89.5198, 149.834, -82.8422, 0.15", "-90.3497, 151.956, -83.4422, 0.15", "-91.0544, 153.836, -84.0672, 0.15", "-91.5466, 155.231, -84.6093, 0.15", "-91.8772, 156.183, -85.0407, 0.88", "-92.0965, 156.843, -85.3865, 1.25", "-92.6042, 158.542, -86.4258, 0.22", "-92.7177, 158.972, -86.7171, 0.59", "-92.8217, 159.437, -87.024, 0.59", "-93.1515, 160.982, -88.0081, 0.22", "-93.2677, 161.56, -88.3628, 0.22", "-93.3213, 161.82, -88.5168, 0.66", "-93.4177, 162.354, -88.8035, 0.74", "-93.5988, 163.974, -89.5305, 0.15", "-93.6476, 164.964, -89.8732, 0.15", "-93.6468, 165.024, -89.8886, 0.15", "-93.6203, 165.803, -90.0668, 0.52", "-93.5693, 166.474, -90.18, 0.52", "-93.3582, 168.461, -90.3811, 0.22", "-93.2054, 169.668, -90.3968, 1.03", "-93.1293, 170.34, -90.3656, 1.03", "-93.1251, 170.423, -90.3567, 1.03", "-93.1655, 171.649, -90.1287, 0.15", "-93.2625, 172.167, -90.0016, 0.52", "-93.4396, 172.605, -89.8764, 0.52", "-93.8226, 173.393, -89.6006, 0.22", "-94.3549, 174.345, -89.2394, 0.22", "-94.6409, 174.797, -89.0682, 0.22", "-95.032, 175.293, -88.8843, 0.59", "-95.4937, 175.879, -88.6692, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.7753, -58.6955, -1.63954, 0.37", "2.02106, -60.2069, -1.134, 0.37", "1.70109, -60.8263, -0.821685, 0.74", "0.951128, -62.2606, 0.0624631, 0.22", "0.572178, -62.9716, 0.539814, 0.81", "0.350479, -63.3821, 0.842908, 0.81", "-0.456231, -64.8572, 2.01778, 1.47", "-1.02734, -65.8652, 2.99345, 2.06", "-1.64151, -67.0196, 4.27605, 0.22", "-1.83119, -67.4087, 4.73514, 0.52", "-2.17408, -68.1155, 5.59602, 0.22", "-2.48959, -68.7698, 6.39193, 1.77", "-2.8715, -69.5685, 7.33364, 2.43", "-3.93959, -71.7831, 9.86115, 0.22", "-4.06837, -72.0549, 10.1726, 0.59", "-4.25948, -72.4669, 10.6322, 0.22", "-4.37066, -72.7072, 10.8845, 0.44", "-4.74407, -73.4991, 11.6715, 0.15", "-5.07815, -74.1259, 12.2295, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "2.7753, -58.6955, -1.63954, 0.29", "1.91948, -60.0489, -2.43909, 0.29", "1.50803, -60.7309, -2.83435, 0.29", "1.09457, -61.4271, -3.23136, 0.29", "0.568667, -62.2696, -3.63735, 0.29", "0.0573535, -63.0545, -3.97384, 0.29", "-0.336656, -63.6546, -4.2156, 1.77", "-0.818172, -64.3293, -4.42031, 2.21", "-0.984524, -64.5683, -4.48437, 2.36", "-1.74673, -65.7306, -4.7477, 0.74", "-2.16271, -66.3206, -4.87981, 0.29", "-2.61927, -66.9302, -5.04027, 0.29", "-3.25274, -67.7382, -5.28052, 1.92", "-3.63983, -68.2158, -5.44379, 2.28", "-3.9234, -68.5701, -5.59745, 2.28", "-4.72293, -69.6166, -6.1517, 0.29", "-5.35722, -70.4838, -6.62642, 0.22", "-5.56662, -70.7838, -6.79777, 0.96", "-5.6817, -70.9947, -6.95341, 1.18", "-5.98875, -71.7239, -7.56911, 0.22", "-6.03108, -71.9415, -7.82869, 0.22", "-6.03802, -72.1787, -8.17334, 0.22", "-6.04525, -72.4998, -8.70481, 0.66", "-6.08931, -73.5165, -10.6521, 1.62", "-6.10231, -73.6266, -10.9111, 2.14", "-6.37175, -74.5537, -13.5802, 0.37", "-6.50035, -74.7928, -14.4027, 0.37", "-6.63962, -74.9461, -15.1001, 1.47", "-6.86367, -75.0816, -16.0674, 1.47", "-7.37902, -75.2258, -17.8369, 0.22", "-7.6543, -75.2547, -18.6747, 1.25", "-7.7978, -75.2486, -19.0348, 1.84", "-8.26034, -75.2175, -20.246, 1.84", "-9.25244, -75.2098, -22.9807, 0.22", "-9.42974, -75.2179, -23.4511, 0.88", "-9.67693, -75.2551, -24.1614, 0.88", "-9.89397, -75.3264, -24.8447, 0.22", "-10.2514, -75.5025, -25.9496, 0.22", "-10.498, -75.6751, -26.7177, 1.03", "-10.5748, -75.7468, -26.9769, 1.03", "-10.8599, -76.2027, -28.6144, 0.22", "-10.918, -76.3653, -29.1443, 0.22", "-10.9933, -76.7251, -30.2419, 1.25", "-11.0719, -77.093, -31.3094, 1.18", "-11.0752, -77.1169, -31.372, 1.18", "-11.1003, -77.958, -33.3476, 0.22", "-11.082, -78.2073, -33.853, 1.18", "-11.0443, -78.4169, -34.238, 1.18", "-10.7581, -79.2002, -35.4666, 0.22", "-10.6724, -79.3906, -35.7506, 0.22", "-10.4507, -79.8178, -36.4314, 0.66", "-10.3459, -80.0266, -36.7497, 0.81", "-10.2516, -80.2043, -37.0273, 0.81", "-9.73822, -81.0325, -38.4349, 0.52", "-9.15589, -81.9347, -39.9305, 0.22", "-8.69061, -82.6968, -41.1815, 0.22", "-8.41917, -83.1686, -41.9482, 2.21", "-8.18627, -83.6331, -42.686, 2.28", "-7.39379, -85.5686, -45.6249, 0.22", "-7.27113, -86.0085, -46.2438, 0.22", "-7.1077, -86.846, -47.3261, 0.22", "-7.10532, -86.8815, -47.3703, 0.22", "-7.17472, -87.4409, -48.0824, 0.37", "-7.35345, -87.8244, -48.5404, 0.88", "-7.9164, -88.4737, -49.2353, 1.69", "-8.26016, -88.8267, -49.6422, 2.21", "-8.81363, -89.3761, -50.2605, 2.21", "-9.27334, -89.8672, -50.8069, 1.11", "-9.64259, -90.3309, -51.3002, 0.37", "-9.66587, -90.3689, -51.3351, 0.37", "-10.0536, -91.1882, -51.9484, 0.37", "-10.2075, -91.5562, -52.1699, 0.74", "-10.2545, -91.6755, -52.2257, 0.74", "-10.4664, -92.2142, -52.449, 0.66", "-10.7799, -92.9494, -52.7359, 0.66", "-11.0356, -93.5017, -52.9596, 0.52", "-11.5941, -94.593, -53.4087, 0.22", "-11.999, -95.3832, -53.7399, 1.47", "-12.2524, -95.9562, -54.0039, 1.92", "-12.4494, -96.4443, -54.25, 2.14", "-12.7086, -97.2093, -54.6723, 0.74", "-12.8495, -97.7725, -54.9991, 0.29", "-12.9503, -98.4101, -55.4062, 0.29", "-13.1012, -99.7069, -56.2642, 0.29", "-13.14, -100.207, -56.5766, 1.33", "-13.1819, -100.844, -56.9577, 1.33", "-13.2032, -101.091, -57.0928, 1.33", "-13.3065, -102.087, -57.6597, 0.29", "-13.3921, -102.595, -57.9573, 0.29", "-13.6264, -103.583, -58.5456, 0.29", "-13.6389, -103.637, -58.5797, 0.29", "-13.8005, -104.325, -59.0129, 0.29", "-14.0348, -105.244, -59.6148, 1.18", "-14.1013, -105.499, -59.7861, 1.33", "-14.3518, -106.521, -60.482, 0.22", "-14.3643, -106.575, -60.518, 0.22", "-14.4689, -107.142, -60.8548, 0.88", "-14.5151, -107.493, -61.0275, 0.88", "-14.6102, -108.64, -61.434, 0.22", "-14.6473, -109.289, -61.6406, 1.33", "-14.6688, -109.609, -61.7303, 1.77", "-14.74, -110.422, -61.9617, 0.88", "-14.8193, -111.135, -62.1671, 0.22", "-14.9449, -111.9, -62.3825, 0.59", "-15.2228, -113.086, -62.7067, 0.22", "-15.4597, -113.941, -62.9389, 0.22", "-15.6493, -114.533, -63.0964, 1.18", "-15.7888, -114.902, -63.1948, 1.18", "-16.1808, -115.799, -63.4489, 0.15", "-16.4292, -116.325, -63.6114, 0.15", "-16.7689, -117.051, -63.8314, 0.88", "-16.9021, -117.344, -63.9266, 1.11", "-17.2037, -118.103, -64.2905, 0.37", "-17.4443, -118.818, -64.7273, 0.22", "-17.5668, -119.333, -65.0907, 1.18", "-17.6373, -119.714, -65.3882, 1.18", "-17.6456, -119.764, -65.4315, 1.18", "-17.8852, -121.361, -66.9024, 0.22", "-17.8962, -121.437, -66.9758, 0.37", "-17.9742, -122.017, -67.564, 0.15", "-18.0142, -122.273, -67.8207, 0.59", "-18.216, -123.292, -68.7859, 0.22", "-18.3308, -123.791, -69.2061, 1.03", "-18.3825, -123.984, -69.3425, 1.03", "-18.718, -125.316, -70.1735, 0.22", "-18.7957, -125.625, -70.3442, 0.52", "-19.0161, -126.501, -70.7358, 0.22", "-19.1477, -127.018, -70.9131, 1.03", "-19.2402, -127.352, -71.008, 1.03", "-19.6225, -128.619, -71.3428, 0.15", "-19.7801, -129.074, -71.4485, 0.44", "-20.0655, -129.912, -71.6577, 0.15", "-20.2007, -130.326, -71.7662, 0.88", "-20.344, -130.878, -71.9427, 0.88", "-20.5427, -131.971, -72.3322, 0.22", "-20.5977, -132.936, -72.8657, 0.22", "-20.5971, -133.181, -73.0487, 0.66", "-20.5966, -133.405, -73.2222, 0.66", "-20.6337, -134.723, -74.3294, 0.37", "-20.6536, -135.212, -74.7584, 1.25", "-20.73, -137.554, -76.7797, 0.44", "-20.8191, -140.257, -79.0735, 0.15", "-20.8682, -141.22, -79.8554, 0.96", "-20.9425, -142.399, -80.7478, 0.29", "-20.9689, -142.76, -80.9882, 0.52", "-21.0284, -144.411, -81.9703, 0.22", "-21.0123, -144.723, -82.1113, 0.66", "-20.9074, -145.28, -82.3794, 0.66", "-20.6614, -146.504, -83.0683, 0.15", "-20.5259, -147.256, -83.5518, 0.15", "-20.3668, -148.204, -84.2249, 1.03", "-20.3256, -148.475, -84.4443, 1.03", "-20.0267, -150.493, -86.2176, 0.22", "-19.8742, -151.599, -87.2995, 0.22", "-19.7856, -152.562, -88.3753, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-113.555, 138.022, -98.8388, 0.22", "-114.838, 137.183, -99.03, 0.22", "-115.53, 136.748, -99.132, 0.22", "-116.843, 135.917, -99.2959, 0.59", "-118.364, 134.956, -99.4489, 0.15", "-118.778, 134.692, -99.4855, 0.81", "-119.509, 134.226, -99.5503, 1.11", "-120.669, 133.511, -99.6316, 0.22", "-121.375, 133.059, -99.6854, 1.03", "-121.847, 132.739, -99.7199, 1.33", "-121.945, 132.68, -99.7123, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-113.555, 138.022, -98.8388, 0.22", "-114.376, 138.966, -97.933, 0.22", "-115.04, 139.894, -96.9289, 0.22", "-115.422, 140.45, -96.3129, 1.25", "-115.448, 140.499, -96.2608, 1.25", "-116.112, 141.969, -94.7572, 0.15", "-116.381, 142.639, -94.1226, 0.15", "-116.792, 144.193, -92.722, 0.96", "-116.904, 144.679, -92.3226, 1.18", "-117.172, 145.953, -91.3093, 0.15", "-117.183, 146.013, -91.2626, 0.15", "-117.334, 146.969, -90.5391, 0.15", "-117.604, 148.749, -89.2527, 0.15", "-117.792, 149.575, -88.757, 0.66", "-117.88, 149.893, -88.5529, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-19.7856, -152.562, -88.3753, 0.22", "-21.211, -152.9, -90.0657, 0.22", "-21.8888, -153.058, -90.7871, 0.22", "-22.1865, -153.143, -91.1702, 1.03", "-22.3256, -153.186, -91.3501, 1.33", "-23.6487, -153.602, -93.0703, 0.22", "-24.6176, -153.884, -94.347, 0.22", "-24.9279, -153.962, -94.7533, 0.88", "-26.2313, -154.292, -96.5896, 0.22", "-27.0092, -154.488, -97.6353, 0.22", "-27.041, -154.498, -97.6737, 0.22", "-28.0667, -154.881, -98.7634, 0.22", "-28.1267, -154.908, -98.8254, 0.22", "-29.0603, -155.389, -99.6775, 0.22", "-30.0516, -156.034, -100.481, 0.22", "-31.0913, -156.948, -101.39, 0.22", "-31.1254, -156.985, -101.42, 0.22", "-31.4947, -157.484, -101.747, 0.74", "-31.6812, -157.81, -101.941, 0.74", "-32.1618, -159.241, -102.753, 0.22", "-32.3471, -160.18, -103.315, 0.22", "-32.407, -160.525, -103.522, 0.29", "-32.4365, -160.688, -103.608, 0.37", "-32.6273, -161.788, -104.176, 0.15", "-32.9618, -163.704, -105.11, 0.15", "-32.9714, -163.756, -105.134, 0.15", "-33.316, -165.308, -105.821, 0.15", "-34.1853, -168.551, -107.204, 0.15", "-34.5181, -169.655, -107.679, 0.44", "-34.8092, -170.539, -108.048, 0.15", "-35.5869, -172.744, -108.931, 0.15", "-36.0532, -174.048, -109.462, 0.37", "-36.5266, -175.314, -109.998, 0.15", "-37.1306, -176.602, -110.549, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-19.7856, -152.562, -88.3753, 0.22", "-19.8484, -153.995, -88.5573, 0.22", "-19.8727, -155.527, -88.7477, 0.22", "-19.9002, -157.263, -88.9633, 0.22", "-19.9074, -157.715, -89.0195, 1.33", "-19.9186, -158.419, -89.107, 1.33", "-19.9343, -159.409, -89.23, 0.22", "-19.9342, -159.651, -89.2615, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-121.945, 132.68, -99.7123, 0.22", "-122.603, 131.887, -100.493, 0.22", "-122.866, 131.57, -100.805, 0.59", "-123.288, 131.062, -101.305, 0.22", "-123.532, 130.769, -101.594, 0.66", "-123.563, 130.731, -101.631, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-121.945, 132.68, -99.7123, 0.15", "-120.406, 131.261, -100.396, 0.15", "-119.339, 130.277, -100.87, 0.29", "-118.898, 129.871, -101.067, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.9342, -159.651, -89.2615, 0.29", "-18.8476, -160.505, -89.2761, 0.29", "-18.0792, -161.109, -89.2864, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-19.9342, -159.651, -89.2615, 0.22", "-20.9634, -161.181, -90.3775, 0.22", "-21.5002, -162.028, -90.9734, 0.44", "-22.1288, -163.326, -91.7584, 0.15", "-22.8437, -164.918, -92.6841, 0.15", "-23.043, -165.377, -92.9423, 0.81", "-23.1736, -165.686, -93.1108, 0.81", "-24.4367, -168.829, -94.7539, 0.15", "-25.9158, -173.035, -96.7503, 0.15", "-25.9158, -173.035, -96.7503, 0.37", "-26.1635, -174.021, -97.1591, 0.15", "-26.2754, -174.505, -97.3458, 0.81", "-26.3896, -175.061, -97.5444, 0.81", "-26.6339, -176.674, -98.0164, 0.15", "-26.7212, -177.244, -98.1598, 0.44", "-26.7479, -177.525, -98.2484, 0.44", "-26.8032, -178.417, -98.5574, 0.15", "-26.8391, -178.778, -98.6795, 0.66", "-26.8535, -178.886, -98.7156, 0.66", "-26.9326, -179.422, -98.8907, 0.66", "-27.4048, -182.733, -99.9762, 0.15", "-27.5046, -183.446, -100.211, 0.44", "-28.1039, -187.881, -101.661, 0.15", "-28.6744, -192.039, -103.01, 0.15", "-28.6937, -192.174, -103.053, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_SBC_64157b3c40_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.52749, -12.4289, 3.62134, 4.13 ) }
    dend_32 { pt3dadd( -1.36723, -13.7786, 4.09239, 3.76 ) }
    dend_32 { pt3dadd( -1.11379, -15.9131, 4.83734, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -4.76153, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.00524711, -4.77835, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.291781, -4.83472, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 1.44754, -5.07365, -15.4434, 1.69 ) }
    dend_23 { pt3dadd( 3.13012, -5.48312, -15.3779, 1.69 ) }
    dend_23 { pt3dadd( 3.24701, -5.51659, -15.3879, 1.69 ) }
    dend_23 { pt3dadd( 5.08642, -6.21112, -15.7962, 1.69 ) }
    dend_23 { pt3dadd( 5.17282, -6.25628, -15.8359, 1.69 ) }
    dend_23 { pt3dadd( 6.26806, -7.26359, -17.1949, 1.84 ) }
    dend_23 { pt3dadd( 6.14404, -8.0965, -19.1209, 1.84 ) }
    dend_23 { pt3dadd( 5.18189, -8.8883, -22.0213, 1.99 ) }
    dend_23 { pt3dadd( 4.23501, -9.5322, -24.5398, 1.99 ) }
    dend_23 { pt3dadd( 3.1134, -10.1485, -27.1572, 1.99 ) }
    dend_23 { pt3dadd( 1.37256, -10.9383, -30.8158, 2.14 ) }
    dend_23 { pt3dadd( -0.58953, -11.6223, -34.4469, 2.43 ) }
    dend_23 { pt3dadd( -3.85058, -12.4315, -39.826, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.93455, 10.8048, -5.76073, 2.28 ) }
    dend_14 { pt3dadd( 1.24424, 11.0708, -5.87187, 2.21 ) }
    dend_14 { pt3dadd( 1.84014, 11.6549, -6.06911, 0.81 ) }
    dend_14 { pt3dadd( 2.52053, 12.445, -6.28083, 0.81 ) }
    dend_14 { pt3dadd( 2.86087, 12.8803, -6.38182, 1.25 ) }
    dend_14 { pt3dadd( 3.2586, 13.4846, -6.47629, 1.99 ) }
    dend_14 { pt3dadd( 3.27603, 13.5205, -6.47888, 1.99 ) }
    dend_14 { pt3dadd( 3.43686, 14.1153, -6.47003, 2.14 ) }
    dend_14 { pt3dadd( 3.48787, 14.7223, -6.42018, 2.14 ) }
    dend_14 { pt3dadd( 3.48618, 14.7621, -6.41694, 2.14 ) }
    dend_14 { pt3dadd( 3.41999, 15.4792, -6.37882, 1.84 ) }
    dend_14 { pt3dadd( 3.32754, 16.1636, -6.39155, 1.4 ) }
    dend_14 { pt3dadd( 3.15849, 17.0879, -6.46287, 0.81 ) }
    dend_14 { pt3dadd( 3.0074, 17.7096, -6.56686, 0.81 ) }
    dend_14 { pt3dadd( 2.77762, 18.4965, -6.75893, 1.11 ) }
    dend_14 { pt3dadd( 2.76686, 18.5284, -6.76989, 1.11 ) }
    dend_14 { pt3dadd( 2.5361, 19.1183, -7.04382, 1.69 ) }
    dend_14 { pt3dadd( 2.26561, 19.7586, -7.40757, 1.77 ) }
    dend_14 { pt3dadd( 2.04939, 20.3044, -7.76753, 1.18 ) }
    dend_14 { pt3dadd( 2.04188, 20.3327, -7.78714, 1.18 ) }
    dend_14 { pt3dadd( 2.00866, 20.8219, -8.10085, 0.88 ) }
    dend_14 { pt3dadd( 2.06132, 21.2075, -8.31034, 0.74 ) }
    dend_14 { pt3dadd( 2.08768, 21.2738, -8.3376, 0.74 ) }
    dend_14 { pt3dadd( 2.36082, 21.7339, -8.46962, 0.74 ) }
    dend_14 { pt3dadd( 2.76182, 22.316, -8.57919, 0.88 ) }
    dend_14 { pt3dadd( 3.07059, 22.7395, -8.63676, 1.69 ) }
    dend_14 { pt3dadd( 3.28768, 23.0312, -8.65883, 1.92 ) }
    dend_14 { pt3dadd( 3.46747, 23.2881, -8.67474, 2.21 ) }
    dend_14 { pt3dadd( 3.65361, 23.5822, -8.68862, 1.84 ) }
    dend_14 { pt3dadd( 3.87292, 24.0033, -8.7, 1.25 ) }
    dend_14 { pt3dadd( 4.07195, 24.517, -8.72893, 0.81 ) }
    dend_14 { pt3dadd( 4.19987, 24.9794, -8.78644, 0.81 ) }
    dend_14 { pt3dadd( 4.26013, 25.4356, -8.8913, 1.11 ) }
    dend_14 { pt3dadd( 4.25734, 25.4716, -8.90852, 1.11 ) }
    dend_14 { pt3dadd( 4.18205, 25.7703, -9.13698, 1.11 ) }
    dend_14 { pt3dadd( 3.98245, 26.2739, -9.62187, 0.59 ) }
    dend_14 { pt3dadd( 3.88088, 26.4777, -9.85004, 0.59 ) }
    dend_14 { pt3dadd( 3.65481, 26.8745, -10.3782, 0.52 ) }
    dend_14 { pt3dadd( 3.21357, 27.5922, -11.4183, 1.99 ) }
    dend_14 { pt3dadd( 2.99932, 27.9274, -11.9296, 3.02 ) }
    dend_14 { pt3dadd( 2.89713, 28.077, -12.1792, 3.02 ) }
    dend_14 { pt3dadd( 2.87953, 28.1004, -12.221, 3.02 ) }
    dend_14 { pt3dadd( 2.57144, 28.5089, -12.9898, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 7.82597, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.06382, 8.05324, 1.3803, 1.47 ) }
    dend_11 { pt3dadd( 3.65655, 8.48401, 1.49025, 1.25 ) }
    dend_11 { pt3dadd( 3.8491, 8.61942, 1.53328, 1.62 ) }
    dend_11 { pt3dadd( 4.21055, 8.84651, 1.61574, 1.92 ) }
    dend_11 { pt3dadd( 4.6268, 9.09142, 1.71129, 1.69 ) }
    dend_11 { pt3dadd( 5.2517, 9.38787, 1.89107, 0.88 ) }
    dend_11 { pt3dadd( 5.88885, 9.58484, 2.28658, 0.88 ) }
    dend_11 { pt3dadd( 5.91548, 9.5917, 2.31869, 0.88 ) }
    dend_11 { pt3dadd( 6.1851, 9.66029, 2.80155, 0.81 ) }
    dend_11 { pt3dadd( 6.19692, 9.66457, 2.83609, 0.81 ) }
    dend_11 { pt3dadd( 6.40282, 9.85013, 3.94199, 1.03 ) }
    dend_11 { pt3dadd( 6.52499, 10.2945, 5.85582, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 6.50081, 10.627, 6.93265, 1.11 ) }
    dend_11 { pt3dadd( 6.497, 10.6437, 6.97099, 1.11 ) }
    dend_11 { pt3dadd( 6.35316, 11.0774, 7.73645, 1.33 ) }
    dend_11 { pt3dadd( 6.18523, 11.5471, 8.31682, 1.99 ) }
    dend_11 { pt3dadd( 6.06426, 11.8784, 8.56952, 2.73 ) }
    dend_11 { pt3dadd( 5.99197, 12.1774, 8.72321, 2.65 ) }
    dend_11 { pt3dadd( 5.93811, 12.7936, 9.01228, 2.36 ) }
    dend_11 { pt3dadd( 5.94018, 12.8253, 9.0263, 2.36 ) }
    dend_11 { pt3dadd( 6.13152, 13.6581, 9.35961, 0.81 ) }
    dend_11 { pt3dadd( 6.32642, 14.1786, 9.56722, 0.59 ) }
    dend_11 { pt3dadd( 6.78837, 15.1378, 9.92829, 0.44 ) }
    dend_11 { pt3dadd( 7.17446, 15.7774, 10.1303, 0.44 ) }
    dend_11 { pt3dadd( 7.56467, 16.3119, 10.238, 1.18 ) }
    dend_11 { pt3dadd( 7.88489, 16.6943, 10.286, 1.99 ) }
    dend_11 { pt3dadd( 8.21817, 17.049, 10.3521, 2.65 ) }
    dend_11 { pt3dadd( 8.4042, 17.2457, 10.3995, 2.65 ) }
    dend_11 { pt3dadd( 8.92324, 17.8236, 10.5962, 1.77 ) }
    dend_11 { pt3dadd( 9.42257, 18.3983, 10.9106, 0.44 ) }
    dend_11 { pt3dadd( 9.91248, 18.9946, 11.3159, 0.44 ) }
    dend_11 { pt3dadd( 10.7802, 20.1209, 12.2407, 1.25 ) }
    dend_11 { pt3dadd( 11.0289, 20.477, 12.5606, 2.43 ) }
    dend_11 { pt3dadd( 11.4317, 21.1178, 13.1539, 2.43 ) }
    dend_11 { pt3dadd( 11.741, 21.6719, 13.6932, 2.21 ) }
    dend_11 { pt3dadd( 11.9651, 22.1272, 14.1244, 1.25 ) }
    dend_11 { pt3dadd( 12.2225, 22.72, 14.592, 0.52 ) }
    dend_11 { pt3dadd( 12.4054, 23.1542, 14.8301, 0.52 ) }
    dend_11 { pt3dadd( 12.6284, 23.6811, 15.056, 0.52 ) }
    dend_11 { pt3dadd( 12.6439, 23.7174, 15.0655, 0.52 ) }
    dend_11 { pt3dadd( 12.871, 24.2116, 15.1614, 0.88 ) }
    dend_11 { pt3dadd( 13.109, 24.6897, 15.2374, 1.25 ) }
    dend_11 { pt3dadd( 13.3261, 25.1093, 15.2677, 1.69 ) }
    dend_11 { pt3dadd( 13.4884, 25.4036, 15.2951, 1.69 ) }
    dend_11 { pt3dadd( 13.5184, 25.4573, 15.3016, 1.69 ) }
    dend_11 { pt3dadd( 13.812, 25.9664, 15.3756, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.52192, 11.2801, -2.52814, 1.4 ) }
    dend_0 { pt3dadd( -4.16342, 12.4109, -1.5429, 1.4 ) }
    dend_0 { pt3dadd( -4.60366, 13.1791, -0.89588, 1.4 ) }
    dend_0 { pt3dadd( -4.99333, 13.8705, -0.330276, 1.69 ) }
    dend_0 { pt3dadd( -5.5472, 14.848, 0.452398, 1.99 ) }
    dend_0 { pt3dadd( -6.14535, 15.8985, 1.26296, 2.36 ) }
    dend_0 { pt3dadd( -6.72861, 16.9195, 2.01195, 3.09 ) }
    dend_0 { pt3dadd( -7.31362, 17.8832, 2.64521, 3.32 ) }
    dend_0 { pt3dadd( -7.85944, 18.7323, 3.10704, 3.09 ) }
    dend_0 { pt3dadd( -8.35439, 19.4382, 3.37739, 2.43 ) }
    dend_0 { pt3dadd( -8.98306, 20.2641, 3.47822, 1.4 ) }
    dend_0 { pt3dadd( -9.37701, 20.7488, 3.46043, 1.33 ) }
    dend_0 { pt3dadd( -10.0071, 21.4698, 3.30989, 1.18 ) }
    dend_0 { pt3dadd( -10.6156, 22.1019, 3.07372, 1.4 ) }
    dend_0 { pt3dadd( -11.4425, 22.8701, 2.59256, 1.69 ) }
    dend_0 { pt3dadd( -12.4033, 23.6973, 1.84902, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02029 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.11379, -15.9131, 4.83734, 1.99 ) }
    dend_38 { pt3dadd( -0.437714, -16.8607, 4.8396, 1.99 ) }
    dend_38 { pt3dadd( 0.260727, -17.7761, 4.89222, 1.62 ) }
    dend_38 { pt3dadd( 0.29753, -17.8229, 4.89626, 1.62 ) }
    dend_38 { pt3dadd( 1.13402, -18.8834, 5.0436, 1.18 ) }
    dend_38 { pt3dadd( 1.60354, -19.4899, 5.14087, 1.18 ) }
    dend_38 { pt3dadd( 2.21021, -20.295, 5.27558, 1.18 ) }
    dend_38 { pt3dadd( 3.06832, -21.4618, 5.50118, 1.18 ) }
    dend_38 { pt3dadd( 3.78451, -22.4806, 5.71375, 1.47 ) }
    dend_38 { pt3dadd( 4.52734, -23.621, 5.95773, 2.21 ) }
    dend_38 { pt3dadd( 5.15658, -24.6328, 6.1927, 2.73 ) }
    dend_38 { pt3dadd( 5.75591, -25.6533, 6.43038, 2.8 ) }
    dend_38 { pt3dadd( 6.27949, -26.6024, 6.64804, 2.95 ) }
    dend_38 { pt3dadd( 6.78822, -27.6169, 6.86382, 2.95 ) }
    dend_38 { pt3dadd( 7.02409, -28.138, 6.96857, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.11379, -15.9131, 4.83734, 1.18 ) }
    dend_33 { pt3dadd( -3.55849, -17.4965, 7.65508, 1.18 ) }
    dend_33 { pt3dadd( -5.33614, -18.6479, 9.70399, 1.18 ) }
    dend_33 { pt3dadd( -6.43392, -19.359, 10.9693, 1.69 ) }
    dend_33 { pt3dadd( -7.33313, -19.9414, 12.0057, 2.36 ) }
    dend_33 { pt3dadd( -7.87423, -20.2919, 12.6294, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.85058, -12.4315, -39.826, 0.66 ) }
    dend_29 { pt3dadd( -2.18244, -14.1137, -41.321, 0.66 ) }
    dend_29 { pt3dadd( -1.18881, -15.0368, -42.1034, 0.74 ) }
    dend_29 { pt3dadd( -0.475872, -15.6432, -42.6909, 0.74 ) }
    dend_29 { pt3dadd( 0.114765, -16.1014, -43.1922, 0.74 ) }
    dend_29 { pt3dadd( 0.1621, -16.1354, -43.2332, 0.74 ) }
    dend_29 { pt3dadd( 1.31427, -16.8954, -44.2458, 0.52 ) }
    dend_29 { pt3dadd( 1.90024, -17.0645, -44.6966, 0.52 ) }
    dend_29 { pt3dadd( 2.64513, -16.9688, -45.5184, 0.44 ) }
    dend_29 { pt3dadd( 3.10613, -16.7912, -46.176, 0.44 ) }
    dend_29 { pt3dadd( 3.23016, -16.7469, -46.3614, 0.44 ) }
    dend_29 { pt3dadd( 3.67677, -16.6551, -46.9623, 0.44 ) }
    dend_29 { pt3dadd( 4.76752, -16.5459, -48.4065, 0.88 ) }
    dend_29 { pt3dadd( 4.81202, -16.5476, -48.4633, 0.88 ) }
    dend_29 { pt3dadd( 5.78146, -16.6923, -49.6066, 1.11 ) }
    dend_29 { pt3dadd( 7.08967, -16.9739, -51.0908, 1.84 ) }
    dend_29 { pt3dadd( 8.57774, -17.3537, -52.6955, 2.14 ) }
    dend_29 { pt3dadd( 10.9197, -18.0431, -55.0988, 0.29 ) }
    dend_29 { pt3dadd( 11.7358, -18.3031, -55.8695, 0.29 ) }
    dend_29 { pt3dadd( 12.367, -18.4999, -56.4072, 1.03 ) }
    dend_29 { pt3dadd( 12.4319, -18.5206, -56.4532, 1.03 ) }
    dend_29 { pt3dadd( 12.9428, -18.7116, -56.7403, 1.33 ) }
    dend_29 { pt3dadd( 13.0027, -18.7351, -56.7736, 1.33 ) }
    dend_29 { pt3dadd( 13.63, -18.9389, -57.1739, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 14.712, -19.175, -57.9998, 0.37 ) }
    dend_29 { pt3dadd( 15.4423, -19.2691, -58.6515, 0.37 ) }
    dend_29 { pt3dadd( 16.6475, -19.3197, -59.9307, 0.52 ) }
    dend_29 { pt3dadd( 18.1723, -19.2949, -61.7979, 0.74 ) }
    dend_29 { pt3dadd( 18.9594, -19.2782, -62.8351, 1.62 ) }
    dend_29 { pt3dadd( 19.3879, -19.2621, -63.4335, 1.92 ) }
    dend_29 { pt3dadd( 20.1586, -19.2115, -64.5394, 2.43 ) }
    dend_29 { pt3dadd( 21.4275, -19.045, -66.2901, 1.69 ) }
    dend_29 { pt3dadd( 22.5775, -18.7897, -67.855, 0.37 ) }
    dend_29 { pt3dadd( 23.1253, -18.6586, -68.5854, 0.37 ) }
    dend_29 { pt3dadd( 23.5035, -18.5745, -69.0805, 0.37 ) }
    dend_29 { pt3dadd( 24.0035, -18.4868, -69.7419, 1.11 ) }
    dend_29 { pt3dadd( 24.5739, -18.4294, -70.4075, 1.33 ) }
    dend_29 { pt3dadd( 26.4948, -18.2664, -72.2528, 0.22 ) }
    dend_29 { pt3dadd( 26.5589, -18.2621, -72.3055, 0.22 ) }
    dend_29 { pt3dadd( 27.1803, -18.2668, -72.7821, 0.22 ) }
    dend_29 { pt3dadd( 27.9812, -18.4137, -73.3288, 0.22 ) }
    dend_29 { pt3dadd( 28.9977, -18.7248, -73.9319, 0.88 ) }
    dend_29 { pt3dadd( 30.0375, -19.0845, -74.5286, 1.55 ) }
    dend_29 { pt3dadd( 30.7034, -19.2565, -75.0754, 1.77 ) }
    dend_29 { pt3dadd( 31.8662, -19.3993, -76.5399, 0.22 ) }
    dend_29 { pt3dadd( 32.5438, -19.3868, -77.711, 0.22 ) }
    dend_29 { pt3dadd( 33.1013, -19.3241, -78.8326, 1.47 ) }
    dend_29 { pt3dadd( 33.8213, -19.2216, -80.4284, 2.43 ) }
    dend_29 { pt3dadd( 35.9523, -18.8157, -85.4069, 1.99 ) }
    dend_29 { pt3dadd( 37.2171, -18.4882, -88.6014, 1.77 ) }
    dend_29 { pt3dadd( 38.6932, -17.973, -92.653, 0.22 ) }
    dend_29 { pt3dadd( 38.7128, -17.9643, -92.711, 0.22 ) }
    dend_29 { pt3dadd( 39.041, -17.8046, -93.7764, 0.22 ) }
    dend_29 { pt3dadd( 39.3162, -17.6699, -94.7196, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.85058, -12.4315, -39.826, 1.03 ) }
    dend_24 { pt3dadd( -5.19895, -14.5234, -40.5724, 1.03 ) }
    dend_24 { pt3dadd( -5.98798, -16.2133, -41.0241, 0.88 ) }
    dend_24 { pt3dadd( -6.02658, -16.3134, -41.0468, 0.88 ) }
    dend_24 { pt3dadd( -6.41218, -17.5904, -41.2863, 0.88 ) }
    dend_24 { pt3dadd( -6.59042, -18.7661, -41.5584, 1.69 ) }
    dend_24 { pt3dadd( -6.66294, -19.7916, -41.802, 1.84 ) }
    dend_24 { pt3dadd( -6.617, -20.4046, -41.9565, 1.99 ) }
    dend_24 { pt3dadd( -6.61083, -20.4745, -41.9754, 1.99 ) }
    dend_24 { pt3dadd( -6.5764, -21.3343, -42.2595, 1.69 ) }
    dend_24 { pt3dadd( -6.66469, -23.6597, -43.2295, 1.03 ) }
    dend_24 { pt3dadd( -6.98758, -25.0671, -44.1357, 0.88 ) }
    dend_24 { pt3dadd( -7.40678, -26.0329, -44.9344, 0.66 ) }
    dend_24 { pt3dadd( -7.70777, -26.5866, -45.4401, 0.66 ) }
    dend_24 { pt3dadd( -8.26654, -27.3955, -46.2676, 0.52 ) }
    dend_24 { pt3dadd( -8.84558, -27.92, -46.9585, 0.52 ) }
    dend_24 { pt3dadd( -10.9216, -28.8047, -48.7665, 1.77 ) }
    dend_24 { pt3dadd( -11.4566, -28.9351, -49.25, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.57144, 28.5089, -12.9898, 0.52 ) }
    dend_20 { pt3dadd( 3.84496, 29.3593, -16.4327, 0.52 ) }
    dend_20 { pt3dadd( 4.06119, 29.4951, -16.9894, 0.52 ) }
    dend_20 { pt3dadd( 4.4515, 29.8087, -18.1544, 0.37 ) }
    dend_20 { pt3dadd( 4.92485, 30.3203, -19.7448, 1.4 ) }
    dend_20 { pt3dadd( 5.02471, 30.4755, -20.1346, 1.55 ) }
    dend_20 { pt3dadd( 5.84461, 32.1192, -23.6855, 0.74 ) }
    dend_20 { pt3dadd( 5.92514, 32.4651, -24.2772, 0.74 ) }
    dend_20 { pt3dadd( 6.07816, 33.9086, -26.5086, 0.29 ) }
    dend_20 { pt3dadd( 6.08134, 34.6566, -27.5249, 0.29 ) }
    dend_20 { pt3dadd( 5.98224, 35.9124, -29.0406, 1.92 ) }
    dend_20 { pt3dadd( 5.9004, 36.4226, -29.5766, 2.28 ) }
    dend_20 { pt3dadd( 5.49244, 38.3474, -31.3072, 0.22 ) }
    dend_20 { pt3dadd( 5.47237, 38.4529, -31.4037, 0.22 ) }
    dend_20 { pt3dadd( 5.41572, 38.9102, -31.8143, 0.22 ) }
    dend_20 { pt3dadd( 5.38376, 40.1365, -33.0531, 1.18 ) }
    dend_20 { pt3dadd( 5.40618, 40.6158, -33.5646, 1.77 ) }
    dend_20 { pt3dadd( 5.57774, 42.6712, -35.6762, 0.22 ) }
    dend_20 { pt3dadd( 5.72601, 43.8432, -36.8015, 1.84 ) }
    dend_20 { pt3dadd( 5.81415, 44.4154, -37.3262, 2.21 ) }
    dend_20 { pt3dadd( 6.21194, 46.313, -38.951, 0.22 ) }
    dend_20 { pt3dadd( 6.22862, 46.3697, -38.9927, 0.22 ) }
    dend_20 { pt3dadd( 6.6935, 47.6082, -39.7737, 0.22 ) }
    dend_20 { pt3dadd( 6.72598, 47.677, -39.8045, 0.22 ) }
    dend_20 { pt3dadd( 7.22538, 48.5525, -40.1666, 0.66 ) }
    dend_20 { pt3dadd( 7.69545, 49.31, -40.6185, 0.88 ) }
    dend_20 { pt3dadd( 8.33568, 50.3029, -41.3046, 0.22 ) }
    dend_20 { pt3dadd( 8.93619, 51.1929, -42.0462, 1.99 ) }
    dend_20 { pt3dadd( 9.24512, 51.6473, -42.5018, 2.5 ) }
    dend_20 { pt3dadd( 10.0362, 52.9283, -43.9193, 0.22 ) }
    dend_20 { pt3dadd( 11.1325, 54.9134, -46.3041, 0.59 ) }
    dend_20 { pt3dadd( 11.245, 55.1763, -46.6349, 0.59 ) }
    dend_20 { pt3dadd( 11.2589, 55.2208, -46.6915, 0.59 ) }
    dend_20 { pt3dadd( 11.4941, 56.34, -47.9893, 0.96 ) }
    dend_20 { pt3dadd( 11.5837, 56.9288, -48.608, 1.11 ) }
    dend_20 { pt3dadd( 11.6556, 57.5038, -49.1281, 0.96 ) }
    dend_20 { pt3dadd( 11.8442, 58.7949, -50.1536, 0.22 ) }
    dend_20 { pt3dadd( 11.8756, 58.9823, -50.3869, 0.22 ) }
    dend_20 { pt3dadd( 11.999, 59.6409, -51.4407, 0.22 ) }
    dend_20 { pt3dadd( 12.1037, 60.1907, -52.5356, 1.11 ) }
    dend_20 { pt3dadd( 12.1742, 60.8776, -54.2329, 1.4 ) }
    dend_20 { pt3dadd( 12.2014, 61.3926, -55.6809, 2.06 ) }
    dend_20 { pt3dadd( 12.3048, 63.428, -61.8322, 1.18 ) }
    dend_20 { pt3dadd( 12.3304, 64.1912, -64.3038, 1.18 ) }
    dend_20 { pt3dadd( 12.3309, 65.1492, -67.7277, 1.4 ) }
    dend_20 { pt3dadd( 12.2718, 66.4011, -72.5492, 1.55 ) }
    dend_20 { pt3dadd( 12.2698, 66.4178, -72.6218, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.57144, 28.5089, -12.9898, 0.52 ) }
    dend_15 { pt3dadd( 2.69006, 30.6701, -12.7402, 0.52 ) }
    dend_15 { pt3dadd( 2.78562, 32.0288, -12.5937, 0.52 ) }
    dend_15 { pt3dadd( 2.90806, 33.4848, -12.5664, 1.18 ) }
    dend_15 { pt3dadd( 3.03517, 34.6681, -12.6066, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 3.10615, 35.1635, -12.6363, 2.28 ) }
    dend_15 { pt3dadd( 3.24001, 35.7701, -12.6785, 1.84 ) }
    dend_15 { pt3dadd( 3.45866, 36.3659, -12.7337, 1.55 ) }
    dend_15 { pt3dadd( 4.08829, 37.8405, -12.9416, 0.88 ) }
    dend_15 { pt3dadd( 4.53619, 38.8652, -13.1877, 0.29 ) }
    dend_15 { pt3dadd( 4.91248, 39.7575, -13.4126, 0.29 ) }
    dend_15 { pt3dadd( 5.37959, 41.0688, -13.79, 0.29 ) }
    dend_15 { pt3dadd( 5.41595, 41.1773, -13.8268, 0.29 ) }
    dend_15 { pt3dadd( 5.6843, 42.0793, -14.1471, 0.29 ) }
    dend_15 { pt3dadd( 6.14676, 44.0461, -14.8287, 1.92 ) }
    dend_15 { pt3dadd( 6.30671, 45.201, -15.2378, 2.21 ) }
    dend_15 { pt3dadd( 6.38849, 46.9549, -15.9099, 0.29 ) }
    dend_15 { pt3dadd( 6.34406, 48.4295, -16.4945, 0.29 ) }
    dend_15 { pt3dadd( 6.19809, 49.6432, -17.0226, 0.29 ) }
    dend_15 { pt3dadd( 5.95102, 50.6811, -17.4946, 0.29 ) }
    dend_15 { pt3dadd( 5.43776, 52.0999, -18.1311, 1.84 ) }
    dend_15 { pt3dadd( 4.83146, 53.3726, -18.7138, 2.58 ) }
    dend_15 { pt3dadd( 4.61766, 53.7298, -18.8738, 2.5 ) }
    dend_15 { pt3dadd( 2.81489, 56.256, -20.0525, 0.22 ) }
    dend_15 { pt3dadd( 1.82878, 57.5062, -20.6817, 0.22 ) }
    dend_15 { pt3dadd( 1.17265, 58.2933, -21.0782, 0.96 ) }
    dend_15 { pt3dadd( 0.818244, 58.6939, -21.2784, 1.18 ) }
    dend_15 { pt3dadd( 0.494157, 59.0484, -21.4401, 1.18 ) }
    dend_15 { pt3dadd( -0.630099, 60.267, -21.9871, 0.29 ) }
    dend_15 { pt3dadd( -1.22153, 60.8936, -22.2507, 0.29 ) }
    dend_15 { pt3dadd( -2.38284, 62.1468, -22.8288, 0.29 ) }
    dend_15 { pt3dadd( -3.90765, 63.8147, -23.6319, 2.21 ) }
    dend_15 { pt3dadd( -4.43246, 64.4011, -23.9134, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 13.812, 25.9664, 15.3756, 0.29 ) }
    dend_13 { pt3dadd( 14.3, 27.25, 15.2826, 0.29 ) }
    dend_13 { pt3dadd( 14.6413, 28.1758, 15.2823, 0.59 ) }
    dend_13 { pt3dadd( 14.8628, 28.7513, 15.3566, 0.74 ) }
    dend_13 { pt3dadd( 15.2455, 29.7401, 15.5332, 0.22 ) }
    dend_13 { pt3dadd( 15.6068, 30.6804, 15.7171, 0.22 ) }
    dend_13 { pt3dadd( 16.1654, 32.1438, 16.0123, 2.28 ) }
    dend_13 { pt3dadd( 16.3503, 32.6535, 16.1483, 2.28 ) }
    dend_13 { pt3dadd( 17.0021, 34.4588, 16.6682, 0.29 ) }
    dend_13 { pt3dadd( 17.1558, 34.8764, 16.7958, 0.29 ) }
    dend_13 { pt3dadd( 17.5776, 36.0169, 17.1601, 0.22 ) }
    dend_13 { pt3dadd( 17.6937, 36.3233, 17.2487, 0.88 ) }
    dend_13 { pt3dadd( 17.7434, 36.439, 17.2727, 0.88 ) }
    dend_13 { pt3dadd( 17.8859, 36.7384, 17.3169, 0.88 ) }
    dend_13 { pt3dadd( 17.9736, 36.9053, 17.3251, 0.88 ) }
    dend_13 { pt3dadd( 18.284, 37.4523, 17.3781, 0.52 ) }
    dend_13 { pt3dadd( 18.4903, 37.8306, 17.4802, 0.15 ) }
    dend_13 { pt3dadd( 18.7718, 38.3845, 17.6745, 0.15 ) }
    dend_13 { pt3dadd( 18.8974, 38.6715, 17.786, 0.15 ) }
    dend_13 { pt3dadd( 19.1745, 39.3895, 18.0695, 0.81 ) }
    dend_13 { pt3dadd( 19.2866, 39.7676, 18.2354, 0.96 ) }
    dend_13 { pt3dadd( 19.54, 40.9374, 18.7988, 0.15 ) }
    dend_13 { pt3dadd( 19.5518, 41.0118, 18.837, 0.15 ) }
    dend_13 { pt3dadd( 19.7058, 42.0038, 19.3502, 1.55 ) }
    dend_13 { pt3dadd( 19.8024, 42.5419, 19.6276, 2.28 ) }
    dend_13 { pt3dadd( 20.1686, 44.2174, 20.5119, 0.22 ) }
    dend_13 { pt3dadd( 20.4628, 45.3832, 21.183, 2.65 ) }
    dend_13 { pt3dadd( 20.9169, 47.015, 22.1552, 0.29 ) }
    dend_13 { pt3dadd( 21.095, 47.578, 22.5049, 0.15 ) }
    dend_13 { pt3dadd( 21.2277, 47.9694, 22.7601, 0.15 ) }
    dend_13 { pt3dadd( 21.8013, 49.5255, 23.8104, 2.58 ) }
    dend_13 { pt3dadd( 22.5181, 51.1596, 24.9327, 0.15 ) }
    dend_13 { pt3dadd( 22.6727, 51.4679, 25.1525, 0.37 ) }
    dend_13 { pt3dadd( 22.8746, 51.8336, 25.4311, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.812, 25.9664, 15.3756, 0.29 ) }
    dend_12 { pt3dadd( 12.5696, 27.0284, 15.8429, 0.29 ) }
    dend_12 { pt3dadd( 11.7763, 27.8218, 16.129, 0.29 ) }
    dend_12 { pt3dadd( 11.3349, 28.3383, 16.2817, 0.29 ) }
    dend_12 { pt3dadd( 10.9309, 28.8655, 16.4164, 0.88 ) }
    dend_12 { pt3dadd( 10.8963, 28.9276, 16.4273, 0.88 ) }
    dend_12 { pt3dadd( 10.7071, 29.3886, 16.5285, 0.88 ) }
    dend_12 { pt3dadd( 10.6642, 29.6037, 16.5616, 0.88 ) }
    dend_12 { pt3dadd( 10.6514, 29.8911, 16.6143, 0.88 ) }
    dend_12 { pt3dadd( 10.6534, 29.9693, 16.6363, 0.88 ) }
    dend_12 { pt3dadd( 10.7198, 31.0232, 16.9793, 0.44 ) }
    dend_12 { pt3dadd( 10.7904, 31.8967, 17.2678, 0.44 ) }
    dend_12 { pt3dadd( 10.7953, 31.9624, 17.2959, 0.44 ) }
    dend_12 { pt3dadd( 10.8057, 32.7751, 17.6675, 0.44 ) }
    dend_12 { pt3dadd( 10.7535, 34.088, 18.4031, 1.77 ) }
    dend_12 { pt3dadd( 10.7506, 34.6371, 18.7407, 2.65 ) }
    dend_12 { pt3dadd( 10.7727, 35.1316, 19.0673, 3.02 ) }
    dend_12 { pt3dadd( 11.001, 37.3219, 20.5065, 0.22 ) }
    dend_12 { pt3dadd( 11.2317, 38.4635, 21.3226, 1.03 ) }
    dend_12 { pt3dadd( 11.6778, 40.0528, 22.5184, 0.29 ) }
    dend_12 { pt3dadd( 12.0679, 41.1574, 23.4052, 0.22 ) }
    dend_12 { pt3dadd( 12.3442, 41.8119, 23.9521, 1.92 ) }
    dend_12 { pt3dadd( 12.6788, 42.4682, 24.4965, 2.28 ) }
    dend_12 { pt3dadd( 13.7476, 44.1486, 25.8381, 0.22 ) }
    dend_12 { pt3dadd( 14.0356, 44.6142, 26.261, 0.22 ) }
    dend_12 { pt3dadd( 14.5266, 45.6067, 27.2566, 1.11 ) }
    dend_12 { pt3dadd( 14.638, 45.9647, 27.6539, 1.55 ) }
    dend_12 { pt3dadd( 14.7319, 46.4432, 28.2411, 1.84 ) }
    dend_12 { pt3dadd( 14.735, 46.4874, 28.2995, 1.84 ) }
    dend_12 { pt3dadd( 14.6889, 48.6663, 31.2954, 0.29 ) }
    dend_12 { pt3dadd( 14.5969, 49.6781, 32.7363, 0.29 ) }
    dend_12 { pt3dadd( 14.4457, 50.6213, 34.0634, 2.65 ) }
    dend_12 { pt3dadd( 14.2778, 51.3819, 35.1168, 2.36 ) }
    dend_12 { pt3dadd( 13.9089, 52.6851, 36.8729, 0.37 ) }
    dend_12 { pt3dadd( 13.8956, 52.7239, 36.9196, 0.37 ) }
    dend_12 { pt3dadd( 13.6492, 53.2595, 37.4133, 0.22 ) }
    dend_12 { pt3dadd( 13.3603, 53.7565, 37.7767, 0.66 ) }
    dend_12 { pt3dadd( 13.0162, 54.2994, 38.0952, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 12.6642, 54.8472, 38.3564, 0.96 ) }
    dend_12 { pt3dadd( 12.1309, 55.6712, 38.7035, 0.22 ) }
    dend_12 { pt3dadd( 11.7405, 56.2962, 39.0071, 0.22 ) }
    dend_12 { pt3dadd( 11.0704, 57.3921, 39.6388, 2.43 ) }
    dend_12 { pt3dadd( 9.99245, 59.0552, 40.8503, 0.22 ) }
    dend_12 { pt3dadd( 9.82098, 59.3142, 41.0562, 0.88 ) }
    dend_12 { pt3dadd( 9.62038, 59.6236, 41.3078, 1.03 ) }
    dend_12 { pt3dadd( 8.92882, 60.6969, 42.2299, 0.66 ) }
    dend_12 { pt3dadd( 8.31751, 61.7065, 43.3535, 1.62 ) }
    dend_12 { pt3dadd( 7.8834, 62.6299, 44.5211, 1.62 ) }
    dend_12 { pt3dadd( 7.59655, 63.5206, 45.7001, 0.37 ) }
    dend_12 { pt3dadd( 7.54785, 63.8855, 46.1779, 2.06 ) }
    dend_12 { pt3dadd( 7.54756, 63.9241, 46.2267, 2.06 ) }
    dend_12 { pt3dadd( 7.77679, 66.5988, 49.2486, 1.62 ) }
    dend_12 { pt3dadd( 7.95447, 67.6314, 50.4006, 0.22 ) }
    dend_12 { pt3dadd( 8.10385, 68.265, 51.0952, 2.06 ) }
    dend_12 { pt3dadd( 8.6884, 70.2227, 53.3862, 0.29 ) }
    dend_12 { pt3dadd( 8.77883, 70.516, 53.724, 0.29 ) }
    dend_12 { pt3dadd( 9.05578, 71.4031, 54.6312, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.4033, 23.6973, 1.84902, 1.18 ) }
    dend_2 { pt3dadd( -15.3909, 25.5894, -1.60609, 1.18 ) }
    dend_2 { pt3dadd( -16.1106, 26.061, -2.32508, 1.18 ) }
    dend_2 { pt3dadd( -17.0345, 26.677, -3.1349, 1.4 ) }
    dend_2 { pt3dadd( -17.9769, 27.3297, -3.85466, 1.4 ) }
    dend_2 { pt3dadd( -19.1808, 28.2268, -4.77917, 1.03 ) }
    dend_2 { pt3dadd( -20.2349, 29.0705, -5.5661, 0.66 ) }
    dend_2 { pt3dadd( -21.0902, 29.834, -6.06684, 0.66 ) }
    dend_2 { pt3dadd( -21.6743, 30.4227, -6.4204, 1.11 ) }
    dend_2 { pt3dadd( -22.4954, 31.3592, -6.85962, 0.81 ) }
    dend_2 { pt3dadd( -24.29, 33.6891, -7.66792, 0.66 ) }
    dend_2 { pt3dadd( -25.0576, 34.7959, -7.90636, 0.66 ) }
    dend_2 { pt3dadd( -25.6328, 35.7132, -8.02166, 0.66 ) }
    dend_2 { pt3dadd( -26.4442, 37.0934, -8.11409, 1.25 ) }
    dend_2 { pt3dadd( -27.2658, 38.6109, -8.05904, 1.62 ) }
    dend_2 { pt3dadd( -27.9545, 39.9686, -7.84673, 1.99 ) }
    dend_2 { pt3dadd( -28.4383, 40.9687, -7.56322, 1.99 ) }
    dend_2 { pt3dadd( -28.5285, 41.1589, -7.50819, 1.99 ) }
    dend_2 { pt3dadd( -28.9339, 42.0318, -7.26386, 1.84 ) }
    dend_2 { pt3dadd( -29.5705, 43.4166, -6.94046, 1.03 ) }
    dend_2 { pt3dadd( -30.0728, 44.5261, -6.77085, 0.74 ) }
    dend_2 { pt3dadd( -30.6456, 45.8148, -6.63027, 0.74 ) }
    dend_2 { pt3dadd( -31.0735, 46.7959, -6.53904, 0.44 ) }
    dend_2 { pt3dadd( -31.3873, 47.5116, -6.48119, 0.59 ) }
    dend_2 { pt3dadd( -31.7942, 48.3502, -6.45494, 0.59 ) }
    dend_2 { pt3dadd( -32.2335, 49.1371, -6.48279, 0.59 ) }
    dend_2 { pt3dadd( -32.2908, 49.2254, -6.48976, 0.59 ) }
    dend_2 { pt3dadd( -32.9651, 50.1235, -6.59556, 0.44 ) }
    dend_2 { pt3dadd( -33.4736, 50.7339, -6.68565, 0.29 ) }
    dend_2 { pt3dadd( -34.4103, 51.7852, -6.91918, 0.29 ) }
    dend_2 { pt3dadd( -35.0985, 52.5846, -7.13091, 1.47 ) }
    dend_2 { pt3dadd( -35.8287, 53.5111, -7.39262, 2.06 ) }
    dend_2 { pt3dadd( -36.073, 53.9002, -7.50554, 2.21 ) }
    dend_2 { pt3dadd( -36.2601, 54.3439, -7.66435, 2.21 ) }
    dend_2 { pt3dadd( -36.5843, 55.674, -8.1825, 1.18 ) }
    dend_2 { pt3dadd( -36.7217, 57.1858, -8.77534, 0.37 ) }
    dend_2 { pt3dadd( -36.7063, 57.9994, -9.10762, 0.37 ) }
    dend_2 { pt3dadd( -36.538, 59.5844, -9.72468, 0.37 ) }
    dend_2 { pt3dadd( -36.2801, 61.4402, -10.4523, 1.33 ) }
    dend_2 { pt3dadd( -36.2037, 61.9775, -10.6358, 1.77 ) }
    dend_2 { pt3dadd( -36.1899, 62.0918, -10.6672, 1.77 ) }
    dend_2 { pt3dadd( -36.162, 62.6864, -10.7537, 1.77 ) }
    dend_2 { pt3dadd( -36.2484, 64.0132, -10.7119, 0.81 ) }
    dend_2 { pt3dadd( -36.4466, 65.4527, -10.466, 0.29 ) }
    dend_2 { pt3dadd( -36.578, 66.654, -10.04, 0.74 ) }
    dend_2 { pt3dadd( -36.6318, 67.4136, -9.7246, 0.74 ) }
    dend_2 { pt3dadd( -36.6861, 69.2673, -8.88425, 0.37 ) }
    dend_2 { pt3dadd( -36.667, 70.5108, -8.27909, 0.37 ) }
    dend_2 { pt3dadd( -36.5956, 71.4974, -7.75848, 0.37 ) }
    dend_2 { pt3dadd( -36.3149, 73.4713, -6.6227, 1.4 ) }
    dend_2 { pt3dadd( -36.1437, 74.2387, -6.25656, 2.06 ) }
    dend_2 { pt3dadd( -36.0223, 74.7253, -6.06586, 2.5 ) }
    dend_2 { pt3dadd( -35.8359, 75.4661, -5.84949, 2.5 ) }
    dend_2 { pt3dadd( -35.821, 75.5531, -5.82796, 2.5 ) }
    dend_2 { pt3dadd( -35.6048, 78.5937, -5.22475, 0.44 ) }
    dend_2 { pt3dadd( -35.7124, 80.4641, -5.00861, 0.37 ) }
    dend_2 { pt3dadd( -35.8673, 81.4645, -4.8969, 0.37 ) }
    dend_2 { pt3dadd( -35.8972, 81.5898, -4.88384, 0.37 ) }
    dend_2 { pt3dadd( -36.4461, 83.4014, -4.73908, 0.37 ) }
    dend_2 { pt3dadd( -36.5142, 83.599, -4.73176, 0.37 ) }
    dend_2 { pt3dadd( -36.8805, 84.5111, -4.76822, 0.37 ) }
    dend_2 { pt3dadd( -36.9055, 84.598, -4.77492, 0.37 ) }
    dend_2 { pt3dadd( -37.0431, 85.5434, -4.98271, 1.47 ) }
    dend_2 { pt3dadd( -37.1306, 86.6302, -5.31306, 2.21 ) }
    dend_2 { pt3dadd( -37.1546, 87.3705, -5.58289, 2.65 ) }
    dend_2 { pt3dadd( -37.1998, 88.0952, -5.86308, 2.5 ) }
    dend_2 { pt3dadd( -37.4328, 90.4518, -6.79736, 0.29 ) }
    dend_2 { pt3dadd( -37.614, 91.492, -7.26339, 0.29 ) }
    dend_2 { pt3dadd( -37.8667, 92.4645, -7.74257, 0.29 ) }
    dend_2 { pt3dadd( -38.114, 93.1316, -8.05774, 0.29 ) }
    dend_2 { pt3dadd( -38.4455, 93.8994, -8.38563, 1.33 ) }
    dend_2 { pt3dadd( -38.9142, 94.9215, -8.75613, 2.28 ) }
    dend_2 { pt3dadd( -39.5197, 96.2389, -9.10967, 2.73 ) }
    dend_2 { pt3dadd( -39.8299, 96.9814, -9.30029, 2.43 ) }
    dend_2 { pt3dadd( -40.506, 98.7446, -9.80311, 0.29 ) }
    dend_2 { pt3dadd( -40.7989, 99.4977, -10.0541, 0.29 ) }
    dend_2 { pt3dadd( -41.0479, 100.185, -10.2898, 0.29 ) }
    dend_2 { pt3dadd( -41.2345, 100.735, -10.4741, 0.29 ) }
    dend_2 { pt3dadd( -41.6209, 102.039, -10.8318, 0.88 ) }
    dend_2 { pt3dadd( -41.7889, 102.587, -11.0284, 1.55 ) }
    dend_2 { pt3dadd( -42.1788, 103.543, -11.5746, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -12.4033, 23.6973, 1.84902, 0.74 ) }
    dend_1 { pt3dadd( -13.7663, 23.8718, 1.85074, 0.74 ) }
    dend_1 { pt3dadd( -14.8982, 24.058, 1.84761, 0.74 ) }
    dend_1 { pt3dadd( -15.928, 24.2432, 1.84916, 0.59 ) }
    dend_1 { pt3dadd( -16.5493, 24.3658, 1.85468, 0.74 ) }
    dend_1 { pt3dadd( -17.5239, 24.5713, 1.87266, 0.74 ) }
    dend_1 { pt3dadd( -18.2555, 24.7324, 1.89427, 1.03 ) }
    dend_1 { pt3dadd( -19.208, 24.9697, 1.93376, 1.33 ) }
    dend_1 { pt3dadd( -19.9903, 25.1596, 1.97862, 1.55 ) }
    dend_1 { pt3dadd( -20.9332, 25.3633, 2.05252, 1.4 ) }
    dend_1 { pt3dadd( -22.0827, 25.5765, 2.19533, 1.25 ) }
    dend_1 { pt3dadd( -23.5475, 25.8406, 2.48297, 0.74 ) }
    dend_1 { pt3dadd( -24.3039, 25.9928, 2.69604, 0.96 ) }
    dend_1 { pt3dadd( -25.1063, 26.1705, 2.99895, 0.96 ) }
    dend_1 { pt3dadd( -26.2719, 26.4901, 3.60768, 0.52 ) }
    dend_1 { pt3dadd( -27.2816, 26.8551, 4.34363, 0.52 ) }
    dend_1 { pt3dadd( -28.0025, 27.2422, 5.09334, 0.88 ) }
    dend_1 { pt3dadd( -28.4936, 27.6177, 5.75942, 0.59 ) }
    dend_1 { pt3dadd( -28.5276, 27.6486, 5.80447, 0.59 ) }
    dend_1 { pt3dadd( -29.0397, 28.1918, 6.45546, 0.29 ) }
    dend_1 { pt3dadd( -29.4224, 28.5602, 6.75232, 0.29 ) }
    dend_1 { pt3dadd( -30.1998, 28.9969, 6.85592, 0.74 ) }
    dend_1 { pt3dadd( -30.8962, 29.2497, 6.79069, 0.96 ) }
    dend_1 { pt3dadd( -32.2197, 29.5791, 6.57913, 0.59 ) }
    dend_1 { pt3dadd( -32.3039, 29.5934, 6.56188, 0.59 ) }
    dend_1 { pt3dadd( -33.3546, 29.6928, 6.30141, 0.29 ) }
    dend_1 { pt3dadd( -34.0462, 29.7239, 6.11863, 0.29 ) }
    dend_1 { pt3dadd( -35.005, 29.7104, 5.86552, 1.62 ) }
    dend_1 { pt3dadd( -36.0136, 29.6323, 5.66666, 2.43 ) }
    dend_1 { pt3dadd( -36.8701, 29.529, 5.56706, 2.65 ) }
    dend_1 { pt3dadd( -37.6261, 29.4213, 5.51036, 2.65 ) }
    dend_1 { pt3dadd( -37.6904, 29.4124, 5.5082, 2.65 ) }
    dend_1 { pt3dadd( -39.4373, 29.2288, 5.54482, 1.11 ) }
    dend_1 { pt3dadd( -40.7898, 29.1614, 5.67451, 0.37 ) }
    dend_1 { pt3dadd( -41.6592, 29.1907, 5.80567, 0.37 ) }
    dend_1 { pt3dadd( -42.5755, 29.3105, 5.99794, 0.37 ) }
    dend_1 { pt3dadd( -43.354, 29.5247, 6.2555, 0.37 ) }
    dend_1 { pt3dadd( -44.2194, 29.9156, 6.67242, 0.81 ) }
    dend_1 { pt3dadd( -44.8469, 30.318, 7.09604, 1.47 ) }
    dend_1 { pt3dadd( -45.2974, 30.6392, 7.47054, 1.69 ) }
    dend_1 { pt3dadd( -45.5729, 30.8207, 7.71892, 1.69 ) }
    dend_1 { pt3dadd( -46.7678, 31.4815, 8.841, 0.66 ) }
    dend_1 { pt3dadd( -47.6795, 31.8781, 9.69761, 0.37 ) }
    dend_1 { pt3dadd( -48.2953, 32.0858, 10.2741, 0.37 ) }
    dend_1 { pt3dadd( -49.4023, 32.322, 11.2494, 1.25 ) }
    dend_1 { pt3dadd( -50.2305, 32.3826, 11.9833, 2.36 ) }
    dend_1 { pt3dadd( -50.9548, 32.3929, 12.6377, 2.36 ) }
    dend_1 { pt3dadd( -51.0084, 32.3915, 12.6912, 2.36 ) }
    dend_1 { pt3dadd( -51.4648, 32.376, 13.188, 2.21 ) }
    dend_1 { pt3dadd( -52.5949, 32.3738, 14.5569, 0.37 ) }
    dend_1 { pt3dadd( -53.8783, 32.404, 16.2681, 0.59 ) }
    dend_1 { pt3dadd( -54.6526, 32.4373, 17.3382, 0.37 ) }
    dend_1 { pt3dadd( -55.9634, 32.5075, 19.0928, 1.18 ) }
    dend_1 { pt3dadd( -56.3154, 32.5274, 19.5342, 1.4 ) }
    dend_1 { pt3dadd( -57.0535, 32.569, 20.4217, 1.25 ) }
    dend_1 { pt3dadd( -57.0996, 32.5714, 20.4818, 1.25 ) }
    dend_1 { pt3dadd( -57.7267, 32.5739, 21.3931, 0.52 ) }
    dend_1 { pt3dadd( -58.4113, 32.5114, 22.4248, 2.14 ) }
    dend_1 { pt3dadd( -59.0389, 32.469, 23.4025, 2.95 ) }
    dend_1 { pt3dadd( -59.8895, 32.3839, 24.8352, 1.92 ) }
    dend_1 { pt3dadd( -61.1923, 32.2953, 26.9813, 1.03 ) }
    dend_1 { pt3dadd( -62.6583, 32.2913, 29.3927, 0.44 ) }
    dend_1 { pt3dadd( -62.9946, 32.294, 29.9821, 0.44 ) }
    dend_1 { pt3dadd( -63.9451, 32.3147, 31.6913, 0.44 ) }
    dend_1 { pt3dadd( -65.115, 32.3635, 33.7886, 2.36 ) }
    dend_1 { pt3dadd( -66.4992, 32.4786, 36.0565, 0.22 ) }
    dend_1 { pt3dadd( -67.1444, 32.5731, 36.924, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.361546 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 7.02409, -28.138, 6.96857, 0.37 ) }
    dend_48 { pt3dadd( 7.84615, -28.723, 6.50963, 0.37 ) }
    dend_48 { pt3dadd( 8.53026, -29.1184, 6.09888, 0.29 ) }
    dend_48 { pt3dadd( 8.95234, -29.3399, 5.84254, 0.29 ) }
    dend_48 { pt3dadd( 10.1864, -29.8827, 5.12648, 0.74 ) }
    dend_48 { pt3dadd( 10.2411, -29.9019, 5.09727, 0.74 ) }
    dend_48 { pt3dadd( 11.2556, -30.189, 4.59139, 0.66 ) }
    dend_48 { pt3dadd( 12.1816, -30.3514, 4.0944, 0.29 ) }
    dend_48 { pt3dadd( 12.2488, -30.3516, 4.06205, 0.29 ) }
    dend_48 { pt3dadd( 12.8672, -30.247, 3.85049, 0.29 ) }
    dend_48 { pt3dadd( 13.4367, -30.0336, 3.78992, 0.74 ) }
    dend_48 { pt3dadd( 13.6027, -29.9451, 3.79424, 0.74 ) }
    dend_48 { pt3dadd( 13.9113, -29.7535, 3.85301, 1.03 ) }
    dend_48 { pt3dadd( 14.0287, -29.6889, 3.88527, 1.03 ) }
    dend_48 { pt3dadd( 14.3335, -29.5818, 3.96552, 1.03 ) }
    dend_48 { pt3dadd( 14.996, -29.4689, 4.1343, 0.59 ) }
    dend_48 { pt3dadd( 15.8126, -29.4489, 4.33868, 0.22 ) }
    dend_48 { pt3dadd( 16.5092, -29.5086, 4.53093, 0.22 ) }
    dend_48 { pt3dadd( 17.0149, -29.5862, 4.6785, 0.88 ) }
    dend_48 { pt3dadd( 17.98, -29.7339, 4.93551, 1.84 ) }
    dend_48 { pt3dadd( 18.4769, -29.8175, 5.06131, 2.14 ) }
    dend_48 { pt3dadd( 19.1679, -29.9328, 5.24824, 2.36 ) }
    dend_48 { pt3dadd( 20.3545, -30.0767, 5.61281, 0.66 ) }
    dend_48 { pt3dadd( 21.2821, -30.1037, 5.92945, 0.59 ) }
    dend_48 { pt3dadd( 22.658, -30.0302, 6.44105, 0.52 ) }
    dend_48 { pt3dadd( 22.7179, -30.0203, 6.46525, 0.52 ) }
    dend_48 { pt3dadd( 23.4188, -29.8253, 6.73422, 1.33 ) }
    dend_48 { pt3dadd( 24.2679, -29.4709, 7.0374, 1.77 ) }
    dend_48 { pt3dadd( 24.7817, -29.195, 7.244, 1.77 ) }
    dend_48 { pt3dadd( 24.9807, -29.0895, 7.33371, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 25.6683, -28.7892, 7.6632, 1.25 ) }
    dend_48 { pt3dadd( 26.6774, -28.4342, 8.11739, 0.52 ) }
    dend_48 { pt3dadd( 27.6578, -28.17, 8.51594, 0.29 ) }
    dend_48 { pt3dadd( 28.6653, -27.973, 8.91061, 0.29 ) }
    dend_48 { pt3dadd( 29.6381, -27.8244, 9.30669, 0.22 ) }
    dend_48 { pt3dadd( 30.5719, -27.7288, 9.5795, 0.22 ) }
    dend_48 { pt3dadd( 30.645, -27.7229, 9.59306, 0.22 ) }
    dend_48 { pt3dadd( 31.1313, -27.6593, 9.62361, 1.03 ) }
    dend_48 { pt3dadd( 31.553, -27.5954, 9.59404, 1.47 ) }
    dend_48 { pt3dadd( 32.1134, -27.4848, 9.49954, 1.47 ) }
    dend_48 { pt3dadd( 33.909, -27.0729, 9.11737, 0.59 ) }
    dend_48 { pt3dadd( 34.6812, -26.9059, 8.92046, 0.22 ) }
    dend_48 { pt3dadd( 35.5818, -26.7648, 8.70719, 0.22 ) }
    dend_48 { pt3dadd( 36.1891, -26.7064, 8.56534, 0.22 ) }
    dend_48 { pt3dadd( 36.2524, -26.7038, 8.55196, 0.22 ) }
    dend_48 { pt3dadd( 37.0581, -26.7344, 8.43678, 0.22 ) }
    dend_48 { pt3dadd( 37.1221, -26.7389, 8.42828, 0.22 ) }
    dend_48 { pt3dadd( 38.0454, -26.8195, 8.20372, 1.03 ) }
    dend_48 { pt3dadd( 38.8376, -26.9127, 7.9894, 1.62 ) }
    dend_48 { pt3dadd( 38.8996, -26.9174, 7.97132, 1.62 ) }
    dend_48 { pt3dadd( 39.1904, -26.9372, 7.89202, 1.62 ) }
    dend_48 { pt3dadd( 40.9233, -27.0459, 7.4933, 0.15 ) }
    dend_48 { pt3dadd( 40.9871, -27.0527, 7.48148, 0.15 ) }
    dend_48 { pt3dadd( 41.8259, -27.1948, 7.34826, 0.15 ) }
    dend_48 { pt3dadd( 41.8978, -27.2092, 7.34001, 0.15 ) }
    dend_48 { pt3dadd( 43.1528, -27.4729, 7.22614, 1.77 ) }
    dend_48 { pt3dadd( 43.9857, -27.6904, 7.20314, 2.73 ) }
    dend_48 { pt3dadd( 44.4782, -27.8371, 7.26344, 3.02 ) }
    dend_48 { pt3dadd( 47.071, -28.6143, 7.77533, 0.22 ) }
    dend_48 { pt3dadd( 47.5763, -28.7592, 7.92772, 0.22 ) }
    dend_48 { pt3dadd( 47.6256, -28.773, 7.94849, 0.22 ) }
    dend_48 { pt3dadd( 48.7758, -29.0692, 8.66303, 0.22 ) }
    dend_48 { pt3dadd( 50.2514, -29.3377, 9.8673, 0.22 ) }
    dend_48 { pt3dadd( 50.3417, -29.3508, 9.95953, 0.22 ) }
    dend_48 { pt3dadd( 50.8984, -29.4331, 10.6853, 1.55 ) }
    dend_48 { pt3dadd( 51.4536, -29.513, 11.375, 2.21 ) }
    dend_48 { pt3dadd( 51.9906, -29.585, 11.9891, 1.4 ) }
    dend_48 { pt3dadd( 52.967, -29.6892, 12.9503, 0.22 ) }
    dend_48 { pt3dadd( 53.6384, -29.8096, 13.5562, 0.22 ) }
    dend_48 { pt3dadd( 54.19, -29.9316, 14.0896, 0.22 ) }
    dend_48 { pt3dadd( 54.5048, -30.0281, 14.4394, 0.44 ) }
    dend_48 { pt3dadd( 54.5453, -30.0428, 14.4882, 0.44 ) }
    dend_48 { pt3dadd( 54.9352, -30.2243, 15.0364, 0.22 ) }
    dend_48 { pt3dadd( 55.8036, -30.6941, 16.3546, 1.62 ) }
    dend_48 { pt3dadd( 56.1389, -30.8975, 16.8712, 2.14 ) }
    dend_48 { pt3dadd( 57.426, -31.7492, 18.8045, 0.22 ) }
    dend_48 { pt3dadd( 57.7814, -32.0049, 19.3243, 1.47 ) }
    dend_48 { pt3dadd( 58.9471, -32.892, 20.9572, 1.11 ) }
    dend_48 { pt3dadd( 59.3129, -33.192, 21.4362, 1.33 ) }
    dend_48 { pt3dadd( 60.3386, -34.0142, 22.5593, 0.22 ) }
    dend_48 { pt3dadd( 60.8492, -34.4155, 23.1043, 0.22 ) }
    dend_48 { pt3dadd( 61.1252, -34.6212, 23.3778, 1.47 ) }
    dend_48 { pt3dadd( 61.3787, -34.8009, 23.6786, 2.14 ) }
    dend_48 { pt3dadd( 61.8538, -35.106, 24.2692, 2.14 ) }
    dend_48 { pt3dadd( 62.9968, -35.869, 25.8534, 0.22 ) }
    dend_48 { pt3dadd( 63.9439, -36.5184, 27.2903, 1.77 ) }
    dend_48 { pt3dadd( 64.155, -36.6738, 27.6313, 2.36 ) }
    dend_48 { pt3dadd( 65.6545, -37.8845, 30.2731, 0.29 ) }
    dend_48 { pt3dadd( 66.1302, -38.2936, 31.1431, 0.29 ) }
    dend_48 { pt3dadd( 66.4404, -38.591, 31.7386, 0.29 ) }
    dend_48 { pt3dadd( 66.4675, -38.6207, 31.7892, 0.29 ) }
    dend_48 { pt3dadd( 66.7383, -38.9236, 32.2566, 0.29 ) }
    dend_48 { pt3dadd( 67.6895, -39.9858, 33.8301, 2.28 ) }
    dend_48 { pt3dadd( 67.9856, -40.2965, 34.2774, 2.65 ) }
    dend_48 { pt3dadd( 69.0858, -41.4137, 36.0084, 0.22 ) }
    dend_48 { pt3dadd( 69.4881, -41.7993, 36.6353, 0.22 ) }
    dend_48 { pt3dadd( 70.1927, -42.4121, 37.6499, 0.96 ) }
    dend_48 { pt3dadd( 70.5763, -42.7, 38.1493, 1.47 ) }
    dend_48 { pt3dadd( 71.9794, -43.5424, 39.6683, 0.22 ) }
    dend_48 { pt3dadd( 72.7127, -43.876, 40.3694, 0.81 ) }
    dend_48 { pt3dadd( 72.8183, -43.9098, 40.4554, 0.81 ) }
    dend_48 { pt3dadd( 74.1729, -44.1856, 41.3766, 0.22 ) }
    dend_48 { pt3dadd( 74.9037, -44.2658, 41.7399, 0.22 ) }
    dend_48 { pt3dadd( 76.5267, -44.3586, 42.4473, 0.22 ) }
    dend_48 { pt3dadd( 77.4277, -44.3375, 42.7273, 0.22 ) }
    dend_48 { pt3dadd( 77.4909, -44.333, 42.7433, 0.22 ) }
    dend_48 { pt3dadd( 78.9663, -44.1919, 43.0676, 0.96 ) }
    dend_48 { pt3dadd( 79.883, -44.0461, 43.1747, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.02409, -28.138, 6.96857, 1.25 ) }
    dend_39 { pt3dadd( 6.60726, -29.3581, 6.8682, 1.25 ) }
    dend_39 { pt3dadd( 6.28859, -30.5951, 6.74408, 0.81 ) }
    dend_39 { pt3dadd( 6.14566, -31.5647, 6.62383, 0.81 ) }
    dend_39 { pt3dadd( 6.1029, -32.6812, 6.47872, 0.96 ) }
    dend_39 { pt3dadd( 6.16135, -33.8203, 6.31569, 0.74 ) }
    dend_39 { pt3dadd( 6.20567, -34.684, 6.19209, 1.11 ) }
    dend_39 { pt3dadd( 6.30555, -35.26, 6.07275, 1.69 ) }
    dend_39 { pt3dadd( 6.63019, -36.1915, 5.85561, 2.36 ) }
    dend_39 { pt3dadd( 7.02306, -36.8951, 5.67951, 2.65 ) }
    dend_39 { pt3dadd( 7.3732, -37.3215, 5.57376, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -7.87423, -20.2919, 12.6294, 0.81 ) }
    dend_37 { pt3dadd( -8.59661, -19.3913, 12.3134, 0.81 ) }
    dend_37 { pt3dadd( -9.12391, -18.6433, 11.9867, 0.66 ) }
    dend_37 { pt3dadd( -9.63698, -17.8642, 11.6285, 0.66 ) }
    dend_37 { pt3dadd( -9.92281, -17.4328, 11.3938, 0.96 ) }
    dend_37 { pt3dadd( -10.4485, -16.6991, 10.9477, 0.44 ) }
    dend_37 { pt3dadd( -10.8494, -16.1691, 10.6027, 0.44 ) }
    dend_37 { pt3dadd( -11.4568, -15.3774, 9.98604, 0.59 ) }
    dend_37 { pt3dadd( -11.6938, -15.1271, 9.73637, 0.59 ) }
    dend_37 { pt3dadd( -12.2827, -14.7721, 9.20754, 0.59 ) }
    dend_37 { pt3dadd( -12.7887, -14.6619, 8.85409, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -12.8479, -14.6661, 8.82376, 0.59 ) }
    dend_37 { pt3dadd( -13.4374, -14.8039, 8.57996, 0.59 ) }
    dend_37 { pt3dadd( -14.248, -15.0622, 8.34879, 1.33 ) }
    dend_37 { pt3dadd( -14.9618, -15.3055, 8.19313, 1.69 ) }
    dend_37 { pt3dadd( -15.7026, -15.5509, 8.09813, 1.55 ) }
    dend_37 { pt3dadd( -16.597, -15.8247, 8.10448, 0.88 ) }
    dend_37 { pt3dadd( -17.4104, -16.0096, 8.35237, 0.44 ) }
    dend_37 { pt3dadd( -18.1442, -16.1448, 8.80875, 0.44 ) }
    dend_37 { pt3dadd( -18.4554, -16.2089, 9.09662, 0.74 ) }
    dend_37 { pt3dadd( -18.8972, -16.3311, 9.63564, 0.88 ) }
    dend_37 { pt3dadd( -19.8972, -16.6702, 11.0329, 1.03 ) }
    dend_37 { pt3dadd( -21.5016, -17.3153, 13.4635, 0.52 ) }
    dend_37 { pt3dadd( -22.2506, -17.657, 14.6483, 1.25 ) }
    dend_37 { pt3dadd( -22.9145, -18.0169, 15.7349, 1.25 ) }
    dend_37 { pt3dadd( -23.4754, -18.3769, 16.8052, 0.44 ) }
    dend_37 { pt3dadd( -23.8686, -18.6719, 17.6415, 0.44 ) }
    dend_37 { pt3dadd( -24.3478, -19.0145, 18.7705, 0.29 ) }
    dend_37 { pt3dadd( -25.0511, -19.4132, 20.6409, 1.99 ) }
    dend_37 { pt3dadd( -25.2569, -19.5089, 21.1688, 1.99 ) }
    dend_37 { pt3dadd( -26.7795, -20.1342, 24.8913, 1.99 ) }
    dend_37 { pt3dadd( -26.8051, -20.1436, 24.952, 1.99 ) }
    dend_37 { pt3dadd( -29.2454, -21.0023, 30.7147, 2.73 ) }
    dend_37 { pt3dadd( -32.1266, -21.9978, 37.2851, 1.4 ) }
    dend_37 { pt3dadd( -32.5736, -22.1468, 38.2424, 1.25 ) }
    dend_37 { pt3dadd( -33.0202, -22.2837, 39.0975, 0.22 ) }
    dend_37 { pt3dadd( -33.3423, -22.387, 39.6248, 0.22 ) }
    dend_37 { pt3dadd( -33.4909, -22.444, 39.8542, 1.11 ) }
    dend_37 { pt3dadd( -34.0302, -22.7247, 40.5273, 1.47 ) }
    dend_37 { pt3dadd( -35.7514, -23.8429, 42.2631, 1.18 ) }
    dend_37 { pt3dadd( -36.2277, -24.146, 42.7936, 1.99 ) }
    dend_37 { pt3dadd( -37.3626, -24.8444, 44.1221, 0.22 ) }
    dend_37 { pt3dadd( -38.0671, -25.2795, 44.946, 0.22 ) }
    dend_37 { pt3dadd( -38.2825, -25.411, 45.1862, 0.66 ) }
    dend_37 { pt3dadd( -39.1945, -25.9559, 46.1652, 0.66 ) }
    dend_37 { pt3dadd( -39.8416, -26.3418, 46.7204, 0.29 ) }
    dend_37 { pt3dadd( -40.5792, -26.7092, 47.3329, 1.33 ) }
    dend_37 { pt3dadd( -40.8376, -26.772, 47.4851, 1.62 ) }
    dend_37 { pt3dadd( -41.3295, -26.8384, 47.7475, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.87423, -20.2919, 12.6294, 1.62 ) }
    dend_34 { pt3dadd( -7.83018, -21.1923, 12.4891, 1.62 ) }
    dend_34 { pt3dadd( -7.8015, -21.9039, 12.3692, 1.33 ) }
    dend_34 { pt3dadd( -7.76368, -22.7876, 12.2063, 0.88 ) }
    dend_34 { pt3dadd( -7.70765, -23.7997, 12.01, 0.74 ) }
    dend_34 { pt3dadd( -7.63416, -25.0053, 11.7754, 0.74 ) }
    dend_34 { pt3dadd( -7.54677, -26.1208, 11.5783, 2.14 ) }
    dend_34 { pt3dadd( -7.44108, -27.1629, 11.429, 2.21 ) }
    dend_34 { pt3dadd( -7.27944, -28.3972, 11.3442, 1.47 ) }
    dend_34 { pt3dadd( -7.10523, -29.3384, 11.3706, 1.18 ) }
    dend_34 { pt3dadd( -6.96062, -29.8739, 11.4572, 0.88 ) }
    dend_34 { pt3dadd( -6.66324, -30.6771, 11.7648, 0.59 ) }
    dend_34 { pt3dadd( -6.25275, -31.5795, 12.2804, 0.59 ) }
    dend_34 { pt3dadd( -5.84029, -32.4245, 12.8771, 1.18 ) }
    dend_34 { pt3dadd( -5.67187, -32.7802, 13.1741, 1.47 ) }
    dend_34 { pt3dadd( -5.45723, -33.3136, 13.6484, 1.11 ) }
    dend_34 { pt3dadd( -5.22385, -34.2448, 14.4036, 0.74 ) }
    dend_34 { pt3dadd( -5.31602, -34.7669, 14.6261, 0.44 ) }
    dend_34 { pt3dadd( -5.7293, -35.3848, 14.5846, 0.44 ) }
    dend_34 { pt3dadd( -6.17459, -35.9082, 14.4337, 0.52 ) }
    dend_34 { pt3dadd( -6.70131, -36.419, 14.2248, 0.52 ) }
    dend_34 { pt3dadd( -7.21245, -36.868, 14.0004, 1.18 ) }
    dend_34 { pt3dadd( -7.89928, -37.4697, 13.6772, 1.92 ) }
    dend_34 { pt3dadd( -8.59115, -38.1535, 13.3352, 2.5 ) }
    dend_34 { pt3dadd( -9.21978, -38.9035, 13.0012, 2.36 ) }
    dend_34 { pt3dadd( -9.91684, -39.9065, 12.6008, 2.06 ) }
    dend_34 { pt3dadd( -10.4361, -40.7953, 12.2728, 0.59 ) }
    dend_34 { pt3dadd( -10.8746, -41.6234, 11.9982, 0.52 ) }
    dend_34 { pt3dadd( -11.2961, -42.5177, 11.7373, 0.44 ) }
    dend_34 { pt3dadd( -11.6766, -43.4661, 11.4626, 1.4 ) }
    dend_34 { pt3dadd( -11.9659, -44.3188, 11.2285, 1.84 ) }
    dend_34 { pt3dadd( -12.2395, -45.295, 10.9692, 1.84 ) }
    dend_34 { pt3dadd( -12.4388, -46.074, 10.7619, 1.69 ) }
    dend_34 { pt3dadd( -12.6416, -46.9322, 10.5352, 1.18 ) }
    dend_34 { pt3dadd( -12.8122, -47.7987, 10.3003, 0.74 ) }
    dend_34 { pt3dadd( -12.8821, -48.3446, 10.1374, 0.66 ) }
    dend_34 { pt3dadd( -12.9225, -49.1508, 9.87204, 0.59 ) }
    dend_34 { pt3dadd( -12.8954, -49.8485, 9.60505, 0.52 ) }
    dend_34 { pt3dadd( -12.846, -50.3421, 9.38494, 0.37 ) }
    dend_34 { pt3dadd( -12.7369, -51.2298, 8.9645, 0.29 ) }
    dend_34 { pt3dadd( -12.6463, -52.0519, 8.56647, 0.29 ) }
    dend_34 { pt3dadd( -12.6419, -52.1118, 8.5357, 0.29 ) }
    dend_34 { pt3dadd( -12.6368, -53.2552, 7.93055, 1.77 ) }
    dend_34 { pt3dadd( -12.7102, -54.217, 7.47866, 2.36 ) }
    dend_34 { pt3dadd( -12.7157, -54.2628, 7.45904, 2.36 ) }
    dend_34 { pt3dadd( -12.7982, -54.7962, 7.26597, 2.58 ) }
    dend_34 { pt3dadd( -12.8908, -55.377, 7.07023, 2.58 ) }
    dend_34 { pt3dadd( -13.0465, -56.3103, 6.74754, 1.84 ) }
    dend_34 { pt3dadd( -13.1999, -57.3216, 6.41229, 0.81 ) }
    dend_34 { pt3dadd( -13.313, -58.2315, 6.12462, 0.52 ) }
    dend_34 { pt3dadd( -13.3976, -59.0419, 5.90075, 0.44 ) }
    dend_34 { pt3dadd( -13.5046, -60.1423, 5.63655, 0.44 ) }
    dend_34 { pt3dadd( -13.5903, -61.0982, 5.47127, 0.37 ) }
    dend_34 { pt3dadd( -13.6405, -61.7252, 5.42102, 0.37 ) }
    dend_34 { pt3dadd( -13.6857, -62.3273, 5.41954, 0.37 ) }
    dend_34 { pt3dadd( -13.7506, -63.1503, 5.49619, 0.29 ) }
    dend_34 { pt3dadd( -13.7852, -63.8265, 5.59889, 0.29 ) }
    dend_34 { pt3dadd( -13.828, -64.8911, 5.87559, 1.99 ) }
    dend_34 { pt3dadd( -13.8666, -65.5821, 6.10929, 2.95 ) }
    dend_34 { pt3dadd( -13.9037, -66.0092, 6.27378, 2.95 ) }
    dend_34 { pt3dadd( -14.0308, -67.4313, 6.85764, 0.59 ) }
    dend_34 { pt3dadd( -14.0903, -68.2476, 7.2303, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -14.1552, -69.3497, 7.78732, 0.37 ) }
    dend_34 { pt3dadd( -14.1836, -70.1377, 8.20932, 0.37 ) }
    dend_34 { pt3dadd( -14.1586, -70.9018, 8.65111, 1.69 ) }
    dend_34 { pt3dadd( -14.1171, -71.3229, 8.91818, 2.58 ) }
    dend_34 { pt3dadd( -14.0161, -71.9474, 9.34208, 2.58 ) }
    dend_34 { pt3dadd( -13.8341, -72.9925, 10.0353, 0.29 ) }
    dend_34 { pt3dadd( -13.6972, -73.715, 10.4499, 0.29 ) }
    dend_34 { pt3dadd( -13.5404, -74.6809, 11.0198, 0.29 ) }
    dend_34 { pt3dadd( -13.4388, -75.4207, 11.4681, 0.66 ) }
    dend_34 { pt3dadd( -13.412, -75.6956, 11.6424, 0.74 ) }
    dend_34 { pt3dadd( -13.3621, -76.3987, 12.0964, 0.29 ) }
    dend_34 { pt3dadd( -13.3413, -77.0661, 12.5716, 0.29 ) }
    dend_34 { pt3dadd( -13.3792, -78.1809, 13.3664, 1.4 ) }
    dend_34 { pt3dadd( -13.3997, -78.5535, 13.6115, 1.92 ) }
    dend_34 { pt3dadd( -13.3983, -78.6031, 13.6419, 1.92 ) }
    dend_34 { pt3dadd( -13.3631, -78.8731, 13.8081, 1.92 ) }
    dend_34 { pt3dadd( -13.1152, -79.8447, 14.3574, 0.22 ) }
    dend_34 { pt3dadd( -13.0977, -79.8942, 14.3837, 0.22 ) }
    dend_34 { pt3dadd( -12.847, -80.5148, 14.7009, 0.66 ) }
    dend_34 { pt3dadd( -12.7399, -80.7644, 14.8346, 0.81 ) }
    dend_34 { pt3dadd( -12.3629, -81.5192, 15.256, 0.22 ) }
    dend_34 { pt3dadd( -11.9896, -82.2054, 15.6389, 2.14 ) }
    dend_34 { pt3dadd( -11.6595, -82.7592, 15.9431, 2.58 ) }
    dend_34 { pt3dadd( -10.827, -84.0569, 16.6864, 0.22 ) }
    dend_34 { pt3dadd( -10.4011, -84.6934, 17.0629, 0.22 ) }
    dend_34 { pt3dadd( -9.90833, -85.4051, 17.487, 0.22 ) }
    dend_34 { pt3dadd( -9.51528, -85.9422, 17.8048, 0.22 ) }
    dend_34 { pt3dadd( -9.11777, -86.4486, 18.1186, 2.36 ) }
    dend_34 { pt3dadd( -8.47908, -87.2147, 18.5795, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 39.3162, -17.6699, -94.7196, 0.15 ) }
    dend_31 { pt3dadd( 42.5637, -20.1078, -115.533, 0.15 ) }
    dend_31 { pt3dadd( 42.7949, -20.3014, -116.941, 1.69 ) }
    dend_31 { pt3dadd( 42.9132, -20.4065, -117.637, 1.92 ) }
    dend_31 { pt3dadd( 42.9312, -20.4234, -117.735, 1.92 ) }
    dend_31 { pt3dadd( 43.6531, -21.1201, -121.277, 0.22 ) }
    dend_31 { pt3dadd( 43.806, -21.271, -121.949, 0.22 ) }
    dend_31 { pt3dadd( 44.3515, -21.9326, -122.728, 1.18 ) }
    dend_31 { pt3dadd( 44.3863, -21.9822, -122.789, 1.18 ) }
    dend_31 { pt3dadd( 45.0515, -22.9722, -124.102, 0.29 ) }
    dend_31 { pt3dadd( 45.3516, -23.3811, -124.665, 0.59 ) }
    dend_31 { pt3dadd( 45.9573, -24.1434, -125.728, 0.37 ) }
    dend_31 { pt3dadd( 47.0608, -25.266, -127.517, 0.74 ) }
    dend_31 { pt3dadd( 47.1088, -25.308, -127.593, 0.74 ) }
    dend_31 { pt3dadd( 48.0566, -26.1814, -129.278, 0.15 ) }
    dend_31 { pt3dadd( 48.4977, -26.6041, -130.194, 0.15 ) }
    dend_31 { pt3dadd( 48.5306, -26.6402, -130.266, 0.15 ) }
    dend_31 { pt3dadd( 48.7345, -26.8942, -130.744, 0.15 ) }
    dend_31 { pt3dadd( 48.7758, -26.9577, -130.839, 0.15 ) }
    dend_31 { pt3dadd( 49.3171, -27.8003, -132.009, 0.15 ) }
    dend_31 { pt3dadd( 49.7381, -28.4693, -132.878, 1.4 ) }
    dend_31 { pt3dadd( 50.0307, -28.926, -133.465, 1.69 ) }
    dend_31 { pt3dadd( 51.3366, -30.9306, -136.01, 0.22 ) }
    dend_31 { pt3dadd( 51.789, -31.6043, -136.87, 0.22 ) }
    dend_31 { pt3dadd( 52.3417, -32.414, -137.828, 0.22 ) }
    dend_31 { pt3dadd( 52.7578, -32.9805, -138.44, 0.96 ) }
    dend_31 { pt3dadd( 52.9236, -33.2211, -138.67, 0.96 ) }
    dend_31 { pt3dadd( 53.7027, -34.2958, -139.632, 0.22 ) }
    dend_31 { pt3dadd( 53.7392, -34.3462, -139.67, 0.22 ) }
    dend_31 { pt3dadd( 54.4445, -35.3458, -140.438, 0.22 ) }
    dend_31 { pt3dadd( 55.0958, -36.3906, -141.134, 1.55 ) }
    dend_31 { pt3dadd( 55.4556, -36.9457, -141.46, 1.99 ) }
    dend_31 { pt3dadd( 56.4853, -38.5053, -142.422, 0.29 ) }
    dend_31 { pt3dadd( 56.5283, -38.5675, -142.463, 0.29 ) }
    dend_31 { pt3dadd( 57.1431, -39.4745, -143.145, 0.29 ) }
    dend_31 { pt3dadd( 57.8958, -40.6965, -144.142, 0.29 ) }
    dend_31 { pt3dadd( 58.1232, -41.1408, -144.547, 0.29 ) }
    dend_31 { pt3dadd( 58.8553, -42.8264, -146.359, 1.4 ) }
    dend_31 { pt3dadd( 59.0526, -43.3949, -147.053, 1.69 ) }
    dend_31 { pt3dadd( 59.5279, -44.937, -149.063, 0.29 ) }
    dend_31 { pt3dadd( 59.7941, -46.0309, -150.615, 0.29 ) }
    dend_31 { pt3dadd( 60.0302, -47.4166, -152.651, 1.47 ) }
    dend_31 { pt3dadd( 60.1617, -48.9515, -154.898, 1.18 ) }
    dend_31 { pt3dadd( 60.1648, -50.3665, -156.893, 0.22 ) }
    dend_31 { pt3dadd( 60.1166, -50.957, -157.679, 0.22 ) }
    dend_31 { pt3dadd( 59.9219, -52.0931, -159.072, 1.69 ) }
    dend_31 { pt3dadd( 59.7956, -52.6257, -159.664, 1.77 ) }
    dend_31 { pt3dadd( 59.3506, -54.0191, -160.862, 0.66 ) }
    dend_31 { pt3dadd( 59.0525, -54.7482, -161.352, 0.22 ) }
    dend_31 { pt3dadd( 58.6295, -55.6547, -161.893, 0.96 ) }
    dend_31 { pt3dadd( 58.1929, -56.5839, -162.478, 0.22 ) }
    dend_31 { pt3dadd( 58.0115, -57.0344, -162.839, 0.15 ) }
    dend_31 { pt3dadd( 57.7761, -57.8084, -163.677, 0.15 ) }
    dend_31 { pt3dadd( 57.5635, -58.7634, -164.822, 0.44 ) }
    dend_31 { pt3dadd( 57.4071, -59.5361, -165.841, 1.33 ) }
    dend_31 { pt3dadd( 57.2725, -60.2016, -166.776, 1.25 ) }
    dend_31 { pt3dadd( 56.6995, -62.3305, -170.007, 1.25 ) }
    dend_31 { pt3dadd( 56.2617, -63.7916, -172.367, 0.15 ) }
    dend_31 { pt3dadd( 56.0861, -64.324, -173.249, 0.15 ) }
    dend_31 { pt3dadd( 55.7988, -65.0166, -174.43, 0.81 ) }
    dend_31 { pt3dadd( 55.6693, -65.2877, -174.884, 0.96 ) }
    dend_31 { pt3dadd( 55.0247, -66.5908, -176.885, 0.52 ) }
    dend_31 { pt3dadd( 54.4743, -67.7287, -178.458, 0.22 ) }
    dend_31 { pt3dadd( 54.2294, -68.2746, -179.181, 1.18 ) }
    dend_31 { pt3dadd( 53.4368, -70.3892, -182.014, 0.22 ) }
    dend_31 { pt3dadd( 53.2098, -71.1314, -182.985, 0.96 ) }
    dend_31 { pt3dadd( 52.8447, -72.6626, -184.918, 0.22 ) }
    dend_31 { pt3dadd( 52.7753, -73.1245, -185.454, 0.52 ) }
    dend_31 { pt3dadd( 52.7478, -73.3038, -185.654, 0.52 ) }
    dend_31 { pt3dadd( 52.5203, -75.1627, -187.717, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.3162, -17.6699, -94.7196, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 39.9465, -16.3211, -99.763, 1.55 ) }
    dend_30 { pt3dadd( 40.1163, -16.0488, -100.725, 1.62 ) }
    dend_30 { pt3dadd( 41.3276, -14.5453, -105.777, 0.22 ) }
    dend_30 { pt3dadd( 41.3558, -14.5159, -105.873, 0.22 ) }
    dend_30 { pt3dadd( 41.7401, -14.1897, -106.964, 1.33 ) }
    dend_30 { pt3dadd( 41.9807, -14.0108, -107.564, 1.25 ) }
    dend_30 { pt3dadd( 43.542, -13.0727, -110.37, 0.22 ) }
    dend_30 { pt3dadd( 44.2225, -12.709, -111.429, 1.18 ) }
    dend_30 { pt3dadd( 44.603, -12.5228, -111.902, 1.33 ) }
    dend_30 { pt3dadd( 46.3586, -11.6811, -113.987, 0.22 ) }
    dend_30 { pt3dadd( 47.6059, -11.0997, -115.416, 1.84 ) }
    dend_30 { pt3dadd( 47.9746, -10.9124, -115.815, 1.84 ) }
    dend_30 { pt3dadd( 49.0794, -10.2929, -116.852, 0.29 ) }
    dend_30 { pt3dadd( 49.3635, -10.1197, -117.11, 0.74 ) }
    dend_30 { pt3dadd( 50.5336, -9.33364, -118.108, 0.22 ) }
    dend_30 { pt3dadd( 50.6544, -9.23769, -118.205, 0.22 ) }
    dend_30 { pt3dadd( 51.1482, -8.80237, -118.623, 0.88 ) }
    dend_30 { pt3dadd( 52.2506, -7.65003, -119.868, 0.22 ) }
    dend_30 { pt3dadd( 52.4531, -7.40425, -120.149, 0.52 ) }
    dend_30 { pt3dadd( 52.7803, -6.96953, -120.665, 0.22 ) }
    dend_30 { pt3dadd( 53.49, -5.98789, -121.911, 1.92 ) }
    dend_30 { pt3dadd( 53.7949, -5.54346, -122.489, 1.92 ) }
    dend_30 { pt3dadd( 54.6793, -4.11918, -124.382, 0.22 ) }
    dend_30 { pt3dadd( 54.8097, -3.8772, -124.694, 0.88 ) }
    dend_30 { pt3dadd( 54.9232, -3.67168, -124.959, 0.88 ) }
    dend_30 { pt3dadd( 55.4239, -2.84019, -125.991, 0.22 ) }
    dend_30 { pt3dadd( 55.6773, -2.44885, -126.477, 0.22 ) }
    dend_30 { pt3dadd( 55.7046, -2.40254, -126.535, 0.22 ) }
    dend_30 { pt3dadd( 55.8585, -2.19009, -126.818, 0.22 ) }
    dend_30 { pt3dadd( 56.5264, -1.37767, -127.996, 1.4 ) }
    dend_30 { pt3dadd( 56.6831, -1.20153, -128.256, 1.4 ) }
    dend_30 { pt3dadd( 57.554, -0.29986, -129.617, 0.22 ) }
    dend_30 { pt3dadd( 57.9179, 0.00886954, -130.112, 0.96 ) }
    dend_30 { pt3dadd( 58.8325, 0.691031, -131.215, 0.22 ) }
    dend_30 { pt3dadd( 59.0971, 0.85976, -131.494, 0.22 ) }
    dend_30 { pt3dadd( 59.5294, 1.06787, -131.833, 0.66 ) }
    dend_30 { pt3dadd( 60.1989, 1.31162, -132.234, 0.66 ) }
    dend_30 { pt3dadd( 61.4497, 1.62492, -132.734, 0.22 ) }
    dend_30 { pt3dadd( 62.0831, 1.73494, -132.927, 1.11 ) }
    dend_30 { pt3dadd( 62.5068, 1.77943, -133.027, 1.4 ) }
    dend_30 { pt3dadd( 64.2822, 1.79969, -133.381, 0.22 ) }
    dend_30 { pt3dadd( 65.0925, 1.74461, -133.512, 0.22 ) }
    dend_30 { pt3dadd( 66.0796, 1.61367, -133.627, 0.96 ) }
    dend_30 { pt3dadd( 66.9113, 1.47019, -133.707, 1.47 ) }
    dend_30 { pt3dadd( 68.2945, 1.19645, -133.847, 0.22 ) }
    dend_30 { pt3dadd( 69.0202, 1.05352, -133.973, 0.22 ) }
    dend_30 { pt3dadd( 69.1485, 1.02683, -134.006, 0.22 ) }
    dend_30 { pt3dadd( 69.9372, 0.887627, -134.26, 0.22 ) }
    dend_30 { pt3dadd( 71.051, 0.717103, -134.679, 1.33 ) }
    dend_30 { pt3dadd( 71.5406, 0.666943, -134.888, 1.62 ) }
    dend_30 { pt3dadd( 73.2708, 0.57972, -135.701, 0.22 ) }
    dend_30 { pt3dadd( 74.0516, 0.559731, -136.073, 0.66 ) }
    dend_30 { pt3dadd( 74.5096, 0.544301, -136.297, 0.66 ) }
    dend_30 { pt3dadd( 74.6503, 0.536682, -136.37, 0.66 ) }
    dend_30 { pt3dadd( 76.0342, 0.439745, -137.086, 0.22 ) }
    dend_30 { pt3dadd( 77.0277, 0.336373, -137.673, 1.11 ) }
    dend_30 { pt3dadd( 77.7105, 0.246739, -138.097, 1.33 ) }
    dend_30 { pt3dadd( 79.1771, 0.0344254, -139.079, 0.22 ) }
    dend_30 { pt3dadd( 80.2067, -0.103765, -139.826, 1.25 ) }
    dend_30 { pt3dadd( 80.6269, -0.156601, -140.197, 1.33 ) }
    dend_30 { pt3dadd( 82.5573, -0.400037, -142.146, 0.22 ) }
    dend_30 { pt3dadd( 82.7903, -0.427184, -142.402, 0.44 ) }
    dend_30 { pt3dadd( 82.8916, -0.436803, -142.524, 0.44 ) }
    dend_30 { pt3dadd( 83.6834, -0.492556, -143.595, 1.18 ) }
    dend_30 { pt3dadd( 85.5143, -0.537279, -146.255, 0.22 ) }
    dend_30 { pt3dadd( 85.9333, -0.529486, -146.901, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.4566, -28.9351, -49.25, 1.55 ) }
    dend_28 { pt3dadd( -12.6203, -30.1443, -52.2398, 1.55 ) }
    dend_28 { pt3dadd( -13.6724, -30.978, -54.7556, 0.22 ) }
    dend_28 { pt3dadd( -14.1231, -31.3615, -55.8067, 0.22 ) }
    dend_28 { pt3dadd( -14.8647, -32.0529, -57.773, 2.36 ) }
    dend_28 { pt3dadd( -15.423, -32.6295, -59.6295, 2.87 ) }
    dend_28 { pt3dadd( -17.7511, -34.7912, -67.932, 0.81 ) }
    dend_28 { pt3dadd( -17.7715, -34.8058, -68.0176, 0.81 ) }
    dend_28 { pt3dadd( -18.1696, -35.0758, -70.2388, 0.81 ) }
    dend_28 { pt3dadd( -18.5956, -35.4717, -74.5335, 2.06 ) }
    dend_28 { pt3dadd( -18.7007, -35.8268, -79.03, 1.25 ) }
    dend_28 { pt3dadd( -18.5805, -36.1386, -82.3002, 0.81 ) }
    dend_28 { pt3dadd( -18.0838, -36.9751, -88.3747, 0.96 ) }
    dend_28 { pt3dadd( -18.0369, -37.151, -89.6442, 1.47 ) }
    dend_28 { pt3dadd( -18.0257, -37.5152, -92.3264, 0.22 ) }
    dend_28 { pt3dadd( -18.0345, -37.7021, -93.4317, 0.22 ) }
    dend_28 { pt3dadd( -18.076, -38.1969, -96.4762, 1.4 ) }
    dend_28 { pt3dadd( -18.1253, -38.7812, -99.9767, 1.03 ) }
    dend_28 { pt3dadd( -18.2544, -39.3225, -103.079, 1.69 ) }
    dend_28 { pt3dadd( -18.4372, -39.9551, -106.739, 1.4 ) }
    dend_28 { pt3dadd( -18.5562, -40.5702, -110.39, 1.4 ) }
    dend_28 { pt3dadd( -18.527, -41.6833, -116.996, 1.84 ) }
    dend_28 { pt3dadd( -18.2353, -42.5532, -121.954, 0.15 ) }
    dend_28 { pt3dadd( -18.0301, -42.9061, -123.673, 1.84 ) }
    dend_28 { pt3dadd( -17.9209, -43.0597, -124.293, 1.84 ) }
    dend_28 { pt3dadd( -17.1467, -44.2041, -128.055, 0.22 ) }
    dend_28 { pt3dadd( -16.8217, -44.6639, -129.502, 1.55 ) }
    dend_28 { pt3dadd( -16.6752, -44.8022, -129.972, 1.77 ) }
    dend_28 { pt3dadd( -15.8586, -45.2314, -132.396, 0.22 ) }
    dend_28 { pt3dadd( -15.5988, -45.3142, -133.149, 0.22 ) }
    dend_28 { pt3dadd( -14.9634, -45.4602, -134.905, 1.77 ) }
    dend_28 { pt3dadd( -12.0141, -45.8789, -142.724, 1.25 ) }
    dend_28 { pt3dadd( -10.7074, -45.983, -146.052, 0.81 ) }
    dend_28 { pt3dadd( -9.77407, -46.0369, -148.361, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -9.35704, -46.0459, -149.366, 0.37 ) }
    dend_28 { pt3dadd( -8.61033, -46.0834, -151.016, 0.22 ) }
    dend_28 { pt3dadd( -7.53765, -46.1459, -153.051, 1.77 ) }
    dend_28 { pt3dadd( -7.19804, -46.1873, -153.569, 1.84 ) }
    dend_28 { pt3dadd( -4.55078, -46.5734, -157.563, 0.96 ) }
    dend_28 { pt3dadd( -3.65695, -46.7092, -158.865, 1.4 ) }
    dend_28 { pt3dadd( -1.9401, -46.8691, -161.404, 0.22 ) }
    dend_28 { pt3dadd( -1.58395, -46.8714, -161.914, 0.22 ) }
    dend_28 { pt3dadd( -1.44766, -46.8593, -162.082, 0.22 ) }
    dend_28 { pt3dadd( -0.390704, -46.6895, -163.189, 0.22 ) }
    dend_28 { pt3dadd( 0.25647, -46.5526, -163.641, 1.18 ) }
    dend_28 { pt3dadd( 0.344451, -46.5356, -163.69, 1.18 ) }
    dend_28 { pt3dadd( 1.09256, -46.3864, -164.051, 1.18 ) }
    dend_28 { pt3dadd( 3.25747, -46.0812, -165.093, 0.29 ) }
    dend_28 { pt3dadd( 4.18012, -45.972, -165.557, 0.44 ) }
    dend_28 { pt3dadd( 4.93061, -45.8793, -165.935, 0.44 ) }
    dend_28 { pt3dadd( 6.1367, -45.7241, -166.522, 0.22 ) }
    dend_28 { pt3dadd( 7.55691, -45.5362, -167.186, 1.47 ) }
    dend_28 { pt3dadd( 8.28942, -45.4458, -167.511, 1.62 ) }
    dend_28 { pt3dadd( 10.3533, -45.1974, -168.332, 0.22 ) }
    dend_28 { pt3dadd( 11.4322, -45.0654, -168.8, 0.22 ) }
    dend_28 { pt3dadd( 12.0336, -45.0226, -169.092, 0.59 ) }
    dend_28 { pt3dadd( 12.1112, -45.0304, -169.134, 0.59 ) }
    dend_28 { pt3dadd( 12.4636, -45.1718, -169.41, 0.59 ) }
    dend_28 { pt3dadd( 12.5955, -45.2897, -169.647, 0.59 ) }
    dend_28 { pt3dadd( 13.0056, -45.9684, -170.891, 0.15 ) }
    dend_28 { pt3dadd( 13.1891, -46.3548, -171.585, 1.18 ) }
    dend_28 { pt3dadd( 13.3829, -46.8155, -172.43, 1.18 ) }
    dend_28 { pt3dadd( 13.8336, -48.0464, -174.726, 0.44 ) }
    dend_28 { pt3dadd( 14.3284, -49.8308, -177.99, 0.22 ) }
    dend_28 { pt3dadd( 14.3779, -50.2223, -178.72, 0.22 ) }
    dend_28 { pt3dadd( 14.336, -50.4708, -179.283, 0.74 ) }
    dend_28 { pt3dadd( 14.2963, -50.5296, -179.447, 0.74 ) }
    dend_28 { pt3dadd( 13.5274, -51.1303, -181.491, 0.22 ) }
    dend_28 { pt3dadd( 13.1563, -51.3518, -182.293, 0.22 ) }
    dend_28 { pt3dadd( 11.7249, -52.0201, -184.975, 1.47 ) }
    dend_28 { pt3dadd( 9.88639, -52.6947, -188.105, 1.33 ) }
    dend_28 { pt3dadd( 7.89674, -53.3361, -191.356, 0.59 ) }
    dend_28 { pt3dadd( 6.50416, -53.7232, -193.534, 0.44 ) }
    dend_28 { pt3dadd( 6.0285, -53.8238, -194.224, 0.44 ) }
    dend_28 { pt3dadd( 4.80177, -54.0349, -195.96, 0.22 ) }
    dend_28 { pt3dadd( 4.03459, -54.1582, -196.912, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -11.4566, -28.9351, -49.25, 2.87 ) }
    dend_25 { pt3dadd( -11.9429, -29.191, -49.4232, 2.87 ) }
    dend_25 { pt3dadd( -12.7928, -29.6544, -49.6642, 2.73 ) }
    dend_25 { pt3dadd( -14.2393, -30.4522, -50.0147, 0.29 ) }
    dend_25 { pt3dadd( -14.4286, -30.5546, -50.0696, 0.29 ) }
    dend_25 { pt3dadd( -15.5276, -31.1387, -50.3946, 0.29 ) }
    dend_25 { pt3dadd( -16.6382, -31.696, -50.7241, 1.55 ) }
    dend_25 { pt3dadd( -17.1603, -31.9313, -50.8551, 2.21 ) }
    dend_25 { pt3dadd( -17.4013, -32.0267, -50.9208, 2.21 ) }
    dend_25 { pt3dadd( -19.0537, -32.6277, -51.4811, 0.22 ) }
    dend_25 { pt3dadd( -19.6179, -32.8205, -51.7292, 0.22 ) }
    dend_25 { pt3dadd( -20.1201, -32.9802, -51.9997, 0.66 ) }
    dend_25 { pt3dadd( -20.3207, -33.0322, -52.1134, 0.81 ) }
    dend_25 { pt3dadd( -21.5191, -33.302, -52.77, 0.22 ) }
    dend_25 { pt3dadd( -21.9976, -33.4041, -53.006, 0.22 ) }
    dend_25 { pt3dadd( -22.8542, -33.5885, -53.3846, 1.84 ) }
    dend_25 { pt3dadd( -23.2924, -33.6908, -53.584, 2.21 ) }
    dend_25 { pt3dadd( -23.9925, -33.8865, -53.9564, 2.06 ) }
    dend_25 { pt3dadd( -25.1344, -34.2457, -54.6526, 0.29 ) }
    dend_25 { pt3dadd( -25.6095, -34.4268, -55.0044, 0.29 ) }
    dend_25 { pt3dadd( -26.5488, -34.8414, -55.826, 1.69 ) }
    dend_25 { pt3dadd( -26.9278, -35.0363, -56.2024, 1.99 ) }
    dend_25 { pt3dadd( -28.2079, -35.7841, -57.6104, 1.11 ) }
    dend_25 { pt3dadd( -28.7333, -36.1623, -58.2713, 1.11 ) }
    dend_25 { pt3dadd( -29.5024, -36.866, -59.4263, 0.29 ) }
    dend_25 { pt3dadd( -29.7359, -37.1251, -59.8326, 0.29 ) }
    dend_25 { pt3dadd( -29.7987, -37.216, -59.967, 0.52 ) }
    dend_25 { pt3dadd( -29.9435, -37.4896, -60.3372, 0.52 ) }
    dend_25 { pt3dadd( -30.0446, -37.8403, -60.7988, 0.22 ) }
    dend_25 { pt3dadd( -30.0755, -38.069, -61.1177, 0.22 ) }
    dend_25 { pt3dadd( -30.0765, -38.0983, -61.1592, 0.22 ) }
    dend_25 { pt3dadd( -30.0613, -39.4256, -63.0049, 2.06 ) }
    dend_25 { pt3dadd( -30.0588, -39.7834, -63.483, 2.36 ) }
    dend_25 { pt3dadd( -30.1202, -40.9226, -64.9658, 0.22 ) }
    dend_25 { pt3dadd( -30.1481, -41.1944, -65.3348, 0.22 ) }
    dend_25 { pt3dadd( -30.1836, -41.515, -65.7492, 0.22 ) }
    dend_25 { pt3dadd( -30.2354, -42.1332, -66.4933, 1.33 ) }
    dend_25 { pt3dadd( -30.2681, -42.5725, -67.0276, 1.47 ) }
    dend_25 { pt3dadd( -30.3755, -43.4428, -68.1392, 0.22 ) }
    dend_25 { pt3dadd( -30.6109, -44.3023, -69.4456, 0.22 ) }
    dend_25 { pt3dadd( -30.7384, -44.6914, -70.0853, 1.4 ) }
    dend_25 { pt3dadd( -30.8024, -44.8753, -70.4126, 1.69 ) }
    dend_25 { pt3dadd( -31.1831, -46.0871, -72.6871, 0.22 ) }
    dend_25 { pt3dadd( -31.3191, -46.5753, -73.6914, 1.92 ) }
    dend_25 { pt3dadd( -31.6644, -47.7303, -76.4533, 0.29 ) }
    dend_25 { pt3dadd( -31.7475, -47.9653, -77.1149, 0.29 ) }
    dend_25 { pt3dadd( -31.7583, -47.9991, -77.2197, 0.29 ) }
    dend_25 { pt3dadd( -31.8217, -48.2569, -77.9757, 0.74 ) }
    dend_25 { pt3dadd( -31.8781, -48.7365, -79.2648, 1.55 ) }
    dend_25 { pt3dadd( -31.8916, -49.906, -82.2033, 1.47 ) }
    dend_25 { pt3dadd( -31.7958, -51.0087, -84.7326, 0.29 ) }
    dend_25 { pt3dadd( -31.7732, -51.2982, -85.3832, 0.29 ) }
    dend_25 { pt3dadd( -31.7323, -51.8383, -86.5088, 1.4 ) }
    dend_25 { pt3dadd( -31.6545, -52.8009, -88.307, 1.69 ) }
    dend_25 { pt3dadd( -31.6159, -53.0376, -88.6923, 1.69 ) }
    dend_25 { pt3dadd( -31.2035, -54.4098, -90.6902, 0.22 ) }
    dend_25 { pt3dadd( -31.1821, -54.4683, -90.7795, 0.22 ) }
    dend_25 { pt3dadd( -31.0804, -54.7131, -91.1872, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -30.9123, -55.0743, -91.8378, 1.47 ) }
    dend_25 { pt3dadd( -30.4689, -56.0114, -93.4904, 0.22 ) }
    dend_25 { pt3dadd( -30.3515, -56.248, -93.9059, 1.4 ) }
    dend_25 { pt3dadd( -29.957, -56.9893, -95.3408, 1.4 ) }
    dend_25 { pt3dadd( -29.6395, -57.5655, -96.5435, 0.22 ) }
    dend_25 { pt3dadd( -29.3281, -58.1472, -98.0164, 1.62 ) }
    dend_25 { pt3dadd( -29.3195, -58.1641, -98.0646, 1.62 ) }
    dend_25 { pt3dadd( -29.2584, -58.3344, -98.5746, 1.62 ) }
    dend_25 { pt3dadd( -29.1031, -59.1697, -101.125, 0.15 ) }
    dend_25 { pt3dadd( -29.0985, -59.346, -101.676, 1.4 ) }
    dend_25 { pt3dadd( -29.2995, -60.224, -104.655, 1.11 ) }
    dend_25 { pt3dadd( -29.3046, -60.2375, -104.697, 1.11 ) }
    dend_25 { pt3dadd( -29.5508, -60.7381, -106.052, 0.37 ) }
    dend_25 { pt3dadd( -29.6905, -60.9704, -106.566, 0.74 ) }
    dend_25 { pt3dadd( -29.7929, -61.1272, -106.829, 0.88 ) }
    dend_25 { pt3dadd( -30.4534, -62.1835, -108.342, 0.22 ) }
    dend_25 { pt3dadd( -30.7069, -62.7123, -108.852, 1.33 ) }
    dend_25 { pt3dadd( -30.864, -63.2463, -109.266, 1.11 ) }
    dend_25 { pt3dadd( -30.9856, -63.917, -109.727, 0.22 ) }
    dend_25 { pt3dadd( -30.9899, -63.9592, -109.755, 0.22 ) }
    dend_25 { pt3dadd( -31.0053, -64.7106, -110.153, 0.22 ) }
    dend_25 { pt3dadd( -30.9303, -65.5292, -110.352, 0.22 ) }
    dend_25 { pt3dadd( -30.7069, -66.7365, -110.587, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 12.2698, 66.4178, -72.6218, 0.22 ) }
    dend_22 { pt3dadd( 12.0777, 68.2832, -72.7165, 0.22 ) }
    dend_22 { pt3dadd( 12.0668, 68.4245, -72.7227, 0.22 ) }
    dend_22 { pt3dadd( 12.0221, 69.522, -72.839, 0.22 ) }
    dend_22 { pt3dadd( 12.0487, 70.3529, -73.0335, 0.66 ) }
    dend_22 { pt3dadd( 12.0615, 70.4783, -73.0727, 0.66 ) }
    dend_22 { pt3dadd( 12.1316, 70.9012, -73.2607, 0.66 ) }
    dend_22 { pt3dadd( 12.1513, 70.959, -73.2979, 0.66 ) }
    dend_22 { pt3dadd( 12.4413, 71.6306, -73.8121, 0.22 ) }
    dend_22 { pt3dadd( 12.9186, 72.4463, -74.5652, 0.88 ) }
    dend_22 { pt3dadd( 13.1123, 72.7164, -74.8309, 0.88 ) }
    dend_22 { pt3dadd( 13.7876, 73.5316, -75.6407, 0.29 ) }
    dend_22 { pt3dadd( 13.8534, 73.5986, -75.6973, 0.29 ) }
    dend_22 { pt3dadd( 14.4218, 74.1436, -76.0396, 0.29 ) }
    dend_22 { pt3dadd( 15.2861, 74.9399, -76.3334, 1.03 ) }
    dend_22 { pt3dadd( 15.6809, 75.3028, -76.4021, 1.25 ) }
    dend_22 { pt3dadd( 16.6936, 76.2605, -76.4842, 0.37 ) }
    dend_22 { pt3dadd( 18.0413, 77.5149, -76.4932, 0.22 ) }
    dend_22 { pt3dadd( 19.1485, 78.5618, -76.4615, 0.22 ) }
    dend_22 { pt3dadd( 20.074, 79.4613, -76.3745, 0.81 ) }
    dend_22 { pt3dadd( 20.8384, 80.2403, -76.2255, 0.22 ) }
    dend_22 { pt3dadd( 21.1929, 80.6255, -76.13, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.2698, 66.4178, -72.6218, 0.81 ) }
    dend_21 { pt3dadd( 13.0867, 67.5003, -73.4348, 0.81 ) }
    dend_21 { pt3dadd( 13.5855, 68.0346, -73.8579, 0.22 ) }
    dend_21 { pt3dadd( 14.0034, 68.4522, -74.1717, 0.22 ) }
    dend_21 { pt3dadd( 14.4465, 68.8941, -74.4817, 1.18 ) }
    dend_21 { pt3dadd( 14.7873, 69.2273, -74.6909, 1.18 ) }
    dend_21 { pt3dadd( 14.8261, 69.2648, -74.7147, 1.18 ) }
    dend_21 { pt3dadd( 15.6687, 70.0809, -75.1318, 0.29 ) }
    dend_21 { pt3dadd( 16.0779, 70.4409, -75.3141, 0.44 ) }
    dend_21 { pt3dadd( 16.2723, 70.612, -75.49, 0.44 ) }
    dend_21 { pt3dadd( 16.7524, 71.0904, -76.1169, 0.22 ) }
    dend_21 { pt3dadd( 17.0432, 71.4226, -76.5943, 1.18 ) }
    dend_21 { pt3dadd( 17.1464, 71.6016, -76.9861, 1.47 ) }
    dend_21 { pt3dadd( 17.1747, 71.7185, -77.3232, 1.47 ) }
    dend_21 { pt3dadd( 17.1799, 72.776, -80.5716, 0.52 ) }
    dend_21 { pt3dadd( 17.1463, 72.9365, -81.1377, 0.81 ) }
    dend_21 { pt3dadd( 17.1073, 73.0315, -81.5078, 0.81 ) }
    dend_21 { pt3dadd( 16.4644, 74.0865, -86.0958, 1.11 ) }
    dend_21 { pt3dadd( 15.9228, 74.6549, -88.9691, 0.59 ) }
    dend_21 { pt3dadd( 15.6274, 74.8473, -90.154, 0.29 ) }
    dend_21 { pt3dadd( 15.0752, 75.0109, -91.7387, 0.74 ) }
    dend_21 { pt3dadd( 15.0475, 75.0117, -91.8011, 0.74 ) }
    dend_21 { pt3dadd( 14.6748, 74.9149, -92.3501, 0.81 ) }
    dend_21 { pt3dadd( 13.7548, 74.3723, -92.8302, 0.29 ) }
    dend_21 { pt3dadd( 13.0791, 73.8938, -93.0224, 0.29 ) }
    dend_21 { pt3dadd( 12.0885, 73.1355, -93.2329, 0.29 ) }
    dend_21 { pt3dadd( 11.0645, 72.3608, -93.3607, 0.29 ) }
    dend_21 { pt3dadd( 9.98099, 71.5401, -93.4881, 0.22 ) }
    dend_21 { pt3dadd( 9.3039, 71.0301, -93.5568, 0.59 ) }
    dend_21 { pt3dadd( 9.11249, 70.8731, -93.5681, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.43246, 64.4011, -23.9134, 0.22 ) }
    dend_19 { pt3dadd( -6.42653, 66.0567, -22.6782, 0.22 ) }
    dend_19 { pt3dadd( -6.90941, 66.4456, -22.4329, 0.66 ) }
    dend_19 { pt3dadd( -7.82888, 67.1817, -22.0226, 0.22 ) }
    dend_19 { pt3dadd( -8.76154, 67.9168, -21.6414, 1.4 ) }
    dend_19 { pt3dadd( -9.26249, 68.2926, -21.4375, 1.4 ) }
    dend_19 { pt3dadd( -11.2315, 69.7547, -20.6443, 0.22 ) }
    dend_19 { pt3dadd( -12.3173, 70.5147, -20.291, 0.22 ) }
    dend_19 { pt3dadd( -13.9096, 71.6056, -19.8198, 1.47 ) }
    dend_19 { pt3dadd( -14.2424, 71.8368, -19.7308, 1.84 ) }
    dend_19 { pt3dadd( -16.4353, 73.4035, -19.2246, 0.22 ) }
    dend_19 { pt3dadd( -16.7967, 73.6674, -19.1505, 0.52 ) }
    dend_19 { pt3dadd( -17.9769, 74.5719, -18.9853, 0.15 ) }
    dend_19 { pt3dadd( -18.6873, 75.1464, -18.9113, 0.88 ) }
    dend_19 { pt3dadd( -19.5318, 75.876, -18.8744, 0.22 ) }
    dend_19 { pt3dadd( -20.6364, 76.8948, -18.8885, 1.84 ) }
    dend_19 { pt3dadd( -21.0192, 77.2666, -18.9245, 1.99 ) }
    dend_19 { pt3dadd( -22.7706, 78.9706, -19.1013, 0.22 ) }
    dend_19 { pt3dadd( -23.2953, 79.4948, -19.1581, 1.11 ) }
    dend_19 { pt3dadd( -23.7425, 79.944, -19.1966, 1.25 ) }
    dend_19 { pt3dadd( -24.8602, 81.0256, -19.2478, 0.15 ) }
    dend_19 { pt3dadd( -25.4696, 81.5954, -19.2344, 0.44 ) }
    dend_19 { pt3dadd( -25.7114, 81.8146, -19.2149, 0.44 ) }
    dend_19 { pt3dadd( -25.7859, 81.8804, -19.2036, 0.44 ) }
    dend_19 { pt3dadd( -27.0042, 82.9306, -18.9349, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -27.8029, 83.6407, -18.7156, 0.15 ) }
    dend_19 { pt3dadd( -27.8552, 83.6905, -18.6979, 0.15 ) }
    dend_19 { pt3dadd( -28.2486, 84.0914, -18.5631, 0.66 ) }
    dend_19 { pt3dadd( -28.7383, 84.6258, -18.4166, 0.81 ) }
    dend_19 { pt3dadd( -29.7371, 85.7705, -18.177, 0.15 ) }
    dend_19 { pt3dadd( -30.118, 86.2314, -18.1137, 0.15 ) }
    dend_19 { pt3dadd( -30.9701, 87.3203, -18.0171, 1.47 ) }
    dend_19 { pt3dadd( -31.3692, 87.8497, -17.985, 1.47 ) }
    dend_19 { pt3dadd( -32.1078, 88.8583, -17.9481, 0.22 ) }
    dend_19 { pt3dadd( -32.4307, 89.32, -17.9662, 0.52 ) }
    dend_19 { pt3dadd( -32.5752, 89.5349, -17.9933, 0.52 ) }
    dend_19 { pt3dadd( -33.153, 90.4014, -18.1424, 0.15 ) }
    dend_19 { pt3dadd( -33.8241, 91.4095, -18.4214, 1.33 ) }
    dend_19 { pt3dadd( -34.0671, 91.7712, -18.5397, 1.69 ) }
    dend_19 { pt3dadd( -34.8237, 92.8786, -18.9773, 0.22 ) }
    dend_19 { pt3dadd( -35.2025, 93.4392, -19.211, 0.59 ) }
    dend_19 { pt3dadd( -35.524, 93.9143, -19.423, 0.59 ) }
    dend_19 { pt3dadd( -36.1011, 94.749, -19.8436, 0.15 ) }
    dend_19 { pt3dadd( -37.0363, 96.0748, -20.5925, 1.33 ) }
    dend_19 { pt3dadd( -37.4256, 96.6239, -20.9099, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.43246, 64.4011, -23.9134, 0.29 ) }
    dend_16 { pt3dadd( -5.58632, 65.3295, -25.1331, 0.29 ) }
    dend_16 { pt3dadd( -6.03709, 65.6869, -25.575, 0.52 ) }
    dend_16 { pt3dadd( -6.74392, 66.2448, -26.2082, 0.74 ) }
    dend_16 { pt3dadd( -7.02798, 66.4668, -26.4406, 0.88 ) }
    dend_16 { pt3dadd( -7.79344, 67.0774, -27.0266, 0.15 ) }
    dend_16 { pt3dadd( -8.07986, 67.3182, -27.2341, 0.15 ) }
    dend_16 { pt3dadd( -8.45918, 67.6747, -27.4614, 1.33 ) }
    dend_16 { pt3dadd( -8.83541, 68.0561, -27.6555, 1.77 ) }
    dend_16 { pt3dadd( -9.56752, 68.8238, -27.9615, 0.22 ) }
    dend_16 { pt3dadd( -9.87201, 69.1573, -28.0675, 0.22 ) }
    dend_16 { pt3dadd( -10.2707, 69.6503, -28.1796, 0.88 ) }
    dend_16 { pt3dadd( -10.4498, 69.9009, -28.2333, 0.88 ) }
    dend_16 { pt3dadd( -10.8676, 70.5591, -28.3633, 0.15 ) }
    dend_16 { pt3dadd( -11.1208, 71.0703, -28.4268, 0.15 ) }
    dend_16 { pt3dadd( -11.267, 71.4923, -28.447, 0.15 ) }
    dend_16 { pt3dadd( -11.4725, 72.3474, -28.4612, 2.14 ) }
    dend_16 { pt3dadd( -11.5118, 72.6452, -28.4569, 2.14 ) }
    dend_16 { pt3dadd( -11.5127, 72.7027, -28.4543, 2.14 ) }
    dend_16 { pt3dadd( -11.3728, 73.9308, -28.3611, 0.15 ) }
    dend_16 { pt3dadd( -11.2738, 74.3213, -28.3285, 0.15 ) }
    dend_16 { pt3dadd( -11.1555, 74.6517, -28.316, 0.15 ) }
    dend_16 { pt3dadd( -11.0049, 74.9955, -28.3161, 0.66 ) }
    dend_16 { pt3dadd( -10.8089, 75.4018, -28.3482, 0.81 ) }
    dend_16 { pt3dadd( -10.77, 75.4728, -28.3606, 0.81 ) }
    dend_16 { pt3dadd( -10.4114, 76.0059, -28.5961, 0.15 ) }
    dend_16 { pt3dadd( -10.0614, 76.5424, -28.8807, 0.88 ) }
    dend_16 { pt3dadd( -10.0369, 76.58, -28.9065, 0.88 ) }
    dend_16 { pt3dadd( -9.918, 76.7748, -29.0508, 0.88 ) }
    dend_16 { pt3dadd( -9.87064, 76.862, -29.1145, 0.88 ) }
    dend_16 { pt3dadd( -9.504, 77.6602, -29.6468, 0.15 ) }
    dend_16 { pt3dadd( -9.39301, 77.96, -29.8368, 0.15 ) }
    dend_16 { pt3dadd( -9.20283, 78.5878, -30.2136, 1.11 ) }
    dend_16 { pt3dadd( -9.09766, 79.0547, -30.4842, 1.11 ) }
    dend_16 { pt3dadd( -8.88411, 80.4017, -31.2279, 0.22 ) }
    dend_16 { pt3dadd( -8.84294, 80.8552, -31.4977, 0.22 ) }
    dend_16 { pt3dadd( -8.82744, 81.5464, -31.92, 1.47 ) }
    dend_16 { pt3dadd( -8.84832, 82.0521, -32.238, 1.69 ) }
    dend_16 { pt3dadd( -9.04808, 83.409, -33.3756, 0.15 ) }
    dend_16 { pt3dadd( -9.14326, 83.7522, -33.7494, 0.88 ) }
    dend_16 { pt3dadd( -9.53193, 84.6963, -34.9717, 0.22 ) }
    dend_16 { pt3dadd( -9.61218, 84.862, -35.2134, 1.55 ) }
    dend_16 { pt3dadd( -9.78933, 85.1838, -35.7107, 1.84 ) }
    dend_16 { pt3dadd( -10.788, 86.8241, -38.3491, 0.59 ) }
    dend_16 { pt3dadd( -11.1128, 87.2818, -39.1163, 0.22 ) }
    dend_16 { pt3dadd( -11.2553, 87.4794, -39.4288, 0.74 ) }
    dend_16 { pt3dadd( -11.7082, 88.0936, -40.2776, 0.15 ) }
    dend_16 { pt3dadd( -11.9899, 88.4764, -40.7456, 0.15 ) }
    dend_16 { pt3dadd( -12.2069, 88.762, -41.0397, 0.81 ) }
    dend_16 { pt3dadd( -12.4137, 89.0052, -41.2247, 0.81 ) }
    dend_16 { pt3dadd( -12.9924, 89.6075, -41.8371, 0.15 ) }
    dend_16 { pt3dadd( -13.2502, 89.8467, -42.2025, 0.96 ) }
    dend_16 { pt3dadd( -13.4954, 90.0537, -42.5855, 0.96 ) }
    dend_16 { pt3dadd( -14.1902, 90.6039, -43.7284, 0.22 ) }
    dend_16 { pt3dadd( -14.5684, 90.8985, -44.3601, 1.4 ) }
    dend_16 { pt3dadd( -15.3864, 91.5383, -45.7586, 1.69 ) }
    dend_16 { pt3dadd( -16.3319, 92.2952, -47.3798, 0.74 ) }
    dend_16 { pt3dadd( -16.7101, 92.6084, -48.0252, 0.22 ) }
    dend_16 { pt3dadd( -16.9038, 92.7753, -48.3321, 0.59 ) }
    dend_16 { pt3dadd( -17.2245, 93.0656, -48.7193, 0.22 ) }
    dend_16 { pt3dadd( -17.2579, 93.0989, -48.741, 0.22 ) }
    dend_16 { pt3dadd( -17.6491, 93.5169, -48.7853, 0.22 ) }
    dend_16 { pt3dadd( -17.8932, 93.8007, -48.7435, 0.52 ) }
    dend_16 { pt3dadd( -18.3903, 94.4831, -48.6102, 0.15 ) }
    dend_16 { pt3dadd( -18.8755, 95.2641, -48.4253, 1.84 ) }
    dend_16 { pt3dadd( -19.4995, 96.3936, -48.1216, 0.15 ) }
    dend_16 { pt3dadd( -19.6667, 96.7207, -48.0177, 0.29 ) }
    dend_16 { pt3dadd( -19.7117, 96.826, -47.9816, 0.29 ) }
    dend_16 { pt3dadd( -19.9245, 97.4433, -47.7588, 0.15 ) }
    dend_16 { pt3dadd( -20.0688, 97.9836, -47.5611, 0.74 ) }
    dend_16 { pt3dadd( -20.1068, 98.1649, -47.5036, 0.74 ) }
    dend_16 { pt3dadd( -20.2929, 99.1136, -47.2467, 0.22 ) }
    dend_16 { pt3dadd( -20.4794, 99.9632, -47.0294, 0.22 ) }
    dend_16 { pt3dadd( -20.6449, 100.672, -46.8592, 1.69 ) }
    dend_16 { pt3dadd( -20.7157, 100.974, -46.7941, 1.69 ) }
    dend_16 { pt3dadd( -20.8823, 101.813, -46.6468, 0.22 ) }
    dend_16 { pt3dadd( -20.9436, 102.178, -46.5947, 0.37 ) }
    dend_16 { pt3dadd( -21.0303, 102.865, -46.5306, 0.15 ) }
    dend_16 { pt3dadd( -21.0493, 103.034, -46.5202, 0.37 ) }
    dend_16 { pt3dadd( -21.1132, 103.652, -46.5126, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -21.1472, 104.172, -46.5462, 0.74 ) }
    dend_16 { pt3dadd( -21.1524, 104.278, -46.5601, 0.74 ) }
    dend_16 { pt3dadd( -21.1603, 104.423, -46.5862, 0.74 ) }
    dend_16 { pt3dadd( -21.1953, 105.152, -46.7353, 0.15 ) }
    dend_16 { pt3dadd( -21.227, 105.669, -46.8447, 1.03 ) }
    dend_16 { pt3dadd( -21.316, 106.733, -47.0412, 0.15 ) }
    dend_16 { pt3dadd( -21.4111, 107.671, -47.1958, 1.99 ) }
    dend_16 { pt3dadd( -21.4699, 108.058, -47.2523, 1.99 ) }
    dend_16 { pt3dadd( -21.6644, 108.925, -47.3632, 0.22 ) }
    dend_16 { pt3dadd( -21.8271, 109.48, -47.4262, 0.81 ) }
    dend_16 { pt3dadd( -22.1036, 110.243, -47.4955, 0.22 ) }
    dend_16 { pt3dadd( -22.1245, 110.289, -47.4986, 0.22 ) }
    dend_16 { pt3dadd( -22.4317, 110.883, -47.5493, 0.22 ) }
    dend_16 { pt3dadd( -22.737, 111.394, -47.6281, 0.22 ) }
    dend_16 { pt3dadd( -23.0235, 111.829, -47.7543, 0.22 ) }
    dend_16 { pt3dadd( -23.3873, 112.397, -47.9885, 0.22 ) }
    dend_16 { pt3dadd( -23.5965, 112.761, -48.1425, 1.03 ) }
    dend_16 { pt3dadd( -23.6979, 112.963, -48.2242, 1.03 ) }
    dend_16 { pt3dadd( -24.0904, 113.955, -48.5835, 0.22 ) }
    dend_16 { pt3dadd( -24.4017, 114.783, -48.8825, 0.59 ) }
    dend_16 { pt3dadd( -24.6826, 115.54, -49.151, 0.22 ) }
    dend_16 { pt3dadd( -24.9816, 116.423, -49.4597, 2.06 ) }
    dend_16 { pt3dadd( -25.0927, 116.798, -49.5785, 1.69 ) }
    dend_16 { pt3dadd( -25.3295, 117.811, -49.8548, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -42.1788, 103.543, -11.5746, 0.22 ) }
    dend_10 { pt3dadd( -42.6782, 104.676, -12.0249, 0.22 ) }
    dend_10 { pt3dadd( -42.9561, 105.235, -12.2799, 0.66 ) }
    dend_10 { pt3dadd( -43.1577, 105.633, -12.4665, 0.81 ) }
    dend_10 { pt3dadd( -43.7822, 106.819, -13.012, 0.22 ) }
    dend_10 { pt3dadd( -44.1881, 107.551, -13.3339, 0.66 ) }
    dend_10 { pt3dadd( -44.4954, 108.041, -13.5294, 0.96 ) }
    dend_10 { pt3dadd( -45.3071, 109.194, -13.9683, 0.22 ) }
    dend_10 { pt3dadd( -45.5014, 109.455, -14.0567, 0.22 ) }
    dend_10 { pt3dadd( -45.7683, 109.82, -14.1604, 0.52 ) }
    dend_10 { pt3dadd( -46.0479, 110.254, -14.2581, 0.52 ) }
    dend_10 { pt3dadd( -46.6931, 111.416, -14.4821, 0.22 ) }
    dend_10 { pt3dadd( -47.0944, 112.249, -14.6431, 0.22 ) }
    dend_10 { pt3dadd( -47.4135, 113.036, -14.7428, 1.77 ) }
    dend_10 { pt3dadd( -47.5717, 113.542, -14.772, 2.06 ) }
    dend_10 { pt3dadd( -47.9328, 115.399, -14.7507, 0.22 ) }
    dend_10 { pt3dadd( -47.977, 115.853, -14.7275, 0.59 ) }
    dend_10 { pt3dadd( -47.9815, 116.505, -14.6641, 0.66 ) }
    dend_10 { pt3dadd( -47.9356, 118.324, -14.4145, 0.22 ) }
    dend_10 { pt3dadd( -47.856, 119.902, -14.1531, 0.22 ) }
    dend_10 { pt3dadd( -47.7485, 121.513, -13.8542, 1.47 ) }
    dend_10 { pt3dadd( -47.7019, 122.102, -13.7275, 1.92 ) }
    dend_10 { pt3dadd( -47.5816, 123.938, -13.3615, 0.22 ) }
    dend_10 { pt3dadd( -47.5543, 124.52, -13.2629, 0.22 ) }
    dend_10 { pt3dadd( -47.5406, 125.257, -13.1793, 0.74 ) }
    dend_10 { pt3dadd( -47.5545, 125.516, -13.1631, 0.74 ) }
    dend_10 { pt3dadd( -47.7017, 126.657, -13.1149, 0.15 ) }
    dend_10 { pt3dadd( -47.8623, 127.632, -13.0519, 0.15 ) }
    dend_10 { pt3dadd( -47.9875, 128.274, -13.0066, 0.96 ) }
    dend_10 { pt3dadd( -48.0523, 128.6, -12.9779, 1.33 ) }
    dend_10 { pt3dadd( -48.1141, 128.886, -12.9518, 1.33 ) }
    dend_10 { pt3dadd( -48.1309, 128.956, -12.9457, 1.33 ) }
    dend_10 { pt3dadd( -48.5234, 130.264, -12.8363, 0.22 ) }
    dend_10 { pt3dadd( -48.6821, 130.73, -12.7837, 0.81 ) }
    dend_10 { pt3dadd( -48.8911, 131.273, -12.7137, 0.81 ) }
    dend_10 { pt3dadd( -49.2201, 132.082, -12.6033, 0.22 ) }
    dend_10 { pt3dadd( -49.3412, 132.358, -12.5656, 0.44 ) }
    dend_10 { pt3dadd( -49.9039, 133.52, -12.4109, 0.22 ) }
    dend_10 { pt3dadd( -50.0956, 133.865, -12.3656, 0.59 ) }
    dend_10 { pt3dadd( -50.3666, 134.361, -12.2741, 0.59 ) }
    dend_10 { pt3dadd( -50.7516, 135.088, -12.1169, 0.15 ) }
    dend_10 { pt3dadd( -51.1678, 135.892, -11.9233, 0.15 ) }
    dend_10 { pt3dadd( -51.51, 136.567, -11.7573, 1.11 ) }
    dend_10 { pt3dadd( -51.7232, 136.984, -11.6526, 1.62 ) }
    dend_10 { pt3dadd( -52.4692, 138.371, -11.3046, 0.15 ) }
    dend_10 { pt3dadd( -52.6907, 138.766, -11.2013, 0.59 ) }
    dend_10 { pt3dadd( -52.7922, 138.938, -11.1567, 0.59 ) }
    dend_10 { pt3dadd( -53.1411, 139.556, -11.0112, 0.22 ) }
    dend_10 { pt3dadd( -53.4297, 140.082, -10.9043, 0.22 ) }
    dend_10 { pt3dadd( -53.5876, 140.373, -10.8602, 0.59 ) }
    dend_10 { pt3dadd( -53.766, 140.707, -10.8358, 0.59 ) }
    dend_10 { pt3dadd( -54.0543, 141.327, -10.8031, 0.22 ) }
    dend_10 { pt3dadd( -54.4101, 142.268, -10.7807, 0.22 ) }
    dend_10 { pt3dadd( -54.4101, 142.268, -10.7807, 0.66 ) }
    dend_10 { pt3dadd( -54.4857, 142.753, -10.8177, 0.66 ) }
    dend_10 { pt3dadd( -54.5785, 143.596, -10.9047, 0.22 ) }
    dend_10 { pt3dadd( -54.627, 144.244, -10.9856, 1.4 ) }
    dend_10 { pt3dadd( -54.6472, 144.634, -11.041, 1.77 ) }
    dend_10 { pt3dadd( -54.7259, 146.515, -11.3297, 0.22 ) }
    dend_10 { pt3dadd( -54.7477, 147.108, -11.4226, 0.96 ) }
    dend_10 { pt3dadd( -54.7649, 147.62, -11.5041, 0.96 ) }
    dend_10 { pt3dadd( -54.7996, 148.519, -11.6475, 0.22 ) }
    dend_10 { pt3dadd( -54.8627, 149.693, -11.8264, 0.22 ) }
    dend_10 { pt3dadd( -54.9188, 150.524, -11.9469, 0.88 ) }
    dend_10 { pt3dadd( -54.9522, 150.976, -12.0089, 1.25 ) }
    dend_10 { pt3dadd( -55.0018, 151.762, -12.1142, 0.22 ) }
    dend_10 { pt3dadd( -55.0085, 151.895, -12.1293, 0.22 ) }
    dend_10 { pt3dadd( -54.9963, 152.39, -12.1605, 0.22 ) }
    dend_10 { pt3dadd( -54.9477, 152.802, -12.1723, 0.22 ) }
    dend_10 { pt3dadd( -54.7463, 153.778, -12.156, 0.22 ) }
    dend_10 { pt3dadd( -54.6418, 154.18, -12.1416, 0.81 ) }
    dend_10 { pt3dadd( -54.4493, 154.747, -12.0733, 0.81 ) }
    dend_10 { pt3dadd( -54.0027, 155.921, -11.8748, 0.15 ) }
    dend_10 { pt3dadd( -53.647, 156.757, -11.7026, 0.15 ) }
    dend_10 { pt3dadd( -53.0749, 158.021, -11.3955, 1.4 ) }
    dend_10 { pt3dadd( -52.932, 158.336, -11.3093, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -52.1896, 160.018, -10.8329, 0.22 ) }
    dend_10 { pt3dadd( -52.1651, 160.075, -10.8168, 0.22 ) }
    dend_10 { pt3dadd( -52.0778, 160.289, -10.7539, 0.22 ) }
    dend_10 { pt3dadd( -52.0561, 160.346, -10.7378, 0.22 ) }
    dend_10 { pt3dadd( -51.8237, 161.063, -10.5662, 0.22 ) }
    dend_10 { pt3dadd( -51.5504, 161.976, -10.4031, 0.88 ) }
    dend_10 { pt3dadd( -51.528, 162.044, -10.3958, 0.88 ) }
    dend_10 { pt3dadd( -51.4203, 162.318, -10.369, 1.03 ) }
    dend_10 { pt3dadd( -50.8928, 163.544, -10.2604, 0.22 ) }
    dend_10 { pt3dadd( -50.2926, 164.833, -10.1643, 1.55 ) }
    dend_10 { pt3dadd( -50.0166, 165.373, -10.1113, 1.92 ) }
    dend_10 { pt3dadd( -49.2154, 166.899, -9.94792, 0.22 ) }
    dend_10 { pt3dadd( -48.9952, 167.314, -9.89906, 0.22 ) }
    dend_10 { pt3dadd( -48.804, 167.663, -9.85448, 0.52 ) }
    dend_10 { pt3dadd( -48.625, 167.949, -9.81267, 0.52 ) }
    dend_10 { pt3dadd( -47.9715, 168.936, -9.66959, 0.22 ) }
    dend_10 { pt3dadd( -47.785, 169.209, -9.60977, 0.59 ) }
    dend_10 { pt3dadd( -47.6003, 169.473, -9.53384, 0.59 ) }
    dend_10 { pt3dadd( -47.539, 169.561, -9.50953, 0.59 ) }
    dend_10 { pt3dadd( -46.9948, 170.314, -9.33092, 0.22 ) }
    dend_10 { pt3dadd( -46.9609, 170.367, -9.32115, 0.22 ) }
    dend_10 { pt3dadd( -46.486, 171.19, -9.22146, 0.22 ) }
    dend_10 { pt3dadd( -46.4631, 171.239, -9.21673, 0.22 ) }
    dend_10 { pt3dadd( -46.1544, 172.128, -9.17039, 0.88 ) }
    dend_10 { pt3dadd( -46.035, 172.595, -9.16444, 1.47 ) }
    dend_10 { pt3dadd( -45.8336, 173.843, -9.1745, 0.22 ) }
    dend_10 { pt3dadd( -45.828, 173.896, -9.17519, 0.22 ) }
    dend_10 { pt3dadd( -45.7636, 175.012, -9.21297, 0.22 ) }
    dend_10 { pt3dadd( -45.6977, 175.978, -9.27168, 0.88 ) }
    dend_10 { pt3dadd( -45.6688, 176.318, -9.30465, 1.33 ) }
    dend_10 { pt3dadd( -45.5523, 177.353, -9.44004, 0.15 ) }
    dend_10 { pt3dadd( -45.501, 177.738, -9.50708, 0.15 ) }
    dend_10 { pt3dadd( -45.3522, 178.747, -9.68721, 0.15 ) }
    dend_10 { pt3dadd( -45.0888, 180.262, -9.97749, 1.77 ) }
    dend_10 { pt3dadd( -44.801, 181.719, -10.2803, 0.22 ) }
    dend_10 { pt3dadd( -44.6477, 182.447, -10.4492, 0.22 ) }
    dend_10 { pt3dadd( -44.5417, 182.901, -10.5765, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -42.1788, 103.543, -11.5746, 0.22 ) }
    dend_3 { pt3dadd( -43.6384, 104.773, -12.81, 0.22 ) }
    dend_3 { pt3dadd( -43.6774, 104.813, -12.862, 0.22 ) }
    dend_3 { pt3dadd( -43.992, 105.2, -13.3887, 0.22 ) }
    dend_3 { pt3dadd( -44.3656, 105.712, -14.0929, 1.11 ) }
    dend_3 { pt3dadd( -44.6968, 106.174, -14.7638, 1.92 ) }
    dend_3 { pt3dadd( -44.94, 106.524, -15.2551, 2.14 ) }
    dend_3 { pt3dadd( -45.9532, 108.326, -17.5475, 0.22 ) }
    dend_3 { pt3dadd( -46.1805, 108.687, -18.1383, 0.22 ) }
    dend_3 { pt3dadd( -46.2051, 108.727, -18.2102, 0.22 ) }
    dend_3 { pt3dadd( -46.5599, 109.343, -19.3519, 0.22 ) }
    dend_3 { pt3dadd( -46.7118, 109.698, -19.9811, 0.88 ) }
    dend_3 { pt3dadd( -46.8441, 110.052, -20.5735, 0.88 ) }
    dend_3 { pt3dadd( -47.5066, 112.106, -23.6371, 1.25 ) }
    dend_3 { pt3dadd( -47.7509, 112.863, -24.6967, 1.62 ) }
    dend_3 { pt3dadd( -47.7651, 112.914, -24.7635, 1.62 ) }
    dend_3 { pt3dadd( -47.9974, 114.038, -26.1315, 0.29 ) }
    dend_3 { pt3dadd( -48.0593, 114.383, -26.5268, 0.66 ) }
    dend_3 { pt3dadd( -48.067, 114.437, -26.5773, 0.66 ) }
    dend_3 { pt3dadd( -48.1678, 114.896, -26.9974, 0.66 ) }
    dend_3 { pt3dadd( -48.1821, 114.947, -27.0501, 0.66 ) }
    dend_3 { pt3dadd( -48.4912, 115.933, -28.2025, 0.22 ) }
    dend_3 { pt3dadd( -48.9061, 116.964, -29.5758, 2.14 ) }
    dend_3 { pt3dadd( -49.062, 117.324, -30.0712, 2.8 ) }
    dend_3 { pt3dadd( -50.1155, 119.646, -33.328, 0.37 ) }
    dend_3 { pt3dadd( -50.5241, 120.525, -34.579, 0.37 ) }
    dend_3 { pt3dadd( -51.1475, 121.859, -36.4559, 0.96 ) }
    dend_3 { pt3dadd( -51.7173, 123.153, -38.2379, 0.22 ) }
    dend_3 { pt3dadd( -51.9336, 123.687, -38.9588, 1.11 ) }
    dend_3 { pt3dadd( -51.9491, 123.732, -39.016, 1.11 ) }
    dend_3 { pt3dadd( -52.0091, 123.999, -39.2852, 1.11 ) }
    dend_3 { pt3dadd( -52.1725, 124.961, -40.1567, 0.15 ) }
    dend_3 { pt3dadd( -52.2945, 125.893, -40.838, 0.15 ) }
    dend_3 { pt3dadd( -52.3724, 126.682, -41.3692, 0.15 ) }
    dend_3 { pt3dadd( -52.5254, 127.8, -42.1296, 1.99 ) }
    dend_3 { pt3dadd( -52.6642, 128.503, -42.5886, 2.21 ) }
    dend_3 { pt3dadd( -52.9501, 129.619, -43.2449, 0.74 ) }
    dend_3 { pt3dadd( -53.3081, 130.742, -43.8027, 0.29 ) }
    dend_3 { pt3dadd( -53.3317, 130.807, -43.8285, 0.29 ) }
    dend_3 { pt3dadd( -53.5435, 131.355, -44.0236, 0.52 ) }
    dend_3 { pt3dadd( -53.7287, 131.829, -44.1897, 0.52 ) }
    dend_3 { pt3dadd( -53.9862, 132.509, -44.4541, 0.29 ) }
    dend_3 { pt3dadd( -54.1406, 132.934, -44.6498, 0.74 ) }
    dend_3 { pt3dadd( -54.3763, 133.6, -45.1132, 0.96 ) }
    dend_3 { pt3dadd( -54.756, 134.727, -46.0451, 0.22 ) }
    dend_3 { pt3dadd( -55.0558, 135.661, -46.9082, 1.55 ) }
    dend_3 { pt3dadd( -55.2161, 136.151, -47.3816, 1.99 ) }
    dend_3 { pt3dadd( -55.5535, 136.879, -48.2214, 1.99 ) }
    dend_3 { pt3dadd( -56.378, 138.214, -49.9193, 0.37 ) }
    dend_3 { pt3dadd( -56.6231, 138.366, -50.3342, 0.37 ) }
    dend_3 { pt3dadd( -56.9246, 138.472, -50.7887, 0.37 ) }
    dend_3 { pt3dadd( -57.4112, 138.579, -51.4484, 0.37 ) }
    dend_3 { pt3dadd( -59.0831, 138.816, -53.5066, 1.92 ) }
    dend_3 { pt3dadd( -59.5729, 138.858, -54.0521, 2.43 ) }
    dend_3 { pt3dadd( -65.5895, 139.162, -60.1802, 0.37 ) }
    dend_3 { pt3dadd( -66.1037, 139.178, -60.6888, 0.44 ) }
    dend_3 { pt3dadd( -66.7533, 139.192, -61.3072, 0.29 ) }
    dend_3 { pt3dadd( -67.298, 139.203, -61.7999, 0.29 ) }
    dend_3 { pt3dadd( -67.776, 139.241, -62.1811, 0.66 ) }
    dend_3 { pt3dadd( -68.1344, 139.281, -62.4498, 0.88 ) }
    dend_3 { pt3dadd( -69.323, 139.406, -63.297, 0.66 ) }
    dend_3 { pt3dadd( -69.993, 139.421, -63.8808, 0.22 ) }
    dend_3 { pt3dadd( -70.6366, 139.371, -64.5167, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -71.4651, 139.293, -65.3758, 2.36 ) }
    dend_3 { pt3dadd( -73.6219, 139.036, -67.6987, 2.36 ) }
    dend_3 { pt3dadd( -76.698, 138.585, -71.1118, 0.88 ) }
    dend_3 { pt3dadd( -77.6521, 138.416, -72.203, 0.52 ) }
    dend_3 { pt3dadd( -79.5721, 137.993, -74.5342, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 7.3732, -37.3215, 5.57376, 0.37 ) }
    dend_47 { pt3dadd( 8.72735, -37.6869, 5.52836, 0.37 ) }
    dend_47 { pt3dadd( 9.43104, -37.9355, 5.51379, 0.29 ) }
    dend_47 { pt3dadd( 10.262, -38.2923, 5.54091, 0.66 ) }
    dend_47 { pt3dadd( 11.0206, -38.646, 5.58986, 1.33 ) }
    dend_47 { pt3dadd( 11.5015, -38.8788, 5.63023, 1.62 ) }
    dend_47 { pt3dadd( 12.0345, -39.1414, 5.681, 1.62 ) }
    dend_47 { pt3dadd( 12.805, -39.6071, 5.77001, 0.59 ) }
    dend_47 { pt3dadd( 13.5406, -40.1103, 5.85728, 0.37 ) }
    dend_47 { pt3dadd( 13.9312, -40.4035, 5.87982, 0.74 ) }
    dend_47 { pt3dadd( 14.2168, -40.6352, 5.85886, 0.74 ) }
    dend_47 { pt3dadd( 14.2559, -40.6688, 5.84985, 0.74 ) }
    dend_47 { pt3dadd( 14.6822, -41.0733, 5.67466, 0.29 ) }
    dend_47 { pt3dadd( 15.2755, -41.7088, 5.38955, 0.29 ) }
    dend_47 { pt3dadd( 15.7991, -42.3377, 5.19263, 1.92 ) }
    dend_47 { pt3dadd( 16.36, -43.0574, 5.06458, 3.09 ) }
    dend_47 { pt3dadd( 16.5204, -43.2673, 5.05834, 3.61 ) }
    dend_47 { pt3dadd( 17.0005, -43.8909, 5.13552, 3.32 ) }
    dend_47 { pt3dadd( 17.8222, -44.9543, 5.4176, 0.88 ) }
    dend_47 { pt3dadd( 18.5909, -45.9134, 5.87213, 0.44 ) }
    dend_47 { pt3dadd( 18.9928, -46.3872, 6.16828, 0.44 ) }
    dend_47 { pt3dadd( 19.5124, -46.9685, 6.60111, 1.18 ) }
    dend_47 { pt3dadd( 19.9821, -47.4359, 6.99569, 1.69 ) }
    dend_47 { pt3dadd( 20.2983, -47.6903, 7.25963, 1.69 ) }
    dend_47 { pt3dadd( 21.4645, -48.3941, 8.14563, 0.44 ) }
    dend_47 { pt3dadd( 21.9325, -48.6247, 8.458, 0.66 ) }
    dend_47 { pt3dadd( 21.9734, -48.6436, 8.48604, 0.66 ) }
    dend_47 { pt3dadd( 22.4028, -48.8392, 8.77046, 0.66 ) }
    dend_47 { pt3dadd( 23.0087, -49.1786, 9.23669, 0.29 ) }
    dend_47 { pt3dadd( 23.2025, -49.3687, 9.45193, 0.29 ) }
    dend_47 { pt3dadd( 23.2499, -49.8597, 9.81177, 0.29 ) }
    dend_47 { pt3dadd( 23.1994, -50.4629, 10.2269, 0.81 ) }
    dend_47 { pt3dadd( 23.171, -50.7603, 10.4217, 1.03 ) }
    dend_47 { pt3dadd( 23.1353, -51.6406, 11.041, 0.37 ) }
    dend_47 { pt3dadd( 23.1587, -52.0548, 11.3321, 0.37 ) }
    dend_47 { pt3dadd( 23.1754, -52.1381, 11.4025, 0.37 ) }
    dend_47 { pt3dadd( 23.39, -52.7115, 11.9539, 0.52 ) }
    dend_47 { pt3dadd( 23.594, -53.0937, 12.3482, 0.88 ) }
    dend_47 { pt3dadd( 24.0935, -53.8461, 13.2161, 0.37 ) }
    dend_47 { pt3dadd( 24.4861, -54.3525, 13.7898, 0.29 ) }
    dend_47 { pt3dadd( 25.1234, -55.1295, 14.6292, 1.77 ) }
    dend_47 { pt3dadd( 25.414, -55.5087, 15.037, 2.58 ) }
    dend_47 { pt3dadd( 25.4507, -55.5632, 15.0969, 2.58 ) }
    dend_47 { pt3dadd( 25.8571, -56.3272, 15.98, 2.58 ) }
    dend_47 { pt3dadd( 26.1932, -57.0909, 16.8583, 0.37 ) }
    dend_47 { pt3dadd( 26.5017, -57.8575, 17.7585, 0.37 ) }
    dend_47 { pt3dadd( 26.8003, -58.604, 18.5999, 0.66 ) }
    dend_47 { pt3dadd( 27.0459, -59.1987, 19.2696, 0.74 ) }
    dend_47 { pt3dadd( 27.3989, -59.9325, 20.0632, 0.29 ) }
    dend_47 { pt3dadd( 27.5941, -60.2755, 20.4321, 0.29 ) }
    dend_47 { pt3dadd( 27.7349, -60.4643, 20.6415, 1.11 ) }
    dend_47 { pt3dadd( 27.9301, -60.67, 20.8501, 1.33 ) }
    dend_47 { pt3dadd( 28.3638, -61.0455, 21.1896, 0.88 ) }
    dend_47 { pt3dadd( 29.0598, -61.5977, 21.6821, 0.29 ) }
    dend_47 { pt3dadd( 29.799, -62.137, 22.1705, 0.29 ) }
    dend_47 { pt3dadd( 30.5004, -62.6309, 22.6481, 2.65 ) }
    dend_47 { pt3dadd( 30.5362, -62.657, 22.6757, 2.65 ) }
    dend_47 { pt3dadd( 30.9485, -62.9762, 23.0518, 3.09 ) }
    dend_47 { pt3dadd( 31.58, -63.5617, 23.8929, 0.37 ) }
    dend_47 { pt3dadd( 32.0127, -64.0323, 24.6037, 0.15 ) }
    dend_47 { pt3dadd( 32.2679, -64.3426, 25.0695, 0.15 ) }
    dend_47 { pt3dadd( 32.7055, -64.9312, 25.9614, 2.14 ) }
    dend_47 { pt3dadd( 33.0456, -65.4666, 26.7563, 2.58 ) }
    dend_47 { pt3dadd( 33.8809, -67.013, 28.9283, 0.44 ) }
    dend_47 { pt3dadd( 34.0247, -67.3631, 29.4144, 0.88 ) }
    dend_47 { pt3dadd( 34.0653, -67.4914, 29.5928, 0.88 ) }
    dend_47 { pt3dadd( 34.0741, -67.5263, 29.6401, 0.88 ) }
    dend_47 { pt3dadd( 34.251, -68.3329, 30.6465, 0.22 ) }
    dend_47 { pt3dadd( 34.36, -68.853, 31.2476, 0.22 ) }
    dend_47 { pt3dadd( 34.498, -69.5252, 31.9714, 1.55 ) }
    dend_47 { pt3dadd( 34.6817, -70.4002, 32.9219, 2.14 ) }
    dend_47 { pt3dadd( 34.8881, -71.4333, 33.9953, 0.15 ) }
    dend_47 { pt3dadd( 34.9491, -71.7786, 34.3328, 0.81 ) }
    dend_47 { pt3dadd( 35.0764, -72.5022, 34.9968, 0.15 ) }
    dend_47 { pt3dadd( 35.1546, -72.9871, 35.4241, 1.55 ) }
    dend_47 { pt3dadd( 35.1923, -73.2112, 35.6076, 1.77 ) }
    dend_47 { pt3dadd( 35.3619, -74.3048, 36.4562, 0.15 ) }
    dend_47 { pt3dadd( 35.5071, -75.4795, 37.4451, 0.15 ) }
    dend_47 { pt3dadd( 35.5218, -75.6988, 37.6687, 0.52 ) }
    dend_47 { pt3dadd( 35.5249, -76.4278, 38.4998, 0.22 ) }
    dend_47 { pt3dadd( 35.4935, -77.0666, 39.3079, 0.74 ) }
    dend_47 { pt3dadd( 35.4818, -77.2135, 39.5095, 0.74 ) }
    dend_47 { pt3dadd( 35.3838, -77.9771, 40.7124, 0.59 ) }
    dend_47 { pt3dadd( 35.1964, -78.8402, 42.2638, 0.22 ) }
    dend_47 { pt3dadd( 35.1568, -78.9665, 42.51, 0.52 ) }
    dend_47 { pt3dadd( 35.0379, -79.2226, 43.0847, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.3732, -37.3215, 5.57376, 0.88 ) }
    dend_40 { pt3dadd( 6.73929, -38.6275, 5.71435, 0.88 ) }
    dend_40 { pt3dadd( 6.34462, -39.4454, 5.80572, 0.37 ) }
    dend_40 { pt3dadd( 5.91574, -40.3412, 5.92623, 0.37 ) }
    dend_40 { pt3dadd( 5.27449, -41.6769, 6.08664, 0.37 ) }
    dend_40 { pt3dadd( 4.94272, -42.4121, 6.16438, 1.47 ) }
    dend_40 { pt3dadd( 4.59376, -43.2927, 6.17219, 2.14 ) }
    dend_40 { pt3dadd( 4.4599, -43.6654, 6.15518, 2.14 ) }
    dend_40 { pt3dadd( 4.19943, -44.6995, 6.02299, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 4.16095, -45.5713, 5.69993, 0.44 ) }
    dend_40 { pt3dadd( 4.24179, -46.4347, 5.23808, 0.37 ) }
    dend_40 { pt3dadd( 4.50392, -48.0919, 4.18605, 1.77 ) }
    dend_40 { pt3dadd( 4.57359, -48.5376, 3.87704, 2.14 ) }
    dend_40 { pt3dadd( 4.66237, -49.323, 3.31956, 2.21 ) }
    dend_40 { pt3dadd( 4.81869, -51.817, 1.56107, 0.29 ) }
    dend_40 { pt3dadd( 4.82001, -52.5625, 1.06768, 0.29 ) }
    dend_40 { pt3dadd( 4.71058, -53.6669, 0.391482, 0.29 ) }
    dend_40 { pt3dadd( 4.50127, -54.7038, -0.148696, 0.29 ) }
    dend_40 { pt3dadd( 4.19507, -55.8225, -0.70406, 0.29 ) }
    dend_40 { pt3dadd( 3.80692, -56.832, -1.13469, 0.88 ) }
    dend_40 { pt3dadd( 3.56005, -57.3029, -1.26773, 1.62 ) }
    dend_40 { pt3dadd( 2.95073, -58.3753, -1.56846, 1.99 ) }
    dend_40 { pt3dadd( 2.7753, -58.6955, -1.63954, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.47908, -87.2147, 18.5795, 0.29 ) }
    dend_36 { pt3dadd( -6.51017, -88.8049, 18.0694, 0.29 ) }
    dend_36 { pt3dadd( -6.04504, -89.1914, 17.9648, 0.44 ) }
    dend_36 { pt3dadd( -4.49043, -90.5531, 17.7197, 0.22 ) }
    dend_36 { pt3dadd( -3.3136, -91.68, 17.6672, 0.22 ) }
    dend_36 { pt3dadd( -3.25232, -91.7421, 17.6693, 0.22 ) }
    dend_36 { pt3dadd( -2.96367, -92.0445, 17.6937, 0.66 ) }
    dend_36 { pt3dadd( -2.58611, -92.4941, 17.7987, 0.66 ) }
    dend_36 { pt3dadd( -1.6902, -93.5433, 18.1608, 0.22 ) }
    dend_36 { pt3dadd( -0.788717, -94.5955, 18.6384, 1.4 ) }
    dend_36 { pt3dadd( -0.413768, -95.0321, 18.8354, 1.84 ) }
    dend_36 { pt3dadd( -0.367713, -95.0859, 18.859, 1.84 ) }
    dend_36 { pt3dadd( 0.712308, -96.3778, 19.4016, 0.29 ) }
    dend_36 { pt3dadd( 1.66891, -97.6577, 19.9058, 0.29 ) }
    dend_36 { pt3dadd( 2.30079, -98.652, 20.2446, 0.29 ) }
    dend_36 { pt3dadd( 2.88129, -99.7801, 20.557, 1.69 ) }
    dend_36 { pt3dadd( 3.12133, -100.42, 20.7233, 2.28 ) }
    dend_36 { pt3dadd( 3.25724, -100.95, 20.8429, 2.5 ) }
    dend_36 { pt3dadd( 3.45161, -102.85, 21.2862, 0.29 ) }
    dend_36 { pt3dadd( 3.45794, -104.197, 21.6018, 0.29 ) }
    dend_36 { pt3dadd( 3.41254, -105.546, 21.9243, 0.29 ) }
    dend_36 { pt3dadd( 3.34258, -107.08, 22.3128, 2.06 ) }
    dend_36 { pt3dadd( 3.29772, -108.192, 22.611, 2.65 ) }
    dend_36 { pt3dadd( 3.26128, -110.558, 23.2923, 0.29 ) }
    dend_36 { pt3dadd( 3.28215, -111.697, 23.6494, 0.22 ) }
    dend_36 { pt3dadd( 3.32193, -112.59, 23.9552, 0.22 ) }
    dend_36 { pt3dadd( 3.37885, -113.303, 24.2031, 0.88 ) }
    dend_36 { pt3dadd( 3.44083, -113.813, 24.3772, 1.18 ) }
    dend_36 { pt3dadd( 3.50975, -114.229, 24.5248, 1.18 ) }
    dend_36 { pt3dadd( 3.79598, -115.429, 24.9485, 0.22 ) }
    dend_36 { pt3dadd( 3.94853, -115.994, 25.1749, 0.22 ) }
    dend_36 { pt3dadd( 4.12286, -116.659, 25.4789, 0.22 ) }
    dend_36 { pt3dadd( 4.28734, -117.237, 25.7608, 1.25 ) }
    dend_36 { pt3dadd( 4.47974, -117.775, 26.0768, 1.25 ) }
    dend_36 { pt3dadd( 5.09659, -119.242, 27.0069, 0.22 ) }
    dend_36 { pt3dadd( 5.53525, -119.99, 27.5342, 0.22 ) }
    dend_36 { pt3dadd( 6.30701, -120.987, 28.2804, 1.11 ) }
    dend_36 { pt3dadd( 6.70621, -121.409, 28.6104, 1.55 ) }
    dend_36 { pt3dadd( 8.06572, -122.646, 29.5922, 0.22 ) }
    dend_36 { pt3dadd( 9.03264, -123.347, 30.1627, 0.22 ) }
    dend_36 { pt3dadd( 10.6077, -124.195, 30.866, 0.22 ) }
    dend_36 { pt3dadd( 11.6932, -124.668, 31.2674, 1.69 ) }
    dend_36 { pt3dadd( 12.1274, -124.808, 31.3824, 1.99 ) }
    dend_36 { pt3dadd( 12.2126, -124.83, 31.4, 1.99 ) }
    dend_36 { pt3dadd( 14.0912, -125.125, 31.5124, 0.29 ) }
    dend_36 { pt3dadd( 15.7089, -125.297, 31.5103, 0.29 ) }
    dend_36 { pt3dadd( 15.7993, -125.305, 31.5044, 0.29 ) }
    dend_36 { pt3dadd( 17.4423, -125.443, 31.3751, 1.4 ) }
    dend_36 { pt3dadd( 18.3054, -125.503, 31.2857, 1.62 ) }
    dend_36 { pt3dadd( 21.2524, -125.668, 30.885, 0.22 ) }
    dend_36 { pt3dadd( 21.3406, -125.669, 30.8667, 0.22 ) }
    dend_36 { pt3dadd( 22.6081, -125.652, 30.5146, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.47908, -87.2147, 18.5795, 0.29 ) }
    dend_35 { pt3dadd( -8.26115, -89.058, 19.0862, 0.29 ) }
    dend_35 { pt3dadd( -8.11249, -90.2618, 19.4164, 0.29 ) }
    dend_35 { pt3dadd( -8.04297, -90.8026, 19.5598, 0.74 ) }
    dend_35 { pt3dadd( -7.9188, -91.7817, 19.7961, 0.81 ) }
    dend_35 { pt3dadd( -7.83916, -92.3996, 19.9368, 1.11 ) }
    dend_35 { pt3dadd( -7.72034, -93.2855, 20.1259, 0.44 ) }
    dend_35 { pt3dadd( -7.60824, -94.0434, 20.2577, 0.29 ) }
    dend_35 { pt3dadd( -7.46676, -94.9671, 20.4106, 0.29 ) }
    dend_35 { pt3dadd( -7.24994, -96.2723, 20.6213, 2.21 ) }
    dend_35 { pt3dadd( -7.13289, -96.8737, 20.7067, 2.73 ) }
    dend_35 { pt3dadd( -6.74686, -98.53, 20.9193, 0.29 ) }
    dend_35 { pt3dadd( -6.57318, -99.1652, 20.9888, 0.29 ) }
    dend_35 { pt3dadd( -6.35239, -99.8627, 21.0672, 0.81 ) }
    dend_35 { pt3dadd( -6.30119, -100.002, 21.0836, 0.96 ) }
    dend_35 { pt3dadd( -5.91455, -100.92, 21.2207, 0.22 ) }
    dend_35 { pt3dadd( -5.56161, -101.714, 21.3616, 0.22 ) }
    dend_35 { pt3dadd( -5.33341, -102.205, 21.4674, 1.33 ) }
    dend_35 { pt3dadd( -5.16247, -102.632, 21.5802, 1.62 ) }
    dend_35 { pt3dadd( -5.14075, -102.701, 21.5998, 1.62 ) }
    dend_35 { pt3dadd( -4.90058, -103.685, 21.9115, 0.29 ) }
    dend_35 { pt3dadd( -4.75527, -104.396, 22.1674, 0.22 ) }
    dend_35 { pt3dadd( -4.62643, -105.051, 22.4249, 0.22 ) }
    dend_35 { pt3dadd( -4.48487, -105.765, 22.7218, 1.11 ) }
    dend_35 { pt3dadd( -4.37572, -106.326, 22.9619, 1.47 ) }
    dend_35 { pt3dadd( -4.23388, -107.329, 23.4402, 0.22 ) }
    dend_35 { pt3dadd( -4.19206, -108.018, 23.8047, 0.22 ) }
    dend_35 { pt3dadd( -4.18695, -108.724, 24.2055, 0.74 ) }
    dend_35 { pt3dadd( -4.20515, -108.923, 24.3162, 0.74 ) }
    dend_35 { pt3dadd( -4.21541, -108.979, 24.3468, 0.74 ) }
    dend_35 { pt3dadd( -4.72275, -110.699, 25.2686, 0.22 ) }
    dend_35 { pt3dadd( -5.08222, -111.678, 25.7739, 1.99 ) }
    dend_35 { pt3dadd( -5.21993, -112.015, 25.9407, 1.99 ) }
    dend_35 { pt3dadd( -5.88984, -113.458, 26.6812, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -6.60446, -114.904, 27.4446, 0.22 ) }
    dend_35 { pt3dadd( -7.13978, -115.939, 27.9876, 1.84 ) }
    dend_35 { pt3dadd( -7.24299, -116.131, 28.0865, 1.99 ) }
    dend_35 { pt3dadd( -7.31506, -116.26, 28.1554, 1.99 ) }
    dend_35 { pt3dadd( -8.39882, -118.128, 29.2042, 0.22 ) }
    dend_35 { pt3dadd( -8.71251, -118.655, 29.5278, 0.96 ) }
    dend_35 { pt3dadd( -9.23096, -119.487, 30.0543, 0.22 ) }
    dend_35 { pt3dadd( -9.44998, -119.843, 30.2915, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.7069, -66.7365, -110.587, 0.29 ) }
    dend_27 { pt3dadd( -29.4257, -68.205, -110.899, 0.29 ) }
    dend_27 { pt3dadd( -28.0477, -69.8364, -111.28, 0.22 ) }
    dend_27 { pt3dadd( -27.5884, -70.4361, -111.418, 0.52 ) }
    dend_27 { pt3dadd( -27.2362, -70.979, -111.549, 0.52 ) }
    dend_27 { pt3dadd( -26.5118, -72.2578, -111.852, 0.22 ) }
    dend_27 { pt3dadd( -25.9329, -73.3476, -112.109, 0.22 ) }
    dend_27 { pt3dadd( -25.5351, -74.2952, -112.341, 0.81 ) }
    dend_27 { pt3dadd( -25.1906, -75.2006, -112.563, 1.11 ) }
    dend_27 { pt3dadd( -24.6186, -76.835, -112.917, 0.22 ) }
    dend_27 { pt3dadd( -24.3025, -77.8409, -113.109, 0.22 ) }
    dend_27 { pt3dadd( -23.9897, -78.9916, -113.296, 0.22 ) }
    dend_27 { pt3dadd( -23.7923, -79.8483, -113.444, 1.11 ) }
    dend_27 { pt3dadd( -23.3857, -81.6044, -113.762, 0.22 ) }
    dend_27 { pt3dadd( -22.8442, -83.72, -114.164, 0.22 ) }
    dend_27 { pt3dadd( -22.4935, -84.9342, -114.4, 1.33 ) }
    dend_27 { pt3dadd( -22.345, -85.371, -114.507, 1.47 ) }
    dend_27 { pt3dadd( -21.456, -87.7396, -115.192, 0.22 ) }
    dend_27 { pt3dadd( -20.9825, -88.7404, -115.557, 1.11 ) }
    dend_27 { pt3dadd( -20.5857, -89.4167, -115.869, 1.47 ) }
    dend_27 { pt3dadd( -20.155, -90.029, -116.203, 1.47 ) }
    dend_27 { pt3dadd( -18.702, -91.7612, -117.278, 0.15 ) }
    dend_27 { pt3dadd( -18.6427, -91.8199, -117.32, 0.15 ) }
    dend_27 { pt3dadd( -17.4012, -92.6808, -118.122, 0.88 ) }
    dend_27 { pt3dadd( -17.3323, -92.7248, -118.171, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -30.7069, -66.7365, -110.587, 1.69 ) }
    dend_26 { pt3dadd( -31.4688, -67.9716, -110.738, 1.69 ) }
    dend_26 { pt3dadd( -32.3897, -69.0343, -110.952, 0.22 ) }
    dend_26 { pt3dadd( -32.4375, -69.0827, -110.963, 0.22 ) }
    dend_26 { pt3dadd( -33.3544, -69.9657, -111.167, 0.22 ) }
    dend_26 { pt3dadd( -34.1262, -70.6785, -111.387, 0.88 ) }
    dend_26 { pt3dadd( -34.8359, -71.3184, -111.611, 1.11 ) }
    dend_26 { pt3dadd( -36.0947, -72.2601, -112.014, 0.22 ) }
    dend_26 { pt3dadd( -36.6186, -72.6017, -112.174, 0.52 ) }
    dend_26 { pt3dadd( -36.7951, -72.6994, -112.227, 0.52 ) }
    dend_26 { pt3dadd( -38.1474, -73.2443, -112.684, 0.37 ) }
    dend_26 { pt3dadd( -38.2086, -73.267, -112.705, 0.29 ) }
    dend_26 { pt3dadd( -38.826, -73.5095, -112.889, 0.22 ) }
    dend_26 { pt3dadd( -39.1417, -73.6459, -112.976, 0.37 ) }
    dend_26 { pt3dadd( -39.8275, -73.9466, -113.207, 0.37 ) }
    dend_26 { pt3dadd( -40.9384, -74.5519, -113.87, 0.29 ) }
    dend_26 { pt3dadd( -41.7261, -75.1039, -114.491, 0.29 ) }
    dend_26 { pt3dadd( -42.3433, -75.6148, -115.084, 0.22 ) }
    dend_26 { pt3dadd( -43.123, -76.4371, -116.036, 1.11 ) }
    dend_26 { pt3dadd( -43.6162, -77.06, -116.752, 1.33 ) }
    dend_26 { pt3dadd( -44.9995, -78.9447, -118.948, 0.29 ) }
    dend_26 { pt3dadd( -45.3539, -79.4908, -119.6, 0.59 ) }
    dend_26 { pt3dadd( -45.3737, -79.5238, -119.644, 0.59 ) }
    dend_26 { pt3dadd( -45.8476, -80.4068, -120.883, 0.29 ) }
    dend_26 { pt3dadd( -45.8648, -80.4461, -120.936, 0.29 ) }
    dend_26 { pt3dadd( -46.3645, -81.6187, -122.286, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -25.3295, 117.811, -49.8548, 0.22 ) }
    dend_18 { pt3dadd( -24.8821, 119.814, -52.1429, 0.22 ) }
    dend_18 { pt3dadd( -24.712, 120.488, -52.8813, 0.37 ) }
    dend_18 { pt3dadd( -24.6124, 120.862, -53.2543, 0.15 ) }
    dend_18 { pt3dadd( -24.522, 121.143, -53.5419, 0.44 ) }
    dend_18 { pt3dadd( -24.3155, 121.78, -54.2014, 0.22 ) }
    dend_18 { pt3dadd( -24.0683, 122.61, -55.0741, 1.25 ) }
    dend_18 { pt3dadd( -23.7859, 123.656, -56.0434, 0.22 ) }
    dend_18 { pt3dadd( -23.6736, 124.143, -56.5303, 1.03 ) }
    dend_18 { pt3dadd( -23.4394, 125.358, -57.8062, 0.22 ) }
    dend_18 { pt3dadd( -23.4028, 125.592, -58.0582, 0.22 ) }
    dend_18 { pt3dadd( -23.3333, 126.268, -58.7686, 1.11 ) }
    dend_18 { pt3dadd( -23.3263, 126.49, -58.9878, 1.4 ) }
    dend_18 { pt3dadd( -23.3709, 127.52, -59.8912, 0.22 ) }
    dend_18 { pt3dadd( -23.3906, 127.755, -60.0796, 0.59 ) }
    dend_18 { pt3dadd( -23.5156, 128.887, -60.7827, 0.22 ) }
    dend_18 { pt3dadd( -23.5549, 129.302, -61.003, 0.88 ) }
    dend_18 { pt3dadd( -23.5854, 129.638, -61.1331, 1.03 ) }
    dend_18 { pt3dadd( -23.6837, 130.513, -61.3884, 0.22 ) }
    dend_18 { pt3dadd( -23.7393, 130.959, -61.4671, 0.59 ) }
    dend_18 { pt3dadd( -23.8615, 131.798, -61.5693, 0.22 ) }
    dend_18 { pt3dadd( -23.9403, 132.383, -61.6135, 0.22 ) }
    dend_18 { pt3dadd( -24.0432, 133.391, -61.6957, 1.47 ) }
    dend_18 { pt3dadd( -24.0634, 133.682, -61.718, 1.47 ) }
    dend_18 { pt3dadd( -24.0757, 134.472, -61.8089, 0.22 ) }
    dend_18 { pt3dadd( -24.0629, 134.866, -61.879, 0.52 ) }
    dend_18 { pt3dadd( -23.9981, 135.935, -62.1196, 0.22 ) }
    dend_18 { pt3dadd( -23.9723, 136.246, -62.2003, 1.03 ) }
    dend_18 { pt3dadd( -23.9532, 136.448, -62.2636, 1.03 ) }
    dend_18 { pt3dadd( -23.7527, 138.616, -63.0269, 0.22 ) }
    dend_18 { pt3dadd( -23.6942, 139.278, -63.2687, 0.96 ) }
    dend_18 { pt3dadd( -23.6675, 139.619, -63.3986, 0.96 ) }
    dend_18 { pt3dadd( -23.6654, 139.665, -63.4165, 0.96 ) }
    dend_18 { pt3dadd( -23.6146, 140.83, -63.905, 0.22 ) }
    dend_18 { pt3dadd( -23.5856, 141.478, -64.1994, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -25.3295, 117.811, -49.8548, 0.22 ) }
    dend_17 { pt3dadd( -25.7597, 117.969, -51.1915, 0.22 ) }
    dend_17 { pt3dadd( -26.4594, 118.136, -53.3513, 0.15 ) }
    dend_17 { pt3dadd( -26.9867, 118.224, -54.9305, 1.4 ) }
    dend_17 { pt3dadd( -27.418, 118.296, -56.2225, 1.4 ) }
    dend_17 { pt3dadd( -27.9643, 118.387, -57.8588, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -28.1788, 118.423, -58.5014, 0.22 ) }
    dend_17 { pt3dadd( -28.4039, 118.433, -59.3281, 0.88 ) }
    dend_17 { pt3dadd( -28.4804, 118.418, -59.5633, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -79.5721, 137.993, -74.5342, 0.66 ) }
    dend_5 { pt3dadd( -83.6369, 136.777, -80.7464, 0.66 ) }
    dend_5 { pt3dadd( -84.2086, 136.701, -81.5538, 0.29 ) }
    dend_5 { pt3dadd( -84.5393, 136.722, -81.9847, 0.22 ) }
    dend_5 { pt3dadd( -85.0885, 136.825, -82.6495, 0.22 ) }
    dend_5 { pt3dadd( -85.577, 136.956, -83.2105, 1.03 ) }
    dend_5 { pt3dadd( -86.0051, 137.089, -83.6646, 1.47 ) }
    dend_5 { pt3dadd( -86.9426, 137.866, -84.0856, 0.88 ) }
    dend_5 { pt3dadd( -87.8383, 138.549, -84.4886, 0.22 ) }
    dend_5 { pt3dadd( -88.1174, 138.704, -84.6175, 0.29 ) }
    dend_5 { pt3dadd( -88.2011, 138.732, -84.6498, 0.29 ) }
    dend_5 { pt3dadd( -88.8445, 138.858, -84.8665, 0.15 ) }
    dend_5 { pt3dadd( -89.5958, 138.917, -85.1114, 0.96 ) }
    dend_5 { pt3dadd( -90.2999, 138.923, -85.3107, 1.4 ) }
    dend_5 { pt3dadd( -91.73, 138.878, -85.8475, 0.22 ) }
    dend_5 { pt3dadd( -92.7396, 138.862, -86.3345, 0.22 ) }
    dend_5 { pt3dadd( -93.5948, 138.857, -86.9201, 0.74 ) }
    dend_5 { pt3dadd( -94.7647, 138.875, -87.8703, 0.22 ) }
    dend_5 { pt3dadd( -95.178, 138.888, -88.2477, 0.96 ) }
    dend_5 { pt3dadd( -96.6235, 138.962, -89.7339, 1.33 ) }
    dend_5 { pt3dadd( -97.253, 139.033, -90.4205, 1.84 ) }
    dend_5 { pt3dadd( -99.4944, 139.339, -93.0308, 0.88 ) }
    dend_5 { pt3dadd( -99.8209, 139.382, -93.4104, 1.03 ) }
    dend_5 { pt3dadd( -99.8718, 139.389, -93.4658, 1.03 ) }
    dend_5 { pt3dadd( -101.611, 139.598, -95.2531, 0.22 ) }
    dend_5 { pt3dadd( -102.583, 139.711, -96.1232, 1.33 ) }
    dend_5 { pt3dadd( -104.971, 139.95, -97.967, 0.22 ) }
    dend_5 { pt3dadd( -105.973, 140.05, -98.5902, 1.33 ) }
    dend_5 { pt3dadd( -107.083, 140.123, -99.1864, 0.22 ) }
    dend_5 { pt3dadd( -107.135, 140.124, -99.209, 0.22 ) }
    dend_5 { pt3dadd( -108.174, 140.066, -99.4781, 0.22 ) }
    dend_5 { pt3dadd( -109.134, 139.921, -99.5976, 1.4 ) }
    dend_5 { pt3dadd( -109.695, 139.808, -99.5451, 1.84 ) }
    dend_5 { pt3dadd( -110.435, 139.593, -99.4239, 1.33 ) }
    dend_5 { pt3dadd( -111.35, 139.247, -99.261, 0.81 ) }
    dend_5 { pt3dadd( -112.159, 138.891, -99.1122, 0.22 ) }
    dend_5 { pt3dadd( -112.904, 138.462, -98.9719, 1.4 ) }
    dend_5 { pt3dadd( -113.308, 138.194, -98.8926, 1.69 ) }
    dend_5 { pt3dadd( -113.555, 138.022, -98.8388, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -79.5721, 137.993, -74.5342, 0.29 ) }
    dend_4 { pt3dadd( -82.6918, 139.619, -77.5934, 0.29 ) }
    dend_4 { pt3dadd( -83.5412, 140.126, -78.41, 0.22 ) }
    dend_4 { pt3dadd( -83.9575, 140.417, -78.8308, 0.96 ) }
    dend_4 { pt3dadd( -84.2357, 140.628, -79.1196, 1.18 ) }
    dend_4 { pt3dadd( -85.2925, 141.53, -80.2501, 0.22 ) }
    dend_4 { pt3dadd( -85.6303, 141.842, -80.6192, 0.52 ) }
    dend_4 { pt3dadd( -85.7766, 142.061, -80.7733, 0.52 ) }
    dend_4 { pt3dadd( -86.7403, 143.597, -81.7298, 0.22 ) }
    dend_4 { pt3dadd( -86.7744, 143.656, -81.7599, 0.22 ) }
    dend_4 { pt3dadd( -87.1794, 144.422, -82.0742, 0.22 ) }
    dend_4 { pt3dadd( -87.2085, 144.486, -82.0916, 0.22 ) }
    dend_4 { pt3dadd( -87.8983, 146.037, -82.3428, 0.22 ) }
    dend_4 { pt3dadd( -87.9273, 146.104, -82.3467, 0.22 ) }
    dend_4 { pt3dadd( -88.5399, 147.499, -82.4107, 0.22 ) }
    dend_4 { pt3dadd( -88.5691, 147.566, -82.4179, 0.22 ) }
    dend_4 { pt3dadd( -88.8762, 148.271, -82.5288, 0.44 ) }
    dend_4 { pt3dadd( -89.5198, 149.834, -82.8422, 0.15 ) }
    dend_4 { pt3dadd( -90.3497, 151.956, -83.4422, 0.15 ) }
    dend_4 { pt3dadd( -91.0544, 153.836, -84.0672, 0.15 ) }
    dend_4 { pt3dadd( -91.5466, 155.231, -84.6093, 0.15 ) }
    dend_4 { pt3dadd( -91.8772, 156.183, -85.0407, 0.88 ) }
    dend_4 { pt3dadd( -92.0965, 156.843, -85.3865, 1.25 ) }
    dend_4 { pt3dadd( -92.6042, 158.542, -86.4258, 0.22 ) }
    dend_4 { pt3dadd( -92.7177, 158.972, -86.7171, 0.59 ) }
    dend_4 { pt3dadd( -92.8217, 159.437, -87.024, 0.59 ) }
    dend_4 { pt3dadd( -93.1515, 160.982, -88.0081, 0.22 ) }
    dend_4 { pt3dadd( -93.2677, 161.56, -88.3628, 0.22 ) }
    dend_4 { pt3dadd( -93.3213, 161.82, -88.5168, 0.66 ) }
    dend_4 { pt3dadd( -93.4177, 162.354, -88.8035, 0.74 ) }
    dend_4 { pt3dadd( -93.5988, 163.974, -89.5305, 0.15 ) }
    dend_4 { pt3dadd( -93.6476, 164.964, -89.8732, 0.15 ) }
    dend_4 { pt3dadd( -93.6468, 165.024, -89.8886, 0.15 ) }
    dend_4 { pt3dadd( -93.6203, 165.803, -90.0668, 0.52 ) }
    dend_4 { pt3dadd( -93.5693, 166.474, -90.18, 0.52 ) }
    dend_4 { pt3dadd( -93.3582, 168.461, -90.3811, 0.22 ) }
    dend_4 { pt3dadd( -93.2054, 169.668, -90.3968, 1.03 ) }
    dend_4 { pt3dadd( -93.1293, 170.34, -90.3656, 1.03 ) }
    dend_4 { pt3dadd( -93.1251, 170.423, -90.3567, 1.03 ) }
    dend_4 { pt3dadd( -93.1655, 171.649, -90.1287, 0.15 ) }
    dend_4 { pt3dadd( -93.2625, 172.167, -90.0016, 0.52 ) }
    dend_4 { pt3dadd( -93.4396, 172.605, -89.8764, 0.52 ) }
    dend_4 { pt3dadd( -93.8226, 173.393, -89.6006, 0.22 ) }
    dend_4 { pt3dadd( -94.3549, 174.345, -89.2394, 0.22 ) }
    dend_4 { pt3dadd( -94.6409, 174.797, -89.0682, 0.22 ) }
    dend_4 { pt3dadd( -95.032, 175.293, -88.8843, 0.59 ) }
    dend_4 { pt3dadd( -95.4937, 175.879, -88.6692, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.7753, -58.6955, -1.63954, 0.37 ) }
    dend_46 { pt3dadd( 2.02106, -60.2069, -1.134, 0.37 ) }
    dend_46 { pt3dadd( 1.70109, -60.8263, -0.821685, 0.74 ) }
    dend_46 { pt3dadd( 0.951128, -62.2606, 0.0624631, 0.22 ) }
    dend_46 { pt3dadd( 0.572178, -62.9716, 0.539814, 0.81 ) }
    dend_46 { pt3dadd( 0.350479, -63.3821, 0.842908, 0.81 ) }
    dend_46 { pt3dadd( -0.456231, -64.8572, 2.01778, 1.47 ) }
    dend_46 { pt3dadd( -1.02734, -65.8652, 2.99345, 2.06 ) }
    dend_46 { pt3dadd( -1.64151, -67.0196, 4.27605, 0.22 ) }
    dend_46 { pt3dadd( -1.83119, -67.4087, 4.73514, 0.52 ) }
    dend_46 { pt3dadd( -2.17408, -68.1155, 5.59602, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( -2.48959, -68.7698, 6.39193, 1.77 ) }
    dend_46 { pt3dadd( -2.8715, -69.5685, 7.33364, 2.43 ) }
    dend_46 { pt3dadd( -3.93959, -71.7831, 9.86115, 0.22 ) }
    dend_46 { pt3dadd( -4.06837, -72.0549, 10.1726, 0.59 ) }
    dend_46 { pt3dadd( -4.25948, -72.4669, 10.6322, 0.22 ) }
    dend_46 { pt3dadd( -4.37066, -72.7072, 10.8845, 0.44 ) }
    dend_46 { pt3dadd( -4.74407, -73.4991, 11.6715, 0.15 ) }
    dend_46 { pt3dadd( -5.07815, -74.1259, 12.2295, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 2.7753, -58.6955, -1.63954, 0.29 ) }
    dend_41 { pt3dadd( 1.91948, -60.0489, -2.43909, 0.29 ) }
    dend_41 { pt3dadd( 1.50803, -60.7309, -2.83435, 0.29 ) }
    dend_41 { pt3dadd( 1.09457, -61.4271, -3.23136, 0.29 ) }
    dend_41 { pt3dadd( 0.568667, -62.2696, -3.63735, 0.29 ) }
    dend_41 { pt3dadd( 0.0573535, -63.0545, -3.97384, 0.29 ) }
    dend_41 { pt3dadd( -0.336656, -63.6546, -4.2156, 1.77 ) }
    dend_41 { pt3dadd( -0.818172, -64.3293, -4.42031, 2.21 ) }
    dend_41 { pt3dadd( -0.984524, -64.5683, -4.48437, 2.36 ) }
    dend_41 { pt3dadd( -1.74673, -65.7306, -4.7477, 0.74 ) }
    dend_41 { pt3dadd( -2.16271, -66.3206, -4.87981, 0.29 ) }
    dend_41 { pt3dadd( -2.61927, -66.9302, -5.04027, 0.29 ) }
    dend_41 { pt3dadd( -3.25274, -67.7382, -5.28052, 1.92 ) }
    dend_41 { pt3dadd( -3.63983, -68.2158, -5.44379, 2.28 ) }
    dend_41 { pt3dadd( -3.9234, -68.5701, -5.59745, 2.28 ) }
    dend_41 { pt3dadd( -4.72293, -69.6166, -6.1517, 0.29 ) }
    dend_41 { pt3dadd( -5.35722, -70.4838, -6.62642, 0.22 ) }
    dend_41 { pt3dadd( -5.56662, -70.7838, -6.79777, 0.96 ) }
    dend_41 { pt3dadd( -5.6817, -70.9947, -6.95341, 1.18 ) }
    dend_41 { pt3dadd( -5.98875, -71.7239, -7.56911, 0.22 ) }
    dend_41 { pt3dadd( -6.03108, -71.9415, -7.82869, 0.22 ) }
    dend_41 { pt3dadd( -6.03802, -72.1787, -8.17334, 0.22 ) }
    dend_41 { pt3dadd( -6.04525, -72.4998, -8.70481, 0.66 ) }
    dend_41 { pt3dadd( -6.08931, -73.5165, -10.6521, 1.62 ) }
    dend_41 { pt3dadd( -6.10231, -73.6266, -10.9111, 2.14 ) }
    dend_41 { pt3dadd( -6.37175, -74.5537, -13.5802, 0.37 ) }
    dend_41 { pt3dadd( -6.50035, -74.7928, -14.4027, 0.37 ) }
    dend_41 { pt3dadd( -6.63962, -74.9461, -15.1001, 1.47 ) }
    dend_41 { pt3dadd( -6.86367, -75.0816, -16.0674, 1.47 ) }
    dend_41 { pt3dadd( -7.37902, -75.2258, -17.8369, 0.22 ) }
    dend_41 { pt3dadd( -7.6543, -75.2547, -18.6747, 1.25 ) }
    dend_41 { pt3dadd( -7.7978, -75.2486, -19.0348, 1.84 ) }
    dend_41 { pt3dadd( -8.26034, -75.2175, -20.246, 1.84 ) }
    dend_41 { pt3dadd( -9.25244, -75.2098, -22.9807, 0.22 ) }
    dend_41 { pt3dadd( -9.42974, -75.2179, -23.4511, 0.88 ) }
    dend_41 { pt3dadd( -9.67693, -75.2551, -24.1614, 0.88 ) }
    dend_41 { pt3dadd( -9.89397, -75.3264, -24.8447, 0.22 ) }
    dend_41 { pt3dadd( -10.2514, -75.5025, -25.9496, 0.22 ) }
    dend_41 { pt3dadd( -10.498, -75.6751, -26.7177, 1.03 ) }
    dend_41 { pt3dadd( -10.5748, -75.7468, -26.9769, 1.03 ) }
    dend_41 { pt3dadd( -10.8599, -76.2027, -28.6144, 0.22 ) }
    dend_41 { pt3dadd( -10.918, -76.3653, -29.1443, 0.22 ) }
    dend_41 { pt3dadd( -10.9933, -76.7251, -30.2419, 1.25 ) }
    dend_41 { pt3dadd( -11.0719, -77.093, -31.3094, 1.18 ) }
    dend_41 { pt3dadd( -11.0752, -77.1169, -31.372, 1.18 ) }
    dend_41 { pt3dadd( -11.1003, -77.958, -33.3476, 0.22 ) }
    dend_41 { pt3dadd( -11.082, -78.2073, -33.853, 1.18 ) }
    dend_41 { pt3dadd( -11.0443, -78.4169, -34.238, 1.18 ) }
    dend_41 { pt3dadd( -10.7581, -79.2002, -35.4666, 0.22 ) }
    dend_41 { pt3dadd( -10.6724, -79.3906, -35.7506, 0.22 ) }
    dend_41 { pt3dadd( -10.4507, -79.8178, -36.4314, 0.66 ) }
    dend_41 { pt3dadd( -10.3459, -80.0266, -36.7497, 0.81 ) }
    dend_41 { pt3dadd( -10.2516, -80.2043, -37.0273, 0.81 ) }
    dend_41 { pt3dadd( -9.73822, -81.0325, -38.4349, 0.52 ) }
    dend_41 { pt3dadd( -9.15589, -81.9347, -39.9305, 0.22 ) }
    dend_41 { pt3dadd( -8.69061, -82.6968, -41.1815, 0.22 ) }
    dend_41 { pt3dadd( -8.41917, -83.1686, -41.9482, 2.21 ) }
    dend_41 { pt3dadd( -8.18627, -83.6331, -42.686, 2.28 ) }
    dend_41 { pt3dadd( -7.39379, -85.5686, -45.6249, 0.22 ) }
    dend_41 { pt3dadd( -7.27113, -86.0085, -46.2438, 0.22 ) }
    dend_41 { pt3dadd( -7.1077, -86.846, -47.3261, 0.22 ) }
    dend_41 { pt3dadd( -7.10532, -86.8815, -47.3703, 0.22 ) }
    dend_41 { pt3dadd( -7.17472, -87.4409, -48.0824, 0.37 ) }
    dend_41 { pt3dadd( -7.35345, -87.8244, -48.5404, 0.88 ) }
    dend_41 { pt3dadd( -7.9164, -88.4737, -49.2353, 1.69 ) }
    dend_41 { pt3dadd( -8.26016, -88.8267, -49.6422, 2.21 ) }
    dend_41 { pt3dadd( -8.81363, -89.3761, -50.2605, 2.21 ) }
    dend_41 { pt3dadd( -9.27334, -89.8672, -50.8069, 1.11 ) }
    dend_41 { pt3dadd( -9.64259, -90.3309, -51.3002, 0.37 ) }
    dend_41 { pt3dadd( -9.66587, -90.3689, -51.3351, 0.37 ) }
    dend_41 { pt3dadd( -10.0536, -91.1882, -51.9484, 0.37 ) }
    dend_41 { pt3dadd( -10.2075, -91.5562, -52.1699, 0.74 ) }
    dend_41 { pt3dadd( -10.2545, -91.6755, -52.2257, 0.74 ) }
    dend_41 { pt3dadd( -10.4664, -92.2142, -52.449, 0.66 ) }
    dend_41 { pt3dadd( -10.7799, -92.9494, -52.7359, 0.66 ) }
    dend_41 { pt3dadd( -11.0356, -93.5017, -52.9596, 0.52 ) }
    dend_41 { pt3dadd( -11.5941, -94.593, -53.4087, 0.22 ) }
    dend_41 { pt3dadd( -11.999, -95.3832, -53.7399, 1.47 ) }
    dend_41 { pt3dadd( -12.2524, -95.9562, -54.0039, 1.92 ) }
    dend_41 { pt3dadd( -12.4494, -96.4443, -54.25, 2.14 ) }
    dend_41 { pt3dadd( -12.7086, -97.2093, -54.6723, 0.74 ) }
    dend_41 { pt3dadd( -12.8495, -97.7725, -54.9991, 0.29 ) }
    dend_41 { pt3dadd( -12.9503, -98.4101, -55.4062, 0.29 ) }
    dend_41 { pt3dadd( -13.1012, -99.7069, -56.2642, 0.29 ) }
    dend_41 { pt3dadd( -13.14, -100.207, -56.5766, 1.33 ) }
    dend_41 { pt3dadd( -13.1819, -100.844, -56.9577, 1.33 ) }
    dend_41 { pt3dadd( -13.2032, -101.091, -57.0928, 1.33 ) }
    dend_41 { pt3dadd( -13.3065, -102.087, -57.6597, 0.29 ) }
    dend_41 { pt3dadd( -13.3921, -102.595, -57.9573, 0.29 ) }
    dend_41 { pt3dadd( -13.6264, -103.583, -58.5456, 0.29 ) }
    dend_41 { pt3dadd( -13.6389, -103.637, -58.5797, 0.29 ) }
    dend_41 { pt3dadd( -13.8005, -104.325, -59.0129, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -14.0348, -105.244, -59.6148, 1.18 ) }
    dend_41 { pt3dadd( -14.1013, -105.499, -59.7861, 1.33 ) }
    dend_41 { pt3dadd( -14.3518, -106.521, -60.482, 0.22 ) }
    dend_41 { pt3dadd( -14.3643, -106.575, -60.518, 0.22 ) }
    dend_41 { pt3dadd( -14.4689, -107.142, -60.8548, 0.88 ) }
    dend_41 { pt3dadd( -14.5151, -107.493, -61.0275, 0.88 ) }
    dend_41 { pt3dadd( -14.6102, -108.64, -61.434, 0.22 ) }
    dend_41 { pt3dadd( -14.6473, -109.289, -61.6406, 1.33 ) }
    dend_41 { pt3dadd( -14.6688, -109.609, -61.7303, 1.77 ) }
    dend_41 { pt3dadd( -14.74, -110.422, -61.9617, 0.88 ) }
    dend_41 { pt3dadd( -14.8193, -111.135, -62.1671, 0.22 ) }
    dend_41 { pt3dadd( -14.9449, -111.9, -62.3825, 0.59 ) }
    dend_41 { pt3dadd( -15.2228, -113.086, -62.7067, 0.22 ) }
    dend_41 { pt3dadd( -15.4597, -113.941, -62.9389, 0.22 ) }
    dend_41 { pt3dadd( -15.6493, -114.533, -63.0964, 1.18 ) }
    dend_41 { pt3dadd( -15.7888, -114.902, -63.1948, 1.18 ) }
    dend_41 { pt3dadd( -16.1808, -115.799, -63.4489, 0.15 ) }
    dend_41 { pt3dadd( -16.4292, -116.325, -63.6114, 0.15 ) }
    dend_41 { pt3dadd( -16.7689, -117.051, -63.8314, 0.88 ) }
    dend_41 { pt3dadd( -16.9021, -117.344, -63.9266, 1.11 ) }
    dend_41 { pt3dadd( -17.2037, -118.103, -64.2905, 0.37 ) }
    dend_41 { pt3dadd( -17.4443, -118.818, -64.7273, 0.22 ) }
    dend_41 { pt3dadd( -17.5668, -119.333, -65.0907, 1.18 ) }
    dend_41 { pt3dadd( -17.6373, -119.714, -65.3882, 1.18 ) }
    dend_41 { pt3dadd( -17.6456, -119.764, -65.4315, 1.18 ) }
    dend_41 { pt3dadd( -17.8852, -121.361, -66.9024, 0.22 ) }
    dend_41 { pt3dadd( -17.8962, -121.437, -66.9758, 0.37 ) }
    dend_41 { pt3dadd( -17.9742, -122.017, -67.564, 0.15 ) }
    dend_41 { pt3dadd( -18.0142, -122.273, -67.8207, 0.59 ) }
    dend_41 { pt3dadd( -18.216, -123.292, -68.7859, 0.22 ) }
    dend_41 { pt3dadd( -18.3308, -123.791, -69.2061, 1.03 ) }
    dend_41 { pt3dadd( -18.3825, -123.984, -69.3425, 1.03 ) }
    dend_41 { pt3dadd( -18.718, -125.316, -70.1735, 0.22 ) }
    dend_41 { pt3dadd( -18.7957, -125.625, -70.3442, 0.52 ) }
    dend_41 { pt3dadd( -19.0161, -126.501, -70.7358, 0.22 ) }
    dend_41 { pt3dadd( -19.1477, -127.018, -70.9131, 1.03 ) }
    dend_41 { pt3dadd( -19.2402, -127.352, -71.008, 1.03 ) }
    dend_41 { pt3dadd( -19.6225, -128.619, -71.3428, 0.15 ) }
    dend_41 { pt3dadd( -19.7801, -129.074, -71.4485, 0.44 ) }
    dend_41 { pt3dadd( -20.0655, -129.912, -71.6577, 0.15 ) }
    dend_41 { pt3dadd( -20.2007, -130.326, -71.7662, 0.88 ) }
    dend_41 { pt3dadd( -20.344, -130.878, -71.9427, 0.88 ) }
    dend_41 { pt3dadd( -20.5427, -131.971, -72.3322, 0.22 ) }
    dend_41 { pt3dadd( -20.5977, -132.936, -72.8657, 0.22 ) }
    dend_41 { pt3dadd( -20.5971, -133.181, -73.0487, 0.66 ) }
    dend_41 { pt3dadd( -20.5966, -133.405, -73.2222, 0.66 ) }
    dend_41 { pt3dadd( -20.6337, -134.723, -74.3294, 0.37 ) }
    dend_41 { pt3dadd( -20.6536, -135.212, -74.7584, 1.25 ) }
    dend_41 { pt3dadd( -20.73, -137.554, -76.7797, 0.44 ) }
    dend_41 { pt3dadd( -20.8191, -140.257, -79.0735, 0.15 ) }
    dend_41 { pt3dadd( -20.8682, -141.22, -79.8554, 0.96 ) }
    dend_41 { pt3dadd( -20.9425, -142.399, -80.7478, 0.29 ) }
    dend_41 { pt3dadd( -20.9689, -142.76, -80.9882, 0.52 ) }
    dend_41 { pt3dadd( -21.0284, -144.411, -81.9703, 0.22 ) }
    dend_41 { pt3dadd( -21.0123, -144.723, -82.1113, 0.66 ) }
    dend_41 { pt3dadd( -20.9074, -145.28, -82.3794, 0.66 ) }
    dend_41 { pt3dadd( -20.6614, -146.504, -83.0683, 0.15 ) }
    dend_41 { pt3dadd( -20.5259, -147.256, -83.5518, 0.15 ) }
    dend_41 { pt3dadd( -20.3668, -148.204, -84.2249, 1.03 ) }
    dend_41 { pt3dadd( -20.3256, -148.475, -84.4443, 1.03 ) }
    dend_41 { pt3dadd( -20.0267, -150.493, -86.2176, 0.22 ) }
    dend_41 { pt3dadd( -19.8742, -151.599, -87.2995, 0.22 ) }
    dend_41 { pt3dadd( -19.7856, -152.562, -88.3753, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -113.555, 138.022, -98.8388, 0.22 ) }
    dend_7 { pt3dadd( -114.838, 137.183, -99.03, 0.22 ) }
    dend_7 { pt3dadd( -115.53, 136.748, -99.132, 0.22 ) }
    dend_7 { pt3dadd( -116.843, 135.917, -99.2959, 0.59 ) }
    dend_7 { pt3dadd( -118.364, 134.956, -99.4489, 0.15 ) }
    dend_7 { pt3dadd( -118.778, 134.692, -99.4855, 0.81 ) }
    dend_7 { pt3dadd( -119.509, 134.226, -99.5503, 1.11 ) }
    dend_7 { pt3dadd( -120.669, 133.511, -99.6316, 0.22 ) }
    dend_7 { pt3dadd( -121.375, 133.059, -99.6854, 1.03 ) }
    dend_7 { pt3dadd( -121.847, 132.739, -99.7199, 1.33 ) }
    dend_7 { pt3dadd( -121.945, 132.68, -99.7123, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -113.555, 138.022, -98.8388, 0.22 ) }
    dend_6 { pt3dadd( -114.376, 138.966, -97.933, 0.22 ) }
    dend_6 { pt3dadd( -115.04, 139.894, -96.9289, 0.22 ) }
    dend_6 { pt3dadd( -115.422, 140.45, -96.3129, 1.25 ) }
    dend_6 { pt3dadd( -115.448, 140.499, -96.2608, 1.25 ) }
    dend_6 { pt3dadd( -116.112, 141.969, -94.7572, 0.15 ) }
    dend_6 { pt3dadd( -116.381, 142.639, -94.1226, 0.15 ) }
    dend_6 { pt3dadd( -116.792, 144.193, -92.722, 0.96 ) }
    dend_6 { pt3dadd( -116.904, 144.679, -92.3226, 1.18 ) }
    dend_6 { pt3dadd( -117.172, 145.953, -91.3093, 0.15 ) }
    dend_6 { pt3dadd( -117.183, 146.013, -91.2626, 0.15 ) }
    dend_6 { pt3dadd( -117.334, 146.969, -90.5391, 0.15 ) }
    dend_6 { pt3dadd( -117.604, 148.749, -89.2527, 0.15 ) }
    dend_6 { pt3dadd( -117.792, 149.575, -88.757, 0.66 ) }
    dend_6 { pt3dadd( -117.88, 149.893, -88.5529, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -19.7856, -152.562, -88.3753, 0.22 ) }
    dend_45 { pt3dadd( -21.211, -152.9, -90.0657, 0.22 ) }
    dend_45 { pt3dadd( -21.8888, -153.058, -90.7871, 0.22 ) }
    dend_45 { pt3dadd( -22.1865, -153.143, -91.1702, 1.03 ) }
    dend_45 { pt3dadd( -22.3256, -153.186, -91.3501, 1.33 ) }
    dend_45 { pt3dadd( -23.6487, -153.602, -93.0703, 0.22 ) }
    dend_45 { pt3dadd( -24.6176, -153.884, -94.347, 0.22 ) }
    dend_45 { pt3dadd( -24.9279, -153.962, -94.7533, 0.88 ) }
    dend_45 { pt3dadd( -26.2313, -154.292, -96.5896, 0.22 ) }
    dend_45 { pt3dadd( -27.0092, -154.488, -97.6353, 0.22 ) }
    dend_45 { pt3dadd( -27.041, -154.498, -97.6737, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -28.0667, -154.881, -98.7634, 0.22 ) }
    dend_45 { pt3dadd( -28.1267, -154.908, -98.8254, 0.22 ) }
    dend_45 { pt3dadd( -29.0603, -155.389, -99.6775, 0.22 ) }
    dend_45 { pt3dadd( -30.0516, -156.034, -100.481, 0.22 ) }
    dend_45 { pt3dadd( -31.0913, -156.948, -101.39, 0.22 ) }
    dend_45 { pt3dadd( -31.1254, -156.985, -101.42, 0.22 ) }
    dend_45 { pt3dadd( -31.4947, -157.484, -101.747, 0.74 ) }
    dend_45 { pt3dadd( -31.6812, -157.81, -101.941, 0.74 ) }
    dend_45 { pt3dadd( -32.1618, -159.241, -102.753, 0.22 ) }
    dend_45 { pt3dadd( -32.3471, -160.18, -103.315, 0.22 ) }
    dend_45 { pt3dadd( -32.407, -160.525, -103.522, 0.29 ) }
    dend_45 { pt3dadd( -32.4365, -160.688, -103.608, 0.37 ) }
    dend_45 { pt3dadd( -32.6273, -161.788, -104.176, 0.15 ) }
    dend_45 { pt3dadd( -32.9618, -163.704, -105.11, 0.15 ) }
    dend_45 { pt3dadd( -32.9714, -163.756, -105.134, 0.15 ) }
    dend_45 { pt3dadd( -33.316, -165.308, -105.821, 0.15 ) }
    dend_45 { pt3dadd( -34.1853, -168.551, -107.204, 0.15 ) }
    dend_45 { pt3dadd( -34.5181, -169.655, -107.679, 0.44 ) }
    dend_45 { pt3dadd( -34.8092, -170.539, -108.048, 0.15 ) }
    dend_45 { pt3dadd( -35.5869, -172.744, -108.931, 0.15 ) }
    dend_45 { pt3dadd( -36.0532, -174.048, -109.462, 0.37 ) }
    dend_45 { pt3dadd( -36.5266, -175.314, -109.998, 0.15 ) }
    dend_45 { pt3dadd( -37.1306, -176.602, -110.549, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -19.7856, -152.562, -88.3753, 0.22 ) }
    dend_42 { pt3dadd( -19.8484, -153.995, -88.5573, 0.22 ) }
    dend_42 { pt3dadd( -19.8727, -155.527, -88.7477, 0.22 ) }
    dend_42 { pt3dadd( -19.9002, -157.263, -88.9633, 0.22 ) }
    dend_42 { pt3dadd( -19.9074, -157.715, -89.0195, 1.33 ) }
    dend_42 { pt3dadd( -19.9186, -158.419, -89.107, 1.33 ) }
    dend_42 { pt3dadd( -19.9343, -159.409, -89.23, 0.22 ) }
    dend_42 { pt3dadd( -19.9342, -159.651, -89.2615, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -121.945, 132.68, -99.7123, 0.22 ) }
    dend_9 { pt3dadd( -122.603, 131.887, -100.493, 0.22 ) }
    dend_9 { pt3dadd( -122.866, 131.57, -100.805, 0.59 ) }
    dend_9 { pt3dadd( -123.288, 131.062, -101.305, 0.22 ) }
    dend_9 { pt3dadd( -123.532, 130.769, -101.594, 0.66 ) }
    dend_9 { pt3dadd( -123.563, 130.731, -101.631, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -121.945, 132.68, -99.7123, 0.15 ) }
    dend_8 { pt3dadd( -120.406, 131.261, -100.396, 0.15 ) }
    dend_8 { pt3dadd( -119.339, 130.277, -100.87, 0.29 ) }
    dend_8 { pt3dadd( -118.898, 129.871, -101.067, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.9342, -159.651, -89.2615, 0.29 ) }
    dend_44 { pt3dadd( -18.8476, -160.505, -89.2761, 0.29 ) }
    dend_44 { pt3dadd( -18.0792, -161.109, -89.2864, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -19.9342, -159.651, -89.2615, 0.22 ) }
    dend_43 { pt3dadd( -20.9634, -161.181, -90.3775, 0.22 ) }
    dend_43 { pt3dadd( -21.5002, -162.028, -90.9734, 0.44 ) }
    dend_43 { pt3dadd( -22.1288, -163.326, -91.7584, 0.15 ) }
    dend_43 { pt3dadd( -22.8437, -164.918, -92.6841, 0.15 ) }
    dend_43 { pt3dadd( -23.043, -165.377, -92.9423, 0.81 ) }
    dend_43 { pt3dadd( -23.1736, -165.686, -93.1108, 0.81 ) }
    dend_43 { pt3dadd( -24.4367, -168.829, -94.7539, 0.15 ) }
    dend_43 { pt3dadd( -25.9158, -173.035, -96.7503, 0.15 ) }
    dend_43 { pt3dadd( -25.9158, -173.035, -96.7503, 0.37 ) }
    dend_43 { pt3dadd( -26.1635, -174.021, -97.1591, 0.15 ) }
    dend_43 { pt3dadd( -26.2754, -174.505, -97.3458, 0.81 ) }
    dend_43 { pt3dadd( -26.3896, -175.061, -97.5444, 0.81 ) }
    dend_43 { pt3dadd( -26.6339, -176.674, -98.0164, 0.15 ) }
    dend_43 { pt3dadd( -26.7212, -177.244, -98.1598, 0.44 ) }
    dend_43 { pt3dadd( -26.7479, -177.525, -98.2484, 0.44 ) }
    dend_43 { pt3dadd( -26.8032, -178.417, -98.5574, 0.15 ) }
    dend_43 { pt3dadd( -26.8391, -178.778, -98.6795, 0.66 ) }
    dend_43 { pt3dadd( -26.8535, -178.886, -98.7156, 0.66 ) }
    dend_43 { pt3dadd( -26.9326, -179.422, -98.8907, 0.66 ) }
    dend_43 { pt3dadd( -27.4048, -182.733, -99.9762, 0.15 ) }
    dend_43 { pt3dadd( -27.5046, -183.446, -100.211, 0.44 ) }
    dend_43 { pt3dadd( -28.1039, -187.881, -101.661, 0.15 ) }
    dend_43 { pt3dadd( -28.6744, -192.039, -103.01, 0.15 ) }
    dend_43 { pt3dadd( -28.6937, -192.174, -103.053, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_12 nseg = 3
    dend_2 nseg = 5
    dend_1 nseg = 3
    dend_48 nseg = 5
    dend_37 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_28 nseg = 9
    dend_25 nseg = 5
    dend_19 nseg = 3
    dend_16 nseg = 3
    dend_10 nseg = 5
    dend_3 nseg = 5
    dend_47 nseg = 3
    dend_36 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_SBC_64157b3c40_0_0


