// Cell: bIR215_L6_BP_5e5c39b863_0_0
/*
{
  "id" : "bIR215_L6_BP_5e5c39b863_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-3.14686, 7.9385, 2.85474, 0.83", "-6.07566, 10.095, 3.29644, 1.11", "-7.8025, 11.3657, 3.52621, 0.83", "-9.48018, 12.5895, 3.73207, 0.83", "-10.4735, 13.2874, 3.84488, 1.11", "-13.5842, 15.468, 4.20644, 1.11", "-19.1478, 19.2013, 4.84556, 0.83", "-21.1522, 20.4951, 5.05662, 0.83", "-22.7395, 21.4891, 5.18771, 0.83", "-24.2873, 22.4742, 5.30119, 0.83", "-25.5472, 23.2862, 5.36241, 0.55", "-26.4943, 23.836, 5.42455, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "4.34483, 5.83406, -6.14918, 0.55", "6.64671, 6.30711, -6.66323, 0.55", "7.9824, 6.42653, -7.34343, 0.83", "10.0964, 6.55361, -8.60694, 0.55", "11.1168, 6.61495, -9.21687, 1.38", "13.6259, 6.76578, -10.7165, 0.55", "14.6946, 6.71471, -11.4321, 0.83", "20.2225, 5.778, -15.4525, 0.55", "20.7573, 5.65204, -15.8948, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.682988, -9.85772, 3.19665, 1.11", "-0.729164, -13.7282, 4.65722, 1.11", "-0.74797, -15.3045, 5.25206, 0.83", "-0.772954, -17.3986, 6.04233, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.884144, 9.23988, -1.3587, 1.11", "0.982755, 11.012, -1.33417, 1.11", "1.1407, 13.9024, -1.18267, 1.38", "1.15258, 14.0634, -1.17133, 1.38", "1.42673, 16.0529, -1.01564, 0.83", "1.81202, 18.1548, -0.736683, 0.83", "2.47481, 20.5229, -0.128783, 0.83", "2.8491, 21.4188, 0.213194, 0.83", "3.21563, 22.0659, 0.525885, 1.11", "4.2796, 23.6401, 1.32623, 0.55", "5.51703, 25.2806, 2.28225, 0.83", "7.12556, 26.9635, 3.35525, 0.55", "7.94141, 27.6605, 3.83637, 0.83", "9.08602, 28.6032, 4.59301, 0.55", "10.509, 29.802, 5.6241, 0.55", "12.5053, 31.6076, 7.20942, 0.55", "14.7061, 33.6729, 8.96065, 0.55", "16.1056, 35.012, 10.2815, 0.55", "17.8346, 36.704, 12.1588, 0.55", "18.1958, 37.0428, 12.5862, 0.83", "19.1535, 37.9373, 13.7949, 0.55", "19.9553, 38.6339, 14.7408, 0.83", "21.8079, 40.5438, 16.9888, 0.55", "22.4953, 41.2427, 17.6382, 0.83", "23.1285, 41.7566, 18.0694, 0.55", "23.7508, 42.1986, 18.3928, 0.83", "25.1219, 43.0182, 18.9649, 0.83", "26.9271, 44.1361, 19.5625, 0.83", "28.0289, 44.8774, 19.8109, 0.55", "28.87, 45.5203, 20.0057, 0.55", "31.0728, 47.1813, 20.4831, 0.83", "32.4924, 48.2468, 20.7342, 0.55", "34.6423, 49.8076, 21.0278, 0.55", "36.6065, 51.1147, 21.2171, 0.55", "38.3602, 52.2213, 21.3388, 0.55", "40.5695, 53.5168, 21.3909, 0.55", "41.9158, 54.1488, 21.3774, 0.55", "42.8271, 54.5033, 21.2574, 0.55", "44.0297, 54.7637, 20.9933, 0.55", "45.8129, 54.873, 20.448, 0.55", "46.9208, 54.8053, 20.0632, 0.55", "48.5464, 54.6627, 19.6164, 0.55", "51.6605, 54.4836, 19.0472, 0.55", "54.1155, 54.45, 18.7774, 0.55", "56.7281, 54.5314, 18.6486, 0.55", "58.4117, 54.637, 18.6989, 0.55", "62.8063, 55.2839, 19.12, 0.55", "65.4199, 55.8537, 19.5651, 0.55", "67.3916, 56.3999, 20.0811, 0.55", "68.5942, 56.917, 20.442, 0.55", "69.9894, 57.6915, 20.8552, 0.55", "72.3406, 59.2255, 21.3505, 0.55", "72.8757, 59.5959, 21.3909, 0.55", "74.4043, 60.586, 21.4059, 0.55", "75.81, 61.643, 21.4158, 0.83", "76.5764, 62.2297, 21.4091, 0.55", "77.7227, 63.2387, 21.355, 0.83", "83.8544, 68.6146, 22.6556, 0.83", "89.1755, 74.8054, 23.3861, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-26.4943, 23.836, 5.42455, 0.55", "-27.8045, 24.7376, 4.61147, 0.55", "-29.2292, 25.7181, 3.72732, 0.55", "-30.9486, 26.9012, 2.66035, 0.55", "-32.3683, 27.8782, 1.77932, 0.83", "-33.558, 28.6969, 1.04103, 0.55", "-35.7663, 30.2166, -0.329366, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.4943, 23.836, 5.42455, 0.55", "-28.9019, 24.1688, 5.38644, 0.55", "-31.4307, 24.4801, 5.60381, 0.55", "-34.2897, 24.8375, 5.91993, 0.55", "-38.3827, 25.3609, 6.75966, 0.55", "-41.7744, 25.7348, 7.71855, 0.55", "-45.311, 26.0935, 8.88496, 0.55", "-48.6753, 26.2628, 10.4169, 0.55", "-51.5258, 26.1663, 12.0618, 0.55", "-55.0193, 25.8468, 14.5452, 0.55", "-56.5062, 25.6227, 15.8669, 0.55", "-58.1023, 25.3725, 17.3731, 0.55", "-60.9271, 24.688, 19.9165, 0.55", "-62.4626, 24.2952, 21.0086, 0.55", "-64.0704, 23.8317, 22.1486, 0.55", "-66.009, 23.2787, 23.2921, 0.55", "-68.1249, 22.7143, 24.4678, 0.55", "-71.1531, 21.8924, 26.0769, 0.55", "-75.2544, 21.0182, 27.8086, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.7573, 5.65204, -15.8948, 0.55", "27.0834, 7.22207, -17.2403, 0.55", "30.728, 7.93563, -18.5364, 0.55", "34.3245, 8.48704, -19.8725, 0.55", "36.7816, 8.77008, -20.7873, 0.55", "40.3724, 9.10354, -22.099, 0.55", "47.8206, 9.6636, -25.0578, 0.55", "56.269, 10.2621, -28.982, 0.55", "60.3644, 10.3149, -31.1772, 0.55", "62.5573, 10.2952, -32.4993, 0.55", "64.9617, 10.2873, -34.0468, 0.55", "69.2519, 10.158, -36.7948, 0.55", "70.8095, 10.0248, -37.8476, 0.55", "77.4033, 9.63153, -42.8127, 0.55", "82.0702, 9.43343, -46.6732, 0.55", "84.7571, 9.3713, -48.9688, 0.55", "87.4368, 9.28662, -51.2571, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "20.7573, 5.65204, -15.8948, 0.83", "22.5693, 6.49344, -15.839, 0.83", "23.6041, 6.98039, -15.8521, 0.55", "25.1276, 7.74613, -15.9901, 0.83", "26.1535, 8.28907, -16.1088, 0.55", "27.5719, 9.06883, -16.2479, 0.83", "29.2816, 10.0273, -16.3511, 0.55", "30.1372, 10.4476, -16.3778, 0.55", "32.0865, 11.1544, -16.3423, 0.83", "33.8426, 11.5688, -16.1178, 0.55", "34.8252, 11.7773, -15.9027, 0.83", "36.3052, 12.0971, -15.4258, 0.55", "38.4393, 12.5512, -14.4738, 0.55", "41.3928, 13.021, -13.0261, 0.55", "44.204, 13.3484, -11.4714, 0.55", "46.43, 13.5803, -10.2043, 0.55", "50.1015, 13.9753, -8.09445, 0.55", "52.7952, 14.3261, -6.48348, 0.55", "54.4339, 14.6533, -5.43509, 0.55", "57.4774, 15.5312, -3.43664, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.772954, -17.3986, 6.04233, 0.83", "-1.1175, -20.1645, 5.9417, 0.83", "-1.45319, -22.8592, 5.84366, 0.83", "-1.82798, -25.8679, 5.73419, 0.83", "-2.02369, -27.439, 5.67703, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.772954, -17.3986, 6.04233, 0.55", "-0.205652, -18.8612, 7.09879, 0.55", "0.302198, -20.6513, 8.4782, 0.55", "0.591872, -22.9958, 10.3922, 0.55", "0.63756, -23.9069, 11.1635, 0.83", "0.534302, -26.2312, 13.417, 0.55", "0.377385, -27.4311, 14.6069, 0.55", "0.0220014, -29.7643, 17.0268, 0.83", "-0.345392, -31.4966, 18.9422, 0.55", "-0.783372, -32.9248, 20.5015, 0.55", "-1.67839, -35.6294, 23.404, 0.55", "-2.38994, -37.785, 25.6906, 0.55", "-2.92271, -39.5133, 27.5486, 0.55", "-3.38246, -41.3487, 29.4578, 0.28", "-3.5065, -42.1135, 30.2206, 0.55", "-3.69841, -43.5262, 31.5439, 0.28", "-3.68749, -45.7326, 33.2408, 0.55", "-5.51216, -53.065, 39.3436, 0.55", "-7.52234, -59.8395, 46.0706, 0.55", "-9.05374, -65.4101, 54.0341, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-35.7663, 30.2166, -0.329366, 0.55", "-38.5332, 31.4022, 2.15124, 0.55", "-39.6437, 31.8878, 3.38116, 0.83", "-40.8748, 32.4522, 5.05007, 0.55", "-41.7819, 32.9215, 6.4339, 0.83", "-44.1691, 34.25, 9.99491, 0.55", "-45.0702, 34.7756, 11.3457, 0.28", "-46.519, 35.7317, 13.7548, 0.55", "-48.4671, 37.0255, 16.9698, 0.55", "-49.9763, 37.9761, 19.3195, 0.55", "-52.0202, 39.2155, 22.374, 0.28", "-52.5788, 39.5131, 23.0828, 0.55", "-53.7526, 40.1268, 24.4899, 0.28", "-54.5799, 40.5362, 25.3458, 0.55", "-56.3251, 41.2976, 26.9264, 0.28", "-57.3688, 41.6596, 27.8161, 0.55", "-59.2031, 42.1559, 29.4547, 0.28", "-60.4509, 42.4632, 30.5101, 0.55", "-66.8202, 44.9935, 40.8963, 0.55", "-72.2429, 46.5908, 51.9625, 0.55", "-77.3615, 47.092, 63.2443, 0.55", "-82.603, 46.1154, 74.3855, 0.55", "-86.1481, 45.9019, 86.2335, 0.55", "-90.7132, 46.0189, 97.7455, 0.55", "-95.2954, 48.1089, 109.112, 0.55", "-99.8907, 49.2519, 120.587, 0.55", "-104.164, 51.2321, 132.09, 0.55", "-107.786, 53.1162, 143.827, 0.55", "-110.141, 53.7473, 155.977, 0.55", "-112.54, 55.4974, 168.038, 0.55", "-115.208, 56.02, 180.125, 0.55", "-116.354, 56.1042, 192.444, 0.55", "-115.279, 57.0377, 204.76, 0.55", "-114.36, 55.6639, 216.962, 0.55", "-111.711, 53.9602, 228.855, 0.55", "-109.639, 52.8399, 240.954, 0.55", "-108.795, 52.6877, 253.287, 0.55", "-110.495, 54.4122, 265.468, 0.55", "-111.149, 54.824, 277.826, 0.55", "-109.307, 57.198, 289.889, 0.55", "-109.456, 60.4645, 301.896, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-35.7663, 30.2166, -0.329366, 0.55", "-37.0257, 30.9835, -2.1228, 0.55", "-37.9319, 31.8189, -4.0746, 0.55", "-38.7502, 32.8213, -6.11778, 0.55", "-39.2627, 33.4491, -7.39719, 0.55", "-40.1974, 34.5942, -9.73099, 0.83", "-40.8812, 35.4319, -11.4384, 0.55", "-41.6062, 36.5816, -13.9263, 0.83", "-41.8169, 37.3337, -15.297, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-75.2544, 21.0182, 27.8086, 0.28", "-76.1824, 19.4652, 27.6221, 0.28", "-76.6312, 18.7966, 27.4872, 0.28", "-77.2213, 17.8504, 27.2556, 0.55", "-77.7089, 17.0187, 27.0565, 0.28", "-78.4278, 15.7517, 26.7678, 0.55", "-80.4272, 12.0289, 25.9725, 0.28", "-81.0945, 10.7212, 25.5807, 0.55", "-82.1148, 8.70596, 24.9052, 0.28", "-82.7094, 7.49947, 24.4426, 0.55", "-83.1223, 6.66764, 24.1031, 0.28", "-83.5924, 5.71306, 23.7213, 0.55", "-85.0189, 2.52842, 22.5154, 0.28", "-85.4698, 1.56446, 22.1168, 0.55", "-86.2656, 0.0878186, 21.3578, 0.28", "-86.9134, -0.858799, 20.7984, 0.28", "-87.482, -1.49085, 20.4124, 0.55", "-89.4252, -3.2616, 19.4113, 0.28", "-90.3189, -3.97746, 19.0312, 0.55", "-92.5088, -5.60884, 18.0722, 0.28", "-94.6894, -7.05183, 17.2071, 0.28", "-97.054, -8.42807, 16.331, 0.28", "-98.1281, -8.94549, 16.0111, 0.55", "-103.391, -14.703, 13.6513, 0.55", "-109.043, -20.5221, 12.8743, 0.55", "-114.716, -26.0441, 10.8635, 0.55", "-120.603, -31.0778, 8.1675, 0.55", "-126.636, -35.5454, 4.77719, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-75.2544, 21.0182, 27.8086, 0.55", "-76.2128, 20.9336, 28.137, 0.55", "-78.8586, 20.8056, 29.4097, 0.55", "-79.8414, 20.7494, 29.9492, 0.55", "-82.1395, 20.5596, 31.2748, 0.55", "-85.7068, 20.2486, 33.1267, 0.55", "-87.5719, 20.1325, 34.0387, 0.28", "-90.4777, 19.8723, 35.4187, 0.55", "-92.6443, 19.6115, 36.3778, 0.55", "-93.5583, 19.4962, 36.7866, 0.28", "-99.0417, 18.7991, 39.2321, 0.55", "-101.619, 18.3096, 40.2512, 0.28", "-105.128, 17.573, 41.425, 0.28", "-108.187, 16.9256, 42.2479, 0.55", "-119.868, 16.8429, 47.5138, 0.55", "-130.892, 16.8784, 54.0444, 0.55", "-140.918, 16.1296, 61.9682, 0.55", "-150.661, 17.6252, 70.1546, 0.55", "-158.459, 19.4282, 80.1622, 0.55", "-164.242, 22.4352, 91.1911, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "87.4368, 9.28662, -51.2571, 0.55", "92.9355, 11.0603, -55.5843, 0.55", "94.6644, 11.566, -57.0712, 0.55", "96.8223, 12.1278, -58.9172, 0.55", "100.73, 13.1498, -62.5013, 0.55", "104.791, 14.0722, -66.3679, 0.55", "106.763, 14.3637, -68.2317, 0.83", "108.373, 14.5148, -69.907, 0.55", "109.565, 14.5498, -71.2995, 0.83", "112.395, 14.27, -74.9238, 0.55", "114.704, 13.8241, -77.9594, 0.55", "117.361, 13.2717, -81.3142, 0.55", "120.326, 12.7523, -85.1002, 0.55", "122.309, 12.3645, -87.6994, 0.55", "124.544, 11.9315, -90.7088, 0.55", "126.479, 11.6486, -93.4425, 0.55", "127.704, 11.6096, -95.317, 0.55", "129.218, 11.6842, -99.0475, 0.55", "130.028, 11.6762, -101.387, 0.55", "130.676, 11.5796, -104.499, 0.55", "131.515, 11.2935, -109.773, 0.55", "131.678, 11.1901, -110.967, 0.28", "133.805, 9.77067, -125.516, 0.28", "134.555, 9.36949, -129.787, 0.83", "137.557, 7.66717, -144.983, 0.83", "139.107, 6.60385, -152.085, 0.83", "139.868, 6.05443, -154.98, 0.55", "140.767, 5.49287, -157.809, 0.55", "143.373, 4.25155, -163.097, 0.55", "146.214, 3.06567, -167.766, 0.28", "147.114, 2.72718, -168.091, 0.55", "149.124, 2.00923, -168.051, 0.28", "150.381, 1.62325, -167.83, 0.55", "151.69, 1.18735, -167.488, 0.28", "153.272, 0.728622, -166.993, 0.55", "155.646, 0.199324, -166.489, 0.28", "157.544, -0.271986, -166.155, 0.55", "159.656, -0.635447, -165.934, 0.28", "162.522, -1.08243, -165.888, 0.55", "165.74, -1.48414, -166.018, 0.55", "168.57, -1.7775, -166.316, 0.28", "172.484, -2.11726, -166.941, 0.55", "179.255, -2.41974, -168.715, 0.55", "182.254, -2.35235, -169.838, 0.55", "183.546, -2.25206, -170.452, 0.83", "186.003, -2.01091, -171.843, 0.55", "187.713, -1.76211, -172.905, 0.83", "192.323, -0.97039, -175.799, 0.55", "195.118, -0.659236, -177.666, 0.28", "196.291, -0.617535, -178.33, 0.55", "199.481, -0.84007, -179.834, 0.28", "200.591, -1.02771, -180.3, 0.55", "202.87, -1.60614, -180.924, 0.28", "205.177, -2.47382, -181.181, 0.55", "209.828, -4.59458, -180.896, 0.28", "211.968, -5.69946, -180.543, 0.55", "215.136, -7.54701, -179.871, 0.28", "219.143, -9.88792, -178.869, 0.55", "222.046, -11.5489, -178.091, 0.55", "227.092, -14.2845, -176.635, 0.28", "229.168, -15.2878, -176.199, 0.55", "232.76, -16.759, -175.821, 0.28", "236.361, -17.9218, -175.661, 0.55", "238.352, -18.3028, -175.82, 0.28", "240.171, -18.3947, -176.072, 0.55", "245.326, -18.2934, -177.222, 0.28", "249.031, -17.9724, -178.067, 0.28", "252.273, -17.4667, -178.815, 0.55", "255.857, -16.7889, -179.806, 0.28", "256.766, -16.5699, -180.018, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "87.4368, 9.28662, -51.2571, 0.55", "87.8925, 7.2129, -53.4597, 0.55", "88.087, 5.43568, -55.1686, 0.28", "88.2649, 3.76961, -56.5685, 0.55", "88.8572, 0.233298, -59.5818, 0.28", "88.8869, 0.0195847, -59.8077, 0.55", "89.0792, -1.07671, -61.104, 0.28", "89.1315, -1.93587, -62.351, 0.55", "89.1164, -2.79752, -63.7842, 0.28", "89.0473, -3.95265, -65.8118, 0.55", "88.8717, -6.87058, -70.8269, 0.55", "88.6681, -9.51233, -75.4617, 0.55", "88.4756, -11.621, -79.1693, 0.55", "88.2332, -13.7021, -82.7606, 0.55", "88.1684, -14.2469, -83.6567, 0.28", "88.123, -14.8457, -84.5485, 0.55", "88.1661, -15.7055, -85.6852, 0.28", "88.4494, -17.3018, -87.5494, 0.55", "89.3257, -20.5177, -90.5339, 0.55", "89.817, -22.2899, -91.9582, 0.28", "90.1941, -24.0628, -93.4918, 0.55", "90.5068, -26.5065, -95.7405, 0.28", "90.6075, -28.4562, -97.6047, 0.55", "90.6073, -31.3595, -100.394, 0.28", "90.6348, -34.3908, -103.17, 0.55", "90.6041, -38.7768, -107.243, 0.28", "90.5259, -41.1086, -109.421, 0.55", "90.3983, -43.4752, -111.714, 0.28", "90.2576, -45.5218, -113.888, 0.28", "90.1878, -48.0282, -116.881, 0.55", "90.3281, -50.3822, -119.589, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.4774, 15.5312, -3.43664, 0.55", "59.7207, 15.0649, -2.86819, 0.55", "61.3528, 14.6578, -2.61114, 0.55", "64.9254, 13.7191, -2.23896, 0.55", "66.5312, 13.2589, -2.21762, 0.55", "68.2887, 12.7896, -2.28739, 0.55", "70.6552, 12.1931, -2.55418, 0.55", "73.149, 11.4904, -3.07563, 0.55", "74.4585, 11.0992, -3.50193, 0.55", "77.1249, 10.2891, -4.74066, 0.55", "78.3545, 9.92434, -5.35151, 0.55", "81.2311, 9.01323, -6.85724, 0.55", "83.1715, 8.32045, -7.85778, 0.55", "84.5978, 7.80435, -8.52677, 0.83", "86.8678, 6.89764, -9.56594, 0.55", "89.0789, 5.90608, -10.4902, 0.83", "90.9455, 4.98185, -11.2014, 0.55", "92.6082, 4.18691, -11.7438, 0.55", "93.5573, 3.77813, -11.999, 0.83", "95.7725, 2.8352, -12.4728, 0.28", "96.8781, 2.41423, -12.6369, 0.28", "97.9412, 1.93764, -12.8509, 0.28", "99.0939, 1.45283, -13.0888, 0.28", "100.943, 0.709959, -13.5105, 0.28", "101.687, 0.421001, -13.6573, 0.55", "103.468, -0.245307, -13.8277, 0.55", "106.668, -1.46891, -13.965, 0.55", "107.55, -1.8292, -13.9617, 0.55", "108.336, -2.17522, -13.9224, 0.83", "110.046, -2.86897, -13.6942, 0.55", "111.532, -3.4682, -13.4709, 0.55", "112.937, -4.02822, -13.2533, 0.55", "114.024, -4.48199, -13.1165, 0.55", "115.734, -5.32461, -12.9841, 0.55", "117.732, -6.50042, -12.9407, 0.55", "120.801, -8.69081, -13.0953, 0.55", "122.458, -10.1525, -13.2886, 0.55", "123.866, -11.6796, -13.5283, 0.28", "124.275, -12.2346, -13.6245, 0.55", "125.146, -13.7642, -13.8831, 0.28", "125.852, -15.4543, -14.1425, 0.55", "126.46, -17.5326, -14.303, 0.55", "126.874, -18.8974, -14.3427, 0.28", "127.027, -19.3793, -14.3328, 0.55", "127.43, -20.5776, -14.2914, 0.28", "127.989, -22.1382, -14.1991, 0.55", "129.478, -25.9071, -13.8803, 0.55", "130.262, -27.8077, -13.6791, 0.55", "130.992, -29.5499, -13.4789, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "57.4774, 15.5312, -3.43664, 0.55", "59.8562, 15.5115, -1.56488, 0.55", "60.6203, 15.5053, -1.0071, 0.55", "63.463, 15.3604, 0.938128, 0.55", "66.6389, 15.2551, 3.1615, 0.55", "70.7054, 15.1037, 6.1198, 0.55", "71.8289, 15.0636, 6.92941, 0.55", "73.8407, 14.9187, 8.35659, 0.55", "76.0519, 14.815, 9.84018, 0.55", "78.6307, 14.7717, 11.4533, 0.55", "81.0626, 14.7633, 12.9844, 0.55", "82.4023, 14.8212, 13.7664, 0.55", "83.9778, 14.9326, 14.6849, 0.55", "85.9312, 15.1266, 15.7899, 0.83", "89.1408, 15.4619, 17.2656, 0.55", "91.2645, 15.612, 18.1354, 0.83", "94.2084, 15.6999, 19.2329, 0.55", "95.11, 15.6812, 19.5535, 0.55", "97.9011, 15.4956, 20.4804, 0.55", "102.885, 14.8912, 21.9177, 0.55", "106.524, 14.2615, 22.8721, 0.55", "109.396, 13.6301, 23.6861, 0.55", "112.311, 12.831, 24.6063, 0.55", "112.923, 12.6469, 24.8018, 0.28", "114.162, 12.2256, 25.1918, 0.83", "119.242, 10.4216, 26.8176, 0.55", "122.798, 9.16892, 27.8849, 0.55", "125.719, 8.20683, 28.8413, 0.55", "127.463, 7.62561, 29.4294, 0.83", "128.837, 7.18717, 29.8963, 0.28", "130.085, 6.79234, 30.3081, 0.55", "139.902, 5.9012, 35.1198, 0.55", "150.255, 3.53394, 37.9133, 0.55", "160.628, 2.38754, 41.3124, 0.55", "169.733, -0.301832, 46.8307, 0.55", "178.08, -4.35998, 52.679, 0.55", "187.209, -9.71634, 55.3939, 0.55", "196.152, -15.8611, 56.194, 0.55", "206.187, -20.2181, 56.514, 0.55", "216.079, -24.781, 57.5452, 0.55", "226.486, -28.2074, 57.9866, 0.55", "236.85, -31.2923, 59.867, 0.55", "246.405, -36.1102, 62.1501, 0.55", "256.326, -39.2296, 65.6624, 0.55", "265.878, -40.9191, 70.8038, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.02369, -27.439, 5.67703, 1.38", "0.615719, -30.4537, 4.4764, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.02369, -27.439, 5.67703, 0.55", "-3.82707, -29.3392, 6.07052, 0.55", "-5.84226, -31.7933, 6.50066, 0.55", "-7.38922, -33.4055, 6.85729, 0.55", "-8.73664, -34.7467, 6.96114, 0.55", "-11.7256, -37.5082, 6.93065, 0.55", "-13.828, -39.3448, 6.85748, 0.55", "-15.7129, -40.9905, 6.72731, 0.55", "-20.5399, -44.9804, 6.40121, 0.55", "-26.3192, -49.5882, 6.05478, 0.55", "-30.8058, -53.0699, 5.71693, 0.55", "-33.6821, -55.3602, 5.46223, 0.55", "-36.9879, -58.1179, 5.17678, 0.55", "-41.2001, -62.1087, 4.85588, 0.55", "-43.6859, -64.9739, 4.70567, 0.55", "-46.7358, -69.1336, 4.75009, 0.55", "-49.1854, -73.0593, 4.8613, 0.55", "-51.712, -77.9931, 4.99447, 0.55", "-54.1468, -83.8212, 5.18875, 0.55", "-55.5244, -88.3078, 5.34687, 0.55", "-56.0176, -90.5546, 5.5424, 0.55", "-56.7818, -95.8631, 6.22674, 0.55", "-57.3756, -100.839, 6.9806, 0.55", "-57.6234, -105.88, 8.06244, 0.55", "-57.7603, -108.774, 8.8515, 0.55", "-58.0523, -117.736, 11.6149, 0.55", "-58.0756, -118.396, 11.8312, 0.55", "-58.1182, -122.445, 13.2396, 0.55", "-58.4992, -129.67, 16.0087, 0.55", "-58.6739, -132.081, 16.7913, 0.55", "-59.1902, -135.825, 17.3749, 0.55", "-59.4186, -137.209, 17.2555, 0.55", "-60.1815, -141.882, 15.8926, 0.55", "-60.6491, -144.9, 14.3083, 0.55", "-61.4853, -149.689, 10.7373, 0.55", "-62.3667, -155.549, 5.83939, 0.28", "-62.6068, -156.993, 4.41864, 0.55", "-63.0086, -159.177, 2.06067, 0.28", "-63.0765, -159.506, 1.68766, 0.55", "-63.4236, -161.308, -0.18984, 0.28", "-63.5522, -161.922, -0.669317, 0.55", "-64.1514, -165.125, -2.49912, 0.28", "-64.396, -166.212, -3.09745, 0.55", "-65.1027, -169.361, -4.63137, 0.28", "-65.3197, -170.352, -5.11149, 0.55", "-66.0846, -173.773, -6.70337, 0.28", "-66.4298, -175.347, -7.44598, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.05374, -65.4101, 54.0341, 0.55", "-11.827, -70.5779, 58.8477, 0.55", "-15.4347, -75.1783, 63.7477, 0.55", "-18.7464, -80.2414, 68.3415, 0.55", "-22.1722, -85.3444, 72.8016, 0.55", "-24.6527, -91.196, 76.8468, 0.55", "-27.1277, -96.8008, 81.2647, 0.55", "-28.4449, -103.477, 84.3135, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-9.05374, -65.4101, 54.0341, 0.55", "-8.33908, -72.7449, 61.7532, 0.55", "-6.99275, -81.204, 67.9628, 0.55", "-7.38988, -89.8602, 74.0147, 0.55", "-8.3061, -99.066, 79.0276, 0.55", "-8.79817, -108.2, 84.2369, 0.55", "-9.2822, -116.953, 90.1274, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-41.8169, 37.3337, -15.297, 0.83", "-41.5417, 38.2774, -16.4869, 0.83", "-40.9453, 40.5691, -19.1548, 0.55", "-40.6868, 41.5628, -20.2118, 0.83", "-40.406, 42.6305, -21.2604, 0.55", "-40.118, 43.739, -22.1635, 0.55", "-39.9686, 44.3003, -22.5371, 0.28", "-39.8953, 44.6788, -22.6811, 0.55", "-39.6096, 45.958, -22.8695, 0.28", "-39.4729, 46.5065, -22.9208, 0.55", "-39.0222, 48.4184, -23.0161, 0.28", "-38.7062, 49.9376, -23.0367, 0.55", "-38.3322, 52.3175, -22.9894, 0.28", "-38.0803, 54.4136, -22.9045, 0.28", "-38.0103, 55.5899, -22.832, 0.55", "-38.0168, 56.9865, -22.7442, 0.28", "-38.0656, 57.6544, -22.6919, 0.55", "-38.27, 59.2232, -22.6421, 0.28", "-38.479, 60.267, -22.6651, 0.28", "-38.7072, 61.2908, -22.7202, 0.28", "-38.8062, 61.8313, -22.7518, 0.55", "-39.085, 64.0135, -22.9352, 0.28", "-39.3259, 66.5946, -23.2035, 0.55", "-39.3954, 67.4857, -23.3, 0.55", "-39.48, 68.3803, -23.3762, 0.55", "-39.7649, 70.2803, -23.5696, 0.55", "-40.0359, 71.5267, -23.7239, 0.28", "-40.1957, 71.9986, -23.7883, 0.55", "-40.722, 73.2784, -23.9332, 0.28", "-41.3408, 74.638, -24.1435, 0.55", "-42.4212, 76.5894, -24.5239, 0.28", "-42.9648, 77.4026, -24.7095, 0.28", "-43.8739, 78.5276, -25.0856, 0.55", "-44.9038, 79.6963, -25.5424, 0.28", "-45.0947, 79.8792, -25.6236, 0.55", "-45.7909, 80.4613, -25.9071, 0.28", "-48.206, 82.3254, -26.8287, 0.55", "-51.5969, 84.6135, -28.2262, 0.28", "-52.228, 84.9947, -28.5213, 0.55", "-53.9678, 85.9739, -29.358, 0.28", "-54.6997, 86.374, -29.7291, 0.28", "-55.3382, 86.7041, -30.0822, 0.55", "-57.231, 87.4445, -31.2509, 0.28", "-58.5794, 87.8389, -32.0148, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-41.8169, 37.3337, -15.297, 0.55", "-42.0485, 39.0087, -15.3807, 0.55", "-42.2212, 39.9882, -15.3372, 0.28", "-42.5096, 40.6706, -15.1423, 0.55", "-43.1717, 42.2376, -14.6948, 0.28", "-43.6368, 43.3382, -14.3804, 0.55", "-44.4943, 45.3672, -13.8009, 0.28", "-45.0931, 46.4344, -13.2995, 0.55", "-47.4518, 48.8731, -11.2055, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-126.636, -35.5454, 4.77719, 0.55", "-130.921, -40.4808, 2.98451, 0.55", "-134.16, -45.8885, 0.62046, 0.55", "-136.969, -50.755, -3.1494, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-126.636, -35.5454, 4.77719, 0.55", "-130.993, -39.7584, 2.26482, 0.55", "-134.75, -43.9991, -1.03434, 0.55", "-138.25, -48.3251, -4.4879, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-164.242, 22.4352, 91.1911, 0.55", "-171.763, 24.7091, 98.1496, 0.55", "-180.237, 27.2982, 103.757, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-164.242, 22.4352, 91.1911, 0.55", "-171.549, 21.894, 95.3963, 0.55", "-178.938, 22.668, 99.4288, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "90.3281, -50.3822, -119.589, 0.28", "96.7078, -54.489, -132.734, 0.28", "97.3714, -54.9338, -133.903, 0.55", "98.4917, -55.6847, -135.877, 0.28", "99.4351, -56.317, -137.539, 0.28", "100.684, -57.154, -139.739, 0.55", "102.331, -58.2575, -142.639, 0.55", "104.936, -59.8118, -144.21, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "90.3281, -50.3822, -119.589, 0.55", "91.0256, -51.5431, -121.391, 0.55", "91.2123, -52.0553, -122.191, 0.28", "91.4696, -52.9235, -123.586, 0.55", "92.0364, -54.8362, -126.659, 0.28", "92.4292, -56.1617, -128.788, 0.55", "93.0948, -58.4075, -132.396, 0.28", "93.7998, -61.0852, -137.095, 0.28", "94.05, -62.3039, -139.289, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "130.992, -29.5499, -13.4789, 0.28", "133.164, -32.3361, -11.691, 0.28", "135.894, -35.8991, -8.98092, 0.28", "137.615, -38.1736, -7.11184, 0.55", "138.666, -39.4076, -6.00118, 0.28", "139.223, -40.069, -5.39546, 0.28", "141.989, -43.3562, -2.46787, 0.55", "142.628, -44.0487, -1.69742, 0.28", "144.12, -45.8152, 0.488586, 0.55", "145.39, -47.3789, 2.30145, 0.28", "146.509, -48.6638, 3.74553, 0.55", "147.817, -50.242, 5.34518, 0.55", "149.902, -52.8841, 7.48148, 0.55", "150.403, -53.5416, 7.97683, 0.55", "152.187, -56.0056, 9.79048, 0.28", "152.872, -57.0217, 10.4983, 0.55", "153.841, -58.3241, 11.4001, 0.28", "155.208, -60.2063, 12.5807, 0.55", "157.491, -63.3432, 13.9486, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "130.992, -29.5499, -13.4789, 0.55", "127.637, -29.2834, -13.6361, 0.55", "124.912, -29.067, -13.7638, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.615719, -30.4537, 4.4764, 0.83", "0.73344, -30.6996, 4.44556, 0.83", "2.12355, -32.8803, 4.29379, 0.83", "3.33357, -34.7891, 4.02701, 0.55", "4.29891, -36.312, 3.81417, 0.55", "6.35077, -39.5488, 3.36179, 0.83", "8.83954, -43.4749, 2.81308, 0.55", "10.2019, -45.5308, 2.56532, 0.83", "12.633, -48.8057, 2.30946, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.615719, -30.4537, 4.4764, 0.55", "-0.208984, -31.2008, 2.1776, 0.55", "-1.0942, -32.0026, -0.289882, 0.55", "-2.13921, -32.9492, -3.20277, 0.55", "-3.40819, -34.0987, -6.73995, 0.55", "-4.12829, -34.751, -8.74718, 0.55", "-4.27295, -34.882, -9.1504, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.2822, -116.953, 90.1274, 0.55", "-8.97898, -124.698, 96.0539, 0.55", "-7.28303, -132.902, 100.975, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.2822, -116.953, 90.1274, 0.55", "-9.65065, -124.831, 94.9612, 0.55", "-10.4683, -132.534, 100.05, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-47.4518, 48.8731, -11.2055, 0.28", "-48.7046, 50.2465, -9.72936, 0.28", "-49.1779, 50.7648, -9.09941, 0.55", "-50.5308, 52.2651, -7.23698, 0.28", "-51.2025, 53.0114, -6.40383, 0.55", "-53.0378, 55.0341, -4.23317, 0.28", "-54.9032, 57.0899, -2.02699, 0.55", "-57.9963, 60.3009, 1.65344, 0.28", "-58.6546, 60.9909, 2.43815, 0.55", "-60.0985, 62.6148, 4.10313, 0.28", "-60.6598, 63.2897, 4.75835, 0.55", "-67.0991, 67.7325, 10.2912, 0.55", "-74.1239, 73.216, 13.6521, 0.55", "-80.1783, 78.906, 18.2865, 0.55", "-84.9451, 85.698, 22.7809, 0.55", "-90.7018, 92.1609, 26.601, 0.55", "-97.3071, 97.2168, 31.2936, 0.55", "-103.336, 101.54, 37.3666, 0.55", "-108.529, 104.916, 44.7349, 0.55", "-113.722, 108.819, 51.8118, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.4518, 48.8731, -11.2055, 0.55", "-51.1459, 47.9666, -9.24132, 0.55", "-53.0683, 47.4321, -8.21867, 0.28", "-54.4988, 47.0343, -7.45764, 0.55", "-55.6911, 46.7027, -6.82336, 0.28", "-56.5262, 46.4705, -6.37909, 0.55", "-58.829, 45.8301, -5.15403, 0.28", "-60.3822, 45.2578, -4.52827, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-136.969, -50.755, -3.1494, 0.55", "-141.2, -58.9304, -2.38446, 0.55", "-145.251, -67.0065, -0.546549, 0.55", "-148.581, -75.5988, -0.328221, 0.55", "-152.871, -83.6569, 1.05103, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-136.969, -50.755, -3.1494, 0.55", "-141.519, -54.2154, -8.88204, 0.55", "-145.794, -56.615, -15.385, 0.55", "-150.617, -59.9398, -20.9838, 0.55", "-156.934, -62.0919, -25.6748, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-138.25, -48.3251, -4.4879, 0.55", "-142.838, -52.663, -10.4, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-138.25, -48.3251, -4.4879, 0.55", "-142.905, -57.785, -3.07621, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "104.936, -59.8118, -144.21, 0.28", "107.426, -60.2125, -146.068, 0.28", "108.582, -60.3986, -146.931, 0.55", "110.787, -60.7535, -148.577, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "104.936, -59.8118, -144.21, 0.55", "104.772, -61.2749, -145.134, 0.55", "104.445, -64.2014, -146.981, 0.28", "104.338, -65.1547, -147.583, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "94.05, -62.3039, -139.289, 0.28", "95.2119, -66.1456, -145.228, 0.28", "95.7872, -68.0479, -148.17, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "94.05, -62.3039, -139.289, 0.55", "92.5015, -63.0936, -138.437, 0.55", "88.1835, -65.2956, -136.063, 0.28", "87.1577, -65.8187, -135.499, 0.55", "84.3516, -67.2497, -133.957, 0.28", "82.5429, -68.1721, -132.962, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.633, -48.8057, 2.30946, 0.83", "12.6577, -49.1086, 2.27208, 0.83", "13.0626, -53.0683, 1.88498, 0.83", "13.1366, -56.0253, 1.83924, 0.83", "13.0572, -58.8675, 2.13867, 0.83", "12.8673, -62.6381, 2.85979, 0.83", "12.5542, -66.9748, 3.88113, 0.83", "12.2753, -71.8083, 5.28308, 0.83", "12.0478, -76.4958, 6.87179, 0.83", "11.3486, -82.2492, 8.75483, 0.83", "10.8454, -84.8955, 9.49026, 0.83", "10.4344, -86.89, 9.91295, 0.83", "9.5449, -90.7182, 10.6546, 0.83", "8.79585, -94.1553, 11.1048, 0.83", "7.45652, -101.521, 11.1319, 0.83", "6.67147, -105.569, 10.5907, 0.83", "5.89326, -109.309, 9.81011, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.633, -48.8057, 2.30946, 0.55", "11.6999, -50.7396, 2.49524, 0.55", "11.0079, -52.1408, 2.74342, 0.55", "10.5966, -53.035, 2.99656, 0.55", "10.0328, -54.432, 3.53377, 0.55", "9.00479, -57.1949, 4.78337, 0.55", "8.22318, -59.2806, 5.97683, 0.55", "7.61011, -60.9482, 7.12505, 0.55", "6.95466, -62.6292, 8.41606, 0.55", "6.40333, -64.0215, 9.56615, 0.28", "5.94623, -65.1548, 10.687, 0.55", "5.08217, -67.2096, 13.0443, 0.55", "4.48657, -68.465, 14.6423, 0.55", "4.1439, -69.1683, 15.5304, 0.55", "3.69082, -69.9984, 16.533, 0.83", "2.31192, -72.4638, 19.3268, 0.28", "1.85494, -73.2803, 20.227, 0.55", "1.07699, -74.7561, 21.7963, 0.28", "0.83989, -75.2102, 22.3163, 0.55", "0.346941, -76.2779, 23.5104, 0.28", "0.0680259, -76.8862, 24.1402, 0.55", "-1.01022, -78.8777, 25.6152, 0.55", "-2.31074, -84.2105, 31.7821, 0.55", "-3.18671, -89.2818, 38.261, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.27295, -34.882, -9.1504, 0.55", "-5.44364, -35.7072, -12.0906, 0.55", "-5.80177, -35.8998, -12.9295, 0.55", "-6.72713, -36.3847, -14.9789, 0.55", "-8.81464, -37.3447, -19.3249, 0.28", "-9.13903, -37.4763, -19.9411, 0.55", "-10.5274, -38.0855, -22.4324, 0.55", "-12.5456, -38.926, -25.5774, 0.55", "-13.329, -39.2138, -26.755, 0.28", "-14.0384, -39.402, -27.734, 0.28", "-15.3394, -39.6951, -29.195, 0.55", "-16.8977, -39.9596, -31.0483, 0.28", "-18.3221, -40.0487, -32.7996, 0.55", "-19.4349, -40.0027, -34.1271, 0.55", "-20.1897, -39.8903, -35.0708, 0.55", "-22.3747, -39.4312, -37.9258, 0.55", "-24.6988, -38.7473, -40.8757, 0.55", "-25.6718, -38.3977, -42.0645, 0.28", "-26.5876, -38.0836, -43.2151, 0.55", "-28.455, -37.5997, -45.5264, 0.28", "-29.0867, -37.4598, -46.2965, 0.83", "-30.3074, -37.183, -47.6361, 0.28", "-31.2424, -37.0667, -48.4652, 0.55", "-32.6125, -36.9526, -49.6389, 0.28", "-33.1663, -36.8996, -50.0863, 0.55", "-34.2167, -36.8241, -50.8551, 0.55", "-35.8298, -36.5382, -51.9509, 0.55", "-36.9081, -36.2828, -52.6037, 0.28", "-37.8046, -35.9657, -53.0579, 0.55", "-38.8594, -35.4605, -53.5972, 0.28", "-39.0308, -35.3632, -53.6918, 0.55", "-40.5101, -34.4239, -54.8452, 0.28", "-41.5378, -33.7163, -55.8073, 0.55", "-42.8148, -32.676, -57.2897, 0.83", "-43.8134, -31.787, -58.654, 0.28", "-44.0591, -31.5591, -59.039, 0.55", "-45.891, -29.8463, -62.1337, 0.28", "-46.195, -29.5531, -62.7191, 0.55", "-47.0601, -28.597, -64.5285, 0.28", "-47.2824, -28.351, -64.9981, 0.55", "-47.8762, -27.7121, -66.1433, 0.28", "-48.3121, -27.253, -66.9155, 0.55", "-49.367, -26.232, -68.4316, 0.28", "-50.0068, -25.6853, -69.3007, 0.55", "-51.4109, -24.6322, -71.0627, 0.28", "-51.833, -24.3478, -71.5796, 0.55", "-52.5078, -23.967, -72.3607, 0.28", "-53.0925, -23.647, -72.9883, 0.55", "-54.3409, -23.004, -74.2046, 0.28", "-54.7226, -22.8206, -74.5567, 0.55", "-57.6144, -21.3967, -77.0197, 0.28", "-58.6639, -20.8178, -77.7822, 0.55", "-60.5817, -19.6888, -79.0094, 0.28", "-61.4555, -19.1438, -79.5335, 0.55", "-63.5017, -17.9119, -80.6128, 0.28", "-64.2653, -17.4951, -80.9751, 0.55", "-67.0843, -16.2447, -82.1353, 0.28", "-68.2665, -15.8718, -82.6097, 0.55", "-69.9659, -15.6173, -83.2697, 0.55", "-71.0208, -15.5273, -83.6512, 0.55", "-73.224, -15.402, -84.2635, 0.28", "-75.4317, -15.3023, -84.7317, 0.28", "-77.2854, -15.2139, -85.0696, 0.55", "-79.6119, -14.9253, -85.2402, 0.28", "-80.7961, -14.653, -85.1759, 0.55", "-83.6611, -13.6022, -84.7551, 0.28", "-85.1896, -12.809, -84.2089, 0.55", "-86.2034, -12.1666, -83.658, 0.28", "-87.3705, -11.4457, -82.7915, 0.55", "-88.8445, -10.5017, -81.549, 0.28", "-89.4057, -10.1703, -81.0848, 0.55", "-92.3074, -8.6913, -78.9983, 0.28", "-93.2884, -8.22678, -78.3051, 0.55", "-95.6279, -7.20298, -76.6041, 0.28", "-96.9, -6.66042, -75.6809, 0.55", "-97.9464, -6.21604, -74.9241, 0.55", "-99.1967, -5.69319, -74.0508, 0.28", "-99.8464, -5.42634, -73.6971, 0.55", "-102.019, -4.46641, -72.636, 0.28", "-103.151, -3.84656, -72.0559, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.27295, -34.882, -9.1504, 0.55", "-3.69931, -34.9605, -10.1338, 0.55", "-3.09575, -34.9216, -11.1024, 0.55", "-2.28512, -34.7805, -12.2666, 0.55", "-1.58683, -34.5798, -13.1823, 0.55", "3.39364, -32.5471, -18.7939, 0.55", "4.50447, -31.9185, -20.0678, 0.55", "6.11571, -30.8298, -21.98, 0.55", "7.24942, -30.0065, -23.3393, 0.55", "8.37173, -29.1155, -24.6299, 0.28", "10.1621, -27.6123, -26.5096, 0.55", "12.9348, -25.2683, -29.1336, 0.28", "13.1393, -25.1238, -29.4338, 0.55", "14.0116, -24.6196, -31.7786, 0.28", "14.3375, -24.3908, -33.4638, 0.55", "14.5256, -24.2755, -35.3296, 0.55", "14.8246, -24.2316, -38.6948, 0.55", "15.4316, -24.1886, -45.2986, 0.55", "15.9196, -24.199, -49.7268, 0.55", "16.1292, -24.2133, -51.2505, 0.55", "17.7389, -24.2187, -61.225, 0.55", "18.2863, -24.1765, -63.9041, 0.55", "18.7062, -24.1467, -65.3835, 0.55", "19.9899, -24.1435, -68.7485, 0.55", "23.5644, -24.5165, -76.6562, 0.55", "24.6234, -24.6996, -78.7482, 0.28", "25.3196, -24.8532, -79.8955, 0.55", "26.3879, -25.1529, -81.5791, 0.28", "26.8828, -25.3474, -82.2404, 0.55", "28.8213, -26.234, -83.8031, 0.28", "30.5687, -27.4886, -84.0264, 0.55", "31.6246, -28.3903, -84.0923, 0.28", "32.6015, -29.3937, -84.0339, 0.55", "33.4656, -30.4947, -83.9074, 0.28", "33.8417, -31.0641, -83.8675, 0.55", "34.719, -32.5606, -83.7024, 0.28", "34.9459, -33.0068, -83.7315, 0.55", "36.2363, -35.5617, -84.0561, 0.28", "36.8716, -36.7371, -84.3736, 0.55", "38.3324, -39.234, -85.3642, 0.28", "38.9143, -40.1481, -85.8431, 0.55", "40.9602, -43.1363, -87.6218, 0.28", "41.4632, -43.8615, -88.0893, 0.55", "42.9839, -46.1593, -89.6644, 0.28", "43.3043, -46.701, -89.9867, 0.55", "44.0974, -48.136, -90.8245, 0.28", "44.5668, -48.9655, -91.4014, 0.55", "45.0601, -49.7762, -92.041, 0.55", "46.0453, -51.3939, -93.3034, 0.28", "46.7614, -52.385, -94.2161, 0.55", "49.1123, -54.8096, -97.1461, 0.28", "50.0386, -55.5801, -98.33, 0.55", "50.6914, -56.0639, -99.1316, 0.28", "51.367, -56.4989, -99.93, 0.55", "53.4942, -57.6983, -102.342, 0.28", "55.1225, -58.6327, -104.118, 0.55", "57.9679, -60.4418, -106.914, 0.28", "58.8664, -61.0038, -107.788, 0.55", "60.6397, -62.0332, -109.301, 0.28", "61.2442, -62.3711, -109.753, 0.55", "62.2677, -62.914, -110.302, 0.28", "63.1865, -63.3708, -110.706, 0.55", "65.7237, -64.4949, -111.541, 0.28", "68.6452, -65.6753, -112.449, 0.28", "70.14, -66.2137, -112.804, 0.28", "71.6371, -66.7107, -113.249, 0.55", "73.8266, -67.3433, -113.906, 0.28", "74.8037, -67.6117, -114.177, 0.83", "77.3067, -68.3289, -114.777, 0.28", "78.3845, -68.6611, -115.096, 0.55", "83.0883, -70.2819, -116.723, 0.28", "85.4128, -71.1133, -117.723, 0.28", "87.0856, -71.7149, -118.561, 0.55", "88.0405, -72.0822, -119.16, 0.55", "90.5344, -73.086, -120.954, 0.28", "92.8416, -74.1272, -122.733, 0.55", "94.9399, -75.1413, -124.355, 0.28", "96.814, -76.0837, -125.928, 0.55", "98.3664, -76.8439, -127.218, 0.28", "99.6574, -77.3745, -128.198, 0.55", "102.814, -78.48, -130.41, 0.28", "104.429, -79.0395, -131.463, 0.55", "106.874, -79.8884, -132.954, 0.28", "108.887, -80.5275, -134.125, 0.55", "113.606, -81.8215, -136.868, 0.28", "115.504, -82.2392, -138.112, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.28303, -132.902, 100.975, 0.55", "-7.11327, -139.215, 104.09, 0.55", "-6.43311, -146.039, 105.495, 0.55", "-6.06685, -152.613, 107.93, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.28303, -132.902, 100.975, 0.55", "-6.14554, -139.96, 106.94, 0.55", "-6.66374, -146.177, 113.95, 0.55", "-7.61034, -150.911, 122.107, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.4683, -132.534, 100.05, 0.55", "-9.73716, -140.758, 105.615, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.4683, -132.534, 100.05, 0.55", "-11.8521, -143.478, 106.742, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.89326, -109.309, 9.81011, 0.83", "6.88303, -113.325, 10.5575, 0.83", "7.86693, -116.699, 11.4589, 0.83", "8.84494, -120.054, 12.3549, 0.83", "9.77374, -123.239, 13.2059, 0.83", "11.205, -128.148, 14.5173, 0.83", "12.626, -133.022, 15.8192, 0.83", "13.8169, -136.232, 17.1344, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.89326, -109.309, 9.81011, 0.55", "7.87277, -112.054, 9.48377, 0.55", "9.30979, -114.209, 8.85826, 0.55", "10.2635, -115.808, 8.25298, 0.55", "11.0425, -117.687, 7.3687, 0.83", "11.7276, -119.829, 6.13487, 0.55", "12.3977, -121.924, 4.92802, 0.83", "12.9487, -124.201, 3.43645, 0.55", "13.2382, -125.528, 2.44852, 0.83", "13.9209, -129.827, -1.04274, 0.55", "14.1319, -133.206, -3.93294, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.18671, -89.2818, 38.261, 0.55", "-6.07582, -95.9926, 43.8911, 0.55", "-10.1264, -101.769, 49.939, 0.55", "-14.6841, -106.67, 56.4655, 0.55", "-19.9263, -110.483, 63.2782, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.18671, -89.2818, 38.261, 0.55", "-4.98188, -97.3925, 46.6567, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.8169, -136.232, 17.1344, 0.55", "14.0463, -137.714, 17.5941, 0.55", "14.4109, -139.605, 18.2046, 0.55", "14.7513, -141.392, 18.7711, 0.55", "14.9704, -142.662, 19.1614, 0.55", "15.321, -144.931, 19.8349, 0.55", "16.3291, -151.325, 21.5264, 0.55", "16.6811, -153.506, 21.9866, 0.55", "16.9009, -155.049, 22.2337, 0.55", "17.1037, -156.823, 22.3732, 0.55", "17.1849, -158.202, 22.3746, 0.55", "17.4082, -161.439, 22.2092, 0.55", "17.4947, -163.893, 22.1178, 0.55", "17.6135, -165.502, 22.0841, 0.55", "18.0012, -169.661, 22.2062, 0.55", "18.2993, -172.448, 22.4144, 0.55", "18.7895, -176.027, 22.8686, 0.55", "19.5354, -180.069, 23.6607, 0.55", "20.2255, -182.761, 24.2963, 0.55", "20.6896, -184.351, 24.6958, 0.55", "21.0893, -185.817, 25.0723, 0.55", "21.5865, -187.679, 25.4502, 0.55", "22.5974, -192.189, 26.0921, 0.55", "23.0164, -193.942, 26.2519, 0.55", "23.4324, -195.892, 26.4379, 0.55", "24.0274, -198.821, 26.7135, 0.55", "24.3939, -201.066, 26.9927, 0.55", "24.6113, -203.194, 27.2866, 0.55", "24.7317, -205.219, 27.6077, 0.55", "24.8295, -207.192, 27.9639, 0.55", "24.9011, -208.597, 28.2001, 0.55", "24.9964, -210.903, 28.5032, 0.55", "24.9795, -213.684, 28.6811, 0.55", "24.9598, -215.043, 28.6541, 0.55", "24.9152, -216.244, 28.5381, 0.55", "24.8708, -218.523, 28.1451, 0.55", "24.8112, -219.971, 27.8642, 0.55", "24.7861, -221.751, 27.5732, 0.55", "24.7568, -222.994, 27.4613, 0.55", "24.6807, -226.217, 27.3168, 0.55", "24.6431, -228.615, 27.4005, 0.55", "24.6595, -232.302, 27.8503, 0.55", "24.8195, -234.669, 28.3351, 0.55", "25.0049, -237.147, 28.9314, 0.28", "25.0736, -238.139, 29.2222, 0.28", "25.3275, -240.53, 30.1477, 0.28", "25.6209, -242.726, 31.1853, 0.28", "26.4102, -245.62, 32.7325, 0.28", "28.2755, -252.291, 34.1654, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.8169, -136.232, 17.1344, 0.55", "15.1012, -136.67, 17.7992, 0.55", "17.6819, -137.789, 19.3696, 0.55", "19.8795, -138.892, 20.8283, 0.28", "22.214, -140.144, 22.4703, 0.55", "23.5592, -140.933, 23.6651, 0.28", "25.8135, -142.346, 25.9794, 0.55", "26.6484, -143.086, 27.2629, 0.28", "26.9242, -143.35, 27.7998, 0.28", "27.3989, -143.72, 28.733, 0.55", "29.3503, -144.919, 32.1433, 0.28", "30.204, -145.384, 33.5452, 0.55", "32.9775, -146.748, 37.3666, 0.28", "34.5501, -147.419, 39.2972, 0.28", "36.5749, -148.292, 41.5599, 0.55", "39.7262, -149.671, 44.6112, 0.28", "40.175, -149.856, 44.9709, 0.55", "42.4503, -150.767, 46.5763, 0.28", "42.666, -150.853, 46.6978, 0.55", "44.5439, -151.878, 47.8415, 0.28", "45.4159, -152.437, 48.4461, 0.55", "52.5692, -156.55, 53.4661, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-19.9263, -110.483, 63.2782, 0.55", "-22.1296, -114.397, 72.5938, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-19.9263, -110.483, 63.2782, 0.55", "-24.4139, -116.192, 68.217, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_BP_5e5c39b863_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.14686, 7.9385, 2.85474, 0.83 ) }
    dend_43 { pt3dadd( -6.07566, 10.095, 3.29644, 1.11 ) }
    dend_43 { pt3dadd( -7.8025, 11.3657, 3.52621, 0.83 ) }
    dend_43 { pt3dadd( -9.48018, 12.5895, 3.73207, 0.83 ) }
    dend_43 { pt3dadd( -10.4735, 13.2874, 3.84488, 1.11 ) }
    dend_43 { pt3dadd( -13.5842, 15.468, 4.20644, 1.11 ) }
    dend_43 { pt3dadd( -19.1478, 19.2013, 4.84556, 0.83 ) }
    dend_43 { pt3dadd( -21.1522, 20.4951, 5.05662, 0.83 ) }
    dend_43 { pt3dadd( -22.7395, 21.4891, 5.18771, 0.83 ) }
    dend_43 { pt3dadd( -24.2873, 22.4742, 5.30119, 0.83 ) }
    dend_43 { pt3dadd( -25.5472, 23.2862, 5.36241, 0.55 ) }
    dend_43 { pt3dadd( -26.4943, 23.836, 5.42455, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.34483, 5.83406, -6.14918, 0.55 ) }
    dend_28 { pt3dadd( 6.64671, 6.30711, -6.66323, 0.55 ) }
    dend_28 { pt3dadd( 7.9824, 6.42653, -7.34343, 0.83 ) }
    dend_28 { pt3dadd( 10.0964, 6.55361, -8.60694, 0.55 ) }
    dend_28 { pt3dadd( 11.1168, 6.61495, -9.21687, 1.38 ) }
    dend_28 { pt3dadd( 13.6259, 6.76578, -10.7165, 0.55 ) }
    dend_28 { pt3dadd( 14.6946, 6.71471, -11.4321, 0.83 ) }
    dend_28 { pt3dadd( 20.2225, 5.778, -15.4525, 0.55 ) }
    dend_28 { pt3dadd( 20.7573, 5.65204, -15.8948, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.682988, -9.85772, 3.19665, 1.11 ) }
    dend_1 { pt3dadd( -0.729164, -13.7282, 4.65722, 1.11 ) }
    dend_1 { pt3dadd( -0.74797, -15.3045, 5.25206, 0.83 ) }
    dend_1 { pt3dadd( -0.772954, -17.3986, 6.04233, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.884144, 9.23988, -1.3587, 1.11 ) }
    dend_0 { pt3dadd( 0.982755, 11.012, -1.33417, 1.11 ) }
    dend_0 { pt3dadd( 1.1407, 13.9024, -1.18267, 1.38 ) }
    dend_0 { pt3dadd( 1.15258, 14.0634, -1.17133, 1.38 ) }
    dend_0 { pt3dadd( 1.42673, 16.0529, -1.01564, 0.83 ) }
    dend_0 { pt3dadd( 1.81202, 18.1548, -0.736683, 0.83 ) }
    dend_0 { pt3dadd( 2.47481, 20.5229, -0.128783, 0.83 ) }
    dend_0 { pt3dadd( 2.8491, 21.4188, 0.213194, 0.83 ) }
    dend_0 { pt3dadd( 3.21563, 22.0659, 0.525885, 1.11 ) }
    dend_0 { pt3dadd( 4.2796, 23.6401, 1.32623, 0.55 ) }
    dend_0 { pt3dadd( 5.51703, 25.2806, 2.28225, 0.83 ) }
    dend_0 { pt3dadd( 7.12556, 26.9635, 3.35525, 0.55 ) }
    dend_0 { pt3dadd( 7.94141, 27.6605, 3.83637, 0.83 ) }
    dend_0 { pt3dadd( 9.08602, 28.6032, 4.59301, 0.55 ) }
    dend_0 { pt3dadd( 10.509, 29.802, 5.6241, 0.55 ) }
    dend_0 { pt3dadd( 12.5053, 31.6076, 7.20942, 0.55 ) }
    dend_0 { pt3dadd( 14.7061, 33.6729, 8.96065, 0.55 ) }
    dend_0 { pt3dadd( 16.1056, 35.012, 10.2815, 0.55 ) }
    dend_0 { pt3dadd( 17.8346, 36.704, 12.1588, 0.55 ) }
    dend_0 { pt3dadd( 18.1958, 37.0428, 12.5862, 0.83 ) }
    dend_0 { pt3dadd( 19.1535, 37.9373, 13.7949, 0.55 ) }
    dend_0 { pt3dadd( 19.9553, 38.6339, 14.7408, 0.83 ) }
    dend_0 { pt3dadd( 21.8079, 40.5438, 16.9888, 0.55 ) }
    dend_0 { pt3dadd( 22.4953, 41.2427, 17.6382, 0.83 ) }
    dend_0 { pt3dadd( 23.1285, 41.7566, 18.0694, 0.55 ) }
    dend_0 { pt3dadd( 23.7508, 42.1986, 18.3928, 0.83 ) }
    dend_0 { pt3dadd( 25.1219, 43.0182, 18.9649, 0.83 ) }
    dend_0 { pt3dadd( 26.9271, 44.1361, 19.5625, 0.83 ) }
    dend_0 { pt3dadd( 28.0289, 44.8774, 19.8109, 0.55 ) }
    dend_0 { pt3dadd( 28.87, 45.5203, 20.0057, 0.55 ) }
    dend_0 { pt3dadd( 31.0728, 47.1813, 20.4831, 0.83 ) }
    dend_0 { pt3dadd( 32.4924, 48.2468, 20.7342, 0.55 ) }
    dend_0 { pt3dadd( 34.6423, 49.8076, 21.0278, 0.55 ) }
    dend_0 { pt3dadd( 36.6065, 51.1147, 21.2171, 0.55 ) }
    dend_0 { pt3dadd( 38.3602, 52.2213, 21.3388, 0.55 ) }
    dend_0 { pt3dadd( 40.5695, 53.5168, 21.3909, 0.55 ) }
    dend_0 { pt3dadd( 41.9158, 54.1488, 21.3774, 0.55 ) }
    dend_0 { pt3dadd( 42.8271, 54.5033, 21.2574, 0.55 ) }
    dend_0 { pt3dadd( 44.0297, 54.7637, 20.9933, 0.55 ) }
    dend_0 { pt3dadd( 45.8129, 54.873, 20.448, 0.55 ) }
    dend_0 { pt3dadd( 46.9208, 54.8053, 20.0632, 0.55 ) }
    dend_0 { pt3dadd( 48.5464, 54.6627, 19.6164, 0.55 ) }
    dend_0 { pt3dadd( 51.6605, 54.4836, 19.0472, 0.55 ) }
    dend_0 { pt3dadd( 54.1155, 54.45, 18.7774, 0.55 ) }
    dend_0 { pt3dadd( 56.7281, 54.5314, 18.6486, 0.55 ) }
    dend_0 { pt3dadd( 58.4117, 54.637, 18.6989, 0.55 ) }
    dend_0 { pt3dadd( 62.8063, 55.2839, 19.12, 0.55 ) }
    dend_0 { pt3dadd( 65.4199, 55.8537, 19.5651, 0.55 ) }
    dend_0 { pt3dadd( 67.3916, 56.3999, 20.0811, 0.55 ) }
    dend_0 { pt3dadd( 68.5942, 56.917, 20.442, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 69.9894, 57.6915, 20.8552, 0.55 ) }
    dend_0 { pt3dadd( 72.3406, 59.2255, 21.3505, 0.55 ) }
    dend_0 { pt3dadd( 72.8757, 59.5959, 21.3909, 0.55 ) }
    dend_0 { pt3dadd( 74.4043, 60.586, 21.4059, 0.55 ) }
    dend_0 { pt3dadd( 75.81, 61.643, 21.4158, 0.83 ) }
    dend_0 { pt3dadd( 76.5764, 62.2297, 21.4091, 0.55 ) }
    dend_0 { pt3dadd( 77.7227, 63.2387, 21.355, 0.83 ) }
    dend_0 { pt3dadd( 83.8544, 68.6146, 22.6556, 0.83 ) }
    dend_0 { pt3dadd( 89.1755, 74.8054, 23.3861, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -26.4943, 23.836, 5.42455, 0.55 ) }
    dend_55 { pt3dadd( -27.8045, 24.7376, 4.61147, 0.55 ) }
    dend_55 { pt3dadd( -29.2292, 25.7181, 3.72732, 0.55 ) }
    dend_55 { pt3dadd( -30.9486, 26.9012, 2.66035, 0.55 ) }
    dend_55 { pt3dadd( -32.3683, 27.8782, 1.77932, 0.83 ) }
    dend_55 { pt3dadd( -33.558, 28.6969, 1.04103, 0.55 ) }
    dend_55 { pt3dadd( -35.7663, 30.2166, -0.329366, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.4943, 23.836, 5.42455, 0.55 ) }
    dend_44 { pt3dadd( -28.9019, 24.1688, 5.38644, 0.55 ) }
    dend_44 { pt3dadd( -31.4307, 24.4801, 5.60381, 0.55 ) }
    dend_44 { pt3dadd( -34.2897, 24.8375, 5.91993, 0.55 ) }
    dend_44 { pt3dadd( -38.3827, 25.3609, 6.75966, 0.55 ) }
    dend_44 { pt3dadd( -41.7744, 25.7348, 7.71855, 0.55 ) }
    dend_44 { pt3dadd( -45.311, 26.0935, 8.88496, 0.55 ) }
    dend_44 { pt3dadd( -48.6753, 26.2628, 10.4169, 0.55 ) }
    dend_44 { pt3dadd( -51.5258, 26.1663, 12.0618, 0.55 ) }
    dend_44 { pt3dadd( -55.0193, 25.8468, 14.5452, 0.55 ) }
    dend_44 { pt3dadd( -56.5062, 25.6227, 15.8669, 0.55 ) }
    dend_44 { pt3dadd( -58.1023, 25.3725, 17.3731, 0.55 ) }
    dend_44 { pt3dadd( -60.9271, 24.688, 19.9165, 0.55 ) }
    dend_44 { pt3dadd( -62.4626, 24.2952, 21.0086, 0.55 ) }
    dend_44 { pt3dadd( -64.0704, 23.8317, 22.1486, 0.55 ) }
    dend_44 { pt3dadd( -66.009, 23.2787, 23.2921, 0.55 ) }
    dend_44 { pt3dadd( -68.1249, 22.7143, 24.4678, 0.55 ) }
    dend_44 { pt3dadd( -71.1531, 21.8924, 26.0769, 0.55 ) }
    dend_44 { pt3dadd( -75.2544, 21.0182, 27.8086, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.7573, 5.65204, -15.8948, 0.55 ) }
    dend_34 { pt3dadd( 27.0834, 7.22207, -17.2403, 0.55 ) }
    dend_34 { pt3dadd( 30.728, 7.93563, -18.5364, 0.55 ) }
    dend_34 { pt3dadd( 34.3245, 8.48704, -19.8725, 0.55 ) }
    dend_34 { pt3dadd( 36.7816, 8.77008, -20.7873, 0.55 ) }
    dend_34 { pt3dadd( 40.3724, 9.10354, -22.099, 0.55 ) }
    dend_34 { pt3dadd( 47.8206, 9.6636, -25.0578, 0.55 ) }
    dend_34 { pt3dadd( 56.269, 10.2621, -28.982, 0.55 ) }
    dend_34 { pt3dadd( 60.3644, 10.3149, -31.1772, 0.55 ) }
    dend_34 { pt3dadd( 62.5573, 10.2952, -32.4993, 0.55 ) }
    dend_34 { pt3dadd( 64.9617, 10.2873, -34.0468, 0.55 ) }
    dend_34 { pt3dadd( 69.2519, 10.158, -36.7948, 0.55 ) }
    dend_34 { pt3dadd( 70.8095, 10.0248, -37.8476, 0.55 ) }
    dend_34 { pt3dadd( 77.4033, 9.63153, -42.8127, 0.55 ) }
    dend_34 { pt3dadd( 82.0702, 9.43343, -46.6732, 0.55 ) }
    dend_34 { pt3dadd( 84.7571, 9.3713, -48.9688, 0.55 ) }
    dend_34 { pt3dadd( 87.4368, 9.28662, -51.2571, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 20.7573, 5.65204, -15.8948, 0.83 ) }
    dend_29 { pt3dadd( 22.5693, 6.49344, -15.839, 0.83 ) }
    dend_29 { pt3dadd( 23.6041, 6.98039, -15.8521, 0.55 ) }
    dend_29 { pt3dadd( 25.1276, 7.74613, -15.9901, 0.83 ) }
    dend_29 { pt3dadd( 26.1535, 8.28907, -16.1088, 0.55 ) }
    dend_29 { pt3dadd( 27.5719, 9.06883, -16.2479, 0.83 ) }
    dend_29 { pt3dadd( 29.2816, 10.0273, -16.3511, 0.55 ) }
    dend_29 { pt3dadd( 30.1372, 10.4476, -16.3778, 0.55 ) }
    dend_29 { pt3dadd( 32.0865, 11.1544, -16.3423, 0.83 ) }
    dend_29 { pt3dadd( 33.8426, 11.5688, -16.1178, 0.55 ) }
    dend_29 { pt3dadd( 34.8252, 11.7773, -15.9027, 0.83 ) }
    dend_29 { pt3dadd( 36.3052, 12.0971, -15.4258, 0.55 ) }
    dend_29 { pt3dadd( 38.4393, 12.5512, -14.4738, 0.55 ) }
    dend_29 { pt3dadd( 41.3928, 13.021, -13.0261, 0.55 ) }
    dend_29 { pt3dadd( 44.204, 13.3484, -11.4714, 0.55 ) }
    dend_29 { pt3dadd( 46.43, 13.5803, -10.2043, 0.55 ) }
    dend_29 { pt3dadd( 50.1015, 13.9753, -8.09445, 0.55 ) }
    dend_29 { pt3dadd( 52.7952, 14.3261, -6.48348, 0.55 ) }
    dend_29 { pt3dadd( 54.4339, 14.6533, -5.43509, 0.55 ) }
    dend_29 { pt3dadd( 57.4774, 15.5312, -3.43664, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.772954, -17.3986, 6.04233, 0.83 ) }
    dend_11 { pt3dadd( -1.1175, -20.1645, 5.9417, 0.83 ) }
    dend_11 { pt3dadd( -1.45319, -22.8592, 5.84366, 0.83 ) }
    dend_11 { pt3dadd( -1.82798, -25.8679, 5.73419, 0.83 ) }
    dend_11 { pt3dadd( -2.02369, -27.439, 5.67703, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.772954, -17.3986, 6.04233, 0.55 ) }
    dend_2 { pt3dadd( -0.205652, -18.8612, 7.09879, 0.55 ) }
    dend_2 { pt3dadd( 0.302198, -20.6513, 8.4782, 0.55 ) }
    dend_2 { pt3dadd( 0.591872, -22.9958, 10.3922, 0.55 ) }
    dend_2 { pt3dadd( 0.63756, -23.9069, 11.1635, 0.83 ) }
    dend_2 { pt3dadd( 0.534302, -26.2312, 13.417, 0.55 ) }
    dend_2 { pt3dadd( 0.377385, -27.4311, 14.6069, 0.55 ) }
    dend_2 { pt3dadd( 0.0220014, -29.7643, 17.0268, 0.83 ) }
    dend_2 { pt3dadd( -0.345392, -31.4966, 18.9422, 0.55 ) }
    dend_2 { pt3dadd( -0.783372, -32.9248, 20.5015, 0.55 ) }
    dend_2 { pt3dadd( -1.67839, -35.6294, 23.404, 0.55 ) }
    dend_2 { pt3dadd( -2.38994, -37.785, 25.6906, 0.55 ) }
    dend_2 { pt3dadd( -2.92271, -39.5133, 27.5486, 0.55 ) }
    dend_2 { pt3dadd( -3.38246, -41.3487, 29.4578, 0.28 ) }
    dend_2 { pt3dadd( -3.5065, -42.1135, 30.2206, 0.55 ) }
    dend_2 { pt3dadd( -3.69841, -43.5262, 31.5439, 0.28 ) }
    dend_2 { pt3dadd( -3.68749, -45.7326, 33.2408, 0.55 ) }
    dend_2 { pt3dadd( -5.51216, -53.065, 39.3436, 0.55 ) }
    dend_2 { pt3dadd( -7.52234, -59.8395, 46.0706, 0.55 ) }
    dend_2 { pt3dadd( -9.05374, -65.4101, 54.0341, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -35.7663, 30.2166, -0.329366, 0.55 ) }
    dend_61 { pt3dadd( -38.5332, 31.4022, 2.15124, 0.55 ) }
    dend_61 { pt3dadd( -39.6437, 31.8878, 3.38116, 0.83 ) }
    dend_61 { pt3dadd( -40.8748, 32.4522, 5.05007, 0.55 ) }
    dend_61 { pt3dadd( -41.7819, 32.9215, 6.4339, 0.83 ) }
    dend_61 { pt3dadd( -44.1691, 34.25, 9.99491, 0.55 ) }
    dend_61 { pt3dadd( -45.0702, 34.7756, 11.3457, 0.28 ) }
    dend_61 { pt3dadd( -46.519, 35.7317, 13.7548, 0.55 ) }
    dend_61 { pt3dadd( -48.4671, 37.0255, 16.9698, 0.55 ) }
    dend_61 { pt3dadd( -49.9763, 37.9761, 19.3195, 0.55 ) }
    dend_61 { pt3dadd( -52.0202, 39.2155, 22.374, 0.28 ) }
    dend_61 { pt3dadd( -52.5788, 39.5131, 23.0828, 0.55 ) }
    dend_61 { pt3dadd( -53.7526, 40.1268, 24.4899, 0.28 ) }
    dend_61 { pt3dadd( -54.5799, 40.5362, 25.3458, 0.55 ) }
    dend_61 { pt3dadd( -56.3251, 41.2976, 26.9264, 0.28 ) }
    dend_61 { pt3dadd( -57.3688, 41.6596, 27.8161, 0.55 ) }
    dend_61 { pt3dadd( -59.2031, 42.1559, 29.4547, 0.28 ) }
    dend_61 { pt3dadd( -60.4509, 42.4632, 30.5101, 0.55 ) }
    dend_61 { pt3dadd( -66.8202, 44.9935, 40.8963, 0.55 ) }
    dend_61 { pt3dadd( -72.2429, 46.5908, 51.9625, 0.55 ) }
    dend_61 { pt3dadd( -77.3615, 47.092, 63.2443, 0.55 ) }
    dend_61 { pt3dadd( -82.603, 46.1154, 74.3855, 0.55 ) }
    dend_61 { pt3dadd( -86.1481, 45.9019, 86.2335, 0.55 ) }
    dend_61 { pt3dadd( -90.7132, 46.0189, 97.7455, 0.55 ) }
    dend_61 { pt3dadd( -95.2954, 48.1089, 109.112, 0.55 ) }
    dend_61 { pt3dadd( -99.8907, 49.2519, 120.587, 0.55 ) }
    dend_61 { pt3dadd( -104.164, 51.2321, 132.09, 0.55 ) }
    dend_61 { pt3dadd( -107.786, 53.1162, 143.827, 0.55 ) }
    dend_61 { pt3dadd( -110.141, 53.7473, 155.977, 0.55 ) }
    dend_61 { pt3dadd( -112.54, 55.4974, 168.038, 0.55 ) }
    dend_61 { pt3dadd( -115.208, 56.02, 180.125, 0.55 ) }
    dend_61 { pt3dadd( -116.354, 56.1042, 192.444, 0.55 ) }
    dend_61 { pt3dadd( -115.279, 57.0377, 204.76, 0.55 ) }
    dend_61 { pt3dadd( -114.36, 55.6639, 216.962, 0.55 ) }
    dend_61 { pt3dadd( -111.711, 53.9602, 228.855, 0.55 ) }
    dend_61 { pt3dadd( -109.639, 52.8399, 240.954, 0.55 ) }
    dend_61 { pt3dadd( -108.795, 52.6877, 253.287, 0.55 ) }
    dend_61 { pt3dadd( -110.495, 54.4122, 265.468, 0.55 ) }
    dend_61 { pt3dadd( -111.149, 54.824, 277.826, 0.55 ) }
    dend_61 { pt3dadd( -109.307, 57.198, 289.889, 0.55 ) }
    dend_61 { pt3dadd( -109.456, 60.4645, 301.896, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -35.7663, 30.2166, -0.329366, 0.55 ) }
    dend_56 { pt3dadd( -37.0257, 30.9835, -2.1228, 0.55 ) }
    dend_56 { pt3dadd( -37.9319, 31.8189, -4.0746, 0.55 ) }
    dend_56 { pt3dadd( -38.7502, 32.8213, -6.11778, 0.55 ) }
    dend_56 { pt3dadd( -39.2627, 33.4491, -7.39719, 0.55 ) }
    dend_56 { pt3dadd( -40.1974, 34.5942, -9.73099, 0.83 ) }
    dend_56 { pt3dadd( -40.8812, 35.4319, -11.4384, 0.55 ) }
    dend_56 { pt3dadd( -41.6062, 36.5816, -13.9263, 0.83 ) }
    dend_56 { pt3dadd( -41.8169, 37.3337, -15.297, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -75.2544, 21.0182, 27.8086, 0.28 ) }
    dend_48 { pt3dadd( -76.1824, 19.4652, 27.6221, 0.28 ) }
    dend_48 { pt3dadd( -76.6312, 18.7966, 27.4872, 0.28 ) }
    dend_48 { pt3dadd( -77.2213, 17.8504, 27.2556, 0.55 ) }
    dend_48 { pt3dadd( -77.7089, 17.0187, 27.0565, 0.28 ) }
    dend_48 { pt3dadd( -78.4278, 15.7517, 26.7678, 0.55 ) }
    dend_48 { pt3dadd( -80.4272, 12.0289, 25.9725, 0.28 ) }
    dend_48 { pt3dadd( -81.0945, 10.7212, 25.5807, 0.55 ) }
    dend_48 { pt3dadd( -82.1148, 8.70596, 24.9052, 0.28 ) }
    dend_48 { pt3dadd( -82.7094, 7.49947, 24.4426, 0.55 ) }
    dend_48 { pt3dadd( -83.1223, 6.66764, 24.1031, 0.28 ) }
    dend_48 { pt3dadd( -83.5924, 5.71306, 23.7213, 0.55 ) }
    dend_48 { pt3dadd( -85.0189, 2.52842, 22.5154, 0.28 ) }
    dend_48 { pt3dadd( -85.4698, 1.56446, 22.1168, 0.55 ) }
    dend_48 { pt3dadd( -86.2656, 0.0878186, 21.3578, 0.28 ) }
    dend_48 { pt3dadd( -86.9134, -0.858799, 20.7984, 0.28 ) }
    dend_48 { pt3dadd( -87.482, -1.49085, 20.4124, 0.55 ) }
    dend_48 { pt3dadd( -89.4252, -3.2616, 19.4113, 0.28 ) }
    dend_48 { pt3dadd( -90.3189, -3.97746, 19.0312, 0.55 ) }
    dend_48 { pt3dadd( -92.5088, -5.60884, 18.0722, 0.28 ) }
    dend_48 { pt3dadd( -94.6894, -7.05183, 17.2071, 0.28 ) }
    dend_48 { pt3dadd( -97.054, -8.42807, 16.331, 0.28 ) }
    dend_48 { pt3dadd( -98.1281, -8.94549, 16.0111, 0.55 ) }
    dend_48 { pt3dadd( -103.391, -14.703, 13.6513, 0.55 ) }
    dend_48 { pt3dadd( -109.043, -20.5221, 12.8743, 0.55 ) }
    dend_48 { pt3dadd( -114.716, -26.0441, 10.8635, 0.55 ) }
    dend_48 { pt3dadd( -120.603, -31.0778, 8.1675, 0.55 ) }
    dend_48 { pt3dadd( -126.636, -35.5454, 4.77719, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -75.2544, 21.0182, 27.8086, 0.55 ) }
    dend_45 { pt3dadd( -76.2128, 20.9336, 28.137, 0.55 ) }
    dend_45 { pt3dadd( -78.8586, 20.8056, 29.4097, 0.55 ) }
    dend_45 { pt3dadd( -79.8414, 20.7494, 29.9492, 0.55 ) }
    dend_45 { pt3dadd( -82.1395, 20.5596, 31.2748, 0.55 ) }
    dend_45 { pt3dadd( -85.7068, 20.2486, 33.1267, 0.55 ) }
    dend_45 { pt3dadd( -87.5719, 20.1325, 34.0387, 0.28 ) }
    dend_45 { pt3dadd( -90.4777, 19.8723, 35.4187, 0.55 ) }
    dend_45 { pt3dadd( -92.6443, 19.6115, 36.3778, 0.55 ) }
    dend_45 { pt3dadd( -93.5583, 19.4962, 36.7866, 0.28 ) }
    dend_45 { pt3dadd( -99.0417, 18.7991, 39.2321, 0.55 ) }
    dend_45 { pt3dadd( -101.619, 18.3096, 40.2512, 0.28 ) }
    dend_45 { pt3dadd( -105.128, 17.573, 41.425, 0.28 ) }
    dend_45 { pt3dadd( -108.187, 16.9256, 42.2479, 0.55 ) }
    dend_45 { pt3dadd( -119.868, 16.8429, 47.5138, 0.55 ) }
    dend_45 { pt3dadd( -130.892, 16.8784, 54.0444, 0.55 ) }
    dend_45 { pt3dadd( -140.918, 16.1296, 61.9682, 0.55 ) }
    dend_45 { pt3dadd( -150.661, 17.6252, 70.1546, 0.55 ) }
    dend_45 { pt3dadd( -158.459, 19.4282, 80.1622, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -164.242, 22.4352, 91.1911, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 87.4368, 9.28662, -51.2571, 0.55 ) }
    dend_42 { pt3dadd( 92.9355, 11.0603, -55.5843, 0.55 ) }
    dend_42 { pt3dadd( 94.6644, 11.566, -57.0712, 0.55 ) }
    dend_42 { pt3dadd( 96.8223, 12.1278, -58.9172, 0.55 ) }
    dend_42 { pt3dadd( 100.73, 13.1498, -62.5013, 0.55 ) }
    dend_42 { pt3dadd( 104.791, 14.0722, -66.3679, 0.55 ) }
    dend_42 { pt3dadd( 106.763, 14.3637, -68.2317, 0.83 ) }
    dend_42 { pt3dadd( 108.373, 14.5148, -69.907, 0.55 ) }
    dend_42 { pt3dadd( 109.565, 14.5498, -71.2995, 0.83 ) }
    dend_42 { pt3dadd( 112.395, 14.27, -74.9238, 0.55 ) }
    dend_42 { pt3dadd( 114.704, 13.8241, -77.9594, 0.55 ) }
    dend_42 { pt3dadd( 117.361, 13.2717, -81.3142, 0.55 ) }
    dend_42 { pt3dadd( 120.326, 12.7523, -85.1002, 0.55 ) }
    dend_42 { pt3dadd( 122.309, 12.3645, -87.6994, 0.55 ) }
    dend_42 { pt3dadd( 124.544, 11.9315, -90.7088, 0.55 ) }
    dend_42 { pt3dadd( 126.479, 11.6486, -93.4425, 0.55 ) }
    dend_42 { pt3dadd( 127.704, 11.6096, -95.317, 0.55 ) }
    dend_42 { pt3dadd( 129.218, 11.6842, -99.0475, 0.55 ) }
    dend_42 { pt3dadd( 130.028, 11.6762, -101.387, 0.55 ) }
    dend_42 { pt3dadd( 130.676, 11.5796, -104.499, 0.55 ) }
    dend_42 { pt3dadd( 131.515, 11.2935, -109.773, 0.55 ) }
    dend_42 { pt3dadd( 131.678, 11.1901, -110.967, 0.28 ) }
    dend_42 { pt3dadd( 133.805, 9.77067, -125.516, 0.28 ) }
    dend_42 { pt3dadd( 134.555, 9.36949, -129.787, 0.83 ) }
    dend_42 { pt3dadd( 137.557, 7.66717, -144.983, 0.83 ) }
    dend_42 { pt3dadd( 139.107, 6.60385, -152.085, 0.83 ) }
    dend_42 { pt3dadd( 139.868, 6.05443, -154.98, 0.55 ) }
    dend_42 { pt3dadd( 140.767, 5.49287, -157.809, 0.55 ) }
    dend_42 { pt3dadd( 143.373, 4.25155, -163.097, 0.55 ) }
    dend_42 { pt3dadd( 146.214, 3.06567, -167.766, 0.28 ) }
    dend_42 { pt3dadd( 147.114, 2.72718, -168.091, 0.55 ) }
    dend_42 { pt3dadd( 149.124, 2.00923, -168.051, 0.28 ) }
    dend_42 { pt3dadd( 150.381, 1.62325, -167.83, 0.55 ) }
    dend_42 { pt3dadd( 151.69, 1.18735, -167.488, 0.28 ) }
    dend_42 { pt3dadd( 153.272, 0.728622, -166.993, 0.55 ) }
    dend_42 { pt3dadd( 155.646, 0.199324, -166.489, 0.28 ) }
    dend_42 { pt3dadd( 157.544, -0.271986, -166.155, 0.55 ) }
    dend_42 { pt3dadd( 159.656, -0.635447, -165.934, 0.28 ) }
    dend_42 { pt3dadd( 162.522, -1.08243, -165.888, 0.55 ) }
    dend_42 { pt3dadd( 165.74, -1.48414, -166.018, 0.55 ) }
    dend_42 { pt3dadd( 168.57, -1.7775, -166.316, 0.28 ) }
    dend_42 { pt3dadd( 172.484, -2.11726, -166.941, 0.55 ) }
    dend_42 { pt3dadd( 179.255, -2.41974, -168.715, 0.55 ) }
    dend_42 { pt3dadd( 182.254, -2.35235, -169.838, 0.55 ) }
    dend_42 { pt3dadd( 183.546, -2.25206, -170.452, 0.83 ) }
    dend_42 { pt3dadd( 186.003, -2.01091, -171.843, 0.55 ) }
    dend_42 { pt3dadd( 187.713, -1.76211, -172.905, 0.83 ) }
    dend_42 { pt3dadd( 192.323, -0.97039, -175.799, 0.55 ) }
    dend_42 { pt3dadd( 195.118, -0.659236, -177.666, 0.28 ) }
    dend_42 { pt3dadd( 196.291, -0.617535, -178.33, 0.55 ) }
    dend_42 { pt3dadd( 199.481, -0.84007, -179.834, 0.28 ) }
    dend_42 { pt3dadd( 200.591, -1.02771, -180.3, 0.55 ) }
    dend_42 { pt3dadd( 202.87, -1.60614, -180.924, 0.28 ) }
    dend_42 { pt3dadd( 205.177, -2.47382, -181.181, 0.55 ) }
    dend_42 { pt3dadd( 209.828, -4.59458, -180.896, 0.28 ) }
    dend_42 { pt3dadd( 211.968, -5.69946, -180.543, 0.55 ) }
    dend_42 { pt3dadd( 215.136, -7.54701, -179.871, 0.28 ) }
    dend_42 { pt3dadd( 219.143, -9.88792, -178.869, 0.55 ) }
    dend_42 { pt3dadd( 222.046, -11.5489, -178.091, 0.55 ) }
    dend_42 { pt3dadd( 227.092, -14.2845, -176.635, 0.28 ) }
    dend_42 { pt3dadd( 229.168, -15.2878, -176.199, 0.55 ) }
    dend_42 { pt3dadd( 232.76, -16.759, -175.821, 0.28 ) }
    dend_42 { pt3dadd( 236.361, -17.9218, -175.661, 0.55 ) }
    dend_42 { pt3dadd( 238.352, -18.3028, -175.82, 0.28 ) }
    dend_42 { pt3dadd( 240.171, -18.3947, -176.072, 0.55 ) }
    dend_42 { pt3dadd( 245.326, -18.2934, -177.222, 0.28 ) }
    dend_42 { pt3dadd( 249.031, -17.9724, -178.067, 0.28 ) }
    dend_42 { pt3dadd( 252.273, -17.4667, -178.815, 0.55 ) }
    dend_42 { pt3dadd( 255.857, -16.7889, -179.806, 0.28 ) }
    dend_42 { pt3dadd( 256.766, -16.5699, -180.018, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 87.4368, 9.28662, -51.2571, 0.55 ) }
    dend_35 { pt3dadd( 87.8925, 7.2129, -53.4597, 0.55 ) }
    dend_35 { pt3dadd( 88.087, 5.43568, -55.1686, 0.28 ) }
    dend_35 { pt3dadd( 88.2649, 3.76961, -56.5685, 0.55 ) }
    dend_35 { pt3dadd( 88.8572, 0.233298, -59.5818, 0.28 ) }
    dend_35 { pt3dadd( 88.8869, 0.0195847, -59.8077, 0.55 ) }
    dend_35 { pt3dadd( 89.0792, -1.07671, -61.104, 0.28 ) }
    dend_35 { pt3dadd( 89.1315, -1.93587, -62.351, 0.55 ) }
    dend_35 { pt3dadd( 89.1164, -2.79752, -63.7842, 0.28 ) }
    dend_35 { pt3dadd( 89.0473, -3.95265, -65.8118, 0.55 ) }
    dend_35 { pt3dadd( 88.8717, -6.87058, -70.8269, 0.55 ) }
    dend_35 { pt3dadd( 88.6681, -9.51233, -75.4617, 0.55 ) }
    dend_35 { pt3dadd( 88.4756, -11.621, -79.1693, 0.55 ) }
    dend_35 { pt3dadd( 88.2332, -13.7021, -82.7606, 0.55 ) }
    dend_35 { pt3dadd( 88.1684, -14.2469, -83.6567, 0.28 ) }
    dend_35 { pt3dadd( 88.123, -14.8457, -84.5485, 0.55 ) }
    dend_35 { pt3dadd( 88.1661, -15.7055, -85.6852, 0.28 ) }
    dend_35 { pt3dadd( 88.4494, -17.3018, -87.5494, 0.55 ) }
    dend_35 { pt3dadd( 89.3257, -20.5177, -90.5339, 0.55 ) }
    dend_35 { pt3dadd( 89.817, -22.2899, -91.9582, 0.28 ) }
    dend_35 { pt3dadd( 90.1941, -24.0628, -93.4918, 0.55 ) }
    dend_35 { pt3dadd( 90.5068, -26.5065, -95.7405, 0.28 ) }
    dend_35 { pt3dadd( 90.6075, -28.4562, -97.6047, 0.55 ) }
    dend_35 { pt3dadd( 90.6073, -31.3595, -100.394, 0.28 ) }
    dend_35 { pt3dadd( 90.6348, -34.3908, -103.17, 0.55 ) }
    dend_35 { pt3dadd( 90.6041, -38.7768, -107.243, 0.28 ) }
    dend_35 { pt3dadd( 90.5259, -41.1086, -109.421, 0.55 ) }
    dend_35 { pt3dadd( 90.3983, -43.4752, -111.714, 0.28 ) }
    dend_35 { pt3dadd( 90.2576, -45.5218, -113.888, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 90.1878, -48.0282, -116.881, 0.55 ) }
    dend_35 { pt3dadd( 90.3281, -50.3822, -119.589, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.4774, 15.5312, -3.43664, 0.55 ) }
    dend_31 { pt3dadd( 59.7207, 15.0649, -2.86819, 0.55 ) }
    dend_31 { pt3dadd( 61.3528, 14.6578, -2.61114, 0.55 ) }
    dend_31 { pt3dadd( 64.9254, 13.7191, -2.23896, 0.55 ) }
    dend_31 { pt3dadd( 66.5312, 13.2589, -2.21762, 0.55 ) }
    dend_31 { pt3dadd( 68.2887, 12.7896, -2.28739, 0.55 ) }
    dend_31 { pt3dadd( 70.6552, 12.1931, -2.55418, 0.55 ) }
    dend_31 { pt3dadd( 73.149, 11.4904, -3.07563, 0.55 ) }
    dend_31 { pt3dadd( 74.4585, 11.0992, -3.50193, 0.55 ) }
    dend_31 { pt3dadd( 77.1249, 10.2891, -4.74066, 0.55 ) }
    dend_31 { pt3dadd( 78.3545, 9.92434, -5.35151, 0.55 ) }
    dend_31 { pt3dadd( 81.2311, 9.01323, -6.85724, 0.55 ) }
    dend_31 { pt3dadd( 83.1715, 8.32045, -7.85778, 0.55 ) }
    dend_31 { pt3dadd( 84.5978, 7.80435, -8.52677, 0.83 ) }
    dend_31 { pt3dadd( 86.8678, 6.89764, -9.56594, 0.55 ) }
    dend_31 { pt3dadd( 89.0789, 5.90608, -10.4902, 0.83 ) }
    dend_31 { pt3dadd( 90.9455, 4.98185, -11.2014, 0.55 ) }
    dend_31 { pt3dadd( 92.6082, 4.18691, -11.7438, 0.55 ) }
    dend_31 { pt3dadd( 93.5573, 3.77813, -11.999, 0.83 ) }
    dend_31 { pt3dadd( 95.7725, 2.8352, -12.4728, 0.28 ) }
    dend_31 { pt3dadd( 96.8781, 2.41423, -12.6369, 0.28 ) }
    dend_31 { pt3dadd( 97.9412, 1.93764, -12.8509, 0.28 ) }
    dend_31 { pt3dadd( 99.0939, 1.45283, -13.0888, 0.28 ) }
    dend_31 { pt3dadd( 100.943, 0.709959, -13.5105, 0.28 ) }
    dend_31 { pt3dadd( 101.687, 0.421001, -13.6573, 0.55 ) }
    dend_31 { pt3dadd( 103.468, -0.245307, -13.8277, 0.55 ) }
    dend_31 { pt3dadd( 106.668, -1.46891, -13.965, 0.55 ) }
    dend_31 { pt3dadd( 107.55, -1.8292, -13.9617, 0.55 ) }
    dend_31 { pt3dadd( 108.336, -2.17522, -13.9224, 0.83 ) }
    dend_31 { pt3dadd( 110.046, -2.86897, -13.6942, 0.55 ) }
    dend_31 { pt3dadd( 111.532, -3.4682, -13.4709, 0.55 ) }
    dend_31 { pt3dadd( 112.937, -4.02822, -13.2533, 0.55 ) }
    dend_31 { pt3dadd( 114.024, -4.48199, -13.1165, 0.55 ) }
    dend_31 { pt3dadd( 115.734, -5.32461, -12.9841, 0.55 ) }
    dend_31 { pt3dadd( 117.732, -6.50042, -12.9407, 0.55 ) }
    dend_31 { pt3dadd( 120.801, -8.69081, -13.0953, 0.55 ) }
    dend_31 { pt3dadd( 122.458, -10.1525, -13.2886, 0.55 ) }
    dend_31 { pt3dadd( 123.866, -11.6796, -13.5283, 0.28 ) }
    dend_31 { pt3dadd( 124.275, -12.2346, -13.6245, 0.55 ) }
    dend_31 { pt3dadd( 125.146, -13.7642, -13.8831, 0.28 ) }
    dend_31 { pt3dadd( 125.852, -15.4543, -14.1425, 0.55 ) }
    dend_31 { pt3dadd( 126.46, -17.5326, -14.303, 0.55 ) }
    dend_31 { pt3dadd( 126.874, -18.8974, -14.3427, 0.28 ) }
    dend_31 { pt3dadd( 127.027, -19.3793, -14.3328, 0.55 ) }
    dend_31 { pt3dadd( 127.43, -20.5776, -14.2914, 0.28 ) }
    dend_31 { pt3dadd( 127.989, -22.1382, -14.1991, 0.55 ) }
    dend_31 { pt3dadd( 129.478, -25.9071, -13.8803, 0.55 ) }
    dend_31 { pt3dadd( 130.262, -27.8077, -13.6791, 0.55 ) }
    dend_31 { pt3dadd( 130.992, -29.5499, -13.4789, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 57.4774, 15.5312, -3.43664, 0.55 ) }
    dend_30 { pt3dadd( 59.8562, 15.5115, -1.56488, 0.55 ) }
    dend_30 { pt3dadd( 60.6203, 15.5053, -1.0071, 0.55 ) }
    dend_30 { pt3dadd( 63.463, 15.3604, 0.938128, 0.55 ) }
    dend_30 { pt3dadd( 66.6389, 15.2551, 3.1615, 0.55 ) }
    dend_30 { pt3dadd( 70.7054, 15.1037, 6.1198, 0.55 ) }
    dend_30 { pt3dadd( 71.8289, 15.0636, 6.92941, 0.55 ) }
    dend_30 { pt3dadd( 73.8407, 14.9187, 8.35659, 0.55 ) }
    dend_30 { pt3dadd( 76.0519, 14.815, 9.84018, 0.55 ) }
    dend_30 { pt3dadd( 78.6307, 14.7717, 11.4533, 0.55 ) }
    dend_30 { pt3dadd( 81.0626, 14.7633, 12.9844, 0.55 ) }
    dend_30 { pt3dadd( 82.4023, 14.8212, 13.7664, 0.55 ) }
    dend_30 { pt3dadd( 83.9778, 14.9326, 14.6849, 0.55 ) }
    dend_30 { pt3dadd( 85.9312, 15.1266, 15.7899, 0.83 ) }
    dend_30 { pt3dadd( 89.1408, 15.4619, 17.2656, 0.55 ) }
    dend_30 { pt3dadd( 91.2645, 15.612, 18.1354, 0.83 ) }
    dend_30 { pt3dadd( 94.2084, 15.6999, 19.2329, 0.55 ) }
    dend_30 { pt3dadd( 95.11, 15.6812, 19.5535, 0.55 ) }
    dend_30 { pt3dadd( 97.9011, 15.4956, 20.4804, 0.55 ) }
    dend_30 { pt3dadd( 102.885, 14.8912, 21.9177, 0.55 ) }
    dend_30 { pt3dadd( 106.524, 14.2615, 22.8721, 0.55 ) }
    dend_30 { pt3dadd( 109.396, 13.6301, 23.6861, 0.55 ) }
    dend_30 { pt3dadd( 112.311, 12.831, 24.6063, 0.55 ) }
    dend_30 { pt3dadd( 112.923, 12.6469, 24.8018, 0.28 ) }
    dend_30 { pt3dadd( 114.162, 12.2256, 25.1918, 0.83 ) }
    dend_30 { pt3dadd( 119.242, 10.4216, 26.8176, 0.55 ) }
    dend_30 { pt3dadd( 122.798, 9.16892, 27.8849, 0.55 ) }
    dend_30 { pt3dadd( 125.719, 8.20683, 28.8413, 0.55 ) }
    dend_30 { pt3dadd( 127.463, 7.62561, 29.4294, 0.83 ) }
    dend_30 { pt3dadd( 128.837, 7.18717, 29.8963, 0.28 ) }
    dend_30 { pt3dadd( 130.085, 6.79234, 30.3081, 0.55 ) }
    dend_30 { pt3dadd( 139.902, 5.9012, 35.1198, 0.55 ) }
    dend_30 { pt3dadd( 150.255, 3.53394, 37.9133, 0.55 ) }
    dend_30 { pt3dadd( 160.628, 2.38754, 41.3124, 0.55 ) }
    dend_30 { pt3dadd( 169.733, -0.301832, 46.8307, 0.55 ) }
    dend_30 { pt3dadd( 178.08, -4.35998, 52.679, 0.55 ) }
    dend_30 { pt3dadd( 187.209, -9.71634, 55.3939, 0.55 ) }
    dend_30 { pt3dadd( 196.152, -15.8611, 56.194, 0.55 ) }
    dend_30 { pt3dadd( 206.187, -20.2181, 56.514, 0.55 ) }
    dend_30 { pt3dadd( 216.079, -24.781, 57.5452, 0.55 ) }
    dend_30 { pt3dadd( 226.486, -28.2074, 57.9866, 0.55 ) }
    dend_30 { pt3dadd( 236.85, -31.2923, 59.867, 0.55 ) }
    dend_30 { pt3dadd( 246.405, -36.1102, 62.1501, 0.55 ) }
    dend_30 { pt3dadd( 256.326, -39.2296, 65.6624, 0.55 ) }
    dend_30 { pt3dadd( 265.878, -40.9191, 70.8038, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.02369, -27.439, 5.67703, 1.38 ) }
    dend_13 { pt3dadd( 0.615719, -30.4537, 4.4764, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.02369, -27.439, 5.67703, 0.55 ) }
    dend_12 { pt3dadd( -3.82707, -29.3392, 6.07052, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.84226, -31.7933, 6.50066, 0.55 ) }
    dend_12 { pt3dadd( -7.38922, -33.4055, 6.85729, 0.55 ) }
    dend_12 { pt3dadd( -8.73664, -34.7467, 6.96114, 0.55 ) }
    dend_12 { pt3dadd( -11.7256, -37.5082, 6.93065, 0.55 ) }
    dend_12 { pt3dadd( -13.828, -39.3448, 6.85748, 0.55 ) }
    dend_12 { pt3dadd( -15.7129, -40.9905, 6.72731, 0.55 ) }
    dend_12 { pt3dadd( -20.5399, -44.9804, 6.40121, 0.55 ) }
    dend_12 { pt3dadd( -26.3192, -49.5882, 6.05478, 0.55 ) }
    dend_12 { pt3dadd( -30.8058, -53.0699, 5.71693, 0.55 ) }
    dend_12 { pt3dadd( -33.6821, -55.3602, 5.46223, 0.55 ) }
    dend_12 { pt3dadd( -36.9879, -58.1179, 5.17678, 0.55 ) }
    dend_12 { pt3dadd( -41.2001, -62.1087, 4.85588, 0.55 ) }
    dend_12 { pt3dadd( -43.6859, -64.9739, 4.70567, 0.55 ) }
    dend_12 { pt3dadd( -46.7358, -69.1336, 4.75009, 0.55 ) }
    dend_12 { pt3dadd( -49.1854, -73.0593, 4.8613, 0.55 ) }
    dend_12 { pt3dadd( -51.712, -77.9931, 4.99447, 0.55 ) }
    dend_12 { pt3dadd( -54.1468, -83.8212, 5.18875, 0.55 ) }
    dend_12 { pt3dadd( -55.5244, -88.3078, 5.34687, 0.55 ) }
    dend_12 { pt3dadd( -56.0176, -90.5546, 5.5424, 0.55 ) }
    dend_12 { pt3dadd( -56.7818, -95.8631, 6.22674, 0.55 ) }
    dend_12 { pt3dadd( -57.3756, -100.839, 6.9806, 0.55 ) }
    dend_12 { pt3dadd( -57.6234, -105.88, 8.06244, 0.55 ) }
    dend_12 { pt3dadd( -57.7603, -108.774, 8.8515, 0.55 ) }
    dend_12 { pt3dadd( -58.0523, -117.736, 11.6149, 0.55 ) }
    dend_12 { pt3dadd( -58.0756, -118.396, 11.8312, 0.55 ) }
    dend_12 { pt3dadd( -58.1182, -122.445, 13.2396, 0.55 ) }
    dend_12 { pt3dadd( -58.4992, -129.67, 16.0087, 0.55 ) }
    dend_12 { pt3dadd( -58.6739, -132.081, 16.7913, 0.55 ) }
    dend_12 { pt3dadd( -59.1902, -135.825, 17.3749, 0.55 ) }
    dend_12 { pt3dadd( -59.4186, -137.209, 17.2555, 0.55 ) }
    dend_12 { pt3dadd( -60.1815, -141.882, 15.8926, 0.55 ) }
    dend_12 { pt3dadd( -60.6491, -144.9, 14.3083, 0.55 ) }
    dend_12 { pt3dadd( -61.4853, -149.689, 10.7373, 0.55 ) }
    dend_12 { pt3dadd( -62.3667, -155.549, 5.83939, 0.28 ) }
    dend_12 { pt3dadd( -62.6068, -156.993, 4.41864, 0.55 ) }
    dend_12 { pt3dadd( -63.0086, -159.177, 2.06067, 0.28 ) }
    dend_12 { pt3dadd( -63.0765, -159.506, 1.68766, 0.55 ) }
    dend_12 { pt3dadd( -63.4236, -161.308, -0.18984, 0.28 ) }
    dend_12 { pt3dadd( -63.5522, -161.922, -0.669317, 0.55 ) }
    dend_12 { pt3dadd( -64.1514, -165.125, -2.49912, 0.28 ) }
    dend_12 { pt3dadd( -64.396, -166.212, -3.09745, 0.55 ) }
    dend_12 { pt3dadd( -65.1027, -169.361, -4.63137, 0.28 ) }
    dend_12 { pt3dadd( -65.3197, -170.352, -5.11149, 0.55 ) }
    dend_12 { pt3dadd( -66.0846, -173.773, -6.70337, 0.28 ) }
    dend_12 { pt3dadd( -66.4298, -175.347, -7.44598, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.05374, -65.4101, 54.0341, 0.55 ) }
    dend_10 { pt3dadd( -11.827, -70.5779, 58.8477, 0.55 ) }
    dend_10 { pt3dadd( -15.4347, -75.1783, 63.7477, 0.55 ) }
    dend_10 { pt3dadd( -18.7464, -80.2414, 68.3415, 0.55 ) }
    dend_10 { pt3dadd( -22.1722, -85.3444, 72.8016, 0.55 ) }
    dend_10 { pt3dadd( -24.6527, -91.196, 76.8468, 0.55 ) }
    dend_10 { pt3dadd( -27.1277, -96.8008, 81.2647, 0.55 ) }
    dend_10 { pt3dadd( -28.4449, -103.477, 84.3135, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -9.05374, -65.4101, 54.0341, 0.55 ) }
    dend_3 { pt3dadd( -8.33908, -72.7449, 61.7532, 0.55 ) }
    dend_3 { pt3dadd( -6.99275, -81.204, 67.9628, 0.55 ) }
    dend_3 { pt3dadd( -7.38988, -89.8602, 74.0147, 0.55 ) }
    dend_3 { pt3dadd( -8.3061, -99.066, 79.0276, 0.55 ) }
    dend_3 { pt3dadd( -8.79817, -108.2, 84.2369, 0.55 ) }
    dend_3 { pt3dadd( -9.2822, -116.953, 90.1274, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -41.8169, 37.3337, -15.297, 0.83 ) }
    dend_60 { pt3dadd( -41.5417, 38.2774, -16.4869, 0.83 ) }
    dend_60 { pt3dadd( -40.9453, 40.5691, -19.1548, 0.55 ) }
    dend_60 { pt3dadd( -40.6868, 41.5628, -20.2118, 0.83 ) }
    dend_60 { pt3dadd( -40.406, 42.6305, -21.2604, 0.55 ) }
    dend_60 { pt3dadd( -40.118, 43.739, -22.1635, 0.55 ) }
    dend_60 { pt3dadd( -39.9686, 44.3003, -22.5371, 0.28 ) }
    dend_60 { pt3dadd( -39.8953, 44.6788, -22.6811, 0.55 ) }
    dend_60 { pt3dadd( -39.6096, 45.958, -22.8695, 0.28 ) }
    dend_60 { pt3dadd( -39.4729, 46.5065, -22.9208, 0.55 ) }
    dend_60 { pt3dadd( -39.0222, 48.4184, -23.0161, 0.28 ) }
    dend_60 { pt3dadd( -38.7062, 49.9376, -23.0367, 0.55 ) }
    dend_60 { pt3dadd( -38.3322, 52.3175, -22.9894, 0.28 ) }
    dend_60 { pt3dadd( -38.0803, 54.4136, -22.9045, 0.28 ) }
    dend_60 { pt3dadd( -38.0103, 55.5899, -22.832, 0.55 ) }
    dend_60 { pt3dadd( -38.0168, 56.9865, -22.7442, 0.28 ) }
    dend_60 { pt3dadd( -38.0656, 57.6544, -22.6919, 0.55 ) }
    dend_60 { pt3dadd( -38.27, 59.2232, -22.6421, 0.28 ) }
    dend_60 { pt3dadd( -38.479, 60.267, -22.6651, 0.28 ) }
    dend_60 { pt3dadd( -38.7072, 61.2908, -22.7202, 0.28 ) }
    dend_60 { pt3dadd( -38.8062, 61.8313, -22.7518, 0.55 ) }
    dend_60 { pt3dadd( -39.085, 64.0135, -22.9352, 0.28 ) }
    dend_60 { pt3dadd( -39.3259, 66.5946, -23.2035, 0.55 ) }
    dend_60 { pt3dadd( -39.3954, 67.4857, -23.3, 0.55 ) }
    dend_60 { pt3dadd( -39.48, 68.3803, -23.3762, 0.55 ) }
    dend_60 { pt3dadd( -39.7649, 70.2803, -23.5696, 0.55 ) }
    dend_60 { pt3dadd( -40.0359, 71.5267, -23.7239, 0.28 ) }
    dend_60 { pt3dadd( -40.1957, 71.9986, -23.7883, 0.55 ) }
    dend_60 { pt3dadd( -40.722, 73.2784, -23.9332, 0.28 ) }
    dend_60 { pt3dadd( -41.3408, 74.638, -24.1435, 0.55 ) }
    dend_60 { pt3dadd( -42.4212, 76.5894, -24.5239, 0.28 ) }
    dend_60 { pt3dadd( -42.9648, 77.4026, -24.7095, 0.28 ) }
    dend_60 { pt3dadd( -43.8739, 78.5276, -25.0856, 0.55 ) }
    dend_60 { pt3dadd( -44.9038, 79.6963, -25.5424, 0.28 ) }
    dend_60 { pt3dadd( -45.0947, 79.8792, -25.6236, 0.55 ) }
    dend_60 { pt3dadd( -45.7909, 80.4613, -25.9071, 0.28 ) }
    dend_60 { pt3dadd( -48.206, 82.3254, -26.8287, 0.55 ) }
    dend_60 { pt3dadd( -51.5969, 84.6135, -28.2262, 0.28 ) }
    dend_60 { pt3dadd( -52.228, 84.9947, -28.5213, 0.55 ) }
    dend_60 { pt3dadd( -53.9678, 85.9739, -29.358, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -54.6997, 86.374, -29.7291, 0.28 ) }
    dend_60 { pt3dadd( -55.3382, 86.7041, -30.0822, 0.55 ) }
    dend_60 { pt3dadd( -57.231, 87.4445, -31.2509, 0.28 ) }
    dend_60 { pt3dadd( -58.5794, 87.8389, -32.0148, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -41.8169, 37.3337, -15.297, 0.55 ) }
    dend_57 { pt3dadd( -42.0485, 39.0087, -15.3807, 0.55 ) }
    dend_57 { pt3dadd( -42.2212, 39.9882, -15.3372, 0.28 ) }
    dend_57 { pt3dadd( -42.5096, 40.6706, -15.1423, 0.55 ) }
    dend_57 { pt3dadd( -43.1717, 42.2376, -14.6948, 0.28 ) }
    dend_57 { pt3dadd( -43.6368, 43.3382, -14.3804, 0.55 ) }
    dend_57 { pt3dadd( -44.4943, 45.3672, -13.8009, 0.28 ) }
    dend_57 { pt3dadd( -45.0931, 46.4344, -13.2995, 0.55 ) }
    dend_57 { pt3dadd( -47.4518, 48.8731, -11.2055, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -126.636, -35.5454, 4.77719, 0.55 ) }
    dend_52 { pt3dadd( -130.921, -40.4808, 2.98451, 0.55 ) }
    dend_52 { pt3dadd( -134.16, -45.8885, 0.62046, 0.55 ) }
    dend_52 { pt3dadd( -136.969, -50.755, -3.1494, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -126.636, -35.5454, 4.77719, 0.55 ) }
    dend_49 { pt3dadd( -130.993, -39.7584, 2.26482, 0.55 ) }
    dend_49 { pt3dadd( -134.75, -43.9991, -1.03434, 0.55 ) }
    dend_49 { pt3dadd( -138.25, -48.3251, -4.4879, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -164.242, 22.4352, 91.1911, 0.55 ) }
    dend_47 { pt3dadd( -171.763, 24.7091, 98.1496, 0.55 ) }
    dend_47 { pt3dadd( -180.237, 27.2982, 103.757, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -164.242, 22.4352, 91.1911, 0.55 ) }
    dend_46 { pt3dadd( -171.549, 21.894, 95.3963, 0.55 ) }
    dend_46 { pt3dadd( -178.938, 22.668, 99.4288, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 90.3281, -50.3822, -119.589, 0.28 ) }
    dend_39 { pt3dadd( 96.7078, -54.489, -132.734, 0.28 ) }
    dend_39 { pt3dadd( 97.3714, -54.9338, -133.903, 0.55 ) }
    dend_39 { pt3dadd( 98.4917, -55.6847, -135.877, 0.28 ) }
    dend_39 { pt3dadd( 99.4351, -56.317, -137.539, 0.28 ) }
    dend_39 { pt3dadd( 100.684, -57.154, -139.739, 0.55 ) }
    dend_39 { pt3dadd( 102.331, -58.2575, -142.639, 0.55 ) }
    dend_39 { pt3dadd( 104.936, -59.8118, -144.21, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 90.3281, -50.3822, -119.589, 0.55 ) }
    dend_36 { pt3dadd( 91.0256, -51.5431, -121.391, 0.55 ) }
    dend_36 { pt3dadd( 91.2123, -52.0553, -122.191, 0.28 ) }
    dend_36 { pt3dadd( 91.4696, -52.9235, -123.586, 0.55 ) }
    dend_36 { pt3dadd( 92.0364, -54.8362, -126.659, 0.28 ) }
    dend_36 { pt3dadd( 92.4292, -56.1617, -128.788, 0.55 ) }
    dend_36 { pt3dadd( 93.0948, -58.4075, -132.396, 0.28 ) }
    dend_36 { pt3dadd( 93.7998, -61.0852, -137.095, 0.28 ) }
    dend_36 { pt3dadd( 94.05, -62.3039, -139.289, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 130.992, -29.5499, -13.4789, 0.28 ) }
    dend_33 { pt3dadd( 133.164, -32.3361, -11.691, 0.28 ) }
    dend_33 { pt3dadd( 135.894, -35.8991, -8.98092, 0.28 ) }
    dend_33 { pt3dadd( 137.615, -38.1736, -7.11184, 0.55 ) }
    dend_33 { pt3dadd( 138.666, -39.4076, -6.00118, 0.28 ) }
    dend_33 { pt3dadd( 139.223, -40.069, -5.39546, 0.28 ) }
    dend_33 { pt3dadd( 141.989, -43.3562, -2.46787, 0.55 ) }
    dend_33 { pt3dadd( 142.628, -44.0487, -1.69742, 0.28 ) }
    dend_33 { pt3dadd( 144.12, -45.8152, 0.488586, 0.55 ) }
    dend_33 { pt3dadd( 145.39, -47.3789, 2.30145, 0.28 ) }
    dend_33 { pt3dadd( 146.509, -48.6638, 3.74553, 0.55 ) }
    dend_33 { pt3dadd( 147.817, -50.242, 5.34518, 0.55 ) }
    dend_33 { pt3dadd( 149.902, -52.8841, 7.48148, 0.55 ) }
    dend_33 { pt3dadd( 150.403, -53.5416, 7.97683, 0.55 ) }
    dend_33 { pt3dadd( 152.187, -56.0056, 9.79048, 0.28 ) }
    dend_33 { pt3dadd( 152.872, -57.0217, 10.4983, 0.55 ) }
    dend_33 { pt3dadd( 153.841, -58.3241, 11.4001, 0.28 ) }
    dend_33 { pt3dadd( 155.208, -60.2063, 12.5807, 0.55 ) }
    dend_33 { pt3dadd( 157.491, -63.3432, 13.9486, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 130.992, -29.5499, -13.4789, 0.55 ) }
    dend_32 { pt3dadd( 127.637, -29.2834, -13.6361, 0.55 ) }
    dend_32 { pt3dadd( 124.912, -29.067, -13.7638, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.615719, -30.4537, 4.4764, 0.83 ) }
    dend_17 { pt3dadd( 0.73344, -30.6996, 4.44556, 0.83 ) }
    dend_17 { pt3dadd( 2.12355, -32.8803, 4.29379, 0.83 ) }
    dend_17 { pt3dadd( 3.33357, -34.7891, 4.02701, 0.55 ) }
    dend_17 { pt3dadd( 4.29891, -36.312, 3.81417, 0.55 ) }
    dend_17 { pt3dadd( 6.35077, -39.5488, 3.36179, 0.83 ) }
    dend_17 { pt3dadd( 8.83954, -43.4749, 2.81308, 0.55 ) }
    dend_17 { pt3dadd( 10.2019, -45.5308, 2.56532, 0.83 ) }
    dend_17 { pt3dadd( 12.633, -48.8057, 2.30946, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.615719, -30.4537, 4.4764, 0.55 ) }
    dend_14 { pt3dadd( -0.208984, -31.2008, 2.1776, 0.55 ) }
    dend_14 { pt3dadd( -1.0942, -32.0026, -0.289882, 0.55 ) }
    dend_14 { pt3dadd( -2.13921, -32.9492, -3.20277, 0.55 ) }
    dend_14 { pt3dadd( -3.40819, -34.0987, -6.73995, 0.55 ) }
    dend_14 { pt3dadd( -4.12829, -34.751, -8.74718, 0.55 ) }
    dend_14 { pt3dadd( -4.27295, -34.882, -9.1504, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.2822, -116.953, 90.1274, 0.55 ) }
    dend_7 { pt3dadd( -8.97898, -124.698, 96.0539, 0.55 ) }
    dend_7 { pt3dadd( -7.28303, -132.902, 100.975, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.2822, -116.953, 90.1274, 0.55 ) }
    dend_4 { pt3dadd( -9.65065, -124.831, 94.9612, 0.55 ) }
    dend_4 { pt3dadd( -10.4683, -132.534, 100.05, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -47.4518, 48.8731, -11.2055, 0.28 ) }
    dend_59 { pt3dadd( -48.7046, 50.2465, -9.72936, 0.28 ) }
    dend_59 { pt3dadd( -49.1779, 50.7648, -9.09941, 0.55 ) }
    dend_59 { pt3dadd( -50.5308, 52.2651, -7.23698, 0.28 ) }
    dend_59 { pt3dadd( -51.2025, 53.0114, -6.40383, 0.55 ) }
    dend_59 { pt3dadd( -53.0378, 55.0341, -4.23317, 0.28 ) }
    dend_59 { pt3dadd( -54.9032, 57.0899, -2.02699, 0.55 ) }
    dend_59 { pt3dadd( -57.9963, 60.3009, 1.65344, 0.28 ) }
    dend_59 { pt3dadd( -58.6546, 60.9909, 2.43815, 0.55 ) }
    dend_59 { pt3dadd( -60.0985, 62.6148, 4.10313, 0.28 ) }
    dend_59 { pt3dadd( -60.6598, 63.2897, 4.75835, 0.55 ) }
    dend_59 { pt3dadd( -67.0991, 67.7325, 10.2912, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -74.1239, 73.216, 13.6521, 0.55 ) }
    dend_59 { pt3dadd( -80.1783, 78.906, 18.2865, 0.55 ) }
    dend_59 { pt3dadd( -84.9451, 85.698, 22.7809, 0.55 ) }
    dend_59 { pt3dadd( -90.7018, 92.1609, 26.601, 0.55 ) }
    dend_59 { pt3dadd( -97.3071, 97.2168, 31.2936, 0.55 ) }
    dend_59 { pt3dadd( -103.336, 101.54, 37.3666, 0.55 ) }
    dend_59 { pt3dadd( -108.529, 104.916, 44.7349, 0.55 ) }
    dend_59 { pt3dadd( -113.722, 108.819, 51.8118, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.4518, 48.8731, -11.2055, 0.55 ) }
    dend_58 { pt3dadd( -51.1459, 47.9666, -9.24132, 0.55 ) }
    dend_58 { pt3dadd( -53.0683, 47.4321, -8.21867, 0.28 ) }
    dend_58 { pt3dadd( -54.4988, 47.0343, -7.45764, 0.55 ) }
    dend_58 { pt3dadd( -55.6911, 46.7027, -6.82336, 0.28 ) }
    dend_58 { pt3dadd( -56.5262, 46.4705, -6.37909, 0.55 ) }
    dend_58 { pt3dadd( -58.829, 45.8301, -5.15403, 0.28 ) }
    dend_58 { pt3dadd( -60.3822, 45.2578, -4.52827, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -136.969, -50.755, -3.1494, 0.55 ) }
    dend_54 { pt3dadd( -141.2, -58.9304, -2.38446, 0.55 ) }
    dend_54 { pt3dadd( -145.251, -67.0065, -0.546549, 0.55 ) }
    dend_54 { pt3dadd( -148.581, -75.5988, -0.328221, 0.55 ) }
    dend_54 { pt3dadd( -152.871, -83.6569, 1.05103, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -136.969, -50.755, -3.1494, 0.55 ) }
    dend_53 { pt3dadd( -141.519, -54.2154, -8.88204, 0.55 ) }
    dend_53 { pt3dadd( -145.794, -56.615, -15.385, 0.55 ) }
    dend_53 { pt3dadd( -150.617, -59.9398, -20.9838, 0.55 ) }
    dend_53 { pt3dadd( -156.934, -62.0919, -25.6748, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -138.25, -48.3251, -4.4879, 0.55 ) }
    dend_51 { pt3dadd( -142.838, -52.663, -10.4, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -138.25, -48.3251, -4.4879, 0.55 ) }
    dend_50 { pt3dadd( -142.905, -57.785, -3.07621, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 104.936, -59.8118, -144.21, 0.28 ) }
    dend_41 { pt3dadd( 107.426, -60.2125, -146.068, 0.28 ) }
    dend_41 { pt3dadd( 108.582, -60.3986, -146.931, 0.55 ) }
    dend_41 { pt3dadd( 110.787, -60.7535, -148.577, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 104.936, -59.8118, -144.21, 0.55 ) }
    dend_40 { pt3dadd( 104.772, -61.2749, -145.134, 0.55 ) }
    dend_40 { pt3dadd( 104.445, -64.2014, -146.981, 0.28 ) }
    dend_40 { pt3dadd( 104.338, -65.1547, -147.583, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 94.05, -62.3039, -139.289, 0.28 ) }
    dend_38 { pt3dadd( 95.2119, -66.1456, -145.228, 0.28 ) }
    dend_38 { pt3dadd( 95.7872, -68.0479, -148.17, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 94.05, -62.3039, -139.289, 0.55 ) }
    dend_37 { pt3dadd( 92.5015, -63.0936, -138.437, 0.55 ) }
    dend_37 { pt3dadd( 88.1835, -65.2956, -136.063, 0.28 ) }
    dend_37 { pt3dadd( 87.1577, -65.8187, -135.499, 0.55 ) }
    dend_37 { pt3dadd( 84.3516, -67.2497, -133.957, 0.28 ) }
    dend_37 { pt3dadd( 82.5429, -68.1721, -132.962, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.633, -48.8057, 2.30946, 0.83 ) }
    dend_23 { pt3dadd( 12.6577, -49.1086, 2.27208, 0.83 ) }
    dend_23 { pt3dadd( 13.0626, -53.0683, 1.88498, 0.83 ) }
    dend_23 { pt3dadd( 13.1366, -56.0253, 1.83924, 0.83 ) }
    dend_23 { pt3dadd( 13.0572, -58.8675, 2.13867, 0.83 ) }
    dend_23 { pt3dadd( 12.8673, -62.6381, 2.85979, 0.83 ) }
    dend_23 { pt3dadd( 12.5542, -66.9748, 3.88113, 0.83 ) }
    dend_23 { pt3dadd( 12.2753, -71.8083, 5.28308, 0.83 ) }
    dend_23 { pt3dadd( 12.0478, -76.4958, 6.87179, 0.83 ) }
    dend_23 { pt3dadd( 11.3486, -82.2492, 8.75483, 0.83 ) }
    dend_23 { pt3dadd( 10.8454, -84.8955, 9.49026, 0.83 ) }
    dend_23 { pt3dadd( 10.4344, -86.89, 9.91295, 0.83 ) }
    dend_23 { pt3dadd( 9.5449, -90.7182, 10.6546, 0.83 ) }
    dend_23 { pt3dadd( 8.79585, -94.1553, 11.1048, 0.83 ) }
    dend_23 { pt3dadd( 7.45652, -101.521, 11.1319, 0.83 ) }
    dend_23 { pt3dadd( 6.67147, -105.569, 10.5907, 0.83 ) }
    dend_23 { pt3dadd( 5.89326, -109.309, 9.81011, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.633, -48.8057, 2.30946, 0.55 ) }
    dend_18 { pt3dadd( 11.6999, -50.7396, 2.49524, 0.55 ) }
    dend_18 { pt3dadd( 11.0079, -52.1408, 2.74342, 0.55 ) }
    dend_18 { pt3dadd( 10.5966, -53.035, 2.99656, 0.55 ) }
    dend_18 { pt3dadd( 10.0328, -54.432, 3.53377, 0.55 ) }
    dend_18 { pt3dadd( 9.00479, -57.1949, 4.78337, 0.55 ) }
    dend_18 { pt3dadd( 8.22318, -59.2806, 5.97683, 0.55 ) }
    dend_18 { pt3dadd( 7.61011, -60.9482, 7.12505, 0.55 ) }
    dend_18 { pt3dadd( 6.95466, -62.6292, 8.41606, 0.55 ) }
    dend_18 { pt3dadd( 6.40333, -64.0215, 9.56615, 0.28 ) }
    dend_18 { pt3dadd( 5.94623, -65.1548, 10.687, 0.55 ) }
    dend_18 { pt3dadd( 5.08217, -67.2096, 13.0443, 0.55 ) }
    dend_18 { pt3dadd( 4.48657, -68.465, 14.6423, 0.55 ) }
    dend_18 { pt3dadd( 4.1439, -69.1683, 15.5304, 0.55 ) }
    dend_18 { pt3dadd( 3.69082, -69.9984, 16.533, 0.83 ) }
    dend_18 { pt3dadd( 2.31192, -72.4638, 19.3268, 0.28 ) }
    dend_18 { pt3dadd( 1.85494, -73.2803, 20.227, 0.55 ) }
    dend_18 { pt3dadd( 1.07699, -74.7561, 21.7963, 0.28 ) }
    dend_18 { pt3dadd( 0.83989, -75.2102, 22.3163, 0.55 ) }
    dend_18 { pt3dadd( 0.346941, -76.2779, 23.5104, 0.28 ) }
    dend_18 { pt3dadd( 0.0680259, -76.8862, 24.1402, 0.55 ) }
    dend_18 { pt3dadd( -1.01022, -78.8777, 25.6152, 0.55 ) }
    dend_18 { pt3dadd( -2.31074, -84.2105, 31.7821, 0.55 ) }
    dend_18 { pt3dadd( -3.18671, -89.2818, 38.261, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.27295, -34.882, -9.1504, 0.55 ) }
    dend_16 { pt3dadd( -5.44364, -35.7072, -12.0906, 0.55 ) }
    dend_16 { pt3dadd( -5.80177, -35.8998, -12.9295, 0.55 ) }
    dend_16 { pt3dadd( -6.72713, -36.3847, -14.9789, 0.55 ) }
    dend_16 { pt3dadd( -8.81464, -37.3447, -19.3249, 0.28 ) }
    dend_16 { pt3dadd( -9.13903, -37.4763, -19.9411, 0.55 ) }
    dend_16 { pt3dadd( -10.5274, -38.0855, -22.4324, 0.55 ) }
    dend_16 { pt3dadd( -12.5456, -38.926, -25.5774, 0.55 ) }
    dend_16 { pt3dadd( -13.329, -39.2138, -26.755, 0.28 ) }
    dend_16 { pt3dadd( -14.0384, -39.402, -27.734, 0.28 ) }
    dend_16 { pt3dadd( -15.3394, -39.6951, -29.195, 0.55 ) }
    dend_16 { pt3dadd( -16.8977, -39.9596, -31.0483, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -18.3221, -40.0487, -32.7996, 0.55 ) }
    dend_16 { pt3dadd( -19.4349, -40.0027, -34.1271, 0.55 ) }
    dend_16 { pt3dadd( -20.1897, -39.8903, -35.0708, 0.55 ) }
    dend_16 { pt3dadd( -22.3747, -39.4312, -37.9258, 0.55 ) }
    dend_16 { pt3dadd( -24.6988, -38.7473, -40.8757, 0.55 ) }
    dend_16 { pt3dadd( -25.6718, -38.3977, -42.0645, 0.28 ) }
    dend_16 { pt3dadd( -26.5876, -38.0836, -43.2151, 0.55 ) }
    dend_16 { pt3dadd( -28.455, -37.5997, -45.5264, 0.28 ) }
    dend_16 { pt3dadd( -29.0867, -37.4598, -46.2965, 0.83 ) }
    dend_16 { pt3dadd( -30.3074, -37.183, -47.6361, 0.28 ) }
    dend_16 { pt3dadd( -31.2424, -37.0667, -48.4652, 0.55 ) }
    dend_16 { pt3dadd( -32.6125, -36.9526, -49.6389, 0.28 ) }
    dend_16 { pt3dadd( -33.1663, -36.8996, -50.0863, 0.55 ) }
    dend_16 { pt3dadd( -34.2167, -36.8241, -50.8551, 0.55 ) }
    dend_16 { pt3dadd( -35.8298, -36.5382, -51.9509, 0.55 ) }
    dend_16 { pt3dadd( -36.9081, -36.2828, -52.6037, 0.28 ) }
    dend_16 { pt3dadd( -37.8046, -35.9657, -53.0579, 0.55 ) }
    dend_16 { pt3dadd( -38.8594, -35.4605, -53.5972, 0.28 ) }
    dend_16 { pt3dadd( -39.0308, -35.3632, -53.6918, 0.55 ) }
    dend_16 { pt3dadd( -40.5101, -34.4239, -54.8452, 0.28 ) }
    dend_16 { pt3dadd( -41.5378, -33.7163, -55.8073, 0.55 ) }
    dend_16 { pt3dadd( -42.8148, -32.676, -57.2897, 0.83 ) }
    dend_16 { pt3dadd( -43.8134, -31.787, -58.654, 0.28 ) }
    dend_16 { pt3dadd( -44.0591, -31.5591, -59.039, 0.55 ) }
    dend_16 { pt3dadd( -45.891, -29.8463, -62.1337, 0.28 ) }
    dend_16 { pt3dadd( -46.195, -29.5531, -62.7191, 0.55 ) }
    dend_16 { pt3dadd( -47.0601, -28.597, -64.5285, 0.28 ) }
    dend_16 { pt3dadd( -47.2824, -28.351, -64.9981, 0.55 ) }
    dend_16 { pt3dadd( -47.8762, -27.7121, -66.1433, 0.28 ) }
    dend_16 { pt3dadd( -48.3121, -27.253, -66.9155, 0.55 ) }
    dend_16 { pt3dadd( -49.367, -26.232, -68.4316, 0.28 ) }
    dend_16 { pt3dadd( -50.0068, -25.6853, -69.3007, 0.55 ) }
    dend_16 { pt3dadd( -51.4109, -24.6322, -71.0627, 0.28 ) }
    dend_16 { pt3dadd( -51.833, -24.3478, -71.5796, 0.55 ) }
    dend_16 { pt3dadd( -52.5078, -23.967, -72.3607, 0.28 ) }
    dend_16 { pt3dadd( -53.0925, -23.647, -72.9883, 0.55 ) }
    dend_16 { pt3dadd( -54.3409, -23.004, -74.2046, 0.28 ) }
    dend_16 { pt3dadd( -54.7226, -22.8206, -74.5567, 0.55 ) }
    dend_16 { pt3dadd( -57.6144, -21.3967, -77.0197, 0.28 ) }
    dend_16 { pt3dadd( -58.6639, -20.8178, -77.7822, 0.55 ) }
    dend_16 { pt3dadd( -60.5817, -19.6888, -79.0094, 0.28 ) }
    dend_16 { pt3dadd( -61.4555, -19.1438, -79.5335, 0.55 ) }
    dend_16 { pt3dadd( -63.5017, -17.9119, -80.6128, 0.28 ) }
    dend_16 { pt3dadd( -64.2653, -17.4951, -80.9751, 0.55 ) }
    dend_16 { pt3dadd( -67.0843, -16.2447, -82.1353, 0.28 ) }
    dend_16 { pt3dadd( -68.2665, -15.8718, -82.6097, 0.55 ) }
    dend_16 { pt3dadd( -69.9659, -15.6173, -83.2697, 0.55 ) }
    dend_16 { pt3dadd( -71.0208, -15.5273, -83.6512, 0.55 ) }
    dend_16 { pt3dadd( -73.224, -15.402, -84.2635, 0.28 ) }
    dend_16 { pt3dadd( -75.4317, -15.3023, -84.7317, 0.28 ) }
    dend_16 { pt3dadd( -77.2854, -15.2139, -85.0696, 0.55 ) }
    dend_16 { pt3dadd( -79.6119, -14.9253, -85.2402, 0.28 ) }
    dend_16 { pt3dadd( -80.7961, -14.653, -85.1759, 0.55 ) }
    dend_16 { pt3dadd( -83.6611, -13.6022, -84.7551, 0.28 ) }
    dend_16 { pt3dadd( -85.1896, -12.809, -84.2089, 0.55 ) }
    dend_16 { pt3dadd( -86.2034, -12.1666, -83.658, 0.28 ) }
    dend_16 { pt3dadd( -87.3705, -11.4457, -82.7915, 0.55 ) }
    dend_16 { pt3dadd( -88.8445, -10.5017, -81.549, 0.28 ) }
    dend_16 { pt3dadd( -89.4057, -10.1703, -81.0848, 0.55 ) }
    dend_16 { pt3dadd( -92.3074, -8.6913, -78.9983, 0.28 ) }
    dend_16 { pt3dadd( -93.2884, -8.22678, -78.3051, 0.55 ) }
    dend_16 { pt3dadd( -95.6279, -7.20298, -76.6041, 0.28 ) }
    dend_16 { pt3dadd( -96.9, -6.66042, -75.6809, 0.55 ) }
    dend_16 { pt3dadd( -97.9464, -6.21604, -74.9241, 0.55 ) }
    dend_16 { pt3dadd( -99.1967, -5.69319, -74.0508, 0.28 ) }
    dend_16 { pt3dadd( -99.8464, -5.42634, -73.6971, 0.55 ) }
    dend_16 { pt3dadd( -102.019, -4.46641, -72.636, 0.28 ) }
    dend_16 { pt3dadd( -103.151, -3.84656, -72.0559, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.27295, -34.882, -9.1504, 0.55 ) }
    dend_15 { pt3dadd( -3.69931, -34.9605, -10.1338, 0.55 ) }
    dend_15 { pt3dadd( -3.09575, -34.9216, -11.1024, 0.55 ) }
    dend_15 { pt3dadd( -2.28512, -34.7805, -12.2666, 0.55 ) }
    dend_15 { pt3dadd( -1.58683, -34.5798, -13.1823, 0.55 ) }
    dend_15 { pt3dadd( 3.39364, -32.5471, -18.7939, 0.55 ) }
    dend_15 { pt3dadd( 4.50447, -31.9185, -20.0678, 0.55 ) }
    dend_15 { pt3dadd( 6.11571, -30.8298, -21.98, 0.55 ) }
    dend_15 { pt3dadd( 7.24942, -30.0065, -23.3393, 0.55 ) }
    dend_15 { pt3dadd( 8.37173, -29.1155, -24.6299, 0.28 ) }
    dend_15 { pt3dadd( 10.1621, -27.6123, -26.5096, 0.55 ) }
    dend_15 { pt3dadd( 12.9348, -25.2683, -29.1336, 0.28 ) }
    dend_15 { pt3dadd( 13.1393, -25.1238, -29.4338, 0.55 ) }
    dend_15 { pt3dadd( 14.0116, -24.6196, -31.7786, 0.28 ) }
    dend_15 { pt3dadd( 14.3375, -24.3908, -33.4638, 0.55 ) }
    dend_15 { pt3dadd( 14.5256, -24.2755, -35.3296, 0.55 ) }
    dend_15 { pt3dadd( 14.8246, -24.2316, -38.6948, 0.55 ) }
    dend_15 { pt3dadd( 15.4316, -24.1886, -45.2986, 0.55 ) }
    dend_15 { pt3dadd( 15.9196, -24.199, -49.7268, 0.55 ) }
    dend_15 { pt3dadd( 16.1292, -24.2133, -51.2505, 0.55 ) }
    dend_15 { pt3dadd( 17.7389, -24.2187, -61.225, 0.55 ) }
    dend_15 { pt3dadd( 18.2863, -24.1765, -63.9041, 0.55 ) }
    dend_15 { pt3dadd( 18.7062, -24.1467, -65.3835, 0.55 ) }
    dend_15 { pt3dadd( 19.9899, -24.1435, -68.7485, 0.55 ) }
    dend_15 { pt3dadd( 23.5644, -24.5165, -76.6562, 0.55 ) }
    dend_15 { pt3dadd( 24.6234, -24.6996, -78.7482, 0.28 ) }
    dend_15 { pt3dadd( 25.3196, -24.8532, -79.8955, 0.55 ) }
    dend_15 { pt3dadd( 26.3879, -25.1529, -81.5791, 0.28 ) }
    dend_15 { pt3dadd( 26.8828, -25.3474, -82.2404, 0.55 ) }
    dend_15 { pt3dadd( 28.8213, -26.234, -83.8031, 0.28 ) }
    dend_15 { pt3dadd( 30.5687, -27.4886, -84.0264, 0.55 ) }
    dend_15 { pt3dadd( 31.6246, -28.3903, -84.0923, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 32.6015, -29.3937, -84.0339, 0.55 ) }
    dend_15 { pt3dadd( 33.4656, -30.4947, -83.9074, 0.28 ) }
    dend_15 { pt3dadd( 33.8417, -31.0641, -83.8675, 0.55 ) }
    dend_15 { pt3dadd( 34.719, -32.5606, -83.7024, 0.28 ) }
    dend_15 { pt3dadd( 34.9459, -33.0068, -83.7315, 0.55 ) }
    dend_15 { pt3dadd( 36.2363, -35.5617, -84.0561, 0.28 ) }
    dend_15 { pt3dadd( 36.8716, -36.7371, -84.3736, 0.55 ) }
    dend_15 { pt3dadd( 38.3324, -39.234, -85.3642, 0.28 ) }
    dend_15 { pt3dadd( 38.9143, -40.1481, -85.8431, 0.55 ) }
    dend_15 { pt3dadd( 40.9602, -43.1363, -87.6218, 0.28 ) }
    dend_15 { pt3dadd( 41.4632, -43.8615, -88.0893, 0.55 ) }
    dend_15 { pt3dadd( 42.9839, -46.1593, -89.6644, 0.28 ) }
    dend_15 { pt3dadd( 43.3043, -46.701, -89.9867, 0.55 ) }
    dend_15 { pt3dadd( 44.0974, -48.136, -90.8245, 0.28 ) }
    dend_15 { pt3dadd( 44.5668, -48.9655, -91.4014, 0.55 ) }
    dend_15 { pt3dadd( 45.0601, -49.7762, -92.041, 0.55 ) }
    dend_15 { pt3dadd( 46.0453, -51.3939, -93.3034, 0.28 ) }
    dend_15 { pt3dadd( 46.7614, -52.385, -94.2161, 0.55 ) }
    dend_15 { pt3dadd( 49.1123, -54.8096, -97.1461, 0.28 ) }
    dend_15 { pt3dadd( 50.0386, -55.5801, -98.33, 0.55 ) }
    dend_15 { pt3dadd( 50.6914, -56.0639, -99.1316, 0.28 ) }
    dend_15 { pt3dadd( 51.367, -56.4989, -99.93, 0.55 ) }
    dend_15 { pt3dadd( 53.4942, -57.6983, -102.342, 0.28 ) }
    dend_15 { pt3dadd( 55.1225, -58.6327, -104.118, 0.55 ) }
    dend_15 { pt3dadd( 57.9679, -60.4418, -106.914, 0.28 ) }
    dend_15 { pt3dadd( 58.8664, -61.0038, -107.788, 0.55 ) }
    dend_15 { pt3dadd( 60.6397, -62.0332, -109.301, 0.28 ) }
    dend_15 { pt3dadd( 61.2442, -62.3711, -109.753, 0.55 ) }
    dend_15 { pt3dadd( 62.2677, -62.914, -110.302, 0.28 ) }
    dend_15 { pt3dadd( 63.1865, -63.3708, -110.706, 0.55 ) }
    dend_15 { pt3dadd( 65.7237, -64.4949, -111.541, 0.28 ) }
    dend_15 { pt3dadd( 68.6452, -65.6753, -112.449, 0.28 ) }
    dend_15 { pt3dadd( 70.14, -66.2137, -112.804, 0.28 ) }
    dend_15 { pt3dadd( 71.6371, -66.7107, -113.249, 0.55 ) }
    dend_15 { pt3dadd( 73.8266, -67.3433, -113.906, 0.28 ) }
    dend_15 { pt3dadd( 74.8037, -67.6117, -114.177, 0.83 ) }
    dend_15 { pt3dadd( 77.3067, -68.3289, -114.777, 0.28 ) }
    dend_15 { pt3dadd( 78.3845, -68.6611, -115.096, 0.55 ) }
    dend_15 { pt3dadd( 83.0883, -70.2819, -116.723, 0.28 ) }
    dend_15 { pt3dadd( 85.4128, -71.1133, -117.723, 0.28 ) }
    dend_15 { pt3dadd( 87.0856, -71.7149, -118.561, 0.55 ) }
    dend_15 { pt3dadd( 88.0405, -72.0822, -119.16, 0.55 ) }
    dend_15 { pt3dadd( 90.5344, -73.086, -120.954, 0.28 ) }
    dend_15 { pt3dadd( 92.8416, -74.1272, -122.733, 0.55 ) }
    dend_15 { pt3dadd( 94.9399, -75.1413, -124.355, 0.28 ) }
    dend_15 { pt3dadd( 96.814, -76.0837, -125.928, 0.55 ) }
    dend_15 { pt3dadd( 98.3664, -76.8439, -127.218, 0.28 ) }
    dend_15 { pt3dadd( 99.6574, -77.3745, -128.198, 0.55 ) }
    dend_15 { pt3dadd( 102.814, -78.48, -130.41, 0.28 ) }
    dend_15 { pt3dadd( 104.429, -79.0395, -131.463, 0.55 ) }
    dend_15 { pt3dadd( 106.874, -79.8884, -132.954, 0.28 ) }
    dend_15 { pt3dadd( 108.887, -80.5275, -134.125, 0.55 ) }
    dend_15 { pt3dadd( 113.606, -81.8215, -136.868, 0.28 ) }
    dend_15 { pt3dadd( 115.504, -82.2392, -138.112, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.28303, -132.902, 100.975, 0.55 ) }
    dend_9 { pt3dadd( -7.11327, -139.215, 104.09, 0.55 ) }
    dend_9 { pt3dadd( -6.43311, -146.039, 105.495, 0.55 ) }
    dend_9 { pt3dadd( -6.06685, -152.613, 107.93, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.28303, -132.902, 100.975, 0.55 ) }
    dend_8 { pt3dadd( -6.14554, -139.96, 106.94, 0.55 ) }
    dend_8 { pt3dadd( -6.66374, -146.177, 113.95, 0.55 ) }
    dend_8 { pt3dadd( -7.61034, -150.911, 122.107, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.4683, -132.534, 100.05, 0.55 ) }
    dend_6 { pt3dadd( -9.73716, -140.758, 105.615, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.4683, -132.534, 100.05, 0.55 ) }
    dend_5 { pt3dadd( -11.8521, -143.478, 106.742, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.89326, -109.309, 9.81011, 0.83 ) }
    dend_25 { pt3dadd( 6.88303, -113.325, 10.5575, 0.83 ) }
    dend_25 { pt3dadd( 7.86693, -116.699, 11.4589, 0.83 ) }
    dend_25 { pt3dadd( 8.84494, -120.054, 12.3549, 0.83 ) }
    dend_25 { pt3dadd( 9.77374, -123.239, 13.2059, 0.83 ) }
    dend_25 { pt3dadd( 11.205, -128.148, 14.5173, 0.83 ) }
    dend_25 { pt3dadd( 12.626, -133.022, 15.8192, 0.83 ) }
    dend_25 { pt3dadd( 13.8169, -136.232, 17.1344, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.89326, -109.309, 9.81011, 0.55 ) }
    dend_24 { pt3dadd( 7.87277, -112.054, 9.48377, 0.55 ) }
    dend_24 { pt3dadd( 9.30979, -114.209, 8.85826, 0.55 ) }
    dend_24 { pt3dadd( 10.2635, -115.808, 8.25298, 0.55 ) }
    dend_24 { pt3dadd( 11.0425, -117.687, 7.3687, 0.83 ) }
    dend_24 { pt3dadd( 11.7276, -119.829, 6.13487, 0.55 ) }
    dend_24 { pt3dadd( 12.3977, -121.924, 4.92802, 0.83 ) }
    dend_24 { pt3dadd( 12.9487, -124.201, 3.43645, 0.55 ) }
    dend_24 { pt3dadd( 13.2382, -125.528, 2.44852, 0.83 ) }
    dend_24 { pt3dadd( 13.9209, -129.827, -1.04274, 0.55 ) }
    dend_24 { pt3dadd( 14.1319, -133.206, -3.93294, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.18671, -89.2818, 38.261, 0.55 ) }
    dend_20 { pt3dadd( -6.07582, -95.9926, 43.8911, 0.55 ) }
    dend_20 { pt3dadd( -10.1264, -101.769, 49.939, 0.55 ) }
    dend_20 { pt3dadd( -14.6841, -106.67, 56.4655, 0.55 ) }
    dend_20 { pt3dadd( -19.9263, -110.483, 63.2782, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.18671, -89.2818, 38.261, 0.55 ) }
    dend_19 { pt3dadd( -4.98188, -97.3925, 46.6567, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.8169, -136.232, 17.1344, 0.55 ) }
    dend_27 { pt3dadd( 14.0463, -137.714, 17.5941, 0.55 ) }
    dend_27 { pt3dadd( 14.4109, -139.605, 18.2046, 0.55 ) }
    dend_27 { pt3dadd( 14.7513, -141.392, 18.7711, 0.55 ) }
    dend_27 { pt3dadd( 14.9704, -142.662, 19.1614, 0.55 ) }
    dend_27 { pt3dadd( 15.321, -144.931, 19.8349, 0.55 ) }
    dend_27 { pt3dadd( 16.3291, -151.325, 21.5264, 0.55 ) }
    dend_27 { pt3dadd( 16.6811, -153.506, 21.9866, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 16.9009, -155.049, 22.2337, 0.55 ) }
    dend_27 { pt3dadd( 17.1037, -156.823, 22.3732, 0.55 ) }
    dend_27 { pt3dadd( 17.1849, -158.202, 22.3746, 0.55 ) }
    dend_27 { pt3dadd( 17.4082, -161.439, 22.2092, 0.55 ) }
    dend_27 { pt3dadd( 17.4947, -163.893, 22.1178, 0.55 ) }
    dend_27 { pt3dadd( 17.6135, -165.502, 22.0841, 0.55 ) }
    dend_27 { pt3dadd( 18.0012, -169.661, 22.2062, 0.55 ) }
    dend_27 { pt3dadd( 18.2993, -172.448, 22.4144, 0.55 ) }
    dend_27 { pt3dadd( 18.7895, -176.027, 22.8686, 0.55 ) }
    dend_27 { pt3dadd( 19.5354, -180.069, 23.6607, 0.55 ) }
    dend_27 { pt3dadd( 20.2255, -182.761, 24.2963, 0.55 ) }
    dend_27 { pt3dadd( 20.6896, -184.351, 24.6958, 0.55 ) }
    dend_27 { pt3dadd( 21.0893, -185.817, 25.0723, 0.55 ) }
    dend_27 { pt3dadd( 21.5865, -187.679, 25.4502, 0.55 ) }
    dend_27 { pt3dadd( 22.5974, -192.189, 26.0921, 0.55 ) }
    dend_27 { pt3dadd( 23.0164, -193.942, 26.2519, 0.55 ) }
    dend_27 { pt3dadd( 23.4324, -195.892, 26.4379, 0.55 ) }
    dend_27 { pt3dadd( 24.0274, -198.821, 26.7135, 0.55 ) }
    dend_27 { pt3dadd( 24.3939, -201.066, 26.9927, 0.55 ) }
    dend_27 { pt3dadd( 24.6113, -203.194, 27.2866, 0.55 ) }
    dend_27 { pt3dadd( 24.7317, -205.219, 27.6077, 0.55 ) }
    dend_27 { pt3dadd( 24.8295, -207.192, 27.9639, 0.55 ) }
    dend_27 { pt3dadd( 24.9011, -208.597, 28.2001, 0.55 ) }
    dend_27 { pt3dadd( 24.9964, -210.903, 28.5032, 0.55 ) }
    dend_27 { pt3dadd( 24.9795, -213.684, 28.6811, 0.55 ) }
    dend_27 { pt3dadd( 24.9598, -215.043, 28.6541, 0.55 ) }
    dend_27 { pt3dadd( 24.9152, -216.244, 28.5381, 0.55 ) }
    dend_27 { pt3dadd( 24.8708, -218.523, 28.1451, 0.55 ) }
    dend_27 { pt3dadd( 24.8112, -219.971, 27.8642, 0.55 ) }
    dend_27 { pt3dadd( 24.7861, -221.751, 27.5732, 0.55 ) }
    dend_27 { pt3dadd( 24.7568, -222.994, 27.4613, 0.55 ) }
    dend_27 { pt3dadd( 24.6807, -226.217, 27.3168, 0.55 ) }
    dend_27 { pt3dadd( 24.6431, -228.615, 27.4005, 0.55 ) }
    dend_27 { pt3dadd( 24.6595, -232.302, 27.8503, 0.55 ) }
    dend_27 { pt3dadd( 24.8195, -234.669, 28.3351, 0.55 ) }
    dend_27 { pt3dadd( 25.0049, -237.147, 28.9314, 0.28 ) }
    dend_27 { pt3dadd( 25.0736, -238.139, 29.2222, 0.28 ) }
    dend_27 { pt3dadd( 25.3275, -240.53, 30.1477, 0.28 ) }
    dend_27 { pt3dadd( 25.6209, -242.726, 31.1853, 0.28 ) }
    dend_27 { pt3dadd( 26.4102, -245.62, 32.7325, 0.28 ) }
    dend_27 { pt3dadd( 28.2755, -252.291, 34.1654, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.8169, -136.232, 17.1344, 0.55 ) }
    dend_26 { pt3dadd( 15.1012, -136.67, 17.7992, 0.55 ) }
    dend_26 { pt3dadd( 17.6819, -137.789, 19.3696, 0.55 ) }
    dend_26 { pt3dadd( 19.8795, -138.892, 20.8283, 0.28 ) }
    dend_26 { pt3dadd( 22.214, -140.144, 22.4703, 0.55 ) }
    dend_26 { pt3dadd( 23.5592, -140.933, 23.6651, 0.28 ) }
    dend_26 { pt3dadd( 25.8135, -142.346, 25.9794, 0.55 ) }
    dend_26 { pt3dadd( 26.6484, -143.086, 27.2629, 0.28 ) }
    dend_26 { pt3dadd( 26.9242, -143.35, 27.7998, 0.28 ) }
    dend_26 { pt3dadd( 27.3989, -143.72, 28.733, 0.55 ) }
    dend_26 { pt3dadd( 29.3503, -144.919, 32.1433, 0.28 ) }
    dend_26 { pt3dadd( 30.204, -145.384, 33.5452, 0.55 ) }
    dend_26 { pt3dadd( 32.9775, -146.748, 37.3666, 0.28 ) }
    dend_26 { pt3dadd( 34.5501, -147.419, 39.2972, 0.28 ) }
    dend_26 { pt3dadd( 36.5749, -148.292, 41.5599, 0.55 ) }
    dend_26 { pt3dadd( 39.7262, -149.671, 44.6112, 0.28 ) }
    dend_26 { pt3dadd( 40.175, -149.856, 44.9709, 0.55 ) }
    dend_26 { pt3dadd( 42.4503, -150.767, 46.5763, 0.28 ) }
    dend_26 { pt3dadd( 42.666, -150.853, 46.6978, 0.55 ) }
    dend_26 { pt3dadd( 44.5439, -151.878, 47.8415, 0.28 ) }
    dend_26 { pt3dadd( 45.4159, -152.437, 48.4461, 0.55 ) }
    dend_26 { pt3dadd( 52.5692, -156.55, 53.4661, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -19.9263, -110.483, 63.2782, 0.55 ) }
    dend_22 { pt3dadd( -22.1296, -114.397, 72.5938, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -19.9263, -110.483, 63.2782, 0.55 ) }
    dend_21 { pt3dadd( -24.4139, -116.192, 68.217, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 13
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_27 nseg = 5
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_BP_5e5c39b863_0_0


